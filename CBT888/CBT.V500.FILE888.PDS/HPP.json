{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "ESA", "INMTNODE": "JES2P390", "INMTUID": "ESA", "INMFTIME": "20130207124355000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 5766758, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 255, "INMBLKSZ": 32760, "INMRECFM": "VB", "INMDIR": 1, "INMDSNAM": "ESA.PRJ.CBTEXP.HPP", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 5766758, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 5766758, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"ESA.PRJ.CBTEXP.HPP": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32760, "DS1LRECL": 255, "DS1RECFM": "VB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"ADSRCMPS": {"ttr": 8527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct adsrcmps \u00e4\n  unsigned char  adsrc\u00c44\u00dc;     /* Identifier for section 2.1                */\n  unsigned char  adsrcrl\u00c42\u00dc;   /* Architectural level of the symptom record */\n  unsigned char  adsrcid\u00c49\u00dc;   /* Component identifier                      */\n  unsigned char  adsrflc;      /* Component status flags                    */\n  unsigned char  adsrlvl\u00c44\u00dc;   /* Component level                           */\n  unsigned char  adsrptf\u00c48\u00dc;   /* PTF level                                 */\n  unsigned char  adsrpid\u00c48\u00dc;   /* PID level                                 */\n  unsigned char  adsrpidl\u00c48\u00dc;  /* PID release level                         */\n  unsigned char  adsrcdsc\u00c432\u00dc; /* Text description                          */\n  unsigned char  adsrret\u00c44\u00dc;   /* Return code                               */\n  unsigned char  adsrrea\u00c44\u00dc;   /* Reason code                               */\n  unsigned char  adsrprid\u00c48\u00dc;  /* Problem identifier                        */\n  unsigned char  adsrssid\u00c48\u00dc;  /* Subsystem identifier                      */\n  \u00fc;\n\n/* Values for field \"adsrflc\" */\n#define adsrnibm 0x80 /* Non-IBM program */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "APPL": {"ttr": 8695, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct appl \u00e4\n  int            applrcid : 24;     /* RECORD ID                           */\n  short int      appllgth;          /* record length                       */\n  int            appltype : 24;     /* record type                         */\n  unsigned char  _filler1\u00c45\u00dc;       /* reserved                            */\n  union \u00e4\n    unsigned char  _appldt;   /* data type */\n    unsigned char  _ftcdatyp; /* DATA TYPE */\n    \u00fc _appl_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _applpprof\u00c48\u00dc; /* data profile name or BLANKS */\n      unsigned char  _applpmem\u00c432\u00dc; /* member name ?               */\n      unsigned char  _applpmex\u00c48\u00dc;  /* member name extension       */\n      unsigned char  _applpdsn\u00c464\u00dc; /* dataset name                */\n      \u00fc applp;\n    struct \u00e4\n      unsigned char  _ftc1liba\u00c48\u00dc;  /* - LIBRARY SELECTION (AUTOMATIC) */\n      unsigned char  _ftc1memn\u00c432\u00dc; /* - MEMBERNAME                    */\n      unsigned char  _ftc1extn\u00c48\u00dc;  /* - EXTENSION                     */\n      unsigned char  _ftc1libm\u00c464\u00dc; /* - LIBRARY SELECTION (MANUAL)    */\n      \u00fc ftc1;\n    \u00fc _appl_union2;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _apploprof\u00c48\u00dc; /* data profile name or BLANKS */\n      unsigned char  _applomem\u00c432\u00dc; /* member name ?               */\n      unsigned char  _applomex\u00c48\u00dc;  /* member name extension       */\n      unsigned char  _applodsn\u00c464\u00dc; /* dataset name                */\n      \u00fc applo;\n    struct \u00e4\n      unsigned char  _ftc2liba\u00c48\u00dc;  /* - LIBRARY SELECTION (AUTOMATIC) */\n      unsigned char  _ftc2memn\u00c432\u00dc; /* - MEMBERNAME                    */\n      unsigned char  _ftc2extn\u00c48\u00dc;  /* - EXTENSION                     */\n      unsigned char  _ftc2libm\u00c464\u00dc; /* - LIBRARY SELECTION (MANUAL)    */\n      \u00fc ftc2;\n    \u00fc _appl_union3;\n  union \u00e4\n    unsigned char  _applrq_recfm; /* - REQUESTED RECORD FORMAT */\n    unsigned char  _ftc2rq_recfm; /* - REQUESTED RECORD FORMAT */\n    \u00fc _appl_union4;\n  union \u00e4\n    unsigned char  _applrq_lrecl\u00c42\u00dc; /* - MAX RECORD LENGTH IN THE DATASET */\n    unsigned char  _ftc2rq_lrecl\u00c42\u00dc; /* - MAX RECORD LENGTH IN THE DATASET */\n    \u00fc _appl_union5;\n  union \u00e4\n    unsigned char  _appl_ltype; /* lock type */\n    unsigned char  _ftc_ltype;  /* lock type */\n    \u00fc _appl_union6;\n  union \u00e4\n    unsigned char  _appl_lforce; /* force lock change */\n    unsigned char  _ftc_lforce;  /* force lock change */\n    \u00fc _appl_union7;\n  union \u00e4\n    unsigned char  _appl_psys\u00c48\u00dc; /* partner(only in lock record) */\n    unsigned char  _ftc_psys\u00c48\u00dc;  /* partner(only in lock record) */\n    \u00fc _appl_union8;\n  union \u00e4\n    unsigned char  _appl_time\u00c48\u00dc; /* update time(only in lock recodr) */\n    unsigned char  _ftc_time\u00c48\u00dc;  /* update time(only in lock recodr) */\n    \u00fc _appl_union9;\n  unsigned char  appl_defpl\u00c42\u00dc;     /* default profile length              */\n  unsigned char  appl_defp\u00c4255\u00dc;    /* default profile max text            */\n  unsigned char  appl_seg;          /* variable segment block              */\n  unsigned char  applkey\u00c452\u00dc;       /* lock key                            */\n  unsigned char  _filler2\u00c43\u00dc;\n  unsigned char  segmet_length;     /* segment length or zero for the last */\n  unsigned char  segment_type;      /* type                                */\n  unsigned char  segment_flag;      /* flag byte                           */\n  unsigned char  segment_data\u00c4250\u00dc; /* variable data                       */\n  \u00fc;\n\n#define appldt       _appl_union1._appldt\n#define ftcdatyp     _appl_union1._ftcdatyp\n#define applpprof    _appl_union2.applp._applpprof\n#define applpmem     _appl_union2.applp._applpmem\n#define applpmex     _appl_union2.applp._applpmex\n#define applpdsn     _appl_union2.applp._applpdsn\n#define ftc1liba     _appl_union2.ftc1._ftc1liba\n#define ftc1memn     _appl_union2.ftc1._ftc1memn\n#define ftc1extn     _appl_union2.ftc1._ftc1extn\n#define ftc1libm     _appl_union2.ftc1._ftc1libm\n#define apploprof    _appl_union3.applo._apploprof\n#define applomem     _appl_union3.applo._applomem\n#define applomex     _appl_union3.applo._applomex\n#define applodsn     _appl_union3.applo._applodsn\n#define ftc2liba     _appl_union3.ftc2._ftc2liba\n#define ftc2memn     _appl_union3.ftc2._ftc2memn\n#define ftc2extn     _appl_union3.ftc2._ftc2extn\n#define ftc2libm     _appl_union3.ftc2._ftc2libm\n#define applrq_recfm _appl_union4._applrq_recfm\n#define ftc2rq_recfm _appl_union4._ftc2rq_recfm\n#define applrq_lrecl _appl_union5._applrq_lrecl\n#define ftc2rq_lrecl _appl_union5._ftc2rq_lrecl\n#define appl_ltype   _appl_union6._appl_ltype\n#define ftc_ltype    _appl_union6._ftc_ltype\n#define appl_lforce  _appl_union7._appl_lforce\n#define ftc_lforce   _appl_union7._ftc_lforce\n#define appl_psys    _appl_union8._appl_psys\n#define ftc_psys     _appl_union8._ftc_psys\n#define appl_time    _appl_union9._appl_time\n#define ftc_time     _appl_union9._ftc_time\n\n/* Values for field \"applrq_recfm\" */\n#define applrq_recfm_f        'F'  /* - FIX FORMAT          */\n#define applrq_recfm_v        'V'  /* - VARIABLE FORMAT     */\n#define applrq_recfm_u        'U'  /* - UNDEFINED           */\n#define applrq_recfm_d        'D'  /* - USER DEFAULT        */\n\n/* Values for field \"ftc2rq_recfm\" */\n#define ftc2rq_recfm_f        'F'  /* - FIX FORMAT          */\n#define ftc2rq_recfm_v        'V'  /* - VARIABLE FORMAT     */\n#define ftc2rq_recfm_u        'U'  /* - UNDEFINED           */\n#define ftc2rq_recfm_d        'D'  /* - USER DEFAULT        */\n\n/* Values for field \"appl_ltype\" */\n#define appl_ltype_e          'E'  /* - exclusive ENQ       */\n#define appl_ltype_s          'S'  /* - shared    END       */\n#define appl_ltype_d          'D'  /* - DEQUEUED            */\n#define appl_ltype_u          'U'  /* - undefined           */\n\n/* Values for field \"ftc_ltype\" */\n#define ftc_ltype_e           'E'  /* - exclusive ENQ       */\n#define ftc_ltype_s           'S'  /* - shared    END       */\n#define ftc_ltype_d           'D'  /* - DEQUEUED            */\n#define ftc_ltype_u           'U'  /* - undefined           */\n\n/* Values for field \"appl_lforce\" */\n#define appl_lforce_f         'F'  /* force flag            */\n\n/* Values for field \"ftc_lforce\" */\n#define ftc_lfrce_f           'F'  /* force flag          - */\n\n/* Values for field \"segment_flag\" */\n#define segment_flag_sendback 1    /* send back the segment */\n#define segment_flag_comeback 2    /* comming back          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ARCMCD": {"ttr": 8793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct arcmcd \u00e4\n  unsigned char  mck\u00c444\u00dc; /* MCK key */\n  unsigned char  mch\u00c420\u00dc; /* header  */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _mcdvsn\u00c46\u00dc;     /* vmig volume volser            */\n      short int      _mcdflgs;       /* flag bytes                    */\n      unsigned char  _mcdcompr;      /* % of saved space if compacted */\n      unsigned char  _mcdrv;         /* ver/rel/mod level             */\n      unsigned char  _mcdoptcd;      /* option code from VTOC         */\n      unsigned char  _filler1;       /* resrved                       */\n      int            _mcddlc;        /* creation date                 */\n      struct \u00e4\n        int            _mcdtlr; /* last used                      */\n        int            _mcddlr; /* date the dataset was last ref. */\n        \u00fc mcdtslr;\n      struct \u00e4\n        int            _mcdtlu; /* time the VSAM last updated */\n        int            _mcddlu; /* date VSAM last upadted     */\n        \u00fc mcdtslu;\n      struct \u00e4\n        int            _mcdtmig; /* time of the last migration */\n        int            _mcddmig; /* date of the last migration */\n        \u00fc mcdtsmig;\n      short int      _mcddsorg;      /* DSORG                         */\n      short int      _mcdbklsz;      /* block size                    */\n      unsigned char  _mcdkeyln;      /* key length                    */\n      unsigned char  _mcdrecfm;      /* RECFM                         */\n      unsigned char  _mcddsind;      /* dataset in from VTOC          */\n      unsigned char  _mcdhid;        /* HOST id                       */\n      int            _mcdsize;       /* allocated size in tracks      */\n      int            _mcdsizeb;      /* allocated size bytes or Kb    */\n      int            _mcdcsz;        /* 2K block size on mig volume   */\n      short int      _mcdnmig;       /* num of times migrated         */\n      short int      _mcddays;       /* num of days before mig        */\n      unsigned char  _mcdfrvsn\u00c46\u00dc;   /* primary vol ser before mig    */\n      struct \u00e4\n        unsigned char  _mcdflag1; /* flag byte           */\n        unsigned char  _mcdmcl43; /* 43 char             */\n        int            _mcdctid;  /* compaction table id */\n        \u00fc mcdfovsn;\n      int            _mcducbty;      /* primary vol dev type          */\n      struct \u00e4\n        int            _mcdtres; /* date dataset recalled */\n        int            _mcddres; /* date dataset recalled */\n        \u00fc mcdtsres;\n      struct \u00e4\n        unsigned char  _filler2;  /* reserved  */\n        unsigned char  _mcdflag2; /* flag byte */\n        unsigned char  _mcdflag3; /* flag byte */\n        unsigned char  _filler3;  /* reserved  */\n        \u00fc mcdmdevt;\n      unsigned char  _mcdjdays;      /* delay to mig                  */\n      int            _mcdjdate : 24; /* last date of delay            */\n      unsigned int   : 0;\n      int            _mcdjvexd : 24; /* last date HSM will hold vol   */\n      unsigned char  _mcdpdep;       /* volume selected               */\n      unsigned char  _mcdjct;        /* number of eligible volumes    */\n      unsigned char  _mcdjvols\u00c450\u00dc;  /* rest 4 times                  */\n      unsigned char  _filler4\u00c4253\u00dc;\n      \u00fc mcd;\n    struct \u00e4\n      unsigned char  _filler5\u00c4101\u00dc;\n      unsigned char  _mcdjvsn\u00c46\u00dc;        /* volser                        */\n      int            _mcdjdevt;          /* device type                   */\n      unsigned char  _filler6\u00c440\u00dc;\n      unsigned char  _mcdrecal;          /* recall flags                  */\n      unsigned char  _mcdexpdt\u00c44\u00dc;       /* exp date at migration         */\n      unsigned char  _mcdmcanm\u00c444\u00dc;      /* name of the mig copy          */\n      unsigned char  _mcdvspwd\u00c48\u00dc;       /* VSAM password                 */\n      int            _mcdfbid;           /* tape pos info                 */\n      short int      _mcdnvsn;           /* additional tape volumes       */\n      short int      _mcdvsno;           /* offset from MCDVSN to MCDAVSN */\n      int            _mcdtpblk;          /* total 16k blocks              */\n      int            _mcdtern;           /* TTOC entry                    */\n      short int      _mcdvolsq;          /* vol seq                       */\n      unsigned char  _mcdflgs2;          /* flag byte                     */\n      unsigned char  _filler7;           /* reserved                      */\n      struct \u00e4\n        short int      _mcddclen;     /* data class length    */\n        unsigned char  _mcddcnam\u00c430\u00dc; /* data class name      */\n        short int      _mcdsclen;     /* storage class length */\n        unsigned char  _mcdscnam\u00c430\u00dc; /* storage class        */\n        short int      _mcdmclen;     /* mamg class length    */\n        unsigned char  _mdcmcnam\u00c430\u00dc; /* mgmt class name      */\n        \u00fc mcdsmswa;\n      unsigned char  _mdcdlbu\u00c48\u00dc;        /* last backup time stamp        */\n      unsigned char  _mdcrecor;          /* VSAM dataset org              */\n      unsigned char  _mdcsmsfg;          /* SMS related flags             */\n      unsigned char  _mcdrownr\u00c416\u00dc;      /* resource owner name           */\n      unsigned char  _mcdrdata\u00c48\u00dc;       /* recovery data                 */\n      struct \u00e4\n        unsigned char  _mcdscal1;      /* sec alloc flag1 */\n        int            _mcdscal3 : 24; /* alloc quantity  */\n        \u00fc mcdscalo;\n      unsigned char  _mcdjdate_cc;       /* JES3                          */\n      unsigned char  _mcdjvexd_cc;       /* JES3                          */\n      int            _mcd_user_datasize; /* uncompressed size             */\n      int            _mcd_comp_datasize; /* compressed size               */\n      int            _mcd_vrm;           /* DFSMShsm version/rel          */\n      int            _mcd_cln_date;      /* date MCD deleted              */\n      int            _filler8\u00c46\u00dc;        /* reserved                      */\n      \u00fc _arcmcd_struct1;\n    \u00fc _arcmcd_union1;\n  \u00fc;\n\n#define mcdvsn            _arcmcd_union1.mcd._mcdvsn\n#define mcdflgs           _arcmcd_union1.mcd._mcdflgs\n#define mcdcompr          _arcmcd_union1.mcd._mcdcompr\n#define mcdrv             _arcmcd_union1.mcd._mcdrv\n#define mcdoptcd          _arcmcd_union1.mcd._mcdoptcd\n#define mcddlc            _arcmcd_union1.mcd._mcddlc\n#define mcdtlr            _arcmcd_union1.mcd.mcdtslr._mcdtlr\n#define mcddlr            _arcmcd_union1.mcd.mcdtslr._mcddlr\n#define mcdtlu            _arcmcd_union1.mcd.mcdtslu._mcdtlu\n#define mcddlu            _arcmcd_union1.mcd.mcdtslu._mcddlu\n#define mcdtmig           _arcmcd_union1.mcd.mcdtsmig._mcdtmig\n#define mcddmig           _arcmcd_union1.mcd.mcdtsmig._mcddmig\n#define mcddsorg          _arcmcd_union1.mcd._mcddsorg\n#define mcdbklsz          _arcmcd_union1.mcd._mcdbklsz\n#define mcdkeyln          _arcmcd_union1.mcd._mcdkeyln\n#define mcdrecfm          _arcmcd_union1.mcd._mcdrecfm\n#define mcddsind          _arcmcd_union1.mcd._mcddsind\n#define mcdhid            _arcmcd_union1.mcd._mcdhid\n#define mcdsize           _arcmcd_union1.mcd._mcdsize\n#define mcdsizeb          _arcmcd_union1.mcd._mcdsizeb\n#define mcdcsz            _arcmcd_union1.mcd._mcdcsz\n#define mcdnmig           _arcmcd_union1.mcd._mcdnmig\n#define mcddays           _arcmcd_union1.mcd._mcddays\n#define mcdfrvsn          _arcmcd_union1.mcd._mcdfrvsn\n#define mcdflag1          _arcmcd_union1.mcd.mcdfovsn._mcdflag1\n#define mcdmcl43          _arcmcd_union1.mcd.mcdfovsn._mcdmcl43\n#define mcdctid           _arcmcd_union1.mcd.mcdfovsn._mcdctid\n#define mcducbty          _arcmcd_union1.mcd._mcducbty\n#define mcdtres           _arcmcd_union1.mcd.mcdtsres._mcdtres\n#define mcddres           _arcmcd_union1.mcd.mcdtsres._mcddres\n#define mcdflag2          _arcmcd_union1.mcd.mcdmdevt._mcdflag2\n#define mcdflag3          _arcmcd_union1.mcd.mcdmdevt._mcdflag3\n#define mcdjdays          _arcmcd_union1.mcd._mcdjdays\n#define mcdjdate          _arcmcd_union1.mcd._mcdjdate\n#define mcdjvexd          _arcmcd_union1.mcd._mcdjvexd\n#define mcdpdep           _arcmcd_union1.mcd._mcdpdep\n#define mcdjct            _arcmcd_union1.mcd._mcdjct\n#define mcdjvols          _arcmcd_union1.mcd._mcdjvols\n#define mcdjvsn           _arcmcd_union1._arcmcd_struct1._mcdjvsn\n#define mcdjdevt          _arcmcd_union1._arcmcd_struct1._mcdjdevt\n#define mcdrecal          _arcmcd_union1._arcmcd_struct1._mcdrecal\n#define mcdexpdt          _arcmcd_union1._arcmcd_struct1._mcdexpdt\n#define mcdmcanm          _arcmcd_union1._arcmcd_struct1._mcdmcanm\n#define mcdvspwd          _arcmcd_union1._arcmcd_struct1._mcdvspwd\n#define mcdfbid           _arcmcd_union1._arcmcd_struct1._mcdfbid\n#define mcdnvsn           _arcmcd_union1._arcmcd_struct1._mcdnvsn\n#define mcdvsno           _arcmcd_union1._arcmcd_struct1._mcdvsno\n#define mcdtpblk          _arcmcd_union1._arcmcd_struct1._mcdtpblk\n#define mcdtern           _arcmcd_union1._arcmcd_struct1._mcdtern\n#define mcdvolsq          _arcmcd_union1._arcmcd_struct1._mcdvolsq\n#define mcdflgs2          _arcmcd_union1._arcmcd_struct1._mcdflgs2\n#define mcddclen          _arcmcd_union1._arcmcd_struct1.mcdsmswa._mcddclen\n#define mcddcnam          _arcmcd_union1._arcmcd_struct1.mcdsmswa._mcddcnam\n#define mcdsclen          _arcmcd_union1._arcmcd_struct1.mcdsmswa._mcdsclen\n#define mcdscnam          _arcmcd_union1._arcmcd_struct1.mcdsmswa._mcdscnam\n#define mcdmclen          _arcmcd_union1._arcmcd_struct1.mcdsmswa._mcdmclen\n#define mdcmcnam          _arcmcd_union1._arcmcd_struct1.mcdsmswa._mdcmcnam\n#define mdcdlbu           _arcmcd_union1._arcmcd_struct1._mdcdlbu\n#define mdcrecor          _arcmcd_union1._arcmcd_struct1._mdcrecor\n#define mdcsmsfg          _arcmcd_union1._arcmcd_struct1._mdcsmsfg\n#define mcdrownr          _arcmcd_union1._arcmcd_struct1._mcdrownr\n#define mcdrdata          _arcmcd_union1._arcmcd_struct1._mcdrdata\n#define mcdscal1          _arcmcd_union1._arcmcd_struct1.mcdscalo._mcdscal1\n#define mcdscal3          _arcmcd_union1._arcmcd_struct1.mcdscalo._mcdscal3\n#define mcdjdate_cc       _arcmcd_union1._arcmcd_struct1._mcdjdate_cc\n#define mcdjvexd_cc       _arcmcd_union1._arcmcd_struct1._mcdjvexd_cc\n#define mcd_user_datasize _arcmcd_union1._arcmcd_struct1._mcd_user_datasize\n#define mcd_comp_datasize _arcmcd_union1._arcmcd_struct1._mcd_comp_datasize\n#define mcd_vrm           _arcmcd_union1._arcmcd_struct1._mcd_vrm\n#define mcd_cln_date      _arcmcd_union1._arcmcd_struct1._mcd_cln_date\n\n/* Values for field \"mcdflgs\" */\n#define mcdfasn  0x8000 /* valid migrated dataset         */\n#define mcdfmig  0x4000 /* to be migrated                 */\n#define mcdfnomg 0x2000 /* prevented from mig.            */\n#define mcdfdel  0x1000 /* delete                         */\n#define mcdfsdp  0x800  /* VSAM SDSP                      */\n#define mcdml2   0x400  /* on ML2                         */\n#define mcdfnscr 0x200  /* no yet scratched               */\n#define mcdfjes3 0x100  /* jes3                           */\n#define mcdfmco  0x80   /* MCO record exists              */\n#define mcdfmigp 0x40   /* VSAM mig in progress           */\n#define mcdnoupd 0x20   /* discrate RACF prof not updated */\n#define mcdracnd 0x10   /* racf indicated                 */\n#define mcdfeos  0x08   /* erease attrib spec             */\n#define mcdfsmvl 0x04   /* inavlid space mgmt flag        */\n#define mcdfdumd 0x02   /* dummy MCD record               */\n#define mcdfr3   0x01   /* HSM rel 3                      */\n\n/* Values for field \"mcdoptcd\" */\n#define mcdicf   0x80   /* VSAM in ICF catalog            */\n\n/* Values for field \"mcddsorg\" */\n#define mcdfpsds 0x400  /* PS dataset                     */\n#define mcdfvsds 0x08   /* VSAM dataset                   */\n\n/* Values for field \"mcdrecfm\" */\n#define mcdrftyp 0xC0   /* fix or V or U                  */\n#define mcdrfto  0x20   /* track overflow                 */\n\n/* Values for field \"mcddsind\" */\n#define mcdflstv 0x80   /* last on volume                 */\n#define mcdfracf 0x40   /* RACF                           */\n#define mcdfscty 0x10   /* password protected             */\n#define mcdfwsec 0x04   /* write password                 */\n#define mcdfchng 0x02   /* change indicator               */\n\n/* Values for field \"mcdflag1\" */\n#define mcdfmcl  0x80   /* MCL record exits               */\n#define mcdfnod  0x40   /* MCV record ineligible          */\n#define mcdfcmcl 0x20   /* MCL record created at mig      */\n#define mcdfbuwm 0x10   /* backed up while mig            */\n#define mcdfpdse 0x08   /* PDSE                           */\n#define mcdfdss  0x02   /* DSS datamover used             */\n#define mcddsrnm 0x01   /* renamed by ARECOVER            */\n\n/* Values for field \"mcdflag2\" */\n#define mcdfnvrt 0x08   /* virtual volume                 */\n\n/* Values for field \"mcdflag3\" */\n#define mcdtpdev 0x80   /* tape dev                       */\n#define mcdfmvda 0x20   /* DASD dev                       */\n\n/* Values for field \"mcdrecal\" */\n#define mcdfdba  0x80   /* MIGRATE techinque              */\n#define mcdfrbu  0x40   /* DELETEIFBACKUP                 */\n#define mcdfbdcs 0x20   /* device category spec           */\n#define mcdfbdct 0x10   /* tape category                  */\n#define mcdfam   0x08   /* auto space mgmt                */\n#define mcdfab   0x04   /* auto backup on same host       */\n\n/* Values for field \"mcdflgs2\" */\n#define mcdfsize 0x80   /* size in Kbytes                 */\n#define mcdfstrp 0x40   /* extended format                */\n#define mcdfpdsx 0x20   /* HFS dataset                    */\n\n/* Values for field \"mdcsmsfg\" */\n#define mdcfsms  0x80   /* SMS managed                    */\n#define mdcfgdg  0x40   /* GDG dataset                    */\n#define mdcfrog  0x20   /* ROFF GDG                       */\n#define mdckeyrg 0x10   /* keyrange dataset               */\n#define mcdfmvol 0x08   /* multivolume                    */\n#define mcdfrblk 0x04   /* reblock                        */\n#define mcdfcomp 0x02   /* compressed format              */\n#define mcdf_awr 0x01   /* MCD updated                    */\n\n/* Values for field \"mcdscal1\" */\n#define mcdalcyl 0x80   /* CYl request                    */\n#define mcdaltrk 0x40   /* track                          */\n#define mcdalblk 0x20   /* block request                  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ARCMCK": {"ttr": 8795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct arcmck \u00e4\n  unsigned char  mcktype;     /* entry type                   */\n  unsigned char  mckkey2\u00c443\u00dc; /* remainder of the control key */\n  struct \u00e4\n    unsigned char  _mchlen\u00c42\u00dc;  /* total length of the record */\n    unsigned char  _mchtype;    /* entry type                 */\n    unsigned char  _filler1;    /* reserved                   */\n    unsigned char  _mchtslu\u00c48\u00dc; /* last update time stamp     */\n    unsigned char  _mchtscr\u00c48\u00dc; /* creation time stamp        */\n    \u00fc mckhdr;\n  \u00fc;\n\n#define mchlen   mckhdr._mchlen\n#define mchtype  mckhdr._mchtype\n#define mchtslu  mckhdr._mchtslu\n#define mchtscr  mckhdr._mchtscr\n\n/* Values for field \"mcktype\" */\n#define mcktype_code_a 'A'  /* record a */\n#define mcktype_code_b 'B'  /* record b */\n#define mcktype_code_c 'C'  /* record c */\n#define mcktype_code_d 'D'  /* record d */\n#define mcktype_code_u 0x01 /* record U */\n#define mcktype_code_1 0x02 /* record 1 */\n#define mcktype_code_v 0x04 /* record v */\n#define mcktype_code_n 0x07 /* record n */\n#define mcktype_code_s 0x10 /* record s */\n#define mcktype_code_o 0x12 /* record o */\n#define mcktype_code_y 0x21 /* record y */\n#define mcktype_code_w 0x22 /* record w */\n#define mcktype_code_j 0x25 /* record j */\n#define mcktype_code_m 0x26 /* record m */\n#define mcktype_code_l 0x27 /* record l */\n#define mcktype_code_p 0x28 /* record p */\n#define mcktype_code_g 0x29 /* record g */\n#define mcktype_code_q 0x2A /* record q */\n#define mcktype_code_x 0x2C /* record x */\n#define mcktype_code_i 0x2D /* record i */\n#define mcktype_code_f 0x2E /* record f */\n#define mcktype_code_h 0x2F /* record h */\n#define mcktype_code_z 0x30 /* record r */\n#define mcktype_code_t 0x32 /* record t */\n#define mcktype_code_e 0x33 /* record e */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "AREN": {"ttr": 8291, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* dummy */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMAUTH": {"ttr": 7981, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct asmauth \u00e4\n  void          *asm_save\u00c418\u00dc;            /* save in asm                          */\n  void          *asm_mvs;                 /* mvs object pointer                   */\n  void          *asm_baseregs\u00c44\u00dc;         /* base regs                            */\n  unsigned char  asm_function_code;       /* function code                        */\n  unsigned char  _filler1\u00c43\u00dc;\n  void          *asm_crab;                /* crab pointer                         */\n  void          *asm_rc;                  /* function return                      */\n  void          *asm_reason;              /* function reason code                 */\n  void          *asm_parms\u00c48\u00dc;            /* parameters                           */\n  void          *asm_calllist\u00c48\u00dc;         /* call parameters                      */\n  unsigned char  asm_work\u00c4128\u00dc;           /* work area                            */\n  unsigned char  _filler2\u00c48\u00dc;             /* PARAMETER LIST ID                    */\n  int            _filler3;                /* PARAMETER LIST LENGTH                */\n  unsigned char  _filler4;                /* PARAMETER LIST LEVEL                 */\n  unsigned char  _filler5\u00c43\u00dc;             /* RESERVED BYTES                       */\n  void          *_filler6;                /* INPUT PTR TO DCB OR DEB              */\n  unsigned char  _filler7;                /* CONCATENATION NUMBER                 */\n  unsigned char  _filler8;                /* ISIFLG1 BYTE                         */\n  unsigned char  _filler9\u00c46\u00dc;             /* OUTPUT AND RESERVED BYTES            */\n  void          *asm_load;                /* EPLOC OR DE PARAMETER       @G381P2A */\n  void          *_filler10;               /* DCB ADDRESS PARAMETER       @G381P2A */\n  unsigned char  _filler11;               /* PARAMETER LIST FORMAT NUMBER         */\n  unsigned char  _filler12;               /* RESERVED                    @G381P2A */\n  unsigned char  _filler13;               /* OPTIONS                              */\n  unsigned char  _filler14;               /* OPTIONS                    @LXC      */\n  void          *_filler15;               /* LOADPT PARAMETER  @G860P35           */\n  void          *asm_loadpt;              /* load point                           */\n  void          *asm_offset;              /* entry offset                         */\n  void          *asm_dcb;                 /* DCB address                          */\n  short int      asm_entry;               /* entry length                         */\n  unsigned char  asm_entry_name\u00c48\u00dc;       /* entry value                          */\n  unsigned char  _filler16\u00c42\u00dc;\n  void          *asm_countd;              /* Number of ESD records returned       */\n  void          *asm_countn;              /* Number of csect names                */\n  void          *asm_counte;              /* Number of csect names                */\n  void          *asm_cursord;             /* Cursor value for GETD call           */\n  void          *asm_cursorn;             /* Cursor value for GETN call           */\n  void          *asm_cursore;             /* Cursor value for GETN call           */\n  unsigned char  asm_dtoken\u00c48\u00dc;           /* Dialog Token                         */\n  void          *asm_retcode;             /* General return code                  */\n  void          *asm_rsncode;             /* General reason code                  */\n  short int      asm_module_l;            /* MODULE NAME LENGTH                   */\n  unsigned char  asm_module\u00c4128\u00dc;         /* module name                          */\n  short int      asm_csect_l;             /* csect Name length  for GETD/PUTD     */\n  unsigned char  asm_csect\u00c48\u00dc;            /* csect name for GETD/PUTD             */\n  void          *asm_tcount;              /* Total number of csects               */\n  unsigned char  asm_wktoken\u00c48\u00dc;          /* Workmod Token                        */\n  unsigned char  asm_iewflag;             /* Indicator for ENDDing the Dialog     */\n  unsigned char  asm_esd_iewflag;         /* Indicator for ESD free               */\n  unsigned char  _filler17\u00c42\u00dc;\n  void          *asm_iewbind_l\u00c432\u00dc;       /* IEWBIND list form                    */\n  unsigned char  asm_deserv\u00c48\u00dc;           /* PARAMETER LIST ID                    */\n  void          *_filler18;               /* PARAMETER LIST LENGTH                */\n  unsigned char  _filler19;               /* PARAMETER LIST LEVEL                 */\n  unsigned char  _filler20\u00c43\u00dc;            /* RESERVED                             */\n  unsigned char  _filler21;               /* FUNCTION CODE                        */\n  unsigned char  _filler22\u00c47\u00dc;            /* RESERVED                             */\n  unsigned char  _filler23;               /* DESP FLAG1                           */\n  unsigned char  _filler24;\n  unsigned char  _filler25;               /* EXIT_SCOPE                           */\n  unsigned char  _filler26;               /* CONCAT                               */\n  unsigned char  _filler27;               /* LIBTYPE                              */\n  unsigned char  _filler28;               /* GETTYPE                              */\n  unsigned char  _filler29;               /* RELTYPE                              */\n  unsigned char  _filler30;               /* EXIT_OPTION                          */\n  unsigned char  _filler31;               /* PUT OPTION                           */\n  unsigned char  _filler32;               /* SUBPOOL                              */\n  unsigned char  _filler33;               /* CONNIN                               */\n  unsigned char  _filler34;               /* RESERVED                             */\n  unsigned char  _filler35\u00c44\u00dc;            /* DCB                                  */\n  unsigned char  _filler36\u00c44\u00dc;            /* RESERVED                             */\n  unsigned char  _filler37\u00c44\u00dc;            /* CONNID                               */\n  unsigned char  _filler38\u00c44\u00dc;            /* AREAPT                               */\n  unsigned char  _filler39\u00c44\u00dc;            /* AREA                                 */\n  unsigned char  _filler40\u00c44\u00dc;            /* AREA2                                */\n  unsigned char  _filler41\u00c44\u00dc;            /* DELIST                               */\n  unsigned char  _filler42\u00c44\u00dc;            /* DELIS2                               */\n  unsigned char  _filler43\u00c44\u00dc;            /* ENTRYG                               */\n  unsigned char  _filler44\u00c44\u00dc;            /* RESERVED                             */\n  unsigned char  _filler45\u00c44\u00dc;            /* RESERVED                             */\n  unsigned char  _filler46\u00c44\u00dc;            /* NAMELI                               */\n  unsigned char  _filler47\u00c44\u00dc;            /* NAMEL2                               */\n  unsigned char  _filler48\u00c44\u00dc;            /* NAME                                 */\n  unsigned char  _filler49\u00c44\u00dc;            /* PDSDE                                */\n  unsigned char  _filler50\u00c44\u00dc;            /* EXIT_DST                             */\n  unsigned char  _filler51\u00c44\u00dc;            /* EXIT_PREV_DSTPTR                     */\n  struct \u00e4\n    short int      _asm_deserv_name_length;   /* name length */\n    unsigned char  _asm_deserv_name_name\u00c464\u00dc; /* name        */\n    \u00fc asm_deserv_name;\n  unsigned char  _filler52\u00c42\u00dc;\n  void          *asm_deserv_area;         /* area pointer                         */\n  void          *asm_deserv_main;         /* main entry address                   */\n  void          *asm_save_r3_r6\u00c44\u00dc;       /* save buff regs                       */\n  struct \u00e4\n    unsigned char  _asm_getall_ddname\u00c48\u00dc; /* dd name */\n    \u00fc asm_getall;\n  unsigned char  asm_getall_dcbflag;      /* if on, leave the DCB open            */\n  unsigned char  asm_getall_module\u00c48\u00dc;    /* load module name                     */\n  unsigned char  _filler53\u00c43\u00dc;\n  void          *asm_getall_entry;        /* entry point                          */\n  void          *asm_getall_length;       /* module length                        */\n  void          *asm_getall_end;          /* end of module +1                     */\n  void          *asm_getall_start;        /* actual start                         */\n  unsigned char  asm_getall_string\u00c44\u00dc;    /* string search for                    */\n  struct \u00e4\n    void          *_asm_bsam_storage; /* allocated storage */\n    void          *_asm_bsam_length;  /* length            */\n    \u00fc asm_bsam;\n  struct \u00e4\n    unsigned char  _filler54;       /* OPTION BYTE                 */\n    int            _filler55 : 24;  /* RESERVED               @L1A */\n    \u00fc asm_bsam_openl;\n  void          *_filler56;               /* DCB ADDRESS            @L1A          */\n  unsigned char  asm_bsam_dcbe\u00c4100\u00dc;      /* DCBE                                 */\n  void          *asm_bsam_r15;            /* FIND rc 15                           */\n  void          *asm_bsam_r0;             /* FIND rc 0                            */\n  unsigned char  asm_bsam_err\u00c48\u00dc;         /* error in function                    */\n  unsigned char  _filler57;\n  unsigned char  asm_bsam_member\u00c48\u00dc;      /* member name                          */\n  unsigned char  _filler58;\n  unsigned char  asm_bsam_eof;            /* EOF flag                             */\n  unsigned char  _filler59;\n  unsigned char  asm_bsam_buffer;         /* buffer                               */\n  unsigned char  _filler60;\n  \u00fc;\n\n#define asm_deserv_name_length asm_deserv_name._asm_deserv_name_length\n#define asm_deserv_name_name   asm_deserv_name._asm_deserv_name_name\n#define asm_getall_ddname      asm_getall._asm_getall_ddname\n#define asm_bsam_storage       asm_bsam._asm_bsam_storage\n#define asm_bsam_length        asm_bsam._asm_bsam_length\n\n/* Values for field \"asm_bsam_buffer\" */\n#define asm_length                  0x8430 /* dsect length */\n#define asm_function_code_bsamopen  4      /* open update  */\n#define asm_function_code_bsamopeni 5      /* open input   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ASMIF": {"ttr": 8791, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct asmdsect \u00e4\n  void          *asm_save\u00c418\u00dc;                   /* save in asm                       */\n  void          *asm_mvs;                        /* mvs object pointer                */\n  void          *asm_baseregs\u00c44\u00dc;                /* base regs                         */\n  void          *asm_crab;                       /* crab pointer                      */\n  int            asm_rc;                         /* function return                   */\n  int            asm_reason;                     /* function reason code              */\n  void          *asm_ieantcr;                    /* ieantcr address                   */\n  void          *asm_ieantrt;                    /* ieantrt address                   */\n  void          *asm_ieantdl;                    /* ieantdl address                   */\n  void          *asm_timx\u00c416\u00dc;                   /* timer exit area                   */\n  void          *asm_timer_ecbp;                 /* timer ecb pointer                 */\n  void          *asm_event0_ecbp;                /* event0 ecb                        */\n  void          *asm_event1_ecbp;                /* event1 ecb                        */\n  void          *asm_event2_ecbp;                /* event2 ecb                        */\n  void          *asm_event3_ecbp;                /* event3 ecb                        */\n  void          *asm_timer_ecb;                  /* timer ecb                         */\n  unsigned char  asm_function_code;              /* function code                     */\n  unsigned char  asm_key;                        /* psw key save                      */\n  unsigned char  asm_srb_mode;                   /* srb mode flag                     */\n  unsigned char  _filler1;\n  void          *asm_srb_save\u00c416\u00dc;               /* srb register save area            */\n  int            asm_srb_return;                 /* srb return address                */\n  void          *asm_parms\u00c48\u00dc;                   /* parameters                        */\n  void          *asm_calllist\u00c48\u00dc;                /* call parameters                   */\n  unsigned char  asm_work\u00c4128\u00dc;                  /* work area                         */\n  unsigned char  asm_jobname\u00c48\u00dc;                 /* jobname                           */\n  unsigned char  asm_programname\u00c48\u00dc;             /* actual programname                */\n  void          *asm_workecbs;                   /* start of work ecb pool            */\n  void          *asm_workecbp;                   /* work ecb pointer                  */\n  void          *asm_workecbe;                   /* work ecb end address              */\n  struct \u00e4\n    unsigned char  _asm_iarv_xversion;  /* ++ INPUT XVERSION */\n    unsigned char  _asm_iarv_xservice;  /* ++  XSERVICE      */\n    unsigned char  _asm_iarv_xflags1;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_iarv_xflags2;   /* ++ FIELD_LABEL    */\n    int            _asm_iarv_xnumrange; /* ++   XNUMRANGE    */\n    \u00fc asm_iarv;\n  void          *asm_iarv_xranglist;             /* ++   XRANGLIST                    */\n  struct \u00e4\n    unsigned char  _filler2;  /* .SERVICE TYPE CODE */\n    unsigned char  _filler3;  /* .OPTIONS FLAG BYTE */\n    short int      _filler4;  /* .RESERVED          */\n    \u00fc asm_aleservl;\n  void          *_filler5;                       /* .ALET                             */\n  unsigned char  _filler6\u00c48\u00dc;                    /* .STOKEN (SPACE TOKEN)             */\n  unsigned char  _filler7;                       /* PELLAST flag byte.        X02113  */\n  unsigned char  _filler8;                       /* PELMILEN - RNAME length.          */\n  unsigned char  _filler9;\n  unsigned char  _filler10;                      /* PELRET - return code byte.        */\n  void          *_filler11;                      /* QNAME ADDRESS                     */\n  void          *_filler12;                      /* RNAME ADDRESS                     */\n  void          *asm_option\u00c44\u00dc;                  /* option fields                     */\n  double         asm_sleep;                      /* double word for timer             */\n  unsigned char  asm_iarvrl\u00c428\u00dc;                 /* iarvrl area                       */\n  void          *asm_iarvrla;                    /* iarvrl area address               */\n  void          *asm_extract_l;                  /* LIST ADDRESS                      */\n  void          *_filler13;                      /* TCB ADDRESS                       */\n  void          *_filler14;\n  void          *asm_post_l;                     /* . 1ST WORD - ECB ADDRESS          */\n  void          *_filler15;                      /* . 2ND WORD - ASCB ADDRESS         */\n  void          *_filler16;                      /* . 3RD WORD - ERRET ADDRESS        */\n  void          *_filler17;                      /* . 4TH WORD - BYTE0,ECBKEY@ZA15373 */\n  void          *asm_comptr;                     /* comm area pointer                 */\n  void          *asm_comtoken;                   /* comm token                        */\n  void          *asm_comecbpt;                   /* stop/modify ecb pointer           */\n  struct \u00e4\n    short int      _filler18;     /* TEXT LENGTH            @YA17152 */\n    unsigned char  _filler19\u00c42\u00dc;  /* MCSFLAGS                        */\n    \u00fc asm_wtol;\n  unsigned char  _filler20\u00c4110\u00dc;                 /* MESSAGE TEXT               @L6C   */\n  unsigned char  _filler21;                      /* VERSION LEVEL              @PJC   */\n  unsigned char  _filler22;                      /* MISCELLANEOUS FLAGS        @L2A   */\n  unsigned char  _filler23;                      /* REPLY LENGTH               @L2A   */\n  unsigned char  _filler24;                      /* RESERVED                   @PJA   */\n  unsigned char  _filler25\u00c42\u00dc;                   /* EXTENDED MCS FLAGS         @L2A   */\n  short int      _filler26;                      /* RESERVED                   @L2A   */\n  void          *_filler27;                      /* REPLY BUFFER ADDRESS       @P7C   */\n  void          *_filler28;                      /* REPLY ECB ADDRESS          @P7C   */\n  void          *_filler29;                      /* CONNECT ID                 @01C   */\n  unsigned char  _filler30\u00c42\u00dc;                   /* DESCRIPTOR CODES           @L2A   */\n  short int      _filler31;                      /* RESERVED                   @L2A   */\n  unsigned char  _filler32\u00c416\u00dc;                  /* EXTENDED ROUTING CODES     @L2A   */\n  unsigned char  _filler33\u00c42\u00dc;                   /* MESSAGE TYPE               @L2A   */\n  short int      _filler34;                      /* MESSAGE'S PRIORITY         @L2A   */\n  unsigned char  _filler35\u00c48\u00dc;                   /* JOB ID                     @L2A   */\n  unsigned char  _filler36\u00c48\u00dc;                   /* JOB NAME                   @L2A   */\n  unsigned char  _filler37\u00c48\u00dc;                   /* RETRIEVAL KEY              @L2A   */\n  void          *_filler38;                      /* TOKEN FOR DOM              @P1C   */\n  void          *_filler39;                      /* CONSOLE ID                 @P1C   */\n  unsigned char  _filler40\u00c48\u00dc;                   /* SYSTEM NAME                @L2A   */\n  void          *_filler41;                      /* RESERVED                   @PJA   */\n  void          *_filler42;                      /* RESERVED                   @PJA   */\n  unsigned char  _filler43\u00c42\u00dc;\n  void          *asm_bpx1\u00c432\u00dc;                   /* BPX1 parm list                    */\n  int            asm_bpx1_retval;                /* return value                      */\n  int            asm_bpx1_retcode;               /* return code                       */\n  int            asm_bpx1_rsncode;               /* reason code                       */\n  void          *asm_bpx1_list_length_r;         /* list length read                  */\n  void          *asm_bpx1_list_length_w;         /* list length write                 */\n  void          *asm_bpx1_list_length_e;         /* list length exception             */\n  void          *asm_bpx1_numfds;                /* number of FD's                    */\n  void          *asm_bpx1_timeout;               /* timeout pointer                   */\n  void          *asm_bpx1_option;                /* option value                      */\n  unsigned char  _filler44\u00c44\u00dc;\n  double         asm_stck;                       /* stck area                         */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _asm_ieatdump_xplistname\u00c44\u00dc; /* ++ CONSTANT  XPLISTNAME */\n      unsigned char  _asm_ieatdump_xword1\u00c44\u00dc;     /* ++ FIELD_LABEL  XWORD1  */\n      \u00fc asm_ieatdump;\n    struct \u00e4\n      unsigned char  _filler45\u00c44\u00dc;\n      unsigned char  _asm_ieatdump_xplistlen\u00c42\u00dc; /* ++ INPUT  XPLISTLEN   */\n      unsigned char  _asm_ieatdump_xversion;     /* ++ INPUT XVERSION     */\n      unsigned char  _asm_ieatdump_xrsv0001;     /* ++ RESERVED  XRSV0001 */\n      \u00fc _asmdsect_struct1;\n    \u00fc _asmdsect_union1;\n  unsigned char  asm_ieatdump_xsdata1;           /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ieatdump_xsdata2;           /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ieatdump_xflags1;           /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ieatdump_xrsv0002;          /* ++ RESERVED  XRSV0002             */\n  unsigned char  asm_ieatdump_xdsp_stoken\u00c48\u00dc;    /* ++   XDSP_STOKEN                  */\n  void          *asm_ieatdump_xdsp_origin;       /* ++   XDSP_ORIGIN                  */\n  void          *asm_ieatdump_xdsp_records_;     /* ++   XDSP_RECORDS@                */\n  unsigned char  asm_ieatdump_xddname\u00c48\u00dc;        /* ++   XDDNAME                      */\n  union \u00e4\n    void          *_asm_ieatdump_xdsnad;    /* ++   XDSNAD   */\n    void          *_asm_ieatdump_xdsn_addr; /* ++  ADDR XDSN */\n    \u00fc _asmdsect_union2;\n  int            asm_ieatdump_xdsn_alet;         /* ++  ALET XDSN                     */\n  union \u00e4\n    void          *_asm_ieatdump_xhdrad;    /* ++   XHDRAD   */\n    void          *_asm_ieatdump_xhdr_addr; /* ++  ADDR XHDR */\n    \u00fc _asmdsect_union3;\n  int            asm_ieatdump_xhdr_alet;         /* ++  ALET XHDR                     */\n  union \u00e4\n    void          *_asm_ieatdump_xidxad;    /* ++   XIDXAD   */\n    void          *_asm_ieatdump_xidx_addr; /* ++  ADDR XIDX */\n    \u00fc _asmdsect_union4;\n  int            asm_ieatdump_xidx_alet;         /* ++  ALET XIDX                     */\n  union \u00e4\n    void          *_asm_ieatdump_xsymrecad;    /* ++   XSYMRECAD   */\n    void          *_asm_ieatdump_xsymrec_addr; /* ++  ADDR XSYMREC */\n    \u00fc _asmdsect_union5;\n  int            asm_ieatdump_xsymrec_alet;      /* ++  ALET XSYMREC                  */\n  union \u00e4\n    void          *_asm_ieatdump_xintokenad;    /* ++   XINTOKENAD   */\n    void          *_asm_ieatdump_xintoken_addr; /* ++  ADDR XINTOKEN */\n    \u00fc _asmdsect_union6;\n  int            asm_ieatdump_xintoken_alet;     /* ++  ALET XINTOKEN                 */\n  union \u00e4\n    void          *_asm_ieatdump_xremotead;    /* ++   XREMOTEAD   */\n    void          *_asm_ieatdump_xremote_addr; /* ++  ADDR XREMOTE */\n    \u00fc _asmdsect_union7;\n  int            asm_ieatdump_xremote_alet;      /* ++  ALET XREMOTE                  */\n  union \u00e4\n    void          *_asm_ieatdump_xprobdescad;    /* ++   XPROBDESCAD   */\n    void          *_asm_ieatdump_xprobdesc_addr; /* ++  ADDR XPROBDESC */\n    \u00fc _asmdsect_union8;\n  int            asm_ieatdump_xprobdesc_alet;    /* ++  ALET XPROBDESC                */\n  union \u00e4\n    void          *_asm_ieatdump_xlistad;    /* ++   XLISTAD   */\n    void          *_asm_ieatdump_xlist_addr; /* ++  ADDR XLIST */\n    \u00fc _asmdsect_union9;\n  int            asm_ieatdump_xlist_alet;        /* ++  ALET XLIST                    */\n  union \u00e4\n    void          *_asm_ieatdump_xsubplstad;    /* ++   XSUBPLSTAD   */\n    void          *_asm_ieatdump_xsubplst_addr; /* ++  ADDR XSUBPLST */\n    \u00fc _asmdsect_union10;\n  int            asm_ieatdump_xsubplst_alet;     /* ++  ALET XSUBPLST                 */\n  union \u00e4\n    void          *_asm_ieatdump_xdsplistad;    /* ++   XDSPLISTAD   */\n    void          *_asm_ieatdump_xdsplist_addr; /* ++  ADDR XDSPLIST */\n    \u00fc _asmdsect_union11;\n  int            asm_ieatdump_xdsplist_alet;     /* ++  ALET XDSPLIST                 */\n  union \u00e4\n    void          *_asm_ieatdump_xecbad;    /* ++   XECBAD   */\n    void          *_asm_ieatdump_xecb_addr; /* ++  ADDR XECB */\n    \u00fc _asmdsect_union12;\n  int            asm_ieatdump_xecb_alet;         /* ++  ALET XECB                     */\n  unsigned char  asm_tdump_name;                 /* name length                       */\n  unsigned char  _filler46\u00c4100\u00dc;                 /* name                              */\n  unsigned char  asm_tdump_desc;                 /* desc length                       */\n  unsigned char  _filler47\u00c4100\u00dc;                 /* desc                              */\n  unsigned char  asm_streamname\u00c426\u00dc;             /* stream name                       */\n  unsigned char  asm_streamtoken\u00c416\u00dc;            /* stream token                      */\n  void          *asm_logger_length;\n  void          *asm_logger_buffer;              /* logger buffer pointer             */\n  void          *asm_logger_bufflen;             /* buffer length                     */\n  void          *asm_logger_buffer_offset;       /* actual buffer offset              */\n  void          *asm_logger_browse_token;        /* browse token                      */\n  void          *asm_logger_direction;           /* browse direction 2-3              */\n  struct \u00e4\n    void          *_asm_ixgconn_xplistptr;     /* ++ INPUT          */\n    unsigned char  _asm_ixgconn_xversion;      /* ++ INPUT XVERSION */\n    unsigned char  _asm_ixgconn_xixgflags;     /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ixgconn_xkeyusedflags; /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ixgconn_xformatlvl;    /* ++ CONSTANT       */\n    \u00fc asm_ixgconn;\n  void          *asm_ixgconn_xansarea;           /* ++                                */\n  void          *asm_ixgconn_xcompleteexit;      /* ++                                */\n  unsigned char  asm_ixgconn_xrmname\u00c48\u00dc;         /* ++                                */\n  void          *asm_ixgconn_xrmexit;            /* ++                                */\n  unsigned char  asm_ixgconn_xrmdata\u00c48\u00dc;         /* ++                                */\n  unsigned char  asm_ixgconn_xlsversion\u00c48\u00dc;      /* ++                                */\n  unsigned char  asm_ixgconn_xixgflags2;         /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ixgconn_xrsv0002\u00c43\u00dc;        /* ++ RESERVED                       */\n  int            asm_ixgconn_xanslen;            /* ++                                */\n  unsigned char  asm_ixgconn_xstructname\u00c416\u00dc;    /* ++                                */\n  int            asm_ixgconn_xavgbufsize;        /* ++                                */\n  int            asm_ixgconn_xmaxbufsize;        /* ++                                */\n  int            asm_ixgconn_xelementsize;       /* ++                                */\n  unsigned char  asm_ixgconn_xuserdata\u00c464\u00dc;      /* ++                                */\n  unsigned char  asm_ixgconn_xstreamname\u00c426\u00dc;    /* ++                                */\n  unsigned char  asm_ixgconn_xstreamtoken\u00c416\u00dc;   /* ++                                */\n  unsigned char  _filler48\u00c46\u00dc;\n  struct \u00e4\n    unsigned char  _asm_ixgwrite_xversion;    /* ++ INPUT XVERSION */\n    unsigned char  _asm_ixgwrite_xixgflags;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ixgwrite_xrsv0001\u00c42\u00dc; /* ++ RESERVED       */\n    void          *_asm_ixgwrite_xplistptr;   /* ++ INPUT          */\n    \u00fc asm_ixgwrite;\n  int            asm_ixgwrite_xrsncode;          /* ++                                */\n  void          *asm_ixgwrite_xbuffer_addr;      /* ++  ADDR                          */\n  int            asm_ixgwrite_xblocklen;         /* ++                                */\n  int            asm_ixgwrite_xbuffalet;         /* ++                                */\n  int            asm_ixgwrite_xbuffkey;          /* ++                                */\n  void          *asm_ixgwrite_xecb_addr;         /* ++  ADDR                          */\n  void          *asm_ixgwrite_xansarea;          /* ++                                */\n  int            asm_ixgwrite_xanslen;           /* ++                                */\n  void          *asm_ixgwrite_xretblockid_addr;  /* ++  ADDR                          */\n  void          *asm_ixgwrite_xtimestamp_addr;   /* ++  ADDR                          */\n  unsigned char  asm_ixgwrite_xstreamtoken\u00c416\u00dc;  /* ++                                */\n  struct \u00e4\n    unsigned char  _asm_ixgbrwse_xversion;     /* ++ INPUT XVERSION */\n    unsigned char  _asm_ixgbrwse_xrequest;     /* ++  XREQUEST      */\n    unsigned char  _asm_ixgbrwse_xixgflags\u00c42\u00dc; /* ++ FIELD_LABEL    */\n    void          *_asm_ixgbrwse_xplistptr;    /* ++ INPUT          */\n    \u00fc asm_ixgbrwse;\n  void          *asm_ixgbrwse_xbuffer_addr;      /* ++  ADDR                          */\n  int            asm_ixgbrwse_xbuffkey;          /* ++                                */\n  int            asm_ixgbrwse_xbufflen;          /* ++                                */\n  int            asm_ixgbrwse_xbuffalet;         /* ++                                */\n  void          *asm_ixgbrwse_xblksize_addr;     /* ++  ADDR                          */\n  void          *asm_ixgbrwse_xecb_addr;         /* ++  ADDR                          */\n  void          *asm_ixgbrwse_xansarea;          /* ++                                */\n  int            asm_ixgbrwse_xanslen;           /* ++                                */\n  unsigned char  asm_ixgbrwse_xstreamtoken\u00c416\u00dc;  /* ++                                */\n  void          *asm_ixgbrwse_xbrowsetoken_addr; /* ++  ADDR                          */\n  unsigned char  asm_ixgbrwse_xsearch\u00c48\u00dc;        /* ++                                */\n  void          *asm_ixgbrwse_xretblockid_addr;  /* ++  ADDR                          */\n  unsigned char  asm_ixgbrwse_xstartblockid\u00c48\u00dc;  /* ++                                */\n  void          *asm_ixgbrwse_xtimestamp_addr;   /* ++  ADDR                          */\n  unsigned char  asm_ixgbrwse_xblockid\u00c48\u00dc;       /* ++                                */\n  unsigned char  asm_logger_convval\u00c416\u00dc;\n  unsigned char  asm_logger_stck\u00c416\u00dc;\n  unsigned char  _filler49\u00c432\u00dc;\n  unsigned char  _filler50\u00c44\u00dc;\n  struct \u00e4\n    unsigned char  _asm_ieamschd_xversion; /* ++ INPUT XVERSION */\n    unsigned char  _asm_ieamschd_xflag1;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ieamschd_xflag2;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ieamschd_xflag3;   /* ++ FIELD_LABEL    */\n    void          *_asm_ieamschd_xepaddr;  /* ++                */\n    \u00fc asm_ieamschd;\n  unsigned char  asm_ieamschd_xtargetstoken\u00c48\u00dc;  /* ++                                */\n  unsigned char  asm_ieamschd_xenclavetoken\u00c48\u00dc;  /* ++                                */\n  unsigned char  asm_ieamschd_xminorpriority;    /* ++                                */\n  unsigned char  asm_ieamschd_xkeyvalue;         /* ++                                */\n  unsigned char  asm_ieamschd_xcpumask\u00c42\u00dc;       /* ++                                */\n  int            asm_ieamschd_xparm;             /* ++                                */\n  union \u00e4\n    void          *_asm_ieamschd_xfrraddr; /* ++ */\n    struct \u00e4\n      unsigned char  _asm_ieamschd_xrsv0001\u00c43\u00dc; /* ++ RESERVED    */\n      unsigned char  _asm_ieamschd_xfrrflag;    /* ++ FIELD_LABEL */\n      \u00fc _asmdsect_struct2;\n    \u00fc _asmdsect_union13;\n  void          *asm_ieamschd_xrmtraddr;         /* ++                                */\n  unsigned char  asm_ieamschd_xpurgestoken\u00c48\u00dc;   /* ++                                */\n  void          *asm_ieamschd_xptcbaddr;         /* ++                                */\n  unsigned char  asm_ieamschd_xclientstoken\u00c48\u00dc;  /* ++                                */\n  int            asm_ieamschd_comp;              /* IEAMSCHD comp                     */\n  int            asm_ieamschd_code;              /* IEAMSCHD code                     */\n  int            asm_ieamschd_rsn;               /* IEAMSCHD reason                   */\n  unsigned char  asm_ansarea\u00c440\u00dc;\n  void          *asm_vtoc_dcb;                   /* DCB address below the line        */\n  unsigned char  asm_vtoc_ddname\u00c48\u00dc;             /* DDNAME                            */\n  unsigned char  asm_vtoc_filter\u00c444\u00dc;            /* name filter                       */\n  struct \u00e4\n    unsigned char  _filler51;       /* OPTION BYTE */\n    int            _filler52 : 24;  /* DCB ADDRESS */\n    \u00fc asm_vtoc_openlist;\n  unsigned char  asm_vtoc_fcl\u00c424\u00dc;\n  unsigned char  asm_vtoc_bfl\u00c420\u00dc;\n  unsigned char  _filler53\u00c44\u00dc;                   /* EBCDIC 'CVPL'                     */\n  short int      _filler54;                      /* LENGTH OF CVPL                    */\n  unsigned char  _filler55;                      /* FUNCTION CODE                     */\n  unsigned char  _filler56;                      /* STATUS INFORMATION                */\n  unsigned char  _filler57;                      /* FIRST FLAG BYTE                   */\n  unsigned char  _filler58;                      /* SECOND FLAG BYTE                  */\n  unsigned char  _filler59;                      /* THIRD FLAG BYTE                   */\n  unsigned char  _filler60;                      /* Fourth Flag Byte           @LVC   */\n  void          *_filler61;                      /* UCB ADDRESS                       */\n  void          *_filler62;                      /* FILTER CRITERIA LIST ADDRESS      */\n  void          *_filler63;                      /* BUFFER LIST ADDRESS               */\n  void          *_filler64;                      /* INDEX VIR'S BUFFER LIST ADDRESS   */\n  void          *_filler65;                      /* MAP VIR'S BUFFER LIST ADDRESS     */\n  void          *_filler66;                      /* I/O AREA ADDRESS                  */\n  void          *_filler67;                      /* DEB ADDRESS                       */\n  void          *_filler68;                      /* ARGUMENT ADDRESS                  */\n  void          *_filler69;                      /* SPACE PARAMETER LIST ADDRESS      */\n  void          *_filler70;                      /* EXTENT TABLE ADDRESS              */\n  void          *_filler71;                      /* NEW VRF VIXM BUFFER LIST ADDR     */\n  void          *_filler72;                      /* VRF DATA ADDRESS                  */\n  void          *_filler73;                      /* COUNT AREA ADDRESS                */\n  void          *_filler74;                      /* FILTER SAVE AREA ADDRESS          */\n  unsigned char  asm_vtoc_buffer\u00c4140\u00dc;\n  void          *asm_camlst\u00c44\u00dc;\n  void          *asm_testauth;\n  void          *asm_diagnose_flag;\n  void          *asm_diagnose_addr;\n  void          *asm_vsmlist_ascbaddr;           /* address of the ascb               */\n  short int      asm_vsmlist_myascbid;           /* my own ASCB id                    */\n  unsigned char  _filler75\u00c42\u00dc;\n  int            asm_vsmlist_myascb;             /* address of my ASCB                */\n  int            asm_vsmlist_mytcb;              /* my own TCB addr                   */\n  void          *asm_vsmlist_storage;            /* SRB work area address             */\n  void          *asm_mutex_vector\u00c432\u00dc;\n  \u00fc;\n\n#define asm_iarv_xversion           asm_iarv._asm_iarv_xversion\n#define asm_iarv_xservice           asm_iarv._asm_iarv_xservice\n#define asm_iarv_xflags1            asm_iarv._asm_iarv_xflags1\n#define asm_iarv_xflags2            asm_iarv._asm_iarv_xflags2\n#define asm_iarv_xnumrange          asm_iarv._asm_iarv_xnumrange\n#define asm_ieatdump_xplistname     _asmdsect_union1.asm_ieatdump._asm_ieatdump_xplistname\n#define asm_ieatdump_xword1         _asmdsect_union1.asm_ieatdump._asm_ieatdump_xword1\n#define asm_ieatdump_xplistlen      _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xplistlen\n#define asm_ieatdump_xversion       _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xversion\n#define asm_ieatdump_xrsv0001       _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xrsv0001\n#define asm_ieatdump_xdsnad         _asmdsect_union2._asm_ieatdump_xdsnad\n#define asm_ieatdump_xdsn_addr      _asmdsect_union2._asm_ieatdump_xdsn_addr\n#define asm_ieatdump_xhdrad         _asmdsect_union3._asm_ieatdump_xhdrad\n#define asm_ieatdump_xhdr_addr      _asmdsect_union3._asm_ieatdump_xhdr_addr\n#define asm_ieatdump_xidxad         _asmdsect_union4._asm_ieatdump_xidxad\n#define asm_ieatdump_xidx_addr      _asmdsect_union4._asm_ieatdump_xidx_addr\n#define asm_ieatdump_xsymrecad      _asmdsect_union5._asm_ieatdump_xsymrecad\n#define asm_ieatdump_xsymrec_addr   _asmdsect_union5._asm_ieatdump_xsymrec_addr\n#define asm_ieatdump_xintokenad     _asmdsect_union6._asm_ieatdump_xintokenad\n#define asm_ieatdump_xintoken_addr  _asmdsect_union6._asm_ieatdump_xintoken_addr\n#define asm_ieatdump_xremotead      _asmdsect_union7._asm_ieatdump_xremotead\n#define asm_ieatdump_xremote_addr   _asmdsect_union7._asm_ieatdump_xremote_addr\n#define asm_ieatdump_xprobdescad    _asmdsect_union8._asm_ieatdump_xprobdescad\n#define asm_ieatdump_xprobdesc_addr _asmdsect_union8._asm_ieatdump_xprobdesc_addr\n#define asm_ieatdump_xlistad        _asmdsect_union9._asm_ieatdump_xlistad\n#define asm_ieatdump_xlist_addr     _asmdsect_union9._asm_ieatdump_xlist_addr\n#define asm_ieatdump_xsubplstad     _asmdsect_union10._asm_ieatdump_xsubplstad\n#define asm_ieatdump_xsubplst_addr  _asmdsect_union10._asm_ieatdump_xsubplst_addr\n#define asm_ieatdump_xdsplistad     _asmdsect_union11._asm_ieatdump_xdsplistad\n#define asm_ieatdump_xdsplist_addr  _asmdsect_union11._asm_ieatdump_xdsplist_addr\n#define asm_ieatdump_xecbad         _asmdsect_union12._asm_ieatdump_xecbad\n#define asm_ieatdump_xecb_addr      _asmdsect_union12._asm_ieatdump_xecb_addr\n#define asm_ixgconn_xplistptr       asm_ixgconn._asm_ixgconn_xplistptr\n#define asm_ixgconn_xversion        asm_ixgconn._asm_ixgconn_xversion\n#define asm_ixgconn_xixgflags       asm_ixgconn._asm_ixgconn_xixgflags\n#define asm_ixgconn_xkeyusedflags   asm_ixgconn._asm_ixgconn_xkeyusedflags\n#define asm_ixgconn_xformatlvl      asm_ixgconn._asm_ixgconn_xformatlvl\n#define asm_ixgwrite_xversion       asm_ixgwrite._asm_ixgwrite_xversion\n#define asm_ixgwrite_xixgflags      asm_ixgwrite._asm_ixgwrite_xixgflags\n#define asm_ixgwrite_xrsv0001       asm_ixgwrite._asm_ixgwrite_xrsv0001\n#define asm_ixgwrite_xplistptr      asm_ixgwrite._asm_ixgwrite_xplistptr\n#define asm_ixgbrwse_xversion       asm_ixgbrwse._asm_ixgbrwse_xversion\n#define asm_ixgbrwse_xrequest       asm_ixgbrwse._asm_ixgbrwse_xrequest\n#define asm_ixgbrwse_xixgflags      asm_ixgbrwse._asm_ixgbrwse_xixgflags\n#define asm_ixgbrwse_xplistptr      asm_ixgbrwse._asm_ixgbrwse_xplistptr\n#define asm_ieamschd_xversion       asm_ieamschd._asm_ieamschd_xversion\n#define asm_ieamschd_xflag1         asm_ieamschd._asm_ieamschd_xflag1\n#define asm_ieamschd_xflag2         asm_ieamschd._asm_ieamschd_xflag2\n#define asm_ieamschd_xflag3         asm_ieamschd._asm_ieamschd_xflag3\n#define asm_ieamschd_xepaddr        asm_ieamschd._asm_ieamschd_xepaddr\n#define asm_ieamschd_xfrraddr       _asmdsect_union13._asm_ieamschd_xfrraddr\n#define asm_ieamschd_xrsv0001       _asmdsect_union13._asmdsect_struct2._asm_ieamschd_xrsv0001\n#define asm_ieamschd_xfrrflag       _asmdsect_union13._asmdsect_struct2._asm_ieamschd_xfrrflag\n\n/* Values for field \"asm_iarv_xservice\" */\n#define asm_iarv_share                     1      /* ++ XSERVICE.SHARE KEYWORD        */\n#define asm_iarv_unshare                   2      /* ++ XSERVICE.UNSHARE KEYWORD      */\n#define asm_iarv_changeaccess              3      /* ++ XSERVICE.CHANGEACCESS KEYWORD */\n#define asm_iarv_shareseg                  4      /* ++ XSERVICE.SHARESEG KEYWORD     */\n\n/* Values for field \"asm_iarv_xflags1\" */\n#define asm_iarv_target_view_ro            0x80\n#define asm_iarv_target_view_sw            0x40\n#define asm_iarv_target_view_uw            0x20\n#define asm_iarv_target_view_tw            0x10\n#define asm_iarv_target_view_ls            0x08\n#define asm_iarv_target_view_na            0x04\n#define asm_iarv_copynow                   0x02   /* ++ KEYUSED.COPYNOW KEYWORD       */\n#define asm_iarv_retain_yes                0x01\n\n/* Values for field \"asm_iarv_xflags2\" */\n#define asm_iarv_xpartialpage_yes          0x80\n\n/* Values for field \"asm_iarv_xranglist\" */\n#define asm_iarvl                          0x0C   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"_filler42\" */\n#define asm_wtol_text_length               110    /* text length                      */\n\n/* Values for field \"asm_ieatdump_xsdata1\" */\n#define asm_ieatdump_xsdata_defs           0x80\n#define asm_ieatdump_xsdata_allnuc         0x40\n#define asm_ieatdump_xsdata_csa            0x20\n#define asm_ieatdump_xsdata_grsq           0x10\n#define asm_ieatdump_xsdata_lpa            0x08\n#define asm_ieatdump_xsdata_lsqa           0x04\n#define asm_ieatdump_xsdata_nuc            0x02\n#define asm_ieatdump_xsdata_rgn            0x01\n\n/* Values for field \"asm_ieatdump_xsdata2\" */\n#define asm_ieatdump_xsdata_sqa            0x80\n#define asm_ieatdump_xsdata_sum            0x40\n#define asm_ieatdump_xsdata_swa            0x20\n#define asm_ieatdump_xsdata_trt            0x10\n#define asm_ieatdump_xsdata_psa            0x08\n\n/* Values for field \"asm_ieatdump_xflags1\" */\n#define asm_ieatdump_keyused_ddname        0x40\n\n/* Values for field \"asm_ieatdump_xecb_addr\" */\n#define asm_ieatdumpl                      0x7C   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"asm_ixgconn_xixgflags\" */\n#define asm_ixgconn_xrequest_connect       0x80\n#define asm_ixgconn_xauth_read             0x40\n#define asm_ixgconn_xauth_write            0x20\n#define asm_ixgconn_ximportconnect_yes     0x10\n#define asm_ixgconn_xrmevents_lbwrite      0x08\n#define asm_ixgconn_xrmevents_lbdelete     0x04\n\n/* Values for field \"asm_ixgconn_xkeyusedflags\" */\n#define asm_ixgconn_keyused_userdata       0x80\n#define asm_ixgconn_keyused_avgbufsize     0x40\n#define asm_ixgconn_keyused_maxbufsize     0x20\n#define asm_ixgconn_keyused_elementsize    0x10\n#define asm_ixgconn_keyused_structname     0x08\n#define asm_ixgconn_keyused_completeexit   0x04\n#define asm_ixgconn_keyused_rmname         0x02\n#define asm_ixgconn_keyused_lsversion      0x01\n\n/* Values for field \"asm_ixgconn_xixgflags2\" */\n#define asm_ixgconn_keyused_diag           0x80\n#define asm_ixgconn_xdiag_no_diag          0x40\n#define asm_ixgconn_xdiag_yes              0x20\n\n/* Values for field \"asm_ixgconn_xstreamtoken\" */\n#define asm_ixgconnl                       0xBA   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"asm_ixgwrite_xixgflags\" */\n#define asm_ixgwrite_xmode_sync            0x80\n#define asm_ixgwrite_keyused_buffkey       0x40\n#define asm_ixgwrite_keyused_timestamp     0x20\n#define asm_ixgwrite_xmode_syncexit        0x10\n#define asm_ixgwrite_xmode_asyncnoresponse 0x08\n#define asm_ixgwrite_keyused_retblockid    0x04\n#define asm_ixgwrite_macused_ixgimprt      0x02\n#define asm_ixgwrite_keyused_buffer64      0x01\n\n/* Values for field \"asm_ixgbrwse_xrequest\" */\n#define asm_ixgbrwse_xrequest_start        1      /* ++ XREQUEST.START KEYWORD        */\n#define asm_ixgbrwse_xrequest_readcursor   2\n#define asm_ixgbrwse_xrequest_readblock    3\n#define asm_ixgbrwse_xrequest_reset        4      /* ++ XREQUEST.RESET KEYWORD        */\n#define asm_ixgbrwse_xrequest_end          5      /* ++ XREQUEST.END KEYWORD          */\n\n/* Values for field \"asm_ixgbrwse_xixgflags\" */\n#define asm_ixgbrwse_xdirection_youngtoold 0x8000\n#define asm_ixgbrwse_xmode_sync            0x4000\n#define asm_ixgbrwse_xgmt_yes              0x2000\n#define asm_ixgbrwse_keyused_startblockid  0x1000\n#define asm_ixgbrwse_keyused_oldest        0x800\n#define asm_ixgbrwse_keyused_youngest      0x400\n#define asm_ixgbrwse_keyused_search        0x200\n#define asm_ixgbrwse_keyused_buffkey       0x100\n#define asm_ixgbrwse_xposition_youngest    0x80\n#define asm_ixgbrwse_xmode_syncexit        0x40\n#define asm_ixgbrwse_xview_active          0x20\n#define asm_ixgbrwse_xview_all             0x10\n#define asm_ixgbrwse_keyused_view          0x08\n#define asm_ixgbrwse_keyused_multiblock    0x04\n#define asm_ixgbrwse_xmultiblock_yes       0x02\n#define asm_ixgbrwse_keyused_buffer64      0x01\n\n/* Values for field \"asm_ieamschd_xflag1\" */\n#define asm_ieamschd_xenv_stoken           0x08\n#define asm_ieamschd_xenv_fullxm           0x04\n#define asm_ieamschd_xenv_primary          0x02\n#define asm_ieamschd_xenv_home             0x01\n\n/* Values for field \"asm_ieamschd_xflag2\" */\n#define asm_ieamschd_keyused_dualpooltoken 0x20\n#define asm_ieamschd_xsynch_yes            0x10\n#define asm_ieamschd_keyused_keyvalue      0x08\n#define asm_ieamschd_xllock_yes            0x04\n#define asm_ieamschd_xfeature_cpmask       0x02\n#define asm_ieamschd_xfeature_crypto       0x01\n\n/* Values for field \"asm_ieamschd_xflag3\" */\n#define asm_ieamschd_xpriority_client      0x20\n#define asm_ieamschd_xpriority_enclave     0x10\n#define asm_ieamschd_xpriority_preempt     0x08\n#define asm_ieamschd_xpriority_current     0x04\n#define asm_ieamschd_xpriority_global      0x02\n#define asm_ieamschd_xpriority_local       0x01\n\n/* Values for field \"asm_ieamschd_xfrrflag\" */\n#define asm_ieamschd_xsdwaloc31_yes        0x01\n#define asm_ieamschdl                      0x3C   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"asm_diagnose_addr\" */\n#define asm_diagnose_length                4095\n#define asm_diagnose_fix                   1\n#define asm_diagnose_dontswap              2\n#define asm_diagnose_keep                  4\n#define asm_diagnose_all                   7\n\n/* Values for field \"asm_vsmlist_storage\" */\n#define sym_cleanup                        0      /* + symb equ                       */\n#define sym_gettoken                       1      /* + symb equ                       */\n#define sym_createtoken                    2      /* + symb equ                       */\n#define sym_deletetoken                    3      /* + symb equ                       */\n#define sym_allocatepages                  4      /* + symb equ                       */\n#define sym_freepages                      5      /* + symb equ                       */\n#define sym_enq                            6      /* + symb equ                       */\n#define sym_deq                            7      /* + symb equ                       */\n#define sym_sleep                          8      /* + symb equ                       */\n#define sym_getecb                         9      /* + symb equ                       */\n#define sym_wait                           10     /* + symb equ                       */\n#define sym_post                           11     /* + symb equ                       */\n#define sym_reset                          12     /* + symb equ                       */\n#define sym_select                         13     /* + symb equ                       */\n#define sym_connectshmem                   14     /* + symb equ                       */\n#define sym_disconnectshmem                15     /* + symb equ                       */\n#define sym_oper                           16     /* + symb equ                       */\n#define sym_wto                            17     /* + symb equ                       */\n#define sym_malloc                         18     /* + symb equ                       */\n#define sym_free                           19     /* + symb equ                       */\n#define sym_svc                            20     /* + symb equ                       */\n#define sym_attachmvs                      21     /* + symb equ                       */\n#define sym_clock                          22     /* + symb equ                       */\n#define sym_timeused                       23     /* + symb equ                       */\n#define sym_tdump                          24     /* + symb equ                       */\n#define sym_logger                         25     /* + symb equ                       */\n#define sym_vtoc                           26     /* + symb equ                       */\n#define sym_srb                            27     /* + symb equ                       */\n#define sym_wlm                            28     /* + symb equ                       */\n#define sym_obtain                         29     /* + symb equ                       */\n#define sym_testauth                       30     /* + symb equ                       */\n#define sym_diagnose                       31     /* + symb equ                       */\n#define sym_vsmlist                        32     /* + symb equ                       */\n\n/* Values for field \"asm_mutex_vector\" */\n#define asm_length                         0x978  /* dsect length                     */\n#define r0                                 0\n#define r1                                 1\n#define r2                                 2\n#define r3                                 3\n#define r4                                 4\n#define r5                                 5\n#define r6                                 6\n#define r7                                 7\n#define r8                                 8\n#define r9                                 9\n#define r10                                10\n#define r11                                11\n#define r12                                12\n#define r13                                13\n#define rdsa                               0x0D   /* DSA POINTER                      */\n#define r14                                14\n#define r15                                15\n#define fr0                                0\n#define fr2                                2\n#define fr4                                4\n#define fr6                                6\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "BASE64": {"ttr": 8497, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//\n//\n// WWW Server  File: base64.hpp\n//\n//\n// Copyright 1996-1997 Paul S. Hethmon\n//\n// Prepared for the book \"Illustrated Guide to HTTP\"\n//\n\n#ifndef _BASE64_HPP_\n#define _BASE64_HPP_\n\n// ------------------------------------------------------------------\n\nchar * ToB64(char *);\nchar * FromB64(char *);\n\n// ------------------------------------------------------------------\n\n#endif\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BPXYOPNF": {"ttr": 8659, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct o_flags \u00e4\n  unsigned char  o_flags1; /* Open flags - byte 1 */\n  unsigned char  o_flags2; /* Open flags - byte 2 */\n  unsigned char  o_flags3; /* Open flags - byte 3 */\n  unsigned char  o_flags4; /* Open flags - byte 4 */\n  \u00fc;\n\n/* Values for field \"o_flags1\" */\n#define opnfhigh      0x80 /* DO NOT USE THIS BIT!                  */\n\n/* Values for field \"o_flags2\" */\n#define opnfexec      0x80 /* Execute access requested -            */\n\n/* Values for field \"o_flags3\" */\n#define o_nolargefile 0x08 /* Large Files not allowed          @D5A */\n#define o_largefile   0x04 /* Ignored                          @D5A */\n#define o_asyncsig    0x02 /* An asynchronous signal may occur @D4A */\n#define o_sync        0x01 /* Force synchronous updates    @D3A     */\n\n/* Values for field \"o_flags4\" */\n#define o_crexcl      0xC0 /* Create file only if non-existent      */\n#define o_creat       0x80 /* Create file                           */\n#define o_excl        0x40 /* Exclusive flag                        */\n#define o_noctty      0x20 /* Not a controlling terminal            */\n#define o_trunc       0x10 /* Truncate flag                         */\n#define o_append      0x08 /* Set offset to EOF on write            */\n#define o_nonblock    0x04 /* Don't block this file                 */\n#define fndelay       0x04 /* Don't block this file        @D2A     */\n#define o_rdwr        0x03 /* Open for Read and Write               */\n#define o_rdonly      0x02 /* Open for Read Only                    */\n#define o_wronly      0x01 /* Open for Write Only                   */\n#define o_accmode     0x03 /* Mask for file access modes            */\n#define o_getfl       0x0F /* Mask for file access modes and        */\n#define opnf_length   0x04 /* Length of this structure              */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "BPXYSTAT": {"ttr": 8087, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct stat \u00e4\n  int            statsave\u00c418\u00dc;                /* SAVE AREA FOR subtask area            */\n  unsigned char  statpref\u00c432\u00dc;                /* request type                          */\n  void          *stat_dsp;                    /* dataspace pointer                     */\n  void          *stat_vsam;                   /* dataspace pointer                     */\n  void          *stat_outputp;                /* output pointer                        */\n  unsigned char  stat_posted;                 /* post flag                             */\n  unsigned char  _filler1\u00c43\u00dc;\n  void          *stat_ecblist\u00c4128\u00dc;           /* ecb pointer list                      */\n  void          *stat_ecblist_last;           /* ecb pointer list last used entry      */\n  unsigned char  stat_timer\u00c464\u00dc;              /* timer area                            */\n  void          *stat_ecbrq;                  /* request ECB                           */\n  void          *stat_ecbtimer;               /* timer ECB                             */\n  void          *stat_ecbstop;                /* stop ECB                              */\n  void          *stat_subtask_pstat;          /* actual status entry                   */\n  unsigned char  stat_subtask_status\u00c416\u00dc;     /* entry original status                 */\n  void          *stat_subtask_count;          /* subtask count                         */\n  unsigned char  stat_strqee_function\u00c416\u00dc;    /* function code                         */\n  unsigned char  stat_strqee_status\u00c416\u00dc;      /* status code                           */\n  void          *stat_strqee_next;            /* next entry                            */\n  void          *stat_strqee_ecbp;            /* wait ECB                              */\n  unsigned char  stat_strqee_key\u00c432\u00dc;         /* object type                           */\n  unsigned char  stat_strqee_objectt;         /* object type                           */\n  unsigned char  _filler2\u00c43\u00dc;\n  void          *stat_strqee_pointer;         /* object pointer                        */\n  unsigned char  stat_strqee_sync;            /* sync flag                             */\n  unsigned char  stat_strqee_jobname\u00c48\u00dc;      /* jobname                               */\n  unsigned char  stat_strqee_jobid\u00c48\u00dc;        /* jobid                                 */\n  unsigned char  stat_strqee_printer\u00c48\u00dc;      /* printer                               */\n  unsigned char  stat_strqee_notify\u00c417\u00dc;      /* notify                                */\n  unsigned char  _filler3\u00c42\u00dc;\n  void          *stat_strqee_routcode;        /* routcode                              */\n  unsigned char  stat_strqe_function\u00c416\u00dc;     /* function code                         */\n  unsigned char  stat_strqe_status\u00c416\u00dc;       /* status code                           */\n  void          *stat_strqe_next;             /* next entry                            */\n  void          *stat_strqe_ecbp;             /* ECB pointer                           */\n  unsigned char  stat_strqe_key\u00c432\u00dc;          /* object type                           */\n  unsigned char  stat_strqe_objectt;          /* object type                           */\n  unsigned char  _filler4\u00c43\u00dc;\n  void          *stat_strqe_pointer;          /* object pointer                        */\n  unsigned char  stat_strqe_sync;             /* sync flag                             */\n  unsigned char  stat_strqe_jobname\u00c48\u00dc;       /* jobname                               */\n  unsigned char  stat_strqe_jobid\u00c48\u00dc;         /* jobid                                 */\n  unsigned char  stat_strqe_printer\u00c48\u00dc;       /* printer                               */\n  unsigned char  stat_strqe_notify\u00c417\u00dc;       /* notify                                */\n  unsigned char  _filler5\u00c42\u00dc;\n  void          *stat_strqe_routcode;         /* routcode                              */\n  struct \u00e4\n    unsigned char  _statmsg__msg_msgid\u00c44\u00dc; /* message id */\n    \u00fc statmsg;\n  void          *statmsg__msg_insert\u00c416\u00dc;     /* message insert list                   */\n  void          *statmsg__msg_global;         /* global addr                           */\n  unsigned char  statmsg__msg_hexsw;          /* hexa switch                           */\n  unsigned char  statmsg__msg_wto;            /* wto switch                            */\n  unsigned char  statmsg__msg_log;            /* log switch                            */\n  unsigned char  statmsg__msg_asacc;          /* asa contol char                       */\n  unsigned char  statmsg__msg_trc;            /* set TRC                               */\n  short int      statmsg__msg_desc;           /* descriptor code                       */\n  short int      statmsg__msg_routcde\u00c43\u00dc;     /* route code                            */\n  unsigned char  statmsg__msg_pref;           /* control char prefix                   */\n  unsigned char  statmsg__msg_date\u00c49\u00dc;        /* date filed                            */\n  unsigned char  statmsg__msg_time\u00c414\u00dc;       /* time stemp                            */\n  unsigned char  statmsg__msg_extr\u00c4140\u00dc;      /* extract buffer                        */\n  unsigned char  stat_temperr\u00c416\u00dc;            /* temp error                            */\n  unsigned char  _filler6;\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _filler7;  /* FLAG FIELD '00' */\n      unsigned char  _filler8;  /* RESERVED        */\n      \u00fc stat_notify_mgcrel;\n    \u00fc stat_notify;\n  unsigned char  _filler9;                    /* FLAG FIELD                            */\n  unsigned char  _filler10;                   /* FLAG FIELD 2                @L1A      */\n  unsigned char  _filler11\u00c45\u00dc;                /* CONTROL BLOCK ACRONYM 'MGCRE'         */\n  unsigned char  _filler12;                   /* VERSION LEVEL                         */\n  unsigned char  _filler13;                   /* FLAG FIELD 3                @L3A      */\n  unsigned char  _filler14;                   /* RESERVED                    @L3C      */\n  void          *_filler15;                   /* ADDRESS OF THE COMMAND TEXT           */\n  void          *_filler16;                   /* TOKEN                                 */\n  unsigned char  _filler17\u00c48\u00dc;                /* CONSOLE NAME                          */\n  void          *_filler18;                   /* CONSOLE ID                            */\n  unsigned char  _filler19;                   /* COMMAND DISPOSITION         @L1A      */\n  unsigned char  _filler20\u00c42\u00dc;                /* COMMAND AUTHORITY LEVEL     @L1A      */\n  unsigned char  _filler21;                   /* RESERVED                    @L1A      */\n  unsigned char  _filler22\u00c48\u00dc;                /* COMMAND AND RESPOSE TOKEN   @L1A      */\n  unsigned char  _filler23\u00c48\u00dc;                /* SYSTEM NAME                 @L1C      */\n  void          *_filler24;                   /* UTOKEN ADDRESS              @D1A      */\n  unsigned char  _filler25\u00c44\u00dc;                /* RESERVED                    @D1C      */\n  short int      stat_notify_length;          /* length                                */\n  unsigned char  stat_notify_text\u00c46\u00dc;         /* first                                 */\n  unsigned char  stat_notify_insert\u00c490\u00dc;      /* insert                                */\n  unsigned char  stat_notify_term\u00c48\u00dc;         /* SUFFIX                                */\n  unsigned char  stat_notify_usernm\u00c49\u00dc;       /* userid                                */\n  unsigned char  stat_notify_consid\u00c48\u00dc;       /* console name                          */\n  unsigned char  stat_jnl_name\u00c432\u00dc;           /* name                                  */\n  unsigned char  stat_jnl_fullname\u00c4256\u00dc;      /* fullname                              */\n  unsigned char  stat_jnl_date\u00c48\u00dc;            /* date                                  */\n  unsigned char  stat_jnl_time\u00c48\u00dc;            /* time                                  */\n  unsigned char  stat_jnl_processt\u00c48\u00dc;        /* process time                          */\n  unsigned char  stat_jnl_type\u00c48\u00dc;            /* type                                  */\n  unsigned char  stat_jnl_count\u00c48\u00dc;           /* count                                 */\n  unsigned char  stat_jnl_codes\u00c48\u00dc;           /* count                                 */\n  unsigned char  _filler26\u00c43\u00dc;\n  void          *stat_jnl_code;               /* code                                  */\n  unsigned char  stat_dstype;                 /* dstype                                */\n  unsigned char  stat_yourprof\u00c48\u00dc;            /* profile                               */\n  unsigned char  stat_yourext\u00c44\u00dc;             /* extension                             */\n  unsigned char  _filler27\u00c43\u00dc;\n  unsigned char  stat_estael;                 /* FLAGS FOR TCB,PURGE,ASYNCH,           */\n  int            _filler28 : 24;              /* FIELD NO LONGER USED  @G860P1C        */\n  void          *_filler29;                   /* PARM. LIST ADDR. NOT SPECIFIED        */\n  void          *_filler30;                   /* TCB NOT SPECIFIED                     */\n  unsigned char  _filler31;                   /* FLAGS                                 */\n  unsigned char  _filler32;                   /* THIRD FLAG BYTE       @G860P1C        */\n  short int      _filler33;                   /* RESERVED              @G860P1C        */\n  void          *_filler34;                   /* TOKEN VALUE AREA      @G81CP2F        */\n  void          *_filler35;                   /* EXIT ADDR NOT SPECD   @G860P1C        */\n  void          *stat_estaer\u00c416\u00dc;             /* esate register area                   */\n  void          *stat_estaet\u00c416\u00dc;             /* esate register area                   */\n  void          *stat_estae14;                /* save r14                              */\n  void          *stat_sdwa;                   /* sdwa storage                          */\n  unsigned char  stat_printers_function\u00c416\u00dc;  /* function code                         */\n  void          *stat_printers_keyl;          /* requested key length                  */\n  unsigned char  stat_printers_key\u00c432\u00dc;       /* requested key                         */\n  void          *stat_printers_datal;         /* data length                           */\n  void          *stat_printers_data;          /* data pointer                          */\n  void          *stat_printers_actual;        /* actual pointer                        */\n  void          *stat_printers_first;         /* first entry                           */\n  void          *stat_printers_count;         /* entry count                           */\n  void          *stat_printers_iterator;      /* iterator                              */\n  unsigned char  stat_receivers_function\u00c416\u00dc; /* function code                         */\n  void          *stat_receivers_keyl;         /* requested key length                  */\n  unsigned char  stat_receivers_key\u00c432\u00dc;      /* requested key                         */\n  void          *stat_receivers_datal;        /* data length                           */\n  void          *stat_receivers_data;         /* data pointer                          */\n  void          *stat_receivers_actual;       /* actual pointer                        */\n  void          *stat_receivers_first;        /* first entry                           */\n  void          *stat_receivers_count;        /* entry count                           */\n  void          *stat_receivers_iterator;     /* iterator                              */\n  unsigned char  stat_jobs_function\u00c416\u00dc;      /* function code                         */\n  void          *stat_jobs_keyl;              /* requested key length                  */\n  unsigned char  stat_jobs_key\u00c432\u00dc;           /* requested key                         */\n  void          *stat_jobs_datal;             /* data length                           */\n  void          *stat_jobs_data;              /* data pointer                          */\n  void          *stat_jobs_actual;            /* actual pointer                        */\n  void          *stat_jobs_first;             /* first entry                           */\n  void          *stat_jobs_count;             /* entry count                           */\n  void          *stat_jobs_iterator;          /* iterator                              */\n  struct \u00e4\n    void          *_stat_chaine_prev; /* prev entry */\n    \u00fc stat_chaine;\n  void          *stat_chaine_next;            /* next entry                            */\n  void          *stat_chaine_keyl;            /* key length                            */\n  unsigned char  stat_chaine_key\u00c432\u00dc;         /* key area                              */\n  void          *stat_chaine_datal;           /* data length                           */\n  void          *stat_chaine_data;            /* data pointer                          */\n  double         stat_dec;                    /* dec conv                              */\n  double         stat_dec0;                   /* dec conv                              */\n  unsigned char  stat_mask\u00c416\u00dc;\n  unsigned char  _filler36;\n  unsigned char  _filler37\u00c48\u00dc;\n  unsigned char  _filler38;\n  unsigned char  _filler39\u00c48\u00dc;\n  unsigned char  _filler40;\n  unsigned char  _filler41\u00c432\u00dc;\n  unsigned char  _filler42;\n  void          *stat_work\u00c464\u00dc;               /* work area                             */\n  unsigned char  _filler43\u00c41024\u00dc;             /* reserved                              */\n  void          *stat___dsect_8a\u00c48\u00dc;          /* eight words                           */\n  unsigned char  stat___dsect_function\u00c416\u00dc;   /* function name                         */\n  void          *stat_prof__prof_sysa\u00c42\u00dc;     /* system profile start addr             */\n  void          *stat_prof__prof_rcva\u00c42\u00dc;     /* receiver profile start addr           */\n  void          *stat_prof__prof_liba\u00c42\u00dc;     /* library profile start addr            */\n  void          *stat_prof__prof_browse;      /* browse pointer                        */\n  unsigned char  stat_prof__prof_dsn\u00c444\u00dc;     /* profile dataset name                  */\n  unsigned char  stat_prof__prof_mem\u00c48\u00dc;      /* profile member name                   */\n  unsigned char  stat_prof__prof_ddname\u00c48\u00dc;   /* profile dd name                       */\n  unsigned char  stat_prof__prof_typ\u00c44\u00dc;      /* profile type - option                 */\n  void          *stat_prof__prof_count;       /* lu count                              */\n  unsigned char  stat_prof__prof_sys\u00c48\u00dc;      /* system profile                        */\n  unsigned char  stat_prof__prof_lib\u00c48\u00dc;      /* library profile                       */\n  unsigned char  stat_prof__prof_rcv\u00c48\u00dc;      /* application profile                   */\n  void          *stat_prof__prof_msga;        /* message pointer                       */\n  void          *statsstsssts_rdw;            /* + SAVE FOR RDWA                       */\n  void          *statsstsssts_ssobaddr;       /* + SSOB ADDR                           */\n  double         _filler44;\n  unsigned char  statsstsssts_ssob\u00c428\u00dc;       /* + SSOB                                */\n  unsigned char  _filler45\u00c44\u00dc;\n  double         _filler46;\n  unsigned char  statsstsssts_ssib\u00c436\u00dc;       /* + SSIB                                */\n  unsigned char  _filler47\u00c44\u00dc;\n  double         _filler48;\n  unsigned char  statsstsssts_ssts\u00c436\u00dc;       /* + SSTS                                */\n  unsigned char  stat_buff\u00c44096\u00dc;\n  unsigned char  _filler49\u00c44\u00dc;\n  struct \u00e4\n    unsigned char  _st_eye\u00c44\u00dc;  /* Eye catcher                           */\n    short int      _st_length;  /* Length of this structure         @P2A */\n    short int      _st_version; /* Version of this structure        @P2A */\n    \u00fc st_begin;\n  int            st_mode;                     /* File Mode, mapped by BPXYMODE         */\n  int            st_ino;                      /* File Serial Number                    */\n  int            st_dev;                      /* Device ID of the file                 */\n  int            st_nlink;                    /* Number of links                       */\n  int            st_uid;                      /* User ID of the owner of the file      */\n  int            st_gid;                      /* Group ID of the Group of the file     */\n  struct \u00e4\n    int            _st_size_h; /* First word of size  */\n    int            _st_size_l; /* Second word of size */\n    \u00fc st_size;\n  int            st_atime;                    /* Time of last access                   */\n  int            st_mtime;                    /* Time of last data modification        */\n  int            st_ctime;                    /* Time of last file status change       */\n  struct \u00e4\n    short int      _st_majornumber; /* Major number for this file, if it */\n    short int      _st_minornumber; /* Minor number for this file, if it */\n    \u00fc st_rdev;\n  int            st_auditoraudit;             /* Area for auditor audit info           */\n  int            st_useraudit;                /* Area for user audit info              */\n  int            st_blksize;                  /* File Block size                       */\n  int            st_createtime;               /* File Creation Time                    */\n  int            st_auditid\u00c44\u00dc;               /* RACF File ID for auditing             */\n  int            st_res01;\n  struct \u00e4\n    struct \u00e4\n      short int      _ft_ccsid;    /* Coded character set ID in binary @D8A */\n      unsigned char  _ft_flags\u00c42\u00dc; /* File tagging flags              @D8A  */\n      \u00fc st_filetag;\n    int            _st_res01a\u00c42\u00dc; /* reserved                         @D8A */\n    \u00fc st_charsetid;\n  struct \u00e4\n    int            _st_res02;\n    int            _st_blocks; /* Number of blocks allocated */\n    \u00fc st_blocks_d;\n  struct \u00e4\n    unsigned char  _st_opaque\u00c43\u00dc; /* Opaque attribute flags- Reserved @D6A */\n    unsigned char  _st_visible;   /* Visible attribute flags          @D6A */\n    \u00fc st_genvalue;\n  int            st_reftime;                  /* Reference time                        */\n  int            st_fid\u00c42\u00dc;                   /* File identifier                       */\n  unsigned char  st_filefmt;                  /* File Format                      @D5A */\n  unsigned char  st_fspflag2;                 /* IFSP_FLAG2 ACL support           @DAA */\n  unsigned char  st_res03\u00c42\u00dc;                 /* reserved                         @DAA */\n  int            st_ctimemsec;                /* Micro-Sec of full Ctime          @D9A */\n  unsigned char  st_seclabel\u00c48\u00dc;              /* Security Label                   @DAA */\n  unsigned char  st_res04\u00c44\u00dc;                 /* Reserved for future              @DAC */\n  int            _filler50;                   /* Reserved                         @D9A */\n  double         st_atime64;                  /* Access Time                      @D9A */\n  double         st_mtime64;                  /* Data Modification Time           @D9A */\n  double         st_ctime64;                  /* Meda-data Change Time            @D9A */\n  double         st_createtime64;             /* File Creation Time               @D9A */\n  double         st_reftime64;                /* Reference Time                   @D9A */\n  double         _filler51;                   /* Reserved                         @D9A */\n  unsigned char  st_res05\u00c416\u00dc;                /* Reserved                         @D9A */\n  \u00fc;\n\n#define statmsg__msg_msgid statmsg._statmsg__msg_msgid\n#define stat_chaine_prev   stat_chaine._stat_chaine_prev\n#define st_eye             st_begin._st_eye\n#define st_length          st_begin._st_length\n#define st_version         st_begin._st_version\n#define st_size_h          st_size._st_size_h\n#define st_size_l          st_size._st_size_l\n#define st_majornumber     st_rdev._st_majornumber\n#define st_minornumber     st_rdev._st_minornumber\n#define ft_ccsid           st_charsetid.st_filetag._ft_ccsid\n#define ft_flags           st_charsetid.st_filetag._ft_flags\n#define st_res01a          st_charsetid._st_res01a\n#define st_res02           st_blocks_d._st_res02\n#define st_blocks          st_blocks_d._st_blocks\n#define st_opaque          st_genvalue._st_opaque\n#define st_visible         st_genvalue._st_visible\n\n/* Values for field \"stat_strqee_routcode\" */\n#define stat_strqee_length     0x80\n\n/* Values for field \"stat_strqe_routcode\" */\n#define stat_strqe_length      0x80   /* dsect length                          */\n\n/* Values for field \"stat_printers_iterator\" */\n#define stat_printers_length   0x4C\n\n/* Values for field \"stat_receivers_iterator\" */\n#define stat_receivers_length  0x4C\n\n/* Values for field \"stat_jobs_iterator\" */\n#define stat_jobs_length       0x4C\n\n/* Values for field \"stat_chaine_data\" */\n#define stat_chaine_length     0x34\n\n/* Values for field \"_filler41\" */\n#define stat_mask_l            0x43\n\n/* Values for field \"stat_prof__prof_msga\" */\n#define stat_prof__prof_length 0x7C\n\n/* Values for field \"stat_buff\" */\n#define stat_buff_length       0x1000\n#define statlength             0x1F4C /* dsect length                          */\n\n/* Values for field \"ft_ccsid\" */\n#define ft_untagged            0x00   /* File has no tag                 @D8A  */\n#define ft_binarytag           0xFFFF /* File is binary data             @D8A  */\n\n/* Values for field \"ft_flags\" */\n#define ft_txtflag             0x8000 /* File is pure text data          @D8A  */\n#define ft_defertag            0x4000 /* File to be tagged at 1st write  @D8A  */\n\n/* Values for field \"st_visible\" */\n#define st_sharelib            0x10   /* Shared Library Flag              @D7A */\n#define st_noshareas           0x08   /* No shareas flag                  @D6A */\n#define st_apfauth             0x04   /* APF authorized flag              @D6A */\n#define st_progctl             0x02   /* Program controlled flag          @D6A */\n#define st_extlink             0x01   /* External Symlink                 @D6A */\n\n/* Values for field \"st_fspflag2\" */\n#define st_accessacl           0x80   /* Access Acl exists                @DAA */\n#define st_fmodelacl           0x40   /* File Model Acl exists            @DAA */\n#define st_dmodelacl           0x20   /* Directory Model Acl exists       @DAA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "BPXZOCVE": {"ttr": 8385, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ocve \u00e4\n  unsigned char  ocveeyec\u00c44\u00dc; /* eyecatcher 'OCVE'         RS1199 */\n  unsigned char  _filler1\u00c42\u00dc; /* RS1199                           */\n  short int      ocve_length; /* length OCVE               RS1199 */\n  unsigned char  _filler2\u00c44\u00dc; /* RS1199                           */\n  int            ocveopnt;    /* RS1199                           */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BPXZOCVT": {"ttr": 8427, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ocvt \u00e4\n  unsigned char  ocvteyec\u00c44\u00dc;     /* eyecatcher 'OCVT'         RS1199 */\n  unsigned char  _filler1\u00c42\u00dc;     /* RS1199                           */\n  short int      ocvt_length;     /* length OCVT               RS1199 */\n  int            ocvtocve;        /* OCVE-Pointer              RS1199 */\n  int            ocvtoext;        /* OEXT-Pointer              RS1199 */\n  int            _filler2;        /* RS1199                           */\n  int            ocvtascb1;       /* ASCB-Pointer for USS      RS1199 */\n  short int      ocvtasid;        /* ASID for USS              RS1199 */\n  unsigned char  _filler3\u00c42\u00dc;     /* RS1199                           */\n  int            _filler4;        /* RS1199                           */\n  double         ocvtstoken;      /* Kernel-Token              RS1199 */\n  int            _filler5\u00c46\u00dc;     /* RS1199                           */\n  int            ocvtascb2;       /* ASCB-Pointer for VTAM     RS1199 */\n  unsigned char  _filler6\u00c4248\u00dc;   /* ??                        RS1199 */\n  unsigned char  ocvt_stcname\u00c48\u00dc; /* RS1199                           */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BPXZOPNT": {"ttr": 8551, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct opnt \u00e4\n  unsigned char  opnteyec\u00c44\u00dc;                   /* eyecatcher 'OPNT'            RS1199    */\n  unsigned char  _filler1\u00c452\u00dc;                  /* RS1199                                 */\n  int            opnt_maxprocsystem;            /* RS1199                                 */\n  int            opnt_maxprocuser;              /* RS1199                                 */\n  int            opnt_maxuids;                  /* RS1199                                 */\n  int            opnt_maxfileproc;              /* RS1199                                 */\n  int            opnt_maxptys;                  /* RS1199                                 */\n  unsigned char  opnt_traceparm\u00c48\u00dc;             /* RS1199                                 */\n  int            opnt_maxthreadtasks;           /* RS1199                                 */\n  int            _filler2;                      /* RS1199                                 */\n  unsigned char  opnt_bpxprm\u00c48\u00dc;                /* RS1199                                 */\n  int            opnt_maxthreads;               /* RS1199                                 */\n  unsigned char  opnt_forkcopy_flag;            /* RS1199                                 */\n  unsigned char  _filler3\u00c43\u00dc;                   /* RS1199                                 */\n  unsigned char  opnt_stepliblist_length;       /* RS1199                                 */\n  unsigned char  opnt_stepliblist\u00c460\u00dc;          /* RS1199                                 */\n  unsigned char  opnt_stepliblist_unknown\u00c4195\u00dc; /* RS1199                                 */\n  int            opnt_prioritygoals;            /* RS1199                                 */\n  int            opnt_ipcmsgnids;               /* RS1199                                 */\n  int            opnt_ipcmsgqbytes;             /* RS1199                                 */\n  int            opnt_ipcmsgqmnum;              /* RS1199                                 */\n  int            opnt_ipcshmnids;               /* RS1199                                 */\n  int            opnt_ipcshmspages;             /* RS1199                                 */\n  int            opnt_ipcshmmpages;             /* RS1199                                 */\n  int            opnt_ipcshmnsegs;              /* RS1199                                 */\n  int            opnt_ipcsemnids;               /* RS0301                                 */\n  int            opnt_ipcsemnsems;              /* RS0301                                 */\n  int            opnt_ipcsemnops;               /* RS1199                                 */\n  int            opnt_maxmmaparea;              /* RS1199                                 */\n  int            opnt_maxrtys;                  /* RS1199                                 */\n  int            opnt_maxfilesize;              /* HIGHVALUE = Unlimited           RS1199 */\n  int            opnt_maxcoresize;              /* RS1199                                 */\n  int            opnt_maxassize;                /* RS1199                                 */\n  int            opnt_maxcputime;               /* RS1199                                 */\n  int            _filler4\u00c42\u00dc;                   /* RS1199                                 */\n  unsigned char  opnt_superuser\u00c48\u00dc;             /* RS1199                                 */\n  int            _filler5;                      /* RS1199                                 */\n  int            opnt_maxsharepages;            /* RS1199                                 */\n  unsigned char  opnt_ttygroup\u00c48\u00dc;              /* RS1199                                 */\n  int            _filler6;                      /* RS0800                                 */\n  int            opnt_maxqueuedsigs;            /* RS0800                                 */\n  int            _filler7;                      /* RS0800                                 */\n  unsigned char  _filler8\u00c48\u00dc;                   /* RS1199                                 */\n  int            _filler9\u00c414\u00dc;                  /* RS1199                                 */\n  unsigned char  _filler10\u00c43\u00dc;                  /* RS1199                                 */\n  unsigned char  opnt_useridalias_length;       /* RS1199                                 */\n  unsigned char  opnt_useridalias\u00c460\u00dc;          /* RS1199                                 */\n  unsigned char  opnt_useridalias_unknown\u00c4195\u00dc; /* RS1199                                 */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BPXZOTCB": {"ttr": 8533, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct otcb \u00e4\n  unsigned char  otcbid\u00c44\u00dc;              /* EBCDIC ID - OTCB                              */\n  unsigned char  otcbsp;                 /* Subpool number of this OTCB                   */\n  int            otcblen : 24;           /* Length of this OTCB                           */\n  void          *otcbptxl;               /* -> pthread parameters                         */\n  void          *otcbkser;               /* -> KSER                                       */\n  struct \u00e4\n    unsigned char  _otcbflagsb1;\n    unsigned char  _otcbflagsb2;\n    unsigned char  _otcbflagsb3;\n    unsigned char  _otcbflagsb4;\n    \u00fc otcbflags;\n  struct \u00e4\n    void          *_otcbpprt; /* -> PPRT */\n    struct \u00e4\n      short int      _otcbseqnohigherhalf; /* higher half of seq num */\n      short int      _otcbseqnolowerhalf;  /* lower half of seq num  */\n      \u00fc otcbseqno;\n    \u00fc otcbthid;\n  struct \u00e4\n    unsigned char  _otcbsigflagsb1;\n    unsigned char  _otcbsigflagsb2;\n    unsigned char  _otcbsigflagsb3;\n    unsigned char  _otcbsigflagsb4;\n    \u00fc otcbsigflags;\n  int            otcbsir2id;             /* Alarm ID set by STIMERM. Changed by           */\n  void          *otcbracgroup;           /* Pointer to RACF structure to be deleted by    */\n  void          *otcbracpasswd;          /* Pointer to RACF structure to be deleted by    */\n  struct \u00e4\n    unsigned char  _otcbcallrtmecb\u00c44\u00dc; /* Wait for termination by BpxLkLcp */\n    \u00fc otcbcommreq;\n  unsigned char  otcbptmultistatus;      /* Ptrace multi process mode status word value - */\n  struct \u00e4\n    unsigned char  _otcbflags2b1;\n    unsigned char  _otcbflags2b2;\n    unsigned char  _otcbflags2b3;\n    \u00fc otcbflags2;\n  int            otcbalrmgtyear;         /* Alarm time in seconds greater than 365 days   */\n  void          *otcbcofptr;             /* Address of CopyOnFork area                    */\n  void          *otcbdlvirb;             /* Address of RB that called Signal Delivery     */\n  int            otcbdubrbsqn;           /* Sequence number of RB that was DUBed          */\n  int            otcbregrbsqn;           /* Sequence number of RB that registered for     */\n  void          *otcbspb_;               /* Ptr to SPB. For BPXJCSS and BPXJCNS calls,    */\n  int            otcbsyscallcode;        /* System call number                            */\n  void          *otcblecb;               /* Ptr to ECB used to wait for a latch to be     */\n  struct \u00e4\n    void          *_otcbppsd; /* -> PPSD */\n    \u00fc otcbppsdptr;\n  int            otcbctwid;              /* cond_timed_wait stimerm ID                    */\n  void          *otcbstacknonsw;         /* Dynamic stack for Non-space switched          */\n  void          *otcbotim;               /* -> interval timers                            */\n  void          *otcboapb;               /* -> OAPB                                       */\n  void          *otcbptpicparmsptr;      /* Pointer to ptrace recovery environment        */\n  int            otcbpteventid;          /* Ptrace event ID, that identifies why this     */\n  void          *otcbptlclppsdptr;       /* Ptrace local Ppsd pointer                     */\n  void          *otcbmvspauseecblist;    /* Pointer to the BPXZECBL - System copy of user */\n  void          *otcbsavedscb;           /* Saved SCB addr of STAI on entry to Local      */\n  void          *otcbuecblist;           /* Pointer to the BPXZECBL - System copy of user */\n  struct \u00e4\n    int            _otcbruid; /* Real Uid      */\n    int            _otcbeuid; /* Effective Uid */\n    int            _otcbsuid; /* Saved Uid     */\n    \u00fc otcbuids;\n  void          *otcbsavedacee;          /* MRPWD saved Acee                              */\n  void          *otcbpprx;               /* Address of the Pprx, an extension of the Pprt */\n  int            otcbmrpwduid;           /* Password verified UID                         */\n  int            otcbpswbyt03;           /* Caller's PSW bytes 0-4 (Used by JCPR to setup */\n  unsigned char  otcbmrpwdusername\u00c48\u00dc;   /* Password verified userid                      */\n  void          *otcbsavedsecenv;        /* Pointer to ACEE saved by BPX1ENV for a toggle */\n  void          *otcbmvsuseridptr;       /* Pointer to userid of this thread, points to   */\n  struct \u00e4\n    int            _otcbloginnlen;    /* Task userid length                 */\n    unsigned char  _otcbloginname\u00c49\u00dc; /* Tasks userid, must be '00'x (null) */\n    \u00fc otcbloginninfo;\n  unsigned char  otcbprin2flags;         /* This field is modified by BPXPRIN1, and it is */\n  struct \u00e4\n    unsigned char  _otcbf3b1;\n    unsigned char  _otcbf3b2;\n    \u00fc otcbflags3;\n  void          *otcbthli;               /* -> Thli. This field must never change offsets */\n  void          *otcbactsctbnodeptr;     /* Active Acee SCTB node ptr, zero if ACEE is    */\n  void          *otcbtoggledsctbnodeptr; /* Toggled Acee SCTB node ptr, zero if ACEE      */\n  int            otcbpag;                /* Process Auth Groups                           */\n  struct \u00e4\n    int            _otcbrgid; /* Real Gid      */\n    int            _otcbegid; /* Effective Gid */\n    int            _otcbsgid; /* Saved Gid     */\n    \u00fc otcbgids;\n  void          *otcbracgidsptr;         /* Addr of saved group list                      */\n  unsigned char  otcbwlmetoken\u00c48\u00dc;       /* WLM Enclave token associated with the thread  */\n  int            otcbsavedgid;           /* Gid set by getpwname, used by setgid          */\n  struct \u00e4\n    int            _otcbaliasnlen;    /* Task alias length                             */\n    unsigned char  _otcbaliasname\u00c49\u00dc; /* Tasks alias, must be '00'x (null) terminated. */\n    \u00fc otcbaliasninfo;\n  unsigned char  _filler1\u00c43\u00dc;            /* Reserved, keep word bdy                       */\n  struct \u00e4\n    void          *_otcbosenvcellptr; /* Ptr to osenv environment cell element     */\n    int            _otcbosenvseqn;    /* seq number associated with the osenv cell */\n    \u00fc otcbosenvtoken;\n  int            otcbredrivetime;        /* Time to delay signal IRB                      */\n  struct \u00e4\n    void          *_otcbshlloader1dspaddr;      /* Shared Library loader data1 addr in data */\n    int            _otcbshlloader1dsppages;     /* Shared Library loader data1 len in data  */\n    int            _otcbshlloader1dspalet;      /* Shared Library loader data1 alet of data */\n    unsigned char  _otcbshlloader1dspstoken\u00c48\u00dc; /* Shared Library loader data1 stkn of      */\n    void          *_otcbshlloader2dspaddr;      /* Shared Library loader data1 addr in data */\n    int            _otcbshlloader2dsppages;     /* Shared Library loader data1 len in data  */\n    int            _otcbshlloader2dspalet;      /* Shared Library loader data1 alet of data */\n    unsigned char  _otcbshlloader2dspstoken\u00c48\u00dc; /* Shared Library loader data1 stkn of      */\n    unsigned char  _otcbshlloadertok\u00c48\u00dc;        /* Shared Library loader token len used by  */\n    \u00fc otcbshlloaderinfo;\n  int            otcbsmklatchflagcount;  /* OcvtSMKLatchCount incremented                 */\n  void          *otcbsavepprt;           /* Addr of Pprt saved during task term when      */\n  unsigned char  otcbsyscallstart\u00c48\u00dc;    /* Start Timeused Value for active syscall       */\n  void          *otcbpecbptr;            /* Prt to a PECB                                 */\n  void          *otcbsavedoapb;          /* OAPB addr saved for steplib cleanup during    */\n  unsigned char  otcbrmtoktoasb\u00c44\u00dc;      /* ResManager Token saved for job step task      */\n  void          *otcbthdwkptr;           /* Ptr to Thread Workarea                        */\n  struct \u00e4\n    short int      _otcbputbackcnt;\n    short int      _otcbputbackdlvcnt;\n    unsigned char  _otcbputbacksig;              /* This will be the last signal number that was */\n    unsigned char  _otcbnsir1footprintsextra\u00c44\u00dc; /* Copy over BPXNSIR1's                         */\n    unsigned char  _otcbnsir1footprints\u00c42\u00dc;      /* Footprints, to keep a static record of the   */\n    unsigned char  _filler2;                     /* Reserved                                     */\n    \u00fc otcbsignalpd;\n  int            otcbsutargprocuser;     /* ProcUser value for target uid of setuid       */\n  unsigned char  _filler3\u00c44\u00dc;            /* Reserved for future use                       */\n  struct \u00e4\n    unsigned char  _otcbadditionalparm1\u00c48\u00dc;\n    unsigned char  _otcbadditionalparm2\u00c48\u00dc;\n    unsigned char  _otcbadditionalparm3\u00c48\u00dc;\n    \u00fc otcbadditionalparms;\n  struct \u00e4\n    unsigned char  _otcbapplidlen; /* Length of APPLID                        */\n    unsigned char  _otcbapplid\u00c48\u00dc; /* APPLID - left justified and padded with */\n    \u00fc otcbapplid_info;\n  unsigned char  _filler4\u00c47\u00dc;            /* Reserved for future use                       */\n  unsigned char  otcb_end;               /* Make CB end on doubleword                     */\n  \u00fc;\n\n#define otcbflagsb1              otcbflags._otcbflagsb1\n#define otcbflagsb2              otcbflags._otcbflagsb2\n#define otcbflagsb3              otcbflags._otcbflagsb3\n#define otcbflagsb4              otcbflags._otcbflagsb4\n#define otcbpprt                 otcbthid._otcbpprt\n#define otcbseqnohigherhalf      otcbthid.otcbseqno._otcbseqnohigherhalf\n#define otcbseqnolowerhalf       otcbthid.otcbseqno._otcbseqnolowerhalf\n#define otcbsigflagsb1           otcbsigflags._otcbsigflagsb1\n#define otcbsigflagsb2           otcbsigflags._otcbsigflagsb2\n#define otcbsigflagsb3           otcbsigflags._otcbsigflagsb3\n#define otcbsigflagsb4           otcbsigflags._otcbsigflagsb4\n#define otcbcallrtmecb           otcbcommreq._otcbcallrtmecb\n#define otcbflags2b1             otcbflags2._otcbflags2b1\n#define otcbflags2b2             otcbflags2._otcbflags2b2\n#define otcbflags2b3             otcbflags2._otcbflags2b3\n#define otcbppsd                 otcbppsdptr._otcbppsd\n#define otcbruid                 otcbuids._otcbruid\n#define otcbeuid                 otcbuids._otcbeuid\n#define otcbsuid                 otcbuids._otcbsuid\n#define otcbloginnlen            otcbloginninfo._otcbloginnlen\n#define otcbloginname            otcbloginninfo._otcbloginname\n#define otcbf3b1                 otcbflags3._otcbf3b1\n#define otcbf3b2                 otcbflags3._otcbf3b2\n#define otcbrgid                 otcbgids._otcbrgid\n#define otcbegid                 otcbgids._otcbegid\n#define otcbsgid                 otcbgids._otcbsgid\n#define otcbaliasnlen            otcbaliasninfo._otcbaliasnlen\n#define otcbaliasname            otcbaliasninfo._otcbaliasname\n#define otcbosenvcellptr         otcbosenvtoken._otcbosenvcellptr\n#define otcbosenvseqn            otcbosenvtoken._otcbosenvseqn\n#define otcbshlloader1dspaddr    otcbshlloaderinfo._otcbshlloader1dspaddr\n#define otcbshlloader1dsppages   otcbshlloaderinfo._otcbshlloader1dsppages\n#define otcbshlloader1dspalet    otcbshlloaderinfo._otcbshlloader1dspalet\n#define otcbshlloader1dspstoken  otcbshlloaderinfo._otcbshlloader1dspstoken\n#define otcbshlloader2dspaddr    otcbshlloaderinfo._otcbshlloader2dspaddr\n#define otcbshlloader2dsppages   otcbshlloaderinfo._otcbshlloader2dsppages\n#define otcbshlloader2dspalet    otcbshlloaderinfo._otcbshlloader2dspalet\n#define otcbshlloader2dspstoken  otcbshlloaderinfo._otcbshlloader2dspstoken\n#define otcbshlloadertok         otcbshlloaderinfo._otcbshlloadertok\n#define otcbputbackcnt           otcbsignalpd._otcbputbackcnt\n#define otcbputbackdlvcnt        otcbsignalpd._otcbputbackdlvcnt\n#define otcbputbacksig           otcbsignalpd._otcbputbacksig\n#define otcbnsir1footprintsextra otcbsignalpd._otcbnsir1footprintsextra\n#define otcbnsir1footprints      otcbsignalpd._otcbnsir1footprints\n#define otcbadditionalparm1      otcbadditionalparms._otcbadditionalparm1\n#define otcbadditionalparm2      otcbadditionalparms._otcbadditionalparm2\n#define otcbadditionalparm3      otcbadditionalparms._otcbadditionalparm3\n#define otcbapplidlen            otcbapplid_info._otcbapplidlen\n#define otcbapplid               otcbapplid_info._otcbapplid\n\n/* Values for field \"otcbflagsb1\" */\n#define otcbinitialthread          0x80  /* Initial thread of a process                   */\n#define otcbinkernelcall           0x40  /* moved to PPRT                                 */\n#define otcbsleep                  0x20  /* Signal sleep() flag which is checked by       */\n#define otcbcalledkernel           0x10  /* At sometime in its life, this thread has      */\n#define otcbnoptlsir               0x08  /* Signal is being sent from the ptrace PtlSir   */\n#define otcbprocesscleanup         0x04  /* Process being torn down. /CS                  */\n#define otcbintaskterm             0x02  /* Thread is in the process of task termination. */\n#define otcbbypassracf             0x01  /* Do not do RACF check in kill() routine        */\n\n/* Values for field \"otcbflagsb2\" */\n#define otcbptexitonly             0x80  /* Thread did XAG exitonly                       */\n#define otcbthreadptexited         0x40  /* Marked Ptexited                               */\n#define otcbf_pwdsurrogate         0x20  /* Need to audit access to surrogate profile     */\n#define otcbipt                    0x10  /* Indicates this thread is or was the Initial   */\n#define otcbprocesscreator         0x08  /* 1=>Indicates the dubbing of this thread       */\n#define otcbcancelintr             0x04  /* Cancel interrupt point                        */\n#define otcbquiesceposted          0x02  /* This task posted by qut                       */\n#define otcbdubnewprocess          0x01  /* 0=>Dub as thread, 1=>Dub as process           */\n\n/* Values for field \"otcbflagsb3\" */\n#define otcbattachexec             0x80  /* attach_exec in progress                       */\n#define otcbmultiprocclp           0x40  /* 1=> Lower level processes are to be cleaned   */\n#define otcbactiveaceemanaged      0x20  /* 1=Active ACEE managed by RACF                 */\n#define otcbtoggleaceemanaged      0x10  /* 1=Toggled ACEE managed by RACF                */\n#define otcbsavedaceemanaged       0x08  /* MrPwd saved ACEE managed                      */\n#define otcbinprocessterm          0x04  /* 1=> When PRTRM is terminating a process.      */\n#define otcbtaskaceeusp            0x02  /* USP created by TLS_TASK_ACEE#                 */\n#define otcbmrpwduidset            0x01  /* OtcbMrPwdUID field set                        */\n\n/* Values for field \"otcbflagsb4\" */\n#define otcbpseudodubbed           0x80  /* Thread is a pseudo-dubbed kernel task         */\n#define otcbtasksec                0x40  /* Thread called BPX1TLS to build a task level   */\n#define otcbenclaveowner           0x20  /* Thread is an owner of a WLM Enclave           */\n#define otcbwlmemanaged            0x10  /* Enclave managed by WLM                        */\n#define otcbtaskaceeinit           0x08  /* InitUsp done for Task Level ACEE              */\n#define otcbdubtaskacee            0x04  /* 0=>Don't Dub Task Level ACEE 1=>Dub Task      */\n#define otcbptcreacee              0x02  /* 0=> No ACEE propagated on Ptcre 1=> ACEE was  */\n#define otcbprocinitacee           0x01  /* 0=> No INITACEE done during dub 1=>           */\n\n/* Values for field \"otcbpprt\" */\n#define otcblightweight            0x80  /* 1 Light weight thread                         */\n\n/* Values for field \"otcbsigflagsb1\" */\n#define otcbsigdisable             0x80  /* Signal Delivery is disabled                   */\n#define otcbsigpending             0x40  /* Signal pending flag                           */\n#define otcbtimersignal            0x20  /* SIGXCPU or SIGKILL is to be generated by the  */\n#define otcbsigalrm                0x10  /* generate in SC layer                          */\n#define otcbalrmactive             0x08  /* ALR & setitimer REAL                          */\n#define otcbignrbstate             0x04  /* Ignore RB state                               */\n#define otcbsigdump                0x02  /* Dump for terminating signal                   */\n#define otcbraisetimerirb          0x01  /* Raise() function from Timer IRB               */\n\n/* Values for field \"otcbsigflagsb2\" */\n#define otcbirbsignal              0x80  /* Signal Checker routine should recheck signals */\n#define otcbptdelayirb             0x40  /* Delay IRB for PTRACE                          */\n#define otcbsirdisable             0x20  /* Disable invocation of SIR                     */\n#define otcbcancelasync            0x10  /* Cancelation request state 0 = controlled, 1   */\n#define otcbcanceldisabled         0x08  /* Cancelation request type 0=enabled,           */\n#define otcbsetsigdisable          0x04  /* Syscall must turn on OtcbSigDisable on        */\n#define otcbctwactive              0x02  /* cond_timed_wait (BPX1CTW) is active           */\n#define otcbigndlvkey              0x01  /* Ignore Dlv key                                */\n\n/* Values for field \"otcbsigflagsb3\" */\n#define otcbcancelpending          0x80  /* Cancel pending for thrd                       */\n#define otcbptregsinusta           0x40  /* Ptrace regs/PSW are in the Usta               */\n#define otcbsigxcpu                0x20  /* SIGXCPU is to be generated by syscall layer   */\n#define otcbsigkill                0x10  /* SIGKILL is to be generated by syscall layer   */\n#define otcbsigvtalrm              0x08  /* generate in SC layer                          */\n#define otcbsigprof                0x04  /* generate in SC layer                          */\n#define otcballsigsblocked         0x02  /* All signals are blocked, the same as if       */\n#define otcbudpinkernel            0x01  /* In UDP syscall                                */\n\n/* Values for field \"otcbsigflagsb4\" */\n#define otcbvtalrmactive           0x80  /* setitimer VIRTUAL                             */\n#define otcbprofactive             0x40  /* setitimer PROF                                */\n#define otcbreturnppsd             0x20\n#define otcbcallrtm                0x10  /* CallRTM done by IR1                           */\n#define otcbnoirb                  0x08  /* Avoid Irb interrupts                          */\n#define otcbredrive                0x04  /* IRB redrive is in prog                        */\n#define otcbcputimeout             0x02  /* A terminating signal is to be generated due   */\n#define otcbdlvterm                0x01  /* This thread is terminating due to a           */\n\n/* Values for field \"otcbflags2b1\" */\n#define otcbstaxdeferred           0x80  /* Stax defer performed                          */\n#define otcblukwkey0               0x40  /* User Kernwait caller is KEY 0                 */\n#define otcbkserwaitingf           0x20  /* Is Kser waiting?                              */\n#define otcbaffinpgmrunning        0x10  /* An IPT/thread affinity program is             */\n#define otcbregsinppsd             0x08  /* User regs are in Ppsd at time of              */\n#define otcbregsinirb              0x04  /* User regs are in IRB at time of               */\n#define otcbtimedkernwait          0x02  /* Task is in Timed Kernwait                     */\n#define otcbslowpathsyscall        0x01  /* This is a slow-path syscall. User regs        */\n\n/* Values for field \"otcbflags2b2\" */\n#define otcbosenvactive            0x80  /* Task is active in the osenv                   */\n#define otcbosenvget               0x40  /* Task issued osenv_get                         */\n#define otcbosenvwlmjoin           0x20  /* Task is joined to a WLM enclave as a result   */\n#define otcbosenvsecurity          0x10  /* Security environment was saved by osenv       */\n#define otcbchkptunsafe            0x08  /* Task is checkpoint unsafe due to being in     */\n#define otcbinrstwait              0x04  /* Task is waiting for OMVS to be restarted      */\n#define otcbdorstwait              0x02  /* Fastpath syscall requests task be put in      */\n#define otcbspbupdate              0x01  /* Used for SPB/IR1 serialization                */\n\n/* Values for field \"otcbflags2b3\" */\n#define otcbdefersigs              0x80  /* Defer sigs is in effect                       */\n#define otcblatchproblem           0x40  /* Latch Cleanup Problem detected at             */\n#define otcbf2_attachedtask        0x20  /* This task has done a localspawn or            */\n#define otcbpthdforkchild          0x10  /* This child process was created via fork       */\n#define otcbuseraceeusp            0x08  /* ACEE/USP belongs to User, not created by      */\n#define otcbf2_stayclean           0x04  /* Task must stay clean                          */\n#define otcbf2_stepclpdelayed      0x02  /* Steplib cleanup delayed                       */\n#define otcbf2_openunauth          0x01  /* On fsopn, ignore auth                         */\n\n/* Values for field \"otcbf3b1\" */\n#define otcbtimerwaitintermination 0x80  /* Task cannot exit because it has               */\n#define otcbtimercancelskipped     0x40  /* Did not cancel the timer in BPXJCPR           */\n#define otcbforcecanceled          0x20  /* A CALLRTM has been scheduled for this         */\n\n/* Values for field \"otcbf3b2\" */\n#define otcbf3b2rsvd               0x03  /* Reserved - see below                          */\n\n/* Values for field \"otcb_end\" */\n#define otcb_len                   0x190\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "BPXZPRLI": {"ttr": 8669, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct prli \u00e4\n  unsigned char  prliid\u00c44\u00dc;          /* EBCDIC ID                               */\n  char           prlisp;             /* Subpool number of this Prli             */\n  int            prlilen : 24;       /* Length of this Prli                     */\n  int            prliprocessid;      /* Process ID. Used for fast getpid()      */\n  unsigned char  prlicatchermask\u00c48\u00dc; /* Mask of signals that may be caught      */\n  void          *prlioapb;           /* Oapb Addr of this process               */\n  unsigned char  prliflag;           /* Flag byte                               */\n  unsigned char  prlimagicnumber\u00c42\u00dc; /* Magic Number Characters                 */\n  unsigned char  _filler1;           /* Reserved                                */\n  int            prlil16jrc;         /* Return code area for L16J FastCGI @P1M  */\n  void          *prliruid;           /* Real Uid addr                           */\n  void          *prlieuid;           /* Effective Uid addr                      */\n  void          *prlirgid;           /* Real Gid addr                           */\n  void          *prliegid;           /* Effective gid                           */\n  void          *prliprocgrpid;      /* Process Group ID addr                   */\n  void          *prliparentpid;      /* Parent Process ID addr                  */\n  void          *prlithreadtasksmax; /* SC_THREAD_TASK_MAX_NP value addr   @D5A */\n  void          *prlithreadsmax;     /* SC_THREADS_MAX_NP value address    @D5A */\n  void          *prlichildmax;       /* SC_CHILD_MAX value addr            @D5A */\n  void          *prliopenmax;        /* SC_OPEN_MAX value address          @D5A */\n  void          *prlimmapmemmax;     /* SC_MMAP_MEM_MAX value address      @D5A */\n  unsigned char  prliend;            /* End of Prli                             */\n  \u00fc;\n\n/* Values for field \"prliflag\" */\n#define prlif1med         0x80       /* Process is medium weight local @01A              */\n#define prlif1dissig      0x40       /* Disable signal delivery        @D4A              */\n#define prlisysconfok     0x20       /* SC_ fields valid. Note, that                     */\n#define prlif1termt       0x10       /* Terminate threads               @02A             */\n\n/* Values for field \"prliend\" */\n#define prli_id           0xD7D9D3C9 /* Control Block Acronym                            */\n#define prli_sp           230        /* Subpool for the Prli                             */\n#define prli_len          0x4C\n#define sighup_           1          /* Hangup detected on controlling terminal          */\n#define sigint_           2          /* Interactive attention                            */\n#define sigabrt_          3          /* Abnormal termination                             */\n#define sigill_           4          /* Detection of an incorrect hardware instruction   */\n#define sigpoll_          5          /* Pollable event                                   */\n#define sigurg_           6          /* High bandwidth data is available at a socket     */\n#define sigfpe_           8          /* Erroneous arithmetic operation, such as division */\n#define sigkill_          9          /* Termination (cannot be caught or ignored)        */\n#define sigbus_           10         /* Bus error                                        */\n#define sigsegv_          11         /* Detection of an incorrect memory reference       */\n#define sigsys_           12         /* Bad System Call                                  */\n#define sigpipe_          13         /* Write on a pipe with no readers                  */\n#define sigalrm_          14         /* Timeout                                          */\n#define sigterm_          15         /* Termination                                      */\n#define sigusr1_          16         /* Reserved as application-defined signal 1         */\n#define sigusr2_          17         /* Reserved as application-defined signal 2         */\n#define sigabnd_          18         /* Abend                                            */\n#define sigquit_          24         /* Interactive termination                          */\n#define sigtrap_          26         /* Trap used by the ptrace call                     */\n#define sigxcpu_          29         /* CPU time limit exceeded                          */\n#define sigxfsz_          30         /* File size limit exceeded                         */\n#define sigvtalrm_        31         /* Virtual timer expired                            */\n#define sigprof_          32         /* Profiling timer expired                          */\n#define sigdanger_        33         /* Shutdown Imminent                           @D9A */\n#define sigdce_           38         /* Reserved for exclusive use by DCE                */\n#define signull_          0          /* Null - no signal sent                            */\n#define sigchld_          20         /* Child process terminated or stopped              */\n#define sigio_            23         /* Completion of input or output                    */\n#define sigioer_          27         /* Input or Output Error                            */\n#define sigwinch_         28         /* Change size of window                            */\n#define sigdump_          39         /* Take a SYSMDUMP                             @D8A */\n#define sigstop_          7          /* Stop (cannot be caught or ignored)               */\n#define sigttin_          21         /* Read from a control terminal attempted by a      */\n#define sigttou_          22         /* Write from a control terminal attempted by a     */\n#define sigtstp_          25         /* Interactive stop                                 */\n#define sigthstop_        34         /* Thread stop (cannot be caught or blocked or      */\n#define sigcont_          19         /* Continue if stopped                              */\n#define sigthcont_        35         /* Thread continue (cannot be caught or blocked or  */\n#define sig_dfl_          0          /* Default signal action                            */\n#define sig_ign_          1          /* Ignore signal action                             */\n#define sa_flags_dft_     0x00       /* Default sa_flags                                 */\n#define sa_nocldstop_     0x80000000 /* No SIGCHLD when children stop                    */\n#define sa_old_style_     0x40000000 /* Old style signal() function                      */\n#define sa_onstack_       0x20000000 /* Deliver on alternate stack     @D5A              */\n#define sa_resethand_     0x10000000 /* Reset action on delivery       @D5A              */\n#define sa_restart_       0x8000000  /* Restart interruptible funcs    @D5A              */\n#define sa_siginfo_       0x4000000  /* Pass siginfo to catcher        @D5A              */\n#define sa_nocldwait_     0x2000000  /* Don't create zombie on exit    @D5A              */\n#define sa_nodefer_       0x1000000  /* Don't block signal on delivery @D5A              */\n#define sa_ignore_        0x01       /* Act as though sa_handler contained               */\n#define sig_block_        0          /* Block signals set on in New_signal_mask          */\n#define sig_unblock_      1          /* Unblock signals set on in New_signal_mask        */\n#define sig_setmask_      2          /* Set signal mask to New_signal_mask               */\n#define sig_flags_dft_    0x00       /* Default options                 @D5A             */\n#define sig_ptracebypass_ 0x8000     /* Bypass ptrace processing        @D5A             */\n#define sig_kernsicode_   0x4000     /* OpenMVS kernel set si_code      @D5A             */\n#define sig_applsicode_   0x2000     /* Application set si_code         @D5A             */\n#define sig_conscancel_   0x1000     /* Console (MODIFY) cancel thread  @D7A             */\n#define ill_illopc_       11         /* Illegal opcode                        @D5A       */\n#define ill_illopn_       12         /* Illegal operand                       @D5A       */\n#define ill_illadr_       13         /* Illegal addressing mode               @D5A       */\n#define ill_illtrp_       14         /* Illegal trap                          @D5A       */\n#define ill_prvopc_       15         /* Privileged opcode                     @D5A       */\n#define ill_prvreg_       16         /* Privileged register                   @D5A       */\n#define ill_coproc_       17         /* Coprocessor error                     @D5A       */\n#define ill_badstk_       18         /* Internal stack error                  @D5A       */\n#define ill_execute_      19         /* Execute exception                     @D6A       */\n#define ill_illspec_      20         /* Specification exception               @D6A       */\n#define fpe_intdiv_       31         /* Integer divide by zero                @D5A       */\n#define fpe_intovf_       32         /* Integer overflow                      @D5A       */\n#define fpe_fltdiv_       33         /* Floating point divide by zero         @D5A       */\n#define fpe_fltovf_       34         /* Floating point overflow               @D5A       */\n#define fpe_fltund_       35         /* Floating point underflow              @D5A       */\n#define fpe_fltres_       36         /* Floating point inexact result         @D5A       */\n#define fpe_fltinv_       37         /* Invalid floating point operation      @D5A       */\n#define fpe_fltsub_       38         /* Subscript out of range                @D5A       */\n#define fpe_fltsig_       39         /* Floating point significance exception @D6A       */\n#define fpe_decdata_      40         /* Decimal data exception                @D6A       */\n#define fpe_decdiv_       41         /* Decimal divide by zero                @D6A       */\n#define fpe_decovf_       42         /* Decimal overflow                      @D6A       */\n#define fpe_unkwn_        43         /* Undetermined exception                @D6A       */\n#define segv_maperr_      51         /* Address not mapped to object          @D5A       */\n#define segv_accerr_      52         /* Invalid permissions for mapped object @D5A       */\n#define segv_protect_     53         /* Invalid key access                    @D6A       */\n#define segv_address_     54         /* Invalid address                       @D6A       */\n#define bus_adraln_       71         /* Invalid address alignment             @D5A       */\n#define bus_adrerr_       72         /* Non-existent physical address         @D5A       */\n#define bus_objerr_       73         /* Object specific hardware error        @D5A       */\n#define trap_brkpt_       91         /* Process breakpoint                    @D5A       */\n#define trap_trace_       92         /* Process trace trap                    @D5A       */\n#define cld_exited_       101        /* Child has exited                      @D5A       */\n#define cld_killed_       102        /* Child was killed                      @D5A       */\n#define cld_dumped_       103        /* Child was terminated abnormally       @D5A       */\n#define cld_trapped_      104        /* Traced child has trapped              @D5A       */\n#define cld_stopped_      105        /* Child has stopped                     @D5A       */\n#define cld_continued_    106        /* Stopped child was continued           @D5A       */\n#define poll_in_          111        /* Data input available                  @D5A       */\n#define poll_out_         112        /* Output buffers available              @D5A       */\n#define poll_msg_         113        /* Input message available               @D5A       */\n#define poll_err_         114        /* I/O error                             @D5A       */\n#define poll_pri_         115        /* High priority input available         @D5A       */\n#define poll_hup_         116        /* Device disconnected                   @D5A       */\n#define abnd_real_        170        /* Abend Real                            @P5A       */\n#define si_asyncio_       175        /* Completion of an asynchronous I/O     @P6A       */\n#define si_queue_         176        /* Signal sent by sigqueue()             @P6A       */\n#define sig_no_timeout    0x7FFFFFFF /* @P6A                                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "BPXZTHLI": {"ttr": 8227, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct thli \u00e4\n  unsigned char  thliid\u00c44\u00dc;           /* EBCDIC ID - Thli                              */\n  unsigned char  thlisp;              /* Subpool number of this Thli                   */\n  int            thlilen : 24;        /* Length of this Thli                           */\n  struct \u00e4\n    unsigned char  _thliflagb1;\n    unsigned char  _thliflagb2;\n    unsigned char  _thliflagb3;\n    unsigned char  _filler1;\n    \u00fc thliflags;\n  int            thlippsd;            /* Address of Ppsd                               */\n  unsigned char  thlisigmask\u00c48\u00dc;      /* Signal mask. Primarliy set by sigprocmask().  */\n  void          *thliprli;            /* -> Prli. Process related information          */\n  void          *thliworkptr;         /* -> To user work area specified on             */\n  int            thlicomecb;          /* User communication ECB                        */\n  struct \u00e4\n    unsigned char  _thlicomflagsb1; /* reserved          */\n    unsigned char  _thlicomflagsb2; /* reserved          */\n    unsigned char  _thlicomflagsb3; /* reserved for user */\n    unsigned char  _thlicomflagsb4;\n    \u00fc thlicomflags;\n  unsigned char  thlikey;             /* PSW key of Thli control block. The key is in  */\n  unsigned char  thliip_len;          /* Length in bytes of ThliIP                     */\n  unsigned char  thliflags2;          /* Flag Byte                                     */\n  unsigned char  thliexecparmnum;     /* Number of parms being passed in exec style    */\n  struct \u00e4\n    unsigned int   _filler2 : 30;\n    \u00fc thlitimerecb;\n  int            thliaspirbecb;       /* ECB posted when aio done                      */\n  void          *thlijava;            /* JAVA thread control block address. *** DO NOT */\n  unsigned char  thliip_\u00c416\u00dc;         /* IP@ stored by app left justified              */\n  struct \u00e4\n    unsigned char  _thlisecs\u00c44\u00dc;  /* Seconds to wait for event     */\n    unsigned char  _thlinanos\u00c44\u00dc; /* Nanoseconds to wait for event */\n    \u00fc thlitimeout;\n  short int      thliccsid;           /* Program character set Id for filesystem       */\n  unsigned char  thliapplidlen;       /* Len of string in ThliAppid ignored if 0 or >8 */\n  unsigned char  thlisrmflags;        /* SRM flags Ownership: SRM                      */\n  unsigned char  thlishmdumpprio;     /* Dump priority assigned to shared memory       */\n  unsigned char  _filler3\u00c43\u00dc;         /* Reserved                                      */\n  unsigned char  thliworkptr64\u00c48\u00dc;    /* -> To user work area specified on             */\n  struct \u00e4\n    unsigned char  _thliparenttkn\u00c44\u00dc; /* parents IARV64 user token */\n    unsigned char  _thlichildtkn\u00c44\u00dc;  /* token assigned to child   */\n    \u00fc thliutokeninfo;\n  int            thliretcode;         /* Failing retcode from CPR                      */\n  int            thlirsncode;         /* Failing rsncode from CPR                      */\n  unsigned char  thliapplid\u00c48\u00dc;       /* Applid passed for ptsec, and __passwd after   */\n  unsigned char  _filler4\u00c44\u00dc;         /* Reserved                                      */\n  int            thliep_functioncode;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler5\u00c424\u00dc;\n        \u00fc thliextendedparmarea;\n      \u00fc thliextenededparms;\n    struct \u00e4\n      unsigned char  _thliep_applidlen;\n      unsigned char  _thliep_applid\u00c48\u00dc;\n      unsigned char  _filler6\u00c415\u00dc;\n      \u00fc thliextendedapplparms;\n    struct \u00e4\n      int            _thliep_gidnamelen;\n      unsigned char  _thliep_gidname\u00c48\u00dc;\n      int            _thliep_gidlen;\n      int            _thliep_gid;\n      int            _thliep_groupcount;\n      \u00fc thliextendedgidname;\n    \u00fc _thli_union1;\n  unsigned char  _filler7\u00c420\u00dc;        /* reserved                                      */\n  unsigned char  thliend;             /* End of Thli                                   */\n  \u00fc;\n\n#define thliflagb1        thliflags._thliflagb1\n#define thliflagb2        thliflags._thliflagb2\n#define thliflagb3        thliflags._thliflagb3\n#define thlicomflagsb1    thlicomflags._thlicomflagsb1\n#define thlicomflagsb2    thlicomflags._thlicomflagsb2\n#define thlicomflagsb3    thlicomflags._thlicomflagsb3\n#define thlicomflagsb4    thlicomflags._thlicomflagsb4\n#define thlisecs          thlitimeout._thlisecs\n#define thlinanos         thlitimeout._thlinanos\n#define thliparenttkn     thliutokeninfo._thliparenttkn\n#define thlichildtkn      thliutokeninfo._thlichildtkn\n#define thliep_applidlen  _thli_union1.thliextendedapplparms._thliep_applidlen\n#define thliep_applid     _thli_union1.thliextendedapplparms._thliep_applid\n#define thliep_gidnamelen _thli_union1.thliextendedgidname._thliep_gidnamelen\n#define thliep_gidname    _thli_union1.thliextendedgidname._thliep_gidname\n#define thliep_gidlen     _thli_union1.thliextendedgidname._thliep_gidlen\n#define thliep_gid        _thli_union1.thliextendedgidname._thliep_gid\n#define thliep_groupcount _thli_union1.thliextendedgidname._thliep_groupcount\n\n/* Values for field \"thliflagb1\" */\n#define thlisigpending      0x80       /* Signal pending flag                           */\n#define thlicanceldisabled  0x40       /* Cancel request type 0=enabled, 1=disabled     */\n#define thlicancelpending   0x20       /* Cancel pending for thread                     */\n#define thlicancelasync     0x10       /* Cancelation request state 0 = controlled, 1   */\n#define thliiteratesir      0x08       /* Use back door signal dlv 0 = Sir can exit 1 = */\n#define thlinosig           0x04       /* Suppress signal generation for this socket    */\n#define thlitimeoutset      0x02       /* Kernel Time Out Service requested             */\n#define thlitimerpopped     0x01       /* Kernel Time Out Service timer popped          */\n\n/* Values for field \"thliflagb2\" */\n#define thliptqtimeout      0x80       /* If on, invokers of the BPX1PTQ call will      */\n#define thlifreezestop      0x40       /* Thread has been frozen via Status Stop        */\n#define thlidefersignals    0x20       /* Defer signals for user                        */\n#define thlipostanddefer    0x10       /* Post regardless of key defer delivery until   */\n#define thlitcbexitperc     0x08       /* Set by application to allow abends in         */\n#define thliirbnoretry      0x04       /* Set by NSSIR to indicate the calling IRB is   */\n#define thlisigirbabend     0x02       /* Abend on sigkill regardless of state          */\n#define thliuseworkptr64    0x01\n\n/* Values for field \"thliflagb3\" */\n#define thliforkacctg       0x80       /* Child accounting data based on setuid         */\n#define thlipropauth        0x40       /* Propagate JSCBAUTH to child on fork           */\n#define thliundubcalleronly 0x20       /* mvsprocclp should cleanup caller's            */\n\n/* Values for field \"thlicomecb\" */\n#define thlicomecbwait      0x80       /* ECB wait bit                                  */\n#define thlicomecbpost      0x40       /* ECB post bit                                  */\n\n/* Values for field \"thlicomflagsb3\" */\n#define thlicomflagsu0      0x80       /* reserved for user                             */\n#define thlicomflagsu1      0x40       /* reserved for user                             */\n#define thlicomflagsu2      0x20       /* reserved for user                             */\n#define thlicomflagsu3      0x10       /* reserved for user                             */\n#define thlicomflagsu4      0x08       /* reserved for user                             */\n#define thlicomflagsu5      0x04       /* reserved for user                             */\n#define thlicomflagsu6      0x02       /* reserved for user                             */\n#define thlicomflagsu7      0x01       /* reserved for user                             */\n\n/* Values for field \"thlicomflagsb4\" */\n#define thliwillfreezeme    0x08       /* LE will issue FreezeMe for this task          */\n#define thlifrozen          0x04       /* BPX1PQG freeze request has been issued        */\n#define thlisigposted       0x02       /* User posted due to signal                     */\n#define thlisigwait         0x01       /* User wants ECB posted when a signal will be   */\n\n/* Values for field \"thliflags2\" */\n#define thlif2_setappl      0x80       /* Set RACROUTE APPL parm with JOBNAME           */\n#define thlicvton           0x40       /* Activates auto conversion for this thread     */\n#define thlicvtoff          0x20       /* Deactivates auto conversion for this          */\n\n/* Values for field \"thlitimerecb\" */\n#define thlitimerecbwait    0x80       /* ECB wait bit                                  */\n#define thlitimerecbpost    0x40       /* ECB post bit                                  */\n\n/* Values for field \"thliaspirbecb\" */\n#define thliaspirbwait      0x80       /* Wait bit                                      */\n#define thliaspirbpost      0x40       /* Post bit                                      */\n\n/* Values for field \"thlisrmflags\" */\n#define thlivcmoverride     0x80       /* This bit indicates that this unit of work     */\n\n/* Values for field \"thliend\" */\n#define thliep_applset      1\n#define thliep_gidnameset   3\n#define thli_id             0xE3C8D3C9 /* Control Block Acronym                         */\n#define thli_len            172        /* Length of Thli                                */\n#define thli_sp             230        /* Subpool for the Thli                          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "BUFFSYS": {"ttr": 8289, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _BUFFSYS\n#define _BUFFSYS\n\n#include \"mvsbase.hpp\"\n\n\nclass rFILE;\nclass FILE;\nclass STRING;\nclass mERROR;\nclass RBUFF;\nclass LBUFF;\n\n#define MAXLBUFF 32760\n#define MAXBLOCKSIZE 32760\n#define MAXRECLEN   32756\n\n#ifndef longEOF\n#define longEOF \"\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\"\n#endif\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nclass BUFF\n\u00e4\nprotected:\nchar * buff ;         // buff pointer\nint    initlength;    // init length\nint    length;        // length\nint    offset;        // actual offset\nint    remainder;     // remainder\nlong   fileposition;  // file position\npublic:\nenum BUFF_STATUS \u00e4 empty , full, underflow , overflow ,  ok \u00fc;\nBUFF();\nBUFF(int);\nBUFF(const BUFF&);\n\u00df BUFF();\n\nBUFF& operator=(const BUFF &);\noperator char *()\u00e4return buff;\u00fc\n\nint writeIn(const char *,int );\nint readOut(char * , int l);\nint getLength()\u00e4return length;\u00fc\nint getOffset()\u00e4return offset;\u00fc\nint getRemainder()\u00e4return remainder;\u00fc\nint getRestSize()\u00e4return initlength-offset;\u00fc\nint getFilePosition()\u00e4return fileposition+offset;\u00fc\nBUFF_STATUS  getStatus()\u00e4return status;\u00fc\n\nint  isEmpty()\u00e4return status == empty;\u00fc\nint  isFull()\u00e4return status == full;\u00fc\nint  isUnderflow()\u00e4return status == underflow;\u00fc\nint  isOverflow()\u00e4return status == overflow;\u00fc\nint  isOk()\u00e4return status == ok;\u00fc\nvoid setOverflow() \u00e4 status = overflow; \u00fc\n\nint store(char);\nint store(short);\nint store(const char *,int);\nint store(short,char,char);\n\nchar * retrieve(int);\nshort  retrieveShort();\nchar   retrieveChar();\n\nvoid reset();\nvoid clear();\n\nvirtual int In(char = 0)=0;\nvirtual int Out(char = 0)=0;\nprotected:\nBUFF_STATUS  status;       //\n\u00fc;\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nclass LBUFF: public BUFF,\n    public mERROR\n\u00e4\n\nprivate:\nFILE * file;\nRBUFF * rb;\nint  status;\nchar spanflag;\npublic:\nLBUFF(FILE *,int );\n\u00dfLBUFF();\n\nvoid setRBUFF();\n\nint In(char = 0);\nint Out(char = 0);\nint BOut(int);\n\u00fc;\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nclass RBUFF: public BUFF,\n    public mERROR\n\n\u00e4\nprivate:\nFILE  *   file;\nrFILE *   rfile;\nLBUFF *  lb;\nSTRING   recordkey;\nint      recordnumber;\nint      keylength;\npublic:\nRBUFF(FILE *,int);\n\u00dfRBUFF();\nvoid setLBUFF();\nint In(char = 0);\nint Out(char = 0);\nint delMember();\n\nint findNext();\n\nprivate:\nvoid setkey(const STRING & , int );\nvoid setkey(int );\nint  isTheNext();\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALJESI": {"ttr": 8373, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/caljesi.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_CSTDIO\n#define INCLUDE_CSTDIO\n\n#define  DLLDEF_HPP_PROTO\n#include \"defjesi.hpp\"\n#undef  DLLDEF_HPP_PROTO\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CASMIF": {"ttr": 8115, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/casmif.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_CASMIF\n#define INCLUDE_CASMIF\n\n#if defined(ISIS_PF_MU) == 1 ]] defined(ISIS_PF_MI) == 1\n#define DEFINE_ENCLAVESRB(n) \u00d6\n\tpMvsInterface n;\n#define ENTER_ENCLAVESRB(n)  if (MvsInterface::zIIP) \u00d6\n\u00e4printf(\" Enter %s %d\u00d6n\",__FILE__,__LINE__);\tn =\tmvs()->enterSrb();\u00fc\n#define EXIT_ENCLAVESRB(n)  if (MvsInterface::zIIP) \u00d6\n\u00e4\tn->exitSrb(); printf(\" Exit %s %d\u00d6n\",__FILE__,__LINE__);\u00fc\n\n\n#define ASM_OPER_QUEUE \"ASMOPERQ\"\n#define ASM_OPER_SECONDS    10\n#define ASM_OPER_DESCRIPTOR 28\n\n#include \"asmif.hpp\"\n#include <stdio.h>\n#include <stdlib.h>\n\nclass   SUBTASK;\nclass   MvsInterface;\ntypedef MvsInterface * pMvsInterface;\ntypedef struct asmdsect ASM;\ntypedef ASM * pasm;\ntypedef unsigned long pcsul;\ntypedef unsigned long handle;\ntypedef unsigned long pcshandle;\ntypedef long pcsl;\nextern \"C\" typedef int CFUNC(void *);\nMvsInterface * mvs();\n#ifndef PSA_CONST\n#define PSA_CONST\nconst  unsigned PSATOLD = 0x21c;\nconst  unsigned PSAAOLD = 0x224;\nconst  unsigned TCBFSA  = 0x70/4;\nconst  unsigned TCBUSER = 0xA8;\nconst  unsigned tcbuser = 0xa8;\nconst  unsigned SAVEr1 =  0x18/4;\nstatic unsigned POSTcode = 0x40000000;\nstatic unsigned WAITcode = 0x80000000;\nstatic unsigned offPostWait = 0x3fffffff;\n#endif\nconst  unsigned long  CICS_NULL= 0xff000000;\nconst  unsigned long  LOW_PRIORITY  = 1;\nconst  unsigned long  RUN_PRIORITY  = 15;\nconst  unsigned long  HIGH_PRIORITY = 255;\n\n#ifndef SUBRUN_INCLUDE\n\n\n#if defined(MEM_SUPPORT)\n#ifndef IF_SASC_REPLACE_NEW_DELETE\n#define IF_SASC_REPLACE_NEW_DELETE\n#endif\nextern void * asmm;\nISIS_EXT_ASM void *  ASMMINI(size_t,size_t);\nISIS_EXT_ASM void *  ASMMALL(size_t, void *);\nISIS_EXT_ASM void    ASMMFRE(void *, void *);\nISIS_EXT_ASM void    ASMMTER(void *);\n#define ASMM_MAX 4*1024*1024\n#define ASMM_MIN  128*1024\n\nvoid * OwnMalloc(size_t s)\n\t\u00e4\n\tif ( asmm == 0 ) asmm = ASMMINI(ASMM_MAX,ASMM_MIN);\n\treturn (ASMMALL(s,asmm));\n\t\u00fc\n\nvoid OwnFree(void * s)\n\t\u00e4\n\tASMFREE(s,asmm);\n\t\u00fc\n\nvoid * OwnRealloc(void *, size_t);\n#endif\n\n\n#ifndef TMsg\n#define TMsg( n ) \u00d6\n\tMsg( n +2 )<<(void * )(::mvs()->GetTCB())<<(void *)_eibptr\n#endif\n\n#ifndef SMsg\n#define SMsg( n ) \u00d6\n\tMsg( n +1 )<<(int)(::mvs()->GetTCB())\n#endif\n\n#ifndef TRACE\n#define TRACE( c , t ) \u00d6\n\tif ( GlobalTraceFlag >= c ) \u00d6\n\t\u00e4 MsgEnq();::mvs()->trace( t );MsgDeq();\u00fc\n\n#define TRACEDUMP( c , t , p ,l ) \u00d6\n\tif ( GlobalTraceFlag >= c ) \u00d6\n\t\u00e4 MsgEnq();::mvs()->tracedump( t , p , l );MsgDeq();\u00fc\n#endif\n\n#define mytcb (void *)(::mvs()->GetTCB())\n#define ZIIP_MAJOR  \"ZIIP_MAJ\"\n#define ZIIP_MINOR  \"ZIIP_MIN\"\nclass MvsInterface\u00e4\nprotected:\n\tpcsul wt\u00c44\u00dc;\n\tchar  jobname\u00c49\u00dc;\n\tchar  programname\u00c49\u00dc;\n\tint  rc;\n\tint   reason;\n\tint   critical;\n\tbool  srb;\n\tpasm  pASM;\n\tFILE  * file;\npublic:\n\t//szm\n\tstatic bool zIIP;\n\tstatic pcsul wlmEnclave;\n\tstatic int initEnclave();\n\n\tinline pMvsInterface enterSrb()\n\t\t\u00e4\n\t\tif (wlmEnclave==0)\n\t\t\tinitEnclave();\n\t\tif (|srb)\n\t\t\tSrb();\n\t\treturn this;\n\t\t\u00fc\n\n\tinline int exitSrb()\n\t\t\u00e4\n\t\tif (srb)\n\t\t\t\u00e4\n\t\t\tSrb();\n\t\t\t\u00fc\n\t\treturn 1;\n\t\t\u00fc\n\t//szm\n\n\tMvsInterface();\n\tvirtual \u00dfMvsInterface();\n\tvirtual pcsul GetTCB();                // get actual TCB address\n\tvirtual pcsul GetASCB();               // get actual ASCB address\n\tvirtual int CheckASCB(pcsul);          // check ASCB if valid\n\tvirtual pcsul GetToken(char *);        // Get TOKEN\n\tvirtual pcsul CreateToken(char *,pcsul *);//Create token\n\tvirtual void DeleteToken(char*);       // delete token\n\tvirtual int WaitEcb(pcsul,void *,void * = 0, void * =0,void * =0);\n\tvirtual int PostEcb(void *,pcsul=0);   // post event\n\tvirtual int Enq(char *,int);           // Exc Enq with minorname an    d max wait\n\tvirtual int Deq(char *);               // Deq\n\tvirtual void Chap(pcsul,int);          // change relative priority\n\tvirtual pcsul Attach(char *,char **,pcsul); // start subtask\n\tvirtual void Detach(pcsul);            // Detach Subtask\n\tvirtual void Sleep(int);               // Sleep - task wait\n\tvirtual int  Oper(char *,const size_t);// Oper comm\n\tvirtual void Wto(const char *,const int= ASM_OPER_DESCRIPTOR);//Wto\n\tvirtual void * Malloc(size_t);\n\tvirtual void Free(void *);\n\tvirtual int  Svc(int,void *);\n\tvirtual int  AttachMvs(const char *,const char *);\n\tvirtual void Clock(void *);\n\tvirtual void Timeused(void *);           //szm 20050301used CPU time\n\tvirtual int  Tdump(const char *,const char *,int); //szm200503265 TDUMP\n\tvirtual int  LoggerOpen(const char *);   //szm20051118 logger support\n\tvirtual int  Logger(const char *,size_t = 0);\n\tvirtual int  LoggerClose();\n\t//virtual int  BrowseLogger(const char *&,size_t&,int=0,int = 0); //szm\n\tvirtual int  BrowseLogger(const char * & addr,size_t *  & length,int direction,int all,char * date_time);\n\tvirtual int  VtocOpen(const char * ddname,const char * mask,char * dscb);\n\tvirtual int  Vtoc(char * dscb);\n\tvirtual int  VtocClose();\n\tvirtual int  Srb();\n\tvirtual int  Wlm(const char * =0,const char * =0);\n\tvirtual int  Obtain(const char * dsn, const char * volser,char * dscb);\n\tvirtual int Testauth();\n\tvirtual int Diagnose(int,void *);\n\tvirtual int Vsmlist(void *,void *,int);\n\tvirtual int  TCPCALL(int,void * =0, void * =0, void * =0, void * =0,\n\t\tvoid * =0, void * =0, void * =0, void * =0);\n\tchar* GetJobName()\u00e4return jobname;\u00fc\n\tchar* GetProgramName()\u00e4return programname;\u00fc\n\tvoid   trace(char *);\n\tvoid   tracedump(char *,void *,int);\n\tvoid   tracedump(char * t , const void * a,int l)\n\t\t\u00e4tracedump(t,(void *)a,l);\u00fc\n\tvoid   diag(const char * a)\n\t\t\u00e4\n\t\tprintf(\" %s function rc:%d reason:%d\u00d6n\",a,rc,reason);\n\t\tprintf(\"    retval:%d retcode:%d reason:%8.8x\u00d6n\",pASM->asm_bpx1_retval,pASM->asm_bpx1_retcode,pASM->asm_bpx1_rsncode);\n\t\t\u00fc\n\tvoid   extractOper(char *);\n\tvirtual int EnterCritical() \u00e4return 0;\u00fc        //enter critical section\n\tvirtual int LeaveCritical()\u00e4return 0;\u00fc         //leave critical\n\tvirtual pcsul GetECB()\u00e4return 0;\u00fc              //get a local ECB\n\tvirtual pcsul FreeECB(void *)\u00e4return 0;\u00fc       //free a local ECB\n\tvirtual int WaitEvent(pcsul,int)\u00e4return 0;\u00fc    //wait for the ECB\n\tvirtual int PostEvent(pcsul)\u00e4return 0;\u00fc        //post event with\n\tvirtual int ResetEvent(pcsul)\u00e4return 0;\u00fc       //clear ECB post\n\tvirtual int Select(pcsul,void *,void *,void *, void *);// select BPX1\n\tvirtual int ConnectShmem(pcsul,pcsul,int)\u00e4return 0;\u00fc//connect\n\tvirtual int DisconnectShmem(pcsul)\u00e4return 0;\u00fc  //disconnect\n\tvirtual pcsul AllocatePages(int)\u00e4return 0;\u00fc    //allocate pages SHMEM\n\tvirtual int FreePages(pcsul,int)\u00e4return 0 ;\u00fc   //free pages\n\tvirtual int getReasonCode()\u00e4return reason;\u00fc  //szm20071005 get back reason code\n\tvirtual pasm getpasm()\n\t\u00e4\n\t\treturn pASM;\n\t\u00fc\nprotected:\n\tint  CASMIF(int,\n\t\tvoid * = 0 ,void * = 0 ,void * = 0 ,void * = 0,\n\t\tvoid * = 0 ,void * = 0 ,void * = 0 ,void * = 0);\n\tint check(int,char *,char * );\n\tint check(int,int ,char * );\n\t\u00fc;\n\nlong long clock_mvs(); //szm\nint  tdump(const char *,const char *,int=0); //szm\nint  mvsReasonCode();  //szm20071005 get back reason code\n\nint            MsgEnq();\nint            MsgDeq();\nint            isCics();\nextern         int GlobalTraceFlag;\nextern         int GlobalCicsFlag;\n\n#endif                             // SUBRUN_INCLUDE\n\n//KV\n#if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU)\n#if defined(__alignmem)==0\n#define __alignmem\n#endif\n#endif\n\n__alignmem class SyncVar\n\t\u00e4\n\tprivate:\n\t\tpcsul var;\n\t\tpcsul wait;\n\t\tpcsul ecb;\n\tpublic:\n\t\tSyncVar(pcsul = 24*60*60*1000);\n\t\tSyncVar(const SyncVar&);\n\t\t\u00dfSyncVar();\n\t\tSyncVar& operator=(pcsul);\n\t\toperator int();\n\t\tfriend pcsul waitSyncVar(SyncVar&);\n\t\tfriend pcsul waitSyncVars(SyncVar&,SyncVar&);\n\t\u00fc;\n\npcsul waitSyncVar(SyncVar&);\npcsul waitSyncVars(SyncVar&,SyncVar&);\n\n#define MAXSECOND  359999\n#define TWAMAXECB  512\n\n#if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU)\n\n#define __Tjoin(x,y)  x ## y\n#define __ENQ_E 0\n#define __ENQ_S 0x80\n#define __ENQ_STEP 0\n#define __ENQ_SYSTEM 0x40\n#define __ENQ_SYSTEMS 0x48\n#define __ENQ_RET_NONE 0\n#define __ENQ_RET_HAVE 1\n#define __ENQ_RET_CHNG 2\n#define __ENQ_RET_USE 3\n#define __ENQ_RET_TEST 7\n#define __DEQ_RET_NONE 0\n#define __DEQ_RET_HAVE 1\n\nextern inline int _enq(char *qn, char *rn, int rlen, int flags) \u00e4\n\tstatic const struct __ENQ_plist \u00e4\n\t\tchar flags;\n\t\tchar rname_len;\n\t\tchar parms;\n\t\tchar rc;\n\t\tchar *qname;\n\t\tchar *rname;\n\t\t\u00fc __plist_init = \u00e4 0xc0, 0, 0, 0, 0, 0 \u00fc;\n\tstruct __ENQ_plist __plist;\n\t__plist = __plist_init;\n\t__plist.rname_len = (char) rlen; __plist.qname = qn;\n\t__plist.rname = rn; __plist.parms ]= flags;\n\tif (mvs()->Svc(56,&__plist)==0)\n\t\treturn 0;\n\telse return __plist.rc;\n\t\u00fc\n\n#define ENQ(qn, rn, excl, rlen, scope, ret) \u00d6\n\t_enq(qn, rn, rlen, __Tjoin(__ENQ_, excl) ] __Tjoin(__ENQ_, scope) ] \u00d6\n\t__Tjoin(__ENQ_RET_, ret))\n\nextern inline int _deq(char *qn, char *rn, int rlen, int flags)\n\t\u00e4\n\tstatic const struct __DEQ_plist\n\t\t\u00e4\n\t\tchar flags;\n\t\tchar rname_len;\n\t\tchar parms;\n\t\tchar rc;\n\t\tchar *qname;\n\t\tchar *rname;\n\n\t\t\u00fc __plist_init = \u00e4 0xc0, 0, 0, 0, 0, 0 \u00fc;\n\n\tstruct __DEQ_plist __plist;\n\t__plist = __plist_init;\n\t__plist.rname_len = (char) rlen; __plist.qname = qn;\n\t__plist.rname = rn; __plist.parms ]= flags;\n\tif (mvs()->Svc(48,&__plist)==0)\n\t\treturn 0;\n\telse\n\t\treturn __plist.rc;\n\t\u00fc\n\n#define DEQ(qn, rn, rlen, scope, ret) \u00d6\n\t_deq(qn, rn, rlen, __Tjoin(__ENQ_, scope) ] \u00d6\n\t__Tjoin(__DEQ_RET_, ret))\n#define WAIT1(ecbaddr) \u00d6\n\t(_ldregs(R0+R1, 1, ecbaddr), _ossvc(1))\n#define WAITM(n, ecblist) \u00d6\n\t(_ldregs(R0+R1, n, ecblist), LCR(1,1), _ossvc(1))\n#define POST(ecbaddr, code) \u00d6\n\t(_ldregs(R0+R1, code, ecbaddr), _ossvc(2))\n\n#define _Aep 1                    /* ATTACH macro keyword tokens    */\n#define _Adcb 2\n#define _Alpmod 3\n#define _Adpmod 4\n#define _Aparam 5\n#define _Aecb 6\n#define _Aetxr 7\n#define _Ashspl 8\n#define _Agspl 9\n#define _Aszerono 10\n#define _Atasklib 11\n#define _Aend 0\n\nextern int ATTACH(void **, ...);\n\n#define __DETACH_NOSTAE 0\n#define __DETACH_STAE 0x\n\nextern int _detach(void **, unsigned);\n\n#define DETACH(tcbptr, staeopt) \u00d6\n\t_detach(tcbptr, __Tjoin(__DETACH_, staeopt))\n#define CHAP(incr, tcbptr) \u00d6\n\t(_ldregs(R0+R1, incr, tcbptr), _ossvc(44))\n\n#define __STATUS_STOP 6\n#define __STATUS_START 7\n\n#ifdef STATUS /* handle nameser.h conflict */\n#undef STATUS\n#endif\n\n#define STATUS(action, tcbptr) \u00d6\n\t(_ldregs(R0+R1, __Tjoin(__STATUS_, action), tcbptr), _ossvc(79))\n\n\n#endif\n\n#else\n#define ENTER_ENCLAVESRB\n#define EXIT_ENCLAVESRB\n#endif\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CCT": {"ttr": 8117, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cct \u00e4\n  unsigned char  cctcct\u00c44\u00dc;  /* -          ACRONYM IN EBCDIC -CCT-                  */\n  int            cccapmet;   /* -     MINIMUM USER EXECUTION INTERVAL FOR           */\n  int            cccapsct;   /* -              Count of samples taken in IRARMAP1   */\n  int            cccmnsin;   /* -           MINIMUM INTERVAL FOR COMPUTING          */\n  int            cctssrbf;   /* -              SSRB-related failure count      @P3C */\n  short int      cccapldp;   /* -              DP FOR UNDISPATCHED APG USERS        */\n  short int      ccvenqen;   /* -              Count of enclaves with an            */\n  short int      cccaplen;   /* -              LENGTH OF MTW GROUPS - 1    @G50IPSS */\n  short int      cccentct;   /* -              Count of entries to IRARMAP1 used    */\n  int            cccmxmtw;   /* CCCTTSH in service units * 16K @L4C                 */\n  short int      _filler1;   /* Reserved                   @WLMPIFA                 */\n  short int      ccvdasct;   /* @PN72473                                            */\n  short int      cccttup;    /* Task time slice per UP     @WLMPIFA                 */\n  short int      cccwtup;    /* Wait time slice per UP     @WLMPIFA                 */\n  short int      ccvcrmen;   /* -              Number of enclaves promoted for      */\n  short int      ccvcrmct;   /* -              Number of users non-swappable for    */\n  int            cccrsv5;    /* @L3C                                                */\n  int            cccrsv6;    /* @L3C                                                */\n  short int      cccttshc;   /* Task time slice high ceiling for                    */\n  short int      cccttsm;    /* Task time slice max             @L5C                */\n  int            cccittsh;   /* Initial Task Time Slice High value                  */\n  int            ccvsigpb;   /* SIGP base count             @LVCMDAC                */\n  short int      cccmaxql;   /* Maximum queue length            @P1C                */\n  short int      cccsigpr;   /* SIGP threshold to adjust queue  @P1A                */\n  short int      cccmttwl;   /* Low MTTW in microsecs to adjust                     */\n  short int      cccmttwh;   /* High MTTW in microsecs to adjust                    */\n  int            ccvrbswt;   /* -              RECENT BASE SYSTEM WAIT TIME         */\n  int            cccawmt;    /* ALTERNATE WAIT MANAGEMENT TIME @01C                 */\n  int            ccvrbstd;   /* -              RECENT BASE TIME OF DAY              */\n  int            ccvinsct;   /* XES support                    @P2C                 */\n  int            ccvmtwb;    /* -              AWM time base for MTTW calc    @P1C  */\n  struct \u00e4\n    int            _ccvwtdb; /* -              AWM wait dispatch ct base  @LVCMDAC */\n    \u00fc ccvejst;\n  int            cccawmts;   /* -              AWM time for SUPs          @WLMPSUP  */\n  short int      _filler2;   /* -             reserved                   @WLMPIFA   */\n  short int      ccvutilp;   /* -             SYSTEM CPU UTILIZATION                */\n  short int      cccrsv16;   /* @L3C                                                */\n  short int      ccvlgfmc;   /* -             AVERAGE AVAILABLE FRAME COUNT         */\n  short int      ccvenqct;   /* -              NO. OF USERS NON SWAPPABLE FOR       */\n  short int      ccvcpuct;   /* -              NUMBER OF ONLINE CPUS                */\n  short int      ccvrcpct;   /* -              Number online regular CPS   @WLMPSUP */\n  short int      _filler3;   /* -              reserved                    @WLMPSUP */\n  void          *cccmpatp;   /* Address of array of instruction                     */\n  short int      ccvifact;   /* -              Number of online IFAs       @WLMPIFA */\n  short int      ccvutila;   /* -             processor utilization       @WLMPSUP  */\n  int            ccvrbawt;   /* -              Recent base CP+IFA wait time@PJK1692 */\n  short int      ccvsupct;   /* -              Number of online SUPs       @WLMPSUP */\n  short int      ccvceccp;   /* Total CPU count of the basic                        */\n  int            cccawmti;   /* -              AWM time for IFAs           @WLMPSUP */\n  int            ccvrbuwt;   /* -              Recent base SUP wait time   @WLMPSUP */\n  int            ccvrbiwt;   /* -              Recent base IFA wait time   @PJK1692 */\n  short int      ccvutili;   /* -              IFA utilization             @PJK1692 */\n  short int      ccvutils;   /* -              SUP utilization             @WLMPSUP */\n  unsigned char  cctflg1;    /* -                                                   */\n  unsigned char  cctflg2;    /* -              PROCESSOR TYPE FLAGS          @H2C   */\n  unsigned char  cctflg3\u00c42\u00dc; /* -             RESERVED                      @H2A    */\n  int            cccttsh;    /* Task time slice max to rotate @L5A                  */\n  int            cccttsl;    /* Task time slice low           @D4A                  */\n  int            cccwtsh;    /* Wait task time slice high     @D4A                  */\n  int            cccwtsl;    /* Wait task time slice low      @D4A                  */\n  int            cccbrt;     /* Base real time for reduced                          */\n  int            ccvawmwt;   /* CCVAWMWT                  @LVCMDAC                  */\n  char           cctcdfcn;   /* -            CHAP DOWN FUNCTION CODE   @G50IPSS     */\n  char           cctcdtsg;   /* -            TIME SLICE GROUP NUMBER   @G50IPSS     */\n  short int      cctcdtsc;   /* -              COUNT OF USERS IN TIME SLICE GROUP   */\n  void          *cctcdptr;   /* -              NEXT LIST ADDRESS OR ZERO @G50IPSS   */\n  char           cctcufcn;   /* -            CHAP UP FUNCTION CODE     @G50IPSS     */\n  char           cctcutsg;   /* -            TIME SLICE GROUP NUMBER   @G50IPSS     */\n  short int      cctcutsc;   /* -              COUNT OF USERS IN TIME SLICE GROUP   */\n  void          *cctcuptr;   /* -              NEXT LIST ADDRESS OR ZERO @G50IPSS   */\n  int            cccapdiv;   /* -              DP COMPUTATION DIVISOR      @ZMD0131 */\n  int            cccsigur;   /* -  (OPT PARM)  SIGNIFICANT MTW IN MICROS   @ZMD0131 */\n  int            cccaplte;   /* -              Time of last entry to IRARMAP1 in    */\n  int            cccrscpa;   /* -              CPU ADJUSTMENT FACTOR FOR THE        */\n  int            cccpropf;   /* -              CPU TIMING PROPORTION FACTOR THAT    */\n  int            cccsxslf;   /* -              THE EXCESSIVE SPIN LENGTH FACTOR     */\n  int            cccfxslf;   /* -              THE EXCESSIVE SPIN LENGTH FACTOR     */\n  int            cccrsv18;   /* -              RESERVED                       @01C  */\n  int            cccrsv20;   /* -              RESERVED                       @01C  */\n  short int      ccvwscl1;   /* -              THE NUMBER OF TIMES THE CL1 ROUTINE  */\n  short int      cccwscnt;   /* -              WORKLOAD SKEWING THRESHOLD           */\n  int            ccvwsbtd;   /* -              BASE TIME OF DAY FOR WORKLOAD        */\n  int            ccvwsrrm;   /* -              RATE OF RECURSIVE MODE DISPATCHES    */\n  int            ccvwsbrm;   /* -              BASE COUNT OF RECURSIVE MODE         */\n  int            cccwsrlo;   /* -             LOW THRESHOLD FOR THE RATE OF         */\n  int            cccwsrhi;   /* -             HIGH THRESHOLD FOR THE RATE OF        */\n  int            cccwstch;   /* -              CONSTANT AMOUNT TO RAISE OR          */\n  struct \u00e4\n    int            _cccottsh; /* Task time high bound        @LVCMDAC */\n    int            _cccottsl; /* Task time low bound         @LVCMDAC */\n    \u00fc cccend;\n  int            cccowtsh;   /* Wait time high bound        @LVCMDAC                */\n  int            cccowtsl;   /* Wait time low bound         @LVCMDAC                */\n  int            cccoitth;   /* Initial task time slice high@LVCMDAC                */\n  short int      cccottsc;   /* IFA task time slice high    @LVCMDAC                */\n  short int      cccottsm;   /* IFA Task time slice max     @LVCMDAC                */\n  int            ccvwsb;     /* Base short wait time slices @LVCMDAC                */\n  int            ccvwsub;    /* Base unproductive short wait@LVCMDAC                */\n  int            ccttrate;   /* Promote event rate. This is  @LBLOCK                */\n  short int      cctinthd;   /* Swapped-in address space starvation                 */\n  short int      cccrsv09;   /* -              reserved                     @LBLOCK */\n  short int      ccttrpct;   /* 1/1000s of a CP for promote slices.                 */\n  short int      ccteffcp;   /* -              LPAR's effective CP.         @LBLOCK */\n  int            cctrc100;   /* -              Counts CP Utilization = 100% @LBLOCK */\n  int            cctrcdsp;   /* -              Counts calls to dispatcher   @LBLOCK */\n  int            cctrcuse;   /* -              Counts used promotes         @LBLOCK */\n  int            cctrcwtr;   /* -              Counts waiters for promote   @LBLOCK */\n  int            ccttrtod;   /* -              Last promote event timestamp in      */\n  int            ccttruse;   /* -              Number of dispatchable units that    */\n  int            ccttrdpc;   /* -              same as CCTRCUSE but is not reset,   */\n  int            ccttrblc;   /* -              same as CCTRCWTR but is not reset,   */\n  int            ccttrcpm;   /* counts how often blocked workload                   */\n  int            cccttsmh;   /* Max Task time slice in HD mode @OA26272A            */\n  int            cccrsv22;   /* -              reserved                             */\n  int            cccrsv23;   /* -              reserved                             */\n  int            cccrsv24;   /* -              reserved                             */\n  int            cccrsv25;   /* -              reserved                             */\n  int            cccrsv26;   /* -              reserved                             */\n  int            cccrsv27;   /* -              reserved                             */\n  int            cccrsv28;   /* -              reserved                             */\n  int            cccrsv29;   /* -              reserved                             */\n  int            cccrsv30;   /* -              reserved                             */\n  int            cccrsv31;   /* -              reserved                             */\n  int            cccrsv32;   /* -              reserved                             */\n  int            cccrsv33;   /* -              reserved                             */\n  int            cccrsv34;   /* -              reserved                             */\n  int            cccrsv35;   /* -              reserved                             */\n  int            cccrsv36;   /* -              reserved                             */\n  double         ccvend;     /* -                END OF CCT                         */\n  \u00fc;\n\n#define ccvwtdb  ccvejst._ccvwtdb\n#define cccottsh cccend._cccottsh\n#define cccottsl cccend._cccottsl\n\n/* Values for field \"cctflg1\" */\n#define cctawma  0x40  /* -              ALTERNATE WAIT MGMT TIMING ALLOWED */\n#define ccttsup  0x20  /* -              TS GROUP CHAPPED UP       @G50IPSS */\n\n/* Values for field \"cctflg2\" */\n#define cctrelcp 0x80  /* -              THIS PROCESSOR MODEL HAS RELATED   */\n#define cctnofcp 0x40  /* -              THIS RELATED TYPE OF PROCESSOR     */\n#define cctfpmt  0x20  /* -              Full preemption if bit is on @D4A  */\n#define cctsmpok 0x10  /* -              When on indicates that a sample    */\n#define cctnejst 0x08  /* -              When on indicates that the         */\n#define cctcaltr 0x04  /* -              When on indicates promote event    */\n#define cctuchck 0x02  /* -              Utilization check was run the last */\n\n/* Values for field \"ccvend\" */\n#define cctlen   0x190 /* -        LENGTH OF CCT                            */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEECAA": {"ttr": 8667, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceecaa \u00e4\n  unsigned char  ceecaaflag0;           /* CAA Flags                           */\n  unsigned char  _filler1;              /* Reserved                            */\n  unsigned char  ceecaalangp;           /* PL/I compatibility flags            */\n  unsigned char  _filler2\u00c45\u00dc;           /* Reserved                            */\n  void          *ceecaabos;             /* Start of current storage segment    */\n  void          *ceecaaeos;             /* End of current storage segment      */\n  unsigned char  _filler3\u00c452\u00dc;          /* Reserved                            */\n  int            ceecaatorc;            /* Thread level return code            */\n  unsigned char  _filler4\u00c444\u00dc;          /* Reserved                 @CM0419C   */\n  void          *ceecaatovf;            /* Stack overflow routine   @CM0419A   */\n  unsigned char  _filler5\u00c4168\u00dc;         /* Reserved                 @CM0419A   */\n  void          *ceecaaattn;            /* Addr of LE/370 attention handler    */\n  unsigned char  _filler6\u00c456\u00dc;          /* Reserved                            */\n  void          *ceecaahllexit;         /* Set by CEEBINT for user hook exit   */\n  unsigned char  _filler7\u00c456\u00dc;          /* Reserved                            */\n  unsigned char  ceecaahook\u00c412\u00dc;        /* Code to pass control                */\n  void          *ceecaadima;            /* A(debugger entry)                   */\n  struct \u00e4\n    unsigned char  _ceecaaalloc\u00c44\u00dc;   /* ALLOCATE descr. built               */\n    unsigned char  _ceecaastate\u00c44\u00dc;   /* New statement begins                */\n    unsigned char  _ceecaaentry\u00c44\u00dc;   /* Block entry                         */\n    unsigned char  _ceecaaexit\u00c44\u00dc;    /* Block exit                          */\n    unsigned char  _ceecaamexit\u00c44\u00dc;   /* Multiple block exit                 */\n    struct \u00e4\n      unsigned char  _ceecaalabel\u00c44\u00dc;   /* At a label constant */\n      unsigned char  _ceecaabcall\u00c44\u00dc;   /* Before CALL         */\n      unsigned char  _ceecaaacall\u00c44\u00dc;   /* After CALL          */\n      unsigned char  _ceecaado\u00c44\u00dc;      /* DO block starting   */\n      unsigned char  _ceecaaiftrue\u00c44\u00dc;  /* True part of IF     */\n      unsigned char  _ceecaaiffalse\u00c44\u00dc; /* False part of IF    */\n      unsigned char  _ceecaawhen\u00c44\u00dc;    /* WHEN group starting */\n      unsigned char  _ceecaaother\u00c44\u00dc;   /* OTHERWISE group     */\n      \u00fc ceecaapaths;\n    unsigned char  _ceecaacgoto\u00c44\u00dc;   /* GOTO hook for C                     */\n    unsigned char  _ceecaarsvdh1\u00c44\u00dc;  /* Reserved hook                       */\n    unsigned char  _ceecaarsvdh2\u00c44\u00dc;  /* Reserved hook                       */\n    unsigned char  _ceecaamultevt\u00c44\u00dc; /* Multiple Event Hook            @G3C */\n    \u00fc ceecaahooks;\n  unsigned char  ceecaamevmask\u00c44\u00dc;      /* Multiple Event Hook Mask       @G3A */\n  void          *ceecaacgene;           /* Reserved                            */\n  void          *ceecaacrent;           /* C/370 writable static               */\n  unsigned char  ceecaacfltinit\u00c48\u00dc;     /* Used to covert fixed to float       */\n  void          *ceecaacprms;           /* Parms passed to IBMLIIA             */\n  struct \u00e4\n    unsigned char  _ceecaac_rtl_1;    /* C/370 RTL unique trace options @DJA */\n    unsigned char  _ceecaac_rtl_2;    /* C/370 RTL unique trace options @DJA */\n    unsigned char  _ceecaac_rtl_3;    /* C/370 RTL unique trace options @DJA */\n    unsigned char  _ceecaac_comtrace; /* Common RTL trace options       @DJA */\n    \u00fc ceecaac_rtl;\n  void          *ceecaacthd;\n  void          *ceecaacurrfecb;\n  void          *ceecaaedcv;            /* C/370 vector table                  */\n  void          *ceecaacpcb;\n  void          *ceecaacedb;            /* C/370 CEDB                          */\n  unsigned char  _filler8\u00c43\u00dc;\n  unsigned char  ceecaaspcflag3;\n  void          *ceecaacio;             /* Address oc cio                      */\n  int            ceecaafdsetfd;         /* Used by FD_* macros                 */\n  unsigned char  ceecaafcbmutexok\u00c42\u00dc;\n  unsigned char  _filler9\u00c42\u00dc;\n  int            ceecaatc16;\n  int            ceecaatc17;\n  void          *ceecaaedcov;           /* C/370 Open Libvec                   */\n  int            ceecaactofsv;\n  void          *ceecaatrtspace;        /* C/370 Open Libvec                   */\n  unsigned char  _filler10\u00c424\u00dc;\n  struct \u00e4\n    void          *_ceecaa_tcasrv_userword;\n    void          *_ceecaa_tcasrv_workarea;\n    void          *_ceecaa_tcasrv_getmain;\n    void          *_ceecaa_tcasrv_freemain;\n    void          *_ceecaa_tcasrv_load;\n    void          *_ceecaa_tcasrv_delete;\n    void          *_ceecaa_tcasrv_exception;\n    void          *_ceecaa_tcasrv_attention;\n    void          *_ceecaa_tcasrv_message;\n    \u00fc ceecaa_tcasrv;\n  unsigned char  _filler11\u00c44\u00dc;          /* Reserved                            */\n  void          *ceecaalws;             /* Addr of PL/I Language Working Space */\n  void          *ceecaasavr;            /* Register save            @CM0419A   */\n  unsigned char  _filler12\u00c436\u00dc;         /* Reserved                       @P6C */\n  unsigned char  ceecaasystm;           /* Underlying Operating System@MF0072A */\n  unsigned char  ceecaahrdwr;           /* Underlying Hardware        @MF0072A */\n  unsigned char  ceecaasbsys;           /* Underlying Subsystem       @MF0072A */\n  unsigned char  ceecaaflag2;           /* @MF0072A                            */\n  unsigned char  ceecaalevel;           /* LE/370 level identifier             */\n  unsigned char  ceecaa_pm;             /* PROGRAM MASK               @NX0166C */\n  unsigned char  ceecaa_invar\u00c42\u00dc;       /* At same offset in 31 & 64 mode @G3C */\n  void          *ceecaagetls;           /* ADDR OF LE/370 LIBRARY STACK MGR    */\n  void          *ceecaacelv;            /* Addr of LE/370 LIBVEC               */\n  void          *ceecaagets;            /* Addr of LE/370 get stack stg rtn    */\n  void          *ceecaalbos;            /* Start of library stack stg seg      */\n  void          *ceecaaleos;            /* End of library stack stg seg        */\n  void          *ceecaalnab;            /* Next available byte of lib stg      */\n  void          *ceecaadmc;             /* Addr of ESPIE Devil-May-Care rtn    */\n  struct \u00e4\n    unsigned char  _ceecaacd\u00c44\u00dc; /* Most recent CAASHAB abend code */\n    \u00fc ceecaaabcode;\n  struct \u00e4\n    unsigned char  _ceecaars\u00c44\u00dc; /* Most recent CAASHAB reason code */\n    \u00fc ceecaarsncode;\n  void          *ceecaaerr;             /* Addr of the current CIB             */\n  void          *ceecaagetsx;           /* Addr of LE/370 stack stg extender   */\n  void          *ceecaaddsa;            /* Addr of the dummy DSA               */\n  int            ceecaasectsiz;         /* Vector Section Size                 */\n  int            ceecaapartsum;         /* Vector Partial Sum Number           */\n  int            ceecaassexpnt;         /* Log of Vector Section Size          */\n  void          *ceecaaedb;             /* address of the EDB                  */\n  void          *ceecaapcb;             /* address of the PCB                  */\n  void          *ceecaaeyeptr;          /* addr of CAA eyecatcher              */\n  void          *ceecaaptr;             /* addr of this CAA                    */\n  void          *ceecaagets1;           /* DSA alloc - R13 not DSA addr        */\n  void          *ceecaashab;            /* ABEND shunt routine address         */\n  void          *ceecaaprgck;           /* pgm interrupt code for CAADMC       */\n  unsigned char  ceecaaflag1;           /* CAA Flag 1                          */\n  unsigned char  _filler13\u00c43\u00dc;          /* reserved                            */\n  int            ceecaaurc;             /* Thread level return code.           */\n  void          *ceecaarsrv1\u00c44\u00dc;\n  void          *ceecaapicicb;          /* Addr of pre-init compatability cb   */\n  void          *ceecaarsrv2;\n  short int      ceecaagosmr;           /* Go Some More. used TRAV multiple    */\n  short int      _filler14;             /* skip.                               */\n  void          *ceecaaleov;            /* Addr of LE/OpenMVS LIBVEC           */\n  int            ceecaa_sigsctr;        /* SIGSAFE Counter            @C54544  */\n  unsigned char  ceecaa_sigsflg\u00c44\u00dc;     /* SIGSAFE Flags              @C54544  */\n  unsigned char  ceecaathdid\u00c48\u00dc;        /* Posix thread id                     */\n  void          *ceecaa_dcrent;         /* CRENT anchor for DCE                */\n  void          *ceecaa_danchor;        /* DCE anchor per thread               */\n  void          *ceecaa_ctoc;           /* TOC anchor for CRENT                */\n  void          *ceecaarcb;             /* A(RCB)                              */\n  void          *ceecaacicsrsn;         /* CICS reason code from member        */\n  void          *ceecaamembr;           /* Addr of thread-level member list    */\n  void          *ceecaa_signal_status;  /* Signal stat for terminating thd     */\n  struct \u00e4\n    void          *_ceecaa_hcom_reg14; /* Saved Reg14 from HCOM   @CH0092A */\n    \u00fc ceecaa_hcom_reg7;\n  void          *ceecaa_stackfloor;     /* Lowest usable addr in HP stack      */\n  void          *ceecaahpgets;          /* HP stack extension rtn              */\n  void          *ceecaaedchpxv;         /* C/C++ XPLINK libvec                 */\n  void          *ceecaafor1;            /* Reserved for FORTRAN                */\n  void          *ceecaafor2;            /* Reserved for FORTRAN                */\n  void          *ceecaathreadheapid;    /* Thread heapid         @NX0093A      */\n  int            ceecaa_sys_rtncode;    /* Sys (kernel) return code @CM1752    */\n  int            ceecaa_sys_rsncode;    /* Sys (kernel) reason code @CM1752    */\n  void          *ceecaagetfn;           /* Address of WSA swap routine         */\n  unsigned char  ceecaa_ler4\u00c48\u00dc;        /* Reserved for expansion LE 1.4       */\n  void          *ceecaasigngptr;        /* Pointer to 'signam' external        */\n  int            ceecaasigng;           /* value of sign of lgamma()           */\n  void          *ceecaa_fordbg;         /* Ptr to AFHDBHIM -        @N80095A   */\n  unsigned char  ceecaaab_status;       /* validity flags           KN80120    */\n  unsigned char  ceecaa_stackdirection; /* Stack Direction                     */\n  unsigned char  _filler15\u00c42\u00dc;          /* RESERVED                 KN80120    */\n  void          *ceecaaab_gr0;          /* Reg 0                    KN80120    */\n  void          *ceecaaab_icd1;         /* SDWAICD1                 KN80120    */\n  void          *ceecaaab_abcc;         /* SDWAABCC                 KN80120    */\n  void          *ceecaaab_crc;          /* SDWACRC                  KN80120    */\n  void          *ceecaaagts;            /* C compiler stk inc       KN00102    */\n  unsigned char  ceecaa_ler5n1\u00c44\u00dc;      /* reserved for expansion   KCG0088    */\n  void          *ceecaaherp;            /* A(CEEHERP)               KCG0061    */\n  void          *ceecaaustkbos;         /* Start of user stack seg  PQ04250    */\n  void          *ceecaaustkeos;         /* End of user stack seg    PQ04250    */\n  void          *ceecaauserrtn_;        /* A(UserRtn) for pthread     @01A     */\n  unsigned char  ceecaaudhook\u00c48\u00dc;       /* hook swapping xplink       @DBA     */\n  void          *ceecaacel_hpxv_b;      /* Address of XPLink compat   @DCC     */\n  void          *ceecaacel_hpxv_m;      /* Address of XPLink compat   @DCA     */\n  void          *ceecaacel_hpxv_l;      /* Address of XPLink          @DCC     */\n  void          *ceecaacel_hpxv_o;      /* Address of XPLink          @DDA     */\n  void          *ceecaacel4vec3;        /* Address of Vec3 LibVec     @DHA     */\n  void          *ceecaa_ceedllf;        /* Addr of newest CEEDLLF.  Not   @P6M */\n\tunsigned  char ceecaa_extension\u00c41024\u00dc; /* CEECAA extension */\n  \u00fc;\n\n#define ceecaaalloc             ceecaahooks._ceecaaalloc\n#define ceecaastate             ceecaahooks._ceecaastate\n#define ceecaaentry             ceecaahooks._ceecaaentry\n#define ceecaaexit              ceecaahooks._ceecaaexit\n#define ceecaamexit             ceecaahooks._ceecaamexit\n#define ceecaalabel             ceecaahooks.ceecaapaths._ceecaalabel\n#define ceecaabcall             ceecaahooks.ceecaapaths._ceecaabcall\n#define ceecaaacall             ceecaahooks.ceecaapaths._ceecaaacall\n#define ceecaado                ceecaahooks.ceecaapaths._ceecaado\n#define ceecaaiftrue            ceecaahooks.ceecaapaths._ceecaaiftrue\n#define ceecaaiffalse           ceecaahooks.ceecaapaths._ceecaaiffalse\n#define ceecaawhen              ceecaahooks.ceecaapaths._ceecaawhen\n#define ceecaaother             ceecaahooks.ceecaapaths._ceecaaother\n#define ceecaacgoto             ceecaahooks._ceecaacgoto\n#define ceecaarsvdh1            ceecaahooks._ceecaarsvdh1\n#define ceecaarsvdh2            ceecaahooks._ceecaarsvdh2\n#define ceecaamultevt           ceecaahooks._ceecaamultevt\n#define ceecaac_rtl_1           ceecaac_rtl._ceecaac_rtl_1\n#define ceecaac_rtl_2           ceecaac_rtl._ceecaac_rtl_2\n#define ceecaac_rtl_3           ceecaac_rtl._ceecaac_rtl_3\n#define ceecaac_comtrace        ceecaac_rtl._ceecaac_comtrace\n#define ceecaa_tcasrv_userword  ceecaa_tcasrv._ceecaa_tcasrv_userword\n#define ceecaa_tcasrv_workarea  ceecaa_tcasrv._ceecaa_tcasrv_workarea\n#define ceecaa_tcasrv_getmain   ceecaa_tcasrv._ceecaa_tcasrv_getmain\n#define ceecaa_tcasrv_freemain  ceecaa_tcasrv._ceecaa_tcasrv_freemain\n#define ceecaa_tcasrv_load      ceecaa_tcasrv._ceecaa_tcasrv_load\n#define ceecaa_tcasrv_delete    ceecaa_tcasrv._ceecaa_tcasrv_delete\n#define ceecaa_tcasrv_exception ceecaa_tcasrv._ceecaa_tcasrv_exception\n#define ceecaa_tcasrv_attention ceecaa_tcasrv._ceecaa_tcasrv_attention\n#define ceecaa_tcasrv_message   ceecaa_tcasrv._ceecaa_tcasrv_message\n#define ceecaacd                ceecaaabcode._ceecaacd\n#define ceecaars                ceecaarsncode._ceecaars\n#define ceecaa_hcom_reg14       ceecaa_hcom_reg7._ceecaa_hcom_reg14\n\n/* Values for field \"ceecaaflag0\" */\n#define ceecaaxhdl                    0x02 /* Bypass exception handling           */\n\n/* Values for field \"_filler1\" */\n#define ceecaadbginit                 0x20 /* Debugger is initialized             */\n\n/* Values for field \"ceecaalangp\" */\n#define ceecaathfn                    0x08 /* If set, NO PL/I FINISH              */\n\n/* Values for field \"ceecaac_rtl_3\" */\n#define ceecaa_signals_l              0x40 /* Low-level signals              @DJA */\n#define ceecaa_low_io                 0x20 /* Low-level I/O                  @DJA */\n#define ceecaa_initterm_l             0x10 /* Low-level init/term            @DJA */\n#define ceecaa_signals_h              0x04 /* High-level signals             @DJA */\n#define ceecaa_high_io                0x02 /* High-level I/O                 @DJA */\n#define ceecaa_initterm_h             0x01 /* High-level init/term           @DJA */\n\n/* Values for field \"ceecaac_comtrace\" */\n#define ceecaa_rtlxpli                0x20 /* RTL XPLINK trace               @DJA */\n#define ceecaa_rtlcics                0x10 /* RTL CICS   trace               @DJA */\n#define ceecaa_rtlalloc               0x08 /* RTL Alloc  trace               @DJA */\n#define ceecaa_rtlcount               0x04 /* RTL Function counting          @DJA */\n#define ceecaa_rtllocks               0x02 /* RTL or user locking            @DJA */\n#define ceecaa_rtlfunc                0x01 /* RTL function entry/exit        @DJA */\n\n/* Values for field \"ceecaasystm\" */\n#define ceecaasyund                   0x00 /* undefined                @MF0072A   */\n#define ceecaasyuns                   0x01 /* unsupported              @MF0072A   */\n#define ceecaasyvm                    0x02 /* VM                       @MF0072A   */\n#define ceecaasymvs                   0x03 /* MVS                      @MF0072A   */\n\n/* Values for field \"ceecaahrdwr\" */\n#define ceecaahwund                   0x00 /* undefined                @MF0072A   */\n#define ceecaahwuns                   0x01 /* unsupported              @MF0072A   */\n#define ceecaahw370                   0x02 /* System / 370 non-XA      @MF0072A   */\n#define ceecaahwxa                    0x03 /* System / 370 XA          @MF0072A   */\n#define ceecaahwesa                   0x04 /* System / 370 ESA         @MF0072A   */\n\n/* Values for field \"ceecaasbsys\" */\n#define ceecaassund                   0x00 /* undefined                @MF0072A   */\n#define ceecaassuns                   0x01 /* unsupported              @MF0072A   */\n#define ceecaassnon                   0x02 /* no subsystem             @MF0072A   */\n#define ceecaasstso                   0x03 /* TSO                      @MF0072A   */\n#define ceecaasscic                   0x05 /* CICS                     @MF0072A   */\n\n/* Values for field \"ceecaaflag2\" */\n#define ceecaabimodal                 0x80 /* Bimodal addressing         @MF0072A */\n#define ceecaa_vector                 0x40 /* vector hardware available  @MF0072A */\n#define ceecaatip                     0x20 /* Thread termination in progress      */\n#define ceecaa_thread_initial         0x10 /* if on, indicates this is the IPT    */\n#define ceecaa_trace_active           0x08 /* If on, library trace is active      */\n#define ceecaa_altstk_active          0x04 /* If on, alt stack active    @KCG0034 */\n#define ceecaa_enq_wait_interruptable 0x02 /* PL/I doing Exclusive   KN80230      */\n#define ceecaa_usrstk_active          0x01 /* If on, context switching user stack */\n\n/* Values for field \"ceecaalevel\" */\n#define cel_level_identifier          0x15 /* @DKC                                */\n\n/* Values for field \"ceecaaflag1\" */\n#define ceecaasort                    0x80 /* Call to DFSORT is active            */\n#define ceecaa_use_old_stk            0x40 /* use old stack               @P5A    */\n\n/* Values for field \"ceecaa_sigsflg\" */\n#define ceecaa_sigputback             0x80 /* Signal Putback                      */\n#define ceecaa_sa_restart             0x40 /* SA_Restart processing needed        */\n#define ceecaa_sigsafe                0x10 /* Indicates that synchronous          */\n#define ceecaa_cancelsafe             0x08 /* Indicates that synchronous @CM0565A */\n#define ceecaa_sigresynch             0x04 /* One or more synchronous signals     */\n#define ceecaa_frz_unsafe             0x02 /* This thread is in an unsafe state   */\n#define ceecaa_noappregs              0x01 /* User Application registers may      */\n#define ceecaa_eintr_rsol             0x80 /* Secondary signal resolicit          */\n#define ceecaa_eintr_putb             0x40 /* Secondary resolicited signal        */\n#define ceecaa_eintr_rest             0x20 /* User catcher returned after         */\n#define ceecaa_eintr_sigg             0x10 /* \"Stray\" signal interrupted          */\n\n/* Values for field \"ceecaaab_status\" */\n#define ceecaaab_gr0_valid            0x80 /* CEECAAAB_GR0 is valid    KN80120    */\n#define ceecaaab_icd1_valid           0x40 /* CEECAAAB_ICD1 is valid   KN80120    */\n#define ceecaaab_abcc_valid           0x20 /* CEECAAAB_ABCC is valid   KN80120    */\n#define ceecaaab_crc_valid            0x10 /* CEECAAAB_CRC is valid    KN80120    */\n#define ceecaaab_gr15_valid           0x08 /* CEECAAAB_GR15 is valid   KN80120    */\n\n/* Values for field \"ceecaa_stackdirection\" */\n#define ceecaastack_up                0x00 /* Up                                  */\n#define ceecaastack_down              0x01 /* Down (XPLINK)                       */\n\n/* Values for field \"ceecaa_ceedllf\" */\n#define ceecelvgtun                   148  /* Offset to Get user nab service.     */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEECDLL": {"ttr": 7921, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceecdll \u00e4\n  unsigned  char  id\u00c44\u00dc;\n\tstruct ceecdll * next;\n\tvoid *         filler1;\n\tvoid *         filler2;\n\tvoid *         start;\n\tvoid *         filler3;\n\tvoid *         c_wsa;\n\tsize_t         length;\n\u00fc;\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEECEDB": {"ttr": 8663, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceecedb \u00e4\n  unsigned char  _filler\u00c4876\u00dc;           /* Reserved                            */\n  void *         cdll;\n\u00fc;\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CEECIB": {"ttr": 8137, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceecib \u00e4\n  unsigned char  cib_eye\u00c44\u00dc;    /* eye catcher.         */\n  void          *cib_back;      /* Previous CIB         */\n  void          *cib_fwrd;      /* More recent CIB      */\n  short int      cib_siz;       /* Size of CIB          */\n  short int      cib_ver;       /* Version code of CIB  */\n  int            cib_plat_id;   /* Platform identifier. */\n  int            _filler1;      /* Reserved             */\n  union \u00e4\n    unsigned char  _cib_area1\u00c4120\u00dc; /* 120/168 bytes */\n    struct \u00e4\n      unsigned char  _cib_cond\u00c412\u00dc;          /* Current CEL condition               */\n      void          *_cib_machine;           /* Address of machine state.           */\n      unsigned char  _cib_old_cond\u00c412\u00dc;      /* Old CEL Condition                   */\n      unsigned char  _cib_flg_1;\n      unsigned char  _cib_flg_2;\n      unsigned char  _cib_flg_3;\n      unsigned char  _cib_flg_4;\n      struct \u00e4\n        void          *_cib_hdl_sf;\n        struct \u00e4\n          void          *_cib_hdl_ept;\n          void          *_cib_hdl_rst;\n          \u00fc cib_hdl_entry;\n        \u00fc cib_hdl;\n      struct \u00e4\n        void          *_cib_rsm_sf;\n        void          *_cib_rsm_point;\n        void          *_cib_rsm_machine;\n        \u00fc cib_rsm;\n      void          *_cib_cond_default;\n      void          *_cib_ph_callee_sf;      /* Physical Callee DSA ptr             */\n      unsigned char  _cib_hdl_sf_fmt;        /* Stack format for HDL_SF             */\n      unsigned char  _cib_ph_callee_sf_fmt;  /* Stack format for PH_CALLEE_SF       */\n      short int      _cib_bbranch_stmtlen;   /* Bad Branch stmt ID length      @D1A */\n      int            _cib_bbranch_offset;    /* Bad Branch offset              @D1A */\n      unsigned char  _cib_bbranch_stmtid\u00c48\u00dc; /* Bad Branch statement Id        @D1A */\n      int            _filler2\u00c410\u00dc;           /* (reserved)                     @D1C */\n      \u00fc _ceecib_struct1;\n    \u00fc _ceecib_union1;\n  unsigned char  cib_area3\u00c432\u00dc; /* 32/48 bytes          */\n  union \u00e4\n    unsigned char  _cib_bit\u00c44\u00dc; /* Status Flags. */\n    struct \u00e4\n      unsigned char  _cib_flg_5; /* CEL Events.       */\n      unsigned char  _cib_flg_6; /* CEL Actions.      */\n      unsigned char  _cib_flg_7; /* Named Conditions. */\n      unsigned char  _cib_flg_8; /* Miscellaneous     */\n      \u00fc _ceecib_struct2;\n    \u00fc _ceecib_union2;\n  union \u00e4\n    unsigned char  _cib_area5\u00c488\u00dc; /* 88/136 bytes */\n    struct \u00e4\n      int            _cib_abcd;            /* Abend code word.        SDWA             */\n      int            _cib_abrc;            /* Abend Reason Word.      SDWA             */\n      unsigned char  _cib_abname\u00c48\u00dc;       /* Abend. load module name SDWA             */\n      void          *_cib_pl;              /* Pointer to the prologue                  */\n      void          *_cib_sv2;             /* Save area of first significant CEL Pgm.  */\n      void          *_cib_sv1;             /* Address of Save area at time of EVENT.   */\n      void          *_cib_int;\n      unsigned char  _cib_q_data\u00c44\u00dc;       /* Internal token for CICS routine.         */\n      unsigned char  _cib_fdbk\u00c44\u00dc;         /* Addr(Feedback) token for signaled        */\n      unsigned char  _cib_fun\u00c44\u00dc;          /* Member function code                     */\n      unsigned char  _cib_toke\u00c44\u00dc;         /* Token provided by CEEHDL or SFaddr       */\n      void          *_cib_mid;             /* ID code at time of interrupt.            */\n      int            _cib_state;\n      int            _cib_rtcc;            /* Ret/Action code from Exception Handler   */\n      int            _cib_ppav;            /* Version of PPA in CIB_PL                 */\n      unsigned char  _cib_ab_term_exit\u00c48\u00dc; /* Name of abnormal term exit being called. */\n      void          *_cib_sdwa_ptr;        /* Address of SDWA when cib_sdwa_set is on. */\n      int            _cib_signo;           /* OpenMVS signal number                    */\n      void          *_cib_ppsd;            /* Pointer to LE's copy of the PPSD         */\n      unsigned char  _filler3\u00c44\u00dc;\n      \u00fc _ceecib_struct3;\n    \u00fc _ceecib_union3;\n  \u00fc;\n\n#define cib_area1            _ceecib_union1._cib_area1\n#define cib_cond             _ceecib_union1._ceecib_struct1._cib_cond\n#define cib_machine          _ceecib_union1._ceecib_struct1._cib_machine\n#define cib_old_cond         _ceecib_union1._ceecib_struct1._cib_old_cond\n#define cib_flg_1            _ceecib_union1._ceecib_struct1._cib_flg_1\n#define cib_flg_2            _ceecib_union1._ceecib_struct1._cib_flg_2\n#define cib_flg_3            _ceecib_union1._ceecib_struct1._cib_flg_3\n#define cib_flg_4            _ceecib_union1._ceecib_struct1._cib_flg_4\n#define cib_hdl_sf           _ceecib_union1._ceecib_struct1.cib_hdl._cib_hdl_sf\n#define cib_hdl_ept          _ceecib_union1._ceecib_struct1.cib_hdl.cib_hdl_entry._cib_hdl_ept\n#define cib_hdl_rst          _ceecib_union1._ceecib_struct1.cib_hdl.cib_hdl_entry._cib_hdl_rst\n#define cib_rsm_sf           _ceecib_union1._ceecib_struct1.cib_rsm._cib_rsm_sf\n#define cib_rsm_point        _ceecib_union1._ceecib_struct1.cib_rsm._cib_rsm_point\n#define cib_rsm_machine      _ceecib_union1._ceecib_struct1.cib_rsm._cib_rsm_machine\n#define cib_cond_default     _ceecib_union1._ceecib_struct1._cib_cond_default\n#define cib_ph_callee_sf     _ceecib_union1._ceecib_struct1._cib_ph_callee_sf\n#define cib_hdl_sf_fmt       _ceecib_union1._ceecib_struct1._cib_hdl_sf_fmt\n#define cib_ph_callee_sf_fmt _ceecib_union1._ceecib_struct1._cib_ph_callee_sf_fmt\n#define cib_bbranch_stmtlen  _ceecib_union1._ceecib_struct1._cib_bbranch_stmtlen\n#define cib_bbranch_offset   _ceecib_union1._ceecib_struct1._cib_bbranch_offset\n#define cib_bbranch_stmtid   _ceecib_union1._ceecib_struct1._cib_bbranch_stmtid\n#define cib_bit              _ceecib_union2._cib_bit\n#define cib_flg_5            _ceecib_union2._ceecib_struct2._cib_flg_5\n#define cib_flg_6            _ceecib_union2._ceecib_struct2._cib_flg_6\n#define cib_flg_7            _ceecib_union2._ceecib_struct2._cib_flg_7\n#define cib_flg_8            _ceecib_union2._ceecib_struct2._cib_flg_8\n#define cib_area5            _ceecib_union3._cib_area5\n#define cib_abcd             _ceecib_union3._ceecib_struct3._cib_abcd\n#define cib_abrc             _ceecib_union3._ceecib_struct3._cib_abrc\n#define cib_abname           _ceecib_union3._ceecib_struct3._cib_abname\n#define cib_pl               _ceecib_union3._ceecib_struct3._cib_pl\n#define cib_sv2              _ceecib_union3._ceecib_struct3._cib_sv2\n#define cib_sv1              _ceecib_union3._ceecib_struct3._cib_sv1\n#define cib_int              _ceecib_union3._ceecib_struct3._cib_int\n#define cib_q_data           _ceecib_union3._ceecib_struct3._cib_q_data\n#define cib_fdbk             _ceecib_union3._ceecib_struct3._cib_fdbk\n#define cib_fun              _ceecib_union3._ceecib_struct3._cib_fun\n#define cib_toke             _ceecib_union3._ceecib_struct3._cib_toke\n#define cib_mid              _ceecib_union3._ceecib_struct3._cib_mid\n#define cib_state            _ceecib_union3._ceecib_struct3._cib_state\n#define cib_rtcc             _ceecib_union3._ceecib_struct3._cib_rtcc\n#define cib_ppav             _ceecib_union3._ceecib_struct3._cib_ppav\n#define cib_ab_term_exit     _ceecib_union3._ceecib_struct3._cib_ab_term_exit\n#define cib_sdwa_ptr         _ceecib_union3._ceecib_struct3._cib_sdwa_ptr\n#define cib_signo            _ceecib_union3._ceecib_struct3._cib_signo\n#define cib_ppsd             _ceecib_union3._ceecib_struct3._cib_ppsd\n\n/* Values for field \"cib_ver\" */\n#define cib_ver_num     4    /* Version of LE Version 1 Release 3   */\n\n/* Values for field \"cib_plat_id\" */\n#define cib_platform    3\n\n/* Values for field \"cib_flg_4\" */\n#define cib_rsm_mve     0x08 /* Resume cursor was moved explicit    */\n#define cib_msg_out     0x04 /* Message service processed condition */\n#define cib_rsm_mvr     0x02 /* Resume cursor was moved relative    */\n\n/* Values for field \"cib_flg_5\" */\n#define cib_abf         0x80 /* ABEND Caused.                       */\n#define cib_pcf         0x40 /* Program Check Caused.               */\n#define cib_tiu         0x08 /* condtion management raised tiu.     */\n#define cib_promo       0x04 /* new condtion result from a promote. */\n#define cib_sgl         0x02 /* Signaled condition.                 */\n#define cib_ext         0x01 /* Attention Interrupt Caused.         */\n\n/* Values for field \"cib_flg_6\" */\n#define cib_arcv        0x80 /* Abend reason code valid.            */\n#define cib_mrc         0x40 /* Math routine condition.             */\n#define cib_alw_rsm     0x20 /* Resume Allowed.                     */\n#define cib_mrc_typ     0x10 /* MRC type 1.                         */\n#define cib_enable_only 0x08 /* Enable only pass (no cond.pass)     */\n#define cib_owning_sf   0x04 /* Hcursor pointing to owning SF       */\n#define cib_sf0         0x02 /* Doing post SF0 scan.                */\n#define cib_tc_done     0x01 /* All members informed of condtion.   */\n\n/* Values for field \"cib_flg_7\" */\n#define cib_stg         0x80 /* Storage Condition.                  */\n#define cib_sdwa_set    0x40 /* SDWA Associated with condtion.      */\n\n/* Values for field \"cib_flg_8\" */\n#define cib_bbranch     0x40 /* Bad branch data is available   @D1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEEDSA": {"ttr": 8415, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceedsa \u00e4\n  unsigned char  ceedsaflags\u00c42\u00dc; /* DSA flags                           */\n  unsigned char  ceedsamemd\u00c42\u00dc;  /* Member defined                      */\n  void          *ceedsabkc;      /* Addr of DSA of caller               */\n  void          *ceedsafwc;      /* Addr of DSA of last called rtn      */\n  int            ceedsar14;      /* Save area for register 14           */\n  int            ceedsar15;      /* Save area for register 15           */\n  int            ceedsar0;       /* Save area for register 0            */\n  int            ceedsar1;       /* Save area for register 1            */\n  int            ceedsar2;       /* Save area for register 2            */\n  int            ceedsar3;       /* Save area for register 3            */\n  int            ceedsar4;       /* Save area for register 4            */\n  int            ceedsar5;       /* Save area for register 5            */\n  int            ceedsar6;       /* Save area for register 6            */\n  int            ceedsar7;       /* Save area for register 7            */\n  int            ceedsar8;       /* Save area for register 8            */\n  int            ceedsar9;       /* Save area for register 9            */\n  int            ceedsar10;      /* Save area for register 10           */\n  int            ceedsar11;      /* Save area for register 11           */\n  int            ceedsar12;      /* Save area for register 12           */\n  void          *ceedsalws;      /* Addr of PL/I Language Working Space */\n  void          *ceedsanab;      /* Addr of next available byte         */\n  void          *ceedsapnab;     /* Addr of end-of-prolog NAB           */\n  int            _filler1\u00c44\u00dc;\n  struct \u00e4\n    void          *_ceedsarent; /* Program reentry address-IPAT */\n    \u00fc ceedsatran;\n  void          *ceedsacilc;     /* C to Fortran ILC save area          */\n  void          *ceedsamode;     /* Return address of module that       */\n  int            _filler2\u00c42\u00dc;\n  void          *ceedsarmr;      /* Addr of language specific           */\n  int            _filler3;       /* Reserved                            */\n  struct \u00e4\n    double         _ceedsaend; /* End of DSA */\n    \u00fc ceedsaauto;\n  \u00fc;\n\n#define ceedsarent ceedsatran._ceedsarent\n#define ceedsaend  ceedsaauto._ceedsaend\n\n/* Values for field \"ceedsaflags\" */\n#define ceedsalngc       0x1000 /* C library DSA                   */\n#define ceedsalngp       0x800  /* PL/I library DSA                */\n#define ceedsaexit       0x08   /* An Exit DSA                     */\n\n/* Values for field \"ceedsaend\" */\n#define ceedsasz         0x80   /* Size of DSA                     */\n#define ceedsa_stdceedsa 0x00   /* flag values of standard CEE DSA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEEDSAHP": {"ttr": 8017, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceedsahp \u00e4\n  unsigned char  ceedsahp_bias\u00c42048\u00dc; /* BIAS -- DO NOT USE            */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _ceedsahp_fixed; /* Start of fixed part */\n      unsigned char  _filler1\u00c447\u00dc;\n      \u00fc _ceedsahp_struct1;\n    int            _ceedsahp4to15\u00c412\u00dc; /* Save area for regs 4-15 */\n    struct \u00e4\n      int            _ceedsahp4to7\u00c44\u00dc; /* Save area for regs 4-7 */\n      unsigned char  _filler2\u00c432\u00dc;\n      \u00fc _ceedsahp_struct2;\n    struct \u00e4\n      int            _ceedsahpr4;       /* Save area for register 4 */\n      int            _ceedsahpr5;       /* Save area for register 5 */\n      int            _ceedsahpr6;       /* Save area for register 6 */\n      int            _ceedsahpr7;       /* Save area for register 7 */\n      int            _ceedsahp8to15\u00c48\u00dc; /* Save area for regs 8-15  */\n      \u00fc _ceedsahp_struct3;\n    struct \u00e4\n      unsigned char  _filler3\u00c416\u00dc;\n      int            _ceedsahpr8;   /* Save area for register 8  */\n      int            _ceedsahpr9;   /* Save area for register 9  */\n      int            _ceedsahpr10;  /* Save area for register 10 */\n      int            _ceedsahpr11;  /* Save area for register 11 */\n      int            _ceedsahpr12;  /* Save area for register 12 */\n      int            _ceedsahpr13;  /* Save area for register 13 */\n      int            _ceedsahpr14;  /* Save area for register 14 */\n      int            _ceedsahpr15;  /* Save area for register 15 */\n      \u00fc _ceedsahp_struct4;\n    \u00fc _ceedsahp_union1;\n  int            _filler4;            /* Reserved for LE use           */\n  int            ceedsahpmbruse;      /* Reserved for LE Member use    */\n  void          *ceedsahptran;        /* Addr of transition area       */\n  struct \u00e4\n    void          *_ceedsahprent; /* or Program reentry addr-IPAT */\n    \u00fc ceedsahp_arg_pre;\n  unsigned char  ceedsahp_arglist;    /* Start of Vary length arg list */\n  \u00fc;\n\n#define ceedsahp_fixed _ceedsahp_union1._ceedsahp_struct1._ceedsahp_fixed\n#define ceedsahp4to15  _ceedsahp_union1._ceedsahp4to15\n#define ceedsahp4to7   _ceedsahp_union1._ceedsahp_struct2._ceedsahp4to7\n#define ceedsahpr4     _ceedsahp_union1._ceedsahp_struct3._ceedsahpr4\n#define ceedsahpr5     _ceedsahp_union1._ceedsahp_struct3._ceedsahpr5\n#define ceedsahpr6     _ceedsahp_union1._ceedsahp_struct3._ceedsahpr6\n#define ceedsahpr7     _ceedsahp_union1._ceedsahp_struct3._ceedsahpr7\n#define ceedsahp8to15  _ceedsahp_union1._ceedsahp_struct3._ceedsahp8to15\n#define ceedsahpr8     _ceedsahp_union1._ceedsahp_struct4._ceedsahpr8\n#define ceedsahpr9     _ceedsahp_union1._ceedsahp_struct4._ceedsahpr9\n#define ceedsahpr10    _ceedsahp_union1._ceedsahp_struct4._ceedsahpr10\n#define ceedsahpr11    _ceedsahp_union1._ceedsahp_struct4._ceedsahpr11\n#define ceedsahpr12    _ceedsahp_union1._ceedsahp_struct4._ceedsahpr12\n#define ceedsahpr13    _ceedsahp_union1._ceedsahp_struct4._ceedsahpr13\n#define ceedsahpr14    _ceedsahp_union1._ceedsahp_struct4._ceedsahpr14\n#define ceedsahpr15    _ceedsahp_union1._ceedsahp_struct4._ceedsahpr15\n#define ceedsahprent   ceedsahp_arg_pre._ceedsahprent\n\n/* Values for field \"ceedsahp_bias\" */\n#define ceedsahpbiassz 0x800 /* Size of Down Stack Bias */\n\n/* Values for field \"ceedsahprent\" */\n#define ceedsahpsz     0x40  /* Size of fixed DSA       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEEMCH": {"ttr": 8715, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceemch \u00e4\n  unsigned char  ceemcheyec\u00c44\u00dc;     /* Eye catcher                           */\n  short int      ceemchsize;        /* Size of area                          */\n  short int      ceemchlevel;       /* Version of MACRO generation           */\n  struct \u00e4\n    int            _ceemchgpr\u00c416\u00dc; /* Each reg, 0-15           @G3C */\n    \u00fc ceemchreg;\n  unsigned char  ceemchpsw\u00c48\u00dc;      /* PSW at time of interrupt @G3C         */\n  struct \u00e4\n    short int      _ceemchilc; /* Instruction length code */\n    struct \u00e4\n      unsigned char  _ceemchic1; /* Part 1 */\n      unsigned char  _ceemchic2; /* Part 2 */\n      \u00fc ceemchic;\n    \u00fc ceemchinti;\n  void          *ceemchpft;         /* Page fault address       @G3C         */\n  union \u00e4\n    double         _ceemchflt\u00c44\u00dc; /* Basic Floating point registers */\n    struct \u00e4\n      double         _ceemchflt_0; /* FP reg 0 */\n      double         _ceemchflt_2; /* FP reg 2 */\n      double         _ceemchflt_4; /* FP reg 4 */\n      double         _ceemchflt_6; /* FP reg 6 */\n      \u00fc _ceemch_struct1;\n    \u00fc _ceemch_union1;\n  unsigned char  ceemchrsv1\u00c448\u00dc;    /* Reserved.                        @D2C */\n  union \u00e4\n    unsigned char  _ceemchzero1\u00c416\u00dc; /* Area to be cleared in new MCHs   @D3C */\n    struct \u00e4\n      unsigned char  _filler1\u00c411\u00dc;  /* (reserved)                       @D3A */\n      unsigned char  _ceemchflags;  /* MCH flags                        @D3A */\n      unsigned char  _filler2\u00c44\u00dc;   /* (reserved)                       @D3A */\n      \u00fc _ceemch_struct2;\n    \u00fc _ceemch_union2;\n  void          *ceemchmch_ext;     /* Ptr to language MCH extension    @P1C */\n  unsigned char  ceemchmch_bea\u00c44\u00dc;  /* LE copy of SDWA_BEA              @D4A */\n  unsigned char  ceemchmch_rsv\u00c416\u00dc; /* Reserved                         @D4C */\n  union \u00e4\n    struct \u00e4\n      double         _ceemchafp\u00c413\u00dc; /* Additional floating point registers */\n      double         _ceemchflt_1;\n      \u00fc _ceemch_struct3;\n    struct \u00e4\n      double         _ceemch_flt_1;     /* FP reg 1                           @D3A */\n      double         _ceemch_flt_3;     /* FP reg 3                           @D3A */\n      double         _ceemch_flt_5;     /* FP reg 5                           @D3A */\n      double         _ceemch_flt_7;     /* FP reg 7                           @D3A */\n      double         _ceemch_flt_8;     /* FP reg 8                           @D3A */\n      double         _ceemch_flt_9;     /* FP reg 9                           @D3A */\n      double         _ceemch_flt_10;    /* FP reg 10                          @D3A */\n      double         _ceemch_flt_11;    /* FP reg 11                          @D3A */\n      double         _ceemch_flt_12;    /* FP reg 12                          @D3A */\n      double         _ceemch_flt_13;    /* FP reg 13                          @D3A */\n      double         _ceemch_flt_14;    /* FP reg 14                          @D3A */\n      double         _ceemch_flt_15;    /* FP reg 15                          @D3A */\n      struct \u00e4\n        unsigned char  _filler3;       /* First byte                        @D3A */\n        unsigned char  _filler4;       /* Second byte                       @D3A */\n        unsigned char  _ceemchfpc_dxc; /* Data Exception code (Third byte)  @D3A */\n        unsigned char  _filler5;       /* Fourth Byte                       @D3A */\n        \u00fc ceemch_fpc;\n      unsigned char  _ceemch_afp_flags; /* AFP FLAGS                          @D3A */\n      unsigned char  _filler6\u00c411\u00dc;      /* (reserved bytes)                   @D3A */\n      \u00fc _ceemch_struct4;\n    \u00fc _ceemch_union3;\n  union \u00e4\n    struct \u00e4\n      int            _ceemchgpr_h\u00c416\u00dc; /* Individual Hi-reg 0 thru 15        @D3A */\n      \u00fc ceemchreg_h;\n    struct \u00e4\n      double         _ceemchflt_3;\n      double         _ceemchflt_5;\n      double         _ceemchflt_7;\n      double         _ceemchflt_8;\n      double         _ceemchflt_9;\n      double         _ceemchflt_10;\n      double         _ceemchflt_11;\n      double         _ceemchflt_12;\n      \u00fc _ceemch_struct5;\n    \u00fc _ceemch_union4;\n  union \u00e4\n    struct \u00e4\n      double         _ceemchflt_13;\n      double         _ceemchflt_14;\n      double         _ceemchflt_15;\n      double         _ceemchfpc;\n      int            _ceemchafp_flags;\n      unsigned char  _filler7\u00c492\u00dc;\n      \u00fc _ceemch_struct6;\n    unsigned char  _filler8\u00c4128\u00dc;  /* (reserved)                        @D3A */\n    \u00fc _ceemch_union5;\n  \u00fc;\n\n#define ceemchgpr        ceemchreg._ceemchgpr\n#define ceemchilc        ceemchinti._ceemchilc\n#define ceemchic1        ceemchinti.ceemchic._ceemchic1\n#define ceemchic2        ceemchinti.ceemchic._ceemchic2\n#define ceemchflt        _ceemch_union1._ceemchflt\n#define ceemchflt_0      _ceemch_union1._ceemch_struct1._ceemchflt_0\n#define ceemchflt_2      _ceemch_union1._ceemch_struct1._ceemchflt_2\n#define ceemchflt_4      _ceemch_union1._ceemch_struct1._ceemchflt_4\n#define ceemchflt_6      _ceemch_union1._ceemch_struct1._ceemchflt_6\n#define ceemchzero1      _ceemch_union2._ceemchzero1\n#define ceemchflags      _ceemch_union2._ceemch_struct2._ceemchflags\n#define ceemchafp        _ceemch_union3._ceemch_struct3._ceemchafp\n#define ceemchflt_1      _ceemch_union3._ceemch_struct3._ceemchflt_1\n#define ceemch_flt_1     _ceemch_union3._ceemch_struct4._ceemch_flt_1\n#define ceemch_flt_3     _ceemch_union3._ceemch_struct4._ceemch_flt_3\n#define ceemch_flt_5     _ceemch_union3._ceemch_struct4._ceemch_flt_5\n#define ceemch_flt_7     _ceemch_union3._ceemch_struct4._ceemch_flt_7\n#define ceemch_flt_8     _ceemch_union3._ceemch_struct4._ceemch_flt_8\n#define ceemch_flt_9     _ceemch_union3._ceemch_struct4._ceemch_flt_9\n#define ceemch_flt_10    _ceemch_union3._ceemch_struct4._ceemch_flt_10\n#define ceemch_flt_11    _ceemch_union3._ceemch_struct4._ceemch_flt_11\n#define ceemch_flt_12    _ceemch_union3._ceemch_struct4._ceemch_flt_12\n#define ceemch_flt_13    _ceemch_union3._ceemch_struct4._ceemch_flt_13\n#define ceemch_flt_14    _ceemch_union3._ceemch_struct4._ceemch_flt_14\n#define ceemch_flt_15    _ceemch_union3._ceemch_struct4._ceemch_flt_15\n#define ceemchfpc_dxc    _ceemch_union3._ceemch_struct4.ceemch_fpc._ceemchfpc_dxc\n#define ceemch_afp_flags _ceemch_union3._ceemch_struct4._ceemch_afp_flags\n#define ceemchgpr_h      _ceemch_union4.ceemchreg_h._ceemchgpr_h\n#define ceemchflt_3      _ceemch_union4._ceemch_struct5._ceemchflt_3\n#define ceemchflt_5      _ceemch_union4._ceemch_struct5._ceemchflt_5\n#define ceemchflt_7      _ceemch_union4._ceemch_struct5._ceemchflt_7\n#define ceemchflt_8      _ceemch_union4._ceemch_struct5._ceemchflt_8\n#define ceemchflt_9      _ceemch_union4._ceemch_struct5._ceemchflt_9\n#define ceemchflt_10     _ceemch_union4._ceemch_struct5._ceemchflt_10\n#define ceemchflt_11     _ceemch_union4._ceemch_struct5._ceemchflt_11\n#define ceemchflt_12     _ceemch_union4._ceemch_struct5._ceemchflt_12\n#define ceemchflt_13     _ceemch_union5._ceemch_struct6._ceemchflt_13\n#define ceemchflt_14     _ceemch_union5._ceemch_struct6._ceemchflt_14\n#define ceemchflt_15     _ceemch_union5._ceemch_struct6._ceemchflt_15\n#define ceemchfpc        _ceemch_union5._ceemch_struct6._ceemchfpc\n#define ceemchafp_flags  _ceemch_union5._ceemch_struct6._ceemchafp_flags\n\n/* Values for field \"ceemchflags\" */\n#define ceemchhr_valid  0x40 /* High regs valid in REG_H field   @D3A */\n\n/* Values for field \"_filler3\" */\n#define ceemchfpc_imi   0x80 /* IEEE Invalid Operation mask      @D3A */\n#define ceemchfpc_imz   0x40 /* IEEE Divide by Zero mask         @D3A */\n#define ceemchfpc_imo   0x20 /* IEEE Overflow mask               @D3A */\n#define ceemchfpc_imu   0x10 /* IEEE Underflow mask              @D3A */\n#define ceemchfpc_imx   0x08 /* IEEE Inexact mask                @D3A */\n#define ceemchfpc_rs0   0x07 /* (reserved bits in byte 0)        @D3A */\n\n/* Values for field \"_filler4\" */\n#define ceemchfpc_sfi   0x80 /* IEEE Invalid Operation flag      @D3A */\n#define ceemchfpc_sfz   0x40 /* IEEE Divide by Zero flag         @D3A */\n#define ceemchfpc_sfo   0x20 /* IEEE Overflow flag               @D3A */\n#define ceemchfpc_sfu   0x10 /* IEEE Underflow flag              @D3A */\n#define ceemchfpc_sfx   0x08 /* IEEE Inexact flag                @D3A */\n#define ceemchfpc_rs1   0x07 /* (reserved bits in byte 1)        @D3A */\n\n/* Values for field \"_filler5\" */\n#define ceemchfpc_rs3   0xFC /* (reserved bits in byte 3)        @D3A */\n#define ceemchfpc_rm    0x03 /* Rounding Mode                    @D3A */\n\n/* Values for field \"ceemch_afp_flags\" */\n#define ceemchafp_saved 0x80 /* AFP registers 1,3,5,7,8-15 valid @D3A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CEEPCB": {"ttr": 8679, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ceepcb \u00e4\n  unsigned char  ceepcbeye\u00c48\u00dc;        /* eyecatcher 'CEEPCB  '                  */\n  unsigned char  ceepcbsystm;         /* Underlying Operating System            */\n  unsigned char  ceepcbhrdwr;         /* Underlying Hardware                    */\n  unsigned char  ceepcbsbsys;         /* Underlying Subsystem                   */\n  unsigned char  ceepcbflag2;\n  void          *ceepcbdbgeh;         /* A(debug event handler)                 */\n  unsigned char  ceepcbdbgrsvd\u00c48\u00dc;    /* reserved for debugger                  */\n  void          *ceepcbdmembr;        /* A(process member list)                 */\n  void          *ceepcb_zlod;         /* A(process load routine)                */\n  void          *ceepcb_zdel;         /* A(process delete routine)              */\n  void          *ceepcb_zgetst;       /* A(process get storage routine)         */\n  void          *ceepcb_zfreest;      /* A(process free storage routine)        */\n  void          *ceepcb_lvtl;         /* address of an LE library vector        */\n  void          *ceepcbrcb;           /* Address of the RCB                     */\n  void          *ceepcb_syseib;       /* A(CICS System EIB)                     */\n  int            ceepcbpsl;           /* Length of perm process stg             */\n  void          *ceepcbpsa;           /* Addr of perm process stg               */\n  void          *ceepcbpsra;          /* Perm process stg overflow              */\n  int            ceepcb_omvs_level;   /* OpenMVS release level                  */\n  void          *ceepcb_chain;        /* Next PCB on PICI environment chain.    */\n  void          *ceepcb_vssfe;        /* A(Stack segment free routine)@PQ02852A */\n  void          *ceepcbprfeh;         /* A(Profile Event Handler)     @KCI0087A */\n  unsigned char  ceepcbflag6;         /* Additional PCB flags                   */\n  unsigned char  ceepcb_rsrved;       /* - reserved space                 @P2C  */\n  short int      ceepcb_habd_cleanup; /* - HABD cleanup value             @P2A  */\n  void          *ceepcb_qfexit;       /* Address of quick freeze exit routine   */\n  void          *ceepcb_dbginfo;      /* A(Debug Data Area)                @D2A */\n  \u00fc;\n\n/* Values for field \"ceepcbsystm\" */\n#define ceepcbsyund           0x00 /* undefined                              */\n#define ceepcbsyuns           0x01 /* unsupported                            */\n#define ceepcbsyvm            0x02 /* VM                                     */\n#define ceepcbsymvs           0x03 /* MVS                                    */\n\n/* Values for field \"ceepcbhrdwr\" */\n#define ceepcbhwund           0x00 /* undefined                              */\n#define ceepcbhwuns           0x01 /* unsupported                            */\n#define ceepcbhw370           0x02 /* System / 370 non-XA                    */\n#define ceepcbhwxa            0x03 /* System / 370 XA                        */\n#define ceepcbhwesa           0x04 /* System / 370 ESA                       */\n\n/* Values for field \"ceepcbsbsys\" */\n#define ceepcbssund           0x00 /* undefined                              */\n#define ceepcbssuns           0x01 /* unsupported                            */\n#define ceepcbssnon           0x02 /* no subsystem                           */\n#define ceepcbsstso           0x03 /* TSO                                    */\n#define ceepcbsscic           0x05 /* CICS                                   */\n\n/* Values for field \"ceepcbflag2\" */\n#define ceepcbbimodal         0x80 /* Bimodal addressing is available        */\n#define ceepcb_lvform         0x40 /* LIBVEC format 1=stat./0=dynam          */\n#define ceepcb_vector         0x20 /* vector hardware available              */\n#define ceepcb_cl24           0x10 /* LE/370 Libvec for AMODE24 is avail.    */\n#define ceepcb_omvs           0x08 /* OpenMVS is up and available            */\n#define ceepcb_pici           0x02 /* PICI environment                       */\n#define ceepcb_reuse          0x01 /* Set during thread init to @DCR_A507    */\n\n/* Values for field \"ceepcb_omvs_level\" */\n#define ceepcb_omvs_1120      0x40 /* - HOM1120 functions are                */\n#define ceepcb_omvs_1130      0x20 /* - HOM1130 functions are                */\n\n/* Values for field \"ceepcbflag6\" */\n#define ceepcb_esame          0x80 /* ESAME supported                        */\n#define ceepcb_trace_level1   0x40 /* Level 1 tracing on                @DAA */\n#define ceepcb_trace_level2   0x20 /* Level 2 tracing on                @DAA */\n#define ceepcb_trace_required 0x60 /* @DAA                                   */\n#define ceepcb_hfs_debugger   0x10 /* Debugger loaded from HFS          @G3A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CMC2": {"ttr": 8237, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cmc2 \u00e4\n  struct \u00e4\n    unsigned char  _cmc2flags;    /* Channel Measurement Characterisitics Flags */\n    unsigned char  _filler1\u00c42\u00dc;   /* Reserved                                   */\n    unsigned char  _cmc2chpid;    /* Channel path ID                            */\n    unsigned char  _cmc2maskbyte; /* Mask                                       */\n    unsigned char  _filler2;      /* Reserved                                   */\n    unsigned char  _cmc2cmgq;     /* Channel measurement group qualifier        */\n    unsigned char  _cmc2cmg;      /* Channel measurement group for this CHPID   */\n    unsigned char  _filler3\u00c42\u00dc;   /* Reserved                                   */\n    short int      _cmc2speed;    /* Channel speed in 100 megabits per second   */\n    unsigned char  _cmc2data\u00c420\u00dc; /* Channel measurement characteristics data   */\n    \u00fc cmc2chanmeasurementcharblock;\n  unsigned char  _filler4\u00c48160\u00dc;\n  \u00fc;\n\n#define cmc2flags    cmc2chanmeasurementcharblock._cmc2flags\n#define cmc2chpid    cmc2chanmeasurementcharblock._cmc2chpid\n#define cmc2maskbyte cmc2chanmeasurementcharblock._cmc2maskbyte\n#define cmc2cmgq     cmc2chanmeasurementcharblock._cmc2cmgq\n#define cmc2cmg      cmc2chanmeasurementcharblock._cmc2cmg\n#define cmc2speed    cmc2chanmeasurementcharblock._cmc2speed\n#define cmc2data     cmc2chanmeasurementcharblock._cmc2data\n\n/* Values for field \"cmc2flags\" */\n#define cmc2notvalid        0x80   /* Not Valid - when 0 indicates that information */\n#define cmc2sharedchpid     0x40   /* Shared channel path                           */\n#define cmc2extsupport      0x20   /* When 1 indicates that extended-channel        */\n\n/* Values for field \"cmc2maskbyte\" */\n#define cmc2cmcvaliditymask 0xF8   /* CMC Validity mask, bits 0-4 correspond        */\n\n/* Values for field \"cmc2data\" */\n#define cmccmg1             1      /* Channel Measurement Group one                 */\n#define cmccmg2             2      /* Channel Measurement Group two                 */\n#define cmccmg3             3      /* Channel Measurement Group three               */\n#define cmc2_len            0x2000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CMC2CMG2": {"ttr": 7965, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cmc2cmg2 \u00e4\n  int            cmc2maxbuscycles;        /* Maximum bus cycles per second         */\n  int            cmc2maxchannelworkunits; /* Maximum channel work units per second */\n  int            cmc2maxwritedataunits;   /* Maximum write data units per second   */\n  int            cmc2maxreaddataunits;    /* Maximum read data units per second    */\n  int            cmc2dataunitsize;        /* Data unit size                        */\n  \u00fc;\n\n/* Values for field \"cmc2dataunitsize\" */\n#define cmc2cmg2_len 0x14\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CMC2CMG3": {"ttr": 8729, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cmc2cmg3 \u00e4\n  int            cmc3dataunitsize;       /* Data unit size        */\n  int            cmc3dataunitsizecpc;    /* Data unit size CPC    */\n  int            cmc3messageunitsize;    /* Message unit size     */\n  int            cmc3messageunitsizecpc; /* Message unit size CPC */\n  unsigned char  _filler1\u00c44\u00dc;            /* Reserved              */\n  \u00fc;\n\n/* Values for field \"_filler1\" */\n#define cmc2cmg3_len 0x14\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CMD@LU": {"ttr": 8601, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct lu \u00e4\n  void          *luchain;   /* pointer to the next lu  */\n  unsigned char  lukl;      /* key length              */\n  unsigned char  lukv\u00c417\u00dc;  /* key value               */\n  unsigned char  lukc\u00c42\u00dc;   /* key code                */\n  unsigned char  lusm;      /* max num of subfields    */\n  unsigned char  lusl\u00c42\u00dc;   /* max length of subfields */\n  unsigned char  lust;      /* type of subfield        */\n  void          *lul;       /* low chain pointer       */\n  void          *lua;       /* key code stored here    */\n  void          *ludefault; /* default pointer         */\n  void          *luvalue;   /* key code value pointer  */\n  \u00fc;\n\n/* Values for field \"lust\" */\n#define lust_n  0x01 /* number                     */\n#define lust_nb 0x03 /* number converted to binary */\n#define lust_m  0x40 /* name                       */\n#define lust_k  0x08 /* keyword                    */\n#define lust_t  0x80 /* text                       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "COMMON": {"ttr": 8353, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*\n * THIS FILE CONTAINS SAMPLE CODE.  IBM PROVIDES THIS CODE ON AN\n * 'AS IS' BASIS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n */\n\n#ifndef _COMMON_H\n#define _COMMON_H\n\n#include <utils.hpp>\n#include <gskssl.h>\n\n#define MAX_QUEUED_REQUESTS 20\n#define MAX_BUFFER_SIZE     1024*32\n\n#define PORTNUM           4321\n#define LOCALHOST         0x7F000001     /* 127.0.0.1 */\n\n#define COOKIE            \"\\x21\\x12\\x21\\x12\"\n\n#define QUITCOMMAND         22\n#define CQUITCOMMAND        23\n#define USERDATA             0\n\nstruct MsgHeader {\n   char cookie\u00dd4\u00a8;\n   int  length;\n   int  command;\n   int  returnlength;\n};\n\nstruct CacheEntry {\n   struct CacheEntry *pNext;\n   struct CacheEntry *pPrev;\n   unsigned          sessionIDLen;\n   int               SSLVersion;\n   gsk_data_buffer   *pData;\n   unsigned char     sessionID\u00dd1\u00a8;\n};\n\nstruct Connection {\n#define CONNECTION_EYECATCHER_LEN 8\n#define CONNECTION_EYECATCHER \"CONN    \"\n   char eyecatcher\u00ddCONNECTION_EYECATCHER_LEN\u00a8;\n   char *host;\n   int hostAddr;\n   int port;\n   int sock;\n   int handle;\n   boolean isSecure;\n   gsk_soc_data *socData;\n};\n\nextern \"C\" {\n\n/* CLIENT OPEN */\nConnection *OpenConnection( char *host, int port );\n\n/* SERVER SETUP */\nConnection *SetupConnection( char *host, int port, int maxQueued );\n\n/* SERVER ACCEPT */\nConnection *AcceptConnection( Connection *handle );\n\nint SendMsg( Connection *handle, int command, void *data, int dataLength, int returnDataLength );\n\nint RecvMsg( Connection *handle, int *command, void *data, int *dataLength, int *returnDataLength );\n\nvoid CloseConnection( Connection **handle );\n\nint CacheInit(void);\n\nunsigned long GetPeer(int fd);\n}\n\n#endif /* _COMMON_H */\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CPMB": {"ttr": 8693, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpmb \u00e4\n  unsigned char  _filler1\u00c44\u00dc;         /* Reserved                                      */\n  int            cpmb_sample_count;   /* CPMF sample count - updated whenever new data */\n  unsigned char  cpmb_chp_data\u00c44088\u00dc; /* Channel path data, comprised of a list of 256 */\n  \u00fc;\n\n/* Values for field \"cpmb_chp_data\" */\n#define cpmb_len 0x1000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CPMX": {"ttr": 8411, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpmx \u00e4\n  struct \u00e4\n    unsigned char  _cpmxdata\u00c464\u00dc; /* Extended channel measurement group data */\n    \u00fc cpmxchannelutilizationentry;\n  unsigned char  _filler1\u00c416320\u00dc;\n  \u00fc;\n\n#define cpmxdata cpmxchannelutilizationentry._cpmxdata\n\n/* Values for field \"cpmxdata\" */\n#define cpmx_len 0x4000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CPMXCMG2": {"ttr": 8261, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpmxcmg2 \u00e4\n  int            cpmxtotalcountops;\n  int            cpmxtotalcountopsdeferred;\n  unsigned char  cpmxsummationcountops\u00c48\u00dc;\n  int            cpmxtotalcountopsfcx;\n  int            cpmxtotalcountopsdeferredfcx;\n  unsigned char  cpmxsummationcountopsfcx\u00c48\u00dc;\n  unsigned char  cpmxreserved\u00c432\u00dc;\n  \u00fc;\n\n/* Values for field \"cpmxreserved\" */\n#define cpmxcmg2_len 0x40\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CPM2": {"ttr": 8677, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpm2 \u00e4\n  struct \u00e4\n    unsigned char  _cpm2channelutilinfovalitymask; /* Channel utilization info validity        */\n    int            _cpm2timestamp : 24;            /* Time stamp indicating when data was last */\n    unsigned char  _cpm2data\u00c428\u00dc;                  /* Channel measurement group data           */\n    \u00fc cpm2channelutilizationentry;\n  unsigned char  _filler1\u00c48160\u00dc;\n  \u00fc;\n\n#define cpm2channelutilinfovalitymask cpm2channelutilizationentry._cpm2channelutilinfovalitymask\n#define cpm2timestamp                 cpm2channelutilizationentry._cpm2timestamp\n#define cpm2data                      cpm2channelutilizationentry._cpm2data\n\n/* Values for field \"cpm2data\" */\n#define cpm2_len 0x2000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CPM2CMG1": {"ttr": 8559, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpm2cmg1 \u00e4\n  int            cmg1totalchannelbusytime; /* Channel Path Busy Time, total for the */\n  int            cmg1lparchannelbusytime;  /* Channel Path Busy Time, just for this */\n  unsigned char  _filler1\u00c420\u00dc;             /* Reserved                              */\n  \u00fc;\n\n/* Values for field \"_filler1\" */\n#define cpm2cmg1_len 0x1C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CPM2CMG2": {"ttr": 8281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpm2cmg2 \u00e4\n  int            cmg2totalbuscyclecount;        /* Count of Bus Cycles, total for the CHPID   */\n  int            cmg2totalchannelworkunitcount; /* Count of Channel Work Units, total         */\n  int            cmg2lparchannelworkunitcount;  /* Count of Channel Work Units, just          */\n  int            cmg2totalwritedataunits;       /* Count of Data Units Written, total for     */\n  int            cmg2lparwritedataunits;        /* Count of Data Units Written, just for this */\n  int            cmg2totalreaddataunits;        /* Count of Data Units Read, total for the    */\n  int            cmg2lparreaddataunits;         /* Count of Data Units Read, just for this    */\n  \u00fc;\n\n/* Values for field \"cmg2lparreaddataunits\" */\n#define cpm2cmg2_len 0x1C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CPM2CMG3": {"ttr": 8525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cpm2cmg3 \u00e4\n  int            cmg3messageunitssent;         /* Count of message units sent by programs      */\n  int            cmg3messageunitssentcpc;      /* Count of message units sent by programs      */\n  int            cmg3unsuccattemptstosend;     /* Unsuccessful attempts to send messages       */\n  int            cmg3unavailreceivebuffers;    /* Count of unavailable receive buffers in      */\n  int            cmg3unavailreceivebufferscpc; /* Unavailable receive buffers in the           */\n  int            cmg3dataunitssent;            /* Number of data units sent by programs in the */\n  int            cmg3dataunitssentcpc;         /* Number of data units sent by all logical     */\n  \u00fc;\n\n/* Values for field \"cmg3dataunitssentcpc\" */\n#define cpm2cmg3_len 0x1C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CSD": {"ttr": 8555, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct csd \u00e4\n  unsigned char  csdcsd\u00c44\u00dc;                           /* -    CONTROL BLOCK ACRONYM IN EBCDIC                   */\n  struct \u00e4\n    unsigned char  _csdcpujs\u00c42\u00dc; /* -      Bit mask of CPUs available for Affinity      */\n    short int      _filler1;     /* -         Reserved: (was CSDCHAD)              @L9C */\n    \u00fc csdcpujw;\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _csdcpual\u00c42\u00dc; /* -      Bit mask of CPUs currently alive. */\n      \u00fc csdsaff;\n    short int      _csdcpuol; /* -         Number of CPUs currently alive. This */\n    \u00fc csdcpuow;\n  struct \u00e4\n    unsigned char  _csdscfl1; /* -      FIRST BYTE OF CSDSCWRD  */\n    unsigned char  _csdscfl2; /* -      SECOND BYTE OF CSDSCWRD */\n    unsigned char  _csdscfl3; /* -      THIRD BYTE OF CSDSCWRD  */\n    unsigned char  _csdscfl4; /* -      FOURTH BYTE OF CSDSCWRD */\n    \u00fc csdscwrd;\n  int            _filler2;                            /* Was CSDAXPOW, CSDAXPAL, CSDAXPOL     @L9C              */\n  unsigned char  csdmf1cp\u00c42\u00dc;                         /* -      BIT MASK OF CPUS VARIED ON OR OFFLINE.          */\n  unsigned char  csdacr;                              /* -      VALUE OF X'FF' MEANS ACR IS IN PROGRESS         */\n  unsigned char  csdflags;                            /* -      FLAG BYTE                                       */\n  double         csd_cpu_alive;                       /* CPU alive data on double word boundary                 */\n  double         csd_cpus_going_on_or_off_mask;       /* mask of CPUs varied on or off                          */\n  double         csd_cpus_manipulated_by_wlm;         /* Mask of CPUs manipulated by WLM.                       */\n  double         csd_cpus_varied_offline_by_operator; /* Mask of CPU varied offline                             */\n  double         csd_cpus_taken_offline_by_acr;       /* Mask of CPU varied offline by                          */\n  struct \u00e4\n    double         _csd_bylpar_cp_mask; /* @HBA */\n    \u00fc csd_cp_mask;\n  struct \u00e4\n    struct \u00e4\n      double         _csd_bylpar_ifa_mask; /* @HBA */\n      \u00fc csd_bylpar_zaap_mask;\n    \u00fc csd_ifa_mask;\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        double         _csd_sup_mask;\n        \u00fc csd_bylpar_sup_mask;\n      \u00fc csd_bylpar_ziip_mask;\n    \u00fc csd_ziip_mask;\n  unsigned char  csdrv04c\u00c416\u00dc;                        /* Reserved space on Dword Bdy          @HAC              */\n  unsigned char  _filler3\u00c42\u00dc;                         /* -      Reserved: was CSDCPWLM               @L9C       */\n  short int      csdddrct;                            /* -         DDR DEVICE ALLOCATION INTERFACE COUNT        */\n  int            csdgdcc;                             /* -         COUNT OF USABLE CLOCK COMPARATORS            */\n  int            csdgdint;                            /* -         COUNT OF USABLE CPU TIMERS CURRENTLY IN      */\n  int            csdgdtod;                            /* -         COUNT OF CPUS THAT HAVE ACCESS TO A GOOD     */\n  int            csdtcnt;                             /* -         COUNT OF TAPE ALLOCATIONS IN PROGRESS        */\n  int            csducnt;                             /* -         COUNT OF UNIT RECORD ALLOCATIONS IN          */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _filler4\u00c42\u00dc;   /* -      CPU 0 */\n      unsigned char  _filler5\u00c42\u00dc;   /* -      CPU 1 */\n      unsigned char  _filler6\u00c42\u00dc;   /* -      CPU 2 */\n      unsigned char  _filler7\u00c42\u00dc;   /* -      CPU 3 */\n      unsigned char  _filler8\u00c42\u00dc;   /* -      CPU 4 */\n      unsigned char  _filler9\u00c42\u00dc;   /* -      CPU 5 */\n      unsigned char  _filler10\u00c42\u00dc;  /* -      CPU 6 */\n      unsigned char  _filler11\u00c42\u00dc;  /* -      CPU 7 */\n      unsigned char  _filler12\u00c42\u00dc;  /* -      CPU 8 */\n      unsigned char  _filler13\u00c42\u00dc;  /* -      CPU 9 */\n      unsigned char  _filler14\u00c42\u00dc;  /* -      CPU A */\n      unsigned char  _filler15\u00c42\u00dc;  /* -      CPU B */\n      unsigned char  _filler16\u00c42\u00dc;  /* -      CPU C */\n      unsigned char  _filler17\u00c42\u00dc;  /* -      CPU D */\n      unsigned char  _filler18\u00c42\u00dc;  /* -      CPU E */\n      unsigned char  _filler19\u00c42\u00dc;  /* -      CPU F */\n      \u00fc csdmask0;\n    \u00fc csdmask;\n  unsigned char  csdiosid;                            /* RESERVED -- DO NOT REUSE             @L6C              */\n  unsigned char  csdicpus;                            /* -      The number of initial (LPAR-defined)            */\n  struct \u00e4\n    unsigned char  _csdi_bylpar_ifas; /* -                                      @HBA */\n    \u00fc csdiifas;\n  struct \u00e4\n    unsigned char  _csdi_bylpar_sups; /* -                                      @HBA */\n    \u00fc csdisups;\n  struct \u00e4\n    unsigned char  _csdcpuvf\u00c42\u00dc;  /* -      BIT MASK OF CPUS WITH ONLINE VECTORS @H2A */\n    unsigned char  _filler20\u00c42\u00dc;  /* -      TWO BYTES TO MAKE CSDCPUVF A FULL    @D1C */\n    \u00fc csdcpuvw;\n  void          *csdcmt;                              /* -            ADDRESS OF THE CONFIGURATION MANAGEMENT   */\n  void          *csdesat;                             /* -            ADDRESS OF THE EXCESSIVE SPIN        @L1A */\n  void          *csdtmpes;                            /* -            ADDRESS OF THE EXCESSIVE SPIN        @D3C */\n  void          *csdrcfv;                             /* -            ADDRESS OF THE RECONFIGURATION VECTOR     */\n  unsigned char  csdcpsid\u00c416\u00dc;                        /* TABLE OF SIDE ID FOR EACH CPU IN     @L4A              */\n  int            _filler21;                           /* Reserved: was  CSDCPACW              @L9C              */\n  void          *csdlwvct;                            /* -            ADDRESS OF THE LOADWAIT VECTOR TABLE @H4A */\n  struct \u00e4\n    unsigned char  _csdcrypt\u00c42\u00dc; /* -    BIT MASK OF ONLINE CRYPTO FACILITIES.@H7A */\n    unsigned char  _csdcrins\u00c42\u00dc; /* -    BIT MASK OF INSTALLED CRYPTO FACILITIES.  */\n    \u00fc csdcrwrd;\n  int            csd_number_online_cpus;              /* 32-bit count of alive CPUs. This                       */\n  void          *csdumvcl;                            /* -            ADDRESS OF THE IEEUMVCL ENTRY POINT  @H5A */\n  void          *csdustck;                            /* -            ADDRESS OF THE IEEUSTCK ENTRY POINT  @H5A */\n  void          *csd_esta;                            /* -            ADDRESS OF THE ISN$ESTA ENTRY POINT  @H5A */\n  void          *csd_frr;                             /* -            ADDRESS OF THE ISN$FRR  ENTRY POINT  @H5A */\n  void          *csdscpin;                            /* -            ADDRESS OF THE ISN$SCPI ENTRY POINT  @H6A */\n  short int      csdmaxmp;                            /* Maximum CPU address in configuration @L9A              */\n  unsigned char  _filler22\u00c42\u00dc;                        /* -     RESERVED.                            @L9C        */\n  struct \u00e4\n    int            _csdexcnt; /* COUNT OF ACTIVE USERS OF GLOBAL SPIN-LOOP */\n    int            _csdexsec; /* EXPIRATION TIME (DOWN TO SECONDS) FOR     */\n    \u00fc csdexcds;\n  void          *csdglex;                             /* -            ADDRESS OF THE MACRO PROCESSOR (BLWGLEX)  */\n  unsigned char  csdplpn;                             /* PRSM LOGICAL PARTITION NUMBER        @H8A              */\n  unsigned char  csdexsfl;                            /* FLAG BYTE FOR EXCESSIVE SPIN         @P4A              */\n  unsigned char  _filler23\u00c42\u00dc;                        /* RESERVED                             @05A              */\n  void          *csdrcpt;                             /* Address to the LCCA,LCCX and PCCA                      */\n  struct \u00e4\n    struct \u00e4\n      int            _csd_number_online_bylpar_ifas; /* zAAPs online                    @HBA */\n      \u00fc csd_number_online_bylpar_zaaps;\n    \u00fc csd_number_online_ifas;\n  struct \u00e4\n    int            _csd_number_online_bylpar_standard_cps; /* Regular CPs online      @HBA */\n    \u00fc csd_number_online_standard_cps;\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        int            _csd_number_online_sups; /* @HAA */\n        \u00fc csd_number_online_bylpar_sups;\n      \u00fc csd_number_online_bylpar_ziips;\n    \u00fc csd_number_online_ziips;\n  unsigned char  csddiag\u00c488\u00dc;                         /* -    RESERVED.                            @HBA         */\n  unsigned char  _filler24\u00c440\u00dc;                       /* -    RESERVED.                            @HBC         */\n  double         csdend;                              /* End of CSD control block             @L9C              */\n  \u00fc;\n\n#define csdcpujs                              csdcpujw._csdcpujs\n#define csdcpual                              csdcpuow.csdsaff._csdcpual\n#define csdcpuol                              csdcpuow._csdcpuol\n#define csdscfl1                              csdscwrd._csdscfl1\n#define csdscfl2                              csdscwrd._csdscfl2\n#define csdscfl3                              csdscwrd._csdscfl3\n#define csdscfl4                              csdscwrd._csdscfl4\n#define csd_bylpar_cp_mask                    csd_cp_mask._csd_bylpar_cp_mask\n#define csd_bylpar_ifa_mask                   csd_ifa_mask.csd_bylpar_zaap_mask._csd_bylpar_ifa_mask\n#define csd_sup_mask                          csd_ziip_mask.csd_bylpar_ziip_mask.csd_bylpar_sup_mask._csd_sup_mask\n#define csdi_bylpar_ifas                      csdiifas._csdi_bylpar_ifas\n#define csdi_bylpar_sups                      csdisups._csdi_bylpar_sups\n#define csdcpuvf                              csdcpuvw._csdcpuvf\n#define csdcrypt                              csdcrwrd._csdcrypt\n#define csdcrins                              csdcrwrd._csdcrins\n#define csdexcnt                              csdexcds._csdexcnt\n#define csdexsec                              csdexcds._csdexsec\n#define csd_number_online_bylpar_ifas         csd_number_online_ifas.csd_number_online_bylpar_zaaps._csd_number_online_bylpar_ifas\n#define csd_number_online_bylpar_standard_cps csd_number_online_standard_cps._csd_number_online_bylpar_standard_cps\n#define csd_number_online_sups                csd_number_online_ziips.csd_number_online_bylpar_ziips.csd_number_online_bylpar_sups._csd_number_online_sups\n\n/* Values for field \"csdscfl1\" */\n#define csdrv042                 0x80  /* -  RESERVED                                        */\n#define csdsysnd                 0x40  /* -        SYSTEM-WIDE NON-DISPATCHABILITY BIT.      */\n#define csdrv001                 0x20  /* -  RESERVED                                        */\n#define csdrv002                 0x10  /* -  RESERVED                                        */\n#define csdrv003                 0x08  /* -  RESERVED                                        */\n#define csdrv004                 0x04  /* -  RESERVED                                        */\n#define csdrv005                 0x02  /* -  RESERVED                                        */\n#define csdrv006                 0x01  /* -  RESERVED                                        */\n\n/* Values for field \"csdscfl2\" */\n#define csdrv007                 0x80  /* -  RESERVED                                        */\n#define csdrv008                 0x40  /* -  RESERVED                                        */\n#define csdrv009                 0x20  /* -  RESERVED                                        */\n#define csdrv010                 0x10  /* -  RESERVED                                        */\n#define csdrv011                 0x08  /* -  RESERVED                                        */\n#define csdrv012                 0x04  /* -  RESERVED                                        */\n#define csdrv013                 0x02  /* -  RESERVED                                        */\n#define csdrv014                 0x01  /* -  RESERVED                                        */\n\n/* Values for field \"csdscfl3\" */\n#define csdrv015                 0x80  /* -  RESERVED                                        */\n#define csdrv016                 0x40  /* -  RESERVED                                        */\n#define csdrv017                 0x20  /* -  RESERVED                                        */\n#define csdrv018                 0x10  /* -  RESERVED                                        */\n#define csdrv019                 0x08  /* -  RESERVED                                        */\n#define csdrv020                 0x04  /* -  RESERVED                                        */\n#define csdrv021                 0x02  /* -  RESERVED                                        */\n#define csdrv022                 0x01  /* -  RESERVED                                        */\n\n/* Values for field \"csdscfl4\" */\n#define csdrv023                 0x80  /* -  RESERVED                                        */\n#define csdrv024                 0x40  /* -  RESERVED                                        */\n#define csdrv025                 0x20  /* -  RESERVED                                        */\n#define csdrv026                 0x10  /* -  RESERVED                                        */\n#define csdrv027                 0x08  /* -  RESERVED                                        */\n#define csdrv028                 0x04  /* -  RESERVED                                        */\n#define csdrv029                 0x02  /* -  RESERVED                                        */\n#define csdrv030                 0x01  /* -  RESERVED                                        */\n\n/* Values for field \"csdflags\" */\n#define csdmp                    0x80  /* -        RESERVED - DO NOT USE                @L7C */\n#define csdstchk                 0x40  /* -        STORAGE CHECK INDICATOR - SET BY RSM      */\n#define csdcpudn                 0x20  /* -  GLOBAL BIT INDICATING CPU INITIALIZATION        */\n#define csdndpar                 0x10  /* -  RUNNING IN NON-DEDICATED PARTITION.  @P7A       */\n#define csdprcpu                 0x08  /* -  Preserve CPU status                  @07A       */\n#define csdrv036                 0x04  /* -  RESERVED                                        */\n#define csdrv037                 0x02  /* -  RESERVED                                        */\n#define csdrv038                 0x01  /* -  RESERVED                                        */\n\n/* Values for field \"csdend\" */\n#define csdlen                   0x190 /* Length of CSD control block          @L9C          */\n#define csd_max_crypto_address   15    /* Maximum supported Crypto address     @L9A          */\n#define csd_max_affinity_address 15    /* Max CPU supporting affinity        @L9A            */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CSTDIO": {"ttr": 8185, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_CSTDIO\n#define INCLUDE_CSTDIO\n\n#define  DLLDEF_HPP_PROTO\n#include \"defstdio.hpp\"\n#undef  DLLDEF_HPP_PROTO\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CSVDLCB": {"ttr": 8603, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dlcb \u00e4\n  union \u00e4\n    unsigned char  _dlcbnoninterface1\u00c412\u00dc; /* Not part of the intended interface */\n    struct \u00e4\n      unsigned char  _dlcbid\u00c44\u00dc;   /* Acronym */\n      unsigned char  _filler1\u00c48\u00dc;\n      \u00fc _dlcb_struct1;\n    \u00fc _dlcb_union1;\n  void          *dlcbdcb_;              /* This is a TOKEN that can be passed via the */\n  void          *dlcbllt_;              /* Address of LLT for this LNKLST. Not valid  */\n  unsigned char  dlcbnoninterface2\u00c416\u00dc; /* Not part of the intended interface         */\n  unsigned char  dlcblnklstsetname\u00c416\u00dc; /* LNKLST set name                            */\n  unsigned char  dlcbnoninterface3\u00c416\u00dc; /* Not part of the intended interface         */\n  \u00fc;\n\n#define dlcbnoninterface1 _dlcb_union1._dlcbnoninterface1\n#define dlcbid            _dlcb_union1._dlcb_struct1._dlcbid\n\n/* Values for field \"dlcbnoninterface3\" */\n#define dlcb_len 0x44\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CSVLDCB": {"ttr": 8593, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dlcb \u00e4\n  union \u00e4\n    unsigned char  _dlcbnoninterface1\u00c412\u00dc; /* Not part of the intended interface */\n    struct \u00e4\n      unsigned char  _dlcbid\u00c44\u00dc;   /* Acronym */\n      unsigned char  _filler1\u00c48\u00dc;\n      \u00fc _dlcb_struct1;\n    \u00fc _dlcb_union1;\n  void          *dlcbdcb_;              /* This is a TOKEN that can be passed via the */\n  void          *dlcbllt_;              /* Address of LLT for this LNKLST. Not valid  */\n  unsigned char  dlcbnoninterface2\u00c416\u00dc; /* Not part of the intended interface         */\n  unsigned char  dlcblnklstsetname\u00c416\u00dc; /* LNKLST set name                            */\n  unsigned char  dlcbnoninterface3\u00c416\u00dc; /* Not part of the intended interface         */\n  \u00fc;\n\n#define dlcbnoninterface1 _dlcb_union1._dlcbnoninterface1\n#define dlcbid            _dlcb_union1._dlcb_struct1._dlcbid\n\n/* Values for field \"dlcbnoninterface3\" */\n#define dlcb_len 0x44\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CVTXTNT1": {"ttr": 8721, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cvtxtnt1 \u00e4\n  void          *cvtfachn;    /* -        ADDRESS OF CHAIN OF DCB FIELD AREAS */\n  unsigned char  cvt1r004\u00c48\u00dc; /* RESERVED                              @LFC   */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CVTXTNT2": {"ttr": 8055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cvtxtnt2 \u00e4\n  unsigned char  cvt2r000\u00c44\u00dc;  /* RESERVED                              @LFC          */\n  unsigned char  cvtnucls;     /* -      IDENTIFICATION OF THE NUCLEUS MEMBER         */\n  unsigned char  cvtflgbt;     /* -     Flag byte. This byte is an interface          */\n  unsigned char  cvtiocid\u00c42\u00dc;  /* -     EBCDIC IDENTIFIER OF THE ACTIVE I/O   @LBA    */\n  void          *cvtdebvr;     /* - ADDRESS OF BRANCH ENTRY POINT OF DEB              */\n  void          *cvtcvaf;      /* -        POINTER TO THE CVAF TABLE, WHICH CONTAINS  */\n  void          *cvtmmvt;      /* ADDRESS OF THE MEDIA MANAGER VECTOR TABLE           */\n  void          *cvtncvp;      /* ADDRESS OF CSA BUFFER POOL - USED BY                */\n  struct \u00e4\n    unsigned char  _filler1;      /* -     RESERVED - FIRST BYTE OF CVTQID       @LFC */\n    int            _cvtqida : 24; /* -      ADDRESS OF QUEUE IDENTIFICATION (QID)     */\n    \u00fc cvtqid;\n  void          *cvtoltep;     /* -        POINTER TO CONTROL BLOCK CREATED BY SVC 59 */\n  unsigned char  cvt2r020\u00c44\u00dc;  /* -     RESERVED                              @LFC    */\n  struct \u00e4\n    unsigned char  _filler2\u00c44\u00dc;  /* @P5A */\n    \u00fc cvtavvt;\n  void          *cvtccvt;      /* -        ADDRESS OF CRYPTOGRAPHIC FACILITY CVT      */\n  void          *cvtskta;      /* -        ADDRESS OF STORAGE KEY TABLE (VM           */\n  void          *cvticb;       /* -        ADDRESS OF MASS STORAGE SYSTEM (MSS)       */\n  unsigned char  cvtfbyt1;     /* -     FLAG BYTE                                     */\n  unsigned char  cvt2r035\u00c43\u00dc;  /* -     RESERVED                              @LFC    */\n  struct \u00e4\n    int            _cvtldtol; /* HIGH WORD                             @08A */\n    int            _cvtldtor; /* LOW WORD                              @08A */\n    \u00fc cvtldto;\n  void          *cvtatcvt;     /* -        POINTER TO VTAM'S CVT             @ZA65734 */\n  unsigned char  cvt2r044\u00c44\u00dc;  /* -     RESERVED                              @LFC    */\n  int            cvtbclmt;     /* -        NUMBER OF 130-BYTE RECORDS SET ASIDE  @LBA */\n  int            cvt2r04c;     /* RESERVED                              @0BA          */\n  struct \u00e4\n    int            _cvtlsoh; /* HIGH WORD                             @0BA */\n    int            _cvtlsol; /* LOW WORD                              @0BA */\n    \u00fc cvtlso;\n  unsigned char  cvt2r058\u00c444\u00dc; /* RESERVED                              @0BC          */\n  \u00fc;\n\n#define cvtqida  cvtqid._cvtqida\n#define cvtldtol cvtldto._cvtldtol\n#define cvtldtor cvtldto._cvtldtor\n#define cvtlsoh  cvtlso._cvtlsoh\n#define cvtlsol  cvtlso._cvtlsol\n\n/* Values for field \"cvtflgbt\" */\n#define cvtnpe   0x80 /* -       INDICATES NON-PAGING ENVIRONMENT (VM       */\n#define cvtvme   0x40 /* -       INDICATES MACHINE IS OPERATING IN VM       */\n#define cvtbah   0x20 /* -       INDICATES THAT THE VM/370 - OS/VS1 BTAM    */\n#define cvtundvm 0x10 /* -       Running under VM (this is not the same     */\n\n/* Values for field \"cvtavvt\" */\n#define cvtavin  0x80 /* INDICATES AVM INSTALLED               @LAA         */\n\n/* Values for field \"cvtfbyt1\" */\n#define cvtrde   0x80 /* -       RELIABILITY DATA EXTRACTOR INDICATOR  @D7A */\n\n/* Values for field \"cvtatcvt\" */\n#define cvtatact 0x80 /* IF ON, VTAM IS ACTIVE               MDC081         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "DACH": {"ttr": 8745, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dach \u00e4\n  unsigned char  dachid\u00c44\u00dc;   /* Control block ID                           */\n  unsigned char  dachvers;    /* Version number                             */\n  unsigned char  dachdevc\u00c42\u00dc; /* Device category                            */\n  unsigned char  dachtype\u00c44\u00dc; /* Type of change that occurred to the device */\n  unsigned char  _filler1;    /* reserved                                   */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _dach_io_fields;\n      unsigned char  _filler2\u00c431\u00dc;\n      \u00fc _dach_struct1;\n    struct \u00e4\n      unsigned char  _dach_iora_fields;\n      unsigned char  _filler3\u00c431\u00dc;\n      \u00fc _dach_struct2;\n    struct \u00e4\n      unsigned char  _dach_ccdr_fields;\n      unsigned char  _filler4\u00c431\u00dc;\n      \u00fc _dach_struct3;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _dach_ccdr_date\u00c44\u00dc; /* Date */\n        unsigned char  _dach_ccdr_time\u00c44\u00dc; /* Time */\n        \u00fc dach_ccdr_timestp;\n      short int      _dach_ccdr_devn;    /* Device number undergoing a CDR change         */\n      unsigned char  _dach_ccdr_dtyp\u00c44\u00dc; /* Device type from UCBTYP                       */\n      short int      _dach_ccdr_cdrlen;  /* Length of CDR record                          */\n      void          *_dach_ccdr_cdradr;  /* Address of CDR record                         */\n      unsigned char  _dach_ccdr_chpid;   /* Channel path that the CDR record was obtained */\n      unsigned char  _filler5\u00c411\u00dc;\n      \u00fc _dach_struct4;\n    struct \u00e4\n      unsigned char  _dach_pav_fields;\n      unsigned char  _filler6\u00c431\u00dc;\n      \u00fc _dach_struct5;\n    struct \u00e4\n      unsigned char  _dach_st_fields;\n      unsigned char  _filler7\u00c431\u00dc;\n      \u00fc _dach_struct6;\n    struct \u00e4\n      unsigned char  _dach_naloc_fields;\n      unsigned char  _filler8\u00c431\u00dc;\n      \u00fc _dach_struct7;\n    struct \u00e4\n      void          *_dachnalocucb; /* UCB for device in use */\n      unsigned char  _filler9\u00c428\u00dc;\n      \u00fc dach_naloc;\n    struct \u00e4\n      unsigned char  _dach_tran_fields;\n      unsigned char  _filler10\u00c431\u00dc;\n      \u00fc _dach_struct8;\n    unsigned char  _dachquald\u00c432\u00dc; /* Qualifier dependent area */\n    struct \u00e4\n      short int      _dach_io_devn;    /* Device number undergoing a subchannel change */\n      unsigned char  _dach_io_dtyp\u00c44\u00dc; /* Device type from UCBTYP                      */\n      unsigned char  _dach_io_ssid;    /* Subchannel set of the device number          */\n      unsigned char  _filler11\u00c425\u00dc;\n      \u00fc _dach_struct9;\n    struct \u00e4\n      short int      _dach_iora_devn;    /* Device number becomming accessible       */\n      unsigned char  _dach_iora_dtyp\u00c44\u00dc; /* Device type from UCBTYP                  */\n      unsigned char  _dach_iora_chpd;    /* CHPID established.                       */\n      unsigned char  _dach_iora_flags;\n      unsigned char  _dach_iora_ssid;    /* Subchannel set ID associated with the IO */\n      unsigned char  _filler12\u00c423\u00dc;      /* Reserved                                 */\n      \u00fc _dach_struct10;\n    struct \u00e4\n      short int      _dach_pav_devn;      /* Device number of PAV-base device             */\n      struct \u00e4\n        unsigned int   _filler13 : 9;  /* Reserved */\n        \u00fc dach_pav_flgs;\n      short int      _dach_pav_cnt;       /* Count of PAVs, including base                */\n      unsigned char  _dach_pav_ssidbase;  /* Subchannel set ID associated with the        */\n      unsigned char  _filler14;           /* Reserved                                     */\n      unsigned char  _dach_pav_tokn\u00c44\u00dc;   /* PAV token after change                       */\n      struct \u00e4\n        int            _dach_pav_devicebusydtime; /* Device busy delay time           */\n        int            _dach_pav_cubusydtime;     /* CU busy delay time               */\n        int            _dach_pav_dportbusydtime;  /* Destination port busy delay time */\n        \u00fc dach_pav_schibdata;\n      short int      _dach_pav_devnalias; /* Device number of PAV-Alias device if this is */\n      short int      _dach_pavbasembi;    /* MBI for base device                          */\n      short int      _dach_pavaliasmbi;   /* MBI for alias device                         */\n      unsigned char  _dach_pav_ssidalias; /* Subchannel set of the alias device number    */\n      unsigned char  _filler15;           /* Reserved                                     */\n      \u00fc _dach_struct11;\n    struct \u00e4\n      unsigned char  _dach_sw_switchnumber\u00c44\u00dc; /* Switch device number updated */\n      unsigned char  _dach_sw_portnumber\u00c42\u00dc;   /* Port Address on Switch       */\n      unsigned char  _filler16\u00c426\u00dc;\n      \u00fc _dach_struct12;\n    struct \u00e4\n      short int      _dach_tran_cu;   /* Control unit number undergoing transition */\n      unsigned char  _dach_tran_mode; /* Target transition mode                    */\n      unsigned char  _filler17\u00c429\u00dc;   /* Reserved                                  */\n      \u00fc _dach_struct13;\n    \u00fc _dach_union1;\n  struct \u00e4\n    unsigned char  _dachucbc;  /* Device class from UCBTYP field (Byte 3 of */\n    unsigned char  _filler18;  /* Reserved.                                 */\n    short int      _dachqn;    /* DACH qualifier number field               */\n    \u00fc dachqc;\n  unsigned char  dachres\u00c416\u00dc; /* reserved                                   */\n  unsigned char  dachend;     /* End of DACH parameter list                 */\n  \u00fc;\n\n#define dach_io_fields           _dach_union1._dach_struct1._dach_io_fields\n#define dach_iora_fields         _dach_union1._dach_struct2._dach_iora_fields\n#define dach_ccdr_fields         _dach_union1._dach_struct3._dach_ccdr_fields\n#define dach_ccdr_date           _dach_union1._dach_struct4.dach_ccdr_timestp._dach_ccdr_date\n#define dach_ccdr_time           _dach_union1._dach_struct4.dach_ccdr_timestp._dach_ccdr_time\n#define dach_ccdr_devn           _dach_union1._dach_struct4._dach_ccdr_devn\n#define dach_ccdr_dtyp           _dach_union1._dach_struct4._dach_ccdr_dtyp\n#define dach_ccdr_cdrlen         _dach_union1._dach_struct4._dach_ccdr_cdrlen\n#define dach_ccdr_cdradr         _dach_union1._dach_struct4._dach_ccdr_cdradr\n#define dach_ccdr_chpid          _dach_union1._dach_struct4._dach_ccdr_chpid\n#define dach_pav_fields          _dach_union1._dach_struct5._dach_pav_fields\n#define dach_st_fields           _dach_union1._dach_struct6._dach_st_fields\n#define dach_naloc_fields        _dach_union1._dach_struct7._dach_naloc_fields\n#define dachnalocucb             _dach_union1.dach_naloc._dachnalocucb\n#define dach_tran_fields         _dach_union1._dach_struct8._dach_tran_fields\n#define dachquald                _dach_union1._dachquald\n#define dach_io_devn             _dach_union1._dach_struct9._dach_io_devn\n#define dach_io_dtyp             _dach_union1._dach_struct9._dach_io_dtyp\n#define dach_io_ssid             _dach_union1._dach_struct9._dach_io_ssid\n#define dach_iora_devn           _dach_union1._dach_struct10._dach_iora_devn\n#define dach_iora_dtyp           _dach_union1._dach_struct10._dach_iora_dtyp\n#define dach_iora_chpd           _dach_union1._dach_struct10._dach_iora_chpd\n#define dach_iora_flags          _dach_union1._dach_struct10._dach_iora_flags\n#define dach_iora_ssid           _dach_union1._dach_struct10._dach_iora_ssid\n#define dach_pav_devn            _dach_union1._dach_struct11._dach_pav_devn\n#define dach_pav_cnt             _dach_union1._dach_struct11._dach_pav_cnt\n#define dach_pav_ssidbase        _dach_union1._dach_struct11._dach_pav_ssidbase\n#define dach_pav_tokn            _dach_union1._dach_struct11._dach_pav_tokn\n#define dach_pav_devicebusydtime _dach_union1._dach_struct11.dach_pav_schibdata._dach_pav_devicebusydtime\n#define dach_pav_cubusydtime     _dach_union1._dach_struct11.dach_pav_schibdata._dach_pav_cubusydtime\n#define dach_pav_dportbusydtime  _dach_union1._dach_struct11.dach_pav_schibdata._dach_pav_dportbusydtime\n#define dach_pav_devnalias       _dach_union1._dach_struct11._dach_pav_devnalias\n#define dach_pavbasembi          _dach_union1._dach_struct11._dach_pavbasembi\n#define dach_pavaliasmbi         _dach_union1._dach_struct11._dach_pavaliasmbi\n#define dach_pav_ssidalias       _dach_union1._dach_struct11._dach_pav_ssidalias\n#define dach_sw_switchnumber     _dach_union1._dach_struct12._dach_sw_switchnumber\n#define dach_sw_portnumber       _dach_union1._dach_struct12._dach_sw_portnumber\n#define dach_tran_cu             _dach_union1._dach_struct13._dach_tran_cu\n#define dach_tran_mode           _dach_union1._dach_struct13._dach_tran_mode\n#define dachucbc                 dachqc._dachucbc\n#define dachqn                   dachqc._dachqn\n\n/* Values for field \"dach_ccdr_chpid\" */\n#define dach_ccdr_fields_len     0x15\n\n/* Values for field \"dachnalocucb\" */\n#define dach_naloc_fields_len    0x20\n\n/* Values for field \"dach_io_ssid\" */\n#define dach_io_fields_len       0x07\n\n/* Values for field \"dach_iora_flags\" */\n#define dach_iora_onli           0x80       /* On if device was online                       */\n#define dach_iora_vary_dev       0x40       /* On if IOS issued a VARY command in order      */\n\n/* Values for field \"_filler12\" */\n#define dachdach                 0xC4C1C3C8 /* DACH control block ID                         */\n#define dachverc                 1          /* DACH version number                           */\n#define dachdtio                 0xC9D6     /* Device undergoing subchannel change is an I/O */\n#define dachdtcu                 0xC3E4     /* Device category is Control Unit               */\n#define dach_hyperpav_transition 1          /* PAVMode change processing is requested        */\n#define dach_basepav_transition  2          /* PAVMode change processing is requested        */\n#define dach_iora_fields_len     0x20\n\n/* Values for field \"dach_pav_flgs\" */\n#define dach_pavbind             0x80       /* Alias is bound to base                        */\n#define dach_pavunbind           0x40       /* Alias is unbound from base                    */\n#define dach_pavunbindall        0x20       /* All aliases are unbound from base             */\n#define dach_pavschibdatavalid   0x10       /* Schib data is valid                           */\n#define dach_pav_basembivalid    0x08       /* The MBI for the base device is valid          */\n#define dach_pav_aliasmbivalid   0x04       /* The MBI for the alias device is valid         */\n#define dach_pav_dbt_valid       0x02       /* The device busy time for the alias device     */\n\n/* Values for field \"_filler15\" */\n#define dach_pav_fields_len      0x20\n\n/* Values for field \"dach_sw_portnumber\" */\n#define dach_st_fields_len       0x06\n\n/* Values for field \"_filler17\" */\n#define dachio                   0x01       /* Qualifier value for ENF signal/listener when  */\n#define dachiora                 0x02       /* Qualifier value for ENF signal/listener when  */\n#define dachccdr                 0x03       /* Qualifier value for ENF signal/listener when  */\n#define dachpav                  0x04       /* Qualifier value for ENF signal/listener when  */\n#define dachqapi                 0x05       /* Qualifier value for ENF signal/listener when  */\n#define dachstc                  0x06       /* Qualifier value for ENF signal/listener when  */\n#define dachnac                  0x07       /* Qualifier value for ENF signal/listener when  */\n#define dachtran                 0x08       /* Qualifier value for ENF signal/listener when  */\n#define dachio_as                0x1001     /* Qualifier value for ENF signal/listener when  */\n#define dachiora_as              0x1002     /* Qualifier value for ENF signal/listener when  */\n#define dachpav_as               0x1004     /* Qualifier value for ENF signal/listener when  */\n#define dachipi                  0xC9D7C940 /* Installed parameters initialized              */\n#define dachipm                  0xC9D7D440 /* Installed parameters modified                 */\n#define dachlpe                  0xD3D7C540 /* Logical path established type.                */\n#define dachacdr                 0xC1C3C4D9 /* Change CDR is an add CDR record               */\n#define dachdcdr                 0xC4C3C4D9 /* Change CDR is a delete CDR record             */\n#define dachpavs                 0xD7C1E5E2 /* Change in the set of PAV-alias devices        */\n#define dachapi                  0xC1D7C940 /* Change in the Adjunct Processor Info          */\n#define dachswtb                 0xE2E6E3C2 /* Change in the Port State                      */\n#define dachnaloc                0xD5C1D3C3 /* Offline device in use                         */\n#define dachtypetran             0xE3D9C1D5 /* Transition                                    */\n#define dach_tran_fields_len     0x20\n\n/* Values for field \"dachend\" */\n#define dach_len                 0x40\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "DATA": {"ttr": 8107, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct data \u00e4\n  int            dataid : 24;   /* RECORD ID                   */\n  short int      datalgth;      /* record length               */\n  int            datatype : 24; /* record type                 */\n  unsigned char  dataresv\u00c45\u00dc;   /* reserved                    */\n  unsigned char  datadata;      /* variable length data record */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DB2STR": {"ttr": 8063, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_DB2STRUCT\n#define INCLUDE_DB2STRUCT\n\n#include \"qfss62mu/qw0325.hpp\"\n#include \"qfss62mu/qw0273.hpp\"\n#include \"qfss62mu/qw0272.hpp\"\n#include \"qfss62mu/qw0250z.hpp\"\n#include \"qfss62mu/qw0250x.hpp\"\n#include \"qfss62mu/qw0250ds.hpp\"\n#include \"qfss62mu/qw0250cn.hpp\"\n#include \"qfss62mu/qw0250he.hpp\"\n#include \"qfss62mu/qw0237.hpp\"\n#include \"qfss62mu/qw0233.hpp\"\n#include \"qfss62mu/qw0177.hpp\"\n#include \"qfss62mu/qw0173.hpp\"\n#include \"qfss62mu/qw0112.hpp\"\n#include \"qfss62mu/qw0097.hpp\"\n#include \"qfss62mu/qw0096.hpp\"\n#include \"qfss62mu/qw0092.hpp\"\n#include \"qfss62mu/qw0066.hpp\"\n#include \"qfss62mu/qw0065.hpp\"\n#include \"qfss62mu/qw0064.hpp\"\n#include \"qfss62mu/qw0063.hpp\"\n#include \"qfss62mu/qw0062.hpp\"\n#include \"qfss62mu/qw0061.hpp\"\n#include \"qfss62mu/qw0060.hpp\"\n#include \"qfss62mu/qw0059.hpp\"\n#include \"qfss62mu/qw0058.hpp\"\n#include \"qfss62mu/qw0055.hpp\"\n#include \"qfss62mu/qw0053.hpp\"\n#include \"qfss62mu/qw0022.hpp\"\n#include \"qfss62mu/qwhd.hpp\"\n#include \"qfss62mu/qwhu.hpp\"\n#include \"qfss62mu/qwht.hpp\"\n#include \"qfss62mu/qwhc.hpp\"\n#include \"qfss62mu/qwha.hpp\"\n#include \"qfss62mu/qwhs.hpp\"\n#include \"qfss62mu/qwt0.hpp\"\n#include \"qfss62mu/sm102.hpp\"\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DCCD": {"ttr": 8345, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dccd \u00e4\n  unsigned char  dccdid\u00c44\u00dc;   /* Control block acronym                */\n  unsigned char  dccdvern;    /* DCCD version number                  */\n  char           dccdfunc;    /* For CONFCHG CHGREQ exit, indicates   */\n  unsigned char  dccdflgs;    /* Flags                           @P1C */\n  unsigned char  _filler1;    /* Reserved                        @P1C */\n  int            dccdsize;    /* Total size of DCCD                   */\n  int            dccdstrt;    /* Offset of first DCCD entry           */\n  int            dccdentc;    /* Number of entries in the DCCD        */\n  struct \u00e4\n    unsigned char  _dccdiodn\u00c444\u00dc; /* IODF dataset name */\n    unsigned char  _filler2\u00c44\u00dc;   /* Reserved          */\n    \u00fc dccdiodf;\n  unsigned char  dccdedt\u00c42\u00dc;  /* ID of new EDT                        */\n  unsigned char  _filler3\u00c42\u00dc; /* Reserved                             */\n  unsigned char  dccdcfid\u00c48\u00dc; /* Operating system configuration ID    */\n  int            dccd_ua;     /* Number of UCBs added                 */\n  int            dccd_ud;     /* Number of UCBs deleted               */\n  char           dccdactf;    /* Activate function requested          */\n  unsigned char  _filler4\u00c43\u00dc; /* Reserved                             */\n  \u00fc;\n\n#define dccdiodn dccdiodf._dccdiodn\n\n/* Values for field \"dccdflgs\" */\n#define dccdsoft 0x80 /* Software-only configuration */\n\n/* Values for field \"_filler4\" */\n#define dccdhlen 0x5C /* Length of DCCD header       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "DCCDARRY": {"ttr": 8085, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dccdarry \u00e4\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _dccdetyp; /* DCCD entry type                      */\n        unsigned char  _dccdereq; /* DCCD entry request type              */\n        unsigned char  _dccdeflg; /* DCCD entry flags                @P1C */\n        unsigned char  _dccdecss; /* Channel Subsystem ID            @L6C */\n        \u00fc dccdehdr;\n      unsigned char  _dccdenty\u00c428\u00dc; /* Entry type specific information */\n      \u00fc dccde;\n    struct \u00e4\n      unsigned char  _filler1\u00c44\u00dc;\n      short int      _dccddevn;    /* Device number */\n      struct \u00e4\n        unsigned char  _dccddcmk;    /* Mask of CHPIDs contained in DCCDDCHP */\n        unsigned char  _dccddpmk;    /* Mask of physical control unit        */\n        char           _dccddchp\u00c48\u00dc; /* Array of CHPIDs that are to be       */\n        short int      _dccddpcu\u00c48\u00dc; /* Array of physical control unit       */\n        \u00fc dccddeva;\n      \u00fc _dccdarry_struct1;\n    struct \u00e4\n      unsigned char  _filler2\u00c44\u00dc;\n      char           _dccdssid;     /* Subchannel set number           @L8A */\n      unsigned char  _filler3;\n      unsigned char  _dccddtyp;     /* Device type.  This field is copied   */\n      unsigned char  _dccddtyf;     /* Device type flags              @02A  */\n      unsigned char  _filler4\u00c424\u00dc;  /* Reserved for future use        @02A  */\n      \u00fc _dccdarry_struct2;\n    struct \u00e4\n      unsigned char  _filler5\u00c44\u00dc;\n      short int      _dccdpcun;    /* Physical control unit number         */\n      unsigned char  _dccdflg2;    /* Flag byte                       @P7C */\n      unsigned char  _dccdpcmk;    /* Mask of channel path IDs that are to */\n      char           _dccdpchp\u00c48\u00dc; /* Array of CHPIDs that are to be       */\n      struct \u00e4\n        unsigned char  _filler6;  /* Reserved                */\n        unsigned char  _dccdpuac; /* Count of unit addresses */\n        unsigned char  _filler7;  /* Reserved                */\n        unsigned char  _dccdpsua; /* Starting unit address   */\n        \u00fc dccdpua;\n      int            _dccdsbc;     /* Switch busy count               @P7A */\n      int            _dccdcubc;    /* Control unit busy count         @P7A */\n      int            _dccdscnt;    /* Success count                   @P7A */\n      \u00fc _dccdarry_struct3;\n    struct \u00e4\n      unsigned char  _filler8\u00c44\u00dc;\n      unsigned char  _dccdcchp;      /* Channel path ID */\n      unsigned char  _filler9\u00c43\u00dc;    /* Reserved        */\n      unsigned char  _filler10\u00c424\u00dc;\n      \u00fc _dccdarry_struct4;\n    struct \u00e4\n      unsigned char  _filler11\u00c44\u00dc;\n      unsigned char  _dccdlp_name\u00c48\u00dc; /* Logical partition name          @L7A */\n      unsigned char  _dccdlp_mifid;   /* MIF image identifier            @L7A */\n      unsigned char  _filler12\u00c419\u00dc;\n      \u00fc _dccdarry_struct5;\n    \u00fc _dccdarry_union1;\n  \u00fc;\n\n#define dccdetyp     _dccdarry_union1.dccde.dccdehdr._dccdetyp\n#define dccdereq     _dccdarry_union1.dccde.dccdehdr._dccdereq\n#define dccdeflg     _dccdarry_union1.dccde.dccdehdr._dccdeflg\n#define dccdecss     _dccdarry_union1.dccde.dccdehdr._dccdecss\n#define dccdenty     _dccdarry_union1.dccde._dccdenty\n#define dccddevn     _dccdarry_union1._dccdarry_struct1._dccddevn\n#define dccddcmk     _dccdarry_union1._dccdarry_struct1.dccddeva._dccddcmk\n#define dccddpmk     _dccdarry_union1._dccdarry_struct1.dccddeva._dccddpmk\n#define dccddchp     _dccdarry_union1._dccdarry_struct1.dccddeva._dccddchp\n#define dccddpcu     _dccdarry_union1._dccdarry_struct1.dccddeva._dccddpcu\n#define dccdssid     _dccdarry_union1._dccdarry_struct2._dccdssid\n#define dccddtyp     _dccdarry_union1._dccdarry_struct2._dccddtyp\n#define dccddtyf     _dccdarry_union1._dccdarry_struct2._dccddtyf\n#define dccdpcun     _dccdarry_union1._dccdarry_struct3._dccdpcun\n#define dccdflg2     _dccdarry_union1._dccdarry_struct3._dccdflg2\n#define dccdpcmk     _dccdarry_union1._dccdarry_struct3._dccdpcmk\n#define dccdpchp     _dccdarry_union1._dccdarry_struct3._dccdpchp\n#define dccdpuac     _dccdarry_union1._dccdarry_struct3.dccdpua._dccdpuac\n#define dccdpsua     _dccdarry_union1._dccdarry_struct3.dccdpua._dccdpsua\n#define dccdsbc      _dccdarry_union1._dccdarry_struct3._dccdsbc\n#define dccdcubc     _dccdarry_union1._dccdarry_struct3._dccdcubc\n#define dccdscnt     _dccdarry_union1._dccdarry_struct3._dccdscnt\n#define dccdcchp     _dccdarry_union1._dccdarry_struct4._dccdcchp\n#define dccdlp_name  _dccdarry_union1._dccdarry_struct5._dccdlp_name\n#define dccdlp_mifid _dccdarry_union1._dccdarry_struct5._dccdlp_mifid\n\n/* Values for field \"dccdeflg\" */\n#define dccdehdw     0x80       /* Hardware change                 @P1C */\n#define dccdesft     0x40       /* Software change                 @P1C */\n#define dccdesta     0x20       /* Indicates that this entry was        */\n#define dccdecon     0x10       /* Indicates whether UCB for device is  */\n#define dccdethiscss 0x08       /* Indicates that the DCCD entry        */\n#define dccdeap      0x02       /* The activating partition will lose   */\n#define dccdecc      0x01       /* Indicates that this entry was        */\n\n/* Values for field \"dccdenty\" */\n#define dccdelen     0x20       /* Length of DCCD entry            @P1A */\n\n/* Values for field \"dccddtyf\" */\n#define dccdswtc     0x80       /* If 1, indicates that the device      */\n#define dccdpavb     0x80       /* If 1, indicates that the device      */\n#define dccdpava     0x40       /* If 1, indicates that the device      */\n\n/* Values for field \"dccdflg2\" */\n#define dccdvld      0x80       /* If 1, indicates DCCDLCU is valid     */\n#define dccdsqv      0x40       /* If 1, indicates DCCDSBC,             */\n\n/* Values for field \"dccdlp_mifid\" */\n#define dccdcbid     0xC4C3C3C4 /* DCCD control block acronym           */\n#define dccdcbvn     0x01       /* DCCD version number                  */\n#define dccdfpfc     0x01       /* Prepare for configuration change     */\n#define dccdfccr     0x02       /* Configuration change rejected        */\n#define dccdactv     0x01       /* Activate function                    */\n#define dccdrecv     0x05       /* Recover function                     */\n#define dccddcm      0x06       /* DCM change function            @L3A  */\n#define dccdimcu     0x07       /* Internal IOS request to modify       */\n#define dccddev      0x01       /* Device entry                         */\n#define dccdpcu      0x02       /* Control unit entry                   */\n#define dccdchp      0x03       /* CHPID entry                          */\n#define dccdmdev     0x04       /* coupling facility device entry @D1C  */\n#define dccdmp       0x05       /* coupling facility CU entry     @D1C  */\n#define dccdlpar     0x06       /* Logical partition entry        @L7A  */\n#define dccdsdev     0x07       /* Device entry for devices in channel  */\n#define dccddeve     0x08       /* Expansion entry for devices in       */\n#define dccdddel     0x01       /* Delete device                        */\n#define dccddadd     0x02       /* Add device                           */\n#define dccdddc      0x03       /* Modify to remove CHPID(s)            */\n#define dccddac      0x04       /* Modify to add CHPID(s)               */\n#define dccdddp      0x05       /* Modify to remove CU(s)               */\n#define dccddap      0x06       /* Modify to add CU(s)                  */\n#define dccddmsc     0x07       /* Modify subchannel characteristics    */\n#define dccddmpp     0x08       /* Modify preferred path                */\n#define dccdpdel     0x01       /* Delete control unit                  */\n#define dccdpadd     0x02       /* Add control unit                     */\n#define dccdpdc      0x03       /* Modify to delete CHPID(s)            */\n#define dccdpac      0x04       /* Modify to add CHPID(s)               */\n#define dccdpmdu     0x05       /* Modify to delete unit address range  */\n#define dccdpmau     0x06       /* Modify to add unit address range     */\n#define dccdpmnf     0x07       /* Modify to change the number          */\n#define dccdpmdf     0x08       /* Modify to delete a managed           */\n#define dccdpmaf     0x09       /* Modify to delete a managed           */\n#define dccdcdel     0x01       /* Delete CHPID                         */\n#define dccdcadd     0x02       /* Add CHPID                            */\n#define dccdcdi      0x03       /* Modify to delete logical             */\n#define dccdcai      0x04       /* Modify to add logical                */\n#define dccdccac     0x05       /* Modify to change the Associated      */\n#define dccdldel     0x01       /* Delete logical partition        @L7A */\n#define dccdladd     0x02       /* Add logical partition           @L7A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "DCUOUTH": {"ttr": 7917, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct dcuouth \u00e4\n  union \u00e4\n    int            _dcurdw; /* RECORD DESCRIPTOR WORD */\n    struct \u00e4\n      short int      _dculeng;     /* LENGTH OF THIS RECORD */\n      unsigned char  _filler1\u00c42\u00dc;  /* RESERVED              */\n      \u00fc _dcuouth_struct1;\n    \u00fc _dcuouth_union1;\n  unsigned char  dcurctyp\u00c42\u00dc;     /* RECORD TYPE FOR THIS RECORD          */\n  short int      dcuvers;         /* VERSION                              */\n  unsigned char  dcusysid\u00c44\u00dc;     /* SYSTEM ID FOR THIS OPERATION         */\n  union \u00e4\n    unsigned char  _dcutmstp\u00c48\u00dc; /* TIMESTAMP FIELD */\n    struct \u00e4\n      int            _dcutime;    /* TIME IN SMF HEADER FORMAT     */\n      unsigned char  _dcudate\u00c44\u00dc; /* DATE IN SMF FORMAT (CCYYDDDF) */\n      \u00fc _dcuouth_struct2;\n    \u00fc _dcuouth_union2;\n  unsigned char  _filler2\u00c44\u00dc;     /* RESERVED                             */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _dcdadsi;\n        \u00fc dcudata;\n      unsigned char  _filler3\u00c4355\u00dc;\n      \u00fc _dcuouth_struct3;\n    struct \u00e4\n      unsigned char  _dcassoc;\n      unsigned char  _filler4\u00c4355\u00dc;\n      \u00fc _dcuouth_struct4;\n    struct \u00e4\n      unsigned char  _dcvvoli;\n      unsigned char  _filler5\u00c4355\u00dc;\n      \u00fc _dcuouth_struct5;\n    struct \u00e4\n      unsigned char  _ddcdata;\n      unsigned char  _filler6\u00c4355\u00dc;\n      \u00fc _dcuouth_struct6;\n    struct \u00e4\n      unsigned char  _dscdata;\n      unsigned char  _filler7\u00c4355\u00dc;\n      \u00fc _dcuouth_struct7;\n    struct \u00e4\n      unsigned char  _dmcdata;\n      unsigned char  _filler8\u00c4355\u00dc;\n      \u00fc _dcuouth_struct8;\n    struct \u00e4\n      unsigned char  _dbcdata;\n      unsigned char  _filler9\u00c4355\u00dc;\n      \u00fc _dcuouth_struct9;\n    struct \u00e4\n      unsigned char  _dsgdata;\n      unsigned char  _filler10\u00c4355\u00dc;\n      \u00fc _dcuouth_struct10;\n    struct \u00e4\n      unsigned char  _dvldata;\n      unsigned char  _filler11\u00c4355\u00dc;\n      \u00fc _dcuouth_struct11;\n    struct \u00e4\n      unsigned char  _dagdata;\n      unsigned char  _filler12\u00c4355\u00dc;\n      \u00fc _dcuouth_struct12;\n    struct \u00e4\n      unsigned char  _ddrdata;\n      unsigned char  _filler13\u00c4355\u00dc;\n      \u00fc _dcuouth_struct13;\n    struct \u00e4\n      unsigned char  _dlbdata;\n      unsigned char  _filler14\u00c4355\u00dc;\n      \u00fc _dcuouth_struct14;\n    struct \u00e4\n      unsigned char  _dcndata;\n      unsigned char  _filler15\u00c4355\u00dc;\n      \u00fc _dcuouth_struct15;\n    struct \u00e4\n      unsigned char  _daidata;\n      unsigned char  _filler16\u00c4355\u00dc;\n      \u00fc _dcuouth_struct16;\n    struct \u00e4\n      unsigned char  _dcddsnam\u00c444\u00dc;   /* DATA SET NAME           */\n      unsigned char  _dcderror;       /* ERROR INFORMATION FLAGS */\n      unsigned char  _dcdflag1;       /* INFORMATION FLAG #1     */\n      unsigned char  _dcdflag2;       /* INFORMATION FLAG #2     */\n      unsigned char  _dcdflag3;       /* INFORMATION FLAG #3     */\n      unsigned char  _filler17\u00c42\u00dc;    /* reserved                */\n      unsigned char  _dcddsorg\u00c42\u00dc;    /* DATA SET ORGANIZATION   */\n      unsigned char  _filler18\u00c4304\u00dc;\n      \u00fc _dcuouth_struct17;\n    struct \u00e4\n      unsigned char  _dcadsnam\u00c444\u00dc;   /* DATA SET NAME               */\n      unsigned char  _dcaassoc\u00c444\u00dc;   /* BASE CLUSTER NAME           */\n      unsigned char  _dcaflag1;       /* VSAM INFORMATION FLAG #1    */\n      unsigned char  _dcaflag2;       /* VSAM INFORMATION FLAG #2    */\n      unsigned char  _filler19\u00c42\u00dc;    /* RESERVED                    */\n      int            _dcahurba;       /* HIGH USED RBA / CI          */\n      int            _dcaharba;       /* HIGH ALLOCATED RBA / CI     */\n      int            _dcanlr;         /* NUMBER OF LOGICAL RECORDS   */\n      int            _dcadlr;         /* NUMBER OF DELETED RECORDS   */\n      int            _dcainr;         /* NUMBER OF INSERTED RECORDS  */\n      int            _dcaupr;         /* NUMBER OF UPDATED RECORDS   */\n      int            _dcartr;         /* NUMBER OF RETRIEVED RECORDS */\n      int            _dcaasp;         /* BYTES OF FREESPACE IN DS    */\n      int            _dcacis;         /* NUMBER OF CI SPLITS         */\n      int            _dcacas;         /* NUMBER OF CA SPLITS         */\n      int            _dcaexc;         /* NUMBER OF EXCPS             */\n      short int      _dcarkp;         /* RELATIVE KEY POSITION       */\n      short int      _dcakln;         /* KEY LENGTH                  */\n      unsigned char  _dcahurbc\u00c48\u00dc;    /* HIGH USED RBA CALC FRM CI   */\n      unsigned char  _dcaharbc\u00c48\u00dc;    /* HI ALLOC RBA CALC FRM CI    */\n      int            _dcacisz;        /* NUMBER BYTES IN A CI        */\n      int            _dcacaci;        /* NUMBER CI'S IN A CA         */\n      unsigned char  _filler20\u00c416\u00dc;   /* RESERVED                    */\n      unsigned char  _dcassoce;       /* END OF DCASSOC              */\n      unsigned char  _filler21\u00c4175\u00dc;\n      \u00fc _dcuouth_struct18;\n    struct \u00e4\n      unsigned char  _dcvvolsr\u00c46\u00dc;    /* VOLUME SERIAL NUMBER           */\n      unsigned char  _dcvflag1;       /* INFORMATION FLAG #1            */\n      unsigned char  _dcverror;       /* ERROR INFORMATION FLAG         */\n      unsigned char  _filler22\u00c43\u00dc;    /* RESERVED                       */\n      char           _dcvperct;       /* PERCENT FREESPACE ON VOLUME    */\n      int            _dcvfresp;       /* FREESPACE ON VOLUME (IN KB)    */\n      int            _dcvalloc;       /* ALLOCATED SPACE ON VOL (IN KB) */\n      int            _dcvvlcap;       /* TOTAL CAPACITY OF VOL (IN KB)  */\n      int            _dcvfragi;       /* FRAGMENTATION INDEX            */\n      int            _dcvlgext;       /* LARGEST FREE EXTENT ON VOLUME  */\n      int            _dcvfrext;       /* NUMBER OF FREE EXTENTS         */\n      int            _dcvfdscb;       /* FREE DSCBS IN VTOC             */\n      int            _dcvfvirs;       /* FREE VIRS                      */\n      unsigned char  _dcvdvtyp\u00c48\u00dc;    /* DEVICE TYPE                    */\n      short int      _dcvdvnum;       /* DEVICE NUMBER                  */\n      unsigned char  _filler23\u00c42\u00dc;    /* RESERVED                       */\n      unsigned char  _dcvstggp\u00c432\u00dc;\n      unsigned char  _filler24\u00c4268\u00dc;\n      \u00fc _dcuouth_struct19;\n    struct \u00e4\n      unsigned char  _ddcnmfld\u00c432\u00dc;   /* SPACE FOR NAME AND LENGTH */\n      unsigned char  _filler25\u00c4324\u00dc;\n      \u00fc _dcuouth_struct20;\n    struct \u00e4\n      short int      _ddcnmlen;       /* LENGTH OF NAME         */\n      unsigned char  _ddcname\u00c430\u00dc;    /* NAME OF DATA CLASS     */\n      unsigned char  _ddcuser\u00c48\u00dc;     /* USERID OF LAST UPDATER */\n      unsigned char  _ddcdate\u00c410\u00dc;    /* DATE OF LAST UPDATE    */\n      unsigned char  _filler26\u00c42\u00dc;    /* RESERVED               */\n      unsigned char  _ddctime\u00c48\u00dc;     /* TIME OF LAST UPDATE    */\n      unsigned char  _ddcdesc\u00c4120\u00dc;   /* DESCRIPTION            */\n      unsigned char  _ddcspec\u00c44\u00dc;\n      unsigned char  _filler27\u00c4172\u00dc;\n      \u00fc _dcuouth_struct21;\n    struct \u00e4\n      unsigned char  _dscnmfld\u00c432\u00dc;   /* SPACE FOR NAME AND LENGTH */\n      unsigned char  _filler28\u00c4324\u00dc;\n      \u00fc _dcuouth_struct22;\n    struct \u00e4\n      short int      _dscnmlen;       /* LENGTH OF NAME                                */\n      unsigned char  _dscname\u00c430\u00dc;    /* NAME OF STORAGE CLASS                         */\n      unsigned char  _dscuser\u00c48\u00dc;     /* USERID OF LAST UPDATER                        */\n      unsigned char  _dscdate\u00c410\u00dc;    /* DATE OF LAST UPDATE                           */\n      unsigned char  _filler29\u00c42\u00dc;    /* RESERVED                                      */\n      unsigned char  _dsctime\u00c48\u00dc;     /* TIME OF LAST UPDATE                           */\n      unsigned char  _dscdesc\u00c4120\u00dc;   /* DESCRIPTION                                   */\n      unsigned char  _dscflags;\n      unsigned char  _dscflag2;\n      unsigned char  _filler30\u00c42\u00dc;    /* RESERVED                                      */\n      char           _dscavail;       /* AVAILABILITY OPTIONS                          */\n      char           _dscdirb;        /* DIRECT BIAS - SEE CONSTANTS                   */\n      char           _dscseqb;        /* SEQ. BIAS - SEE CONSTANTS                     */\n      char           _dscacces;       /* ACCESSIBILITY - SEE CONSTS.                   */\n      int            _dsciacdl;       /* INITIAL ACCESS RESPONSE SEC                   */\n      int            _dscdirr;        /* MICROSECOND RESPONSE TIME OBJECTIVE -- DIRECT */\n      int            _dscseqr;        /* MICROSECOND RESPONSE TIME OBJECTIVE --        */\n      int            _dscstsdr;       /* STRIPING SUSTAIND DATA RATE                   */\n      unsigned char  _dsccchst\u00c432\u00dc;   /* Cache Set Name                                */\n      unsigned char  _filler31\u00c4120\u00dc;\n      \u00fc _dcuouth_struct23;\n    struct \u00e4\n      unsigned char  _dmcnmfld\u00c432\u00dc;   /* SPACE FOR NAME AND LENGTH */\n      unsigned char  _filler32\u00c4324\u00dc;\n      \u00fc _dcuouth_struct24;\n    struct \u00e4\n      short int      _dmcnmlen;       /* LENGTH OF NAME                                */\n      unsigned char  _dmcname\u00c430\u00dc;    /* NAME OF MANAGEMENT CLASS                      */\n      unsigned char  _dmcuser\u00c48\u00dc;     /* USERID OF LAST UPDATER                        */\n      unsigned char  _dmcdate\u00c410\u00dc;    /* DATE OF LAST UPDATE                           */\n      unsigned char  _filler33\u00c42\u00dc;    /* RESERVED                                      */\n      unsigned char  _dmctime\u00c48\u00dc;     /* TIME OF LAST UPDATE                           */\n      unsigned char  _dmcdesc\u00c4120\u00dc;   /* DESCRIPTION                                   */\n      unsigned char  _dmcspec1;       /* ATTRIBUTE SPECIFIED FLAGS: 1= SPECIFIED       */\n      unsigned char  _dmcspec2;       /* ATTRIBUTE SPECIFIED FLAGS: 1= SPECIFIED       */\n      unsigned char  _dmcrlf;\n      unsigned char  _filler34;       /* RESERVED                                      */\n      unsigned char  _dmcgdgfl;       /* GDG ATTRIBUTE FLAGS                           */\n      unsigned char  _filler35;       /* RESERVED                                      */\n      short int      _dmcpelem;       /* NUM GDG ELEMENTS ON PRIMARY                   */\n      unsigned char  _dmcexpf;        /* FLAGS                                         */\n      char           _dmcexpac;       /* EXPIRE ACTION: SEE CONST                      */\n      short int      _dmcrdarc;       /* RETAIN DAYS ARCHIVE COPY                      */\n      unsigned char  _dmcretf;        /* DATA SET RETENTION FLAGS                      */\n      char           _dmcrfmt;        /* Format used for DMCEXDAT -- DATE OR DAYS: SEE */\n      unsigned char  _filler36\u00c42\u00dc;    /* RESERVED                                      */\n      int            _dmcexpdy;       /* EXPIRE AFTER DAYS NO USE                      */\n      int            _dmcexdat;       /* EXPIRE DAYS SINCE CREATE                      */\n      unsigned char  _filler37\u00c4152\u00dc;\n      \u00fc _dcuouth_struct25;\n    struct \u00e4\n      unsigned char  _filler38\u00c432\u00dc;   /* RESERVED                 */\n      unsigned char  _dbcuser\u00c48\u00dc;     /* USERID OF LAST UPDATER   */\n      unsigned char  _dbcdate\u00c410\u00dc;    /* DATE OF LAST UPDATE      */\n      unsigned char  _filler39\u00c42\u00dc;    /* RESERVED                 */\n      unsigned char  _dbctime\u00c48\u00dc;     /* TIME OF LAST UPDATE      */\n      unsigned char  _dbcdesc\u00c4120\u00dc;   /* DESCRIPTION              */\n      unsigned char  _dbcflags;       /* Reserved                 */\n      unsigned char  _dbcflgdc;       /* DCOLLECT flags           */\n      unsigned char  _filler40\u00c42\u00dc;    /* RESERVED                 */\n      unsigned char  _dbcdefmc\u00c432\u00dc;   /* DEFAULT MANAGEMENT CLASS */\n      unsigned char  _filler41\u00c4140\u00dc;\n      \u00fc _dcuouth_struct26;\n    struct \u00e4\n      unsigned char  _dsgnmfld\u00c432\u00dc;   /* SPACE FOR NAME AND LENGTH */\n      unsigned char  _filler42\u00c4324\u00dc;\n      \u00fc _dcuouth_struct27;\n    struct \u00e4\n      short int      _dsgnmlen;       /* LENGTH OF NAME                            */\n      unsigned char  _dsgname\u00c430\u00dc;    /* NAME OF DATA CLASS                        */\n      unsigned char  _dsguser\u00c48\u00dc;     /* USERID OF LAST UPDATER                    */\n      unsigned char  _dsgdate\u00c410\u00dc;    /* DATE OF LAST UPDATE                       */\n      unsigned char  _filler43\u00c42\u00dc;    /* RESERVED                                  */\n      unsigned char  _dsgtime\u00c48\u00dc;     /* TIME OF LAST UPDATE                       */\n      unsigned char  _dsgdesc\u00c4120\u00dc;   /* DESCRIPTION                               */\n      unsigned char  _dsgflags;       /* FLAGS AND RESERVED                        */\n      unsigned char  _dsgflgdc;       /* RESERVED                                  */\n      unsigned char  _filler44\u00c42\u00dc;    /* RESERVED                                  */\n      char           _dsgftype;       /* STORAGE GROUP TYPE -- SEE CONSTANTS BELOW */\n      char           _dsgfhthr;       /* HIGH THRESHOLD - 0 TO 99 %                */\n      char           _dsgflthr;       /* LOW THRESHOLD - 0 TO 99 %                 */\n      unsigned char  _filler45;       /* RESERVED                                  */\n      int            _dsgfvmax;       /* VIO MAX DATA SET SIZE                     */\n      unsigned char  _dsgfvunt\u00c44\u00dc;    /* VIO UNIT TYPE                             */\n      unsigned char  _dsgdmpcl\u00c48\u00dc;    /* DUMP CLASSES FOR AUTODUMP                 */\n      unsigned char  _filler46\u00c432\u00dc;\n      unsigned char  _dsgfprst;       /* STATUS BY PROCESSOR                       */\n      unsigned char  _filler47\u00c4119\u00dc;\n      \u00fc _dcuouth_struct28;\n    struct \u00e4\n      unsigned char  _dvlnmfld\u00c432\u00dc;   /* SPACE FOR NAME AND LENGTH */\n      unsigned char  _filler48\u00c4324\u00dc;\n      \u00fc _dcuouth_struct29;\n    struct \u00e4\n      short int      _dvlnmlen;       /* LENGTH OF NAME -- SHOULD BE */\n      unsigned char  _dvlvser\u00c46\u00dc;     /* VOLUME SERIAL NUMBER        */\n      unsigned char  _filler49\u00c424\u00dc;   /* RESERVED FOR CONSISTENCY    */\n      unsigned char  _dvluser\u00c48\u00dc;     /* USERID OF LAST UPDATER      */\n      unsigned char  _dvldate\u00c410\u00dc;    /* DATE OF LAST UPDATE         */\n      unsigned char  _filler50\u00c42\u00dc;    /* RESERVED                    */\n      unsigned char  _dvltime\u00c48\u00dc;     /* TIME OF LAST UPDATE         */\n      unsigned char  _dvlflags;       /* FLAGS AND RESERVED          */\n      unsigned char  _dvlflgdc;       /* DCOLLECT FLGS               */\n      unsigned char  _filler51\u00c42\u00dc;    /* RESERVED                    */\n      unsigned char  _dvlsg\u00c432\u00dc;      /* LENGTH AND NAME OF STORGRP  */\n      unsigned char  _filler52\u00c4260\u00dc;\n      \u00fc _dcuouth_struct30;\n    struct \u00e4\n      unsigned char  _dagnmfld\u00c432\u00dc;   /* SPACE FOR NAME AND LENGTH */\n      unsigned char  _filler53\u00c4324\u00dc;\n      \u00fc _dcuouth_struct31;\n    struct \u00e4\n      short int      _dagnmlen;       /* LENGTH OF NAME         */\n      unsigned char  _dagname\u00c430\u00dc;    /* NAME OF DATA CLASS     */\n      unsigned char  _daguser\u00c48\u00dc;     /* USERID OF LAST UPDATER */\n      unsigned char  _dagdate\u00c410\u00dc;    /* DATE OF LAST UPDATE    */\n      unsigned char  _filler54\u00c42\u00dc;    /* RESERVED               */\n      unsigned char  _dagtime\u00c48\u00dc;     /* TIME OF LAST UPDATE    */\n      unsigned char  _dagdesc\u00c4120\u00dc;   /* DESCRIPTION            */\n      unsigned char  _dagflags;\n      unsigned char  _filler55\u00c43\u00dc;    /* RESERVED               */\n      int            _dagretpd;       /* RETENTION PERIOD       */\n      unsigned char  _filler56\u00c4168\u00dc;\n      \u00fc _dcuouth_struct32;\n    struct \u00e4\n      unsigned char  _ddrnmfld\u00c432\u00dc;   /* EXTENDED FOR CONSISTENCY */\n      unsigned char  _filler57\u00c4324\u00dc;\n      \u00fc _dcuouth_struct33;\n    struct \u00e4\n      short int      _ddrdvlen;       /* LENGTH OF NAME -- SHOULD BE */\n      unsigned char  _ddrname\u00c430\u00dc;\n      unsigned char  _filler58\u00c4324\u00dc;\n      \u00fc _dcuouth_struct34;\n    struct \u00e4\n      unsigned char  _dlbnmfld\u00c432\u00dc;   /* EXTENDED FOR CONSISTENCY */\n      unsigned char  _filler59\u00c4324\u00dc;\n      \u00fc _dcuouth_struct35;\n    struct \u00e4\n      short int      _dlbnmlen;       /* LENGTH OF LIBRARY NAME      */\n      unsigned char  _dlblname\u00c430\u00dc;   /* LIBRARY NAME - LONG VERSION */\n      unsigned char  _filler60\u00c4324\u00dc;\n      \u00fc _dcuouth_struct36;\n    struct \u00e4\n      unsigned char  _dcncsnam\u00c48\u00dc;    /* Cache Set Name */\n      unsigned char  _dcnsesnm\u00c416\u00dc;   /* SES Cache name */\n      unsigned char  _filler61\u00c4112\u00dc;\n      unsigned char  _filler62\u00c416\u00dc;   /* RESERVED       */\n      unsigned char  _dcndatae;       /* END OF DCNDATA */\n      unsigned char  _filler63\u00c4203\u00dc;\n      \u00fc _dcuouth_struct37;\n    struct \u00e4\n      unsigned char  _daidrtn\u00c478\u00dc;    /* Data Class Routine */\n      unsigned char  _filler64\u00c4278\u00dc;\n      \u00fc _dcuouth_struct38;\n    struct \u00e4\n      unsigned char  _daiddate\u00c410\u00dc;   /* Date last updated          */\n      unsigned char  _daiddsnm\u00c444\u00dc;   /* Data set name where stored */\n      unsigned char  _daiddsmr\u00c48\u00dc;    /* Member name in data set    */\n      unsigned char  _daidsrid\u00c48\u00dc;    /* Userid of last updater     */\n      unsigned char  _daidtime\u00c48\u00dc;    /* Time last updated          */\n      unsigned char  _daimrtn\u00c478\u00dc;    /* Manamgement Class Routine  */\n      unsigned char  _filler65\u00c4200\u00dc;\n      \u00fc _dcuouth_struct39;\n    struct \u00e4\n      unsigned char  _filler66\u00c42\u00dc;\n      unsigned char  _ddrdname\u00c48\u00dc;    /* DRIVE NAME                 */\n      unsigned char  _filler67\u00c422\u00dc;   /* RESERVED FOR CONSISTENCY   */\n      unsigned char  _ddrduser\u00c48\u00dc;    /* USERID OF LAST UPDATER     */\n      unsigned char  _ddrddate\u00c410\u00dc;   /* DATE OF LAST UPDATE        */\n      unsigned char  _ddrflags;       /* Flags and reserved         */\n      unsigned char  _filler68;       /* RESERVED                   */\n      unsigned char  _ddrdtime\u00c48\u00dc;    /* TIME OF LAST UPDATE        */\n      unsigned char  _ddrlb\u00c432\u00dc;      /* LENGTH AND NAME OF LIBRARY */\n      unsigned char  _filler69\u00c4264\u00dc;\n      \u00fc _dcuouth_struct40;\n    struct \u00e4\n      unsigned char  _filler70\u00c42\u00dc;\n      unsigned char  _dlbname\u00c48\u00dc;     /* NAME OF OPTICAL LIBRARY  */\n      unsigned char  _filler71\u00c422\u00dc;   /* RESERVED FOR CONSISTENCY */\n      unsigned char  _dlbduser\u00c48\u00dc;    /* USERID OF LAST UPDATER   */\n      unsigned char  _dlbddate\u00c410\u00dc;   /* DATE OF LAST UPDATE      */\n      unsigned char  _dlbflags;       /* Reserved                 */\n      unsigned char  _filler72\u00c45\u00dc;    /* Reserved                 */\n      unsigned char  _dlbdtime\u00c48\u00dc;    /* TIME OF LAST UPDATE      */\n      unsigned char  _dlbnstat\u00c44\u00dc;    /* STATUS BY SYSTEM         */\n      unsigned char  _filler73\u00c4288\u00dc;\n      \u00fc _dcuouth_struct41;\n    struct \u00e4\n      unsigned char  _filler74\u00c450\u00dc;\n      unsigned char  _dcddsor0;       /* DATA SET ORGANIZATION BYTE 0    */\n      unsigned char  _dcddsor1;       /* DATA SET ORGANIZATION BYTE 1    */\n      unsigned char  _dcdrecrd;       /* RECORD FORMAT BYTE              */\n      char           _dcdnmext;       /* NUMBER OF EXTENTS USED          */\n      unsigned char  _dcdvolsr\u00c46\u00dc;    /* VOLUME SERIAL NUMBER            */\n      short int      _dcdbklng;       /* BLOCK LENGTH                    */\n      short int      _dcdlrecl;       /* RECORD LENGTH                   */\n      int            _dcdallsp;       /* SPACE ALLOCATED TO DATA SET     */\n      int            _dcdusesp;       /* SPACE USED BY DATA SET          */\n      int            _dcdscall;       /* SECONDARY ALLOCATION            */\n      int            _dcdnmblk;       /* # OF BYTES UNUSEABLE IN BLOCKS  */\n      unsigned char  _dcdcredt\u00c44\u00dc;    /* CREATION DATE (YYYYDDDF)        */\n      unsigned char  _dcdexpdt\u00c44\u00dc;    /* EXPIRATION DATE (YYYYDDDF)      */\n      unsigned char  _dcdlstrf\u00c44\u00dc;    /* DATE LAST REFERENCED (YYYYDDDF) */\n      unsigned char  _dcddsser\u00c46\u00dc;    /* DATA SET SERIAL NUMBER          */\n      unsigned char  _dcdvolsq\u00c42\u00dc;    /* VOLUME SEQUENCE NUMBER          */\n      unsigned char  _dcdlbkdt\u00c48\u00dc;    /* LAST BACKUP TIME & DATE         */\n      unsigned char  _dcddclas\u00c432\u00dc;\n      unsigned char  _filler75\u00c4216\u00dc;\n      \u00fc _dcuouth_struct42;\n    struct \u00e4\n      unsigned char  _filler76\u00c456\u00dc;\n      short int      _dcvsglng;       /* STORAGE GROUP NAME LENGTH    */\n      unsigned char  _dcvsgtcl\u00c430\u00dc;   /* STORAGE GROUP NAME           */\n      unsigned char  _dcvdptyp\u00c48\u00dc;    /* PHYSICAL DEVICE TYPE         */\n      unsigned char  _filler77\u00c416\u00dc;   /* RESERVED                     */\n      unsigned char  _dcvvolie;       /* END IF DCVVOLI               */\n      unsigned char  _filler78\u00c467\u00dc;\n      unsigned char  _ddcspec1;\n      unsigned char  _ddcspec2;\n      unsigned char  _ddcspec3;\n      unsigned char  _ddcspec4;\n      char           _ddcrcorg;       /* DATA SET RECORG -- SEE CONST */\n      char           _ddcrecfm;       /* DATA SET RECFM -- SEE CONST  */\n      unsigned char  _ddcdsflg;\n      char           _ddccntl;        /* CARRIAGE CONTROL - SEE CONST */\n      int            _ddcretpd;       /* RETENTION PERIOD             */\n      unsigned char  _filler79\u00c4164\u00dc;\n      \u00fc _dcuouth_struct43;\n    struct \u00e4\n      unsigned char  _filler80\u00c460\u00dc;\n      short int      _ddrlblen;       /* LENGTH OF LIBRARY NAME */\n      unsigned char  _ddrlibry\u00c430\u00dc;   /* LIBRARY FOR THIS DRIVE */\n      unsigned char  _filler81\u00c4264\u00dc;\n      \u00fc _dcuouth_struct44;\n    struct \u00e4\n      unsigned char  _filler82\u00c462\u00dc;\n      unsigned char  _ddrlbnm\u00c48\u00dc;     /* LIBRARY NAME     */\n      unsigned char  _filler83\u00c422\u00dc;   /* RESERVED         */\n      unsigned char  _ddrnstat\u00c44\u00dc;    /* STATUS BY SYSTEM */\n      unsigned char  _filler84\u00c4260\u00dc;\n      \u00fc _dcuouth_struct45;\n    struct \u00e4\n      unsigned char  _filler85\u00c464\u00dc;\n      short int      _dvlsglen;       /* LENGTH OF STORGRP NAME       */\n      unsigned char  _dvlstgrp\u00c430\u00dc;   /* STORAGE GROUP OF THIS VOLUME */\n      unsigned char  _dvlnstat\u00c42\u00dc;    /* STATUS BY SYSTEM             */\n      unsigned char  _filler86\u00c4258\u00dc;\n      \u00fc _dcuouth_struct46;\n    struct \u00e4\n      unsigned char  _filler87\u00c464\u00dc;\n      unsigned char  _dlbomst\u00c44\u00dc;     /* STATUS FOR EACH LIBRARY */\n      unsigned char  _filler88\u00c4288\u00dc;\n      \u00fc _dcuouth_struct47;\n    struct \u00e4\n      unsigned char  _filler89\u00c464\u00dc;\n      char           _dlbsout;        /* REQUESTED OAM STATUS                    */\n      char           _dlbcfcs;        /* CURRENT OAM STATUS                      */\n      unsigned char  _filler90\u00c42\u00dc;    /* RESERVED                                */\n      unsigned char  _filler91\u00c428\u00dc;\n      char           _dlbtype;        /* REAL OR PSEUDO LIBRARY                  */\n      unsigned char  _filler92\u00c42\u00dc;    /* RESERVED                                */\n      char           _dlbdtype;       /* LIBRARY DEVICE TYPE                     */\n      int            _dlbdcons;       /* CONSOLE ID                              */\n      char           _dlbedvt;        /* ENTRY DEFAULT USE ATTRIBUTE (TAPE ONLY) */\n      char           _dlbejd;         /* EJECT DEFAULT (TAPE ONLY)               */\n      unsigned char  _dlblcbid\u00c45\u00dc;    /* LIBRARY ID IN LIB.CONF.DB (TAPE ONLY)   */\n      unsigned char  _filler93;       /* RESERVED                                */\n      unsigned char  _dlbedunm\u00c48\u00dc;    /* ENTRY DEFAULT UNIT NAME (TAPE ONLY)     */\n      unsigned char  _dlbdefdc\u00c432\u00dc;   /* ENTRY DEFAULT DATA CLASS (TAPE ONLY)    */\n      unsigned char  _filler94\u00c4204\u00dc;\n      \u00fc _dcuouth_struct48;\n    struct \u00e4\n      unsigned char  _filler95\u00c478\u00dc;\n      unsigned char  _daimdate\u00c410\u00dc;   /* Date last updated          */\n      unsigned char  _daimdsnm\u00c444\u00dc;   /* Data set name where stored */\n      unsigned char  _daimdsmr\u00c48\u00dc;    /* Member name in data set    */\n      unsigned char  _daimsrid\u00c48\u00dc;    /* Userid of last updater     */\n      unsigned char  _daimtime\u00c48\u00dc;    /* Time last updated          */\n      unsigned char  _daisrtn\u00c478\u00dc;    /* Storage Class Routine      */\n      unsigned char  _filler96\u00c4122\u00dc;\n      \u00fc _dcuouth_struct49;\n    struct \u00e4\n      unsigned char  _filler97\u00c492\u00dc;\n      unsigned char  _ddromst\u00c44\u00dc;     /* STATUS OF EACH DRIVE */\n      unsigned char  _filler98\u00c4260\u00dc;\n      \u00fc _dcuouth_struct50;\n    struct \u00e4\n      unsigned char  _filler99\u00c492\u00dc;\n      char           _ddrsout;         /* REQUESTED OAM STATUS */\n      char           _ddrcfcs;         /* CURRENT OAM STATUS   */\n      unsigned char  _filler100\u00c42\u00dc;    /* RESERVED             */\n      unsigned char  _filler101\u00c428\u00dc;\n      int            _ddrdcons;        /* CONSOLE ID           */\n      unsigned char  _ddrstat\u00c48\u00dc;      /* System related data  */\n      unsigned char  _filler102\u00c4220\u00dc;\n      \u00fc _dcuouth_struct51;\n    struct \u00e4\n      unsigned char  _filler103\u00c496\u00dc;\n      char           _dvlsmss;         /* SMS STATUS                   */\n      char           _dvlmvss;         /* MVS STATUS                   */\n      unsigned char  _filler104\u00c414\u00dc;\n      char           _dvlcsmss;        /* CONFIRMED SMS STATUS FOR VOL */\n      unsigned char  _filler105\u00c47\u00dc;\n      void          *_dvlnucba;        /* ADDRESS OF UCB IF KNOWN      */\n      int            _dvlntcpy;        /* TOTAL CAPACITY IN MB         */\n      int            _dvlnfree;        /* AMOUNT FREE SPACE IN MB      */\n      int            _dvlnlext;        /* LARGEST FREE EXTENT IN MB    */\n      short int      _dvln0cnt;        /* VOLUME LEVEL RESET COUNT     */\n      short int      _dvltrksz;        /* VOLUME R1 TRACK CAPACITY     */\n      int            _dvlnlevl;        /* UPDATE LEVEL FOR VOLUME      */\n      unsigned char  _dvlsstat\u00c48\u00dc;     /* System status array          */\n      unsigned char  _filler106\u00c4204\u00dc;\n      \u00fc _dcuouth_struct52;\n    struct \u00e4\n      unsigned char  _filler107\u00c4108\u00dc;\n      short int      _dcddclng;        /* DATA CLASS NAME LENGTH */\n      unsigned char  _dcddatcl\u00c430\u00dc;    /* DATA CLASS NAME        */\n      unsigned char  _dcdsclas\u00c432\u00dc;\n      unsigned char  _filler108\u00c4184\u00dc;\n      \u00fc _dcuouth_struct53;\n    struct \u00e4\n      unsigned char  _filler109\u00c4120\u00dc;\n      short int      _dlbdclen;        /* LENGTH OF ENTRY DEFAULT DC */\n      unsigned char  _dlbdclnm\u00c430\u00dc;    /* DEFAULT DC LONG VERSION    */\n      unsigned char  _filler110\u00c4204\u00dc;\n      \u00fc _dcuouth_struct54;\n    struct \u00e4\n      unsigned char  _filler111\u00c4122\u00dc;\n      unsigned char  _dlbdcnam\u00c48\u00dc;     /* NAME OF ENTRY DEFAULT DC */\n      unsigned char  _filler112\u00c422\u00dc;   /* RESERVED FOR CONSISTENCY */\n      unsigned char  _dlbstat\u00c48\u00dc;      /* System related data      */\n      unsigned char  _filler113\u00c4196\u00dc;\n      \u00fc _dcuouth_struct55;\n    struct \u00e4\n      unsigned char  _filler114\u00c4128\u00dc;\n      unsigned char  _ddrsysst\u00c44\u00dc;     /* Status for this system */\n      unsigned char  _filler115\u00c4224\u00dc;\n      \u00fc _dcuouth_struct56;\n    struct \u00e4\n      unsigned char  _filler116\u00c4128\u00dc;\n      char           _ddrreqst;        /* Requested system status */\n      char           _ddrcurst;        /* Current system status   */\n      unsigned char  _filler117\u00c42\u00dc;    /* Reserved                */\n      unsigned char  _filler118\u00c44\u00dc;    /* Reserved                */\n      unsigned char  _filler119\u00c4220\u00dc;\n      \u00fc _dcuouth_struct57;\n    struct \u00e4\n      unsigned char  _filler120\u00c4140\u00dc;\n      short int      _dcdsclng;        /* STORAGE CLASS NAME LENGTH */\n      unsigned char  _dcdstgcl\u00c430\u00dc;    /* STORAGE CLASS NAME        */\n      unsigned char  _dcdmclas\u00c432\u00dc;\n      unsigned char  _filler121\u00c4152\u00dc;\n      \u00fc _dcuouth_struct58;\n    struct \u00e4\n      unsigned char  _filler122\u00c4144\u00dc;\n      char           _dvlstsms;        /* SMS system status    */\n      char           _dvlstmvs;        /* MVS system status    */\n      char           _dvlcnsms;        /* Confirmed SMS status */\n      unsigned char  _filler123\u00c45\u00dc;    /* Reserved             */\n      unsigned char  _filler124\u00c4204\u00dc;\n      \u00fc _dcuouth_struct59;\n    struct \u00e4\n      unsigned char  _filler125\u00c4152\u00dc;\n      unsigned char  _dlbsysst\u00c44\u00dc;     /* Status for this system */\n      unsigned char  _filler126\u00c4200\u00dc;\n      \u00fc _dcuouth_struct60;\n    struct \u00e4\n      unsigned char  _filler127\u00c4152\u00dc;\n      char           _dlbreqst;        /* Requested system status */\n      char           _dlbcurst;        /* Current system status   */\n      unsigned char  _filler128\u00c42\u00dc;    /* Reserved                */\n      unsigned char  _filler129\u00c44\u00dc;    /* Reserved                */\n      unsigned char  _filler130\u00c4196\u00dc;\n      \u00fc _dcuouth_struct61;\n    struct \u00e4\n      unsigned char  _filler131\u00c4156\u00dc;\n      unsigned char  _daisdate\u00c410\u00dc;    /* Date last updated          */\n      unsigned char  _daisdsnm\u00c444\u00dc;    /* Data set name where stored */\n      unsigned char  _daisdsmr\u00c48\u00dc;     /* Member name in data set    */\n      unsigned char  _daissrid\u00c48\u00dc;     /* Userid of last updater     */\n      unsigned char  _daistime\u00c48\u00dc;     /* Time last updated          */\n      unsigned char  _daigrtn\u00c478\u00dc;     /* Storage Group Routine      */\n      unsigned char  _filler132\u00c444\u00dc;\n      \u00fc _dcuouth_struct62;\n    struct \u00e4\n      unsigned char  _filler133\u00c4172\u00dc;\n      short int      _dcdmclng;        /* MANAGEMENT CLASS NAME LENGTH */\n      unsigned char  _dcdmgtcl\u00c430\u00dc;    /* MANAGEMENT CLASS NAME        */\n      unsigned char  _dcdstogp\u00c432\u00dc;\n      unsigned char  _filler134\u00c4120\u00dc;\n      \u00fc _dcuouth_struct63;\n    struct \u00e4\n      unsigned char  _filler135\u00c4184\u00dc;\n      short int      _dbcmclen;        /* DEFAULT MC LENGTH OF NAME     */\n      unsigned char  _dbcmcnam\u00c430\u00dc;    /* DEFAULT MANAGEMENT CLASS NAME */\n      unsigned char  _dbcdgeom\u00c48\u00dc;     /* DEFAULT DEVICE GEOMETRY       */\n      unsigned char  _filler136\u00c4132\u00dc;\n      \u00fc _dcuouth_struct64;\n    struct \u00e4\n      unsigned char  _filler137\u00c4184\u00dc;\n      short int      _dagexpyr;        /* EXPIRATION YEAR           */\n      short int      _dagexpdy;        /* ABSOLUTE DAY OF YEAR      */\n      unsigned char  _dagdest\u00c430\u00dc;     /* DESTINATION               */\n      unsigned char  _dagprefx\u00c433\u00dc;    /* OUTPUT DATA SET PREFIX    */\n      unsigned char  _filler138;       /* RESERVED                  */\n      unsigned char  _dagidsnm\u00c452\u00dc;    /* INSTRUCTION DATA SET NAME */\n      unsigned char  _filler139\u00c452\u00dc;\n      \u00fc _dcuouth_struct65;\n    struct \u00e4\n      unsigned char  _filler140\u00c4188\u00dc;\n      short int      _ddcexpyr;        /* EXPDT - YEAR                   */\n      short int      _ddcexpdy;        /* EXPDT - ABSOLUTE DAY OF YEAR   */\n      short int      _ddcvolct;        /* MAXIMUM VOL COUNT FOR EXTEND   */\n      short int      _ddcdsnty;        /* DSN TYPE -- SEE CONSTANTS      */\n      int            _ddcsppri;        /* PRIMARY SPACE AMOUNT           */\n      int            _ddcspsec;        /* SECONDARY SPACE AMOUNT         */\n      int            _ddcdiblk;        /* DIRECTORY BLOCKS               */\n      char           _ddcavrec;        /* AVGREC - M, K, U: SEE CONST    */\n      char           _ddcreduc;        /* Reduce primary or secondary    */\n      char           _ddcrbias;        /* VSAM Record Access Bias        */\n      unsigned char  _filler141;       /* RESERVED                       */\n      int            _ddcaunit;        /* ALLOCATION UNIT AMOUNT         */\n      int            _ddcbszlm;        /* BlockSize Limit value <= 32760 */\n      int            _ddclrecl;        /* RECORD LENGTH                  */\n      int            _ddccisz;         /* CISIZE FOR KS, ES OR RR        */\n      unsigned char  _ddcfrsp\u00c44\u00dc;      /* FREESPACE                      */\n      unsigned char  _filler142\u00c4124\u00dc;\n      \u00fc _dcuouth_struct66;\n    struct \u00e4\n      unsigned char  _filler143\u00c4200\u00dc;\n      short int      _dmceyear;        /* EXPIRE DATE SINCE CREATE                    */\n      short int      _dmceday;         /* SEE DMCRFMT FOR FORMAT                      */\n      unsigned char  _dmcmigf;         /* DATA SET MIGRATION FLAGS                    */\n      unsigned char  _filler144;       /* RESERVED                                    */\n      short int      _dmcprdy;         /* MIN DAYS ON PRIM/LAST USE                   */\n      short int      _dmcl1dy;         /* MIN DAYS ON LVL 1/LAST USE                  */\n      char           _dmccmau;         /* COMMAND OR AUTO MIGRATE -- SEE CONSTANTS    */\n      unsigned char  _filler145;       /* RESERVED                                    */\n      unsigned char  _dmcbkflg;        /* BACKUP FLAGS                                */\n      unsigned char  _filler146\u00c43\u00dc;    /* RESERVED                                    */\n      short int      _dmcbkfq;         /* BACKUP FREQUENCY                            */\n      short int      _dmcbkvs;         /* NUMBER OF BACKUP VERSIONS                   */\n      short int      _dmcbvrd;         /* NUM OF VERSIONS: DS DELETED                 */\n      short int      _dmcbkdy;         /* DAYS TO KEEP BACKUP VERSION                 */\n      short int      _dmcbknp;         /* DAYS TO KEEP ONLY BACKUP                    */\n      char           _dmcbadu;         /* ALLOW ADMIN OR USER BACKUP -- SEE CONSTANTS */\n      char           _dmccpytc;        /* COPY TECHNIQUE - SEE CONSTANTS              */\n      unsigned char  _dmcbkudc\u00c48\u00dc;     /* BACKUP DESTINATION CLASS                    */\n      unsigned char  _dmcmretf;        /* MAXIMUM RETENTION FLAGS                     */\n      unsigned char  _filler147;       /* RESERVED                                    */\n      short int      _dmcmrtdy;        /* MAXIMUM DAYS TO RETAIN                      */\n      unsigned char  _dmctscr;         /* TIME SINCE CREATION FLAGS.                  */\n      unsigned char  _dmctslu;         /* TIME SINCE LAST USED FLAGS.                 */\n      unsigned char  _dmcperd;         /* PERIODIC FLAGS.                             */\n      unsigned char  _filler148;       /* RESERVED.                                   */\n      unsigned char  _dmcvscr\u00c46\u00dc;      /* TIME SINCE CREATION VALUES                  */\n      unsigned char  _filler149\u00c4106\u00dc;\n      \u00fc _dcuouth_struct67;\n    struct \u00e4\n      unsigned char  _filler150\u00c4204\u00dc;\n      short int      _dcdsglng;        /* STORAGE GROUP NAME LENGTH */\n      unsigned char  _dcdstgrp\u00c430\u00dc;    /* STORAGE GROUP NAME        */\n      unsigned char  _dcdccsid\u00c42\u00dc;     /* CODED CHAR SET IDENTIFIER */\n      unsigned char  _filler151\u00c42\u00dc;    /* reserved                  */\n      unsigned char  _dcdudsiz\u00c48\u00dc;     /* USER DATA SIZE            */\n      unsigned char  _dcdcudsz\u00c48\u00dc;     /* COMPRESSED USER DATA SIZE */\n      unsigned char  _dcdexflg\u00c42\u00dc;     /* COMPRESSION FLAGS         */\n      short int      _dcdscnt;         /* Stripe Count              */\n      int            _dcdovera;        /* OVER-ALLOCATED SPACE      */\n      unsigned char  _dcdacct\u00c432\u00dc;     /* Account Information       */\n      unsigned char  _filler152\u00c416\u00dc;   /* RESERVED                  */\n      unsigned char  _dcdadsie;        /* END OF DCUDSET            */\n      unsigned char  _filler153\u00c443\u00dc;\n      \u00fc _dcuouth_struct68;\n    struct \u00e4\n      unsigned char  _filler154\u00c4204\u00dc;\n      short int      _dsccslen;        /* Cache Set Name Length */\n      unsigned char  _dsccsnam\u00c430\u00dc;    /* Cache Set Name value  */\n      short int      _dscdircw;        /* Direct CF weight      */\n      short int      _dscseqcw;        /* Sequential CF weight  */\n      unsigned char  _filler155\u00c416\u00dc;   /* RESERVED              */\n      unsigned char  _dscdatae;        /* END OF DSCDATA        */\n      unsigned char  _filler156\u00c499\u00dc;\n      \u00fc _dcuouth_struct69;\n    struct \u00e4\n      unsigned char  _filler157\u00c4216\u00dc;\n      int            _dbctrksz;        /* TRACK SIZE IN BYTES                           */\n      int            _dbccylcp;        /* CYL CAPACITY (TRK/CYL)                        */\n      unsigned char  _dbcdunit\u00c48\u00dc;     /* DEFAULT UNIT                                  */\n      unsigned char  _dbcsrst\u00c48\u00dc;      /* SMS RESOURCE STATUS TOKEN                     */\n      char           _dbcstat;         /* DATA SET STATUS -- SEE CONST                  */\n      unsigned char  _filler158\u00c43\u00dc;    /* RESERVED                                      */\n      unsigned char  _dbcfsysn\u00c48\u00dc;     /* SYSTEM NAMES                                  */\n      unsigned char  _filler159\u00c456\u00dc;\n      unsigned char  _dbcscdsn\u00c444\u00dc;    /* FOR ACDS ONLY: NAME OF SCDS FROM WHICH IT WAS */\n      unsigned char  _dbcsfeat\u00c42\u00dc;     /* SUPPORTED SYSTEM FEATURES                     */\n      unsigned char  _filler160\u00c42\u00dc;\n      \u00fc _dcuouth_struct70;\n    struct \u00e4\n      unsigned char  _filler161\u00c4228\u00dc;\n      short int      _ddccipct;        /* CI FREESPACE %     */\n      short int      _ddccapct;        /* CA FREESPACE %     */\n      short int      _ddcshrop;        /* VSAM SHARE OPTIONS */\n      unsigned char  _filler162\u00c4122\u00dc;\n      \u00fc _dcuouth_struct71;\n    struct \u00e4\n      unsigned char  _filler163\u00c4232\u00dc;\n      char           _ddcxreg;         /* VSAM XREGION SHARE OPTIONS                 */\n      char           _ddcxsys;         /* VSAM XSYSTEM SHARE OPTIONS                 */\n      unsigned char  _ddcvindx;        /* VSAM SHARE OPTIONS                         */\n      char           _ddcklen;         /* VSAM KEY LENGTH                            */\n      short int      _ddckoff;         /* VSAM KEY OFFSET                            */\n      char           _ddccamt;         /* VSAM candidate amount                      */\n      unsigned char  _filler164;       /* RESERVED                                   */\n      char           _ddccomp;         /* COMPACTION TYPE - SEE CONSTANTS            */\n      char           _ddcmedia;        /* MEDIA TYPE -- SEE CONSTANTS                */\n      char           _ddcrecte;        /* RECORDING TECHNOLOGY --SEE CONSTANTS BELOW */\n      unsigned char  _filler165;       /* RESERVED                                   */\n      unsigned char  _ddcrls1\u00c44\u00dc;      /* RLS SUPPORT                                */\n      unsigned char  _filler166\u00c4108\u00dc;\n      \u00fc _dcuouth_struct72;\n    struct \u00e4\n      unsigned char  _filler167\u00c4234\u00dc;\n      unsigned char  _daigdate\u00c410\u00dc;    /* Date last updated          */\n      unsigned char  _daigdsnm\u00c444\u00dc;    /* Data set name where stored */\n      unsigned char  _daigdsmr\u00c48\u00dc;     /* Member name in data set    */\n      unsigned char  _daigsrid\u00c48\u00dc;     /* Userid of last updater     */\n      unsigned char  _daigtime\u00c48\u00dc;     /* Time last updated          */\n      unsigned char  _filler168\u00c416\u00dc;   /* Reserved                   */\n      unsigned char  _daidatae;        /* end of DAIDATA             */\n      unsigned char  _filler169\u00c427\u00dc;\n      \u00fc _dcuouth_struct73;\n    struct \u00e4\n      unsigned char  _filler170\u00c4236\u00dc;\n      char           _dsgstat;         /* STATUS                                      */\n      unsigned char  _filler171\u00c47\u00dc;\n      unsigned char  _dsgabsys\u00c48\u00dc;     /* AUTO BACKUP SYSTEM                          */\n      unsigned char  _dsgadsys\u00c48\u00dc;     /* AUTO DUMP SYSTEM                            */\n      unsigned char  _dsgamsys\u00c48\u00dc;     /* AUTO MIGRATE SYSTEM                         */\n      unsigned char  _dsgcnfrm;        /* CONFIRMED SMS STATUS FOR THIS STORAGE GROUP */\n      unsigned char  _filler172\u00c487\u00dc;\n      \u00fc _dcuouth_struct74;\n    struct \u00e4\n      unsigned char  _filler173\u00c4244\u00dc;\n      char           _ddcbwotp;        /* BWO TYPE REQUIRES DDCBWOS */\n      char           _ddclogrc;        /* SPHERE RECOVERABILITY     */\n      char           _ddcspand;        /* RECORD SPANS CI ABILITY   */\n      char           _filler174;       /* RESERVED                  */\n      unsigned char  _ddclognm\u00c428\u00dc;    /* LOG STREAM ID             */\n      unsigned char  _filler175\u00c480\u00dc;\n      \u00fc _dcuouth_struct75;\n    struct \u00e4\n      unsigned char  _filler176\u00c4244\u00dc;\n      short int      _dmcvscy;         /* TIME SINCE CREATION YEARS  */\n      short int      _dmcvscm;         /* TIME SINCE CREATION MONTHS */\n      short int      _dmcvscd;         /* TIME SINCE CREATION DAYS   */\n      unsigned char  _dmcvslu\u00c46\u00dc;      /* TIME SINCE LAST USED       */\n      unsigned char  _filler177\u00c4100\u00dc;\n      \u00fc _dcuouth_struct76;\n    struct \u00e4\n      unsigned char  _filler178\u00c4248\u00dc;\n      short int      _ddclogln;        /* ID LENGTH */\n      unsigned char  _ddclogid\u00c426\u00dc;    /* ID        */\n      unsigned char  _ddcspecx;\n      unsigned char  _filler179\u00c479\u00dc;\n      \u00fc _dcuouth_struct77;\n    struct \u00e4\n      unsigned char  _filler180\u00c4250\u00dc;\n      short int      _dmcvsuy;         /* TIME SINCE LAST USED YEARS  */\n      short int      _dmcvsum;         /* TIME SINCE LAST USED MONTHS */\n      short int      _dmcvsud;         /* TIME SINCE LAST USED DAYS   */\n      short int      _dmcvprd;         /* PERIODIC VALUES             */\n      short int      _dmcvpmd;         /* PERIODIC MONTHLY ON DAY     */\n      unsigned char  _dmcvpqt\u00c44\u00dc;      /* PERIODIC QUARTERLY VALUES.  */\n      unsigned char  _filler181\u00c492\u00dc;\n      \u00fc _dcuouth_struct78;\n    struct \u00e4\n      unsigned char  _filler182\u00c4252\u00dc;\n      unsigned char  _dagindsn\u00c444\u00dc;    /* DATA SET NAME                 */\n      unsigned char  _daginmem\u00c48\u00dc;     /* MEMBER NAME, IF ANY, OR BLANK */\n      unsigned char  _dagdsnms\u00c452\u00dc;    /* ARRAY OF DATA SET NAMES       */\n      \u00fc _dcuouth_struct79;\n    struct \u00e4\n      unsigned char  _filler183\u00c4260\u00dc;\n      short int      _dmcvpqd;         /* PERIODIC QUARTERLY ON DAY   */\n      short int      _dmcvpqm;         /* PERIODIC QUARTERLY IN MONTH */\n      unsigned char  _dmcvpyr\u00c44\u00dc;      /* PERIODIC YEARLY VALUES.     */\n      unsigned char  _filler184\u00c488\u00dc;\n      \u00fc _dcuouth_struct80;\n    struct \u00e4\n      unsigned char  _filler185\u00c4264\u00dc;\n      short int      _dmcvpyd;         /* PERIODIC YEARLY ON DAY   */\n      short int      _dmcvpym;         /* PERIODIC YEARLY IN MONTH */\n      unsigned char  _filler186\u00c416\u00dc;   /* RESERVED                 */\n      unsigned char  _dmcdatae;        /* END OF DMCDATA           */\n      unsigned char  _filler187\u00c471\u00dc;\n      \u00fc _dcuouth_struct81;\n    struct \u00e4\n      unsigned char  _filler188\u00c4268\u00dc;\n      char           _dsgcsmss;        /* CONFIRMED SMS STATUS       */\n      unsigned char  _filler189\u00c47\u00dc;\n      int            _dsggbkuf;        /* GUARANTEED BACKUP FREQ.    */\n      unsigned char  _dsgtblgr\u00c47\u00dc;     /* OAM TABLE SPACE ID GROUPNN */\n      unsigned char  _filler190;       /* RESERVED                   */\n      unsigned char  _dsgoamfl;        /* OAM FLAGS                  */\n      unsigned char  _filler191;       /* RESERVED                   */\n      char           _dsgcylst;        /* OAM CYCLE START TIME (HRS) */\n      char           _dsgcyled;        /* OAM CYCLE END TIME (HRS)   */\n      short int      _dsgvolft;        /* VOLUME FULL THRESHOLD BIT  */\n      short int      _dsgdrvst;        /* DRIVE START THRESHOLD BIT  */\n      unsigned char  _dsgolibs\u00c432\u00dc;    /* OPTICAL LIBRARIES.         */\n      unsigned char  _filler192\u00c428\u00dc;\n      \u00fc _dcuouth_struct82;\n    struct \u00e4\n      unsigned char  _filler193\u00c4276\u00dc;\n      unsigned char  _ddcspeca;        /* ADDITONAL SPECIFICATION FLAGS */\n      unsigned char  _filler194\u00c43\u00dc;    /* RESERVED                      */\n      unsigned char  _filler195\u00c416\u00dc;   /* RESERVED                      */\n      unsigned char  _ddcdatae;        /* END OF DDCDATA                */\n      unsigned char  _filler196\u00c459\u00dc;\n      \u00fc _dcuouth_struct83;\n    struct \u00e4\n      unsigned char  _filler197\u00c4296\u00dc;\n      short int      _dsgolbnl;        /* OPTICAL LIBRARY NAME LENGTH */\n      unsigned char  _dsgolbnm\u00c48\u00dc;     /* OPTICAL LIBRARY NAME        */\n      unsigned char  _filler198\u00c422\u00dc;   /* RESERVED                    */\n      unsigned char  _filler199\u00c428\u00dc;\n      \u00fc _dcuouth_struct84;\n    struct \u00e4\n      unsigned char  _filler200\u00c4304\u00dc;\n      unsigned char  _dagdsn\u00c444\u00dc;      /* DATA SET NAME                 */\n      unsigned char  _dagmem\u00c48\u00dc;       /* MEMBER NAME, IF ANY, OR BLANK */\n      \u00fc _dcuouth_struct85;\n    \u00fc _dcuouth_union3;\n  unsigned char  _filler201\u00c412\u00dc;\n  char           dbcsysnt;        /* TYPE OF SYSTEM NAMES - SEE CONSTANTS */\n  unsigned char  _filler202\u00c47\u00dc;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _dbcsysdt\u00c416\u00dc;  /* System related data */\n      unsigned char  _filler203\u00c48\u00dc;\n      \u00fc _dcuouth_struct86;\n    struct \u00e4\n      unsigned char  _dbcsysnm\u00c48\u00dc;   /* System/group name                             */\n      unsigned char  _dbcsysft\u00c42\u00dc;   /* Supported system features                     */\n      unsigned char  _filler204\u00c42\u00dc;  /* Reserved                                      */\n      char           _dbcsnmty;      /* System name type for this entry see constants */\n      unsigned char  _filler205\u00c43\u00dc;  /* Reserved                                      */\n      unsigned char  _filler206\u00c48\u00dc;\n      \u00fc _dcuouth_struct87;\n    struct \u00e4\n      unsigned char  _filler207\u00c48\u00dc;\n      unsigned char  _filler208\u00c416\u00dc;  /* RESERVED */\n      \u00fc _dcuouth_struct88;\n    \u00fc _dcuouth_union4;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _ddrdatae;       /* END OF DDDRATA */\n      unsigned char  _filler209\u00c47\u00dc;\n      unsigned char  _filler210\u00c416\u00dc;  /* RESERVED       */\n      \u00fc _dcuouth_struct89;\n    struct \u00e4\n      unsigned char  _filler211\u00c416\u00dc;  /* RESERVED                */\n      unsigned char  _dvldatae;       /* ROUND TO DWORD BOUNDARY */\n      unsigned char  _filler212\u00c47\u00dc;\n      \u00fc _dcuouth_struct90;\n    \u00fc _dcuouth_union5;\n  unsigned char  dlbdatae;        /* END OF DLBDATA                       */\n  unsigned char  _filler213\u00c4127\u00dc;\n  union \u00e4\n    unsigned char  _dsgsstat\u00c48\u00dc; /* Status by processor */\n    struct \u00e4\n      char           _dsgsysst;      /* Requested system status */\n      char           _dsgcnsms;      /* Confirmed SMS status    */\n      unsigned char  _filler214\u00c46\u00dc;  /* Reserved                */\n      \u00fc _dcuouth_struct91;\n    \u00fc _dcuouth_union6;\n  unsigned char  _filler215\u00c44\u00dc;\n  union \u00e4\n    unsigned char  _dagmgmtc\u00c432\u00dc; /* MANAGEMENT CLASS */\n    struct \u00e4\n      short int      _dagmclen;     /* MANAGEMENT CLASS LENGTH */\n      unsigned char  _dagmcnam\u00c430\u00dc; /* MANAGEMENT CLASS NAME   */\n      \u00fc _dcuouth_struct92;\n    \u00fc _dcuouth_union7;\n  int            dagncopy;        /* NUMBER OF COPIES                     */\n  unsigned char  _filler216\u00c416\u00dc;  /* RESERVED                             */\n  unsigned char  dagdatae;        /* END OF DAGDATA                       */\n  unsigned char  _filler217\u00c4191\u00dc;\n  unsigned char  _filler218\u00c416\u00dc;  /* RESERVED                             */\n  unsigned char  dsgdatae;        /* END OF DDSGATA                       */\n  unsigned char  _filler219\u00c463\u00dc;\n  unsigned char  _filler220\u00c416\u00dc;  /* RESERVED                             */\n  unsigned char  dbcdatae;        /* END OF DBCDATA                       */\n  \u00fc;\n\n#define dcurdw     _dcuouth_union1._dcurdw\n#define dculeng    _dcuouth_union1._dcuouth_struct1._dculeng\n#define dcutmstp   _dcuouth_union2._dcutmstp\n#define dcutime    _dcuouth_union2._dcuouth_struct2._dcutime\n#define dcudate    _dcuouth_union2._dcuouth_struct2._dcudate\n#define dcdadsi    _dcuouth_union3._dcuouth_struct3.dcudata._dcdadsi\n#define dcassoc    _dcuouth_union3._dcuouth_struct4._dcassoc\n#define dcvvoli    _dcuouth_union3._dcuouth_struct5._dcvvoli\n#define ddcdata    _dcuouth_union3._dcuouth_struct6._ddcdata\n#define dscdata    _dcuouth_union3._dcuouth_struct7._dscdata\n#define dmcdata    _dcuouth_union3._dcuouth_struct8._dmcdata\n#define dbcdata    _dcuouth_union3._dcuouth_struct9._dbcdata\n#define dsgdata    _dcuouth_union3._dcuouth_struct10._dsgdata\n#define dvldata    _dcuouth_union3._dcuouth_struct11._dvldata\n#define dagdata    _dcuouth_union3._dcuouth_struct12._dagdata\n#define ddrdata    _dcuouth_union3._dcuouth_struct13._ddrdata\n#define dlbdata    _dcuouth_union3._dcuouth_struct14._dlbdata\n#define dcndata    _dcuouth_union3._dcuouth_struct15._dcndata\n#define daidata    _dcuouth_union3._dcuouth_struct16._daidata\n#define dcddsnam   _dcuouth_union3._dcuouth_struct17._dcddsnam\n#define dcderror   _dcuouth_union3._dcuouth_struct17._dcderror\n#define dcdflag1   _dcuouth_union3._dcuouth_struct17._dcdflag1\n#define dcdflag2   _dcuouth_union3._dcuouth_struct17._dcdflag2\n#define dcdflag3   _dcuouth_union3._dcuouth_struct17._dcdflag3\n#define dcddsorg   _dcuouth_union3._dcuouth_struct17._dcddsorg\n#define dcadsnam   _dcuouth_union3._dcuouth_struct18._dcadsnam\n#define dcaassoc   _dcuouth_union3._dcuouth_struct18._dcaassoc\n#define dcaflag1   _dcuouth_union3._dcuouth_struct18._dcaflag1\n#define dcaflag2   _dcuouth_union3._dcuouth_struct18._dcaflag2\n#define dcahurba   _dcuouth_union3._dcuouth_struct18._dcahurba\n#define dcaharba   _dcuouth_union3._dcuouth_struct18._dcaharba\n#define dcanlr     _dcuouth_union3._dcuouth_struct18._dcanlr\n#define dcadlr     _dcuouth_union3._dcuouth_struct18._dcadlr\n#define dcainr     _dcuouth_union3._dcuouth_struct18._dcainr\n#define dcaupr     _dcuouth_union3._dcuouth_struct18._dcaupr\n#define dcartr     _dcuouth_union3._dcuouth_struct18._dcartr\n#define dcaasp     _dcuouth_union3._dcuouth_struct18._dcaasp\n#define dcacis     _dcuouth_union3._dcuouth_struct18._dcacis\n#define dcacas     _dcuouth_union3._dcuouth_struct18._dcacas\n#define dcaexc     _dcuouth_union3._dcuouth_struct18._dcaexc\n#define dcarkp     _dcuouth_union3._dcuouth_struct18._dcarkp\n#define dcakln     _dcuouth_union3._dcuouth_struct18._dcakln\n#define dcahurbc   _dcuouth_union3._dcuouth_struct18._dcahurbc\n#define dcaharbc   _dcuouth_union3._dcuouth_struct18._dcaharbc\n#define dcacisz    _dcuouth_union3._dcuouth_struct18._dcacisz\n#define dcacaci    _dcuouth_union3._dcuouth_struct18._dcacaci\n#define dcassoce   _dcuouth_union3._dcuouth_struct18._dcassoce\n#define dcvvolsr   _dcuouth_union3._dcuouth_struct19._dcvvolsr\n#define dcvflag1   _dcuouth_union3._dcuouth_struct19._dcvflag1\n#define dcverror   _dcuouth_union3._dcuouth_struct19._dcverror\n#define dcvperct   _dcuouth_union3._dcuouth_struct19._dcvperct\n#define dcvfresp   _dcuouth_union3._dcuouth_struct19._dcvfresp\n#define dcvalloc   _dcuouth_union3._dcuouth_struct19._dcvalloc\n#define dcvvlcap   _dcuouth_union3._dcuouth_struct19._dcvvlcap\n#define dcvfragi   _dcuouth_union3._dcuouth_struct19._dcvfragi\n#define dcvlgext   _dcuouth_union3._dcuouth_struct19._dcvlgext\n#define dcvfrext   _dcuouth_union3._dcuouth_struct19._dcvfrext\n#define dcvfdscb   _dcuouth_union3._dcuouth_struct19._dcvfdscb\n#define dcvfvirs   _dcuouth_union3._dcuouth_struct19._dcvfvirs\n#define dcvdvtyp   _dcuouth_union3._dcuouth_struct19._dcvdvtyp\n#define dcvdvnum   _dcuouth_union3._dcuouth_struct19._dcvdvnum\n#define dcvstggp   _dcuouth_union3._dcuouth_struct19._dcvstggp\n#define ddcnmfld   _dcuouth_union3._dcuouth_struct20._ddcnmfld\n#define ddcnmlen   _dcuouth_union3._dcuouth_struct21._ddcnmlen\n#define ddcname    _dcuouth_union3._dcuouth_struct21._ddcname\n#define ddcuser    _dcuouth_union3._dcuouth_struct21._ddcuser\n#define ddcdate    _dcuouth_union3._dcuouth_struct21._ddcdate\n#define ddctime    _dcuouth_union3._dcuouth_struct21._ddctime\n#define ddcdesc    _dcuouth_union3._dcuouth_struct21._ddcdesc\n#define ddcspec    _dcuouth_union3._dcuouth_struct21._ddcspec\n#define dscnmfld   _dcuouth_union3._dcuouth_struct22._dscnmfld\n#define dscnmlen   _dcuouth_union3._dcuouth_struct23._dscnmlen\n#define dscname    _dcuouth_union3._dcuouth_struct23._dscname\n#define dscuser    _dcuouth_union3._dcuouth_struct23._dscuser\n#define dscdate    _dcuouth_union3._dcuouth_struct23._dscdate\n#define dsctime    _dcuouth_union3._dcuouth_struct23._dsctime\n#define dscdesc    _dcuouth_union3._dcuouth_struct23._dscdesc\n#define dscflags   _dcuouth_union3._dcuouth_struct23._dscflags\n#define dscflag2   _dcuouth_union3._dcuouth_struct23._dscflag2\n#define dscavail   _dcuouth_union3._dcuouth_struct23._dscavail\n#define dscdirb    _dcuouth_union3._dcuouth_struct23._dscdirb\n#define dscseqb    _dcuouth_union3._dcuouth_struct23._dscseqb\n#define dscacces   _dcuouth_union3._dcuouth_struct23._dscacces\n#define dsciacdl   _dcuouth_union3._dcuouth_struct23._dsciacdl\n#define dscdirr    _dcuouth_union3._dcuouth_struct23._dscdirr\n#define dscseqr    _dcuouth_union3._dcuouth_struct23._dscseqr\n#define dscstsdr   _dcuouth_union3._dcuouth_struct23._dscstsdr\n#define dsccchst   _dcuouth_union3._dcuouth_struct23._dsccchst\n#define dmcnmfld   _dcuouth_union3._dcuouth_struct24._dmcnmfld\n#define dmcnmlen   _dcuouth_union3._dcuouth_struct25._dmcnmlen\n#define dmcname    _dcuouth_union3._dcuouth_struct25._dmcname\n#define dmcuser    _dcuouth_union3._dcuouth_struct25._dmcuser\n#define dmcdate    _dcuouth_union3._dcuouth_struct25._dmcdate\n#define dmctime    _dcuouth_union3._dcuouth_struct25._dmctime\n#define dmcdesc    _dcuouth_union3._dcuouth_struct25._dmcdesc\n#define dmcspec1   _dcuouth_union3._dcuouth_struct25._dmcspec1\n#define dmcspec2   _dcuouth_union3._dcuouth_struct25._dmcspec2\n#define dmcrlf     _dcuouth_union3._dcuouth_struct25._dmcrlf\n#define dmcgdgfl   _dcuouth_union3._dcuouth_struct25._dmcgdgfl\n#define dmcpelem   _dcuouth_union3._dcuouth_struct25._dmcpelem\n#define dmcexpf    _dcuouth_union3._dcuouth_struct25._dmcexpf\n#define dmcexpac   _dcuouth_union3._dcuouth_struct25._dmcexpac\n#define dmcrdarc   _dcuouth_union3._dcuouth_struct25._dmcrdarc\n#define dmcretf    _dcuouth_union3._dcuouth_struct25._dmcretf\n#define dmcrfmt    _dcuouth_union3._dcuouth_struct25._dmcrfmt\n#define dmcexpdy   _dcuouth_union3._dcuouth_struct25._dmcexpdy\n#define dmcexdat   _dcuouth_union3._dcuouth_struct25._dmcexdat\n#define dbcuser    _dcuouth_union3._dcuouth_struct26._dbcuser\n#define dbcdate    _dcuouth_union3._dcuouth_struct26._dbcdate\n#define dbctime    _dcuouth_union3._dcuouth_struct26._dbctime\n#define dbcdesc    _dcuouth_union3._dcuouth_struct26._dbcdesc\n#define dbcflags   _dcuouth_union3._dcuouth_struct26._dbcflags\n#define dbcflgdc   _dcuouth_union3._dcuouth_struct26._dbcflgdc\n#define dbcdefmc   _dcuouth_union3._dcuouth_struct26._dbcdefmc\n#define dsgnmfld   _dcuouth_union3._dcuouth_struct27._dsgnmfld\n#define dsgnmlen   _dcuouth_union3._dcuouth_struct28._dsgnmlen\n#define dsgname    _dcuouth_union3._dcuouth_struct28._dsgname\n#define dsguser    _dcuouth_union3._dcuouth_struct28._dsguser\n#define dsgdate    _dcuouth_union3._dcuouth_struct28._dsgdate\n#define dsgtime    _dcuouth_union3._dcuouth_struct28._dsgtime\n#define dsgdesc    _dcuouth_union3._dcuouth_struct28._dsgdesc\n#define dsgflags   _dcuouth_union3._dcuouth_struct28._dsgflags\n#define dsgflgdc   _dcuouth_union3._dcuouth_struct28._dsgflgdc\n#define dsgftype   _dcuouth_union3._dcuouth_struct28._dsgftype\n#define dsgfhthr   _dcuouth_union3._dcuouth_struct28._dsgfhthr\n#define dsgflthr   _dcuouth_union3._dcuouth_struct28._dsgflthr\n#define dsgfvmax   _dcuouth_union3._dcuouth_struct28._dsgfvmax\n#define dsgfvunt   _dcuouth_union3._dcuouth_struct28._dsgfvunt\n#define dsgdmpcl   _dcuouth_union3._dcuouth_struct28._dsgdmpcl\n#define dsgfprst   _dcuouth_union3._dcuouth_struct28._dsgfprst\n#define dvlnmfld   _dcuouth_union3._dcuouth_struct29._dvlnmfld\n#define dvlnmlen   _dcuouth_union3._dcuouth_struct30._dvlnmlen\n#define dvlvser    _dcuouth_union3._dcuouth_struct30._dvlvser\n#define dvluser    _dcuouth_union3._dcuouth_struct30._dvluser\n#define dvldate    _dcuouth_union3._dcuouth_struct30._dvldate\n#define dvltime    _dcuouth_union3._dcuouth_struct30._dvltime\n#define dvlflags   _dcuouth_union3._dcuouth_struct30._dvlflags\n#define dvlflgdc   _dcuouth_union3._dcuouth_struct30._dvlflgdc\n#define dvlsg      _dcuouth_union3._dcuouth_struct30._dvlsg\n#define dagnmfld   _dcuouth_union3._dcuouth_struct31._dagnmfld\n#define dagnmlen   _dcuouth_union3._dcuouth_struct32._dagnmlen\n#define dagname    _dcuouth_union3._dcuouth_struct32._dagname\n#define daguser    _dcuouth_union3._dcuouth_struct32._daguser\n#define dagdate    _dcuouth_union3._dcuouth_struct32._dagdate\n#define dagtime    _dcuouth_union3._dcuouth_struct32._dagtime\n#define dagdesc    _dcuouth_union3._dcuouth_struct32._dagdesc\n#define dagflags   _dcuouth_union3._dcuouth_struct32._dagflags\n#define dagretpd   _dcuouth_union3._dcuouth_struct32._dagretpd\n#define ddrnmfld   _dcuouth_union3._dcuouth_struct33._ddrnmfld\n#define ddrdvlen   _dcuouth_union3._dcuouth_struct34._ddrdvlen\n#define ddrname    _dcuouth_union3._dcuouth_struct34._ddrname\n#define dlbnmfld   _dcuouth_union3._dcuouth_struct35._dlbnmfld\n#define dlbnmlen   _dcuouth_union3._dcuouth_struct36._dlbnmlen\n#define dlblname   _dcuouth_union3._dcuouth_struct36._dlblname\n#define dcncsnam   _dcuouth_union3._dcuouth_struct37._dcncsnam\n#define dcnsesnm   _dcuouth_union3._dcuouth_struct37._dcnsesnm\n#define dcndatae   _dcuouth_union3._dcuouth_struct37._dcndatae\n#define daidrtn    _dcuouth_union3._dcuouth_struct38._daidrtn\n#define daiddate   _dcuouth_union3._dcuouth_struct39._daiddate\n#define daiddsnm   _dcuouth_union3._dcuouth_struct39._daiddsnm\n#define daiddsmr   _dcuouth_union3._dcuouth_struct39._daiddsmr\n#define daidsrid   _dcuouth_union3._dcuouth_struct39._daidsrid\n#define daidtime   _dcuouth_union3._dcuouth_struct39._daidtime\n#define daimrtn    _dcuouth_union3._dcuouth_struct39._daimrtn\n#define ddrdname   _dcuouth_union3._dcuouth_struct40._ddrdname\n#define ddrduser   _dcuouth_union3._dcuouth_struct40._ddrduser\n#define ddrddate   _dcuouth_union3._dcuouth_struct40._ddrddate\n#define ddrflags   _dcuouth_union3._dcuouth_struct40._ddrflags\n#define ddrdtime   _dcuouth_union3._dcuouth_struct40._ddrdtime\n#define ddrlb      _dcuouth_union3._dcuouth_struct40._ddrlb\n#define dlbname    _dcuouth_union3._dcuouth_struct41._dlbname\n#define dlbduser   _dcuouth_union3._dcuouth_struct41._dlbduser\n#define dlbddate   _dcuouth_union3._dcuouth_struct41._dlbddate\n#define dlbflags   _dcuouth_union3._dcuouth_struct41._dlbflags\n#define dlbdtime   _dcuouth_union3._dcuouth_struct41._dlbdtime\n#define dlbnstat   _dcuouth_union3._dcuouth_struct41._dlbnstat\n#define dcddsor0   _dcuouth_union3._dcuouth_struct42._dcddsor0\n#define dcddsor1   _dcuouth_union3._dcuouth_struct42._dcddsor1\n#define dcdrecrd   _dcuouth_union3._dcuouth_struct42._dcdrecrd\n#define dcdnmext   _dcuouth_union3._dcuouth_struct42._dcdnmext\n#define dcdvolsr   _dcuouth_union3._dcuouth_struct42._dcdvolsr\n#define dcdbklng   _dcuouth_union3._dcuouth_struct42._dcdbklng\n#define dcdlrecl   _dcuouth_union3._dcuouth_struct42._dcdlrecl\n#define dcdallsp   _dcuouth_union3._dcuouth_struct42._dcdallsp\n#define dcdusesp   _dcuouth_union3._dcuouth_struct42._dcdusesp\n#define dcdscall   _dcuouth_union3._dcuouth_struct42._dcdscall\n#define dcdnmblk   _dcuouth_union3._dcuouth_struct42._dcdnmblk\n#define dcdcredt   _dcuouth_union3._dcuouth_struct42._dcdcredt\n#define dcdexpdt   _dcuouth_union3._dcuouth_struct42._dcdexpdt\n#define dcdlstrf   _dcuouth_union3._dcuouth_struct42._dcdlstrf\n#define dcddsser   _dcuouth_union3._dcuouth_struct42._dcddsser\n#define dcdvolsq   _dcuouth_union3._dcuouth_struct42._dcdvolsq\n#define dcdlbkdt   _dcuouth_union3._dcuouth_struct42._dcdlbkdt\n#define dcddclas   _dcuouth_union3._dcuouth_struct42._dcddclas\n#define dcvsglng   _dcuouth_union3._dcuouth_struct43._dcvsglng\n#define dcvsgtcl   _dcuouth_union3._dcuouth_struct43._dcvsgtcl\n#define dcvdptyp   _dcuouth_union3._dcuouth_struct43._dcvdptyp\n#define dcvvolie   _dcuouth_union3._dcuouth_struct43._dcvvolie\n#define ddcspec1   _dcuouth_union3._dcuouth_struct43._ddcspec1\n#define ddcspec2   _dcuouth_union3._dcuouth_struct43._ddcspec2\n#define ddcspec3   _dcuouth_union3._dcuouth_struct43._ddcspec3\n#define ddcspec4   _dcuouth_union3._dcuouth_struct43._ddcspec4\n#define ddcrcorg   _dcuouth_union3._dcuouth_struct43._ddcrcorg\n#define ddcrecfm   _dcuouth_union3._dcuouth_struct43._ddcrecfm\n#define ddcdsflg   _dcuouth_union3._dcuouth_struct43._ddcdsflg\n#define ddccntl    _dcuouth_union3._dcuouth_struct43._ddccntl\n#define ddcretpd   _dcuouth_union3._dcuouth_struct43._ddcretpd\n#define ddrlblen   _dcuouth_union3._dcuouth_struct44._ddrlblen\n#define ddrlibry   _dcuouth_union3._dcuouth_struct44._ddrlibry\n#define ddrlbnm    _dcuouth_union3._dcuouth_struct45._ddrlbnm\n#define ddrnstat   _dcuouth_union3._dcuouth_struct45._ddrnstat\n#define dvlsglen   _dcuouth_union3._dcuouth_struct46._dvlsglen\n#define dvlstgrp   _dcuouth_union3._dcuouth_struct46._dvlstgrp\n#define dvlnstat   _dcuouth_union3._dcuouth_struct46._dvlnstat\n#define dlbomst    _dcuouth_union3._dcuouth_struct47._dlbomst\n#define dlbsout    _dcuouth_union3._dcuouth_struct48._dlbsout\n#define dlbcfcs    _dcuouth_union3._dcuouth_struct48._dlbcfcs\n#define dlbtype    _dcuouth_union3._dcuouth_struct48._dlbtype\n#define dlbdtype   _dcuouth_union3._dcuouth_struct48._dlbdtype\n#define dlbdcons   _dcuouth_union3._dcuouth_struct48._dlbdcons\n#define dlbedvt    _dcuouth_union3._dcuouth_struct48._dlbedvt\n#define dlbejd     _dcuouth_union3._dcuouth_struct48._dlbejd\n#define dlblcbid   _dcuouth_union3._dcuouth_struct48._dlblcbid\n#define dlbedunm   _dcuouth_union3._dcuouth_struct48._dlbedunm\n#define dlbdefdc   _dcuouth_union3._dcuouth_struct48._dlbdefdc\n#define daimdate   _dcuouth_union3._dcuouth_struct49._daimdate\n#define daimdsnm   _dcuouth_union3._dcuouth_struct49._daimdsnm\n#define daimdsmr   _dcuouth_union3._dcuouth_struct49._daimdsmr\n#define daimsrid   _dcuouth_union3._dcuouth_struct49._daimsrid\n#define daimtime   _dcuouth_union3._dcuouth_struct49._daimtime\n#define daisrtn    _dcuouth_union3._dcuouth_struct49._daisrtn\n#define ddromst    _dcuouth_union3._dcuouth_struct50._ddromst\n#define ddrsout    _dcuouth_union3._dcuouth_struct51._ddrsout\n#define ddrcfcs    _dcuouth_union3._dcuouth_struct51._ddrcfcs\n#define ddrdcons   _dcuouth_union3._dcuouth_struct51._ddrdcons\n#define ddrstat    _dcuouth_union3._dcuouth_struct51._ddrstat\n#define dvlsmss    _dcuouth_union3._dcuouth_struct52._dvlsmss\n#define dvlmvss    _dcuouth_union3._dcuouth_struct52._dvlmvss\n#define dvlcsmss   _dcuouth_union3._dcuouth_struct52._dvlcsmss\n#define dvlnucba   _dcuouth_union3._dcuouth_struct52._dvlnucba\n#define dvlntcpy   _dcuouth_union3._dcuouth_struct52._dvlntcpy\n#define dvlnfree   _dcuouth_union3._dcuouth_struct52._dvlnfree\n#define dvlnlext   _dcuouth_union3._dcuouth_struct52._dvlnlext\n#define dvln0cnt   _dcuouth_union3._dcuouth_struct52._dvln0cnt\n#define dvltrksz   _dcuouth_union3._dcuouth_struct52._dvltrksz\n#define dvlnlevl   _dcuouth_union3._dcuouth_struct52._dvlnlevl\n#define dvlsstat   _dcuouth_union3._dcuouth_struct52._dvlsstat\n#define dcddclng   _dcuouth_union3._dcuouth_struct53._dcddclng\n#define dcddatcl   _dcuouth_union3._dcuouth_struct53._dcddatcl\n#define dcdsclas   _dcuouth_union3._dcuouth_struct53._dcdsclas\n#define dlbdclen   _dcuouth_union3._dcuouth_struct54._dlbdclen\n#define dlbdclnm   _dcuouth_union3._dcuouth_struct54._dlbdclnm\n#define dlbdcnam   _dcuouth_union3._dcuouth_struct55._dlbdcnam\n#define dlbstat    _dcuouth_union3._dcuouth_struct55._dlbstat\n#define ddrsysst   _dcuouth_union3._dcuouth_struct56._ddrsysst\n#define ddrreqst   _dcuouth_union3._dcuouth_struct57._ddrreqst\n#define ddrcurst   _dcuouth_union3._dcuouth_struct57._ddrcurst\n#define dcdsclng   _dcuouth_union3._dcuouth_struct58._dcdsclng\n#define dcdstgcl   _dcuouth_union3._dcuouth_struct58._dcdstgcl\n#define dcdmclas   _dcuouth_union3._dcuouth_struct58._dcdmclas\n#define dvlstsms   _dcuouth_union3._dcuouth_struct59._dvlstsms\n#define dvlstmvs   _dcuouth_union3._dcuouth_struct59._dvlstmvs\n#define dvlcnsms   _dcuouth_union3._dcuouth_struct59._dvlcnsms\n#define dlbsysst   _dcuouth_union3._dcuouth_struct60._dlbsysst\n#define dlbreqst   _dcuouth_union3._dcuouth_struct61._dlbreqst\n#define dlbcurst   _dcuouth_union3._dcuouth_struct61._dlbcurst\n#define daisdate   _dcuouth_union3._dcuouth_struct62._daisdate\n#define daisdsnm   _dcuouth_union3._dcuouth_struct62._daisdsnm\n#define daisdsmr   _dcuouth_union3._dcuouth_struct62._daisdsmr\n#define daissrid   _dcuouth_union3._dcuouth_struct62._daissrid\n#define daistime   _dcuouth_union3._dcuouth_struct62._daistime\n#define daigrtn    _dcuouth_union3._dcuouth_struct62._daigrtn\n#define dcdmclng   _dcuouth_union3._dcuouth_struct63._dcdmclng\n#define dcdmgtcl   _dcuouth_union3._dcuouth_struct63._dcdmgtcl\n#define dcdstogp   _dcuouth_union3._dcuouth_struct63._dcdstogp\n#define dbcmclen   _dcuouth_union3._dcuouth_struct64._dbcmclen\n#define dbcmcnam   _dcuouth_union3._dcuouth_struct64._dbcmcnam\n#define dbcdgeom   _dcuouth_union3._dcuouth_struct64._dbcdgeom\n#define dagexpyr   _dcuouth_union3._dcuouth_struct65._dagexpyr\n#define dagexpdy   _dcuouth_union3._dcuouth_struct65._dagexpdy\n#define dagdest    _dcuouth_union3._dcuouth_struct65._dagdest\n#define dagprefx   _dcuouth_union3._dcuouth_struct65._dagprefx\n#define dagidsnm   _dcuouth_union3._dcuouth_struct65._dagidsnm\n#define ddcexpyr   _dcuouth_union3._dcuouth_struct66._ddcexpyr\n#define ddcexpdy   _dcuouth_union3._dcuouth_struct66._ddcexpdy\n#define ddcvolct   _dcuouth_union3._dcuouth_struct66._ddcvolct\n#define ddcdsnty   _dcuouth_union3._dcuouth_struct66._ddcdsnty\n#define ddcsppri   _dcuouth_union3._dcuouth_struct66._ddcsppri\n#define ddcspsec   _dcuouth_union3._dcuouth_struct66._ddcspsec\n#define ddcdiblk   _dcuouth_union3._dcuouth_struct66._ddcdiblk\n#define ddcavrec   _dcuouth_union3._dcuouth_struct66._ddcavrec\n#define ddcreduc   _dcuouth_union3._dcuouth_struct66._ddcreduc\n#define ddcrbias   _dcuouth_union3._dcuouth_struct66._ddcrbias\n#define ddcaunit   _dcuouth_union3._dcuouth_struct66._ddcaunit\n#define ddcbszlm   _dcuouth_union3._dcuouth_struct66._ddcbszlm\n#define ddclrecl   _dcuouth_union3._dcuouth_struct66._ddclrecl\n#define ddccisz    _dcuouth_union3._dcuouth_struct66._ddccisz\n#define ddcfrsp    _dcuouth_union3._dcuouth_struct66._ddcfrsp\n#define dmceyear   _dcuouth_union3._dcuouth_struct67._dmceyear\n#define dmceday    _dcuouth_union3._dcuouth_struct67._dmceday\n#define dmcmigf    _dcuouth_union3._dcuouth_struct67._dmcmigf\n#define dmcprdy    _dcuouth_union3._dcuouth_struct67._dmcprdy\n#define dmcl1dy    _dcuouth_union3._dcuouth_struct67._dmcl1dy\n#define dmccmau    _dcuouth_union3._dcuouth_struct67._dmccmau\n#define dmcbkflg   _dcuouth_union3._dcuouth_struct67._dmcbkflg\n#define dmcbkfq    _dcuouth_union3._dcuouth_struct67._dmcbkfq\n#define dmcbkvs    _dcuouth_union3._dcuouth_struct67._dmcbkvs\n#define dmcbvrd    _dcuouth_union3._dcuouth_struct67._dmcbvrd\n#define dmcbkdy    _dcuouth_union3._dcuouth_struct67._dmcbkdy\n#define dmcbknp    _dcuouth_union3._dcuouth_struct67._dmcbknp\n#define dmcbadu    _dcuouth_union3._dcuouth_struct67._dmcbadu\n#define dmccpytc   _dcuouth_union3._dcuouth_struct67._dmccpytc\n#define dmcbkudc   _dcuouth_union3._dcuouth_struct67._dmcbkudc\n#define dmcmretf   _dcuouth_union3._dcuouth_struct67._dmcmretf\n#define dmcmrtdy   _dcuouth_union3._dcuouth_struct67._dmcmrtdy\n#define dmctscr    _dcuouth_union3._dcuouth_struct67._dmctscr\n#define dmctslu    _dcuouth_union3._dcuouth_struct67._dmctslu\n#define dmcperd    _dcuouth_union3._dcuouth_struct67._dmcperd\n#define dmcvscr    _dcuouth_union3._dcuouth_struct67._dmcvscr\n#define dcdsglng   _dcuouth_union3._dcuouth_struct68._dcdsglng\n#define dcdstgrp   _dcuouth_union3._dcuouth_struct68._dcdstgrp\n#define dcdccsid   _dcuouth_union3._dcuouth_struct68._dcdccsid\n#define dcdudsiz   _dcuouth_union3._dcuouth_struct68._dcdudsiz\n#define dcdcudsz   _dcuouth_union3._dcuouth_struct68._dcdcudsz\n#define dcdexflg   _dcuouth_union3._dcuouth_struct68._dcdexflg\n#define dcdscnt    _dcuouth_union3._dcuouth_struct68._dcdscnt\n#define dcdovera   _dcuouth_union3._dcuouth_struct68._dcdovera\n#define dcdacct    _dcuouth_union3._dcuouth_struct68._dcdacct\n#define dcdadsie   _dcuouth_union3._dcuouth_struct68._dcdadsie\n#define dsccslen   _dcuouth_union3._dcuouth_struct69._dsccslen\n#define dsccsnam   _dcuouth_union3._dcuouth_struct69._dsccsnam\n#define dscdircw   _dcuouth_union3._dcuouth_struct69._dscdircw\n#define dscseqcw   _dcuouth_union3._dcuouth_struct69._dscseqcw\n#define dscdatae   _dcuouth_union3._dcuouth_struct69._dscdatae\n#define dbctrksz   _dcuouth_union3._dcuouth_struct70._dbctrksz\n#define dbccylcp   _dcuouth_union3._dcuouth_struct70._dbccylcp\n#define dbcdunit   _dcuouth_union3._dcuouth_struct70._dbcdunit\n#define dbcsrst    _dcuouth_union3._dcuouth_struct70._dbcsrst\n#define dbcstat    _dcuouth_union3._dcuouth_struct70._dbcstat\n#define dbcfsysn   _dcuouth_union3._dcuouth_struct70._dbcfsysn\n#define dbcscdsn   _dcuouth_union3._dcuouth_struct70._dbcscdsn\n#define dbcsfeat   _dcuouth_union3._dcuouth_struct70._dbcsfeat\n#define ddccipct   _dcuouth_union3._dcuouth_struct71._ddccipct\n#define ddccapct   _dcuouth_union3._dcuouth_struct71._ddccapct\n#define ddcshrop   _dcuouth_union3._dcuouth_struct71._ddcshrop\n#define ddcxreg    _dcuouth_union3._dcuouth_struct72._ddcxreg\n#define ddcxsys    _dcuouth_union3._dcuouth_struct72._ddcxsys\n#define ddcvindx   _dcuouth_union3._dcuouth_struct72._ddcvindx\n#define ddcklen    _dcuouth_union3._dcuouth_struct72._ddcklen\n#define ddckoff    _dcuouth_union3._dcuouth_struct72._ddckoff\n#define ddccamt    _dcuouth_union3._dcuouth_struct72._ddccamt\n#define ddccomp    _dcuouth_union3._dcuouth_struct72._ddccomp\n#define ddcmedia   _dcuouth_union3._dcuouth_struct72._ddcmedia\n#define ddcrecte   _dcuouth_union3._dcuouth_struct72._ddcrecte\n#define ddcrls1    _dcuouth_union3._dcuouth_struct72._ddcrls1\n#define daigdate   _dcuouth_union3._dcuouth_struct73._daigdate\n#define daigdsnm   _dcuouth_union3._dcuouth_struct73._daigdsnm\n#define daigdsmr   _dcuouth_union3._dcuouth_struct73._daigdsmr\n#define daigsrid   _dcuouth_union3._dcuouth_struct73._daigsrid\n#define daigtime   _dcuouth_union3._dcuouth_struct73._daigtime\n#define daidatae   _dcuouth_union3._dcuouth_struct73._daidatae\n#define dsgstat    _dcuouth_union3._dcuouth_struct74._dsgstat\n#define dsgabsys   _dcuouth_union3._dcuouth_struct74._dsgabsys\n#define dsgadsys   _dcuouth_union3._dcuouth_struct74._dsgadsys\n#define dsgamsys   _dcuouth_union3._dcuouth_struct74._dsgamsys\n#define dsgcnfrm   _dcuouth_union3._dcuouth_struct74._dsgcnfrm\n#define ddcbwotp   _dcuouth_union3._dcuouth_struct75._ddcbwotp\n#define ddclogrc   _dcuouth_union3._dcuouth_struct75._ddclogrc\n#define ddcspand   _dcuouth_union3._dcuouth_struct75._ddcspand\n#define ddclognm   _dcuouth_union3._dcuouth_struct75._ddclognm\n#define dmcvscy    _dcuouth_union3._dcuouth_struct76._dmcvscy\n#define dmcvscm    _dcuouth_union3._dcuouth_struct76._dmcvscm\n#define dmcvscd    _dcuouth_union3._dcuouth_struct76._dmcvscd\n#define dmcvslu    _dcuouth_union3._dcuouth_struct76._dmcvslu\n#define ddclogln   _dcuouth_union3._dcuouth_struct77._ddclogln\n#define ddclogid   _dcuouth_union3._dcuouth_struct77._ddclogid\n#define ddcspecx   _dcuouth_union3._dcuouth_struct77._ddcspecx\n#define dmcvsuy    _dcuouth_union3._dcuouth_struct78._dmcvsuy\n#define dmcvsum    _dcuouth_union3._dcuouth_struct78._dmcvsum\n#define dmcvsud    _dcuouth_union3._dcuouth_struct78._dmcvsud\n#define dmcvprd    _dcuouth_union3._dcuouth_struct78._dmcvprd\n#define dmcvpmd    _dcuouth_union3._dcuouth_struct78._dmcvpmd\n#define dmcvpqt    _dcuouth_union3._dcuouth_struct78._dmcvpqt\n#define dagindsn   _dcuouth_union3._dcuouth_struct79._dagindsn\n#define daginmem   _dcuouth_union3._dcuouth_struct79._daginmem\n#define dagdsnms   _dcuouth_union3._dcuouth_struct79._dagdsnms\n#define dmcvpqd    _dcuouth_union3._dcuouth_struct80._dmcvpqd\n#define dmcvpqm    _dcuouth_union3._dcuouth_struct80._dmcvpqm\n#define dmcvpyr    _dcuouth_union3._dcuouth_struct80._dmcvpyr\n#define dmcvpyd    _dcuouth_union3._dcuouth_struct81._dmcvpyd\n#define dmcvpym    _dcuouth_union3._dcuouth_struct81._dmcvpym\n#define dmcdatae   _dcuouth_union3._dcuouth_struct81._dmcdatae\n#define dsgcsmss   _dcuouth_union3._dcuouth_struct82._dsgcsmss\n#define dsggbkuf   _dcuouth_union3._dcuouth_struct82._dsggbkuf\n#define dsgtblgr   _dcuouth_union3._dcuouth_struct82._dsgtblgr\n#define dsgoamfl   _dcuouth_union3._dcuouth_struct82._dsgoamfl\n#define dsgcylst   _dcuouth_union3._dcuouth_struct82._dsgcylst\n#define dsgcyled   _dcuouth_union3._dcuouth_struct82._dsgcyled\n#define dsgvolft   _dcuouth_union3._dcuouth_struct82._dsgvolft\n#define dsgdrvst   _dcuouth_union3._dcuouth_struct82._dsgdrvst\n#define dsgolibs   _dcuouth_union3._dcuouth_struct82._dsgolibs\n#define ddcspeca   _dcuouth_union3._dcuouth_struct83._ddcspeca\n#define ddcdatae   _dcuouth_union3._dcuouth_struct83._ddcdatae\n#define dsgolbnl   _dcuouth_union3._dcuouth_struct84._dsgolbnl\n#define dsgolbnm   _dcuouth_union3._dcuouth_struct84._dsgolbnm\n#define dagdsn     _dcuouth_union3._dcuouth_struct85._dagdsn\n#define dagmem     _dcuouth_union3._dcuouth_struct85._dagmem\n#define dbcsysdt   _dcuouth_union4._dcuouth_struct86._dbcsysdt\n#define dbcsysnm   _dcuouth_union4._dcuouth_struct87._dbcsysnm\n#define dbcsysft   _dcuouth_union4._dcuouth_struct87._dbcsysft\n#define dbcsnmty   _dcuouth_union4._dcuouth_struct87._dbcsnmty\n#define ddrdatae   _dcuouth_union5._dcuouth_struct89._ddrdatae\n#define dvldatae   _dcuouth_union5._dcuouth_struct90._dvldatae\n#define dsgsstat   _dcuouth_union6._dsgsstat\n#define dsgsysst   _dcuouth_union6._dcuouth_struct91._dsgsysst\n#define dsgcnsms   _dcuouth_union6._dcuouth_struct91._dsgcnsms\n#define dagmgmtc   _dcuouth_union7._dagmgmtc\n#define dagmclen   _dcuouth_union7._dcuouth_struct92._dagmclen\n#define dagmcnam   _dcuouth_union7._dcuouth_struct92._dagmcnam\n\n/* Values for field \"dcudata\" */\n#define dcuouth_len 0x18\n\n/* Values for field \"dcderror\" */\n#define dcdemngd    0x80   /* SMS MANAGED INCONSISTENCY                     */\n#define dcdedvvr    0x40   /* DUPLICATE VVR FOUND                           */\n#define dcdnospc    0x20   /* NO SPACE INFORMATION PROVIDED                 */\n#define dcdvsami    0x10   /* VSAM INDICATORS INCONSISTENT                  */\n#define dcdnofm1    0x08   /* NO FMT 1 DSCB FOR THIS DATA SET               */\n\n/* Values for field \"dcdflag1\" */\n#define dcdracfd    0x80   /* DATA SET IS RACF DEFINED                      */\n#define dcdsmsm     0x40   /* SMS MANAGED DATA SET                          */\n#define dcdtemp     0x20   /* TEMPORARY DATA SET                            */\n#define dcdpdse     0x10   /* PARTITIONED DATA SET (EXTENDED)               */\n#define dcdgds      0x08   /* GENERATION DATA GROUP DATA SET                */\n#define dcdreblk    0x04   /* DATA SET MAY BE REBLOCKED                     */\n#define dcdchind    0x02   /* CHANGE INDICATOR                              */\n#define dcdckdsi    0x01   /* CHECKPOINT DATA SET INDICATOR                 */\n\n/* Values for field \"dcdflag2\" */\n#define dcdnovvr    0x80   /* NO VVR FOR THIS DATA SET                      */\n#define dcdintcg    0x40   /* DATA SET IS AN ICF CATALOG                    */\n#define dcdinicf    0x20   /* DATA SET IS CATALOGED IN ICF CAT              */\n#define dcdallfg    0x08   /* ALLOCATED SPACE RET'D                         */\n#define dcdusefg    0x04   /* USED SPACE INFO RET'D                         */\n#define dcdsecfg    0x02   /* SEC. SPACE INFO RET'D                         */\n#define dcdnmbfg    0x01   /* UNUSEABLE SPACE RET'D                         */\n\n/* Values for field \"dcdflag3\" */\n#define dcdpdsex    0x80   /* POSIX FILE SYSTEM FILE                        */\n#define dcdstrp     0x40   /* EXTENDED FORMAT                               */\n#define dcdddmex    0x20   /* DDM INFO EXIST FOR THIS DS                    */\n\n/* Values for field \"dcaflag1\" */\n#define dcaksds     0x80   /* KEY SEQUENCED DATA SET                        */\n#define dcaesds     0x40   /* ENTRY SEQUENCED DATA SET                      */\n#define dcarrds     0x20   /* RELATIVE RECORD DATA SET                      */\n#define dcalds      0x10   /* LINEAR DATA SET                               */\n#define dcakrds     0x08   /* KEY RANGE DATA SET                            */\n#define dcaaix      0x04   /* ALTERNATE INDEX DATA SET                      */\n#define dcadata     0x02   /* VSAM DATA COMPONENT                           */\n#define dcaindex    0x01   /* VSAM INDEX COMPONENT                          */\n\n/* Values for field \"dcaflag2\" */\n#define dcakr1st    0x80   /* 1ST SEGMENT OF KR DATA SET                    */\n#define dcaixupg    0x40   /* ALTERNATE INDEX W/ UPGRADE                    */\n#define dcavrrds    0x20   /* VARIABLE RRDS                                 */\n#define dcanstat    0x10   /* NO VSAM STATS IN RECORD                       */\n#define dcasrci     0x08   /* RBA is CI number                              */\n#define dcag4g      0x04   /* Extended Addressability                       */\n\n/* Values for field \"dcassoce\" */\n#define dcassoc_len 0xB4\n\n/* Values for field \"dcvflag1\" */\n#define dcvinxst    0xC0   /* INDEX STATUS                                  */\n#define dcvinxex    0x80   /* INDEXED VTOC EXISTS                           */\n#define dcvinxen    0x40   /* INDEXED VTOC IS ENABLED                       */\n#define dcvusatr    0x38   /* USE ATTRIBUTE                                 */\n#define dcvuspvt    0x20   /* PRIVATE                                       */\n#define dcvuspub    0x10   /* PUBLIC                                        */\n#define dcvussto    0x08   /* STORAGE                                       */\n#define dcvshrds    0x04   /* DEVICE IS SHAREABLE                           */\n#define dcvphyst    0x03   /* PHYSICAL STATUS                               */\n\n/* Values for field \"dcverror\" */\n#define dcvevlcp    0x80   /* ERROR CALCULATING VOL CAPACITY                */\n#define dcvebytk    0x40   /* ERROR CALCULATING BYTES/TRK                   */\n#define dcvelspc    0x20   /* ERROR DURING LSPACE PROCESSING                */\n\n/* Values for field \"dscflags\" */\n#define dscdfgsp    0x80   /* GUARANTEED SPACE 1=YES,0=NO                   */\n#define dscdfavl    0x40   /* AVAILABILITY, 1=SEE DSCAVAIL 0=STANDARD       */\n#define dscfdirr    0x20   /* DIRECT RESPONSE TIME OBJECT, 0=DON'T CARE,    */\n#define dscfdirb    0x10   /* DIRECT BIAS, 0= DON'T CARE 1= SEE DSCDIRB     */\n#define dscfseqr    0x08   /* SEQ. RESPONSE TIME OBJECTIVE, 0=DON'T CARE,   */\n#define dscfseqb    0x04   /* SEQ. BIAS, 0= DON'T CARE 1= SEE DSCSEQB       */\n#define dscsyncd    0x02   /* SYNCDEV, 1 = YES, 0 = NO                      */\n#define dscfiad     0x01   /* 1 = INITIAL ACCESS RESPONSE                   */\n\n/* Values for field \"dscflag2\" */\n#define dscdfacc    0x80   /* ACCESSIBILITY,1=SEE DSCACCES                  */\n#define dscdfsdr    0x40   /* STRIPING SUSTAINED DATA RATE 0=NOT            */\n#define dscfdcfw    0x20   /* Direct CF weight specified: 1 = YES 0 = NO    */\n#define dscfscfw    0x10   /* Sequential weight specified: 1 = YES 0 = NO   */\n\n/* Values for field \"dmcspec1\" */\n#define dmcfbver    0x80   /* DMCBKVS SPECIFIED FLAG                        */\n#define dmcfbvrd    0x40   /* DMCBVRD SPECIFIED FLAG                        */\n#define dmcfrbk     0x20   /* DMCBKDY SPECIFIED FLAG                        */\n#define dmcfrnp     0x10   /* DMCBKNP SPECIFIED FLAG                        */\n#define dmcfexdt    0x08   /* DMCEXDAT SPECIFIED FLAG                       */\n#define dmcfexdy    0x04   /* DMCEXPDY SPECIFIED FLAG                       */\n#define dmcfprdy    0x02   /* DMCPRDY SPECIFIED FLAG                        */\n\n/* Values for field \"dmcspec2\" */\n#define dmcfl1dy    0x80   /* DMCL1DY SPECIFIED FLAG                        */\n#define dmcfrlmg    0x40   /* DMCRLOMG SPECIFIED FLAG                       */\n#define dmcfpele    0x20   /* DMCPELEM SPECIFIED FLAG                       */\n#define dmcfbkfq    0x10   /* DMCBKFQ SPECIFIED FLAG                        */\n\n/* Values for field \"dmcrlf\" */\n#define dmcprel     0x80   /* RELEASE 1 = YES, 0 = NO                       */\n#define dmcprcn     0x40   /* CONDITIONAL PARTREL                           */\n#define dmcprim     0x20   /* IMMEDIATE VALUE FOR REL                       */\n\n/* Values for field \"dmcgdgfl\" */\n#define dmcrlomg    0x80   /* MIGRATE OR EXPIRE ROLLED OFF GDS, 1=MIGRATE,  */\n\n/* Values for field \"dmcexpf\" */\n#define dmcarnol    0x80   /* DMCRDARC IS NOLIMIT = 1                       */\n\n/* Values for field \"dmcretf\" */\n#define dmcdynol    0x80   /* 1=EXPIRE AFTER DAYS= NOLIMIT ELSE 0 AND SEE   */\n#define dmcdtnol    0x40   /* 1=EXPIRE AFTER DATE= NOLIMIT ELSE 0 AND SEE   */\n\n/* Values for field \"dbcflgdc\" */\n#define dbc32nam    0x80   /* 0 = use DBCFSYSN                              */\n\n/* Values for field \"dsgflags\" */\n#define dsgfabup    0x80   /* HSM AUTO BACKUP, 1=YES,0=NO                   */\n#define dsgfamig    0x40   /* AUTO MIGRATION, 1=YES, 0=NO                   */\n#define dsgfadmp    0x20   /* AUTO DUMP, 1 = YES, 0 = NO                    */\n#define dsgfthrs    0x10   /* THRESHOLDS SPECIFIED: 1 = YES, 0 = NO         */\n#define dsgfgbku    0x08   /* GUARANTEED BACKUP FREQ. SPECIFIED, 1=YES,     */\n#define dsggbnol    0x04   /* GUARANTEED BACKUP FREQ. 1=NOLIMIT, 0=SEE      */\n#define dsgfimig    0x02   /* INTERVAL MIGRATION 1 = YES 0 = NO             */\n#define dsgfpsm     0x01   /* PRIMARY SPACE MGMT                            */\n\n/* Values for field \"dsgflgdc\" */\n#define dsg32nam    0x80   /* 0 = Use DSGFPRST, DSGCNFRM                    */\n\n/* Values for field \"dvlflags\" */\n#define dvlconv     0x80   /* 1 = VOL IS IN CONVERSION                      */\n\n/* Values for field \"dvlflgdc\" */\n#define dvl32nam    0x80   /* 0 = Use DVLNSTAT, DVLCSMSS                    */\n\n/* Values for field \"dagflags\" */\n#define dagtenq     0x80   /* TOLERATE ENQ FAILURE, 1 = YES, 0 = NO         */\n#define dagfret     0x40   /* RETENTION PERIOD SPECIFIED, 1 = YES, 0 = NO   */\n#define dagfncpy    0x20   /* NUMBER OF COPIES SPECIFIED, 1 = YES, 0 = NO   */\n\n/* Values for field \"dcndatae\" */\n#define dcndata_len 0x98\n\n/* Values for field \"ddrflags\" */\n#define ddr32nam    0x80   /* 0 = Use DDRNSTAT                              */\n\n/* Values for field \"dlbflags\" */\n#define dlb32nam    0x80   /* 0 = Use DLBNSTAT                              */\n\n/* Values for field \"dcddsor0\" */\n#define dcddsgis    0x80   /* IS - INDEXED SEQUENTIAL ORG                   */\n#define dcddsgps    0x40   /* PS - PHYSICAL SEQUENTIAL ORG                  */\n#define dcddsgda    0x20   /* DA - DIRECT ORGANIZATION                      */\n#define dcddsgpo    0x02   /* PO - PARTITIONED ORGANIZATION                 */\n#define dcddsgu     0x01   /* U - UNMOVEABLE DATA SET                       */\n\n/* Values for field \"dcddsor1\" */\n#define dcddsggs    0x80   /* GS - GRAPHICS ORGANIZATION                    */\n#define dcddsgvs    0x08   /* VS - VSAM DATA SET                            */\n\n/* Values for field \"dcdrecrd\" */\n#define dcdrecfm    0xC0   /* RECORD FORMAT BITS                            */\n#define dcdrecft    0x20   /* TRACK OVERFLOW                                */\n#define dcdrecfb    0x10   /* BLOCKED RECORDS                               */\n#define dcdrecfs    0x08   /* STANDARD BLOCKS(F) OR SPANNED(V)              */\n#define dcdrecfa    0x04   /* ANSI CONTROL CHARACTER                        */\n#define dcdrecfc    0x02   /* MACHINE CONTROL CHARACTER                     */\n\n/* Values for field \"dcvvolie\" */\n#define dcvvoli_len 0x70\n\n/* Values for field \"ddcspec1\" */\n#define ddcfrorg    0x80   /* RECORG SPECIFIED FLAG                         */\n#define ddcflrec    0x40   /* LRECL SPECIFIED FLAG                          */\n#define ddcfrfm     0x20   /* RECFM SPECIFIED FLAG                          */\n#define ddcfklen    0x10   /* KEYLEN SPECIFIED FLAG                         */\n#define ddcfkoff    0x08   /* KEYOFF SPECIFIED FLAG                         */\n#define ddcfexp     0x04   /* EXPIRATION ATTRIB SPEC'D FLAG                 */\n#define ddcfret     0x02   /* RETENTION ATTRIB SPEC'D FLAG                  */\n#define ddcfpsp     0x01   /* PRIMARY SPACE SPECIFIED FLAG                  */\n\n/* Values for field \"ddcspec2\" */\n#define ddcfssp     0x80   /* SECONDARY SPACE SPEC'D FLAG                   */\n#define ddcfdir     0x40   /* DIRECTORY BLOCKS SPEC'D FLAG                  */\n#define ddcfaun     0x20   /* ALLOCATION UNIT SPEC'D FLAG                   */\n#define ddcfavr     0x10   /* AVGREC SPECIFIED FLAG                         */\n#define ddcfvol     0x08   /* VOLUME CNT SPECIFIED FLAG                     */\n#define ddcfcis     0x04   /* DATA CI SIZE SPECIFIED FLAG                   */\n#define ddcfcif     0x02   /* FREE CI % SPECIFIED FLAG                      */\n#define ddcfcaf     0x01   /* FREE CA % SPECIFIED FLAG                      */\n\n/* Values for field \"ddcspec3\" */\n#define ddcfxreg    0x80   /* SHAREOPT XREGION SPEC'D FLAG                  */\n#define ddcfxsys    0x40   /* SHAREOPT XSYSTEM SPEC'D FLAG                  */\n#define ddcfimbd    0x20   /* VSAM IMBED SPECIFIED FLAG                     */\n#define ddcfrplc    0x10   /* VSAM REPLICATE SPECIFIED FLAG                 */\n#define ddcfcomp    0x08   /* COMPACTION SPECIFIED FLAG                     */\n#define ddcfmedi    0x04   /* MEDIA TYPE SPECIFIED FLAG                     */\n#define ddcfrect    0x02   /* RECORDING TECHNOLOGY FLAG                     */\n#define ddcfvea     0x01   /* VSAM extended addressing                      */\n\n/* Values for field \"ddcspec4\" */\n#define ddcsprlf    0x80   /* Space Constraint Relief                       */\n#define ddcredus    0x40   /* Reduce Space by% specified                    */\n#define ddcrabs     0x20   /* Rec Access Bias specified                     */\n\n/* Values for field \"ddcdsflg\" */\n#define ddcblk      0x80   /* 1 = BLOCKED, 0 = UNBLKED/NULL                 */\n#define ddcstsp     0x40   /* 1 = STANDARD OR SPANNED                       */\n\n/* Values for field \"dmcmigf\" */\n#define dmcl1nol    0x20   /* MIN DAYS ON LEVEL 1/LAST USE, 1=NOLIMIT ELSE  */\n\n/* Values for field \"dmcbkflg\" */\n#define dmcrbnol    0x80   /* 1=>RETAIN DAYS ONLY BACKUP VERS= NOLIMIT.     */\n#define dmcnpnol    0x40   /* 1=>RETAIN DAYS EXTRA BACKUP VERS = NOLIMIT.   */\n#define dmcautbk    0x10   /* 1=AUTO BACKUP ALLOWED                         */\n#define dmccpytf    0x08   /* COPY TECHNIQUE, 1=SEE DMCCPYTC                */\n\n/* Values for field \"dmcmretf\" */\n#define dmcrpnol    0x80   /* RETPD (RETAIN PD) 1=NOLIMIT ELSE SEE DMCMRTDY */\n\n/* Values for field \"dmctscr\" */\n#define dmctcyr     0x80   /* YEARS SPECIFIED.                              */\n#define dmctcmn     0x40   /* MONTHS SPECIFIED.                             */\n#define dmctcdy     0x20   /* DAYS SPECIFIED.                               */\n\n/* Values for field \"dmctslu\" */\n#define dmctsyr     0x80   /* YEARS SPECIFIED.                              */\n#define dmctsmn     0x40   /* MONTHS SPECIFIED.                             */\n#define dmctsdy     0x20   /* DAYS SPECIFIED.                               */\n\n/* Values for field \"dmcperd\" */\n#define dmcpemn     0x80   /* MONTHLY SPECIFIED.                            */\n#define dmcpeqd     0x40   /* QUARTERLY ON DAY SPEC.                        */\n#define dmcpeqm     0x20   /* QUARTERLY ON MONTH SPEC.                      */\n#define dmcpeyd     0x10   /* YEARLY ON DAY SPEC.                           */\n#define dmcpeym     0x08   /* YEARLY IN MONTH SPEC.                         */\n#define dmcfirst    0x04   /* FIRST DAY OF PERIOD SPEC.                     */\n#define dmclast     0x02   /* LAST DAY OF PERIOD SPEC.                      */\n\n/* Values for field \"dcdexflg\" */\n#define dcdbdsz     0x80   /* INVALID DATA SIZES                            */\n\n/* Values for field \"dcdadsie\" */\n#define dcdadsi_len 0x138\n\n/* Values for field \"dscdatae\" */\n#define dscdata_len 0x100\n\n/* Values for field \"ddcvindx\" */\n#define ddcimbed    0x80   /* 1 = IMBED, 0 = NO                             */\n#define ddcreplc    0x40   /* 1 = REPLICATE, 0 = NO                         */\n\n/* Values for field \"daidatae\" */\n#define dcvmangd    0x03   /* Volume is SMS managed                         */\n#define dcvinitl    0x01   /* In conversion to SMS                          */\n#define dcvnmngd    0x00   /* Non SMS managed volume                        */\n#define dcdrecff    0x80   /* Fixed length records                          */\n#define dcdrecfv    0x40   /* Variable length records                       */\n#define dcdrecfu    0xC0   /* Undefined length records                      */\n#define ddcrabus    0      /* USER                                          */\n#define ddcrabsy    1      /* SYSTEM                                        */\n#define ddcorgnl    0      /* RECORG IS NULL - SAM                          */\n#define ddcorgks    1      /* RECORG IS VSAM KSDS                           */\n#define ddcorges    2      /* RECORG IS VSAM ESDS                           */\n#define ddcorgrr    3      /* RECORG IS VSAM RRDS                           */\n#define ddcorgls    4      /* RECORG IS VSAM LDS                            */\n#define ddcfmnul    0      /* RECFM IS NULL                                 */\n#define ddcfmu      1      /* RECFM IS UNDEFINED                            */\n#define ddcfmv      2      /* RECFM IS VARIABLE                             */\n#define ddcfmvs     3      /* RECFM IS VARIABLE SPANNED                     */\n#define ddcfmvb     4      /* RECFM IS VARIABLE BLOCKED                     */\n#define ddcfmvbs    5      /* RECFM IS VAR BLK SPANNED                      */\n#define ddcfmf      6      /* RECFM IS FIXED                                */\n#define ddcfmfs     7      /* RECFM IS FIXED STANDARD                       */\n#define ddcfmfb     8      /* RECFM IS FIXED BLOCKED                        */\n#define ddcfmfbs    9      /* RECFM IS FIXED BLK SPANND                     */\n#define ddccntla    1      /* CARRIAGE CONTROL IS ANSI                      */\n#define ddccntlm    2      /* CARRIAGE CONTROL IS MACH                      */\n#define ddccntln    3      /* CARRIAGE CONTROL IS NULL                      */\n#define ddcbytes    1      /* AVGREC IS BYTES                               */\n#define ddckb       2      /* AVGREC IS KB                                  */\n#define ddcmb       3      /* AVGREC IS MB                                  */\n#define ddcdsnul    0      /* DSN TYPE IS NULL                              */\n#define ddcdspds    1      /* DSN TYPE IS PDS                               */\n#define ddcdslib    2      /* DSN TYPE IS LIBRARY                           */\n#define ddcdshfs    3      /* DSN TYPE IS HFS                               */\n#define ddcdsexr    4      /* DSN TYP - EXTENDED(R)                         */\n#define ddcdsexc    5      /* DSN TYP - EXTENDED(C)                         */\n#define ddccnul     0      /* NULL COMPACTION TYPE                          */\n#define ddcnocmp    1      /* NO COMPACTION                                 */\n#define ddcidrc     2      /* IMPROVED DATA RECORDING CAPABILITY,           */\n#define ddcmenul    0      /* MEDIA TYPE IS NULL                            */\n#define ddcmeda1    1      /* MEDIA1 - CART. SYSTEM                         */\n#define ddcmeda2    2      /* MEDIA2 - ENHANCED CAPACITY CARTRIDGE SYSTEM   */\n#define ddcmeda3    3      /* MEDIA3 - ENHANCED CAPACITY CARTRIDGE SYSTEM   */\n#define ddcmeda4    4      /* MEDIA4 - ENHANCED CAPACITY CARTRIDGE SYSTEM   */\n#define ddcrtnul    0      /* DDCRECTE IS NULL                              */\n#define ddc18trk    1      /* DDCRECTE IS 18 TRACK                          */\n#define ddc36trk    2      /* DDCRECTE IS 36 TRACK                          */\n#define ddc128tk    3      /* DDCRECTE IS 128 TRACK                         */\n#define ddc256tk    4      /* DDCRECTE IS 256 TRACK                         */\n#define ddc384tk    5      /* DDCRECTE IS 384 TRACK                  @LHB   */\n#define ddcbwoci    1      /* BWO type CICS                                 */\n#define ddcbwono    2      /* BWO type none                                 */\n#define ddcbwoim    3      /* BWO type IMS                                  */\n#define ddclogno    1      /* non Recoverable sphere                        */\n#define ddclogun    2      /* UNDO - use external log                       */\n#define ddclogal    3      /* ALL - (UNDO) & forward                        */\n#define ddcspann    0      /* Record can not span CI                        */\n#define ddcspany    1      /* Record may span CI                            */\n#define dscbiadc    0      /* BIAS = DON'T CARE                             */\n#define dscbiard    1      /* BIAS = READ                                   */\n#define dscbiawr    2      /* BIAS = WRITE                                  */\n#define dscavldc    0      /* AVAILABILITY = DON'T CARE (NO PREF)      @01C */\n#define dscavlst    1      /* AVAILABILITY = STANDARD                       */\n#define dscavlcn    2      /* AVAILABILITY = CONTINUOUS                     */\n#define dscavlpr    3      /* AVAILABILITY = PREFERRED                 @01A */\n#define dscaccpr    0      /* ACCESSIBILITY = CONTINUOUS PREFERRED          */\n#define dscaccrq    1      /* ACCESSIBILITY = CONTINUOUS                    */\n#define dscaccst    2      /* ACCESSIBILITY = STANDARD                      */\n#define dscaccnp    3      /* ACCESSIBILITY = NOPREF                        */\n#define dmcnull     0      /* FIELD WAS NOT USED                            */\n#define dmcfdate    1      /* EXPIRE FORM: DATE/CREATE                      */\n#define dmcfdays    2      /* EXPIRE FORM: DAYS/CREATE                      */\n#define dmcmnone    0      /* NO MIGRATION ALLOWED                          */\n#define dmcmcmd     1      /* MIGR ON COMMAND ONLY                          */\n#define dmcmboth    2      /* AUTO MIGRAT OR ON CMD                         */\n#define dmcbnone    0      /* NO USR OR ADMN BACKUP                         */\n#define dmcbadm     1      /* ALLOW ADMIN CMD BACKUP                        */\n#define dmcbboth    2      /* ALLOW ADMN OR USR CMD                         */\n#define dmceanul    0      /* EXPIRE ACTION IS NULL                         */\n#define dmceadel    1      /* EXPIRE ACTION IS DEL                          */\n#define dmceaarc    2      /* EXPIRE ACTION IS ARC                          */\n#define dmcrlfye    0x80   /* PARTIAL RELEASE = YES, IMMEDIATE REL = NO     */\n#define dmcrlfcn    0x40   /* CONDITION PARTREL = YES, IMMEDIATE REL = NO   */\n#define dmcrlfno    0x00   /* PARTIAL RELEASE = NO, IMMEDIATE REL = NO      */\n#define dmcrlfyi    0xA0   /* PARTIAL RELEASE = YES, IMMEDIATE REL = YES    */\n#define dmcrlfci    0x60   /* CONDITION PARTREL = YES, IMMED CON REL =      */\n#define dmccpyst    0      /* STANDARD                                      */\n#define dmccpypr    1      /* CONCURRENT PREFERRED                          */\n#define dmccpyrq    2      /* CONCURRENT REQUIRED                           */\n#define dbcvalid    1      /* DATA SET IS VALID                             */\n#define dbcinval    2      /* DATA SET IS INVALID                           */\n#define dbcunkwn    3      /* DATA SET STAT IS UNK.                         */\n#define dbcsysns    0      /* NAME TYPE NOT SPECIFIED                       */\n#define dbcsystm    1      /* NAME TYPE IS SYSTEM NAME                      */\n#define dbcsyspl    2      /* NAME TYPE IS SYSTEM GROUP NAME                */\n#define dbcasms     0x8000 /* ACTIVE SMS                                    */\n#define dbcpdse     0x4000 /* PDSE FEATURE                                  */\n#define dbccdmp     0x2000 /* SAM COMPRESSION                               */\n#define dbcsesc     0x1000 /* SES CACHE FEATURE                             */\n#define dsgpool     0      /* STG GRP TYPE IS POOL                          */\n#define dsgvio      1      /* STG GRP TYPE IS VIO                           */\n#define dsgdummy    2      /* STG GRP TYPE IS DUMMY                         */\n#define dsgobj      3      /* SG TYPE IS OBJECT                             */\n#define dsgobjbk    4      /* SG TYPE IS OBJ BACKUP                         */\n#define dsgtape     5      /* SG TYPE IS TAPE                               */\n#define dsg0        0      /* NO STATUS SPECIFIED                           */\n#define dsgenbl     1      /* STOR GRP IS ENABLED                           */\n#define dsgqui      2      /* STOR GRP QUIESCED/ALL                         */\n#define dsgquin     3      /* STOR GRP QUIESCED/NEW                         */\n#define dsgdis      4      /* STOR GRP DISABLED/ALL                         */\n#define dsgdisn     5      /* STOR GRP DISABLED/NEW                         */\n#define dvl0        0      /* NO STATUS GIVEN                               */\n#define dvlenbl     1      /* SMS STATUS IS ENABLED                         */\n#define dvlqui      2      /* SMS STAT QUIESCED/ALL                         */\n#define dvlquin     3      /* SMS STAT QUIESCED/NEW                         */\n#define dvldis      4      /* SMS STAT DISABLED/ALL                         */\n#define dvldisn     5      /* SMS STAT DISABLED/NEW                         */\n#define dvlonln     1      /* MVS STATUS IS ONLINE                          */\n#define dvloffln    2      /* MVS STATUS IS OFFLINE                         */\n#define dvlpoff     3      /* MVS STATUS IS PENDING OFFLINE                 */\n#define dvlboxed    4      /* MVS STATUS IS BOXED                           */\n#define dvlnrdy     5      /* MVS STATUS IS NOT READY                       */\n#define ddrnocon    0      /* OAM STATUS IS NO CONNECTIVITY                 */\n#define ddronln     1      /* OAM STATUS IS ONLINE                          */\n#define ddroffln    2      /* OAM STATUS IS OFFLINE                         */\n#define ddrnorst    3      /* NO OUTSTANDING REQUEST                        */\n#define dlbnocon    0      /* OAM STATUS IS NO CONNECT                      */\n#define dlbonln     1      /* OAM STATUS IS ONLINE                          */\n#define dlboffln    2      /* OAM STATUS IS OFFLINE                         */\n#define dlbnorst    3      /* NO OUTSTANDING REQUEST                        */\n#define dlblpeno    4      /* LIBRARY PENDING OFLIN                         */\n#define dlbnoopt    0      /* NOT OPTICAL LIBRARY                           */\n#define dlbreal     1      /* REAL LIBRARY                                  */\n#define dlbpseud    2      /* PSEUDO LIBRARY                                */\n#define dlbd9246    0      /* IBM 9246 LIBRARY                              */\n#define dlbd3995    1      /* IBM 3995 LIBRARY                              */\n#define dlbdtape    2      /* TAPE LIBRARY                                  */\n#define dlbprvt     1      /* PRIVATE VOLUME                                */\n#define dlbscrt     2      /* SCRATCH VOLUME                                */\n#define dlbpurge    1      /* PURGE TCDB VOL RECORD                         */\n#define dlbkeep     2      /* KEEP TCDB VOL RECORD                          */\n#define dcudatat    0xC440 /* DATA TYPE RECORD                              */\n#define dcuassoc    0xC140 /* VSAM ASSOCIATION RECORD                       */\n#define dcuvulut    0xE540 /* VOLUME TYPE RECORD                            */\n#define dcudcdef    0xC4C3 /* DATA CLASS                                    */\n#define dcuscdef    0xE2C3 /* STORAGE CLASS                                 */\n#define dcumcdef    0xD4C3 /* MANAGMENT CLASS                               */\n#define dcubcdef    0xC2C3 /* BASE CONFIG.                                  */\n#define dcusgdef    0xE2C7 /* STORAGE GROUP                                 */\n#define dcuvldef    0xE5D3 /* SMS VOLUME DEF                                */\n#define dcuagdef    0xC1C7 /* AGGREGATE GROUP                               */\n#define dcudrdef    0xC4D9 /* OPTICAL DRIVE                                 */\n#define dculbdef    0xD3C2 /* OPTICAL LIBRARY                               */\n#define dcucndef    0xC3D5 /* CACHE NAMES                                   */\n#define dcuaidef    0xC1C9 /* ACS INFORMARTION                              */\n#define daidata_len 0x148\n\n/* Values for field \"dmcdatae\" */\n#define dmcdata_len 0x11C\n\n/* Values for field \"dsgoamfl\" */\n#define dsgfcys     0x80   /* OAM CYCLE START/END GIVEN                     */\n#define dsgfvlft    0x40   /* VOLUME FULL THRESHOLD BIT                     */\n#define dsgfdrst    0x20   /* DRIVE START THRESHOLD BIT                     */\n#define dsgvffer    0x10   /* VOLUME FULL@WRITE ERR GIVEN                   */\n#define dsgvferr    0x08   /* VOLUME FULL@WRITE ERROR BIT                   */\n\n/* Values for field \"ddcspeca\" */\n#define ddcbwos     0x80   /* BWO SPECIFIED                                 */\n#define ddclogrs    0x40   /* SPHERE RECOVERABILITY SPEC'D                  */\n#define ddcspans    0x20   /* CI SPAN SPECIFIED                             */\n#define ddclsids    0x10   /* LOGSTREAMID SPECIFIED                         */\n\n/* Values for field \"ddcdatae\" */\n#define ddcdata_len 0x128\n\n/* Values for field \"ddrdatae\" */\n#define ddrdata_len 0x190\n\n/* Values for field \"dvldatae\" */\n#define dvldata_len 0x1A0\n\n/* Values for field \"dlbdatae\" */\n#define dlbdata_len 0x1A8\n\n/* Values for field \"dagdatae\" */\n#define dagdata_len 0x268\n\n/* Values for field \"dsgdatae\" */\n#define dsgdata_len 0x338\n\n/* Values for field \"dbcdatae\" */\n#define dbcdata_len 0x388\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "DEFID": {"ttr": 8397, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n#ifndef  INCLUDE_DEFID\n#define  INCLUDE_DEFID\n\n#ifndef __TEST__\n#define __TEST__  0\n#endif\n\n#ifndef TRACE_YES\n#define TRACE_YES\n#endif\n\n/*\n\n\nIQVC         main module                                5000\nIQVM         manager module                             5100\nIQVR         request tester                             5200\nIQVS         reply tran                                 5300\nIQVU         update status                              5400\nIQVD         docq mgr                                   5500\n    TAGCTLG tag catalog     4000\nMSGMGR       message           MSGMGR                  1000\n    MSGTEXT message text    1100\nMISC       misc  MISC                    1200\nRQMGR        request            RQMGR                   3000\nPROFMGR      profiles           PROFMGR                 3100\nDOCQMGR      docq manager                               3200\nCICBASE      cics               CICBASE                 2000\nCTLFILE      control file       CTLFILE                 3200\nTPDEF        tp formats         TPDEF                   3300\nRESMGR       resource           RESMGR                  3400  inline, onlin HPP\nDIF          display fileds     DIF                     2200\nCICS         cics functions     CICS                    2100\nFILEVSM      VSAM class         FILEVSM                 2300\nPANEL        panel display      PANEL                   2400\nEVAL         eavluate a field   EVAL                    2500\nFILESYS      file system        FILESYS                 2600\nBUFFSYS      buffer system      BUFFSYS                 2700\nTSO          tso                TSO                     2800\nGLOBAL       global functions   GLOBAL                  1300\nMVSBASE      base MVS           MVSBASE                 1400\nMCHAIN       mvs chain          MCHAIN                  1500\nSLL          SLL and SLLTag     SLL                     1600\nFIELD        panel field        FIELD                   1700\nSYSBASE                                                 1800\nTSOBASE                                                 1900\nTAGS         tag def            TAGS TAGCTLG            4000\nSSCREEN      show afp on screen                         6500\nAFPLISS      yacc lex           afpliss,tafpliss        6600\nDAFP         display AFP        DAFP                    6700\nTPCLASS      tp class                                   7000\nREMFILE      remote file                                8000\nFCLIENT      file client                          8100\nGENIO        gen io                                     8200\nWCGI         CGI interface                              9000\nWQVAR        query var process                          9100\nWQFSS        qfss interface                             9200\nQFSSWWC      called C module                            9300\n*/\n\n#ifndef __Version__\n#define __Version__       \" 1.0.0  \"\n#endif\n\n//#define IQVD_ID              5500\n//#define IQVU_ID              5400\n//#define IQVS_ID              5300\n//#define IQVR_ID              5200\n//#define IQVM_ID              5100\n//#define IQVC_ID              5000\n#define MSGMGR_ID            1000\n#define MISC_ID              1200\n//#define RQMGR_ID             3000\n//#define PROFMGR_ID           3100\n//#define DOCQMGR_ID           3200\n//#define CICBASE_ID           2000\n//#define TPDEF_ID             3300\n//#define RESMGR_ID            3400\n//#define DIF_ID               2200\n//#define CICS_ID              2100\n//#define FILEVSM_ID           2300\n//#define PANEL_ID             2400\n//#define EVAL_ID              2500\n//#define FILESYS_ID           2600\n#define MXFSYS_ID           2700\n//#define TSO_ID               2800\n#define MXSTDIO_ID   2900\n//#define GLOBAL_ID            1300\n#define MVSBASE_ID           1400\n#define MCHAIN_ID            1500\n//#define FIELD_ID             1700\n#define MXBASE_ID           1800\n//#define TSOBASE_ID           1900\n#define TAGS_ID              3900\n//#define CTLFILE_ID           4000\n//#define USER_ID              4100\n//#define SSCREEN_ID           6500\n//#define AFPLISS_ID           6600\n//#define DAFP_ID              6700\n#define TPCLASS_ID           7000\n#define MXRFILE_ID          8000\n#define FCLIENT_ID           8100\n#define MXGENIO_ID           8200\n#define FSERVER_ID     8400\n\n#define WCGI_ID    9000\n#define WQVAR_ID   9100\n#define WQFSS_ID   9200\n#define QFSSWWC_ID 9300\n#define WCGIDB2_ID 9000\n#define WURI_ID    9120\n#define WSUPL_ID   9140\n\n#ifndef  MaxTDEntry\n  #define  MaxTDEntry          4096\n#endif\n#define  MaxBufferSize      32767\n#define  MaxKeyLength         256\n#define  MaxBlockSize       MaxBufferSize-MaxKeyLength\n#define  MaxRecordSize      MaxBlockSize-4\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DEFJESI": {"ttr": 8689, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/**\n*\n* This header file defines the information used by the JES interface\n*\n**/\n#ifndef DLLDEF_HPP_ENUM\n#ifndef DLLDEF_CPP_CALLED\n#endif\n#endif\n\n#include \"jesi.hpp\"\n#include \"dlldef.hpp\"\n\nt0(JES  *,initJESI)\nt4(int   ,allocJESI,JES  *,const char *,char *,char *)\nt3(int   ,freeJESI, JES  *,const char *,char *)\n\n#undef t0\n#undef t1\n#undef t2\n#undef t3\n#undef t4\n#undef t5\n#undef v0\n#undef v1\n#undef v2\n#undef v3\n#undef v4\n#undef v5\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DEFSTDIO": {"ttr": 8283, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/**\n*\n* This header file defines the information used by the standard I/O\n* package.\n*\n**/\n#ifndef DLLDEF_HPP_ENUM\n#ifndef DLLDEF_CPP_CALLED\n#include \"filesys.hpp\"\n#include  \"stdio.hpp\"\n#include  \"os.hpp\"\n#endif\n#endif\n\n#if ISIS_PF_HOST_IBM\n#include <stdarg.h>\n#endif\n\n#include \"dlldef.hpp\"\n\n#if ISIS_PF_HOST_IBM\n#if defined(DLLDEF_CPP_CALLER) == 1 ]] defined(DLLDEF_HPP_PROTO) == 1\nextern \"C\" \u00e4\n#endif\n#endif\n\nv1(clearerr,FILE *)\n//extern void clearerr(FILE *);\nt2(FILE *,fopen,const char *,const char *)\n//extern FILE * fopen(const char *,const char *);\nt3(FILE *,freopen,const char *,const char *,FILE *)\n//extern FILE *freopen(const char *, const char *, FILE *);\nt1(int,fclose,FILE *)\n//extern int fclose(FILE *);\nt1(int,fflush,FILE*)\n//extern int fflush(FILE *);\nt1(int,fgetc,FILE *)\n//extern int fgetc(FILE *);\nt2(int,fputc,int,FILE *)\n//extern int fputc(int, FILE *);\nt4(size_t,fread,void *,size_t,size_t,FILE *)\n//extern size_t fread(void *, size_t, size_t, FILE *);\nt4(size_t,fwrite,const void *,size_t,size_t,FILE *)\n//extern size_t fwrite(const void *, size_t, size_t, FILE *);\nt3(char *,fgets,char *,int,FILE *)\n//extern char *fgets(char *, int, FILE *);\nt2(int,fputs,const char *,FILE *)\n//extern int fputs(const char *, FILE *);\nt1(long,ftell,FILE *)\n//extern long ftell(FILE *);\nt3(int,fseek,FILE *,long,int)\n//extern int fseek(FILE *, long, int);\nt2(int,fgetpos,FILE *,fpos_t *)\n//extern int fgetpos(FILE *, fpos_t *);\nt2(int,fsetpos,FILE *,const fpos_t *)\n//extern int fsetpos(FILE *, const fpos_t *);\nt1(int,getc,FILE *)\n//extern int getc(FILE *);\nt0(int,getchar)\n//extern int getchar(void);\nt1(char *,gets,char *)\n//extern char *gets(char *);\nt2(int,putc,int,FILE *)\n//extern int putc(int, FILE *);\nt1(int,putchar,int)\n//extern int putchar(int);\nt1(int,puts,const char *)\n//extern int puts(const char *);\nt2(int,ungetc,int,FILE *)\n//extern int ungetc(int, FILE *);\n// ???? //extern int printf(const char *, ...);\n// ???? //extern int fprintf(FILE *, const char *, ...);\n// ???? //extern int sprintf(char *, const char *, ...);\n//t2(int,vprintf,char *,unsigned *)\nt2(int,vprintf,char *,va_list)\n//extern int vprintf(const char *, unsigned *);\n//t3(int,vfprintf,FILE *,const char *,unsigned *)\nt3(int,vfprintf,FILE *,const char *,va_list)\n//extern int vfprintf(FILE *, const char *, unsigned *);\n//t3(int,vsprintf,char *,const char *,unsigned *)\nt3(int,vsprintf,char *,const char *,va_list)\n//extern int vsprintf(char *, const char *, unsigned *);\n// ???? //extern int scanf(const char *, ...);\n// ???? //extern int fscanf(FILE*, const char *, ...);\n// ???? //extern int sscanf(const char *, const char *, ...);\nt0(FILE *,tmpfile)\n//extern FILE *tmpfile(void);\nt1(char *, tmpnam, char *)\n//extern char *tmpnam(char *);\nv1(perror,const char *)\n//extern void perror(const char *);\nt1(int,remove,const char *)\n//extern int remove(const char *);\nt2(int,rename,const char *,const char *)\n//extern int rename(const char *, const char *);\nv2(setbuf,FILE *,char *)\n//extern void setbuf(FILE *, char *);\nv4(setvbuf,FILE *,char *,int,size_t)\n//extern void setvbuf(FILE *, char *, int, size_t);\nt1(int,ferror,FILE *)\n//extern int ferror(FILE *);\nt1(int,feof,FILE *)\n//extern int feof(FILE *);\nv1(rewind,FILE *)\n//extern void rewind(FILE *);\n\n /*------------------------------------------------------*/\n /*                                                      */\n /* from the lcio                                        */\n /*                                                      */\n /*                                                      */\n /*                                                      */\n /*                                                      */\n /*------------------------------------------------------*/\nt1(int,fileno,FILE *)\n//extern int fileno(FILE*);\nt1(char *,ctermid,char *)\n//extern char * ctermid(char *);\n\n#if ISIS_PF_HOST_SASC\nt1(int,isatty,int)\n//extern int isatty(int );\nt1(int,ffixed,FILE *)\n//extern int ffixed(FILE *);\nt1(int,fterm,FILE *)\n//extern int fterm(FILE *);\nt1(char *,fnm,FILE *)\n//extern  char * fnm(FILE *);\nt1(fattrib *,fattr,FILE *)\n//extern fattrib * fattr(FILE *);\nt2(int,afflush,FILE *,int)\n//extern int afflush(FILE *, int);\nt4(FILE *,afopen,const char *, const char *, const char *,\n     const char *)\n//extern FILE *afopen(const char *, const char *, const char *,\n//     const char *);\nt5(FILE *,afreopen,const char *, const char *, FILE *,\n       const char *, const char *)\n//extern FILE *afreopen(const char *, const char *, FILE *,\n//       const char *, const char *);\nt4(size_t,afread,void *,size_t,size_t,FILE *)\n//extern size_t afread(void *, size_t, size_t, FILE *);\nt4(size_t,afreadh,void *,size_t,size_t,FILE *)\n//extern size_t afreadh(void *, size_t, size_t, FILE *);\nt4(size_t,afwrite,const void *,size_t,size_t,FILE *)\n//extern size_t afwrite(const void *, size_t, size_t, FILE *);\nt4(size_t,afwriteh,const void *,size_t,size_t,FILE *)\n//extern size_t afwriteh(const void *, size_t, size_t, FILE *);\nt1(int,clrerr,FILE *)\n//extern int clrerr(FILE *);\nt1(char *,cuserid,char *)\n//extern char *cuserid(char *);\n#endif\n\nt2(int,osdfind,struct DSNINFO *,const char *)\n//extern int osdfind(struct DSNINFO *, const char *);\nt1(int,osdnext,struct DSNINFO *)\n//extern int osdnext(struct DSNINFO *);\nv1(osdquit,struct DSNINFO *)\n//extern void osdquit(struct DSNINFO *);\nt2(int,access,const char *,int)\n//extern in access(const char *,int);\nt3(long,lseek,int,long,int)\n//long lseek(int,long,int)\nt2(int,open,const char *,int)\n//int open(const char *,int)\nt1(int,close,int)\n//int close(int)\nt3(int,read,int,char *,unsigned)\n//int read(int,char *,unsigned)\nt3(int,write,int,const char *,unsigned)\n//int write(int,const char *,unsigned)\n\n#if ISIS_PF_HOST_IBM\n#if defined(DLLDEF_CPP_CALLER) == 1 ]] defined(DLLDEF_HPP_PROTO) == 1\n\u00fc;\n#endif\n#endif\n\n\n#undef t0\n#undef t1\n#undef t2\n#undef t3\n#undef t4\n#undef t5\n#undef v0\n#undef v1\n#undef v2\n#undef v3\n#undef v4\n#undef v5\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DLENF": {"ttr": 8637, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dlenf \u00e4\n  unsigned char  dlenfid\u00c44\u00dc;          /* Eyecatcher 'DLEN'                            */\n  unsigned char  dlenfcomponent\u00c45\u00dc;   /* Component acronym 'SC1CJ'                    */\n  unsigned char  _filler1\u00c43\u00dc;         /* Unused                                       */\n  int            dlenflnklstseq_;     /* Seq# of the LNKLST set. Note that the number */\n  unsigned char  dlenflnklstname\u00c416\u00dc; /* Name of the LNKLST set that was just         */\n  unsigned char  dlenftimestamp\u00c48\u00dc;   /* Time value (from STCK) of the activation     */\n  int            dlenfconsid;         /* Console ID of the issuer of the activation   */\n  unsigned char  dlenfutoken\u00c480\u00dc;     /* Security product user token of issuer of the */\n  unsigned char  _filler2\u00c44\u00dc;         /* Unused                                       */\n  \u00fc;\n\n/* Values for field \"_filler2\" */\n#define dlenfidchars 0xC4D3C5D5 /* Eyecatcher */\n#define dlenf_len    0x80\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "DLLDEF": {"ttr": 7947, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n#ifdef    DLLDEF_HPP_ENUM\n\n#define t0(ret , fn ) \u00d6\n\t  _X__X_##fn ,\n#define t1(ret , fn , pt1 )    \u00d6\n\t _X__X_##fn ,\n#define t2(ret , fn , pt1,  pt2  )    \u00d6\n\t _X__X_##fn ,\n#define t3(ret , fn , pt1 , pt2 , pt3   )    \u00d6\n\t _X__X_##fn ,\n#define t4(ret , fn , pt1 , pt2 , pt3 , pt4  )    \u00d6\n\t _X__X_##fn ,\n#define t5(ret , fn , pt1 , pt2 , pt3 , pt4 , pt5 )    \u00d6\n\t _X__X_##fn ,\n#define v0( fn ) \u00d6\n\t _X__X_##fn ,\n#define v1(fn , pv1 )    \u00d6\n\t_X__X_##fn ,\n#define v2( fn , pv1 , pv2)    \u00d6\n\t _X__X_##fn ,\n#define v3( fn , pv1, pv2 , pv3)    \u00d6\n\t _X__X_##fn ,\n#define v4( fn , pv1 , pv2 , pv3 , pv4)    \u00d6\n\t_X__X_##fn ,\n#define v5(fn , pv1, pv2, pv3, pv4 , pv5 )    \u00d6\n\t_X__X_##fn ,\n\n#elif defined( DLLDEF_HPP_PROTO )\n\n#define t0(ret , fn )  \u00d6\nret _X_##fn(void);\n#define t1(ret , fn , pt1 )    \u00d6\nret _X_##fn( pt1);\n#define t2(ret , fn , pt1 , pt2 )    \u00d6\nret _X_##fn( pt1 , pt2 );\n#define t3(ret , fn , pt1 , pt2 , pt3   )    \u00d6\nret _X_##fn( pt1 , pt2 , pt3 );\n#define t4(ret , fn , pt1, pt2 , pt3 , pt4 )    \u00d6\nret _X_##fn(pt1 , pt2 , pt3 , pt4 );\n#define t5(ret , fn , pt1 , pt2 , pt3 , pt4 , pt5 )    \u00d6\nret _X_##fn(pt1 , pt2 , pt3 , pt4 , pt5 );\n#define v0( fn ) \u00d6\nvoid fn ( void );\n#define v1( fn , pv1 )    \u00d6\nvoid _X_##fn( pv1);\n#define v2( fn , pv1 , pv2 )    \u00d6\nvoid _X_##fn( pv1 , pv2 );\n#define v3( fn , pv1 , pv2 , pv3 )    \u00d6\nvoid _X_##fn( pv1 , pv2 , pv3 );\n#define v4(fn , pv1 , pv2 , pv3 , pv4 )    \u00d6\nvoid _X_##fn(pv1 , pv2 , pv3 , pv4 );\n#define v5( fn , pv1, pv2, pv3, pv4, pv5)    \u00d6\nvoid _X_##fn(pv1 , pv2 , pv3 , pv4 , pv5 );\n\n#elif defined( DLLDEF_CPP_CALLER )\n#if ISIS_PF_HOST_SASC\n#define t0(ret , fn  )    \u00d6\ntypedef  ret( * typedef##fn )( void ); \u00d6\nret _X_##fn(void )                  \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(_X__X_##fn)))() ; \u00d6\n\u00fc\n\n#define t1(ret , fn , pt1 )    \u00d6\ntypedef  ret ( * typedef##fn)( pt1 ); \u00d6\nret _X_##fn(pt1 pn1 )                  \u00d6\n\u00e4                                  \u00d6\n return((typedef##fn)(dll->call(_X__X_##fn)))(pn1 ) ; \u00d6\n\u00fc\n\n#define t2(ret , fn , pt1 , pt2 )    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2 )                  \u00d6\n\u00e4                                             \u00d6\n return((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2 ) ; \u00d6\n\u00fc\n\n#define t3(ret , fn , pt1 , pt2 , pt3 )    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2 , pt3 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2, pt3 pn3 )                  \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2, pn3 ) ; \u00d6\n\u00fc\n\n#define t4(ret , fn , pt1 , pt2 , pt3 , pt4)    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2, pt3 , pt4 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2 , pt3 pn3 , pt4 pn4 )                  \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2, pn3 , pn4 ) ; \u00d6\n\u00fc\n\n#define t5(ret , fn , pt1 , pt2 , pt3 ,  pt4 ,   \u00d6\n pt5 )    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2, pt3 , pt4, pt5 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2 , pt3 pn3 , pt4 pn4, pt5 pn5 )                 \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2, pn3 , pn4, pn5 ) ; \u00d6\n\u00fc\n\n#define v0(fn  )    \u00d6\ntypedef  void ( * typedef##fn )(void ); \u00d6\nvoid _X_##fn(void )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(_X__X_##fn)))() ; \u00d6\n\u00fc\n\n#define v1(fn , pv1 )    \u00d6\ntypedef  void ( * typedef##fn )( pv1 ); \u00d6\nvoid _X_##fn(pv1 pn1 )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(_X__X_##fn)))(pn1 ) ; \u00d6\n\u00fc\n\n#define v2( fn , pv1 , pv2 )    \u00d6\ntypedef  void ( * typedef##fn )( pv1, pv2 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2)                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2 ) ; \u00d6\n\u00fc\n\n#define v3( fn , pv1 , pv2, pv3)    \u00d6\ntypedef  void( * typedef##fn )( pv1, pv2 , pv3 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2, pv3 pn3 )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2, pn3 ) ; \u00d6\n\u00fc\n\n#define v4( fn , pv1, pv2 , pv3 , pv4  )    \u00d6\ntypedef  void( * typedef##fn )( pv1, pv2, pv3 , pv4 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2 , pv3 pn3 , pv4 pn4 )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2, pn3 , pn4 ) ; \u00d6\n\u00fc\n\n#define v5( fn , pv1 , pv2 , pv3 , pv4 , pv5)   \u00d6\ntypedef  void( * typedef##fn )( pv1, pv2, pv3 , pv4, pv5 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2 , pv3 pn3 , pv4 pn4, pv5 pn5 )    \u00d6\n\u00e4                                                             \u00d6\n ((typedef##fn)(dll->call(_X__X_##fn)))(pn1, pn2, pn3 , pn4, pn5 ) ;  \u00d6\n\u00fc\n#else\n\n#define t0(ret , fn  )    \u00d6\ntypedef  ret( * typedef##fn )( void ); \u00d6\nret _X_##fn(void )                  \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(STR(_##fn))))() ; \u00d6\n\u00fc\n\n#define t1(ret , fn , pt1 )    \u00d6\ntypedef  ret ( * typedef##fn)( pt1 ); \u00d6\nret _X_##fn(pt1 pn1 )                  \u00d6\n\u00e4                                  \u00d6\n return((typedef##fn)(dll->call(STR(_##fn))))(pn1 ) ; \u00d6\n\u00fc\n\n#define t2(ret , fn , pt1 , pt2 )    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2 )                  \u00d6\n\u00e4                                             \u00d6\n return((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2 ) ; \u00d6\n\u00fc\n\n#define t3(ret , fn , pt1 , pt2 , pt3 )    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2 , pt3 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2, pt3 pn3 )                  \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2, pn3 ) ; \u00d6\n\u00fc\n\n#define t4(ret , fn , pt1 , pt2 , pt3 , pt4)    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2, pt3 , pt4 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2 , pt3 pn3 , pt4 pn4 )                  \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2, pn3 , pn4 ) ; \u00d6\n\u00fc\n\n#define t5(ret , fn , pt1 , pt2 , pt3 ,  pt4 ,   \u00d6\n pt5 )    \u00d6\ntypedef  ret ( * typedef##fn )( pt1, pt2, pt3 , pt4, pt5 ); \u00d6\nret _X_##fn(pt1 pn1 , pt2 pn2 , pt3 pn3 , pt4 pn4, pt5 pn5 )                 \u00d6\n\u00e4                                   \u00d6\n return((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2, pn3 , pn4, pn5 ) ; \u00d6\n\u00fc\n\n#define v0(fn  )    \u00d6\ntypedef  void ( * typedef##fn )(void ); \u00d6\nvoid _X_##fn(void )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(STR(_##fn))))() ; \u00d6\n\u00fc\n\n#define v1(fn , pv1 )    \u00d6\ntypedef  void ( * typedef##fn )( pv1 ); \u00d6\nvoid _X_##fn(pv1 pn1 )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(STR(_##fn))))(pn1 ) ; \u00d6\n\u00fc\n\n#define v2( fn , pv1 , pv2 )    \u00d6\ntypedef  void ( * typedef##fn )( pv1, pv2 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2)                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2 ) ; \u00d6\n\u00fc\n\n#define v3( fn , pv1 , pv2, pv3)    \u00d6\ntypedef  void( * typedef##fn )( pv1, pv2 , pv3 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2, pv3 pn3 )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2, pn3 ) ; \u00d6\n\u00fc\n\n#define v4( fn , pv1, pv2 , pv3 , pv4  )    \u00d6\ntypedef  void( * typedef##fn )( pv1, pv2, pv3 , pv4 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2 , pv3 pn3 , pv4 pn4 )                  \u00d6\n\u00e4                                   \u00d6\n ((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2, pn3 , pn4 ) ; \u00d6\n\u00fc\n\n#define v5( fn , pv1 , pv2 , pv3 , pv4 , pv5)   \u00d6\ntypedef  void( * typedef##fn )( pv1, pv2, pv3 , pv4, pv5 ); \u00d6\nvoid _X_##fn(pv1 pn1 , pv2 pn2 , pv3 pn3 , pv4 pn4, pv5 pn5 )    \u00d6\n\u00e4                                                             \u00d6\n ((typedef##fn)(dll->call(STR(_##fn))))(pn1, pn2, pn3 , pn4, pn5 ) ;  \u00d6\n\u00fc\n#endif\n#elif defined( DLLDEF_CPP_CALLED  )\n#ifdef ISIS_PF_HOST_SASC\n#define t0(ret , fn ) \u00d6\n\tDLL_FUNC( fn )\n#define t1(ret , fn , pt1 )    \u00d6\n\tDLL_FUNC( fn )\n#define t2(ret , fn , pt1, pt2  )    \u00d6\n\tDLL_FUNC(fn )\n#define t3(ret , fn , pt1, pt2 , pt3 )    \u00d6\n\tDLL_FUNC(fn )\n#define t4(ret , fn , pt1 , pt2 , pt3, pt4 )    \u00d6\n\tDLL_FUNC(fn )\n#define t5(ret , fn , pt1 , pt2 , pt3 , pt4 , pt5  )    \u00d6\n\tDLL_FUNC(fn )\n#define v0( fn ) \u00d6\n\tDLL_FUNC( fn )\n#define v1( fn , pv1 )    \u00d6\n\tDLL_FUNC( fn )\n#define v2( fn , pv1 , pv2 )    \u00d6\n\tDLL_FUNC(fn )\n#define v3( fn , pv1, pv2, pv3)    \u00d6\n\tDLL_FUNC(fn )\n#define v4( fn , pv1, pv2, pv3, pv4)    \u00d6\n\tDLL_FUNC(fn )\n#define v5(fn , pv1, pv2, pv3, pv4 ,pv5)    \u00d6\n\tDLL_FUNC(fn )\n#else\n#define t0(ret , fn ) \u00d6\nextern \"C\" ret _Export _##fn()\u00e4 return(fn());\u00fc\n#define t1(ret , fn , pt1 ) \u00d6\nextern \"C\" ret _Export _##fn(pt1 p1)\u00e4 return(fn(p1));\u00fc\n#define t2(ret , fn , pt1, pt2 ) \u00d6\nextern \"C\" ret _Export _##fn(pt1 p1,pt2 p2)\u00e4 return(fn(p1,p2));\u00fc\n#define t3(ret , fn , pt1, pt2 , pt3 ) \u00d6\nextern \"C\" ret _Export _##fn(pt1 p1,pt2 p2,pt3 p3)\u00e4 return(fn(p1,p2,p3));\u00fc\n#define t4(ret , fn , pt1 , pt2 , pt3, pt4 ) \u00d6\nextern \"C\" ret _Export _##fn(pt1 p1,pt2 p2,pt3 p3,pt4 p4)\u00e4 return(fn(p1,p2,p3,p4));\u00fc\n#define t5(ret , fn , pt1 , pt2 , pt3 , pt4 , pt5 ) \u00d6\nextern \"C\" ret _Export _##fn(pt1 p1,pt2 p2,pt3 p3,pt4 p4,pt5 p5)\u00e4return(fn(p1,p2,p3,p4,p5));\u00fc\n#define v0( fn ) \u00d6\nextern \"C\" void _Export _##fn()\u00e4 (fn());\u00fc\n#define v1( fn , pv1 )    \u00d6\nextern \"C\" void _Export _##fn(pv1 p1)\u00e4 (fn(p1));\u00fc\n#define v2( fn , pv1 , pv2 )    \u00d6\nextern \"C\" void _Export _##fn(pv1 p1,pv2 p2)\u00e4 (fn(p1,p2));\u00fc\n#define v3( fn , pv1, pv2, pv3)    \u00d6\nextern \"C\" void _Export _##fn(pv1 p1,pv2 p2,pv3 p3)\u00e4 (fn(p1,p2,p3));\u00fc\n#define v4( fn , pv1, pv2, pv3, pv4)    \u00d6\nextern \"C\" void _Export _##fn(pv1 p1,pv2 p2,pv3 p3,pv4 p4)\u00e4 (fn(p1,p2,p3,p4));\u00fc\n#define v5(fn , pv1, pv2, pv3, pv4 ,pv5)    \u00d6\nextern \"C\" void _Export _##fn(pv1 p1,pv2 p2,pv3 p3,pv4 p4,pv5 p5)\u00e4(fn(p1,p2,p3,p4,p5));\u00fc\n#endif\n#endif\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNAMEUT": {"ttr": 7875, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/dsnameut.h,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   dataset name utilities, also called from C programs\n*******************************************************************************/\n\n\n#ifndef DSNAMEUT_H\n#define DSNAMEUT_H\n\n\n//KV20060329 buffer nm to avoid static variable\nISIS_EXT_C\nchar * genOpenName(const char *name, char *nm);\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DUMPXREC": {"ttr": 8367, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dumpxrec \u00e4\n  void          *dumpxrec_dumpxrec_size;         /* record size  */\n  void          *dumpxrec_dumpxrec_id;           /* record id    */\n  unsigned char  dumpxrec_dumpxrec_prddumpt;     /* dump type    */\n  unsigned char  dumpxrec_dumpxrec_flag1;\n  unsigned char  dumpxrec_dumpxrec_flag2;\n  unsigned char  dumpxrec_dumpxrec_flag3;\n  unsigned char  dumpxrec_dumpxrec_stck\u00c48\u00dc;      /* clock        */\n  unsigned char  dumpxrec_dumpxrec_prdsname\u00c48\u00dc;  /* system name  */\n  unsigned char  dumpxrec_dumpxrec_sdepljob\u00c48\u00dc;  /* job name     */\n  unsigned char  dumpxrec_dumpxrec_prdprodn\u00c422\u00dc; /* product name */\n  unsigned char  dumpxrec_dumpxrec_prdsmabd\u00c44\u00dc;  /* abend code   */\n  unsigned char  dumpxrec_dumpxrec_prdsmpsw\u00c48\u00dc;  /* psw          */\n  unsigned char  dumpxrec_dumpxrec_prdsmlmn\u00c48\u00dc;  /* module name  */\n  unsigned char  dumpxrec_dumpxrec_prdsmrsn\u00c44\u00dc;  /* reason code  */\n  unsigned char  dumpxrec_dumpxrec_prddsnam\u00c444\u00dc; /* dump dsn     */\n  \u00fc;\n\n/* Values for field \"dumpxrec_dumpxrec_id\" */\n#define dumpxrec_dumpxrec_id_sdump 1    /* record id */\n\n/* Values for field \"dumpxrec_dumpxrec_prddsnam\" */\n#define dumpxrec_dumpxrec_length   0x7A\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EBCDICUT": {"ttr": 8615, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/isislib/ebcdicut.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   utility functions to convert from and to ebcdic charset\n*******************************************************************************/\n\n#ifndef __EBCDICUT_HPP__\n#define __EBCDICUT_HPP__\n\nextern const unsigned char isis_etoa\u00c4256\u00dc;\nextern const unsigned char isis_atoe\u00c4256\u00dc;\nextern const unsigned char isis_etoa_ISO8859_1\u00c4256\u00dc;\nextern const unsigned char isis_atoe_ISO8859_1\u00c4256\u00dc;\n\n\n/**\n * functions for ebcdic/ascii conversion\n * codesetConversion: helper function which does the conversion\n * local2ascii, ascii2local: generally called functions\n *   on ebcdic platforms they convert characters between ebcdic and ascii\n *   on ascii platforms they don't change the characters\n * local2latin1, latin12local: generally called functions\n *   on ebcdic platforms they convert characters between ebcdic (IBM-273) and ascii (ISO8859-1)\n *   on ascii platforms they don't change the characters\n * local2ebcdic, ebcdic2local: generally called functions\n *   on ascii platforms they convert characters between ebcdic and ascii\n *   on ebcdic platforms they don't change the characters\n * latin12ebcdic, ebcdic2latin1: generally called functions\n *   on ascii platforms they convert characters between ebcdic (IBM-273) and ascii (ISO8859-1)\n *   on ebcdic platforms they don't change the characters\n * ascii2ebcdic, ebcdic2ascii: converts on ascii as well as on ebcdic platforms\n */\n\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab)\n\u00e4\n    char *d = dest;\n    for(;*src;++src,++d)\n    \u00e4\n        *d=convtab\u00c4(unsigned char)*src\u00dc;\n    \u00fc\n    *d=0;\n    return dest;\n\u00fc\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab,int len)\n\u00e4\n\n    for(int i=0;i<len;++i)\n    \u00e4\n        dest\u00c4i\u00dc=convtab\u00c4(unsigned char) src\u00c4i\u00dc\u00dc;\n    \u00fc\n    return dest;\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ascii(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\n#if ' ' == 0x40\ninline char* local2ascii(char* str,int len)\n#else\ninline char* local2ascii(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char local2ascii(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_etoa\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char local2ascii(char c)\n\u00e4\n    return local2ascii((unsigned char)c);\n\u00fc\n\n\n// 16-bit wide character conversion\n// converts  the last byte of c from local(native) to ascii codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 local2ascii(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=local2ascii(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* ascii2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ascii2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ascii2local(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\n\n\n#if ' ' == 0x40\ninline char* ascii2local(char* str,int len)\n#else\ninline char* ascii2local(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char ascii2local(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_atoe\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char ascii2local(char c)\n\u00e4\n    return ascii2local((unsigned char)c);\n\u00fc\n\n// 16-bit wide character conversion\n// converts  the last byte of c from ascii to local(native) codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 ascii2local(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=ascii2local(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char local2ebcdic(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_atoe\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ebcdic2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ebcdic2local(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_etoa\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* ebcdic2ascii(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_etoa);\n\u00fc\n\ninline char* ascii2ebcdic(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_atoe);\n\u00fc\n\ninline char ebcdic2ascii(char c)\n\u00e4\n    return (char) isis_etoa\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ebcdic2ascii(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4c\u00dc;\n\u00fc\n\ninline char ascii2ebcdic(char c)\n\u00e4\n    return (char)isis_atoe\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ascii2ebcdic(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4c\u00dc;\n\u00fc\n\n/* new functions */\n\ninline char* local2latin1(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2latin1(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2latin1(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\n#if ' ' == 0x40\ninline char* local2latin1(char* str,int len)\n#else\ninline char* local2latin1(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char local2latin1(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_etoa_ISO8859_1\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char local2latin1(char c)\n\u00e4\n    return local2latin1((unsigned char)c);\n\u00fc\n\n\n// 16-bit wide character conversion\n// converts  the last byte of c from local(native) to ascii codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 local2latin1(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=local2latin1(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* latin12local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* latin12local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* latin12local(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\n\n\n#if ' ' == 0x40\ninline char* latin12local(char* str,int len)\n#else\ninline char* latin12local(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char latin12local(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_atoe_ISO8859_1\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char latin12local(char c)\n\u00e4\n    return latin12local((unsigned char)c);\n\u00fc\n\n// 16-bit wide character conversion\n// converts  the last byte of c from ascii to local(native) codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 latin12local(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=latin12local(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char latin12ebcdic(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_atoe_ISO8859_1\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ebcdic2latin1(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ebcdic2latin1(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ebcdic2latin1(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ebcdic2latin1(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ebcdic2latin1(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_etoa_ISO8859_1\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n/* new functions end */\n\n// for backwards compatibility\ninline unsigned char etoa(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4 c\u00dc;\n\u00fc\n\ninline unsigned char atoe(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4 c\u00dc;\n\u00fc\n\n// Ascii representation of a string\n// useful if you need the ascii representation of a text independently from the platform's codeset\n// there is an overhead also on ascii platforms -> avoid frequent constructor calls, use macro ASCIITEMP instead if possible\n// usage samples:\n// strcmp(fontName,AsciiString(\"Arial\"));\n// const AsciiString fontlist\u00c4\u00dc=\u00e4\"X1\",X2,\"X3\"\u00fc;\nclass AsciiString\n\u00e4\nprotected:\n    char * str;\npublic:\n    AsciiString(const char* s)\n    \u00e4\n        if(s)\n        \u00e4\n            str=new char\u00c4strlen(s)+1\u00dc;\n            local2ascii(str,s);\n        \u00fc\n        else\n        \u00e4\n            str=NULL;\n        \u00fc\n    \u00fc\n\n    \u00dfAsciiString()\n    \u00e4\n        delete\u00c4\u00dc str;\n    \u00fc\n\n    operator const char* () const\n    \u00e4\n        return str;\n    \u00fc\n\u00fc;\n\n// representation of a string in local(native) codepage\n// useful if you need the native-codepage-representation of an ascii-text\n// analoguous to AsciiString\nclass LocalString\n\u00e4\nprotected:\n    char * str;\npublic:\n    LocalString(const char* s)\n    \u00e4\n        if(s)\n        \u00e4\n            str=new char\u00c4strlen(s)+1\u00dc;\n            ascii2local(str,s);\n        \u00fc\n        else\n        \u00e4\n            str=NULL;\n        \u00fc\n    \u00fc\n\n    \u00dfLocalString()\n    \u00e4\n        delete\u00c4\u00dc str;\n    \u00fc\n\n    operator const char* () const\n    \u00e4\n        return str;\n    \u00fc\n\u00fc;\n\n// macro ASCIITEMP to get a temporary object with ascii representation of x\n// macro LOCALTEMP to get a temporary object with representation of x in local (native) codepage\n// on ascii platforms these macros do nothing (expand to expression x)\n#if ' ' == 0x20\n#define ASCIITEMP(x) (x)\n#define LOCALTEMP(x) (x)\n#else\n#define ASCIITEMP(x) (const char*)AsciiString(x)\n#define LOCALTEMP(x) (const char*)LocalString(x)\n#endif\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ENFCT": {"ttr": 8557, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enfct \u00e4\n  unsigned char  enfctid\u00c44\u00dc;        /* ACRONYM: ENFC                        */\n  struct \u00e4\n    unsigned char  _enfcflg1; /* FLAG BYTE 1 */\n    unsigned char  _enfcflg2; /* RESERVED    */\n    \u00fc enfcflgs;\n  unsigned char  enfcrsv1;          /* Reserved                        @LJC */\n  unsigned char  enfct_noxsys_code; /* If ENFCXAVL is off, indicates        */\n  void          *enfcpmod;          /* ADDRESS OF IEFENFNM                  */\n  void          *enfcfmod;          /* ADDRESS OF ENF INTERFACE    @G860P42 */\n  void          *enfcascb;          /* ADDRESS OF MASTER SCHEDULER ASCB     */\n  void          *enfcvt;            /* ADDRESS OF ENF VECTOR TABLE          */\n  void          *enfcds;            /* ADDRESS OF ENF PROCESS TABLE         */\n  int            enfcecb;           /* EVENT NOTIFICATION FACILITY ECB      */\n  int            enfcmax;           /* MAXIMUM NUMBER OF EVENTS        @P9C */\n  void          *enfcrmod;          /* ADDRESS OF ENF SERVICE ROUTINE       */\n  void          *enfcgmod;          /* IEFENFIN ENTRY POINT FROM            */\n  void          *enfcmsgc;          /* ADDRESS OF IEFENFMC                  */\n  void          *enfcrmgr;          /* ADDRESS OF IEFENFRM             @L9A */\n  void          *enfct_srb_addr;    /* ADDRESS OF IEFENFSR             @L9A */\n  void          *enfct_srb_rmtr;    /* ADDRESS OF IEFENFPD             @L9A */\n  void          *enfct_enxv_;       /* Address of ENF's cross-system        */\n  struct \u00e4\n    int            _enfct_xsys_pc; /* PC number for cross-system           */\n    int            _filler1;       /* Reserved                        @LJA */\n    \u00fc enfct_xmem_data;\n  struct \u00e4\n    unsigned char  _enfct_xsys_mem_tok\u00c48\u00dc; /* ENF's XCF group member token    @LJA */\n    struct \u00e4\n      unsigned char  _enfct_sys_slot; /* XCF system slot number          @LJA */\n      unsigned char  _filler2\u00c43\u00dc;     /* Reserved                        @LJA */\n      \u00fc enfct_sys_token;\n    \u00fc enfct_xcf_data;\n  unsigned char  _filler3\u00c44\u00dc;       /* Reserved                        @LJA */\n  \u00fc;\n\n#define enfcflg1           enfcflgs._enfcflg1\n#define enfcflg2           enfcflgs._enfcflg2\n#define enfct_xsys_pc      enfct_xmem_data._enfct_xsys_pc\n#define enfct_xsys_mem_tok enfct_xcf_data._enfct_xsys_mem_tok\n#define enfct_sys_slot     enfct_xcf_data.enfct_sys_token._enfct_sys_slot\n\n/* Values for field \"enfcflg1\" */\n#define enfcaval 0x80 /* ENF INITIALIZED                      */\n#define enfcxavl 0x40 /* ENF sysplex-wide notification        */\n#define enfcfrs3 0x20 /* RESERVED                        @D2C */\n#define enfcfrs4 0x10 /* RESERVED                             */\n#define enfcfrs5 0x08 /* RESERVED                             */\n#define enfcfrs6 0x04 /* RESERVED                             */\n#define enfcfrs7 0x02 /* RESERVED                             */\n#define enfcfrs8 0x01 /* RESERVED                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENFP": {"ttr": 8365, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enfp \u00e4\n  unsigned char  irr_enfid\u00c46\u00dc;       /* Literal 'IRRENF'                      */\n  unsigned char  irr_enfver\u00c42\u00dc;      /* Parameter list version                */\n  unsigned char  irr_enflen\u00c42\u00dc;      /* Parameter list length                 */\n  unsigned char  _filler1\u00c42\u00dc;        /* Reserved                         @P1C */\n  struct \u00e4\n    unsigned char  _irr_enfq_list;   /* SETR RACLIST signal                   */\n    unsigned char  _irr_enfq_refr;   /* SETR RACLIST REFRESH signal           */\n    unsigned char  _irr_enfq_nolist; /* SETR NORACLIST signal                 */\n    unsigned char  _filler2;         /* Reserved                         @P1C */\n    \u00fc irr_enfq;\n  unsigned char  irr_enfclass\u00c48\u00dc;    /* Class name                            */\n  unsigned char  irr_enf2id_eyec\u00c46\u00dc; /* ENF2 Eye Catcher            @P1A      */\n  \u00fc;\n\n#define irr_enfq_list   irr_enfq._irr_enfq_list\n#define irr_enfq_refr   irr_enfq._irr_enfq_refr\n#define irr_enfq_nolist irr_enfq._irr_enfq_nolist\n\n/* Values for field \"irr_enfclass\" */\n#define enfp_length         0x18\n#define irr_enfver_cv01     0x01       /* Version 1 of ENFP              */\n#define irr_enfver_cver     0x01       /* Current version                */\n#define irr_enfq_list_val   0x80000000 /* Value for SETR RACLIST         */\n#define irr_enfq_refr_val   0x800000   /* Value for SETR RACLIST REFRESH */\n#define irr_enfq_nolist_val 0x8000     /* Value for SETR NORACLIST       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENFSERV": {"ttr": 8015, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_ENFSERV\n#define INCLUDE_ENFSERV\n#include \"qfss70mu/aren.hpp\"\n#include \"qfss70mu/dach.hpp\"\n#include \"qfss70mu/dccd.hpp\"\n#include \"qfss70mu/dccdarry.hpp\"\n#include \"qfss70mu/dlenf.hpp\"\n#include \"qfss70mu/enfct.hpp\"\n#include \"qfss70mu/enfp.hpp\"\n#include \"qfss70mu/enf067.hpp\"\n#include \"qfss70mu/enf2.hpp\"\n#include \"qfss70mu/enf37.hpp\"\n#include \"qfss70mu/enf40.hpp\"\n#include \"qfss70mu/enf45.hpp\"\n#include \"qfss70mu/enf51c.hpp\"\n#include \"qfss70mu/enf55.hpp\"\n#include \"qfss70mu/enf58.hpp\"\n#include \"qfss70mu/enf58ext.hpp\"\n#include \"qfss70mu/enf64.hpp\"\n#include \"qfss70mu/enf70.hpp\"\n#include \"qfss70mu/enf70ext.hpp\"\n#include \"qfss70mu/ensg.hpp\"\n#include \"qfss70mu/eunld.hpp\"\n#include \"qfss70mu/e63r.hpp\"\n#include \"qfss70mu/evary.hpp\"\n#include \"qfss70mu/ifbenf36.hpp\"\n#include \"qfss70mu/ifbnlog.hpp\"\n#include \"qfss70mu/ifbntkn.hpp\"\n#include \"qfss70mu/ixgenf.hpp\"\n#include \"qfss70mu/ixlycfse.hpp\"\n#include \"qfss70mu/siv1v2v3.hpp\"\n#include \"qfss70mu/si00.hpp\"\n#include \"qfss70mu/si11v1.hpp\"\n#include \"qfss70mu/si22v1.hpp\"\n#include \"qfss70mu/si22v2.hpp\"\n#include \"qfss70mu/si22v3.hpp\"\n#include \"qfss70mu/srmenf1.hpp\"\n#include \"qfss70mu/ttrenf60.hpp\"\n#include \"qfss70mu/wlmenf1.hpp\"\n#include \"qfss70mu/wlmenf56.hpp\"\n#include \"qfss70mu/wlmenf57.hpp\"\n#include \"qfss70mu/wlmenf61.hpp\"\n#include \"qfss70mu/sdwa.hpp\"\n#include \"qfss70mu/adsrcmps.hpp\"\n#include \"qfss70mu/hdlogrec.hpp\"\n#include \"qfss70mu/dumpxrec.hpp\"\n#include \"qfss70mu/mpfxrec.hpp\"\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ENF067": {"ttr": 8471, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf067 \u00e4\n  unsigned char  enf067_id\u00c44\u00dc;         /* Eyecatcher 'EN67'                  */\n  unsigned char  enf067_component\u00c45\u00dc;  /* Component acronym 'SCHZS'          */\n  unsigned char  _filler1\u00c43\u00dc;          /* Unused                             */\n  int            enf067_event;         /* This matches the first word of the */\n  int            enf067_hcinstancenum; /* Instance number of HC              */\n  unsigned char  _filler2\u00c412\u00dc;         /* Unused                             */\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _enf067_eventdata_statuschanged; /* No data for \"StatusChanged\" */\n        \u00fc enf067_eventdata_notavailable;\n      \u00fc enf067_eventdata_available;\n    \u00fc enf067_eventdata;\n  \u00fc;\n\n#define enf067_eventdata_statuschanged enf067_eventdata.enf067_eventdata_available.enf067_eventdata_notavailable._enf067_eventdata_statuschanged\n\n/* Values for field \"enf067_eventdata_statuschanged\" */\n#define enf067_id_chars 0xC5D5F6F7 /* Eyecatcher */\n#define enf067_len      0x20\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF2": {"ttr": 8045, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf2 \u00e4\n  unsigned char  irr_enf2id\u00c46\u00dc;   /* Literal 'IRREN2'       */\n  unsigned char  irr_enf2ver\u00c42\u00dc;  /* Parameter list version */\n  unsigned char  irr_enf2len\u00c42\u00dc;  /* Parameter list length  */\n  unsigned char  _filler1\u00c42\u00dc;     /* Reserved               */\n  struct \u00e4\n    unsigned char  _filler2;\n    unsigned char  _filler3\u00c43\u00dc;  /* Reserved */\n    \u00fc irr_enf2q;\n  unsigned char  irr_enf2user\u00c48\u00dc; /* RACF UserID            */\n  \u00fc;\n\n/* Values for field \"irr_enf2user\" */\n#define irr_enf2_length      0x18       /* @P1C                         */\n#define irr_enf2ver_cv01     0x01       /* Version 1 of ENFP            */\n#define irr_enf2ver_cver     0x01       /* Current version              */\n#define irr_enf2q_con        0x80000000 /* X'80' CONNECT Command signal */\n#define irr_enf2q_rem        0x40000000 /* X'40' REMOVE  Command signal */\n#define irr_enf2q_alu_revoke 0x20000000 /* X'20' ALTUSER REVOKE         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF37": {"ttr": 8089, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf37 \u00e4\n  unsigned char  enf37id\u00c46\u00dc;  /* -          Control Block Id - \"ENF37 \"            */\n  unsigned char  enf37ver\u00c42\u00dc; /* -          Parameter List Version                 */\n  short int      enf37len;    /* -            Parameter List Length                */\n  unsigned char  enf37rsv\u00c42\u00dc; /* -          Reserved                               */\n  unsigned char  enf37qlf\u00c44\u00dc; /* -          Qualifier Code                         */\n  unsigned char  enf37tod\u00c48\u00dc; /* -          SYNC Event Value (in TOD format)       */\n  unsigned char  enf37chr\u00c42\u00dc; /* -          SYNC Event Value (in character format) */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF40": {"ttr": 8165, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf40 \u00e4\n  unsigned char  enf40_id\u00c46\u00dc;        /* Id 'ENF40 '              */\n  unsigned char  enf40_version;      /* Version of mapping       */\n  unsigned char  _filler1;           /* Reserved                 */\n  short int      enf40_length;       /* Length of parameter list */\n  unsigned char  _filler2\u00c42\u00dc;        /* Reserved                 */\n  unsigned char  enf40_qualifier\u00c44\u00dc; /* Qualifier code           */\n  unsigned char  enf40_ssnm\u00c44\u00dc;      /* Actual name of subsystem */\n  unsigned char  enf40_cnam\u00c48\u00dc;      /* Common name of subsystem */\n  unsigned char  _filler3\u00c48\u00dc;        /* Reserved                 */\n  \u00fc;\n\n/* Values for field \"_filler3\" */\n#define enf40_size 0x24       /* Length of ENF40 parameter area      */\n#define enf40_cver 1          /* Current version                     */\n#define enf40_init 0x80000000 /* Job entry subsystem has initialized */\n#define enf40_term 0x40000000 /* Job entry subsystem is ending       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF45": {"ttr": 7929, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf45 \u00e4\n  struct \u00e4\n    unsigned char  _enf45id\u00c48\u00dc;  /* Identifier = 'IDAENF45'       */\n    int            _enf45len;    /* Length of this parmlist       */\n    char           _enf45v_;     /* Version # of this parmlist    */\n    unsigned char  _filler1\u00c43\u00dc;  /* unused - set to binary zeroes */\n    \u00fc enf45hdr;\n  struct \u00e4\n    char           _enf45fid;     /* Function ID */\n    unsigned char  _filler2\u00c447\u00dc;\n    \u00fc enf45bdy;\n  unsigned char  enf45end; /* End of parmlist mapping */\n  \u00fc;\n\n#define enf45id  enf45hdr._enf45id\n#define enf45len enf45hdr._enf45len\n#define enf45v_  enf45hdr._enf45v_\n#define enf45fid enf45bdy._enf45fid\n\n/* Values for field \"enf45end\" */\n#define enf45v_c  0    /* Parmlist VERSION #0 constant  */\n#define enf45f01  1    /* 01 - SMSVSAM addr spc started */\n#define enf45_len 0x40\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF51C": {"ttr": 8171, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf51c \u00e4\n  union \u00e4\n    unsigned char  _enf51c_header\u00c416\u00dc; /* Header information */\n    struct \u00e4\n      unsigned char  _enf51cid\u00c46\u00dc; /* Control block identifier 'ENF51C'             */\n      short int      _enf51cvers;  /* Version number. Current version is            */\n      int            _enf51clen;   /* Length of ENF51C control block, including the */\n      unsigned char  _filler1\u00c44\u00dc;  /* Reserved                                      */\n      \u00fc _enf51c_struct1;\n    \u00fc _enf51c_union1;\n  union \u00e4\n    unsigned char  _enf51c_contention_data\u00c432\u00dc; /* Contention data */\n    struct \u00e4\n      unsigned char  _enf51c_flags;            /* Event description                            */\n      unsigned char  _filler2\u00c43\u00dc;              /* Reserved                                     */\n      unsigned char  _enf51c_timestamp\u00c48\u00dc;     /* Time for which contention data is valid      */\n      short int      _enf51c_rib_offset;       /* Offset from the beginning of the parameter   */\n      short int      _enf51c_rib_size;         /* Length of the fixed portion of the RIB       */\n      short int      _enf51c_ribe_size;        /* Length of each RIBE (analogous to the second */\n      unsigned char  _filler3\u00c46\u00dc;              /* Reserved                                     */\n      unsigned char  _enf51c_failed_system\u00c48\u00dc; /* Name of failing system. Valid only for       */\n      \u00fc _enf51c_struct2;\n    \u00fc _enf51c_union2;\n  unsigned char  enf51c_rib; /* Beginning of RIB/RIBE data */\n  \u00fc;\n\n#define enf51c_header          _enf51c_union1._enf51c_header\n#define enf51cid               _enf51c_union1._enf51c_struct1._enf51cid\n#define enf51cvers             _enf51c_union1._enf51c_struct1._enf51cvers\n#define enf51clen              _enf51c_union1._enf51c_struct1._enf51clen\n#define enf51c_contention_data _enf51c_union2._enf51c_contention_data\n#define enf51c_flags           _enf51c_union2._enf51c_struct2._enf51c_flags\n#define enf51c_timestamp       _enf51c_union2._enf51c_struct2._enf51c_timestamp\n#define enf51c_rib_offset      _enf51c_union2._enf51c_struct2._enf51c_rib_offset\n#define enf51c_rib_size        _enf51c_union2._enf51c_struct2._enf51c_rib_size\n#define enf51c_ribe_size       _enf51c_union2._enf51c_struct2._enf51c_ribe_size\n#define enf51c_failed_system   _enf51c_union2._enf51c_struct2._enf51c_failed_system\n\n/* Values for field \"enf51c_flags\" */\n#define enf51c_contention_exists    0x80      /* Contention exists for this resource      */\n#define enf51c_system_failure       0x40      /* The system named in                      */\n#define enf51c_system_error         0x20      /* Contention notifications may have been   */\n#define enf51c_data_incomplete      0x10      /* The amount of data exceeded the          */\n#define enf51c_system_error_cleared 0x08      /* Global resource contention data          */\n\n/* Values for field \"enf51c_rib\" */\n#define enf51cver1                  1         /* First version of ENF51C                  */\n#define enf51cver2                  2         /* Second version of ENF51C                 */\n#define enf51ccver                  2         /* Current version of ENF51C                */\n#define enf51c_all_cont             0x1000000 /* ENFREQ qualifier value requesting all    */\n#define enf51c_lcont                0x1000001 /* ENFREQ qualifier value requesting local  */\n#define enf51c_gcont                0x1000002 /* ENFREQ qualifier value requesting global */\n#define enf51c_all_contx            0x1000100 /* ENFREQ qualifier value requesting all    */\n#define enf51c_lcontx               0x1000101 /* ENFREQ qualifier value requesting local  */\n#define enf51c_gcontx               0x1000102 /* ENFREQ qualifier value requesting global */\n#define enf51c_recovery             0x1000003 /* ENFREQ qualifier value requesting        */\n#define enf51c_len                  0x30\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF55": {"ttr": 8423, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf55 \u00e4\n  unsigned char  enf55id\u00c48\u00dc;             /* Control Block ID - \"IRAENF55\"       */\n  short int      enf55len;               /* Parameter List Length               */\n  unsigned char  enf55ver;               /* Parameter List Version              */\n  unsigned char  enf55typ;               /* Type of frame needed to end         */\n  unsigned char  enf55qlf\u00c44\u00dc;            /* Qualifier Code                      */\n  short int      enf55frm;               /* Obsolete (but still maintained) use */\n  short int      enf55rsv1;              /* Reserved                            */\n  union \u00e4\n    int            _enf55framesneeded; /* Number of frames needed to end the */\n    int            _enf55slotsneeded;  /* Number of slots needed to end the  */\n    \u00fc _enf55_union1;\n  unsigned char  enf55timestamp\u00c48\u00dc;      /* Time when the ENF signal got issued */\n  short int      enf55rsv4;              /* Reserved                            */\n  short int      enf55asidelementoffset; /* Offset to the Asid element section  */\n  short int      enf55asidelementlength; /* Length of a single Asid element     */\n  short int      enf55noofasidelements;  /* Number of elements elements in the  */\n  unsigned char  enf55fixedend;          /* Begin of dynamic sections           */\n  \u00fc;\n\n#define enf55framesneeded _enf55_union1._enf55framesneeded\n#define enf55slotsneeded  _enf55_union1._enf55slotsneeded\n\n/* Values for field \"enf55fixedend\" */\n#define enf55_len 0x28\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF58": {"ttr": 8099, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf58 \u00e4\n  unsigned char  enf58_id\u00c46\u00dc;       /* Eye catcher 'ENF58 '                 */\n  unsigned char  enf58_version;     /* Version of mapping                   */\n  unsigned char  enf58_ext_dw_off;  /* Offset to fixed extension   @Z11LSSF */\n  int            enf58_length;      /* Length of parameter list    @R05P407 */\n  unsigned char  enf58_qualifier;   /* Qualifier code - defined below       */\n  unsigned char  enf58_sys_hold;    /* System hold reason - refer           */\n  unsigned char  enf58_jes_name\u00c48\u00dc; /* JES2 Member Name / JES3 MAIN name    */\n  unsigned char  enf58_reason\u00c418\u00dc;  /* Reason text                          */\n  unsigned char  enf58_ctoken\u00c480\u00dc;  /* Data Set Client Token                */\n  union \u00e4\n    unsigned char  _enf58_new_ctoken\u00c480\u00dc; /* New client token that should */\n    struct \u00e4\n      int            _enf58_copy;   /* Checkpointed copy count     @Z05LENF */\n      int            _enf58_record; /* Checkpointed current record @Z05LENF */\n      int            _enf58_page;   /* Checkpointed current page   @Z05LENF */\n      unsigned char  _filler1\u00c44\u00dc;   /* Reserved                    @Z05LENF */\n      unsigned char  _filler2\u00c464\u00dc;\n      \u00fc _enf58_struct1;\n    struct \u00e4\n      int            _enf58_joeindex; /* Offset of work JOE            @Z10DS */\n      unsigned char  _filler3\u00c44\u00dc;     /* Reserved                      @Z10DS */\n      unsigned char  _filler4\u00c472\u00dc;\n      \u00fc _enf58_struct2;\n    struct \u00e4\n      int            _enf58_tot_page;      /* Total page count            @Z11LSSF */\n      int            _enf58_tot_record;    /* Total record count          @Z11LSSF */\n      unsigned char  _enf58_job_name\u00c48\u00dc;   /* Job name of selected job             */\n      unsigned char  _enf58_gs_jesdata\u00c48\u00dc; /* JES-specific data                    */\n      unsigned char  _filler5\u00c456\u00dc;\n      \u00fc _enf58_struct3;\n    \u00fc _enf58_union1;\n  \u00fc;\n\n#define enf58_new_ctoken _enf58_union1._enf58_new_ctoken\n#define enf58_copy       _enf58_union1._enf58_struct1._enf58_copy\n#define enf58_record     _enf58_union1._enf58_struct1._enf58_record\n#define enf58_page       _enf58_union1._enf58_struct1._enf58_page\n#define enf58_joeindex   _enf58_union1._enf58_struct2._enf58_joeindex\n#define enf58_tot_page   _enf58_union1._enf58_struct3._enf58_tot_page\n#define enf58_tot_record _enf58_union1._enf58_struct3._enf58_tot_record\n#define enf58_job_name   _enf58_union1._enf58_struct3._enf58_job_name\n#define enf58_gs_jesdata _enf58_union1._enf58_struct3._enf58_gs_jesdata\n\n/* Values for field \"enf58_version\" */\n#define enf58_vone                          1    /* Version 1                            */\n#define enf58_vtwo                          2    /* Version 2                   @Z05LENF */\n#define enf58_vthree                        3    /* Version 3                   @Z11LSSF */\n#define enf58_vfour                         4    /* Version 4                   @BT1LSSI */\n#define enf58_cver                          0x04 /* Current version           @BT1LSSI   */\n\n/* Values for field \"enf58_qualifier\" */\n#define enf58_q_purge                       1    /* Data Set was purged                  */\n#define enf58_q_select                      2    /* Data Set was selected                */\n#define enf58_q_deselect_processed          3    /* Data set was processed               */\n#define enf58_q_deselect_not_processed      4    /* Data set is no longer                */\n#define enf58_q_deselect_not_processed_held 5    /* Data set is no longer                */\n#define enf58_q_deselect_error              6    /* An error resulting in a              */\n#define enf58_q_eod_ok                      7    /* End of data set notification         */\n#define enf58_q_eod_error                   8    /* End of data set notification         */\n#define enf58_q_job_change                  9    /* Job-status change occurred           */\n#define enf58_q_token_change                10   /* Client token has changed             */\n#define enf58_q_checkpoint                  11   /* Checkpoint taken            @Z05LENF */\n#define enf58_q_updatejoe                   12   /* JOE1CKV update (JES2          @Z10DS */\n#define enf58_q_instance                    13   /* Additional instance of data @Z11LSSF */\n#define enf58_q_grp_select                  14   /* Data set group select       @Z11LSSF */\n#define enf58_q_grp_deselect                15   /* Data set group deselect     @Z11LSSF */\n\n/* Values for field \"enf58_ctoken\" */\n#define enf58_size1                         0x78 /* Small Version of ENF58 ends here     */\n\n/* Values for field \"enf58_new_ctoken\" */\n#define enf58_size2                         0xC8 /* ENF58 for TOKEN_CHANGE ends here     */\n\n/* Values for field \"enf58_gs_jesdata\" */\n#define enf58_size5                         0x90 /* ENF58 for JOE Select ends here       */\n#define enf58_maxsize                       0xC8 /* Largest base ENF58 parm lst @BT1LSSI */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF58EXT": {"ttr": 7919, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf58_ext \u00e4\n  unsigned char  enf58_ext_eye\u00c46\u00dc;         /* Eyecatcher                  @Z11LSSF */\n  short int      enf58_ext_length;         /* Length of fixed extension   @Z11LSSF */\n  unsigned char  enf58_jesplex_id\u00c48\u00dc;      /* Unique JESPLEX token        @Z11LSSF */\n  unsigned char  enf58_device\u00c410\u00dc;         /* Related device name if any  @Z11LSSF */\n  unsigned char  enf58_device_jesdata\u00c430\u00dc; /* JES-related device information       */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ENF64": {"ttr": 8465, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf64 \u00e4\n  unsigned char  enf64_id\u00c45\u00dc;        /* Eyecatcher 'ENF64'                  */\n  unsigned char  enf64_version;      /* Version number                      */\n  unsigned char  enf64_component\u00c45\u00dc; /* Component acronym 'DF111'           */\n  unsigned char  _filler1;           /* Reserved                            */\n  struct \u00e4\n    unsigned char  _enf64_qual1; /* High level qualifier */\n    unsigned char  _enf64_qual2; /* Reserved             */\n    unsigned char  _enf64_qual3; /* Reserved             */\n    unsigned char  _enf64_qual4; /* Low level qualifier  */\n    \u00fc enf64_qual;\n  short int      enf64_len;          /* Length of this area                 */\n  unsigned char  _filler2\u00c414\u00dc;       /* Reserved                            */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _enf64_volumeevents; /* Volume-specific events */\n        \u00fc enf64_eventdata;\n      unsigned char  _filler3\u00c45\u00dc;\n      \u00fc _enf64_struct1;\n    unsigned char  _enf64_volser\u00c46\u00dc; /* Volume serial */\n    \u00fc _enf64_union1;\n  struct \u00e4\n    unsigned char  _enf64_sfi_serial_ctyp\u00c46\u00dc;  /* Storage Facility Type               */\n    unsigned char  _enf64_sfi_serial_manu\u00c43\u00dc;  /* Manufacturer ID                     */\n    unsigned char  _enf64_sfi_serial_manl\u00c42\u00dc;  /* Manufacturer location               */\n    unsigned char  _enf64_sfi_serial_seqn\u00c412\u00dc; /* Storage Facility Image sequence num */\n    \u00fc enf64_sfi_serial;\n  unsigned char  enf64_lss;          /* Logical Subsystem ID           @01c */\n  unsigned char  _filler4;           /* Reserved                       @01c */\n  unsigned char  enf64_voln;         /* Volume number within LSS            */\n  int            enf64_vx_cyls;      /* New number of cylinders             */\n  unsigned char  _filler5\u00c412\u00dc;       /* Reserved                       @02a */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _enf64_dsfevents; /* Events issued by ICKDSF        @02a */\n        \u00fc enf64_voleventdata;\n      unsigned char  _filler6\u00c43\u00dc;\n      \u00fc _enf64_struct2;\n    unsigned char  _enf64_dsf_flags\u00c44\u00dc; /* Reserved                       @02a */\n    \u00fc _enf64_union2;\n  unsigned char  enf64_vtoc_loc\u00c44\u00dc;  /* VTOC Location                  @02a */\n  \u00fc;\n\n#define enf64_qual1           enf64_qual._enf64_qual1\n#define enf64_qual2           enf64_qual._enf64_qual2\n#define enf64_qual3           enf64_qual._enf64_qual3\n#define enf64_qual4           enf64_qual._enf64_qual4\n#define enf64_volumeevents    _enf64_union1._enf64_struct1.enf64_eventdata._enf64_volumeevents\n#define enf64_volser          _enf64_union1._enf64_volser\n#define enf64_sfi_serial_ctyp enf64_sfi_serial._enf64_sfi_serial_ctyp\n#define enf64_sfi_serial_manu enf64_sfi_serial._enf64_sfi_serial_manu\n#define enf64_sfi_serial_manl enf64_sfi_serial._enf64_sfi_serial_manl\n#define enf64_sfi_serial_seqn enf64_sfi_serial._enf64_sfi_serial_seqn\n#define enf64_dsfevents       _enf64_union2._enf64_struct2.enf64_voleventdata._enf64_dsfevents\n#define enf64_dsf_flags       _enf64_union2._enf64_dsf_flags\n\n/* Values for field \"enf64_qual1\" */\n#define enf64_qual1_volume            0x01 /* Volume event */\n\n/* Values for field \"enf64_qual4\" */\n#define enf64_qual4_capacitychange    0x01\n#define enf64_qual4_vtocupdated       0x02\n#define enf64_qual4_vtocindexbuilt    0x03 /* @02a         */\n#define enf64_qual4_fullvolumerestore 0x10 /* @02a         */\n\n/* Values for field \"enf64_vtoc_loc\" */\n#define enf64_length                  0x58\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF70": {"ttr": 7907, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf70 \u00e4\n  unsigned char  enf70_id\u00c46\u00dc;         /* Eye catcher 'ENF70 '              */\n  unsigned char  enf70_version;       /* Version of mapping                */\n  unsigned char  _filler1;            /* Reserved                          */\n  int            enf70_length;        /* Total length of ENF70 data        */\n  short int      enf70_fixed_length;  /* Length of fixed section           */\n  unsigned char  enf70_qualifier;     /* Qualifier code - defined below    */\n  unsigned char  _filler2\u00c43\u00dc;         /* Reserved                          */\n  unsigned char  enf70_jes_name\u00c48\u00dc;   /* JES2 Member Name / JES3 MAIN name */\n  unsigned char  enf70_jesplex_id\u00c48\u00dc; /* Unique JESPLEX identifier         */\n  unsigned char  enf70_jobname\u00c48\u00dc;    /* Job name                          */\n  unsigned char  enf70_jobid\u00c48\u00dc;      /* Job ID                            */\n  unsigned char  enf70_org_jobid\u00c48\u00dc;  /* Original Job ID                   */\n  unsigned char  enf70_org_node\u00c48\u00dc;   /* Original Node                     */\n  unsigned char  enf70_jobclass\u00c48\u00dc;   /* Job Class                         */\n  unsigned char  enf70_srvclass\u00c48\u00dc;   /* Service class                     */\n  unsigned char  _filler3\u00c42\u00dc;\n  int            enf70_rdr_date;      /* Reader on date                    */\n  int            enf70_rdr_time;      /* Reader on time                    */\n  struct \u00e4\n    unsigned char  _enf70_comp;    /* Job completion indicator */\n    unsigned char  _enf70_code\u00c43\u00dc; /* Completion code (if      */\n    \u00fc enf70_maxcc;\n  unsigned char  enf70_queue;         /* Current phase job is queued for   */\n  unsigned char  _filler4\u00c45\u00dc;         /* Reserved                          */\n  unsigned char  enf70_jesdata\u00c416\u00dc;   /* JES-specific data for job         */\n  unsigned char  _filler5\u00c42\u00dc;\n  \u00fc;\n\n#define enf70_comp enf70_maxcc._enf70_comp\n#define enf70_code enf70_maxcc._enf70_code\n\n/* Values for field \"enf70_version\" */\n#define enf70_vone       1    /* Version 1                        */\n#define enf70_cver       0x01 /* Current version                  */\n\n/* Values for field \"enf70_qualifier\" */\n#define enf70_select     1    /* Job was selected                 */\n#define enf70_deselect   2    /* Job was processed                */\n#define enf70_change     3    /* Job queued to new phase          */\n#define enf70_purge      4    /* Job was purged                   */\n\n/* Values for field \"enf70_comp\" */\n#define enf70_cab        0x80 /* ABEND CODE                       */\n#define enf70_ccc        0x40 /* Completion code                  */\n#define enf70_cunk       0    /* No completion info               */\n#define enf70_cnrm       1    /* Job ended normally               */\n#define enf70_cecc       2    /* Job ended by cc                  */\n#define enf70_cjcl       3    /* Job had a JCL error              */\n#define enf70_ccan       4    /* Job was canceled                 */\n#define enf70_cabn       5    /* Job ABENDed                      */\n#define enf70_ccab       6    /* Converter ABENDed                */\n#define enf70_csec       7    /* Security error                   */\n#define enf70_ceom       8    /* Job ABENDed in end of            */\n\n/* Values for field \"enf70_queue\" */\n#define enf70_q_none     0    /* No previous queue (job create)   */\n#define enf70_q_convert  2    /* Conversion                       */\n#define enf70_q_pscbat   3    /* Postscan (batch)                 */\n#define enf70_q_pscdsl   4    /* Postscan (demand select)         */\n#define enf70_q_fetch    5    /* Volume fetch                     */\n#define enf70_q_volwt    6    /* Start Setup                      */\n#define enf70_q_syssel   7    /* MDS system select processing     */\n#define enf70_q_alloc    8    /* resource allocation              */\n#define enf70_q_voluav   9    /* unavailable VOL(s)               */\n#define enf70_q_verify   10   /* volume mounts                    */\n#define enf70_q_sysver   11   /* MDS system verify processing     */\n#define enf70_q_error    12   /* Demand Select                    */\n#define enf70_q_select   13   /* Execution                        */\n#define enf70_q_onmain   14   /* Execution                        */\n#define enf70_q_brkdwn   17   /* Breakdown                        */\n#define enf70_q_restrt   18   /* MDS restart proc                 */\n#define enf70_q_done     19   /* Main and MDS proc. complete      */\n#define enf70_q_output   20   /* Output service                   */\n#define enf70_q_outque   21   /* Output service WTR               */\n#define enf70_q_oswait   22   /* Awaiting rsvd services           */\n#define enf70_q_cmplt    23   /* Output service complete          */\n#define enf70_q_demsel   24   /* Demand Select                    */\n#define enf70_q_efwait   25   /* Ending function rq waiting       */\n#define enf70_q_efbad    26   /* Ending function rq not Processed */\n#define enf70_q_input    128  /* Input queue (pre-execution)      */\n#define enf70_q_receiver 136  /* Input queue (post-execution)     */\n#define enf70_q_spin     132  /* Spin queue                       */\n#define enf70_q_purge    134  /* Purge queue                      */\n#define enf70_q_xmit     137  /* NJE transmission queue           */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENF70EXT": {"ttr": 8253, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct enf70_vext \u00e4\n  unsigned char  enf70_vext_eye\u00c46\u00dc; /* Eyecatcher                   */\n  short int      enf70_vext_length; /* Length of variable extension */\n  union \u00e4\n    struct \u00e4\n      double         _enf70_reqdata; /* Beginning of variable data */\n      unsigned char  _filler1\u00c49\u00dc;\n      \u00fc _enf70_vext_struct1;\n    struct \u00e4\n      unsigned char  _enf70_device\u00c410\u00dc;  /* Device name              */\n      unsigned char  _enf70_device_type; /* Device class             */\n      unsigned char  _enf70_desel_flg1;  /* Reserved                 */\n      unsigned char  _enf70_dev_data\u00c44\u00dc; /* JES-specific device data */\n      unsigned char  _filler2;\n      \u00fc _enf70_vext_struct2;\n    struct \u00e4\n      unsigned char  _enf70_old_queue;     /* Phase job moved from   */\n      unsigned char  _enf70_old_jclass\u00c48\u00dc; /* Previous job class     */\n      unsigned char  _enf70_old_sclass\u00c48\u00dc; /* Previous service class */\n      \u00fc _enf70_vext_struct3;\n    \u00fc _enf70_vext_union1;\n  unsigned char  _filler3\u00c47\u00dc;\n  \u00fc;\n\n#define enf70_reqdata     _enf70_vext_union1._enf70_vext_struct1._enf70_reqdata\n#define enf70_device      _enf70_vext_union1._enf70_vext_struct2._enf70_device\n#define enf70_device_type _enf70_vext_union1._enf70_vext_struct2._enf70_device_type\n#define enf70_desel_flg1  _enf70_vext_union1._enf70_vext_struct2._enf70_desel_flg1\n#define enf70_dev_data    _enf70_vext_union1._enf70_vext_struct2._enf70_dev_data\n#define enf70_old_queue   _enf70_vext_union1._enf70_vext_struct3._enf70_old_queue\n#define enf70_old_jclass  _enf70_vext_union1._enf70_vext_struct3._enf70_old_jclass\n#define enf70_old_sclass  _enf70_vext_union1._enf70_vext_struct3._enf70_old_sclass\n\n/* Values for field \"enf70_reqdata\" */\n#define enf70_vext_size0  0x08\n\n/* Values for field \"enf70_device_type\" */\n#define enf70_dtype_dev   1    /* Standard device                  */\n#define enf70_dtype_jinit 2    /* JES Initiator                    */\n#define enf70_dtype_winit 3    /* WLM Initiator                    */\n#define enf70_dtype_phase 4    /* Select for current phase         */\n\n/* Values for field \"enf70_desel_flg1\" */\n#define enf70_desel_reque 0x80 /* Job to be requeued for execution */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ENSG": {"ttr": 8643, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ensg \u00e4\n  struct \u00e4\n    unsigned char  _ensgid\u00c44\u00dc;   /* Control block identifier (ENSGCID) */\n    short int      _ensgvers;    /* Version number.  Current version   */\n    short int      _ensglen;     /* Length of ENSG control block       */\n    unsigned char  _filler1\u00c44\u00dc;  /* Reserved                           */\n    \u00fc ensg_header;\n  struct \u00e4\n    int            _ensg_event_code;            /* Event code                  */\n    unsigned char  _ensg_qual\u00c44\u00dc;               /* Event qualifier             */\n    unsigned char  _ensg_bitmap_qual\u00c432\u00dc;       /* Bit-mapped event qualifier  */\n    unsigned char  _ensg_signal_flags;          /* Flags describing signal     */\n    unsigned char  _filler2\u00c43\u00dc;                 /* Reserved                    */\n    unsigned char  _ensg_source_system_name\u00c48\u00dc; /* Name of system where signal */\n    struct \u00e4\n      unsigned char  _ensg_source_system_slot; /* XCF slot number of originating */\n      unsigned char  _filler3\u00c43\u00dc;              /* Reserved (XCF token)           */\n      \u00fc ensg_source_system_token;\n    unsigned char  _filler4\u00c48\u00dc;                 /* Reserved                    */\n    \u00fc ensg_signal_data;\n  \u00fc;\n\n#define ensgid                  ensg_header._ensgid\n#define ensgvers                ensg_header._ensgvers\n#define ensglen                 ensg_header._ensglen\n#define ensg_event_code         ensg_signal_data._ensg_event_code\n#define ensg_qual               ensg_signal_data._ensg_qual\n#define ensg_bitmap_qual        ensg_signal_data._ensg_bitmap_qual\n#define ensg_signal_flags       ensg_signal_data._ensg_signal_flags\n#define ensg_source_system_name ensg_signal_data._ensg_source_system_name\n#define ensg_source_system_slot ensg_signal_data.ensg_source_system_token._ensg_source_system_slot\n\n/* Values for field \"ensg_signal_flags\" */\n#define ensg_foreign_system 0x80 /* Signal originated on another */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EPV": {"ttr": 8057, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct epv \u00e4\n  int            epv_oldep;      /* Branch instruction                       */\n  int            epv_eyecatch;   /* X'00C3C5C5'  Eye catcher of X'00',C'CEE' */\n  int            epv_dynsize;    /* size of automatic storage                */\n  int            epv_ppa1offset; /* offset of PPA1 from entry point          */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ERMDSMP0": {"ttr": 8503, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef __erbdscss\n#pragma pack(packed)\n\n/*********************************************************************/\n/*                                                                   */\n/* PROPRIETARY STATEMENT:                                            */\n/*    LICENSED MATERIALS - PROPERTY OF IBM                           */\n/*    \"RESTRICTED MATERIALS OF IBM\"                                  */\n/*    (C) COPYRIGHT IBM CORP. 1994, 1996                             */\n/*    STATUS=HRM6602 (OS/390 1.2.0 RMF)                              */\n/*                                                                   */\n/* FUNCTION:                                                         */\n/*    RMF Sysplex Data Server Callable Services Examples             */\n/*                                                                   */\n/*********************************************************************/\n\n#define __erbdscss 1\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBDSQRY / ERB3XDRS / ERB2XDGS request type constants             */\n/*                                                                   */\n/*********************************************************************/\n\n#define ErbRequestTypeQuerySMF                \"SMF\"\n#define ErbRequestTypeQueryRMF                \"RMF\"\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBDSQRY / ERBDSREC / ERB3XDRS / ERB2XDGS parameter typedefs      */\n/*                                                                   */\n/*********************************************************************/\n\ntypedef unsigned long int ALET;\n\ntypedef char             *AnswerArea;\n\ntypedef AnswerArea       *AnswerAreaAddress;\n\ntypedef char              RequestType\u00c43\u00dc;\n\ntypedef  struct \u00e4\n   char                   Year\u00c44\u00dc;\n   char                   Month\u00c42\u00dc;\n   char                   Day\u00c42\u00dc;\n   char                   Hour\u00c42\u00dc;\n   char                   Minute\u00c42\u00dc;\n   char                   Second\u00c42\u00dc;\n\u00fc                         YYYYMMDDHHMMSS;\n\ntypedef char              DateAndTime\u00c414\u00dc;\n\ntypedef char              RecordTypeInfo\u00c47\u00dc;\n\ntypedef  struct \u00e4\n   unsigned short int     RecType;\n   unsigned short int     SubType;\n\u00fc                         RecordType;\n\ntypedef  struct \u00e4\n   unsigned long int      RecordTypeListLength;\n   RecordType             RecordTypes\u00c4256\u00dc;            /* See note 1 */\n\u00fc                         RecordTypeList;\n\ntypedef char              SystemNameInfo\u00c47\u00dc;\n\ntypedef char              SystemName\u00c44\u00dc;\n\ntypedef  struct \u00e4\n   unsigned long int      SystemNameListLength;\n   SystemName             SystemNames\u00c4256\u00dc;            /* See note 1 */\n\u00fc                         SystemNameList;\n\ntypedef char              RecordToken\u00c48\u00dc;\n\ntypedef  struct \u00e4\n   unsigned long int      RecordTokenListLength;\n   RecordToken            RecordTokens\u00c41024\u00dc;          /* See note 1 */\n\u00fc                         RecordTokenList;\n\ntypedef char              DataFormat\u00c43\u00dc;\n\ntypedef  struct \u00e4\n   DateAndTime            RangeBeg;\n   DateAndTime            RangeEnd;\n   DataFormat             CombinedSOS;\n   DataFormat             CompressedSOS;\n   char                   Reserved\u00c4222\u00dc;               /* See note 1 */\n\u00fc                         DataRetrievalParm;\n\ntypedef unsigned long int DataRetrievalPLen;\n\ntypedef  struct \u00e4\n   unsigned short int     RecordType;\n   unsigned short int     RecordSubType;\n   char                   Reserved\u00c4252\u00dc;               /* See note 1 */\n\u00fc                         DataGatheringParm;\n\ntypedef unsigned long int DataGatheringPLen;\n\ntypedef char              ExitName\u00c48\u00dc;\n\ntypedef char              ExitParm\u00c4256\u00dc;\n\ntypedef unsigned long int ExitParmLength;\n\n/*********************************************************************/\n/*                                                                   */\n/* Note 1: The \"C\" Language does not allow arrays of unknown size as */\n/*         members of a structure. You may define structures similar */\n/*         to the type definitions for RecordTypeList and            */\n/*         SystemNameList and cast the address of this structure to  */\n/*         the corresponding parameter type of the ERBDSQRY service. */\n/*                                                                   */\n/*********************************************************************/\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBDSQRY / ERBDSREC / ERB3XDRS / ERB2XDGS function addr typedefs  */\n/*                                                                   */\n/*********************************************************************/\n\nISIS_EXT_ASM typedef void (* ERBDSQRY_Addr)(\n                          AnswerAreaAddress *QueryAnswerAreaAddress,\n                          ALET              *QueryAnswerAreaALET,\n                          unsigned long int *QueryAnswerAreaLength,\n                          RequestType       *QueryRequestType,\n                          DateAndTime       *QueryIntervalStartTime,\n                          DateAndTime       *QueryIntervalEndTime,\n                          RecordTypeInfo    *QueryRecordTypeInfo,\n                          RecordTypeList    *QueryRecordTypeList,\n                          SystemNameInfo    *QuerySystemNameInfo,\n                          SystemNameList    *QuerySystemNameList,\n                          unsigned long int *QueryTimeOut,\n                          unsigned long int *QueryReturnCode,\n                          unsigned long int *QueryReasonCode );\n\nISIS_EXT_ASM typedef void (* ERBDSREC_Addr)(\n                          AnswerAreaAddress *SMFRecAnswerAreaAddress,\n                          ALET              *SMFRecAnswerAreaALET,\n                          unsigned long int *SMFRecAnswerAreaLength,\n                          RecordTokenList   *SMFRecRecordTokenList,\n                          unsigned long int *SMFRecTimeOut,\n                          unsigned long int *SMFRecReturnCode,\n                          unsigned long int *SMFRecReasonCode );\n\nISIS_EXT_ASM typedef void (* ERB3XDRS_Addr)(\n                          AnswerAreaAddress *MonIIIAnswerAreaAddress,\n                          ALET              *MonIIIAnswerAreaALET,\n                          unsigned long int *MonIIIAnswerAreaLength,\n                          SystemName        *MonIIISystemName,\n                          DataRetrievalParm *MonIIIDataRetrievalParm,\n                          DataRetrievalPLen *MonIIIDataRetrievalPLen,\n                          ExitName          *MonIIIExitName,\n                          ExitParm           MonIIIExitParm,\n                          ExitParmLength    *MonIIIExitParmLength,\n                          unsigned long int *MonIIITimeOut,\n                          unsigned long int *MonIIIReturnCode,\n                          unsigned long int *MonIIIReasonCode );\n\nISIS_EXT_ASM typedef void (* ERB2XDGS_Addr)(\n                          AnswerAreaAddress *MonIIAnswerAreaAddress,\n                          ALET              *MonIIAnswerAreaALET,\n                          unsigned long int *MonIIAnswerAreaLength,\n                          SystemName        *MonIISystemName,\n                          DataGatheringParm *MonIIDataGatheringParm,\n                          DataGatheringPLen *MonIIDataGatheringPLen,\n                          ExitName          *MonIIExitName,\n                          ExitParm           MonIIExitParm,\n                          ExitParmLength    *MonIIExitParmLength,\n                          unsigned long int *MonIITimeOut,\n                          unsigned long int *MonIIReturnCode,\n                          unsigned long int *MonIIReasonCode );\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBDSQRY / ERBDSREC / ERB3XDRS return code constants              */\n/*                                                                   */\n/*********************************************************************/\n\n#define ErbRetCodeSuccessful                      0\n#define ErbRetCodeInformation                     4\n#define ErbRetCodeWarning                         8\n#define ErbRetCodeError                          12\n#define ErbRetCodeSevereError                    16\n#define ErbRetCodeUnrecoverableError             20\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBDSQRY / ERBDSREC / ERB3XDRS reason code constants              */\n/*                                                                   */\n/*********************************************************************/\n\n#define ErbRsnCodeSuccessful                      0\n\n#define ErbRsnCodeChangeOfIPS                     4\n\n#define ErbRsnCodeNoRMF                           0\n#define ErbRsnCodePartialData                     8\n#define ErbRsnCodeVsamError                       9\n#define ErbRsnCodeWlmSwitch                      13\n#define ErbRsnCodeCycleTimeChange                14\n#define ErbRsnCodeIPL                            15\n#define ErbRsnCodeTimeOut                        30\n#define ErbRsnCodeNoSuchRecord                   31\n#define ErbRsnCodeAreaTooSmall                   70\n\n#define ErbRsnCodeNoRMF                           0\n#define ErbRsnCodeNoSystem                        1\n#define ErbRsnCodeNoData                          8\n#define ErbRsnCodeVsamError                       9\n#define ErbRsnCodeNoSosDataAvailable             16\n#define ErbRsnCodeNoDataGatherer                 17\n#define ErbRsnCodeDataSetUnusable1               18\n#define ErbRsnCodeDataSetUnusable2               19\n#define ErbRsnCodeTooManyReporters               20\n#define ErbRsnCodeBufferRetrieval                21\n#define ErbRsnCodeBufferEmpty                    22\n#define ErbRsnCodeNoStorage                      23\n#define ErbRsnCodeTimeOut                        30\n#define ErbRsnCodeNoSmfDataAvailable             36\n#define ErbRsnCodeNoSmfDataBuffer                37\n#define ErbRsnCodeAreaTooSmall                   70\n\n#define ErbRsnCodeBadFunctionCode                 0\n#define ErbRsnCodeBadRequestType                 41\n#define ErbRsnCodeBadDateTime                    42\n#define ErbRsnCodeBadRtyInfo                     43\n#define ErbRsnCodeBadSidInfo                     44\n#define ErbRsnCodeBadDataFormat                  45\n#define ErbRsnCodeBadRtyList                     53\n#define ErbRsnCodeBadSidList                     54\n#define ErbRsnCodeBadInterval                    55\n#define ErbRsnCodeRtyListEmpty                   56\n#define ErbRsnCodeSidListEmpty                   57\n#define ErbRsnCodeTokListEmpty                   58\n#define ErbRsnCodeAccessFailed                   60\n#define ErbRsnCodeBadALET                        61\n#define ErbRsnCodeAreaMuchTooSmall               70\n#define ErbRsnCodeNotAuthorized                  80\n#define ErbRsnCodeNotInTaskMode                  81\n#define ErbRsnCodeNotEnabled                     82\n#define ErbRsnCodeNotUnlocked                    83\n#define ErbRsnCodeServiceError                   90\n#define ErbRsnCodeServiceLoadError               91\n#define ErbRsnCodeServiceExitError               92\n\n#define ErbRsnCodeUnrecoverableError              0\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBSMFI return code constants                                     */\n/*                                                                   */\n/*********************************************************************/\n\n#define ErbRetCodeMIISuccessful                   0\n#define ErbRetCodeMIISyntaxError1                 4\n#define ErbRetCodeMIIEntryCodeError               8\n#define ErbRetCodeMIINoDataAvailable             16\n#define ErbRetCodeMIIESTAEFailed                 20\n#define ErbRetCodeMIISyntaxError2                24\n#define ErbRetCodeMIIAnswerAreaTooSmall1         28\n#define ErbRetCodeMIIMonitorINotActive           32\n#define ErbRetCodeMIIMonitorIIntervalEnded       36\n#define ErbRetCodeMIIDataUnavailableSTCPS        40\n#define ErbRetCodeMIIDataUnavailableGoalMode     44\n#define ErbRetCodeMIINoTransactionDataAvailable  48\n#define ErbRetCodeMIIRecordTypeOrSubtypeInvalid 100\n#define ErbRetCodeMIIAnswerAreaTooSmall2        104\n#define ErbRetCodeMIIRequestTypeInvalid         108\n\n/*********************************************************************/\n/*                                                                   */\n/* ERBDSQRY / ERBDSREC / ERB3XDRS / ERB2XDGS answer area typedefs    */\n/*                                                                   */\n/*********************************************************************/\n\ntypedef  struct \u00e4\n   char                   AnswerAreaAcronym\u00c44\u00dc;\n   unsigned long int      AnswerAreaVersion;\n   unsigned long int      AnswerAreaLength;\n   unsigned long int      AnswerAreaTotalLength;\n   char                   SysplexName\u00c48\u00dc;\n   unsigned long int      SystemListOffset;\n   unsigned long int      SystemListEntryLength;\n   unsigned long int      SystemListEntryNumber;\n   unsigned long int      DataOffset;\n   unsigned long int      DataEntryLength;\n   unsigned long int      DataEntryNumber;\n\u00fc                         AnswerAreaHeader;\n\ntypedef unsigned          Bit;\n\ntypedef  struct \u00e4\n   char                   MVSSystemName\u00c48\u00dc;\n   char                   SMFSystemID\u00c44\u00dc;\n   struct \u00e4\n      Bit                 SysplexDataServer: 1;\n      Bit                 SMFDataBuffer:     1;\n      Bit                 MonitorIII:        1;\n      Bit                 :                 29;\n   \u00fc                      RMF;\n\u00fc                         SystemListEntry;\n\ntypedef  struct \u00e4\n   unsigned short int     SMFRecordLength;\n   char                   SMFRecordSegmentDescriptor\u00c42\u00dc;\n   char                   SMFRecordFlags\u00c41\u00dc;\n   char                   SMFRecordType\u00c41\u00dc;\n   char                   SMFRecordTime\u00c44\u00dc;\n   char                   SMFRecordDate\u00c44\u00dc;\n   char                   SMFRecordSystemId\u00c44\u00dc;\n   char                   SMFRecordSubsystemId\u00c44\u00dc;\n   unsigned short int     SMFRecordSubType;\n\u00fc                         SMFHeader;\n\ntypedef  struct \u00e4\n   char                   RMFIntervalStartDate\u00c44\u00dc;\n   char                   RMFIntervalStartTime\u00c44\u00dc;\n   char                   RMFActualIntervalLength\u00c44\u00dc;\n   unsigned short int     RMFOriginalIntervalLength;\n   unsigned short int     RMFIntervalSynchronization;\n   char                   RMFOffsetGMTtoLocal\u00c48\u00dc;\n   char                   RMFProjectedIntervalEnd\u00c48\u00dc;\n\u00fc                         RMFPSData;\n\ntypedef  struct \u00e4\n   char                   RMFRecordToken\u00c48\u00dc;\n   SMFHeader              SMFRecordHeader;\n   RMFPSData              RMFProdSectData;\n\u00fc                         DirectoryEntry;\n\ntypedef  struct \u00e4\n   unsigned long int      RecordDataLength;\n   unsigned long int      RecordHeaderLength;\n   unsigned long int      RecordReturnCode;\n   char                   reserved1\u00c44\u00dc;\n   char                   RMFRecordToken\u00c48\u00dc;\n\u00fc                         RecordDataEntry;\n\ntypedef  struct \u00e4\n   unsigned long int      Monitor3DataLength;\n   unsigned long int      Monitor3HeaderLength;\n   unsigned long int      Monitor3DataRetrievalReturnCode;\n   unsigned long int      Monitor3DataRetrievalReasonCode;\n   char                   Monitor3DataGathererVersion\u00c43\u00dc;\n   char                   reserved1\u00c45\u00dc;\n   char                   Monitor3DataGathererSystemId\u00c44\u00dc;\n   unsigned long int      Monitor3DataGathererMintimeOption;\n   unsigned long int      Monitor3DataNumberOfSamples;\n   unsigned long int      Monitor3DataActualRangeLength;\n   DateAndTime            Monitor3DataActualRangeStartTime;\n   DateAndTime            Monitor3DataActualRangeEndTime;\n   char                   Monitor3DataExitCompletionCode\u00c44\u00dc;\n   char                   Monitor3DataExitReasonCode\u00c48\u00dc;\n\u00fc                         Monitor3DataEntry;\n\ntypedef  struct \u00e4\n   unsigned long int      Monitor2DataLength;\n   unsigned long int      Monitor2HeaderLength;\n   unsigned long int      Monitor2DataGatheringReturnCode;\n   unsigned long int      Monitor2DataGatheringReasonCode;\n   unsigned long int      Monitor2DataSystemCpuUtilization;\n   unsigned long int      Monitor2DataSystemPagingRate;\n   char                   Monitor2DataExitCompletionCode\u00c44\u00dc;\n   char                   Monitor2DataExitReasonCode\u00c48\u00dc;\n   char                   reserved1\u00c44\u00dc;\n\u00fc                         Monitor2DataEntry;\n\n#pragma pack(reset)\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ERRTEXT": {"ttr": 8435, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--------------------------------------------------------------------+\n|                                                                     |\n| ErrtexT Header File                                                 |\n|                                                                     |\n+--------------------------------------------------------------------*/\n#ifndef _ERRTEXT\n#define _ERRTEXT\n\n#include <stdlib.h>\n#include <string.h>\n#ifdef __SASC__\n#include <dynam.h>\n#endif\n\n#ifndef Message\n#define Message Error\n#endif\n\n\n/* structure table for the used ENTRY     panels                      */\nenum FLAG_VALUE{FLAG_TEXT = 5, FLAG_IO = 4};\n\ntypedef   struct  ENTRY\n  {\n    char * name     ;\n    char flag       ;\n    int  xcoord     ;\n    int  ycoord     ;\n    int  length     ;\n    char attrib     ;\n    int  access     ;\n    char fieldtype  ;\n    char align      ;\n    char caps       ;\n    char * defvalue ;\n  }\n  entry               ;\n\n\n/* the HELP and LIST panels and the messages need no structure defin's*/\n/* structure table for the used SELECTION panels                      */\n\ntypedef   struct  SELECTION\n  {\n    char * line     ;\n    int  access     ;\n  }\n  selection           ;\nstruct et\n{char *   cid ;\n char * * ett;} ;\n\n\n\n#define  tCHAR   \"ErrorChar\"\n#define  tBIN    \"ErrorBin\"\n#define  tHEX    \"ErrorHex\"\n#define  tDUMP4  \"ErrorDump4\"\n#define  tDUMP8  \"ErrorDump8\"\n#define  tDUMP12 \"ErrorDump12\"\n#define  tDUMP16 \"ErrorDump16\"\n\n\n\n\nclass TEXT\n{\nprivate:\n  void * (*fp)();\n  char   language;\n  char   modulname\u00c48\u00dc;\n  void * text ;\n  void init(char * name);\npublic:\n  TEXT(char * name,char lang);\n  TEXT(char * name);\n\n  //???~TEXT(){if (fp) unloadm(fp);}\n  int         MSGTEXT(int id, char * buff,int len);\n  char      * HelpText(char * hid);\n  entry     * EntryText(char * hid);\n  selection * SelectionText(char * hid);\n};\n\nextern TEXT * text;\n\nchar * TextFormat(int number , ...);\nint      MsgText(int id,char * buffer,int length);\n//int      ErrText(int id, char * buff,int len);\nint      Error(int ErroId, ...);\nchar *   GetErrorText();\n\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EUNLD": {"ttr": 8233, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eunld \u00e4\n  short int      eunlen;     /* LENGTH OF PARAMETER LIST             */\n  unsigned char  eunflgs;    /* UNLOAD EVENT FLAGS (BYTE 1)          */\n  unsigned char  _filler1;   /* UNLOAD EVENT FLAGS (BYTE 2)          */\n  int            eunucbp;    /* ADDRESS OF UCB                       */\n  int            eunlspcp;   /* ADDRESS OF BUFFER RETURNED BY LSPACE */\n  unsigned char  eunvols\u00c46\u00dc; /* VOLSER OF VOLUME TO BE UNLOADED      */\n  unsigned char  eunrsvd\u00c42\u00dc; /* -- RESERVED --                       */\n  \u00fc;\n\n/* Values for field \"eunflgs\" */\n#define eunpriv  0x80 /* VOLUME IS PRIVATE IF ON         */\n#define eunpub   0x40 /* VOLUME IS PUBLIC IF ON          */\n#define eunstor  0x20 /* VOLUME IS STORAGE IF ON         */\n#define eunlspac 0x10 /* LSPACE BUFFER IS PRESENT IF ON  */\n\n/* Values for field \"eunrsvd\" */\n#define eunllen  0x14 /* LENGTH OF UNLOAD PARAMETER LIST */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EVARY": {"ttr": 7891, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct evary \u00e4\n  int            evaucba;      /* UCB ADDRESS FOR DEVICE               */\n  short int      evarsv4;      /* RESERVED                    @G860P2J */\n  unsigned char  evarsv5;      /* RESERVED                    @G860P2J */\n  unsigned char  evarsv1;      /* RESERVED                             */\n  unsigned char  evafunc;      /* FUNCTION BYTE                        */\n  unsigned char  evaflgs;      /* REQUEST TYPE FLAG                    */\n  short int      evalen;       /* LENGTH OF VARY PARAMETER LIST        */\n  void          *evacscb;      /* POINTER TO CSCB (OPTIONAL)      @D1C */\n  unsigned char  evavolid\u00c46\u00dc;  /* VOLUME SERIAL                   @D2A */\n  unsigned char  evarsv11\u00c42\u00dc;  /* RESERVED                        @D2A */\n  unsigned char  evaconso\u00c44\u00dc;  /* CONSOLE ID, MAY BE ZERO IF NOT       */\n  unsigned char  evacart\u00c48\u00dc;   /* CART, MAY BE ZERO IF NOT AVAILABLE   */\n  unsigned char  evarsv12\u00c420\u00dc; /* RESERVED                        @P1A */\n  \u00fc;\n\n/* Values for field \"evafunc\" */\n#define evarsv8  0x01 /* RESERVED                    @G860P2J */\n#define evavary  0x02 /* VARY REQUESTS                        */\n#define evarsv9  0x03 /* RESERVED                    @G860P2J */\n#define evarsv10 0x04 /* RESERVED                    @G860P2J */\n\n/* Values for field \"evaflgs\" */\n#define evaonli  0x80 /* ONLINE REQUEST                       */\n#define evaofli  0x40 /* OFFLINE REQUEST                      */\n#define evadevc  0x20 /* DEVICE REQUEST                       */\n#define evavalid 0x10 /* VALID FLAG                      @P1C */\n#define evaschg  0x08 /* SMS VOLUME STATUS CHANGE        @01C */\n#define evapnd   0x04 /* PENDING OFFLINE REQUEST         @D1C */\n#define evaforce 0x02 /* OFFLINE FORCE REQUEST - VALID   @P3A */\n#define evafrsv3 0x01 /* RESERVED                             */\n\n/* Values for field \"evarsv12\" */\n#define evallen  0x38 /* LENGTH OF VARY PARAMETER LIST        */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EZBCTHDR": {"ttr": 8457, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct gtcntl \u00e4\n  unsigned char  gtsqnum;     /* ONE BYTE SEQUENCE NUMBER  */\n  unsigned char  gtsflg;      /* FLAG BYTE                 */\n  short int      gtslrcd;     /* LOST RECORD COUNT         */\n  unsigned char  gtsrect;     /* RECORD TYPE (DEVICE TYPE) */\n  unsigned char  gtstlen\u00c43\u00dc;  /* TOTAL LENGTH OF IP PACKET */\n  struct \u00e4\n    unsigned char  _gtslnknm\u00c48\u00dc; /* FIRST 8 CHARACTERS */\n    unsigned char  _gtslnkbk\u00c48\u00dc; /* LAST 8 CHARACTERS  */\n    \u00fc gtslknm;\n  unsigned char  gtssipad\u00c44\u00dc; /* SOURCE IP ADDRESS         */\n  unsigned char  gtsdipad\u00c44\u00dc; /* DESTINATION IP ADDRESS    */\n  struct \u00e4\n    unsigned char  _gtstod1\u00c44\u00dc; /* MOST SIGNIFICANT WORD  */\n    unsigned char  _gtstod2\u00c44\u00dc; /* LEAST SIGNIFICANT WORD */\n    \u00fc gtstod;\n  short int      gtssport;    /* SOURCE PORT NUMBER        */\n  short int      gtsdport;    /* DESTINATION PORT NUMBER   */\n  int            gtstcb;      /* ADDRESS OF MVS TCB        */\n  short int      gtsasid;     /* ASID                      */\n  short int      gtsnuse;     /* Unused - available        */\n  \u00fc;\n\n#define gtslnknm gtslknm._gtslnknm\n#define gtslnkbk gtslknm._gtslnkbk\n#define gtstod1  gtstod._gtstod1\n#define gtstod2  gtstod._gtstod2\n\n/* Values for field \"gtsflg\" */\n#define gtspkt  0x80 /* PACKET TRACE REQUEST         */\n#define gtsx25  0x40 /* X.25 DATA TRACE REQUEST      */\n#define gtsdat  0x20 /* DATA TRACE REQUEST           */\n#define gtsvers 0x10 /* VERSION INFORMATION 0 or 1   */\n#define gtspdu  0x08 /* Data from multiple PDUs      */\n#define gtsadj  0x04 /* Record size adjust by +1     */\n#define gtsabbr 0x02 /* IP PKT WAS ABBREVIATED       */\n#define gtspout 0x01 /* IP PKT WAS SENT = 1 RCVD = 0 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EZBYPTHA": {"ttr": 7985, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pthdr_t \u00e4\n  union \u00e4\n    struct \u00e4\n      short int      _pth_len;       /* Length of this header      00 */\n      char           _pth_seqnum;    /* One byte sequence number   02 */\n      unsigned char  _pth_flag;      /* Flag byte                  03 */\n      char           _pth_devty;     /* Device Type                04 */\n      int            _pth_tlen : 24; /* Total Trace data length    05 */\n      struct \u00e4\n        unsigned char  _pth_jobnm\u00c48\u00dc; /* Job Name (Data trace only) 08  */\n        char           _pth_dtdomain; /* socket domain         10 @E2C  */\n        char           _pth_dttype;   /* socket type           11 @E1A  */\n        char           _pth_dtproto;  /* socket protocol       12 @E1A  */\n        char           _pth_dtstate;  /* API data flow state    13 @H2A */\n        unsigned char  _filler1\u00c44\u00dc;   /* Last 4 characters      14 @H2C */\n        \u00fc pth_infname;\n      unsigned char  _pth_time\u00c48\u00dc;   /* Time of Day timestamp      18 */\n      struct \u00e4\n        unsigned char  _pth_src\u00c416\u00dc; /* Source IP Address          20 */\n        unsigned char  _pth_dst\u00c416\u00dc; /* Destination IP Address     30 */\n        \u00fc pth_ipaddrs;\n      short int      _pth_sport;     /* Source port number         40 */\n      short int      _pth_dport;     /* Destination port number    42 */\n      int            _pth_trcnt;     /* Trace sequence number      44 */\n      void          *_pth_tcb;       /* TCB address                48 */\n      short int      _pth_asid;      /* ASID                       4C */\n      unsigned char  _filler2\u00c410\u00dc;\n      \u00fc pth_hdr;\n    struct \u00e4\n      unsigned char  _filler3\u00c472\u00dc;\n      short int      _pth_seqnr;    /* Trace sequence number  48 @X3A */\n      short int      _pth_vlan;     /* Generated Vlan Id      4A @X3A */\n      unsigned char  _pth_ntaflag;  /* 4C @X3A                        */\n      unsigned char  _filler4;      /* 4D @X3A                        */\n      short int      _pth_lost;     /* Lost record count          4E  */\n      short int      _pth_linklen;  /* Link Header Length     50 @R1C */\n      short int      _pth_plen;     /* Payload length         52 @Q3C */\n      struct \u00e4\n        struct \u00e4\n          int            _pth_cid; /* Communication Id(PKTD) 54 @R1A */\n          \u00fc pth_deva;\n        \u00fc pth_infix;\n      \u00fc _pthdr_t_struct1;\n    \u00fc _pthdr_t_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _pth_endhdr;  /* End of basic header    54 @F1A */\n      unsigned char  _filler5\u00c43\u00dc;\n      \u00fc _pthdr_t_struct2;\n    struct \u00e4\n      short int      _pth_droprsn;   /* Drop reason code       58 @X3C */\n      short int      _pth_offseglen; /* Length of each segment 5A @W1A */\n      \u00fc pth_tcpsegoff;\n    \u00fc _pthdr_t_union2;\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _pth_endext; /* End of extension       5C @F1A */\n      \u00fc pth_data;\n    \u00fc pth_linkhdr;\n  \u00fc;\n\n#define pth_len       _pthdr_t_union1.pth_hdr._pth_len\n#define pth_seqnum    _pthdr_t_union1.pth_hdr._pth_seqnum\n#define pth_flag      _pthdr_t_union1.pth_hdr._pth_flag\n#define pth_devty     _pthdr_t_union1.pth_hdr._pth_devty\n#define pth_tlen      _pthdr_t_union1.pth_hdr._pth_tlen\n#define pth_jobnm     _pthdr_t_union1.pth_hdr.pth_infname._pth_jobnm\n#define pth_dtdomain  _pthdr_t_union1.pth_hdr.pth_infname._pth_dtdomain\n#define pth_dttype    _pthdr_t_union1.pth_hdr.pth_infname._pth_dttype\n#define pth_dtproto   _pthdr_t_union1.pth_hdr.pth_infname._pth_dtproto\n#define pth_dtstate   _pthdr_t_union1.pth_hdr.pth_infname._pth_dtstate\n#define pth_time      _pthdr_t_union1.pth_hdr._pth_time\n#define pth_src       _pthdr_t_union1.pth_hdr.pth_ipaddrs._pth_src\n#define pth_dst       _pthdr_t_union1.pth_hdr.pth_ipaddrs._pth_dst\n#define pth_sport     _pthdr_t_union1.pth_hdr._pth_sport\n#define pth_dport     _pthdr_t_union1.pth_hdr._pth_dport\n#define pth_trcnt     _pthdr_t_union1.pth_hdr._pth_trcnt\n#define pth_tcb       _pthdr_t_union1.pth_hdr._pth_tcb\n#define pth_asid      _pthdr_t_union1.pth_hdr._pth_asid\n#define pth_seqnr     _pthdr_t_union1._pthdr_t_struct1._pth_seqnr\n#define pth_vlan      _pthdr_t_union1._pthdr_t_struct1._pth_vlan\n#define pth_ntaflag   _pthdr_t_union1._pthdr_t_struct1._pth_ntaflag\n#define pth_lost      _pthdr_t_union1._pthdr_t_struct1._pth_lost\n#define pth_linklen   _pthdr_t_union1._pthdr_t_struct1._pth_linklen\n#define pth_plen      _pthdr_t_union1._pthdr_t_struct1._pth_plen\n#define pth_cid       _pthdr_t_union1._pthdr_t_struct1.pth_infix.pth_deva._pth_cid\n#define pth_endhdr    _pthdr_t_union2._pthdr_t_struct2._pth_endhdr\n#define pth_droprsn   _pthdr_t_union2.pth_tcpsegoff._pth_droprsn\n#define pth_offseglen _pthdr_t_union2.pth_tcpsegoff._pth_offseglen\n#define pth_endext    pth_linkhdr.pth_data._pth_endext\n\n/* Values for field \"pth_dtstate\" */\n#define pth_dtstartinb  6      /* Start inbound            @H2A  */\n#define pth_dtstartoutb 7      /* Start outbound           @H2A  */\n#define pth_dtend       8      /* End                      @H2A  */\n\n/* Values for field \"pth_vlan\" */\n#define pth_vlanpri     0xE000 /* Vlan priority (0-7)      @X3A  */\n#define pth_vlanid      0xFFF  /* Vlan Id (0-4095)         @X3A  */\n\n/* Values for field \"pth_endhdr\" */\n#define pth_hdrssz      0x58   /* Size of basic header   54 @F1A */\n\n/* Values for field \"pth_endext\" */\n#define pth_extsz       0x5C   /* Size of header + extension@F1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "E63R": {"ttr": 8239, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct e63r \u00e4\n  unsigned char  e63rid\u00c44\u00dc;        /* Control block ID                  */\n  char           e63rversion;      /* Version number                    */\n  unsigned char  e63rsource;       /* Source of this ENF request        */\n  short int      e63rdevnum;       /* Device number of the device that  */\n  unsigned char  e63rtokenned\u00c432\u00dc; /* Token NED of the subsystem for    */\n  char           e63rssid;         /* Subchannel Set ID            @A6A */\n  unsigned char  _filler1\u00c487\u00dc;     /* Available @A6C                    */\n  \u00fc;\n\n/* Values for field \"e63rsource\" */\n#define e63rsourceunk 0x00 /* Source is unknown                 */\n#define e63rsourceerp 0x01 /* Error Recovery Procedures (ERP)   */\n#define e63rsourcenop 0x02 /* No operational paths processing   */\n#define e63rsourcebox 0x03 /* Device box processing             */\n#define e63rsourceeos 0x05 /* Device end-of-sense (EOS) exit    */\n#define e63rsourceiot 0x06 /* IO Timing (IOT) processing   @02A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "FILESYS": {"ttr": 7935, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_FILESYS\n#define INCLUDE_FILESYS\n#include \"stdio.hpp\"\n#include \"filevsm.hpp\"\n#include \"mvsbase.hpp\"\n#include \"buffsys.hpp\"\n#include \"mchain.hpp\"\n\n#define STDIN    \"SYSIN\"\n#define STDOUT   \"SYSPRINT\"\n#define STDERR   \"SYSTERM\"\n\nextern char * _stdin ;\nextern char * _stdout;\nextern char * _stderr;\n\nextern FILE*  stdin;\nextern FILE*  stdout;\nextern FILE*  stderr;\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n\n\nclass rFILE: public chainE,\n             public KSDS\n\u00e4\nprivate:\npublic:\n  rFILE(const char * = \"CFSSTD\");\n  \u00dfrFILE();\n\u00fc;\n\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n\nclass rFILESYSTEM: public mCHAIN\n\u00e4\nprivate:\n  CHAINITER * iter;\n  int counter;\npublic:\n  rFILESYSTEM(int);\n  \u00dfrFILESYSTEM();\n  rFILE * get(const char *);\n\u00fc;\n\nextern rFILESYSTEM *_rFILESYSTEM;\nclass  FILESYSTEM;\nextern FILESYSTEM *_FILESYSTEM;\n\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n\nconst int MAXddname   = 256;\nconst int MAXmember   = 256;\nconst int MAXfilewait = 30;\nenum FILE_TYPE \u00e4 FILE_QSAM , FILE_VSAM \u00fc;\n\nclass FILE: public chainE,\n      public mERROR\n\u00e4\nprivate:\n   rFILE * rfile;\n   RBUFF * rb;\n   LBUFF * lb;\n\n   STRING *filename;              // filename\n   STRING *ddname;                // rFILE name\n   STRING *member;                // key\n   STRING *mode;                  // file mode ( r w a b )\n   STRING *am;                    // access ( seq , rel , term )\n   STRING *amparms;               // amparms - DCB\n\n   char cflag;                   // capablilty flags\n   char props;                   // properity flags\n   char state;                   // file state\n   char layout;                  // file layout;\n   char enq;                     // enq flag\n   char recordtype;              // record type flag\n   fattrib attrib;               // fattrib\n\n   static int filecount;\n   int filenumber;\n\n   char UngetcFlag;              // if ungetc set\n   char UngetcChar;              // ungetc char\n\n   int conuter;\n   int errorcode;\n   int actualoffset;            // actual offset for unix io\n\n  FILE_TYPE    file_type;       // type flag\n  void *  qsam_file;            // if qsam FILE *\n  void setNames(const char *);\n  void setUnix(int );\n  void setOption(const char *, const char *, const char *);\n  void setBasics();\n  void initFILESYS();\n  int  Enq();\n  int  Deq();\npublic:\n  virtual \u00dfFILE();\n  FILE(const char * FileName, int UnixFlags);\n  FILE(const char * FileName, const char * Mode,\n               const char * Am = \"seq\",\n               const char * Amparms = \"\");\n\n// return values\n\n  char * getFileName()\u00e4return (char *)(* filename); \u00fc\n  char * getMember()\u00e4return (char*)(* member); \u00fc\n  void   setMember(const STRING & m)\u00e4 *member = m; \u00fc\n\n  int    getFileNumber()\u00e4return filenumber; \u00fc\n  rFILE* getrFile()\u00e4return rfile;\u00fc\n  RBUFF* getRbuff()\u00e4return rb;\u00fc\n  LBUFF* getLbuff()\u00e4return lb;\u00fc\n  STRING getKey()\u00e4return *member;\u00fc\n\n  char& State()\u00e4 return state;\u00fc\n  char& Cflag()\u00e4 return cflag;\u00fc\n  char& Props()\u00e4 return props;\u00fc\n  char& Layout()\u00e4 return layout;\u00fc\n  fattrib * Attrib()\u00e4 return &attrib;\u00fc\n  int iserror();\n  void markerror(int =0);\n  int isOk(char,char=__EOF);\n  int isVSAM()\u00e4 return (file_type == FILE_VSAM ) ; \u00fc\n  int isQSAM()\u00e4 return (file_type == FILE_QSAM) ; \u00fc\n  int isRecordType()\u00e4return(recordtype);\u00fc\n  void   setFile(FILE * f)\u00e4 qsam_file = f;\u00fc\n  FILE * getFile()\u00e4 return (FILE *)qsam_file ; \u00fc\n\n// called methods to realize i/O\n\n   int getc();                    // get the next character\n   int ungetc(int );              // storec back the next character\n   int putc(char);                // put out the next char\n   int gets(char *,size_t);       // get string\n   int puts(char *,size_t);       // put string\n   int getss(char * ,size_t);     //\n   int putss(char * , char);      // second falg to indicate nl\n   long getPos();                 //\n   long setPos(long,int);         // set pos according req type\n   int getPos(fpos_t *);          //\n   int setPos(fpos_t *);          //\n   int Out();\n   int In();\n\n   int findNext();\n\n   int flush();\n   int close();\n   int del();\n   int copy(FILE *f)\u00e4return  0;\u00fc        // ||| not yet|||\n\u00fc;\n\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n//---------------------------------------------------------------------\n\nclass FILESYSTEM: public mCHAIN\n\u00e4\nprivate:\n   CHAINITER  * iter;\n      int    counter;\n      FILE * stdin;\n      FILE * stdout;\n      FILE * stderr;\n      char * termid;\n      char * userid;\npublic:\n      FILESYSTEM(const char * , const char * , const char * );\n      \u00dfFILESYSTEM();\n      FILE *get(int FileNumber);\n      FILE *get(const char * FileName);\n      char *getTerminalId()\u00e4 return termid;\u00fc\n      char *getUserId()\u00e4 return userid;\u00fc\n\n      FILE * getTmpFile()\u00e4 return new FILE(getTmpNam((char*)0),\"w\"); \u00fc\n      char * getTmpNam(char * c)\u00e4 return \"tempname\";\u00fc\n\u00fc;\n\nclass DataSetName : public chainE\n\u00e4\nprivate:\n  FILE_TYPE    file_type;       // type flag\npublic:\n  DataSetName(char *,FILE_TYPE);\n  int isQsam()\u00e4 return ( file_type == FILE_QSAM ) ; \u00fc\n  \u00dfDataSetName()\u00e4\u00fc\n\u00fc;\n\nclass DataSetNames:public SORTEDmCHAIN\n\u00e4\nprivate:\n CHAINITER * iter;\npublic:\n DataSetNames();\n \u00dfDataSetNames();\n DataSetName * get(char *);\n\u00fc;\n\nextern DataSetNames datasetnames;\nFILE_TYPE getFileType(char *);\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FILETYPE": {"ttr": 8359, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/filetype.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   definition of enum FILE_TYPE\n*   moved from various headers to this file in order to\n*   avoid redundancy and circular header dependencies\n*******************************************************************************/\n#ifndef __FILETYPE_HPP__\n#define __FILETYPE_HPP__\nenum FILE_TYPE \u00e4 FILE_UNDEFINED, FILE_QSAM , FILE_VSAM \u00fc;\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FILEVSM": {"ttr": 8275, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _FILEVSM\n#define _FILEVSM\n#include \"mvsbase.hpp\"\n#include \"stdio.hpp\"\n\n#if ISIS_PF_HOST_IBM\n  #ifndef K_exact\n    #define K_exact     1\n    #define K_noupdate  2\n  #endif\n#endif\n\nstruct DCB_t;\nstruct Afpds;\n\n\n#if ISIS_PF_HOST_IBM\n#ifndef  FILE_CONST_STRUC_DEFINED\n#define  FILE_CONST_STRUC_DEFINED  1\n\nstruct fattrib \u00e4     /* file attributes structure */\n   unsigned long props;         /* file properties       */\n\n#define _Ftext      0x00000080    /* file is a text stream */\n#define _Fcommit    0x00000040    /* file committed upon close */\n#define _Ftrunc     0x00000020    /* file truncates on output */\n#define _Frelative  0x00000010    /* file positions are RBA's */\n#define _Fappend    0x00000008    /* file open in append mode */\n#define _Fterm      0x00000002    /* file is the user's terminal */\n#define _Fprocess   0x00008000    /* file is POSIX process related */\n#define _Fshared    0x00004000    /* file may be shared w/ another\n                                     process */\n#define _Funbuf     0x00002000    /* POSIX unbuffered file */\n#define _Flinebuf   0x00001000    /* POSIX line buffered file */\n#define _Fstream    0x00800000    /* file not divided into records */\n#define _Fspanbuf   0x00400000    /* records may span buffers */\n#define _Ffixed     0x00200000    /* records have fixed size */\n#define _Fprint     0x00100000    /* file opened print=yes */\n#define _Fprintform 0x00080000    /* file has print format */\n#define _Fspanrec   0x00040000    /* physical spanned format */\n#define _Fzerolen   0x00020000    /* zero-length records possible */\n#define _Fkeyed     0x00010000    /* file accessed via keys */\n#define _Fphyskey   0x80000000    /* keys are physically recorded */\n#define _Fdupkey    0x40000000    /* duplicate keys allowed */\n#define _Finexact   0x20000000    /* inexact searches allowed */\n#define _Fgeneric   0x10000000    /* generic searches allowed */\n\n   unsigned short abilities;    /* how file can be used  */\n\n#define _Fcan_read    0x0080      /* file can be read */\n#define _Fcan_write   0x0040      /* file can be written */\n#define _Fcan_seek    0x0020      /* file can be positioned */\n#define _Fcan_rewind  0x0010      /* file can be rewound */\n#define _Fcan_skend   0x0008      /* file supports seek to eof */\n#define _Fcan_grow    0x0004      /* records can be added to file */\n#define _Fcan_tell    0x0002      /* file supports position inquiry */\n#define _Fcan_search  0x8000      /* file supports search-by-key */\n#define _Fcan_delete  0x4000      /* file supports record deletion */\n#define _Fcan_setbuf  0x0100      /* file supports setvbuf */\n\n   unsigned short reclen;       /* maximum record length */\n                                /* (0 if no limit)       */\n   unsigned short blksize;      /* block size (0 if not  */\n                                /* meaningful)           */\n   unsigned short keylen;       /* key length or 0       */\n   unsigned short keyoff;       /* record offset of key or 0 */\n   char am \u00c45\u00dc ;                /* name of access method */\n\u00fc;\n#endif //FILE_CONST_STRUC_DEFINED\nfattrib * fattr(FILE *);\nvoid print_amrc(char * = 0);\n#endif\ntypedef struct FILEBLOCK\n\u00e4\n  DCB_t    * dcb;                     /* DCB pointer  */\n  FILE     * file;                    /* File block ptr*/\n  fattrib  * fileattrib ;             /* file attribs  */\n  char       FileName\u00c4256\u00dc;           /* File    name */\n  char       Datasetname\u00c4256\u00dc;        /* Dataset Name */\n  char       Member\u00c4256\u00dc;             /* member       */\n  int        Status;                  /* File Status  */\n  char *     RecordAreaAddress;\n  int        RecordAreaLength;\n  int        RecordTotalLength;\n\n  char       key\u00c4256\u00dc;                /* max 256      */\n  int        keylength;               /* keylength    */\n  int        recordlength;            /* recodlength  */\n\n  int        flag;                    /* VSAM access flag byte */\n  int        browseflag;              /* browse flag           */\n  int        olbflag;                 /* object list browse flag*/\n  int        errno;                   /* error number */\n\n  char       resourcename\u00c48\u00dc;         /* resource name  */\n  char       resourcequalifier\u00c48\u00dc;    /* qualifier      */\n  char       resourcenum\u00c43\u00dc;          /* seq number     */\n  char       resourcetype\u00c43\u00dc;         /* type           */\n\n  int        recordnumber ;           /* requested rec num */\n  char       * recordlist;            /* record list    */\n  char       * recordlast;            /* last in the list */\n  char       * recordactual;          /* actual in the list*/\n  char       recordtype\u00c43\u00dc;           /* actual type    */\n  Afpds   *  recordafp;               /* afp section pointer */\n  fattrib    FileAttrib ;             /* file attribs  */\n  char       ENQname\u00c4256\u00dc;            /* outstanding enq */\n  short      ENQlength ;              /* enq length or 0 */\n\n\u00fc\n\n  FileBlock;\n\nenum BROWSEFLAG \u00e4\nBROWSERESET , BROWSENEXTIN , BROWSENOMORE \u00fc  ;\n\nenum  FILESTATUS \u00e4\n FILERESET , FILEOPEN , FILECLOSED , FILEERROR     \u00fc ;\n\n\nenum RequestType \u00e4\n  NEXT = 0 ,\n  FIRST = 1\n                 \u00fc  ;\n\n\n//\n// KSDS class\n//\n\nconst int KSDS_MAX_RECORDSIZE = 32760 ;\nclass KSDS:public mERROR\n\u00e4\n  public:\n  static int readwrite ;\n  FileBlock fb ;\n  public:\n  KSDS()\u00e4\u00fc\n  KSDS(const char * filename);\n  \u00dfKSDS();\n  void  clearbuff();\n  void  setkey(const char * , int = 0 );\n  void  setdata(const char * ,int );\n  char * get(const char * , int = 0 );\n  char * getupdate(const char * , int = 0);\n  char * startbrowse(const char * , int = 0 );\n  char * getnext(void);\n  int   put(const char * , int = 0 , char * = 0 , int = 0 );\n  int   del(const char * , int = 0);\n  int   unlock(void);\n  int   lengthOfkey()\u00e4 return fb.fileattrib->keylen;\u00fc\n  int   inbuffer(const char * );\n  char * recordaddress()\u00e4return fb.RecordAreaAddress;\u00fc\n  int&  recordlength() \u00e4return fb.recordlength; \u00fc\n\u00fc ;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FILTER": {"ttr": 8161, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct filter \u00e4\n  void          *filter_output;             /* output type                               */\n  unsigned char  filter_type;               /* filter type                               */\n  unsigned char  filter_skip;               /* skip flag                                 */\n  unsigned char  filter_frozen;             /* frozen all                                */\n  unsigned char  _filler1;\n  void          *filter_strta;              /* lower start address                       */\n  void          *filter_enda;               /* lower end address                         */\n  void          *filter_estrta;             /* extended  start address                   */\n  void          *filter_eenda;              /* extended  end address                     */\n  void          *filter_caller_length;      /* caller length                             */\n  unsigned char  filter_caller\u00c432\u00dc;         /* caller mask                               */\n  void          *filter_called_length;      /* caller length                             */\n  unsigned char  filter_called\u00c432\u00dc;         /* called mask                               */\n  unsigned char  filter_action\u00c432\u00dc;         /* action name                               */\n  unsigned char  _filler2\u00c416\u00dc;              /* FDAD, DVTBL                               */\n  void          *_filler3;                  /* KEYLEN, DEVT, TRBAL                       */\n  unsigned char  _filler4;                  /* BUFNO, NUMBER OF BUFFERS                  */\n  int            _filler5 : 24;             /* BUFCB, BUFFER POOL CONTROL BLOCK          */\n  short int      _filler6;                  /* BUFL, BUFFER LENGTH                       */\n  unsigned char  _filler7\u00c42\u00dc;               /* DSORG, DATA SET ORGANIZATION              */\n  void          *_filler8;                  /* IOBAD FOR EXCP OR RESERVED                */\n  unsigned char  _filler9;                  /* BFTEK, BFALN, DCBE INDICATORS             */\n  int            _filler10 : 24;            /* EODAD (END OF DATA ROUTINE ADDRESS)       */\n  unsigned char  _filler11;                 /* RECFM (RECORD FORMAT)                     */\n  int            _filler12 : 24;            /* EXLST (EXIT LIST ADDRESS)                 */\n  unsigned char  _filler13\u00c48\u00dc;              /* DDNAME                                    */\n  unsigned char  _filler14;                 /* OFLGS (OPEN FLAGS)                        */\n  unsigned char  _filler15;                 /* IFLGS (IOS FLAGS)                         */\n  unsigned char  _filler16\u00c42\u00dc;              /* MACR (MACRO FORMAT)                       */\n  unsigned char  _filler17;                 /* OPTCD, OPTION CODES                       */\n  int            _filler18 : 24;            /* CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. */\n  void          *_filler19;                 /* SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   */\n  short int      _filler20;                 /* INTERNAL ACCESS METHOD FLAGS              */\n  short int      _filler21;                 /* BLKSIZE, BLOCK SIZE                       */\n  int            _filler22;                 /* INTERNAL ACCESS METHOD FLAGS              */\n  void          *_filler23;                 /* INTERNAL ACCESS METHOD USE                */\n  void          *_filler24;                 /* EOBAD                                     */\n  void          *_filler25;                 /* RECAD                                     */\n  short int      _filler26;                 /* QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF   */\n  short int      _filler27;                 /* LRECL                                     */\n  unsigned char  _filler28;                 /* EROPT, ERROR OPTION                       */\n  int            _filler29 : 24;            /* CNTRL                                     */\n  short int      _filler30\u00c42\u00dc;              /* RESERVED AND PRECL                        */\n  void          *_filler31;                 /* EOB, INTERNAL ACCESS METHOD FIELD         */\n  void          *filter_filedesc;           /* HFS file descriptor                       */\n  void          *filter_openl;              /* OPEN list form                            */\n  void          *filter_pathlength;         /* path  length                              */\n  unsigned char  filter_pathname\u00c4256\u00dc;      /* pathname                                  */\n  void          *filter_envarlength;        /* envar length                              */\n  void          *filter_envar;              /* envar addr                                */\n  void          *filter_modelength;         /* mode length                               */\n  void          *filter_mode;               /* mode addr                                 */\n  void          *filter_ppid;               /* orig PPID                                 */\n  int            filter_var_epname_i;\n  unsigned char  filter_var_epname\u00c48\u00dc\u00c4128\u00dc;\n  int            filter_var_called_i;\n  unsigned char  filter_var_called\u00c48\u00dc\u00c432\u00dc;\n  int            filter_var_caller_i;\n  unsigned char  filter_var_caller\u00c48\u00dc\u00c432\u00dc;\n  int            filter_var_errno_i;\n  void          *filter_var_errno\u00c48\u00dc;\n  int            filter_var_errno2_i;\n  void          *filter_var_errno2\u00c48\u00dc;\n  int            filter_var_offset_i;\n  void          *filter_var_offset\u00c48\u00dc\u00c42\u00dc;\n  int            filter_var_tcb_i;\n  void          *filter_var_tcb\u00c48\u00dc;\n  int            filter_var_thdid_i;\n  void          *filter_var_thdid\u00c48\u00dc\u00c42\u00dc;\n  void          *filter_ll_index;           /* free entry index                          */\n  unsigned char  filter_ll\u00c424576\u00dc;          /* ll area                                   */\n  unsigned char  _filler32;\n  \u00fc;\n\n/* Values for field \"filter_output\" */\n#define filter_output_none     0        /* no output       */\n#define filter_output_gtf      1        /* GTF output      */\n#define filter_output_dd       2        /* DD name         */\n#define filter_output_hfs      3        /* HFS path        */\n#define filter_output_binary   4        /* output binary   */\n#define filter_output_gtf_full 5        /* GTF full output */\n\n/* Values for field \"filter_type\" */\n#define filter_type_entry      1        /* entry filter    */\n#define filter_type_exit       2        /* exit            */\n#define filter_type_errno      4        /* errno           */\n\n/* Values for field \"filter_ll\" */\n#define filter_length          0x106904 /* filter length   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "FTL": {"ttr": 7977, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ftl \u00e4\n  void          *ftlpstart;     /* profile entry length              */\n  unsigned char  ftlssa\u00c48\u00dc;     /* system alias name                 */\n  unsigned char  ftlsda\u00c48\u00dc;     /* library alias name                */\n  unsigned char  ftlmem\u00c432\u00dc;    /* member name      member name    * */\n  unsigned char  ftlext\u00c48\u00dc;     /* member extension n o t   u s e d* */\n  unsigned char  ftl_ddname\u00c48\u00dc; /* ddname defined                    */\n  unsigned char  ftl_datatype;  /* data type in the profile          */\n  unsigned char  ftl_spec;      /* special resource flag             */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _ftldlbl\u00c464\u00dc;  /* dlbl-name        dsn            * */\n      unsigned char  _filler1\u00c424\u00dc;\n      \u00fc _ftl_struct1;\n    struct \u00e4\n      unsigned char  _ftldsn0\u00c444\u00dc; /* first dsn  */\n      unsigned char  _ftldsn1\u00c444\u00dc; /* second dsn */\n      \u00fc _ftl_struct2;\n    \u00fc _ftl_union1;\n  unsigned char  ftldsn2\u00c444\u00dc;   /* third dsn                         */\n  unsigned char  ftldsn3\u00c444\u00dc;   /* fourth dsn                        */\n  unsigned char  ftldsn4\u00c444\u00dc;   /* fifth dsn                         */\n  unsigned char  ftldsn5\u00c444\u00dc;   /* sixth dsn                         */\n  unsigned char  ftldsn6\u00c444\u00dc;   /* seventh dsn                       */\n  unsigned char  ftldsn7\u00c444\u00dc;   /* eight dsn                         */\n  unsigned char  ftldsn8\u00c444\u00dc;   /* 9. dsn                            */\n  unsigned char  ftldsn9\u00c444\u00dc;   /* 10.dsn                            */\n  unsigned char  ftldsn10\u00c444\u00dc;  /* 11. dsn                           */\n  unsigned char  ftldsn11\u00c444\u00dc;  /* 12. dsn                           */\n  unsigned char  ftldsn12\u00c444\u00dc;  /* 13. dsn                           */\n  unsigned char  ftldsn13\u00c444\u00dc;  /* 14. dsn                           */\n  unsigned char  ftldsn14\u00c444\u00dc;  /* 15. dsn                           */\n  unsigned char  ftldsn15\u00c444\u00dc;  /* 16. dsn                           */\n  unsigned char  ftlres\u00c435\u00dc;    /* r e s e r v e d                   */\n  \u00fc;\n\n#define ftldlbl  _ftl_union1._ftl_struct1._ftldlbl\n#define ftldsn0  _ftl_union1._ftl_struct2._ftldsn0\n#define ftldsn1  _ftl_union1._ftl_struct2._ftldsn1\n\n/* Values for field \"ftl_datatype\" */\n#define ftl_datatype_b  0x00 /* binary       */\n#define ftl_datatype_t  0x01 /* text         */\n#define ftl_datatype_a  0x02 /* afpds        */\n#define ftl_datatype_d  0x03 /* dir          */\n#define ftl_datatype_m  0x04 /* msg          */\n#define ftl_datatype_p  0x05 /* prof         */\n#define ftl_datatype_c  0x06 /* crlf binary  */\n#define ftl_datatype_f  0xFF /* not defined  */\n\n/* Values for field \"ftl_spec\" */\n#define ftl_spec_intrdr 0x01 /* intrdr flag  */\n#define ftl_spec_sysout 0x02 /* sysout flag  */\n#define ftl_spec_concat 0x04 /* concat flag  */\n#define ftl_spec_writer 0x08 /* writer flag  */\n#define ftl_spec_lock   0x10 /* locking flag */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "FTR": {"ttr": 8449, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ftr \u00e4\n  void          *ftrpstart;                /* profile length                   */\n  struct \u00e4\n    unsigned char  _ftrssa\u00c48\u00dc; /* system alias name */\n    \u00fc ftrname;\n  unsigned char  ftrdesc\u00c480\u00dc;              /* description                      */\n  unsigned char  ftr_status_jnlprof\u00c48\u00dc;    /* profile                          */\n  unsigned char  ftr_status_jnlmem\u00c432\u00dc;    /* member                           */\n  unsigned char  ftr_status_jnlext\u00c48\u00dc;     /* extension                        */\n  unsigned char  ftr_status_outprof\u00c48\u00dc;    /* profile                          */\n  unsigned char  ftr_status_outext\u00c48\u00dc;     /* extension                        */\n  unsigned char  ftr_status_logprof\u00c48\u00dc;    /* profile                          */\n  unsigned char  ftr_status_logext\u00c48\u00dc;     /* extension                        */\n  int            ftr_status_update;        /* update count                     */\n  unsigned char  ftr_status_output\u00c48\u00dc;     /* output profile                   */\n  unsigned char  ftr_printer_npro\u00c44\u00dc;      /* npro exit support (yes/no)       */\n  unsigned char  ftr_printer_intervention; /* intervention flag                */\n  unsigned char  ftr_exit_jhdr\u00c48\u00dc;         /* job header exit                  */\n  unsigned char  ftr_exit_jtrl\u00c48\u00dc;         /* job trailer exit                 */\n  unsigned char  ftr_exit_dhdr\u00c48\u00dc;         /* dataset header exit              */\n  unsigned char  ftr_exit_rec\u00c48\u00dc;          /* record exit                      */\n  unsigned char  ftr_default_pagedef\u00c48\u00dc;   /* pagedef value or default         */\n  unsigned char  ftr_default_formdef\u00c48\u00dc;   /* formdef value or default         */\n  unsigned char  ftr_default_chars\u00c432\u00dc;    /* character set 4*8 byte           */\n  unsigned char  ftrres\u00c424\u00dc;               /* r e s e r v e d                  */\n  unsigned char  ftr_permanent\u00c44\u00dc;         /* permanent flag                   */\n  unsigned char  ftr_terminator\u00c432\u00dc;       /* terminator string                */\n  void          *ftr_loopcount;            /* loop count                       */\n  unsigned char  ftr_runoptions\u00c4128\u00dc;      /* process runtime options 04/02/19 */\n  unsigned char  ftr_driverfrom\u00c48\u00dc;        /* select the DRIVER name from      */\n  unsigned char  ftr_rexxselect\u00c48\u00dc;        /* select via a REXX command        */\n  unsigned char  ftrselects\u00c41024\u00dc\u00c4352\u00dc;    /* select sections                  */\n  unsigned char  _filler1;\n  \u00fc;\n\n#define ftrssa ftrname._ftrssa\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FTS": {"ttr": 8211, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct fts \u00e4\n  void          *ftspstart;                     /* profile entry length               */\n  unsigned char  fts_ssa\u00c48\u00dc;                    /* system alias name                  */\n  unsigned char  fts_driver_name\u00c48\u00dc;            /* driver name                        */\n  unsigned char  fts_lock\u00c44\u00dc;                   /* lock indicator                     */\n  unsigned char  fts_desc\u00c480\u00dc;                  /* description                        */\n  unsigned char  fts_flag;                      /* system type                        */\n  unsigned char  fts_system\u00c48\u00dc;                 /* system type see above              */\n  unsigned char  fts_tp_flag;                   /* tp flag                            */\n  unsigned char  fts_tp_error\u00c48\u00dc;               /* tp error action                    */\n  unsigned char  fts_tp_codeconv\u00c48\u00dc;            /* tp codeciaction                    */\n  unsigned char  _filler1\u00c42\u00dc;\n  unsigned char  fts_appc_luname\u00c48\u00dc;            /* luname                             */\n  unsigned char  fts_appc_logmode\u00c48\u00dc;           /* logmode name                       */\n  unsigned char  fts_appc_procl\u00c42\u00dc;             /* appc processname length            */\n  unsigned char  fts_appc_proc\u00c48\u00dc;              /* appc processname                   */\n  unsigned char  fts_appc_parsess\u00c44\u00dc;           /* single session (yes/no)            */\n  unsigned char  fts_appc_maxsess\u00c44\u00dc;           /* max number of session              */\n  unsigned char  fts_appc_locsess\u00c44\u00dc;           /* min contention winner local        */\n  unsigned char  fts_appc_prtsess\u00c44\u00dc;           /* min contention winner partner      */\n  unsigned char  fts_appc_trace\u00c44\u00dc;             /* trace flag                         */\n  unsigned char  fts_appc_res\u00c412\u00dc;              /* r e s e r v e d                    */\n  unsigned char  fts_appc_gapplid\u00c48\u00dc;           /* generic applid                     */\n  unsigned char  _filler2\u00c42\u00dc;\n  unsigned char  fts_tcpip_name\u00c432\u00dc;            /* host name                          */\n  int            fts_tcpip_port;                /* port name                          */\n  int            fts_tcpip_ownport;             /* own port name                      */\n  int            fts_tcpip_maxmsg;              /* max msg size                       */\n  int            fts_tcpip_default_replyport;   /* default reply port                 */\n  unsigned char  fts_tcpip_res\u00c412\u00dc;             /* r e s e r v e d                    */\n  unsigned char  fts_local_res\u00c412\u00dc;             /* r e s e r v e d                    */\n  unsigned char  fts_driver_type\u00c416\u00dc;           /* driver type                        */\n  unsigned char  fts_driver_device\u00c48\u00dc;          /* driver device name                 */\n  unsigned char  fts_driver_trace\u00c44\u00dc;           /* trace value                        */\n  int            fts_driver_bwait;              /* wait time in 1/100 sec             */\n  unsigned char  fts_driver_wait\u00c48\u00dc;            /* wait time                          */\n  int            fts_default_pagesize;          /* default pagesize                   */\n  unsigned char  fts_default_pdeflib\u00c48\u00dc;        /* pagedef library profile            */\n  unsigned char  fts_default_fdeflib\u00c48\u00dc;        /* formdef library profile            */\n  unsigned char  fts_default_pseglib\u00c48\u00dc;        /* pseglib library profile            */\n  unsigned char  fts_default_fontlib\u00c48\u00dc;        /* fontlib library profile            */\n  unsigned char  fts_default_ovlylib\u00c48\u00dc;        /* overlib library profile            */\n  unsigned char  fts_default_idfdlib\u00c48\u00dc;        /* idfdlib library profile            */\n  unsigned char  fts_default_idftlib\u00c48\u00dc;        /* idftlib library profile            */\n  unsigned char  fts_default_idfalib\u00c48\u00dc;        /* idfalib library profile            */\n  unsigned char  fts_default_idfilib\u00c48\u00dc;        /* idfilib library profile            */\n  unsigned char  fts_default_copies\u00c48\u00dc;         /* default copy count                 */\n  unsigned char  fts_default_process\u00c48\u00dc;        /* default print process option       */\n  unsigned char  fts_default_sendresource\u00c48\u00dc;   /* sendresource default option        */\n  unsigned char  fts_default_hpfs\u00c48\u00dc;           /* hpfs file system                   */\n  unsigned char  fts_default_temporary\u00c48\u00dc;      /* temporary file store               */\n  unsigned char  fts_default_queue\u00c416\u00dc;         /* queue name                         */\n  unsigned char  fts_default_banner\u00c43\u00dc;         /* banner page                        */\n  unsigned char  _filler3;\n  int            fts_default_jobnumber;         /* actual job number                  */\n  unsigned char  fts_default_control\u00c48\u00dc;        /* first control or not               */\n  unsigned char  fts_default_count\u00c48\u00dc;          /* count set/clear                    */\n  int            fts_default_listsize;          /* default listsize                   */\n  unsigned char  fts_default_pagedef\u00c48\u00dc;        /* pagedef value or default           */\n  unsigned char  fts_default_formdef\u00c48\u00dc;        /* formdef value or default           */\n  unsigned char  fts_default_chars\u00c432\u00dc;         /* character set 4*8 byte             */\n  unsigned char  fts_default_prmode\u00c44\u00dc;         /* prmode                             */\n  unsigned char  fts_receive_profile\u00c48\u00dc;        /* default receive profile            */\n  unsigned char  fts_send_data\u00c48\u00dc;              /* send data profile name             */\n  unsigned char  fts_send_xdata\u00c48\u00dc;             /* data extension                     */\n  unsigned char  fts_send_resource\u00c48\u00dc;          /* send resource profile name         */\n  unsigned char  fts_send_xresource\u00c48\u00dc;         /* resource extension                 */\n  unsigned char  fts_send_control\u00c48\u00dc;           /* send control profile               */\n  unsigned char  fts_send_xcontrol\u00c48\u00dc;          /* control extension                  */\n  unsigned char  fts_send_xpdf\u00c48\u00dc;              /* pdef extension                     */\n  unsigned char  fts_send_xfdf\u00c48\u00dc;              /* fdef extension                     */\n  unsigned char  fts_send_xpsg\u00c48\u00dc;              /* pdef extension                     */\n  unsigned char  fts_send_xovl\u00c48\u00dc;              /* ovly extension                     */\n  unsigned char  fts_send_xdfd\u00c48\u00dc;              /* idfd extension                     */\n  unsigned char  fts_send_xdft\u00c48\u00dc;              /* idft extension                     */\n  unsigned char  fts_send_xdfa\u00c48\u00dc;              /* idfa extension                     */\n  unsigned char  fts_send_xdfi\u00c48\u00dc;              /* idfi extension                     */\n  unsigned char  fts_send_xfnt\u00c48\u00dc;              /* font extension                     */\n  unsigned char  fts_send_xcdp\u00c48\u00dc;              /* code page extension                */\n  unsigned char  fts_send_xchs\u00c48\u00dc;              /* character set extension            */\n  unsigned char  fts_send_error\u00c48\u00dc;             /* send error action                  */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _fts_status;\n        \u00fc fts_send_;\n      unsigned char  _filler4\u00c47\u00dc;\n      \u00fc _fts_struct1;\n    unsigned char  _fts_status_jnlprof\u00c48\u00dc; /* profile */\n    \u00fc _fts_union1;\n  unsigned char  fts_status_jnlmem\u00c432\u00dc;         /* member                             */\n  unsigned char  fts_status_jnlext\u00c48\u00dc;          /* extension                          */\n  unsigned char  fts_status_outprof\u00c48\u00dc;         /* profile                            */\n  unsigned char  fts_status_outext\u00c48\u00dc;          /* extension                          */\n  unsigned char  fts_status_logprof\u00c48\u00dc;         /* profile                            */\n  unsigned char  fts_status_logext\u00c48\u00dc;          /* extension                          */\n  int            fts_status_update;             /* update count                       */\n  unsigned char  fts_status_output\u00c48\u00dc;          /* output profile                     */\n  unsigned char  fts_status_joblog\u00c48\u00dc;          /* receive back joblog always/onerror */\n  unsigned char  fts_server_html_path\u00c464\u00dc;      /* html path                          */\n  unsigned char  fts_server_html_file\u00c464\u00dc;      /* html file                          */\n  unsigned char  fts_server_server_name\u00c464\u00dc;    /* server name                        */\n  unsigned char  fts_server_server_prot\u00c464\u00dc;    /* server name                        */\n  unsigned char  fts_server_root\u00c464\u00dc;           /* root dir                           */\n  unsigned char  fts_server_tracedsn\u00c464\u00dc;       /* trace dsn                          */\n  unsigned char  fts_server_put_allowed\u00c44\u00dc;     /* put allowed on server              */\n  unsigned char  fts_server_dir_allowed\u00c44\u00dc;     /* dir request allowed on server      */\n  unsigned char  fts_server_surrogate\u00c48\u00dc;       /* surrogate user id                  */\n  unsigned char  fts_server_usessl\u00c44\u00dc;          /* ssl option                         */\n  unsigned char  fts_server_basicauth\u00c44\u00dc;       /* basicauth option                   */\n  unsigned char  fts_server_cgiform\u00c44\u00dc;         /* CGI default form                   */\n  unsigned char  fts_server_cgioptions\u00c464\u00dc;     /* CGI call options                   */\n  unsigned char  fts_ssl_sec_type\u00c48\u00dc;           /* sec types                          */\n  unsigned char  fts_ssl_keyring\u00c464\u00dc;           /* keyring name                       */\n  unsigned char  fts_ssl_keyring_pw\u00c420\u00dc;        /* keyring pw                         */\n  unsigned char  fts_ssl_keyring_stash\u00c464\u00dc;     /* stash file name                    */\n  void          *fts_ssl_v2_session_timeout;    /* sslv2 timeout                      */\n  void          *fts_ssl_v3_session_timeout;    /* sslv3 timeout                      */\n  unsigned char  fts_ssl_ldap_server\u00c464\u00dc;       /* ldap server                        */\n  void          *fts_ssl_ldap_port;             /* ldap port                          */\n  unsigned char  fts_ssl_ldap_user\u00c464\u00dc;         /* ldap user name                     */\n  unsigned char  fts_ssl_ldap_password\u00c420\u00dc;     /* ldap password                      */\n  void          *fts_ssl_ldap_ca;               /* ca root                            */\n  void          *fts_ssl_auth_type;             /* auth type                          */\n  unsigned char  fts_ssl_handshake_type\u00c432\u00dc;    /* handshake type                     */\n  unsigned char  fts_ssl_dname\u00c464\u00dc;             /* distinguish name                   */\n  unsigned char  fts_ssl_cipher_spec\u00c412\u00dc;       /* v2 cipher                          */\n  unsigned char  fts_ssl_v3cipher_spec\u00c412\u00dc;     /* v3 cipher                          */\n  unsigned char  fts_ssl_client_userid\u00c416\u00dc;     /* client user from                   */\n  unsigned char  fts_ssl_client_auth\u00c416\u00dc;       /* client user auth method            */\n  unsigned char  fts_file_translate\u00c464\u00dc;        /* translate table                    */\n  unsigned char  fts_file_translate_table\u00c4256\u00dc;\n  unsigned char  fts_file_global\u00c48\u00dc;            /* global dd name                     */\n  unsigned char  fts_mqs_name\u00c48\u00dc;               /* mqs connection name                */\n  unsigned char  fts_mqs_qmanager\u00c448\u00dc;          /* queue manager name                 */\n  unsigned char  fts_mqs_qname\u00c448\u00dc;             /* queue name                         */\n  int            fts_mqs_maxmsg;                /* max message length                 */\n  unsigned char  fts_sapi_name\u00c48\u00dc;              /* sapi name                          */\n  unsigned char  fts_sapi_select\u00c4256\u00dc;          /* SAPI SELECT                        */\n  unsigned char  fts_exci_name\u00c48\u00dc;              /* exci name                          */\n  unsigned char  fts_exci_system\u00c48\u00dc;            /* system                             */\n  unsigned char  fts_exci_program\u00c48\u00dc;           /* progarm                            */\n  unsigned char  fts_exci_transid\u00c48\u00dc;           /* transid                            */\n  unsigned char  fts_exci_userid\u00c48\u00dc;            /* userid                             */\n  unsigned char  fts_exci_applid\u00c48\u00dc;            /* applid                             */\n  unsigned char  fts_db2_name\u00c48\u00dc;               /* db2 name                           */\n  unsigned char  fts_db2_subsystem\u00c44\u00dc;          /* subsystem name                     */\n  unsigned char  fts_db2_plan\u00c48\u00dc;               /* plan name                          */\n  unsigned char  fts_db2_table\u00c416\u00dc;             /* table name                         */\n  void          *fts_mqs_waitwarning;           /* wait warning                       */\n  unsigned char  fts_mqs_objectqmgr\u00c448\u00dc;        /* OBJECT Q MGR                       */\n  unsigned char  fts_mqs_format\u00c48\u00dc;             /* message format STREAM/RECORD       */\n  void          *fts_mqs_msg_expired;           /* message expire after               */\n  void          *fts_mqs_msg_rep_expired;       /* reply message expire after         */\n  unsigned char  fts_mqs_adddesc\u00c43\u00dc;            /* adddesc                            */\n  unsigned char  fts_mqs_persistent\u00c43\u00dc;         /* adddesc                            */\n  unsigned char  fts_res\u00c432\u00dc;                   /* reserved                           */\n  unsigned char  _filler5\u00c42\u00dc;\n  int            fts_driver_address;            /* driver address                     */\n  unsigned char  fts_arm_name\u00c416\u00dc;              /* arm element name                   */\n  unsigned char  fts_arm_type\u00c416\u00dc;              /* arm element type                   */\n  \u00fc;\n\n#define fts_status         _fts_union1._fts_struct1.fts_send_._fts_status\n#define fts_status_jnlprof _fts_union1._fts_status_jnlprof\n\n/* Values for field \"fts_flag\" */\n#define fts_flag_os2      1   /* os/2       */\n#define fts_flag_vm       2   /* vm         */\n#define fts_flag_vse      3   /* vse        */\n#define fts_flag_mvscics  4   /* mvs/cics   */\n#define fts_flag_mvsstc   5   /* mvs/stc    */\n#define fts_flag_rs6000   6   /* rs6000     */\n#define fts_flag_oms      7   /* oms flag   */\n\n/* Values for field \"fts_tp_flag\" */\n#define fts_tp_flag_appc  1   /* appc flag  */\n#define fts_tp_flag_tcpip 2   /* tcpip flag */\n#define fts_tp_flag_file  4   /* file flag  */\n#define fts_tp_flag_mqs   8   /* mqs flag   */\n#define fts_tp_flag_sapi  16  /* sapi flag  */\n#define fts_tp_flag_exci  32  /* EXCI flag  */\n#define fts_tp_flag_db2   64  /* DB2  flag  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "F1DSCB": {"ttr": 8635, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dscb \u00e4\n  unsigned char  ds1dsnam\u00c444\u00dc; /* DATA SET NAME                        */\n  unsigned char  ds1fmtid;     /* FORMAT IDENTIFIER (X'F1')       @L3C */\n  unsigned char  ds1dssn\u00c46\u00dc;   /* DATA SET SERIAL NUMBER               */\n  unsigned char  ds1volsq\u00c42\u00dc;  /* VOLUME SEQUENCE NUMBER (1-9999) @P1C */\n  unsigned char  ds1credt\u00c43\u00dc;  /* CREATION DATE                        */\n  unsigned char  ds1expdt\u00c43\u00dc;  /* EXPIRATION DATE                      */\n  unsigned char  ds1noepv;     /* NUMBER OF DATA EXTENTS ON VOLUME@P1C */\n  unsigned char  ds1nobdb;     /* NUMBER OF BYTES USED IN LAST         */\n  unsigned char  ds1flag1;     /* FLAG 1                          @LAA */\n  unsigned char  ds1syscd\u00c413\u00dc; /* SYSTEM CODE                          */\n  unsigned char  ds1refd\u00c43\u00dc;   /* DATE LAST REFERENCED            @01C */\n  unsigned char  ds1smsfg;     /* SYSTEM MANAGED STORAGE INDICATORS    */\n  struct \u00e4\n    unsigned char  _ds1scxtf;    /* SECONDARY SPACE EXTENSION FLAG -     */\n    unsigned char  _ds1scxtv\u00c42\u00dc; /* SECONDARY SPACE EXTENSION VALUE @L4A */\n    \u00fc ds1scext;\n  unsigned char  ds1dsorg\u00c42\u00dc;  /* DATA SET ORGANIZATION                */\n  unsigned char  ds1recfm;     /* RECORD FORMAT                        */\n  unsigned char  ds1optcd;     /* OPTION CODES -- INDICATES THE   @P1C */\n  unsigned char  ds1blkl\u00c42\u00dc;   /* BLOCK LENGTH (TYPE F RECORDS),  @L3C */\n  unsigned char  ds1lrecl\u00c42\u00dc;  /* LOGICAL RECORD LENGTH                */\n  unsigned char  ds1keyl;      /* KEY LENGTH (0 - 255)                 */\n  unsigned char  ds1rkp\u00c42\u00dc;    /* RELATIVE KEY POSITION                */\n  unsigned char  ds1dsind;     /* DATA SET INDICATORS                  */\n  struct \u00e4\n    unsigned char  _ds1scal1;    /* SPACE PARAMETERS                @P1C */\n    unsigned char  _ds1scal3\u00c43\u00dc; /* SECONDARY ALLOCATION QUANTITY   @P1C */\n    \u00fc ds1scalo;\n  unsigned char  ds1lstar\u00c43\u00dc;  /* LAST USED TRACK AND BLOCK ON    @P1C */\n  unsigned char  ds1trbal\u00c42\u00dc;  /* FOR EXTENDED FORMAT: 2 HIGH     @02C */\n  unsigned char  _filler1;     /* RESERVED                             */\n  unsigned char  ds1ttthi;     /* HIGH ORDER BYTE OF DS1LSTAR     @LCA */\n  unsigned char  ds1ext1\u00c410\u00dc;  /* FIRST EXTENT DESCRIPTION             */\n  unsigned char  ds1ext2\u00c410\u00dc;  /* SECOND EXTENT DESCRIPTION            */\n  unsigned char  ds1ext3\u00c410\u00dc;  /* THIRD EXTENT DESCRIPTION             */\n  unsigned char  ds1ptrds\u00c45\u00dc;  /* POINTER (CCHHR) TO A FORMAT 2   @P1C */\n  \u00fc;\n\n#define ds1scxtf ds1scext._ds1scxtf\n#define ds1scxtv ds1scext._ds1scxtv\n#define ds1scal1 ds1scalo._ds1scal1\n#define ds1scal3 ds1scalo._ds1scal3\n\n/* Values for field \"ds1flag1\" */\n#define ds1compr 0x80 /* 1... ....    COMPRESSABLE EXTENDED FORMAT    @LAA */\n#define ds1cpoit 0x40 /* .1.. ....    CHECKPOINTED DATASET            @03A */\n#define ds1expby 0x20 /* ..1. ....    VSE EXP DATE SPEC BY RET PERIOD @08C */\n#define ds1recal 0x10 /* ...1 ....    DATA SET HAS BEEN RECALLED      @LDA */\n#define ds1large 0x08 /* .... 1...    >64K TRACK DATA SET COEXISTENCE @08M */\n\n/* Values for field \"ds1smsfg\" */\n#define ds1smsds 0x80 /* 1... ....    SYSTEM MANAGED DATA SET         @L4A */\n#define ds1smsuc 0x40 /* .1.. ....    NO BCS ENTRY EXISTS FOR DATA SET     */\n#define ds1reblk 0x20 /* ..1. ....    SDB AND D.S. MAY BE REBLOCKED   @02C */\n#define ds1crsdb 0x10 /* ...1 ....    DADSM CREATE ORIGINATED BLKSIZE @P5A */\n#define ds1pdse  0x08 /* .... 1...    PDSE DATA SET                   @P7C */\n#define ds1strp  0x04 /* .... .1..    EXTENDED FORMAT DATA SET        @LAC */\n#define ds1pdsex 0x02 /* .... ..1.    HFS DATA SET                    @L8A */\n#define ds1dsae  0x01 /* ........1    EXTENDED ATTRIBUTES EXIST       @L9C */\n\n/* Values for field \"ds1scxtf\" */\n#define ds1scavb 0x80 /* 1... ....    IF 1, DS1SCXTV IS THE ORIGINAL  @L4A */\n#define ds1scmb  0x40 /* .1.. ....    IF 1, DS1SCXTV IS IN MEGABYTES  @L4A */\n#define ds1sckb  0x20 /* ..1. ....    IF 1, DS1SCXTV IS IN KILOBYTES  @L4A */\n#define ds1scub  0x10 /* ...1 ....    IF 1, DS1SCXTV IS IN BYTES      @L4A */\n#define ds1sccp1 0x08 /* .... 1...    IF 1, DS1SCXTV HAS BEEN COMPACTED    */\n#define ds1sccp2 0x04 /* .... .1..    IF 1, DS1SCXTV HAS BEEN COMPACTED    */\n\n/* Values for field \"ds1dsorg\" */\n#define ds1dsgis 0x80 /* 1... ....    IS - INDEXED SEQUENTIAL         @L1A */\n#define ds1dsgps 0x40 /* .1.. ....    PS - PHYSICAL SEQUENTIAL        @L1A */\n#define ds1dsgda 0x20 /* ..1. ....    DA - DIRECT ORGANIZATION        @L1A */\n#define ds1dsgcx 0x10 /* ...1 ....    CX - BTAM OR QTAM LINE GROUP    @L1A */\n#define ds1dsgpo 0x02 /* .... ..1.    PO - PARTITIONED ORGANIZATION   @L1A */\n#define ds1dsgu  0x01 /* .... ...1    U - UNMOVABLE, THE DATA SET     @P1C */\n#define ds1dsggs 0x80 /* 1... ....    GS - GRAPHICS ORGANIZATION      @L1A */\n#define ds1dsgtx 0x40 /* .1.. ....    TX - TCAM LINE GROUP            @L1A */\n#define ds1dsgtq 0x20 /* ..1. ....    TQ - TCAM MESSAGE QUEUE         @L1A */\n#define ds1acbm  0x08 /* .... 1...    AM - ACCESS METHOD CONTROL BLOCK@P1C */\n#define ds1orgam 0x08 /* .... 1...    AM - VSAM DATA SET/SPACE        @P1M */\n#define ds1dsgtr 0x04 /* .... .1..    TR - TCAM 3705                  @L1A */\n\n/* Values for field \"ds1recfm\" */\n#define ds1recff 0x80 /* 10.. ....    F - FIXED LENGTH                @L3A */\n#define ds1recfv 0x40 /* 01.. ....    V - VARIABLE LENGTH             @L3A */\n#define ds1recfu 0xC0 /* 11.. ....    U - UNDEFINED LENGTH            @L3A */\n#define ds1recft 0x20 /* ..1. ....    T - TRACK OVERFLOW              @L3A */\n#define ds1recfb 0x10 /* ...1 ....    B - BLOCKED: MAY NOT OCCUR WITH @L3A */\n#define ds1recfs 0x08 /* .... 1...    FIXED LENGTH: (X'88')           @L3A */\n#define ds1recfa 0x04 /* .... .10.    ANSI CONTROL CHARACTER          @L3A */\n#define ds1recmc 0x02 /* .... .01.    MACHINE CONTROL CHARACTER       @L3A */\n\n/* Values for field \"ds1optcd\" */\n#define ds1optic 0x80 /* 1... ....    DATA SET CATALOGED IN ICF CTLG  @P1C */\n#define ds1optbc 0x40 /* .1.. ....    DATA SET IS ICF CATALOG         @P1C */\n\n/* Values for field \"ds1dsind\" */\n#define ds1ind80 0x80 /* 1... ....    LAST VOLUME CONTAINING DATA IN  @P1C */\n#define ds1ind40 0x40 /* .1.. ....    DATA SET IS RACF DEFINED    @G60ASBJ */\n#define ds1racdf 0x40 /* SAME USE AS BIT DS1IND40        @LBA              */\n#define ds1ind20 0x20 /* ..1. ....    BLOCK LENGTH IS A MULTIPLE  @G60ASBJ */\n#define ds1ind10 0x10 /* ...1 ....    PASSWORD IS REQUIRED TO     @G60ASBJ */\n#define ds1secty 0x10 /* SAME USE AS BIT DS1IND10        @LBA              */\n#define ds1ind08 0x08 /* .... 1...    DS MODIFIED SINCE RECALL        @LDC */\n#define ds1ind04 0x04 /* .... .1..    IF DS1IND10 IS 1 THEN           @P1C */\n#define ds1wrsec 0x04 /* SAME USE AS BIT DS1IND04        @LBA              */\n#define ds1ind02 0x02 /* .... ..1.    DATA SET OPENED FOR OTHER   @G60ASBJ */\n#define ds1dscha 0x02 /* SAME USE AS BIT DS1IND02    @G60ASBJ              */\n#define ds1ind01 0x01 /* .... ...1    SECURE CHECKPOINT DATA SET      @01C */\n#define ds1chkpt 0x01 /* SAME AS DS1IND01                @L3C              */\n\n/* Values for field \"ds1scal1\" */\n#define ds1dspac 0xC0 /* XX.. ....    BIT PATTERN FOR SPACE REQUEST   @L3A */\n#define ds1cyl   0xC0 /* 11.. ....    CYLINDER REQUEST                @L3A */\n#define ds1trk   0x80 /* 10.. ....    TRACK REQUEST                   @L3A */\n#define ds1avr   0x40 /* 01.. ....    AVERAGE BLOCK LENGTH REQUEST    @L3A */\n#define ds1avrnd 0x41 /* 01.. ...1    AVERAGE BLOCK AND ROUND REQUEST @P1C */\n#define ds1msgp  0x20 /* ..1. ....    RESERVED (WAS MSGP)             @02C */\n#define ds1ext   0x10 /* ...1 ....    EXTENSION TO SECONDARY SPACE    @L4A */\n#define ds1contg 0x08 /* .... 1...    CONTIGUOUS REQUEST              @L3A */\n#define ds1mxig  0x04 /* .... .1..    MXIG REQUEST                    @L3A */\n#define ds1alx   0x02 /* .... ..1.    ALX REQUEST                     @L3A */\n#define ds1dsabs 0x00 /* 0000 0000    ABSOLUTE TRACK REQUEST          @L3A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "F2DSCB": {"ttr": 8213, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct f2dscb \u00e4\n  unsigned char  _filler1;     /* KEY IDENTIFIER  (X'02')              */\n  unsigned char  ds22mind\u00c47\u00dc;  /* ADDRESS OF 2ND LEVEL MASTER INDEX    */\n  unsigned char  ds2l2men\u00c45\u00dc;  /* LAST 2ND LEVEL MASTER INDEX ENTRY    */\n  unsigned char  ds23mind\u00c47\u00dc;  /* ADDRESS OF 3RD LEVEL MASTER INDEX    */\n  unsigned char  ds2l3min\u00c45\u00dc;  /* LAST 3RD LEVEL MASTER INDEX ENTRY    */\n  unsigned char  _filler2\u00c411\u00dc; /* RESERVED                             */\n  unsigned char  ds2lpdt\u00c48\u00dc;   /* LAST PRIME TRACK ON LAST PRIME CYL   */\n  unsigned char  ds2fmtid;     /* FORMAT IDENTIFIER (X'F2')            */\n  unsigned char  ds2nolev;     /* NUMBER OF INDEX LEVELS               */\n  unsigned char  ds2dvind;     /* HIGH LEVEL INDEX DEVELOPMENT         */\n  unsigned char  ds21rcyl\u00c43\u00dc;  /* FIRST DATA RECORD IN CYLINDER        */\n  unsigned char  ds2ltcyl\u00c42\u00dc;  /* LAST DATA TRACK IN CYLINDER          */\n  unsigned char  ds2cylov;     /* NUMBER OF TRACKS FOR CYLINDER        */\n  unsigned char  ds2hirin;     /* HIGHEST 'R' ON HIGH-LEVEL INDEX TRK  */\n  unsigned char  ds2hirpr;     /* HIGHEST 'R' ON PRIME DATA TRACK      */\n  unsigned char  ds2hirov;     /* HIGHEST 'R' ON OVERFLOW DATA TRACK   */\n  unsigned char  ds2rshtr;     /* 'R' OF LAST DATA RECORD ON SHARED    */\n  unsigned char  ds2hirti;     /* HIGHEST 'R' ON UNSHARED TRACK OF     */\n  unsigned char  ds2hiiov;     /* HIGHEST 'R' FOR INDEPENDENT OVERFLOW */\n  unsigned char  ds2tagdt\u00c42\u00dc;  /* TAG DELETION COUNT                   */\n  unsigned char  ds2rorg3\u00c43\u00dc;  /* NON-FIRST OVERFLOW REFERENCE COUNT   */\n  unsigned char  ds2nobyt\u00c42\u00dc;  /* NUMBER OF BYTES FOR HIGHEST-LEVEL    */\n  unsigned char  ds2notrk;     /* NUMBER OF TRACKS FOR HIGHEST-LEVEL   */\n  unsigned char  ds2prctr\u00c44\u00dc;  /* PRIME RECORD COUNT                   */\n  unsigned char  ds2stind;     /* STATUS INDICATORS                    */\n  unsigned char  ds2cylad\u00c47\u00dc;  /* ADDRESS OF CYLINDER INDEX            */\n  unsigned char  ds2adlin\u00c47\u00dc;  /* ADDRESS OF LOWEST LEVEL MASTER INDEX */\n  unsigned char  ds2adhin\u00c47\u00dc;  /* ADDRESS OF HIGHEST LEVEL MASTER      */\n  unsigned char  ds2lprad\u00c48\u00dc;  /* LAST PRIME DATA RECORD ADDRESS       */\n  unsigned char  ds2ltrad\u00c45\u00dc;  /* LAST TRACK INDEX ENTRY ADDRESS       */\n  unsigned char  ds2lcyad\u00c45\u00dc;  /* LAST CYLINDER INDEX ENTRY ADDRESS    */\n  unsigned char  ds2lmsad\u00c45\u00dc;  /* LAST MASTER INDEX ENTRY ADDRESS      */\n  unsigned char  ds2lovad\u00c48\u00dc;  /* LAST INDEPENDENT OVERFLOW RECORD     */\n  unsigned char  ds2byovl\u00c42\u00dc;  /* BYTES REMAINING ON OVERFLOW TRACK    */\n  unsigned char  ds2rorg2\u00c42\u00dc;  /* TRACKS REMAINING IN INDEPENDENT      */\n  unsigned char  ds2ovrct\u00c42\u00dc;  /* OVERFLOW RECORD COUNT                */\n  unsigned char  ds2rorg1\u00c42\u00dc;  /* CYLINDER OVERFLOW AREA COUNT         */\n  unsigned char  ds2nirt\u00c43\u00dc;   /* DUMMY TRACK INDEX ENTRY ADDRESS      */\n  unsigned char  ds2ptrds\u00c45\u00dc;  /* POINTER (CCHHR) TO FORMAT 3 DSCB@P1C */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "F3DSCB": {"ttr": 8621, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct f3dscb \u00e4\n  struct \u00e4\n    unsigned char  _ds3keyid\u00c44\u00dc;  /* KEY IDENTIFIER (X'03030303')         */\n    unsigned char  _ds3extnt\u00c440\u00dc; /* FOUR EXTENT DESCRIPTIONS             */\n    unsigned char  _ds3fmtid;     /* FORMAT IDENTIFIER (X'F3')            */\n    unsigned char  _ds3adext\u00c490\u00dc; /* NINE ADDITIONAL EXTENT DESCRIPTIONS  */\n    unsigned char  _ds3ptrds\u00c45\u00dc;  /* FORWARD CHAIN POINTER (CCHHR)   @P1C */\n    \u00fc ds3dscb;\n  \u00fc;\n\n#define ds3keyid ds3dscb._ds3keyid\n#define ds3extnt ds3dscb._ds3extnt\n#define ds3fmtid ds3dscb._ds3fmtid\n#define ds3adext ds3dscb._ds3adext\n#define ds3ptrds ds3dscb._ds3ptrds\n\n/* Values for field \"ds3fmtid\" */\n#define ds3idc 0xF3 /* FORMAT 3 IDENTIFIER             @LvA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "GENFILE": {"ttr": 8747, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _GENFILE\n#define _GENFILE\n\n#include   \"stdio.hpp\"\n#include   \"tsodll.hpp\"\n#include   \"mvsbase.hpp\"\n#include   \"os.hpp\"\n\n#define    Msg          PanelSetMessageUncond\n#define    maxbuff  32768\n\n//-----------------------------------------------------------------\n//-----------------------------------------------------------------\n//-----------------------------------------------------------------\n\nenum GENFILETYPE \u00e4 _VSAMFILE, _OSFILE, _REMOTEFILE \u00fc;\nenum GENFILESTATUS \u00e4 _OPEN , _CLOSE , _RESET \u00fc;\n\nclass GENFILE: public mERROR\n\u00e4\nprotected:\n  int         reccnt;\n  GENFILETYPE type;\n  GENFILESTATUS status;\n  STRING   filename;\n  STRING   mode;\n  STRING   am;\n  STRING   amode;\n  STRING   dsn;\n  FILE *   file;\n  DSNINFO *  info;\npublic:\n  GENFILE();\n  virtual \u00dfGENFILE();\n  virtual int read(char * ) = 0;\n  virtual int write(char * ,int ) = 0;\n  int writeMsg(char *,int);\n  virtual int close() = 0;\n\n  virtual char * getFileName() = 0;\n  virtual char * findM() = 0;\n  virtual char * nextM() = 0;\n  virtual void quitM() = 0;\n  virtual int  delM() = 0;\n\n  FILE     * getFILE();\n  DSNINFO  * getDSNINFO();\n\u00fc;\n\n//-----------------------------------------------------------------\n//-----------------------------------------------------------------\n//-----------------------------------------------------------------\n\nclass VSAMFILE: public GENFILE\n\u00e4\nprivate:\npublic:\n  VSAMFILE(const char *, const char *,\n           const char * = \"\", const char * = \"\");\n  \u00dfVSAMFILE();\n\n  int read(char *);\n  int write(char * , int );\n  int close();\n  char * getFileName();\n  char * findM();\n  char * nextM();\n  void   quitM();\n  int    delM();\n\u00fc;\n\n//-----------------------------------------------------------------\n//-----------------------------------------------------------------\n//-----------------------------------------------------------------\n\nclass OSFILE: public GENFILE\n\u00e4\nprivate:\npublic:\n  OSFILE(const char *, const char *,\n         const char * = \"\", const char * = \"\");\n  \u00dfOSFILE();\n\n  int read(char *);\n  int write(char * , int );\n  int close();\n  char * getFileName();\n  char * findM();\n  char * nextM();\n  void   quitM();\n  int    delM();\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GIMC370": {"ttr": 8691, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/****************************** MODULE HEADER ***********************/\n/*                                                                  */\n/* Module Name: GIMHC370                                            */\n/*                                                                  */\n/* SMP/E API Macro for C/370                                        */\n/*                                                                  */\n/* Licensed Materials - Property of IBM                             */\n/* 5694-A01  5655-G44                                               */\n/* Copyright IBM Corp. 1997, 2001                                   */\n/********************************************************************/\n/*                                                                  */\n/* ---------------------------------------------------------------- */\n/* FLAG REASON  RELEASE   DATE   ORG  DESCRIPTION                   */\n/* ---- ------- ------- -------- ---  ----------------------------- */\n/* $L0= SV1001A  1A.00  06/10/96 KAK: GIMAPI SUPPORT                */\n/* $P1= PT20078  1A.00  08/15/96 KAK: CSI_ENTRY POINTER TYPE WRONG  */\n/* $L1= SVV001B  1B.00  10/14/96 DMM: API VERSION SUPPORT           */\n/*                                                                  */\n/********************************************************************/\n/*   CHANGE FLAG KEY: M@PNC                                         */\n/*   WHERE:                                                         */\n/*                                                                  */\n/* M= MULTIPLE    P= DCRS = D,E,F,G    N= 0-9,A-Z     C= A = ADD    */\n/*    FOR DELETE     RMPS = H,I,J,K    (USE '0' ONLY     C = CHANGE */\n/*    FLAGS ONLY     LINE = L,M,N,O     WHEN ELEMENT     P = COPY   */\n/*                   PTMS = P,Q,R,S     IS BEING         M = MOVE   */\n/*                   APARS = 0-9        CREATED)         D = DELETE */\n/********************************************************************/\n#define LEN_ETYPE        12\n#define LEN_MSG          256\ntypedef _Packed struct QUERY_PARMS  /* Parameters for QUERY command */\n{\n  char    *csi;                     /* PTR to global CSI dataset    */\n  long    csilen;                   /* Length of data set name      */\n  char    *zone;                    /* PTR to list of zones         */\n  long    zonelen;                  /* Length of zone list          */\n  char    *entrytype;               /* PTR to list of entries       */\n  long    entrylen;                 /* Length of entry list         */\n  char    *subentrytype;            /* PTR to list of subentries    */\n  long    subentrylen;              /* Length of subentry list      */\n  char    *filter;                  /* PTR to query filter          */\n  long    filterlen;                /* Length of filter             */\n} QUERY_PARMS, * P_QUERY_PARMS;\n\ntypedef _Packed struct ENTRY_LIST   /* List of entry types          */\n{\n  _Packed struct ENTRY_LIST *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  _Packed struct CSI_ENTRY  *entries;/* PTR to head of linked list  */\n                                    /*  of CSI_ENTRY sturctures     */\n                                    /*  listing the instances of    */\n                                    /*  this entry type             */\n  char              type\u00dd12\u00a8;       /* Entry type                   */\n} ENTRY_LIST, * P_ENTRY_LIST;\n\ntypedef _Packed struct CSI_ENTRY    /* Description of a specific    */\n{                                   /*  entry                       */\n  _Packed struct CSI_ENTRY  *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  _Packed struct SUBENTRY   *subentries;/* PTR to head of linked    */\n                                    /*  list of SUBENTRY structures */\n                                    /*  listing the subentry values */\n                                    /*  for this entry              */\n  char              entryname\u00dd8\u00a8;   /* Name of entry                */\n  char              zonename\u00dd7\u00a8;    /* Zone where entry was retrieved*/\n} CSI_ENTRY, * P_CSI_ENTRY;         /*                          @P1C*/\n\ntypedef _Packed struct SUBENTRY     /* Contains subentry data       */\n{\n  _Packed struct SUBENTRY   *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  void              *subentrydata;  /* PTR to head of linked list   */\n                                    /*  of data values for this     */\n                                    /*  subentry                    */\n  char              type\u00dd12\u00a8;       /* Subentry type                */\n} SUBENTRY, * P_SUBENTRY;\n\ntypedef _Packed struct VER          /* Place holder for subentries  */\n{                                   /*  associated with ++VER       */\n                                    /*  records of a SYSMOD         */\n  _Packed struct VER        *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  _Packed struct SUBENTRY   *verdata;/* PTR to head of linked list  */\n                                    /*  of subentries associated    */\n                                    /*  with a ++VER                */\n  char              vernum\u00dd3\u00a8;      /* ++VER statement number       */\n} VER, * P_VER;\n\ntypedef _Packed struct ITEM_LIST    /* Holds piece of subentry data */\n{\n  _Packed struct ITEM_LIST  *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  long              datalen;        /* Number of characters of real */\n                                    /*  data                        */\n  char              *data;          /* PTR to storage containing    */\n                                    /*  data                        */\n} ITEM_LIST, * P_ITEM_LIST;\n\ntypedef _Packed struct API_VERSION  /* output structure for     @L1A*/\n{                                   /*  the VERSION command     @L1A*/\n  char apiver\u00dd2\u00a8;                   /* current SMP/E version    @L1A*/\n  char apirel\u00dd2\u00a8;                   /* current SMP/E release    @L1A*/\n  char apimod\u00dd2\u00a8;                   /* current SMP/E mod. level @L1A*/\n  char apiptf\u00dd2\u00a8;                   /* current SMP/E PTF level  @L1A*/\n} API_VERSION, *P_API_VERSION;      /*                          @L1A*/\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GIMHC370": {"ttr": 7967, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n/****************************** MODULE HEADER ***********************/\n/*                                                                  */\n/* Module Name: GIMHC370                                            */\n/*                                                                  */\n/* SMP/E API Macro for C/370                                        */\n/*                                                                  */\n/* Licensed Materials - Property of IBM                             */\n/* 5694-A01  5655-G44                                               */\n/* Copyright IBM Corp. 1997, 2001                                   */\n/********************************************************************/\n/*                                                                  */\n/* ---------------------------------------------------------------- */\n/* FLAG REASON  RELEASE   DATE   ORG  DESCRIPTION                   */\n/* ---- ------- ------- -------- ---  ----------------------------- */\n/* $L0= SV1001A  1A.00  06/10/96 KAK: GIMAPI SUPPORT                */\n/* $P1= PT20078  1A.00  08/15/96 KAK: CSI_ENTRY POINTER TYPE WRONG  */\n/* $L1= SVV001B  1B.00  10/14/96 DMM: API VERSION SUPPORT           */\n/*                                                                  */\n/********************************************************************/\n/*   CHANGE FLAG KEY: M\u00a7PNC                                         */\n/*   WHERE:                                                         */\n/*                                                                  */\n/* M= MULTIPLE    P= DCRS = D,E,F,G    N= 0-9,A-Z     C= A = ADD    */\n/*    FOR DELETE     RMPS = H,I,J,K    (USE '0' ONLY     C = CHANGE */\n/*    FLAGS ONLY     LINE = L,M,N,O     WHEN ELEMENT     P = COPY   */\n/*                   PTMS = P,Q,R,S     IS BEING         M = MOVE   */\n/*                   APARS = 0-9        CREATED)         D = DELETE */\n/********************************************************************/\n#define LEN_ETYPE        12\n#define LEN_MSG          256\ntypedef  struct QUERY_PARMS  /* Parameters for QUERY command */\n\u00e4\n  char    *csi;                     /* PTR to global CSI dataset    */\n  long    csilen;                   /* Length of data set name      */\n  char    *zone;                    /* PTR to list of zones         */\n  long    zonelen;                  /* Length of zone list          */\n  char    *entrytype;               /* PTR to list of entries       */\n  long    entrylen;                 /* Length of entry list         */\n  char    *subentrytype;            /* PTR to list of subentries    */\n  long    subentrylen;              /* Length of subentry list      */\n  char    *filter;                  /* PTR to query filter          */\n  long    filterlen;                /* Length of filter             */\n\u00fc QUERY_PARMS, * P_QUERY_PARMS;\n\ntypedef  struct ENTRY_LIST   /* List of entry types          */\n\u00e4\n   struct ENTRY_LIST *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n   struct CSI_ENTRY  *entries;/* PTR to head of linked list  */\n                                    /*  of CSI_ENTRY sturctures     */\n                                    /*  listing the instances of    */\n                                    /*  this entry type             */\n  char              type\u00c412\u00dc;       /* Entry type                   */\n\u00fc ENTRY_LIST, * P_ENTRY_LIST;\n\ntypedef  struct CSI_ENTRY    /* Description of a specific    */\n\u00e4                                   /*  entry                       */\n   struct CSI_ENTRY  *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n   struct SUBENTRY   *subentries;/* PTR to head of linked    */\n                                    /*  list of SUBENTRY structures */\n                                    /*  listing the subentry values */\n                                    /*  for this entry              */\n  char              entryname\u00c48\u00dc;   /* Name of entry                */\n  char              zonename\u00c47\u00dc;    /* Zone where entry was retrieved*/\n\u00fc CSI_ENTRY, * P_CSI_ENTRY;         /*                          \u00a7P1C*/\n\ntypedef  struct SUBENTRY     /* Contains subentry data       */\n\u00e4\n   struct SUBENTRY   *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  void              *subentrydata;  /* PTR to head of linked list   */\n                                    /*  of data values for this     */\n                                    /*  subentry                    */\n  char              type\u00c412\u00dc;       /* Subentry type                */\n\u00fc SUBENTRY, * P_SUBENTRY;\n\ntypedef  struct VER          /* Place holder for subentries  */\n\u00e4                                   /*  associated with ++VER       */\n                                    /*  records of a SYSMOD         */\n   struct VER        *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n   struct SUBENTRY   *verdata;/* PTR to head of linked list  */\n                                    /*  of subentries associated    */\n                                    /*  with a ++VER                */\n  char              vernum\u00c43\u00dc;      /* ++VER statement number       */\n\u00fc VER, * P_VER;\n\ntypedef  struct ITEM_LIST    /* Holds piece of subentry data */\n\u00e4\n   struct ITEM_LIST  *next;  /* PTR to next item in linked   */\n                                    /*  list                        */\n  long              datalen;        /* Number of characters of real */\n                                    /*  data                        */\n  char              *data;          /* PTR to storage containing    */\n                                    /*  data                        */\n\u00fc ITEM_LIST, * P_ITEM_LIST;\n\ntypedef  struct API_VERSION  /* output structure for     \u00a7L1A*/\n\u00e4                                   /*  the VERSION command     \u00a7L1A*/\n  char apiver\u00c42\u00dc;                   /* current SMP/E version    \u00a7L1A*/\n  char apirel\u00c42\u00dc;                   /* current SMP/E release    \u00a7L1A*/\n  char apimod\u00c42\u00dc;                   /* current SMP/E mod. level \u00a7L1A*/\n  char apiptf\u00c42\u00dc;                   /* current SMP/E PTF level  \u00a7L1A*/\n\u00fc API_VERSION, *P_API_VERSION;      /*                          \u00a7L1A*/\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GSIOCB": {"ttr": 8021, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef  INCLUDE_GSIOCB\n#define  INCLUDE_GSIOCB\n#if  ISIS_PF_HOST_SASC\nstruct __SIOCB  /* standard I/O control block */\n\u00e4\nchar _label \u00c44\u00dc ;   /* the word \"FILE\" */\nchar *_buf;    /* current buffer start pointer */\nchar *_ptr;    /* next character pointer */\nint _size;     /* size of buffer */\nint _rcnt;     /* number of unread bytes */\nint _wcnt;     /* number of unwritten bytes */\nint _eoff;     /* offset of eof in buffer */\n               /* (record length for keyed file) */\nint _skoff;    /* offset of fseek destination */\n               /* = -1 to indicate positioning lost */\nchar _file;    /* file number */\nchar _cflags;  /* capability flags */\nchar _props;   /* property flags */\nchar _state;   /* file state flags */\nchar _layout;  /* file layout flags */\nchar _ugbuf;   /* ungotten char buffer */\nchar _kstate;  /* state info for keyed files */\nchar _padding \u00c41\u00dc ;    /* padding for unaligned execution */\nchar *_fnm;    /* pointer to original file name */\nint _twcnt;    /* number of unwritten bytes to terminal */\nvoid *_fattr;          /* file attributes structure */\n__remote int (*_amclose)();  /* access method close routine */\nunion \u00e4        /* overlay esoteric fields with delayed open fields */\n   struct \u00e4            /* fields for delayed-open files */\n      char *_oname;    /* file name (for delayed open) */\n      char *_otype;    /* file type (for delayed open) */\n      char *_oamp;     /* access method parms (for delayed open) */\n          \u00fc _delayed;\n   struct \u00e4            /* fields for opened files */\n      int _ercnt;      /* saved _rcnt after error */\n      int _ewcnt;      /* saved _wcnt after error */\n      union \u00e4\n         int _ugrcnt;     /* saved _rcnt after ungetc */\n         char *_key;      /* pointer to current key */\n            \u00fc;\n          \u00fc _open;\n       \u00fc _misc;\n\u00fc;\n\ntypedef struct __SIOCB *SIOCBFILE;   /* shorthand */\n#define _OLD_FOPEN_MAX 40       /* old max number of open files      */\n#define FOPEN_MAX 256           /* new max number of open files      */\n\n/**\n*\n* This header file defines private information used in the SAS/C I/O\n* implementation.\n*\n**/\n\n\ntypedef                         /* open file structure definition    */\n   struct \u00e4\n      char _flag1;              /* a byte of flags                   */\n      char _flag2;              /* another byte of flags             */\n      short _file;              /* file descriptor (= file number)   */\n      char *_private;           /* reserved for the access method    */\n      __remote int (**_oper)(); /* access method defined operations  */\n      __remote int (*_close)(); /* access method close routine       */\n      char *_fname;             /* file name for error messages      */\n      __remote int (*_module)();/* what to unload when file is closed*/\n   \u00fc _OFILE;\n\nstruct __IOtype \u00e4               /* structure def for I/O globals     */\n   int _Gofn;                   /* next open file number (-FOPEN_MAX */\n                                /* if 4.50 resident library)         */\n   union \u00e4                      /* overlap the old & new ways        */\n      struct \u00e4\n         SIOCBFILE _Sofa \u00c4_OLD_FOPEN_MAX\u00dc ;\n         _OFILE _Gofa \u00c4_OLD_FOPEN_MAX\u00dc ;\n      \u00fc _old;\n      struct \u00e4\n         SIOCBFILE _Sofa \u00c4FOPEN_MAX\u00dc;/* std. I/O open file array     */\n         _OFILE *_Gofa;         /* general open file array ptr       */\n      \u00fc _new;\n   \u00fc _u;\n   __remote long (*_Urio \u00c44\u00dc )();/* universal relative I/O functions */\n   __remote long (*_Usio \u00c43\u00dc )();/* universal standard I/O functions */\n\u00fc;\n\nextern struct __IOtype *__io;   /* the global I/O table pointer      */\n#endif\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GSKCMS": {"ttr": 8451, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "??=if defined(__COMPILER_VER__)\n   ??=pragma filetag(\"IBM-1047\")\n   ??=pragma nomargins nosequence\n??=endif\n\n/*********************************************************************/\n/*                                                                   */\n/*        Licensed Materials - Property of IBM                       */\n/*        5694-A01                                                   */\n/*        (C) Copyright IBM Corp. 2001                               */\n/*                                                                   */\n/*********************************************************************/\n\n/*********************************************************************/\n/*                                                                   */\n/*    gskcms.h - Certificate Management Services                     */\n/*                                                                   */\n/*********************************************************************/\n\n#ifndef _GSKCMS_H_\n#define _GSKCMS_H_\n\n#include <time.h>\n#include <gsktypes.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/*********************************************************************/\n/*  X.509 data types                                                 */\n/*********************************************************************/\n\ntypedef enum {\n    x509_alg_unknown                    = 0,\n\n            /*  Digest algorithms  */\n    x509_alg_md2Digest                  = 1,   /* 1.2.840.113549.2.2        */\n    x509_alg_md5Digest                  = 2,   /* 1.2.840.113549.2.5        */\n    x509_alg_sha1Digest                 = 3,   /* 1.3.14.3.2.26             */\n\n            /*  Asymmetric encryption algorithms  */\n    x509_alg_rsaEncryption              = 10,  /* 1.2.840.113549.1.1.1      */\n    x509_alg_idDsa                      = 11,  /* 1.2.840.10040.4.1         */\n    x509_alg_dhPublicNumber             = 12,  /* 1.2.840.10046.2.1         */\n\n            /*  Signature algorithms  */\n    x509_alg_md2WithRsaEncryption       = 20,  /* 1.2.840.113549.1.1.2      */\n    x509_alg_md5WithRsaEncryption       = 21,  /* 1.2.840.113549.1.1.4      */\n    x509_alg_sha1WithRsaEncryption      = 22,  /* 1.2.840.113549.1.1.5      */\n    x509_alg_dsaWithSha1                = 23,  /* 1.2.840.10040.4.3         */\n\n            /*  Password-based encryption algorithms  */\n    x509_alg_pbeWithMd2AndDesCbc        = 30,  /* 1.2.840.113549.1.5.1      */\n    x509_alg_pbeWithMd5AndDesCbc        = 31,  /* 1.2.840.113549.1.5.3      */\n    x509_alg_pbeWithSha1AndDesCbc       = 32,  /* 1.2.840.113549.1.5.10     */\n    x509_alg_pbeWithMd2AndRc2Cbc        = 33,  /* 1.2.840.113549.1.5.4      */\n    x509_alg_pbeWithMd5AndRc2Cbc        = 34,  /* 1.2.840.113549.1.5.6      */\n    x509_alg_pbeWithSha1AndRc2Cbc       = 35,  /* 1.2.840.113549.1.5.11     */\n    x509_alg_pbeWithSha1And40BitRc2Cbc  = 36,  /* 1.2.840.113549.1.12.1.6   */\n    x509_alg_pbeWithSha1And128BitRc2Cbc = 37,  /* 1.2.840.113549.1.12.1.5   */\n    x509_alg_pbeWithSha1And40BitRc4     = 38,  /* 1.2.840.113549.1.12.1.2   */\n    x509_alg_pbeWithSha1And128BitRc4    = 39,  /* 1.2.840.113549.1.12.1.1   */\n    x509_alg_pbeWithSha1And3DesCbc      = 40,  /* 1.2.840.113549.1.12.1.3   */\n\n            /*  Deprecated password-based encryption algorithms  */\n    x509_alg_pb1WithSha1And128BitRc4    = 50,  /* 1.2.840.113549.1.12.5.1.1 */\n    x509_alg_pb1WithSha1And40BitRc4     = 51,  /* 1.2.840.113549.1.12.5.1.2 */\n    x509_alg_pb1WithSha1And3DesCbc      = 52,  /* 1.2.840.113549.1.12.5.1.3 */\n    x509_alg_pb1WithSha1And128BitRc2Cbc = 53,  /* 1.2.840.113549.1.12.5.1.4 */\n    x509_alg_pb1WithSha1And40BitRc2Cbc  = 54,  /* 1.2.840.113549.1.12.5.1.5 */\n\n            /*  Symmetric encryption algorithms  */\n    x509_alg_desCbcPad                  = 60,  /* 1.3.14.3.2.7              */\n    x509_alg_desEde3CbcPad              = 61,  /* 1.2.840.113549.3.7        */\n    x509_alg_rc2CbcPad                  = 62,  /* 1.2.840.113549.3.2        */\n    x509_alg_rc4                        = 63,  /* 1.2.840.113549.3.4        */\n    x509_alg_aesCbcPad                  = 64,  /*                           */\n\n    x509_alg_maximum                    = 32767\n} x509_algorithm_type;\n\ntypedef enum {\n    x509_attr_unknown                   = 0,\n    x509_attr_name                      = 1,   /* 2.5.4.41                   */\n    x509_attr_surname                   = 2,   /* 2.5.4.4                    */\n    x509_attr_givenName                 = 3,   /* 2.5.4.42                   */\n    x509_attr_initials                  = 4,   /* 2.5.4.43                   */\n    x509_attr_generationQualifier       = 5,   /* 2.5.4.44                   */\n    x509_attr_commonName                = 6,   /* 2.5.4.3                    */\n    x509_attr_localityName              = 7,   /* 2.5.4.7                    */\n    x509_attr_stateOrProvinceName       = 8,   /* 2.5.4.8                    */\n    x509_attr_organizationName          = 9,   /* 2.5.4.10                   */\n    x509_attr_organizationalUnitName    = 10,  /* 2.5.4.11                   */\n    x509_attr_title                     = 11,  /* 2.5.4.12                   */\n    x509_attr_dnQualifier               = 12,  /* 2.5.4.46                   */\n    x509_attr_countryName               = 13,  /* 2.5.4.6                    */\n    x509_attr_emailAddress              = 14,  /* 1.2.840.113549.1.9.1       */\n    x509_attr_domainComponent           = 15,  /* 0.9.2342.19200300.100.1.25 */\n    x509_attr_streetAddress             = 16,  /* 2.5.4.9                    */\n    x509_attr_postalCode                = 17,  /* 2.5.4.17                   */\n    x509_attr_maximum                   = 32767\n} x509_attribute_type;\n\ntypedef enum {\n    x509_general_unknown                = 0,\n    x509_general_rfc822Name             = 1,    /* RFC 822 name */\n    x509_general_dnsName                = 2,    /* DNS name */\n    x509_general_directoryName          = 3,    /* X.500 directory name */\n    x509_general_uRI                    = 4,    /* Uniform resource name */\n    x509_general_ipAddress              = 5,    /* IP address */\n    x509_general_registeredId           = 6,    /* Registered identifier */\n    x509_general_maximum                = 32767\n} x509_general_type;\n\ntypedef enum {\n    x509_name_unknown                   = 0,\n    x509_name_dn                        = 1,    /* Distinguished name */\n    x509_name_maximum                   = 32767\n} x509_name_type;\n\ntypedef enum {\n    x509_string_unknown                 = 0,\n    x509_string_printable               = 1,    /* ASN.1 Printable string */\n    x509_string_visible                 = 2,    /* ASN.1 Visible string */\n    x509_string_teletex                 = 3,    /* ASN.1 Teletex string */\n    x509_string_ia5                     = 4,    /* ASN.1 IA5 string */\n    x509_string_utf8                    = 5,    /* ASN.1 UTF-8 string */\n    x509_string_bmp                     = 6,    /* ASN.1 BMP string */\n    x509_string_universal               = 7,    /* ASN.1 Universal string */\n    x509_string_maximum                 = 32767\n} x509_string_type;\n\ntypedef struct _x509_algorithm_identifier {\n    x509_algorithm_type         type;\n    gsk_oid                     identifier;\n    gsk_buffer                  parameter;\n} x509_algorithm_identifier;\n\ntypedef struct _x509_attribute_value {\n    x509_string_type            stringType;\n    gsk_buffer                  value;\n} x509_attribute_value;\n\ntypedef struct _x509_attribute {\n    x509_attribute_type         attributeType;\n    gsk_oid                     identifier;\n    int                         count;\n    x509_attribute_value *      values;\n} x509_attribute;\n\ntypedef struct _x509_rdn_attribute {\n    x509_attribute_type         attributeType;\n    x509_string_type            stringType;\n    gsk_oid                     identifier;\n    gsk_buffer                  name;\n    gsk_octet                   rsvd\u00dd8\u00a8;\n} x509_rdn_attribute;\n\ntypedef struct _x509_rdn {\n    int                         count;\n    x509_rdn_attribute *        attributes;\n} x509_rdn;\n\ntypedef struct _x509_rdn_sequence {\n    int                         count;\n    x509_rdn *                  rdns;\n} x509_rdn_sequence;\n\ntypedef struct _x509_name {\n    x509_name_type              type;\n    union {\n        x509_rdn_sequence       dn;\n    } u;\n} x509_name;\n\ntypedef struct _x509_general_name {\n    x509_general_type           type;\n    union {\n        x509_name               directoryName;\n        gsk_buffer              dnsName;\n        gsk_buffer              ipAddress;\n        gsk_oid                 registeredId;\n        gsk_buffer              rfc822Name;\n        gsk_buffer              uRI;\n    } u;\n    gsk_octet                   rsvd\u00dd8\u00a8;\n} x509_general_name;\n\ntypedef struct _x509_general_names {\n    int                         count;\n    x509_general_name *         names;\n} x509_general_names;\n\ntypedef struct _x509_general_subtree {\n    x509_general_name           base;\n    gsk_int32                   minimum;\n    gsk_boolean                 maximum_present;\n    gsk_int32                   maximum;\n} x509_general_subtree;\n\ntypedef struct _x509_general_subtrees {\n    int                         count;\n    x509_general_subtree *      subtrees;\n} x509_general_subtrees;\n\ntypedef struct _x509_public_key_info {\n    x509_algorithm_identifier   algorithm;\n    gsk_bitstring               subjectPublicKey;\n} x509_public_key_info;\n\n/*********************************************************************/\n/*  X.509 certificate extensions                                     */\n/*********************************************************************/\n\ntypedef enum {\n    x509_ext_unknown                    = 0,\n    x509_ext_authorityInfoAccess        = 1,   /* 1.3.6.1.5.5.7.1.1 */\n    x509_ext_authorityKeyIdentifier     = 2,   /* 2.5.29.35         */\n    x509_ext_basicConstraints           = 3,   /* 2.5.29.19         */\n    x509_ext_certificateIssuer          = 4,   /* 2.5.29.29         */\n    x509_ext_certificatePolicies        = 5,   /* 2.5.29.32         */\n    x509_ext_crlDistributionPoints      = 6,   /* 2.5.29.31         */\n    x509_ext_crlNumber                  = 7,   /* 2.5.29.20         */\n    x509_ext_crlReasonCode              = 8,   /* 2.5.29.21         */\n    x509_ext_deltaCrlIndicator          = 9,   /* 2.5.29.27         */\n    x509_ext_extKeyUsage                = 10,  /* 2.5.29.37         */\n    x509_ext_holdInstructionCode        = 11,  /* 2.5.29.23         */\n    x509_ext_invalidityDate             = 12,  /* 2.5.29.24         */\n    x509_ext_issuerAltName              = 13,  /* 2.5.29.18         */\n    x509_ext_issuingDistributionPoint   = 14,  /* 2.5.29.28         */\n    x509_ext_keyUsage                   = 15,  /* 2.5.29.15         */\n    x509_ext_nameConstraints            = 16,  /* 2.5.29.30         */\n    x509_ext_policyConstraints          = 17,  /* 2.5.29.36         */\n    x509_ext_policyMappings             = 18,  /* 2.5.29.33         */\n    x509_ext_privateKeyUsagePeriod      = 19,  /* 2.5.29.16         */\n    x509_ext_subjectAltName             = 20,  /* 2.5.29.17         */\n    x509_ext_subjectDirectoryAttributes = 21,  /* 2.5.29.9          */\n    x509_ext_subjectKeyIdentifier       = 22,  /* 2.5.29.14         */\n    x509_ext_maximum                    = 32767\n} x509_extension_type;\n\ntypedef enum {\n    x509_distname_unknown               = 0,\n    x509_distname_fullName              = 1,    /* Full name */\n    x509_distname_relativeName          = 2,    /* Relative name */\n    x509_distname_maximum               = 32767\n} x509_distname_type;\n\ntypedef enum {\n    x509_purpose_unknown                = 0,\n    x509_purpose_serverAuth             = 1,   /* 1.3.6.1.5.5.7.3.1 */\n    x509_purpose_clientAuth             = 2,   /* 1.3.6.1.5.5.7.3.2 */\n    x509_purpose_codeSigning            = 3,   /* 1.3.6.1.5.5.7.3.3 */\n    x509_purpose_emailProtection        = 4,   /* 1.3.6.1.5.5.7.3.4 */\n    x509_purpose_timeStamping           = 5,   /* 1.3.6.1.5.5.7.3.8 */\n    x509_purpose_maximum                = 32767\n} x509_purpose_type;\n\ntypedef enum {\n    x509_reason_unspecified             = 0,\n    x509_reason_keyCompromise           = 1,    /* Key compromised */\n    x509_reason_caCompromise            = 2,    /* CA compromised */\n    x509_reason_affiliationChanged      = 3,    /* Affiliation changed */\n    x509_reason_superseded              = 4,    /* Superseded */\n    x509_reason_cessationOfOperation    = 5,    /* Cessation of operation */\n    x509_reason_certificateHold         = 6,    /* Certificate hold */\n    x509_reason_removeFromCrl           = 8,    /* Remove from CRL */\n    x509_reason_maximum                 = 32767\n} x509_reason_type;\n\n#define x509_reason_unspecified_byte            0\n#define x509_reason_unspecified_mask            0x80\n#define x509_reason_keyCompromise_byte          0\n#define x509_reason_keyCompromise_mask          0x40\n#define x509_reason_caCompromise_byte           0\n#define x509_reason_caCompromise_mask           0x20\n#define x509_reason_affiliationChanged_byte     0\n#define x509_reason_affiliationChanged_mask     0x10\n#define x509_reason_superseded_byte             0\n#define x509_reason_superseded_mask             0x08\n#define x509_reason_cessationOfOperation_byte   0\n#define x509_reason_cessationOfOperation_mask   0x04\n#define x509_reason_certificateHold_byte        0\n#define x509_reason_certificateHold_mask        0x02\n#define x509_reason_removeFromCrl_byte          1\n#define x509_reason_removeFromCrl_mask          0x80\n\n#define x509_usage_digitalSignature_byte        0\n#define x509_usage_digitalSignature_mask        0x80\n#define x509_usage_nonRepudiation_byte          0\n#define x509_usage_nonRepudiation_mask          0x40\n#define x509_usage_keyEncipherment_byte         0\n#define x509_usage_keyEncipherment_mask         0x20\n#define x509_usage_dataEncipherment_byte        0\n#define x509_usage_dataEncipherment_mask        0x10\n#define x509_usage_keyAgreement_byte            0\n#define x509_usage_keyAgreement_mask            0x08\n#define x509_usage_keyCertSign_byte             0\n#define x509_usage_keyCertSign_mask             0x04\n#define x509_usage_crlSign_byte                 0\n#define x509_usage_crlSign_mask                 0x02\n#define x509_usage_encipherOnly_byte            0\n#define x509_usage_encipherOnly_mask            0x01\n#define x509_usage_decipherOnly_byte            1\n#define x509_usage_decipherOnly_mask            0x80\n\ntypedef struct _x509_authority_identifier {\n    gsk_buffer                  keyIdentifier;\n    x509_general_names          authorityCertIssuer;\n    gsk_buffer                  authorityCertSerialNumber;\n} x509_authority_identifier;\n\ntypedef struct _x509_basic_constraints {\n    gsk_boolean                 cA;\n    gsk_boolean                 pathLenConstraint_present;\n    gsk_int32                   pathLenConstraint;\n} x509_basic_constraints;\n\ntypedef struct _x509_key_usage_period {\n    gsk_boolean                 notBefore_present;\n    gsk_timeval                 notBefore;\n    gsk_boolean                 notAfter_present;\n    gsk_timeval                 notAfter;\n} x509_key_usage_period;\n\ntypedef struct _x509_policy_qualifier_info {\n    gsk_oid                     policyQualifierId;\n    gsk_buffer                  qualifier;\n} x509_policy_qualifier_info;\n\ntypedef struct _x509_policy_information {\n    gsk_oid                     policyIdentifier;\n    int                         count;\n    x509_policy_qualifier_info *policyQualifiers;\n} x509_policy_information;\n\ntypedef struct _x509_certificate_policies {\n    int                         count;\n    x509_policy_information *   policyInformation;\n} x509_certificate_policies;\n\ntypedef struct _x509_policy_mapping {\n    gsk_oid                     issuerDomainPolicy;\n    gsk_oid                     subjectDomainPolicy;\n} x509_policy_mapping;\n\ntypedef struct _x509_policy_mappings {\n    int                         count;\n    x509_policy_mapping *       mappings;\n} x509_policy_mappings;\n\ntypedef struct _x509_directory_attributes {\n    int                         count;\n    x509_attribute *            attributes;\n} x509_directory_attributes;\n\ntypedef struct _x509_name_constraints {\n    x509_general_subtrees       permittedSubtrees;\n    x509_general_subtrees       excludedSubtrees;\n} x509_name_constraints;\n\ntypedef struct _x509_policy_constraints {\n    gsk_boolean                 requireExplicitPolicy_present;\n    gsk_int32                   requireExplicitPolicy;\n    gsk_boolean                 inhibitPolicyMapping_present;\n    gsk_int32                   inhibitPolicyMapping;\n} x509_policy_constraints;\n\ntypedef struct _x509_key_purpose {\n    x509_purpose_type           type;\n    gsk_oid                     keyPurposeId;\n} x509_key_purpose;\n\ntypedef struct _x509_key_usages {\n    int                         count;\n    x509_key_purpose *          usages;\n} x509_key_usages;\n\ntypedef struct _x509_dist_point {\n    x509_distname_type          type;\n    union {\n        x509_general_names      fullName;\n        x509_rdn                relativeName;\n    } u;\n} x509_dist_point;\n\ntypedef struct _x509_crl_dist_point {\n    x509_dist_point             distributionPoint;\n    gsk_bitstring               reasons;\n    x509_general_names          crlIssuer;\n} x509_crl_dist_point;\n\ntypedef struct _x509_crl_dist_points {\n    int                         count;\n    x509_crl_dist_point *       points;\n} x509_crl_dist_points;\n\ntypedef struct _x509_issuing_dist_point {\n    x509_dist_point             distributionPoint;\n    gsk_boolean                 onlyContainsUserCerts;\n    gsk_boolean                 onlyContainsCaCerts;\n    gsk_bitstring               onlySomeReasons;\n    gsk_boolean                 indirectCrl;\n} x509_issuing_dist_point;\n\ntypedef struct _x509_info_access {\n    gsk_oid                     accessMethod;\n    x509_general_name           accessLocation;\n} x509_info_access;\n\ntypedef struct _x509_info_access_list {\n    int                         count;\n    x509_info_access *          info;\n} x509_info_access_list;\n\ntypedef struct _x509_decoded_extension {\n    x509_extension_type         type;\n    union {\n        x509_info_access_list       authorityInfoAccess;\n        x509_authority_identifier   authorityKeyIdentifier;\n        x509_basic_constraints      basicConstraints;\n        x509_general_names          certificateIssuer;\n        x509_certificate_policies   certificatePolicies;\n        x509_crl_dist_points        crlDistributionPoints;\n        gsk_int32                   crlNumber;\n        x509_reason_type            crlReasonCode;\n        gsk_int32                   deltaCrlIndicator;\n        x509_key_usages             extKeyUsage;\n        gsk_oid                     holdInstructionCode;\n        gsk_timeval                 invalidityDate;\n        x509_general_names          issuerAltName;\n        x509_issuing_dist_point     issuingDistributionPoint;\n        gsk_bitstring               keyUsage;\n        x509_name_constraints       nameConstraints;\n        x509_policy_constraints     policyConstraints;\n        x509_policy_mappings        policyMappings;\n        x509_key_usage_period       privateKeyUsagePeriod;\n        x509_general_names          subjectAltName;\n        x509_directory_attributes   subjectDirectoryAttributes;\n        gsk_buffer                  subjectKeyIdentifier;\n    } u;\n    gsk_octet                   rsvd\u00dd32\u00a8;\n} x509_decoded_extension;\n\ntypedef struct _x509_extension {\n    x509_extension_type         type;\n    gsk_oid                     identifier;\n    gsk_boolean                 critical;\n    gsk_buffer                  value;\n} x509_extension;\n\ntypedef struct _x509_extensions {\n    int                         count;\n    x509_extension *            extensions;\n} x509_extensions;\n\n/*********************************************************************/\n/*  X.509 certificate                                                */\n/*********************************************************************/\n\ntypedef enum {\n    x509_v1                     = 0,\n    x509_v2                     = 1,\n    x509_v3                     = 2,\n    x509_version_maximum        = 32767\n} x509_version;\n\ntypedef struct _x509_validity {\n    gsk_timeval                 notBefore;\n    gsk_timeval                 notAfter;\n} x509_validity;\n\ntypedef struct _x509_tbs_certificate {\n    x509_version                version;\n    gsk_buffer                  serialNumber;\n    x509_algorithm_identifier   signature;\n    x509_name                   issuer;\n    x509_validity               validity;\n    x509_name                   subject;\n    x509_public_key_info        subjectPublicKeyInfo;\n    gsk_bitstring               issuerUniqueId;\n    gsk_bitstring               subjectUniqueId;\n    x509_extensions             extensions;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} x509_tbs_certificate;\n\ntypedef struct _x509_certificate {\n    x509_tbs_certificate        tbsCertificate;\n    x509_algorithm_identifier   signatureAlgorithm;\n    gsk_bitstring               signatureValue;\n    gsk_buffer                  derCertificate;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} x509_certificate;\n\n/*********************************************************************/\n/*  X.509 certificate revocation list                                */\n/*********************************************************************/\n\ntypedef struct _x509_revoked_certificate {\n    gsk_buffer                  userCertificate;\n    gsk_timeval                 revocationDate;\n    x509_extensions             crlEntryExtensions;\n} x509_revoked_certificate;\n\ntypedef struct _x509_revoked_certificates {\n    int                         count;\n    x509_revoked_certificate *  certificates;\n} x509_revoked_certificates;\n\ntypedef struct _x509_tbs_crl {\n    x509_version                version;\n    x509_algorithm_identifier   signature;\n    x509_name                   issuer;\n    gsk_timeval                 thisUpdate;\n    gsk_boolean                 nextUpdate_present;\n    gsk_timeval                 nextUpdate;\n    x509_revoked_certificates   revokedCertificates;\n    x509_extensions             crlExtensions;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} x509_tbs_crl;\n\ntypedef struct _x509_crl {\n    x509_tbs_crl                tbsCertList;\n    x509_algorithm_identifier   signatureAlgorithm;\n    gsk_bitstring               signatureValue;\n    gsk_buffer                  derCertList;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} x509_crl;\n\ntypedef struct _x509_crls {\n    int                         count;\n    x509_crl *                  crls;\n} x509_crls;\n\n/*********************************************************************/\n/*  PKCS definitions                                                 */\n/*********************************************************************/\n\ntypedef enum {\n    pkcs_certtype_unknown               = 0,\n    pkcs_certtype_certificate           = 1,    /* X.509 certificate */\n    pkcs_certtype_extendedCertificate   = 2,    /* PKCS extended certificate */\n    pkcs_certtype_maximum               = 32767\n} pkcs_certificate_type;\n\ntypedef enum {\n    pkcs_content_unknown                = 0,\n    pkcs_content_data                   = 1,    /* 1.2.840.113549.1.7.1 */\n    pkcs_content_signedData             = 2,    /* 1.2.840.113549.1.7.2 */\n    pkcs_content_envelopedData          = 3,    /* 1.2.840.113549.1.7.3 */\n    pkcs_content_signedAndEnvelopedData = 4,    /* 1.2.840.113549.1.7.4 */\n    pkcs_content_digestedData           = 5,    /* 1.2.840.113549.1.7.5 */\n    pkcs_content_encryptedData          = 6,    /* 1.2.840.113549.1.7.6 */\n    pkcs_content_maximum                = 32767\n} pkcs_content_type;\n\ntypedef struct _pkcs_attribute {\n    gsk_oid                     attributeType;\n    gsk_buffer                  attributeValue;\n} pkcs_attribute;\n\ntypedef struct _pkcs_attributes {\n    int                         count;\n    pkcs_attribute *            attributes;\n} pkcs_attributes;\n\ntypedef struct _pkcs_cert_request_info {\n    gsk_int32                   version;\n    x509_name                   subject;\n    x509_public_key_info        subjectPublicKeyInfo;\n    pkcs_attributes             attributes;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} pkcs_cert_request_info;\n\ntypedef struct _pkcs_cert_request {\n    pkcs_cert_request_info      certificationRequestInfo;\n    x509_algorithm_identifier   signatureAlgorithm;\n    gsk_bitstring               signatureValue;\n    gsk_buffer                  derRequestInfo;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} pkcs_cert_request;\n\ntypedef struct _pkcs_content_info {\n    pkcs_content_type           type;\n    gsk_oid                     contentType;\n    gsk_buffer                  content;\n} pkcs_content_info;\n\ntypedef struct _pkcs_ext_certificate_info {\n    gsk_int32                   version;\n    x509_certificate            certificate;\n    pkcs_attributes             attributes;\n} pkcs_ext_certificate_info;\n\ntypedef struct _pkcs_ext_certificate {\n    pkcs_ext_certificate_info   extendedCertificateInfo;\n    x509_algorithm_identifier   signatureAlgorithm;\n    gsk_bitstring               signatureValue;\n    gsk_buffer                  derCertificate;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} pkcs_ext_certificate;\n\ntypedef struct _pkcs_certificate {\n    pkcs_certificate_type       type;\n    union {\n        x509_certificate        certificate;\n        pkcs_ext_certificate    extendedCertificate;\n    } u;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} pkcs_certificate;\n\ntypedef struct _pkcs_certificates {\n    int                         count;\n    pkcs_certificate *          certificates;\n} pkcs_certificates;\n\ntypedef struct _pkcs_private_key_info {\n    gsk_int32                   version;\n    x509_algorithm_identifier   privateKeyAlgorithm;\n    gsk_buffer                  privateKey;\n    pkcs_attributes             attributes;\n    gsk_buffer                  keyToken;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} pkcs_private_key_info;\n\ntypedef struct _pkcs_cert_key {\n    pkcs_certificate            certificate;\n    pkcs_private_key_info       privateKey;\n    gsk_octet                   rsvd\u00dd16\u00a8;\n} pkcs_cert_key;\n\ntypedef struct _pkcs_cert_keys {\n    int                         count;\n    pkcs_cert_key *             certKeys;\n} pkcs_cert_keys;\n\ntypedef struct _pkcs_session_key {\n    x509_algorithm_type         encryptionType;\n    gsk_buffer                  encryptionKey;\n} pkcs_session_key;\n\n/*********************************************************************/\n/*  Database definitions                                             */\n/*********************************************************************/\n\ntypedef enum {\n    gskdb_dbtype_unknown    = 0,\n    gskdb_dbtype_key        = 1,                /* Key database */\n    gskdb_dbtype_request    = 2,                /* Request database */\n    gskdb_dbtype_maximum    = 32767\n} gskdb_database_type;\n\ntypedef enum {\n    gskdb_rectype_unknown       = 0,\n    gskdb_rectype_keyPair       = 1,            /* Request key pair */\n    gskdb_rectype_certificate   = 2,            /* Certificate */\n    gskdb_rectype_certKey       = 3,            /* Certificate with key */\n    gskdb_rectype_maximum       = 32767\n} gskdb_record_type;\n\ntypedef enum {\n    gskdb_export_unknown            = 0,\n    gskdb_export_der_binary         = 1,        /* Binary ASN.1 DER */\n    gskdb_export_der_base64         = 2,        /* Base64 ASN.1 DER */\n    gskdb_export_pkcs7_binary       = 3,        /* Binary PKCS7 */\n    gskdb_export_pkcs7_base64       = 4,        /* Base64 PKCS7 */\n    gskdb_export_pkcs12v1_binary    = 5,        /* Binary PKCS12 V1 */\n    gskdb_export_pkcs12v1_base64    = 6,        /* Base64 PKCS12 V1 */\n    gskdb_export_pkcs12v3_binary    = 7,        /* Binary PKCS12 V3 */\n    gskdb_export_pkcs12v3_base64    = 8,        /* Base64 PKCS12 V3 */\n    gskdb_export_maximum            = 32767\n} gskdb_export_format;\n\ntypedef enum {\n    gskdb_source_unknown            = 0,\n    gskdb_source_key_database       = 1,        /* Key database or key ring */\n    gskdb_source_directory          = 2,        /* LDAP directory */\n    gskdb_source_trusted_certs      = 3,        /* Trusted certificates */\n    gskdb_source_untrusted_certs    = 4,        /* Untrusted certificates */\n    gskdb_source_trusted_crls       = 5,        /* Trusted CRLs */\n    gskdb_source_untrusted_crls     = 6,        /* Untrusted CRLs */\n    gskdb_source_cert_callback      = 7,        /* Certificate callback */\n    gskdb_source_crl_callback       = 8,        /* CRL checking callback */\n    gskdb_source_maximum            = 32767\n} gskdb_source_type;\n\n#define GSKDB_RECFLAG_TRUSTED   0x80            /* Trusted record */\n#define GSKDB_RECFLAG_DEFAULT   0x40            /* Default key */\n#define GSKDB_RECFLAG_MASK      0xc0\n\ntypedef struct _gskdb_record {\n    gskdb_record_type           recordType;\n    gsk_octet                   recordFlags;\n    gsk_octet                   rsvd_1\u00dd1\u00a8;\n    gsk_int32                   recordId;\n    gsk_int32                   issuerRecordId;\n    char *                      recordLabel;\n    union {\n        x509_certificate        certificate;\n        pkcs_cert_request       request;\n    } u;\n    pkcs_private_key_info       privateKey;\n    gsk_octet                   rsvd_2\u00dd16\u00a8;\n} gskdb_record;\n\ntypedef struct _gskdb_cert_callback {\n    gsk_status          (*certCallback) (\n                                x509_name *         subject,\n                                pkcs_certificates * certs);\n    void                (*freeCallback) (\n                                pkcs_certificates * certs);\n} gskdb_cert_callback;\n\ntypedef struct _gskdb_crl_callback {\n    gsk_status          (*crlCallback)(\n                                x509_certificate *  cert);\n} gskdb_crl_callback;\n\ntypedef struct _gskdb_data_source {\n    gskdb_source_type           type;\n    gsk_octet                   flags;\n    gsk_octet                   rsvd_1\u00dd1\u00a8;\n    union {\n        gsk_handle              handle;\n        pkcs_certificates       certs;\n        x509_crls               crls;\n        gskdb_cert_callback     certCallback;\n        gskdb_crl_callback      crlCallback;\n        gsk_octet               rsvd\u00dd16\u00a8;\n    } u;\n} gskdb_data_source;\n\ntypedef struct _gskdb_data_sources {\n    int                         count;\n    gskdb_data_source *         sources;\n} gskdb_data_sources;\n\n/*********************************************************************/\n/*  Function prototypes                                              */\n/*********************************************************************/\n\ngsk_status gsk_add_record (\n    gsk_handle                  db_handle,\n    gskdb_record *              record);\n\ngsk_status gsk_change_database_password (\n    const char *                filename,\n    const char *                old_password,\n    const char *                new_password,\n    gsk_time                    pwd_expiration);\n\ngsk_status gsk_change_database_record_length (\n    gsk_handle                  db_handle,\n    gsk_size                    record_length);\n\ngsk_status gsk_close_database (\n    gsk_handle *                db_handle);\n\ngsk_status gsk_close_directory (\n    gsk_handle *                directory_handle);\n\ngsk_status gsk_copy_buffer (\n    gsk_buffer *                in_buffer,\n    gsk_buffer *                out_buffer);\n\ngsk_status gsk_copy_certificate (\n    x509_certificate *          in_certificate,\n    x509_certificate *          out_certificate);\n\ngsk_status gsk_copy_certificate_extension (\n    x509_extension *            in_extension,\n    x509_extension *            out_extension);\n\ngsk_status gsk_copy_certification_request (\n    pkcs_cert_request *         in_request,\n    pkcs_cert_request *         out_request);\n\ngsk_status gsk_copy_content_info (\n    pkcs_content_info *         in_info,\n    pkcs_content_info *         out_info);\n\ngsk_status gsk_copy_crl (\n    x509_crl *                  in_crl,\n    x509_crl *                  out_crl);\n\ngsk_status gsk_copy_name (\n    x509_name *                 in_name,\n    x509_name *                 out_name);\n\ngsk_status gsk_copy_private_key_info (\n    pkcs_private_key_info *     in_info,\n    pkcs_private_key_info *     out_info);\n\ngsk_status gsk_copy_public_key_info (\n    x509_public_key_info *      in_info,\n    x509_public_key_info *      out_info);\n\ngsk_status gsk_copy_record (\n    gskdb_record *              in_rec,\n    gskdb_record **             out_rec);\n\ngsk_status gsk_create_certification_request (\n    gsk_handle                  db_handle,\n    const char *                label,\n    x509_algorithm_type         signature_algorithm,\n    int                         key_size,\n    const char *                subject_name,\n    x509_extensions *           extensions);\n\ngsk_status gsk_create_database (\n    const char *                filename,\n    const char *                password,\n    gskdb_database_type         db_type,\n    gsk_size                    record_length,\n    gsk_time                    pwd_expiration,\n    gsk_handle *                db_handle);\n\ngsk_status gsk_create_self_signed_certificate (\n    gsk_handle                  db_handle,\n    const char *                label,\n    x509_algorithm_type         signature_algorithm,\n    int                         key_size,\n    const char *                subject_name,\n    int                         num_days,\n    gsk_boolean                 ca_certificate,\n    x509_extensions *           extensions);\n\ngsk_status gsk_create_signed_certificate (\n    gsk_handle                  db_handle,\n    const char *                label,\n    int                         num_days,\n    gsk_boolean                 ca_certificate,\n    x509_extensions *           extensions,\n    gsk_buffer *                cert_request,\n    gsk_buffer *                signed_certificate);\n\ngsk_status gsk_create_signed_crl (\n    gsk_handle                  db_handle,\n    const char *                label,\n    gsk_int32                   crl_number,\n    int                         num_days,\n    x509_revoked_certificates * revoked_certificates,\n    x509_extensions *           extensions,\n    gsk_buffer *                signed_crl);\n\ngsk_status gsk_decode_base64 (\n    gsk_buffer *                encoded_data,\n    gsk_buffer *                decoded_data);\n\ngsk_status gsk_decode_certificate (\n    gsk_buffer *                stream,\n    x509_certificate *          certificate);\n\ngsk_status gsk_decode_certificate_extension (\n    x509_extension *            encoded_extension,\n    x509_decoded_extension *    decoded_extension);\n\ngsk_status gsk_decode_certification_request (\n    gsk_buffer *                stream,\n    pkcs_cert_request *         request);\n\ngsk_status gsk_decode_crl (\n    gsk_buffer *                stream,\n    x509_crl *                  crl);\n\ngsk_status gsk_decode_name (\n    gsk_buffer *                stream,\n    x509_name *                 name);\n\ngsk_status gsk_delete_record (\n    gsk_handle                  db_handle,\n    gsk_int32                   record_id);\n\ngsk_status gsk_dn_to_name (\n    const char *                dn,\n    x509_name *                 name);\n\ngsk_status gsk_encode_base64 (\n    gsk_buffer *                input_data,\n    gsk_buffer *                encoded_data);\n\ngsk_status gsk_encode_certificate_extension (\n    x509_decoded_extension *    decoded_extension,\n    gsk_boolean                 critical,\n    x509_extension *            encoded_extension);\n\ngsk_status gsk_encode_name (\n    x509_name *                 name,\n    gsk_buffer *                stream);\n\ngsk_status gsk_encode_signature (\n    gsk_buffer *                unsigned_stream,\n    x509_algorithm_identifier * algorithm,\n    gsk_bitstring *             signature,\n    gsk_buffer *                signed_stream);\n\ngsk_status gsk_export_certificate (\n    gsk_handle                  db_handle,\n    const char *                label,\n    gskdb_export_format         format,\n    gsk_buffer *                stream);\n\ngsk_status gsk_export_certification_request (\n    gsk_handle                  db_handle,\n    const char *                label,\n    gskdb_export_format         format,\n    gsk_buffer *                stream);\n\ngsk_status gsk_export_key (\n    gsk_handle                  db_handle,\n    const char *                label,\n    gskdb_export_format         format,\n    x509_algorithm_type         algorithm,\n    const char *                password,\n    gsk_buffer *                stream);\n\nvoid gsk_free_buffer (\n    gsk_buffer *                buffer);\n\nvoid gsk_free_certificate (\n    x509_certificate *          certificate);\n\nvoid gsk_free_certificates (\n    pkcs_certificates *         certificates);\n\nvoid gsk_free_certificate_extension (\n    x509_extension *            extension);\n\nvoid gsk_free_certification_request (\n    pkcs_cert_request *         request);\n\nvoid gsk_free_content_info (\n    pkcs_content_info *         content_info);\n\nvoid gsk_free_crl (\n    x509_crl *                  crl);\n\nvoid gsk_free_crls (\n    x509_crls *                 crls);\n\nvoid gsk_free_decoded_extension (\n    x509_decoded_extension *    extension);\n\nvoid gsk_free_name (\n    x509_name *                 name);\n\nvoid gsk_free_private_key_info (\n    pkcs_private_key_info *     info);\n\nvoid gsk_free_public_key_info (\n    x509_public_key_info *      info);\n\nvoid gsk_free_record (\n    gskdb_record *              record);\n\nvoid gsk_free_records (\n    int                         num_records,\n    gskdb_record **             records);\n\nvoid gsk_free_string (\n    char *                      string);\n\nvoid gsk_free_strings (\n    int                         num_strings,\n    char **                     strings);\n\nvoid gsk_generate_random_bytes (\n    gsk_buffer *                random_bytes);\n\ngsk_status gsk_get_default_key (\n    gsk_handle                  db_handle,\n    gskdb_record **             record);\n\ngsk_status gsk_get_default_label (\n    gsk_handle                  db_handle,\n    char **                     label);\n\ngsk_status gsk_get_directory_certificates (\n    gsk_handle                  directory_handle,\n    x509_name *                 subject_name,\n    gsk_boolean                 ca_certificates,\n    pkcs_certificates *         certificates);\n\ngsk_status gsk_get_directory_crls (\n    gsk_handle                  directory_handle,\n    x509_name *                 dist_point_name,\n    x509_name *                 issuer_name,\n    gsk_boolean                 ca_lists,\n    x509_crls *                 crls);\n\ngsk_status gsk_get_record_by_id (\n    gsk_handle                  db_handle,\n    gsk_int32                   id,\n    gskdb_record **             record);\n\ngsk_status gsk_get_record_by_index (\n    gsk_handle                  db_handle,\n    int                         index,\n    gskdb_record **             record);\n\ngsk_status gsk_get_record_by_label (\n    gsk_handle                  db_handle,\n    const char *                label,\n    gskdb_record **             record);\n\ngsk_status gsk_get_record_by_subject (\n    gsk_handle                  db_handle,\n    x509_name *                 name,\n    int *                       num_records,\n    gskdb_record ***            records);\n\ngsk_status gsk_get_record_labels (\n    gsk_handle                  db_handle,\n    gsk_boolean                 private_key,\n    int *                       num_labels,\n    char ***                    labels);\n\ngsk_status gsk_get_update_code (\n    gsk_handle                  db_handle,\n    gsk_uint32 *                update_code);\n\ngsk_status gsk_import_certificate (\n    gsk_handle                  db_handle,\n    const char *                label,\n    gsk_buffer *                stream);\n\ngsk_status gsk_import_key (\n    gsk_handle                  db_handle,\n    const char *                label,\n    const char *                password,\n    gsk_buffer *                stream);\n\ngsk_status gsk_make_content_msg (\n    pkcs_content_info *         content_info,\n    gsk_buffer *                stream);\n\ngsk_status gsk_make_data_content (\n    gsk_buffer *                data,\n    pkcs_content_info *         content_info);\n\ngsk_status gsk_make_data_msg (\n    gsk_buffer *                data,\n    gsk_buffer *                stream);\n\ngsk_status gsk_make_encrypted_data_content (\n    int                         version,\n    x509_algorithm_type         pbe_algorithm,\n    const char *                password,\n    int                         iterations,\n    pkcs_content_info *         content_data,\n    pkcs_content_info *         content_info);\n\ngsk_status gsk_make_encrypted_data_msg (\n    int                         version,\n    x509_algorithm_type         pbe_algorithm,\n    const char *                password,\n    int                         iterations,\n    gsk_buffer *                data,\n    gsk_buffer *                stream);\n\ngsk_status gsk_make_enveloped_data_content (\n    int                         version,\n    pkcs_session_key *          session_key,\n    pkcs_certificates *         recipient_certificates,\n    pkcs_content_info *         content_data,\n    pkcs_content_info *         content_info);\n\ngsk_status gsk_make_enveloped_data_msg (\n    int                         version,\n    pkcs_session_key *          session_key,\n    pkcs_certificates *         recipient_certificates,\n    gsk_buffer *                data,\n    gsk_buffer *                stream);\n\ngsk_status gsk_make_signed_data_content (\n    int                         version,\n    x509_algorithm_type         digest_algorithm,\n    gsk_boolean                 include_certificates,\n    pkcs_cert_keys *            signer_certificates,\n    pkcs_certificates *         ca_certificates,\n    pkcs_content_info *         content_data,\n    pkcs_content_info *         content_info);\n\ngsk_status gsk_make_signed_data_msg (\n    int                         version,\n    x509_algorithm_type         digest_algorithm,\n    gsk_boolean                 include_certificates,\n    pkcs_cert_keys *            signer_certificates,\n    pkcs_certificates *         ca_certificates,\n    gsk_buffer *                data,\n    gsk_buffer *                stream);\n\ngsk_status gsk_make_wrapped_content (\n    pkcs_content_info *         content_info,\n    pkcs_content_info *         wrapped_content);\n\ngsk_time gsk_mktime (\n    gsk_timeval *               ts);\n\ngsk_boolean gsk_name_compare (\n    x509_name *                 name1,\n    x509_name *                 name2);\n\ngsk_status gsk_name_to_dn (\n    x509_name *                 name,\n    char **                     dn);\n\ngsk_status gsk_open_database (\n    const char *                filename,\n    const char *                password,\n    gsk_boolean                 update_mode,\n    gsk_handle *                db_handle,\n    gskdb_database_type *       db_type,\n    int *                       num_records);\n\ngsk_status gsk_open_directory (\n    const char *                server_name,\n    int                         server_port,\n    const char *                user_name,\n    const char *                user_password,\n    int                         crl_cache_timeout,\n    gsk_handle *                directory_handle);\n\ngsk_status gsk_open_keyring (\n    const char *                keyring,\n    gsk_handle *                db_handle,\n    int *                       num_records);\n\nvoid gsk_query_crypto_level (\n    int *                       version,\n    int *                       release,\n    gsk_uint32 *                crypto_level);\n\n#define GSK_CRYPTO_64       0x00000001u\n#define GSK_CRYPTO_128      0x00000002u\n#define GSK_CRYPTO_168      0x00000004u\n\ngsk_timeval * gsk_rdtime (\n    gsk_time                    secs,\n    gsk_timeval *               ts);\n\ngsk_status gsk_read_content_msg (\n    gsk_buffer *                stream,\n    pkcs_content_info *         content_info);\n\ngsk_status gsk_read_data_content (\n    pkcs_content_info *         content_info,\n    gsk_buffer *                data);\n\ngsk_status gsk_read_data_msg (\n    gsk_buffer *                stream,\n    gsk_buffer *                data);\n\ngsk_status gsk_read_encrypted_data_content (\n    const char *                password,\n    pkcs_content_info *         content_info,\n    pkcs_content_info *         content_data);\n\ngsk_status gsk_read_encrypted_data_msg (\n    const char *                password,\n    gsk_buffer *                stream,\n    gsk_buffer *                data);\n\ngsk_status gsk_read_enveloped_data_content (\n    pkcs_cert_keys *            recipient_keys,\n    pkcs_content_info *         content_info,\n    x509_algorithm_type *       encryption_algorithm,\n    gsk_size *                  key_size,\n    pkcs_content_info *         content_data);\n\ngsk_status gsk_read_enveloped_data_msg (\n    pkcs_cert_keys *            recipient_keys,\n    gsk_buffer *                stream,\n    x509_algorithm_type *       encryption_algorithm,\n    gsk_size *                  key_size,\n    gsk_buffer *                data);\n\ngsk_status gsk_read_signed_data_content (\n    pkcs_certificates *         local_certificates,\n    pkcs_content_info *         content_info,\n    gsk_boolean *               used_local,\n    pkcs_certificates *         msg_certificates,\n    pkcs_certificates *         signer_certificates,\n    pkcs_content_info *         content_data);\n\ngsk_status gsk_read_signed_data_msg (\n    pkcs_certificates *         local_certificates,\n    gsk_buffer *                stream,\n    gsk_boolean *               used_local,\n    pkcs_certificates *         msg_certificates,\n    pkcs_certificates *         signer_certificates,\n    gsk_buffer *                data);\n\ngsk_status gsk_read_wrapped_content (\n    pkcs_content_info *         wrapped_content,\n    pkcs_content_info *         content_info);\n\ngsk_status gsk_receive_certificate (\n    gsk_buffer *                stream,\n    x509_certificate *          certificate);\n\ngsk_status gsk_replace_record (\n    gsk_handle                  db_handle,\n    gskdb_record *              record);\n\ngsk_status gsk_set_default_key (\n    gsk_handle                  db_handle,\n    gsk_int32                   record_id);\n\ngsk_status gsk_sign_certificate (\n    x509_certificate *          certificate,\n    pkcs_private_key_info *     private_key);\n\ngsk_status gsk_sign_crl (\n    x509_crl *                  crl,\n    pkcs_private_key_info *     private_key);\n\ngsk_status gsk_sign_data (\n    x509_algorithm_type         sign_algorithm,\n    pkcs_private_key_info *     private_key,\n    gsk_boolean                 is_digest,\n    gsk_buffer *                data,\n    gsk_buffer *                signature);\n\ngsk_status gsk_validate_certificate (\n    gskdb_data_sources *        data_sources,\n    x509_certificate *          certificate,\n    gsk_boolean                 accept_root,\n    gsk_int32 *                 issuer_record_id);\n\ngsk_status gsk_verify_certificate_signature (\n    x509_certificate *          certificate,\n    x509_public_key_info *      key);\n\ngsk_status gsk_verify_crl_signature (\n    x509_crl *                  crl,\n    x509_public_key_info *      key);\n\ngsk_status gsk_verify_data_signature (\n    x509_algorithm_type         sign_algorithm,\n    x509_public_key_info *      public_key,\n    gsk_boolean                 is_digest,\n    gsk_buffer *                data,\n    gsk_buffer *                signature);\n\n/*********************************************************************/\n/*  ASN.1 status codes                                               */\n/*********************************************************************/\n\n#define ASN_NO_MORE_DATA                    0x014ce001\n#define ASN_VALUE_OVERFLOW                  0x014ce002\n#define ASN_INVALID_LENGTH                  0x014ce003\n#define ASN_INVALID_ENCODING                0x014ce004\n#define ASN_INVALID_PARAMETER               0x014ce005\n#define ASN_NO_MEMORY                       0x014ce006\n#define ASN_INDEFINITE_NOT_ALLOWED          0x014ce007\n#define ASN_MUST_BE_PRIMITIVE               0x014ce008\n#define ASN_MUST_BE_CONSTRUCTED             0x014ce009\n#define ASN_VALUE_NOT_SET                   0x014ce00a\n#define ASN_INDEFINITE_UNSUPPORTED          0x014ce00b\n#define ASN_BAD_UNUSED_BITCOUNT             0x014ce00c\n#define ASN_SEGMENTED_BITCOUNT_ERROR        0x014ce00d\n#define ASN_WRONG_TYPE                      0x014ce00e\n#define ASN_UNCONSUMED_DATA                 0x014ce00f\n#define ASN_ELEMENTS_MISSING                0x014ce010\n#define ASN_SELECTION_OUT_OF_RANGE          0x014ce011\n#define ASN_NO_SELECTION                    0x014ce012\n#define ASN_SPECIFIC_SYNTAX_ESTABLISHED     0x014ce013\n#define ASN_CANT_CONVERT                    0x014ce014\n#define ASN_CODESET_NOT_PERMITTED           0x014ce015\n#define ASN_INVALID_VALUE                   0x014ce016\n#define ASN_X500_NO_AVA_SEP                 0x014ce017\n#define ASN_X500_NO_VALUE                   0x014ce018\n#define ASN_X500_OID_SYNTAX_ERROR           0x014ce019\n#define ASN_PKCS12_BAD_VERSION              0x014ce01a\n#define ASN_BAD_INTERVAL                    0x014ce01b\n#define ASN_OID_BAD_VALUE_0                 0x014ce01c\n#define ASN_OID_BAD_VALUE_1                 0x014ce01d\n#define ASN_OID_BAD_VALUE_2                 0x014ce01e\n#define ASN_ATTR_NOT_FOUND                  0x014ce01f\n#define ASN_UNKNOWN_CRITICAL_EXTENSION      0x014ce020\n#define ASN_X500_SYNTAX_ERROR               0x014ce021\n\n/*********************************************************************/\n/*  CMS status codes                                                 */\n/*********************************************************************/\n\n#define CMSERR_NO_MEMORY                    0x\n#define CMSERR_EXT_NOT_SUPPORTED            0x\n#define CMSERR_ALG_NOT_SUPPORTED            0x\n#define CMSERR_BAD_SIGNATURE                0x\n#define CMSERR_CRYPTO_FAILED                0x\n#define CMSERR_IO_CANCELED                  0x\n#define CMSERR_IO_ERROR                     0x\n#define CMSERR_PWD_MISMATCH                 0x\n#define CMSERR_FILE_NOT_FOUND               0x\n#define CMSERR_DB_CORRUPTED                 0x0335300a\n#define CMSERR_MSG_NOT_FOUND                0x0335300b\n#define CMSERR_BAD_HANDLE                   0x0335300c\n#define CMSERR_RECORD_DELETED               0x0335300d\n#define CMSERR_RECORD_NOT_FOUND             0x0335300e\n#define CMSERR_INCORRECT_DBTYPE             0x0335300f\n#define CMSERR_UPDATE_NOT_ALLOWED           0x\n#define CMSERR_MUTEX_ERROR                  0x\n#define CMSERR_BACKUP_EXISTS                0x\n#define CMSERR_DB_EXISTS                    0x\n#define CMSERR_RECORD_TOO_BIG               0x\n#define CMSERR_PW_EXPIRED                   0x\n#define CMSERR_PW_INCORRECT                 0x\n#define CMSERR_ACCESS_DENIED                0x\n#define CMSERR_DB_LOCKED                    0x\n#define CMSERR_LENGTH_TOO_SMALL             0x\n#define CMSERR_NO_PRIVATE_KEY               0x0335301a\n#define CMSERR_BAD_LABEL                    0x0335301b\n#define CMSERR_LABEL_NOT_UNIQUE             0x0335301c\n#define CMSERR_RECTYPE_NOT_VALID            0x0335301d\n#define CMSERR_DUPLICATE_CERTIFICATE        0x0335301e\n#define CMSERR_BAD_BASE64_ENCODING          0x0335301f\n#define CMSERR_BAD_ENCODING                 0x\n#define CMSERR_NOT_YET_VALID                0x\n#define CMSERR_EXPIRED                      0x\n#define CMSERR_NAME_NOT_SUPPORTED           0x\n#define CMSERR_ISSUER_NOT_FOUND             0x\n#define CMSERR_PATH_TOO_LONG                0x\n#define CMSERR_INCORRECT_KEY_USAGE          0x\n#define CMSERR_ISSUER_NOT_CA                0x\n#define CMSERR_FMT_NOT_SUPPORTED            0x\n#define CMSERR_ALG_NOT_AVAILABLE            0x\n#define CMSERR_RECTYPE_CHANGED              0x0335302a\n#define CMSERR_SUBJECT_CHANGED              0x0335302b\n#define CMSERR_PUBLIC_KEY_CHANGED           0x0335302c\n#define CMSERR_DEFAULT_KEY_CHANGED          0x0335302d\n#define CMSERR_SIGNED_CERTS                 0x0335302e\n#define CMSERR_CERT_CHAIN_NOT_TRUSTED       0x0335302f\n#define CMSERR_KEY_MISMATCH                 0x\n#define CMSERR_SIGNER_NOT_FOUND             0x\n#define CMSERR_CONTENT_NOT_SUPPORTED        0x\n#define CMSERR_RECIPIENT_NOT_FOUND          0x\n#define CMSERR_BAD_KEY_SIZE                 0x\n#define CMSERR_BAD_KEY_PARITY               0x\n#define CMSERR_WEAK_KEY                     0x\n#define CMSERR_BAD_IV_SIZE                  0x\n#define CMSERR_BAD_BLOCK_SIZE               0x\n#define CMSERR_BAD_BLOCK_FORMAT             0x\n#define CMSERR_NO_INVERSE                   0x0335303a\n#define CMSERR_LDAP                         0x0335303b\n#define CMSERR_LDAP_NOT_AVAILABLE           0x0335303c\n#define CMSERR_BAD_DIGEST_SIZE              0x0335303d\n#define CMSERR_BAD_FILENAME                 0x0335303e\n#define CMSERR_OPEN_FAILED                  0x0335303f\n#define CMSERR_SELF_SIGNED_NOT_FOUND        0x\n#define CMSERR_CERTIFICATE_REVOKED          0x\n#define CMSERR_BAD_ISSUER_NAME              0x\n#define CMSERR_BAD_SUBJECT_NAME             0x\n#define CMSERR_NAME_CONSTRAINTS_VIOLATED    0x\n#define CMSERR_NO_CONTENT_DATA              0x\n#define CMSERR_VERSION_NOT_SUPPORTED        0x\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GSKDEF": {"ttr": 8687, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_GSKDEF\n#define INCLUDE_GSKDEF\n\n#define deftext(t, n) \u00e4 #t,n \u00fc,\n\ndeftext(GSK_INITIALIZE_OK,0)\ndeftext(GSK_KEYFILE_IO_ERROR,1)\ndeftext(GSK_KEYFILE_OPEN_FAILED,2)\ndeftext(GSK_KEYFILE_BAD_FORMAT,3)\ndeftext(GSK_KEYFILE_BAD_PASSWORD,4)\ndeftext(GSK_KEYFILE_BAD_MALLOC,5)\ndeftext(GSK_KEYFILE_NOTHING_TO_WRITE,6)\ndeftext(GSK_KEYFILE_WRITE_FAILED,7)\ndeftext(GSK_KEYFILE_NOT_FOUND,8)\ndeftext(GSK_KEYFILE_BAD_DNAME,9)\ndeftext(GSK_KEYFILE_BAD_KEY,10)\ndeftext(GSK_KEYFILE_KEY_EXISTS,11)\ndeftext(GSK_KEYFILE_BAD_LABEL,12)\ndeftext(GSK_KEYFILE_DUPLICATE_NAME,13)\ndeftext(GSK_KEYFILE_DUPLICATE_KEY,14)\ndeftext(GSK_KEYFILE_DUPLICATE_LABEL,15)\ndeftext(GSK_BAD_FORMAT_OR_INVALID_PW,16)\ndeftext(GSK_PKDS_READ_ERROR,75)\ndeftext(GSK_WARNING_INVALID_SERVER_CERT,98)\ndeftext(GSK_WARNING_INVALID_SERVER_PRIV_KEY,99)\ndeftext(GSK_ERR_INIT_PARM_NOT_VALID,100)\ndeftext(GSK_INIT_HARD_RT,101)\ndeftext(GSK_INIT_SEC_TYPE_NOT_VALID,102)\ndeftext(GSK_INIT_V2_TIMEOUT_NOT_VALID,103)\ndeftext(GSK_INIT_V3_TIMEOUT_NOT_VALID,104)\ndeftext(GSK_KEYFILE_CERT_EXPIRED,105)\ndeftext(GSK_SOC_BAD_V2_CIPHER,-40)\ndeftext(GSK_SOC_BAD_V3_CIPHER,-41)\ndeftext(GSK_SOC_BAD_SEC_TYPE,-42)\ndeftext(GSK_SOC_BAD_SEC_TYPE_COMBINATION,-102)\ndeftext(GSK_SOC_NO_READ_FUNCTION,-43)\ndeftext(GSK_SOC_NO_WRITE_FUNCTION,-44)\ndeftext(GSK_ERROR_NO_CIPHERS,-1)\ndeftext(GSK_ERROR_NO_CERTIFICATE,-2)\ndeftext(GSK_ERROR_BAD_CERTIFICATE,-4)\ndeftext(GSK_ERROR_UNSUPPORTED_CERTIFICATE_TYPE,-6)\ndeftext(GSK_ERROR_IO,-10)\ndeftext(GSK_ERROR_BAD_MESSAGE,-11)\ndeftext(GSK_ERROR_BAD_MAC,-12)\ndeftext(GSK_ERROR_UNSUPPORTED,-13)\ndeftext(GSK_ERROR_BAD_CERT_SIG,-14)\ndeftext(GSK_ERROR_BAD_CERT,-15)\ndeftext(GSK_ERROR_BAD_PEER,-16)\ndeftext(GSK_ERROR_PERMISSION_DENIED,-17)\ndeftext(GSK_ERROR_SELF_SIGNED,-18)\ndeftext(GSK_ERROR_BAD_MALLOC,-20)\ndeftext(GSK_ERROR_BAD_STATE,-21)\ndeftext(GSK_ERROR_SOCKET_CLOSED,-22)\ndeftext(GSK_ERROR_GSK_INITIALIZATION_FAILED,-23)\ndeftext(GSK_ERROR_HANDLE_CREATION_FAILED,-24)\ndeftext(GSK_ERROR_BAD_DATE,-25)\ndeftext(GSK_ERROR_BAD_KEY_LEN_FOR_EXPORT,-26)\ndeftext(GSK_ERROR_NO_PRIVATE_KEY,-27)\ndeftext(GSK_BAD_PARAMETER,-28)\ndeftext(GSK_ERROR_INTERNAL,-29)\ndeftext(GSK_ERROR_WOULD_BLOCK,-30)\ndeftext(GSK_ERROR_LOAD_GSKLIB,-31)\ndeftext(GSK_ERROR_NO_INITIALIZE,-32)\ndeftext(GSK_ERROR_SRB,-33)\ndeftext(GSK_ERROR_UNKNOWN_ERROR,-99)\ndeftext(GSK_FUNCTION_RESET_SID,1)\ndeftext(GSK_ERROR_BAD_BUFFER_SIZE,-100)\ndeftext(GSK_ERROR_BAD_BUFFER,-103)\ndeftext(GSK_ERROR_BAD_SSL_HANDLE,-101)\ndeftext(GSK_ERROR_TIMEOUT,-102)\ndeftext(GSK_ERROR_NOT_SERVER,-50)\ndeftext(GSK_ERROR_NOT_SSLV3,-51)\ndeftext(GSK_ERROR_NOT_SSLV3_CLIENT,-52)\ndeftext(GSK_SECURE_SOC_RESET_OK,0)\n\n#undef deftext\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GSKSSL": {"ttr": 8467, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "??=if defined(__COMPILER_VER__)\n   ??=pragma filetag (\"IBM-1047\")\n??=endif\n\n /*\n  *\n  * Licensed Materials - Property of IBM\n  * 5647-A01\n  * (C) Copyright IBM Corp. 1999\n  *\n  */\n\n /*\n  * gskssl.h - header file for common SSL toolkit definitions.\n  * This file represents the typedef necessary for\n  * gsk SSL callable functions.\n  */\n\n#ifndef _gskssl_h\n#define _gskssl_h\n\n#if defined(__cplusplus)\nextern \"C\" {\n#endif\n\n   /* General definitions */\n\n#define GSK_VERSION2         2\n#define GSK_VERSION3         3\n\n#define GSK_VERSION          GSK_VERSION3\n\n#define GSK_SEC_LEVEL_US          1\n#define GSK_SEC_LEVEL_EXPORT      2\n#define GSK_SEC_LEVEL_EXPORT_FR   3\n#define GSK_LOW_SECURITY          1\n#define GSK_HIGH_SECURITY         2\n\n  /* Return codes. These are the return values */\n  /* for gsk_initialize                       */\n#define GSK_INITIALIZE_OK             0   /* Successful completion           */\n#define GSK_KEYFILE_IO_ERROR          1 /* Error: keyring io error         */\n#define GSK_KEYFILE_OPEN_FAILED       2 /* Error: keyring open error       */\n#define GSK_KEYFILE_BAD_FORMAT        3 /* Error: keyring format problem   */\n#define GSK_KEYFILE_BAD_PASSWORD      4 /* Error: Keyring password bad     */\n#define GSK_KEYFILE_BAD_MALLOC        5 /* Error: Malloc failed            */\n#define GSK_KEYFILE_NOTHING_TO_WRITE  6\n#define GSK_KEYFILE_WRITE_FAILED      7\n#define GSK_KEYFILE_NOT_FOUND         8\n#define GSK_KEYFILE_BAD_DNAME         9 /* Error: Invalid distinquish name */\n#define GSK_KEYFILE_BAD_KEY          10 /* Error: Certificate has expired  */\n#define GSK_KEYFILE_KEY_EXISTS       11\n#define GSK_KEYFILE_BAD_LABEL        12\n#define GSK_KEYFILE_DUPLICATE_NAME   13\n#define GSK_KEYFILE_DUPLICATE_KEY    14\n#define GSK_KEYFILE_DUPLICATE_LABEL  15\n#define GSK_BAD_FORMAT_OR_INVALID_PW 16\n#define GSK_PKDS_READ_ERROR          75 /* Error: hw private key read error */\n\n\n#define GSK_WARNING_INVALID_SERVER_CERT   98\n#define GSK_WARNING_INVALID_SERVER_PRIV_KEY 99\n#define GSK_ERR_INIT_PARM_NOT_VALID   100 /* Error: invalid cipher spec      */\n/* #define GSK_INIT_HARD_RT           101 */ /* Error: no keyring file or pw    */\n#define GSK_INIT_SEC_TYPE_NOT_VALID   102 /* Error: invalid security type    */\n#define GSK_INIT_V2_TIMEOUT_NOT_VALID 103 /* Error: invalid V2 timeout value */\n#define GSK_INIT_V3_TIMEOUT_NOT_VALID 104 /* Error: invalid V3 timeout value */\n#define GSK_KEYFILE_CERT_EXPIRED      105\n\n  /* Return codes. These are the return values */\n  /* for gsk_secure_soc_init                  */\n#define GSK_SOC_BAD_V2_CIPHER                   -40\n#define GSK_SOC_BAD_V3_CIPHER                   -41\n#define GSK_SOC_BAD_SEC_TYPE                    -42\n#define GSK_SOC_BAD_SEC_TYPE_COMBINATION        -102\n#define GSK_SOC_NO_READ_FUNCTION                -43\n#define GSK_SOC_NO_WRITE_FUNCTION               -44\n\n#define GSK_ERROR_NO_CIPHERS                    -1\n#define GSK_ERROR_NO_CERTIFICATE                -2\n#define GSK_ERROR_BAD_CERTIFICATE               -4\n#define GSK_ERROR_UNSUPPORTED_CERTIFICATE_TYPE  -6\n#define GSK_ERROR_IO                            -10\n#define GSK_ERROR_BAD_MESSAGE                   -11\n#define GSK_ERROR_BAD_MAC                       -12\n#define GSK_ERROR_UNSUPPORTED                   -13\n#define GSK_ERROR_BAD_CERT_SIG                  -14\n#define GSK_ERROR_BAD_CERT                      -15\n#define GSK_ERROR_BAD_PEER                      -16\n#define GSK_ERROR_PERMISSION_DENIED             -17\n#define GSK_ERROR_SELF_SIGNED                   -18\n#define GSK_ERROR_BAD_MALLOC                    -20\n#define GSK_ERROR_BAD_STATE                     -21 /* V3 */\n#define GSK_ERROR_SOCKET_CLOSED                 -22\n#define GSK_ERROR_GSK_INITIALIZATION_FAILED     -23\n#define GSK_ERROR_HANDLE_CREATION_FAILED        -24\n#define GSK_ERROR_BAD_DATE                      -25\n#define GSK_ERROR_BAD_KEY_LEN_FOR_EXPORT        -26\n#define GSK_ERROR_NO_PRIVATE_KEY                -27\n#define GSK_BAD_PARAMETER                       -28\n#define GSK_ERROR_INTERNAL                      -29\n#define GSK_ERROR_WOULD_BLOCK                   -30\n#define GSK_ERROR_LOAD_GSKLIB                   -31\n#define GSK_ERROR_NO_INITIALIZE                 -32\n#define GSK_ERROR_SRB                           -33\n#define GSK_ERROR_UNKNOWN_ERROR                 -99\n\n/* Misc functions  */\n#define GSK_FUNCTION_RESET_SID                  1\n\n/* return codes. These are the return values          */\n/* for gsk_secure_soc_write and gsk_secure_soc_read */\n#define GSK_ERROR_BAD_BUFFER_SIZE               -100\n#define GSK_ERROR_BAD_BUFFER                    -103\n\n/* return codes. These are the return values          */\n/* for gsk_secure_soc_write and gsk_secure_soc_read */\n#define GSK_ERROR_BAD_SSL_HANDLE                -101\n#define GSK_ERROR_TIMEOUT                       -102\n\n/* Return codes.  */\n#define GSK_ERROR_NOT_SERVER                    -50\n#define GSK_ERROR_NOT_SSLV3                     -51\n#define GSK_ERROR_NOT_SSLV3_CLIENT              -52\n\n\n/*Return codes for gsk_secure_soc_reset*/\n#define GSK_SECURE_SOC_RESET_OK                  0 /*Successful socket reset*/\n\n\n  /* Data type definitions */\n\ntypedef enum { GSK_AS_CLIENT,\n               GSK_AS_SERVER,\n               GSK_AS_SERVER_WITH_CLIENT_AUTH,\n               GSK_AS_CLIENT_NO_AUTH\n             } gsk_handshake;\n\ntypedef enum { GSK_CA_ROOTS_LOCAL_ONLY,\n               GSK_CA_ROOTS_LOCAL_AND_X500\n             } gsk_ca_roots;\n\ntypedef enum { GSK_CLIENT_AUTH_LOCAL,\n               GSK_CLIENT_AUTH_STRONG_OVER_SSL,\n               GSK_CLIENT_AUTH_STRONG,\n               GSK_CLIENT_AUTH_PASSTHRU\n             } gsk_auth_type;\n\ntypedef enum { GSK_SSLVERSION_V2 = 20,\n               GSK_SSLVERSION_V3 = 30\n             } gsk_sslversion;\n\ntypedef enum { GSK_RESET_SIDCACHE_CALLBACK = 100,\n               GSK_SET_SIDCACHE_CALLBACK   = 101,\n               GSK_SET_GETPEER_CALLBACK    = 102,\n               GSK_RESET_GETPEER_CALLBACK  = 103\n             } gsk_user_set_fid;\n\ntypedef unsigned long (*GSKGETPEERPTR)(int);\n\ntypedef struct _gsk_init_data {   /* Basic gsk SSL Toolkit\n                                   * initialization data\n                                   */\n\n   char * sec_types;               /* Security protocol choice        */\n                                   /* (SSLV2|SSLV3|...|ALL            */\n   char * keyring;                 /* Keyring file name               */\n                                   /* Default roots used when NULL    */\n   char * keyring_pw;              /* Keyring password                */\n                                   /* Ignored when keyring=NULL       */\n   char * keyring_stash;\n#define GSK_SSLV2_CLIENT_TIMEOUT   100\n#define GSK_SSLV2_SERVER_TIMEOUT   100\n   long V2_session_timeout;        /* Number of seconds for SSLV2     */\n                                   /* session data to time out. 0-100 */\n#define GSK_SSLV3_CLIENT_TIMEOUT 43200\n#define GSK_SSLV3_SERVER_TIMEOUT   100\n   long V3_session_timeout;        /* Number of seconds for SSLV3     */\n                                   /* session data to time out.       */\n                                   /* 0-86400 (1 day)                 */\n   char * LDAP_server;             /* Name or IP address of X500 host */\n   int    LDAP_port;               /* Port number of X500 host        */\n   char * LDAP_user;               /* User name for X500 host         */\n   char * LDAP_password;           /* Password of X500 host           */\n   gsk_ca_roots LDAP_CA_roots;     /* Which CA roots to use           */\n   gsk_auth_type auth_type;        /* Client authentication type      */\n } gsk_init_data;\n\n\ntypedef struct _gsk_cert_info {\n                                   /* Client certificate information  */\n   char * cert_body;               /* Certificate body                */\n   int    cert_body_len;           /* Lenth of certificate body       */\n   char * sessionID;               /* Current session ID              */\n   int    newSessionID;            /* TRUE if sid is new              */\n   char * serial_num;              /* Serial number                   */\n   char * common_name;             /* Common name of client           */\n   char * locality;                /* Locality                        */\n   char * state_or_province;       /* State or Province               */\n   char * country;                 /* Country                         */\n   char * org;                     /* Organization                    */\n   char * org_unit;                /* Organizational Unit             */\n   char * issuer_common_name;      /* Issuer's common name            */\n   char * issuer_locality;         /* Issuer's locality               */\n   char * issuer_state_or_province;/* Issuer's state or province      */\n   char * issuer_country;          /* Issuer's country                */\n   char * issuer_org;              /* Issuer's organization           */\n   char * issuer_org_unit;         /* Issuer's organizational unit    */\n   } gsk_cert_info;\n\n\ntypedef struct _gsk_soc_init_data {\n\n   int    fd;                      /* file descriptor                 */\n   gsk_handshake hs_type;          /* client or server handshake      */\n   char * DName;                   /* keyring entry Distinguished     */\n                                   /* name. When NULL the default     */\n                                   /* keyring entry is used           */\n   char * sec_type;                /* Type of security protocol used  */\n                                   /* to protect this socket          */\n   char * cipher_specs;            /* SSLV2 cipher specs preference   */\n   char * v3cipher_specs;          /* SSLV3 cipher specs preference   */\n                                   /* and order                       */\n   int  (* skread)                 /* User supplied READ function ptr */\n        (int fd, void * buffer, int num_bytes);\n   int  (* skwrite)                /* User supplied WRITE function ptr*/\n        (int fd, void * buffer, int num_bytes);\n   unsigned char cipherSelected\u00dd3\u00a8;/* Cipher Spec used                */\n   unsigned char v3cipherSelected\u00dd2\u00a8;/* Cipher Spec used              */\n   int    failureReasonCode;       /* failure reason code             */\n\n   gsk_cert_info * cert_info;      /* This information is read from   */\n                                   /* from the client certificate     */\n                                   /* when client authentication is   */\n                                   /* enabled                         */\n   gsk_init_data * gsk_data;\n\n} gsk_soc_init_data;\n\n\ntypedef struct _gsk_soc_data {\n   void * sk_SSLHandle;            /* gslssl connector to SSLHandlestr*/\n} gsk_soc_data;\n\ntypedef struct _gsk_sec_level {\n   int  version;                   /* Output - SSL toolkit version            */\n   char v3cipher_specs \u00dd64\u00a8;       /* Output - The sslv3 cipher specs allowed */\n   char v2cipher_specs \u00dd32\u00a8;       /* Output - The sslv2 cipher specs allowed */\n   int  security_level;            /* Output - initially one of               */\n                                   /*      GSK_SEC_LEVEL_US,                  */\n                                   /*      GSK_SEC_LEVEL_EXPORT,              */\n                                   /*      GSK_SEC_LEVEL_EXPORT_FR            */\n} gsk_sec_level;\n\ntypedef struct _gsk_data_buffer {\n   unsigned length;\n   void    *data;\n} gsk_data_buffer;\n\ntypedef struct _gsk_sidcache_callback {\n   gsk_data_buffer *(* Get)(const unsigned char *sessionID,\n                            unsigned             sessionIDLen,\n                            int                  SSLVersion);\n   gsk_data_buffer *(* Put)(gsk_data_buffer *sslSessionData,\n                            const unsigned char *sessionID,\n                            unsigned             sessionIDLen,\n                            int                  SSLVersion);\n   void (* Delete)(const unsigned char *sessionID,\n                   unsigned             sessionIDLen,\n                   int                  SSLVersion);\n   void (* FreeDataBuffer)(gsk_data_buffer *data);\n} gsk_sidcache_callback;\n\n  /* Function prototypes */\n\nint            gsk_initialize(gsk_init_data *);\nchar *         gsk_get_dn_by_label(char *label);\ngsk_soc_data * gsk_secure_soc_init(gsk_soc_init_data *);\nint            gsk_secure_soc_read(gsk_soc_data *, void *, int);\nint            gsk_secure_soc_write(gsk_soc_data *, void *, int);\nvoid           gsk_secure_soc_close(gsk_soc_data *);\nint            gsk_get_cipher_info(int level,\n\t\t\t\t   gsk_sec_level * sec_level,\n                                   void * Reserved_for_future_use);\nvoid           gsk_free_memory(void *pointer, void *future_use );\nint            gsk_user_set(int user_data_fid,\n                            void *user_input_data,\n                            void *future_user_data );\nint            gsk_uninitialize(void);\nint            gsk_secure_soc_reset(gsk_soc_data *);\n\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif /* _gskssl_h */\n\n/* end of file, No text beyond this point  */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GSKTYPES": {"ttr": 8327, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "??=if defined(__COMPILER_VER__)\n   ??=pragma filetag(\"IBM-1047\")\n   ??=pragma nomargins nosequence\n??=endif\n\n/*********************************************************************/\n/*                                                                   */\n/*        Licensed Materials - Property of IBM                       */\n/*        5694-A01                                                   */\n/*        (C) Copyright IBM Corp. 2001                               */\n/*                                                                   */\n/*********************************************************************/\n\n/*********************************************************************/\n/*                                                                   */\n/*    gsktypes.h - System SSL data types                             */\n/*                                                                   */\n/*********************************************************************/\n\n#ifndef _GSKTYPES_H_\n#define _GSKTYPES_H_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#if (defined(__COMPILER_VER__) && defined(_LP64))\ntypedef int             gsk_int32;\ntypedef unsigned int    gsk_uint32;\ntypedef short           gsk_int16;\ntypedef unsigned short  gsk_uint16;\n#else\ntypedef long            gsk_int32;\ntypedef unsigned long   gsk_uint32;\ntypedef short           gsk_int16;\ntypedef unsigned short  gsk_uint16;\n#endif\n\ntypedef int             gsk_status;\ntypedef unsigned int    gsk_size;\ntypedef int             gsk_boolean;\ntypedef unsigned char   gsk_octet;\ntypedef void *          gsk_handle;\ntypedef gsk_uint32      gsk_time;\ntypedef struct tm       gsk_timeval;\n\ntypedef struct _gsk_data_buffer {\n    gsk_size            length;\n    void *              data;\n} gsk_data_buffer, gsk_buffer;\n\ntypedef struct _gsk_bitstring {\n    int                 unused_bits;\n    gsk_size            length;\n    gsk_octet *         data;\n} gsk_bitstring;\n\ntypedef struct _gsk_oid {\n    int                 count;\n    gsk_uint32 *        elements;\n} gsk_oid;\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HDLOGREC": {"ttr": 8287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct hdlogrec \u00e4\n  unsigned char  hdrtyp;\n  unsigned char  hdroprn;\n  unsigned char  hdris;\n  unsigned char  hdrds\u00c43\u00dc;\n  unsigned char  hdrcnt;\n  unsigned char  _filler1;\n  double         hdrtm;\n  unsigned char  hdrcpid;\n  unsigned char  hdrcpser\u00c43\u00dc;\n  unsigned char  hdcpmdl\u00c42\u00dc;\n  unsigned char  _filler2\u00c42\u00dc;\n  \u00fc;\n\n/* Values for field \"_filler2\" */\n#define buff_count 128\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IAZJSAB": {"ttr": 8269, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct iazjsab \u00e4\n  unsigned char  jsabid\u00c44\u00dc;    /* JSAB ID                              */\n  void          *jsabnext;     /* JSAB CHAIN FIELD                     */\n  int            jsablen;      /* Length of control block     @410D001 */\n  unsigned char  jsabvers;     /* CONTROL BLOCK VERSION                */\n  unsigned char  jsabflg1;     /* JSAB FLAG 1                 @410D001 */\n  unsigned char  jsabflg2;     /* JSAB FLAG 2                 @410D001 */\n  struct \u00e4\n    unsigned char  _jsabclev; /* CREATING COMPONENT'S CODE LEVEL */\n    \u00fc jsabclr;\n  unsigned char  jsabscid\u00c44\u00dc;  /* SCHEDULING COMPONENT'S ID            */\n  struct \u00e4\n    unsigned char  _jsabjbid\u00c48\u00dc; /* JOB ID */\n    \u00fc jsabwkid;\n  unsigned char  jsabjbnm\u00c48\u00dc;  /* JOB NAME                             */\n  unsigned char  jsabpref\u00c48\u00dc;  /* PREFIX USED IN MESSAGES              */\n  unsigned char  jsabusid\u00c48\u00dc;  /* USERID                               */\n  unsigned char  jsabssnm\u00c44\u00dc;  /* Creating Subsystem name     @MG05383 */\n  unsigned char  jsabresc\u00c416\u00dc; /* Reserved for future use     @MG05383 */\n  double         jsabestk;     /* PROGRAM ENTRY START TIME             */\n  double         jsabxstk;     /* PROGRAM EXECUTION START TIME         */\n  void          *jsabuser;     /* USER AREA POINTER                    */\n  unsigned char  jsabgpnm\u00c48\u00dc;  /* XCF group name              @520LSDS */\n  unsigned char  jsabjsta\u00c48\u00dc;  /* JES Status                  @OW17398 */\n  int            jsabresv\u00c45\u00dc;  /* Reserved for future use     @OW17398 */\n  double         jsabend;      /* CAUSE DOUBLE WORD BOUNDARY           */\n  \u00fc;\n\n#define jsabclev jsabclr._jsabclev\n#define jsabjbid jsabwkid._jsabjbid\n\n/* Values for field \"jsabvers\" */\n#define jsabvrsn 1    /* CURRENT CONTROL BLOCK VERSION        */\n\n/* Values for field \"jsabflg1\" */\n#define jsabnval 0x80 /* This JSAB is not valid      @410D001 */\n#define jsabstsk 0x40 /* Subtask level JSAB          @R05LOPI */\n\n/* Values for field \"jsabend\" */\n#define jsabsize 0x80 /* LENGTH OF JSAB                       */\n#define jsabblsz 0x38 /* LENGTH OF CHARACTER AREA             */\n#define jsabclrl 0x71 /* Length of re-use clear area @410D001 */\n#define jsabok   0    /* JSAB PROCESSING OK                   */\n#define jsabnost 4    /* JSAB STORAGE NOT OBTAINED/RELEASED   */\n#define jsabnfnd 8    /* JSAB NOT FOUND RETURN CODE           */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IBMDEBUG": {"ttr": 8625, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_IBMDEBUG\n#define INCLUDE_IBMDEBUG\n\n#include <ctest.h>\n\n#if ( defined(ISIS_PF_MI) == 1 ]] defined(ISIS_PF_MU) == 1 ) && defined(ISIS_DEBUG) == 1\nstatic int _isis_pf_mi_debug=getenv(\"ISIS_IBMDEBUG\")?1:0;\n#ifndef ISIS_PF_MS\n  #define HOST_IBM_TRACE_x(x) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%x\u00d6n\",__FUNCTION__,#x,x);\u00fc\n  #define HOST_IBM_TRACE_s(s1) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n\",__FUNCTION__,#s1,s1);\u00fc\n  #define HOST_IBM_TRACE_ss(s1,s2) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FUNCTION__,#s1,s1,#s2,s2);\u00fc\n\t#define HOST_IBM_TRACE_sd(s1,s2) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n%s:%d\u00d6n\",__FUNCTION__,#s1,s1,#s2,s2);\u00fc\n  #define HOST_IBM_TRACE_sss(s1,s2,s3) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FUNCTION__,#s1,s1,#s2,s2,#s3,s3);\u00fc\n  #define HOST_IBM_TRACE_d(p) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%d\u00d6n\",__FUNCTION__,#p,p);\u00fc\n  #define HOST_IBM_TRACE_dd(p,p1) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%d %s:%d\u00d6n\",__FUNCTION__,#p,p,#p1,p1);\u00fc\n  #define HOST_IBM_TRACE_ddd(p,p1,p2) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%d %s:%d %s:%d\u00d6n\",__FUNCTION__,#p,p,#p1,p1,#p2,p2);\u00fc\n  #define HOST_CALL_DEBUG(s) ctest(s);\n\n\n#else\n#if defined(OWN_STDIO) == 1\n#include \"stdio.hpp\"\n#else\n#endif\n#define HOST_IBM_TRACE_x(x) \u00e4printf(\"%s %d\u00d6n%s:%x\u00d6n\",__FILE__,__LINE__,#x,x);\u00fc\n#define HOST_IBM_TRACE_s(s1) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n\",__FILE__,__LINE__,#s1,s1);\u00fc\n#define HOST_IBM_TRACE_ss(s1,s2) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FILE__,__LINE__,#s1,s1,#s2,s2);\u00fc\n#define HOST_IBM_TRACE_sd(s1,s2) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n%s:%d\u00d6n\",__FILE__,__LINE__,#s1,s1,#s2,s2);\u00fc\n#define HOST_IBM_TRACE_sss(s1,s2,s3) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FILE__,__LINE__,#s1,s1,#s2,s2,#s3,s3);\u00fc\n#define HOST_IBM_TRACE_d(p) \u00e4printf(\"%s %d\u00d6n%s:%d\u00d6n\",__FILE__,__LINE__,#p,p);\u00fc\n#define HOST_IBM_TRACE_dd(p,p1) \u00e4printf(\"%s %d\u00d6n%s:%d %s:%d\u00d6n\",__FILE__,__LINE__,#p,p,#p1,p1);\u00fc\n#define HOST_IBM_TRACE_ddd(p,p1,p2) \u00e4printf(\"%s %d\u00d6n%s:%d %s:%d %s:%d\u00d6n\",__FILE__,__LINE__,#p,p,#p1,p1,#p2,p2);\u00fc\n#define HOST_CALL_DEBUG(s)\n#endif\n\n#else\n  #define HOST_IBM_TRACE_x(x)\n  #define HOST_IBM_TRACE_s(s1)\n  #define HOST_IBM_TRACE_ss(s1,s2)\n  #define HOST_IBM_TRACE_sd(s1,s2)\n  #define HOST_IBM_TRACE_sss(s1,s2,s3)\n  #define HOST_IBM_TRACE_d(p)\n  #define HOST_IBM_TRACE_dd(p,p1)\n  #define HOST_IBM_TRACE_ddd(p,p1,p2)\n  #define HOST_CALL_DEBUG(s)\n#endif\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ICT": {"ttr": 7927, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ict \u00e4\n  unsigned char  ictict\u00c44\u00dc;  /* -          ACRONYM IN EBCDIC -ICT-                  */\n  short int      iccndcti;   /* -             AVG CONNECT TIME PER EXCP   @PCC3765  */\n  short int      icctpilo;   /* -  (OPT PARM)  LOW THRESHOLD FOR PERCENT TPI        */\n  short int      icctpihi;   /* -  (OPT PARM)  HIGH THRESHOLD FOR PERCENT TPI       */\n  short int      iccrsv1;    /* @L1C                                                */\n  int            iccrsv2;    /* @L1C                                                */\n  short int      iccrsv3;    /* @L1C                                                */\n  short int      iccedmdl;   /* -             EST DD DMB DELAY IMPACT     @G860P26  */\n  struct \u00e4\n    int            _icvtpib; /* -              BASE COUNT OF I/O INTERRUPTS */\n    \u00fc iccend;\n  int            icvslihb;   /* -              BASE COUNT OF I/O INTERRUPTS         */\n  short int      icvtpip;    /* -              PERCENT OF I/O INTERRUPS HANDLED     */\n  short int      icvrsva;    /* -              RESERVED                    @G860P26 */\n  int            icvrsv1;    /* @L1C                                                */\n  void          *iccms600;   /* -       SRM CHANNEL DATA NOW AVAILABLE              */\n  void          *iccms601;   /* -       SRM CHANNEL DATA NO LONGER AVAILABLE        */\n  void          *iccms602;   /* -       XX,SRM CHANNEL MEASUREMENTS                 */\n  void          *iccms603;   /* -       XX,PROCESSOR CONTROLLER COUNTS              */\n  void          *iccms604;   /* -       CHANNEL PATH MEASURMENT FACILITY            */\n  void          *iccms605;   /* -       CHANNEL PATH MEASUREMENT FACILITY           */\n  unsigned char  ictflags;   /* -              I/O CONTROL FLAGS                    */\n  unsigned char  ictrsva\u00c43\u00dc; /* -              RESERVED                   @G860P26  */\n  int            ictrsvb;    /* -               RESERVED                   @G860P26 */\n  int            ictrsvc;    /* -               RESERVED                       @H5A */\n  double         ictend;     /* -                END OF ICT                         */\n  \u00fc;\n\n#define icvtpib iccend._icvtpib\n\n/* Values for field \"ictflags\" */\n#define ictdrsv4 0x80 /* -               RESERVED                  @ZM43085 */\n#define ictdisab 0x08 /* DISABLE REQUEST TO IL5          @H6A               */\n\n/* Values for field \"ictend\" */\n#define ictlen   0x48 /* -        LENGTH OF ICT                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IEFJFCBN": {"ttr": 8493, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct iefjfcbn \u00e4\n  unsigned char  jfcbdsnm\u00c444\u00dc;  /* -  DATA SET NAME (DSNAME=)                             */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _jfcipltx\u00c47\u00dc; /* -  MODULE NAME OF NETWORK CONTROL PROGRAM */\n      unsigned char  _filler1;\n      \u00fc _iefjfcbn_struct1;\n    struct \u00e4\n      unsigned char  _jfcbelnm\u00c48\u00dc; /* -  DSNAME= ELEMENT (MEMBER) NAME (DSNAME=x(member)) */\n      \u00fc jfcblsrd;\n    \u00fc _iefjfcbn_union1;\n  unsigned char  jfcbtsdm;      /* -     JOB MANAGEMENT/DATA MANAGEMENT INTERFACE         */\n  unsigned char  jfcbdscb\u00c43\u00dc;   /* -   TTR OF THE FORMAT 1 DSCB FOR DATA SET              */\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _jfcamcro\u00c42\u00dc; /* -   CHECKPOINT/RESTART OPTION INDICATORS     */\n        short int      _jfcamstr;    /* -     NUMBER OF STRINGS  (AMP=('STRNO=num')) */\n        \u00fc jfcrbido;\n      \u00fc jfcbfrid;\n    \u00fc jfcfcbid;\n  short int      jfcbadbf;      /* -     NUMBER OF DATA BUFFERS  (AMP=('BUFND=num'))      */\n  short int      jfcnlrec;      /* -     LOGICAL RECORD LENGTH (VSAM)              ICB438 */\n  struct \u00e4\n    unsigned char  _jfctdsi1; /* -  TDSI byte 1                                 @L7C */\n    unsigned char  _jfctdsi2; /* -  TDSI byte 2                                 @L7C */\n    \u00fc jfcbtdsi;\n  unsigned char  jfcbltyp;      /* -     LABEL TYPE (LABEL=)                              */\n  struct \u00e4\n    char           _jfcbufof; /* -   TAPE DATA SET - THIS FIELD CONTAINS THE BUFFER */\n    short int      _jfcbflsq; /* -     LABEL=  FILE (DATA SET) SEQUENCE NUMBER      */\n    \u00fc jfcbottr;\n  short int      jfcbvlsq;      /* -     VOLUME= VOLUME SEQUENCE NUMBER                   */\n  struct \u00e4\n    unsigned char  _jfcbops1\u00c45\u00dc; /* -   OPEN ROUTINE INTERNAL SWITCHES   */\n    unsigned char  _jfcbflg1;    /* -     FLAG BYTE                      */\n    unsigned char  _jfcbflg2;    /* -     FLAG BYTE OF OPEN SWITCHES     */\n    unsigned char  _jfcbops2;    /* -     OPEN ROUTINE INTERNAL SWITCHES */\n    \u00fc jfcbmask;\n  unsigned char  jfcbcrdt\u00c43\u00dc;   /* -   DATA SET CREATION DATE in the format: 'YYDDDD'     */\n  unsigned char  jfcbxpdt\u00c43\u00dc;   /* -   DATA SET EXPIRATION DATE (LABEL=EXPDT=)            */\n  unsigned char  jfcbind1;      /* -     INDICATOR BYTE 1                                 */\n  unsigned char  jfcbind2;      /* -     INDICATOR BYTE 2                                 */\n  struct \u00e4\n    union \u00e4\n      struct \u00e4\n        struct \u00e4\n          struct \u00e4\n            struct \u00e4\n              struct \u00e4\n                unsigned char  _jfcbufrq; /* -   ** RESERVED-O **      (DCB=BUFRQ=) */\n                \u00fc jfcbfout;\n              \u00fc jfcbufin;\n            \u00fc jfcbufno;\n          struct \u00e4\n            struct \u00e4\n              struct \u00e4\n                unsigned char  _jfcbftek; /* -     BUFFERING TECHNIQUE (DCB=BFTEK=) */\n                \u00fc jfcbfaln;\n              \u00fc jfcbhiar;\n            \u00fc jfcbgncp;\n          unsigned char  _filler2;\n          \u00fc jfcamsva;\n        unsigned char  _filler3;\n        \u00fc _iefjfcbn_struct2;\n      struct \u00e4\n        unsigned char  _filler4\u00c42\u00dc;\n        short int      _jfcbufl;     /* -     BUFFER LENGTH (DCB=BUFL=) */\n        \u00fc _iefjfcbn_struct3;\n      \u00fc _iefjfcbn_union2;\n    \u00fc jfcamptr;\n  unsigned char  jfceropt;      /* -     ERROR OPTION  (DCB=EROPT=)                       */\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          struct \u00e4\n            unsigned char  _jfcprtsp; /* -     NORMAL PRINTER SPACING (DCB=PRTSP=) */\n            \u00fc jfcstack;\n          \u00fc jfcmode;\n        \u00fc jfccode;\n      \u00fc jfckeyle;\n    \u00fc jfctrtch;\n  unsigned char  jfcden;        /* -     TAPE DENSITY - 2400/3400 SERIES MAGNETIC TAPE    */\n  struct \u00e4\n    unsigned char  _jfcbothi;    /* High order  byte for JFCBOTTR.  Valid only if     */\n    unsigned char  _jfctrkbl\u00c42\u00dc; /* -     DATA SET OPENED FOR MOD - IF AUTOMATIC STEP */\n    \u00fc jfclimct;\n  struct \u00e4\n    unsigned char  _jfcdsrg1; /* -      BYTE 1 OF JFCDSORG (DCB=DSORG=)       */\n    unsigned char  _jfcdsrg2; /* -      BYTE 2 OF JFCDSORG (DCB=DSORG= cont.) */\n    \u00fc jfcdsorg;\n  unsigned char  jfcrecfm;      /* -     RECORD FORMAT (DCB=RECFM=) (AMP=('RECFM='))      */\n  unsigned char  jfcoptcd;      /* -     OPTION CODES (DCB=OPTCD=)                        */\n  struct \u00e4\n    struct \u00e4\n      short int      _jfcbaxbf; /* -     NUMBER OF INDEX BUFFERS  (AMP=('BUFNI=num')) */\n      \u00fc jfcbufsi;\n    \u00fc jfcblksi;\n  short int      jfclrecl;      /* -     LOGICAL RECORD LENGTH (DCB=LRECL=)               */\n  struct \u00e4\n    char           _jfcbufmx; /* -   MAXIMUM NUMBER OF BUFFERS (DCB=BUFMAX=) */\n    \u00fc jfcncp;\n  struct \u00e4\n    unsigned char  _jfcpci; /* -     PROGRAM-CONTROLLED INTERRUPTION (PCI) FLAG */\n    \u00fc jfcntm;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        short int      _jfcrkp;   /* -     THE RELATIVE POSITION OF THE FIRST BYTE OF THE */\n        unsigned char  _jfccylof; /* -   CYLINDER OVERFLOW (DCB=CYLOFL=)                  */\n        unsigned char  _jfcdbufn; /* -     RESERVED                                       */\n        \u00fc jfcrbidc;\n      \u00fc jfcresrv;\n    unsigned char  _jfcucsid\u00c44\u00dc; /* -   NAME OF THE UCS IMAGE TO BE LOADED (UCS=parm1) */\n    \u00fc _iefjfcbn_union3;\n  union \u00e4\n    unsigned char  _jfcintvl; /* -   INTERVAL (DCB=INTVL=)                     */\n    unsigned char  _jfcucsop; /* -     OPERATION OF THE UCS IMAGE TO BE LOADED */\n    \u00fc _iefjfcbn_union4;\n  struct \u00e4\n    unsigned char  _jfccpri; /* -     TRANSMISSION PRIORITY (DCB=CPRI=)   (TCAM) */\n    \u00fc jfcthrsh;\n  short int      jfcsowa;       /* -     ** RESERVED-O **  (DCB=SOWA=)                    */\n  unsigned char  jfcbntcs;      /* -   NUMBER OF OVERFLOW TRACKS                          */\n  unsigned char  jfcbnvol;      /* -   NUMBER OF VOLUME SERIAL NUMBERS                    */\n  struct \u00e4\n    unsigned char  _filler5\u00c422\u00dc;  /* -  FIRST 22 BYTES OF JFCBVOLS              @Z30LP9A  */\n    unsigned char  _jfcmsvgp\u00c48\u00dc;  /* -   ** RESERVED-O **    (MDC306)            @Z30LP9A */\n    \u00fc jfcbvols;\n  unsigned char  jfcbextl;      /* -   LENGTH OF BLOCK OF EXTRA VOLUME SERIAL NUMBERS     */\n  unsigned char  jfcbexad\u00c43\u00dc;   /* -   SYSTEM VIRTUAL ADDRESS (SVA) OF FIRST JFCB         */\n  struct \u00e4\n    unsigned char  _jfcrunit\u00c43\u00dc; /* -   UNIT TYPE (EBCDIC) OF A DEVICE AT A REMOTE */\n    \u00fc jfcbpqty;\n  unsigned char  jfcbctri;      /* -     SPACE PARAMETERS (SPACE=)                        */\n  struct \u00e4\n    short int      _jfcrqid;  /* -     QUEUE IDENTIFICATION (QID) USED BY ACCESS        */\n    unsigned char  _filler6;  /* -     LAST BYTE OF JFCBSQTY  (MDC304)         @XM05457 */\n    \u00fc jfcbsqty;\n  unsigned char  jfcflgs1;      /* -     FLAG BYTE (ICB488)                       SA53458 */\n  unsigned char  jfcbdqty\u00c43\u00dc;   /* -   SPACE= Directory quantity (SPACE=(,(,,dir-qty)))   */\n  unsigned char  jfcbflg3;      /* -     FLAG BYTE (OS/VS2)  (MDC316)            @ZA18180 */\n  short int      jfcbrv08;      /* -       RESERVED (OS/VS2)                     @ZA18180 */\n  short int      jfcbabst;      /* -     SPACE= Absolute track (ABSTR) request address    */\n  int            jfcbsbnm : 24; /* -   ** RESERVED-O **    (SUBALLOC=)                    */\n  unsigned char  jfcbdrlh\u00c43\u00dc;   /* -   SPACE= AVERAGE DATA BLOCK LENGTH (blklgth)         */\n  unsigned char  jfcbvlct;      /* -   VOLUME COUNT (volct)   (VOL=(,,,volct)             */\n  unsigned char  jfcvldq;       /* -   Volser dequeue indicators (bit placement    @05C   */\n  \u00fc;\n\n#define jfcipltx _iefjfcbn_union1._iefjfcbn_struct1._jfcipltx\n#define jfcbelnm _iefjfcbn_union1.jfcblsrd._jfcbelnm\n#define jfcamcro jfcfcbid.jfcbfrid.jfcrbido._jfcamcro\n#define jfcamstr jfcfcbid.jfcbfrid.jfcrbido._jfcamstr\n#define jfctdsi1 jfcbtdsi._jfctdsi1\n#define jfctdsi2 jfcbtdsi._jfctdsi2\n#define jfcbufof jfcbottr._jfcbufof\n#define jfcbflsq jfcbottr._jfcbflsq\n#define jfcbops1 jfcbmask._jfcbops1\n#define jfcbflg1 jfcbmask._jfcbflg1\n#define jfcbflg2 jfcbmask._jfcbflg2\n#define jfcbops2 jfcbmask._jfcbops2\n#define jfcbufrq jfcamptr._iefjfcbn_union2._iefjfcbn_struct2.jfcamsva.jfcbufno.jfcbufin.jfcbfout._jfcbufrq\n#define jfcbftek jfcamptr._iefjfcbn_union2._iefjfcbn_struct2.jfcamsva.jfcbgncp.jfcbhiar.jfcbfaln._jfcbftek\n#define jfcbufl  jfcamptr._iefjfcbn_union2._iefjfcbn_struct3._jfcbufl\n#define jfcprtsp jfctrtch.jfckeyle.jfccode.jfcmode.jfcstack._jfcprtsp\n#define jfcbothi jfclimct._jfcbothi\n#define jfctrkbl jfclimct._jfctrkbl\n#define jfcdsrg1 jfcdsorg._jfcdsrg1\n#define jfcdsrg2 jfcdsorg._jfcdsrg2\n#define jfcbaxbf jfcblksi.jfcbufsi._jfcbaxbf\n#define jfcbufmx jfcncp._jfcbufmx\n#define jfcpci   jfcntm._jfcpci\n#define jfcrkp   _iefjfcbn_union3.jfcresrv.jfcrbidc._jfcrkp\n#define jfccylof _iefjfcbn_union3.jfcresrv.jfcrbidc._jfccylof\n#define jfcdbufn _iefjfcbn_union3.jfcresrv.jfcrbidc._jfcdbufn\n#define jfcucsid _iefjfcbn_union3._jfcucsid\n#define jfcintvl _iefjfcbn_union4._jfcintvl\n#define jfcucsop _iefjfcbn_union4._jfcucsop\n#define jfccpri  jfcthrsh._jfccpri\n#define jfcmsvgp jfcbvols._jfcmsvgp\n#define jfcrunit jfcbpqty._jfcrunit\n#define jfcrqid  jfcbsqty._jfcrqid\n\n/* Values for field \"jfcbtsdm\" */\n#define jfccat   0x80 /* -   DATA SET IS CATALOGED                          */\n#define jfcvsl   0x40 /* -   VOLUME SERIAL LIST HAS BEEN CHANGED            */\n#define jfcsds   0x20 /* -   SUBSYSTEM DATA SET - This dataset is either    */\n#define jfcttr   0x10 /* -   A JOB STEP IS TO BE RESTARTED.  USE JFCBOTTR   */\n#define jfcnwrit 0x08 /* -   DO NOT WRITE BACK THE JFCB DURING OPEN         */\n#define jfcndscb 0x04 /* -   DO NOT MERGE DSCB OR LABEL FIELDS INTO THIS    */\n#define jfcndcb  0x02 /* -   DO NOT MERGE DCB FIELDS INTO THIS JFCB         */\n#define jfcpat   0x01 /* -   THE PATTERNING DSCB IS COMPLETE                */\n\n/* Values for field \"jfctdsi1\" */\n#define jfctrkno 0xF0 /* -   Track recording technique                 @L7A */\n#define jfcnorec 0x00 /* -   Recording technology unknown or not       @L7A */\n#define jfc18trk 0x10 /* -   18 track recording mode - (hex value)     @L7A */\n#define jfc36trk 0x20 /* -   36 track recording mode - (hex value)     @L7A */\n#define jfc128tk 0x30 /* -   128 track recording mode - (hex value)    @04A */\n#define jfc256tk 0x40 /* -   256 track recording mode - (hex value)    @07A */\n#define jfc384tk 0x50 /* -   384 track recording mode - (hex value)    @L9A */\n#define jfcefmt1 0x60 /* -   Enterprise Format 1 - (hex value)         @LBA */\n#define jfcefmt2 0x70 /* -   Enterprise Format 2 - (hex value)         @LEA */\n#define jfceefm2 0x80 /* -   Enterprise Encryption Format 2 - (hex     @LGA */\n#define jfcefmt3 0x90 /* -   Enterprise Format 3 - (hex value)         @0CA */\n#define jfceefm3 0xA0 /* -   Enterprise Encryption Format 3 - (hex     @0CA */\n#define jfcmedia 0x0F /* -   Media type                                @L7A */\n#define jfcnomed 0x00 /* -   Media type unknown or not specified       @L7A */\n#define jfcbmed1 0x01 /* -   Cartridge System Tape - (hex value)       @L7A */\n#define jfcbmed2 0x02 /* -   Enhanced Capacity Cartridge System Tape   @L7A */\n#define jfcbmed3 0x03 /* -   1/2 inch / 320 meter particle media       @04A */\n#define jfcbmed4 0x04 /* -   Reserved for future media type            @04A */\n#define jfcbmed5 0x05 /* -   Enterprise Cartridge Tape                 @LBC */\n#define jfcbmed6 0x06 /* -   Enterprise WORM Cartridge Tape            @LDC */\n#define jfcbmed7 0x07 /* -   Enterprise Economy Cartridge Tape         @LDC */\n#define jfcbmed8 0x08 /* -   Enterprise Economy WORM Cartridge Tape    @LDC */\n#define jfcbmed9 0x09 /* -   Enterprise Extended Cartridge Tape        @LEA */\n#define jfcbme10 0x0A /* -   Enterprise Extended WORM Cartridge Tape   @LEA */\n\n/* Values for field \"jfctdsi2\" */\n#define jfcompty 0xF0 /* -   Compaction type. Does not necessarily     @L7A */\n#define jfccmpns 0x00 /* -   Compaction type unknown or not specified  @L7A */\n#define jfcnocmp 0x10 /* -   Compaction not used - (hex value)         @L7A */\n#define jfcbidrc 0x20 /* -   Compaction type=IDRC - (hex value)        @L7A */\n#define jfcbcmpy 0x20 /* -   Compaction = YES - (hex value)            @04A */\n#define jfcspecl 0x0F /* -   Special attributes                        @L7A */\n#define jfcnospc 0x00 /* -   Volume has no special attributes          @L7A */\n#define jfcrdcom 0x01 /* -   Read compatibility attribute. When set,   @L7A */\n\n/* Values for field \"jfcbltyp\" */\n#define jfcdseqn 0x80 /* -   DATASET SEQUENCE NUMBER Specified              */\n#define jfcbal   0x40 /* -   AL  - ISO/ANSI (ver 1) ISO/ANSI/FIPS (ver 3)   */\n#define jfcbltm  0x20 /* -   LTM - LEADING TAPE MARK                        */\n#define jfcblp   0x10 /* -   BLP - BYPASS LABEL PROCESSING                  */\n#define jfcsul   0x0A /* -   SUL - STANDARD and USER LABELs                 */\n#define jfcnsl   0x04 /* -   NSL - NONSTANDARD LABEL                        */\n#define jfcsl    0x02 /* -   SL  - STANDARD LABEL  (default)                */\n#define jfcnl    0x01 /* -   NL  - NO LABEL                                 */\n\n/* Values for field \"jfcbufof\" */\n#define jfcbfofl 0x80 /* -   L - Specifies that the block prefix is 4bytes  */\n\n/* Values for field \"jfcbflg1\" */\n#define jfcstand 0x80 /* -   VOLUME LABEL PROCESSING STANDARD               */\n#define jfcslcre 0x40 /* -   CREATION OF A STANDARD LABEL IS NECESSARY      */\n#define jfcsldes 0x20 /* -   DESTRUCTION OF A STANDARD LABEL IS NECESSARY   */\n#define jfcdual  0x10 /* -   DUAL-DENSITY CHECK DETECTED                    */\n#define jfcopen  0x0F /* -   OPEN ROUTINE INTERNAL SWITCHES                 */\n#define jfcsnsvl 0x08 /* -   VOLID EXTRACTED FROM SENSE                @LFA */\n#define jfcbpwbp 0x01 /* -   PASSWORD BYPASS INDICATOR               MDC010 */\n\n/* Values for field \"jfcbflg2\" */\n#define jfcinop  0x80 /* -   TREAT THE INOUT OPTION OF OPEN AS INPUT        */\n#define jfcoutop 0x40 /* -   TREAT THE OUTIN OPTION OF OPEN AS OUTPUT       */\n#define jfcdefer 0x20 /* -   SET ONLY IN A JFCB RECORDED IN A DATA SET      */\n#define jfcnrps  0x20 /* -   USE BY OPEN ROUTINES - SET TO INDICATE THAT    */\n#define jfcmodnw 0x10 /* -   DISPOSITION OF THIS DATA SET HAS BEEN CHANGED  */\n#define jfcsdrps 0x08 /* -   USE SEARCH DIRECT FOR ROTATIONAL POSITION      */\n#define jfctrace 0x04 /* -   GTF TRACE IS TO OCCUR DURING OPEN/CLOSE/EOV    */\n#define jfcbbuff 0x02 /* -   If ON, JFCBUFOF contains either a user-coded   */\n#define jfcrctlg 0x01 /* -   OPEN HAS UPDATED THE TTR.  SCHEDULER STEP      */\n\n/* Values for field \"jfcbind1\" */\n#define jfcrlse  0xC0 /* -   RELEASE EXTERNAL STORAGE (SPACE=(,(,),RLSE))   */\n#define jfcloc   0x30 /* -   DATA SET HAS BEEN LOCATED                      */\n#define jfcadded 0x0C /* -   NEW VOLUME HAS BEEN ADDED TO THE DATA SET      */\n#define jfcgdg   0x02 /* -   DATA SET IS A MEMBER OF A GENERATION DATA      */\n#define jfcpds   0x01 /* -   DATA SET IS A MEMBER OF A PARTITIONED DATA SET */\n#define jfcbrlse 0x40 /* -   ** RESERVED-O **                               */\n#define jfcbloct 0x10 /* -   ** RESERVED-O **                               */\n#define jfcbnewv 0x04 /* -   ** RESERVED-O **                               */\n#define jfcbpmem 0x01 /* -   ** RESERVED-O **                               */\n\n/* Values for field \"jfcbind2\" */\n#define jfcdisp  0xC0 /* -   BIT PATTERN FOR NEW, MOD, OLD                  */\n#define jfcnew   0xC0 /* -   NEW DATA SET  (DISP=NEW)                       */\n#define jfcmod   0x80 /* -   MOD DATA SET  (DISP=MOD)                       */\n#define jfcold   0x40 /* -   OLD DATA SET  (DISP=OLD)                       */\n#define jfcbrwpw 0x30 /* -   PASSWORD IS REQUIRED TO WRITE BUT NOT TO READ  */\n#define jfcsecur 0x10 /* -   PASSWORD IS REQUIRED TO READ OR TO WRITE       */\n#define jfcshare 0x08 /* -   SHARED DATA SET                                */\n#define jfcent   0x04 /* -   DELETE THIS JFCB BEFORE ALLOCATION FOR A       */\n#define jfcreq   0x02 /* -   STORAGE VOLUME REQUESTED                       */\n#define jfctemp  0x01 /* -   DATA SET WILL BE DELETED WHEN JOB COMPLETES    */\n#define jfcbstat 0x40 /* -   ** RESERVED-O **                               */\n#define jfcbscty 0x10 /* -   ** RESERVED-O **                               */\n#define jfcbgdga 0x04 /* -   ** RESERVED-O **                               */\n\n/* Values for field \"jfcbftek\" */\n#define jfcsim   0x40 /* -   S - SIMPLE BUFFERING                           */\n#define jfcbbfta 0x60 /* -   A - AUTOMATIC RECORD AREA CONSTRUCTION         */\n#define jfcbbftr 0x20 /* -   R - FOR BSAM CREATE BDAM PROCESSING OR BDAM    */\n#define jfcexc   0x10 /* -   E - EXCHANGE BUFFERING                         */\n#define jfcdyn   0x08 /* -   D - DYNAMIC BUFFERING                          */\n\n/* Values for field \"jfcbfaln\" */\n#define jfcdword 0x02 /* -   D - DOUBLE WORD BOUNDARY                       */\n#define jfcfword 0x01 /* -   F - FULL WORD BOUNDARY                         */\n\n/* Values for field \"jfcbhiar\" */\n#define jfchier  0x84 /* -   ** RESERVED-O **                               */\n#define jfchier1 0x04 /* -   ** RESERVED-O **                               */\n\n/* Values for field \"jfceropt\" */\n#define jfcacc   0x80 /* -   ACC - ACCEPT                                   */\n#define jfcskp   0x40 /* -   SKP - SKIP                                     */\n#define jfcabn   0x20 /* -   ABE - ABNORMAL END OF TASK                     */\n#define jfctopt  0x10 /* -   T   - ON-LINE TERMINAL TEST (BTAM)      ICB349 */\n#define jfcrsv02 0x08 /* RESERVED                                           */\n#define jfcrsv03 0x04 /* RESERVED                                           */\n#define jfcrsv04 0x02 /* RESERVED                                           */\n#define jfcrsv05 0x01 /* RESERVED                                           */\n\n/* Values for field \"jfcprtsp\" */\n#define jfcspthr 0x19 /* -   3 - SPACE THREE LINES                          */\n#define jfcsptwo 0x11 /* -   2 - SPACE TWO LINES                            */\n#define jfcspone 0x09 /* -   1 - SPACE ONE LINE                             */\n#define jfcspno  0x01 /* -   0 - NO SPACING                                 */\n\n/* Values for field \"jfcstack\" */\n#define jfctwo   0x02 /* -   2 - STACKER TWO                                */\n#define jfcone   0x01 /* -   1 - STACKER ONE                                */\n\n/* Values for field \"jfcmode\" */\n#define jfcbin   0x80 /* -   C - Card Image (COLUMN BINARY MODE)            */\n#define jfcebcd  0x40 /* -   E - EBCDIC MODE                                */\n#define jfcmodeo 0x20 /* -   O - OPTICAL MARK READ MODE (3505 ONLY)  ICB394 */\n#define jfcmoder 0x10 /* -   R - READ COLUMN ELIMINATE MODE (3505 AND 3525  */\n#define jfcrsv06 0x08 /* RESERVED                                           */\n#define jfcrsv07 0x04 /* RESERVED                                           */\n\n/* Values for field \"jfccode\" */\n#define jfcnocon 0x80 /* -   N - NO CONVERSION           ** RESERVED-O **   */\n#define jfcbcd   0x40 /* -   I - IBM BCD                 ** RESERVED-O **   */\n#define jfcfri   0x20 /* -   F - FRIDEN                  ** RESERVED-O **   */\n#define jfcbur   0x10 /* -   B - BURROUGHS               ** RESERVED-O **   */\n#define jfcncr   0x08 /* -   C - NATIONAL CASH REGISTER  ** RESERVED-O **   */\n#define jfcascii 0x04 /* -   A - ASCII (8-TRACK)         ** RESERVED-O **   */\n#define jfctty   0x02 /* -   T - TELETYPE                ** RESERVED-O **   */\n#define jfcrsv32 0x01 /* RESERVED                                           */\n\n/* Values for field \"jfctrtch\" */\n#define jfceven  0x23 /* -   E      - EVEN PARITY (7-track)                 */\n#define jfctran  0x3B /* -   T      - EOD/EBCDIC TRANSLATION (7-track)      */\n#define jfcconv  0x13 /* -   C      - DATA CONVERSION (7-track)             */\n#define jfctrev  0x2B /* -   ET     - EVEN PARITY AND TRANSLATION (7-track) */\n#define jfccomp  0x08 /* -   COMP   - ENHANCED 3480 DATA RECORDING     @T2A */\n#define jfcncomp 0x04 /* -   NOCOMP - ENHANCED 3480 DATA RECORDING     @T2A */\n#define jfc1trak 0x42 /* -   TBD    - RESERVED FUTURE DEVELOPMENT      @T1A */\n#define jfc2trak 0x82 /* -   TBD    - RESERVED FUTURE DEVELOPMENT      @T1A */\n#define jfc4trak 0xC2 /* -   TBD    - RESERVED FUTURE DEVELOPMENT      @T1A */\n\n/* Values for field \"jfcden\" */\n#define jfc200   0x03 /* -   0 - 200 BPI (7-track)                          */\n#define jfc556   0x43 /* -   1 - 556 BPI (7-track)                          */\n#define jfc800   0x83 /* -   2 - 800 BPI (7-track and 9-track)              */\n#define jfc1600  0xC3 /* -   3 - 1600 BPI (9-track)                         */\n#define jfc6250  0xD3 /* -   4 - 6250 BPI (9-track)                  ICB474 */\n\n/* Values for field \"jfcdsrg1\" */\n#define jfcorgis 0x80 /* -   IS  - INDEXED SEQUENTIAL                       */\n#define jfcorgps 0x40 /* -   PS  - PHYSICAL SEQUENTIAL                      */\n#define jfcorgda 0x20 /* -   DA  - DIRECT ACCESS                            */\n#define jfcorgcx 0x10 /* -   CX  - COMM. LINE GROUP (BTAM,QTAM)      MDC011 */\n#define jfcorgcq 0x08 /* -   CQ  - ** RESERVED-O **                  MDC012 */\n#define jfcorgmq 0x04 /* -   MQ  - ** RESERVED-O **                  MDC013 */\n#define jfcorgpo 0x02 /* -   PO  - PARTITIONED                              */\n#define jfcorgu  0x01 /* -   ..U - UNMOVABLE - THE DATA CONTAINS LOCATION   */\n\n/* Values for field \"jfcdsrg2\" */\n#define jfcorggs 0x80 /* -   GS  - GRAPHICS                                 */\n#define jfcorgtx 0x40 /* -       - TCAM LINE GROUP                   MDC014 */\n#define jfcorgtq 0x20 /* -       - TCAM MESSAGE QUEUE                MDC015 */\n#define jfcrsv13 0x10 /* RESERVED, BINARY ZERO                              */\n#define jfcorgam 0x08 /* -       - VSAM                              ICB438 */\n#define jfcorgtr 0x04 /* -       - TCAM 3705                         MDC016 */\n#define jfcrsv15 0x02 /* RESERVED, BINARY ZERO                              */\n#define jfcrsv16 0x01 /* RESERVED, BINARY ZERO                              */\n\n/* Values for field \"jfcrecfm\" */\n#define jfcrcfm  0xE0 /* -     - RECORD FORMAT (USASI/USASCII)              */\n#define jfcfmrec 0xC0 /* -     - HIGH-ORDER TWO BITS OF JFCRECFM TO BE      */\n#define jfcund   0xC0 /* -   U - UNDEFINED                                  */\n#define jfcfix   0x80 /* -   F - FIXED                                      */\n#define jfcvar   0x40 /* -   V - VARIABLE                                   */\n#define jfcvard  0x20 /* -   D - VARIABLE (FORMAT D FOR USASI/USASCII)      */\n#define jfcrfo   0x20 /* -   T - TRACK OVERFLOW                             */\n#define jfcrfb   0x10 /* -   B - BLOCKED - MAY NOT OCCUR WITH UNDEFINED     */\n#define jfcrfs   0x08 /* -   S - FOR FIXED LENGTH RECORD FORMAT, STANDARD   */\n#define jfcchar  0x06 /* -     - CONTROL CHARACTER                          */\n#define jfcasa   0x04 /* -   A - AMERICAN NATIONAL STANDARD (ASA) CONTROL   */\n#define jfcmac   0x02 /* -   M - MACHINE CODE CONTROL CHARACTER             */\n#define jfcnocc  0x00 /* -     - NO CONTROL CHARACTER                       */\n\n/* Values for field \"jfcoptcd\" */\n#define jfcwvcsp 0x80 /* -   W - WRITE VALIDITY CHECK                       */\n#define jfcallow 0x40 /* -   U - ALLOW A DATA CHECK CAUSED BY AN INVALID    */\n#define jfcpcibt 0x20 /* -   C - CHAINED SCHEDULING USING THE PROGRAM       */\n#define jfcbckpt 0x10 /* -   H - BYPASS EMBEDDED DOS CHECKPOINT RECORDS ON  */\n#define jfcrsv18 0x08 /* RESERVED                                           */\n#define jfcreduc 0x04 /* -   Z - USE REDUCED ERROR RECOVERY PROCEDURE       */\n#define jfcsrchd 0x04 /* -     - USE SEARCH DIRECT (SD), INSTEAD OF SEARCH  */\n#define jfcrsv21 0x02 /* RESERVED                                           */\n#define jfcoptj  0x01 /* -   J - 3800 CONTROL CHARACTER  (MDC301)  @Z40MP9A */\n#define jfcwvcis 0x80 /* -   W - WRITE VALIDITY CHECK                       */\n#define jfcrsv17 0x40 /* RESERVED                                           */\n#define jfcmast  0x20 /* -   M - MASTER INDEXES                             */\n#define jfcind   0x10 /* -   I - INDEPENDENT OVERFLOW AREA                  */\n#define jfccyl   0x08 /* -   Y - CYLINDER OVERFLOW AREA                     */\n#define jfcrsv19 0x04 /* RESERVED                                           */\n#define jfcdel   0x02 /* -   L - DELETE OPTION                              */\n#define jfcreorg 0x01 /* -   R - REORGANIZATION CRITERIA                    */\n#define jfcwvcbd 0x80 /* -   W - WRITE VALIDITY CHECK                       */\n#define jfcover  0x40 /* -     - TRACK OVERFLOW                             */\n#define jfcext   0x20 /* -   E - EXTENDED SEARCH                            */\n#define jfcfeed  0x10 /* -   F - FEEDBACK                                   */\n#define jfcact   0x08 /* -   A - ACTUAL ADDRESSING                          */\n#define jfcrsv20 0x04 /* RESERVED                                           */\n#define jfcrsv22 0x02 /* RESERVED                                           */\n#define jfcrel   0x01 /* -   R - RELATIVE BLOCK ADDRESSING                  */\n#define jfcoptq  0x08 /* -     - EBCDIC TO ASCII OR ASCII TO EBCDIC         */\n#define jfcsdnam 0x80 /* -   W - SOURCE OR DESTINATION NAME PRECEDES        */\n#define jfcwumsg 0x40 /* -   U - WORK UNIT IS A MESSAGE (DEFAULT WORK UNIT  */\n#define jfccbwu  0x20 /* -   C - CONTROL BYTE PRECEDES WORK UNIT            */\n\n/* Values for field \"jfcpci\" */\n#define jfcpcix1 0x80 /* -   PCI=(X,) RECEIVE OPERATIONS             ICB473 */\n#define jfcpcix2 0x40 /* -   PCI=(,X) SEND OPERATIONS                       */\n#define jfcpcia1 0x20 /* -   PCI=(A,) RECEIVE OPERATIONS                    */\n#define jfcpcia2 0x10 /* -   PCI=(,A) SEND OPERATIONS                       */\n#define jfcpcin1 0x08 /* -   PCI=(N,) RECEIVE OPERATIONS                    */\n#define jfcpcin2 0x04 /* -   PCI=(,N) SEND OPERATIONS                       */\n#define jfcpcir1 0x02 /* -   PCI=(R,) RECEIVE OPERATIONS                    */\n#define jfcpcir2 0x01 /* -   PCI=(,R) SEND OPERATIONS                       */\n\n/* Values for field \"jfcucsop\" */\n#define jfcbextp 0x80 /* -   JFCB EXTENSION PRESENT FOR 3800 DEVICE         */\n#define jfcfold  0x40 /* -   UCS IMAGE IS TO BE LOADED IN THE FOLD MODE     */\n#define jfcrsv25 0x20 /* RESERVED                                           */\n#define jfcver   0x10 /* -   UCS IMAGE IS TO BE VERIFIED (UCS=x,x,VERIFY)   */\n#define jfcfcbal 0x08 /* -   FORMS ARE TO BE ALIGNED (FCB=x,ALIGN)          */\n#define jfcfcbvr 0x04 /* -   FORMS CONTROL BUFFER (FCB) IMAGE IS TO BE      */\n#define jfcrsv26 0x02 /* RESERVED                                           */\n#define jfcrsv27 0x01 /* RESERVED                                           */\n\n/* Values for field \"jfccpri\" */\n#define jfcrsv53 0x80 /* RESERVED                              MDC020       */\n#define jfcrsv54 0x40 /* RESERVED                              MDC019       */\n#define jfcrsv55 0x20 /* RESERVED                              MDC018       */\n#define jfcrsv33 0x10 /* RESERVED                                           */\n#define jfcrsv34 0x08 /* RESERVED                                           */\n#define jfcrecv  0x04 /* -   R - RECEIVE PRIORITY                    MDC018 */\n#define jfcequal 0x02 /* -   E - EQUAL PRIORITY                      MDC019 */\n#define jfcsend  0x01 /* -   S - SEND PRIORITY                       MDC020 */\n\n/* Values for field \"jfcbctri\" */\n#define jfcbspac 0xC0 /* -   BIT PATTERN FOR SPACE REQUESTS                 */\n#define jfcbcyl  0xC0 /* -   CYL REQUEST    (SPACE=(CYL,(...)))             */\n#define jfcbtrk  0x80 /* -   TRK REQUEST    (SPACE=(TRK,(...)))             */\n#define jfcbavr  0x40 /* -   AVRAGE BLOCK LENGTH (blklgth) REQUEST          */\n#define jfcbmsgp 0x20 /* -   ** RESERVED-O **  (MSVGP) (MDC307)    @Z30LP9A */\n#define jfcblksz 0x10 /* - ON indicates that the JFCBLKSI has been set      */\n#define jfcontig 0x08 /* -   CONTIG REQUEST (SPACE=(x,(x,x,),,CONTIG))      */\n#define jfcmixg  0x04 /* -   MXIG REQUEST   (SPACE=(x,(x,x,),,MXIG))        */\n#define jfcalx   0x02 /* -   ALX REQUEST    (SPACE=(x,(x,x,),,ALX))         */\n#define jfcround 0x01 /* -   ROUND REQUEST  (SPACE=(x,(x,x,),,,ROUND))      */\n#define jfcbabs  0x00 /* -   ABSTR REQUEST  (SPACE=(ABSTR,(...)))           */\n\n/* Values for field \"jfcflgs1\" */\n#define jfcbdlet 0x80 /* -   ** RESERVED-O ** (OS/VS1)  (MDC305)   @XM05457 */\n#define jfcblsr  0x80 /* -   Batch/LSR dataset                         @P5A */\n#define jfctopen 0x40 /* -   TAPE DATA SET HAS BEEN OPENED           MDC026 */\n#define jfcbadsp 0x20 /* -   AUTOMATIC DATA SET PROTECTION INDICATOR        */\n#define jfcbprot 0x10 /* -   RACF PROTECT REQUESTED (OS/VS2)                */\n#define jfcbceov 0x08 /* -   CHKPT=EOV SPECIFIED FOR THIS DATA SET          */\n#define jfcvrds  0x04 /* -   VIO DATA SET                            MDC006 */\n#define jfcbckds 0x02 /* -   DATA SET IS CHECKPOINT DATASET        @ZA52824 */\n#define jfcbuaff 0x01 /* -   UNIT AFFINITY SPECIFIED FOR THIS DATA SET      */\n\n/* Values for field \"jfcbflg3\" */\n#define jfcdqdsp 0x80 /* -   REQUEST DEQUEUE OF TAPE VOLUME WHEN DEMOUNTED  */\n#define jfcbexp  0x40 /* -   EXPIRATION DATE SPECIFIED  (MDC318)   @ZA27139 */\n#define jfcbbftk 0x20 /* -   LRECL=NNNNNK WAS SPECIFIED                @L1C */\n#define jfcposid 0x10 /* -   JFCRBIDO CONTAINS THE PHYSICAL LOCATION   @H1A */\n#define jfctemps 0x08 /* - This flag identifies a Temporary,                */\n#define jfcbddtk 0x04 /* -   Set on by IEFAB434 and IEFAB492 (Alloc)        */\n#define jfcbrv06 0x02 /* - RESERVED                          @ZA18180       */\n#define jfcbrv07 0x01 /* - RESERVED                          @ZA18180       */\n\n/* Values for field \"jfcvldq\" */\n#define jfcvldq1 0x80 /* First volser in JFCAVOLS has been dequeued  @05A   */\n#define jfcvldq2 0x40 /* Second volser in JFCAVOLS has been dequeued @05A   */\n#define jfcvldq3 0x20 /* Third volser in JFCAVOLS has been dequeued  @05A   */\n#define jfcvldq4 0x10 /* Fourth volser in JFCAVOLS has been dequeued @05A   */\n#define jfcvldq5 0x08 /* Fifth volser in JFCAVOLS has been dequeued  @05A   */\n#define jfcblgth 176  /* -     LENGTH OF JFCB (x'B0')                       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IEWPMAR": {"ttr": 8285, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pmar \u00e4\n  struct \u00e4\n    short int      _pmar_slen;      /* Section length.                  */\n    unsigned char  _pmar_lvl;       /* PMAR format level                */\n    unsigned char  _pmar_plvl;      /* Bind processor creating object   */\n    struct \u00e4\n      unsigned char  _pmar_atr1; /* First attribute byte.  */\n      unsigned char  _pmar_atr2; /* Second attribute byte. */\n      struct \u00e4\n        unsigned char  _pmar_ftb1; /* Alternative name for flags byte */\n        \u00fc pmar_atr3;\n      struct \u00e4\n        unsigned char  _pmar_ftb2; /* Alternative name for flags byte */\n        \u00fc pmar_atr4;\n      \u00fc pmar_atr;\n    unsigned char  _pmar_atr5;      /* Fifth attribute byte        @L8A */\n    unsigned char  _pmar_ac;        /* APF authorization code           */\n    unsigned char  _pmar_stor\u00c44\u00dc;   /* Virtual storage required         */\n    unsigned char  _pmar_epm\u00c44\u00dc;    /* Main entry point offset          */\n    unsigned char  _pmar_epa\u00c44\u00dc;    /* This entry point offset          */\n    struct \u00e4\n      unsigned char  _pmar_chlv;    /* Change level of member */\n      unsigned char  _pmar_ssfb;    /* SSI flag byte          */\n      unsigned char  _pmar_mser\u00c42\u00dc; /* Member serial number   */\n      \u00fc pmar_ssi;\n    unsigned char  _pmar_xattr1\u00c42\u00dc; /* Extended Attributes         @L7A */\n    unsigned char  _filler1\u00c42\u00dc;     /* Reserved                    @L7A */\n    \u00fc pmar_entry;\n  unsigned char  pmar_end; /* END OF BASIC SECTION */\n  \u00fc;\n\n#define pmar_slen   pmar_entry._pmar_slen\n#define pmar_lvl    pmar_entry._pmar_lvl\n#define pmar_plvl   pmar_entry._pmar_plvl\n#define pmar_atr1   pmar_entry.pmar_atr._pmar_atr1\n#define pmar_atr2   pmar_entry.pmar_atr._pmar_atr2\n#define pmar_ftb1   pmar_entry.pmar_atr.pmar_atr3._pmar_ftb1\n#define pmar_ftb2   pmar_entry.pmar_atr.pmar_atr4._pmar_ftb2\n#define pmar_atr5   pmar_entry._pmar_atr5\n#define pmar_ac     pmar_entry._pmar_ac\n#define pmar_stor   pmar_entry._pmar_stor\n#define pmar_epm    pmar_entry._pmar_epm\n#define pmar_epa    pmar_entry._pmar_epa\n#define pmar_chlv   pmar_entry.pmar_ssi._pmar_chlv\n#define pmar_ssfb   pmar_entry.pmar_ssi._pmar_ssfb\n#define pmar_mser   pmar_entry.pmar_ssi._pmar_mser\n#define pmar_xattr1 pmar_entry._pmar_xattr1\n\n/* Values for field \"pmar_lvl\" */\n#define pmar_pm1_val        0x01 /* level constant for PO1      @L2A */\n#define pmar_pm2_val        0x02 /* level constant for PO2      @L2A */\n#define pmar_pm3_val        0x03 /* level constant for PO3      @L3A */\n#define pmar_pm4_val        0x04 /* level constant for PO4      @L7A */\n#define pmar_pm5_val        0x05 /* level constant for PO5      @LAA */\n#define pmar_lvl_val        0x05 /* level constant              @LAC */\n\n/* Values for field \"pmar_plvl\" */\n#define pmar_plvl_e_val     0x01 /* E-level constant                 */\n#define pmar_plvl_f_val     0x02 /* F-level constant                 */\n#define pmar_plvl_aos_val   0x03 /* AOS-level constant               */\n#define pmar_plvl_xa_val    0x04 /* XA-level constant                */\n#define pmar_plvl_b1_val    0x05 /* Binder version 1                 */\n#define pmar_plvl_b2_val    0x06 /* Binder version 2            @L2A */\n#define pmar_plvl_b3_val    0x07 /* Binder version 3            @L3A */\n#define pmar_plvl_b4_val    0x08 /* Binder version 4            @L7A */\n#define pmar_plvl_b5_val    0x09 /* Binder version 5            @L8A */\n\n/* Values for field \"pmar_atr1\" */\n#define pmar_rent           0x80 /* Reenterable                      */\n#define pmar_reus           0x40 /* Reusable                         */\n#define pmar_ovly           0x20 /* Overlay structure                */\n#define pmar_test           0x10 /* Module to be tested - TESTRAN    */\n#define pmar_load           0x08 /* Only loadable                    */\n#define pmar_sctr           0x04 /* Scatter format                   */\n#define pmar_exec           0x02 /* Executable                       */\n#define pmar_1blk           0x01 /* Load module contains only one    */\n\n/* Values for field \"pmar_atr2\" */\n#define pmar_flvl           0x80 /* If on, the program cannot be     */\n#define pmar_org0           0x40 /* Linkage editor assigned origin   */\n#define pmar_nrld           0x10 /* Program contains no RLD items    */\n#define pmar_nrep           0x08 /* Module cannot be reprocessed     */\n#define pmar_tstn           0x04 /* Module contains TESTRAN symbol   */\n#define pmar_refr           0x01 /* Refreshable program              */\n\n/* Values for field \"pmar_ftb1\" */\n#define pmar_big            0x40 /* This program requires 16M bytes  */\n#define pmar_paga           0x20 /* Page alignment is required       */\n#define pmar_xssi           0x10 /* SSI information present          */\n#define pmar_xapf           0x08 /* APF information present          */\n#define pmar_lfmt           0x04 /* PMARL follows PMAR.              */\n\n/* Values for field \"pmar_ftb2\" */\n#define pmar_altp           0x80 /* Alternate primary flag. If on    */\n#define pmar_rmod           0x10 /* RMODE is 31.                     */\n#define pmar_aamd           0x0C /* Alias entry point addressing     */\n#define pmar_aamd_maskoff   0xF3 /* Mask for AMODE flags             */\n#define pmar_mamd           0x03 /* Main entry point addressing      */\n\n/* Values for field \"pmar_atr5\" */\n#define pmar_rmod64         0x80 /* RMODE 64                    @L8A */\n\n/* Values for field \"pmar_xattr1\" */\n#define pmar_system_le      0x80 /* @L7A                             */\n#define pmar_lightweight_le 0x40 /* @L7A                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IEWPMARA": {"ttr": 8141, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pmara \u00e4\n  short int      pmara_len;    /* Section length             */\n  unsigned char  pmara_epa\u00c44\u00dc; /* Entry point offset         */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _pmara_ftb2; /* Alternative name for flags byte */\n      \u00fc pmara_atr1;\n    \u00fc pmara_atr;\n  unsigned char  pmara_end;    /* END OF ALIAS ENTRY SECTION */\n  \u00fc;\n\n#define pmara_ftb2 pmara_atr.pmara_atr1._pmara_ftb2\n\n/* Values for field \"pmara_ftb2\" */\n#define pmara_altp          0x80 /* Alternate Primary flag.          */\n#define pmara_hide          0x40 /* Alias name can be hidden    @L3A */\n#define pmara_nexec         0x20 /* Entry point is non-executable    */\n#define pmara_mangled       0x10 /* Alias is a mangled name     @L3A */\n#define pmara_amd           0x0C /* Alias entry addressing mode      */\n\n/* Values for field \"pmara_end\" */\n#define pmar_maxlen         0x88\n#define pmar_maxlen_progobj 0x88\n#define pmar_maxlen_po1     0x50\n#define pmar_maxlen_po2     0x70 /* @L3C                             */\n#define pmar_maxlen_po3     0x80 /* @L7C                             */\n#define pmar_maxlen_po4     0x88 /* @LAC                             */\n#define pmar_maxlen_po5     0x88 /* @LAA                             */\n#define pmar_maxlen_loadmod 0x35\n#define pmarl_lvl1len       0x32 /* @L2A                             */\n#define pmarl_lvl2len       0x52 /* @L3A                             */\n#define pmarl_lvl3len       0x62 /* @L7A                             */\n#define pmarl_lvl4len       0x6A /* @LAA                             */\n#define pmarl_lvl5len       0x6A /* @LAA                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IEWPMARL": {"ttr": 8007, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pmarl \u00e4\n  short int      pmarl_slen; /* Section length */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _pmarl_atr1;      /* 6th attribute byte               */\n      unsigned char  _pmarl_atr2;      /* 7th attribute byte               */\n      unsigned char  _pmarl_fillval;   /* FILL character value        @L2A */\n      unsigned char  _pmarl_po_sublvl; /* Program object sublevel     @L7A */\n      \u00fc pmarl_atr;\n    unsigned char  _pmarl_mpgs\u00c44\u00dc; /* Total length of program on */\n    struct \u00e4\n      unsigned char  _pmarl_txtl\u00c44\u00dc; /* Length of initial load text on */\n      void          *_pmarl_txto;    /* Offset to text                 */\n      unsigned char  _pmarl_bdrl\u00c44\u00dc; /* Length of Binder index         */\n      void          *_pmarl_bdro;    /* Offset to Binder index         */\n      unsigned char  _pmarl_rdtl\u00c44\u00dc; /* Length of PRDT                 */\n      void          *_pmarl_rdto;    /* Offset to PRDT                 */\n      unsigned char  _pmarl_ratl\u00c44\u00dc; /* Length of PRAT                 */\n      void          *_pmarl_rato;    /* Offset to PRAT                 */\n      struct \u00e4\n        unsigned char  _pmarl_lmdl\u00c44\u00dc; /* Length of LSLoader data, */\n        \u00fc pmarl_nvspgs;\n      void          *_pmarl_lmdo;    /* Offset to LSLoader data        */\n      \u00fc pmarl_mdat;\n    \u00fc pmarl_data;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _pmarl_nseg\u00c42\u00dc;  /* Number of loadable segments @L2A */\n        unsigned char  _pmarl_ngas\u00c42\u00dc;  /* Count of entries in Gas     @L2A */\n        unsigned char  _pmarl_1stor\u00c44\u00dc; /* Virtual storage required    @L2A */\n        unsigned char  _pmarl_2stor\u00c44\u00dc; /* Virtual storage required    @L2A */\n        unsigned char  _pmarl_2txto\u00c44\u00dc; /* Offset to second txt segment@L2A */\n        unsigned char  _filler1\u00c48\u00dc;\n        \u00fc pmarl_pm2;\n      unsigned char  _filler2\u00c48\u00dc;\n      \u00fc _pmarl_struct1;\n    struct \u00e4\n      unsigned char  _filler3\u00c416\u00dc;\n      struct \u00e4\n        unsigned char  _pmarl_date\u00c44\u00dc; /* Date saved                  @L2A */\n        unsigned char  _pmarl_time\u00c44\u00dc; /* Time saved                  @L2A */\n        unsigned char  _pmarl_user\u00c48\u00dc; /* User or job identification  @L2A */\n        \u00fc pmarl_trace;\n      \u00fc _pmarl_struct2;\n    \u00fc _pmarl_union1;\n  struct \u00e4\n    unsigned char  _pmarl_pm3fl1;      /* Flag byte                   @L3A */\n    unsigned char  _pmarl_cms;         /* CMS flags                   @L6A */\n    unsigned char  _pmarl_ndefer\u00c42\u00dc;   /* Number of deferred classes  @L3A */\n    unsigned char  _pmarl_dtempl\u00c44\u00dc;   /* Total length of deferred    @L3A */\n    unsigned char  _pmarl_1dtxto\u00c44\u00dc;   /* Offset of 1st deferred      @L3A */\n    unsigned char  _pmarl_iewblito\u00c44\u00dc; /* Byte offset of IEWBLIT      @L3A */\n    \u00fc pmarl_pm3;\n  struct \u00e4\n    unsigned char  _pmarl_atr3;  /* 8th attribute byte          @L8A */\n    unsigned char  _filler4\u00c47\u00dc;  /* Reserved                    @L7A */\n    \u00fc pmarl_pm4;\n  struct \u00e4\n    unsigned char  _pmarl_end; /* END OF LSLOADER SECTION */\n    \u00fc pmarl_pm5;\n  \u00fc;\n\n#define pmarl_atr1      pmarl_data.pmarl_atr._pmarl_atr1\n#define pmarl_atr2      pmarl_data.pmarl_atr._pmarl_atr2\n#define pmarl_fillval   pmarl_data.pmarl_atr._pmarl_fillval\n#define pmarl_po_sublvl pmarl_data.pmarl_atr._pmarl_po_sublvl\n#define pmarl_mpgs      pmarl_data._pmarl_mpgs\n#define pmarl_txtl      pmarl_data.pmarl_mdat._pmarl_txtl\n#define pmarl_txto      pmarl_data.pmarl_mdat._pmarl_txto\n#define pmarl_bdrl      pmarl_data.pmarl_mdat._pmarl_bdrl\n#define pmarl_bdro      pmarl_data.pmarl_mdat._pmarl_bdro\n#define pmarl_rdtl      pmarl_data.pmarl_mdat._pmarl_rdtl\n#define pmarl_rdto      pmarl_data.pmarl_mdat._pmarl_rdto\n#define pmarl_ratl      pmarl_data.pmarl_mdat._pmarl_ratl\n#define pmarl_rato      pmarl_data.pmarl_mdat._pmarl_rato\n#define pmarl_lmdl      pmarl_data.pmarl_mdat.pmarl_nvspgs._pmarl_lmdl\n#define pmarl_lmdo      pmarl_data.pmarl_mdat._pmarl_lmdo\n#define pmarl_nseg      _pmarl_union1._pmarl_struct1.pmarl_pm2._pmarl_nseg\n#define pmarl_ngas      _pmarl_union1._pmarl_struct1.pmarl_pm2._pmarl_ngas\n#define pmarl_1stor     _pmarl_union1._pmarl_struct1.pmarl_pm2._pmarl_1stor\n#define pmarl_2stor     _pmarl_union1._pmarl_struct1.pmarl_pm2._pmarl_2stor\n#define pmarl_2txto     _pmarl_union1._pmarl_struct1.pmarl_pm2._pmarl_2txto\n#define pmarl_date      _pmarl_union1._pmarl_struct2.pmarl_trace._pmarl_date\n#define pmarl_time      _pmarl_union1._pmarl_struct2.pmarl_trace._pmarl_time\n#define pmarl_user      _pmarl_union1._pmarl_struct2.pmarl_trace._pmarl_user\n#define pmarl_pm3fl1    pmarl_pm3._pmarl_pm3fl1\n#define pmarl_cms       pmarl_pm3._pmarl_cms\n#define pmarl_ndefer    pmarl_pm3._pmarl_ndefer\n#define pmarl_dtempl    pmarl_pm3._pmarl_dtempl\n#define pmarl_1dtxto    pmarl_pm3._pmarl_1dtxto\n#define pmarl_iewblito  pmarl_pm3._pmarl_iewblito\n#define pmarl_atr3      pmarl_pm4._pmarl_atr3\n#define pmarl_end       pmarl_pm5._pmarl_end\n\n/* Values for field \"pmarl_atr1\" */\n#define pmarl_nmig              0x80 /* This program object cannot be             */\n#define pmarl_prim              0x40 /* FETCHOPT PRIME option                     */\n#define pmarl_pack              0x20 /* FETCHOPT PACK option                      */\n#define pmarl_xpl               0x10 /* Module requires XPLINK      @L4A          */\n#define pmarl_hpl               0x10 /* Module requires XPLINK      @L4A          */\n\n/* Values for field \"pmarl_atr2\" */\n#define pmarl_cmpr              0x80 /* Compressed format module                  */\n#define pmarl_1rmod             0x40 /* 1st segment is RMODE 31,    @L2A          */\n#define pmarl_2rmod             0x20 /* 2nd segment is RMODE 31,    @L2A          */\n#define pmarl_1alin             0x08 /* 1st segment is page-aligned,@L2A          */\n#define pmarl_2alin             0x04 /* 2nd segment is page-aligned,@L2A          */\n#define pmarl_fill              0x02 /* FILL option specified       @L2A          */\n\n/* Values for field \"pmarl_po_sublvl\" */\n#define pmarl_po_sublvl_zosv1r3 0x01 /* Value for z/OS V1 R3 / PO4  @L7A          */\n#define pmarl_po_sublvl_zosv1r5 0x02 /* Value for z/OS V1 R5 / PO4  @L8A          */\n#define pmarl_po_sublvl_zosv1r7 0x03 /* Value for z/OS V1 R7 / PO4  @L9A          */\n#define pmarl_po_sublvl_zosv1r8 0x01 /* Value for z/OS V1 R8 / PO5  @LAA          */\n\n/* Values for field \"pmarl_pm3fl1\" */\n#define pmarl_hide              0x80 /* Name is an alias that can   @L3A          */\n#define pmarl_dllena            0x40 /* PO is DLL-enabled           @L3A          */\n#define pmarl_mustdelet         0x20 /* If on and directed LOAD     @L3A          */\n#define pmarl_iewblitp          0x10 /* If on, PMARL_IEWBLITO is    @L3A          */\n#define pmarl_mangled           0x08 /* If on, name is mangled.     @L3A          */\n\n/* Values for field \"pmarl_cms\" */\n#define pmarl_cms_system        0x80 /* SYSTEM module bit                    @L6A */\n#define pmarl_cms_noclean       0x40 /* Do not cleanup at end of service     @L6A */\n#define pmarl_cms_strinit       0x20 /* STRINIT bit                          @L6A */\n#define pmarl_cms_moddos        0x10 /* Gen'd with DOS                       @L6A */\n#define pmarl_cms_modall        0x08 /* Gen'd with ALL                       @L6A */\n#define pmarl_cms_invalxa       0x04 /* XA-mode invalid                      @L6A */\n#define pmarl_cms_invalxc       0x02 /* XC-mode invalid                      @L6A */\n\n/* Values for field \"pmarl_atr3\" */\n#define pmarl_1rmod64           0x80 /* 1st segment is RMODE 64     @L8A          */\n#define pmarl_2rmod64           0x40 /* 2nd segment is RMODE 64     @L8A          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IEWPMARR": {"ttr": 8331, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pmarr \u00e4\n  short int      pmarr_slen; /* Section length                */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _pmarr_ttrt\u00c43\u00dc; /* TTR of first block of text     */\n      unsigned char  _pmarr_zero;    /* Zero                           */\n      unsigned char  _pmarr_ttrn\u00c43\u00dc; /* TTR of note list or scatter    */\n      unsigned char  _pmarr_nl;      /* Number of entries in note list */\n      \u00fc pmarr_ttrs;\n    unsigned char  _pmarr_ftbl\u00c42\u00dc; /* Length of first block of text. */\n    struct \u00e4\n      unsigned char  _filler1\u00c42\u00dc;  /* Reserved                        */\n      unsigned char  _pmarr_rlds;  /* Number of RLD/CTL records which */\n      \u00fc pmarr_org;\n    struct \u00e4\n      unsigned char  _pmarr_slsz\u00c42\u00dc; /* Scatter list length         */\n      unsigned char  _pmarr_ttsz\u00c42\u00dc; /* Translation table length    */\n      unsigned char  _pmarr_esdt\u00c42\u00dc; /* ESDID of first text block   */\n      unsigned char  _pmarr_esdc\u00c42\u00dc; /* ESDID of EP control section */\n      \u00fc pmarr_scat;\n    \u00fc pmarr_data;\n  unsigned char  pmarr_end;  /* END OF LOAD MODULE ATTRIBUTES */\n  \u00fc;\n\n#define pmarr_ttrt pmarr_data.pmarr_ttrs._pmarr_ttrt\n#define pmarr_zero pmarr_data.pmarr_ttrs._pmarr_zero\n#define pmarr_ttrn pmarr_data.pmarr_ttrs._pmarr_ttrn\n#define pmarr_nl   pmarr_data.pmarr_ttrs._pmarr_nl\n#define pmarr_ftbl pmarr_data._pmarr_ftbl\n#define pmarr_rlds pmarr_data.pmarr_org._pmarr_rlds\n#define pmarr_slsz pmarr_data.pmarr_scat._pmarr_slsz\n#define pmarr_ttsz pmarr_data.pmarr_scat._pmarr_ttsz\n#define pmarr_esdt pmarr_data.pmarr_scat._pmarr_esdt\n#define pmarr_esdc pmarr_data.pmarr_scat._pmarr_esdc\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IEZJSCB": {"ttr": 8675, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct iezjscb \u00e4\n  unsigned char  _filler1\u00c4188\u00dc;\n  int            jscrsv01;      /* -            RESERVED                                  */\n  struct \u00e4\n    unsigned char  _jscrsv32;      /* -            RESERVED                           ICB459 */\n    int            _jschpcea : 24; /* -          ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM     */\n    \u00fc jschpce;\n  void          *jscbshr;       /* -            ADDRESS OF ASSEMBLY CHAIN (VSAM)   ICB434 */\n  void          *jscbtcp;       /* -            ADDRESS OF TIOT CHAINING ELEMENT CHAIN    */\n  void          *jscbpcc;       /* -            ADDRESS OF PRIVATE CATALOG CONTROL BLOCK  */\n  void          *jscbtcbp;      /* -            ADDRESS OF INITIATOR'S TCB (VSAM)  ICB434 */\n  void          *jscbijsc;      /* -            ADDRESS OF JSCB OF THE INITIATOR THAT     */\n  void          *jscbdbtb;      /* -            ADDRESS OF THE DEB TABLE FOR THIS JOB     */\n  unsigned char  jscbid\u00c44\u00dc;     /* -          JOB SERIAL NUMBER (OS/VS1)                  */\n  struct \u00e4\n    unsigned char  _jscrsv02;      /* -            RESERVED                             */\n    int            _jscbdcba : 24; /* -          ADDRESS OF DCB FOR DATA SET CONTAINING */\n    \u00fc jscbdcb;\n  char           jscbstep;      /* -          CURRENT STEP NUMBER.  THE FIRST STEP IS     */\n  unsigned char  jscrsv03\u00c43\u00dc;   /* -          RESERVED                                    */\n  void          *jscbsecb;      /* -            ECB FOR COMMUNICATION BETWEEN    @ZMC1264 */\n  int            jscrsv04  : 1, /* -  RESERVED                                            */\n                 jscrsv05  : 1, /* -  RESERVED                                            */\n                 jscblong  : 1, /* -        THE PARTITION CANNOT BE REDEFINED BECAUSE     */\n                 jscrsv06  : 1, /* -  RESERVED                                            */\n                 jscrsv07  : 1, /* -  RESERVED                                            */\n                 jscrsv08  : 1, /* -  RESERVED                                            */\n                 jscsiots  : 1, /* -        CHECKPOINT MUST SCAN SIOT          MDC018     */\n                 jscbauth  : 1; /* -        THE STEP REPRESENTED BY THIS JSCB IS          */\n  unsigned char  jscrsv10\u00c43\u00dc;   /* -          RESERVED                           ICB351   */\n  unsigned char  jscrsv17\u00c43\u00dc;   /* -          Reserved                             @P2C   */\n  int            jscbpass  : 1, /* -        WHEN THIS BIT IS SET TO ONE AND A             */\n                 jscrsv11  : 1, /* -  RESERVED                                            */\n                 jscrsv12  : 1, /* -  RESERVED                                            */\n                 jscrsv13  : 1, /* -  RESERVED                                            */\n                 jscrsv14  : 1, /* -  RESERVED                                            */\n                 jscrsv15  : 1, /* -  RESERVED                                            */\n                 jscrsv16  : 1, /* -  RESERVED                             @01C           */\n                 jscbpmsg  : 1; /* -        A MESSAGE HAS BEEN ISSUED BECAUSE THE         */\n  void          *jscbqmpi;      /* -            ADDRESS OF THE QUEUE MANAGER PARAMETER    */\n  void          *jscbjesw;      /* -            ADDRESS OF THE JES WORKAREA      @YA01530 */\n  struct \u00e4\n    int            _jscbiofg : 1, /* -        THE PREVIOUS WTP I/O OPERATION HAD AN       */\n                   _jscbret  : 1, /* -        TEXT BREAKING INDICATOR, ADDITIONAL         */\n                   _jscbbmo  : 1, /* -              Buffer Messages Only flag.  Set       */\n                   _jscrsv19 : 1, /* -  RESERVED                                          */\n                   _jscrsv20 : 1, /* -  RESERVED                                          */\n                   _jscrsv21 : 1, /* -  RESERVED                                          */\n                   _jscrsv22 : 1, /* -  RESERVED                                          */\n                   _jscrsv23 : 1; /* -  RESERVED                                          */\n    char           _jscbwtsp;     /* -          NUMBER OF THE LAST JOB STEP TO ISSUE WTP  */\n    short int      _jscbpmg;      /* -            NUMBER OF WTP OPERATIONS ISSUED FOR THE */\n    \u00fc jscbwtp;\n  void          *jscbcscb;      /* -            ADDRESS OF COMMAND SCHEDULING CONTROL     */\n  struct \u00e4\n    unsigned char  _jscrsv24; /* -            RESERVED                           ICB351 */\n    struct \u00e4\n      unsigned char  _jscbjcta\u00c43\u00dc; /* -          SVA of JCT, use SWAREQ to convert    @P2C */\n      \u00fc jscjctp;\n    \u00fc jscbjct;\n  void          *jscbpscb;      /* -            ADDRESS OF TSO PROTECTED STEP CONTROL     */\n  struct \u00e4\n    short int      _jscbtjid; /* -            TSO TERMINAL JOB IDENTIFIER */\n    \u00fc jscbasid;\n  int            jscbrv01  : 1, /* -  RESERVED                                            */\n                 jscbadsp  : 1, /* -        AUTOMATIC DATA SET PROTECTION FOR THIS        */\n                 jscbrv02  : 1, /* -  RESERVED                                            */\n                 jscbrv03  : 1, /* -  RESERVED                                            */\n                 jscbsjfy  : 1, /* -  Used by BB131                        @P4C           */\n                 jscbsjfn  : 1, /* -  Used by BB131                        @P4C           */\n                 jscbrv06  : 1, /* -  RESERVED                                            */\n                 jscbrv07  : 1; /* -  RESERVED                                            */\n  unsigned char  jscbrv08;      /* -            RESERVED                                  */\n  int            jscbiecb;      /* -            ECB USED FOR COMMUNICATION BETWEEN        */\n  unsigned char  jscbjrba\u00c48\u00dc;   /* -          JOB JOURNAL RELATIVE BYTE ADDRESS (RBA)     */\n  void          *jscbaloc;      /* -            ADDRESS OF THE ALLOCATION WORK   @ZMC1264 */\n  struct \u00e4\n    int            _jscbjnln  : 1, /* -        NOTHING SHOULD BE WRITTEN IN              */\n                   _jscbjnlf  : 1, /* -        NO JOB JOURNAL                     MDC017 */\n                   _jscbjnle  : 1, /* -        ERROR IN JOURNAL, DO NOT WRITE     ICB332 */\n                              : 1,\n                   _jscbjsbi  : 1, /* -        JOB HAS NOT ENTERED ALLOCATION FOR THE    */\n                   _jscbjsba  : 1, /* -        JOB HAS ENTERED ALLOCATION         ICB332 */\n                   _jscbjsbx  : 1, /* -        JOB HAS COMPLETED ALLOCATION       ICB332 */\n                   _jscbjsbt  : 1; /* -        JOB HAS ENTERED TERMINATION        ICB332 */\n    int            _jscbjnla : 24; /* -          INITIATOR JSCB ONLY - ADDRESS OF JSCB   */\n    \u00fc jscbjnl;\n  void          *jscbjnlr;      /* -            POINTER TO JOB JOURNAL RPL         MDC023 */\n  void          *jscbsmlr;      /* -            ADDRESS OF SYSTEM MESSAGE DATA            */\n  struct \u00e4\n    unsigned char  _jscrsv31;      /* -            RESERVED                           ICB333 */\n    int            _jscbsuba : 24; /* -          ADDRESS OF JES-SUBTL FOR THIS JOB           */\n    \u00fc jscbsub;\n  short int      jscbsono;      /* -            THE NUMBER OF SYSOUT DATA SETS PLUS       */\n  short int      jscrsv28;      /* -            RESERVED                                  */\n  unsigned char  jscbfrba\u00c48\u00dc;   /* -          RELATIVE BYTE ADDRESS (RBA) OF THE FIRST    */\n  void          *jscbssib;      /* -            ADDRESS OF THE SUBSYSTEM IDENTIFICATION   */\n  void          *jscdsabq;      /* -            ADDRESS OF QDB FOR DSAB CHAIN      MDC007 */\n  void          *jscbasw2;      /* -            POINTER TO THE ALLOCATION STAE WORK AREA  */\n  struct \u00e4\n    unsigned char  _jscrsv55;   /* -          RESERVED                                  */\n    unsigned char  _jscsctp\u00c43\u00dc; /* -          SVA of SCT, use SWAREQ to convert    @P2C */\n    \u00fc jscsct;\n  void          *jsctmcor;      /* -            ADDRESS OF TIOT MAIN STORAGE MANAGEMENT   */\n  void          *jscbvata;      /* -            ADDRESS OF VAT USED DURING SYSTEM RESTART */\n  short int      jscddnno;      /* -            COUNTER USED BY DYNAMIC ALLOCATION TO     */\n  short int      jscbodno;      /* -            COUNTER USED BY DYNAMIC OUTPUT TO    @D1C */\n  short int      jscddnum;      /* -            NUMBER OF DD ENTRIES CURRENTLY ALLOCATED  */\n  unsigned char  jscrsv33;      /* -            RESERVED                           MDC019 */\n  char           jscbswsp;      /* -          SWA SUBPOOL                        MDC015   */\n  void          *jscbact;       /* -            POINTER TO ACTIVE JSCB             MDC014 */\n  void          *jscbufpt;      /* -            ADDRESS OF ALLOCATION/UNALLOCATION        */\n  void          *jscbaswa;      /* -            POINTER TO THE LAST ALLOCATION ESTAE WORK */\n  struct \u00e4\n    void          *_jscbecb1; /* -            ADDR OF CANCEL ECB WHILE         @ZMC1510 */\n    void          *_jscbecb2; /* -            ADDR OF WAIT FOR REGION ECB      @ZMC1510 */\n    \u00fc jscbpgmn;\n  void          *jscdsnqp;      /* -            Pointer to the first DSENQ Table     @L5C */\n  void          *jscbcscx;      /* -            ADDRESS OF CSCX EXTENSION TO CSCB    @L2C */\n  int            jscamcpl;      /* -            ALLOCATION MESSAGE CELLPOOL ID   @YC19251 */\n  \u00fc;\n\n#define jscrsv32 jschpce._jscrsv32\n#define jschpcea jschpce._jschpcea\n#define jscrsv02 jscbdcb._jscrsv02\n#define jscbdcba jscbdcb._jscbdcba\n#define jscbiofg jscbwtp._jscbiofg\n#define jscbret jscbwtp._jscbret\n#define jscbbmo jscbwtp._jscbbmo\n#define jscrsv19 jscbwtp._jscrsv19\n#define jscrsv20 jscbwtp._jscrsv20\n#define jscrsv21 jscbwtp._jscrsv21\n#define jscrsv22 jscbwtp._jscrsv22\n#define jscrsv23 jscbwtp._jscrsv23\n#define jscbwtsp jscbwtp._jscbwtsp\n#define jscbpmg  jscbwtp._jscbpmg\n#define jscrsv24 jscbjct._jscrsv24\n#define jscbjcta jscbjct.jscjctp._jscbjcta\n#define jscbtjid jscbasid._jscbtjid\n#define jscbjnln jscbjnl._jscbjnln\n#define jscbjnlf jscbjnl._jscbjnlf\n#define jscbjnle jscbjnl._jscbjnle\n#define jscbjsbi jscbjnl._jscbjsbi\n#define jscbjsba jscbjnl._jscbjsba\n#define jscbjsbx jscbjnl._jscbjsbx\n#define jscbjsbt jscbjnl._jscbjsbt\n#define jscbjnla jscbjnl._jscbjnla\n#define jscrsv31 jscbsub._jscrsv31\n#define jscbsuba jscbsub._jscbsuba\n#define jscrsv55 jscsct._jscrsv55\n#define jscsctp  jscsct._jscsctp\n#define jscbecb1 jscbpgmn._jscbecb1\n#define jscbecb2 jscbpgmn._jscbecb2\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IFBENF36": {"ttr": 8073, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ifbenf36 \u00e4\n  unsigned char  ifbenf36_id\u00c46\u00dc;         /* Data Area ID 'ENF36 '           */\n  short int      ifbenf36_length;        /* Length of IFBENF36 header, does */\n  unsigned char  ifbenf36_rsvd1\u00c43\u00dc;      /* Reserved for IBM                */\n  unsigned char  ifbenf36_version;       /* Version of IFBENF36 data area   */\n  struct \u00e4\n    unsigned char  _ifbenf36_rsvd2\u00c42\u00dc;   /* Reserved for IBM             @L1C */\n    unsigned char  _ifbenf36_byte3_qual; /* Qualifier code - record      @L1A */\n    unsigned char  _ifbenf36_byte4_qual; /* Qualifier code - record type      */\n    \u00fc ifbenf36_qualifier;\n  int            ifbenf36_record_length; /* Length of Logrec record         */\n  unsigned char  ifbenf36_record_start;  /* Start of Logrec record          */\n  \u00fc;\n\n#define ifbenf36_rsvd2      ifbenf36_qualifier._ifbenf36_rsvd2\n#define ifbenf36_byte3_qual ifbenf36_qualifier._ifbenf36_byte3_qual\n#define ifbenf36_byte4_qual ifbenf36_qualifier._ifbenf36_byte4_qual\n\n/* Values for field \"ifbenf36_record_length\" */\n#define ifbenf36_header_length  0x14 /* Assembled length of header */\n\n/* Values for field \"ifbenf36_record_start\" */\n#define ifbenf36_latest_version 0x01 /* Latest version of mapping  */\n#define ifbenf36_1st_version    0x01 /* First version of mapping   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IFBNLOG": {"ttr": 8155, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ifbnt_logrec \u00e4\n  unsigned char  ifbnt_logrec_name\u00c444\u00dc;      /* LOGREC data set name or          */\n  unsigned char  ifbnt_logrec_current;       /* Current Logrec recording    @L1A */\n  unsigned char  ifbnt_logrec_previous;      /* Previous Logrec recording   @L1A */\n  unsigned char  ifbnt_logrec_logstream\u00c426\u00dc; /* Logrec log stream name,     @L1A */\n  \u00fc;\n\n/* Values for field \"ifbnt_logrec_logstream\" */\n#define ifbnt_logrec_len     0x48 /* Length of IFBNT_LOGREC           */\n#define ifbnt_use_dataset    0x01 /* Logrec data set being used  @L1A */\n#define ifbnt_use_logstream  0x02 /* Logrec log stream being     @L1A */\n#define ifbnt_ignore_records 0x03 /* Logrec recording is ignored @L1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IFBNTKN": {"ttr": 8421, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ifbnt_token \u00e4\n  void          *ifbnt_logrec_name_ptr; /* Address of the LOGREC data set */\n  unsigned char  ifbnt_version;         /* Version of IFBNT_LOGREC        */\n  unsigned char  ifbnt_resv1;           /* Reserved for IBM               */\n  unsigned char  ifbnt_length\u00c42\u00dc;       /* Length of IFBNT_LOGREC area    */\n  unsigned char  ifbnt_resv2\u00c48\u00dc;        /* Reserved for IBM               */\n  \u00fc;\n\n/* Values for field \"ifbnt_resv2\" */\n#define ifbnt_token_len 0x10 /* Length of IFBNT_TOKEN @L1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IFBNTLOG": {"ttr": 6695, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ifbnt_logrec \u00e4\n  unsigned char  ifbnt_logrec_name\u00c444\u00dc;      /* LOGREC data set name or          */\n  unsigned char  ifbnt_logrec_current;       /* Current Logrec recording    @L1A */\n  unsigned char  ifbnt_logrec_previous;      /* Previous Logrec recording   @L1A */\n  unsigned char  ifbnt_logrec_logstream\u00c426\u00dc; /* Logrec log stream name,     @L1A */\n  \u00fc;\n\n/* Values for field \"ifbnt_logrec_logstream\" */\n#define ifbnt_logrec_len     0x48 /* Length of IFBNT_LOGREC           */\n#define ifbnt_use_dataset    0x01 /* Logrec data set being used  @L1A */\n#define ifbnt_use_logstream  0x02 /* Logrec log stream being     @L1A */\n#define ifbnt_ignore_records 0x03 /* Logrec recording is ignored @L1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IFBNTTKN": {"ttr": 6167, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ifbnt_token \u00e4\n  void          *ifbnt_logrec_name_ptr; /* Address of the LOGREC data set */\n  unsigned char  ifbnt_version;         /* Version of IFBNT_LOGREC        */\n  unsigned char  ifbnt_resv1;           /* Reserved for IBM               */\n  unsigned char  ifbnt_length\u00c42\u00dc;       /* Length of IFBNT_LOGREC area    */\n  unsigned char  ifbnt_resv2\u00c48\u00dc;        /* Reserved for IBM               */\n  \u00fc;\n\n/* Values for field \"ifbnt_resv2\" */\n#define ifbnt_token_len 0x10 /* Length of IFBNT_TOKEN @L1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGGCSI00": {"ttr": 8175, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_IGGCSI00\n#define INCLUDE_IGGCSI00\nextern \"C\"\n\t\u00e4\n\ttypedef int (IGGCSI00)(void *, void *, void *);\n\t\u00fc;\n\n#pragma pack(packed)\n\n#ifndef byte\n#define byte unsigned char\n#endif\n#ifndef ulong\n#define ulong unsigned long\n#endif\n\ntypedef struct\n\t\u00e4\n\tbyte csiretm_ab\u00c42\u00dc,\n\t\tcsiretr_b,\n\t\tcsiretc_b;\n\t\u00fc CSIRetInfo;\n\ntypedef struct\n\t\u00e4\n\tchar\n\t\tcsifiltk_ac\u00c444\u00dc,\n\t\tcsicatnm_ac\u00c444\u00dc,\n\t\tcsiresnm_ac\u00c444\u00dc,\n\t\tcsidtyps_ac\u00c416\u00dc,\n\t\tcsicldi_c,\n\t\tcsiresum_c,\n\t\tcsis1cat_c,\n\t\tcsioptns_c;\n\tushort csinumen_us;\n\tchar\t csifldnm\u00c48*32\u00dc;\n\t\u00fc CSISelFields;\n\ntypedef struct\n\t\u00e4\n\tulong\tcsiusrln_ul;\n\tulong  csireqln_ul;\n\tulong  csiusdln_ul;\n\tushort csinumfd_us;\n\t\u00fc CSIWorkData;\n\n\ntypedef struct _CSIEntryData\n\t\u00e4\n\tbyte\tcsieflag;\n\tbyte\tcsietype;\n\tbyte\tcsiename\u00c444\u00dc;\n\tunion\n\t\t\u00e4\n\t\tstruct \u00e4\n\t\t\tchar\tcsieretm\u00c42\u00dc;\n\t\t\tbyte\tcsieretr;\n\t\t\tbyte\tcsieretc;\n\t\t\t\u00fc _csieretc;\n\t\tstruct\u00e4\n\t\t\tshort\tcsietotln;\n\t\t\tshort csieresv;\n\t\t\tshort csielvol;\n\t\t\tshort csielnam;\n\t\t\tshort csieltyp;\n\t\t\t\u00fc _csiel;\n\t\t\u00fc _union;\n\t\u00fc CSIEntryData;\n\n\n#define CWORK_SIZE 65015\n#define CSINUMFD   12\n#define CSIETYPE\t1\n#define CSIENAME\t2\n#define CSIELENGTH 50\n\n#pragma pack(reset)\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IGVVSMD": {"ttr": 8381, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct vsmd \u00e4\n  union \u00e4\n    struct \u00e4\n      unsigned char  _vsmdfrmt; /* INDICATES FORMAT OF DESC. */\n      unsigned char  _vsmdlen;  /* LENGTH OF THE DESCRIPTOR  */\n      unsigned char  _vsmdid;   /* SUBPOOL ID                */\n      unsigned char  _vsmdkey;  /* STORAGE KEY (BITS 0 - 3)  */\n      \u00fc vsmdsp;\n    struct \u00e4\n      void          *_vsmdarea; /* ADDRESS OF BLOCK */\n      \u00fc vsmdblk;\n    void          *_vsmdtcb; /* ADDRESS OF OWNING TCB      */\n    void          *_vsmdcnt; /* NUMBER OF DESCRIPTORS THAT */\n    struct \u00e4\n      unsigned char  _filler1\u00c43\u00dc;\n      unsigned char  _vsmdflgs;    /* MISCELLANEOUS FLAGS */\n      \u00fc _vsmd_struct1;\n    \u00fc _vsmd_union1;\n  union \u00e4\n    void          *_vsmdtcbp; /* ADDRESS OF OWNING TCB OR ZERO */\n    void          *_vsmdsize; /* SIZE OF THE BLOCK             */\n    \u00fc _vsmd_union2;\n  \u00fc;\n\n#define vsmdfrmt _vsmd_union1.vsmdsp._vsmdfrmt\n#define vsmdlen  _vsmd_union1.vsmdsp._vsmdlen\n#define vsmdid   _vsmd_union1.vsmdsp._vsmdid\n#define vsmdkey  _vsmd_union1.vsmdsp._vsmdkey\n#define vsmdarea _vsmd_union1.vsmdblk._vsmdarea\n#define vsmdtcb  _vsmd_union1._vsmdtcb\n#define vsmdcnt  _vsmd_union1._vsmdcnt\n#define vsmdflgs _vsmd_union1._vsmd_struct1._vsmdflgs\n#define vsmdtcbp _vsmd_union2._vsmdtcbp\n#define vsmdsize _vsmd_union2._vsmdsize\n\n/* Values for field \"vsmdflgs\" */\n#define vsmdown 0x08 /* IF ONE, THE SUBPOOL IS OWNED   */\n#define vsmdshr 0x04 /* IF ONE, THE SUBPOOL IS SHARED  */\n#define vsmdinv 0x02 /* IF ONE, THE SUBPOOL IS INVALID */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDESB": {"ttr": 7887, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desb \u00e4\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _desb_id\u00c48\u00dc;  /* EYECATCHER (IGWDESB )     @03C */\n      int            _desb_len;    /* LENGTH OF BUFFER               */\n      unsigned char  _desb_lev;    /* CONTROL BLOCK LEVEL            */\n      unsigned char  _filler1\u00c43\u00dc;  /* reserved                       */\n      \u00fc desb_header;\n    void          *_desb_next;    /* Next Buffer Pointer           */\n    void          *_filler2;      /* RESERVED                      */\n    int            _desb_count;   /* count of entries in this      */\n    void          *_desb_avail;   /* Start of free space in buffer */\n    unsigned char  _filler3;      /* RESERVED                      */\n    unsigned char  _desb_subpool; /* subpool number                */\n    short int      _desb_gap_len; /* length of user requested gap  */\n    void          *_filler4;      /* RESERVED                      */\n    \u00fc desb_fixed;\n  unsigned char  desb_data; /* start of data area */\n  \u00fc;\n\n#define desb_id      desb_fixed.desb_header._desb_id\n#define desb_len     desb_fixed.desb_header._desb_len\n#define desb_lev     desb_fixed.desb_header._desb_lev\n#define desb_next    desb_fixed._desb_next\n#define desb_count   desb_fixed._desb_count\n#define desb_avail   desb_fixed._desb_avail\n#define desb_subpool desb_fixed._desb_subpool\n#define desb_gap_len desb_fixed._desb_gap_len\n\n/* Values for field \"desb_lev\" */\n#define desb_lev_iv 0x01 /* buffer level */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDESD": {"ttr": 8753, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desd \u00e4\n  struct \u00e4\n    unsigned char  _desd_flag;       /* flags                           */\n    unsigned char  _desd_code;       /* processing code                 */\n    unsigned char  _desd_errcode\u00c42\u00dc; /* low order half word of          */\n    short int      _desd_index;      /* Index number for name. required */\n    short int      _desd_data_len;   /* length of data area             */\n    void          *_desd_data_ptr;   /* address of data                 */\n    void          *_desd_name_ptr;   /* address of varying length name  */\n    \u00fc desd_entry;\n  \u00fc;\n\n#define desd_flag     desd_entry._desd_flag\n#define desd_code     desd_entry._desd_code\n#define desd_errcode  desd_entry._desd_errcode\n#define desd_index    desd_entry._desd_index\n#define desd_data_len desd_entry._desd_data_len\n#define desd_data_ptr desd_entry._desd_data_ptr\n#define desd_name_ptr desd_entry._desd_name_ptr\n\n/* Values for field \"desd_flag\" */\n#define desd_flag_alias 0x80 /* alias entry                */\n\n/* Values for field \"desd_code\" */\n#define desd_code_error 0x02 /* an unexpected error has    */\n#define desd_code_nogo  0x01 /* the entry has not yet been */\n#define desd_code_succ  0x00 /* successful processing      */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDESL": {"ttr": 8479, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desl \u00e4\n  union \u00e4\n    struct \u00e4\n      unsigned char  _desl_flags;    /* flags                 */\n      unsigned char  _desl_code;     /* result code           */\n      short int      _desl_errcode;  /* low order halfword of */\n      int            _filler1;       /* reserved              */\n      void          *_desl_smde_ptr; /* pointer to smde       */\n      unsigned char  _filler2\u00c44\u00dc;\n      \u00fc desl_entry;\n    struct \u00e4\n      unsigned char  _filler3\u00c48\u00dc;\n      void          *_desl_new_name_ptr; /* pointer to new name,       @L2A */\n      void          *_desl_name_ptr;     /* pointer to name (DESN)          */\n      \u00fc _desl_struct1;\n    struct \u00e4\n      unsigned char  _filler4\u00c412\u00dc;\n      void          *_desl_old_name_ptr; /* pointer to old name,       @L2A */\n      \u00fc _desl_struct2;\n    \u00fc _desl_union1;\n  \u00fc;\n\n#define desl_flags        _desl_union1.desl_entry._desl_flags\n#define desl_code         _desl_union1.desl_entry._desl_code\n#define desl_errcode      _desl_union1.desl_entry._desl_errcode\n#define desl_smde_ptr     _desl_union1.desl_entry._desl_smde_ptr\n#define desl_new_name_ptr _desl_union1._desl_struct1._desl_new_name_ptr\n#define desl_name_ptr     _desl_union1._desl_struct1._desl_name_ptr\n#define desl_old_name_ptr _desl_union1._desl_struct2._desl_old_name_ptr\n\n/* Values for field \"desl_flags\" */\n#define desl_module_buffered_lla 0x80 /* module is staged by lla      */\n\n/* Values for field \"desl_code\" */\n#define desl_code_newname_exists 0x03 /* for func=rename, indicates a */\n#define desl_code_error          0x02 /* an unexpected error has      */\n#define desl_code_notfound       0x01 /* entry not found or entry not */\n#define desl_code_succ           0x00 /* entry successfully processed */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDESN": {"ttr": 8629, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desn \u00e4\n  short int      desn_len; /* Length of name that follows */\n  unsigned char  desn_val; /* name data                   */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IGWDESP": {"ttr": 8383, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desp \u00e4\n  struct \u00e4\n    unsigned char  _desp_id\u00c48\u00dc;  /* eyecatcher (IGWDES_P) */\n    int            _desp_len;    /* length of buffer      */\n    unsigned char  _desp_lev;    /* control block level   */\n    unsigned char  _filler1\u00c43\u00dc;  /* RESERVED              */\n    \u00fc desp_header;\n  unsigned char  desp_func;                 /* function type (GET_ALL, GET,     */\n  unsigned char  _filler2\u00c43\u00dc;               /* RESERVED                         */\n  void          *desp_member_counts_ptr;    /* pointer to optional output  @08A */\n  struct \u00e4\n    unsigned char  _desp_flags\u00c42\u00dc;    /* DESP FLAG1                      */\n    unsigned char  _desp_exit_scope;  /* EXIT SCOPE                      */\n    unsigned char  _desp_concat;      /* concatenation number       @L2A */\n    unsigned char  _desp_libtype;     /* function subtype (DCB, DEB)     */\n    unsigned char  _desp_gettype;     /* function subtype (NAME_LIST or  */\n    unsigned char  _desp_reltype;     /* function subtype (DE_LIST  @L2A */\n    unsigned char  _desp_exit_option; /* EXIT option                     */\n    unsigned char  _desp_option;      /* PUT REPLACE option              */\n    unsigned char  _desp_subpool;     /* SUBPOOL identifier         @L2A */\n    unsigned char  _desp_conn_intent; /* connect intent                  */\n    unsigned char  _filler3;          /* RESERVED                        */\n    \u00fc desp_data;\n  void          *desp_dcb_ptr;              /* DCB address                      */\n  void          *desp_deb_ptr;              /* DEB address                      */\n  void          *desp_conn_id_ptr;          /* connect identifier address       */\n  void          *desp_areaptr_ptr;          /* address for buffer address @L2A  */\n  void          *desp_area_ptr;             /* buffer address                   */\n  int            desp_area2;                /* buffer length                    */\n  void          *desp_de_list_ptr;          /* DE_LIST address            @L2A  */\n  int            desp_de_list2;             /* DE_LIST entry count        @L2A  */\n  int            desp_entry_gap;            /* entry gap size                   */\n  void          *desp_mem_data_ptr;         /* MEM_DATA address                 */\n  int            desp_mem_data2;            /* MEM_DATA entry count             */\n  void          *desp_name_list_ptr;        /* name list address                */\n  int            desp_name_list2;           /* input list number of entries     */\n  void          *desp_name_ptr;             /* name address               @L2A  */\n  union \u00e4\n    void          *_desp_pdsde_ptr; /* bldl directory entry address    */\n    void          *_desp_smde_ptr;  /* input smde addr for GET    @L1A */\n    \u00fc _desp_union1;\n  void          *desp_exit_dst_ptr;         /* DESERV exit screen table, DST    */\n  void          *desp_exit_prev_dstptr_ptr; /* Address of pointer to previous   */\n  \u00fc;\n\n#define desp_id          desp_header._desp_id\n#define desp_len         desp_header._desp_len\n#define desp_lev         desp_header._desp_lev\n#define desp_flags       desp_data._desp_flags\n#define desp_exit_scope  desp_data._desp_exit_scope\n#define desp_concat      desp_data._desp_concat\n#define desp_libtype     desp_data._desp_libtype\n#define desp_gettype     desp_data._desp_gettype\n#define desp_reltype     desp_data._desp_reltype\n#define desp_exit_option desp_data._desp_exit_option\n#define desp_option      desp_data._desp_option\n#define desp_subpool     desp_data._desp_subpool\n#define desp_conn_intent desp_data._desp_conn_intent\n#define desp_pdsde_ptr   _desp_union1._desp_pdsde_ptr\n#define desp_smde_ptr    _desp_union1._desp_smde_ptr\n\n/* Values for field \"desp_lev\" */\n#define desp_lev_iv                0x01  /* parm list level                    */\n\n/* Values for field \"desp_func\" */\n#define desp_func_close            0x11  /* close (igwcdcls)           @P4A    */\n#define desp_func_defer_release    0x10  /* PROCESS DEFERRED REQUEST   @05A    */\n#define desp_func_update           0x09  /* UPDATE request             @L2A    */\n#define desp_func_rename           0x08  /* RENAME request             @L2A    */\n#define desp_func_delete           0x07  /* DELETE request             @L2A    */\n#define desp_func_exit             0x06  /* EXIT request                       */\n#define desp_func_get_names        0x05  /* GET_NAMES request          @L2A    */\n#define desp_func_put              0x04  /* PUT request                        */\n#define desp_func_release          0x03  /* RELEASE request            @L2A    */\n#define desp_func_get_all          0x02  /* GET_ALL request            @L2A    */\n#define desp_func_get              0x01  /* GET request                        */\n#define desp_func_omitted          0x00  /* NOT SPECIFIED              @L2A    */\n\n/* Values for field \"desp_flags\" */\n#define desp_bypass_lla            0x80  /* 0=USE LLA, 1=BYPASS LLA            */\n#define desp_concat_flg            0x40  /* 0=CONCAT PARM NOT SPECIFIED,       */\n#define desp_subpool_flg           0x20  /* 0=SUBPOOL PARM NOT SPECIFIED,      */\n#define desp_c370lib               0x10  /* 0=C370LIB PARM NOT SPECIFIED, @L3A */\n#define desp_concat_all            0x08  /* ONLY VALID IF DESP_CONCAT_FLG @L3A */\n#define desp_hide                  0x04  /* 0=all names are visible      @L3A  */\n#define desp_system_dcb            0x02  /* 0=SYSTEM DCB NOT SPECIFIED.  @L3A  */\n\n/* Values for field \"desp_exit_scope\" */\n#define desp_exit_scope_task       0x01  /* SETUP A TASK EXIT                  */\n#define desp_exit_scope_global     0x00  /* SETUP A GLOBAL EXIT                */\n\n/* Values for field \"desp_libtype\" */\n#define desp_libtype_dcb           0x02  /* DCB was input                      */\n#define desp_libtype_deb           0x01  /* DEB was input                      */\n#define desp_libtype_omitted       0x00  /* NOT SPECIFIED                      */\n\n/* Values for field \"desp_gettype\" */\n#define desp_gettype_smde          0x03  /* GET input is SMDE          @L3A    */\n#define desp_gettype_pdsde         0x02  /* GET input is PDSDE                 */\n#define desp_gettype_name_list     0x01  /* GET input is name list             */\n#define desp_gettype_omitted       0x00  /* NOT SPECIFIED                      */\n\n/* Values for field \"desp_reltype\" */\n#define desp_reltype_de_list       0x02  /* or RELTYPE                 @L2A    */\n#define desp_reltype_conn_id       0x01  /* @L2A                               */\n#define desp_reltype_omitted       0x00  /* NOT SPECIFIED              @L2A    */\n\n/* Values for field \"desp_exit_option\" */\n#define desp_exit_option_query     0x03  /* QUERY EXISTING EXIT                */\n#define desp_exit_option_delete    0x02  /* DELETE EXISTING EXIT               */\n#define desp_exit_option_replace   0x01  /* REPLACE EXISTING EXIT              */\n#define desp_exit_option_noreplace 0x00  /* DO NOT REPLACE EXISTING EXIT       */\n\n/* Values for field \"desp_option\" */\n#define desp_option_replace        0x01  /* Replace alias or primary           */\n#define desp_option_noreplace      0x00  /* Do not replace                     */\n\n/* Values for field \"desp_conn_intent\" */\n#define desp_conn_intent_input     0x03  /* connect for input                  */\n#define desp_conn_intent_exec      0x02  /* connect for exec                   */\n#define desp_conn_intent_hold      0x01  /* connect for hold                   */\n#define desp_conn_intent_none      0x00  /* do not connect                     */\n\n/* Values for field \"desp_entry_gap\" */\n#define desp_entry_gap_max         0x800 /* maximum entry gap                  */\n\n/* Values for field \"desp_exit_prev_dstptr_ptr\" */\n#define desp_len_iv                0x68  /* parm list length                   */\n#define desp_len_list              0x58  /* parm list length w/o header        */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDESR": {"ttr": 8223, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desr \u00e4\n  unsigned char  desr_compid; /* DFP component id           */\n  unsigned char  desr_modid;  /* module id within component */\n  unsigned char  desrs\u00c42\u00dc;    /* reason code                */\n  \u00fc;\n\n/* Values for field \"desrs\" */\n#define desrs_uss_not_supported        0x467 /* USS directories not supp.@L5A */\n#define desrs_bad_dcii                 0x466 /* DCII EYE CATCHER BAD   @09A   */\n#define desrs_igwlock_failed           0x465 /* A call to IGWLOCK to get a    */\n#define desrs_mem_counts_concat_all    0x464 /* MEMBER_COUNTS and CONCAT(ALL) */\n#define desrs_pacb_ptr_zero            0x463 /* An igwftokm extract returned  */\n#define desrs_early_eof                0x462 /* A C370LIB DIRECTORY IS BAD.   */\n#define desrs_bad_esd_name             0x461 /* A C370LIB DIRECTORY IS BAD.   */\n#define desrs_igwlsrxl_failed          0x460 /* A call to RELEASE             */\n#define desrs_igwlsoxl_failed          0x45F /* A call to OBTAIN  the         */\n#define desrs_igwlsixl_failed          0x45E /* A call to initialize          */\n#define desrs_igwlsnxl_failed          0x45D /* A call to nullify the         */\n#define desrs_defer_anchor_obtain      0x45C /* AN ERROR OCCURED PROCESSING   */\n#define desrs_defer_anchor_release     0x45B /* AN ERROR OCCURED PROCESSING   */\n#define desrs_defer_anchor_purge       0x45A /* AN ERROR OCCURED PROCESSING   */\n#define desrs_defer_element_purge      0x459 /* AN ERROR OCCURED PROCESSING   */\n#define desrs_member_pend_delete       0x458 /* A FUNC=PUT request specified  */\n#define desrs_long_name_not_original   0x457 /* A FUNC=RENAME request         */\n#define desrs_new_name_exists          0x456 /* A FUNC=RENAME request         */\n#define desrs_both_names_big           0x455 /* A FUNC=RENAME request         */\n#define desrs_both_names_same          0x454 /* A FUNC=RENAME request         */\n#define desrs_inval_prevdst_header     0x453 /* The DST header is invalid     */\n#define desrs_prev_dstptr_ptr_zero     0x452 /* The pointer to the previous   */\n#define desrs_dst_comp_swap_failed     0x451 /* AN EXIT_OPTION=DELETE         */\n#define desrs_exit_scope_invalid       0x450 /* The EXIT_SCOPE specified      */\n#define desrs_exit_option_invalid      0x44F /* The EXIT_OPTION specified     */\n#define desrs_exit_prev_dstptr_zero    0x44E /* The EXIT_PREV_DSTPTR parm     */\n#define desrs_inval_dst_header         0x44D /* The DST header is not         */\n#define desrs_exit_dst_ptr_zero        0x44C /* A ZERO DESP_EXIT_DST_PTR      */\n#define desrs_dst_already_exists       0x44B /* An EXIT exists and DESERV     */\n#define desrs_exit_error               0x44A /* Invalid return code           */\n#define desrs_auth_error               0x449 /* Caller not supervisor state,  */\n#define desrs_pacbloc_error            0x448 /* A call to the pacb_locate     */\n#define desrs_unknown                  0x447 /* Issued by DESERV recovery     */\n#define desrs_getmain_error            0x446 /* A call to GETMAIN failed      */\n#define desrs_cant_change_recovery     0x445 /* A call to IGWFECHG failed     */\n#define desrs_igwcdfnc_error           0x444 /* A call to IGWCDFNC failed@L1C */\n#define desrs_no_pnar_for_name         0x443 /* A name record was obtained    */\n#define desrs_unexpected_sar_code      0x442 /* An unexpected Standard        */\n#define desrs_two_mlt_names            0x441 /* Two mlt names were found for  */\n#define desrs_pdsde_merge_err          0x440 /* PDSDE merge into PMAR failed  */\n#define desrs_unknown_exit_error       0x43F /* Issued by the DESERV recovery */\n#define desrs_ecb_posted_error         0x43E /* An I/O error occurred,        */\n#define desrs_connid_overflow          0x43D /* The maximum allowable         */\n#define desrs_name_is_primary_name     0x43C /* Alias name specified is a     */\n#define desrs_clock_error              0x43B /* An STCK instruction failed    */\n#define desrs_data_length_error        0x43A /* Desd data length is invalid,  */\n#define desrs_anchor_in_use            0x439 /* An obtain for a DCLA was      */\n#define desrs_anchor_free              0x438 /* A purge for a DCLA was        */\n#define desrs_add_stack_failed         0x437 /* Non-zero return code from     */\n#define desrs_invalid_conn_intent      0x436 /* The connect intent            */\n#define desrs_name_list___invalid      0x435 /* The address of the NAME_LIST  */\n#define desrs_name_list_count_invalid  0x434 /* The count of entries in       */\n#define desrs_connid_invalid           0x433 /* The connect identifier in     */\n#define desrs_invalid_gettype          0x432 /* The GET function accepts      */\n#define desrs_invalid_area_ptr         0x431 /* The address of a DESB         */\n#define desrs_invalid_areaptr_ptr      0x430 /* The address of the AREAPTR    */\n#define desrs_area_length_too_small    0x42F /* The length of the area        */\n#define desrs_invalid_entry_gap        0x42E /* Gap specfied was too large.   */\n#define desrs_invalid_de_list_ptr      0x42D /* The address of the DE_LIST    */\n#define desrs_invalid_de_list_cnt      0x42C /* The number of entries in the  */\n#define desrs_invalid_conn_id_ptr      0x42B /* The address of the CONN_ID    */\n#define desrs_invalid_release_type     0x42A /* The RELEASE function          */\n#define desrs_invalid_put_option       0x429 /* PUT function requires         */\n#define desrs_invalid_mem_data_ptr     0x428 /* The address of the MEM_DATA   */\n#define desrs_invalid_mem_data_cnt     0x427 /* The count of entries in       */\n#define desrs_invalid_name_ptr         0x426 /* The address of the NAME       */\n#define desrs_invalid_name_length      0x425 /* The length of a name          */\n#define desrs_unsupported_func         0x424 /* The FUNC value is incorrect   */\n#define desrs_deb_requires_auth        0x423 /* To pass the DEB the caller    */\n#define desrs_invalid_dcb_ptr          0x422 /* The address of the DCB is 0   */\n#define desrs_dcb_not_open             0x421 /* The passed DCB is not opened  */\n#define desrs_comp_name_bad            0x420 /* A compressed name is          */\n#define desrs_dcb_not_open_output      0x41F /* With function PUT the DCB     */\n#define desrs_invalid_deb_ptr          0x41E /* Address of the DEB is 0 or    */\n#define desrs_debchk_failed            0x41D /* The DEBCHK macro failed.      */\n#define desrs_invalid_concat           0x41C /* The concatenation number      */\n#define desrs_pdsde_ptr_invalid        0x41B /* Address of the PDSDE is 0     */\n#define desrs_invalid_ft               0x41A /* File token is invalid         */\n#define desrs_lib_not_buffered         0x419 /* ** INTERNAL CODE **           */\n#define desrs_invalid_dfnc_func        0x418 /* An internal function call     */\n#define desrs_disconnect_file_failed   0x417 /* A call to disconnect files    */\n#define desrs_insuf_buffer_size        0x416 /* Area provided is too small    */\n#define desrs_pds_not_supported        0x415 /* This function requires a      */\n#define desrs_invalid_ct               0x414 /* Connect token invalid.        */\n#define desrs_invalid_mlt              0x413 /* MLT is not valid (PUT func).  */\n#define desrs_more_than_1_primary      0x412 /* The MEM_DATA must have only   */\n#define desrs_invalid_parm_list_header 0x411 /* The id, length, or level      */\n#define desrs_invalid_name_prefix      0x410 /* The first 8 bytes of a name   */\n#define desrs_no_primary_name          0x40F /* The MEM_DATA must have one    */\n#define desrs_name_already_exists      0x40E /* The PUT failed because of a   */\n#define desrs_long_name_and_lla        0x40D /* LLA does not support long     */\n#define desrs_program_object_only      0x40C /* Function supports PDSE        */\n#define desrs_freemain_error           0x40B /* FREEMAIN failure              */\n#define desrs_convert_error            0x40A /* Error converting TTR          */\n#define desrs_unexpected_jcdm_error    0x409 /* JCDM returned an unexpected   */\n#define desrs_pdsde_convrt_err         0x408 /* Error converting PDSDE        */\n#define desrs_setlock_err              0x407 /* Bad return code from SETLOCK  */\n#define desrs_extract_error            0x406 /* IGWFTOKM EXTRACT failed       */\n#define desrs_set_error                0x405 /* IGWFTOKM SET failed           */\n#define desrs_anchor_create_failed     0x404 /* Number of CONNIDs exceeded    */\n#define desrs_element_create_failed    0x403 /* No space to store connections */\n#define desrs_pmar_merge_err           0x402 /* PMARA to PMAR merge failed    */\n#define desrs_iewlcnvt_error           0x401 /* IEWLCNVT macro call error@L1C */\n#define desrs_name_not_defined         0x400 /* name to be replaced did       */\n#define desrs_changed_pmar_length      0x3FF /* For an UPDATE function, the   */\n#define desrs_smde_token_bad           0x3FE /* The smde input defined a      */\n#define desrs_pri_nm_this_file         0x3FD /* alias name is same name as    */\n#define desrs_cant_get_filelock        0x3FC /* file lock unavailable, pos-   */\n#define desrs_connection_not_found     0x3FB /* The connection specified in   */\n#define desrs_desl_smde_ptr            0x3FA /* The SMDE for the release      */\n#define desrs_reltype_invalid          0x3F9 /* The release function was      */\n#define desrs_bad_pmar_field_updated   0x3F8 /* For the DESERV function       */\n#define desrs_iewbxilo_error           0x3F7 /* a call to iewbxilo returned   */\n#define desrs_multiple_errors          0x3F6 /* MORE THAN ONE ERROR HAS @L1C  */\n#define desrs_auth_subpool             0x3F5 /* Caller specified an           */\n#define desrs_directory_empty          0x3F4 /* No members in directory       */\n#define desrs_connect_auth             0x3F3 /* A DESERV GET_ALL call was     */\n#define desrs_c370lib_pdsde_me         0x3F2 /* C370LIB(YES) and PDSDE are    */\n#define desrs_bad_blksize              0x3F1 /* DCBBLKSI is too small   @L3A  */\n#define desrs_bad_txt_card             0x3F0 /* while processing a C370LIB    */\n#define desrs_bad_c370lib_dir          0x3EF /* the C370LIB directory         */\n#define desrs_dcb_not_open_po          0x3EE /* the DCB was not opened with   */\n#define desrs_area_areaptr_me          0x3ED /* AREA and AREAPTR are mutually */\n#define desrs_smde_ptr_invalid         0x3EC /* For GETTYPE=SMDE, the input   */\n#define desrs_c370lib_smde_me          0x3EB /* The SMDE parameter is         */\n#define desrs_notfound                 0x3EA /* Some members not found        */\n#define desrs_module_buffered_lla      0x3E9 /* The module is buffered        */\n#define desrs_succ                     0x00  /* successful processing         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDESX": {"ttr": 8537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct desx \u00e4\n  struct \u00e4\n    unsigned char  _desx_id\u00c48\u00dc;  /* eyecatcher (IGWDESX) */\n    int            _desx_len;    /* length of buffer     */\n    unsigned char  _desx_lev;    /* control block level  */\n    unsigned char  _filler1\u00c43\u00dc;  /* RESERVED             */\n    \u00fc desx_header;\n  void          *desx_desp_ptr;    /* Address of DESP               */\n  void          *desx_dst_ptr;     /* DESERV Screen Table, DST      */\n  unsigned char  desx_caller_key;  /* High order nibble is DESERV's */\n  unsigned char  desx_flags;       /* Flags                         */\n  short int      _filler2;         /* RESERVED                      */\n  int            desx_return_code; /* User Exit rtn return code     */\n  int            desx_reason_code; /* User Exit rtn reason code     */\n  \u00fc;\n\n#define desx_id  desx_header._desx_id\n#define desx_len desx_header._desx_len\n#define desx_lev desx_header._desx_lev\n\n/* Values for field \"desx_lev\" */\n#define desx_lev_iv   0x01 /* parm list level              */\n\n/* Values for field \"desx_flags\" */\n#define desx_bldl_bit 0x80 /* DESERV BLDL path             */\n#define desx_pre_bit  0x40 /* Exit invoked prior to DESERV */\n#define desx_post_bit 0x20 /* Exit invoked after DESERV    */\n\n/* Values for field \"desx_reason_code\" */\n#define desx_len_iv   0x24 /* parm list length             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IGWDST": {"ttr": 8521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct dst \u00e4\n  unsigned char  dst_id\u00c48\u00dc;    /* eyecatcher (IGWDST)     */\n  int            dst_len;      /* length of buffer        */\n  unsigned char  dst_lev;      /* control block level     */\n  unsigned char  dst_flags;    /* DST flags               */\n  unsigned char  dst_res\u00c42\u00dc;   /* RESERVED                */\n  void          *dst_exit_ptr; /* Address of exit routine */\n  \u00fc;\n\n/* Values for field \"dst_lev\" */\n#define dst_lev_iv     0x01 /* parm list level  */\n\n/* Values for field \"dst_flags\" */\n#define dst_flags_prop 0x01 /* Propagate        */\n\n/* Values for field \"dst_exit_ptr\" */\n#define dst_len_iv     0x14 /* parm list length */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAASCB": {"ttr": 8147, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ascb \u00e4\n  struct \u00e4\n    unsigned char  _ascbascb\u00c44\u00dc; /* -               ACRONYM IN EBCDIC -ASCB-             */\n    void          *_ascbfwdp;    /* -                 ADDRESS OF NEXT ASCB ON ASCB READY */\n    \u00fc ascbegin;\n  void          *ascbbwdp;    /* -                 ADDRESS OF PREVIOUS ASCB ON ASCB     */\n  void          *ascbltcs;    /* -                 TCB and preemptable-class SRB   @07C */\n  struct \u00e4\n    void          *_ascbsvrb; /* -                 SVRB POOL ADDRESS.  THIS OFFSET      */\n    int            _ascbsync; /* -                 COUNT USED TO SYNCHRONIZE SVRB POOL. */\n    \u00fc ascbsupc;\n  void          *ascbiosp;    /* -                 POINTER TO IOS PURGE INTERFACE       */\n  struct \u00e4\n    unsigned char  _ascbr01c\u00c42\u00dc; /* RESERVED, MUST BE ZERO          @L8A */\n    short int      _ascbwqid;    /* LOGICAL CPU ID OF THE PROCESSOR @L8A */\n    \u00fc ascbwqlk;\n  void          *ascbsawq;    /* -                 ADDRESS OF ADDRESS SPACE SRB WEB     */\n  struct \u00e4\n    short int      _ascbasid; /* -                 ADDRESS SPACE IDENTIFIER FOR THE */\n    \u00fc ascbasn;\n  unsigned char  ascbr026\u00c42\u00dc; /* -               RESERVED                        @L4C   */\n  unsigned char  ascbll5;     /* -                 FLAGS. SERIALIZATION - LOCAL    @D2A */\n  char           ascbhlhi;    /* -               INDICATION OF SUSPEND LOCKS     @L4C   */\n  struct \u00e4\n    char           _ascbdphi; /* -               HIGH ORDER BYTE OF HALFWORD     @L4A */\n    char           _ascbdp;   /* -               DISPATCHING PRIORITY RANGE FROM      */\n    \u00fc ascbdph;\n  int            ascbtcbe;    /* -               Count of ready tcbs in the      @LCC   */\n  void          *ascblda;     /* -                 POINTER TO LOCAL DATA AREA PART OF   */\n  unsigned char  ascbrsmf;    /* -                 RSM ADDRESS SPACE FLAGS              */\n  unsigned char  ascbflg3;    /* -               Flags needing no serialization  @LDA   */\n  short int      ascbhasi;    /* -               Local lock owning ASID          @PAC   */\n  void          *ascbcscb;    /* -                 ADDRESS OF CSCB                      */\n  void          *ascbtsb;     /* -                 ADDRESS OF TSB                       */\n  double         ascbejst;    /* -                 ELAPSED JOB STEP TIMING  UNSIGNED    */\n  double         ascbewst;    /* -                 TIME OF DAY WHENEVER I-STREAM IS     */\n  int            ascbjstl;    /* -                 CPU TIME LIMIT FOR THE JOB STEP      */\n  int            ascbecb;     /* -                 RCT'S WORK ECB                       */\n  int            ascbubet;    /* -                 TIME STAMP WHEN USER BECOMES READY   */\n  void          *ascbtlch;    /* -                 CHAIN FIELD FOR TIME LIMIT EXCEEDED  */\n  void          *ascbdump;    /* -                 SVC DUMP TASK TCB ADDRESS            */\n  struct \u00e4\n    short int      _ascbaffn; /* -                 CPU AFFINITY INDICATOR              */\n    unsigned char  _ascbrctf; /* -                 FLAGS FOR RCT SERIALIZED BY COMPARE */\n    unsigned char  _ascbflg1; /* -                 FLAG FIELD                          */\n    \u00fc ascbfw1;\n  int            ascbtmch;    /* -                 TERMINATION QUEUE CHAIN              */\n  void          *ascbasxb;    /* -                 POINTER TO ADDRESS SPACE EXTENSION   */\n  struct \u00e4\n    short int      _ascbswct; /* -                 NUMBER OF TIMES MEMORY ENTERS SHORT */\n    unsigned char  _ascbdsp1; /* -                 NONDISPATCHABILITY FLAGS.           */\n    unsigned char  _ascbflg2; /* -                 FLAG BYTE.                          */\n    \u00fc ascbfw2;\n  struct \u00e4\n    short int      _filler1;  /* -                 FIRST HALFWORD OF ASCBSCNT MUST BE */\n    short int      _ascbsrbs; /* -                 COUNT OF SRB'S SUSPENDED IN THIS   */\n    \u00fc ascbscnt;\n  void          *ascbllwq;    /* -                 ADDRESS SPACE LOCAL LOCK        @04C */\n  void          *ascbrctp;    /* -                 POINTER TO REGION CONTROL TASK (RCT) */\n  struct \u00e4\n    int            _ascblock; /* -                 LOCAL LOCK.  THIS OFFSET FIXED BY    */\n    void          *_ascblswq; /* -                 ADDRESS SPACE LOCAL LOCK WEB    @L8C */\n    \u00fc ascblkgp;\n  int            ascbqecb;    /* -                 QUIESCE ECB                          */\n  int            ascbmecb;    /* -                 MEMORY CREATE/DELETE ECB             */\n  void          *ascboucb;    /* -                 SYSTEM RESOURCES MANAGER (SRM) USER  */\n  void          *ascbouxb;    /* -                 SYSTEM RESOURCES MANAGER (SRM) USER  */\n  struct \u00e4\n    short int      _ascbfmct; /* -                 RESERVED. ALLOCATED PAGE FRAME  @L6C */\n    unsigned char  _ascblevl; /* -                 LEVEL NUMBER OF ASCB            @D3A */\n    unsigned char  _ascbfl2a; /* -                 FLAG BYTE.                      @DAA */\n    \u00fc ascbfw2a;\n  void          *ascbhreq;    /* -                 Local lock requestor address    @PAC */\n  void          *ascbiqea;    /* -                 POINTER TO IQE FOR ATCAM             */\n  void          *ascbrtmc;    /* -                 ANCHOR FOR SQA SDWA QUEUE            */\n  unsigned char  ascbmcc\u00c44\u00dc;  /* -               USED TO HOLD A MEMORY TERMINATION      */\n  void          *ascbjbni;    /* -                 POINTER TO JOBNAME FIELD FOR         */\n  void          *ascbjbns;    /* -                 POINTER TO JOBNAME FIELD FOR         */\n  struct \u00e4\n    unsigned char  _ascbsrq1; /* -                 FIRST BYTE OF ASCBSRQ  */\n    unsigned char  _ascbsrq2; /* -                 SECOND BYTE OF ASCBSRQ */\n    unsigned char  _ascbsrq3; /* -                 THIRD BYTE OF ASCBSRQ  */\n    unsigned char  _ascbsrq4; /* -                 FOURTH BYTE OF ASCBSRQ */\n    \u00fc ascbsrq;\n  void          *ascbvgtt;    /* -                 ADDRESS OF VSAM GLOBAL TERMINATION   */\n  void          *ascbpctt;    /* -                 ADDRESS OF PRIVATE CATALOG           */\n  short int      ascbssrb;    /* -                 COUNT OF STATUS STOP SRB'S           */\n  char           ascbsmct;    /* -               NUMBER OF OUTSTANDING STEP MUST        */\n  unsigned char  ascbsrbm;    /* -                 MODEL PSW BYTE 0 USED BY SRB         */\n  int            ascbswtl;    /* -                 STEP WAIT TIME LIMIT          MDC029 */\n  double         ascbsrbt;    /* -                 ACCUMULATED SRB TIME          MDC030 */\n  void          *ascbltcb;    /* -                 TCB and preemptable-class SRB   @07C */\n  int            ascbltcn;    /* -                 Count of TCB and preemptable-   @07A */\n  int            ascbtcbs;    /* -                 NUMBER OF READY TCB'S.          @L8A */\n  int            ascblsqt;    /* -                 NUMBER OF TCBS ON A LOCAL LOCK  @L8A */\n  void          *ascbwprb;    /* -                 ADDRESS OF WAIT POST REQUEST BLOCK   */\n  struct \u00e4\n    char           _ascbndp;  /* -               NEW DISPATCHING PRIORITY             */\n    char           _ascbtndp; /* -               NEW TIME SLICE DISPATCHING PRIORITY  */\n    char           _ascbntsg; /* -               NEW TIME SLICE GROUP                 */\n    char           _ascbiodp; /* -               I/O PRIORITY (MDC374)       @G50IP9A */\n    \u00fc ascbsrdp;\n  void          *ascbloci;    /* -                 LOCK IMAGE, ADDRESS OF ASCB          */\n  void          *ascbcmlw;    /* -                 ADDRESS OF THE WEB REPRESENTING @L8C */\n  int            ascbcmlc;    /* -                 COUNT OF CML LOCKS HELD BY           */\n  struct \u00e4\n    unsigned char  _ascbsso1\u00c43\u00dc; /* -               SPACE SWITCH EVENT OWNER    @G381P9A   */\n    unsigned char  _ascbsso4;    /* -                 SPACE SWITCH EVENT OWNER    @G381P9A */\n    \u00fc ascbssom;\n  void          *ascbaste;    /* -                 VIRTUAL ADDRESS OF ADDRESS  @G381P9A */\n  void          *ascbltov;    /* -                 VIRTUAL ADDRESS OF THE      @G381P9A */\n  void          *ascbatov;    /* -                 VIRTUAL ADDRESS OF          @G381P9A */\n  short int      ascbetc;     /* -                 NUMBER OF ENTRY TABLES      @G381P9A */\n  short int      ascbetcn;    /* -                 NUMBER OF CONNECTIONS TO    @G381P9A */\n  short int      ascblxr;     /* -                 NUMBER OF LINKAGE INDEXES   @G381P9A */\n  short int      ascbaxr;     /* -                 NUMBER OF AUTHORIZATION     @G381P9A */\n  void          *ascbstkh;    /* -                 ADDRESS OF LOCAL STACK POOL @G381P9A */\n  int            ascbgqel;    /* -                 ADDRESS SPACE GLOBAL        @G381P9A */\n  int            ascblqel;    /* -                 ADDRESS SPACE LOCAL         @G381P9A */\n  int            ascbgsyn;    /* -                 GRS SYNCHRONIZATION         @G381P9A */\n  void          *ascbxtcb;    /* -                 ADDRESS OF THE JOB STEP @G381P9A     */\n  struct \u00e4\n    unsigned char  _ascbcs1;     /* -                 FIRST BYTE OF COMPARE AND            */\n    unsigned char  _ascbcs2;     /* -                 SECOND BYTE OF COMPARE AND SWAP @P5A */\n    unsigned char  _ascbr122\u00c42\u00dc; /* -               RESERVED.                       @P5C   */\n    \u00fc ascbfw3;\n  void          *ascbgxl;     /* -                 ADDRESS OF GLOBALLY LOADED MODULE    */\n  double         ascbeatt;    /* -                 EXPENDED AND ACCOUNTED TASK TIME.    */\n  double         ascbints;    /* -                 JOB SELECTION TIME STAMP.            */\n  struct \u00e4\n    unsigned char  _ascbll1; /* -                 FIRST BYTE OF FLAGS.        @G381P9A */\n    unsigned char  _ascbll2; /* -                 SECOND BYTE OF FLAGS.       @G381P9A */\n    unsigned char  _ascbll3; /* -                 THIRD BYTE OF FLAGS.        @G381P9A */\n    unsigned char  _ascbll4; /* -                 FOURTH BYTE OF FLAGS.       @G381P9A */\n    \u00fc ascbfw4;\n  void          *ascbrcms;    /* ADDRESS OF THE REQUESTED    @G381PXU                   */\n  int            ascbiosc;    /* -                 I/O SERVICE MEASURE.        @G381PXU */\n  short int      ascbpkml;    /* -              PKM OF LAST TASK DISPATCHED             */\n  short int      ascbxcnt;    /* -                 EXCP COUNT FIELD.               @L1A */\n  void          *ascbnsqa;    /* -                 ADDRESS OF THE SQA RESIDENT          */\n  void          *ascbasm;     /* -                 ADDRESS OF THE ASM HEADER.      @L2A */\n  void          *ascbassb;    /* -                 POINTER TO ADDRESS SPACE        @D6C */\n  void          *ascbtcme;    /* -                 POINTER TO TCXTB.               @D1A */\n  struct \u00e4\n    unsigned char  _filler2;     /* -               BYTE 0 OF ASCBGQIR              @O3A */\n    unsigned char  _filler3\u00c42\u00dc;  /* -               BYTE 1 AND 2 OF ASCBGQIR        @O3A */\n    unsigned char  _ascbgqi3;    /* -               BYTE 3 OF ASCBGQIR              @O3A */\n    \u00fc ascbgqir;\n  int            ascblsqe;    /* -                 Number of Enclave TCBs that are on   */\n  double         ascbiosx;    /* -                 I/O service measure extended.   @0AC */\n  unsigned char  ascbr168\u00c44\u00dc; /* -              RESERVED.                       @0AC    */\n  void          *ascbrsme;    /* -               POINTER TO RSM ADDRESS SPACE    @D5A   */\n  struct \u00e4\n    unsigned char  _ascbavm1; /* -                 FIRST BYTE OF ASCBAVM.          @01A */\n    unsigned char  _ascbavm2; /* -                 SECOND BYTE OF ASCBAVM.         @01A */\n    short int      _ascbagen; /* -                 AVM ASID REUSE GENERATION       @01A */\n    \u00fc ascbavm;\n  int            ascbarc;     /* -                 REASON CODE ON MEMTERM.              */\n  struct \u00e4\n    void          *_ascbrsma; /* -               ADDRESS OF RSM'S CONTROL BLOCK */\n    \u00fc ascbrsm;\n  int            ascbdcti;    /* -              ACCUMULATED CHANNEL CONNECT TIME        */\n  double         ascbend;     /* -                END OF ASCB                     @L7C  */\n  \u00fc;\n\n#define ascbascb ascbegin._ascbascb\n#define ascbfwdp ascbegin._ascbfwdp\n#define ascbsvrb ascbsupc._ascbsvrb\n#define ascbsync ascbsupc._ascbsync\n#define ascbr01c ascbwqlk._ascbr01c\n#define ascbwqid ascbwqlk._ascbwqid\n#define ascbasid ascbasn._ascbasid\n#define ascbdphi ascbdph._ascbdphi\n#define ascbdp   ascbdph._ascbdp\n#define ascbaffn ascbfw1._ascbaffn\n#define ascbrctf ascbfw1._ascbrctf\n#define ascbflg1 ascbfw1._ascbflg1\n#define ascbswct ascbfw2._ascbswct\n#define ascbdsp1 ascbfw2._ascbdsp1\n#define ascbflg2 ascbfw2._ascbflg2\n#define ascbsrbs ascbscnt._ascbsrbs\n#define ascblock ascblkgp._ascblock\n#define ascblswq ascblkgp._ascblswq\n#define ascbfmct ascbfw2a._ascbfmct\n#define ascblevl ascbfw2a._ascblevl\n#define ascbfl2a ascbfw2a._ascbfl2a\n#define ascbsrq1 ascbsrq._ascbsrq1\n#define ascbsrq2 ascbsrq._ascbsrq2\n#define ascbsrq3 ascbsrq._ascbsrq3\n#define ascbsrq4 ascbsrq._ascbsrq4\n#define ascbndp  ascbsrdp._ascbndp\n#define ascbtndp ascbsrdp._ascbtndp\n#define ascbntsg ascbsrdp._ascbntsg\n#define ascbiodp ascbsrdp._ascbiodp\n#define ascbsso1 ascbssom._ascbsso1\n#define ascbsso4 ascbssom._ascbsso4\n#define ascbcs1  ascbfw3._ascbcs1\n#define ascbcs2  ascbfw3._ascbcs2\n#define ascbr122 ascbfw3._ascbr122\n#define ascbll1  ascbfw4._ascbll1\n#define ascbll2  ascbfw4._ascbll2\n#define ascbll3  ascbfw4._ascbll3\n#define ascbll4  ascbfw4._ascbll4\n#define ascbgqi3 ascbgqir._ascbgqi3\n#define ascbavm1 ascbavm._ascbavm1\n#define ascbavm2 ascbavm._ascbavm2\n#define ascbagen ascbavm._ascbagen\n#define ascbrsma ascbrsm._ascbrsma\n\n/* Values for field \"ascbsawq\" */\n#define ascburrq 0x80 /* -             SYSEVENT USER READY REQUIRED    @L8C */\n\n/* Values for field \"ascbll5\" */\n#define ascbs3s  0x20 /* -             STAGE II EXIT EFECTOR HAS       @D2M */\n\n/* Values for field \"ascbrsmf\" */\n#define ascb2lpu 0x80 /* -             SECOND LEVEL PREFERRED USER.  THIS   */\n#define ascb1lpu 0x40 /* -             FIRST LEVEL PREFERRED USER           */\n#define ascbn2lp 0x20 /* -             SRM IN SYSEVENT TRANSWAP SHOULD NOT  */\n#define ascbveqr 0x10 /* -             V=R ADDRESS SPACE  (MDC372) @ZA17355 */\n\n/* Values for field \"ascbflg3\" */\n#define ascbcnip 0x80 /* -             Address space created during NIP     */\n#define ascbreus 0x40 /* -             This is a reusable ASID. It may be   */\n\n/* Values for field \"ascbrctf\" */\n#define ascbtmno 0x80 /* -             MEMORY IS BEING QUIESCED, IS         */\n#define ascbfrs  0x40 /* -             RESTORE REQUEST                      */\n#define ascbfqu  0x20 /* -             QUIESCE REQUEST                      */\n#define ascbjste 0x10 /* -             JOB STEP TIME EXCEEDED. NOT USED BY  */\n#define ascbwait 0x08 /* -             LONG WAIT INDICATOR                  */\n#define ascbout  0x04 /* -             ADDRESS SPACE CONSIDERED SWAPPED OUT */\n#define ascbtmlw 0x02 /* -             MEMORY IS IN A LONG WAIT             */\n#define ascbtoff 0x01 /* -             MEMORY SHOULD NOT BE CHECKED FOR JOB */\n\n/* Values for field \"ascbflg1\" */\n#define ascblsas 0x80 /* -             ADDRESS SPACE IS LOGICALLY SWAPPED   */\n#define ascbdstk 0x40 /* -             SRM REQUIRES A TIME STAMP TO    @P6C */\n#define ascbdstz 0x40 /* -             Bit constant for bit position  @P7A  */\n#define ascbterm 0x10 /* -             ADDRESS SPACE TERMINATING NORMALLY   */\n#define ascbabnt 0x08 /* -             ADDRESS SPACE TERMINATING ABNORMALLY */\n#define ascbmemp 0x04 /* -             Memory Termination PURGEDQ flag @LBA */\n\n/* Values for field \"ascbdsp1\" */\n#define ascbssnd 0x80 /* -             SYSTEM SET NONDISPATCHABLE AND THIS  */\n#define ascbfail 0x40 /* -             A FAILURE HAS OCCURRED WITHIN THE    */\n#define ascbsnqs 0x20 /* -             STATUS STOP NON-QUIESCABLE LEVEL     */\n#define ascbssss 0x10 /* -             STATUS STOP SRB SUMMARY              */\n#define ascbstnd 0x08 /* -             TCB'S NONDISPATCHABLE                */\n#define ascbuwnd 0x04 /* -             STATUS SET UNLOCKED WORKUNITS   @LAA */\n#define ascbnoq  0x02 /* -             ASCB NOT ON SWAPPED IN QUEUE    @L4A */\n\n/* Values for field \"ascbflg2\" */\n#define ascbxmpt 0x80 /* -             ASCB EXEMPT FROM SYSTEM              */\n#define ascbpxmt 0x40 /* -             ASCB PERMANENTLY EXEMPT FROM SYSTEM  */\n#define ascbcext 0x20 /* -             CANCEL TIMER EXTENSION BECAUSE EOT   */\n#define ascbs2s  0x10 /* -             FOR LOCK MANAGER, ENTRY MADE TO      */\n#define ascbncml 0x08 /* -             ASCB NOT ELIGIBLE FOR CML LOCK       */\n#define ascbnomt 0x04 /* -             ADDRESS SPACE MUST NOT BE MEMTERMED  */\n#define ascbnomd 0x02 /* -             IF ON,ADDRESS SPACE CANNOT BE        */\n\n/* Values for field \"ascblswq\" */\n#define ascbs3nl 0x80 /* -             THE LOCAL LOCK IS NEEDED BY THE @L8A */\n#define ascbltcl 0x01 /* -            THE LOCAL LOCK IS NEEDED BY SOME      */\n\n/* Values for field \"ascblevl\" */\n#define ascbvs00 0x00 /* -             HBB2102 (NOT IN BASE)       @ZA68643 */\n#define ascbvs01 0x01 /* -             JBB2110                         @D3A */\n#define ascbvs02 0x02 /* -             JBB2133                         @H1A */\n#define ascbvs03 0x03 /* -             HBB4410                         @L7A */\n#define ascbvers 0x03 /* -             LEVEL OF THIS MAPPING           @L7C */\n\n/* Values for field \"ascbfl2a\" */\n#define ascbnopr 0x80 /* -             NO PREEMPTION FLAG              @DAA */\n\n/* Values for field \"ascbsrq1\" */\n#define ascbdsg4 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbdflt 0x40 /* -             DEFAULT LOCAL INTERSECT              */\n\n/* Values for field \"ascbsrq2\" */\n#define ascbdsg3 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbsrm1 0x02 /* -             SYSTEM RESOURCE MANAGER (SRM)        */\n#define ascbqver 0x01 /* -             QUEUE VERIFICATION INTERSECTING      */\n\n/* Values for field \"ascbsrq3\" */\n#define ascbdsg2 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbrcti 0x40 /* -             REGION CONTROL TASK (RCT)            */\n#define ascbtcbv 0x20 /* -             TCB VERIFICATION INTERSECTING        */\n#define ascbacha 0x10 /* -             ASCB CHAP INTERSECTING               */\n#define ascbmter 0x04 /* -             MEMORY TERMINATION INTERSECTING      */\n#define ascbmini 0x02 /* -             MEMORY INITIALIZATION INTERSECTING   */\n#define ascbcbve 0x01 /* -             CONTROL BLOCK VERIFICATION           */\n\n/* Values for field \"ascbsrq4\" */\n#define ascbdsg1 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbdeta 0x40 /* -             DETACH INTERSECTING                  */\n#define ascbatta 0x20 /* -             ATTACH INTERSECTING                  */\n#define ascbrtm2 0x10 /* -             RTM2 INTERSECTING  (MDC351) @G50DP9A */\n#define ascbrtm1 0x08 /* -             RTM1 INTERSECTING  (MDC352) @G50DP9A */\n#define ascbchap 0x04 /* -             CHAP INTERSECTING  (MDC353) @G50DP9A */\n#define ascbstat 0x02 /* -             STATUS INTERSECTING                  */\n#define ascbpurd 0x01 /* -             PURGEDQ INTERSECTING                 */\n\n/* Values for field \"ascbsrbm\" */\n#define ascbper  0x40 /* -             PER BIT IN ASCBSRBM - ALSO USED TO   */\n\n/* Values for field \"ascbsso4\" */\n#define ascbsssp 0x02 /* -             SLIP/PER REQUESTED          @G381P9A */\n#define ascbssjs 0x01 /* -             JOB STEP TERMINATION        @G381P9A */\n\n/* Values for field \"ascbcs1\" */\n#define ascbxmet 0x80 /* -             IF ONE, THE ADDRESS SPACE IS    @L3C */\n#define ascbxmec 0x40 /* -             CROSS MEMORY ENTRY TABLES   @G381P9A */\n#define ascbxmpa 0x20 /* -             IF ONE, THE ADDRESS SPACE IS    @L3A */\n#define ascbxmlk 0x10 /* -             IF ONE, THE ADDRESS SPACE IS    @L3A */\n#define ascbpers 0x08 /* -             COMMUNICATION BIT FOR       @G381P9A */\n#define ascbdter 0x04 /* -             A DAT ERROR HAS OCCURRED    @G381P9A */\n#define ascbpero 0x02 /* -             PER PROCESSING NEEDS TO BE      @L5A */\n#define ascbswop 0x01 /* -             ADDRESS SPACE IS SWAPPED OUT    @L5A */\n\n/* Values for field \"ascbcs2\" */\n#define ascbsas  0x80 /* -             INDICATES THAT STORAGE          @P5M */\n#define ascbsmgr 0x40 /* -             This space is or has been associated */\n#define ascbdtin 0x20 /* -             This space is or has been associated */\n\n/* Values for field \"ascbll1\" */\n#define ascbsspc 0x80 /* -             STATUS STOP TASKS PENDING   @G381P9A */\n\n/* Values for field \"ascbll4\" */\n#define ascbtyp1 0x02 /* -             TYPE 1 SVC HAS CONTROL.  THIS OFFSET */\n\n/* Values for field \"_filler2\" */\n#define ascbgqab 0x80 /* -             ISGQSCAN INFORMATION            @O3A */\n\n/* Values for field \"ascbgqi3\" */\n#define ascbgqds 0x01 /* -             ISGQSCAN INFORMATION            @O3A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAASSB": {"ttr": 7933, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct assb \u00e4\n  struct \u00e4\n    unsigned char  _assbassb\u00c44\u00dc; /* ACRONYM IN EBCDIC - ASSB.            */\n    int            _assbvafn;    /* COUNT OF TASKS IN THE           @D5C */\n    \u00fc assbegin;\n  double         assbevst;     /* ELAPSED VECTOR USAGE TIME.      @H1A */\n  double         assbvfat;     /* ELAPSED VECTOR AFFINITY TIME.   @D1A */\n  unsigned char  assbxmf1;     /* CROSS MEMORY FLAGS 1            @L4A */\n  unsigned char  assbxmf2;     /* CROSS MEMORY FLAGS 2            @L4A */\n  short int      assbxmcc;     /* CROSS MEMORY CONNECTIONS COUNT. @L1A */\n  void          *assbcbtp;     /* POINTER TO IHAACBT              @LEC */\n  int            assbvsc;      /* VIO SLOT ALLOCATED COUNT.       @D3A */\n  int            assbnvsc;     /* NON-VIO SLOT ALLOCATED COUNT.   @D3A */\n  int            assbasrr;     /* ADDRESS SPACE RE-READS TO BE    @D4C */\n  void          *assbdexp;     /* POINTER TO IHADEXP              @LDC */\n  struct \u00e4\n    int            _assbstw1; /* FIRST WORD OF ASSBSTKN.         @L2C */\n    int            _assbisqn; /* INITIAL ADDRESS SPACE SEQUENCE  @L2C */\n    \u00fc assbstkn;\n  void          *assbbpsa;     /* IBMPM ANCHOR BLOCK.             @02C */\n  int            assbcsct;     /* CACHING FACILITY STOP COUNT     @LGA */\n  void          *assbbalv;     /* VIRTUAL ADDRESS OF THE BASIC    @L2C */\n  void          *assbbald;     /* BASIC ACCESS LIST DESIGNATOR.   @L2C */\n  void          *assbxmse;     /* ADDRESS OF XMSE FOR THIS        @L2A */\n  int            assbtsqn;     /* NEXT TTOKEN SEQUENCE NUMBER.    @L3A */\n  int            assbvcnt;     /* COUNT OF CURRENT TASKS WITH     @D5A */\n  void          *assbpalv;     /* PASN ACCESS LIST VIRTUAL        @D6C */\n  void          *assbasei;     /* ADDRESS OF ADDRESS SPACE        @D6C */\n  void          *assbrma;      /* ADDRESS OF ADDRESS SPACE        @D6C */\n  double         assbhst;      /* RSM SERVICE TIME FOR HIPERSPACE @L8C */\n  double         assbiipt;     /* IOS I/O INTERRUPT PROCESSING    @L5A */\n  int            assbanec;     /* ALESERV ADD WITH NO EAX COUNT.  @L6A */\n  void          *assbsdov;     /* ADDRESS OF SHARED DATA OBJECT   @LDC */\n  int            assbmcso;     /* NUMBER OF CONSOLE IDS ACTIVATED @LAA */\n  void          *assbdfas;     /* ADDRESS OF DFP=SMSX STRUCTURE   @L7A */\n  struct \u00e4\n    unsigned char  _assbflg0; /* ASSB FLAG BYTE 0.               @D7C */\n    unsigned char  _assbflg1; /* ASSB FLAG BYTE 1                @LIC */\n    unsigned char  _assbflg2; /* ASSB FLAG BYTE 2.               @D7C */\n    unsigned char  _assbflg3; /* ASSB FLAG BYTE 3 - RESERVED.    @D7C */\n    \u00fc assbflgs;\n  void          *assbascb;     /* ADDRESS OF ASCB.                @L9C */\n  void          *assbasrf;     /* CREATED ASSB FORWARD POINTER.   @L9A */\n  void          *assbasrb;     /* CREATED ASSB BACKWARD POINTER.  @L9A */\n  void          *assbssd;      /* ADDRESS OF THE SUSPENDED SRB    @D8A */\n  void          *assbmqma;     /* CONTROL BLOCK ANCHOR FOR        @06C */\n  double         assblasb;     /* TOKEN INDICATING IF MVS/APPC    @LBC */\n  void          *assbsch;      /* POINTER TO APPC SCHEDULER       @LBA */\n  int            assbfsc;      /* COUNT ACCUMULATED BY IEAMFCNT   @01A */\n  void          *assbjsab;     /* ADDRESS OF JOB SCHEDULER        @D9A */\n  void          *assbrctw;     /* ADDRESS OF RCT's WEB.           @LSA */\n  int            assbcreq;     /* COUNT OF CONCURRENT GQSCAN AND  @04A */\n  int            assbcrqa;     /* COUNT OF CONCURRENT AUTHORIZED  @04A */\n  void          *assbtlmi;     /* ADDRESS OF TAILORED LOCK        @LOA */\n  void          *assbsdas;     /* POINTER TO WORKING STORAGE      @DBA */\n  int            assbtpin;     /* THE COUNT OF UCB PIN REQUESTS   @LFA */\n  int            assbspin;     /* THE COUNT OF UCB PIN REQUESTS   @LFA */\n  int            assbect1;     /* THE COUNT OF ALLOCATION         @H2A */\n  int            assbect2;     /* THE COUNT OF ALLOCATION         @H2A */\n  int            assbmt_;      /* MEMTERM DISABLE COUNT.  WHEN    @DAA */\n  unsigned char  assbdfp\u00c44\u00dc;   /* RESERVED FOR USE BY DFP.        @03A */\n  short int      assbnter;     /* Count of Tasks simultaneously   @0AA */\n  short int      assbsnew;     /* Count of SASN=NEW connections        */\n  void          *assbnttp;     /* ADDRESS OF ADDRESS SPACE LEVEL  @LIA */\n  struct \u00e4\n    unsigned char  _assboepc; /* POST CODE: '81'X=>BPX1EXC       @LMA */\n    struct \u00e4\n      unsigned char  _filler1\u00c42\u00dc;  /* Unused.                         @LMA */\n      unsigned char  _assboees;    /* Exit Status passed on BPX1EXI.  @LMA */\n      \u00fc assboecd;\n    \u00fc assboecb;\n  void          *assboasb;     /* OpenMVS ADDRESS SPACE BLOCK.    @LLA */\n  void          *assbxsba;     /* XSB POOL QUEUE.                 @LKA */\n  void          *assbdlcb;     /* Contains the address of the Dynamic  */\n  void          *assbvab;      /* ADDRESS OF VSM ADDRESS SPACE    @LNC */\n  void          *assblmab;     /* LATCH MANAGER ADDRESS SPACE     @LNC */\n  unsigned char  assbr0f8\u00c48\u00dc;  /* Reserved.                       @LYC */\n  int            assbxrct;     /* XES REQUEST COUNT               @LQA */\n  int            assbetsc;     /* Enclave TCB Summary Count       @M5C */\n  void          *assbtasb;     /* TCPIP ASSB Extension            @07A */\n  int            assbtpma;     /* OWNER:  IOS.                    @DCA */\n  int            assbrosu;     /* OWNER:  IOS.                    @DCA */\n  int            assbtpmt;     /* OWNER:  IOS.                    @DCA */\n  unsigned char  assbssdt\u00c44\u00dc;  /* SSD Trailer                     @LSC */\n  void          *assbtawq;     /* ADDRESS OF TASK WEB QUEUE.      @LSA */\n  void          *assbwcml;     /* ADDRESS OF CML PROMOTION WEB.   @LSA */\n  void          *assbws3s;     /* ADDRESS OF ASYNCHRONOUS EXIT    @LSA */\n  void          *assbwsss;     /* ADDRESS OF SUSPENDED STATUS     @LSA */\n  void          *assbcapq;     /* ADDRESS OF FIRST WEB ON THE     @LSC */\n  void          *assbptar;     /* Pointer used by RTM processing  @09C */\n  int            assbwtct;     /* When this counter is non-zero,       */\n  int            assbsbct;     /* XES-owned count of requests     @05A */\n  void          *assbarbp;     /* ARM (Automatic Restart Manager) @LVA */\n  void          *assbrctr;     /* ADDRESS OF RCT's RB                  */\n  void          *assbscah;     /* Address of the SCA (SPIE/ESPIE  @PAA */\n  unsigned char  assbttfl;     /* Transaction Trace flags.        @MCA */\n  unsigned char  assbwmf1;     /* WLM flags                       @M8A */\n  short int      assbpswc;     /* Preemptable-class SRB short     @P5A */\n  void          *assbixga;     /* Pointer to SLC address space    @LXC */\n  double         assbjbni;     /* Jobname for the Initiated       @P1A */\n  double         assbjbns;     /* Jobname for the START/MOUNT/    @P1A */\n  double         assbasst;     /* Additional SRB Service Time.    @LYA */\n  double         assbphtm;     /* Preemptable-class SRB Time. The @LYA */\n  void          *assbcrwq;     /* Client Related WEB Queue.       @LYA */\n  void          *assbscwq;     /* Suspended Client related WEB    @LYA */\n  int            assblcnt;     /* Number of latched operations    @LZA */\n  int            assbacnt;     /* Number of asynchronous requests @M1C */\n  int            assblcpd;     /* CPOOLID of the cpool created    @M1A */\n  void          *assbpqel;     /* Queue of outstanding GQSCAN     @M2A */\n  void          *assbpvtc;     /* Queue of privately managed      @M4A */\n  struct \u00e4\n    unsigned char  _assbctxf;    /* Context Services flags          @MAM */\n    unsigned char  _assbctx2\u00c43\u00dc; /* Reserved context services.      @MAA */\n    \u00fc assbctx;\n  unsigned char  assbhale\u00c416\u00dc; /* Copy of Home ALE                @P7A */\n  void          *assbrtls;     /* Address of RTLSA                @M6A */\n  int            assbsrsn;     /* Suspend/Resume sequence number       */\n  void          *assbwlms;     /* Address of WLM managed server   @M8A */\n  void          *assbbcba;     /* Address of SOMObjects data structure */\n  unsigned char  assbcsm\u00c44\u00dc;   /* CSM user bitmap                 @P9A */\n  int            assbpect;     /* Number of Pause elements allocated   */\n  void          *assbrrsa;     /* RRS data area pointer           @0EA */\n  struct \u00e4\n    unsigned char  _assbofl0; /* ASSB USS flag byte 0            @DEA */\n    unsigned char  _assbofl1; /* ASSB USS flag byte 1            @DEA */\n    \u00fc assboflg;\n  unsigned char  assbscaf\u00c42\u00dc;  /* CPU affinity indicator          @MDA */\n  int            assbctxc;     /* Number of private contexts owned by  */\n  int            assbrmct;     /* Number of PKM 8 to 15 resource       */\n  void          *assblrba;     /* License manager resource block  @MFA */\n  unsigned char  assbr1cc\u00c411\u00dc; /* Reserved.                       @MFC */\n  char           assbcsdp;     /* Channel Subsystem I/O Priority. @MEA */\n  double         assbend;      /* END OF ASSB.                         */\n  \u00fc;\n\n#define assbassb assbegin._assbassb\n#define assbvafn assbegin._assbvafn\n#define assbstw1 assbstkn._assbstw1\n#define assbisqn assbstkn._assbisqn\n#define assbflg0 assbflgs._assbflg0\n#define assbflg1 assbflgs._assbflg1\n#define assbflg2 assbflgs._assbflg2\n#define assbflg3 assbflgs._assbflg3\n#define assboepc assboecb._assboepc\n#define assboees assboecb.assboecd._assboees\n#define assbctxf assbctx._assbctxf\n#define assbctx2 assbctx._assbctx2\n#define assbofl0 assboflg._assbofl0\n#define assbofl1 assboflg._assbofl1\n\n/* Values for field \"assbxmf1\" */\n#define assbxeax 0x80 /* ADDRESS SPACE OWNS ENTRY TABLES @L4A */\n\n/* Values for field \"assbstw1\" */\n#define assbstyp 0xF0 /* FIRST 4 BITS REPRESENT STOKEN   @L3A */\n\n/* Values for field \"assbflg0\" */\n#define assbbsdn 0x80 /* BYPASS SVC DUMP                 @D7C */\n#define assbcdsi 0x40 /* CDSI Resources Held             @DDA */\n#define assbpsch 0x20 /* Parallel Detach SRB scheduled   @09A */\n\n/* Values for field \"assbflg1\" */\n#define assbntar 0x80 /* NAME/TOKEN ADDRESS SPACE        @LIA */\n#define assbnttr 0x40 /* NAME/TOKEN JOB STEP TASK        @LIA */\n#define assbntsl 0x20 /* JOB STEP HAS CREATED            @LIA */\n#define assbfrst 0x10 /* The first pool of SVRBs has     @0CA */\n\n/* Values for field \"assbflg2\" */\n#define assbenfl 0x80 /* IF ON, INDICATES ADDRESS SPACE  @LRA */\n#define assbnswf 0x40 /* If on, indicates IEAVEGR found  @LSA */\n#define assbpran 0x20 /* No longer set - kept for        @09C */\n\n/* Values for field \"assbflg3\" */\n#define assbarm  0x80 /* The job or STC running in this  @LVA */\n#define assbnrst 0x40 /* The Automatic Restart Manager   @LVA */\n#define assbgdps 0x20 /* If on, indicates this is the         */\n\n/* Values for field \"assbmt_\" */\n#define assbmtp  0x80 /* MEMTERM PENDING.  TURNED ON     @DAA */\n\n/* Values for field \"assbdfp\" */\n#define assboam  0x80 /* ADDRESS SPACE IS A USER OF OAM  @03A */\n\n/* Values for field \"assbttfl\" */\n#define assbttrc 0x80 /* Transaction Trace has been used.@MCA */\n\n/* Values for field \"assbwmf1\" */\n#define assbwini 0x80 /* WLM Managed Batch initiator     @M8A */\n#define assbfsas 0x40 /* WLM Managed OE Forked/Spawned   @M8A */\n\n/* Values for field \"assbctxf\" */\n#define assbncl  0x80 /* There is no limit to the number @MAM */\n#define assbmsgi 0x40 /* The message to relax the above  @MAM */\n#define assburmx 0x20 /* There is no limit to the number @MAA */\n#define assburmm 0x10 /* The message to relax the above  @MAA */\n\n/* Values for field \"assbofl0\" */\n#define assbomsc 0x80 /* USS address space must remain   @DEA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAASVT": {"ttr": 8333, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct asvt \u00e4\n  unsigned char  asvtprfx\u00c4472\u00dc; /* RESERVED FOR FUTURE EXPANSION   @L3C                   */\n  struct \u00e4\n    void          *_asvtreua; /* ADDRESS OF ASVTREUS BITS        @L3A */\n    void          *_asvtravl; /* ADDRESS OF FIRST AVAILABLE      @L3A */\n    \u00fc asvtbegn;\n  int            asvtaav;       /* NUMBER OF FREE SLOTS ON THE     @L2A                   */\n  int            asvtast;       /* NUMBER OF FREE SLOTS ON THE     @L2A                   */\n  int            asvtanr;       /* NUMBER OF FREE SLOTS ON THE     @L2A                   */\n  int            asvtstrt;      /* ORIGINAL SIZE OF START/SASI     @L2A                   */\n  int            asvtnonr;      /* ORIGINAL SIZE OF NON-REUSABLE   @L2C                   */\n  int            asvtmaxi;      /* -                 ORIGINAL MAX USERS COUNT AS     @L1A */\n  unsigned char  _filler1\u00c48\u00dc;   /* -               RESERVED. WAS ASVTRSHD/DSHD     @L3C   */\n  unsigned char  asvtasvt\u00c44\u00dc;   /* -               ACRONYM IN EBCDIC -ASVT-               */\n  int            asvtmaxu;      /* -                 MAXIMUM NUMBER OF ADDRESS SPACES     */\n  int            asvtmdsc;      /* -                 MAXUSER DEFICIT SLOT COUNT.     @P1A */\n  void          *asvtfrst;      /* -                 ADDRESS OF FIRST AVAILABLE ASVT      */\n  void          *asvtenty;      /* -                 ENTRY FOR EACH POSSIBLE ASID.        */\n  \u00fc;\n\n#define asvtreua asvtbegn._asvtreua\n#define asvtravl asvtbegn._asvtravl\n\n/* Values for field \"asvtfrst\" */\n#define asvtavai 0x80 /* -             BIT ONE IF ASID IS AVAILABLE AND */\n\n/* Values for field \"asvtenty\" */\n#define asvtaval 0x80 /* -             BIT ONE IF ASID IS AVAILABLE AND */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAASXB": {"ttr": 8489, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct asxb \u00e4\n  struct \u00e4\n    unsigned char  _asxbasxb\u00c44\u00dc; /* -               ACRONYM IN EBCDIC -ASXB-            */\n    void          *_asxbftcb;    /* -                 POINTER TO FIRST TCB ON TCB QUEUE */\n    \u00fc asxbegin;\n  void          *asxbltcb;     /* -                 POINTER TO LAST TCB ON TCB QUEUE     */\n  short int      asxbtcbs;     /* -                 NUMBER TCB'S IN THE MEMORY           */\n  unsigned char  asxbflg1;     /* -                 Flags                           @LDA */\n  unsigned char  asxbschd;     /* -                 SCHEDULER FLAG BYTE             @LAA */\n  void          *asxbmpst;     /* -                 ADDRESS OF VTAM MEMORY PROCESS       */\n  void          *asxblwa;      /* -                 ADDRESS OF LWA                MDC016 */\n  void          *asxbvfvt;     /* -                 POINTER TO INTERNAL VIRTUAL     @L2A */\n  void          *asxbsaf;      /* -                 ROUTER RRCB ADDRESS             @D1A */\n  void          *asxbihsa;     /* -                 POINTER TO INTERRUPT HANDLERS SAVE   */\n  int            asxbflsa\u00c418\u00dc; /* -               SAVE AREA FOR ANY FIRST LEVEL BRANCH   */\n  void          *asxbomcb;     /* -                 POINTER TO OBJECT ACCESS METHOD @01C */\n  void          *asxbspsa;     /* -                 POINTER TO LOCAL WORK/SAVE AREA      */\n  void          *asxbrsmd;     /* -                 POINTER TO LOCAL RSM DATA AREA       */\n  void          *asxbrctd;     /* -                 POINTER TO LOCAL RCT DATA AREA       */\n  void          *asxbdecb;     /* -                 DUMP TASK ECB                   @02C */\n  void          *asxbousb;     /* -                 POINTER TO SYSTEM RESOURCES MANAGER  */\n  void          *asxbcrwk;     /* -                 CHECKPOINT/RESTART WORKAREA POINTER. */\n  unsigned char  asxbprg\u00c416\u00dc;  /* -              SVC PURGE I/O PARAMETER LIST  MDC003    */\n  unsigned char  asxbpswd\u00c48\u00dc;  /* -               USER'S LOGON PASSWORD.  IF BLANK,      */\n  void          *asxbsirb;     /* -                 ADDRESS OF SIRB FOR THIS ADDRESS     */\n  void          *asxbetsk;     /* -                 ADDRESS OF ERROR TASK FOR THIS       */\n  struct \u00e4\n    void          *_asxbfiqe; /* -                 POINTER TO FIRST IQE          MDC006 */\n    void          *_asxbliqe; /* -                 POINTER TO LAST IQE           MDC007 */\n    void          *_asxbfrqe; /* -                 POINTER TO FIRST RQE          MDC008 */\n    void          *_asxblrqe; /* -                 POINTER TO LAST RQE           MDC009 */\n    void          *_asxbfsrb; /* -                 ADDRESS OF FIRST SRB          MDC013 */\n    void          *_asxblsrb; /* -                 ADDRESS OF LAST SRB           MDC014 */\n    \u00fc asxbaeq;\n  struct \u00e4\n    unsigned char  _asxbuser\u00c47\u00dc; /* -               USER ID FOR WHICH THE JOB OR SESSION   */\n    unsigned char  _filler1;     /* -                 Last byte of ASXBUSR8. ASXBSECR @04A */\n    \u00fc asxbusr8;\n  void          *asxbsenv;     /* -                 ADDRESS OF ACCESS CONTROL            */\n  void          *asxbsfrs;     /* Address of SSI function request @03C                   */\n  struct \u00e4\n    void          *_asxbnssa; /* NSSA POOL.                  @G38BPXH */\n    int            _asxbnsct; /* COUNT USED TO SYNCHRONIZE THE        */\n    \u00fc asxbnsdw;\n  struct \u00e4\n    unsigned char  _asxbcrb1; /* -                 CANCEL/RCT BYTE 1  (MDC314) @ZA05360 */\n    unsigned char  _asxbcrb2; /* -                 CANCEL/RCT BYTE 2  (MDC317) @ZA05360 */\n    unsigned char  _asxbcrb3; /* -                 CANCEL/RCT BYTE 3  (MDC318) @ZA05360 */\n    unsigned char  _asxbcrb4; /* -                 CANCEL/RCT BYTE 4  (MDC319) @ZA05360 */\n    \u00fc asxbcasw;\n  void          *asxbpt0e;     /* -                 POST EXIT QUEUE HEADER               */\n  void          *asxbcapc;     /* -                 Count of task mode UCB capture  @L7A */\n  void          *asxbjsvt;     /* -                 JES COMMUNICATION AREA POINTER. @D2A */\n  void          *asxbdivw;     /* -                 ADDRESS OF THE DIV WORK/SAVE    @L4A */\n  void          *asxbcapt;     /* -                 Pointer to IOS captured UCB     @L7A */\n  void          *asxblinf;     /* -                 Latch information area          @L8A */\n  void          *asxbpirl;     /* Pointer to queue of PIRLs.                             */\n  void          *asxbitcb;     /* -                 Initial jobstep TCB address          */\n  int            asxbr0fc;     /* -                 RESERVED                        @L9A */\n  void          *asxbgrsp;     /* -                 Address of GRS control          @P4A */\n  int            asxbr104;     /* -                 Reserved                        @P4A */\n  double         asxbalec;     /* AuthorizedLE Anchor             @LBA                   */\n  struct \u00e4\n    void          *_asxbfxrs; /* Range Start                     @H1A */\n    void          *_asxbfxre; /* Range End                       @H1A */\n    \u00fc asxbifar;\n  void          *asxbexta;     /* Local exits                     @LCA                   */\n  void          *asxbaxrl;     /* AXR local area                                         */\n  double         asxbend;      /* -                END OF ASXB                           */\n  \u00fc;\n\n#define asxbasxb asxbegin._asxbasxb\n#define asxbftcb asxbegin._asxbftcb\n#define asxbfiqe asxbaeq._asxbfiqe\n#define asxbliqe asxbaeq._asxbliqe\n#define asxbfrqe asxbaeq._asxbfrqe\n#define asxblrqe asxbaeq._asxblrqe\n#define asxbfsrb asxbaeq._asxbfsrb\n#define asxblsrb asxbaeq._asxblsrb\n#define asxbuser asxbusr8._asxbuser\n#define asxbnssa asxbnsdw._asxbnssa\n#define asxbnsct asxbnsdw._asxbnsct\n#define asxbcrb1 asxbcasw._asxbcrb1\n#define asxbcrb2 asxbcasw._asxbcrb2\n#define asxbcrb3 asxbcasw._asxbcrb3\n#define asxbcrb4 asxbcasw._asxbcrb4\n#define asxbfxrs asxbifar._asxbfxrs\n#define asxbfxre asxbifar._asxbfxre\n\n/* Values for field \"asxbflg1\" */\n#define asxbhcrm 0x80 /* -             Health Check AS resmgr set      @LDA */\n\n/* Values for field \"asxbschd\" */\n#define asxbswup 0x80 /* -             INDICATES THAT SWA SHOULD BE WRITTEN */\n\n/* Values for field \"asxbcrb1\" */\n#define asxbpip  0x80 /* -             SET BY RCT TO INDICATE PURGE (SVC    */\n#define asxbtfd  0x40 /* -             SET BY CANCEL TO INDICATE THAT ALL   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHACDE": {"ttr": 8307, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cdentry \u00e4\n  int            cdchain;   /* -            Address of next CDE in queue (either JPAQ */\n  int            cdrrbp;    /* -            If the module is REENTERABLE, this field  */\n  unsigned char  cdname\u00c48\u00dc; /* -          8-byte name                                 */\n  union \u00e4\n    int            _cdentpt; /* -            Module's relocated Entry Point address */\n    struct \u00e4\n      unsigned char  _filler1\u00c43\u00dc;  /* Bytes 0-2 of CDENTPT                 @L8A */\n      unsigned char  _cdentpt3;    /* Byte 3 of CDENTPT                    @L8A */\n      \u00fc _cdentry_struct1;\n    \u00fc _cdentry_union1;\n  int            cdxlmjp;   /* -            Extent list address or Major CDE address  */\n  short int      cduse;     /* -            Value contains the total module use       */\n  unsigned char  cdattrb;   /* -            Flag byte                        @G860P35 */\n  unsigned char  cdsp;      /* Module SUBPOOL ID                @G381P2A              */\n  unsigned char  cdattr;    /* -            Attribute flags                           */\n  unsigned char  cdattr2;   /* -            Second attribute field                    */\n  unsigned char  cdattr3;   /* -            3rd attribute field                  @L3C */\n  unsigned char  cdattr4;   /* -            RESERVED                             @L3A */\n  \u00fc;\n\n#define cdentpt  _cdentry_union1._cdentpt\n#define cdentpt3 _cdentry_union1._cdentry_struct1._cdentpt3\n\n/* Values for field \"cdentpt\" */\n#define cdemode  0x80 /* Routine runs in 31 bit mode      @G860P35          */\n\n/* Values for field \"cdentpt3\" */\n#define cdemod64 0x01 /* Routine runs in 64 bit mode          @L8A          */\n\n/* Values for field \"cdattrb\" */\n#define cdeom    0x80 /* -        ON=Delete module at memory termination    */\n#define cdidenty 0x40 /* -        ON = CDE built by IDENTIFY  @02C @ZA47842 */\n#define cdracdty 0x20 /* -        ON = MODULE WAS LOADED BY 'DIRTY' TASK    */\n#define cdcdex   0x10 /* -        ON = CDE extension exists            @L2A */\n#define cdelpde  0x08 /* -        OFF=CDE, ON=LPDE (Used to distinguish a   */\n#define cdglobal 0x04 /* -        ON = Module LOADED to GLOBAL         @L1A */\n#define cdcontmn 0x02 /* -        ON = Module is contaminated. A module is  */\n#define cdracf   0x01 /* -        Used by external security manager.        */\n\n/* Values for field \"cdattr\" */\n#define cdnip    0x80 /* -        Module loaded by NIP or FLPA/MLPA         */\n#define cdnic    0x40 /* -        Module is in process of being loaded      */\n#define cdren    0x20 /* -        Module is REENTERABLE                     */\n#define cdser    0x10 /* -        Module is SERIALLY REUSABLE               */\n#define cdnfn    0x08 /* -        Module is NOT REUSABLE (NON-FUNCTIONAL)   */\n#define cdmin    0x04 /* -        This is a MINOR CDE                       */\n#define cdjpa    0x02 /* -        Module is in JOB PACK AREA                */\n#define cdnlr    0x01 /* -        Module is NOT LOADABLE-ONLY               */\n\n/* Values for field \"cdattr2\" */\n#define cdspz    0x80 /* -        Module is in SUBPOOL ZERO                 */\n#define cdrel    0x40 /* -        Module is INACTIVE and MAY BE RELEASED    */\n#define cdxle    0x20 /* -        EXTENT LIST has been built for module.    */\n#define cdrlc    0x10 /* -        This CDE contains a MINOR ENTRY POINT     */\n#define cdeanym  0x08 /* Routine runs in ANY mode         @G860P35          */\n#define cdoly    0x04 /* -        Module is in OVERLAY format        A27026 */\n#define cdsyslib 0x02 /* -        AUTHORIZED LIBRARY module                 */\n#define cdauth   0x01 /* -        PROGRAM AUTHORIZATION FLAG         ICB360 */\n\n/* Values for field \"cdattr3\" */\n#define cdpathn  0x80 /* -        ON = The module represented by this CDE   */\n#define cdpml    0x40 /* -        OFF = PML was not complete when module    */\n#define cdesplit 0x20 /* -        Split RMODE program object           @L5A */\n#define cdsyshlb 0x10 /* -        HFS System Shared Library Module     @L7A */\n#define cdertls  0x08 /* -        RTLS                                 @L5A */\n#define cdedylpa 0x04 /* -        Dynamic LPA. Only on for CDE on active    */\n#define cdeprotp 0x02 /* -        Only whole pages are page-protected, as   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHACVT": {"ttr": 8545, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cvt \u00e4\n  void          *cvttcbp;      /* -  Address of PSATNEW.                   @PTC          */\n  void          *cvt0ef00;     /* - ADDRESS OF ROUTINE TO SCHEDULE                       */\n  void          *cvtlink;      /* -  ADDRESS OF DCB FOR SYS1.LINKLIB DATA SET.           */\n  void          *cvtauscb;     /* - ADDRESS OF ASSIGN/UNASSIGN SERVICE    @H1A           */\n  void          *cvtbuf;       /* -        ADDRESS OF THE BUFFER OF THE RESIDENT         */\n  void          *cvtxapg;      /* -  ADDRESS OF I/O SUPERVISOR APPENDAGE VECTOR          */\n  void          *cvt0vl00;     /* - ADDRESS OF ENTRY POINT OF THE TASK                   */\n  void          *cvtpcnvt;     /* - ADDRESS OF ENTRY POINT OF THE ROUTINE                */\n  void          *cvtprltv;     /* - ADDRESS OF ENTRY POINT OF THE ROUTINE                */\n  void          *cvtllcb;      /* -  ADDRESS OF THE LLCB.                  @P1M          */\n  void          *cvtlltrm;     /* - ADDRESS OF LLA'S MEMORY TERNIMATION   @P1M           */\n  void          *cvtxtler;     /* - ADDRESS OF ERROR RECOVERY PROCEDURE (ERP)            */\n  void          *cvtsysad;     /* -        UCB ADDRESS FOR THE SYSTEM RESIDENCE          */\n  void          *cvtbterm;     /* - ADDRESS OF ENTRY POINT OF THE ABTERM                 */\n  int            cvtdate;      /* -        CURRENT DATE IN PACKED DECIMAL                */\n  void          *cvtmslt;      /* -  ADDRESS OF THE MASTER COMMON AREA IN                */\n  void          *cvtzdtab;     /* - ADDRESS OF I/O DEVICE                                */\n  void          *cvtxitp;      /* -  ADDRESS OF ERROR INTERPRETER ROUTINE                */\n  void          *cvt0ef01;     /* ENTRY POINT IN STAGE II EXIT EFFECTOR @02C             */\n  struct \u00e4\n    short int      _cvtvss;  /* VECTOR SECTION SIZE                   @D5A */\n    short int      _cvtvpsm; /* VECTOR PARTIAL SUM NUMBER             @D5A */\n    \u00fc cvtvprm;\n  short int      cvtexit;      /* -           AN SVC 3 INSTRUCTION.  EXIT TO        @PBA */\n  short int      cvtbret;      /* -           A BR 14 INSTRUCTION.  RETURN TO       @PBA */\n  void          *cvtsvdcb;     /* - ADDRESS OF THE DCB FOR THE SYS1.SVCLIB               */\n  void          *cvttpc;       /* -   ADDRESS OF THE TIMER SUPERVISOR WORK AREA          */\n  struct \u00e4\n    unsigned char  _cvtflgc0; /* -   Flags                                 @0IA */\n    unsigned char  _cvtflgc1; /* -   Flags                                 @0IA */\n    short int      _cvticpid; /* -   IPL'ED CPU PHYSICAL ID            @ZA51978 */\n    \u00fc cvtflgcs;\n  unsigned char  cvtcvt\u00c44\u00dc;    /* -   CVT ACRONYM IN EBCDIC (EYE-CATCHER)   @PCA         */\n  void          *cvtcucb;      /* -  ADDRESS OF THE UNIT CONTOL MODULE (UCM)             */\n  void          *cvtqte00;     /* - ADDRESS OF THE TIMER ENQUEUE ROUTINE FOR             */\n  void          *cvtqtd00;     /* - ADDRESS OF THE TIMER DEQUEUE ROUTINE FOR             */\n  void          *cvtstb;       /* -   ADDRESS OF THE I/O DEVICE             @LDC         */\n  unsigned char  cvtdcb;       /* -     OPERATING SYSTEM FOR                  @LGC       */\n  int            cvtdcba : 24; /* - ADDRESS OF THE DCB FOR THE SYS1.LOGREC               */\n  int            cvtsv76m;     /* -        SVC 76 MESSAGE COUNT FIELD (OS/VS2)           */\n  void          *cvtixavl;     /* - ADDRESS OF THE I/O SUPERVISOR'S FREELIST             */\n  void          *cvtnucb;      /* -        RESERVED                (MDCXXX)  @YA19285    */\n  void          *cvtfbosv;     /* - ADDRESS OF PROGRAM FETCH ROUTINE  @G860P46           */\n  void          *cvt0ds;       /* -   ADDRESS OF ENTRY POINT OF THE DISPATCHER           */\n  void          *cvtecvt;      /* -  POINTER TO THE EXTENDED CVT           @LJC          */\n  void          *cvtdairx;     /* -        ADDRESS OF THE 31- BIT ENTRY          @L4A    */\n  void          *cvtmser;      /* -  ADDRESS OF DATA AREA OF MASTER SCHEDULER            */\n  void          *cvt0pt01;     /* - ADDRESS OF BRANCH ENTRY POINT OF POST                */\n  void          *cvttvt;       /* -        ADDRESS OF TSO VECTOR TABLE       @ZA65725    */\n  int            cvt040id;     /* -        IFB040I WTO MESSAGE ID.               @09C    */\n  unsigned char  cvtmz00\u00c44\u00dc;   /* - HIGHEST ADDRESS IN VIRTUAL STORAGE FOR               */\n  void          *cvt1ef00;     /* -        ADDRESS OF ROUTINE WHICH CREATES IRB'S        */\n  void          *cvtqocr;      /* -        GRAPHICS INTERFACE TASK (GFX) FIELD.          */\n  void          *cvtqmwr;      /* -  ADDRESS OF THE ALLOCATION COMMUNICATION             */\n  short int      cvtsnctr;     /* -        SERIAL NUMBER COUNTER FOR ASSIGNING SERIAL    */\n  unsigned char  cvtopta;      /* -     OPTION INDICATORS                     @LBC       */\n  unsigned char  cvtoptb;      /* -     MISCELLANEOUS FLAGS                   @LBC       */\n  void          *cvtqcdsr;     /* - CDE SEARCH ROUTINE ADDRESS  (OS/VS2)                 */\n  void          *cvtqlpaq;     /* - ADDRESS OF POINTER TO MOST RECENT ENTRY              */\n  void          *cvtenfct;     /* EVENT NOTIFICATION CONTROL TABLE                       */\n  void          *cvtsmca;      /* -        ADDRESS OF THE SYSTEM MANAGEMENT CONTROL      */\n  void          *cvtabend;     /* -  ADDRESS OF SECONDARY CVT FOR ABEND IN EOT           */\n  void          *cvtuser;      /* -        A WORD AVAILABLE TO THE USER                  */\n  void          *cvtmdlds;     /* -        RESERVED FOR MODEL-DEPENDENT SUPPORT          */\n  short int      cvtqabst;     /* -           AN SVC 13 (ABEND) INVOCATION (OS/VS2) @PDA */\n  short int      cvtlnksc;     /* -           AN SVC  6 (LINK) INVOCATION           @PDA */\n  void          *cvttsce;      /* -        ADDRESS OF THE FIRST TIME SLICE CONTROL       */\n  void          *cvtpatch;     /* - ADDRESS OF A 200-BYTE FE PATCH AREA                  */\n  void          *cvtrms;       /* -   RECOVERY MANAGEMENT SUPPORT (RMS)                  */\n  void          *cvtspdme;     /* -        SERVICE PROCESSOR DAMAGE MONITOR  @ZA57793    */\n  void          *cvt0scr1;     /* - ADDRESS OF THE SECTOR CALCULATION ROUTINE            */\n  struct \u00e4\n    unsigned char  _cvtgtfst;     /* -      GTF FLAG BYTES                      ICB312 */\n    int            _cvtgtfa : 24; /* -ADDRESS OF MAIN MONITOR CALL ROUTING             */\n    \u00fc cvtgtf;\n  struct \u00e4\n    unsigned char  _cvttcmfg;      /* -       TCAM FLAGS            */\n    int            _cvtaqavb : 24; /* -      SAME AS CVTAQAVT ABOVE */\n    \u00fc cvtaqavt;\n  unsigned char  cvtrs0f4\u00c44\u00dc;  /* RESERVED                              @LFC             */\n  void          *cvtsaf;       /* -        ADDRESS OF ROUTER VECTOR TABLE.       @L5A    */\n  void          *cvtext1;      /* - ADDRESS OF OS - OS/VS COMMON EXTENSION               */\n  void          *cvtcbsp;      /* -        ADDRESS OF ACCESS METHOD CONTROL BLOCK        */\n  struct \u00e4\n    unsigned char  _filler1;       /* -     RESERVED - FIRST BYTE OF CVTPURG      @LFC  */\n    int            _cvtpurga : 24; /* -      ADDRESS OF SUBSYSTEM PURGE ROUTINE  ICB330 */\n    \u00fc cvtpurg;\n  unsigned char  cvtamff\u00c44\u00dc;   /* -     RESERVED FOR ACCESS METHOD FLAGS    ICB436       */\n  void          *cvtqmsg;      /* - ADDRESS OF INFORMATION TO BE      @G860P46           */\n  struct \u00e4\n    unsigned char  _cvtdmsrf;      /* -     OPEN/CLOSE/EOV FLAG BYTE.  SETTING BOTH    */\n    int            _cvtdmsra : 24; /* -      ADDRESS OF THE OPEN/CLOSE/EOV SUPERVISORY */\n    \u00fc cvtdmsr;\n  void          *cvtsfr;       /* - ADDRESS OF SETFRR ROUTINE         @G383P9A           */\n  void          *cvtgxl;       /* - ADDRESS OF CONTENTS SUPERVISION   @G860P46           */\n  void          *cvtreal;      /* -        ADDRESS OF THE VIRTUAL STORAGE    @G860P46    */\n  void          *cvtptrv;      /* -  ADDRESS OF PAGING SUPERVISOR GENERAL  @L1C          */\n  void          *cvtihvp;      /* - POINTER TO IHV$COMM. INITIALIZED TO   @06C           */\n  void          *cvtjesct;     /* - ADDRESS OF JOB ENTRY SUBSYSTEM (JES)                 */\n  unsigned char  cvtrs12c\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  int            cvttz;        /* -        DIFFERENCE BETWEEN LOCAL TIME AND     @LBC    */\n  void          *cvtmchpr;     /* -        ADDRESS OF MACHINE CHECK PARAMETER LIST       */\n  void          *cvteorm;      /* -        POTENTIAL REAL HIGH STORAGE ADDRESS.  @LBC    */\n  void          *cvtptrv3;     /* - ADDRESS OF PAGING SUPERVISOR ROUTINE  @L1A           */\n  void          *cvtlkrm;      /* ADDRESS OF CML LOCK RESOURCE      @G860P46             */\n  struct \u00e4\n    unsigned char  _filler2;      /* -     RESERVED - FIRST BYTE OF CVTAPF       @LFC */\n    int            _cvtapfa : 24; /* ADDRESS OF BRANCH ENTRY POINT IN                 */\n    \u00fc cvtapf;\n  struct \u00e4\n    unsigned char  _filler3;       /* -     RESERVED - FIRST BYTE OF CVTEXT2      @LFC */\n    int            _cvtext2a : 24; /* SAME AS CVTEXT2 ABOVE               ICB330       */\n    \u00fc cvtext2;\n  struct \u00e4\n    unsigned char  _filler4;       /* -     RESERVED - FIRST BYTE OF CVTHJES      @LFC */\n    int            _cvthjesa : 24; /* -      ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM   */\n    \u00fc cvthjes;\n  struct \u00e4\n    unsigned char  _cvtrstcp;    /* -     LOGICAL CPU ADDRESS OF TARGET OF  @ZA84941 */\n    unsigned char  _cvtrstrs;    /* -     RESTART REASON.                   @ZA84941 */\n    unsigned char  _filler5\u00c42\u00dc;  /* -     RESERVED FOR RESTART FLIH         @ZA84941 */\n    \u00fc cvtrstw2;\n  unsigned char  cvtsname\u00c48\u00dc;  /* SYSTEM NAME FOR CURRENT SYSTEM.                        */\n  void          *cvtgetl;      /* -        ADDRESS OF IKJGETL, TSO GET LINE ROUTINE      */\n  void          *cvtlpdsr;     /* - ADDRESS OF LINK PACK AREA (LPA) DIRECTORY            */\n  void          *cvtpvtp;      /* -  ADDRESS OF PAGE VECTOR TABLE                        */\n  struct \u00e4\n    unsigned char  _cvtdirst;      /* -       FLAG BYTE                         @ZA65734 */\n    int            _cvtlpdir : 24; /* -      ADDRESS OF LINK PACK AREA (LPA) DIRECTORY   */\n    \u00fc cvtlpdia;\n  void          *cvtrbcb;      /* -        ADDRESS OF THE RECORD BUFFER'S        @LEC    */\n  unsigned char  cvtrs170\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  struct \u00e4\n    unsigned char  _cvtsylk;      /* -       SUPERVISOR LOCK.  ONLY ENABLED TASKS MAY  */\n    int            _cvtslid : 24; /* -      SAME AS CVTSLIDA ABOVE            @ZA65734 */\n    \u00fc cvtslida;\n  struct \u00e4\n    unsigned char  _cvtflag1; /* -     FLAG BYTE                             @0CC */\n    unsigned char  _cvtflag2; /* -     FLAG BYTE                             @0CA */\n    unsigned char  _cvtflag3; /* -     FLAG BYTE                             @0CA */\n    unsigned char  _cvtflag4; /* -     FLAG BYTE                             @0CA */\n    \u00fc cvtflags;\n  void          *cvtrt03;      /* - ADDRESS OF SRB TIMING             @G383P9A           */\n  unsigned char  cvtrs180\u00c48\u00dc;  /* - RESERVED                              @LOC           */\n  void          *cvtexsnr;     /* - ADDRESS OF EXCESSIVE SPIN NOTIFICATION               */\n  unsigned char  cvtexsnl;     /* -     SERIALIZATION BYTE FOR EXCESSIVE SPIN            */\n  unsigned char  cvtspvlk;     /* -      NUMBER OF TASKS WHICH HAVE TERMINATED           */\n  unsigned char  cvtctlfg;     /* -     SYSTEM CONTROL FLAGS                  @LBC       */\n  char           cvtapg;       /* -      DISPATCHING PRIORITY OF AUTOMATIC PRIORITY      */\n  unsigned char  cvttrace\u00c42\u00dc;  /* -          RESERVED             @(DCR670)    @G860P46  */\n  unsigned char  cvttrac2\u00c42\u00dc;  /* -          RESERVED             @(DCR670)    @G860P46  */\n  void          *cvtrscn;      /* - ADDRESS OF ROUTINE TO SCAN TCB TREE                  */\n  void          *cvttas;       /* -        ADDRESS OF ROUTINE TO TRANSFER ADDRESS        */\n  void          *cvttrcrm;     /* -        ADDRESS POINTER OF THE SYSTEM     @G860P46    */\n  void          *cvtshrvm;     /* -        LOWEST ADDRESS OF SHARED VIRTUAL STORAGE      */\n  void          *cvt0vl01;     /* - ENTRY POINT ADDRESS OF VALIDITY CHECK                */\n  void          *cvtppgmx;     /* -  ADDRESS POINTER FOR MVS/370-XA.   @G860P46          */\n  unsigned char  cvtgrsst;     /* -     GRS status. SERIALIZATION: None.      @0DA       */\n  unsigned char  cvtrs1ad\u00c43\u00dc;  /* -     Reserved                              @0DC       */\n  void          *cvtgvt;       /* -      ADDRESS OF THE GRS VECTOR TABLE   @G383P9A      */\n  void          *cvtascrf;     /* -        CREATED ASCB QUEUE HEADER                     */\n  void          *cvtascrl;     /* -        CREATED ASCB QUEUE TRAILER                    */\n  void          *cvtputl;      /* -        ADDRESS OF IKJPUTL, TSO PUT LINE ROUTINE      */\n  void          *cvtsrbrt;     /* - DISPATCHER RETURN ADDRESS FOR SRB ROUTINES           */\n  void          *cvtolt0a;     /* - BRANCH ENTRY TO OLTEP MEMORY TERMINATION             */\n  void          *cvtsmfex;     /* - BRANCH ENTRY TO SYSTEM MANAGEMENT                    */\n  void          *cvtcspie;     /* -        ENTRY POINT ADDRESS OF THE SUPERVISOR         */\n  void          *cvtptgt;      /* -        ADDRESS OF IKJPTGT, TSO PUTGET ROUTINE        */\n  unsigned char  cvtsigpt;     /* -     SIGP TIMEOUT VALUE.                   @07A       */\n  unsigned char  cvtspdmc;     /* -     SERVICE PROCESSOR DAMAGE MACHINE  @ZA57793       */\n  unsigned char  cvtdssac;     /* -     DYNAMIC SUPPORT SYSTEM (DSS) ACTIVATED           */\n  unsigned char  cvtrs1d7;     /* -     RESERVED                              @LFC       */\n  void          *cvtstck;      /* -        ADDRESS OF IKJSTCK, TSO STACK ROUTINE         */\n  short int      cvtmaxmp;     /* -        MAXIMUM PHYSICAL CPU ADDRESS      @G860P46    */\n  unsigned char  cvtbsm2\u00c42\u00dc;   /* -     RETURN VIA REG 2, BSM 0,2.            @L4A       */\n  void          *cvtscan;      /* -        ADDRESS OF IKJSCAN, TSO SCAN ROUTINE          */\n  void          *cvtauthl;     /* -        POINTER TO AUTHORIZED LIBRARY TABLE.  @LWC    */\n  void          *cvtbldcp;     /* - BRANCH ENTRY TO BUILD POOL          MDC003           */\n  void          *cvtgetcl;     /* - BRANCH ENTRY TO GET CELL            MDC004           */\n  void          *cvtfrecl;     /* - BRANCH ENTRY TO FREE CELL           MDC005           */\n  void          *cvtdelcp;     /* - BRANCH ENTRY TO DELETE POOL         MDC006           */\n  void          *cvtcrmn;      /* - BRANCH ENTRY TO SVC 120 (GETMAIN/FREEMAIN            */\n  void          *cvtcras;      /* - POINTER DEFINED ADDRESS OF BRANCH  @G860PVB          */\n  void          *cvtqsas;      /* - POINTER DEFINED ADDRESS OF        @G860PVB           */\n  void          *cvtfras;      /* - POINTER DEFINED ENTRY TO TASK      @G860PVB          */\n  void          *cvts1ee;      /* - BRANCH ENTRY TO STAGE 1 EXIT EFFECTOR                */\n  void          *cvtpars;      /* -        ADDRESS OF IKJPARS, TSO PARSE ROUTINE         */\n  void          *cvtquis;      /* - BRANCH ENTRY TO QUIESCE             MDC013           */\n  void          *cvtstxu;      /* -        BRANCH ENTRY TO ATTENTION EXIT EPILOGUE       */\n  void          *cvtopte;      /* - BRANCH ENTRY ADDRESS TO SYSEVENT    MDC015           */\n  void          *cvtsdrm;      /* -        BRANCH ENTRY ADDRESS OF THE RESOURCE          */\n  void          *cvtcsrt;      /* - POINTER TO CALLABLE SERVICE REQUEST   @D9C           */\n  void          *cvtaqtop;     /* - POINTER TO THE ALLOCATION QUEUE   @G860P46           */\n  void          *cvtvvmdi;     /* -        CONSTANT USED BY PAGED LINK PACK AREA         */\n  void          *cvtasvt;      /* -        POINTER TO ADDRESS SPACE VECTOR TABLE         */\n  void          *cvtgda;       /* -        POINTER TO GLOBAL DATA AREA (GDA) IN SQA      */\n  void          *cvtascbh;     /* - POINTER TO HIGHEST PRIORITY ADDRESS SPACE            */\n  void          *cvtascbl;     /* - POINTER TO LOWEST PRIORITY ASCB ON THE               */\n  void          *cvtrtmct;     /* -        POINTER TO RECOVERY/TERMINATION CONTROL       */\n  void          *cvtsv60;      /* - BRANCH ENTRY ADDRESS FOR              @D8C           */\n  void          *cvtsdmp;      /* - ADDRESS OF SVC DUMP BRANCH        @G860P46           */\n  void          *cvtscbp;      /* - ADDRESS OF SCB PURGE RESOURCE     @G860P46           */\n  unsigned char  cvtsdbf\u00c44\u00dc;   /* - ADDRESS OF 4K SQA BUFFER USED BY SVC                 */\n  void          *cvtrtms;      /* -        ADDRESS OF SERVICABILITY LEVEL INDICATOR      */\n  void          *cvttpios;     /* -        ADDRESS OF THE TELEPROCESSING I/O             */\n  void          *cvtsic;       /* -        BRANCH ADDRESS OF THE ROUTINE TO SCHEDULE     */\n  void          *cvtopctp;     /* - ADDRESS OF SYSTEM RESOURCES MANAGER (SRM)            */\n  void          *cvtexpro;     /* - ADDRESS OF EXIT PROLOGUE/TYPE 1 EXIT                 */\n  void          *cvtgsmq;      /* -  ADDRESS OF GLOBAL SERVICE MANAGER QUEUE             */\n  void          *cvtlsmq;      /* -  ADDRESS OF LOCAL SERVICE MANAGER QUEUE              */\n  unsigned char  cvtrs26c\u00c44\u00dc;  /* -  RESERVED.                             @LZC          */\n  void          *cvtvwait;     /* - ADDRESS OF WAIT ROUTINE             MDC048           */\n  void          *cvtparrl;     /* - ADDRESS OF PARTIALLY LOADED       @G860P46           */\n  void          *cvtapft;      /* -        ADDRESS OF AUTHORIZED PROGRAM FACILITY        */\n  void          *cvtqcs01;     /* - BRANCH ENTRY ADDRESS TO PROGRAM MANAGER              */\n  int            cvtfqcb;      /* -        FORMERLY USED BY ENQ/DEQ.         @G383P9A    */\n  int            cvtlqcb;      /* -        FORMERLY USED BY ENQ/DEQ.         @G383P9A    */\n  void          *cvtrenq;      /* - RESOURCE MANAGER ADDRESS FOR ENQ  @G860P46           */\n  void          *cvtrspie;     /* -  RESOURCE MANAGER FOR              @G860P46          */\n  void          *cvtlkrma;     /* - RESOURCE MANAGER ADDRESS FOR LOCK @G860P46           */\n  void          *cvtcsd;       /* -        VIRTUAL ADDRESS OF COMMON SYSTEM DATA AREA    */\n  void          *cvtdqiqe;     /* - RESOURCE MANAGER FOR EXIT         @G860P46           */\n  void          *cvtrpost;     /* - RESOURCE MANAGER FOR POST.        @G860P46           */\n  void          *cvt062r1;     /* - BRANCH ENTRY TO DETACH              MDC060           */\n  void          *cvtveac0;     /* - ASCBCHAP BRANCH ENTRY               MDC061           */\n  void          *cvtglmn;      /* - GLOBAL BRANCH ENTRY ADDRESS FOR                      */\n  void          *cvtspsa;      /* - POINTER TO GLOBAL WORK/SAVE AREA VECTOR              */\n  void          *cvtwsal;      /* - ADDRESS OF TABLE OF LENGTHS OF LOCAL                 */\n  void          *cvtwsag;      /* - ADDRESS OF TABLE OF LENGTHS OF GLOBAL                */\n  void          *cvtwsac;      /* - ADDRESS OF TABLE OF LENGTHS OF CPU                   */\n  void          *cvtrecrq;     /* - ADDRESS OF THE RECORDING REQUEST  @G860P46           */\n  void          *cvtasmvt;     /* -    POINTER TO AUXILIARY STORAGE MANAGEMENT           */\n  void          *cvtiobp;      /* - ADDRESS OF THE BLOCK PROCESSOR CVT                   */\n  void          *cvtspost;     /* - POST RESOURCE MANAGER TERMINATION ROUTINE            */\n  struct \u00e4\n    short int      _cvtrstci;    /* -        CPU ID OF THE CPU HOLDING THE     @ZA84941 */\n    unsigned char  _cvtrstri\u00c42\u00dc; /* -     IDENTIFIER OF OWNING ROUTINE      @ZA84941    */\n    \u00fc cvtrstwd;\n  void          *cvtfetch;     /* - ADDRESS OF ENTRY POINT FOR BASIC  @G860P46           */\n  void          *cvt044r2;     /* - ADDRESS OF IGC044R2 IN CHAP SERVICE                  */\n  void          *cvtperfm;     /* -        ADDRESS OF THE PERFORMANCE WORK AREA.         */\n  void          *cvtdair;      /* -        ADDRESS OF IKJDAIR, TSO DYNAMIC               */\n  void          *cvtehdef;     /* -        ADDRESS OF IKJEHDEF, TSO DEFAULT  @G860P46    */\n  void          *cvtehcir;     /* -        ADDRESS OF IKJEHCIR, TSO CATALOG  @G860P46    */\n  void          *cvtssap;      /* -        ADDRESS OF SYSTEM SAVE AREA       @ZA65734    */\n  void          *cvtaidvt;     /* -        POINTER TO APPENDAGE ID VECTOR TABLE          */\n  void          *cvtipcds;     /* - BRANCH ENTRY FOR DIRECT SIGNAL                       */\n  void          *cvtipcri;     /* - BRANCH ENTRY FOR REMOTE IMMEDIATE                    */\n  void          *cvtipcrp;     /* - BRANCH ENTRY FOR REMOTE PENDABLE                     */\n  void          *cvtpccat;     /* -        POINTER TO PHYSICAL CCA VECTOR TABLE          */\n  void          *cvtlccat;     /* -        POINTER TO LOGICAL CCA VECTOR TABLE           */\n  void          *cvtxsft;      /* - ADDRESS OF SYSTEM FUNCTION TABLE  @G383P9A           */\n  void          *cvtxstks;     /* - ADDRESS OF PCLINK STACK           @G383P9A           */\n  void          *cvtxstkn;     /* - ADDRESS OF PCLINK STACK (SAVE=NO) @G383P9A           */\n  void          *cvtxunss;     /* - ADDRESS OF PCLINK UNSTACK         @G383P9A           */\n  void          *cvtpwi;       /* -        ADDRESS OF THE WINDOW INTERCEPT ROUTINE       */\n  void          *cvtpvbp;      /* -        ADDRESS OF THE VIRTUAL BLOCK PROCESSOR        */\n  void          *cvtmfctl;     /* -        POINTER TO MEASUREMENT FACILITY CONTROL       */\n  void          *cvtmfrtr;     /* -  IF MEASUREMENT FACILITY IS ACTIVE,                  */\n  void          *cvtvpsib;     /* - BRANCH ENTRY TO PAGE SERVICES     @G860PVB           */\n  void          *cvtvsi;       /* - POINTER DEFINED, BRANCH ENTRY     @G860P46           */\n  void          *cvtexcl;      /* - ADDRESS POINTER TO THE EXCP           @D3A           */\n  void          *cvtxunsn;     /* - ADDRESS OF PCLINK UNSTACK         @G383P9A           */\n  void          *cvtisnbr;     /* - ENTRY POINT ADDRESS OF DISABLED       @LLA           */\n  void          *cvtxextr;     /* - ADDRESS OF PCLINK EXTRACT ROUTINE                    */\n  void          *cvtmsfrm;     /* - ADDRESS OF THE PROCESSOR          @G860P46           */\n  void          *cvtscpin;     /* -        ADDRESS OF SCPINFO DATA           @G871A9A    */\n  void          *cvtwsma;      /* ADDRESS OF WAIT STATE MESSAGE AREA    @LLC             */\n  void          *cvtrmbr;      /* - ADDRESS OF REGMAIN BRANCH ENTRY.    MDC123           */\n  void          *cvtlfrm;      /* - LIST FORMAT FREEMAIN BRANCH ENTRY   MDC124           */\n  void          *cvtgmbr;      /* - LIST FORMAT GETMAIN BRANCH ENTRY    MDC125           */\n  void          *cvt0tc0a;     /* -        ADDRESS OF TASK CLOSE MODULE        MDC128    */\n  int            cvtrlstg;     /* -        SIZE OF ACTUAL REAL STORAGE ONLINE  @0GC      */\n  void          *cvtspfrr;     /* - 'SUPER FRR' ADDRESS (ADDRESS OF   @G860P46           */\n  unsigned char  cvtrs360\u00c44\u00dc;  /* - RESERVED.                             @LZC           */\n  void          *cvtsvt;       /* - ADDRESS POINTER FOR FETCH                            */\n  void          *cvtirecm;     /* -        ADDRESS OF INITIATOR RESOURCE       MDC158    */\n  void          *cvtdarcm;     /* -        ADDRESS OF DEVICE ALLOCATION        MDC159    */\n  void          *cvt0pt02;     /* - ADDRESS OF POST ENTRY POINT         MDC160           */\n  unsigned char  cvtrs374\u00c44\u00dc;  /* RESERVED                              @LOC             */\n  void          *cvtwtcb;      /* -  ADDRESS OF WAIT STATE TCB.          MDC164          */\n  void          *cvtvacr;      /* -        ACR/VARY CPU CHANNEL RECOVERY       MDC178    */\n  void          *cvtrecon;     /* -        VARY CPU SHUTDOWN ROUTINE         @G860PVB    */\n  void          *cvtgtfr8;     /* - GENERALIZED TRACE FACILITY (GTF)    MDC180           */\n  void          *cvtvstop;     /* - ADDRESS OF VARY CPU STOP CPU        MDC169           */\n  void          *cvtvpsa;      /* -        ADDRESS OF COPY OF SYSGEN'ED PSA -  MDC170    */\n  void          *cvtrmptt;     /* -        ADDRESS OF ISTRAMA1, THE VTAM     @Z30AP9A    */\n  void          *cvtrmpmt;     /* -        ADDRESS OF ISTRAMA2, THE VTAM     @Z30AP9A    */\n  void          *cvtexp1;      /* - ADDRESS OF EXIT PROLOGUE WHICH      MDC173           */\n  void          *cvtcsdrl;     /* -        REAL ADDRESS OF COMMON SYSTEM DATA  MDC174    */\n  void          *cvtssrb;      /* - STATUS STOP SRB ENTRY.              MDC175           */\n  unsigned char  cvtrs3a4\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  void          *cvtqv1;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC181           */\n  void          *cvtqv2;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC182           */\n  void          *cvtqv3;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC183           */\n  void          *cvtgsda;      /* - ADDRESS OF GLOBAL SYSTEM DUPLEX       @L7C           */\n  void          *cvtadv;       /* - ADDRESS OF ADDRESS VERIFICATION     MDC186           */\n  void          *cvttpio;      /* -   ADDRESS OF VTAM TPIO (SVC 124)      MDC193         */\n  unsigned char  cvtrs3c0\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  void          *cvtevent;     /* - BRANCH ENTRY ADDRESS TO EVENTS    @G860P46           */\n  void          *cvtsscr;      /* -        ADDRESS OF STORAGE SYSTEM         @Z30LP9A    */\n  void          *cvtcbbr;      /* - BRANCH ENTRY ADDRESS TO           @Z30EN9A           */\n  void          *cvteff02;     /* -        ADDRESS OF IKJEFF02, TSO MESSAGE  @ZM30972    */\n  void          *cvtlsch;      /* - ADDRESS OF LOCAL SCHEDULE.        @G50EP9A           */\n  void          *cvtcdeq;      /* -        ADDRESS OF PROGRAM MANAGER        @G50EP9A    */\n  void          *cvthsm;       /* -        POINTER TO HIERARCHICAL STORAGE   @ZA27771    */\n  void          *cvtrac;       /* -        ADDRESS OF ACCESS CONTROL CVT.    @Z40RP9A    */\n  void          *cvtcgk;       /* -  ADDRESS OF ROUTINE USED TO CHANGE @G860P46          */\n  void          *cvtsrm;       /* - ADDRESS OF ENTRY TABLE FOR SRM,   @G50IP9A           */\n  void          *cvt0pt0e;     /* - ENTRY POINT TO IDENTIFY POST EXIT @Z40EP9A           */\n  void          *cvt0pt03;     /* - POST REINVOCATION ENTRY POINT     @Z40EP9A           */\n  void          *cvttcasp;     /* -        POINTER TO THE TSO/VTAM TERMINAL  @Z40DQ9A    */\n  void          *cvtcttvt;     /* -        CTT VT                                @PVC    */\n  void          *cvtjterm;     /* - POINTER DEFINED ADDRESS OF        @G860PVB           */\n  void          *cvtrsume;     /* - ADDRESS OF RESUME FUNCTION.       @G383P9A           */\n  void          *cvttctl;      /* - ADDRESS OF TRANSFER CONTROL       @Z40FP9A           */\n  void          *cvtrmt;       /* -        ADDRESS OF RESOURCE MANAGER           @LGC    */\n  void          *cvtt6svc;     /* - ENTRY POINT ADDRESS FOR TYPE 6    @Z40FP9A           */\n  void          *cvtsusp;      /* - ADDRESS OF SUSPEND ROUTINE.       @Z40FP9A           */\n  void          *cvtihasu;     /* - ADDRESS OF BIT STRING.  (MDC355)  @Z404P9A           */\n  void          *cvtsfv;       /* - ADDRESS OF SETFRR ROUTINE ABOVE 16M   @N3A           */\n  void          *cvtidevn;     /* - ADDRESS OF DEVICE NUMBER CONVERSION   @LGC           */\n  void          *cvtsmf83;     /* -        ADDRESS OF BRANCH ENTRY TO        @G741P9A    */\n  void          *cvtsmfsp;     /* - ADDRESS OF SMF SUSPEND HANDLER.   @G860P46           */\n  void          *cvtmsfcb;     /* -        ADDRESS OF MAINTENANCE AND        @G871A9A    */\n  void          *cvthid;       /* -  ADDRESS OF SCP HOST ID. @(DCR819) @G860P46          */\n  void          *cvtpsxm;      /* - ADDRESS OF CROSS MEMORY PAGE      @G860PVB           */\n  void          *cvtucbsc;     /* - ADDRESS OF UCB SCAN               @G860P46           */\n  void          *cvttpur;      /* -        DDR QUEUE OF TAPE UNIT-RECORD         @L2A    */\n  void          *cvtdpur;      /* -        DDR QUEUE OF DASD SWAP REQUESTS.      @L2A    */\n  void          *cvttrpos;     /* -        DDR QUEUE OF TAPES TO BE              @L2A    */\n  void          *cvtrestx;     /* - VIRTUAL ADDRESS OF TEXT TO BE         @L2A           */\n  short int      cvtxcpct;     /* -      MAXIMUM EXCP COUNT PER ADDRESS        @L2A      */\n  short int      cvtcall;      /* -           A BASSM 14,15 INSTRUCTION.  POINTER   @PDA */\n  void          *cvtvfind;     /* - THE POINTER TO VIRTUAL FETCH BUILD    @L8A           */\n  void          *cvtvfget;     /* - THE POINTER TO VIRTUAL FETCH GET      @L8A           */\n  void          *cvtvfmem;     /* RESERVED. THIS FIELD IS NO LONGER    @MLC              */\n  void          *cvtvfcb;      /* -        THE POINTER TO VIRTUAL FETCH INTERNAL @L8A    */\n  void          *cvtpgser;     /* - POINTER DEFINED ADDRESS OF ENTRY   @G860P46          */\n  void          *cvttski;      /* - POINTER DEFINED ADDRESS OF TASK   @G860PVB           */\n  void          *cvtcpgub;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtcpgup;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtcpgtc;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */\n  void          *cvtcpfre;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtslist;     /* - POINTER DEFINED ADDRESS OF VSM    @G860PVB           */\n  void          *cvtsregn;     /* - POINTER DEFINED ADDRESS OF VSM    @G860PVB           */\n  void          *cvtsloc;      /* - POINTER DEFINED ADDRESS OF VSM     @G860PVB          */\n  void          *cvtcpbdb;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtcpdlb;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtdoffs;     /* -        STARTING REAL ADDRESS OF DAT-OFF  @G860PVB    */\n  void          *cvtdoffe;     /* -        ENDING REAL ADDRESS OF DAT-OFF    @G860PVB    */\n  void          *cvtrcep;      /* - ADDRESS OF THE RSM CONTROL AND    @G860PVB           */\n  void          *cvtcpgus;     /* - ADDRESS OF CPOOL GET              @G860P46           */\n  void          *cvtgrrgn;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */\n  void          *cvtgvrgn;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */\n  unsigned char  cvtionlv;     /* -     DEFAULT VALUE OF                  @G860P46       */\n  unsigned char  cvtrs4a1\u00c43\u00dc;  /* -     RESERVED                              @LFC       */\n  unsigned char  cvtrczrt\u00c42\u00dc;  /* -       SET REGISTER 15 TO ZERO.          @G860PVB     */\n  unsigned char  _filler6\u00c42\u00dc;  /* -   RETURN VIA A BSM.                 @G860PVB         */\n  unsigned char  cvtfunc\u00c44\u00dc;   /* -     Reserved for solution/offering use.   @M6A       */\n  void          *cvtsmext;     /* - ADDRESS OF STORAGE MAP EXTENSION. @G860PVB           */\n  void          *cvtnucmp;     /* -        ADDRESS OF NUCLEUS MAP.           @G860PVB    */\n  unsigned char  cvtxafl;      /* -     FLAG BYTE FOR MVS/XA PROCESSING.  @G860P46       */\n  unsigned char  cvtrs4b5\u00c43\u00dc;  /* -     RESERVED                              @LFC       */\n  void          *cvtvtam;      /* -        ADDRESS OF VTAM COMMAND PROCESSOR @G860P46    */\n  void          *cvtspip;      /* -        ADDRESS OF RTM INTERFACE TO       @ZA65734    */\n  struct \u00e4\n    void          *_cvtdfa; /* - ADDRESS OF DFP ID TABLE, MAPPED BY    @P8A */\n    \u00fc cvtckras;\n  void          *cvtnvt0;      /* - ADDRESS OF DATA IN DAT-ON NUCLEUS @G860P46           */\n  void          *cvtcsomf;     /* -        OWNER OF CHANNEL MEASUREMENT      @G860P46    */\n  void          *cvtcsoal;     /* -        OWNER OF ADDRESS LIMIT FACILITY.  @G860P46    */\n  void          *cvtichpt;     /* -        ADDRESS OF THE INSTALLED CHANNEL  @G860P46    */\n  void          *cvtcsocr;     /* -        CHANNEL SUBSYSTEM OWNER - CHANNEL @G860P46    */\n  void          *cvtcsocs;     /* -        CHANNEL SUBSYSTEM OWNER - CHANNEL @G860P46    */\n  void          *cvtllta;      /* -        LINK LIST TABLE ADDRESS.          @G860P46    */\n  void          *cvtdcqa;      /* -   ADDRESS OF DEVICE CLASS QUEUE         @LDC         */\n  void          *cvtucba;      /* -   ADDRESS OF THE FIRST UCB IN THE       @LDC         */\n  void          *cvtvestu;     /* - ADDRESS OF THE ENTRY POINT OF THE @G860P46           */\n  void          *cvtnuclu;     /* - ADDRESS TO SUPPORT THE NUCLEUS    @G860P46           */\n  struct \u00e4\n    unsigned char  _cvtoslv0; /* BYTE 0 OF CVTOSLVL                    @LRC */\n    unsigned char  _cvtoslv1; /* BYTE 1 OF CVTOSLVL                    @MBC */\n    unsigned char  _cvtoslv2; /* BYTE 2 OF CVTOSLVL                    @PTC */\n    unsigned char  _cvtoslv3; /* BYTE 3 OF CVTOSLVL                    @N5C */\n    unsigned char  _cvtoslv4; /* BYTE 4 OF CVTOSLVL                    @H5C */\n    unsigned char  _cvtoslv5; /* BYTE 5 OF CVTOSLVL                    @N2C */\n    unsigned char  _cvtoslv6; /* BYTE 6 OF CVTOSLVL                    @LGA */\n    unsigned char  _cvtoslv7; /* BYTE 7 OF CVTOSLVL                    @LGA */\n    unsigned char  _cvtoslv8; /* BYTE 8 OF CVTOSLVL                    @0MC */\n    unsigned char  _cvtoslv9; /* BYTE 9 OF CVTOSLVL                    @LGA */\n    unsigned char  _cvtoslva; /* BYTE 10 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvb; /* BYTE 11 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvc; /* BYTE 12 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvd; /* BYTE 13 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslve; /* BYTE 14 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvf; /* BYTE 15 OF CVTOSLVL                   @LGA */\n    \u00fc cvtoslvl;\n  \u00fc;\n\n#define cvtvss   cvtvprm._cvtvss\n#define cvtvpsm  cvtvprm._cvtvpsm\n#define cvtflgc0 cvtflgcs._cvtflgc0\n#define cvtflgc1 cvtflgcs._cvtflgc1\n#define cvticpid cvtflgcs._cvticpid\n#define cvtgtfst cvtgtf._cvtgtfst\n#define cvtgtfa  cvtgtf._cvtgtfa\n#define cvttcmfg cvtaqavt._cvttcmfg\n#define cvtaqavb cvtaqavt._cvtaqavb\n#define cvtpurga cvtpurg._cvtpurga\n#define cvtdmsrf cvtdmsr._cvtdmsrf\n#define cvtdmsra cvtdmsr._cvtdmsra\n#define cvtapfa  cvtapf._cvtapfa\n#define cvtext2a cvtext2._cvtext2a\n#define cvthjesa cvthjes._cvthjesa\n#define cvtrstcp cvtrstw2._cvtrstcp\n#define cvtrstrs cvtrstw2._cvtrstrs\n#define cvtdirst cvtlpdia._cvtdirst\n#define cvtlpdir cvtlpdia._cvtlpdir\n#define cvtsylk  cvtslida._cvtsylk\n#define cvtslid  cvtslida._cvtslid\n#define cvtflag1 cvtflags._cvtflag1\n#define cvtflag2 cvtflags._cvtflag2\n#define cvtflag3 cvtflags._cvtflag3\n#define cvtflag4 cvtflags._cvtflag4\n#define cvtrstci cvtrstwd._cvtrstci\n#define cvtrstri cvtrstwd._cvtrstri\n#define cvtdfa   cvtckras._cvtdfa\n#define cvtoslv0 cvtoslvl._cvtoslv0\n#define cvtoslv1 cvtoslvl._cvtoslv1\n#define cvtoslv2 cvtoslvl._cvtoslv2\n#define cvtoslv3 cvtoslvl._cvtoslv3\n#define cvtoslv4 cvtoslvl._cvtoslv4\n#define cvtoslv5 cvtoslvl._cvtoslv5\n#define cvtoslv6 cvtoslvl._cvtoslv6\n#define cvtoslv7 cvtoslvl._cvtoslv7\n#define cvtoslv8 cvtoslvl._cvtoslv8\n#define cvtoslv9 cvtoslvl._cvtoslv9\n#define cvtoslva cvtoslvl._cvtoslva\n#define cvtoslvb cvtoslvl._cvtoslvb\n#define cvtoslvc cvtoslvl._cvtoslvc\n#define cvtoslvd cvtoslvl._cvtoslvd\n#define cvtoslve cvtoslvl._cvtoslve\n#define cvtoslvf cvtoslvl._cvtoslvf\n\n/* Values for field \"cvtflgc0\" */\n#define cvtmulnf        0x80 /* -   For users of IFAUSAGE, REQUEST=FUNCTIONxxx     */\n\n/* Values for field \"cvtdcb\" */\n#define cvtmvse         0x80 /* -       S/370-XA MODE EXECUTION           @G860PVB */\n#define cvt1sss         0x40 /* -       OPTION 1 (PCP) SSS. ALSO, LANGUAGE    @H3C */\n#define cvt2sps         0x20 /* -       OPTION 2 (MFT) SPS, OS/VS1, VSE       @PHC */\n#define cvt4ms1         0x10 /* -       OPTION 4 (MVT) MS1, OS/VS2                 */\n#define cvtosext        0x08 /* -       INDICATOR THAT THE CVTOSLVL AREA IS   @LGA */\n#define cvt4mps         0x04 /* -       MODEL 65 MULTIPROCESSING                   */\n#define cvt6dat         0x02 /* -       DYNAMIC ADDRESS TRANSLATION BY CPU         */\n#define cvtmvs2         0x01 /* -       MULTIPLE MEMORY OPTION OF OS/VS2 IS        */\n#define cvt8aos2        0x12 /* - OS/VS2 SYSTEM                                    */\n\n/* Values for field \"cvtopta\" */\n#define cvtcch          0x80 /* -       CHANNEL CHECK HANDLER (CCH) OPTION PRESENT */\n#define cvtapr          0x40 /* -       ALTERNATE PATH RETRY (APR) OPTION PRESENT  */\n#define cvtddr          0x20 /* -       DYNAMIC DEVICE RECONFIGURATION (DDR)       */\n#define cvtnip          0x10 /* -       NIP IS EXECUTING                           */\n#define cvt121tr        0x04 /* - DO NOT TRANSLATE EXCP V=R.        @ZA45816       */\n#define cvtascii        0x02 /* -       ASCII TAPE PROCESSING IS GENERATED IN      */\n#define cvtxpfp         0x01 /* -       CPU HAS EXTENDED PRECISION FLOATING POINT  */\n\n/* Values for field \"cvtoptb\" */\n#define cvtprot         0x80 /* -       CPU HAS STORE PROTECTION FEATURE (OS/VS1)  */\n#define cvtctims        0x40 /* -       IF ON, HARDWARE HAS THE CLOCK COMPARATOR   */\n#define cvttod          0x20 /* -       CPU HAS TIME-OF-DAY CLOCK FEATURE          */\n#define cvtnlog         0x10 /* -       SYS1.LOGREC IS UNAVAILABLE FOR ERROR       */\n#define cvtapthr        0x08 /* -       NIP SETS THIS BIT TO 1 WHEN DEVICE TESTING */\n#define cvtfp           0x04 /* -       CPU HAS FETCH PROTECTION FEATURE (OS/VS1)  */\n#define cvtvs1a         0x02 /* -       VS1 ASSIST IS AVAILABLE FOR USE (OS/VS1)   */\n#define cvtvs1b         0x01 /* -       VS1 ASSIST SUBSET IS AVAILABLE FOR USE     */\n\n/* Values for field \"cvtgtfst\" */\n#define cvtgtfav        0x80 /* -       IF ZERO, GTF NOT ACTIVE.  IF ONE, GTF      */\n#define cvtspd          0x40 /* -       SERVICE PROCESSOR DAMAGE.         @ZA57793 */\n#define cvtwspr         0x20 /* -       WAITING FOR SERVICE PROCESSOR     @ZA57793 */\n#define cvtusr          0x04 /* -       TRACE=USR SPECIFIED.  USER-REQUESTED TRACE */\n#define cvtrnio         0x02 /* -       GTF IS ACTIVE AND TRACING RNIO EVENTS      */\n\n/* Values for field \"cvttcmfg\" */\n#define cvttcrdy        0x80 /* -       TCAM IS READY TO ACCEPT USERS              */\n#define cvtldev         0x40 /* -       LOCAL DEVICE ATTACHED TO TCAM              */\n#define cvtnwtcm        0x20 /* -       MULTIPLE TCAM FEATURE ACTIVE.         @D1A */\n\n/* Values for field \"cvtdmsrf\" */\n#define cvtsdump        0x80 /* -       SET BY COREZAP.  WILL CAUSE AN SDUMP TO BE */\n#define cvtudump        0x40 /* -       SET BY COREZAP.  WILL CAUSE AN ABEND DUMP  */\n\n/* Values for field \"cvtdirst\" */\n#define cvtdicom        0x80 /* -       LPA DIRECTORY HAS BEEN INITIALIZED BY NIP  */\n\n/* Values for field \"cvtsylk\" */\n#define cvtsylks        0xFF /* -       SET LOCK BYTE                              */\n#define cvtsylkr        0x00 /* -       RESET LOCK BYTE                            */\n\n/* Values for field \"cvtflag1\" */\n#define cvtrsmwd        0x80 /* -       IF ONE REAL STORAGE MANAGER WINDOW    @L1A */\n#define cvtsvprc        0x40 /* -       SERVICE PROCESSOR ARCHITECTURE        @H3C */\n#define cvtcuse         0x20 /* -       CUSE. SET BY NIP                      @03A */\n#define cvtmvpg         0x10 /* -       IF ONE, MOVEPAGE CAPABILITY IS        @LIA */\n#define cvtover         0x08 /* -       SUBPOOL OVERRIDE IS SUPPORTED.        @LRA */\n#define cvtcstr         0x04 /* -       IF ONE, CSTRING FACILITY IS PRESENT   @DCA */\n#define cvtsubsp        0x02 /* -       IF ONE, SUBSPACE FACILITY IS PRESENT  @LVA */\n#define cvtkpar         0x01 /* -       RESERVED FOR USE BY RTM ONLY.         @M2A */\n\n/* Values for field \"cvtflag2\" */\n#define cvtcmpsc        0x80 /* -       IF ONE, INDICATES PRESENCE OF MVS     @0CA */\n#define cvtcmpsh        0x40 /* -       IF ONE, INDICATES PRESENCE OF CMPSC   @0CA */\n#define cvtsopf         0x20 /* -       IF ONE, INDICATES PRESENCE OF THE     @M9A */\n#define cvtbfph         0x10 /* -       If one, indicates presence of              */\n#define cvtper2         0x08 /* -       If one, indicates presence of              */\n#define cvtiqd          0x04 /* -       If one, indicates that Internal       @MRC */\n#define cvtalr          0x02 /* -       If one, indicates ASN and LX Reuse    @MXA */\n\n/* Values for field \"cvtflag3\" */\n#define cvtesame        0x80 /* -                                                  */\n#define cvtzarch        0x80 /* -       If one, indicates presence of              */\n\n/* Values for field \"cvtflag4\" */\n#define cvtp001i        0x80 /* If one, indicates that P001 support                */\n#define cvtp001a        0x40 /* If one, indicates that the system is               */\n#define cvtznalc        0x20 /* zNALC                                 @0JA         */\n\n/* Values for field \"cvtctlfg\" */\n#define cvtdstat        0x10 /* -       DEVSTAT OPTION IN EFFECT.  DEVICE ADDRESS  */\n#define cvtdrmod        0x08 /* -       Set on when DRMODE=YES was specified. @MZA */\n#define cvtnomp         0x04 /* -       MULTIPROCESSING CODE IS NOT IN THE SYSTEM. */\n#define cvtgtrce        0x02 /* -       GENERALIZED TRACE FACILITY (GTF) HAS       */\n#define cvtsdtrc        0x01 /* -       SVC DUMP HAS SUPPRESSED SUPERVISOR TRACE.  */\n\n/* Values for field \"cvtgrsst\" */\n#define cvte51gn        0x80 /* -       When on, global resource contention        */\n#define cvte51ln        0x40 /* -       When on, local resource contention         */\n\n/* Values for field \"cvtmfrtr\" */\n#define cvtmfact        0x80 /* -       IF ONE, I/O SUPERVISOR AND TIMER SECOND    */\n\n/* Values for field \"cvtgsda\" */\n#define cvtgsdab        0x80 /* -       IF HIGH-ORDER BIT IS ONE, THERE IS  MDC185 */\n\n/* Values for field \"cvtfunc\" */\n#define cvtsoln         0x80 /* -       If high order bit is on, this is not  @M6A */\n\n/* Values for field \"cvtxafl\" */\n#define cvtcsrim        0x80 /* -       EXPLICIT LOAD PROCESSING REQUIRED @G860PVB */\n\n/* Values for field \"cvtoslv0\" */\n#define cvth3310        0x80 /* HBB3310 FUNCTIONS ARE PRESENT         @DBA         */\n#define cvtesa          0x80 /* ESA/370 IS SUPPORTED                  @LQA         */\n#define cvtxax          0x80 /* ESA/370 IS SUPPORTED (XAX - OLD NAME) @LQC         */\n#define cvth4420        0x40 /* HBB4420 FUNCTIONS ARE PRESENT.        @LPA         */\n#define cvtj3313        0x20 /* JBB3313 FUNCTIONS ARE PRESENT         @LHA         */\n#define cvtj3311        0x10 /* JBB3311 FUNCTIONS ARE PRESENT         @DBA         */\n#define cvthiper        0x10 /* HIPERSPACES ARE SUPPORTED             @DAA         */\n#define cvth4410        0x08 /* HBB4410 FUNCTIONS ARE PRESENT.        @LKA         */\n#define cvtlkr          0x08 /* SPIN LOCK RESTRUCTURE INDICATOR.      @LJA         */\n#define cvtucbsv        0x08 /* UCB SERVICES INSTALLED.               @LMA         */\n#define cvtcads         0x04 /* SCOPE=COMMON DATA SPACES SUPPORTED    @04A         */\n#define cvtcrptl        0x02 /* ENCRYPTION ASYMMETRIC FEATURE IS      @05A         */\n#define cvtj4422        0x01 /* JBB4422 FUNCTIONS ARE PRESENT         @LTA         */\n\n/* Values for field \"cvtoslv1\" */\n#define cvth4430        0x80 /* HBB4430 FUNCTIONS ARE PRESENT         @LQA         */\n#define cvtdyapf        0x80 /* DYNAMIC APF, THROUGH CSVAPF, PRESENT  @LQA         */\n#define cvtwlm          0x40 /* WORKLOAD MANAGER IS INSTALLED         @LYA         */\n#define cvth5510        0x20 /* HBB5510 FUNCTIONS ARE PRESENT         @M1A         */\n#define cvtdynex        0x20 /* CSVDYNEX FOR DYNAMIC EXITS IS PRESENT @LXA         */\n#define cvth5520        0x10 /* HBB5520 FUNCTIONS ARE PRESENT         @M3A         */\n#define cvtenclv        0x10 /* ENCLAVES FUNCTION IS PRESENT          @M4A         */\n#define cvtj5522        0x08 /* JBB5522 FUNCTIONS ARE PRESENT         @M8A         */\n#define cvth5530        0x04 /* HBB6603 FUNCTIONS ARE PRESENT         @MBA         */\n#define cvth6603        0x04 /* HBB6603 FUNCTIONS ARE PRESENT         @MDA         */\n#define cvtos390_010300 0x04 /* OS/390 R3                             @MEA         */\n#define cvtos390_r3     0x04 /* OS/390 R3                             @MEA         */\n#define cvtdynl         0x04 /* Dynamic LNKLST, via CSVDYNL, is present            */\n#define cvth6601        0x02 /* OS/390 release 1                      @M9A         */\n#define cvtos390        0x02 /* OS/390 release 1                      @M9A         */\n#define cvtos390_010100 0x02 /* OS/390 R1                             @MEA         */\n#define cvtos390_r1     0x02 /* OS/390 R1                             @MEA         */\n#define cvtprded        0x02 /* Product enable/disable (IFAEDxxx)     @M9A         */\n#define cvtj6602        0x01 /* OS/390 release 2                      @MAA         */\n#define cvtos390_010200 0x01 /* OS/390 R2                             @MEA         */\n#define cvtos390_r2     0x01 /* OS/390 R2                             @MEA         */\n#define cvtparmc        0x01 /* Logical Parmlib Service is available               */\n\n/* Values for field \"cvtoslv2\" */\n#define cvtos390_010400 0x80 /* OS/390 R4                             @MEA         */\n#define cvtos390_020400 0x80 /* OS/390 R4                             @PPA         */\n#define cvtos390_r4     0x80 /* OS/390 R4                             @MEA         */\n#define cvtj6604        0x80 /* OS/390 R4                             @MEA         */\n#define cvtdylpa        0x80 /* Dynamic LPA (CSVDYLPA) available      @MEA         */\n#define cvtrtls         0x80 /* Runtime Library Services (CSVRTLS)    @MEA         */\n#define cvtos390_020500 0x40 /* OS/390 R5                             @MFA         */\n#define cvtos390_r5     0x40 /* OS/390 R5                             @MFA         */\n#define cvth6605        0x40 /* OS/390 R5                             @MFA         */\n#define cvtos390_020600 0x20 /* OS/390 R6                             @MGA         */\n#define cvtos390_r6     0x20 /* OS/390 R6                             @MGA         */\n#define cvth6606        0x20 /* OS/390 R6                             @MGA         */\n#define cvtbfp          0x10 /* Binary Floating Point support         @MGA         */\n#define cvtos390_020700 0x08 /* OS/390 R7                             @MHA         */\n#define cvtos390_r7     0x08 /* OS/390 R7                             @MHA         */\n#define cvtj6607        0x08 /* OS/390 R7                             @MHA         */\n#define cvtos390_020800 0x04 /* OS/390 R8                             @MIA         */\n#define cvtos390_r8     0x04 /* OS/390 R8                             @MIA         */\n#define cvth6608        0x04 /* OS/390 R8                             @MIA         */\n#define cvtos390_020900 0x02 /* OS/390 R9                             @MJA         */\n#define cvtos390_r9     0x02 /* OS/390 R9                             @MJA         */\n#define cvtj6609        0x02 /* OS/390 R9                             @MJA         */\n#define cvth6609        0x02 /* OS/390 R9                             @MJA         */\n#define cvtos390_021000 0x01 /* OS/390 R10                            @PUC         */\n#define cvtos390_r10    0x01 /* OS/390 R10                            @MLA         */\n#define cvth7703        0x01 /* OS/390 R10                            @MLA         */\n\n/* Values for field \"cvtoslv3\" */\n#define cvtpause        0x80 /* Pause/Release services are present    @MKA         */\n#define cvtpaus2        0x40 /* IEAVAPE2 and related services, and    @N5A         */\n#define cvtzos          0x20 /* z/OS V1R1                             @MMA         */\n#define cvtzos_010100   0x20 /* z/OS V1R1                             @MMA         */\n#define cvtzos_v1r1     0x20 /* z/OS V1R1                             @MMA         */\n#define cvtj7713        0x20 /* JBB7713                               @MMA         */\n#define cvtlparc        0x20 /* LPAR Clustering is present.           @PWA         */\n#define cvtzos_010200   0x10 /* z/OS V1R2                             @MQA         */\n#define cvtzos_v1r2     0x10 /* z/OS V1R2                             @MQA         */\n#define cvth7705        0x10 /* HBB7705                               @MQA         */\n#define cvtv64          0x10 /* 64-bit virtual services are present.  @MQA         */\n#define cvtzos_010300   0x08 /* z/OS V1R3                             @MSA         */\n#define cvtzos_v1r3     0x08 /* z/OS V1R3                             @MSA         */\n#define cvth7706        0x08 /* HBB7706                               @MSA         */\n#define cvtzos_010400   0x04 /* z/OS V1R4                             @MUA         */\n#define cvtzos_v1r4     0x04 /* z/OS V1R4                             @MUA         */\n#define cvth7707        0x04 /* HBB7707                               @MUA         */\n#define cvtzos_010500   0x02 /* z/OS V1R5                             @MVA         */\n#define cvtzos_v1r5     0x02 /* z/OS V1R5                             @MVA         */\n#define cvth7708        0x02 /* HBB7708                               @MVA         */\n#define cvtzos_010600   0x01 /* z/OS V1R6                             @MWA         */\n#define cvtzos_v1r6     0x01 /* z/OS V1R6                             @MWA         */\n#define cvth7709        0x01 /* HBB7709                               @MWA         */\n\n/* Values for field \"cvtoslv4\" */\n#define cvtcsrsi        0x80 /* CSRSI service is available            @0EA         */\n#define cvtunics        0x40 /* Unicode callable services available   @MLA         */\n#define cvtcsrun        0x20 /* CSRUNIC callable service available    @MLA         */\n#define cvtilm          0x10 /* IBM License Manager functions are     @PYM         */\n#define cvtalrs         0x08 /* ASN-and-LX-Reuse architecture is      @MXA         */\n#define cvtziip         0x02 /* zIIP support is present               @H5A         */\n#define cvtsup          0x02 /* zIIP support is present               @H5A         */\n#define cvtifar         0x01 /* IFA routine is present                @H4A         */\n\n/* Values for field \"cvtoslv5\" */\n#define cvtzose         0x80 /* z/OS.e                                @MTA         */\n#define cvtzosas        0x80 /* z/OS.e                                @MTA         */\n#define cvtpuma         0x80 /* z/OS.e                                @MTA         */\n#define cvtzos_010700   0x40 /* z/OS V1R7                             @Q3C         */\n#define cvtzos_v1r7     0x40 /* z/OS V1R7                             @Q3C         */\n#define cvth7720        0x40 /* HBB7720                               @MYA         */\n#define cvtzos_010800   0x20 /* z/OS V1R8                             @N2A         */\n#define cvtzos_v1r8     0x20 /* z/OS V1R8                             @N2A         */\n#define cvth7730        0x20 /* HBB7730                               @N2A         */\n\n/* Values for field \"cvtoslv8\" */\n#define cvtpaus4        0x40 /* Pause with checkpoint-OK              @0MA         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAECVT": {"ttr": 8199, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ecvt \u00e4\n  unsigned char  ecvtecvt\u00c44\u00dc;  /* ECVT ACRONYM                                        */\n  void          *ecvtcplx;     /* -              ADDRESS OF IXCCPLX CONTROL           */\n  unsigned char  ecvtsplx\u00c48\u00dc;  /* -           SYSPLEX NAME USED FOR           @D1A    */\n  int            ecvtsple;     /* -              SYSPLEX PARTITIONING ECB THAT   @D1A */\n  void          *ecvtsplq;     /* -              SYSPLEX PARTITIONING QUEUE.     @D1A */\n  void          *ecvtstc1;     /* -       STCKSYNC, NON-AR MODE,          @L1A        */\n  void          *ecvtstc2;     /* -       STCKSYNC, NON-AR MODE,          @L1A        */\n  void          *ecvtstc3;     /* -       STCKSYNC, AR MODE,              @L1A        */\n  void          *ecvtstc4;     /* -       STCKSYNC, AR MODE,              @L1A        */\n  void          *ecvtappc;     /* -           ANCHOR FOR APPC DATA STRUCTURES @L5C    */\n  void          *ecvtsch;      /* -           ANCHOR FOR APPC SCHEDULER       @L5A    */\n  struct \u00e4\n    unsigned char  _ecvtios1; /* -           IOS FLAGS BYTE 1                @L7A */\n    unsigned char  _ecvtios2; /* -           RESERVED.                       @L7A */\n    unsigned char  _ecvtios3; /* -           RESERVED.                       @L7A */\n    unsigned char  _ecvtios4; /* -           RESERVED.                       @L7A */\n    \u00fc ecvtiosf;\n  void          *ecvtomda;     /* -           ADDRESS OF THE OPERATIONS       @L3A    */\n  unsigned char  ecvtr038\u00c43\u00dc;  /* -           RESERVED.                       @09C    */\n  unsigned char  ecvtaloc;     /* -           Ownership: Allocation           @09A    */\n  void          *ecvtbpms;     /* -           BELOW 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtbpme;     /* -           BELOW 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtapms;     /* -           ABOVE 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtapme;     /* -           ABOVE 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtqucb;     /* -           XCF DATA AREA (IXCYQUCB)        @D2C    */\n  struct \u00e4\n    void          *_ecvtssdf; /* -           THE ADDRESS OF THE FREE SSD     @D3A */\n    int            _ecvtssds; /* -           SEQUENCE NUMBER INCREMENTED     @D3A */\n    \u00fc ecvtssdd;\n  unsigned char  ecvtr058\u00c44\u00dc;  /* -           RESERVED                        @PCC    */\n  void          *ecvtsrbt;     /* -           THE ADDRESS OF THE SSD          @D3A    */\n  void          *ecvtdpqh;     /* Queue of DU-AL Pools (DPHs)     @D6C                */\n  void          *ecvttcre;     /* -           IEAVTCRE ENTRY POINT ADDRESS.   @L9A    */\n  unsigned char  ecvtxcfg\u00c416\u00dc; /* SYSPLEX CONFIGURATION           @L6A                */\n  void          *ecvtr078;     /* -           RESERVED. DO NOT USE.           @LAC    */\n  void          *ecvtr07c;     /* -           RESERVED. DO NOT USE.           @LAA    */\n  void          *ecvtscha;     /* -       THE ADDRESS OF IEAVSCHA.        @LBC        */\n  unsigned char  ecvtr084\u00c44\u00dc;  /* -           RESERVED.                       @LAA    */\n  void          *ecvtdlcb;     /* Address of DLCB (CSVDLCB)                           */\n  void          *ecvtnttp;     /* -           ADDRESS OF SYSTEM LEVEL         @LHA    */\n  unsigned char  ecvtr090\u00c48\u00dc;  /* -           RESERVED.                       @LHC    */\n  void          *ecvtmsch;     /* -          THE ADDRESS OF SLM MESSAGE      @LNA     */\n  void          *ecvtcal;      /* -          THE ADDRESS OF SLM COMMON AREA  @LNA     */\n  unsigned char  ecvtload\u00c48\u00dc;  /* -          EDITED MVS LOAD PARAMETER       @P1C     */\n  unsigned char  ecvtmlpr\u00c48\u00dc;  /* -           LOAD parameter used for this    @P1C    */\n  void          *ecvttcp;      /* -           Token used by TCP/IP            @02A    */\n  unsigned char  ecvtr0b4\u00c44\u00dc;  /* -           RESERVED.                       @02C    */\n  void          *ecvtnvdm;     /* -           NETVIEW DM TCP ID BLOCK POINTER @D4C    */\n  unsigned char  ecvtr0bc\u00c44\u00dc;  /* -           RESERVED. DO NOT USE.           @D4C    */\n  void          *ecvtgrmp;     /* -           GRM DATA BLOCK POINTER          @LCA    */\n  void          *ecvtwlm;      /* -          WLM VECTOR TABLE POINTER        @LQC     */\n  void          *ecvtcsm;      /* -           Pointer to Communication        @03A    */\n  void          *ecvtctbl;     /* Customer anchor table.                              */\n  void          *ecvtpmcs;     /* STATUS SET,MC,PROCESS           @D5C                */\n  void          *ecvtpmcr;     /* STATUS RESET,MC,PROCESS         @D5C                */\n  void          *ecvtstx1;     /* STAX DEFER=YES,LINKAGE=BRANCH   @LDA                */\n  void          *ecvtstx2;     /* STAX DEFER=NO,LINKAGE=BRANCH    @LDA                */\n  unsigned char  ecvtslid\u00c44\u00dc;  /* -          CONTAINS THE SLIP PER TRAP ID   @LFA     */\n  void          *ecvtcsvt;     /* -           CSV TABLE.                      @LGA    */\n  void          *ecvtasa;      /* -           ASA TABLE.                      @LIA    */\n  void          *ecvtexpm;     /* -       GETXSB SERVICE ROUTINE.         @LLA        */\n  void          *ecvtocvt;     /* -           ANCHOR FOR OpenMVS              @LKA    */\n  void          *ecvtoext;     /* -           ANCHOR FOR OpenMVS              @LKA    */\n  void          *ecvtcmps;     /* -       Address of the                  @P2A        */\n  void          *ecvtnucp;     /* -           Pointer to nucleus dataset      @P3A    */\n  void          *ecvtxrat;     /* -           XES anchor table for branch     @LOA    */\n  void          *ecvtpwvt;     /* -           Address of the Processor        @LPA    */\n  unsigned char  ecvtclon\u00c42\u00dc;  /* -           1 or 2 character value used to  @LRA    */\n  unsigned char  ecvtgmod;     /* GRS mode of operation           @LUA                */\n  unsigned char  ecvtr10b\u00c415\u00dc; /* -          RESERVED.                       @07C     */\n  short int      ecvtptim;     /* Time value for Parallel Detach  @07A                */\n  void          *ecvtjcct;     /* -           Address of the JES              @LVA    */\n  void          *ecvtlsab;     /* -        Pointer to Logger Services      @P4C       */\n  void          *ecvtetpe;     /* Addr of routine IEAVETPE.       @MLA                */\n  void          *ecvtsymt;     /* Address of the system static    @LXC                */\n  void          *ecvtesym;     /* Address of IEAVESYM routine.    @LXC                */\n  struct \u00e4\n    unsigned char  _ecvtflg1;    /* First miscellaneous flag        @LXA */\n    unsigned char  _filler1\u00c43\u00dc;  /* @LXA                                 */\n    \u00fc ecvtflgs;\n  void          *ecvtesy1;     /* Address of routine IEAVESY1.    @LXA                */\n  void          *ecvtpetm;     /* Addr of routine IEAVPETM        @MHA                */\n  void          *ecvtetpt;     /* Addr of routine IEAVETPT        @MHA                */\n  void          *ecvtenvt;     /* -           Pointer to Enclave Vector Table @LWA    */\n  int            ecvtvser;     /* Reserved for use by VSE         @P7C                */\n  void          *ecvtlsen;     /* Address of module IEAVLSEN      @04A                */\n  void          *ecvtdgnb;     /* Address of DGNB                 @D7A                */\n  unsigned char  ecvthdnm\u00c48\u00dc;  /* Hardware name of the processor  @LXA                */\n  unsigned char  ecvtlpnm\u00c48\u00dc;  /* LPAR name of the processor      @LXA                */\n  unsigned char  ecvtvmnm\u00c48\u00dc;  /* VM userid of the virtual        @LXA                */\n  void          *ecvtgrm;      /* Address of routine CRG52GRM     @M3C                */\n  void          *ecvtseif;     /* Address of routine CRG52SEI.    @M3C                */\n  void          *ecvtaes;      /* Address of routine IEAVEAES.    @05A                */\n  void          *ecvtrsmt;     /* Address of registration         @05A                */\n  unsigned char  ecvtmmem\u00c416\u00dc; /* Exit manager name of the   @05A                     */\n  void          *ecvtipa;      /* Address of the Initialization   @LZA                */\n  unsigned char  ecvtmmet\u00c416\u00dc; /* -          Exit Manager Token of the MVS   @M3A     */\n  void          *ecvtmmeq;     /* MVS Miscellaneous Event Exit    @M3A                */\n  void          *ecvtmmea;     /* Address of the MVS              @M3A                */\n  void          *ecvteaex;     /* Address of routine IEAVEAEX.    @05A                */\n  void          *ecvteaux;     /* Address of routine IEAVEAUX.    @M3A                */\n  void          *ecvtmmec;     /* Count of RMs registered with    @M3A                */\n  void          *ecvtipst;     /* Address of IPST                 @PAA                */\n  void          *ecvtrrsw;     /* Address of the RRS world object @M3A                */\n  void          *ecvtrrtt;     /* RRS EOT Resmgr address          @0AA                */\n  void          *ecvtrrmt;     /* RRS EOM Resmgr Address          @0AA                */\n  void          *ecvtpred;     /* Product Enable/Disable block    @LYA                */\n  unsigned char  ecvtcemt\u00c416\u00dc; /* -          Exit Manager Token of the       @M4A     */\n  void          *ecvtceme;     /* Address of routine CTXEMGRE.    @M4A                */\n  void          *ecvtcemr;     /* Address of routine CTXCEMGR.    @M4A                */\n  int            ecvtpseq;     /* Product sequence number.                            */\n  unsigned char  ecvtpown\u00c416\u00dc; /* Product owner                   @LYA                */\n  unsigned char  ecvtpnam\u00c416\u00dc; /* Product name.                   @LYA                */\n  unsigned char  ecvtpver\u00c42\u00dc;  /* Product version                 @LYA                */\n  unsigned char  ecvtprel\u00c42\u00dc;  /* Product release                 @LYA                */\n  unsigned char  ecvtpmod\u00c42\u00dc;  /* Product mod level               @LYA                */\n  unsigned char  ecvtr206;     /* Reserved                        @MIC                */\n  unsigned char  ecvtttfl;     /* Transaction Trace flags.        @MIA                */\n  void          *ecvtcurx;     /* Address of routine CTXCSURX.    @M4A                */\n  void          *ecvtctxr;     /* Addr of routine CTXRSMGR.       @M7A                */\n  void          *ecvtcrgr;     /* Addr of routine CRGRSMGR.       @M8A                */\n  void          *ecvtcsrb;     /* Addr of routine CTXSRB.         @MBA                */\n  void          *ecvtrem1;     /* Addr of routine CRGRREM1 entry  @M6A                */\n  void          *ecvtrem2;     /* Addr of routine CRGRREM2 entry  @M9A                */\n  void          *ecvtxfr3;     /* Addr of routine IEAVXFR3 entry  @PCC                */\n  void          *ecvtr224;     /* Reserved                        @MCA                */\n  void          *ecvtdlpf;     /* Address of first CDE on dynamic @MCA                */\n  void          *ecvtdlpl;     /* Address of last CDE on dynamic  @MCA                */\n  void          *ecvtsrbr;     /* Return for T6EXIT RETURN=SRBSUSP                    */\n  void          *ecvtbcba;     /* Address of SOMObjects data structure                */\n  unsigned char  ecvtpidn\u00c48\u00dc;  /* PID number                      @MEA                */\n  struct \u00e4\n    void          *_ecvtrmdp; /* CRGREMD Parameter List Free Pool Ptr */\n    int            _ecvtrmds; /* CRGREMD Parameter List Free Pool     */\n    \u00fc ecvtrmd;\n  void          *ecvtrsu1;     /* Addr of routine IEAVRSU1 (Resume                    */\n  void          *ecvtpest;     /* Address of the Pause Element Segment                */\n  struct \u00e4\n    void          *_ecvtcdyn; /* Context Services Dynamic Area   @MFA */\n    void          *_ecvtcdys; /* Context Services Dynamic Area   @MFA */\n    \u00fc ecvtcdya;\n  unsigned char  ecvteorm\u00c48\u00dc;  /* -           Potential real high storage address     */\n  void          *ecvtcbls;     /* Addr of IEAVCBLS (see IHACBLS)  @MMA                */\n  void          *ecvtrins;     /* Address of RRS installed function                   */\n  void          *ecvtttca;     /* Address of Transaction Trace    @MMA                */\n  void          *ecvtlcxt;     /* Address of LCCXVT               @MMA                */\n  unsigned char  ecvtoesi\u00c44\u00dc;  /* -          When non-zero, orig SCCBMESI    @0BA     */\n  unsigned char  ecvtoxsb\u00c44\u00dc;  /* -          When non-zero, orig SCCBNXSB    @0BA     */\n  void          *ecvtestu;     /* SVC update service              @MMA                */\n  void          *ecvtrbup;     /* -          IEARBUP service                 @MMA     */\n  unsigned char  ecvtosai\u00c44\u00dc;  /* -          When non-zero, orig SCCBSAIX    @MMA     */\n  unsigned char  ecvtosar\u00c42\u00dc;  /* -          When non-zero, original SCCBSAR @MMA     */\n  unsigned char  ecvtr286\u00c42\u00dc;  /* -          Reserved                        @MMA     */\n  void          *ecvtcrdt;     /* Entry for RACF to get CDRACDTY bits                 */\n  unsigned char  ecvtr28c\u00c48\u00dc;\n  void          *ecvtxpcb;\n  unsigned char  ecvtlpub\u00c416\u00dc; /* -         IBM Publisher ID for ILM        @MNA      */\n  unsigned char  ecvtlpid\u00c48\u00dc;  /* -          IBM Product ID for ILM          @MNA     */\n  unsigned char  ecvtlvid\u00c48\u00dc;  /* -           IBM Version ID for ILM          @MNA    */\n  unsigned char  ecvtlkln\u00c44\u00dc;  /* -           Length of IBM Key for ILM       @MNA    */\n  void          *ecvtlkad;     /* -           Address of IBM Key for ILM      @MNA    */\n  unsigned char  ecvtr2c0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  unsigned char  ecvtr2d0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  unsigned char  ecvtr2e0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  unsigned char  ecvtr2f0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  void          *ecvtslca;     /* -          Owner: LE                       @MNA     */\n  unsigned char  ecvtr304\u00c412\u00dc; /* -          Reserved.                       @MNA     */\n  void          *ecvt4qv1;     /* IEAV4QV1                        @MQA                */\n  void          *ecvt4qv2;     /* IEAV4QV2                        @MQA                */\n  void          *ecvt4qv3;     /* IEAV4QV3                        @MQA                */\n  void          *ecvt4qv4;     /* IEAV4QV4                        @MQA                */\n  void          *ecvt4qv5;     /* IEAV4QV5                        @MQA                */\n  void          *ecvt4qv6;     /* IEAV4QV6                        @MQA                */\n  void          *ecvt4qv7;     /* IEAV4QV7                        @MQA                */\n  void          *ecvttenc;     /* Timeused Enclave                @H1A                */\n  void          *ecvtscf;      /* IEAVSCAF                        @MSA                */\n  void          *ecvttsth;     /* IEAVTSTH                        @PJC                */\n  void          *ecvtstc5;     /* -       STCKSYNC, AR MODE,              @MVA        */\n  void          *ecvtstc6;     /* -       STCKSYNC, NON-AR MODE,          @MVA        */\n  void          *ecvtch1;      /* IEAVECH1 Storage Check Service  @PLA                */\n  void          *ecvtch2;      /* IEAVECH2 Storage Check Service  @PLA                */\n  void          *ecvtceab;     /* CEAB                            @MYA                */\n  void          *ecvtaxrb;     /* AXRB                            @MYA                */\n  void          *ecvtect;      /* IEAVEECT service                @MYA                */\n  unsigned char  ecvtr354\u00c428\u00dc; /* @MYC                                                */\n  double         ecvtend;      /* End of the ECVT.                @M4A                */\n  \u00fc;\n\n#define ecvtios1 ecvtiosf._ecvtios1\n#define ecvtios2 ecvtiosf._ecvtios2\n#define ecvtios3 ecvtiosf._ecvtios3\n#define ecvtios4 ecvtiosf._ecvtios4\n#define ecvtssdf ecvtssdd._ecvtssdf\n#define ecvtssds ecvtssdd._ecvtssds\n#define ecvtflg1 ecvtflgs._ecvtflg1\n#define ecvtrmdp ecvtrmd._ecvtrmdp\n#define ecvtrmds ecvtrmd._ecvtrmds\n#define ecvtcdyn ecvtcdya._ecvtcdyn\n#define ecvtcdys ecvtcdya._ecvtcdys\n\n/* Values for field \"ecvtios1\" */\n#define ecvtchsc 0x80 /* -           RESERVED FOR IBM USE            @L7A */\n\n/* Values for field \"ecvtaloc\" */\n#define ecvtwarn 0x80 /* -           Warn about allocations          @09A */\n#define ecvtfail 0x40 /* -           Fail allocations                @09A */\n\n/* Values for field \"ecvtocvt\" */\n#define ecvtomvs 0x80 /* If on, OpenMVS is up and        @LMA             */\n\n/* Values for field \"ecvtgmod\" */\n#define ecvtgnon 0x00 /* GRS operating with option NONE. @LUA             */\n#define ecvtgrng 0x01 /* GRS operating in ring mode.     @LUA             */\n#define ecvtgsta 0x02 /* GRS operating in star mode.     @M1A             */\n\n/* Values for field \"ecvtflg1\" */\n#define ecvtclnu 0x80 /* When set, this flag indicates   @LXA             */\n#define ecvtpmac 0x40 /* Serialization: None.            @MOA             */\n\n/* Values for field \"ecvtttfl\" */\n#define ecvtttrc 0x80 /* Transaction Trace has been      @MIA             */\n#define ecvttatf 0x40 /* If set on, TTrace is not active @MIA             */\n#define ecvttesf 0x20 /* If set on, TTrace is not active @MIA             */\n#define ecvttgmf 0x10 /* If set on, TTrace is not active @MIA             */\n#define ecvttabt 0x08 /* If set on, TTrace is not active @MKA             */\n\n/* Values for field \"ecvtceab\" */\n#define ecvtceat 0x80 /* CEA has terminated              @MZA             */\n\n/* Values for field \"ecvtaxrb\" */\n#define ecvtaxrt 0x80 /* AXR has terminated              @MZA             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHALDA": {"ttr": 8315, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct lda \u00e4\n  unsigned char  ldaid\u00c44\u00dc;     /* CONTROL BLOCK IDENTIFIER                          */\n  union \u00e4\n    int            _ldaqanc\u00c46\u00dc; /* LSQA queue anchors */\n    struct \u00e4\n      void          *_ldasqat;    /* Address of the LSQA SQAT */\n      void          *_ldaaqat;    /* Address of the LSQA AQAT */\n      int            _ldadfeq\u00c44\u00dc; /* LSQA DFE queue header    */\n      \u00fc _lda_struct1;\n    struct \u00e4\n      unsigned char  _filler1\u00c48\u00dc;\n      void          *_ldaadf;      /* Address of first DFE on the LSQA address queue */\n      void          *_ldaadl;      /* Address of last DFE on the LSQA address queue  */\n      void          *_ldaszf;      /* Address of first DFE on LSQA size queue        */\n      void          *_ldaszl;      /* Address of last DFE on LSQA size queue         */\n      \u00fc _lda_struct2;\n    \u00fc _lda_union1;\n  union \u00e4\n    int            _ldaeanc\u00c46\u00dc; /* LSQA queue anchors - Extended */\n    struct \u00e4\n      void          *_ldaesqat;    /* Address of the LSQA SQAT */\n      void          *_ldaeaqat;    /* Address of the LSQA AQAT */\n      int            _ldaedfeq\u00c44\u00dc; /* LSQA DFE queue header    */\n      \u00fc _lda_struct3;\n    struct \u00e4\n      unsigned char  _filler2\u00c48\u00dc;\n      void          *_ldaeadf;     /* Address of first DFE on the LSQA address queue */\n      void          *_ldaeadl;     /* Address of last DFE on the LSQA address queue  */\n      void          *_ldaeszf;     /* Address of first DFE on LSQA size queue        */\n      void          *_ldaeszl;     /* Address of last DFE on LSQA size queue         */\n      \u00fc _lda_struct4;\n    \u00fc _lda_union2;\n  union \u00e4\n    int            _ldaard\u00c44\u00dc; /* Address Space Region Descriptor */\n    struct \u00e4\n      void          *_ldafbqaf; /* Address of first FBQE on the address space FBQE */\n      void          *_ldafbqal; /* Address of last FBQE on the address space FBQE  */\n      void          *_ldastrta; /* Low address of Address Space Region             */\n      int            _ldasiza;  /* Size of Address Space Region                    */\n      \u00fc _lda_struct5;\n    \u00fc _lda_union3;\n  union \u00e4\n    int            _ldaeard\u00c44\u00dc; /* Address Space Region Descriptor - Extended */\n    struct \u00e4\n      void          *_ldaefbaf; /* Address of first FBQE on the address space FBQE */\n      void          *_ldaefbal; /* Address of last FBQE on the address space FBQE  */\n      void          *_ldaestra; /* Low address of Address Space Region             */\n      int            _ldaesiza; /* Size of Address Space Region                    */\n      \u00fc _lda_struct6;\n    \u00fc _lda_union4;\n  union \u00e4\n    int            _ldasrd\u00c44\u00dc; /* System Region Descriptor */\n    struct \u00e4\n      void          *_ldafbqsf; /* Address of the first FBQE on the System Region FBQE */\n      void          *_ldafbqsl; /* Address of the last FBQE on the System Region FBQE  */\n      void          *_ldastrts; /* Low address of System Region                        */\n      int            _ldasizs;  /* Size of System Region                               */\n      \u00fc _lda_struct7;\n    \u00fc _lda_union5;\n  union \u00e4\n    int            _ldaesrd\u00c44\u00dc; /* System Region Descriptor - Extended */\n    struct \u00e4\n      void          *_ldaefbsf; /* Address of the first FBQE on the System Region FBQE */\n      void          *_ldaefbsl; /* Address of the last FBQE on the System Region FBQE  */\n      void          *_ldaestrs; /* Low address of System Region                        */\n      int            _ldaesizs; /* Size of System Region                               */\n      \u00fc _lda_struct8;\n    \u00fc _lda_union6;\n  union \u00e4\n    int            _ldarrd\u00c44\u00dc; /* V=R Region Descriptor */\n    struct \u00e4\n      void          *_ldafbqrf; /* Address of the first FBQE on the V=R Region FBQE */\n      void          *_ldafbqrl; /* Address of the last FBQE on the V=R Region FBQE  */\n      void          *_ldastrtr; /* Low address of the V=R Region                    */\n      int            _ldasizr;  /* Size of the V=R Region                           */\n      \u00fc _lda_struct9;\n    \u00fc _lda_union7;\n  union \u00e4\n    int            _ldaerrd\u00c44\u00dc; /* V=R Region Descriptor - Extended */\n    struct \u00e4\n      void          *_ldaefbrf; /* Address of the first FBQE on the V=R Region FBQE */\n      void          *_ldaefbrl; /* Address of the last FBQE on the V=R Region FBQE  */\n      void          *_ldaestrr; /* Low address of the V=R Region                    */\n      int            _ldaesizr; /* Size of the V=R Region                           */\n      \u00fc _lda_struct10;\n    \u00fc _lda_union8;\n  void          *ldaaqtad;     /* Address of the first AQAT stack on                */\n  void          *ldacrgtp;     /* Current high address of PRIVATE AREA Region       */\n  void          *ldaergtp;     /* Current high address of PRIVATE AREA Region -     */\n  void          *ldadefq;      /* Address of DEFERRED RELEASE queue                 */\n  void          *ldaaqtst;     /* Address of the next free AQAT in the              */\n  union \u00e4\n    int            _ldacpanc\u00c43\u00dc; /* LSQA CELL POOL HEADER */\n    struct \u00e4\n      void          *_ldacpadr; /* Address of LSQA CELL POOL                    */\n      int            _ldacpcnt; /* NUMBER of FREE CELLS IN LSQA CELL POOL       */\n      void          *_ldafcadr; /* Address of first FREE CELL IN LSQA CELL POOL */\n      \u00fc _lda_struct11;\n    \u00fc _lda_union9;\n  void          *ldawrka;      /* Address of LOCAL WORK AREA                        */\n  void          *ldaascb;      /* Address of ASCB FOR THIS ADDRESS SPACE            */\n  void          *ldappd;       /* Address of LOCAL PPD queue                        */\n  unsigned char  _filler3\u00c44\u00dc;  /* Reserved                                          */\n  unsigned char  ldaflgs;      /* MISC. FLAGS                                       */\n  unsigned char  _filler4\u00c43\u00dc;  /* Reserved                                          */\n  union \u00e4\n    unsigned char  _ldasizes\u00c424\u00dc; /* MISC. sizes */\n    struct \u00e4\n      unsigned char  _ldauflgs;    /* USER FLAGS                   */\n      unsigned char  _filler5\u00c43\u00dc;  /* Reserved                     */\n      int            _ldaregrq;    /* Region size REQUESTED        */\n      void          *_ldalimit;    /* < 16M V=V Region limit value */\n      void          *_ldavvrg;     /* < 16M V=V Region high value  */\n      void          *_ldaelim;     /* > 16M V=V Region limit value */\n      void          *_ldaevvrg;    /* > 16M V=V Region high value  */\n      \u00fc _lda_struct12;\n    \u00fc _lda_union10;\n  union \u00e4\n    int            _ldanonfm\u00c42\u00dc; /* NON-FREEMAINABLE PRIVATE AREAS           */\n    int            _ldasm\u00c42\u00dc;    /* NON-FREEMAINABLE STORAGE MANAGEMENT AREA */\n    struct \u00e4\n      void          *_ldasmad; /* Address of AREA */\n      int            _ldasmsz; /* Size of AREA    */\n      \u00fc _lda_struct13;\n    \u00fc _lda_union11;\n  union \u00e4\n    int            _ldaalloc\u00c44\u00dc; /* ALLOCATION VALUES */\n    struct \u00e4\n      int            _ldaloal;  /* < 16M USER Region alloc value */\n      int            _ldahial;  /* < 16M AUTH Region alloc value */\n      int            _ldaeloal; /* > 16M USER Region alloc value */\n      int            _ldaehial; /* > 16M AUTH Region alloc value */\n      \u00fc _lda_struct14;\n    \u00fc _lda_union12;\n  union \u00e4\n    int            _ldasmf\u00c44\u00dc; /* Limit values set by SMF                  @ZA67822 */\n    struct \u00e4\n      int            _ldasmfl;  /* < 16M V=V SMF LDALIMIT VALUE                 @D1C */\n      int            _ldasmfr;  /* < 16M V=V SMF LDAVVRG VALUE                  @D1C */\n      int            _ldasmfel; /* > 16M V=V SMF LDAELIM VALUE                  @D1C */\n      int            _ldasmfer; /* > 16M V=V SMF LDAEVVRG VALUE                 @D1C */\n      \u00fc _lda_struct15;\n    \u00fc _lda_union13;\n  union \u00e4\n    int            _ldaean05\u00c46\u00dc; /* LSQA 205 queue anchors - Extended            @L3A */\n    struct \u00e4\n      void          *_ldasqt05;    /* Address of the LSQA 205 SQAT                 @L3A */\n      void          *_ldaaqt05;    /* Address of the LSQA 205 AQAT                 @L3A */\n      int            _ldadfe05\u00c44\u00dc; /* LSQA 205 DFE queue header                    @L3A */\n      \u00fc _lda_struct16;\n    struct \u00e4\n      unsigned char  _filler6\u00c48\u00dc;\n      void          *_ldaadf05;    /* Addr of first DFE on the LSQA 205 addr queue @L3A */\n      void          *_ldaadl05;    /* Addr of last DFE on the LSQA 205 addr queue  @L3A */\n      void          *_ldaszf05;    /* Address of first DFE on LSQA 205 size queue  @L3A */\n      void          *_ldaszl05;    /* Address of last DFE on LSQA 205 size queue   @L3A */\n      \u00fc _lda_struct17;\n    \u00fc _lda_union14;\n  union \u00e4\n    int            _ldaean15\u00c46\u00dc; /* LSQA 215 queue anchors - Extended            @L3A */\n    struct \u00e4\n      void          *_ldasqt15;    /* Address of the LSQA 215 SQAT                 @L3A */\n      void          *_ldaaqt15;    /* Address of the LSQA 215 AQAT                 @L3A */\n      int            _ldadfe15\u00c44\u00dc; /* LSQA 215 DFE queue header                    @L3A */\n      \u00fc _lda_struct18;\n    struct \u00e4\n      unsigned char  _filler7\u00c48\u00dc;\n      void          *_ldaadf15;    /* Addr of first DFE on the LSQA 215 addr queue @L3A */\n      void          *_ldaadl15;    /* Addr of last DFE on the LSQA 215 addr queue  @L3A */\n      void          *_ldaszf15;    /* Address of first DFE on LSQA 215 size queue  @L3A */\n      void          *_ldaszl15;    /* Address of last DFE on LSQA 215 size queue   @L3A */\n      \u00fc _lda_struct19;\n    \u00fc _lda_union15;\n  union \u00e4\n    int            _ldaean25\u00c46\u00dc; /* LSQA 225 queue anchors - Extended            @L2A */\n    struct \u00e4\n      void          *_ldasqt25;    /* Address of the LSQA 225 SQAT                 @L2A */\n      void          *_ldaaqt25;    /* Address of the LSQA 225 AQAT                 @L2A */\n      int            _ldadfe25\u00c44\u00dc; /* LSQA 225 DFE queue header                    @L2A */\n      \u00fc _lda_struct20;\n    struct \u00e4\n      unsigned char  _filler8\u00c48\u00dc;\n      void          *_ldaadf25;    /* Addr of first DFE on the LSQA 225 addr queue @L2A */\n      void          *_ldaadl25;    /* Addr of last DFE on the LSQA 225 addr queue  @L2A */\n      void          *_ldaszf25;    /* Address of first DFE on LSQA 225 size queue  @L2A */\n      void          *_ldaszl25;    /* Address of last DFE on LSQA 225 size queue   @L2A */\n      \u00fc _lda_struct21;\n    \u00fc _lda_union16;\n  void          *ldaa2gfa;     /* Above 2G free area address                   @L5A */\n  void          *ldaa2gaa;     /* Above 2G alloc area address                  @L5A */\n  int            ldamrg24;     /* Maximum region below 16MB before                  */\n  int            ldamrg31;     /* Maximum region above 16MB before                  */\n  union \u00e4\n    int            _ldaqancr64\u00c46\u00dc; /* LSQA queue anchors R64                       @L7A */\n    struct \u00e4\n      void          *_ldasqatr64;    /* Address of the LSQA SQAT                     @L7A */\n      void          *_ldaaqatr64;    /* Address of the LSQA AQAT                     @L7A */\n      int            _ldadfeqr64\u00c44\u00dc; /* LSQA DFE queue header                        @L7A */\n      \u00fc _lda_struct22;\n    struct \u00e4\n      unsigned char  _filler9\u00c48\u00dc;\n      void          *_ldaadfr64;   /* Addr of first DFE on the LSQA address queue  @L7A */\n      void          *_ldaadlr64;   /* Addr of last DFE on the LSQA address queue   @L7A */\n      void          *_ldaszfr64;   /* Address of first DFE on LSQA size queue      @L7A */\n      void          *_ldaszlr64;   /* Address of last DFE on LSQA size queue       @L7A */\n      \u00fc _lda_struct23;\n    \u00fc _lda_union17;\n  union \u00e4\n    int            _ldaeancr64\u00c46\u00dc; /* LSQA queue anchors - Extended R64            @L7A */\n    struct \u00e4\n      void          *_ldaesqatr64;    /* Address of the LSQA SQAT                     @L7A */\n      void          *_ldaeaqatr64;    /* Address of the LSQA AQAT                     @L7A */\n      int            _ldaedfeqr64\u00c44\u00dc; /* LSQA DFE queue header                        @L7A */\n      \u00fc _lda_struct24;\n    struct \u00e4\n      unsigned char  _filler10\u00c48\u00dc;\n      void          *_ldaeadfr64;   /* Addr of first DFE on the LSQA address queue  @L7A */\n      void          *_ldaeadlr64;   /* Addr of last DFE on the LSQA address queue   @L7A */\n      void          *_ldaeszfr64;   /* Address of first DFE on LSQA size queue      @L7A */\n      void          *_ldaeszlr64;   /* Address of last DFE on LSQA size queue       @L7A */\n      \u00fc _lda_struct25;\n    \u00fc _lda_union18;\n  union \u00e4\n    int            _ldaean05r64\u00c46\u00dc; /* LSQA 205 queue anchors - Extended R64        @L7A */\n    struct \u00e4\n      void          *_ldasqt05r64;    /* Address of the LSQA 205 SQAT                 @L7A */\n      void          *_ldaaqt05r64;    /* Address of the LSQA 205 AQAT                 @L7A */\n      int            _ldadfe05r64\u00c44\u00dc; /* LSQA 205 DFE queue header                    @L7A */\n      \u00fc _lda_struct26;\n    struct \u00e4\n      unsigned char  _filler11\u00c48\u00dc;\n      void          *_ldaadf05r64;  /* Addr of first DFE on the LSQA 205 addr queue @L7A */\n      void          *_ldaadl05r64;  /* Addr of last DFE on the LSQA 205 addr queue  @L7A */\n      void          *_ldaszf05r64;  /* Address of first DFE on LSQA 205 size queue  @L7A */\n      void          *_ldaszl05r64;  /* Address of last DFE on LSQA 205 size queue   @L7A */\n      \u00fc _lda_struct27;\n    \u00fc _lda_union19;\n  union \u00e4\n    int            _ldaean15r64\u00c46\u00dc; /* LSQA 215 queue anchors - Extended R64        @L7A */\n    struct \u00e4\n      void          *_ldasqt15r64;    /* Address of the LSQA 215 SQAT                 @L7A */\n      void          *_ldaaqt15r64;    /* Address of the LSQA 215 AQAT                 @L7A */\n      int            _ldadfe15r64\u00c44\u00dc; /* LSQA 215 DFE queue header                    @L7A */\n      \u00fc _lda_struct28;\n    struct \u00e4\n      unsigned char  _filler12\u00c48\u00dc;\n      void          *_ldaadf15r64;  /* Addr of first DFE on the LSQA 215 addr queue @L7A */\n      void          *_ldaadl15r64;  /* Addr of last DFE on the LSQA 215 addr queue  @L7A */\n      void          *_ldaszf15r64;  /* Address of first DFE on LSQA 215 size queue  @L7A */\n      void          *_ldaszl15r64;  /* Address of last DFE on LSQA 215 size queue   @L7A */\n      \u00fc _lda_struct29;\n    \u00fc _lda_union20;\n  union \u00e4\n    int            _ldaean25r64\u00c46\u00dc; /* LSQA 225 queue anchors - Extended R64        @L7A */\n    struct \u00e4\n      void          *_ldasqt25r64;    /* Address of the LSQA 225 SQAT                 @L7A */\n      void          *_ldaaqt25r64;    /* Address of the LSQA 225 AQAT                 @L7A */\n      int            _ldadfe25r64\u00c44\u00dc; /* LSQA 225 DFE queue header                    @L7A */\n      \u00fc _lda_struct30;\n    struct \u00e4\n      unsigned char  _filler13\u00c48\u00dc;\n      void          *_ldaadf25r64;  /* Addr of first DFE on the LSQA 225 addr queue @L7A */\n      void          *_ldaadl25r64;  /* Addr of last DFE on the LSQA 225 addr queue  @L7A */\n      void          *_ldaszf25r64;  /* Address of first DFE on LSQA 225 size queue  @L7A */\n      void          *_ldaszl25r64;  /* Address of last DFE on LSQA 225 size queue   @L7A */\n      \u00fc _lda_struct31;\n    \u00fc _lda_union21;\n  union \u00e4\n    int            _ldaprivbuf\u00c42\u00dc; /* PrivateBuffer values used for this job       @P1A */\n    struct \u00e4\n      void          *_ldaprivbuf24; /* Below 16M                                    @P1A */\n      void          *_ldaprivbuf31; /* Above 16M                                    @P1A */\n      \u00fc _lda_struct32;\n    \u00fc _lda_union22;\n  union \u00e4\n    int            _ldasmfprivbuf\u00c42\u00dc; /* PrivateBuffer values requested by */\n    struct \u00e4\n      void          *_ldasmfprivbuf24; /* Below 16M                                   @P1A */\n      void          *_ldasmfprivbuf31; /* Above 16M                                   @P1A */\n      \u00fc _lda_struct33;\n    \u00fc _lda_union23;\n  unsigned char  _filler14\u00c48\u00dc; /* Reserved                                     @L5A */\n  \u00fc;\n\n#define ldaqanc         _lda_union1._ldaqanc\n#define ldasqat         _lda_union1._lda_struct1._ldasqat\n#define ldaaqat         _lda_union1._lda_struct1._ldaaqat\n#define ldadfeq         _lda_union1._lda_struct1._ldadfeq\n#define ldaadf          _lda_union1._lda_struct2._ldaadf\n#define ldaadl          _lda_union1._lda_struct2._ldaadl\n#define ldaszf          _lda_union1._lda_struct2._ldaszf\n#define ldaszl          _lda_union1._lda_struct2._ldaszl\n#define ldaeanc         _lda_union2._ldaeanc\n#define ldaesqat        _lda_union2._lda_struct3._ldaesqat\n#define ldaeaqat        _lda_union2._lda_struct3._ldaeaqat\n#define ldaedfeq        _lda_union2._lda_struct3._ldaedfeq\n#define ldaeadf         _lda_union2._lda_struct4._ldaeadf\n#define ldaeadl         _lda_union2._lda_struct4._ldaeadl\n#define ldaeszf         _lda_union2._lda_struct4._ldaeszf\n#define ldaeszl         _lda_union2._lda_struct4._ldaeszl\n#define ldaard          _lda_union3._ldaard\n#define ldafbqaf        _lda_union3._lda_struct5._ldafbqaf\n#define ldafbqal        _lda_union3._lda_struct5._ldafbqal\n#define ldastrta        _lda_union3._lda_struct5._ldastrta\n#define ldasiza         _lda_union3._lda_struct5._ldasiza\n#define ldaeard         _lda_union4._ldaeard\n#define ldaefbaf        _lda_union4._lda_struct6._ldaefbaf\n#define ldaefbal        _lda_union4._lda_struct6._ldaefbal\n#define ldaestra        _lda_union4._lda_struct6._ldaestra\n#define ldaesiza        _lda_union4._lda_struct6._ldaesiza\n#define ldasrd          _lda_union5._ldasrd\n#define ldafbqsf        _lda_union5._lda_struct7._ldafbqsf\n#define ldafbqsl        _lda_union5._lda_struct7._ldafbqsl\n#define ldastrts        _lda_union5._lda_struct7._ldastrts\n#define ldasizs         _lda_union5._lda_struct7._ldasizs\n#define ldaesrd         _lda_union6._ldaesrd\n#define ldaefbsf        _lda_union6._lda_struct8._ldaefbsf\n#define ldaefbsl        _lda_union6._lda_struct8._ldaefbsl\n#define ldaestrs        _lda_union6._lda_struct8._ldaestrs\n#define ldaesizs        _lda_union6._lda_struct8._ldaesizs\n#define ldarrd          _lda_union7._ldarrd\n#define ldafbqrf        _lda_union7._lda_struct9._ldafbqrf\n#define ldafbqrl        _lda_union7._lda_struct9._ldafbqrl\n#define ldastrtr        _lda_union7._lda_struct9._ldastrtr\n#define ldasizr         _lda_union7._lda_struct9._ldasizr\n#define ldaerrd         _lda_union8._ldaerrd\n#define ldaefbrf        _lda_union8._lda_struct10._ldaefbrf\n#define ldaefbrl        _lda_union8._lda_struct10._ldaefbrl\n#define ldaestrr        _lda_union8._lda_struct10._ldaestrr\n#define ldaesizr        _lda_union8._lda_struct10._ldaesizr\n#define ldacpanc        _lda_union9._ldacpanc\n#define ldacpadr        _lda_union9._lda_struct11._ldacpadr\n#define ldacpcnt        _lda_union9._lda_struct11._ldacpcnt\n#define ldafcadr        _lda_union9._lda_struct11._ldafcadr\n#define ldasizes        _lda_union10._ldasizes\n#define ldauflgs        _lda_union10._lda_struct12._ldauflgs\n#define ldaregrq        _lda_union10._lda_struct12._ldaregrq\n#define ldalimit        _lda_union10._lda_struct12._ldalimit\n#define ldavvrg         _lda_union10._lda_struct12._ldavvrg\n#define ldaelim         _lda_union10._lda_struct12._ldaelim\n#define ldaevvrg        _lda_union10._lda_struct12._ldaevvrg\n#define ldanonfm        _lda_union11._ldanonfm\n#define ldasm           _lda_union11._ldasm\n#define ldasmad         _lda_union11._lda_struct13._ldasmad\n#define ldasmsz         _lda_union11._lda_struct13._ldasmsz\n#define ldaalloc        _lda_union12._ldaalloc\n#define ldaloal         _lda_union12._lda_struct14._ldaloal\n#define ldahial         _lda_union12._lda_struct14._ldahial\n#define ldaeloal        _lda_union12._lda_struct14._ldaeloal\n#define ldaehial        _lda_union12._lda_struct14._ldaehial\n#define ldasmf          _lda_union13._ldasmf\n#define ldasmfl         _lda_union13._lda_struct15._ldasmfl\n#define ldasmfr         _lda_union13._lda_struct15._ldasmfr\n#define ldasmfel        _lda_union13._lda_struct15._ldasmfel\n#define ldasmfer        _lda_union13._lda_struct15._ldasmfer\n#define ldaean05        _lda_union14._ldaean05\n#define ldasqt05        _lda_union14._lda_struct16._ldasqt05\n#define ldaaqt05        _lda_union14._lda_struct16._ldaaqt05\n#define ldadfe05        _lda_union14._lda_struct16._ldadfe05\n#define ldaadf05        _lda_union14._lda_struct17._ldaadf05\n#define ldaadl05        _lda_union14._lda_struct17._ldaadl05\n#define ldaszf05        _lda_union14._lda_struct17._ldaszf05\n#define ldaszl05        _lda_union14._lda_struct17._ldaszl05\n#define ldaean15        _lda_union15._ldaean15\n#define ldasqt15        _lda_union15._lda_struct18._ldasqt15\n#define ldaaqt15        _lda_union15._lda_struct18._ldaaqt15\n#define ldadfe15        _lda_union15._lda_struct18._ldadfe15\n#define ldaadf15        _lda_union15._lda_struct19._ldaadf15\n#define ldaadl15        _lda_union15._lda_struct19._ldaadl15\n#define ldaszf15        _lda_union15._lda_struct19._ldaszf15\n#define ldaszl15        _lda_union15._lda_struct19._ldaszl15\n#define ldaean25        _lda_union16._ldaean25\n#define ldasqt25        _lda_union16._lda_struct20._ldasqt25\n#define ldaaqt25        _lda_union16._lda_struct20._ldaaqt25\n#define ldadfe25        _lda_union16._lda_struct20._ldadfe25\n#define ldaadf25        _lda_union16._lda_struct21._ldaadf25\n#define ldaadl25        _lda_union16._lda_struct21._ldaadl25\n#define ldaszf25        _lda_union16._lda_struct21._ldaszf25\n#define ldaszl25        _lda_union16._lda_struct21._ldaszl25\n#define ldaqancr64      _lda_union17._ldaqancr64\n#define ldasqatr64      _lda_union17._lda_struct22._ldasqatr64\n#define ldaaqatr64      _lda_union17._lda_struct22._ldaaqatr64\n#define ldadfeqr64      _lda_union17._lda_struct22._ldadfeqr64\n#define ldaadfr64       _lda_union17._lda_struct23._ldaadfr64\n#define ldaadlr64       _lda_union17._lda_struct23._ldaadlr64\n#define ldaszfr64       _lda_union17._lda_struct23._ldaszfr64\n#define ldaszlr64       _lda_union17._lda_struct23._ldaszlr64\n#define ldaeancr64      _lda_union18._ldaeancr64\n#define ldaesqatr64     _lda_union18._lda_struct24._ldaesqatr64\n#define ldaeaqatr64     _lda_union18._lda_struct24._ldaeaqatr64\n#define ldaedfeqr64     _lda_union18._lda_struct24._ldaedfeqr64\n#define ldaeadfr64      _lda_union18._lda_struct25._ldaeadfr64\n#define ldaeadlr64      _lda_union18._lda_struct25._ldaeadlr64\n#define ldaeszfr64      _lda_union18._lda_struct25._ldaeszfr64\n#define ldaeszlr64      _lda_union18._lda_struct25._ldaeszlr64\n#define ldaean05r64     _lda_union19._ldaean05r64\n#define ldasqt05r64     _lda_union19._lda_struct26._ldasqt05r64\n#define ldaaqt05r64     _lda_union19._lda_struct26._ldaaqt05r64\n#define ldadfe05r64     _lda_union19._lda_struct26._ldadfe05r64\n#define ldaadf05r64     _lda_union19._lda_struct27._ldaadf05r64\n#define ldaadl05r64     _lda_union19._lda_struct27._ldaadl05r64\n#define ldaszf05r64     _lda_union19._lda_struct27._ldaszf05r64\n#define ldaszl05r64     _lda_union19._lda_struct27._ldaszl05r64\n#define ldaean15r64     _lda_union20._ldaean15r64\n#define ldasqt15r64     _lda_union20._lda_struct28._ldasqt15r64\n#define ldaaqt15r64     _lda_union20._lda_struct28._ldaaqt15r64\n#define ldadfe15r64     _lda_union20._lda_struct28._ldadfe15r64\n#define ldaadf15r64     _lda_union20._lda_struct29._ldaadf15r64\n#define ldaadl15r64     _lda_union20._lda_struct29._ldaadl15r64\n#define ldaszf15r64     _lda_union20._lda_struct29._ldaszf15r64\n#define ldaszl15r64     _lda_union20._lda_struct29._ldaszl15r64\n#define ldaean25r64     _lda_union21._ldaean25r64\n#define ldasqt25r64     _lda_union21._lda_struct30._ldasqt25r64\n#define ldaaqt25r64     _lda_union21._lda_struct30._ldaaqt25r64\n#define ldadfe25r64     _lda_union21._lda_struct30._ldadfe25r64\n#define ldaadf25r64     _lda_union21._lda_struct31._ldaadf25r64\n#define ldaadl25r64     _lda_union21._lda_struct31._ldaadl25r64\n#define ldaszf25r64     _lda_union21._lda_struct31._ldaszf25r64\n#define ldaszl25r64     _lda_union21._lda_struct31._ldaszl25r64\n#define ldaprivbuf      _lda_union22._ldaprivbuf\n#define ldaprivbuf24    _lda_union22._lda_struct32._ldaprivbuf24\n#define ldaprivbuf31    _lda_union22._lda_struct32._ldaprivbuf31\n#define ldasmfprivbuf   _lda_union23._ldasmfprivbuf\n#define ldasmfprivbuf24 _lda_union23._lda_struct33._ldasmfprivbuf24\n#define ldasmfprivbuf31 _lda_union23._lda_struct33._ldasmfprivbuf31\n\n/* Values for field \"_filler4\" */\n#define ldadefer 0x80 /* IF ONE DEFERRED RELEASE CONDITION EXISTS          */\n#define ldadefed 0x40 /* IF ONE FREE ASSOCIATED PAGE CONDITION EXISTS @L1A */\n\n/* Values for field \"ldauflgs\" */\n#define ldalimcl 0x80 /* IF ZERO CALL IEALIMIT ROUTINE                     */\n#define ldaulim  0x40 /* IF ZERO DO FBQE CHECK BELOW 16M             @D1A  */\n#define ldaeulim 0x20 /* IF ONE DO FBQE CHECK ABOVE 16M              @D1A  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHALLT": {"ttr": 8587, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct llt \u00e4\n  unsigned char  lltid\u00c44\u00dc; /* BLOCK ACRONYM     */\n  int            lltcount; /* NUMBER OF ENTRIES */\n  struct \u00e4\n    char           _lltdslth;   /* DSNAME LENGTH AFTER TRUNCATION */\n    unsigned char  _lltdsn\u00c444\u00dc; /* DATA SET NAME                  */\n    \u00fc lltentry;\n  \u00fc;\n\n#define lltdslth lltentry._lltdslth\n#define lltdsn   lltentry._lltdsn\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IHAPSA": {"ttr": 8069, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct psa \u00e4\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcrnpsw\u00c44\u00dc; /* -RESTART NEW PSW (AFTER IPL)        MDC001   */\n      void          *_filler1;     /* -  SECOND HALF OF RESTART NEW PSW     MDC128 */\n      \u00fc flcippsw;\n    struct \u00e4\n      unsigned char  _flceippsw\u00c48\u00dc; /* FLCE 0x: IPL PSW */\n      \u00fc flcesame;\n    \u00fc _psa_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcropsw\u00c48\u00dc; /* -      RESTART OLD PSW (AFTER IPL) */\n      \u00fc flciccw1;\n    unsigned char  _flceiccw1\u00c48\u00dc; /* FLCE 8x: IPL CCW1 */\n    \u00fc _psa_union2;\n  union \u00e4\n    struct \u00e4\n      void          *_flccvt;      /* -    ADDRESS OF CVT (AFTER IPL).  THIS OFFSET    */\n      unsigned char  _filler2\u00c44\u00dc;  /* -      RESERVED (AFTER IPL)  (MDC431)   @ZM48214 */\n      \u00fc flciccw2;\n    unsigned char  _flceiccw2\u00c48\u00dc; /* FLCE 10x: IPL CCW1 */\n    \u00fc _psa_union3;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flceopsw\u00c48\u00dc; /* -      EXTERNAL OLD PSW                          */\n      unsigned char  _flcsopsw\u00c48\u00dc; /* -      SVC OLD PSW.  THIS OFFSET FIXED BY        */\n      unsigned char  _flcpopsw\u00c48\u00dc; /* -      PROGRAM CHECK OLD PSW                     */\n      unsigned char  _flcmopsw\u00c48\u00dc; /* -      MACHINE CHECK OLD PSW                     */\n      unsigned char  _flciopsw\u00c48\u00dc; /* -      INPUT/OUTPUT OLD PSW                      */\n      unsigned char  _filler3\u00c48\u00dc;  /* -      RESERVED                         @G860PXK */\n      struct \u00e4\n        unsigned char  _filler4\u00c44\u00dc;  /* -      1st 4 bytes are 0                    @H3A */\n        void          *_flccvt2;     /* -    ADDRESS OF CVT - USED BY DUMP               */\n        \u00fc flccvt64;\n      unsigned char  _filler5\u00c44\u00dc;  /* -      RESERVED                         @G860PXH */\n      unsigned char  _filler6\u00c44\u00dc;  /* -      RESERVED - FLCTRACE DELETED DUE TO        */\n      unsigned char  _flcenpsw\u00c44\u00dc; /* -EXTERNAL NEW PSW                                */\n      void          *_filler7;     /* -  SECOND HALF OF EXTERNAL NEW PSW               */\n      unsigned char  _flcsnpsw\u00c44\u00dc; /* -SVC NEW PSW                                     */\n      void          *_filler8;     /* -  SECOND HALF OF SVC NEW PSW                    */\n      unsigned char  _flcpnpsw\u00c44\u00dc; /* - PROGRAM CHECK NEW PSW, DISABLED FOR @02C       */\n      void          *_filler9;     /* -  SECOND HALF OF PROGRAM CHECK NEW PSW          */\n      unsigned char  _flcmnpsw\u00c44\u00dc; /* -MACHINE CHECK NEW PSW              MDC003       */\n      void          *_filler10;    /* -  SECOND HALF OF MACHINE CHECK NEW PSW          */\n      unsigned char  _flcinpsw\u00c44\u00dc; /* -INPUT/OUTPUT NEW PSW                            */\n      void          *_filler11;    /* -  SECOND HALF OF I/O NEW PSW                    */\n      \u00fc _psa_struct1;\n    unsigned char  _flcer018\u00c4104\u00dc; /* FLCE 18x: reserved */\n    \u00fc _psa_union4;\n  union \u00e4\n    int            _psaeparm;     /* -         EXTERNAL INTERRUPTION PARAMETER  @G871A9A */\n    unsigned char  _flceeparm\u00c44\u00dc; /* FLCE 80x: External interruption parameter           */\n    \u00fc _psa_union5;\n  union \u00e4\n    struct \u00e4\n      short int      _psaspad;  /* -         ISSUING PROCESSOR'S PHYSICAL ADDRESS */\n      short int      _flceicod; /* -         EXTERNAL INTERRUPTION CODE           */\n      \u00fc psaeepsw;\n    struct \u00e4\n      unsigned char  _flcecpuad\u00c42\u00dc;  /* FLCE 84x: CPU address                */\n      unsigned char  _flceeicode\u00c42\u00dc; /* FLCE 86x: External interruption code */\n      \u00fc _psa_struct2;\n    \u00fc _psa_union6;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler12;  /* -      RESERVED - SET TO ZERO                   */\n      char           _flcsvilc;  /* -       SVC INSTRUCTION LENGTH COUNTER - NUMBER */\n      short int      _flcsvcn;   /* -         SVC INTERRUPTION CODE - SVC NUMBER.   */\n      \u00fc psaespsw;\n    unsigned char  _flcesdata\u00c44\u00dc; /* FLCE 88x: Additional SVC interruption data */\n    struct \u00e4\n      unsigned char  _flcesdatabyte0\u00c42\u00dc; /* FLCE 88x: */\n      unsigned char  _filler13\u00c42\u00dc;\n      \u00fc _psa_struct3;\n    struct \u00e4\n      unsigned char  _filler14;      /* FLCE 88x: Reserved                     */\n      unsigned char  _flcesilc;      /* FLCE 89x: SVC interruption length code */\n      unsigned char  _flcesicode\u00c42\u00dc; /* FLCE 8Ax: SVC interruption code        */\n      \u00fc _psa_struct4;\n    \u00fc _psa_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler15;  /* -      RESERVED - SET TO ZERO                     */\n      char           _flcpiilc;  /* -       PROGRAM INTERRUPT LENGTH COUNTER - NUMBER */\n      struct \u00e4\n        char           _psaeecod; /* -       EXCEPTION-EXTENSION CODE.            @03C */\n        char           _psapicod; /* -       8-BIT INTERRUPT CODE.  THIS OFFSET FIXED  */\n        \u00fc flcpicod;\n      struct \u00e4\n        unsigned char  _filler16\u00c43\u00dc;  /* -                                           @L8A */\n        struct \u00e4\n          unsigned char  _flcteab3; /* -      LAST BYTE OF TEA.                    @L8A */\n          \u00fc flcdxc;\n        \u00fc flctea;\n      \u00fc psaeppsw;\n    struct \u00e4\n      unsigned char  _flcepdata\u00c44\u00dc; /* FLCE 8Cx: Additional Program interruption */\n      unsigned char  _filler17\u00c44\u00dc;\n      \u00fc _psa_struct5;\n    struct \u00e4\n      unsigned char  _flcepdatabyte0\u00c42\u00dc; /* FLCE 8Cx: */\n      unsigned char  _filler18\u00c46\u00dc;\n      \u00fc _psa_struct6;\n    struct \u00e4\n      unsigned char  _filler19;      /* FLCE 8Cx: Reserved                         */\n      unsigned char  _flcepilc;      /* FLCE 8Dx: Program interruption length code */\n      unsigned char  _flcepicode\u00c42\u00dc; /* FLCE 8Ex: Program interruption code        */\n      unsigned char  _filler20\u00c44\u00dc;\n      \u00fc _psa_struct7;\n    struct \u00e4\n      unsigned char  _filler21\u00c42\u00dc;\n      unsigned char  _flcepicode0;          /* FLCE 8Ex: Exception extension code */\n      unsigned char  _flcepicode1;          /* FLCE 8Fx: 8-bit interruption code  */\n      unsigned char  _flcepiinformation\u00c44\u00dc; /* FLCE 90x:                          */\n      \u00fc _psa_struct8;\n    struct \u00e4\n      unsigned char  _filler22\u00c44\u00dc;\n      unsigned char  _filler23\u00c43\u00dc;\n      unsigned char  _flcedxc;      /* FLCE 93x: Data exception code for PI 7 */\n      \u00fc _psa_struct9;\n    \u00fc _psa_union8;\n  union \u00e4\n    unsigned char  _flcemcnum\u00c42\u00dc; /* FLCE 94x: Monitor class number */\n    struct \u00e4\n      unsigned char  _filler24;\n      unsigned char  _flcmcnum;     /* -      MONITOR CLASS NUMBER */\n      \u00fc _psa_struct10;\n    \u00fc _psa_union9;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcpercd; /* -      PROGRAM EVENT RECORDING CODE              */\n      unsigned char  _flcatmid; /* -      ATM ID                               @LSA */\n      \u00fc _psa_struct11;\n    unsigned char  _flcepercode\u00c42\u00dc; /* FLCE 96x: PER code */\n    struct \u00e4\n      unsigned char  _flcepercode0; /* FLCE 96x: Byte 0                              */\n      unsigned char  _flceperatmid; /* FLCE 97x: PER addressing and translation mode */\n      \u00fc _psa_struct12;\n    \u00fc _psa_union10;\n  union \u00e4\n    struct \u00e4\n      void          *_flcper;      /* -         PER ADDRESS - ESA/390            @G860PXK */\n      unsigned char  _filler25;    /* -      RESERVED - SET TO ZERO                       */\n      unsigned char  _flcmtrcd\u00c43\u00dc; /* -      MONITOR CODE (ESA/390)                       */\n      \u00fc _psa_struct13;\n    unsigned char  _flceper\u00c48\u00dc; /* FLCE 98x: PER address */\n    struct \u00e4\n      unsigned char  _flceperw0\u00c44\u00dc; /* FLCE 98x: PER address word 0 */\n      void          *_flceperw1;    /* FLCE 9Cx: PER address word 1 */\n      \u00fc _psa_struct14;\n    \u00fc _psa_union11;\n  union \u00e4\n    unsigned char  _flctearn; /* -      CONTAINS THE ACCESS REGISTER NUMBER  @L8C */\n    unsigned char  _flceeaid; /* FLCE A0x: Exception access ID (The AR number     */\n    \u00fc _psa_union12;\n  union \u00e4\n    unsigned char  _flcperrn;   /* -      CONTAINS THE PER STORAGE ACCESS      @L8A */\n    unsigned char  _flceperaid; /* FLCE A1x: PER access ID (the access register     */\n    \u00fc _psa_union13;\n  unsigned char  flceopacid;         /* FLCE A2x:                                              */\n  union \u00e4\n    unsigned char  _flcarch;   /* -      Architecture information             @LSA */\n    unsigned char  _flceamdid; /* FLCE A3x: Architecture mode ID (See FLCARCH      */\n    \u00fc _psa_union14;\n  union \u00e4\n    void          *_psampl;  /* -    MPL ADDRESS.  THIS OFFSET FIXED BY */\n    void          *_flcempl; /* FLCE A4x: MPL address                   */\n    \u00fc _psa_union15;\n  union \u00e4\n    unsigned char  _flceteid\u00c48\u00dc;      /* FLCE A8x: Translation exception         */\n    unsigned char  _flcetea\u00c48\u00dc;       /* FLCE A8x: Translation exception address */\n    struct \u00e4\n      unsigned char  _filler26\u00c47\u00dc;\n      unsigned char  _flcetea7;     /* FLCE AFx: Byte 7 of FlceTEA */\n      \u00fc _psa_struct15;\n    unsigned char  _flceteasninfo\u00c48\u00dc; /* FLCE A8x: ASN Info                      */\n    struct \u00e4\n      unsigned char  _filler27\u00c46\u00dc;\n      short int      _flceteasn;    /* FLCE AEx: ASN */\n      \u00fc _psa_struct16;\n    unsigned char  _flcetepcinfo\u00c48\u00dc;  /* FLCE A8x: PC Info                       */\n    struct \u00e4\n      unsigned char  _filler28\u00c44\u00dc;\n      int            _flcepcnum;    /* FLCE ACx: PC#. Bits 0-10 are 0, bit 11 is 1, */\n      \u00fc _psa_struct17;\n    \u00fc _psa_union16;\n  unsigned char  flcemonitorcode\u00c48\u00dc; /* FLCE B0x: Monitor Code                                 */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcsid\u00c44\u00dc;  /* -      SUBSYSTEM ID                     @G860PVB */\n      unsigned char  _flciofp\u00c44\u00dc; /* -      I/O INTERRUPTION PARAMETER       @G860PVB */\n      \u00fc flciocdp;\n    struct \u00e4\n      unsigned char  _flcessid\u00c44\u00dc;      /* FLCE B8x: Subsystem ID word          */\n      unsigned char  _flceiointparm\u00c44\u00dc; /* FLCE BCx: I/O interruption parameter */\n      \u00fc _psa_struct18;\n    \u00fc _psa_union17;\n  unsigned char  flceiointid\u00c44\u00dc;     /* FLCE C0x: I/O interruption ID                          */\n  unsigned char  flcer0c4\u00c44\u00dc;        /* FLCE C4x: Reserved                                     */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcfacl0;     /* Byte 0 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl1;     /* Byte 1 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl2;     /* Byte 2 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl3;     /* Byte 3 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl4;     /* Byte 4 of FLCFACL                    @PHA        */\n      unsigned char  _flcfacl5;     /* Byte 5 of FLCFACL                    @PHA        */\n      unsigned char  _flcfacl6;     /* Byte 6 of FLCFACL                    @PHA        */\n      unsigned char  _flcfacl7;     /* Byte 7 of FLCFACL                    @PHA        */\n      unsigned char  _filler29\u00c48\u00dc;  /* -      RESERVED                             @PHC */\n      \u00fc flcfacl;\n    unsigned char  _flcefacilitieslist\u00c416\u00dc; /* FLCE C8x: Facilities list stored by STFL */\n    struct \u00e4\n      unsigned char  _flcefacilitieslistbyte0; /* FLCE C8x */\n      unsigned char  _flcefacilitieslistbyte1; /* FLCE C9x */\n      unsigned char  _flcefacilitieslistbyte2; /* FLCE CAx */\n      unsigned char  _flcefacilitieslistbyte3; /* FLCE CBx */\n      unsigned char  _flcefacilitieslistbyte4; /* FLCE CCx */\n      unsigned char  _flcefacilitieslistbyte5; /* FLCE CDx */\n      unsigned char  _flcefacilitieslistbyte6; /* FLCE CEx */\n      unsigned char  _flcefacilitieslistbyte7; /* FLCE CFx */\n      unsigned char  _flcefacilitieslistbyte8; /* FLCE D0x */\n      unsigned char  _flcefacilitieslistbyte9; /* FLCE D1x */\n      unsigned char  _flcefacilitieslistbytea; /* FLCE D2x */\n      unsigned char  _flcefacilitieslistbyteb; /* FLCE D3x */\n      unsigned char  _flcefacilitieslistbytec; /* FLCE D4x */\n      unsigned char  _flcefacilitieslistbyted; /* FLCE D5x */\n      unsigned char  _flcefacilitieslistbytee; /* FLCE D6x */\n      unsigned char  _flcefacilitieslistbytef; /* FLCE D7x */\n      \u00fc _psa_struct19;\n    \u00fc _psa_union18;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcctsa\u00c48\u00dc; /* -      CPU-TIMER SAVE AREA (FROM STORE-     @LHA */\n      unsigned char  _flcccsa\u00c48\u00dc; /* -      CLOCK-COMPARATOR SAVE AREA (FROM     @LHA */\n      \u00fc _psa_struct20;\n    struct \u00e4\n      unsigned char  _flcer0d8\u00c412\u00dc;      /* FLCE D8x: Reserved    */\n      unsigned char  _flcecpusignals\u00c44\u00dc; /* FLCE E4x: CPU signals */\n      \u00fc _psa_struct21;\n    \u00fc _psa_union19;\n  union \u00e4\n    unsigned char  _flcmcic\u00c48\u00dc;  /* -      MACHINE-CHECK INTERRUPTION CODE  @G860PVB */\n    unsigned char  _flcemcic\u00c48\u00dc; /* FLCE E8x: Machine check interruption code        */\n    \u00fc _psa_union20;\n  unsigned char  flcemcice\u00c44\u00dc;       /* FLCE F0x: Machine check interruption code              */\n  unsigned char  flceedcode\u00c44\u00dc;      /* FLCE F4x: External damage code                         */\n  union \u00e4\n    struct \u00e4\n      void          *_flcfsa;       /* -         FAILING STORAGE ADDRESS          @G860PXK */\n      unsigned char  _filler30\u00c44\u00dc;  /* -      RESERVED - SET TO ZERO           @G860PXK    */\n      \u00fc _psa_struct22;\n    unsigned char  _flcefsa\u00c48\u00dc; /* FLCE F8x: Failing storage address */\n    \u00fc _psa_union21;\n  union \u00e4\n    unsigned char  _flcfla\u00c416\u00dc;   /* -     FIXED LOGOUT AREA. SIZE FIXED BY     @L9C */\n    unsigned char  _flcer100\u00c416\u00dc; /* FLCE 100x: Reserved                             */\n    \u00fc _psa_union22;\n  union \u00e4\n    unsigned char  _flcrv110\u00c416\u00dc; /* -     RESERVED.                            @L9A */\n    struct \u00e4\n      unsigned char  _flcebea\u00c48\u00dc;  /* FLCE 110x: Breaking event address */\n      unsigned char  _flcer118\u00c48\u00dc; /* FLCE 118x: Reserved               */\n      \u00fc _psa_struct23;\n    \u00fc _psa_union23;\n  union \u00e4\n    int            _flcarsav\u00c416\u00dc; /* -     ACCESS REGISTER SAVE AREA            @L9A */\n    struct \u00e4\n      unsigned char  _flceropsw\u00c416\u00dc; /* FLCE 120x: Restart old PSW  */\n      unsigned char  _flceeopsw\u00c416\u00dc; /* FLCE 130x: External old PSW */\n      unsigned char  _flcesopsw\u00c416\u00dc; /* FLCE 140x: SVC old PSW      */\n      unsigned char  _flcepopsw\u00c416\u00dc; /* FLCE 150x: Program old PSW  */\n      \u00fc _psa_struct24;\n    \u00fc _psa_union24;\n  union \u00e4\n    unsigned char  _flcfpsav\u00c432\u00dc; /* -     FLOATING POINT REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcemopsw\u00c416\u00dc; /* FLCE 160x: Machine check old PSW */\n      unsigned char  _flceiopsw\u00c416\u00dc; /* FLCE 170x: I/O old PSW           */\n      \u00fc _psa_struct25;\n    \u00fc _psa_union25;\n  union \u00e4\n    int            _flcgrsav\u00c416\u00dc; /* -       GENERAL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcer180\u00c432\u00dc;  /* FLCE 180x: reserved         */\n      unsigned char  _flcernpsw\u00c416\u00dc; /* FLCE 1A0x: Restart new PSW  */\n      unsigned char  _flceenpsw\u00c416\u00dc; /* FLCE 1B0x: External new PSW */\n      \u00fc _psa_struct26;\n    \u00fc _psa_union26;\n  union \u00e4\n    int            _flccrsav\u00c416\u00dc; /* -       CONTROL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcesnpsw\u00c416\u00dc; /* FLCE 1C0x: SVC new PSW           */\n      unsigned char  _flcepnpsw\u00c416\u00dc; /* FLCE 1D0x: Program new PSW       */\n      unsigned char  _flcemnpsw\u00c416\u00dc; /* FLCE 1E0x: Machine check new PSW */\n      unsigned char  _flceinpsw\u00c416\u00dc; /* FLCE 1F0x: I/O new PSW           */\n      \u00fc _psa_struct27;\n    \u00fc _psa_union27;\n  struct \u00e4\n    unsigned char  _psapsa\u00c44\u00dc; /* -    CONTROL BLOCK ACRONYM IN EBCDIC                */\n    short int      _psacpupa;  /* -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR) */\n    short int      _psacpula;  /* -         LOGICAL CPU ADDRESS                       */\n    \u00fc flchdend;\n  void          *psapccav;           /* -         VIRTUAL ADDRESS OF PCCA                      */\n  void          *psapccar;           /* -         REAL ADDRESS OF PCCA                         */\n  void          *psalccav;           /* -         VIRTUAL ADDRESS OF LCCA                      */\n  void          *psalccar;           /* -         REAL ADDRESS OF LCCA                         */\n  void          *psatnew;            /* -         TCB pointer. Field maintained for code       */\n  void          *psatold;            /* -         Pointer to current TCB or zero if in SRB     */\n  void          *psaanew;            /* ASCB pointer.  Field maintained for code               */\n  void          *psaaold;            /* -         Pointer to the home (current) ASCB.          */\n  struct \u00e4\n    unsigned char  _psasup1; /* -      FIRST BYTE OF PSASUPER  */\n    unsigned char  _psasup2; /* -      SECOND BYTE OF PSASUPER */\n    unsigned char  _psasup3; /* -      THIRD BYTE OF PSASUPER  */\n    unsigned char  _psasup4; /* -      FOURTH BYTE OF PSASUPER */\n    \u00fc psasuper;\n  unsigned char  psarv22c\u00c412\u00dc;       /* -     RESERVED                             @H5C        */\n  unsigned char  psadiag\u00c42\u00dc;         /* -     Reserved                             @H5A        */\n  union \u00e4\n    unsigned char  _psaprocclass\u00c42\u00dc;         /* -     PROCESSOR WUQ Offset.             */\n    unsigned char  _psa_bylpar_procclass\u00c42\u00dc; /* - PROCESSOR WUQ Offset.            @H5A */\n    struct \u00e4\n      unsigned char  _psaprocclass_byte0; /* @H4A */\n      unsigned char  _psaprocclass_byte1; /* @H4A */\n      \u00fc _psa_struct28;\n    struct \u00e4\n      unsigned char  _psa_bylpar_procclass_byte0; /* @H5A */\n      unsigned char  _psa_bylpar_procclass_byte1; /* @H5A */\n      \u00fc _psa_struct29;\n    \u00fc _psa_union28;\n  unsigned char  psaptype;           /* -      PROCESSOR TYPE INDICATOR             @H1A       */\n  unsigned char  psails;             /* -      INTERRUPT HANDLER LINKAGE STACK      @L9C       */\n  unsigned char  psalsvci\u00c42\u00dc;        /* -      LAST SVC ISSUED ON THIS PROCESSOR    @L6A       */\n  unsigned char  psaflags;           /* -      SYSTEM FLAGS                         @LOA       */\n  unsigned char  psarv241\u00c410\u00dc;       /* RESERVED FOR FUTURE USE - SC1C5.     @LOC              */\n  unsigned char  psascaff;           /* $$SCAFFOLD                                             */\n  void          *psalkcrf;           /* LINKAGE STACK POINTER SAVE AREA.     @D4A              */\n  unsigned char  psampsw\u00c48\u00dc;         /* - SETLOCK MODEL PSW                                    */\n  unsigned char  psamchex\u00c48\u00dc;        /* -      MCH EXIT PSW                                    */\n  int            psatclin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaintin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaipcin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaems2s;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psastosm;           /* -            STOSM PSASLSA,X'00' INSTRUCTION.     @P5A */\n  int            psahlhis;           /* -         SAVE AREA FOR PSAHLHI              MDC050    */\n  unsigned char  psarecur;           /* -      RESTART FLIH RECURSION INDICATOR.  IF           */\n  unsigned char  psarssm;            /* -      STNSM AREA FOR IEAVERES              @L5C       */\n  unsigned char  psasnsm2;           /* -      STNSM AREA FOR IEAVTRT1 (MDC470) @G65RP9A       */\n  unsigned char  psartm1s;           /* -      BITS 0-7 OF THE CURRENT PSW ARE  @G383P9A       */\n  void          *psalwtsa;           /* -         REAL ADDRESS OF SAVE AREA USED WHEN  @LHC    */\n  struct \u00e4\n    struct \u00e4\n      void          *_psadispl; /* -  GLOBAL DISPATCHER LOCK  (MDC315) @G50DP9A        */\n      void          *_psaasml;  /* -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK   */\n      void          *_psasalcl; /* -  SPACE ALLOCATION LOCK  (MDC316)  @G50DP9A        */\n      void          *_psaiossl; /* -         IOS SYNCHRONIZATION LOCK           MDC010 */\n      void          *_psarsmdl; /* -         ADDRESS OF THE RSM DATA SPACE LOCK   @LBC */\n      void          *_psaiosul; /* -         IOS UNIT CONTROL BLOCK LOCK        MDC005 */\n      void          *_psarvlk1; /* -         RESERVED FOR LOCK EXPANSION      @G860PXK */\n      void          *_psarv29c; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psarv2a0; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psatpacl; /* -         TCAM'S TPACBDEB LOCK               MDC009 */\n      void          *_psaoptl;  /* -   OPTIMIZER LOCK  (MDC317)         @G50DP9A       */\n      void          *_psarsmgl; /* -         RSM GLOBAL LOCK                  @G860PXH */\n      void          *_psavfixl; /* VSM FIXED SUBPOOLS LOCK          @G860PXH           */\n      void          *_psaasmgl; /* -         ASM GLOBAL LOCK                  @G860PXH */\n      void          *_psarsmsl; /* -         RSM STEAL LOCK                   @G860PXH */\n      void          *_psarsmxl; /* -         RSM CROSS MEMORY LOCK            @G860PXH */\n      void          *_psarsmal; /* -         RSM ADDRESS SPACE LOCK           @G860PXH */\n      void          *_psavpagl; /* VSM PAGEABLE SUBPOOLS LOCK       @G860PXH           */\n      void          *_psarsmcl; /* RSM COMMON LOCK                  @G860PXK           */\n      void          *_psarvlk2; /* RESERVED FOR LOCK EXPANSION      @G860PXH           */\n      \u00fc psaclht1;\n    struct \u00e4\n      void          *_psarsml;  /* RSM GLOBAL FUNCTION/RECOVERY                        */\n      void          *_psatrcel; /* TRACE BUFFER MANAGEMENT LOCK     @G860PXH           */\n      void          *_psaiosl;  /* -   IOS LOCK                             @D3C       */\n      void          *_psarvlk4; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht2;\n    struct \u00e4\n      void          *_psacpul;  /* CPU TABLE LOCKS                  @G860PXH           */\n      void          *_psarvlk5; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht3;\n    struct \u00e4\n      void          *_psacmsl;  /* -         CROSS MEMORY SERVICES LOCK                */\n      void          *_psalocal; /* -         LOCAL LOCK                                */\n      void          *_psarvlk6; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht4;\n    \u00fc psaclht;\n  void          *psalcpua;           /* -         LOGICAL CPU ADDRESS FOR LOCK INSTRUCTION.    */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _psaclhs1; /* -      FIRST BYTE OF PSACLHS. (MDC384)  @G860PXH */\n      unsigned char  _psaclhs2; /* -      SECOND BYTE OF PSACLHS. (MDC385) @G860PXH */\n      unsigned char  _psaclhs3; /* -      THIRD BYTE OF PSACLHS  (MDC386)  @G50EP9A */\n      unsigned char  _psaclhs4; /* -      FOURTH BYTE OF PSACLHS  (MDC392) @G50EP9A */\n      \u00fc psaclhs;\n    \u00fc psahlhi;\n  void          *psalita;            /* -  ADDRESS OF LOCK INTERFACE TABLE.                    */\n  unsigned char  psastor8\u00c48\u00dc;        /* -      8-BYTE value for master's STO        @LSA       */\n  int            psacr0;             /* -         SAVE AREA FOR CONTROL REGISTER 0             */\n  unsigned char  psamchfl;           /* -      MCH RECURSION FLAGS                             */\n  unsigned char  psasymsk;           /* -      THIS FIELD WILL BE USED IN CONJUNCTION          */\n  unsigned char  psaactcd;           /* -      ACTION CODE SUPPLIED BY OPERATOR     @LHC       */\n  unsigned char  psamchic;           /* -      MCH INITIALIZATION COMPLETE FLAGS  MDC098       */\n  void          *psawkrap;           /* -         REAL ADDRESS OF VARY CPU PARAMETER LIST      */\n  void          *psawkvap;           /* -         VIRTUAL ADDRESS OF VARY CPU PARAMETER        */\n  short int      psavstap;           /* -         WORK AREA FOR VARY CPU             MDC108    */\n  short int      psacpusa;           /* -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)      */\n  int            psastor;            /* -         MASTER MEMORY'S SEGMENT TABLE ORIGIN         */\n  unsigned char  psaidawk\u00c490\u00dc;       /* -     WORK SAVE AREA FOR private                       */\n  short int      psaret;             /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  short int      psaretcd;           /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  unsigned char  psarv37e\u00c42\u00dc;        /* -      RESERVED                             @PJC       */\n  struct \u00e4\n    struct \u00e4\n      void          *_psacstk;  /* -         ADDRESS OF CURRENTLY USED FUNCTIONAL      */\n      void          *_psanstk;  /* -         ADDRESS OF NORMAL FRR STACK        MDC062 */\n      void          *_psasstk;  /* -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK   */\n      void          *_psassav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psamstk;  /* -         ADDRESS OF MCH FRR STACK           MDC067 */\n      void          *_psamsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psapstk;  /* -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK   */\n      void          *_psapsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk1; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav1; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk2; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav2; /* -         ADDRESS OF INTERRUPTED STACK SAVE BY      */\n      void          *_psaestk3; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav3; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psarstk;  /* -         ADDRESS OF RESTART FLIH FRR STACK  MDC077 */\n      void          *_psarsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      \u00fc psarsvte;\n    \u00fc psarsvt;\n  unsigned char  psalwpsw\u00c48\u00dc;        /* -      PSW OF WORK INTERRUPTED WHEN A       @LHC       */\n  unsigned char  psarspsw\u00c48\u00dc;        /* -      RESUME PSW FIELD FOR RESTART INTERRUPT          */\n  void          *psatstk;            /* -         ADDRESS OF RTM RECOVERY STACK.               */\n  void          *psatsav;            /* -         ADDRESS OF ERROR STACK SAVED BY RTM  @L7A    */\n  void          *psaastk;            /* -         ADDRESS OF ACR FRR STACK.            @L7A    */\n  void          *psaasav;            /* -         ADDRESS OF INTERRUPT STACK SAVED BY  @L7A    */\n  unsigned char  psartpsw\u00c48\u00dc;        /* -      RESUME PSW FOR RTM SETRP RETRY       @L7A       */\n  unsigned char  psarv3e8\u00c48\u00dc;        /* -      RESERVED                             @L7C       */\n  unsigned char  psasfacc\u00c44\u00dc;        /* - SETFRR ABEND COMPLETION CODE USED WHEN               */\n  int            psalsfcc;           /* -            L  1,PSASFACC INSTRUCTION TO LOAD    @P5A */\n  short int      psasvc13;           /* -            AN SVC 13 INSTRUCTION                @P5A */\n  unsigned char  psarv3fa;           /* -      RESERVED                             @PJC       */\n  unsigned char  psainte;            /* -      FLAGS FOR CPU TIMER  (MDC466)    @ZM48078       */\n  int            psartm1r;           /* -            STOSM PSARTM1S,X'00' INSTRUCTION     @P5A */\n  unsigned char  psarv400\u00c48\u00dc;        /* -      Reserved                             @LVC       */\n  void          *psaatcvt;           /* -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY       */\n  void          *psawtcod;           /* -         WAIT STATE CODE LOADED               @LHC    */\n  void          *psascwa;            /* -         ADDRESS OF SUPERVISOR CONTROL CPU            */\n  void          *psarsmsa;           /* -         ADDRESS OF RSM CPU RELATED WORK              */\n  unsigned char  psascpsw\u00c44\u00dc;        /* - MODEL PSW                                            */\n  void          *_filler31;          /* -         MODEL PSW SECOND HALF  (MDC325)  @G50DP9A    */\n  unsigned char  psasmpsw\u00c44\u00dc;        /* - SRB DISPATCH PSW  (MDC326)      @G50DP9A             */\n  void          *_filler32;          /* -         DISPATCH PSW SECOND HALF                     */\n  unsigned char  psapcpsw\u00c416\u00dc;       /* =     TEMPORARY OLD PSW STORAGE FOR PROGRAM            */\n  unsigned char  psarv438\u00c448\u00dc;       /* =     Reserved                             @LVC        */\n  unsigned char  psapswsv\u00c48\u00dc;        /* -      PSW SAVE AREA FOR DISPATCHER AND ACR            */\n  unsigned char  psacput\u00c48\u00dc;         /* -      SUPERVISOR CPU TIMER SAVE AREA                  */\n  struct \u00e4\n    unsigned char  _psapcfb1; /* -      FUNCTION VALUE  (MDC484)         @G383P9A */\n    unsigned char  _psapcfb2; /* -      FUNCTION FLAGS  (MDC491)         @G383P9A */\n    unsigned char  _psapcfb3; /* -      RECURSION FLAGS  (MDC494)        @G383P9A */\n    unsigned char  _psapcfb4; /* -      RECURSION FLAGS                           */\n    \u00fc psapcfun;\n  short int      psapcps2;           /* -         PASID AT TIME OF SECOND LEVEL    @G383P9A    */\n  unsigned char  psarv47e\u00c42\u00dc;        /* -      RESERVED                         @G860PXK       */\n  unsigned char  psapcwka\u00c424\u00dc;       /* -     Work area for PC FLIH. Must be                   */\n  short int      psapcps3;           /* -         PASID AT TIME OF THIRD LEVEL     @G383P9A    */\n  short int      psapcps4;           /* -         PASID AT TIME OF FOURTH LEVEL                */\n  struct \u00e4\n    unsigned char  _filler33;  /* -      RESERVED - FIRST BYTE OF PSAMODEW         */\n    unsigned char  _psamflgs;  /* -      SECOND BYTE OF PSAMODEW (MDC604) @G383P9A */\n    unsigned char  _psamodeh;  /* -      SECOND HALFWORD OF PSAMODEW.     @G383P9A */\n    unsigned char  _psamode;   /* -      SYSTEM MODE INDICATOR AND DISPLACEMENT    */\n    \u00fc psamodew;\n  unsigned char  _filler34\u00c43\u00dc;       /* -      RESERVED                         @G860PXK       */\n  unsigned char  psastnsm;           /* -      STNSM TARGET USED BY EXIT PROLOGUE              */\n  int            psalkjw;            /* -         LOCAL LOCK RELEASE SRB JOURNAL   @G383P9A    */\n  struct \u00e4\n    int            _psafzero;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    int            _filler35;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    \u00fc psadzero;\n  int            psalkjw2;           /* -         CMS LOCK RELEASE JOURNAL WORD.   @G383P9A    */\n  void          *psalkpt;            /* -   SETLOCK TEST,TYPE=HIER                             */\n  void          *psalaa;             /* -      LE Anchor Area. Owner: LE            @LVA       */\n  void          *psalit2;            /* -  POINTER TO THE EXTENDED LOCK         @LDA           */\n  void          *psaecltp;           /* -   POINTER TO THE EXTENDED CURRENT      @LDA          */\n  struct \u00e4\n    unsigned char  _psalheb0; /* -      BYTE 0 OF THE CURRENT LOCK HELD      @LDA */\n    unsigned char  _psalheb1; /* -      BYTE 1 OF THE CURRENT LOCK HELD      @LDA */\n    unsigned char  _psalheb2; /* -      BYTE 2 OF THE CURRENT LOCK HELD      @LDA */\n    unsigned char  _psalheb3; /* -      BYTE 3 OF THE CURRENT LOCK HELD      @LDA */\n    \u00fc psaclhse;\n  unsigned char  psarv4c8\u00c48\u00dc;        /* -    RESERVED FOR FUTURE LOCK EXPANSION.  @LDA         */\n  unsigned char  psarv4d0\u00c4184\u00dc;      /* -    RESERVED.                            @LDA         */\n  unsigned char  psahwfb;            /* -      HARDWARE FLAG BYTE.                  @L3A       */\n  unsigned char  psacr0cb;           /* -      CR0 CONTROL BYTE USED BY PROTPSA MACRO          */\n  unsigned char  psarv58a\u00c42\u00dc;        /* -      RESERVED                             @PJC       */\n  int            psacr0sv;           /* -         CR0 SAVE AREA USED BY PROTPSA MACRO          */\n  int            psapccr0;           /* -         PROGRAM CHECK FLIH CR0 SAVE AREA             */\n  int            psarcr0;            /* -         RESTART FLIH CR0 SAVE AREA                   */\n  struct \u00e4\n    short int      _psatkn; /* -         CURRENT STACK TOKEN     (MDC610) @G383P9A */\n    short int      _psaasd; /* -         CURRENT STACK ADDRESS SPACE               */\n    int            _psasel; /* -         CURRENT STACK ELEMENTS ADDRESS            */\n    \u00fc psastke;\n  unsigned char  psaskpsw\u00c44\u00dc;        /* PCLINK STACK/UNSTACK MODEL PSW                         */\n  void          *psaskps2;           /* -         PCLINK PSW ADDRESS      (MDC604) @G383P9A    */\n  void          *psacpcls;           /* -      PCLINK WORKAREA - CURRENT STACK      @L9C       */\n  unsigned char  psarv5ac\u00c44\u00dc;        /* -      RESERVED.                            @L9A       */\n  void          *psascfs;            /* -      ADDRESS OF THE SUPERVISOR CONTROL    @L8C       */\n  void          *psapawa;            /* -      ADDRESS OF PC/AUTH WORK AREA.        @L8A       */\n  unsigned char  psascfb;            /* -      SUPERVISOR CONTROL FLAG BYTE.        @L1A       */\n  unsigned char  psarv5b9\u00c43\u00dc;        /* -      RESERVED                             @PJC       */\n  unsigned char  psacr0m1\u00c44\u00dc;        /* MASK OF CR0 WITH EXTERNAL MASK BITS  @04A              */\n  unsigned char  psacr0m2\u00c44\u00dc;        /* MASK OF CR0 WITH ONLY EXTERNAL MASK  @04A              */\n  unsigned char  psarv5c4\u00c4148\u00dc;      /* -    RESERVED                             @03A         */\n  double         psatime;            /* -         CURRENT SRB'S ACCUMULATED CPU TIME   @01C    */\n  int            psasrsav;           /* -        ADDRESS OF CURRENT FRR STACK     @G383P9A     */\n  unsigned char  psaesc8\u00c412\u00dc;        /* -     Save area for IEAVESC8               @LPA        */\n  unsigned char  psadexmw\u00c48\u00dc;        /* -         Work area for dispatcher CR3/4       @LVC    */\n  unsigned char  psadsars\u00c464\u00dc;       /* -     DISPATCHER ACCESS REGISTER SAVE AREA @L9C        */\n  double         psarv6b8;           /* -            RESERVED                             @LVC */\n  union \u00e4\n    double         _psadtsav;    /* -            CPU TIMER VALUE AT LAST DISPATCH,    @01C */\n    unsigned char  _psaff6c0\u00c48\u00dc; /* INITIALIZE FIELD PSADTSAV     @ZMC3284                 */\n    \u00fc _psa_union29;\n  struct \u00e4\n    struct \u00e4\n      int            _psadsins; /* -        DISPATCHER Secondary ASTE Inst# S/A  @LVA */\n      struct \u00e4\n        short int      _psadpkm; /* -        DISPATCHER PROGRAM KEY MASK SAVE AREA */\n        short int      _psadsas; /* -        DISPATCHER SECONDARY ASID SAVE AREA   */\n        \u00fc psadpksa;\n      \u00fc psadcr3;\n    struct \u00e4\n      int            _psadpins; /* -        DISPATCHER Primary ASTE Inst# S/A    @LVA */\n      struct \u00e4\n        short int      _psadax;  /* -        DISPATCHER  AUTHORIZATION        @G383P9A */\n        short int      _psadpas; /* -        DISPATCHER PRIMARY ASID SAVE     @G383P9A */\n        \u00fc psadaxpa;\n      \u00fc psadcr4;\n    \u00fc psadexms;\n  unsigned char  psarv6d8\u00c4216\u00dc;      /* -    RESERVED                         @G860PXK         */\n  unsigned char  psadatlk\u00c448\u00dc;       /* -    AREA FOR DAT-OFF ASSIST LINKAGE CODE              */\n  void          *psadatof;           /* -         REAL STORAGE ADDRESS OF THE DAT-OFF          */\n  int            psadatln;           /* -        LENGTH OF THE DAT-OFF INDEX TABLE             */\n  union \u00e4\n    unsigned char  _psarv7e8\u00c44\u00dc; /* -          RESERVED FOR SYSTEM TRACE.       @G860PXK */\n    unsigned char  _psaff7e8\u00c44\u00dc; /* INITIALIZE FIELD PSARV7E8     @ZMC3284               */\n    \u00fc _psa_union30;\n  unsigned char  psatrace;           /* -      SYSTEM TRACE FLAGS.              @G860PXK       */\n  unsigned char  psarv7ed\u00c43\u00dc;        /* -      RESERVED FOR SYSTEM TRACE.           @PJC       */\n  void          *psatbvtr;           /* -         REAL ADDRESS OF SYSTEM TRACE BUFFER          */\n  void          *psatbvtv;           /* -         VIRTUAL ADDRESS CORRESPONDING TO             */\n  void          *psatrvt;            /* -  ADDRESS OF SYSTEM TRACE VECTOR                      */\n  void          *psatot;             /* -  ADDRESS OF SYSTEM TRACE OPERAND                     */\n  union \u00e4\n    struct \u00e4\n      double         _psaus2st;     /* START SECOND SET OF ASSIGNED     @G383PXU */\n      unsigned char  _filler36\u00c48\u00dc;\n      \u00fc _psa_struct30;\n    struct \u00e4\n      int            _psacdsae; /* CALLDISP REGISTER 14 SAVE AREA   @G383PXU */\n      int            _psacdsaf; /* CALLDISP REGISTER 15 SAVE AREA   @G383PXU */\n      int            _psacdsa0; /* CALLDISP REGISTER 0  SAVE AREA   @G383PXU */\n      int            _psacdsa1; /* CALLDISP REGISTER 1  SAVE AREA   @G383PXU */\n      \u00fc psacdsav;\n    \u00fc _psa_union31;\n  int            psagspsw;           /* GLOBAL SCHEDULE SYSTEM MASK SAVE @ZA63674              */\n  int            psagsrgs;           /* GLOBAL SCHEDULE REGISTER SAVE    @ZA63674              */\n  unsigned char  psarv818\u00c44\u00dc;        /* -     RESERVED                             @PAC        */\n  int            psasv01r;           /* IEAVTRG1 register 1 save area.       @PAA              */\n  int            psasv14r;           /* IEAVTRG1 register 14 save area.      @PAA              */\n  int            psaems2r;           /* -        REGISTER SAVE AREA                            */\n  struct \u00e4\n    int            _psatrgr0; /* -        TRACE REGISTER 0 SAVE AREA.      @G860PXH */\n    int            _psatrgr1; /* -        TRACE REGISTER 1 SAVE AREA.      @G860PXH */\n    int            _psatrgr2; /* -        TRACE REGISTER 2 SAVE AREA.      @G860PXH */\n    int            _psatrgr3; /* -        TRACE REGISTER 3 SAVE AREA.      @G860PXH */\n    int            _psatrgr4; /* -        TRACE REGISTER 4 SAVE AREA.      @G860PXH */\n    int            _psatrgr5; /* -        TRACE REGISTER 5 SAVE AREA.      @G860PXH */\n    int            _psatrgr6; /* -        TRACE REGISTER 6 SAVE AREA.      @G860PXH */\n    int            _psatrgr7; /* -        TRACE REGISTER 7 SAVE AREA.      @G860PXH */\n    int            _psatrgr8; /* -        TRACE REGISTER 8 SAVE AREA.      @G860PXH */\n    int            _psatrgr9; /* -        TRACE REGISTER 9 SAVE AREA.      @G860PXH */\n    int            _psatrgra; /* -        TRACE REGISTER 10 SAVE AREA.     @G860PXH */\n    int            _psatrgrb; /* -        TRACE REGISTER 11 SAVE AREA.     @G860PXH */\n    int            _psatrgrc; /* -        TRACE REGISTER 12 SAVE AREA.     @G860PXH */\n    int            _psatrgrd; /* -        TRACE REGISTER 13 SAVE AREA.     @G860PXH */\n    int            _psatrgre; /* -        TRACE REGISTER 14 SAVE AREA.     @G860PXH */\n    int            _psatrgrf; /* -        TRACE REGISTER 15 SAVE AREA.     @G860PXH */\n    \u00fc psatrsav;\n  unsigned char  psarv868\u00c456\u00dc;       /* -     RESERVED.                            @09C        */\n  unsigned char  psagsavh\u00c48\u00dc;        /* -     Register save area used by           @09C        */\n  union \u00e4\n    unsigned char  _psagsav\u00c464\u00dc;  /* -         REGISTER SAVE AREA USED BY   */\n    unsigned char  _psaff8a8\u00c464\u00dc; /* INITIALIZE FIELD PSAGSAV      @ZMC3284 */\n    \u00fc _psa_union32;\n  int            psascrg1;           /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psascrg2;           /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psagpreg\u00c43\u00dc;        /* -       REGISTER SAVE AREA FOR SVC FLIH                */\n  int            psarsreg;           /* -        RESTART FLIH REGISTER SAVE       @G860PXK     */\n  int            psapcgr8;           /* -        PROGRAM FLIH REGISTER 8 SAVE AREA             */\n  int            psapcgr9;           /* -        PROGRAM FLIH REGISTER 9 SAVE AREA             */\n  struct \u00e4\n    int            _psapcgra; /* -        PROGRAM FLIH REGISTER 10 SAVE AREA */\n    int            _psapcgrb; /* -        PROGRAM FLIH REGISTER 11 SAVE AREA */\n    \u00fc psapcgab;\n  struct \u00e4\n    int            _psalkr0;  /* -        IEAVELK REGISTER 0 SAVE AREA     @G860PXK */\n    int            _psalkr1;  /* -        IEAVELK REGISTER 1 SAVE AREA     @G860PXK */\n    int            _psalkr2;  /* -        IEAVELK REGISTER 2 SAVE AREA     @G860PXK */\n    int            _psalkr3;  /* -        IEAVELK REGISTER 3 SAVE AREA     @G860PXK */\n    int            _psalkr4;  /* -        IEAVELK REGISTER 4 SAVE AREA     @G860PXK */\n    int            _psalkr5;  /* -        IEAVELK REGISTER 5 SAVE AREA     @G860PXK */\n    int            _psalkr6;  /* -        IEAVELK REGISTER 6 SAVE AREA     @G860PXK */\n    int            _psalkr7;  /* -        IEAVELK REGISTER 7 SAVE AREA     @G860PXK */\n    int            _psalkr8;  /* -        IEAVELK REGISTER 8 SAVE AREA     @G860PXK */\n    int            _psalkr9;  /* -        IEAVELK REGISTER 9 SAVE AREA     @G860PXK */\n    int            _psalkr10; /* -        IEAVELK REGISTER 10 SAVE AREA    @G860PXK */\n    int            _psalkr11; /* -        IEAVELK REGISTER 11 SAVE AREA    @G860PXK */\n    int            _psalkr12; /* -        IEAVELK REGISTER 12 SAVE AREA    @G860PXK */\n    int            _psalkr13; /* -        IEAVELK REGISTER 13 SAVE AREA    @G860PXK */\n    int            _psalkr14; /* -        IEAVELK REGISTER 14 SAVE AREA    @G860PXK */\n    int            _psalkr15; /* -        IEAVELK REGISTER 15 SAVE AREA    @G860PXK */\n    \u00fc psalksa;\n  union \u00e4\n    unsigned char  _psaslsa\u00c472\u00dc;  /* -         SINGLE LEVEL SAVE AREA USED BY DISABLED */\n    unsigned char  _psaff950\u00c472\u00dc; /* INITIALIZE FIELD PSASLSA       @ZMC3284           */\n    \u00fc _psa_union33;\n  union \u00e4\n    unsigned char  _psajstsa\u00c464\u00dc; /* -     SAVE AREA FOR JOB STEP TIMING        @H1A */\n    unsigned char  _psaff998\u00c464\u00dc; /* INITIALIZE FIELD PSAJSTSA         @H1A          */\n    \u00fc _psa_union34;\n  union \u00e4\n    struct \u00e4\n      double         _psaus2nd;      /* END SECOND SET OF ASSIGNED           @H1M */\n      unsigned char  _filler37\u00c456\u00dc;\n      \u00fc _psa_struct31;\n    struct \u00e4\n      int            _psaslkr0; /* -        IEAVESLK REGISTER 0 SAVE AREA        @P4A */\n      int            _psaslkr1; /* -        IEAVESLK REGISTER 1 SAVE AREA        @P4A */\n      int            _psaslkr2; /* -        IEAVESLK REGISTER 2 SAVE AREA        @P4A */\n      int            _psaslkr3; /* -        IEAVESLK REGISTER 3 SAVE AREA        @P4A */\n      int            _psaslkr4; /* -        IEAVESLK REGISTER 4 SAVE AREA        @P4A */\n      int            _psaslkr5; /* -        IEAVESLK REGISTER 5 SAVE AREA        @P4A */\n      int            _psaslkr6; /* -        IEAVESLK REGISTER 6 SAVE AREA        @P4A */\n      int            _psaslkr7; /* -        IEAVESLK REGISTER 7 SAVE AREA        @P4A */\n      int            _psaslkr8; /* -        IEAVESLK REGISTER 8 SAVE AREA        @P4A */\n      int            _psaslkr9; /* -        IEAVESLK REGISTER 9 SAVE AREA        @P4A */\n      int            _psaslkra; /* -        IEAVESLK REGISTER 10 SAVE AREA       @P4A */\n      int            _psaslkrb; /* -        IEAVESLK REGISTER 11 SAVE AREA       @P4A */\n      int            _psaslkrc; /* -        IEAVESLK REGISTER 12 SAVE AREA       @P4A */\n      int            _psaslkrd; /* -        IEAVESLK REGISTER 13 SAVE AREA       @P4A */\n      int            _psaslkre; /* -        IEAVESLK REGISTER 14 SAVE AREA       @P4A */\n      int            _psaslkrf; /* -        IEAVESLK REGISTER 15 SAVE AREA       @P4A */\n      \u00fc psaslksa;\n    \u00fc _psa_union35;\n  unsigned char  psarva18\u00c436\u00dc;       /* -    RESERVED                             @P4A         */\n  unsigned char  psascsav\u00c464\u00dc;       /* IEAVESC0 save area                   @P7A              */\n  unsigned char  psasflgs;           /* Schedule flags                       @P8A              */\n  unsigned char  psamiscf;           /* Miscellaneous flags                  @LVA              */\n  unsigned char  psarva7e\u00c42\u00dc;        /* Reserved for future use - SC1C5      @LVC              */\n  unsigned char  psarva80\u00c4188\u00dc;      /* -    RESERVED                             @P8C         */\n  void          *psagsch7;           /* -  ENABLED GLOBAL SCHEDULE ENTRY                       */\n  void          *psagsch8;           /* -  DISABLED GLOBAL SCHEDULE ENTRY                      */\n  void          *psalsch1;           /* -  ENABLED SCHEDULE ENTRY POINT                        */\n  void          *psalsch2;           /* -  DISABLED SCHEDULE ENTRY POINT                       */\n  void          *psasvt;             /* -  ADDRESS OF SUPERVISOR VECTOR TABLE                  */\n  void          *psasvtx;            /* Address of Supervisor Vector Table   @LNC              */\n  unsigned char  psarvb54\u00c444\u00dc;       /* -     Reserved                             @LNC        */\n  unsigned char  psastak\u00c41112\u00dc;      /* -   NORMAL FRR STACK                     @LVC          */\n  unsigned char  psarvfd8\u00c440\u00dc;       /* -    RESERVED FOR EXPANSION OF            @PJC         */\n  double         psaend;             /* -           END OF PSA            (MDC612)   @G383P9A  */\n  \u00fc;\n\n#define flcrnpsw                   _psa_union1.flcippsw._flcrnpsw\n#define flceippsw                  _psa_union1.flcesame._flceippsw\n#define flcropsw                   _psa_union2.flciccw1._flcropsw\n#define flceiccw1                  _psa_union2._flceiccw1\n#define flccvt                     _psa_union3.flciccw2._flccvt\n#define flceiccw2                  _psa_union3._flceiccw2\n#define flceopsw                   _psa_union4._psa_struct1._flceopsw\n#define flcsopsw                   _psa_union4._psa_struct1._flcsopsw\n#define flcpopsw                   _psa_union4._psa_struct1._flcpopsw\n#define flcmopsw                   _psa_union4._psa_struct1._flcmopsw\n#define flciopsw                   _psa_union4._psa_struct1._flciopsw\n#define flccvt2                    _psa_union4._psa_struct1.flccvt64._flccvt2\n#define flcenpsw                   _psa_union4._psa_struct1._flcenpsw\n#define flcsnpsw                   _psa_union4._psa_struct1._flcsnpsw\n#define flcpnpsw                   _psa_union4._psa_struct1._flcpnpsw\n#define flcmnpsw                   _psa_union4._psa_struct1._flcmnpsw\n#define flcinpsw                   _psa_union4._psa_struct1._flcinpsw\n#define flcer018                   _psa_union4._flcer018\n#define psaeparm                   _psa_union5._psaeparm\n#define flceeparm                  _psa_union5._flceeparm\n#define psaspad                    _psa_union6.psaeepsw._psaspad\n#define flceicod                   _psa_union6.psaeepsw._flceicod\n#define flcecpuad                  _psa_union6._psa_struct2._flcecpuad\n#define flceeicode                 _psa_union6._psa_struct2._flceeicode\n#define flcsvilc                   _psa_union7.psaespsw._flcsvilc\n#define flcsvcn                    _psa_union7.psaespsw._flcsvcn\n#define flcesdata                  _psa_union7._flcesdata\n#define flcesdatabyte0             _psa_union7._psa_struct3._flcesdatabyte0\n#define flcesilc                   _psa_union7._psa_struct4._flcesilc\n#define flcesicode                 _psa_union7._psa_struct4._flcesicode\n#define flcpiilc                   _psa_union8.psaeppsw._flcpiilc\n#define psaeecod                   _psa_union8.psaeppsw.flcpicod._psaeecod\n#define psapicod                   _psa_union8.psaeppsw.flcpicod._psapicod\n#define flcteab3                   _psa_union8.psaeppsw.flctea.flcdxc._flcteab3\n#define flcepdata                  _psa_union8._psa_struct5._flcepdata\n#define flcepdatabyte0             _psa_union8._psa_struct6._flcepdatabyte0\n#define flcepilc                   _psa_union8._psa_struct7._flcepilc\n#define flcepicode                 _psa_union8._psa_struct7._flcepicode\n#define flcepicode0                _psa_union8._psa_struct8._flcepicode0\n#define flcepicode1                _psa_union8._psa_struct8._flcepicode1\n#define flcepiinformation          _psa_union8._psa_struct8._flcepiinformation\n#define flcedxc                    _psa_union8._psa_struct9._flcedxc\n#define flcemcnum                  _psa_union9._flcemcnum\n#define flcmcnum                   _psa_union9._psa_struct10._flcmcnum\n#define flcpercd                   _psa_union10._psa_struct11._flcpercd\n#define flcatmid                   _psa_union10._psa_struct11._flcatmid\n#define flcepercode                _psa_union10._flcepercode\n#define flcepercode0               _psa_union10._psa_struct12._flcepercode0\n#define flceperatmid               _psa_union10._psa_struct12._flceperatmid\n#define flcper                     _psa_union11._psa_struct13._flcper\n#define flcmtrcd                   _psa_union11._psa_struct13._flcmtrcd\n#define flceper                    _psa_union11._flceper\n#define flceperw0                  _psa_union11._psa_struct14._flceperw0\n#define flceperw1                  _psa_union11._psa_struct14._flceperw1\n#define flctearn                   _psa_union12._flctearn\n#define flceeaid                   _psa_union12._flceeaid\n#define flcperrn                   _psa_union13._flcperrn\n#define flceperaid                 _psa_union13._flceperaid\n#define flcarch                    _psa_union14._flcarch\n#define flceamdid                  _psa_union14._flceamdid\n#define psampl                     _psa_union15._psampl\n#define flcempl                    _psa_union15._flcempl\n#define flceteid                   _psa_union16._flceteid\n#define flcetea                    _psa_union16._flcetea\n#define flcetea7                   _psa_union16._psa_struct15._flcetea7\n#define flceteasninfo              _psa_union16._flceteasninfo\n#define flceteasn                  _psa_union16._psa_struct16._flceteasn\n#define flcetepcinfo               _psa_union16._flcetepcinfo\n#define flcepcnum                  _psa_union16._psa_struct17._flcepcnum\n#define flcsid                     _psa_union17.flciocdp._flcsid\n#define flciofp                    _psa_union17.flciocdp._flciofp\n#define flcessid                   _psa_union17._psa_struct18._flcessid\n#define flceiointparm              _psa_union17._psa_struct18._flceiointparm\n#define flcfacl0                   _psa_union18.flcfacl._flcfacl0\n#define flcfacl1                   _psa_union18.flcfacl._flcfacl1\n#define flcfacl2                   _psa_union18.flcfacl._flcfacl2\n#define flcfacl3                   _psa_union18.flcfacl._flcfacl3\n#define flcfacl4                   _psa_union18.flcfacl._flcfacl4\n#define flcfacl5                   _psa_union18.flcfacl._flcfacl5\n#define flcfacl6                   _psa_union18.flcfacl._flcfacl6\n#define flcfacl7                   _psa_union18.flcfacl._flcfacl7\n#define flcefacilitieslist         _psa_union18._flcefacilitieslist\n#define flcefacilitieslistbyte0    _psa_union18._psa_struct19._flcefacilitieslistbyte0\n#define flcefacilitieslistbyte1    _psa_union18._psa_struct19._flcefacilitieslistbyte1\n#define flcefacilitieslistbyte2    _psa_union18._psa_struct19._flcefacilitieslistbyte2\n#define flcefacilitieslistbyte3    _psa_union18._psa_struct19._flcefacilitieslistbyte3\n#define flcefacilitieslistbyte4    _psa_union18._psa_struct19._flcefacilitieslistbyte4\n#define flcefacilitieslistbyte5    _psa_union18._psa_struct19._flcefacilitieslistbyte5\n#define flcefacilitieslistbyte6    _psa_union18._psa_struct19._flcefacilitieslistbyte6\n#define flcefacilitieslistbyte7    _psa_union18._psa_struct19._flcefacilitieslistbyte7\n#define flcefacilitieslistbyte8    _psa_union18._psa_struct19._flcefacilitieslistbyte8\n#define flcefacilitieslistbyte9    _psa_union18._psa_struct19._flcefacilitieslistbyte9\n#define flcefacilitieslistbytea    _psa_union18._psa_struct19._flcefacilitieslistbytea\n#define flcefacilitieslistbyteb    _psa_union18._psa_struct19._flcefacilitieslistbyteb\n#define flcefacilitieslistbytec    _psa_union18._psa_struct19._flcefacilitieslistbytec\n#define flcefacilitieslistbyted    _psa_union18._psa_struct19._flcefacilitieslistbyted\n#define flcefacilitieslistbytee    _psa_union18._psa_struct19._flcefacilitieslistbytee\n#define flcefacilitieslistbytef    _psa_union18._psa_struct19._flcefacilitieslistbytef\n#define flcctsa                    _psa_union19._psa_struct20._flcctsa\n#define flcccsa                    _psa_union19._psa_struct20._flcccsa\n#define flcer0d8                   _psa_union19._psa_struct21._flcer0d8\n#define flcecpusignals             _psa_union19._psa_struct21._flcecpusignals\n#define flcmcic                    _psa_union20._flcmcic\n#define flcemcic                   _psa_union20._flcemcic\n#define flcfsa                     _psa_union21._psa_struct22._flcfsa\n#define flcefsa                    _psa_union21._flcefsa\n#define flcfla                     _psa_union22._flcfla\n#define flcer100                   _psa_union22._flcer100\n#define flcrv110                   _psa_union23._flcrv110\n#define flcebea                    _psa_union23._psa_struct23._flcebea\n#define flcer118                   _psa_union23._psa_struct23._flcer118\n#define flcarsav                   _psa_union24._flcarsav\n#define flceropsw                  _psa_union24._psa_struct24._flceropsw\n#define flceeopsw                  _psa_union24._psa_struct24._flceeopsw\n#define flcesopsw                  _psa_union24._psa_struct24._flcesopsw\n#define flcepopsw                  _psa_union24._psa_struct24._flcepopsw\n#define flcfpsav                   _psa_union25._flcfpsav\n#define flcemopsw                  _psa_union25._psa_struct25._flcemopsw\n#define flceiopsw                  _psa_union25._psa_struct25._flceiopsw\n#define flcgrsav                   _psa_union26._flcgrsav\n#define flcer180                   _psa_union26._psa_struct26._flcer180\n#define flcernpsw                  _psa_union26._psa_struct26._flcernpsw\n#define flceenpsw                  _psa_union26._psa_struct26._flceenpsw\n#define flccrsav                   _psa_union27._flccrsav\n#define flcesnpsw                  _psa_union27._psa_struct27._flcesnpsw\n#define flcepnpsw                  _psa_union27._psa_struct27._flcepnpsw\n#define flcemnpsw                  _psa_union27._psa_struct27._flcemnpsw\n#define flceinpsw                  _psa_union27._psa_struct27._flceinpsw\n#define psapsa                     flchdend._psapsa\n#define psacpupa                   flchdend._psacpupa\n#define psacpula                   flchdend._psacpula\n#define psasup1                    psasuper._psasup1\n#define psasup2                    psasuper._psasup2\n#define psasup3                    psasuper._psasup3\n#define psasup4                    psasuper._psasup4\n#define psaprocclass               _psa_union28._psaprocclass\n#define psa_bylpar_procclass       _psa_union28._psa_bylpar_procclass\n#define psaprocclass_byte0         _psa_union28._psa_struct28._psaprocclass_byte0\n#define psaprocclass_byte1         _psa_union28._psa_struct28._psaprocclass_byte1\n#define psa_bylpar_procclass_byte0 _psa_union28._psa_struct29._psa_bylpar_procclass_byte0\n#define psa_bylpar_procclass_byte1 _psa_union28._psa_struct29._psa_bylpar_procclass_byte1\n#define psadispl                   psaclht.psaclht1._psadispl\n#define psaasml                    psaclht.psaclht1._psaasml\n#define psasalcl                   psaclht.psaclht1._psasalcl\n#define psaiossl                   psaclht.psaclht1._psaiossl\n#define psarsmdl                   psaclht.psaclht1._psarsmdl\n#define psaiosul                   psaclht.psaclht1._psaiosul\n#define psarvlk1                   psaclht.psaclht1._psarvlk1\n#define psarv29c                   psaclht.psaclht1._psarv29c\n#define psarv2a0                   psaclht.psaclht1._psarv2a0\n#define psatpacl                   psaclht.psaclht1._psatpacl\n#define psaoptl                    psaclht.psaclht1._psaoptl\n#define psarsmgl                   psaclht.psaclht1._psarsmgl\n#define psavfixl                   psaclht.psaclht1._psavfixl\n#define psaasmgl                   psaclht.psaclht1._psaasmgl\n#define psarsmsl                   psaclht.psaclht1._psarsmsl\n#define psarsmxl                   psaclht.psaclht1._psarsmxl\n#define psarsmal                   psaclht.psaclht1._psarsmal\n#define psavpagl                   psaclht.psaclht1._psavpagl\n#define psarsmcl                   psaclht.psaclht1._psarsmcl\n#define psarvlk2                   psaclht.psaclht1._psarvlk2\n#define psarsml                    psaclht.psaclht2._psarsml\n#define psatrcel                   psaclht.psaclht2._psatrcel\n#define psaiosl                    psaclht.psaclht2._psaiosl\n#define psarvlk4                   psaclht.psaclht2._psarvlk4\n#define psacpul                    psaclht.psaclht3._psacpul\n#define psarvlk5                   psaclht.psaclht3._psarvlk5\n#define psacmsl                    psaclht.psaclht4._psacmsl\n#define psalocal                   psaclht.psaclht4._psalocal\n#define psarvlk6                   psaclht.psaclht4._psarvlk6\n#define psaclhs1                   psahlhi.psaclhs._psaclhs1\n#define psaclhs2                   psahlhi.psaclhs._psaclhs2\n#define psaclhs3                   psahlhi.psaclhs._psaclhs3\n#define psaclhs4                   psahlhi.psaclhs._psaclhs4\n#define psacstk                    psarsvt.psarsvte._psacstk\n#define psanstk                    psarsvt.psarsvte._psanstk\n#define psasstk                    psarsvt.psarsvte._psasstk\n#define psassav                    psarsvt.psarsvte._psassav\n#define psamstk                    psarsvt.psarsvte._psamstk\n#define psamsav                    psarsvt.psarsvte._psamsav\n#define psapstk                    psarsvt.psarsvte._psapstk\n#define psapsav                    psarsvt.psarsvte._psapsav\n#define psaestk1                   psarsvt.psarsvte._psaestk1\n#define psaesav1                   psarsvt.psarsvte._psaesav1\n#define psaestk2                   psarsvt.psarsvte._psaestk2\n#define psaesav2                   psarsvt.psarsvte._psaesav2\n#define psaestk3                   psarsvt.psarsvte._psaestk3\n#define psaesav3                   psarsvt.psarsvte._psaesav3\n#define psarstk                    psarsvt.psarsvte._psarstk\n#define psarsav                    psarsvt.psarsvte._psarsav\n#define psapcfb1                   psapcfun._psapcfb1\n#define psapcfb2                   psapcfun._psapcfb2\n#define psapcfb3                   psapcfun._psapcfb3\n#define psapcfb4                   psapcfun._psapcfb4\n#define psamflgs                   psamodew._psamflgs\n#define psamodeh                   psamodew._psamodeh\n#define psamode                    psamodew._psamode\n#define psafzero                   psadzero._psafzero\n#define psalheb0                   psaclhse._psalheb0\n#define psalheb1                   psaclhse._psalheb1\n#define psalheb2                   psaclhse._psalheb2\n#define psalheb3                   psaclhse._psalheb3\n#define psatkn                     psastke._psatkn\n#define psaasd                     psastke._psaasd\n#define psasel                     psastke._psasel\n#define psadtsav                   _psa_union29._psadtsav\n#define psaff6c0                   _psa_union29._psaff6c0\n#define psadsins                   psadexms.psadcr3._psadsins\n#define psadpkm                    psadexms.psadcr3.psadpksa._psadpkm\n#define psadsas                    psadexms.psadcr3.psadpksa._psadsas\n#define psadpins                   psadexms.psadcr4._psadpins\n#define psadax                     psadexms.psadcr4.psadaxpa._psadax\n#define psadpas                    psadexms.psadcr4.psadaxpa._psadpas\n#define psarv7e8                   _psa_union30._psarv7e8\n#define psaff7e8                   _psa_union30._psaff7e8\n#define psaus2st                   _psa_union31._psa_struct30._psaus2st\n#define psacdsae                   _psa_union31.psacdsav._psacdsae\n#define psacdsaf                   _psa_union31.psacdsav._psacdsaf\n#define psacdsa0                   _psa_union31.psacdsav._psacdsa0\n#define psacdsa1                   _psa_union31.psacdsav._psacdsa1\n#define psatrgr0                   psatrsav._psatrgr0\n#define psatrgr1                   psatrsav._psatrgr1\n#define psatrgr2                   psatrsav._psatrgr2\n#define psatrgr3                   psatrsav._psatrgr3\n#define psatrgr4                   psatrsav._psatrgr4\n#define psatrgr5                   psatrsav._psatrgr5\n#define psatrgr6                   psatrsav._psatrgr6\n#define psatrgr7                   psatrsav._psatrgr7\n#define psatrgr8                   psatrsav._psatrgr8\n#define psatrgr9                   psatrsav._psatrgr9\n#define psatrgra                   psatrsav._psatrgra\n#define psatrgrb                   psatrsav._psatrgrb\n#define psatrgrc                   psatrsav._psatrgrc\n#define psatrgrd                   psatrsav._psatrgrd\n#define psatrgre                   psatrsav._psatrgre\n#define psatrgrf                   psatrsav._psatrgrf\n#define psagsav                    _psa_union32._psagsav\n#define psaff8a8                   _psa_union32._psaff8a8\n#define psapcgra                   psapcgab._psapcgra\n#define psapcgrb                   psapcgab._psapcgrb\n#define psalkr0                    psalksa._psalkr0\n#define psalkr1                    psalksa._psalkr1\n#define psalkr2                    psalksa._psalkr2\n#define psalkr3                    psalksa._psalkr3\n#define psalkr4                    psalksa._psalkr4\n#define psalkr5                    psalksa._psalkr5\n#define psalkr6                    psalksa._psalkr6\n#define psalkr7                    psalksa._psalkr7\n#define psalkr8                    psalksa._psalkr8\n#define psalkr9                    psalksa._psalkr9\n#define psalkr10                   psalksa._psalkr10\n#define psalkr11                   psalksa._psalkr11\n#define psalkr12                   psalksa._psalkr12\n#define psalkr13                   psalksa._psalkr13\n#define psalkr14                   psalksa._psalkr14\n#define psalkr15                   psalksa._psalkr15\n#define psaslsa                    _psa_union33._psaslsa\n#define psaff950                   _psa_union33._psaff950\n#define psajstsa                   _psa_union34._psajstsa\n#define psaff998                   _psa_union34._psaff998\n#define psaus2nd                   _psa_union35._psa_struct31._psaus2nd\n#define psaslkr0                   _psa_union35.psaslksa._psaslkr0\n#define psaslkr1                   _psa_union35.psaslksa._psaslkr1\n#define psaslkr2                   _psa_union35.psaslksa._psaslkr2\n#define psaslkr3                   _psa_union35.psaslksa._psaslkr3\n#define psaslkr4                   _psa_union35.psaslksa._psaslkr4\n#define psaslkr5                   _psa_union35.psaslksa._psaslkr5\n#define psaslkr6                   _psa_union35.psaslksa._psaslkr6\n#define psaslkr7                   _psa_union35.psaslksa._psaslkr7\n#define psaslkr8                   _psa_union35.psaslksa._psaslkr8\n#define psaslkr9                   _psa_union35.psaslksa._psaslkr9\n#define psaslkra                   _psa_union35.psaslksa._psaslkra\n#define psaslkrb                   _psa_union35.psaslksa._psaslkrb\n#define psaslkrc                   _psa_union35.psaslksa._psaslkrc\n#define psaslkrd                   _psa_union35.psaslksa._psaslkrd\n#define psaslkre                   _psa_union35.psaslksa._psaslkre\n#define psaslkrf                   _psa_union35.psaslksa._psaslkrf\n\n/* Values for field \"flcsvilc\" */\n#define flcsilcb                        0x07       /* -        SIGNIFICANT BITS IN ILC FIELD - LAST      */\n\n/* Values for field \"flcesilc\" */\n#define flcesilcb                       0x07       /* FLCE 89x: Significant bits in ILC. Last bit        */\n\n/* Values for field \"flcpiilc\" */\n#define flcpilcb                        0x07       /* -        SIGNIFICANT BITS IN ILC FIELD - LAST      */\n\n/* Values for field \"psapicod\" */\n#define psapiper                        0x80       /* -        PER INTERRUPT OCCURRED             MDC089 */\n#define psapimc                         0x40       /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090 */\n#define psapipc                         0x3F       /* -        AN UNSOLICITED PROGRAM CHECK HAS          */\n\n/* Values for field \"_filler16\" */\n#define flcteaxm                        0x80       /* -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY      */\n\n/* Values for field \"flcteab3\" */\n#define flcsopi                         0x04       /* -      Suppression on protection flag       @LQA   */\n#define flctstdp                        0x00       /* -      IF 1, THE PRIMARY STD WAS USED.      @L8A   */\n#define flctstda                        0x01       /* -      IF 1, THE STD WAS AR QUALIFIED.      @L8A   */\n#define flctstds                        0x02       /* -      IF 1, THE SECONDARY STD WAS USED.    @L8A   */\n#define flctstdh                        0x03       /* -      IF 1, THE HOME STD WAS USED.         @L8A   */\n#define flcteacl                        0x7FFFF000 /* Mask to leave only TEA address       @LSA          */\n\n/* Values for field \"flcepilc\" */\n#define flcepilcb                       0x07       /* FLCE 8Dx: Significant bits in ILC. Last bit        */\n\n/* Values for field \"flcepicode1\" */\n#define flcepiper                       0x80       /* FLCE 8Fx: PER interruption code                    */\n#define flcepimc                        0x40       /* FLCE 8Fx: Monitor Call interruption code           */\n#define flcepipc                        0x3F       /* FLCE 8Fx: An unsolicited program interruption      */\n\n/* Values for field \"flcatmid\" */\n#define flcpswb4                        0x80       /* PSW.4 part of ATMID                  @LSA          */\n\n/* Values for field \"flcepercode0\" */\n#define flcepersb                       0x80       /* FLCE 96x: PER successful branch event              */\n#define flceperif                       0x40       /* FLCE 96x: PER instruction fetch event              */\n#define flcepersa                       0x20       /* FLCE 96x: PER storage alteration event             */\n#define flcepersar                      0x08       /* FLCE 96x: PER storage alteration using real        */\n\n/* Values for field \"flceperatmid\" */\n#define flceperpsw4                     0x80       /* FLCE 97x: PER PSW bit 4                            */\n#define flceperatmidvalid               0x40       /* FLCE 97x: When 1, the ATMID bits are valid         */\n#define flceperpsw32                    0x20       /* FLCE 97x: PER PSW bit 32                           */\n#define flceperpsw5                     0x10       /* FLCE 97x: PER PSW bit 5                            */\n#define flceperpsw16                    0x08       /* FLCE 97x: PER PSW bit 16                           */\n#define flceperpsw17                    0x04       /* FLCE 97x: PER PSW bit 17                           */\n#define flceperasceid                   0x03       /* FLCE 97x: PER ASCE identification. If a            */\n\n/* Values for field \"flceeaid\" */\n#define flceeaid0                       0x80       /* Bit 0 of EAID. Zero                                */\n#define flceeaid1                       0x40       /* Bit 1 of EAID. Zero                                */\n#define flceeaid2                       0x20       /* Bit 2 of EAID. Set only when PIC 2C for PTI        */\n#define flceeaid3                       0x10       /* Bit 3 of EAID. Set only when PIC 2C for SSAIR      */\n#define flceeaid_arnum                  0x0F       /* AR number. Zero when Bit 1 or Bit 2 is set         */\n\n/* Values for field \"flcarch\" */\n#define psazarch                        0x01       /* -      z/Architecture                       @LSA   */\n#define psaesame                        0x01       /* -      z/Architecture                       @LSA   */\n\n/* Values for field \"flceamdid\" */\n#define flceloeme                       0x01       /* Logout is Z/Architecture                           */\n\n/* Values for field \"flcetea7\" */\n#define flcepealc                       0x08       /* FLCE AFx: Protection exception due to              */\n#define flcesopi                        0x04       /* FLCE AFx: Suppress on protection indication        */\n#define flceteastd                      0x03       /* FLCE AFx: Segment table designation for TEA:       */\n\n/* Values for field \"flcfacl0\" */\n#define flcfn3                          0x80       /* -     N3 installed                         @LVA    */\n#define flcfzari                        0x40       /* -     z/Architecture installed             @LVA    */\n#define flcfzara                        0x20       /* -     z/Architecture active                @LVA    */\n#define flcfaslx                        0x02       /* -     ASN & LX reuse facility installed    @LVA    */\n\n/* Values for field \"flcfacl1\" */\n#define flcfsrs                         0x40       /* Sense-running-status                 @LZA          */\n#define flcfsske                        0x20       /* Cond. SSKE instruction installed     @0AA          */\n#define flcfctop                        0x10       /* STSI-enhancement                     @LYA          */\n\n/* Values for field \"flcfacl2\" */\n#define flcfetf2                        0x80       /* Extended Translation facility 2      @LVA          */\n#define flcfcrya                        0x40       /* Cryptographic assist                 @LVA          */\n#define flcfld                          0x20       /* Long Displacement facility           @LVA          */\n#define flcfldhp                        0x10       /* Long Displacement High Performance   @LVA          */\n#define flcfhmas                        0x08       /* HFP Multiply Add/Subtract            @LVA          */\n#define flcfeimm                        0x04       /* Extended immediate when z/Arch       @LVA          */\n#define flcfetf3                        0x02       /* Extended Translation Facility 3 when @LVA          */\n#define flcfhun                         0x01       /* HFP unnormalized extension           @LVA          */\n\n/* Values for field \"flcfacl3\" */\n#define flcfet2e                        0x80       /* ETF2-enhancement                   031215          */\n#define flcfstkf                        0x40       /* STCKF-enhancement                    @PIA          */\n#define flcfet3e                        0x02       /* ETF3-enhancement                   040512          */\n#define flcfect                         0x01       /* ECT-facility                         @LXA          */\n\n/* Values for field \"flcfacl4\" */\n#define flcfcssf                        0x80       /* Compare-and-swap-and-store           @LXA          */\n#define flcfcsf2                        0x40       /* Compare-and-swap-and-store 2         @LXA          */\n\n/* Values for field \"flcefacilitieslistbyte0\" */\n#define flcezarchn3                     0x80       /* Instructions marked \"N3\" in the instruction        */\n#define flceesamen3                     0x80       /* Instructions marked \"N3\" in the instruction        */\n#define flcezarchinstalled              0x40       /* The z/Architecture mode is installed on            */\n#define flceesameinstalled              0x40       /* The z/Architecture mode is installed on            */\n#define flcezarch                       0x20       /* The z/Architecture mode is active on the CPU       */\n#define flceesame                       0x20       /* The z/Architecture mode is active on the CPU       */\n#define flceidteinstalled               0x10       /* IDTE is installed                                  */\n#define flceidteclearingcombinedsegment 0x08       /* IDTE does clearing of                              */\n#define flceidteclearingcombinedregion  0x04       /* IDTE does clearing of                              */\n#define flceasnandlxreuseinstalled      0x02       /* The ASN and LX reuse facility is                   */\n#define flcestfle                       0x01       /* STFLE instruction is available                     */\n\n/* Values for field \"flcefacilitieslistbyte1\" */\n#define flcesenserunningstatus          0x40       /* sense-running-status facility                      */\n#define flcecondsskeinstalled           0x20       /* The conditional SSKE instruction is                */\n#define flceconfigurationtopology       0x10       /* STSI-enhancement for configuration                 */\n\n/* Values for field \"flcefacilitieslistbyte2\" */\n#define flceetf2                        0x80       /* Extended translation facility 2 is present         */\n#define flcecryptoassist                0x40       /* The cryptographic assist is present                */\n#define flcemessagesecurityassist       0x40       /* The message security assist is                     */\n#define flcelongdisplacement            0x20       /* The long displacement facility is                  */\n#define flcelongdisplacementhp          0x10       /* The long displacement facility has                 */\n#define flcehfpmas                      0x08       /* The HFP Multiply add/subtract facility is          */\n#define flceextendedimmediate           0x04       /* The extended immediate facility is                 */\n#define flceetf3                        0x02       /* The extended translaction facility 3 is            */\n#define flcehfpunnormextension          0x01       /* The HFP unnormalized extension                     */\n\n/* Values for field \"flcefacilitieslistbyte3\" */\n#define flceetf2e                       0x80       /* ETF2 enhancement is present 031215                 */\n#define flcestckf                       0x40       /* STCKF enhancement is present                       */\n#define flceetf3e                       0x02       /* ETF3 enhancement is present 040512                 */\n#define flceectf                        0x01       /* Extract Cpu Time facility                          */\n\n/* Values for field \"flcefacilitieslistbyte4\" */\n#define flcecssf                        0x80       /* Compare-and-swap-and-store facility                */\n#define flcecssf2                       0x40       /* Compare-and-swap-and-store facility 2              */\n\n/* Values for field \"flcecpusignals\" */\n#define flcewarningtrack                0x80       /* Warning track has occurred                         */\n\n/* Values for field \"flceinpsw\" */\n#define flcesame_len                    0x200\n#define bit0                            0x80\n#define bit1                            0x40\n#define bit2                            0x20\n#define bit3                            0x10\n#define bit4                            0x08\n#define bit5                            0x04\n#define bit6                            0x02\n#define bit7                            0x01\n\n/* Values for field \"psasup1\" */\n#define psaio                           0x80       /* -        I/O FLIH                                  */\n#define psasvc                          0x40       /* -        SVC FLIH                                  */\n#define psaext                          0x20       /* -        EXTERNAL FLIH                             */\n#define psapi                           0x10       /* -        PROGRAM CHECK FLIH                        */\n#define psalock                         0x08       /* -        LOCK ROUTINE                              */\n#define psadisp                         0x04       /* -        DISPATCHER                                */\n#define psatctl                         0x02       /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A */\n#define psatype6                        0x01       /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A */\n\n/* Values for field \"psasup2\" */\n#define psaipcri                        0x80       /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE   */\n#define psasvcr                         0x40       /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227 */\n#define psasvcrr                        0x20       /* -        SVC RECOVERY RECURSION INDICATOR.         */\n#define psaacr                          0x04       /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN    */\n#define psartm                          0x02       /* -        RECOVERY TERMINATION MONITOR (RTM) IN     */\n#define psalcr                          0x01       /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C */\n\n/* Values for field \"psasup3\" */\n#define psaiosup                        0x80       /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS   */\n#define psaspr                          0x10       /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995 */\n#define psaesta                         0x08       /* -        SVC 60 RECOVERY ROUTINE ACTIVE            */\n#define psarsm                          0x04       /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR    */\n#define psaulcms                        0x02       /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR       */\n#define psaslip                         0x01       /* -        IEAVTSLP RECURSION CONTROL BIT            */\n\n/* Values for field \"psasup4\" */\n#define psaldwt                         0x80       /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC */\n#define psasmf                          0x40       /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB */\n#define psaesar                         0x20       /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C */\n#define psamch                          0x10       /* -        Machine Check Handler is active.     @PKA */\n\n/* Values for field \"psaprocclass_byte1\" */\n#define psaprocclass_cp                 0x00       /* Standard CP. 0 is offset to SWUQ     @H4A          */\n#define psaprocclass_zaap               0x02       /* zAAP.                                @H4A          */\n#define psaprocclass_ziip               0x04       /* zIIP.                                @H5A          */\n#define psaprocclass_sup                0x04       /* zIIP.                                @H4A          */\n\n/* Values for field \"psaptype\" */\n#define psaifa                          0x40       /* Indicates Special Processor          @H3C          */\n#define psa_bylpar_zaap                 0x40       /* @H5A                                               */\n#define psa_bylpar_ifa                  0x40       /* @H5A                                               */\n#define psaifads                        0x20       /* zAAP (IFA) that is different                       */\n#define psadscrp                        0x10       /* Discretionary Processor              @LYA          */\n#define psaziip                         0x08       /* zIIP                                 @H4A          */\n#define psa_bylpar_ziip                 0x08       /* @H5A                                               */\n#define psasup                          0x08       /* zIIP                                 @H4A          */\n#define psa_bylpar_sup                  0x08       /* @H5A                                               */\n#define psaziipds                       0x04       /* zIIP that is different speed than CP @H4A          */\n#define psasupds                        0x04       /* zIIP that is different speed than CP @H4A          */\n\n/* Values for field \"psails\" */\n#define psailsio                        0x80       /* -      THE I/O FLIH IS USING THE            @L9A   */\n#define psailsex                        0x40       /* -      THE EXTERNAL FLIH IS USING THE       @L9A   */\n#define psailspc                        0x20       /* -      THE PROGRAM FLIH IS USING THE        @L9A   */\n#define psailsds                        0x10       /* -      THE DISPATCHER IS USING THE          @L9A   */\n#define psailsrs                        0x08       /* -      THE RESTART FLIH IS USING THE        @L9A   */\n#define psailsor                        0x04       /* -      EXIT IS USING THE INTERRUPT HANDLER  @LAA   */\n#define psailst6                        0x02       /* -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A   */\n#define psailslk                        0x01       /* -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A   */\n\n/* Values for field \"psaflags\" */\n#define psaaeit                         0x80       /* -      ADDRESSING ENVIRONMENT IS IN         @LOA   */\n#define psafpac                         0x40       /* FP simulation is active on this CPU. @08A          */\n#define psafppe                         0x20       /* Program-interrupt expected (i.e.,                  */\n\n/* Values for field \"psascaff\" */\n#define psaemema                        0x80       /* $$SCAFFOLD: z/Architecture                         */\n\n/* Values for field \"psampsw\" */\n#define psapiom                         0x02       /* INPUT/OUTPUT INTERRUPT MASK      @G860PXK          */\n#define psapexm                         0x01       /* EXTERNAL INTERRUPT MASK          @G860PXK          */\n\n/* Values for field \"psarsmcl\" */\n#define psalks1                         0x13       /* COUNT OF LOCKS IN CLHT1          @G860PXK          */\n\n/* Values for field \"psarsml\" */\n#define psarsmex                        0x80       /* -        BIT 0 OF PSARSML. IF ON, THE RSM          */\n\n/* Values for field \"psatrcel\" */\n#define psatrcex                        0x80       /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE        */\n\n/* Values for field \"psaiosl\" */\n#define psaiosex                        0x80       /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A */\n#define psalks2                         0x03       /* COUNT OF LOCKS IN CLHT2              @D3C          */\n\n/* Values for field \"psacpul\" */\n#define psalks3                         0x01       /* COUNT OF LOCKS IN CLHT3          @G860PXH          */\n\n/* Values for field \"psalocal\" */\n#define psalks4                         0x02       /* COUNT OF LOCKS IN CLHT4          @G860PXH          */\n\n/* Values for field \"psaclhs1\" */\n#define psacpuli                        0x80       /* -        CPU LOCK INDICATOR               @G860PXH */\n#define psasum                          0x10       /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA */\n#define psarsmli                        0x08       /* -        RSM LOCK INDICATOR               @G860PXH */\n#define psatrcei                        0x04       /* -        TRACE LOCK INDICATOR             @G860PXH */\n#define psaiosi                         0x02       /* -        IOS LOCK INDICATOR                   @D3A */\n\n/* Values for field \"psaclhs2\" */\n#define psarsmci                        0x10       /* -        RSM COMMON LOCK INDICATOR        @G860PXK */\n#define psarsmgi                        0x08       /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH */\n#define psavfixi                        0x04       /* -        VSM FIX LOCK INDICATOR           @G860PXH */\n#define psaasmgi                        0x02       /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH */\n#define psarsmsi                        0x01       /* -        RSM STEAL LOCK INDICATOR         @G860PXH */\n\n/* Values for field \"psaclhs3\" */\n#define psarsmxi                        0x80       /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH */\n#define psarsmai                        0x40       /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH */\n#define psavpagi                        0x20       /* -        VSM PAGE LOCK INDICATOR          @G860PXH */\n#define psadspli                        0x10       /* -        DISPATCHER LOCK INDICATOR                 */\n#define psaasmli                        0x08       /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A */\n#define psasalli                        0x04       /* -        SPACE ALLOCATION LOCK INDICATOR           */\n#define psaiosli                        0x02       /* -        IOS SYNCHRONIZATION LOCK INDICATOR        */\n#define psarsmdi                        0x01       /* -        RSM DATA SPACE LOCK INDICATOR        @LBA */\n\n/* Values for field \"psaclhs4\" */\n#define psaiouli                        0x80       /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A */\n#define psatpali                        0x08       /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A */\n#define psasrmli                        0x04       /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK        */\n#define psacmsli                        0x02       /* -        CROSS MEMORY SERVICES LOCK INDICATOR      */\n#define psalclli                        0x01       /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A */\n\n/* Values for field \"psainte\" */\n#define psanuin                         0x80       /* -        CPU TIMER CANNOT BE USED                  */\n\n/* Values for field \"psapcfb1\" */\n#define psapcmc                         0x01       /* -        MC INTERRUPT      (MDC605)       @G383P9A */\n#define psapcpf                         0x02       /* -        PAGE FAULT                       @G383P9A */\n#define psapcps                         0x03       /* -        PER/SPACE SWITCH INTERRUPT       @G383PXU */\n#define psapcad                         0x04       /* -        ADDRESSING EXCEPTION  (MDC488)   @G383P9A */\n#define psapctr                         0x05       /* -        TRANSLATION EXCEPTION  (MDC489)  @G383P9A */\n#define psapcpc                         0x06       /* -        PROGRAM CHECK  (MDC490)          @G383P9A */\n#define psapctrc                        0x07       /* -        TRACE INTERRUPT                  @G860PXK */\n#define psapcaf                         0x08       /* -        NEW VALUE FOR PROGRAM INTERRUPT      @03A */\n#define psapcls                         0x09       /* -        LINKAGE STACK INTERRUPT FUNCTION     @L8A */\n#define psapcart                        0x0A       /* -        ACCESS REGISTER TRANSLATION          @L8A */\n#define psapcdpf                        0x0B       /* -        DISABLED PAGE/SEGMENT FAULT          @LCA */\n#define psapcdar                        0x0C       /* -        DISABLED ART PIC X'2B' FUNCTION      @LCA */\n#define psapcprt                        0x0D       /* -        Protection exception function value  @LQA */\n#define psapcmax                        0x0D       /* -        MAXIMUM VALID FUNCTION VALUE         @LQC */\n\n/* Values for field \"psapcfb2\" */\n#define psapctrr                        0x80       /* -        TRACE INTERRUPT RECURSION        @YA01102 */\n#define psapcmt                         0x40       /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A */\n\n/* Values for field \"psapcfb3\" */\n#define psapcp1                         0x80       /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A */\n#define psapcp2                         0x40       /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A */\n#define psapcde                         0x20       /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A */\n#define psapclv                         0x10       /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A */\n#define psapcp3                         0x08       /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A */\n#define psapcp4                         0x04       /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A */\n#define psapcpfr                        0x02       /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA */\n#define psapcavr                        0x01       /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA */\n\n/* Values for field \"psapcfb4\" */\n#define psapcdnv                        0x80       /* -        DUCT validity indicator              @PBA */\n#define psapclsr                        0x40       /* -        IEAVLSIH has invoked IARPTEPR and    @PEA */\n\n/* Values for field \"psamflgs\" */\n#define psanss                          0x80       /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A */\n#define psaprsrb                        0x40       /* -        Preemptable-class SRB                @LPA */\n\n/* Values for field \"psamode\" */\n#define psataskm                        0x00       /* -        TASK MODE VALUE  (MDC338)        @G50DP9A */\n#define psasrbm                         0x04       /* -        SRB MODE VALUE  (MDC339)         @G50DP9A */\n#define psawaitm                        0x08       /* -        WAIT MODE VALUE  (MDC340)        @G50DP9A */\n#define psadispm                        0x10       /* -        DISPATCHER MODE VALUE  (MDC342)  @G50DP9A */\n#define psapsrbm                        0x20       /* -        PSEUDO SRB MODE FLAG BIT.  THIS BIT MAY   */\n\n/* Values for field \"psalheb0\" */\n#define psablsdi                        0x80       /* -        BMFLSD LOCK INDICATOR.               @LGA */\n#define psaxdsi                         0x40       /* -        XCFDS LOCK INDICATOR.                @LEA */\n#define psaxresi                        0x20       /* -        XCFRES LOCK INDICATOR.               @LEA */\n#define psaxqi                          0x10       /* -        XCFQ LOCK INDICATOR.                 @LEA */\n#define psaeseti                        0x08       /* -        ETRSET LOCK INDICATOR.               @LFA */\n#define psaixsci                        0x04       /* -        IXLSCH LOCK INDICATOR.               @LMC */\n#define psaixshi                        0x02       /* -        IXLSHR LOCK INDICATOR.               @LMC */\n#define psaixdsi                        0x01       /* -        IXLDS LOCK INDICATOR.                @LLA */\n\n/* Values for field \"psalheb1\" */\n#define psaixlli                        0x80       /* -        IXLSHELL LOCK INDICATOR.             @LMC */\n#define psauluti                        0x40       /* -        IOSULUT LOCK INDICATOR.              @LJA */\n#define psaixlri                        0x20       /* -        IXLREQST LOCK INDICATOR.             @05A */\n#define psawlmri                        0x10       /* -        WLMRES LOCK INDICATOR                @LRA */\n#define psawlmqi                        0x08       /* -        WLMQ LOCK INDICATOR.                 @LRA */\n#define psacntxi                        0x04       /* -        CONTEXT LOCK INDICATOR               @LRA */\n#define psaregsi                        0x02       /* -        REGSRV LOCK INDICATOR.               @LRA */\n#define psassdli                        0x01       /* -        SSD LOCK INDICATOR.                  @LTA */\n\n/* Values for field \"psacr0cb\" */\n#define psaenabl                        0x10       /* -        TO ENABLE PSA PROTECTION                  */\n#define psadsabl                        0x00       /* -        TO DISABLE PSA PROTECTION                 */\n\n/* Values for field \"psacr0sv\" */\n#define psacr0en                        0x10       /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA    */\n#define psacr0al                        0x08       /* -        IF 1, ASN & LX Reuse facility is          */\n#define psacr0fp                        0x04       /* -        IF 1, extended floating point is          */\n#define psacr0vi                        0x02       /* -        IF 1, vector instructions are             */\n\n/* Values for field \"psarcr0\" */\n#define psarpen                         0x10       /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA    */\n\n/* Values for field \"psascfb\" */\n#define psaiopr                         0x80       /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A */\n#define psaiorty                        0x40       /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A */\n\n/* Values for field \"psatrace\" */\n#define psatroff                        0x80       /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS     */\n\n/* Values for field \"psasflgs\" */\n#define psaschda                        0x80       /* Schedule is active                   @LPA          */\n#define psamcha                         0x40       /* Machine Check is active              @06A          */\n#define psarsta                         0x20       /* Restart is active                    @06A          */\n#define psaegra                         0x10       /* Global Recovery is active            @06A          */\n#define psartma                         0x08       /* Selected RTM functions are active    @06A          */\n\n/* Values for field \"psamiscf\" */\n#define psaalr                          0x80       /* Equivalent to CVTALR                 @LVA          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHARB": {"ttr": 8391, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rbprfx \u00e4\n  void          *rbrsv012; /* -            RESERVED                                  */\n  void          *rbrsv013; /* -            RESERVED                                  */\n  short int      rbrsv014; /* -            RESERVED                                  */\n  unsigned char  rbrsv015; /* -            RESERVED                                  */\n  unsigned char  rbrsv016; /* -            RESERVED                                  */\n  unsigned char  rbrsv017; /* -            RESERVED                                  */\n  unsigned char  rbrsv018; /* -            RESERVED                                  */\n  unsigned char  rbrsv019; /* -            RESERVED                                  */\n  unsigned char  rbrsv028; /* -            RESERVED                                  */\n  void          *rbrsv037; /* -            RESERVED                                  */\n  void          *rbrsv038; /* -            RESERVED                                  */\n  short int      rbrsv039; /* -            RESERVED                                  */\n  unsigned char  rbrsv040; /* -            RESERVED                                  */\n  unsigned char  rbrsv041; /* -            RESERVED                                  */\n  void          *rbrsv050; /* -            RESERVED                                  */\n  struct \u00e4\n    void          *_rbxsb;    /* -            ADDRESS OF EXTENDED STATUS BLOCK @G381P9A */\n    short int      _rbrsv052; /* -            RESERVED                                  */\n    unsigned char  _rbkeysta; /* -            THE KEY AND STATE OF THE IRB ROUTINE      */\n    unsigned char  _rbflags2; /* -            SECOND FLAG BYTE                 @G860PXB */\n    \u00fc rbprfxst;\n  struct \u00e4\n    unsigned char  _rbrtpsw1\u00c48\u00dc; /* -          FIRST DOUBLE WORD OF PSW - SYSTEM AND */\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbrsv160; /* -          RESERVED - SET TO ZERO IN LOW CORE BY       */\n        char           _rbrtilc;  /* -          INSTRUCTION LENGTH COUNTER - NUMBER OF      */\n        short int      _rbrtincd; /* -            INTERRUPT CODE                     MDC019 */\n        \u00fc rbrticil;\n      void          *_rbrtran; /* -            VIRTUAL ADDRESS CAUSING TRANSLATION */\n      \u00fc rbrtpsw2;\n    \u00fc rbrtopsw;\n  unsigned char  rbflags1; /* -            FLAG BYTE                                 */\n  unsigned char  rbflags3; /* -        FLAG BYTE. SERIALIZATION:LOCAL LOCK  @D2C     */\n  short int      rbxwaiti; /* -            EXPLICIT WAIT INDEX  (MDC342)    @G50CP9A */\n  struct \u00e4\n    char           _rbwcsa; /* -          NUMBER OF REQUESTS WAITING AT TIME OF */\n    struct \u00e4\n      unsigned char  _rbinlnth;    /* -          INSTRUCTION LENGTH CODE - 4 HIGH-ORDER */\n      unsigned char  _rbintcod\u00c42\u00dc; /* -          INTERRUPT CODE.  THIS OFFSET FIXED BY  */\n      \u00fc rbintcda;\n    \u00fc rbwlic;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbtmfld;     /* -            INDICATORS FOR TIMER ROUTINES.  WHEN */\n      unsigned char  _filler1\u00c47\u00dc;  /* -          LAST 7 BYTES OF RBEXRTNM               */\n      \u00fc rbexrtnm;\n    struct \u00e4\n      unsigned char  _rbprfxnd;    /* -           END OF RB PREFIX */\n      unsigned char  _filler2\u00c47\u00dc;\n      \u00fc _rbprfx_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler3;       /* -            RBTMFLD                                */\n        int            _rbppsav1 : 24; /* -          ADDRESS OF PROBLEM PROGRAM REGISTER SAVE */\n        \u00fc rbppsav;\n      unsigned char  _rbabopsw\u00c44\u00dc; /* -          AFTER EXECUTION OF TRANSIENT AREA HANDLER */\n      \u00fc _rbprfx_struct2;\n    \u00fc _rbprfx_union1;\n  short int      rbsize;   /* -            SIZE OF THIS RB IN DOUBLEWORDS (ALL RB'S) */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          unsigned char  _xstab1; /* -            SAME AS RBSTAB1 */\n          \u00fc rbstab1;\n        struct \u00e4\n          unsigned char  _xstab2; /* -            SAME AS RBSTAB2 */\n          \u00fc rbstab2;\n        \u00fc xstab;\n      \u00fc rbstab;\n    struct \u00e4\n      unsigned char  _filler4;  /* -            RBSTAB1 */\n      unsigned char  _filler5;  /* -            RBSTAB2 */\n      \u00fc _rbprfx_struct3;\n    \u00fc _rbprfx_union2;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler6\u00c43\u00dc;  /* -          FIRST 3 BYTES OF EP ADDRESS      @G860PXB */\n        unsigned char  _rbeplbyt;    /* BITS 0-6 = BITS 24-30 OF EP ADDR                     */\n        \u00fc rbepa;\n      \u00fc rbep;\n    struct \u00e4\n      unsigned char  _rbcdflgs;    /* -            CONTROL FLAGS                         */\n      int            _rbcde1 : 24; /* -          ADDRESS OF CDE, ADDRESS OF LPDE OR ZERO */\n      \u00fc rbcde;\n    void          *_filler7;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union3;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbopswb1; /* -            OLD PSW BYTE 1  (MDC309)         @G65RP9A */\n        unsigned char  _rbopswb2; /* -            OLD PSW BYTE 2  (MDC304)         @X50AD9A */\n        unsigned char  _filler8;  /* -          OLD PSW BYTE 3                   @G860PVB   */\n        unsigned char  _rbopswb4; /* -            OLD PSW BYTE 4                       @L2A */\n        void          *_rbopswa;  /* -            OLD PSW BYTES 5-8 (ADDRESS)      @G860PVB */\n        \u00fc xrbpsw;\n      \u00fc rbopsw;\n    unsigned char  _filler9\u00c48\u00dc;  /* -          RBOPSW */\n    \u00fc _rbprfx_union4;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler10;     /* -            ZERO                                    */\n      int            _rbpgmq1 : 24; /* -          ADDRESS OF RB INDICATING A REQUEST TO USE */\n      \u00fc rbpgmq;\n    struct \u00e4\n      char           _filler11;    /* -          RBUSE - CONTAINS ZEROS             */\n      int            _rbsqea : 24; /* -          CHAIN OF SUPERVISOR QUEUE ELEMENTS */\n      \u00fc rbsqe;\n    struct \u00e4\n      char           _rbuse;       /* -          USE COUNT USED BY ATTACH (IRB) */\n      int            _rbiqe1 : 24; /* -          LIST ORIGIN FOR IQE (IRB)      */\n      \u00fc rbiqe;\n    struct \u00e4\n      int            _rbiqea; /* -            LIST ORIGIN FOR RQE (IRB WITH 4-BYTE LINK */\n      \u00fc rbiqe2;\n    void          *_filler12;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union5;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          char           _xrbwt; /* -          SAME AS RBWCF (ALL RB'S EXCEPT LPRB AND */\n          \u00fc rbwcf;\n        int            _xrblnka : 24; /* -          SAME AS RBLINKB (ALL RB'S EXCEPT LPRB AND */\n        \u00fc xrblnk;\n      \u00fc rblink;\n    struct \u00e4\n      char           _rbscf;          /* -          RB SUSPENDED COUNT  (MDC339)     @Z40FP9A */\n      int            _filler13 : 24;  /* -          RBLINKB                                   */\n      \u00fc _rbprfx_struct4;\n    \u00fc _rbprfx_union6;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          int            _xrbreg0; /* -            SAME AS RBGRS0 */\n          \u00fc rbgrs0;\n        struct \u00e4\n          int            _xrbreg1; /* -            SAME AS RBGRS1 */\n          \u00fc rbgrs1;\n        struct \u00e4\n          int            _xrbreg2; /* -            SAME AS RBGRS2 */\n          \u00fc rbgrs2;\n        struct \u00e4\n          int            _xrbreg3; /* -            SAME AS RBGRS3 */\n          \u00fc rbgrs3;\n        struct \u00e4\n          int            _xrbreg4; /* -            SAME AS RBGRS4 */\n          \u00fc rbgrs4;\n        struct \u00e4\n          int            _xrbreg5; /* -            SAME AS RBGRS5 */\n          \u00fc rbgrs5;\n        struct \u00e4\n          int            _xrbreg6; /* -            SAME AS RBGRS6 */\n          \u00fc rbgrs6;\n        struct \u00e4\n          int            _xrbreg7; /* -            SAME AS RBGRS7 */\n          \u00fc rbgrs7;\n        struct \u00e4\n          int            _xrbreg8; /* -            SAME AS RBGRS8 */\n          \u00fc rbgrs8;\n        struct \u00e4\n          int            _xrbreg9; /* -            SAME AS RBGRS9 */\n          \u00fc rbgrs9;\n        struct \u00e4\n          int            _xrbreg10; /* -            SAME AS RBGRS10 */\n          \u00fc rbgrs10;\n        struct \u00e4\n          int            _xrbreg11; /* -            SAME AS RBGRS11 */\n          \u00fc rbgrs11;\n        struct \u00e4\n          int            _xrbreg12; /* -            SAME AS RBGRS12 */\n          \u00fc rbgrs12;\n        struct \u00e4\n          int            _xrbreg13; /* -            SAME AS RBGRS13 */\n          \u00fc rbgrs13;\n        struct \u00e4\n          int            _xrbreg14; /* -            SAME AS RBGRS14 */\n          \u00fc rbgrs14;\n        struct \u00e4\n          int            _xrbreg15; /* -            SAME AS RBGRS15 */\n          \u00fc rbgrs15;\n        \u00fc xrbreg;\n      \u00fc rbgrsave;\n    unsigned char  _filler14\u00c464\u00dc;  /* -         RBGRSAVE */\n    \u00fc _rbprfx_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbexsave\u00c448\u00dc;  /* -        EXTENDED SAVE AREA FOR SVC ROUTINES */\n      unsigned char  _filler15\u00c448\u00dc;\n      \u00fc _rbprfx_struct5;\n    struct \u00e4\n      struct \u00e4\n        void          *_rbrsv135; /* -            RESERVED */\n        \u00fc irbend;\n      short int      _rbrsv136;      /* -            RESERVED */\n      unsigned char  _rbrsv137;      /* -            RESERVED */\n      unsigned char  _rbrsv138;      /* -            RESERVED */\n      struct \u00e4\n        int            _tirbend; /* -           END OF TIRB */\n        \u00fc prbend;\n      unsigned char  _filler16\u00c484\u00dc;\n      \u00fc _rbprfx_struct6;\n    struct \u00e4\n      double         _xrbesa\u00c410\u00dc;    /* -          SVRB - EXTENDED SAVE AREA OF UP TO TEN */\n      unsigned char  _filler17\u00c416\u00dc;\n      \u00fc _rbprfx_struct7;\n    struct \u00e4\n      void          *_rbnexav;       /* -            ADDRESS OF NEXT AVAILABLE IQE (IRB) */\n      int            _rbiqewrk;      /* -            IQE WORK SPACE, VARIABLE LENGTH,    */\n      unsigned char  _filler18\u00c488\u00dc;\n      \u00fc _rbprfx_struct8;\n    struct \u00e4\n      unsigned char  _rbsirbwa\u00c464\u00dc;  /* -         SIRB WORK AREA                     MDC022 */\n      void          *_rbrsv161;      /* -            RESERVED - RBRSV148 FOLLOWS THIS FIELD */\n      unsigned char  _filler19\u00c428\u00dc;\n      \u00fc _rbprfx_struct9;\n    struct \u00e4\n      unsigned char  _filler20\u00c48\u00dc;\n      unsigned char  _filler21\u00c440\u00dc;  /* -         LAST 40 BYTES OF RBEXSAVE                   */\n      struct \u00e4\n        void          *_rbschain; /* -            POINTER TO NEXT SCB ON CHAIN              */\n        void          *_rbsexit;  /* -            POINTER TO USER WRITTEN EXIT ROUTINE      */\n        struct \u00e4\n          unsigned char  _rbsflgs1;      /* -            FIRST FLAG BYTE  (MDC309)        @Z40FP9A */\n          int            _rbsparma : 24; /* -          ADDRESS OF PARAMETER LIST FOR STA EXIT      */\n          \u00fc rbsparm;\n        struct \u00e4\n          unsigned char  _rbsflgs2;      /* -            SECOND FLAG BYTE  (MDC320)       @Z40FP9A */\n          int            _rbsownra : 24; /* -          RB ADDRESS IF STAE/STAR, TCB ADDRESS IF     */\n          \u00fc rbsownr;\n        struct \u00e4\n          unsigned char  _rbsflg3;  /* -            OPTION FLAGS  (MDC327)           @Z40FP9A */\n          unsigned char  _rbspkey;  /* -            PROGRAM KEY  (MDC334)            @Z40FP9A */\n          unsigned char  _rbsid;    /* -            SCB IDENTIFIER  (MDC335)         @Z40FP9A */\n          unsigned char  _rbrsv169; /* -            RESERVED  (MDC336)               @Z40FP9A */\n          \u00fc rbsdata;\n        void          *_rbsxptr;  /* -            POINTER TO SCB EXTENSION (SCBX)  @G381P9A */\n        \u00fc rbscbb;\n      int            _sirbend;       /* -           END OF SIRB                 MDC021-MDC022 */\n      unsigned char  _filler22\u00c420\u00dc;\n      \u00fc _rbprfx_struct10;\n    struct \u00e4\n      unsigned char  _filler23\u00c472\u00dc;\n      int            _rbfeparm\u00c46\u00dc;   /* -           PARAMETER AREA FOR ROUTINES THAT USE */\n      \u00fc _rbprfx_struct11;\n    \u00fc _rbprfx_union8;\n  struct \u00e4\n    unsigned char  _filler24\u00c412\u00dc;  /* -         FIRST 12 BYTES OF RBSCBX         @G860PXB    */\n    void          *_rbsxparm;      /* -            31-BIT PARAMETER LIST ADDRESS    @G860PXB */\n    \u00fc rbscbx;\n  int            svrbend;  /* -           END OF SVRB (BOTH)  (MDC338)     @Z40FP9A  */\n  \u00fc;\n\n#define rbxsb     rbprfxst._rbxsb\n#define rbrsv052  rbprfxst._rbrsv052\n#define rbkeysta  rbprfxst._rbkeysta\n#define rbflags2  rbprfxst._rbflags2\n#define rbrtpsw1  rbrtopsw._rbrtpsw1\n#define rbrsv160  rbrtopsw.rbrtpsw2.rbrticil._rbrsv160\n#define rbrtilc   rbrtopsw.rbrtpsw2.rbrticil._rbrtilc\n#define rbrtincd  rbrtopsw.rbrtpsw2.rbrticil._rbrtincd\n#define rbrtran   rbrtopsw.rbrtpsw2._rbrtran\n#define rbwcsa    rbwlic._rbwcsa\n#define rbinlnth  rbwlic.rbintcda._rbinlnth\n#define rbintcod  rbwlic.rbintcda._rbintcod\n#define rbtmfld   _rbprfx_union1.rbexrtnm._rbtmfld\n#define rbprfxnd  _rbprfx_union1._rbprfx_struct1._rbprfxnd\n#define rbppsav1  _rbprfx_union1._rbprfx_struct2.rbppsav._rbppsav1\n#define rbabopsw  _rbprfx_union1._rbprfx_struct2._rbabopsw\n#define xstab1    _rbprfx_union2.rbstab.xstab.rbstab1._xstab1\n#define xstab2    _rbprfx_union2.rbstab.xstab.rbstab2._xstab2\n#define rbeplbyt  _rbprfx_union3.rbep.rbepa._rbeplbyt\n#define rbcdflgs  _rbprfx_union3.rbcde._rbcdflgs\n#define rbcde1    _rbprfx_union3.rbcde._rbcde1\n#define rbopswb1  _rbprfx_union4.rbopsw.xrbpsw._rbopswb1\n#define rbopswb2  _rbprfx_union4.rbopsw.xrbpsw._rbopswb2\n#define rbopswb4  _rbprfx_union4.rbopsw.xrbpsw._rbopswb4\n#define rbopswa   _rbprfx_union4.rbopsw.xrbpsw._rbopswa\n#define rbpgmq1   _rbprfx_union5.rbpgmq._rbpgmq1\n#define rbsqea    _rbprfx_union5.rbsqe._rbsqea\n#define rbuse     _rbprfx_union5.rbiqe._rbuse\n#define rbiqe1    _rbprfx_union5.rbiqe._rbiqe1\n#define rbiqea    _rbprfx_union5.rbiqe2._rbiqea\n#define xrbwt     _rbprfx_union6.rblink.xrblnk.rbwcf._xrbwt\n#define xrblnka   _rbprfx_union6.rblink.xrblnk._xrblnka\n#define rbscf     _rbprfx_union6._rbprfx_struct4._rbscf\n#define xrbreg0   _rbprfx_union7.rbgrsave.xrbreg.rbgrs0._xrbreg0\n#define xrbreg1   _rbprfx_union7.rbgrsave.xrbreg.rbgrs1._xrbreg1\n#define xrbreg2   _rbprfx_union7.rbgrsave.xrbreg.rbgrs2._xrbreg2\n#define xrbreg3   _rbprfx_union7.rbgrsave.xrbreg.rbgrs3._xrbreg3\n#define xrbreg4   _rbprfx_union7.rbgrsave.xrbreg.rbgrs4._xrbreg4\n#define xrbreg5   _rbprfx_union7.rbgrsave.xrbreg.rbgrs5._xrbreg5\n#define xrbreg6   _rbprfx_union7.rbgrsave.xrbreg.rbgrs6._xrbreg6\n#define xrbreg7   _rbprfx_union7.rbgrsave.xrbreg.rbgrs7._xrbreg7\n#define xrbreg8   _rbprfx_union7.rbgrsave.xrbreg.rbgrs8._xrbreg8\n#define xrbreg9   _rbprfx_union7.rbgrsave.xrbreg.rbgrs9._xrbreg9\n#define xrbreg10  _rbprfx_union7.rbgrsave.xrbreg.rbgrs10._xrbreg10\n#define xrbreg11  _rbprfx_union7.rbgrsave.xrbreg.rbgrs11._xrbreg11\n#define xrbreg12  _rbprfx_union7.rbgrsave.xrbreg.rbgrs12._xrbreg12\n#define xrbreg13  _rbprfx_union7.rbgrsave.xrbreg.rbgrs13._xrbreg13\n#define xrbreg14  _rbprfx_union7.rbgrsave.xrbreg.rbgrs14._xrbreg14\n#define xrbreg15  _rbprfx_union7.rbgrsave.xrbreg.rbgrs15._xrbreg15\n#define rbexsave  _rbprfx_union8._rbprfx_struct5._rbexsave\n#define rbrsv135  _rbprfx_union8._rbprfx_struct6.irbend._rbrsv135\n#define rbrsv136  _rbprfx_union8._rbprfx_struct6._rbrsv136\n#define rbrsv137  _rbprfx_union8._rbprfx_struct6._rbrsv137\n#define rbrsv138  _rbprfx_union8._rbprfx_struct6._rbrsv138\n#define tirbend   _rbprfx_union8._rbprfx_struct6.prbend._tirbend\n#define xrbesa    _rbprfx_union8._rbprfx_struct7._xrbesa\n#define rbnexav   _rbprfx_union8._rbprfx_struct8._rbnexav\n#define rbiqewrk  _rbprfx_union8._rbprfx_struct8._rbiqewrk\n#define rbsirbwa  _rbprfx_union8._rbprfx_struct9._rbsirbwa\n#define rbrsv161  _rbprfx_union8._rbprfx_struct9._rbrsv161\n#define rbschain  _rbprfx_union8._rbprfx_struct10.rbscbb._rbschain\n#define rbsexit   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsexit\n#define rbsflgs1  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsflgs1\n#define rbsparma  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsparma\n#define rbsflgs2  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsflgs2\n#define rbsownra  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsownra\n#define rbsflg3   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsflg3\n#define rbspkey   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbspkey\n#define rbsid     _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsid\n#define rbrsv169  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbrsv169\n#define rbsxptr   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsxptr\n#define sirbend   _rbprfx_union8._rbprfx_struct10._sirbend\n#define rbfeparm  _rbprfx_union8._rbprfx_struct11._rbfeparm\n#define rbsxparm  rbscbx._rbsxparm\n\n/* Values for field \"rbrsv019\" */\n#define rbrsv020 0x80 /* -  RESERVED                                           */\n#define rbrsv021 0x40 /* -  RESERVED                                           */\n#define rbrsv022 0x20 /* -  RESERVED                                           */\n#define rbrsv023 0x10 /* -  RESERVED                                           */\n#define rbrsv024 0x08 /* -  RESERVED                                           */\n#define rbrsv025 0x04 /* -  RESERVED                                           */\n#define rbrsv026 0x02 /* -  RESERVED                                           */\n#define rbrsv027 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv028\" */\n#define rbrsv029 0x80 /* -  RESERVED                                           */\n#define rbrsv030 0x40 /* -  RESERVED                                           */\n#define rbrsv031 0x20 /* -  RESERVED                                           */\n#define rbrsv032 0x10 /* -  RESERVED                                           */\n#define rbrsv033 0x08 /* -  RESERVED                                           */\n#define rbrsv034 0x04 /* -  RESERVED                                           */\n#define rbrsv035 0x02 /* -  RESERVED                                           */\n#define rbrsv036 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv041\" */\n#define rbrsv042 0x80 /* -  RESERVED                                           */\n#define rbrsv043 0x40 /* -  RESERVED                                           */\n#define rbrsv044 0x20 /* -  RESERVED                                           */\n#define rbrsv045 0x10 /* -  RESERVED                                           */\n#define rbrsv046 0x08 /* -  RESERVED                                           */\n#define rbrsv047 0x04 /* -  RESERVED                                           */\n#define rbrsv048 0x02 /* -  RESERVED                                           */\n#define rbrsv049 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbkeysta\" */\n#define rbkey    0xF0 /* THE KEY OF THE IRB ROUTINE           @01A             */\n#define rbcirb   0x0C /* THIS IRB WAS CREATED BY CIRB         @01A             */\n#define rbstate  0x01 /* PROBLEM STATE IRB ROUTINE INDICATOR  @01A             */\n\n/* Values for field \"rbflags2\" */\n#define rbxwaita 0x80 /* -         AMODE OF WAITER WHO HAS ENTERED EXPLICIT    */\n#define rbrsv056 0x40 /* -  RESERVED                                           */\n#define rbrsv057 0x20 /* -  RESERVED                                           */\n#define rbrsv058 0x10 /* -  RESERVED                                           */\n#define rbrsv059 0x08 /* -  RESERVED                                           */\n#define rbrsv060 0x04 /* -  RESERVED                                           */\n#define rbrsv061 0x02 /* -  RESERVED                                           */\n#define rbrsv062 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbflags1\" */\n#define rbslock  0x80 /* -         INDICATES THAT THIS RB IS                   */\n#define rbxwait  0x40 /* -         INDICATES THAT THE PROGRAM OPERATING        */\n#define rbabend  0x20 /* -         ABEND SVRB  (SVRB-BOTH)                     */\n#define rbxwprm  0x10 /* -         WAIT POST RESOURCE MANAGER REQUEST          */\n#define rbasir   0x08 /* -         ASIR IS RUNNING UNDER THIS RB      ICB444   */\n#define rblongwt 0x04 /* -         LONG WAIT ISSUED UNDER THIS RB     MDC009   */\n#define rbscb    0x02 /* -         SET BY SVC 60 TO INDICATE RB HAS AN         */\n#define rbsssyn  0x01 /* -         SYNCHRONIZED STATUS STOP PENDING FOR        */\n\n/* Values for field \"rbflags3\" */\n#define rbwtecb  0x80 /* -        WAIT WAS ISSUED WITH AN ECB PROVIDED @D2A    */\n\n/* Values for field \"rbtmfld\" */\n#define rbtmque  0x80 /* -         TIMER ELEMENT NOT ON QUEUE                  */\n#define rbtmtod  0x40 /* -         LOCAL TIME-OF-DAY OPTION IS USED            */\n#define rbrsv005 0x20 /* -   RESERVED                                          */\n#define rbwlim   0x10 /* -         WAIT LIMIT EXCEEDED                MDC001   */\n#define rbtmcmp  0x08 /* -         INTERVAL HAS EXPIRED                        */\n#define rbtmind2 0x04 /* -         EXIT SPECIFIED WITH TASK OR REAL REQUEST    */\n#define rbtmind3 0x03 /* -    TYPE OF REQUEST                                  */\n#define rbtreq   0x00 /* -        TASK REQUEST                                 */\n#define rbwreq   0x01 /* -         WAIT REQUEST                                */\n#define rbrreq   0x03 /* -    REAL REQUEST                                     */\n\n/* Values for field \"xstab1\" */\n#define rbftckpt 0x04 /* -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT    */\n#define xrbckpt  0x04 /* -         SAME AS RBFTCKPT                            */\n\n/* Values for field \"xstab2\" */\n#define rbtcbnxt 0x80 /* -         RBLINK FIELD POINTS TO TCB (ALL RB'S)       */\n#define xrbtcbp  0x80 /* -         SAME AS RBTCBNXT                            */\n#define rbfactv  0x40 /* -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS   */\n#define xrbactv  0x40 /* -         ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND    */\n#define rbfdyn   0x02 /* -         RB STORAGE CAN BE FREED AT EXIT             */\n#define xrbfrrb  0x02 /* -         SAME AS RBFDYN                              */\n#define rbecbwt  0x01 /* -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL     */\n#define xrbwait  0x01 /* -         SAME AS RBECBWT                             */\n\n/* Values for field \"_filler4\" */\n#define rbftp    0xE0 /* TYPE OF RB                                            */\n#define rbftprb  0x00 /* -        PRB                                          */\n#define rbfttirb 0x60 /* -    TIRB                               ICB417        */\n#define rbftirb  0x40 /* -         IRB                                         */\n#define rbftsirb 0x80 /* -         SIRB                                        */\n#define rbftsvrb 0xC0 /* -    SVRB                                             */\n#define rbtrsvrb 0x10 /* -         IF RBTRSVRB=0 AND RBCDE=0, THEN TYPE 2      */\n#define rbfnsvrb 0x10 /* -         ALIAS FOR RBTRSVRB                          */\n#define rbwaitp  0x08 /* -         INDICATES THAT AN ECB IS POINTING AT THE    */\n#define rbatnxit 0x02 /* -         THIS IRB IS AN ATTENTION IRB       ICB444   */\n#define rbpmsvrb 0x01 /* -         THIS IS A PROGRAM MANAGER SVRB - VALID      */\n\n/* Values for field \"_filler5\" */\n#define rbattn   0x20 /* -         EXITING PROGRAM IS AN ATTENTION EXIT        */\n#define rbetxr   0x10 /* -         IRB IS FOR AN ETXR EXIT ROUTINE             */\n#define rbusiqe  0x10 /* -         SAME AS RBETXR                     ICB444   */\n#define rbiqetp  0x0C /* -                                                     */\n#define rbrqenr  0x00 /* -        REQUEST QUEUE ELEMENT IS NOT TO BE           */\n#define rbirbaer 0x04 /* -         IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY   */\n#define rbiqenr  0x08 /* -         IQE IS NOT TO BE RETURNED AT EXIT           */\n#define rbirbaiq 0x0C /* -    IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY        */\n\n/* Values for field \"rbeplbyt\" */\n#define rbeppd   0x01 /* -        BIT 31 INDICATES RBEP IS POINTER-DEFINED     */\n\n/* Values for field \"rbep\" */\n#define rbepm    0x80 /* -        ADDRESSING MODE OF ROUTINE, IF               */\n\n/* Values for field \"rbcdflgs\" */\n#define rbnocell 0x80 /* -         EXIT SHOULD FREEMAIN THIS SVRB RATHER       */\n#define rbrsv009 0x40 /* -   RESERVED                                          */\n#define rbcdatch 0x20 /* -         CONTENTS SUPERVISION HAS BEEN ENTERED       */\n#define rbcdsave 0x10 /* -         EXIT WILL LOAD REGISTERS FROM PRB ON        */\n#define rbcdnode 0x08 /* -         NO DE SAVE AREA REQUIRED           ICB444   */\n#define rbcdsync 0x04 /* -         SYNCH MACRO INSTRUCTION REQUESTED           */\n#define rbcdxctl 0x02 /* -         XCTL MACRO INSTRUCTION REQUESTED            */\n#define rbcdload 0x01 /* -         LOAD MACRO INSTRUCTION REQUESTED            */\n\n/* Values for field \"rbopswb1\" */\n#define rboper   0x40 /* -        PER BIT IN RBOPSWB1  (MDC310)    @G65RP9A    */\n\n/* Values for field \"rbopswb2\" */\n#define rbopswps 0x01 /* -        PROBLEM STATE BIT IN OLD PSW                 */\n\n/* Values for field \"rbopswb4\" */\n#define rbopsw64 0x01 /* AMODE 64                             @L2A             */\n\n/* Values for field \"rbopswa\" */\n#define rbopswm  0x80 /* -        ADDRESSING MODE OF OLD PSW       @G860PVB    */\n#define rbopsw31 0x80 /* -        ADDRESSING MODE OF OLD PSW           @L2A    */\n\n/* Values for field \"rbrsv138\" */\n#define rbrsv139 0x80 /* -  RESERVED                                           */\n#define rbrsv140 0x40 /* -  RESERVED                                           */\n#define rbrsv141 0x20 /* -  RESERVED                                           */\n#define rbrsv142 0x10 /* -  RESERVED                                           */\n#define rbrsv143 0x08 /* -  RESERVED                                           */\n#define rbrsv144 0x04 /* -  RESERVED                                           */\n#define rbrsv145 0x02 /* -  RESERVED                                           */\n#define rbrsv146 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv161\" */\n#define sirbwaln 64   /* -           LENGTH OF RBSIRBWA                 MDC023 */\n#define rbprfxln 0x40 /* - TOTAL PREFIX LENGTH INCLUDING                       */\n#define rbprflna 0x20 /* - ASSIGNED PREFIX LENGTH                              */\n#define prblen   0x88 /* -   REAL PRB LENGTH FOR GETMAIN                       */\n#define sirblen  0xC8 /* -  REAL SIRB LENGTH FOR GETMAIN                       */\n#define tirblen  0x88 /* -  REAL TIRB LENGTH FOR GETMAIN                       */\n#define irblen   0x80 /* -   REAL IRB LENGTH FOR GETMAIN UNLESS                */\n#define svrblen  0xF0 /* -  REAL SVRB LENGTH FOR GETMAIN                       */\n\n/* Values for field \"rbsflgs1\" */\n#define rbsstai  0x80 /* -         STAI SCB  (MDC310)               @Z40FP9A   */\n#define rbsstar  0x40 /* -         STAR SCB.  SCB IF FOR STAE IF NEITHER       */\n#define rbsdummy 0x20 /* -         DUMMY SCB (WILL NOT BE SCHEDULED)           */\n#define rbsestae 0x10 /* -         ESTAE INDICATOR  (MDC313)        @Z40FP9A   */\n#define rbrsv162 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbsasync 0x04 /* -         ALLOW ASYNCHRONOUS INTERRUPTS               */\n#define rbsioprc 0x03 /* -    I/O PROCESSING OPTION.  BOTH BITS OFF            */\n#define rbsnoiop 0x02 /* -         BYPASS I/O INTERVENTION (MDC316) @Z40FP9A   */\n#define rbshalt  0x01 /* -         HALT I/O  (MDC317)               @Z40FP9A   */\n\n/* Values for field \"rbsflgs2\" */\n#define rbsamode 0x80 /* -         USER IS IN 31 BIT                           */\n#define rbsxctl2 0x40 /* -         RETAIN THIS SCB ACROSS XCTL                 */\n#define rbrsv164 0x20 /* -         RESERVED                         @Z40FP9A   */\n#define rbsinuse 0x10 /* -         THIS SCB IN USE  (MDC322)        @Z40FP9A   */\n#define rbrsv165 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbrsv166 0x04 /* -         RESERVED                         @Z40FP9A   */\n#define rbskey0  0x02 /* -         USER IN KEY 0  (MDC323)          @Z40FP9A   */\n#define rbssuper 0x01 /* -         USER IN SUPERVISOR MODE (MDC324) @Z40FP9A   */\n\n/* Values for field \"rbsflg3\" */\n#define rbrsv167 0x80 /* -         RESERVED                         @Z40FP9A   */\n#define rbstermi 0x40 /* -         AUTHORIZED FOR TERM PROCESSING              */\n#define rbsrecrd 0x20 /* -         ERROR RECORD TO BE WRITTEN TO THE LOGREC    */\n#define rbscncel 0x10 /* -         SCB IS LOGICALLY CANCELED                   */\n#define rbsprntr 0x08 /* -         SCB IS PREVIOUSLY ENTERED                   */\n#define rbsbrntr 0x04 /* -         BRANCH ENTERED SVC 60  (MDC332)  @Z40FP9A   */\n#define rbstermo 0x02 /* -         TERM PROCESSING ONLY  (MDC333)   @Z40FP9A   */\n#define rbrsv168 0x01 /* -         RESERVED                         @Z40FP9A   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHASCVT": {"ttr": 8135, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct scvtsect \u00e4\n  void          *scvtpgtm;     /* -       ADDR OF EOT TIMER PURGE     @G860P46           */\n  void          *scvtpgwr;     /* -       ADDRESS OF WTO/WTOR RESOURCE                   */\n  void          *scvtdspa;     /* -              ANCHOR FOR SYSTEM/370 SNA/DS    @D6A    */\n  short int      scvtbr14;     /* -                 A BR 14 INSTRUCTION.  RETURN    @P2A */\n  short int      scvtvlfc;     /* -             COUNT OF THE NUMBER OF TIMES    @05C     */\n  void          *_filler1;     /* -              ** SCVTTERAS FIELD UNUSED   @G860P46    */\n  void          *scvtbwto;     /* -       ADDRESS OF BRANCH-ENTRY WTO AND @LCA           */\n  void          *scvtbdom;     /* -       ADDRESS OF BRANCH-ENTRY DOM.    @LCA           */\n  void          *scvtrmbr;     /* -       ADDR OF REGMAIN BRANCH ENTRY                   */\n  void          *scvtchsi;     /* -              POINTER TO THE IOS CHANNEL      @01C    */\n  void          *scvtrace;     /* -             ADDR OF POINTER TO TRACE ROUTINE         */\n  void          *scvthscs;     /* -       ADDRESS OF SLIH FOR HPPI                       */\n  void          *scvtsorm;     /* -              ADDRESS OF SDOM RESOURCE        @LDC    */\n  void          *scvtlfrm;     /* -       LIST FORMAT FREEMAIN BRANCH ENT PT             */\n  void          *scvtsdob;     /* -              ADDRESS OF SHARED DATA OBJECT   @LDC    */\n  void          *scvtmca;      /* -              ANCHOR FOR GLOBAL MVS MESSAGE   @D7A    */\n  void          *scvtnetv;     /* -              NETVIEW CONTROL STRUCTURE       @03C    */\n  void          *scvtrptr;     /* -              ADDR OF TRACE TABLE POINTERS  YM2703    */\n  void          *scvtgmbr;     /* -       LIST FORMAT GETMAIN BRANCH ENTRY               */\n  void          *scvtrg2;      /* -              ENTRY POINT ADDRESS OF IEAVTRG2,        */\n  void          *scvtrg2b;     /* -              ADDRESS OF SECOND ENTRY POINT IN        */\n  void          *scvtrtxt;     /* ADDRESS OF MODULE IEECB867.  MODULE                    */\n  int            scvtamsp;     /* -              ADDRESS OF SYSTEM           @ZA93009    */\n  void          *scvtasrs;     /* POINTER TO SYMPTOM RECORDS      @L8A                   */\n  void          *scvtsymr;     /* ADDRESS OF THE SYMREC           @D2A                   */\n  void          *scvtdopx;     /* ADDRESS OF IEAVTRDX ROUTINE     @LAC                   */\n  void          *scvtcpls;     /* ADDRESS OF VSM CELL POOL LIST   @D3C                   */\n  void          *scvtdiv;      /* POINTER TO THE DIV INFORMATION  @L9C                   */\n  void          *scvtdivm;     /* POINTER TO THE DIV RESOURCE     @L9C                   */\n  void          *scvtctr1;     /* -              RESERVED                        @L4C    */\n  void          *scvtctab;     /* -              COMPONENT TRACE ANCHOR BLOCK.   @D4C    */\n  void          *scvtrxlq;     /* -              ADDR OF RECOVERY EXTENT LIST            */\n  void          *scvtcgt;      /* -              POINTER TO IHACGT               @LDC    */\n  void          *scvtjopn;     /* ADDR OF THE IDAVJOPN RTN        @LEC                   */\n  void          *scvtsvct;     /* -       ORIGIN OF SVC TABLE           MDC005           */\n  void          *scvtsvcr;     /* -       ADDRESS OF SVC UPDATE RECORDING @L5A           */\n  void          *scvttqe;      /* -       ADDR OF TSO SUBSYSTEM'S TQE                    */\n  void          *scvtttrm;     /* -              TSO TASK TERMINATION RESOUCE            */\n  void          *scvtstat;     /* -       ADDR OF SVC STATUS ROUTINE    ICB339           */\n  void          *scvtqcbr;     /* -       BRANCH ENTRY POINT TO GETMAIN/                 */\n  void          *scvtvlfb;     /* -              VLF COMMON DATA BLOCK ADDRESS.  @D5C    */\n  void          *scvthsct;     /* -              ADDRESS OF HPPI                         */\n  void          *scvtptrm;     /* -       ADDRESS OF PAGING           @G860P46           */\n  void          *scvtdfcs;     /* -              ANCHOR FOR SMSX GLOBAL CONTROL  @LBC    */\n  void          *scvtpiqe;     /* -       ADDR OF RESIDENT SUBROUTINE IN EOT             */\n  void          *scvtgamp;     /* -              POINTER TO GAM CONTROL BLOCKS.  @LFA    */\n  void          *scvtgams;     /* -              POINTER TO GAM SQA AREA.        @LFA    */\n  void          *scvtccvt;     /* -              POINTER TO THE CRYPTOGRAPHY     @02A    */\n  void          *scvtdis;      /* ENTRY POINT OF MEMTERM          @D8A                   */\n  unsigned char  scvtr0c0\u00c48\u00dc;  /* RESERVED.                       @D8A                   */\n  void          *scvtqopn;     /* ADDR OF THE IGGQJOPN RTN        @LEC                   */\n  void          *scvtdlfb;     /* -              ANCHOR TO THE DLF CONTROL BLOCK @P1A    */\n  unsigned char  scvtr0d0\u00c416\u00dc; /* RESERVED.                       @P1C                   */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IHASTCB": {"ttr": 8131, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct stcb \u00e4\n  struct \u00e4\n    unsigned char  _stcbstcb\u00c44\u00dc; /* ACRONYM IN EBCDIC -STCB-             */\n    void          *_stcbracp;    /* POINTER TO RACF DATA FOR THIS   @D6A */\n    \u00fc stcbegin;\n  void          *stcbdivf;             /* POINTER TO 1ST DOA (DIV OBJECT  @L1A                */\n  void          *stcbdivl;             /* POINTER TO LAST DOA FOR TCB.    @L1A                */\n  unsigned char  stcbafns\u00c42\u00dc;          /* ORIGINAL CPU AFFINITY SAVE AREA                     */\n  short int      stcbctsc;             /* Number of consecutive dispatches@LIC                */\n  void          *stcbvssa;             /* ADDRESS OF VECTOR STATUS SAVE AREA                  */\n  unsigned char  stcbvafn;             /* VECTOR AFFINITY AND STATUS SAVED                    */\n  unsigned char  stcbflg1;             /* FLAG BYTE                                           */\n  unsigned char  _filler1\u00c42\u00dc;          /* Reserved                        @LRC                */\n  void          *stcbvfrb;             /* ADDRESS OF THE RB STOPPED BY THE                    */\n  void          *stcbalov;             /* WORK UNIT ACCESS LIST VIRTUAL   @L2C                */\n  void          *stcbald;              /* WORK UNIT ACCESS LIST           @L2C                */\n  void          *stcbducv;             /* VIRTUAL ADDRESS OF THE DUCT.    @L2C                */\n  void          *stcbducr;             /* REAL ADDRESS OF THE DUCT.       @L2C                */\n  struct \u00e4\n    int            _stcbar0;  /* ACCESS REGISTER 0 SAVE AREA.    @L2A */\n    int            _stcbar1;  /* ACCESS REGISTER 1 SAVE AREA.    @L2A */\n    int            _stcbar2;  /* ACCESS REGISTER 2 SAVE AREA.    @L2A */\n    int            _stcbar3;  /* ACCESS REGISTER 3 SAVE AREA.    @L2A */\n    int            _stcbar4;  /* ACCESS REGISTER 4 SAVE AREA.    @L2A */\n    int            _stcbar5;  /* ACCESS REGISTER 5 SAVE AREA.    @L2A */\n    int            _stcbar6;  /* ACCESS REGISTER 6 SAVE AREA.    @L2A */\n    int            _stcbar7;  /* ACCESS REGISTER 7 SAVE AREA.    @L2A */\n    int            _stcbar8;  /* ACCESS REGISTER 8 SAVE AREA.    @L2A */\n    int            _stcbar9;  /* ACCESS REGISTER 9 SAVE AREA.    @L2A */\n    int            _stcbar10; /* ACCESS REGISTER 10 SAVE AREA.   @L2A */\n    int            _stcbar11; /* ACCESS REGISTER 11 SAVE AREA.   @L2A */\n    int            _stcbar12; /* ACCESS REGISTER 12 SAVE AREA.   @L2A */\n    int            _stcbar13; /* ACCESS REGISTER 13 SAVE AREA.   @L2A */\n    int            _stcbar14; /* ACCESS REGISTER 14 SAVE AREA.   @L2A */\n    int            _stcbar15; /* ACCESS REGISTER 15 SAVE AREA.   @L2A */\n    \u00fc stcbars;\n  void          *stcblssd;             /* VIRTUAL ADDRESS OF THE LSSD     @L2A                */\n  void          *stcblsdp;             /* LINKAGE STACK ENTRY DESCRIPTOR  @L2A                */\n  struct \u00e4\n    void          *_stcbrmef; /* POINTER TO HEAD OF TASK RELATED @L2A */\n    void          *_stcbrmel; /* POINTER TO TAIL OF TASK RELATED @L2A */\n    \u00fc stcbrme;\n  void          *stcbestk;             /* VIRTUAL ADDRESS OF THE LINKAGE  @L2A                */\n  unsigned char  stcbflg2;             /* FLAG BYTE                       @L2A                */\n  unsigned char  stcbflg3;             /* FLAG BYTE                       @D2A                */\n  short int      stcbnstp;             /* COUNT OF REQUESTS TO IGNORE SRB @P2C                */\n  void          *stcbtlsd;             /* ADDRESS OF TASK RELATED LSSD    @D1A                */\n  void          *stcbtlsp;             /* ADDRESS OF TASK RELATED INITIAL @D1A                */\n  unsigned char  stcbttkn\u00c416\u00dc;         /* TTOKEN FOR THIS TASK            @L3A                */\n  void          *stcbaloc;             /* POINTER TO DYNAMIC STORAGE      @D3A                */\n  unsigned char  stcbr0a4;             /* RESERVED.                       @LZC                */\n  unsigned char  stcbcryp;             /* Crypto flags.                   @LZA                */\n  unsigned char  stcbtafa\u00c42\u00dc;          /* Transient feature affinity.     @LGA                */\n  double         stcbvtme;             /* VECTOR TIME.                    @P1C                */\n  int            stcbmemc;             /* Count of XCF members under this @D8C                */\n  unsigned char  stcbxcff;             /* XCF FLAG.                       @L4A                */\n  unsigned char  stcbflg4;             /* Flag byte 4.                    @LFA                */\n  unsigned char  stcbflg5;             /* Flag byte 5.                    @LFA                */\n  unsigned char  stcbflg6;             /* Flag byte 6.                    @LFA                */\n  void          *stcbdfts;             /* ADDRESS OF THE DFP-SMSX         @L5A                */\n  void          *stcbjsab;             /* ADDRESS OF JOB SCHEDULER        @D5A                */\n  void          *stcbttcb;             /* TCPIP STCB Extension            @06A                */\n  struct \u00e4\n    unsigned char  _stcbrgs1;    /* First Byte of Indicators        @LPA */\n    unsigned char  _stcbrgs2\u00c43\u00dc; /* Unused but reserved by CRG      @LPA */\n    \u00fc stcbrgsv;\n  void          *stcbnttp;             /* Address of task level           @L8A                */\n  int            stcbcon_;             /* NUMBER OF IXLCONNS IN EFFECT    @L9A                */\n  struct \u00e4\n    short int      _stcbarct; /* NUMBER OF REFERENCE PATTERNS    @L6A */\n    short int      _stcbdrct; /* NUMBER OF REFERENCE PATTERNS    @L6A */\n    \u00fc stcbrcts;\n  unsigned char  stcbdfp\u00c44\u00dc;           /* RESERVED FOR USE BY DFP.        @03A                */\n  void          *stcbotcb;             /* Address of OpenMVS Task         @LDA                */\n  void          *stcbcdxh;             /* ADDRESS OF THE JOB PACK QUEUE   @LCA                */\n  void          *stcbsjst;             /* ADDRESS OF THE LOCAL STORAGE    @D7A                */\n  void          *stcbatad;             /* Address of the ATTACH SVC in    @P4A                */\n  void          *stcbweb;              /* Address of task's WEB.          @LHC                */\n  int            stcbseqn;             /* RB Sequence Number Counter.     @LEA                */\n  short int      stcbxcnt;             /* Count of currently outstanding  @P5A                */\n  unsigned char  stcbcons;             /* Console Flag.                   @LTC                */\n  unsigned char  stcbflg7;             /* Flag byte 7.                    @P9C                */\n  int            stcbpecb;             /* ECB used internally by RTM      @LJA                */\n  void          *stcbixgl;             /* Pointer to SLC task related     @LKA                */\n  void          *stcbdeta;             /* Address of Task being Detached by                   */\n  void          *stcbpque;             /* Address of the next Task that                       */\n  unsigned char  stcbcnzl\u00c44\u00dc;          /* Count of Console resources held @PKA                */\n  void          *stcbstsb;             /* Address of the STSB (IWMSTSB).  @LNA                */\n  unsigned char  stcbeutk\u00c48\u00dc;          /* Execution unit token for this task                  */\n  void          *stcbencr;             /* Address of the root task in the                     */\n  int            stcbencc;             /* Count of subtasks that have joined                  */\n  void          *stcbdb2;              /* Token used by DB/2.             @P7A                */\n  unsigned char  stcbr120\u00c44\u00dc;          /* Reserved.                       @PCC                */\n  unsigned char  stcbpmom\u00c44\u00dc;          /* Address of purge-only Mother Task                   */\n  unsigned char  stcboflg\u00c44\u00dc;          /* Openedition flags               @P8A                */\n  void          *stcbbcba;             /* Address of SOMObjects data structure                */\n  union \u00e4\n    unsigned char  _stcbflcs\u00c44\u00dc; /* CS-serialized flags             @LYA */\n    struct \u00e4\n      unsigned char  _stcbflc0; /* Byte 0 of CS-serialized flags   @LYA */\n      unsigned char  _stcbflc1; /* Byte 1 of CS-serialized flags   @LYA */\n      unsigned char  _stcbflc2; /* Byte 2 of CS-serialized flags   @LYA */\n      unsigned char  _stcbflc3; /* Byte 3 of CS-serialized flags   @LYA */\n      \u00fc _stcb_struct1;\n    \u00fc _stcb_union1;\n  unsigned char  stcbvreq\u00c44\u00dc;          /* State of outstanding VTAM       @PBA                */\n  unsigned char  stcbafpr\u00c4100\u00dc;        /* FP save area: 1,3,5,7-15,FPCR   @LSA                */\n  unsigned char  stcbfpfl;             /* FP Flags                        @PIC                */\n  unsigned char  stcbipkf;             /* Initial PKF. This is used to deal                   */\n  unsigned char  stcbipkm\u00c42\u00dc;          /* Initial PKM. This is used to deal                   */\n  unsigned char  stcbg64h\u00c464\u00dc;         /* High halves of 64-bit GPRs      @LWA                */\n  double         stcb_ttime;           /* Aligned copy of TCBTTIME        @M4A                */\n  double         stcb_ttime_on_ifa;    /* IFA TCB time                    @M4A                */\n  double         stcb_ttime_on_cp;     /* Standard CP TCB time            @0CA                */\n  void          *stcbalc;              /* Allocation field                @0AA                */\n  void          *stcbuser;             /* User field.                     @M3A                */\n  void          *stcbotca;             /* Address of OTCB Alternate       @M1A                */\n  void          *stcblaa;              /* Address of LE Library Anchor Area                   */\n  struct \u00e4\n    void          *_stcbpie;           /* Address of PIE control block    @LXA */\n    unsigned char  _stcbpmsk;          /* Program Mask at time of SPIE         */\n    unsigned char  _stcbflg8;          /* ESPIE flags                     @LXA */\n    unsigned char  _stcbr20e\u00c42\u00dc;       /* Reserved                        @LXA */\n    struct \u00e4\n      unsigned char  _stcbrbp\u00c44\u00dc;  /* Address of RB which had the          */\n      struct \u00e4\n        unsigned char  _stcbdxc;     /* @LXA                                 */\n        unsigned char  _stcbilc;     /* Instruction length code         @LXA */\n        unsigned char  _stcbintc\u00c42\u00dc; /* Program Interrupt Code          @LXA */\n        \u00fc stcbilcp;\n      unsigned char  _stcbppsw\u00c48\u00dc; /* PSW at program interrupt        @LXA */\n      \u00fc stcbprms;\n    void          *_stcbrpp;           /* Recovery PIE PICA address       @LXA */\n    void          *_stcbfrpq;          /* Free RPP queue header           @LXA */\n    void          *_stcblscr;          /* Linkage Stack control register       */\n    unsigned char  _stcbsars\u00c464\u00dc;      /* Access Registers at time of error    */\n    unsigned char  _stcbwork\u00c44\u00dc;       /* Work area used during ESPIE     @LXA */\n    void          *_stcbppie;          /* Address of public storage EPIE       */\n    void          *_stcbcpie;          /* PIE being used by the current        */\n    unsigned char  _stcbs64h\u00c464\u00dc;      /* 64-bit GPR high halves for ESPIE     */\n    unsigned char  _stcbs64\u00c4128\u00dc;      /* Entire 64-bit GPRs for ESPIE    @LXA */\n    unsigned char  _stcbr338\u00c452\u00dc;      /* Reserved                        @0EC */\n    int            _stcbxrct;          /* XES request count                    */\n    unsigned char  _stcbsbea\u00c48\u00dc;       /* Breaking Event Address for ESPIE     */\n    unsigned char  _stcbsc64\u00c4128\u00dc;     /* Entire 64-bit Control Regs for ESPIE */\n    unsigned char  _stcbptr2;          /* TEA AR number for ESPIE         @LXA */\n    unsigned char  _stcbr3fd\u00c43\u00dc;       /* Reserved                        @LXA */\n    void          *_stcbpvad;          /* TEA (32-bit) for ESPIE          @LXA */\n    unsigned char  _stcbpv64\u00c48\u00dc;       /* TEA (64-bit) for ESPIE          @LXA */\n    struct \u00e4\n      unsigned char  _stcbodxc;    /* Original DXC                    @PGA */\n      unsigned char  _stcboilc;    /* Original ILC                    @PGA */\n      unsigned char  _stcbopic\u00c42\u00dc; /* Original PIC                    @PGA */\n      \u00fc stcbolcp;\n    unsigned char  _stcbr40c\u00c44\u00dc;       /* Reserved for SCA expansion      @H1C */\n    double         _stcb_ttime_on_sup; /* SUP TCB time                    @H1A */\n    \u00fc stcbsca;\n  double         stcb_ttime_ifa_on_cp; /* IFA ON CP TCB TIME              @M5A                */\n  double         stcb_ttime_sup_on_cp; /* SUP ON CP TCB TIME              @M5A                */\n  double         stcbgtcb;             /* Address of GTCB (mapped by ISGYGTCB)                */\n  double         stcbhp1;              /* Pointer to Heap Pool 1 structure                    */\n  double         stcbcpha;             /* Pointer to authorized cell pool                     */\n  struct \u00e4\n    void          *_stcb_his_tcb_;     /* Address of this TCB.  Note TCBs   */\n    short int      _stcb_his_homeasid; /* Home ASID where the TCB is        */\n    short int      _stcb_his_token;    /* A token used to identify when the */\n    \u00fc stcb_his_area;\n  unsigned char  stcbr448\u00c416\u00dc;         /* Reserved for expansion          @M8C                */\n  struct \u00e4\n    unsigned char  _tiocnjob\u00c48\u00dc; /* -         JOB NAME */\n    \u00fc stcbend;\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _tiocpstn\u00c48\u00dc; /* -         8-BYTE PROC STEP NAME FOR PROCS     @P1A */\n      \u00fc tiocstpn;\n    unsigned char  _tiocjstn\u00c48\u00dc; /* -         8-BYTE JOBSTEP NAME FOR PROCS       @P1A */\n    \u00fc tiocstep;\n  char           tioelngh;             /* -          LENGTH, IN BYTES, OF THIS ENTRY          */\n  unsigned char  tioestta;             /* -            STATUS BYTE A                          */\n  struct \u00e4\n    unsigned char  _tioewtct; /* -          DURING ALLOCATION, NUMBER OF DEVICES */\n    unsigned char  _tioelink; /* -          DURING ALLOCATION, LINK TO THE       */\n    \u00fc tioerloc;\n  unsigned char  tioeddnm\u00c48\u00dc;          /* -          DD NAME                                  */\n  unsigned char  tioejfcb\u00c43\u00dc;          /* -          SWA virtual address token, mapped        */\n  unsigned char  tioesttc;             /* -            STATUS BYTE C.  USED DURING ALLOCATION */\n  unsigned char  tioesttb;             /* -            STATUS BYTE B - DURING ALLOCATION AND  */\n  int            tioefsrt : 24;        /* -          DURING PROBLEM PROGRAM, ADDRESS OF UCB.  */\n  unsigned char  _filler2;             /* -          RESERVED                                 */\n  char           tiopnslt;             /* -          NUMBER OF SLOTS FOR POOL                 */\n  unsigned char  _filler3;             /* -          RESERVED                                 */\n  char           tiopnsrt;             /* -          NUMBER OF DEVICES (FILLED SLOTS)         */\n  unsigned char  tioppool\u00c48\u00dc;          /* -          POOL NAME                                */\n  unsigned char  tiopsttb;             /* -          STATUS OF SLOT                           */\n  int            tiopslot : 24;        /* -          UCB ADDRESS OR EMPTY SLOT                */\n  unsigned char  tiotfend\u00c44\u00dc;          /* -          FINAL END OF THE TIOT - BINARY ZEROS     */\n  \u00fc;\n\n#define stcbstcb          stcbegin._stcbstcb\n#define stcbracp          stcbegin._stcbracp\n#define stcbar0           stcbars._stcbar0\n#define stcbar1           stcbars._stcbar1\n#define stcbar2           stcbars._stcbar2\n#define stcbar3           stcbars._stcbar3\n#define stcbar4           stcbars._stcbar4\n#define stcbar5           stcbars._stcbar5\n#define stcbar6           stcbars._stcbar6\n#define stcbar7           stcbars._stcbar7\n#define stcbar8           stcbars._stcbar8\n#define stcbar9           stcbars._stcbar9\n#define stcbar10          stcbars._stcbar10\n#define stcbar11          stcbars._stcbar11\n#define stcbar12          stcbars._stcbar12\n#define stcbar13          stcbars._stcbar13\n#define stcbar14          stcbars._stcbar14\n#define stcbar15          stcbars._stcbar15\n#define stcbrmef          stcbrme._stcbrmef\n#define stcbrmel          stcbrme._stcbrmel\n#define stcbrgs1          stcbrgsv._stcbrgs1\n#define stcbrgs2          stcbrgsv._stcbrgs2\n#define stcbarct          stcbrcts._stcbarct\n#define stcbdrct          stcbrcts._stcbdrct\n#define stcbflcs          _stcb_union1._stcbflcs\n#define stcbflc0          _stcb_union1._stcb_struct1._stcbflc0\n#define stcbflc1          _stcb_union1._stcb_struct1._stcbflc1\n#define stcbflc2          _stcb_union1._stcb_struct1._stcbflc2\n#define stcbflc3          _stcb_union1._stcb_struct1._stcbflc3\n#define stcbpie           stcbsca._stcbpie\n#define stcbpmsk          stcbsca._stcbpmsk\n#define stcbflg8          stcbsca._stcbflg8\n#define stcbr20e          stcbsca._stcbr20e\n#define stcbrbp           stcbsca.stcbprms._stcbrbp\n#define stcbdxc           stcbsca.stcbprms.stcbilcp._stcbdxc\n#define stcbilc           stcbsca.stcbprms.stcbilcp._stcbilc\n#define stcbintc          stcbsca.stcbprms.stcbilcp._stcbintc\n#define stcbppsw          stcbsca.stcbprms._stcbppsw\n#define stcbrpp           stcbsca._stcbrpp\n#define stcbfrpq          stcbsca._stcbfrpq\n#define stcblscr          stcbsca._stcblscr\n#define stcbsars          stcbsca._stcbsars\n#define stcbwork          stcbsca._stcbwork\n#define stcbppie          stcbsca._stcbppie\n#define stcbcpie          stcbsca._stcbcpie\n#define stcbs64h          stcbsca._stcbs64h\n#define stcbs64           stcbsca._stcbs64\n#define stcbr338          stcbsca._stcbr338\n#define stcbxrct          stcbsca._stcbxrct\n#define stcbsbea          stcbsca._stcbsbea\n#define stcbsc64          stcbsca._stcbsc64\n#define stcbptr2          stcbsca._stcbptr2\n#define stcbr3fd          stcbsca._stcbr3fd\n#define stcbpvad          stcbsca._stcbpvad\n#define stcbpv64          stcbsca._stcbpv64\n#define stcbodxc          stcbsca.stcbolcp._stcbodxc\n#define stcboilc          stcbsca.stcbolcp._stcboilc\n#define stcbopic          stcbsca.stcbolcp._stcbopic\n#define stcbr40c          stcbsca._stcbr40c\n#define stcb_ttime_on_sup stcbsca._stcb_ttime_on_sup\n#define stcb_his_tcb_     stcb_his_area._stcb_his_tcb_\n#define stcb_his_homeasid stcb_his_area._stcb_his_homeasid\n#define stcb_his_token    stcb_his_area._stcb_his_token\n#define tiocnjob          stcbend._tiocnjob\n#define tiocpstn          tiocstep.tiocstpn._tiocpstn\n#define tiocjstn          tiocstep._tiocjstn\n#define tioewtct          tioerloc._tioewtct\n#define tioelink          tioerloc._tioelink\n\n/* Values for field \"stcbvafn\" */\n#define stcbvmck         0x80 /* VECTOR STATUS LOST DUE TO MACHINE                  */\n#define stcbslid         0x40 /* LOGICAL CPU ID MASK                                */\n#define stcbvisa         0x20 /* VECTOR STATUS SAVED IN VSSA                        */\n#define stcbslci         0x0F /* IF STCBSLID IS ON THEN THIS NIBBLE                 */\n\n/* Values for field \"stcbflg1\" */\n#define stcbpiq          0x80 /* INDICATES TO STAGE 3 EXIT EFFECTOR                 */\n#define stcbvfrv         0x40 /* INDICATES THE USER IS NOT RACF  @01A               */\n#define stcbvfrd         0x20 /* INDICATES THE VECTOR SLIH HAS   @01A               */\n#define stcbsst          0x10 /* Indicates that the task is a    @LUA               */\n#define stcbclup         0x08 /* Cleanup only                  991006               */\n\n/* Values for field \"stcbflg2\" */\n#define stcbrmet         0x80 /* IF ON, INDICATES TASK IS IN     @L2A               */\n#define stcbinrt         0x40 /* The task is processing within RTLS.                */\n#define stcbprop         0x20 /* ATTACH is propagating the PKM.  @09A               */\n\n/* Values for field \"stcbflg3\" */\n#define stcbncnl         0x80 /* TASK IS NOT SUBJECT TO CANCEL   @D2A               */\n#define stcbnoab         0x40 /* NCNL EXTENSION                  @PDA               */\n#define stcbrtnc         0x20 /* ABTERMS OF THIS TASK            @PDC               */\n\n/* Values for field \"stcbcryp\" */\n#define stcbuics         0x80 /* This task is using ICSF Crypto  @LZA               */\n\n/* Values for field \"stcbxcff\" */\n#define stcbsusm         0x80 /* Bit flag for use by XCF.        @LAC               */\n\n/* Values for field \"stcbflg4\" */\n#define stcbenfl         0x80 /* If on, indicates task issued    @LFA               */\n#define stcbvsmm         0x40 /* If on, indicates task has a     @PFA               */\n\n/* Values for field \"stcbflg5\" */\n#define stcbunck         0x80 /* If on, user requests no         @LLA               */\n#define stcbenck         0x40 /* If on, checkpoint not honored   @LLA               */\n#define stcboptc         0x20 /* If on, indicates task is        @LMA               */\n\n/* Values for field \"stcbflg6\" */\n#define stcbsatf         0x80 /* If on, indicates that RACF      @08A               */\n\n/* Values for field \"stcbrgs1\" */\n#define stcbrgrm         0x80 /* Task has registered as one or   @LPA               */\n#define stcbrgem         0x40 /* Task has registered as one or   @LPA               */\n\n/* Values for field \"stcbdfp\" */\n#define stcboam          0x80 /* TASK IS A USER OF OAM RESOURCES.@03A               */\n\n/* Values for field \"stcbcons\" */\n#define stcbwto          0x80 /* Jobstep TCB issued a WTO        @LTA               */\n\n/* Values for field \"stcbflg7\" */\n#define stcbrtls         0x80 /* Internal use only               @P9M               */\n#define stcbrtla         0x40 /* Internal use only               @P9M               */\n\n/* Values for field \"stcbflc0\" */\n#define stcbtrst         0x80 /* RACF program control trust      @LYA               */\n#define stcbntrs         0x40 /* RACF program control non-trust  @LYA               */\n#define stcbpsen         0x20 /* Copy of RCVTPSEN at the time    @LYA               */\n#define stcbpsba         0x10 /* RACF basic program security     @LYA               */\n\n/* Values for field \"stcbfpfl\" */\n#define stcbbfp          0x80 /* Extended FP saving rqd          @LSA               */\n#define stcbns64         0x20 /* Used by ESPIE processing to tell                   */\n#define stcbvss          0x10 /* Vector status saving. This bit                     */\n\n/* Values for field \"stcbflg8\" */\n#define stcbtype         0x80 /* If 1 then an ESPIE exit is in                      */\n#define stcblesr         0x40 /* If 1 then the ESPIE SRB should                     */\n\n/* Values for field \"stcb_his_tcb_\" */\n#define stcb_his_is_wait 0x80 /* This bit is on when a wait has                     */\n\n/* Values for field \"stcb_his_homeasid\" */\n#define stcb_his_is_srb  0x80 /* This bit is on when the HIS data                   */\n\n/* Values for field \"tioestta\" */\n#define tiosltyp         0x80 /* -        NONSTANDARD LABEL (TAPE) (OS/VS1)         */\n#define tiospltp         0x40 /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n#define tiosplts         0x20 /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n#define tiosjblb         0x10 /* -        JOBLIB INDICATOR                          */\n#define tiosdads         0x08 /* -        DADSM ALLOCATION NECESSRY                 */\n#define tioslabl         0x04 /* -        LABELED TAPE.  IF BIT 0 IS OFF, SL OR     */\n#define tiosdsp1         0x02 /* -        REWIND/UNLOAD THE TAPE VOLUME (TAPE)      */\n#define tiosdsp2         0x01 /* -        REWIND THE TAPE VOLUME (TAPE)             */\n\n/* Values for field \"tioelink\" */\n#define tiosyout         0x80 /* -        THIS IS A SYSOUT DATA SET THAT CONTAINS   */\n#define tiotrv01         0x40 /* -        RESERVED                           MDC006 */\n#define tiotterm         0x20 /* -        DEVICE IS A TERMINAL                      */\n#define tioedynm         0x10 /* -        DYNAM CODED ON DD STATEMENT               */\n#define tioeqnam         0x08 /* -        QNAME CODED ON DD STATEMENT               */\n#define tioesyin         0x04 /* -        ENTRY FOR SPOOLED SYSIN DATA SET          */\n#define tioesyot         0x02 /* -        ENTRY FOR SPOOLED SYSOUT DATA SET         */\n#define tioessds         0x02 /* -        ENTRY FOR A SUBSYSTEM DATA SET            */\n#define tiotrem          0x01 /* -        ENTRY FOR A REMOTE DEVICE          ICB340 */\n\n/* Values for field \"tioesttc\" */\n#define tiosdkcr         0x80 /* -        MAIN STORAGE OR DASD ADDRESS              */\n#define tiosdefr         0x40 /* -        DEFERRED MOUNT                            */\n#define tiosaffp         0x20 /* -        PRIMARY UNIT AFFINITY                     */\n#define tiosaffs         0x10 /* -        SECONDARY UNIT AFFINITY                   */\n#define tiosvolp         0x08 /* -        PRIMARY VOLUME AFFINITY                   */\n#define tiosvols         0x04 /* -        SECONDARY VOLUME AFFINITY                 */\n#define tiosbalp         0x02 /* -        PRIMARY SUBALLOCATE                       */\n#define tiosbals         0x01 /* -        SECONDARY SUBALLOCATE                     */\n\n/* Values for field \"tioesttb\" */\n#define tiosused         0x80 /* -        DATA SET IS ON DEVICE                     */\n#define tiosreqd         0x40 /* -        DATA SET WILL USE DEVICE                  */\n#define tiospvio         0x20 /* -        DEVICE VIOLATES SEPARATION                */\n#define tiosvlsr         0x10 /* -        VOLUME SERIAL PRESENT                     */\n#define tiossetu         0x08 /* -        SETUP MESSAGE REQUIRED                    */\n#define tiosmntd         0x04 /* -        IF 0, DELETE UNLOADED VOLUME IF UNLOAD    */\n#define tiosunld         0x02 /* -        UNLOAD REQUIRED                           */\n#define tiosverf         0x01 /* -        VERIFICATION REQUIRED                     */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IKJRB": {"ttr": 8127, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rbprfx \u00e4\n  void          *rbrsv012; /* -            RESERVED                                  */\n  void          *rbrsv013; /* -            RESERVED                                  */\n  short int      rbrsv014; /* -            RESERVED                                  */\n  unsigned char  rbrsv015; /* -            RESERVED                                  */\n  unsigned char  rbrsv016; /* -            RESERVED                                  */\n  unsigned char  rbrsv017; /* -            RESERVED                                  */\n  unsigned char  rbrsv018; /* -            RESERVED                                  */\n  unsigned char  rbrsv019; /* -            RESERVED                                  */\n  unsigned char  rbrsv028; /* -            RESERVED                                  */\n  void          *rbrsv037; /* -            RESERVED                                  */\n  void          *rbrsv038; /* -            RESERVED                                  */\n  short int      rbrsv039; /* -            RESERVED                                  */\n  unsigned char  rbrsv040; /* -            RESERVED                                  */\n  unsigned char  rbrsv041; /* -            RESERVED                                  */\n  void          *rbrsv050; /* -            RESERVED                                  */\n  struct \u00e4\n    void          *_rbxsb;    /* -            ADDRESS OF EXTENDED STATUS BLOCK @G381P9A */\n    short int      _rbrsv052; /* -            RESERVED                                  */\n    unsigned char  _rbkeysta; /* -            THE KEY AND STATE OF THE IRB ROUTINE      */\n    unsigned char  _rbflags2; /* -            SECOND FLAG BYTE                 @G860PXB */\n    \u00fc rbprfxst;\n  struct \u00e4\n    unsigned char  _rbrtpsw1\u00c48\u00dc; /* -          FIRST DOUBLE WORD OF PSW - SYSTEM AND */\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbrsv160; /* -          RESERVED - SET TO ZERO IN LOW CORE BY       */\n        char           _rbrtilc;  /* -          INSTRUCTION LENGTH COUNTER - NUMBER OF      */\n        short int      _rbrtincd; /* -            INTERRUPT CODE                     MDC019 */\n        \u00fc rbrticil;\n      void          *_rbrtran; /* -            VIRTUAL ADDRESS CAUSING TRANSLATION */\n      \u00fc rbrtpsw2;\n    \u00fc rbrtopsw;\n  unsigned char  rbflags1; /* -            FLAG BYTE                                 */\n  unsigned char  rbflags3; /* -        FLAG BYTE. SERIALIZATION:LOCAL LOCK  @D2C     */\n  short int      rbxwaiti; /* -            EXPLICIT WAIT INDEX  (MDC342)    @G50CP9A */\n  struct \u00e4\n    char           _rbwcsa; /* -          NUMBER OF REQUESTS WAITING AT TIME OF */\n    struct \u00e4\n      unsigned char  _rbinlnth;    /* -          INSTRUCTION LENGTH CODE - 4 HIGH-ORDER */\n      unsigned char  _rbintcod\u00c42\u00dc; /* -          INTERRUPT CODE.  THIS OFFSET FIXED BY  */\n      \u00fc rbintcda;\n    \u00fc rbwlic;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbtmfld;     /* -            INDICATORS FOR TIMER ROUTINES.  WHEN */\n      unsigned char  _filler1\u00c47\u00dc;  /* -          LAST 7 BYTES OF RBEXRTNM               */\n      \u00fc rbexrtnm;\n    struct \u00e4\n      unsigned char  _rbprfxnd;    /* -           END OF RB PREFIX */\n      unsigned char  _filler2\u00c47\u00dc;\n      \u00fc _rbprfx_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler3;       /* -            RBTMFLD                                */\n        int            _rbppsav1 : 24; /* -          ADDRESS OF PROBLEM PROGRAM REGISTER SAVE */\n        \u00fc rbppsav;\n      unsigned char  _rbabopsw\u00c44\u00dc; /* -          AFTER EXECUTION OF TRANSIENT AREA HANDLER */\n      \u00fc _rbprfx_struct2;\n    \u00fc _rbprfx_union1;\n  short int      rbsize;   /* -            SIZE OF THIS RB IN DOUBLEWORDS (ALL RB'S) */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          unsigned char  _xstab1; /* -            SAME AS RBSTAB1 */\n          \u00fc rbstab1;\n        struct \u00e4\n          unsigned char  _xstab2; /* -            SAME AS RBSTAB2 */\n          \u00fc rbstab2;\n        \u00fc xstab;\n      \u00fc rbstab;\n    struct \u00e4\n      unsigned char  _filler4;  /* -            RBSTAB1 */\n      unsigned char  _filler5;  /* -            RBSTAB2 */\n      \u00fc _rbprfx_struct3;\n    \u00fc _rbprfx_union2;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler6\u00c43\u00dc;  /* -          FIRST 3 BYTES OF EP ADDRESS      @G860PXB */\n        unsigned char  _rbeplbyt;    /* BITS 0-6 = BITS 24-30 OF EP ADDR                     */\n        \u00fc rbepa;\n      \u00fc rbep;\n    struct \u00e4\n      unsigned char  _rbcdflgs;    /* -            CONTROL FLAGS                         */\n      int            _rbcde1 : 24; /* -          ADDRESS OF CDE, ADDRESS OF LPDE OR ZERO */\n      \u00fc rbcde;\n    void          *_filler7;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union3;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbopswb1; /* -            OLD PSW BYTE 1  (MDC309)         @G65RP9A */\n        unsigned char  _rbopswb2; /* -            OLD PSW BYTE 2  (MDC304)         @X50AD9A */\n        unsigned char  _filler8;  /* -          OLD PSW BYTE 3                   @G860PVB   */\n        unsigned char  _rbopswb4; /* -            OLD PSW BYTE 4                       @L2A */\n        void          *_rbopswa;  /* -            OLD PSW BYTES 5-8 (ADDRESS)      @G860PVB */\n        \u00fc xrbpsw;\n      \u00fc rbopsw;\n    unsigned char  _filler9\u00c48\u00dc;  /* -          RBOPSW */\n    \u00fc _rbprfx_union4;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler10;     /* -            ZERO                                    */\n      int            _rbpgmq1 : 24; /* -          ADDRESS OF RB INDICATING A REQUEST TO USE */\n      \u00fc rbpgmq;\n    struct \u00e4\n      char           _filler11;    /* -          RBUSE - CONTAINS ZEROS             */\n      int            _rbsqea : 24; /* -          CHAIN OF SUPERVISOR QUEUE ELEMENTS */\n      \u00fc rbsqe;\n    struct \u00e4\n      char           _rbuse;       /* -          USE COUNT USED BY ATTACH (IRB) */\n      int            _rbiqe1 : 24; /* -          LIST ORIGIN FOR IQE (IRB)      */\n      \u00fc rbiqe;\n    struct \u00e4\n      int            _rbiqea; /* -            LIST ORIGIN FOR RQE (IRB WITH 4-BYTE LINK */\n      \u00fc rbiqe2;\n    void          *_filler12;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union5;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          char           _xrbwt; /* -          SAME AS RBWCF (ALL RB'S EXCEPT LPRB AND */\n          \u00fc rbwcf;\n        int            _xrblnka : 24; /* -          SAME AS RBLINKB (ALL RB'S EXCEPT LPRB AND */\n        \u00fc xrblnk;\n      \u00fc rblink;\n    struct \u00e4\n      char           _rbscf;          /* -          RB SUSPENDED COUNT  (MDC339)     @Z40FP9A */\n      int            _filler13 : 24;  /* -          RBLINKB                                   */\n      \u00fc _rbprfx_struct4;\n    \u00fc _rbprfx_union6;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          int            _xrbreg0; /* -            SAME AS RBGRS0 */\n          \u00fc rbgrs0;\n        struct \u00e4\n          int            _xrbreg1; /* -            SAME AS RBGRS1 */\n          \u00fc rbgrs1;\n        struct \u00e4\n          int            _xrbreg2; /* -            SAME AS RBGRS2 */\n          \u00fc rbgrs2;\n        struct \u00e4\n          int            _xrbreg3; /* -            SAME AS RBGRS3 */\n          \u00fc rbgrs3;\n        struct \u00e4\n          int            _xrbreg4; /* -            SAME AS RBGRS4 */\n          \u00fc rbgrs4;\n        struct \u00e4\n          int            _xrbreg5; /* -            SAME AS RBGRS5 */\n          \u00fc rbgrs5;\n        struct \u00e4\n          int            _xrbreg6; /* -            SAME AS RBGRS6 */\n          \u00fc rbgrs6;\n        struct \u00e4\n          int            _xrbreg7; /* -            SAME AS RBGRS7 */\n          \u00fc rbgrs7;\n        struct \u00e4\n          int            _xrbreg8; /* -            SAME AS RBGRS8 */\n          \u00fc rbgrs8;\n        struct \u00e4\n          int            _xrbreg9; /* -            SAME AS RBGRS9 */\n          \u00fc rbgrs9;\n        struct \u00e4\n          int            _xrbreg10; /* -            SAME AS RBGRS10 */\n          \u00fc rbgrs10;\n        struct \u00e4\n          int            _xrbreg11; /* -            SAME AS RBGRS11 */\n          \u00fc rbgrs11;\n        struct \u00e4\n          int            _xrbreg12; /* -            SAME AS RBGRS12 */\n          \u00fc rbgrs12;\n        struct \u00e4\n          int            _xrbreg13; /* -            SAME AS RBGRS13 */\n          \u00fc rbgrs13;\n        struct \u00e4\n          int            _xrbreg14; /* -            SAME AS RBGRS14 */\n          \u00fc rbgrs14;\n        struct \u00e4\n          int            _xrbreg15; /* -            SAME AS RBGRS15 */\n          \u00fc rbgrs15;\n        \u00fc xrbreg;\n      \u00fc rbgrsave;\n    unsigned char  _filler14\u00c464\u00dc;  /* -         RBGRSAVE */\n    \u00fc _rbprfx_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbexsave\u00c448\u00dc;  /* -        EXTENDED SAVE AREA FOR SVC ROUTINES */\n      unsigned char  _filler15\u00c448\u00dc;\n      \u00fc _rbprfx_struct5;\n    struct \u00e4\n      struct \u00e4\n        void          *_rbrsv135; /* -            RESERVED */\n        \u00fc irbend;\n      short int      _rbrsv136;      /* -            RESERVED */\n      unsigned char  _rbrsv137;      /* -            RESERVED */\n      unsigned char  _rbrsv138;      /* -            RESERVED */\n      struct \u00e4\n        int            _tirbend; /* -           END OF TIRB */\n        \u00fc prbend;\n      unsigned char  _filler16\u00c484\u00dc;\n      \u00fc _rbprfx_struct6;\n    struct \u00e4\n      double         _xrbesa\u00c410\u00dc;    /* -          SVRB - EXTENDED SAVE AREA OF UP TO TEN */\n      unsigned char  _filler17\u00c416\u00dc;\n      \u00fc _rbprfx_struct7;\n    struct \u00e4\n      void          *_rbnexav;       /* -            ADDRESS OF NEXT AVAILABLE IQE (IRB) */\n      int            _rbiqewrk;      /* -            IQE WORK SPACE, VARIABLE LENGTH,    */\n      unsigned char  _filler18\u00c488\u00dc;\n      \u00fc _rbprfx_struct8;\n    struct \u00e4\n      unsigned char  _rbsirbwa\u00c464\u00dc;  /* -         SIRB WORK AREA                     MDC022 */\n      void          *_rbrsv161;      /* -            RESERVED - RBRSV148 FOLLOWS THIS FIELD */\n      unsigned char  _filler19\u00c428\u00dc;\n      \u00fc _rbprfx_struct9;\n    struct \u00e4\n      unsigned char  _filler20\u00c48\u00dc;\n      unsigned char  _filler21\u00c440\u00dc;  /* -         LAST 40 BYTES OF RBEXSAVE                   */\n      struct \u00e4\n        void          *_rbschain; /* -            POINTER TO NEXT SCB ON CHAIN              */\n        void          *_rbsexit;  /* -            POINTER TO USER WRITTEN EXIT ROUTINE      */\n        struct \u00e4\n          unsigned char  _rbsflgs1;      /* -            FIRST FLAG BYTE  (MDC309)        @Z40FP9A */\n          int            _rbsparma : 24; /* -          ADDRESS OF PARAMETER LIST FOR STA EXIT      */\n          \u00fc rbsparm;\n        struct \u00e4\n          unsigned char  _rbsflgs2;      /* -            SECOND FLAG BYTE  (MDC320)       @Z40FP9A */\n          int            _rbsownra : 24; /* -          RB ADDRESS IF STAE/STAR, TCB ADDRESS IF     */\n          \u00fc rbsownr;\n        struct \u00e4\n          unsigned char  _rbsflg3;  /* -            OPTION FLAGS  (MDC327)           @Z40FP9A */\n          unsigned char  _rbspkey;  /* -            PROGRAM KEY  (MDC334)            @Z40FP9A */\n          unsigned char  _rbsid;    /* -            SCB IDENTIFIER  (MDC335)         @Z40FP9A */\n          unsigned char  _rbrsv169; /* -            RESERVED  (MDC336)               @Z40FP9A */\n          \u00fc rbsdata;\n        void          *_rbsxptr;  /* -            POINTER TO SCB EXTENSION (SCBX)  @G381P9A */\n        \u00fc rbscbb;\n      int            _sirbend;       /* -           END OF SIRB                 MDC021-MDC022 */\n      unsigned char  _filler22\u00c420\u00dc;\n      \u00fc _rbprfx_struct10;\n    struct \u00e4\n      unsigned char  _filler23\u00c472\u00dc;\n      int            _rbfeparm\u00c46\u00dc;   /* -           PARAMETER AREA FOR ROUTINES THAT USE */\n      \u00fc _rbprfx_struct11;\n    \u00fc _rbprfx_union8;\n  struct \u00e4\n    unsigned char  _filler24\u00c412\u00dc;  /* -         FIRST 12 BYTES OF RBSCBX         @G860PXB    */\n    void          *_rbsxparm;      /* -            31-BIT PARAMETER LIST ADDRESS    @G860PXB */\n    \u00fc rbscbx;\n  int            svrbend;  /* -           END OF SVRB (BOTH)  (MDC338)     @Z40FP9A  */\n  \u00fc;\n\n#define rbxsb     rbprfxst._rbxsb\n#define rbrsv052  rbprfxst._rbrsv052\n#define rbkeysta  rbprfxst._rbkeysta\n#define rbflags2  rbprfxst._rbflags2\n#define rbrtpsw1  rbrtopsw._rbrtpsw1\n#define rbrsv160  rbrtopsw.rbrtpsw2.rbrticil._rbrsv160\n#define rbrtilc   rbrtopsw.rbrtpsw2.rbrticil._rbrtilc\n#define rbrtincd  rbrtopsw.rbrtpsw2.rbrticil._rbrtincd\n#define rbrtran   rbrtopsw.rbrtpsw2._rbrtran\n#define rbwcsa    rbwlic._rbwcsa\n#define rbinlnth  rbwlic.rbintcda._rbinlnth\n#define rbintcod  rbwlic.rbintcda._rbintcod\n#define rbtmfld   _rbprfx_union1.rbexrtnm._rbtmfld\n#define rbprfxnd  _rbprfx_union1._rbprfx_struct1._rbprfxnd\n#define rbppsav1  _rbprfx_union1._rbprfx_struct2.rbppsav._rbppsav1\n#define rbabopsw  _rbprfx_union1._rbprfx_struct2._rbabopsw\n#define xstab1    _rbprfx_union2.rbstab.xstab.rbstab1._xstab1\n#define xstab2    _rbprfx_union2.rbstab.xstab.rbstab2._xstab2\n#define rbeplbyt  _rbprfx_union3.rbep.rbepa._rbeplbyt\n#define rbcdflgs  _rbprfx_union3.rbcde._rbcdflgs\n#define rbcde1    _rbprfx_union3.rbcde._rbcde1\n#define rbopswb1  _rbprfx_union4.rbopsw.xrbpsw._rbopswb1\n#define rbopswb2  _rbprfx_union4.rbopsw.xrbpsw._rbopswb2\n#define rbopswb4  _rbprfx_union4.rbopsw.xrbpsw._rbopswb4\n#define rbopswa   _rbprfx_union4.rbopsw.xrbpsw._rbopswa\n#define rbpgmq1   _rbprfx_union5.rbpgmq._rbpgmq1\n#define rbsqea    _rbprfx_union5.rbsqe._rbsqea\n#define rbuse     _rbprfx_union5.rbiqe._rbuse\n#define rbiqe1    _rbprfx_union5.rbiqe._rbiqe1\n#define rbiqea    _rbprfx_union5.rbiqe2._rbiqea\n#define xrbwt     _rbprfx_union6.rblink.xrblnk.rbwcf._xrbwt\n#define xrblnka   _rbprfx_union6.rblink.xrblnk._xrblnka\n#define rbscf     _rbprfx_union6._rbprfx_struct4._rbscf\n#define xrbreg0   _rbprfx_union7.rbgrsave.xrbreg.rbgrs0._xrbreg0\n#define xrbreg1   _rbprfx_union7.rbgrsave.xrbreg.rbgrs1._xrbreg1\n#define xrbreg2   _rbprfx_union7.rbgrsave.xrbreg.rbgrs2._xrbreg2\n#define xrbreg3   _rbprfx_union7.rbgrsave.xrbreg.rbgrs3._xrbreg3\n#define xrbreg4   _rbprfx_union7.rbgrsave.xrbreg.rbgrs4._xrbreg4\n#define xrbreg5   _rbprfx_union7.rbgrsave.xrbreg.rbgrs5._xrbreg5\n#define xrbreg6   _rbprfx_union7.rbgrsave.xrbreg.rbgrs6._xrbreg6\n#define xrbreg7   _rbprfx_union7.rbgrsave.xrbreg.rbgrs7._xrbreg7\n#define xrbreg8   _rbprfx_union7.rbgrsave.xrbreg.rbgrs8._xrbreg8\n#define xrbreg9   _rbprfx_union7.rbgrsave.xrbreg.rbgrs9._xrbreg9\n#define xrbreg10  _rbprfx_union7.rbgrsave.xrbreg.rbgrs10._xrbreg10\n#define xrbreg11  _rbprfx_union7.rbgrsave.xrbreg.rbgrs11._xrbreg11\n#define xrbreg12  _rbprfx_union7.rbgrsave.xrbreg.rbgrs12._xrbreg12\n#define xrbreg13  _rbprfx_union7.rbgrsave.xrbreg.rbgrs13._xrbreg13\n#define xrbreg14  _rbprfx_union7.rbgrsave.xrbreg.rbgrs14._xrbreg14\n#define xrbreg15  _rbprfx_union7.rbgrsave.xrbreg.rbgrs15._xrbreg15\n#define rbexsave  _rbprfx_union8._rbprfx_struct5._rbexsave\n#define rbrsv135  _rbprfx_union8._rbprfx_struct6.irbend._rbrsv135\n#define rbrsv136  _rbprfx_union8._rbprfx_struct6._rbrsv136\n#define rbrsv137  _rbprfx_union8._rbprfx_struct6._rbrsv137\n#define rbrsv138  _rbprfx_union8._rbprfx_struct6._rbrsv138\n#define tirbend   _rbprfx_union8._rbprfx_struct6.prbend._tirbend\n#define xrbesa    _rbprfx_union8._rbprfx_struct7._xrbesa\n#define rbnexav   _rbprfx_union8._rbprfx_struct8._rbnexav\n#define rbiqewrk  _rbprfx_union8._rbprfx_struct8._rbiqewrk\n#define rbsirbwa  _rbprfx_union8._rbprfx_struct9._rbsirbwa\n#define rbrsv161  _rbprfx_union8._rbprfx_struct9._rbrsv161\n#define rbschain  _rbprfx_union8._rbprfx_struct10.rbscbb._rbschain\n#define rbsexit   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsexit\n#define rbsflgs1  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsflgs1\n#define rbsparma  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsparma\n#define rbsflgs2  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsflgs2\n#define rbsownra  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsownra\n#define rbsflg3   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsflg3\n#define rbspkey   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbspkey\n#define rbsid     _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsid\n#define rbrsv169  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbrsv169\n#define rbsxptr   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsxptr\n#define sirbend   _rbprfx_union8._rbprfx_struct10._sirbend\n#define rbfeparm  _rbprfx_union8._rbprfx_struct11._rbfeparm\n#define rbsxparm  rbscbx._rbsxparm\n\n/* Values for field \"rbrsv019\" */\n#define rbrsv020 0x80 /* -  RESERVED                                           */\n#define rbrsv021 0x40 /* -  RESERVED                                           */\n#define rbrsv022 0x20 /* -  RESERVED                                           */\n#define rbrsv023 0x10 /* -  RESERVED                                           */\n#define rbrsv024 0x08 /* -  RESERVED                                           */\n#define rbrsv025 0x04 /* -  RESERVED                                           */\n#define rbrsv026 0x02 /* -  RESERVED                                           */\n#define rbrsv027 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv028\" */\n#define rbrsv029 0x80 /* -  RESERVED                                           */\n#define rbrsv030 0x40 /* -  RESERVED                                           */\n#define rbrsv031 0x20 /* -  RESERVED                                           */\n#define rbrsv032 0x10 /* -  RESERVED                                           */\n#define rbrsv033 0x08 /* -  RESERVED                                           */\n#define rbrsv034 0x04 /* -  RESERVED                                           */\n#define rbrsv035 0x02 /* -  RESERVED                                           */\n#define rbrsv036 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv041\" */\n#define rbrsv042 0x80 /* -  RESERVED                                           */\n#define rbrsv043 0x40 /* -  RESERVED                                           */\n#define rbrsv044 0x20 /* -  RESERVED                                           */\n#define rbrsv045 0x10 /* -  RESERVED                                           */\n#define rbrsv046 0x08 /* -  RESERVED                                           */\n#define rbrsv047 0x04 /* -  RESERVED                                           */\n#define rbrsv048 0x02 /* -  RESERVED                                           */\n#define rbrsv049 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbkeysta\" */\n#define rbkey    0xF0 /* THE KEY OF THE IRB ROUTINE           @01A             */\n#define rbcirb   0x0C /* THIS IRB WAS CREATED BY CIRB         @01A             */\n#define rbstate  0x01 /* PROBLEM STATE IRB ROUTINE INDICATOR  @01A             */\n\n/* Values for field \"rbflags2\" */\n#define rbxwaita 0x80 /* -         AMODE OF WAITER WHO HAS ENTERED EXPLICIT    */\n#define rbrsv056 0x40 /* -  RESERVED                                           */\n#define rbrsv057 0x20 /* -  RESERVED                                           */\n#define rbrsv058 0x10 /* -  RESERVED                                           */\n#define rbrsv059 0x08 /* -  RESERVED                                           */\n#define rbrsv060 0x04 /* -  RESERVED                                           */\n#define rbrsv061 0x02 /* -  RESERVED                                           */\n#define rbrsv062 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbflags1\" */\n#define rbslock  0x80 /* -         INDICATES THAT THIS RB IS                   */\n#define rbxwait  0x40 /* -         INDICATES THAT THE PROGRAM OPERATING        */\n#define rbabend  0x20 /* -         ABEND SVRB  (SVRB-BOTH)                     */\n#define rbxwprm  0x10 /* -         WAIT POST RESOURCE MANAGER REQUEST          */\n#define rbasir   0x08 /* -         ASIR IS RUNNING UNDER THIS RB      ICB444   */\n#define rblongwt 0x04 /* -         LONG WAIT ISSUED UNDER THIS RB     MDC009   */\n#define rbscb    0x02 /* -         SET BY SVC 60 TO INDICATE RB HAS AN         */\n#define rbsssyn  0x01 /* -         SYNCHRONIZED STATUS STOP PENDING FOR        */\n\n/* Values for field \"rbflags3\" */\n#define rbwtecb  0x80 /* -        WAIT WAS ISSUED WITH AN ECB PROVIDED @D2A    */\n\n/* Values for field \"rbtmfld\" */\n#define rbtmque  0x80 /* -         TIMER ELEMENT NOT ON QUEUE                  */\n#define rbtmtod  0x40 /* -         LOCAL TIME-OF-DAY OPTION IS USED            */\n#define rbrsv005 0x20 /* -   RESERVED                                          */\n#define rbwlim   0x10 /* -         WAIT LIMIT EXCEEDED                MDC001   */\n#define rbtmcmp  0x08 /* -         INTERVAL HAS EXPIRED                        */\n#define rbtmind2 0x04 /* -         EXIT SPECIFIED WITH TASK OR REAL REQUEST    */\n#define rbtmind3 0x03 /* -    TYPE OF REQUEST                                  */\n#define rbtreq   0x00 /* -        TASK REQUEST                                 */\n#define rbwreq   0x01 /* -         WAIT REQUEST                                */\n#define rbrreq   0x03 /* -    REAL REQUEST                                     */\n\n/* Values for field \"xstab1\" */\n#define rbftckpt 0x04 /* -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT    */\n#define xrbckpt  0x04 /* -         SAME AS RBFTCKPT                            */\n\n/* Values for field \"xstab2\" */\n#define rbtcbnxt 0x80 /* -         RBLINK FIELD POINTS TO TCB (ALL RB'S)       */\n#define xrbtcbp  0x80 /* -         SAME AS RBTCBNXT                            */\n#define rbfactv  0x40 /* -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS   */\n#define xrbactv  0x40 /* -         ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND    */\n#define rbfdyn   0x02 /* -         RB STORAGE CAN BE FREED AT EXIT             */\n#define xrbfrrb  0x02 /* -         SAME AS RBFDYN                              */\n#define rbecbwt  0x01 /* -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL     */\n#define xrbwait  0x01 /* -         SAME AS RBECBWT                             */\n\n/* Values for field \"_filler4\" */\n#define rbftp    0xE0 /* TYPE OF RB                                            */\n#define rbftprb  0x00 /* -        PRB                                          */\n#define rbfttirb 0x60 /* -    TIRB                               ICB417        */\n#define rbftirb  0x40 /* -         IRB                                         */\n#define rbftsirb 0x80 /* -         SIRB                                        */\n#define rbftsvrb 0xC0 /* -    SVRB                                             */\n#define rbtrsvrb 0x10 /* -         IF RBTRSVRB=0 AND RBCDE=0, THEN TYPE 2      */\n#define rbfnsvrb 0x10 /* -         ALIAS FOR RBTRSVRB                          */\n#define rbwaitp  0x08 /* -         INDICATES THAT AN ECB IS POINTING AT THE    */\n#define rbatnxit 0x02 /* -         THIS IRB IS AN ATTENTION IRB       ICB444   */\n#define rbpmsvrb 0x01 /* -         THIS IS A PROGRAM MANAGER SVRB - VALID      */\n\n/* Values for field \"_filler5\" */\n#define rbattn   0x20 /* -         EXITING PROGRAM IS AN ATTENTION EXIT        */\n#define rbetxr   0x10 /* -         IRB IS FOR AN ETXR EXIT ROUTINE             */\n#define rbusiqe  0x10 /* -         SAME AS RBETXR                     ICB444   */\n#define rbiqetp  0x0C /* -                                                     */\n#define rbrqenr  0x00 /* -        REQUEST QUEUE ELEMENT IS NOT TO BE           */\n#define rbirbaer 0x04 /* -         IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY   */\n#define rbiqenr  0x08 /* -         IQE IS NOT TO BE RETURNED AT EXIT           */\n#define rbirbaiq 0x0C /* -    IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY        */\n\n/* Values for field \"rbeplbyt\" */\n#define rbeppd   0x01 /* -        BIT 31 INDICATES RBEP IS POINTER-DEFINED     */\n\n/* Values for field \"rbep\" */\n#define rbepm    0x80 /* -        ADDRESSING MODE OF ROUTINE, IF               */\n\n/* Values for field \"rbcdflgs\" */\n#define rbnocell 0x80 /* -         EXIT SHOULD FREEMAIN THIS SVRB RATHER       */\n#define rbrsv009 0x40 /* -   RESERVED                                          */\n#define rbcdatch 0x20 /* -         CONTENTS SUPERVISION HAS BEEN ENTERED       */\n#define rbcdsave 0x10 /* -         EXIT WILL LOAD REGISTERS FROM PRB ON        */\n#define rbcdnode 0x08 /* -         NO DE SAVE AREA REQUIRED           ICB444   */\n#define rbcdsync 0x04 /* -         SYNCH MACRO INSTRUCTION REQUESTED           */\n#define rbcdxctl 0x02 /* -         XCTL MACRO INSTRUCTION REQUESTED            */\n#define rbcdload 0x01 /* -         LOAD MACRO INSTRUCTION REQUESTED            */\n\n/* Values for field \"rbopswb1\" */\n#define rboper   0x40 /* -        PER BIT IN RBOPSWB1  (MDC310)    @G65RP9A    */\n\n/* Values for field \"rbopswb2\" */\n#define rbopswps 0x01 /* -        PROBLEM STATE BIT IN OLD PSW                 */\n\n/* Values for field \"rbopswb4\" */\n#define rbopsw64 0x01 /* AMODE 64                             @L2A             */\n\n/* Values for field \"rbopswa\" */\n#define rbopswm  0x80 /* -        ADDRESSING MODE OF OLD PSW       @G860PVB    */\n#define rbopsw31 0x80 /* -        ADDRESSING MODE OF OLD PSW           @L2A    */\n\n/* Values for field \"rbrsv138\" */\n#define rbrsv139 0x80 /* -  RESERVED                                           */\n#define rbrsv140 0x40 /* -  RESERVED                                           */\n#define rbrsv141 0x20 /* -  RESERVED                                           */\n#define rbrsv142 0x10 /* -  RESERVED                                           */\n#define rbrsv143 0x08 /* -  RESERVED                                           */\n#define rbrsv144 0x04 /* -  RESERVED                                           */\n#define rbrsv145 0x02 /* -  RESERVED                                           */\n#define rbrsv146 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv161\" */\n#define sirbwaln 0x40 /* -           LENGTH OF RBSIRBWA                 MDC023 */\n#define rbprfxln 0x40 /* - TOTAL PREFIX LENGTH INCLUDING                       */\n#define rbprflna 0x20 /* - ASSIGNED PREFIX LENGTH                              */\n#define prblen   0x88 /* -   REAL PRB LENGTH FOR GETMAIN                       */\n#define sirblen  0xC8 /* -  REAL SIRB LENGTH FOR GETMAIN                       */\n#define tirblen  0x88 /* -  REAL TIRB LENGTH FOR GETMAIN                       */\n#define irblen   0x80 /* -   REAL IRB LENGTH FOR GETMAIN UNLESS                */\n#define svrblen  0xF0 /* -  REAL SVRB LENGTH FOR GETMAIN                       */\n\n/* Values for field \"rbsflgs1\" */\n#define rbsstai  0x80 /* -         STAI SCB  (MDC310)               @Z40FP9A   */\n#define rbsstar  0x40 /* -         STAR SCB.  SCB IF FOR STAE IF NEITHER       */\n#define rbsdummy 0x20 /* -         DUMMY SCB (WILL NOT BE SCHEDULED)           */\n#define rbsestae 0x10 /* -         ESTAE INDICATOR  (MDC313)        @Z40FP9A   */\n#define rbrsv162 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbsasync 0x04 /* -         ALLOW ASYNCHRONOUS INTERRUPTS               */\n#define rbsioprc 0x03 /* -    I/O PROCESSING OPTION.  BOTH BITS OFF            */\n#define rbsnoiop 0x02 /* -         BYPASS I/O INTERVENTION (MDC316) @Z40FP9A   */\n#define rbshalt  0x01 /* -         HALT I/O  (MDC317)               @Z40FP9A   */\n\n/* Values for field \"rbsflgs2\" */\n#define rbsamode 0x80 /* -         USER IS IN 31 BIT                           */\n#define rbsxctl2 0x40 /* -         RETAIN THIS SCB ACROSS XCTL                 */\n#define rbrsv164 0x20 /* -         RESERVED                         @Z40FP9A   */\n#define rbsinuse 0x10 /* -         THIS SCB IN USE  (MDC322)        @Z40FP9A   */\n#define rbrsv165 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbrsv166 0x04 /* -         RESERVED                         @Z40FP9A   */\n#define rbskey0  0x02 /* -         USER IN KEY 0  (MDC323)          @Z40FP9A   */\n#define rbssuper 0x01 /* -         USER IN SUPERVISOR MODE (MDC324) @Z40FP9A   */\n\n/* Values for field \"rbsflg3\" */\n#define rbrsv167 0x80 /* -         RESERVED                         @Z40FP9A   */\n#define rbstermi 0x40 /* -         AUTHORIZED FOR TERM PROCESSING              */\n#define rbsrecrd 0x20 /* -         ERROR RECORD TO BE WRITTEN TO THE LOGREC    */\n#define rbscncel 0x10 /* -         SCB IS LOGICALLY CANCELED                   */\n#define rbsprntr 0x08 /* -         SCB IS PREVIOUSLY ENTERED                   */\n#define rbsbrntr 0x04 /* -         BRANCH ENTERED SVC 60  (MDC332)  @Z40FP9A   */\n#define rbstermo 0x02 /* -         TERM PROCESSING ONLY  (MDC333)   @Z40FP9A   */\n#define rbrsv168 0x01 /* -         RESERVED                         @Z40FP9A   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IKJTCB": {"ttr": 8623, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tcbfix \u00e4\n  struct \u00e4\n    double         _tcbfrs0; /* -     SAVE AREA FOR FLOATING POINT REGISTER 0 */\n    double         _tcbfrs2; /* -     SAVE AREA FOR FLOATING POINT REGISTER 2 */\n    double         _tcbfrs4; /* -     SAVE AREA FOR FLOATING POINT REGISTER 4 */\n    double         _tcbfrs6; /* -     SAVE AREA FOR FLOATING POINT REGISTER 6 */\n    \u00fc tcbfrs;\n  void          *tcbrbp;      /* -     ADDRESS OF THE RB FOR EXECUTING PROGRAM.  THIS   */\n  void          *tcbpie;      /* -     Address of current PIE/EPIE.  This field    @P8C */\n  void          *tcbdeb;      /* -     ADDRESS OF THE DEB QUEUE                         */\n  void          *tcbtio;      /* -     ADDRESS OF THE TASK I/O TABLE (TIOT)             */\n  struct \u00e4\n    unsigned char  _tcbcmpf;    /* -     INDICATOR FLAGS                        */\n    unsigned char  _tcbcmpc\u00c43\u00dc; /* -   SYSTEM COMPLETION CODE IN FIRST 12 BITS, */\n    \u00fc tcbcmp;\n  struct \u00e4\n    unsigned char  _tcbabf;       /* -     FLAG BYTE                           */\n    int            _tcbtrnb : 24; /* -   ADDRESS OF TESTRAN CONTROL CORE TABLE */\n    \u00fc tcbtrn;\n  struct \u00e4\n    unsigned char  _filler1;      /* -     HIGH ORDER BYTE OF TCBMSS                   @H2C */\n    int            _tcbmssb : 24; /* -   SAME AS TCBMSS                              @L6C   */\n    \u00fc tcbmss;\n  unsigned char  tcbpkf;      /* -     STORAGE PROTECTION KEY FOR THIS TASK.  IF THERE  */\n  struct \u00e4\n    unsigned char  _tcbflgs1; /* -     FIRST TCB FLAG BYTE                              */\n    unsigned char  _tcbflgs2; /* -     SECOND FLAG BYTE                                 */\n    unsigned char  _tcbflgs3; /* -     THIRD FLAG BYTE.                        @G381P9A */\n    unsigned char  _tcbflgs4; /* -     NONDISPATCHABILITY FLAGS                         */\n    unsigned char  _tcbflgs5; /* -     MORE NONDISPATCHABILITY FLAGS.   IF ANY BIT IN   */\n    \u00fc tcbflgs;\n  char           tcblmp;      /* -   TASK LIMIT PRIORITY                                */\n  char           tcbdsp;      /* -   DISPATCHING PRIORITY FOR THIS TASK                 */\n  void          *tcblls;      /* -     ADDRESS OF LAST LOAD LIST ELEMENT (LLE) IN LOAD  */\n  void          *tcbjlb;      /* -     ADDRESS OF A JOBLIB DCB                          */\n  struct \u00e4\n    unsigned char  _tcbpurge;     /* -     HIGH ORDER BYTE                         @G860PXB */\n    int            _tcbjpqb : 24; /* -   LOW ORDER 24-BITS OF TCBJPQ             @G860PXB   */\n    \u00fc tcbjpq;\n  struct \u00e4\n    int            _tcbgrs0;  /* -     SAVE AREA FOR GENERAL REGISTER 0  */\n    int            _tcbgrs1;  /* -     SAVE AREA FOR GENERAL REGISTER 1  */\n    int            _tcbgrs2;  /* -     SAVE AREA FOR GENERAL REGISTER 2  */\n    int            _tcbgrs3;  /* -     SAVE AREA FOR GENERAL REGISTER 3  */\n    int            _tcbgrs4;  /* -     SAVE AREA FOR GENERAL REGISTER 4  */\n    int            _tcbgrs5;  /* -     SAVE AREA FOR GENERAL REGISTER 5  */\n    int            _tcbgrs6;  /* -     SAVE AREA FOR GENERAL REGISTER 6  */\n    int            _tcbgrs7;  /* -     SAVE AREA FOR GENERAL REGISTER 7  */\n    int            _tcbgrs8;  /* -     SAVE AREA FOR GENERAL REGISTER 8  */\n    int            _tcbgrs9;  /* -     SAVE AREA FOR GENERAL REGISTER 9  */\n    int            _tcbgrs10; /* -     SAVE AREA FOR GENERAL REGISTER 10 */\n    int            _tcbgrs11; /* -     SAVE AREA FOR GENERAL REGISTER 11 */\n    int            _tcbgrs12; /* -     SAVE AREA FOR GENERAL REGISTER 12 */\n    int            _tcbgrs13; /* -     SAVE AREA FOR GENERAL REGISTER 13 */\n    int            _tcbgrs14; /* -     SAVE AREA FOR GENERAL REGISTER 14 */\n    int            _tcbgrs15; /* -     SAVE AREA FOR GENERAL REGISTER 15 */\n    \u00fc tcbgrs;\n  struct \u00e4\n    char           _filler2;      /* -   FIRST BYTE OF TCBFSA                    @G381P9A */\n    int            _tcbfsab : 24; /* -   ADDRESS OF THE FIRST PROBLEM PROGRAM SAVE AREA   */\n    \u00fc tcbfsa;\n  void          *tcbtcb;      /* -     Queue of TCBs in an address space.          @L5C */\n  void          *tcbtme;      /* -     ADDRESS OF THE TIMER QUEUE ELEMENT (TQE)         */\n  struct \u00e4\n    unsigned char  _filler3;       /* -     HIGH ORDER BYTE OF TCBJSTCB             @G860PXB */\n    int            _tcbjstca : 24; /* -   LOW ORDER 24 BITS OF TCBJSTCB           @G860PXB   */\n    \u00fc tcbjstcb;\n  void          *tcbntc;      /* -     ADDRESS OF THE TCB FOR THE TASK PREVIOUSLY       */\n  void          *tcbotc;      /* -     ADDRESS OF THE TCB FOR THE TASK (THE ORIGINATING */\n  void          *tcbltc;      /* -     ADDRESS OF THE TCB FOR THE TASK LAST ATTACHED BY */\n  void          *tcbiqe;      /* -     ADDRESS OF AN INTERRUPTION QUEUE ELEMENT (IQE)   */\n  void          *tcbecb;      /* -     ADDRESS OF THE ECB THAT WILL BE POSTED BY THE    */\n  unsigned char  tcbtsflg;    /* -     TIME SHARING FLAGS                               */\n  char           tcbstpct;    /* -   NUMBER OF SETTASK STARTS WHICH MUST BE             */\n  char           tcbtslp;     /* -   LIMIT PRIORITY OF TIME SHARING TASK                */\n  unsigned char  tcbtsdp;     /* -     DISPATCHING PRIORITY OF TIME SHARING TASK        */\n  void          *tcbrd;       /* POINTER TO DPQE MINUS 8 FOR THE JOB STEP               */\n  void          *tcbae;       /* LIST ORIGIN OF AQE(S) FOR THIS TASK                    */\n  struct \u00e4\n    unsigned char  _tcbnstae;      /* -     FLAGS INTERNAL TO STAE ROUTINE          */\n    int            _tcbstabb : 24; /* -   ADDRESS OF THE CURRENT STAE CONTROL BLOCK */\n    \u00fc tcbstab;\n  struct \u00e4\n    unsigned char  _tcbtctgf;     /* -     FLAG BYTE FOR TIMING CONTROL TABLE        ICB318 */\n    int            _tcbtctb : 24; /* -   ADDRESS OF THE TIMING CONTROL TABLE (TCT) IF       */\n    \u00fc tcbtct;\n  void          *tcbuser;     /* -     A WORD AVAILABLE TO THE USER                     */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _tcbndsp0; /* -     BYTE 0 */\n      unsigned char  _tcbndsp1; /* -     BYTE 1 */\n      unsigned char  _tcbndsp2; /* -     BYTE 2 */\n      unsigned char  _tcbndsp3; /* -     BYTE 3 */\n      \u00fc tcbndsp;\n    \u00fc tcbscndy;\n  int            tcbmdids;    /* -     RESERVED FOR MODEL-DEPENDENT SUPPORT AND FOR     */\n  struct \u00e4\n    unsigned char  _tcbrecde;      /* -     ABEND RECURSION BYTE                      ICB456 */\n    int            _tcbjscbb : 24; /* -   ADDRESS OF THE JOB STEP CONTROL BLOCK              */\n    \u00fc tcbjscb;\n  void          *tcbssat;     /* -     ADDRESS OF THE SUBSYSTEM AFFINITY TABLE @G381P9A */\n  void          *tcbiobrc;    /* -     ADDRESS OF IOB RESTORE CHAIN FOR I/O QUIESCED    */\n  void          *tcbexcpd;    /* -     ADDRESS OF EXCP DEBUG AREA                YM4297 */\n  struct \u00e4\n    unsigned char  _filler4;       /* -     RESERVED.                                   @H2C */\n    int            _tcbext1a : 24; /* -   ADDRESS OF OS-OS/VS COMMON TCB EXTENSION  ICB311   */\n    \u00fc tcbext1;\n  struct \u00e4\n    unsigned char  _tcbndsp4; /* -     SECONDARY NONDISPATCHABILITY FLAGS COMMON TO */\n    unsigned char  _tcbndsp5; /* -     SECONDARY NONDISPATCHABILITY FLAGS UNIQUE TO */\n    unsigned char  _tcbflgs6; /* -     TASK-RELATED FLAGS                           */\n    unsigned char  _tcbflgs7; /* -     TASK-RELATED FLAGS                           */\n    \u00fc tcbbits;\n  unsigned char  tcbdar;      /* -     DAMAGE ASSESSMENT ROUTINE (DAR) FLAGS            */\n  unsigned char  tcbrsv37;    /* -     RESERVED FOR USER                                */\n  char           tcbsysct;    /* -   NUMBER OF OUTSTANDING SYSTEM-MUST-COMPLETE         */\n  char           tcbstmct;    /* -   NUMBER OF OUTSTANDING STEP-MUST-COMPLETE           */\n  struct \u00e4\n    unsigned char  _filler5;       /* -     FIRST BYTE OF TCBEXT2                   @G381P9A */\n    int            _tcbext2a : 24; /* -   ADDRESS OF OS/VS1 - OS/VS2 COMMON EXTENSION        */\n    \u00fc tcbext2;\n  int            tcbaecb;     /* -     ABEND ECB.  POSTED BY A MOTHER TASK IN RTM2      */\n  void          *tcbxsb;      /* -     ADDRESS OF CURRENT XSB FOR TASK.        @G381P9A */\n  void          *tcbback;     /* -     ADDRESS OF PREVIOUS TCB ON READY QUEUE.  ZERO    */\n  void          *tcbrtwa;     /* -     POINTER TO CURRENT RTM2 WORK AREA                */\n  void          *tcbnssp;     /* -     NORMAL STACK SAVE AREA POINTER.                  */\n  void          *tcbxlas;     /* -     ASCB ADDRESS OF THE CML LOCK HELD WHILE @G381PXU */\n  unsigned char  tcbabcur;    /* -     ABEND RECURSION BYTE                             */\n  char           tcbfjmct;    /* -   NUMBER OF OUTSTANDING STEP-MUST-COMPLETE@YA02725   */\n  unsigned char  tcbtid;      /* -     The task identifier as specified on the     @P7C */\n  unsigned char  tcbflgs8;    /* -     GUPI FLAG BYTE FIELD                        @P1A */\n  struct \u00e4\n    unsigned char  _tcbxsct1; /* -     FLAG BYTE                               @Z40FP9A */\n    unsigned char  _tcbxsct2; /* -     FLAG BYTE                               @G381P9A */\n    short int      _tcbccpvi; /* -     ID OF THE CURRENT CPU RUNNING THIS TASK.  USED   */\n    \u00fc tcbxsct;\n  struct \u00e4\n    unsigned char  _filler6;      /* -     RESERVED.                                   @H2C */\n    int            _tcbfoea : 24; /* -   ADDRESS OF FIRST FIX OWNERSHIP ELEMENT (FOE)       */\n    \u00fc tcbfoe;\n  void          *tcbswa;      /* -     ADDRESS OF FIRST SCHEDULER WORK AREA (SWA) SPQE  */\n  void          *tcbstawa;    /* -     ESTAE ROUTINE WORK AREA POINTER         @Z40FP9A */\n  unsigned char  tcbtcbid\u00c44\u00dc; /* -   CONTAINS BLOCK ID - 'TCB '                         */\n  void          *tcbrtm12;    /* -     POINTER TO PARAMETER AREAS PASSED FROM RTM1 TO   */\n  struct \u00e4\n    unsigned char  _tcbscbky; /* -     KEY IN WHICH SYNCH IS TO PASS CONTROL          */\n    unsigned char  _tcbestrm; /* -     ESTAE TERM OPTIONS                             */\n    char           _tcbertyp; /* -   TYPE OF ERROR CAUSING ENTRY TO THE RTM.  SET     */\n    char           _tcbmode;  /* -   MASK INDICATING MODE OF SYSTEM AT TIME OF ERROR. */\n    \u00fc tcbestae;\n  void          *tcbukysp;    /* -     ADDRESS OF SPQE'S FOR SUBPOOLS 229 AND 230       */\n  struct \u00e4\n    unsigned char  _tcbprop0; /* -  Byte 0 of TCBPROPF                         @L9A */\n    unsigned char  _tcbprop1; /* -  Byte 1 of TCBPROPF                         @L9A */\n    \u00fc tcbpropf;\n  unsigned char  tcbaffn\u00c42\u00dc;  /* -   CPU AFFINITY INDICATOR                             */\n  unsigned char  tcbfbyt1;    /* -     FLAG BYTE.                              @G381P9A */\n  unsigned char  tcbfbyt2;    /* -     FLAG BYTE.                              @G381P9A */\n  unsigned char  tcbfbyt3;    /* -     FLAG BYTE                               @ZA72701 */\n  unsigned char  tcbfbyt4;    /* -     FLAG BYTE.                                  @L3A */\n  void          *tcbrpt;      /* -     ADDRESS OF RADIX PARTITION TREE FOR LOCAL        */\n  void          *tcbvat;      /* -     ADDRESS OF THE VAT (VSAM). THERE IS ONE @ZA63673 */\n  void          *tcbswasa;    /* -     ADDRESS OF SAVE AREA USED BY SWA MANAGER         */\n  void          *tcbsvca2;    /* -     ADDRESS OF SVC SCREENING TABLE          @G50EP9A */\n  void          *tcberd;      /* EXTENDED REGION DESCRIPTOR.             @G860PXU       */\n  void          *tcbeae;      /* EXTENDED ALLOCATED ELEMENT QUEUE        @G860PXU       */\n  void          *tcbarc;      /* REASON CODE FOR ABEND                   @G860PXB       */\n  int            tcbgres;     /* -     TASK GLOBAL RESOURCE COUNT - NUMBER OF GLOBAL    */\n  void          *tcbstcb;     /* ADDRESS OF STCB                             @H2C       */\n  unsigned char  tcbttime\u00c48\u00dc; /* -  TCB'S ACCUMULATED CPU TIME                  @01A    */\n  void          *tcbcelap;    /* -  COMMON EXECUTION LIBRARY ANCHOR POINTER     @02A    */\n  unsigned char  tcbr148\u00c42\u00dc;  /* -  RESERVED                                    @05C    */\n  unsigned char  tcbrbyt1;    /* -     RTM Flag byte                               @05A */\n  unsigned char  tcblevel;    /* -     LEVEL NUMBER OF TCB                     @ZA72701 */\n  void          *tcbbdt;      /* -     ADDRESS OF BDT'S GSD LINKAGE            @ZA72701 */\n  int            tcbndaxp;    /* -     COUNT OF NUMBER OF CONSECUTIVE DISPATCHES   @H1A */\n  void          *tcbsenv;     /* -     ADDRESS OF ACEE FOR THE TASK.               @H1A */\n  \u00fc;\n\n#define tcbfrs0  tcbfrs._tcbfrs0\n#define tcbfrs2  tcbfrs._tcbfrs2\n#define tcbfrs4  tcbfrs._tcbfrs4\n#define tcbfrs6  tcbfrs._tcbfrs6\n#define tcbcmpf  tcbcmp._tcbcmpf\n#define tcbcmpc  tcbcmp._tcbcmpc\n#define tcbabf   tcbtrn._tcbabf\n#define tcbtrnb  tcbtrn._tcbtrnb\n#define tcbmssb  tcbmss._tcbmssb\n#define tcbflgs1 tcbflgs._tcbflgs1\n#define tcbflgs2 tcbflgs._tcbflgs2\n#define tcbflgs3 tcbflgs._tcbflgs3\n#define tcbflgs4 tcbflgs._tcbflgs4\n#define tcbflgs5 tcbflgs._tcbflgs5\n#define tcbpurge tcbjpq._tcbpurge\n#define tcbjpqb  tcbjpq._tcbjpqb\n#define tcbgrs0  tcbgrs._tcbgrs0\n#define tcbgrs1  tcbgrs._tcbgrs1\n#define tcbgrs2  tcbgrs._tcbgrs2\n#define tcbgrs3  tcbgrs._tcbgrs3\n#define tcbgrs4  tcbgrs._tcbgrs4\n#define tcbgrs5  tcbgrs._tcbgrs5\n#define tcbgrs6  tcbgrs._tcbgrs6\n#define tcbgrs7  tcbgrs._tcbgrs7\n#define tcbgrs8  tcbgrs._tcbgrs8\n#define tcbgrs9  tcbgrs._tcbgrs9\n#define tcbgrs10 tcbgrs._tcbgrs10\n#define tcbgrs11 tcbgrs._tcbgrs11\n#define tcbgrs12 tcbgrs._tcbgrs12\n#define tcbgrs13 tcbgrs._tcbgrs13\n#define tcbgrs14 tcbgrs._tcbgrs14\n#define tcbgrs15 tcbgrs._tcbgrs15\n#define tcbfsab  tcbfsa._tcbfsab\n#define tcbjstca tcbjstcb._tcbjstca\n#define tcbnstae tcbstab._tcbnstae\n#define tcbstabb tcbstab._tcbstabb\n#define tcbtctgf tcbtct._tcbtctgf\n#define tcbtctb  tcbtct._tcbtctb\n#define tcbndsp0 tcbscndy.tcbndsp._tcbndsp0\n#define tcbndsp1 tcbscndy.tcbndsp._tcbndsp1\n#define tcbndsp2 tcbscndy.tcbndsp._tcbndsp2\n#define tcbndsp3 tcbscndy.tcbndsp._tcbndsp3\n#define tcbrecde tcbjscb._tcbrecde\n#define tcbjscbb tcbjscb._tcbjscbb\n#define tcbext1a tcbext1._tcbext1a\n#define tcbndsp4 tcbbits._tcbndsp4\n#define tcbndsp5 tcbbits._tcbndsp5\n#define tcbflgs6 tcbbits._tcbflgs6\n#define tcbflgs7 tcbbits._tcbflgs7\n#define tcbext2a tcbext2._tcbext2a\n#define tcbxsct1 tcbxsct._tcbxsct1\n#define tcbxsct2 tcbxsct._tcbxsct2\n#define tcbccpvi tcbxsct._tcbccpvi\n#define tcbfoea  tcbfoe._tcbfoea\n#define tcbscbky tcbestae._tcbscbky\n#define tcbestrm tcbestae._tcbestrm\n#define tcbertyp tcbestae._tcbertyp\n#define tcbmode  tcbestae._tcbmode\n#define tcbprop0 tcbpropf._tcbprop0\n#define tcbprop1 tcbpropf._tcbprop1\n\n/* Values for field \"tcbfrs6\" */\n#define tcbpxlen 0x20 /* LENGTH OF PREFIX SECTION                             */\n\n/* Values for field \"tcbcmpf\" */\n#define tcbcreq  0x80 /* - A DUMP HAS BEEN REQUESTED                          */\n#define tcbcstep 0x40 /* - A STEP ABEND HAS BEEN REQUESTED                    */\n#define tcbcpp   0x20 /* - SOME PROBLEM PROGRAM STORAGE WAS OVERLAID BY THE   */\n#define tcbdmpo  0x20 /* - DUMP OPTIONS WERE PROVIDED ON CALLRTM OR SETRP     */\n#define tcbstcc  0x10 /* - COMPLETION CODE IS NOT TO BE STORED IN TCBCMPC     */\n#define tcbnocc  0x10 /* - A COMPLETION CODE WAS NOT PROVIDED ON CALLRTM      */\n#define tcbcdbl  0x08 /* - A DOUBLE ABEND HAS OCCURRED (OS/VS1)               */\n#define tcbcasid 0x08 /* - ABEND WAS SCHEDULED VIA CROSS MEMORY ABTERM        */\n#define tcbcwto  0x04 /* - A DUMP MESSAGE (WTO) IS TO BE ISSUED TO THE        */\n#define tcbrv316 0x04 /* - INDICATES REASON CODE (TCBARC) IS VALID            */\n#define tcbcind  0x02 /* - ABEND TO OUTPUT AN INDICATIVE DUMP  (OS/VS1)       */\n#define tcbcmsg  0x01 /* - AN ABEND MESSAGE IS PROVIDED TO BE PRINTED BY      */\n\n/* Values for field \"tcbabf\" */\n#define tcbmod91 0x80 /* - BOTH TESTRAN AND DECIMAL SIMULATOR ON A MOD 91     */\n#define tcbnochk 0x40 /* - SUPPRESS TAKING CHECKPOINTS FOR THIS STEP          */\n#define tcbgrph  0x20 /* - GAM/SP ACTIVE FOR THIS TASK                        */\n#define tcbtcpp  0x08 /* - TCAM POST-PENDING  (RORI)                          */\n#define tcbtcp   0x04 /* - TEST TASK - USED BY TEST SVC                       */\n#define tcboltep 0x02 /* - OLTEP FUNCTIONS REQUIRE CLEANUP BEFORE ABNORMAL    */\n#define tcbdfrbp 0x01 /* - Issue SVC 61 upon fetch. Set only when      @PxA   */\n\n/* Values for field \"tcbpkf\" */\n#define tcbflag  0xF0 /* - STORAGE PROTECTION KEY                             */\n#define tcbzero  0x0F /* - MUST BE ZERO                                       */\n\n/* Values for field \"tcbflgs1\" */\n#define tcbfa    0x80 /* - May be on when a task is being abnormally   @L6C   */\n#define tcbfe    0x40 /* - On when the system is calling resource      @L6C   */\n#define tcbfera  0x20 /* - ENTER ABEND ERASE ROUTINE WHEN IN CONTROL AGAIN    */\n#define tcbnonpr 0x10 /* - TASK IS NON-PREEMPTABLE                            */\n#define tcbpdump 0x08 /* - PREVENT DUMP INDICATOR                             */\n#define tcbft    0x04 /* - TOP TASK IN TREE BEING ABTERMED                    */\n#define tcbfs    0x02 /* - ABTERM DUMP COMPLETED                              */\n#define tcbfx    0x01 /* - PROHIBIT QUEUEING OF ASYNCHRONOUS EXITS FOR        */\n\n/* Values for field \"tcbflgs2\" */\n#define tcbfoinp 0x80 /* - THE TASK IS ABENDING AND IS IN THE PROCESS OF      */\n#define tcbfsti  0x40 /* - SECOND JOB STEP INTERVAL HAS EXPIRED               */\n#define tcbfabop 0x20 /* - IF 1, THE SYSABEND DUMP DATA SET HAS BEEN OPENED   */\n#define tcbfsmc  0x10 /* - TASK HAS ISSUED A SYSTEM-MUST-COMPLETE AND SET     */\n#define tcbfjmc  0x08 /* - TASK HAS ISSUED A STEP-MUST-COMPLETE AND TURNED    */\n#define tcbfdsop 0x04 /* - SYSABEND OPEN FOR JOB STEP                         */\n#define tcbfetxr 0x02 /* - ETXR TO BE SCHEDULED                               */\n#define tcbfts   0x01 /* - THIS TASK IS A MEMBER OF A TIME-SLICED GROUP       */\n\n/* Values for field \"tcbflgs3\" */\n#define tcbfsm   0x80 /* - ALL PSW'S IN SUPERVISOR STATE                      */\n#define tcbrt1s  0x40 /* - RTM1 HAS INVOKED SLIP FOR A TASK IN EUT MODE.      */\n#define tcbabtrm 0x20 /* - ABTERM BIT TO PREVENT MULTIPLE ABENDS              */\n#define tcbfxset 0x10 /* - TCBFX WAS SET BY STATUS MCSTEP              @04A   */\n#define tcbkey9  0x04 /* - TCB was attached using KEY=NINE and so is to be    */\n#define tcbenqrm 0x02 /* - ENQ/DEQ RESOURCE MANAGER HAS RECEIVED   @G381P9A   */\n#define tcbdwsta 0x01 /* - THIS TASK WAS DETACHED WITH STAE=YES OPTION        */\n\n/* Values for field \"tcbflgs4\" */\n#define tcbndump 0x80 /* - ABDUMP NONDISPATCHABILITY INDICATOR                */\n#define tcbser   0x40 /* - SER1 NONDISPATCHABILITY INDICATOR                  */\n#define tcbrqena 0x20 /* - I/O RQE'S EXHAUSTED                                */\n#define tcbhndsp 0x10 /* - TASK OR JOB STEP IS MOMENTARILY 'FROZEN' UNTIL     */\n#define tcbuxndv 0x08 /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n#define tcbrbwf  0x04 /* - TOP RB IS IN WAIT STATE                 @G50DP9A   */\n#define tcbondsp 0x01 /* - TASK TERMINATING AND NONDISPATCHABLE BECAUSE       */\n\n/* Values for field \"tcbflgs5\" */\n#define tcbfc    0x80 /* - TASK TERMINATED                                    */\n#define tcbabwf  0x40 /* - ABNORMAL WAIT                                      */\n#define tcbuxndf 0x40 /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n#define tcbpage  0x20 /* - TASK IS NONDISPATCHABLE DUE TO EXCESSIVE PAGING    */\n#define tcbandsp 0x10 /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE IT     */\n#define tcbsys   0x08 /* - ANOTHER TASK IS IN SYSTEM-MUST-COMPLETE STATUS     */\n#define tcbstp   0x04 /* - ANOTHER TASK IN THIS JOB STEP IS IN                */\n#define tcbfcd1  0x02 /* - INITIATOR WAITING FOR REGION                       */\n#define tcbpndsp 0x01 /* - PRIMARY NONDISPATCHABILITY BIT.   THIS BIT IS      */\n\n/* Values for field \"tcbpurge\" */\n#define tcbjpqf  0x80 /* - JPQ PURGE FLAG                                     */\n\n/* Values for field \"tcbtme\" */\n#define tcbtqet  0x80 /* - IF ZERO, TASK TYPE TQE.                            */\n\n/* Values for field \"tcbtsflg\" */\n#define tcbtstsk 0x80 /* - SWAPPED TIME SHARING TASK (OS/VS1)                 */\n#define tcbstppr 0x40 /* - TASK SHOULD BE MADE NONDISPATCHABLE VIA TCBSTPP    */\n#define tcbatt   0x20 /* - TASK SHOULD NOT HAVE ATTENTION EXITS SCHEDULED     */\n#define tcbtiotg 0x10 /* - PURGE TGET/TPUT AFTER ATTENTION                    */\n#define tcbsmcp  0x08 /* - STATUS MCSTEP PENDING,TASK IS SUSPENDED     @L4A   */\n#define tcbdydsp 0x02 /* - M195 TASK IS MEMBER OF DYNAMIC DISPATCHING         */\n#define tcbcpubn 0x01 /* - FOR M195, ZERO MEANS I/O BOUND AND ONE MEANS       */\n\n/* Values for field \"tcbnstae\" */\n#define tcbstabe 0x80 /* - ABEND ENTERED BECAUSE OF ERROR IN STAE             */\n#define tcbquies 0x40 /* - STAE INVOKED PURGE I/O ROUTINE WITH QUIESCE I/O    */\n#define tcb33e   0x20 /* - A 33E ABEND HAS OCCURRED FOR TASK                  */\n#define tcbppsup 0x10 /* - 1=SUPERVISOR MODE,0=PROBLEM PROGRAM MODE           */\n#define tcbhalt  0x08 /* - PURGE I/O ROUTINE DID NOT SUCCESSFULLY QUIESCE     */\n#define tcbsynch 0x04 /* - SYNCH ISSUED BY ASIR TO SCHEDULE EXIT ROUTINE      */\n#define tcbstcur 0x01 /* - STAE RECURSION VALID                      ICB443   */\n\n/* Values for field \"tcbtctgf\" */\n#define tcbsmfgf 0x80 /* - IF ZERO, THE TCT CORE TABLE IS NOT TO BE           */\n\n/* Values for field \"tcbndsp1\" */\n#define tcbdartn 0x80 /* - THE TASK IS TEMPORARILY NONDISPATCHABLE -          */\n#define tnondisp 0x80 /* * ALIAS *                                            */\n#define tcbdarpn 0x40 /* - THE TASK IS PERMANENTLY NONDISPATCHABLE -          */\n#define pnondisp 0x40 /* * ALIAS *                                            */\n#define tcbrstnd 0x20 /* - THE TASK IS TEMPORARILY NONDISPATCHABLE -          */\n#define tcbrspnd 0x10 /* - THE TASK IS PERMANENTLY NONDISPATCHABLE -          */\n#define tcbddrnd 0x08 /* - THE TASK IS IN DEVICE ALLOCATION AND DYNAMIC       */\n#define tcbtpsp  0x04 /* - DISPATCHING OF TCAM TASK MUST BE DELAYED UNTIL     */\n#define tcbpiend 0x02 /* - SRB IS TO BE SCHEDULED TO PERFORM PIE/PICA         */\n#define tcbabtin 0x01 /* - THE TASK IS TEMPORARILY NONDISPATCHABLE WHILE      */\n\n/* Values for field \"tcbndsp2\" */\n#define tcbabd   0x80 /* - ABDUMP IS PROCESSING  (OS/VS1)                     */\n#define tcbstpp  0x40 /* - TASK SET NONDISPATCHABLE BY SETTASK                */\n#define tcbndsvc 0x20 /* - TASK IS NONDISPATCHABLE BECAUSE SVC DUMP IS        */\n#define tcbndts  0x10 /* - TASK IS NONDISPATCHABLE BECAUSE IT IS BEING        */\n#define tcbiwait 0x08 /* - TASK IS NONDISPATCHABLE DUE TO AN INPUT WAIT       */\n#define tcbowait 0x04 /* - TASK IS NONDISPATCHABLE DUE TO AN OUTPUT WAIT      */\n#define tcbdss   0x02 /* - DYNAMIC SUPPORT SYSTEM (DSS) HAS SET THIS          */\n#define tcbabe   0x01 /* - ABEND ROUTINE WAS ENTERED FOR THIS TASK WHILE      */\n\n/* Values for field \"tcbndsp3\" */\n#define tcbljsnd 0x80 /* - TASK IS ABENDING AND NONDISPATCHABLE BECAUSE IT    */\n#define tcbndnyi 0x40 /* - RCT TASK IS NONDISPATCHABLE BECAUSE ADDRESS @P4A   */\n#define tcbsrbnd 0x20 /* - TCB NONDISPATCHABLE BECAUSE SRB'S ARE STOPPED      */\n#define tcbslper 0x10 /* - SET NONDISPATCHABLE SO THAT SLIP/PER CAN ALTER     */\n#define tcbs3mr  0x08 /* - STAGE 3 EXIT EFFECTOR MUST RUN TO SYNCHRONIZE      */\n#define tcbareq  0x04 /* - TSO AUTHORIZED REQUEST PROCESSING ACTIVE           */\n#define tcbndsmf 0x02 /* - Indicates task is stopped because its CPU   @03A   */\n#define tcbndint 0x01 /* - INITIATOR SETS THIS BIT TO PREVENT JOB STEP        */\n\n/* Values for field \"tcbrecde\" */\n#define tcbrec   0x80 /* - VALID REENTRY TO ABEND IF NON-ZERO VALUE IN        */\n#define tcbopen  0x01 /* - OPEN DUMP DATA SET                        ICB456   */\n#define tcbclosd 0x02 /* - CLOSE DIRECT SYSOUT ON TAPE               ICB456   */\n#define tcbclose 0x03 /* - CLOSE OPEN DATA SETS                      ICB456   */\n#define tcbclosf 0x04 /* - RESERVED.                                 ICB456   */\n#define tcbgrec  0x05 /* - GRAPHICS                                  ICB456   */\n#define tcbadump 0x07 /* - ABDUMP                                    ICB456   */\n#define tcbptaxe 0x08 /* - PURGE TAXE                                ICB456   */\n#define tcbmesg  0x09 /* - MESSAGE RECURSION                         ICB456   */\n#define tcbdynam 0x0A /* - DD-DYNAM TIOT CLEANUP                     ICB456   */\n#define tcbdamsg 0x0B /* - ABEND IS ISSUING A WTOR ASKING WHETHER THE JOB     */\n#define tcbqtip  0x0C /* - PURGE TSO INTERPARTITION POSTS            ICB456   */\n#define tcbtcamp 0x0D /* - PURGE TCAM INTERPARTITION POSTS           ICB456   */\n#define tcbindrc 0x0E /* - INDICATIVE DUMP (LOAD 8 OF ABEND) HAS ABENDED.     */\n#define tcbsavcd 0x0F /* - ASIR RECURSION.  SAVE OLD COMPLETION CODE ICB456   */\n#define tcbtyp1w 0x10 /* - TYPE 1 MESSAGE WRITE TO PROGRAMMER        ICB456   */\n#define tcbwtpse 0x20 /* - WRITE-TO-PROGRAMMER (WTP) FAILED.  JOB STEP        */\n#define tcbvtam1 0x21 /* - ABEND IS ENTERING FIRST VTAM INTERFACE,            */\n#define tcbvtam2 0x22 /* - ABEND IS ENTERING SECOND VTAM INTERFACE,           */\n#define tcbvtam3 0x23 /* - ABEND IS ENTERING FIRST VTAM INTERFACE,            */\n#define tcbvtam4 0x24 /* - ABEND IS ENTERING SECOND VTAM INTERFACE,           */\n#define tcbnosta 0x30 /* - STAE/STAI NOT TO BE HONORED               ICB456   */\n#define tcbstret 0x31 /* - RETURN FROM DUMP PROCESSING               ICB456   */\n#define tcbconvr 0x32 /* - CONVERT TO STEP ABEND                     ICB456   */\n#define tcbdaret 0x33 /* - RETURN FROM DAMAGE ASSESSMENT ROUTINES    ICB456   */\n#define tcbtyp1r 0x34 /* - RETURN FROM TYPE 1 MESSAGE MODULE         ICB456   */\n#define tcbnewrb 0x35 /* - ABEND ISSUED SVC 13 TO TRANSFER CONTROL (XCTL)     */\n#define tcbmccns 0x40 /* - A MUST COMPLETE TASK HAS ABNORMALLY TERMINATED     */\n\n/* Values for field \"tcbflgs6\" */\n#define tcbrv    0x80 /* - THE PARTITION IS FIXED IN REAL STORAGE.  VIRTUAL   */\n#define tcbpie17 0x40 /* - PAGE FAULT INTERRUPT IS TO BE PASSED TO THE        */\n#define tcbcpu   0x20 /* - TASK IS CPU-BOUND MEMBER OF AUTOMATIC PRIORITY     */\n#define tcbspvlk 0x10 /* - TASK SCHEDULED FOR ABTERM WHILE OWNING             */\n#define tcbhcrm  0x08 /* - Health Checker has established a task term         */\n#define tcbmigr  0x04 /* - REGION SELECTED FOR MIGRATION FROM PRIMARY         */\n#define tcbapg   0x02 /* - TASK IS IN AUTOMATIC PRIORITY GROUP (APG)          */\n#define tcbntjs  0x01 /* - JOB STEP TASK BUT NOT HIGHEST IN FAILING TREE      */\n\n/* Values for field \"tcbflgs7\" */\n#define tcbgpecb 0x80 /* - TASK IS IN AN ECB WAIT FOR A GETPART               */\n#define tcbsenvp 0x40 /* -                                             @0AA   */\n#define tcbsvcsp 0x20 /* - IF 1, SVC SCREENING IS TO BE PROPAGATED TO         */\n#define tcbstack 0x10 /* - SET IN JOB STEP TCB TO INDICATE THAT A TASK IN     */\n#define tcbsvcs  0x08 /* - IF 1, SVC SCREENING IS REQUIRED FOR THE TASK.      */\n#define tcbrstsk 0x04 /* - RESIDENT SYSTEM TASK                               */\n#define tcbadmp  0x02 /* - ALL OTHER TASKS IN JOB STEP HAVE BEEN SET          */\n#define tcbgtofm 0x01 /* - GENERALIZED TRACE FACILITY (GTF) TRACING HAS       */\n\n/* Values for field \"tcbdar\" */\n#define tcbdarp  0x80 /* - PRIMARY DAR RECURSION.  DAR HAS BEEN ENTERED FOR   */\n#define tcbdars  0x40 /* - SECONDARY DAR RECURSION.  IF DAR IS REENTERED,     */\n#define tcbdard  0x20 /* - A DUMP HAS BEEN REQUESTED FOR A WRITER OR          */\n#define tcbdarc  0x10 /* - RECURSION PERMITTED IN CLOSE -                     */\n#define tcbdarmc 0x10 /* - DAR HAS BEEN ENTERED TO HANDLE A VALID RECURSION   */\n#define tcbdaro  0x08 /* - SYSTEM ERROR TASK IS FAILING.  DAR DUMP SHOULD     */\n#define tcbdarwt 0x04 /* - A WTO OPERATION WITH A 'REINSTATEMENT FAILURE'     */\n#define tcbdarms 0x02 /* - WTO OPERATION WITH A 'DAR IN PROGRESS' MESSAGE     */\n#define tcbexsvc 0x01 /* - THE DUMP SVC ROUTINE IS EXECUTING FOR THIS TASK    */\n\n/* Values for field \"tcbnssp\" */\n#define tcbnssqa 0x80 /* - NORMAL STACK SAVED IN SQA INDICATOR.    @G38CPXB   */\n\n/* Values for field \"tcbtid\" */\n#define tcbpagid 0xFF /* -   ID FOR PAGING SUPERVISOR TASK             ICB403 */\n#define tcbsyerr 0xFE /* -   ID FOR SYSTEM ERROR TASK                  ICB403 */\n#define tcbcomm  0xFD /* -   ID FOR COMMUNCIATIONS TASK                ICB403 */\n#define tcbiorms 0xFC /* -   ID FOR I/O RMS TASK                       ICB403 */\n#define tcbmastr 0xFB /* -   ID FOR MASTER SCHEDULER TASK              ICB403 */\n#define tcbjes   0xFA /* -   ID FOR JOB ENTRY SUBSYSTEM (JES) MONITOR TASK    */\n#define tcbdssid 0xF9 /* -   ID FOR DYNAMIC SUPPORT SYSTEM (DSS) TASK  ICB403 */\n#define tcblogid 0xF8 /* -   ID FOR SYSTEM LOG TASK                           */\n\n/* Values for field \"tcbflgs8\" */\n#define tcbdying 0x80 /* - IF ON, INDICATES THAT THE SYSTEM HAS        @P1A   */\n#define tcbnoirb 0x40 /* - If on, IRBs will not be queued to this TCB. @08A   */\n#define tcbjtcba 0x20 /* - If on, this is the attach of the JSTCB by the      */\n\n/* Values for field \"tcbxsct1\" */\n#define tcbactiv 0x80 /* - BIT ON MEANS THIS TCB IS CURRENTLY ACTIVE ON A     */\n#define tcbs3a   0x40 /* - STAGE 3 EXIT EFFECTOR/RESUME/TCTL INTERSECT FLAG   */\n#define tcbllreq 0x20 /* - TASK REQUESTED LOCAL LOCK               @G50DP9A   */\n#define tcbtdorm 0x08 /* - Turned on to detect dormant Tasks by        @06A   */\n\n/* Values for field \"tcbxsct2\" */\n#define tcbcmlf  0x80 /* - CML RESOURCE MANAGER PROCESSING         @G381P9A   */\n#define tcbllnew 0x40 /* - Lock Manager has given this task the local  @L5A   */\n\n/* Values for field \"tcbestrm\" */\n#define tcbeterm 0x80 /* - ESTAE EXIT ENTERED WITH TERM OPTION                */\n#define tcbstafx 0x40 /* - SERIALIZED BY TCB ACTIVE                @ZA30005   */\n\n/* Values for field \"tcbprop0\" */\n#define tcbbitcb 0x80 /* - This task is \"below\" the initiator TCB     @L9A    */\n\n/* Values for field \"tcbfbyt1\" */\n#define tcbeotfm 0x80 /* - END OF TASK FLAG FOR FREEMAIN.  SET TO 1 BY TASK   */\n#define tcbrtm1e 0x40 /* - RTM1 IS CURRENTLY PROCESSING EUT FRR'S  @G381PXU   */\n#define tcbndios 0x20 /* - TASK HAS BEEN SET NONDISPATCHABLE VIA STATUSND     */\n#define tcbpgnly 0x10 /* - SET BY RTM2 TO INDICATE ONLY PURGE PHASE TO BE     */\n#define tcbrtm2  0x08 /* - SET BY RTM2 TO INDICATE RTM2 HAS BEEN ENTERED      */\n#define tcbeot   0x04 /* - SET BY RTM2 TO INDICATE TO EXIT THAT END OF TASK   */\n#define tcbsattn 0x02 /* - SYNCHRONIZATION OF ATTENTION INTERRUPT REQUIRED    */\n#define tcbllh   0x01 /* - Task was interrupted holding the local lock.       */\n\n/* Values for field \"tcbfbyt2\" */\n#define tcbcncb  0x80 /* - SET BY RTM2 IN THE JOB STEP TCB WHEN IT HAS BEEN   */\n#define tcbfmw   0x40 /* - MOTHER WAITING FLAG.  TURNED ON IN A SUBTASK IN    */\n#define tcbfdw   0x20 /* - DAUGHTER WAITING FLAG.  TURNED ON IN A MOTHER      */\n#define tcbfprap 0x10 /* - SET BY RTM2 TO PREVENT PERCOLATION TO THE TASK     */\n#define tcbrt1nr 0x08 /* - IF 1, ERROR PROPAGATED FROM RTM1 IS         @D1A   */\n#define tcbecbnv 0x04 /* - IF 1, ECB POINTED TO BY TCBECB IS NOT TO BE        */\n#define tcbsspc  0x02 /* - STATUS STOP PENDING,TASK HOLDS A CML LOCK          */\n#define tcbrtm1c 0x01 /* - A TASK WITH EUT FRRS HAS BEEN CANCELLED. THIS      */\n\n/* Values for field \"tcbfbyt3\" */\n#define tcbexp   0x80 /* - EXPANDED VERSION OF THE TCB             @ZA72701   */\n#define tcbnctl  0x40 /* - IF 1, INDICATES USER PROGRAM IS LOADED  @ZA84893   */\n#define tcbrtmde 0x20 /* - DETACH HAS BEEN CALLED BY RTM           @ZA93650   */\n#define tcbmtdp  0x10 /* - MEMTERM SDUMP                               @LAA   */\n\n/* Values for field \"tcbfbyt4\" */\n#define tcbpmc   0x80 /* - IF 1, INDICATES TASK IS IN PROCESS MUST     @D2C   */\n#define tcbnojlb 0x40 /* - If 1, indicates that TCBJLB is not to be used      */\n#define tcbkeepp 0x10 /* - Preserve RBOPSW.                            @0BA   */\n\n/* Values for field \"tcbrbyt1\" */\n#define tcbpvict 0x80 /* - If 1, indicates that the associated task    @05M   */\n#define tcbpking 0x40 /* - If 1, indicates that the associated Task has       */\n#define tcbpcand 0x20 /* - If 1, indicates that this Task has requested       */\n#define tcbptop  0x10 /* - If 1, indicates that this Task is at the top       */\n\n/* Values for field \"tcblevel\" */\n#define tcbvs02a 0x02 /* - JBB2110 (NOT IN BASE)                   @ZA72701   */\n#define tcbvs02b 0x02 /* - JBB2125                                 @ZA72701   */\n#define tcbvs03  0x03 /* - JBB2133                                     @H1A   */\n#define tcbvers  0x03 /* - LEVEL OF THIS MAPPING                       @H1C   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "INTTRACE": {"ttr": 8139, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct inttrace \u00e4\n  unsigned char  inttrace_id\u00c432\u00dc;    /* trace id           */\n  void          *inttrace_tcb;       /* TCB addr           */\n  void          *inttrace_stck\u00c42\u00dc;   /* actual clock value */\n  void          *inttrace_addr;      /* entry address      */\n  void          *inttrace_length;    /* entry length       */\n  unsigned char  inttrace_data\u00c4972\u00dc; /* data               */\n  \u00fc;\n\n/* Values for field \"inttrace_length\" */\n#define inttrace_head_length 0x34 /* head length                                   */\n\n/* Values for field \"inttrace_data\" */\n#define cvtptr               16   /* -          ABSOLUTE ADDRESS OF POINTER TO CVT */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IOCC": {"ttr": 8309, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct iocc \u00e4\n  void          *iocc_dummy;\n  \u00fc;\n\n/* Values for field \"iocc_dummy\" */\n#define iocc_tci             5000       /* Cmd for Tcpip Initialization           */\n#define iocc_tcc             5001       /* Cmd for Complete Tcpip Initialization  */\n#define iocc_tcs             5002       /* Cmd for Tcpip Path Sever               */\n#define iocc_tcr             5003       /* Cmd for Tcpip Reply/Post call          */\n#define iocc_tcg             5004       /* Cmd for Tcpip SiGnal call         @p3a */\n#define iocc_tcce            5006       /* Cmd for Tcpip End Registration    @D5A */\n#define siocmsdelrt          5007       /* Cmd for Delete Route                   */\n#define siocmsaddrt          5008       /* Cmd for Add Route                      */\n#define siocmssifaddr        5009       /* Cmd for Set Interface address          */\n#define siocmssifflags       5010       /* Cmd for Set Interface Flags            */\n#define siocmssifdstaddr     5011       /* Cmd for Set point-to-point interface   */\n#define siocmssifbrdaddr     5012       /* Cmd for Set Broadcast address          */\n#define siocmssifnetmask     5013       /* Cmd for Set interface network          */\n#define siocmssifmetric      5014       /* Cmd for Set Interface routing metric   */\n#define siocmsrbrttable      5015       /* Cmd for Set Routing table required     */\n#define siomsmetric1rt       5016       /* Cmd for Set metric1                    */\n#define siocmsicmpredirect   5017       /* Cmd for Propagating ICMP redirects     */\n#define siocsettkn           0x8008139A /* 5018 Set Tcp/Ip master Tkn @P6A        */\n#define siocmsaddrt6         0x8044F604 /* Add IPV6 Route         @DDA            */\n#define siocmsdelrt6         0x8044F605 /* Delete IPV6 Route      @DDA            */\n#define siocgrt6table        0xC014F606 /* Get IPV6 Network Routing               */\n#define siocgrt6table64      0xC018F606 /* Get IPV6 Network Routing               */\n#define siocmsrbrt6table     0x8000F607 /* Rebuild IPV6 Route Tables  @DDA        */\n#define siocghomeif6         0xC014F608 /* Get IPV6 Home Interface                */\n#define siocghomeif664       0xC018F608 /* Get IPV6 Home Interface                */\n#define siocmsrbhomeif6      0x8000F609 /* Rebuild IPV6 Home Interface@PBC        */\n#define siocmschgrt6metric   0x8044F60A /* Change IPV6 route's metric @PDA        */\n#define siocmsmodhomeif6     0x8008F60B /* Modify IPV6 Home Interface @DHA        */\n#define siocmsaddrt6v2       0x8058F60C /* Add IPV6 route version 2   @PGA        */\n#define siocmsdelrt6v2       0x8058F60D /* Del IPV6 route version 2   @PGA        */\n#define siocmschgrt6metricv2 0x8058F60E /* Change IPV6 route's metric @PGA        */\n#define siocgpartnerinfo     0xC000F612 /* Get Info                  @DRA         */\n#define siocspartnerinfo     0x8004F613 /* Set Optimization          @DRA         */\n#define tiocgwinsz           0x4008A368 /* get window size           @D3A         */\n#define tiocswinsz           0x8008A367 /* set window size           @D3A         */\n#define tiocnotify           0x8001A364 /* notify master by packet   @P7A         */\n#define iocc_pwbegin         1          /* Begin secure data         @P7A         */\n#define iocc_pwend           2          /* End   secure data         @P7A         */\n#define siocgrttable         0xC008C980 /* Gets Network Routing Tab  @D5A         */\n#define siocgrttable64       0xC00CC980 /* Get NRT for 64-Bit C Pgm  @PCA         */\n#define siocsetrttd          0x8008C981 /* Set Socket to be attached to           */\n#define siocmsmodhomeif      0x8008C983 /* Modify Home Interface     @DHA         */\n#define siocmsmodhomeifv2    0x8016C984 /* Modify Home Interface V2  @PIA         */\n#define siocmsaddrtv2        0x8054C985 /* Cmd for Add Route V2      @PIA         */\n#define siocmsdelrtv2        0x8054C986 /* Cmd for Delete Route V2   @PIA         */\n#define siomsmetric1rtv2     0x8054C987 /* Cmd for Set Metric1 V2    @PIA         */\n#define fionbio              0x8004A77E /* set/reset nonblock I/O                 */\n#define fionread             0x4004A77F /* get number of readable bytes           */\n#define fionwrite            0x4004A78A /* get number of writeable bytes          */\n#define fioasync             0x8004A77D /* set/clear async I/O       @D5A         */\n#define fiosetown            0x8004A77C /* set owner                 @D5A         */\n#define fiogetown            0x4004A77B /* get owner                 @D5A         */\n#define seciget              0x4010E401 /* get security information               */\n#define seciget_t            0x4028E403 /* Get peer task security    @DIA         */\n#define sioctiedesthrd       0x8004E404 /* Tie descriptor to thread  @DIA         */\n#define siocsecenvr          0xC012A78B /* SET/GET Client Security   @DLA         */\n#define siocaddrt            0x8030A70A /* IBM use only, Add routing              */\n#define siocatmark           0x4004A707 /* Is current location pointing           */\n#define siocspgrp            0x8004A708 /* Set process group          @DDA        */\n#define siocgpgrp            0x4004A709 /* Get process group          @DDA        */\n#define siocdelrt            0x8030A70B /* IBM use only, Delete routing           */\n#define siometric1rt         0x8030A70C /* IBM use only, Set metric1 @D5A         */\n#define siocsifaddr          0x8020A70C /* Set Network interface addr@D5A         */\n#define siocgifaddr          0xC020A70D /* Get Network interface address          */\n#define siocgifbrdaddr       0xC020A712 /* Get Network interface                  */\n#define siocsifbrdaddr       0x8020A713 /* Sets Network interface                 */\n#define siocgifconf          0xC008A714 /* Get Network interface Config           */\n#define siocgifconf64        0xC00CA714 /* for 64-Bit C Pgms                      */\n#define siocgifconf6         0xC018A722 /* Get IPv6 Network IfConf  @DJA          */\n#define siocgifmtu           0xC020A726 /* Get MTU Size             @DQA          */\n#define siocgifdstaddr       0xC020A70F /* Get Network interface                  */\n#define siocgifflags         0xC020A711 /* Get Network interface Flags            */\n#define siocgifmetric        0xC020A717 /* IBM use only, Gets Network             */\n#define siocgifnetmask       0xC020A715 /* Get Network interface                  */\n#define siocsifnetmask       0x8020A716 /* Set Network interface                  */\n#define siocsifdstaddr       0x8020A70E /* IBM use only, Sets Network             */\n#define siocsifflags         0x8020A710 /* IBM use only, Sets Network             */\n#define siocsifmetric        0x8020A718 /* IBM use only, Sets Network             */\n#define siocsarp             0x8024A71E /* IBM use only, Sets ARP                 */\n#define siocgarp             0xC024A71F /* IBM use only, Gets ARP                 */\n#define siocdarp             0x8024A720 /* IBM use only, Deletes ARP              */\n#define siocshiwat           0x8004A700 /* Set High Water Mark                    */\n#define siocghiwat           0x4004A701 /* Get High Water Mark                    */\n#define siocslowat           0x8004A702 /* Set Low Water Mark                     */\n#define siocglowat           0x4004A703 /* Get Low Water Mark                     */\n#define fiofctlnbio          0xE402     /* change blocking/nonblocking            */\n#define iocc_ilink           0x4004E21A /* I_LINK                   @D9A          */\n#define iocc_editacl         0x2000C100 /* Edit ACL                 @P5A          */\n#define setfacl              0xD301     /* SET FILE ACL             @DBA          */\n#define iocc_setfacl         0xD301     /* SET FILE ACL             @DCA          */\n#define getfacl              0xD302     /* GET FILE ACL             @DBA          */\n#define iocc_getfacl         0xD302     /* GET FILE ACL             @DCA          */\n#define siocgsockpoeattrs    0x4000D305 /* @DDA                                   */\n#define siocgfdpoeattrs      0x4000D306 /* @DDA                                   */\n#define siocgsockmlsinfo     0x4000D307 /* @DKA                                   */\n#define iocc_block           0x00       /* Allow blocking to occur                */\n#define iocc_nonblock        0x01       /* Do not allow blocking to occur         */\n#define sioc_tiesd           0x01       /* Tie descriptor to thread   @DIA        */\n#define sioc_untiesd         0x00       /* UnTie descriptor from thrd @DIA        */\n#define sioc_setenvr         0x01       /* SET Security Environment   @DLA        */\n#define sioc_getenvr         0x02       /* GET Security Envrionment   @DLA        */\n#define siocgifversion       0x4000F601 /* Get Interface Ver   Out                */\n#define siocgsrcipaddr       0xC000F602 /* Get Source Addr   InOut                */\n#define siocgifnameindex     0x4000F603 /* Get If Name/Index   Out                */\n#define siocgipmsfilter      0xC000A724 /* @DMA                                   */\n#define siocsipmsfilter      0x8000A725 /* @DMA                                   */\n#define siocgmsfilter        0xC000F610 /* @DMA                                   */\n#define siocsmsfilter        0x8000F611 /* @DMA                                   */\n#define tioc_data            0x00       /* Data packet                @D3A        */\n#define tiocpkt_flushread    0x01       /* Input was flushed          @D3A        */\n#define tiocpkt_flushwrite   0x02       /* Output was flushed         @D3A        */\n#define tiocpkt_stop         0x04       /* Stop output                @D3A        */\n#define tiocpkt_start        0x08       /* Start output               @D3A        */\n#define tiocpkt_nostop       0x10       /* STOP/START not standard    @D3A        */\n#define tiocpkt_dostop       0x20       /* STOP/START standard        @D3A        */\n#define tiocxpkt_passthru    0x100      /* 3270 Passthrough mode     @D7C         */\n#define tiocxpkt_nopassthru  0x200      /* Not 3270 Passthrough mode @D7C         */\n#define tiocxpkt_echo        0x400      /* ECHO set on               @D7A         */\n#define tiocxpkt_noecho      0x800      /* ECHO set off              @D7A         */\n#define tiocxpkt_chcp        0x1000     /* Code page change          @D7A         */\n#define tiocxpkt_pwbegin     0x2000     /* Begin secure data         @P7A         */\n#define tiocxpkt_pwend       0x4000     /* End   secure data         @P7A         */\n#define iocc_getpathname     17         /* Absolute name             @DOA         */\n#define iocc_getpathnamerel  19         /* Relative name             @DOA         */\n#define iocc_updtofte        20         /* UPDATE OFTE CMD             @D8A       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IOQE": {"ttr": 8749, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ioqedsect \u00e4\n  unsigned char  ioqepref\u00c48\u00dc;              /* IOQE prefix , request code           */\n  void          *ioqesave\u00c418\u00dc;             /* save area                            */\n  void          *ioqesave1\u00c418\u00dc;            /* secondary save                       */\n  unsigned char  ioqest\u00c420\u00dc;               /* status block                         */\n  void          *ioqerc\u00c44\u00dc;                /* prim sec return codes and RPL return */\n  void          *ioqe_errorcode;           /* ERROR code                           */\n  void          *ioqesecb;                 /* subsystem request ECB                */\n  unsigned char  ioqessid\u00c44\u00dc;              /* subsystem i.d. word                  */\n  void          *ioqestck\u00c42\u00dc;              /* clock value to id reply              */\n  unsigned char  ioqe_wlmwutkn\u00c416\u00dc;        /* wlm work unit token                  */\n  unsigned char  ioqe_wlmeutkn\u00c48\u00dc;         /* wlm execution unit token             */\n  unsigned char  ioqe_wlmetoken\u00c48\u00dc;        /* wlm enclave token                    */\n  struct \u00e4\n    unsigned char  _ioqe_work_user_user_tran\u00c44\u00dc; /* tran suffix */\n    \u00fc ioqe_work_user_;\n  void          *ioqe_work_user_user_ioqe; /* IOQE adddr                           */\n  void          *ioqe_work_user_user_tcb;  /* IOQE TCB address                     */\n  void          *ioqe_work_user_user_res;  /* reserved                             */\n  void          *ioqe_pipi\u00c46\u00dc;             /* pipi call list                       */\n  void          *ioqe_pipi_rc;             /* pipi RC                              */\n  void          *ioqe_pipi_sub;            /* pipi sub list                        */\n  void          *ioqe_pipi_token;          /* pipi TOKEN                           */\n  void          *ioqeprxx;                 /* PRXX address                         */\n  void          *ioqeowcb;                 /* OWCB address                         */\n  void          *ioqeqsam;                 /* QSAM  address                        */\n  void          *ioqeioqe;                 /* secondary IOQE address               */\n  void          *ioqewwa;                  /* WWA address                          */\n  void          *ioqework;                 /* $$WORK area address                  */\n  unsigned char  ioqeestae;                /* FLAGS FOR TCB,PURGE,ASYNCH,          */\n  int            _filler1 : 24;            /* FIELD NO LONGER USED  @G860P1C       */\n  void          *_filler2;                 /* PARM. LIST ADDR. NOT SPECIFIED       */\n  void          *_filler3;                 /* TCB NOT SPECIFIED                    */\n  unsigned char  _filler4;                 /* FLAGS                                */\n  unsigned char  _filler5;                 /* THIRD FLAG BYTE       @G860P1C       */\n  short int      _filler6;                 /* RESERVED              @G860P1C       */\n  void          *_filler7;                 /* TOKEN VALUE AREA      @G81CP2F       */\n  void          *_filler8;                 /* EXIT ADDR NOT SPECD   @G860P1C       */\n  void          *ioqeestaet;               /* - token                              */\n  void          *ioqeestaep\u00c416\u00dc;           /* - parameter list                     */\n  void          *ioqesdwa;                 /* SWDA addr                            */\n  void          *ioqe_qcvtioq;             /* CVT ioqe list pointer                */\n  unsigned char  ioqeoption\u00c48\u00dc;            /* conversation option I/O              */\n  void          *ioqecntl;                 /* QFSSCVT addr                         */\n  void          *ioqetcb;                  /* subtask TCB                          */\n  void          *ioqeacee;                 /* ACEE addr                            */\n  unsigned char  ioqepuid;                 /* partner user id                      */\n  unsigned char  _filler9\u00c48\u00dc;\n  unsigned char  ioqeppwd;                 /* partner password                     */\n  unsigned char  _filler10\u00c48\u00dc;\n  unsigned char  ioqepdef;                 /* default group name                   */\n  unsigned char  _filler11\u00c48\u00dc;\n  unsigned char  ioqeprol;                 /* length of tran prog name             */\n  unsigned char  ioqeproc\u00c464\u00dc;             /* process name                         */\n  void          *ioqeentry;                /* transaction prog entry addr          */\n  void          *ioqeqadr;                 /* queue element addr                   */\n  void          *ioqefts;                  /* profile block FTS addr               */\n  unsigned char  ioqetp;                   /* TP flag                              */\n  unsigned char  ioqetp_jump;              /* jump index on tp type                */\n  unsigned char  ioqe_pswkey;              /* PSW key                              */\n  unsigned char  ioqe_protocol_flag;       /* protocol flag                        */\n  void          *ioqe_freemain;            /* IOQE start to free                   */\n  void          *ioqe_freetcb;             /* IOQE owner TCB address               */\n  void          *ioqe_addr_buffer_set;     /* buffer set routine                   */\n  void          *ioqe_addr_receive_copy;   /* receive copy routine                 */\n  void          *ioqe_addr_receive_head;   /* receive head routine                 */\n  void          *ioqe_addr_receive_data;   /* receive data routine                 */\n  void          *ioqebfa;                  /* buffer to send/receive               */\n  void          *ioqebfal;                 /* actual length to send/receive        */\n  void          *ioqebfl;                  /* send /received length                */\n  void          *ioqelbuf_p;               /* logical buffer pointer               */\n  void          *ioqelbuf_o;               /* actual offet                         */\n  void          *ioqelbuf_r;               /* remainder length                     */\n  void          *ioqeabuf_p;               /* actual buffer pointer                */\n  void          *ioqeabuf_l;               /* actual length                        */\n  struct \u00e4\n    unsigned char  _ioqemsg__msg_msgid\u00c44\u00dc; /* message id */\n    \u00fc ioqemsg;\n  void          *ioqemsg__msg_insert\u00c416\u00dc;  /* message insert list                  */\n  void          *ioqemsg__msg_global;      /* global addr                          */\n  unsigned char  ioqemsg__msg_hexsw;       /* hexa switch                          */\n  unsigned char  ioqemsg__msg_wto;         /* wto switch                           */\n  unsigned char  ioqemsg__msg_log;         /* log switch                           */\n  unsigned char  ioqemsg__msg_asacc;       /* asa contol char                      */\n  unsigned char  ioqemsg__msg_trc;         /* set TRC                              */\n  short int      ioqemsg__msg_desc;        /* descriptor code                      */\n  short int      ioqemsg__msg_routcde\u00c43\u00dc;  /* route code                           */\n  unsigned char  ioqemsg__msg_pref;        /* control char prefix                  */\n  unsigned char  ioqemsg__msg_date\u00c49\u00dc;     /* date filed                           */\n  unsigned char  ioqemsg__msg_time\u00c414\u00dc;    /* time stemp                           */\n  unsigned char  ioqemsg__msg_extr\u00c4140\u00dc;   /* extract buffer                       */\n  unsigned char  ioqe_appldt;              /* application data type                */\n  unsigned char  ioqe_applrt\u00c42\u00dc;           /* record type                          */\n  void          *ioqesend;                 /* send total count                     */\n  void          *ioqerecv;                 /* receive total length                 */\n  void          *ioqetime;                 /* start time stemp                     */\n  unsigned char  ioqercv1;                 /* what received first byte             */\n  unsigned char  ioqercv2;                 /* what received second byte            */\n  unsigned char  _filler12\u00c42\u00dc;\n  void          *ioqechn;                  /* chain pointer                        */\n  void          *ioqegetb;                 /* actual get block                     */\n  void          *ioqegeto;                 /* block offset                         */\n  void          *ioqesv14\u00c45\u00dc;              /* temporary save                       */\n  void          *ioqeopnl\u00c42\u00dc;              /* open list                            */\n  unsigned char  ioqeasy;                  /* async flag                           */\n  unsigned char  ioqe_tp_error_previous;\n  unsigned char  ioqeoper\u00c48\u00dc;              /* prev operation                       */\n  unsigned char  ioqeparse;                /* paralell session flag                */\n  unsigned char  _filler13;\n  void          *ioqemaxs;                 /* max num of sessions                  */\n  void          *ioqeminwl;                /* min local winner                     */\n  void          *ioqeminwp;                /* min partner winner                   */\n  void          *ioqe_drvr;                /* driver addres if there is            */\n  void          *ioqeallocwt;              /* allocation wait in hundreth sec      */\n  void          *ioqealloctry;             /* retry count                          */\n  void          *ioqe_ecbwtor;             /* WTOR ECB                             */\n  unsigned char  ioqe_tp_error\u00c48\u00dc;\n  void          *_filler14;                /* REPLY ADDRESS              @P4A      */\n  void          *_filler15;                /* ECB ADDRESS                @P4A      */\n  unsigned char  _filler16;                /* REPLY LENGTH           @G860PSS      */\n  unsigned char  _filler17;                /* TEXT LENGTH + 4        @YA17152      */\n  unsigned char  _filler18\u00c42\u00dc;             /* MCSFLAGS                   @L1A      */\n  unsigned char  _filler19\u00c454\u00dc;            /* MESSAGE TEXT               @PBC      */\n  unsigned char  _filler20\u00c42\u00dc;             /* DESCRIPTOR CODES           @L1A      */\n  unsigned char  _filler21\u00c42\u00dc;             /* ROUTING CODES              @L1A      */\n  unsigned char  ioqe_stenq;               /* ENQ status                           */\n  unsigned char  _filler22\u00c45\u00dc;\n  unsigned char  ioqe_major\u00c48\u00dc;            /* ENQ major                            */\n  unsigned char  ioqe_minor\u00c448\u00dc;           /* ENQ minor                            */\n  void          *ioqe_enqtcb;              /* ENQ TCB addr                         */\n  void          *ioqe_minorl;              /* ENQ minor length                     */\n  void          *_filler23;                /* reserv for TCB                       */\n  unsigned char  _filler24;                /* PELLAST flag byte.        X02113     */\n  unsigned char  _filler25;                /* PELMILEN - RNAME length.             */\n  unsigned char  _filler26;\n  unsigned char  _filler27;                /* PELRET - return code byte.           */\n  void          *_filler28;                /* QNAME ADDRESS                        */\n  void          *_filler29;                /* RNAME ADDRESS                        */\n  void          *ioqe_enq_rc;              /* enq rc                               */\n  unsigned char  _filler30\u00c44\u00dc;\n  void          *_filler31;                /* TCPIP_ECB on double word             */\n  void          *ioqe_ecbl\u00c42\u00dc;             /* wait list                            */\n  unsigned char  ioqe_timx\u00c448\u00dc;            /* model timer exit                     */\n  void          *ioqe_tecb;                /* timer ecb                            */\n  struct \u00e4\n    void          *_ioqe_tcpip_ecb; /* TCPIP/ECB */\n    \u00fc ioqe_recb;\n  unsigned char  ioqe_tcpip_ecb_work\u00c4100\u00dc; /* async work area                      */\n  void          *ioqejscb;                 /* jscb area                            */\n  void          *ioqe_qsammsg;             /* qsam message addr                    */\n  unsigned char  ioqe_qsambuf\u00c4164\u00dc;        /* qsam message buffer                  */\n  unsigned char  _filler32\u00c416\u00dc;            /* blank after the buffer               */\n  unsigned char  _filler33\u00c44\u00dc;\n  void          *ioqetiea;                 /* TIE addr                             */\n  unsigned char  ioqe_tasktype;            /* task type                            */\n  unsigned char  ioqe_status;              /* task status                          */\n  unsigned char  ioqe_status_req;          /* task status req                      */\n  unsigned char  ioqe_confirm;             /* confirm byte                         */\n  short int      ioqe_socket;              /* socket number                        */\n  short int      ioqe_tempsocket;          /* temporary socket number              */\n  struct \u00e4\n    short int      _ioqe_name_family;      /* INET family */\n    short int      _ioqe_name_port;        /* port        */\n    void          *_ioqe_name_address;     /* address     */\n    unsigned char  _ioqe_name_reserved\u00c48\u00dc; /* reserved    */\n    \u00fc ioqe_name;\n  void          *ioqe_namelen;             /* name length field                    */\n  unsigned char  ioqe_subtask\u00c48\u00dc;          /* subtask                              */\n  unsigned char  ioqe_reserved;            /* reserved                             */\n  struct \u00e4\n    void          *_ioqe_tcpip_clientid_domain;       /* domain INET            */\n    unsigned char  _ioqe_tcpip_clientid_name\u00c48\u00dc;      /* MVS address space name */\n    unsigned char  _ioqe_tcpip_clientid_task\u00c48\u00dc;      /* task                   */\n    unsigned char  _ioqe_tcpip_clientid_reserved\u00c420\u00dc; /* reserved               */\n    \u00fc ioqe_tcpip_clientid;\n  unsigned char  _filler34\u00c43\u00dc;\n  short int      ioqe_tcpip_maxsoc\u00c42\u00dc;     /* max socket number                    */\n  void          *ioqe_tcpip_maxsno;        /* max socket number                    */\n  void          *ioqe_retcode;             /* return code                          */\n  void          *ioqe_errno;               /* error number                         */\n  void          *ioqe_optlen;              /* option length                        */\n  struct \u00e4\n    void          *_ioqe_optval_onoff; /* on/off flag */\n    \u00fc ioqe_optval;\n  void          *ioqe_optval_linger;       /* linger time in sec                   */\n  unsigned char  ioqe_hostname\u00c432\u00dc;        /* host name                            */\n  unsigned char  ioqe_hostaddr\u00c416\u00dc;        /* host address                         */\n  void          *ioqe_hostent;             /* hostentry list pointer               */\n  void          *ioqe_timeout\u00c42\u00dc;          /* select timeout                       */\n  void          *ioqe_hostent_loop;        /* loop on host alias names             */\n  void          *ioqe_hostadr_loop;        /* loop on host alias addresses         */\n  void          *ioqe_nbyte;               /* message length                       */\n  unsigned char  ioqe_temphostname\u00c432\u00dc;    /* temp host name                       */\n  unsigned char  ioqe_temphostaddr\u00c416\u00dc;    /* temp host addr in printable form     */\n  union \u00e4\n    struct \u00e4\n      double         _ioqeorg;\n      unsigned char  _filler35\u00c42040\u00dc;\n      \u00fc _ioqedsect_struct1;\n    struct \u00e4\n      struct \u00e4\n        void          *_ioqe_mqs_hconn; /* connection handle */\n        \u00fc ioqe_mqs;\n      void          *_ioqe_mqs_hobj;                         /* object handle        */\n      void          *_ioqe_mqs_buffer_length;                /* length of the buffer */\n      void          *_ioqe_mqs_data_length;                  /* data length          */\n      void          *_ioqe_mqs_option;                       /* MQS option           */\n      struct \u00e4\n        unsigned char  _ioqe_mqs_mqod_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_mqod;\n      void          *_ioqe_mqs_mqod_version;\n      void          *_ioqe_mqs_mqod_objecttype;\n      unsigned char  _ioqe_mqs_mqod_objectname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqod_objectqmgrname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqod_dynamicqname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqod_alternateuserid\u00c412\u00dc;\n      void          *_ioqe_mqs_mqod_recspresent;\n      void          *_ioqe_mqs_mqod_knowndestcount;\n      void          *_ioqe_mqs_mqod_unknowndestcount;\n      void          *_ioqe_mqs_mqod_invaliddestcount;\n      void          *_ioqe_mqs_mqod_objectrecoffset;\n      void          *_ioqe_mqs_mqod_responserecoffset;\n      void          *_ioqe_mqs_mqod_objectrecptr;\n      void          *_ioqe_mqs_mqod_responserecptr;\n      unsigned char  _ioqe_mqs_mqod_alternatesecurityid\u00c440\u00dc;\n      unsigned char  _ioqe_mqs_mqod_resolvedqname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqod_resolvedqmgrname\u00c448\u00dc;\n      unsigned char  _filler36\u00c41692\u00dc;\n      \u00fc _ioqedsect_struct2;\n    struct \u00e4\n      struct \u00e4\n        void          *_ioqe_db2_crab; /* CRAB pointer */\n        \u00fc ioqe_db2;\n      void          *_ioqe_db2_parmlist\u00c48\u00dc;          /* parmlist                        */\n      short int      _ioqe_db2_cparml;               /* list length                     */\n      unsigned char  _ioqe_db2_cparm\u00c432\u00dc;            /* parms for C                     */\n      unsigned char  _ioqe_db2_option;               /* option i.e. coded function name */\n      unsigned char  _ioqe_db2_callback_function\u00c48\u00dc; /* function name                   */\n      unsigned char  _filler37;                      /* terminator                      */\n      void          *_ioqe_db2_callback_parms\u00c48\u00dc;    /* parameters                      */\n      void          *_ioqe_db2_callback_return;      /* parameters                      */\n      void          *_ioqe_db2_tracelevel;           /* trace level                     */\n      void          *_ioqe_db2_callsave\u00c418\u00dc;         /* save for QFSSDB2                */\n      unsigned char  _ioqe_db2_work\u00c4128\u00dc;            /* work area                       */\n      unsigned char  _ioqe_db2_subsystem\u00c44\u00dc;         /* subsystem name                  */\n      unsigned char  _ioqe_db2_plan\u00c44\u00dc;              /* plan name                       */\n      void          *_ioqe_db2_return;               /* '      return code              */\n      void          *_ioqe_db2_drqe;\n      unsigned char  _filler38\u00c41712\u00dc;\n      \u00fc _ioqedsect_struct3;\n    unsigned char  _filler39\u00c42048\u00dc;  /* common area */\n    struct \u00e4\n      void          *_ioqeacb;          /* VTAM ACB addr                                     */\n      void          *_ioqecnvd;         /* conversation identifier                           */\n      struct \u00e4\n        unsigned char  _filler40;  /* RPL IDENTIFICATION              */\n        unsigned char  _filler41;  /* RPL SUBTYPE             X04SVHS */\n        unsigned char  _filler42;  /* RPL REQUEST TYPE                */\n        unsigned char  _filler43;  /* RPL LENGTH               X03004 */\n        \u00fc ioqerpl;\n      void          *_filler44;         /* .                   POINTER TO PLACEHOLDER        */\n      void          *_filler45;         /* .                   ECB                           */\n      unsigned char  _filler46;         /* .                 STATUS BYTE                     */\n      unsigned char  _filler47\u00c43\u00dc;      /* FEEDBACK CODES                                    */\n      unsigned char  _filler48;         /* THIRD REQUEST HEADER                              */\n      unsigned char  _filler49;         /* SEND/RECEIVE TYPE       X04SVHS                   */\n      unsigned char  _filler50;         /* REQUEST UNIT CHAIN POSITION                       */\n      unsigned char  _filler51;         /* VTAM FLAGS     X3004BH                            */\n      unsigned char  _filler52;         /* POST/RESPOND FLAGS      X04SVHS                   */\n      unsigned char  _filler53;         /* DATA CONTROL            X04SVHS                   */\n      unsigned char  _filler54;         /* DATA CONTROL            X04SVHS                   */\n      unsigned char  _filler55;         /* SESSION CONTROL         X04SVHS                   */\n      void          *_filler56;         /* .                   RESERVED FOR ACB POINTER      */\n      int            _filler57 : 24;    /* .                 USER RH                @R491100 */\n      unsigned char  _filler58;         /* SONCODE NOT SPECIFIED  @R491100                   */\n      void          *_filler59;         /* .               POINTER TO RECORD AREA            */\n      void          *_filler60;         /* .                POINTER TO ARGUMENT              */\n      unsigned char  _filler61;         /* .        OPTCD BYTE 1                             */\n      unsigned char  _filler62;         /* .            OPTCD BYTE 2                         */\n      unsigned char  _filler63;         /* .                 OPTCD BYTE 3            X04SVHS */\n      unsigned char  _filler64;         /* .                 OPTCD BYTE 4            X04SVHS */\n      void          *_filler65;         /* .             POINTER TO NEXT RPL                 */\n      void          *_filler66;         /* .                   RESERVED FOR LOGICAL REC LEN  */\n      void          *_filler67;         /* .                   RESERVED FOR BUFFER LENGTH    */\n      unsigned char  _filler68;         /* .            BYTE 5                  X04SVHS      */\n      unsigned char  _filler69;         /* .            BYTE 6                  X04SVHS      */\n      unsigned char  _filler70;         /* .            BYTE 7                  X04SVHS      */\n      unsigned char  _filler71;         /* .            BYTE 8                  X04SVHS      */\n      short int      _filler72;         /* STSN OUTBOUND SEQ NO    X3004BH                   */\n      short int      _filler73;         /* STSN INBOUND SEQ NO     X3004BH                   */\n      unsigned char  _filler74;         /* STSN OUTBOUND ACTION CODES                        */\n      unsigned char  _filler75;         /* STSN INBOUND ACTION CODES                         */\n      short int      _filler76;         /* SEQUENCE NUMBER         X3004BH                   */\n      unsigned char  _filler77;         /* @G40AKSL                                          */\n      unsigned char  _filler78;         /* ACTIVE INDICATOR                                  */\n      short int      _filler79;         /* .           MAXIMUM ERROR MSG LENGTH              */\n      void          *_filler80;         /* .                   RESERVED FOR MESSAGE AREA PTR */\n      void          *_filler81;         /* .              ADDITIONAL DATA AREA PTR X03004    */\n      void          *_filler82;         /* .            ADDITIONAL AREA LENGTH   X03004      */\n      void          *_filler83;         /* .            ADDITIONAL RECORD LENGTH X03004      */\n      unsigned char  _filler84\u00c44\u00dc;      /* FEEDBACK AREA            X03004                   */\n      unsigned char  _filler85\u00c44\u00dc;      /* USER FIELD               X03004                   */\n      unsigned char  _filler86;         /* .            OPTCD BYTE 9            X04SVHS      */\n      unsigned char  _filler87;         /* .            OPTCD BYTE 10           X04SVHS      */\n      unsigned char  _filler88;         /* .            OPTCD BYTE 11           X04SVHS      */\n      unsigned char  _filler89;         /* .            OPTCD BYTE 12           X04SVHS      */\n      unsigned char  _filler90;         /* SYSTEM SENSE OUTPUT     X04SVHS                   */\n      unsigned char  _filler91;         /* SYSTEM SENSE MODIFIER                             */\n      short int      _filler92;         /* USER SENSE OUTPUT       X3004BH                   */\n      void          *_filler93;         /* SAVE AREA OF FAST PATH @Z40BHUC                   */\n      void          *_filler94;         /* SIGNAL DATA FIELD      @Z40BHUC                   */\n      struct \u00e4\n        unsigned char  _filler95\u00c44\u00dc;  /* ACRONYM IN EBCDIC */\n        \u00fc ioqerplx;\n      unsigned char  _filler96;         /* TYPE OF APPCCMD                                   */\n      unsigned char  _filler97;         /* SUBTYPE OF APPCCMD                                */\n      unsigned char  _filler98\u00c42\u00dc;      /* RESERVED                                          */\n      unsigned char  _filler99\u00c44\u00dc;      /* CONVERSATION ID                                   */\n      unsigned char  _filler100\u00c44\u00dc;     /* USER FIELD                                        */\n      unsigned char  _filler101\u00c44\u00dc;     /* OUTBOUND SENSE DATA                               */\n      unsigned char  _filler102\u00c44\u00dc;     /* SENSE DATA RETURNED BY APPCCMD                    */\n      unsigned char  _filler103\u00c44\u00dc;     /* SIGNAL DATA RETURNED                              */\n      unsigned char  _filler104;        /* LENGTH OF SESSION IDENTIFICATION                  */\n      unsigned char  _filler105\u00c43\u00dc;     /* RESERVED                                          */\n      unsigned char  _filler106\u00c48\u00dc;     /* SESSION IDENTIFICATION                            */\n      unsigned char  _filler107\u00c42\u00dc;     /* PRIMARY RETURN CODE                               */\n      unsigned char  _filler108\u00c42\u00dc;     /* SECONDARY RETURN CODE                             */\n      unsigned char  _filler109;\n      unsigned char  _filler110;        /* @U2C                                              */\n      unsigned char  _filler111;\n      unsigned char  _filler112;\n      unsigned char  _filler113\u00c48\u00dc;     /* LU NAME                                           */\n      unsigned char  _filler114\u00c48\u00dc;     /* LOGMODE NAME                                      */\n      unsigned char  _filler115\u00c42\u00dc;     /* WHAT RECEIVED INDICATOR                           */\n      unsigned char  _filler116;        /* RETURNED INDICATORS AS                            */\n      unsigned char  _filler117;        /* LENGTH OF THE FMH5 RECEIVED                       */\n      unsigned char  _filler118;        /* RESERVED                                          */\n      unsigned char  _filler119;        /* RPL6 ACTIVE INDICATOR                             */\n      unsigned char  _filler120\u00c42\u00dc;     /* RESERVED                                          */\n      void          *_filler121;        /* TASK ID                                           */\n      void          *_filler122;        /* ADDRESS OF RPL                                    */\n      void          *_filler123;        /* CURRENT BUFFER ADDRESS   @P043961                 */\n      void          *_filler124;        /* DISPLACEMENT IN CURRENT  @P043961                 */\n      short int      _filler125;        /* VECTOR OUTPUT AREA LENGTH       @S1C              */\n      short int      _filler126;        /* VECTOR INPUT AREA LENGTH        @L2C              */\n      unsigned char  _filler127\u00c48\u00dc;     /* NETID                        @KGA                 */\n      unsigned char  _filler128\u00c44\u00dc;     /* Conversation Group ID        @KFA                 */\n      void          *_filler129;        /* VECTOR OUTPUT AREA ADDRESS      @S1C              */\n      void          *_filler130;        /* VECTOR INPUT AREA ADDRESS       @L2C              */\n      struct \u00e4\n        unsigned char  _filler131;  /* NIB Control Block ID         @21C */\n        unsigned char  _filler132;  /* NIBFLG0 flags          @L1C       */\n        unsigned char  _filler133;  /* COND FIELD GIVEN/DEFAULT          */\n        char           _filler134;  /* LENGTH OF BLOCK                   */\n        \u00fc ioqenib;\n      int            _filler135;        /* CID - FILLED IN                                   */\n      void          *_filler136;        /* USER FIELD DEFAULTED                              */\n      unsigned char  _filler137\u00c48\u00dc;     /* NAME OPERAND SUPPLIED                             */\n      unsigned char  _filler138\u00c48\u00dc;     /* MODE OPERAND SPECIFIED                            */\n      unsigned char  _filler139\u00c48\u00dc;     /* DEVICE CHARACTERISTICS AREA                       */\n      unsigned char  _filler140\u00c44\u00dc;     /* PROCESS OPTIONS DEFAULTED.                        */\n      unsigned char  _filler141;        /* NIBLIST STATUS, SDT MACRO STATUS                  */\n      unsigned char  _filler142;        /* RESERVED FOR VTAM                                 */\n      short int      _filler143;        /* LIMIT FIELD DEFAULTED                             */\n      void          *_filler144;        /* EXLST FIELD DEFAULTED                             */\n      unsigned char  _filler145\u00c48\u00dc;     /* LOGMODE                                           */\n      void          *_filler146;        /* BNDAREA DEFAULT                  @F1A             */\n      void          *_filler147;\n      unsigned char  _ioqegencb\u00c4192\u00dc;   /* gencb area                                        */\n      unsigned char  _ioqeistsld\u00c4128\u00dc;  /* def/disp area                                     */\n      unsigned char  _ioqeistslcns\u00c416\u00dc; /* CNOS area                                         */\n      unsigned char  _ioqelul;          /* my LU name length                                 */\n      unsigned char  _ioqelu\u00c48\u00dc;        /* my LU name                                        */\n      unsigned char  _ioqelgmd\u00c48\u00dc;      /* logmode name                                      */\n      unsigned char  _ioqeplu\u00c48\u00dc;       /* partner LU name                                   */\n      unsigned char  _ioqefmh5\u00c4256\u00dc;    /* FMH5                                              */\n      unsigned char  _filler148\u00c41135\u00dc;\n      \u00fc _ioqedsect_struct4;\n    struct \u00e4\n      void          *_ioqe_readmask\u00c416\u00dc;     /* read mask                      */\n      void          *_ioqe_readsetmask\u00c416\u00dc;  /* read set mask                  */\n      void          *_ioqe_excemask\u00c416\u00dc;     /* exceptional condition mask     */\n      void          *_ioqe_excesetmask\u00c416\u00dc;  /* exceptional condition set mask */\n      void          *_ioqe_writemask\u00c416\u00dc;    /* write mask                     */\n      void          *_ioqe_writesetmask\u00c416\u00dc; /* write set mask                 */\n      double         _ioqe_bpx;              /* align it                       */\n      unsigned char  _filler149\u00c41656\u00dc;\n      \u00fc _ioqedsect_struct5;\n    struct \u00e4\n      void          *_ioqe_file_crab;                 /* CRAB pointer                    */\n      void          *_ioqe_file_callback;             /* callback addres                 */\n      void          *_ioqe_file_parmlist\u00c48\u00dc;          /* parmlist                        */\n      short int      _ioqe_file_cparml;               /* list length                     */\n      unsigned char  _ioqe_file_cparm\u00c460\u00dc;            /* parms for C                     */\n      unsigned char  _ioqe_file_option;               /* option i.e. coded function name */\n      unsigned char  _filler150;\n      void          *_ioqe_file_file;                 /* File obj pointer                */\n      unsigned char  _ioqe_file_callback_function\u00c48\u00dc; /* function name                   */\n      unsigned char  _filler151;                      /* terminator                      */\n      unsigned char  _filler152\u00c43\u00dc;\n      void          *_ioqe_file_callback_parms\u00c48\u00dc;    /* parameters                      */\n      void          *_ioqe_file_callback_return;      /* parameters                      */\n      void          *_ioqe_file_tracelevel;           /* trace level                     */\n      void          *_ioqe_file_callsave\u00c418\u00dc;         /* save for QFSSWWC                */\n      void          *_ioqe_file_cppsave\u00c418\u00dc;          /* save for CPP                    */\n      unsigned char  _ioqe_file_work\u00c4128\u00dc;            /* work area                       */\n      int            _ioqe_file_profile;\n      unsigned char  _filler153\u00c41612\u00dc;\n      \u00fc _ioqedsect_struct6;\n    struct \u00e4\n      unsigned char  _ioqe_sapi_flag;          /* status flag                  */\n      unsigned char  _ioqe_sapi_flag1;         /* status flag for exten int    */\n      unsigned char  _ioqe_sapi_key;           /* storage key indicator        */\n      unsigned char  _ioqe_sapi_workflag;      /* workflag for filter          */\n      unsigned char  _ioqe_sapi_savekey;       /* save callers key             */\n      unsigned char  _filler154\u00c43\u00dc;\n      void          *_ioqe_sapi_define;        /* selection definition pointer */\n      void          *_ioqe_sapi_define_length; /* length of the define area    */\n      void          *_ioqe_sapi_maxlrec;       /* max record length            */\n      void          *_ioqe_sapi_count;         /* count value                  */\n      unsigned char  _ioqe_sapi_ddname\u00c48\u00dc;     /* allocated DD name            */\n      unsigned char  _filler155;               /* keep C++ hapy                */\n      unsigned char  _ioqe_sapi_subsys\u00c44\u00dc;     /* subsystem name               */\n      unsigned char  _filler156\u00c43\u00dc;\n      void          *_ioqe_sapi_bfa;           /* returned record addr         */\n      void          *_ioqe_sapi_bfal;          /* returned record length       */\n      void          *_ioqe_sapi_sjf;           /* SJF address                  */\n      void          *_ioqe_sapi_uparm;         /* UPARM address                */\n      void          *_ioqe_sapi_vsam;          /* VSAM address                 */\n      void          *_ioqe_sapi_qsam;          /* QSAM address                 */\n      void          *_ioqe_sapi_ecbp;          /* ECB address                  */\n      unsigned char  _ioqe_sapi_jobi\u00c48\u00dc;       /* JES job id                   */\n      unsigned char  _ioqe_sapi_jobn\u00c48\u00dc;       /* job name                     */\n      unsigned char  _ioqe_sapi_rbadp;         /* allocate dataset RB pointer  */\n      int            _filler157 : 24;\n      unsigned char  _ioqe_sapi_rbad\u00c44\u00dc;       /* allocate datset RB           */\n      void          *_filler158\u00c44\u00dc;\n      void          *_ioqe_sapi_adtxt\u00c44\u00dc;      /* allocate dataset text units  */\n      void          *_ioqe_sapi_dalrbtkn;      /* RB token from JEStext units  */\n      unsigned char  _ioqe_sapi_rbfdp;         /* FREE DATASET RB POINTER      */\n      int            _filler159 : 24;\n      unsigned char  _ioqe_sapi_rbfd\u00c44\u00dc;       /* free dataset RB              */\n      void          *_filler160\u00c44\u00dc;\n      void          *_ioqe_sapi_fdtxt\u00c46\u00dc;      /* free dataset text units      */\n      int            _ioqe_sapi_daldsnam;      /* allocate dataset             */\n      unsigned char  _filler161\u00c41868\u00dc;\n      \u00fc _ioqedsect_struct7;\n    struct \u00e4\n      unsigned char  _ioqe_exci_flag;               /* status flag                           */\n      unsigned char  _ioqe_exci_key;                /* storage key indicator                 */\n      unsigned char  _ioqe_exci_workflag;           /* workflag                              */\n      unsigned char  _ioqe_exci_savekey;            /* save callers key                      */\n      void          *_ioqe_exci_buffer;             /* actual buffer pointer                 */\n      unsigned char  _ioqe_exci_applid\u00c48\u00dc;          /* cics generl application id            */\n      unsigned char  _ioqe_exci_system\u00c48\u00dc;          /* system name                           */\n      unsigned char  _ioqe_exci_program\u00c48\u00dc;         /* called progarm name                   */\n      unsigned char  _ioqe_exci_userid\u00c48\u00dc;          /* cics user id                          */\n      unsigned char  _ioqe_exci_transid\u00c48\u00dc;         /* cics transaction id                   */\n      unsigned char  _ioqe_exci_user_name\u00c48\u00dc;       /* user name                             */\n      unsigned char  _ioqe_exci_pipe_type;          /* pipe type                             */\n      unsigned char  _ioqe_exci_dpl_type;           /* DPL type                              */\n      unsigned char  _filler162\u00c42\u00dc;\n      void          *_ioqe_exci_call_type;          /* call type                             */\n      void          *_ioqe_exci_user_token;         /* user token                            */\n      void          *_ioqe_exci_pipe_token;         /* pipe token                            */\n      void          *_ioqe_exci_version;            /* version number                        */\n      struct \u00e4\n        void          *_ioqe_exci_response;    /* resp         */\n        void          *_ioqe_exci_reason;      /* reason       */\n        void          *_ioqe_exci_sub_reason1; /* sub reason 1 */\n        void          *_ioqe_exci_sub_reason2; /* sub reason 2 */\n        void          *_ioqe_exci_msg_ptr;     /* message ptr  */\n        \u00fc ioqe_exci_return_area;\n      struct \u00e4\n        void          *_ioqe_exci_dpl_ret_resp;  /* resp value  */\n        void          *_ioqe_exci_dpl_ret_resp2; /* resp2 value */\n        void          *_ioqe_exci_dpl_ret_abend; /* abend value */\n        \u00fc ioqe_exci_dpl_ret;\n      void          *_ioqe_exci_call\u00c418\u00dc;           /* call arae                             */\n      void          *_ioqe_exci_alloctry;           /* alloc try                             */\n      void          *_ioqe_exci_subtask_tcb;        /* subtask TCB                           */\n      void          *_ioqe_exci_subtask_ecblist\u00c42\u00dc; /* ECB list                              */\n      void          *_ioqe_exci_subtask_stopecb;    /* stop ECB                              */\n      void          *_ioqe_exci_subtask_workecb;    /* work ECB                              */\n      void          *_ioqe_exci_subtask_ioqe;       /* IOQE address                          */\n      struct \u00e4\n        void          *_filler163;  /* DE OR EPLOC ADDRESS          @G860PXB */\n        \u00fc ioqe_exci_attachl;\n      void          *_filler164;                    /* DCB ADDRESS                  @G860PXB */\n      void          *_filler165;                    /* NEW FORMAT + ECB ADDR        @G860PXB */\n      void          *_filler166;                    /* GSPL OR GSPV                 @G860PXB */\n      void          *_filler167;                    /* SHSPV OR SHSPL               @G860PXB */\n      void          *_filler168;                    /* EXIT ROUTINE ADDRESS         @G860PXB */\n      short int      _filler169;                    /* DPMOD VALUE                  @G860PXB */\n      unsigned char  _filler170;                    /* LPMOD VALUE                  @G860PXB */\n      unsigned char  _filler171;                    /* STATUS BYTE                  @G860PXB */\n      void          *_filler172\u00c42\u00dc;                 /* EP NAME SPACE                @G860PXB */\n      void          *_filler173;                    /* ADDRESS OF JSCB              @G860PXB */\n      void          *_filler174;                    /* (E)STAI PARM LIST            @G860PXB */\n      void          *_filler175;                    /* EXIT ADDRESS                 @G860PXB */\n      void          *_filler176;                    /* TASKLIB                      @G860PXB */\n      unsigned char  _filler177;                    /* FLAG BYTE                    @G860PXB */\n      unsigned char  _filler178;                    /* TASK ID                      @G860PXB */\n      short int      _filler179;                    /* PARM LIST LENGTH             @G860PXB */\n      void          *_filler180;                    /* SUBPOOL LIST ADDRESS/VALUE   @G860PXB */\n      unsigned char  _filler181;                    /* SET FLAGS                    @G860PXB */\n      unsigned char  _filler182;                    /* SET UP FORMAT NUMBER         @G860PXB */\n      unsigned char  _filler183\u00c410\u00dc;                /* RESERVED BYTES FOR FUTURE    @G860PXB */\n      void          *_ioqe_exci_data_len;           /* commarea used length                  */\n      void          *_ioqe_exci_ca_length;          /* commarea length                       */\n      void          *_ioqe_exci_ca;                 /* commarea addr                         */\n      unsigned char  _filler184\u00c44\u00dc;\n      double         _ioqe_exci_;                   /* commarea                              */\n      unsigned char  _filler185\u00c428\u00dc;\n      unsigned char  _ioqe_db2_drqe_key\u00c428\u00dc;        /* record key                            */\n      void          *_ioqe_db2_drqe_status;         /* status                                */\n      void          *_ioqe_db2_drqe_format;         /* format                                */\n      void          *_ioqe_db2_drqe_size;           /* size                                  */\n      void          *_ioqe_db2_drqe_pagecount;      /* pagecount                             */\n      unsigned char  _ioqe_db2_drqe_entry_key\u00c428\u00dc;  /* entry key                             */\n      int            _ioqe_db2_prodb2;\n      unsigned char  _filler186\u00c41640\u00dc;\n      \u00fc _ioqedsect_struct8;\n    struct \u00e4\n      unsigned char  _filler187\u00c420\u00dc;\n      unsigned char  _ioqe_mqs_mqod_area\u00c4336\u00dc;\n      struct \u00e4\n        unsigned char  _ioqe_mqs_mqmd_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_mqmd;\n      void          *_ioqe_mqs_mqmd_version;\n      void          *_ioqe_mqs_mqmd_report;\n      void          *_ioqe_mqs_mqmd_msgtype;\n      void          *_ioqe_mqs_mqmd_expiry;\n      void          *_ioqe_mqs_mqmd_feedback;\n      void          *_ioqe_mqs_mqmd_encoding;\n      void          *_ioqe_mqs_mqmd_codedcharsetid;\n      unsigned char  _ioqe_mqs_mqmd_format\u00c48\u00dc;\n      void          *_ioqe_mqs_mqmd_priority;\n      void          *_ioqe_mqs_mqmd_persistence;\n      unsigned char  _ioqe_mqs_mqmd_msgid\u00c424\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_correlid\u00c424\u00dc;\n      void          *_ioqe_mqs_mqmd_backoutcount;\n      unsigned char  _ioqe_mqs_mqmd_replytoq\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_replytoqmgr\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_useridentifier\u00c412\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_accountingtoken\u00c432\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_applidentitydata\u00c432\u00dc;\n      void          *_ioqe_mqs_mqmd_putappltype;\n      unsigned char  _ioqe_mqs_mqmd_putapplname\u00c428\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_putdate\u00c48\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_puttime\u00c48\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_applorigindata\u00c44\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_groupid\u00c424\u00dc;\n      void          *_ioqe_mqs_mqmd_msgseqnumber;\n      void          *_ioqe_mqs_mqmd_offset;\n      void          *_ioqe_mqs_mqmd_msgflags;\n      void          *_ioqe_mqs_mqmd_originallength;\n      unsigned char  _filler188\u00c41328\u00dc;\n      \u00fc _ioqedsect_struct9;\n    struct \u00e4\n      unsigned char  _filler189\u00c4176\u00dc;\n      short int      _filler190\u00c43\u00dc;\n      unsigned char  _ioqe_sapi_dyndsn\u00c444\u00dc; /* datset name       */\n      unsigned char  _filler191\u00c42\u00dc;\n      int            _ioqe_sapi_dalssreq;   /* subsystem request */\n      unsigned char  _filler192\u00c41816\u00dc;\n      \u00fc _ioqedsect_struct10;\n    struct \u00e4\n      unsigned char  _filler193\u00c4228\u00dc;\n      short int      _filler194\u00c43\u00dc;\n      unsigned char  _ioqe_sapi_dynsubsys\u00c44\u00dc;\n      unsigned char  _filler195\u00c42\u00dc;\n      int            _ioqe_sapi_dalrtddn;     /* returned dd name */\n      unsigned char  _filler196\u00c41804\u00dc;\n      \u00fc _ioqedsect_struct11;\n    struct \u00e4\n      unsigned char  _filler197\u00c4240\u00dc;\n      short int      _filler198\u00c43\u00dc;\n      unsigned char  _ioqe_sapi_dynaddn\u00c48\u00dc;\n      unsigned char  _filler199\u00c42\u00dc;\n      int            _ioqe_sapi_dunddnam;   /* unallocate dd name */\n      unsigned char  _filler200\u00c41788\u00dc;\n      \u00fc _ioqedsect_struct12;\n    struct \u00e4\n      unsigned char  _filler201\u00c4256\u00dc;\n      short int      _filler202\u00c43\u00dc;\n      unsigned char  _ioqe_sapi_dynuddn\u00c48\u00dc;\n      unsigned char  _filler203\u00c42\u00dc;\n      int            _ioqe_sapi_daldisp;    /* disp=shr TU */\n      unsigned char  _filler204\u00c41772\u00dc;\n      \u00fc _ioqedsect_struct13;\n    struct \u00e4\n      unsigned char  _filler205\u00c4272\u00dc;\n      short int      _filler206\u00c43\u00dc;\n      unsigned char  _filler207;\n      unsigned char  _filler208;\n      void          *_ioqe_sapi_ssobaddr; /* ssob address for        */\n      unsigned char  _ioqe_sapi_ssob\u00c44\u00dc;\n      short int      _filler209\u00c42\u00dc;\n      void          *_filler210\u00c45\u00dc;\n      short int      _filler211;\n      unsigned char  _filler212\u00c4146\u00dc;\n      unsigned char  _ioqe_sapi_ssib\u00c44\u00dc;\n      short int      _filler213;\n      unsigned char  _filler214\u00c430\u00dc;\n      int            _ioqe_sapi_dcb;      /* ORIGIN ON WORD BOUNDARY */\n      unsigned char  _filler215\u00c41548\u00dc;\n      \u00fc _ioqedsect_struct14;\n    struct \u00e4\n      unsigned char  _filler216\u00c4356\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_area\u00c4364\u00dc;\n      struct \u00e4\n        unsigned char  _ioqe_mqs_mqgmo_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_mqgmo;\n      void          *_ioqe_mqs_mqgmo_version;\n      void          *_ioqe_mqs_mqgmo_options;\n      void          *_ioqe_mqs_mqgmo_waitinterval;\n      void          *_ioqe_mqs_mqgmo_signal1;\n      void          *_ioqe_mqs_mqgmo_signal2;\n      unsigned char  _ioqe_mqs_mqgmo_resolvedqname\u00c448\u00dc;\n      void          *_ioqe_mqs_mqgmo_matchoptions;\n      unsigned char  _ioqe_mqs_mqgmo_groupstatus;\n      unsigned char  _ioqe_mqs_mqgmo_segmentstatus;\n      unsigned char  _ioqe_mqs_mqgmo_segmentation;\n      unsigned char  _ioqe_mqs_mqgmo_reserved1;\n      unsigned char  _ioqe_mqs_mqgmo_msgtoken\u00c416\u00dc;\n      void          *_ioqe_mqs_mqgmo_returnedlength;\n      unsigned char  _filler217\u00c41228\u00dc;\n      \u00fc _ioqedsect_struct15;\n    struct \u00e4\n      unsigned char  _filler218\u00c4384\u00dc;\n      void          *_ioqe_bpx_call\u00c432\u00dc;         /* parm area             */\n      void          *_ioqe_bpx_socket;           /* socket value          */\n      void          *_ioqe_bpx_select;           /* select pool           */\n      void          *_ioqe_bpx_retvalue;         /* ret value             */\n      void          *_ioqe_bpx_retcode;          /* ret code              */\n      void          *_ioqe_bpx_rsncode;          /* reason code           */\n      void          *_ioqe_bpx_option;           /* option                */\n      void          *_ioqe_bpx_list_length_r;    /* read mask length      */\n      void          *_ioqe_bpx_list_length_w;    /* write mask length     */\n      void          *_ioqe_bpx_list_length_e;    /* exception mask length */\n      unsigned char  _ioqe_bpx_aio\u00c4192\u00dc;         /* AIO cb                */\n      unsigned char  _filler219\u00c44\u00dc;\n      double         _ioqe_bpx_timeout;          /* timeout value         */\n      void          *_ioqe_bpx_msgflags;         /* message flags         */\n      void          *_ioqe_bpx_timeout_wait;     /* wait timeout value    */\n      void          *_ioqe_bpx_wait_ecb_address; /* wait ecb address      */\n      unsigned char  _ioqe_bpx_tie\u00c4400\u00dc;         /* TIE area              */\n      unsigned char  _filler220\u00c4884\u00dc;\n      \u00fc _ioqedsect_struct16;\n    struct \u00e4\n      unsigned char  _filler221\u00c4404\u00dc;\n      void          *_ioqe_db2_prodb2__prof_sysa\u00c42\u00dc;   /* system profile start addr   */\n      void          *_ioqe_db2_prodb2__prof_rcva\u00c42\u00dc;   /* receiver profile start addr */\n      void          *_ioqe_db2_prodb2__prof_liba\u00c42\u00dc;   /* library profile start addr  */\n      void          *_ioqe_db2_prodb2__prof_browse;    /* browse pointer              */\n      unsigned char  _ioqe_db2_prodb2__prof_dsn\u00c444\u00dc;   /* profile dataset name        */\n      unsigned char  _ioqe_db2_prodb2__prof_mem\u00c48\u00dc;    /* profile member name         */\n      unsigned char  _ioqe_db2_prodb2__prof_ddname\u00c48\u00dc; /* profile dd name             */\n      unsigned char  _ioqe_db2_prodb2__prof_typ\u00c44\u00dc;    /* profile type - option       */\n      void          *_ioqe_db2_prodb2__prof_count;     /* lu count                    */\n      unsigned char  _ioqe_db2_prodb2__prof_sys\u00c48\u00dc;    /* system profile              */\n      unsigned char  _ioqe_db2_prodb2__prof_lib\u00c48\u00dc;    /* library profile             */\n      unsigned char  _ioqe_db2_prodb2__prof_rcv\u00c48\u00dc;    /* application profile         */\n      void          *_ioqe_db2_prodb2__prof_msga;      /* message pointer             */\n      unsigned char  _filler222\u00c41520\u00dc;\n      \u00fc _ioqedsect_struct17;\n    struct \u00e4\n      unsigned char  _filler223\u00c4432\u00dc;\n      void          *_ioqe_file_profile__prof_sysa\u00c42\u00dc;     /* system profile start addr   */\n      void          *_ioqe_file_profile__prof_rcva\u00c42\u00dc;     /* receiver profile start addr */\n      void          *_ioqe_file_profile__prof_liba\u00c42\u00dc;     /* library profile start addr  */\n      void          *_ioqe_file_profile__prof_browse;      /* browse pointer              */\n      unsigned char  _ioqe_file_profile__prof_dsn\u00c444\u00dc;     /* profile dataset name        */\n      unsigned char  _ioqe_file_profile__prof_mem\u00c48\u00dc;      /* profile member name         */\n      unsigned char  _ioqe_file_profile__prof_ddname\u00c48\u00dc;   /* profile dd name             */\n      unsigned char  _ioqe_file_profile__prof_typ\u00c44\u00dc;      /* profile type - option       */\n      void          *_ioqe_file_profile__prof_count;       /* lu count                    */\n      unsigned char  _ioqe_file_profile__prof_sys\u00c48\u00dc;      /* system profile              */\n      unsigned char  _ioqe_file_profile__prof_lib\u00c48\u00dc;      /* library profile             */\n      unsigned char  _ioqe_file_profile__prof_rcv\u00c48\u00dc;      /* application profile         */\n      void          *_ioqe_file_profile__prof_msga;        /* message pointer             */\n      unsigned char  _filler224\u00c4164\u00dc;\n      unsigned char  _ioqe_mqs_mqgmo_area\u00c4100\u00dc;\n      struct \u00e4\n        unsigned char  _ioqe_mqs_mqpmo_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_mqpmo;\n      void          *_ioqe_mqs_mqpmo_version;\n      void          *_ioqe_mqs_mqpmo_options;\n      void          *_ioqe_mqs_mqpmo_timeout;\n      void          *_ioqe_mqs_mqpmo_context;\n      void          *_ioqe_mqs_mqpmo_knowndestcount;\n      void          *_ioqe_mqs_mqpmo_unknowndestcount;\n      void          *_ioqe_mqs_mqpmo_invaliddestcount;\n      unsigned char  _ioqe_mqs_mqpmo_resolvedqname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqpmo_resolvedqmgrname\u00c448\u00dc;\n      unsigned char  _filler225\u00c41100\u00dc;\n      \u00fc _ioqedsect_struct18;\n    struct \u00e4\n      unsigned char  _filler226\u00c4496\u00dc;\n      unsigned char  _filler227\u00c416\u00dc;             /* FDAD, DVTBL                               */\n      void          *_filler228;                 /* KEYLEN, DEVT, TRBAL                       */\n      unsigned char  _filler229;                 /* BUFNO, NUMBER OF BUFFERS                  */\n      int            _filler230 : 24;            /* BUFCB, BUFFER POOL CONTROL BLOCK          */\n      short int      _filler231;                 /* BUFL, BUFFER LENGTH                       */\n      unsigned char  _filler232\u00c42\u00dc;              /* DSORG, DATA SET ORGANIZATION              */\n      void          *_filler233;                 /* IOBAD FOR EXCP OR RESERVED                */\n      unsigned char  _filler234;                 /* BFTEK, BFALN, DCBE INDICATORS             */\n      int            _filler235 : 24;            /* EODAD (END OF DATA ROUTINE ADDRESS)       */\n      unsigned char  _filler236;                 /* RECFM (RECORD FORMAT)                     */\n      int            _filler237 : 24;            /* EXLST (EXIT LIST ADDRESS)                 */\n      unsigned char  _filler238\u00c48\u00dc;              /* DDNAME                                    */\n      unsigned char  _filler239;                 /* OFLGS (OPEN FLAGS)                        */\n      unsigned char  _filler240;                 /* IFLGS (IOS FLAGS)                         */\n      unsigned char  _filler241\u00c42\u00dc;              /* MACR (MACRO FORMAT)                       */\n      unsigned char  _filler242;                 /* OPTCD, OPTION CODES                       */\n      int            _filler243 : 24;            /* CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. */\n      void          *_filler244;                 /* SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   */\n      short int      _filler245;                 /* INTERNAL ACCESS METHOD FLAGS              */\n      short int      _filler246;                 /* BLKSIZE, BLOCK SIZE                       */\n      int            _filler247;                 /* INTERNAL ACCESS METHOD FLAGS              */\n      void          *_filler248;                 /* INTERNAL ACCESS METHOD USE                */\n      void          *_filler249;                 /* EOBAD                                     */\n      void          *_filler250;                 /* RECAD                                     */\n      short int      _filler251;                 /* QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF   */\n      short int      _filler252;                 /* LRECL                                     */\n      unsigned char  _filler253;                 /* EROPT, ERROR OPTION                       */\n      int            _filler254 : 24;            /* CNTRL                                     */\n      short int      _filler255\u00c42\u00dc;              /* RESERVED AND PRECL                        */\n      void          *_filler256;                 /* EOB, INTERNAL ACCESS METHOD FIELD         */\n      struct \u00e4\n        unsigned char  _filler257;       /* OPTION BYTE */\n        int            _filler258 : 24;  /* DCB ADDRESS */\n        \u00fc ioqe_sapi_openl;\n      unsigned char  _ioqe_sapi_intrdr_buff\u00c480\u00dc; /* intrdr buffer                             */\n      unsigned char  _ioqe_sapi_parse\u00c4264\u00dc;      /* sapi parse buffer                         */\n      struct \u00e4\n        unsigned char  _ioqe_sapi_sel_held\u00c43\u00dc; /* held     yes/no */\n        unsigned char  _filler259;\n        \u00fc ioqe_sapi_sel_;\n      unsigned char  _filler260\u00c41104\u00dc;\n      \u00fc _ioqedsect_struct19;\n    struct \u00e4\n      unsigned char  _filler261\u00c4820\u00dc;\n      unsigned char  _ioqe_mqs_mqpmo_area\u00c4128\u00dc;\n      struct \u00e4\n        void          *_filler262;  /* PROB.PROG.PARAMETER           @L2C */\n        \u00fc ioqe_mqs_call;\n      void          *_filler263;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler264;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler265;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler266;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler267;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler268;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler269;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler270;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler271;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler272;                /* PROB.PROG.PARAMETER           @L2C */\n      void          *_filler273;                /* @L2C                               */\n      unsigned char  _ioqe_mqs_qmanager\u00c448\u00dc;    /* qmanager                           */\n      unsigned char  _ioqe_mqs_qname\u00c448\u00dc;       /* qname                              */\n      unsigned char  _filler274\u00c44\u00dc;\n      double         _filler275;                /* after queue name                   */\n      void          *_ioqe_mqs_dsp;             /* DSP pointer                        */\n      void          *_ioqe_mqs_dsp_lista;       /* DSP lista pointer                  */\n      void          *_ioqe_mqs_dsp_size;        /* DSP stored size                    */\n      void          *_ioqe_mqs_msga;            /* message start address              */\n      void          *_ioqe_mqs_msgal;           /* message buffer alloc length        */\n      void          *_ioqe_mqs_msgl;            /* message length                     */\n      void          *_ioqe_mqs_msgo;            /* message used offset                */\n      void          *_ioqe_mqs_msgt;            /* message used offset                */\n      void          *_ioqe_mqs_maxmsg;          /* max length                         */\n      void          *_ioqe_mqs_alloctry;        /* alloc try                          */\n      unsigned char  _ioqe_mqs_cmtf;            /* MQS commit flag                    */\n      unsigned char  _ioqe_mqs_version;         /* MQS MQMD version                   */\n      unsigned char  _ioqe_mqs_toext\u00c48\u00dc;        /* extension                          */\n      unsigned char  _ioqe_mqs_already_msg;     /* already in queue message           */\n      unsigned char  _filler276\u00c4893\u00dc;\n      \u00fc _ioqedsect_struct20;\n    struct \u00e4\n      unsigned char  _filler277\u00c4943\u00dc;\n      unsigned char  _ioqe_sapi_sel_noheld\u00c43\u00dc;    /* noheld   yes/no               */\n      unsigned char  _ioqe_sapi_sel_class\u00c48\u00dc;     /* sysout class values           */\n      unsigned char  _ioqe_sapi_sel_dest\u00c417\u00dc;     /* destination                   */\n      unsigned char  _ioqe_sapi_sel_jobname\u00c48\u00dc;   /* jobname mask                  */\n      unsigned char  _ioqe_sapi_sel_jobid\u00c48\u00dc;     /* jobid                         */\n      unsigned char  _ioqe_sapi_sel_jobidl\u00c48\u00dc;    /* jobid low                     */\n      unsigned char  _ioqe_sapi_sel_jobidh\u00c48\u00dc;    /* jobid high                    */\n      unsigned char  _ioqe_sapi_sel_writer\u00c48\u00dc;    /* writer name                   */\n      unsigned char  _ioqe_sapi_sel_forms\u00c48\u00dc;     /* forms                         */\n      unsigned char  _ioqe_sapi_sel_flash\u00c48\u00dc;     /* flash id                      */\n      unsigned char  _ioqe_sapi_sel_creator\u00c48\u00dc;   /* creator user                  */\n      unsigned char  _ioqe_sapi_sel_prmode\u00c48\u00dc;    /* prmode                        */\n      unsigned char  _ioqe_sapi_sel_ipaddr\u00c43\u00dc;    /* ipaddr yes/no                 */\n      unsigned char  _ioqe_sapi_sel_nipaddr\u00c43\u00dc;   /* nipaddr yes/no                */\n      unsigned char  _ioqe_sapi_sel_fcb\u00c48\u00dc;       /* fcb value                     */\n      unsigned char  _ioqe_sapi_sel_ucs\u00c48\u00dc;       /* ucs value                     */\n      unsigned char  _ioqe_sapi_sel_job\u00c43\u00dc;       /* job select yes/no             */\n      unsigned char  _ioqe_sapi_sel_stc\u00c43\u00dc;       /* stc select yes/no             */\n      unsigned char  _ioqe_sapi_sel_tsu\u00c43\u00dc;       /* tsu select yes/no             */\n      unsigned char  _ioqe_sapi_sel_appc\u00c43\u00dc;      /* appc select yes/no            */\n      void          *_ioqe_sapi_sel_age;          /* age                           */\n      void          *_ioqe_sapi_sel_lines_min;    /* lines min                     */\n      void          *_ioqe_sapi_sel_lines_max;    /* lines max                     */\n      void          *_ioqe_sapi_sel_pages_min;    /* pages min                     */\n      void          *_ioqe_sapi_sel_pages_max;    /* pages max                     */\n      unsigned char  _ioqe_sapi_sel_prio\u00c43\u00dc;      /* priority yes/no               */\n      unsigned char  _ioqe_sapi_sel_vols\u00c424\u00dc;     /* volumes                       */\n      unsigned char  _ioqe_sapi_sel_ncpds\u00c43\u00dc;     /* ncpds yes/no                  */\n      unsigned char  _ioqe_sapi_sel_orgn\u00c417\u00dc;     /* original node                 */\n      unsigned char  _ioqe_sapi_sel_disp\u00c48\u00dc;      /* disp syshold/hold/release/del */\n      unsigned char  _ioqe_sapi_sel_newclass;     /* new sysout class              */\n      unsigned char  _ioqe_sapi_sel_newforms\u00c48\u00dc;  /* new forms                     */\n      unsigned char  _ioqe_sapi_sel_newwriter\u00c48\u00dc; /* new writer                    */\n      unsigned char  _ioqe_sapi_sel_newdest\u00c417\u00dc;  /* new destination               */\n      unsigned char  _filler278\u00c42\u00dc;\n      struct \u00e4\n        unsigned char  _ioqe_sapi_info_compid\u00c44\u00dc; /* component subsystem id */\n        \u00fc ioqe_sapi_info_;\n      unsigned char  _ioqe_sapi_info_workid\u00c48\u00dc;   /* uow id                        */\n      unsigned char  _ioqe_sapi_info_jobid\u00c48\u00dc;    /* jobid                         */\n      unsigned char  _ioqe_sapi_info_jobname\u00c48\u00dc;  /* jobname                       */\n      unsigned char  _ioqe_sapi_info_userid\u00c48\u00dc;   /* userid                        */\n      struct \u00e4\n        void          *___cmd_key; /* keyword pointer */\n        \u00fc ioqe_sapi_cmd;\n      void          *___cmd_text;                 /* text pointer                  */\n      void          *___cmd_lgth;                 /* length of the text            */\n      void          *___cmd_base;                 /* base addr for values          */\n      void          *___cmd_rule;                 /* first rule or zero            */\n      void          *___cmd_msga;                 /* message addr                  */\n      unsigned char  _ioqe_sapi_ctoken\u00c480\u00dc;       /* CTOKEN AREA                   */\n      unsigned char  _ioqe_sapi_btoken\u00c4300\u00dc;      /* BTOKEN AREA                   */\n      unsigned char  _filler279\u00c4420\u00dc;\n      \u00fc _ioqedsect_struct21;\n    \u00fc _ioqedsect_union1;\n  unsigned char  ioqe_dec\u00c48\u00dc;              /* dec field                            */\n  unsigned char  ioqe_w\u00c44\u00dc;                /* work field                           */\n  unsigned char  _filler280\u00c432\u00dc;           /* reserved                             */\n  unsigned char  ioqe_wtor\u00c4256\u00dc;           /* reserve for WTOR                     */\n  void          *ioqe_wtor_ecb;            /* wtor ECB                             */\n  unsigned char  ioqe_wtor_reply;          /* wtor reply                           */\n  unsigned char  _filler281\u00c47\u00dc;\n  void          *ioqe_flags;               /* tcpip/flag                           */\n  void          *ioqe_initapi_tcb;         /* tcp/ip initapi TCB address           */\n  void          *ioqe_recv_length;         /* recv length for TCP/IP               */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ioqe_mqs_mqmde_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_mqmde;\n      void          *_ioqe_mqs_mqmde_version;\n      void          *_ioqe_mqs_mqmde_struclength;\n      void          *_ioqe_mqs_mqmde_encoding;\n      void          *_ioqe_mqs_mqmde_codedcharsetid;\n      unsigned char  _ioqe_mqs_mqmde_format\u00c48\u00dc;\n      void          *_ioqe_mqs_mqmde_flags;\n      unsigned char  _ioqe_mqs_mqmde_groupid\u00c424\u00dc;\n      void          *_ioqe_mqs_mqmde_msgseqnumber;\n      void          *_ioqe_mqs_mqmde_offset;\n      void          *_ioqe_mqs_mqmde_msgflags;\n      void          *_ioqe_mqs_mqmde_originallength;\n      \u00fc _ioqedsect_struct22;\n    unsigned char  _ioqe_mqs_mqmde_area\u00c472\u00dc;\n    \u00fc _ioqedsect_union2;\n  unsigned char  ioqelbuf;                 /* local buffer area                    */\n  unsigned char  _filler282;\n  unsigned char  ioqelbuf1;                /* local buffer area                    */\n  unsigned char  _filler283\u00c44\u00dc;\n  double         ioqe_mqs_query;           /* query                                */\n  void          *ioqe_mqs_query_option;    /* MQS option                           */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ioqe_mqs_query_mqod_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_query_mqod;\n      void          *_ioqe_mqs_query_mqod_version;\n      void          *_ioqe_mqs_query_mqod_objecttype;\n      unsigned char  _ioqe_mqs_query_mqod_objectname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_query_mqod_objectqmgrname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_query_mqod_dynamicqname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_query_mqod_alternateuserid\u00c412\u00dc;\n      void          *_ioqe_mqs_query_mqod_recspresent;\n      void          *_ioqe_mqs_query_mqod_knowndestcount;\n      void          *_ioqe_mqs_query_mqod_unknowndestcount;\n      void          *_ioqe_mqs_query_mqod_invaliddestcount;\n      void          *_ioqe_mqs_query_mqod_objectrecoffset;\n      void          *_ioqe_mqs_query_mqod_responserecoffset;\n      void          *_ioqe_mqs_query_mqod_objectrecptr;\n      void          *_ioqe_mqs_query_mqod_responserecptr;\n      unsigned char  _ioqe_mqs_query_mqod_alternatesecurityid\u00c440\u00dc;\n      unsigned char  _ioqe_mqs_query_mqod_resolvedqname\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_query_mqod_resolvedqmgrname\u00c448\u00dc;\n      \u00fc _ioqedsect_struct23;\n    unsigned char  _ioqe_mqs_query_mqod_area\u00c4336\u00dc;\n    \u00fc _ioqedsect_union3;\n  void          *ioqe_mqs_query_hobj;      /* obj desc                             */\n  void          *ioqe_mqs_selectorcount;   /* selector count                       */\n  void          *ioqe_mqs_intattrcount;    /* intattr count                        */\n  void          *ioqe_mqs_charattrlength;  /* char attr length                     */\n  void          *ioqe_mqs_selectors\u00c416\u00dc;   /* selector vector                      */\n  void          *ioqe_mqs_intattrs\u00c416\u00dc;    /* integer attributes                   */\n  unsigned char  ioqe_mqs_charattrs\u00c4256\u00dc;  /* char attrs                           */\n  unsigned char  ioqetie\u00c4800\u00dc;             /* TIE area                             */\n  unsigned char  ioqe_saved_qname\u00c448\u00dc;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ioqe_mqs_mqmd_saved_strucid\u00c44\u00dc;\n        \u00fc ioqe_mqs_mqmd_saved;\n      void          *_ioqe_mqs_mqmd_saved_version;\n      void          *_ioqe_mqs_mqmd_saved_report;\n      void          *_ioqe_mqs_mqmd_saved_msgtype;\n      void          *_ioqe_mqs_mqmd_saved_expiry;\n      void          *_ioqe_mqs_mqmd_saved_feedback;\n      void          *_ioqe_mqs_mqmd_saved_encoding;\n      void          *_ioqe_mqs_mqmd_saved_codedcharsetid;\n      unsigned char  _ioqe_mqs_mqmd_saved_format\u00c48\u00dc;\n      void          *_ioqe_mqs_mqmd_saved_priority;\n      void          *_ioqe_mqs_mqmd_saved_persistence;\n      unsigned char  _ioqe_mqs_mqmd_saved_msgid\u00c424\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_correlid\u00c424\u00dc;\n      void          *_ioqe_mqs_mqmd_saved_backoutcount;\n      unsigned char  _ioqe_mqs_mqmd_saved_replytoq\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_replytoqmgr\u00c448\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_useridentifier\u00c412\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_accountingtoken\u00c432\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_applidentitydata\u00c432\u00dc;\n      void          *_ioqe_mqs_mqmd_saved_putappltype;\n      unsigned char  _ioqe_mqs_mqmd_saved_putapplname\u00c428\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_putdate\u00c48\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_puttime\u00c48\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_applorigindata\u00c44\u00dc;\n      unsigned char  _ioqe_mqs_mqmd_saved_groupid\u00c424\u00dc;\n      void          *_ioqe_mqs_mqmd_saved_msgseqnumber;\n      void          *_ioqe_mqs_mqmd_saved_offset;\n      void          *_ioqe_mqs_mqmd_saved_msgflags;\n      void          *_ioqe_mqs_mqmd_saved_originallength;\n      \u00fc _ioqedsect_struct24;\n    unsigned char  _ioqe_mqs_mqmd_saved_area\u00c4364\u00dc;\n    \u00fc _ioqedsect_union4;\n  \u00fc;\n\n#define ioqe_work_user_user_tran                ioqe_work_user_._ioqe_work_user_user_tran\n#define ioqemsg__msg_msgid                      ioqemsg._ioqemsg__msg_msgid\n#define ioqe_tcpip_ecb                          ioqe_recb._ioqe_tcpip_ecb\n#define ioqe_name_family                        ioqe_name._ioqe_name_family\n#define ioqe_name_port                          ioqe_name._ioqe_name_port\n#define ioqe_name_address                       ioqe_name._ioqe_name_address\n#define ioqe_name_reserved                      ioqe_name._ioqe_name_reserved\n#define ioqe_tcpip_clientid_domain              ioqe_tcpip_clientid._ioqe_tcpip_clientid_domain\n#define ioqe_tcpip_clientid_name                ioqe_tcpip_clientid._ioqe_tcpip_clientid_name\n#define ioqe_tcpip_clientid_task                ioqe_tcpip_clientid._ioqe_tcpip_clientid_task\n#define ioqe_tcpip_clientid_reserved            ioqe_tcpip_clientid._ioqe_tcpip_clientid_reserved\n#define ioqe_optval_onoff                       ioqe_optval._ioqe_optval_onoff\n#define ioqeorg                                 _ioqedsect_union1._ioqedsect_struct1._ioqeorg\n#define ioqe_mqs_hconn                          _ioqedsect_union1._ioqedsect_struct2.ioqe_mqs._ioqe_mqs_hconn\n#define ioqe_mqs_hobj                           _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_hobj\n#define ioqe_mqs_buffer_length                  _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_buffer_length\n#define ioqe_mqs_data_length                    _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_data_length\n#define ioqe_mqs_option                         _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_option\n#define ioqe_mqs_mqod_strucid                   _ioqedsect_union1._ioqedsect_struct2.ioqe_mqs_mqod._ioqe_mqs_mqod_strucid\n#define ioqe_mqs_mqod_version                   _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_version\n#define ioqe_mqs_mqod_objecttype                _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_objecttype\n#define ioqe_mqs_mqod_objectname                _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_objectname\n#define ioqe_mqs_mqod_objectqmgrname            _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_objectqmgrname\n#define ioqe_mqs_mqod_dynamicqname              _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_dynamicqname\n#define ioqe_mqs_mqod_alternateuserid           _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_alternateuserid\n#define ioqe_mqs_mqod_recspresent               _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_recspresent\n#define ioqe_mqs_mqod_knowndestcount            _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_knowndestcount\n#define ioqe_mqs_mqod_unknowndestcount          _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_unknowndestcount\n#define ioqe_mqs_mqod_invaliddestcount          _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_invaliddestcount\n#define ioqe_mqs_mqod_objectrecoffset           _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_objectrecoffset\n#define ioqe_mqs_mqod_responserecoffset         _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_responserecoffset\n#define ioqe_mqs_mqod_objectrecptr              _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_objectrecptr\n#define ioqe_mqs_mqod_responserecptr            _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_responserecptr\n#define ioqe_mqs_mqod_alternatesecurityid       _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_alternatesecurityid\n#define ioqe_mqs_mqod_resolvedqname             _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_resolvedqname\n#define ioqe_mqs_mqod_resolvedqmgrname          _ioqedsect_union1._ioqedsect_struct2._ioqe_mqs_mqod_resolvedqmgrname\n#define ioqe_db2_crab                           _ioqedsect_union1._ioqedsect_struct3.ioqe_db2._ioqe_db2_crab\n#define ioqe_db2_parmlist                       _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_parmlist\n#define ioqe_db2_cparml                         _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_cparml\n#define ioqe_db2_cparm                          _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_cparm\n#define ioqe_db2_option                         _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_option\n#define ioqe_db2_callback_function              _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_callback_function\n#define ioqe_db2_callback_parms                 _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_callback_parms\n#define ioqe_db2_callback_return                _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_callback_return\n#define ioqe_db2_tracelevel                     _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_tracelevel\n#define ioqe_db2_callsave                       _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_callsave\n#define ioqe_db2_work                           _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_work\n#define ioqe_db2_subsystem                      _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_subsystem\n#define ioqe_db2_plan                           _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_plan\n#define ioqe_db2_return                         _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_return\n#define ioqe_db2_drqe                           _ioqedsect_union1._ioqedsect_struct3._ioqe_db2_drqe\n#define ioqeacb                                 _ioqedsect_union1._ioqedsect_struct4._ioqeacb\n#define ioqecnvd                                _ioqedsect_union1._ioqedsect_struct4._ioqecnvd\n#define ioqegencb                               _ioqedsect_union1._ioqedsect_struct4._ioqegencb\n#define ioqeistsld                              _ioqedsect_union1._ioqedsect_struct4._ioqeistsld\n#define ioqeistslcns                            _ioqedsect_union1._ioqedsect_struct4._ioqeistslcns\n#define ioqelul                                 _ioqedsect_union1._ioqedsect_struct4._ioqelul\n#define ioqelu                                  _ioqedsect_union1._ioqedsect_struct4._ioqelu\n#define ioqelgmd                                _ioqedsect_union1._ioqedsect_struct4._ioqelgmd\n#define ioqeplu                                 _ioqedsect_union1._ioqedsect_struct4._ioqeplu\n#define ioqefmh5                                _ioqedsect_union1._ioqedsect_struct4._ioqefmh5\n#define ioqe_readmask                           _ioqedsect_union1._ioqedsect_struct5._ioqe_readmask\n#define ioqe_readsetmask                        _ioqedsect_union1._ioqedsect_struct5._ioqe_readsetmask\n#define ioqe_excemask                           _ioqedsect_union1._ioqedsect_struct5._ioqe_excemask\n#define ioqe_excesetmask                        _ioqedsect_union1._ioqedsect_struct5._ioqe_excesetmask\n#define ioqe_writemask                          _ioqedsect_union1._ioqedsect_struct5._ioqe_writemask\n#define ioqe_writesetmask                       _ioqedsect_union1._ioqedsect_struct5._ioqe_writesetmask\n#define ioqe_bpx                                _ioqedsect_union1._ioqedsect_struct5._ioqe_bpx\n#define ioqe_file_crab                          _ioqedsect_union1._ioqedsect_struct6._ioqe_file_crab\n#define ioqe_file_callback                      _ioqedsect_union1._ioqedsect_struct6._ioqe_file_callback\n#define ioqe_file_parmlist                      _ioqedsect_union1._ioqedsect_struct6._ioqe_file_parmlist\n#define ioqe_file_cparml                        _ioqedsect_union1._ioqedsect_struct6._ioqe_file_cparml\n#define ioqe_file_cparm                         _ioqedsect_union1._ioqedsect_struct6._ioqe_file_cparm\n#define ioqe_file_option                        _ioqedsect_union1._ioqedsect_struct6._ioqe_file_option\n#define ioqe_file_file                          _ioqedsect_union1._ioqedsect_struct6._ioqe_file_file\n#define ioqe_file_callback_function             _ioqedsect_union1._ioqedsect_struct6._ioqe_file_callback_function\n#define ioqe_file_callback_parms                _ioqedsect_union1._ioqedsect_struct6._ioqe_file_callback_parms\n#define ioqe_file_callback_return               _ioqedsect_union1._ioqedsect_struct6._ioqe_file_callback_return\n#define ioqe_file_tracelevel                    _ioqedsect_union1._ioqedsect_struct6._ioqe_file_tracelevel\n#define ioqe_file_callsave                      _ioqedsect_union1._ioqedsect_struct6._ioqe_file_callsave\n#define ioqe_file_cppsave                       _ioqedsect_union1._ioqedsect_struct6._ioqe_file_cppsave\n#define ioqe_file_work                          _ioqedsect_union1._ioqedsect_struct6._ioqe_file_work\n#define ioqe_file_profile                       _ioqedsect_union1._ioqedsect_struct6._ioqe_file_profile\n#define ioqe_sapi_flag                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_flag\n#define ioqe_sapi_flag1                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_flag1\n#define ioqe_sapi_key                           _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_key\n#define ioqe_sapi_workflag                      _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_workflag\n#define ioqe_sapi_savekey                       _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_savekey\n#define ioqe_sapi_define                        _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_define\n#define ioqe_sapi_define_length                 _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_define_length\n#define ioqe_sapi_maxlrec                       _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_maxlrec\n#define ioqe_sapi_count                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_count\n#define ioqe_sapi_ddname                        _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_ddname\n#define ioqe_sapi_subsys                        _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_subsys\n#define ioqe_sapi_bfa                           _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_bfa\n#define ioqe_sapi_bfal                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_bfal\n#define ioqe_sapi_sjf                           _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_sjf\n#define ioqe_sapi_uparm                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_uparm\n#define ioqe_sapi_vsam                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_vsam\n#define ioqe_sapi_qsam                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_qsam\n#define ioqe_sapi_ecbp                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_ecbp\n#define ioqe_sapi_jobi                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_jobi\n#define ioqe_sapi_jobn                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_jobn\n#define ioqe_sapi_rbadp                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_rbadp\n#define ioqe_sapi_rbad                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_rbad\n#define ioqe_sapi_adtxt                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_adtxt\n#define ioqe_sapi_dalrbtkn                      _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_dalrbtkn\n#define ioqe_sapi_rbfdp                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_rbfdp\n#define ioqe_sapi_rbfd                          _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_rbfd\n#define ioqe_sapi_fdtxt                         _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_fdtxt\n#define ioqe_sapi_daldsnam                      _ioqedsect_union1._ioqedsect_struct7._ioqe_sapi_daldsnam\n#define ioqe_exci_flag                          _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_flag\n#define ioqe_exci_key                           _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_key\n#define ioqe_exci_workflag                      _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_workflag\n#define ioqe_exci_savekey                       _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_savekey\n#define ioqe_exci_buffer                        _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_buffer\n#define ioqe_exci_applid                        _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_applid\n#define ioqe_exci_system                        _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_system\n#define ioqe_exci_program                       _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_program\n#define ioqe_exci_userid                        _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_userid\n#define ioqe_exci_transid                       _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_transid\n#define ioqe_exci_user_name                     _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_user_name\n#define ioqe_exci_pipe_type                     _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_pipe_type\n#define ioqe_exci_dpl_type                      _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_dpl_type\n#define ioqe_exci_call_type                     _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_call_type\n#define ioqe_exci_user_token                    _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_user_token\n#define ioqe_exci_pipe_token                    _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_pipe_token\n#define ioqe_exci_version                       _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_version\n#define ioqe_exci_response                      _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_return_area._ioqe_exci_response\n#define ioqe_exci_reason                        _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_return_area._ioqe_exci_reason\n#define ioqe_exci_sub_reason1                   _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_return_area._ioqe_exci_sub_reason1\n#define ioqe_exci_sub_reason2                   _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_return_area._ioqe_exci_sub_reason2\n#define ioqe_exci_msg_ptr                       _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_return_area._ioqe_exci_msg_ptr\n#define ioqe_exci_dpl_ret_resp                  _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_dpl_ret._ioqe_exci_dpl_ret_resp\n#define ioqe_exci_dpl_ret_resp2                 _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_dpl_ret._ioqe_exci_dpl_ret_resp2\n#define ioqe_exci_dpl_ret_abend                 _ioqedsect_union1._ioqedsect_struct8.ioqe_exci_dpl_ret._ioqe_exci_dpl_ret_abend\n#define ioqe_exci_call                          _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_call\n#define ioqe_exci_alloctry                      _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_alloctry\n#define ioqe_exci_subtask_tcb                   _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_subtask_tcb\n#define ioqe_exci_subtask_ecblist               _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_subtask_ecblist\n#define ioqe_exci_subtask_stopecb               _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_subtask_stopecb\n#define ioqe_exci_subtask_workecb               _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_subtask_workecb\n#define ioqe_exci_subtask_ioqe                  _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_subtask_ioqe\n#define ioqe_exci_data_len                      _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_data_len\n#define ioqe_exci_ca_length                     _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_ca_length\n#define ioqe_exci_ca                            _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_ca\n#define ioqe_exci_                              _ioqedsect_union1._ioqedsect_struct8._ioqe_exci_\n#define ioqe_db2_drqe_key                       _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_drqe_key\n#define ioqe_db2_drqe_status                    _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_drqe_status\n#define ioqe_db2_drqe_format                    _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_drqe_format\n#define ioqe_db2_drqe_size                      _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_drqe_size\n#define ioqe_db2_drqe_pagecount                 _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_drqe_pagecount\n#define ioqe_db2_drqe_entry_key                 _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_drqe_entry_key\n#define ioqe_db2_prodb2                         _ioqedsect_union1._ioqedsect_struct8._ioqe_db2_prodb2\n#define ioqe_mqs_mqod_area                      _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqod_area\n#define ioqe_mqs_mqmd_strucid                   _ioqedsect_union1._ioqedsect_struct9.ioqe_mqs_mqmd._ioqe_mqs_mqmd_strucid\n#define ioqe_mqs_mqmd_version                   _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_version\n#define ioqe_mqs_mqmd_report                    _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_report\n#define ioqe_mqs_mqmd_msgtype                   _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_msgtype\n#define ioqe_mqs_mqmd_expiry                    _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_expiry\n#define ioqe_mqs_mqmd_feedback                  _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_feedback\n#define ioqe_mqs_mqmd_encoding                  _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_encoding\n#define ioqe_mqs_mqmd_codedcharsetid            _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_codedcharsetid\n#define ioqe_mqs_mqmd_format                    _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_format\n#define ioqe_mqs_mqmd_priority                  _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_priority\n#define ioqe_mqs_mqmd_persistence               _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_persistence\n#define ioqe_mqs_mqmd_msgid                     _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_msgid\n#define ioqe_mqs_mqmd_correlid                  _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_correlid\n#define ioqe_mqs_mqmd_backoutcount              _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_backoutcount\n#define ioqe_mqs_mqmd_replytoq                  _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_replytoq\n#define ioqe_mqs_mqmd_replytoqmgr               _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_replytoqmgr\n#define ioqe_mqs_mqmd_useridentifier            _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_useridentifier\n#define ioqe_mqs_mqmd_accountingtoken           _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_accountingtoken\n#define ioqe_mqs_mqmd_applidentitydata          _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_applidentitydata\n#define ioqe_mqs_mqmd_putappltype               _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_putappltype\n#define ioqe_mqs_mqmd_putapplname               _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_putapplname\n#define ioqe_mqs_mqmd_putdate                   _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_putdate\n#define ioqe_mqs_mqmd_puttime                   _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_puttime\n#define ioqe_mqs_mqmd_applorigindata            _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_applorigindata\n#define ioqe_mqs_mqmd_groupid                   _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_groupid\n#define ioqe_mqs_mqmd_msgseqnumber              _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_msgseqnumber\n#define ioqe_mqs_mqmd_offset                    _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_offset\n#define ioqe_mqs_mqmd_msgflags                  _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_msgflags\n#define ioqe_mqs_mqmd_originallength            _ioqedsect_union1._ioqedsect_struct9._ioqe_mqs_mqmd_originallength\n#define ioqe_sapi_dyndsn                        _ioqedsect_union1._ioqedsect_struct10._ioqe_sapi_dyndsn\n#define ioqe_sapi_dalssreq                      _ioqedsect_union1._ioqedsect_struct10._ioqe_sapi_dalssreq\n#define ioqe_sapi_dynsubsys                     _ioqedsect_union1._ioqedsect_struct11._ioqe_sapi_dynsubsys\n#define ioqe_sapi_dalrtddn                      _ioqedsect_union1._ioqedsect_struct11._ioqe_sapi_dalrtddn\n#define ioqe_sapi_dynaddn                       _ioqedsect_union1._ioqedsect_struct12._ioqe_sapi_dynaddn\n#define ioqe_sapi_dunddnam                      _ioqedsect_union1._ioqedsect_struct12._ioqe_sapi_dunddnam\n#define ioqe_sapi_dynuddn                       _ioqedsect_union1._ioqedsect_struct13._ioqe_sapi_dynuddn\n#define ioqe_sapi_daldisp                       _ioqedsect_union1._ioqedsect_struct13._ioqe_sapi_daldisp\n#define ioqe_sapi_ssobaddr                      _ioqedsect_union1._ioqedsect_struct14._ioqe_sapi_ssobaddr\n#define ioqe_sapi_ssob                          _ioqedsect_union1._ioqedsect_struct14._ioqe_sapi_ssob\n#define ioqe_sapi_ssib                          _ioqedsect_union1._ioqedsect_struct14._ioqe_sapi_ssib\n#define ioqe_sapi_dcb                           _ioqedsect_union1._ioqedsect_struct14._ioqe_sapi_dcb\n#define ioqe_mqs_mqmd_area                      _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqmd_area\n#define ioqe_mqs_mqgmo_strucid                  _ioqedsect_union1._ioqedsect_struct15.ioqe_mqs_mqgmo._ioqe_mqs_mqgmo_strucid\n#define ioqe_mqs_mqgmo_version                  _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_version\n#define ioqe_mqs_mqgmo_options                  _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_options\n#define ioqe_mqs_mqgmo_waitinterval             _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_waitinterval\n#define ioqe_mqs_mqgmo_signal1                  _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_signal1\n#define ioqe_mqs_mqgmo_signal2                  _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_signal2\n#define ioqe_mqs_mqgmo_resolvedqname            _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_resolvedqname\n#define ioqe_mqs_mqgmo_matchoptions             _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_matchoptions\n#define ioqe_mqs_mqgmo_groupstatus              _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_groupstatus\n#define ioqe_mqs_mqgmo_segmentstatus            _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_segmentstatus\n#define ioqe_mqs_mqgmo_segmentation             _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_segmentation\n#define ioqe_mqs_mqgmo_reserved1                _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_reserved1\n#define ioqe_mqs_mqgmo_msgtoken                 _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_msgtoken\n#define ioqe_mqs_mqgmo_returnedlength           _ioqedsect_union1._ioqedsect_struct15._ioqe_mqs_mqgmo_returnedlength\n#define ioqe_bpx_call                           _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_call\n#define ioqe_bpx_socket                         _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_socket\n#define ioqe_bpx_select                         _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_select\n#define ioqe_bpx_retvalue                       _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_retvalue\n#define ioqe_bpx_retcode                        _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_retcode\n#define ioqe_bpx_rsncode                        _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_rsncode\n#define ioqe_bpx_option                         _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_option\n#define ioqe_bpx_list_length_r                  _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_list_length_r\n#define ioqe_bpx_list_length_w                  _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_list_length_w\n#define ioqe_bpx_list_length_e                  _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_list_length_e\n#define ioqe_bpx_aio                            _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_aio\n#define ioqe_bpx_timeout                        _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_timeout\n#define ioqe_bpx_msgflags                       _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_msgflags\n#define ioqe_bpx_timeout_wait                   _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_timeout_wait\n#define ioqe_bpx_wait_ecb_address               _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_wait_ecb_address\n#define ioqe_bpx_tie                            _ioqedsect_union1._ioqedsect_struct16._ioqe_bpx_tie\n#define ioqe_db2_prodb2__prof_sysa              _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_sysa\n#define ioqe_db2_prodb2__prof_rcva              _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_rcva\n#define ioqe_db2_prodb2__prof_liba              _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_liba\n#define ioqe_db2_prodb2__prof_browse            _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_browse\n#define ioqe_db2_prodb2__prof_dsn               _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_dsn\n#define ioqe_db2_prodb2__prof_mem               _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_mem\n#define ioqe_db2_prodb2__prof_ddname            _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_ddname\n#define ioqe_db2_prodb2__prof_typ               _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_typ\n#define ioqe_db2_prodb2__prof_count             _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_count\n#define ioqe_db2_prodb2__prof_sys               _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_sys\n#define ioqe_db2_prodb2__prof_lib               _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_lib\n#define ioqe_db2_prodb2__prof_rcv               _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_rcv\n#define ioqe_db2_prodb2__prof_msga              _ioqedsect_union1._ioqedsect_struct17._ioqe_db2_prodb2__prof_msga\n#define ioqe_file_profile__prof_sysa            _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_sysa\n#define ioqe_file_profile__prof_rcva            _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_rcva\n#define ioqe_file_profile__prof_liba            _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_liba\n#define ioqe_file_profile__prof_browse          _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_browse\n#define ioqe_file_profile__prof_dsn             _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_dsn\n#define ioqe_file_profile__prof_mem             _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_mem\n#define ioqe_file_profile__prof_ddname          _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_ddname\n#define ioqe_file_profile__prof_typ             _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_typ\n#define ioqe_file_profile__prof_count           _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_count\n#define ioqe_file_profile__prof_sys             _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_sys\n#define ioqe_file_profile__prof_lib             _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_lib\n#define ioqe_file_profile__prof_rcv             _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_rcv\n#define ioqe_file_profile__prof_msga            _ioqedsect_union1._ioqedsect_struct18._ioqe_file_profile__prof_msga\n#define ioqe_mqs_mqgmo_area                     _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqgmo_area\n#define ioqe_mqs_mqpmo_strucid                  _ioqedsect_union1._ioqedsect_struct18.ioqe_mqs_mqpmo._ioqe_mqs_mqpmo_strucid\n#define ioqe_mqs_mqpmo_version                  _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_version\n#define ioqe_mqs_mqpmo_options                  _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_options\n#define ioqe_mqs_mqpmo_timeout                  _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_timeout\n#define ioqe_mqs_mqpmo_context                  _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_context\n#define ioqe_mqs_mqpmo_knowndestcount           _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_knowndestcount\n#define ioqe_mqs_mqpmo_unknowndestcount         _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_unknowndestcount\n#define ioqe_mqs_mqpmo_invaliddestcount         _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_invaliddestcount\n#define ioqe_mqs_mqpmo_resolvedqname            _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_resolvedqname\n#define ioqe_mqs_mqpmo_resolvedqmgrname         _ioqedsect_union1._ioqedsect_struct18._ioqe_mqs_mqpmo_resolvedqmgrname\n#define ioqe_sapi_intrdr_buff                   _ioqedsect_union1._ioqedsect_struct19._ioqe_sapi_intrdr_buff\n#define ioqe_sapi_parse                         _ioqedsect_union1._ioqedsect_struct19._ioqe_sapi_parse\n#define ioqe_sapi_sel_held                      _ioqedsect_union1._ioqedsect_struct19.ioqe_sapi_sel_._ioqe_sapi_sel_held\n#define ioqe_mqs_mqpmo_area                     _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_mqpmo_area\n#define ioqe_mqs_qmanager                       _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_qmanager\n#define ioqe_mqs_qname                          _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_qname\n#define ioqe_mqs_dsp                            _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_dsp\n#define ioqe_mqs_dsp_lista                      _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_dsp_lista\n#define ioqe_mqs_dsp_size                       _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_dsp_size\n#define ioqe_mqs_msga                           _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_msga\n#define ioqe_mqs_msgal                          _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_msgal\n#define ioqe_mqs_msgl                           _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_msgl\n#define ioqe_mqs_msgo                           _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_msgo\n#define ioqe_mqs_msgt                           _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_msgt\n#define ioqe_mqs_maxmsg                         _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_maxmsg\n#define ioqe_mqs_alloctry                       _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_alloctry\n#define ioqe_mqs_cmtf                           _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_cmtf\n#define ioqe_mqs_version                        _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_version\n#define ioqe_mqs_toext                          _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_toext\n#define ioqe_mqs_already_msg                    _ioqedsect_union1._ioqedsect_struct20._ioqe_mqs_already_msg\n#define ioqe_sapi_sel_noheld                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_noheld\n#define ioqe_sapi_sel_class                     _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_class\n#define ioqe_sapi_sel_dest                      _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_dest\n#define ioqe_sapi_sel_jobname                   _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_jobname\n#define ioqe_sapi_sel_jobid                     _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_jobid\n#define ioqe_sapi_sel_jobidl                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_jobidl\n#define ioqe_sapi_sel_jobidh                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_jobidh\n#define ioqe_sapi_sel_writer                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_writer\n#define ioqe_sapi_sel_forms                     _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_forms\n#define ioqe_sapi_sel_flash                     _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_flash\n#define ioqe_sapi_sel_creator                   _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_creator\n#define ioqe_sapi_sel_prmode                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_prmode\n#define ioqe_sapi_sel_ipaddr                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_ipaddr\n#define ioqe_sapi_sel_nipaddr                   _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_nipaddr\n#define ioqe_sapi_sel_fcb                       _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_fcb\n#define ioqe_sapi_sel_ucs                       _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_ucs\n#define ioqe_sapi_sel_job                       _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_job\n#define ioqe_sapi_sel_stc                       _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_stc\n#define ioqe_sapi_sel_tsu                       _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_tsu\n#define ioqe_sapi_sel_appc                      _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_appc\n#define ioqe_sapi_sel_age                       _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_age\n#define ioqe_sapi_sel_lines_min                 _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_lines_min\n#define ioqe_sapi_sel_lines_max                 _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_lines_max\n#define ioqe_sapi_sel_pages_min                 _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_pages_min\n#define ioqe_sapi_sel_pages_max                 _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_pages_max\n#define ioqe_sapi_sel_prio                      _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_prio\n#define ioqe_sapi_sel_vols                      _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_vols\n#define ioqe_sapi_sel_ncpds                     _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_ncpds\n#define ioqe_sapi_sel_orgn                      _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_orgn\n#define ioqe_sapi_sel_disp                      _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_disp\n#define ioqe_sapi_sel_newclass                  _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_newclass\n#define ioqe_sapi_sel_newforms                  _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_newforms\n#define ioqe_sapi_sel_newwriter                 _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_newwriter\n#define ioqe_sapi_sel_newdest                   _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_sel_newdest\n#define ioqe_sapi_info_compid                   _ioqedsect_union1._ioqedsect_struct21.ioqe_sapi_info_._ioqe_sapi_info_compid\n#define ioqe_sapi_info_workid                   _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_info_workid\n#define ioqe_sapi_info_jobid                    _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_info_jobid\n#define ioqe_sapi_info_jobname                  _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_info_jobname\n#define ioqe_sapi_info_userid                   _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_info_userid\n#define __cmd_key                               _ioqedsect_union1._ioqedsect_struct21.ioqe_sapi_cmd.___cmd_key\n#define __cmd_text                              _ioqedsect_union1._ioqedsect_struct21.___cmd_text\n#define __cmd_lgth                              _ioqedsect_union1._ioqedsect_struct21.___cmd_lgth\n#define __cmd_base                              _ioqedsect_union1._ioqedsect_struct21.___cmd_base\n#define __cmd_rule                              _ioqedsect_union1._ioqedsect_struct21.___cmd_rule\n#define __cmd_msga                              _ioqedsect_union1._ioqedsect_struct21.___cmd_msga\n#define ioqe_sapi_ctoken                        _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_ctoken\n#define ioqe_sapi_btoken                        _ioqedsect_union1._ioqedsect_struct21._ioqe_sapi_btoken\n#define ioqe_mqs_mqmde_strucid                  _ioqedsect_union2._ioqedsect_struct22.ioqe_mqs_mqmde._ioqe_mqs_mqmde_strucid\n#define ioqe_mqs_mqmde_version                  _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_version\n#define ioqe_mqs_mqmde_struclength              _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_struclength\n#define ioqe_mqs_mqmde_encoding                 _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_encoding\n#define ioqe_mqs_mqmde_codedcharsetid           _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_codedcharsetid\n#define ioqe_mqs_mqmde_format                   _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_format\n#define ioqe_mqs_mqmde_flags                    _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_flags\n#define ioqe_mqs_mqmde_groupid                  _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_groupid\n#define ioqe_mqs_mqmde_msgseqnumber             _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_msgseqnumber\n#define ioqe_mqs_mqmde_offset                   _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_offset\n#define ioqe_mqs_mqmde_msgflags                 _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_msgflags\n#define ioqe_mqs_mqmde_originallength           _ioqedsect_union2._ioqedsect_struct22._ioqe_mqs_mqmde_originallength\n#define ioqe_mqs_mqmde_area                     _ioqedsect_union2._ioqe_mqs_mqmde_area\n#define ioqe_mqs_query_mqod_strucid             _ioqedsect_union3._ioqedsect_struct23.ioqe_mqs_query_mqod._ioqe_mqs_query_mqod_strucid\n#define ioqe_mqs_query_mqod_version             _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_version\n#define ioqe_mqs_query_mqod_objecttype          _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_objecttype\n#define ioqe_mqs_query_mqod_objectname          _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_objectname\n#define ioqe_mqs_query_mqod_objectqmgrname      _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_objectqmgrname\n#define ioqe_mqs_query_mqod_dynamicqname        _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_dynamicqname\n#define ioqe_mqs_query_mqod_alternateuserid     _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_alternateuserid\n#define ioqe_mqs_query_mqod_recspresent         _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_recspresent\n#define ioqe_mqs_query_mqod_knowndestcount      _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_knowndestcount\n#define ioqe_mqs_query_mqod_unknowndestcount    _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_unknowndestcount\n#define ioqe_mqs_query_mqod_invaliddestcount    _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_invaliddestcount\n#define ioqe_mqs_query_mqod_objectrecoffset     _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_objectrecoffset\n#define ioqe_mqs_query_mqod_responserecoffset   _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_responserecoffset\n#define ioqe_mqs_query_mqod_objectrecptr        _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_objectrecptr\n#define ioqe_mqs_query_mqod_responserecptr      _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_responserecptr\n#define ioqe_mqs_query_mqod_alternatesecurityid _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_alternatesecurityid\n#define ioqe_mqs_query_mqod_resolvedqname       _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_resolvedqname\n#define ioqe_mqs_query_mqod_resolvedqmgrname    _ioqedsect_union3._ioqedsect_struct23._ioqe_mqs_query_mqod_resolvedqmgrname\n#define ioqe_mqs_query_mqod_area                _ioqedsect_union3._ioqe_mqs_query_mqod_area\n#define ioqe_mqs_mqmd_saved_strucid             _ioqedsect_union4._ioqedsect_struct24.ioqe_mqs_mqmd_saved._ioqe_mqs_mqmd_saved_strucid\n#define ioqe_mqs_mqmd_saved_version             _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_version\n#define ioqe_mqs_mqmd_saved_report              _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_report\n#define ioqe_mqs_mqmd_saved_msgtype             _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_msgtype\n#define ioqe_mqs_mqmd_saved_expiry              _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_expiry\n#define ioqe_mqs_mqmd_saved_feedback            _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_feedback\n#define ioqe_mqs_mqmd_saved_encoding            _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_encoding\n#define ioqe_mqs_mqmd_saved_codedcharsetid      _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_codedcharsetid\n#define ioqe_mqs_mqmd_saved_format              _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_format\n#define ioqe_mqs_mqmd_saved_priority            _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_priority\n#define ioqe_mqs_mqmd_saved_persistence         _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_persistence\n#define ioqe_mqs_mqmd_saved_msgid               _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_msgid\n#define ioqe_mqs_mqmd_saved_correlid            _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_correlid\n#define ioqe_mqs_mqmd_saved_backoutcount        _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_backoutcount\n#define ioqe_mqs_mqmd_saved_replytoq            _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_replytoq\n#define ioqe_mqs_mqmd_saved_replytoqmgr         _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_replytoqmgr\n#define ioqe_mqs_mqmd_saved_useridentifier      _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_useridentifier\n#define ioqe_mqs_mqmd_saved_accountingtoken     _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_accountingtoken\n#define ioqe_mqs_mqmd_saved_applidentitydata    _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_applidentitydata\n#define ioqe_mqs_mqmd_saved_putappltype         _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_putappltype\n#define ioqe_mqs_mqmd_saved_putapplname         _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_putapplname\n#define ioqe_mqs_mqmd_saved_putdate             _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_putdate\n#define ioqe_mqs_mqmd_saved_puttime             _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_puttime\n#define ioqe_mqs_mqmd_saved_applorigindata      _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_applorigindata\n#define ioqe_mqs_mqmd_saved_groupid             _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_groupid\n#define ioqe_mqs_mqmd_saved_msgseqnumber        _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_msgseqnumber\n#define ioqe_mqs_mqmd_saved_offset              _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_offset\n#define ioqe_mqs_mqmd_saved_msgflags            _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_msgflags\n#define ioqe_mqs_mqmd_saved_originallength      _ioqedsect_union4._ioqedsect_struct24._ioqe_mqs_mqmd_saved_originallength\n#define ioqe_mqs_mqmd_saved_area                _ioqedsect_union4._ioqe_mqs_mqmd_saved_area\n\n/* Values for field \"ioqe_enq_rc\" */\n#define ioqe_length_enq                0x5A\n\n/* Values for field \"ioqe_tasktype\" */\n#define ioqe_tasktype_main             0          /* main task                */\n#define ioqe_tasktype_server           4          /* server                   */\n#define ioqe_tasktype_client           8          /* client                   */\n\n/* Values for field \"ioqeorg\" */\n#define ioqecommonareal                2048       /* max common area length   */\n\n/* Values for field \"ioqe_mqs_option\" */\n#define mqcih_struc_id                 0xC3C9C840\n#define mqcih_version_1                1\n#define mqcih_version_2                2\n#define mqcih_current_version          2\n#define mqcih_length_1                 164\n#define mqcih_length_2                 180\n#define mqcih_current_length           180\n#define mqcih_none                     0x00\n#define mqcrc_ok                       0\n#define mqcrc_cics_exec_error          1\n#define mqcrc_mq_api_error             2\n#define mqcrc_bridge_error             3\n#define mqcrc_bridge_abend             4\n#define mqcrc_application_abend        5\n#define mqcrc_security_error           6\n#define mqcrc_program_not_available    7\n#define mqcrc_bridge_timeout           8\n#define mqcrc_transid_not_available    9\n#define mqcuowc_only                   0x111\n#define mqcuowc_continue               0x10000\n#define mqcuowc_first                  0x11\n#define mqcuowc_middle                 0x10\n#define mqcuowc_last                   0x110\n#define mqcuowc_commit                 0x100\n#define mqcuowc_backout                0x1100\n#define mqcgwi_default                 -2\n#define mqclt_program                  1\n#define mqclt_transaction              2\n#define mqcodl_as_input                -1\n#define mqcadsd_none                   0x00\n#define mqcadsd_send                   0x01\n#define mqcadsd_recv                   0x10\n#define mqcadsd_msgformat              0x100\n#define mqcct_yes                      0x01\n#define mqcct_no                       0x00\n#define mqctes_nosync                  0x00\n#define mqctes_commit                  0x100\n#define mqctes_backout                 0x1100\n#define mqctes_endtask                 0x10000\n#define mqcfunc_mqconn                 0xC3D6D5D5\n#define mqcfunc_mqget                  0xC7C5E340\n#define mqcfunc_mqinq                  0xC9D5D840\n#define mqcfunc_mqopen                 0xD6D7C5D5\n#define mqcfunc_mqput                  0xD7E4E340\n#define mqcfunc_mqput1                 0xD7E4E3F1\n#define mqcfunc_none                   0x\n#define mqcsc_start                    0xE2404040\n#define mqcsc_startdata                0xE2C44040\n#define mqcsc_terminput                0xE3C44040\n#define mqcsc_none                     0x\n#define mqcno_struc_id                 0xC3D5D640\n#define mqcno_version_1                1\n#define mqcno_version_2                2\n#define mqcno_version_3                3\n#define mqcno_current_version          3\n#define mqcno_standard_binding         0x00\n#define mqcno_fastpath_binding         0x01\n#define mqcno_serialize_conn_tag_q_mgr 0x02\n#define mqcno_serialize_conn_tag_qsg   0x04\n#define mqcno_restrict_conn_tag_q_mgr  0x08\n#define mqcno_restrict_conn_tag_qsg    0x10\n#define mqcno_none                     0x00\n#define mqdlh_struc_id                 0xC4D3C840\n#define mqdlh_version_1                1\n#define mqdlh_current_version          1\n#define mqgmo_struc_id                 0xC7D4D640\n#define mqgmo_version_1                1\n#define mqgmo_version_2                2\n#define mqgmo_version_3                3\n#define mqgmo_current_version          3\n#define mqgmo_wait                     0x01\n#define mqgmo_no_wait                  0x00\n#define mqgmo_set_signal               0x08\n#define mqgmo_fail_if_quiescing        0x2000\n#define mqgmo_syncpoint                0x02\n#define mqgmo_syncpoint_if_persistent  0x1000\n#define mqgmo_no_syncpoint             0x04\n#define mqgmo_mark_skip_backout        0x80\n#define mqgmo_browse_first             0x10\n#define mqgmo_browse_next              0x20\n#define mqgmo_browse_msg_under_cursor  0x800\n#define mqgmo_msg_under_cursor         0x100\n#define mqgmo_lock                     0x200\n#define mqgmo_unlock                   0x400\n#define mqgmo_accept_truncated_msg     0x40\n#define mqgmo_convert                  0x4000\n#define mqgmo_logical_order            0x8000\n#define mqgmo_complete_msg             0x10000\n#define mqgmo_all_msgs_available       0x20000\n#define mqgmo_all_segments_available   0x40000\n#define mqgmo_none                     0x00\n#define mqwi_unlimited                 -1\n#define mqec_msg_arrived               2\n#define mqec_wait_interval_expired     3\n#define mqec_wait_canceled             4\n#define mqec_q_mgr_quiescing           5\n#define mqec_connection_quiescing      6\n#define mqmo_match_msg_id              0x01\n#define mqmo_match_correl_id           0x02\n#define mqmo_match_group_id            0x04\n#define mqmo_match_msg_seq_number      0x08\n#define mqmo_match_msg_token           0x20\n#define mqmo_none                      0x00\n#define mqgs_not_in_group              ' '\n#define mqgs_msg_in_group              'G'\n#define mqgs_last_msg_in_group         'L'\n#define mqss_not_a_segment             ' '\n#define mqss_segment                   'S'\n#define mqss_last_segment              'L'\n#define mqseg_inhibited                ' '\n#define mqseg_allowed                  'A'\n#define mqrl_undefined                 -1\n#define mqiih_struc_id                 0xC9C9C840\n#define mqiih_version_1                1\n#define mqiih_current_version          1\n#define mqiih_length_1                 84\n#define mqiih_none                     0x00\n#define mqits_in_conversation          'C'\n#define mqits_not_in_conversation      ' '\n#define mqits_architected              'A'\n#define mqicm_commit_then_send         '0'\n#define mqicm_send_then_commit         '1'\n#define mqiss_check                    'C'\n#define mqiss_full                     'F'\n#define mqmd_struc_id                  0xD4C44040\n#define mqmd_version_1                 1\n#define mqmd_version_2                 2\n#define mqmd_current_version           2\n#define mqro_exception                 0x1000000\n#define mqro_exception_with_data       0x3000000\n#define mqro_exception_with_full_data  0x7000000\n#define mqro_expiration                0x200000\n#define mqro_expiration_with_data      0x600000\n#define mqro_expiration_with_full_data 0xE00000\n#define mqro_coa                       0x100\n#define mqro_coa_with_data             0x300\n#define mqro_coa_with_full_data        0x700\n#define mqro_cod                       0x800\n#define mqro_cod_with_data             0x1800\n#define mqro_cod_with_full_data        0x3800\n#define mqro_pan                       0x01\n#define mqro_nan                       0x02\n#define mqro_new_msg_id                0x00\n#define mqro_pass_msg_id               0x80\n#define mqro_copy_msg_id_to_correl_id  0x00\n#define mqro_pass_correl_id            0x40\n#define mqro_dead_letter_q             0x00\n#define mqro_discard_msg               0x8000000\n#define mqro_none                      0x00\n#define mqro_reject_unsup_mask         0x101C0000\n#define mqro_accept_unsup_mask         0xEFE000FF\n#define mqro_accept_unsup_if_xmit_mask 0x3FF00\n#define mqmt_system_first              1\n#define mqmt_request                   1\n#define mqmt_reply                     2\n#define mqmt_datagram                  8\n#define mqmt_report                    4\n#define mqmt_mqe_fields_from_mqe       112\n#define mqmt_mqe_fields                113\n#define mqmt_system_last               65535\n#define mqmt_appl_first                65536\n#define mqmt_appl_last                 9\n#define mqei_unlimited                 -1\n#define mqfb_none                      0\n#define mqfb_system_first              1\n#define mqfb_quit                      256\n#define mqfb_expiration                258\n#define mqfb_coa                       259\n#define mqfb_cod                       260\n#define mqfb_channel_completed         262\n#define mqfb_channel_fail_retry        263\n#define mqfb_channel_fail              264\n#define mqfb_appl_cannot_be_started    265\n#define mqfb_tm_error                  266\n#define mqfb_appl_type_error           267\n#define mqfb_stopped_by_msg_exit       268\n#define mqfb_xmit_q_msg_error          271\n#define mqfb_pan                       275\n#define mqfb_nan                       276\n#define mqfb_stopped_by_chad_exit      277\n#define mqfb_stopped_by_pubsub_exit    279\n#define mqfb_not_a_repository_msg      280\n#define mqfb_bind_open_clusrcvr_del    281\n#define mqfb_data_length_zero          291\n#define mqfb_data_length_negative      292\n#define mqfb_data_length_too_big       293\n#define mqfb_buffer_overflow           294\n#define mqfb_length_off_by_one         295\n#define mqfb_iih_error                 296\n#define mqfb_not_authorized_for_ims    298\n#define mqfb_ims_error                 300\n#define mqfb_ims_first                 301\n#define mqfb_ims_last                  399\n#define mqfb_cics_internal_error       401\n#define mqfb_cics_not_authorized       402\n#define mqfb_cics_bridge_failure       403\n#define mqfb_cics_correl_id_error      404\n#define mqfb_cics_ccsid_error          405\n#define mqfb_cics_encoding_error       406\n#define mqfb_cics_cih_error            407\n#define mqfb_cics_uow_error            408\n#define mqfb_cics_commarea_error       409\n#define mqfb_cics_appl_not_started     410\n#define mqfb_cics_appl_abended         411\n#define mqfb_cics_dlq_error            412\n#define mqfb_cics_uow_backed_out       413\n#define mqfb_system_last               65535\n#define mqfb_appl_first                65536\n#define mqfb_appl_last                 9\n#define mqenc_native                   0x311\n#define mqenc_integer_mask             0x0F\n#define mqenc_decimal_mask             0xF0\n#define mqenc_float_mask               0xF00\n#define mqenc_reserved_mask            0xFFFFF000\n#define mqenc_integer_undefined        0x00\n#define mqenc_integer_normal           0x01\n#define mqenc_integer_reversed         0x02\n#define mqenc_decimal_undefined        0x00\n#define mqenc_decimal_normal           0x10\n#define mqenc_decimal_reversed         0x20\n#define mqenc_float_undefined          0x00\n#define mqenc_float_ieee_normal        0x100\n#define mqenc_float_ieee_reversed      0x200\n#define mqenc_float_s390               0x300\n#define mqccsi_undefined               0\n#define mqccsi_default                 0\n#define mqccsi_q_mgr                   0\n#define mqccsi_inherit                 -2\n#define mqccsi_embedded                -1\n#define mqpri_priority_as_q_def        -1\n#define mqper_not_persistent           0\n#define mqper_persistent               1\n#define mqper_persistence_as_q_def     2\n#define mqat_unknown                   -1\n#define mqat_no_context                0\n#define mqat_cics                      1\n#define mqat_mvs                       2\n#define mqat_os390                     2\n#define mqat_zos                       2\n#define mqat_ims                       3\n#define mqat_os2                       4\n#define mqat_dos                       5\n#define mqat_aix                       6\n#define mqat_unix                      6\n#define mqat_qmgr                      7\n#define mqat_os400                     8\n#define mqat_windows                   9\n#define mqat_cics_vse                  10\n#define mqat_windows_nt                11\n#define mqat_vms                       12\n#define mqat_guardian                  13\n#define mqat_nsk                       13\n#define mqat_vos                       14\n#define mqat_ims_bridge                19\n#define mqat_xcf                       20\n#define mqat_cics_bridge               21\n#define mqat_notes_agent               22\n#define mqat_user                      25\n#define mqat_broker                    26\n#define mqat_java                      28\n#define mqat_dqm                       29\n#define mqat_channel_initiator         30\n#define mqat_default                   2\n#define mqat_user_first                65536\n#define mqat_user_last                 9\n#define mqmf_segmentation_inhibited    0x00\n#define mqmf_segmentation_allowed      0x01\n#define mqmf_msg_in_group              0x08\n#define mqmf_last_msg_in_group         0x10\n#define mqmf_segment                   0x02\n#define mqmf_last_segment              0x04\n#define mqmf_none                      0x00\n#define mqmf_reject_unsup_mask         0xFFF\n#define mqmf_accept_unsup_mask         0xFFF00000\n#define mqmf_accept_unsup_if_xmit_mask 0xFF000\n#define mqol_undefined                 -1\n#define mqmde_struc_id                 0xD4C4C540\n#define mqmde_version_2                2\n#define mqmde_current_version          2\n#define mqmde_length_2                 72\n#define mqmdef_none                    0x00\n#define mqod_struc_id                  0xD6C44040\n#define mqod_version_1                 1\n#define mqod_version_2                 2\n#define mqod_version_3                 3\n#define mqod_current_version           3\n#define mqod_current_length            336\n#define mqot_q                         1\n#define mqot_namelist                  2\n#define mqot_process                   3\n#define mqot_storage_class             4\n#define mqot_q_mgr                     5\n#define mqot_channel                   6\n#define mqot_auth_info                 7\n#define mqot_cf_struc                  10\n#define mqot_reserved_1                999\n#define mqot_all                       1001\n#define mqot_alias_q                   1002\n#define mqot_model_q                   1003\n#define mqot_local_q                   1004\n#define mqot_remote_q                  1005\n#define mqot_sender_channel            1007\n#define mqot_server_channel            1008\n#define mqot_requester_channel         1009\n#define mqot_receiver_channel          1010\n#define mqot_current_channel           1011\n#define mqot_saved_channel             1012\n#define mqot_svrconn_channel           1013\n#define mqot_clntconn_channel          1014\n#define mqsidt_none                    0x00\n#define mqsidt_nt_security_id          0x01\n#define mqpmo_struc_id                 0xD7D4D640\n#define mqpmo_version_1                1\n#define mqpmo_current_version          1\n#define mqpmo_current_length           128\n#define mqpmo_syncpoint                0x02\n#define mqpmo_no_syncpoint             0x04\n#define mqpmo_logical_order            0x8000\n#define mqpmo_no_context               0x4000\n#define mqpmo_default_context          0x20\n#define mqpmo_pass_identity_context    0x100\n#define mqpmo_pass_all_context         0x200\n#define mqpmo_set_identity_context     0x400\n#define mqpmo_set_all_context          0x800\n#define mqpmo_alternate_user_authority 0x1000\n#define mqpmo_fail_if_quiescing        0x2000\n#define mqpmo_none                     0x00\n#define mqrfh_struc_id                 0xD9C6C840\n#define mqrfh_version_1                1\n#define mqrfh_version_2                2\n#define mqrfh_struc_length_fixed       32\n#define mqrfh_struc_length_fixed_2     36\n#define mqrfh_none                     0x00\n#define mqrmh_struc_id                 0xD9D4C840\n#define mqrmh_version_1                1\n#define mqrmh_current_version          1\n#define mqrmhf_last                    0x01\n#define mqrmhf_not_last                0x00\n#define mqtm_struc_id                  0xE3D44040\n#define mqtm_version_1                 1\n#define mqtm_current_version           1\n#define mqtmc_struc_id                 0xE3D4C340\n#define mqtmc_version_1                0x404040F1\n#define mqtmc_version_2                0x404040F2\n#define mqtmc_current_version          0x404040F2\n#define mqwih_struc_id                 0xE6C9C840\n#define mqwih_version_1                1\n#define mqwih_current_version          1\n#define mqwih_length_1                 120\n#define mqwih_current_length           120\n#define mqwih_none                     0x00\n#define mqxqh_struc_id                 0xE7D8C840\n#define mqxqh_version_1                1\n#define mqxqh_current_version          1\n#define mqco_none                      0x00\n#define mqco_delete                    0x01\n#define mqco_delete_purge              0x02\n#define mqba_first                     6001\n#define mqba_last                      8000\n#define mqca_alteration_date           2027\n#define mqca_alteration_time           2028\n#define mqca_appl_id                   2001\n#define mqca_auth_info_conn_name       2053\n#define mqca_auth_info_desc            2046\n#define mqca_auth_info_name            2045\n#define mqca_backout_req_q_name        2019\n#define mqca_base_q_name               2002\n#define mqca_cf_struc_desc             2052\n#define mqca_cf_struc_name             2039\n#define mqca_channel_auto_def_exit     2026\n#define mqca_cluster_date              2037\n#define mqca_cluster_name              2029\n#define mqca_cluster_namelist          2030\n#define mqca_cluster_q_mgr_name        2031\n#define mqca_cluster_time              2038\n#define mqca_cluster_workload_data     2034\n#define mqca_cluster_workload_exit     2033\n#define mqca_command_input_q_name      2003\n#define mqca_creation_date             2004\n#define mqca_creation_time             2005\n#define mqca_dead_letter_q_name        2006\n#define mqca_def_xmit_q_name           2025\n#define mqca_env_data                  2007\n#define mqca_first                     2001\n#define mqca_igq_user_id               2041\n#define mqca_initiation_q_name         2008\n#define mqca_last                      4000\n#define mqca_last_used                 2053\n#define mqca_ldap_password             2048\n#define mqca_ldap_user_name            2047\n#define mqca_namelist_desc             2009\n#define mqca_namelist_name             2010\n#define mqca_names                     2020\n#define mqca_process_desc              2011\n#define mqca_process_name              2012\n#define mqca_q_desc                    2013\n#define mqca_q_mgr_desc                2014\n#define mqca_q_mgr_identifier          2032\n#define mqca_q_mgr_name                2015\n#define mqca_q_name                    2016\n#define mqca_qsg_name                  2040\n#define mqca_remote_q_mgr_name         2017\n#define mqca_remote_q_name             2018\n#define mqca_repository_name           2035\n#define mqca_repository_namelist       2036\n#define mqca_ssl_crl_namelist          2050\n#define mqca_ssl_crypto_hardware       2051\n#define mqca_ssl_key_repository        2049\n#define mqca_storage_class             2022\n#define mqca_storage_class_desc        2042\n#define mqca_trigger_data              2023\n#define mqca_user_data                 2021\n#define mqca_user_list                 4000\n#define mqca_xcf_group_name            2043\n#define mqca_xcf_member_name           2044\n#define mqca_xmit_q_name               2024\n#define mqia_appl_type                 1\n#define mqia_archive                   60\n#define mqia_auth_info_type            66\n#define mqia_authority_event           47\n#define mqia_backout_threshold         22\n#define mqia_cf_level                  70\n#define mqia_cf_recover                71\n#define mqia_channel_auto_def          55\n#define mqia_channel_auto_def_event    56\n#define mqia_cluster_q_type            59\n#define mqia_cluster_workload_length   58\n#define mqia_coded_char_set_id         2\n#define mqia_command_level             31\n#define mqia_configuration_event       51\n#define mqia_cpi_level                 27\n#define mqia_current_q_depth           3\n#define mqia_def_bind                  61\n#define mqia_def_input_open_option     4\n#define mqia_def_persistence           5\n#define mqia_def_priority              6\n#define mqia_definition_type           7\n#define mqia_dist_lists                34\n#define mqia_expiry_interval           39\n#define mqia_first                     1\n#define mqia_harden_get_backout        8\n#define mqia_high_q_depth              36\n#define mqia_igq_put_authority         65\n#define mqia_index_type                57\n#define mqia_inhibit_event             48\n#define mqia_inhibit_get               9\n#define mqia_inhibit_put               10\n#define mqia_intra_group_queuing       64\n#define mqia_last                      2000\n#define mqia_last_used                 72\n#define mqia_local_event               49\n#define mqia_max_handles               11\n#define mqia_max_msg_length            13\n#define mqia_max_priority              14\n#define mqia_max_q_depth               15\n#define mqia_max_uncommitted_msgs      33\n#define mqia_msg_delivery_sequence     16\n#define mqia_msg_deq_count             38\n#define mqia_msg_enq_count             37\n#define mqia_name_count                19\n#define mqia_namelist_type             72\n#define mqia_open_input_count          17\n#define mqia_open_output_count         18\n#define mqia_pageset_id                62\n#define mqia_performance_event         53\n#define mqia_platform                  32\n#define mqia_q_depth_high_event        43\n#define mqia_q_depth_high_limit        40\n#define mqia_q_depth_low_event         44\n#define mqia_q_depth_low_limit         41\n#define mqia_q_depth_max_event         42\n#define mqia_q_service_interval        54\n#define mqia_q_service_interval_event  46\n#define mqia_q_type                    20\n#define mqia_qsg_disp                  63\n#define mqia_remote_event              50\n#define mqia_retention_interval        21\n#define mqia_scope                     45\n#define mqia_shareability              23\n#define mqia_ssl_tasks                 69\n#define mqia_start_stop_event          52\n#define mqia_syncpoint                 30\n#define mqia_time_since_reset          35\n#define mqia_trigger_control           24\n#define mqia_trigger_depth             29\n#define mqia_trigger_interval          25\n#define mqia_trigger_msg_priority      26\n#define mqia_trigger_type              28\n#define mqia_usage                     12\n#define mqia_user_list                 2000\n#define mqiav_not_applicable           -1\n#define mqiav_undefined                -2\n#define mqoo_input_as_q_def            0x01\n#define mqoo_input_shared              0x02\n#define mqoo_input_exclusive           0x04\n#define mqoo_browse                    0x08\n#define mqoo_output                    0x10\n#define mqoo_inquire                   0x20\n#define mqoo_set                       0x40\n#define mqoo_bind_on_open              0x4000\n#define mqoo_bind_not_fixed            0x8000\n#define mqoo_bind_as_q_def             0x00\n#define mqoo_save_all_context          0x80\n#define mqoo_pass_identity_context     0x100\n#define mqoo_pass_all_context          0x200\n#define mqoo_set_identity_context      0x400\n#define mqoo_set_all_context           0x800\n#define mqoo_alternate_user_authority  0x1000\n#define mqoo_fail_if_quiescing         0x2000\n#define mqhc_def_hconn                 0\n#define mq_abend_code_length           4\n#define mq_accounting_token_length     32\n#define mq_appl_identity_data_length   32\n#define mq_appl_name_length            28\n#define mq_appl_origin_data_length     4\n#define mq_appl_tag_length             28\n#define mq_attention_id_length         4\n#define mq_auth_info_conn_name_length  264\n#define mq_auth_info_desc_length       64\n#define mq_auth_info_name_length       48\n#define mq_authenticator_length        8\n#define mq_bridge_name_length          24\n#define mq_cancel_code_length          4\n#define mq_cf_struc_desc_length        64\n#define mq_cf_struc_name_length        12\n#define mq_channel_date_length         12\n#define mq_channel_desc_length         64\n#define mq_channel_name_length         20\n#define mq_channel_time_length         8\n#define mq_cluster_name_length         48\n#define mq_conn_name_length            264\n#define mq_conn_tag_length             128\n#define mq_correl_id_length            24\n#define mq_creation_date_length        12\n#define mq_creation_time_length        8\n#define mq_date_length                 12\n#define mq_distinguished_name_length   1024\n#define mq_exit_data_length            32\n#define mq_exit_name_length            8\n#define mq_exit_user_area_length       16\n#define mq_facility_length             8\n#define mq_facility_like_length        4\n#define mq_format_length               8\n#define mq_function_length             4\n#define mq_group_id_length             24\n#define mq_ldap_password_length        32\n#define mq_local_address_length        48\n#define mq_lterm_override_length       8\n#define mq_luwid_length                16\n#define mq_max_exit_name_length        128\n#define mq_max_mca_user_id_length      64\n#define mq_max_user_id_length          64\n#define mq_mca_job_name_length         28\n#define mq_mca_name_length             20\n#define mq_mca_user_data_length        32\n#define mq_mca_user_id_length          12\n#define mq_mfs_map_name_length         8\n#define mq_mode_name_length            8\n#define mq_msg_header_length           4000\n#define mq_msg_id_length               24\n#define mq_msg_token_length            16\n#define mq_namelist_desc_length        64\n#define mq_namelist_name_length        48\n#define mq_object_instance_id_length   24\n#define mq_object_name_length          48\n#define mq_password_length             12\n#define mq_process_appl_id_length      256\n#define mq_process_desc_length         64\n#define mq_process_env_data_length     128\n#define mq_process_name_length         48\n#define mq_process_user_data_length    128\n#define mq_program_name_length         20\n#define mq_put_appl_name_length        28\n#define mq_put_date_length             8\n#define mq_put_time_length             8\n#define mq_q_desc_length               64\n#define mq_q_mgr_desc_length           64\n#define mq_q_mgr_identifier_length     48\n#define mq_q_mgr_name_length           48\n#define mq_q_name_length               48\n#define mq_qsg_name_length             4\n#define mq_remote_sys_id_length        4\n#define mq_security_id_length          40\n#define mq_service_name_length         32\n#define mq_service_step_length         8\n#define mq_short_conn_name_length      20\n#define mq_ssl_cipher_spec_length      32\n#define mq_ssl_crypto_hardware_length  256\n#define mq_ssl_handshake_stage_length  32\n#define mq_ssl_key_repository_length   256\n#define mq_ssl_peer_name_length        1024\n#define mq_ssl_short_peer_name_length  256\n#define mq_start_code_length           4\n#define mq_storage_class_desc_length   64\n#define mq_storage_class_length        8\n#define mq_sub_identity_length         128\n#define mq_time_length                 8\n#define mq_total_exit_data_length      999\n#define mq_total_exit_name_length      999\n#define mq_tp_name_length              64\n#define mq_tran_instance_id_length     16\n#define mq_transaction_id_length       4\n#define mq_trigger_data_length         64\n#define mq_user_id_length              12\n#define mq_xcf_group_name_length       8\n#define mq_xcf_member_name_length      16\n#define mqcc_ok                        0\n#define mqcc_warning                   1\n#define mqcc_failed                    2\n#define mqcc_unknown                   -1\n#define mqrc_none                      0\n#define mqrc_appl_first                900\n#define mqrc_appl_last                 999\n#define mqrc_alias_base_q_type_error   2001\n#define mqrc_already_connected         2002\n#define mqrc_backed_out                2003\n#define mqrc_buffer_error              2004\n#define mqrc_buffer_length_error       2005\n#define mqrc_char_attr_length_error    2006\n#define mqrc_char_attrs_error          2007\n#define mqrc_char_attrs_too_short      2008\n#define mqrc_connection_broken         2009\n#define mqrc_data_length_error         2010\n#define mqrc_dynamic_q_name_error      2011\n#define mqrc_environment_error         2012\n#define mqrc_expiry_error              2013\n#define mqrc_feedback_error            2014\n#define mqrc_get_inhibited             2016\n#define mqrc_handle_not_available      2017\n#define mqrc_hconn_error               2018\n#define mqrc_hobj_error                2019\n#define mqrc_inhibit_value_error       2020\n#define mqrc_int_attr_count_error      2021\n#define mqrc_int_attr_count_too_small  2022\n#define mqrc_int_attrs_array_error     2023\n#define mqrc_syncpoint_limit_reached   2024\n#define mqrc_max_conns_limit_reached   2025\n#define mqrc_md_error                  2026\n#define mqrc_missing_reply_to_q        2027\n#define mqrc_msg_type_error            2029\n#define mqrc_msg_too_big_for_q         2030\n#define mqrc_msg_too_big_for_q_mgr     2031\n#define mqrc_no_msg_available          2033\n#define mqrc_no_msg_under_cursor       2034\n#define mqrc_not_authorized            2035\n#define mqrc_not_open_for_browse       2036\n#define mqrc_not_open_for_input        2037\n#define mqrc_not_open_for_inquire      2038\n#define mqrc_not_open_for_output       2039\n#define mqrc_not_open_for_set          2040\n#define mqrc_object_changed            2041\n#define mqrc_object_in_use             2042\n#define mqrc_object_type_error         2043\n#define mqrc_od_error                  2044\n#define mqrc_option_not_valid_for_type 2045\n#define mqrc_options_error             2046\n#define mqrc_persistence_error         2047\n#define mqrc_persistent_not_allowed    2048\n#define mqrc_priority_exceeds_maximum  2049\n#define mqrc_priority_error            2050\n#define mqrc_put_inhibited             2051\n#define mqrc_q_deleted                 2052\n#define mqrc_q_full                    2053\n#define mqrc_q_not_empty               2055\n#define mqrc_q_space_not_available     2056\n#define mqrc_q_type_error              2057\n#define mqrc_q_mgr_name_error          2058\n#define mqrc_q_mgr_not_available       2059\n#define mqrc_report_options_error      2061\n#define mqrc_second_mark_not_allowed   2062\n#define mqrc_security_error            2063\n#define mqrc_selector_count_error      2065\n#define mqrc_selector_limit_exceeded   2066\n#define mqrc_selector_error            2067\n#define mqrc_selector_not_for_type     2068\n#define mqrc_signal_outstanding        2069\n#define mqrc_signal_request_accepted   2070\n#define mqrc_storage_not_available     2071\n#define mqrc_syncpoint_not_available   2072\n#define mqrc_trigger_control_error     2075\n#define mqrc_trigger_depth_error       2076\n#define mqrc_trigger_msg_priority_err  2077\n#define mqrc_trigger_type_error        2078\n#define mqrc_truncated_msg_accepted    2079\n#define mqrc_truncated_msg_failed      2080\n#define mqrc_unknown_alias_base_q      2082\n#define mqrc_unknown_object_name       2085\n#define mqrc_unknown_object_q_mgr      2086\n#define mqrc_unknown_remote_q_mgr      2087\n#define mqrc_wait_interval_error       2090\n#define mqrc_xmit_q_type_error         2091\n#define mqrc_xmit_q_usage_error        2092\n#define mqrc_not_open_for_pass_all     2093\n#define mqrc_not_open_for_pass_ident   2094\n#define mqrc_not_open_for_set_all      2095\n#define mqrc_not_open_for_set_ident    2096\n#define mqrc_context_handle_error      2097\n#define mqrc_context_not_available     2098\n#define mqrc_signal1_error             2099\n#define mqrc_object_already_exists     2100\n#define mqrc_object_damaged            2101\n#define mqrc_resource_problem          2102\n#define mqrc_another_q_mgr_connected   2103\n#define mqrc_unknown_report_option     2104\n#define mqrc_storage_class_error       2105\n#define mqrc_cod_not_valid_for_xcf_q   2106\n#define mqrc_xwait_canceled            2107\n#define mqrc_xwait_error               2108\n#define mqrc_suppressed_by_exit        2109\n#define mqrc_format_error              2110\n#define mqrc_source_ccsid_error        2111\n#define mqrc_source_integer_enc_error  2112\n#define mqrc_source_decimal_enc_error  2113\n#define mqrc_source_float_enc_error    2114\n#define mqrc_target_ccsid_error        2115\n#define mqrc_target_integer_enc_error  2116\n#define mqrc_target_decimal_enc_error  2117\n#define mqrc_target_float_enc_error    2118\n#define mqrc_not_converted             2119\n#define mqrc_converted_msg_too_big     2120\n#define mqrc_truncated                 2120\n#define mqrc_no_external_participants  2121\n#define mqrc_participant_not_available 2122\n#define mqrc_outcome_mixed             2123\n#define mqrc_outcome_pending           2124\n#define mqrc_bridge_started            2125\n#define mqrc_bridge_stopped            2126\n#define mqrc_adapter_storage_shortage  2127\n#define mqrc_uow_in_progress           2128\n#define mqrc_adapter_conn_load_error   2129\n#define mqrc_adapter_serv_load_error   2130\n#define mqrc_adapter_defs_error        2131\n#define mqrc_adapter_defs_load_error   2132\n#define mqrc_adapter_conv_load_error   2133\n#define mqrc_bo_error                  2134\n#define mqrc_dh_error                  2135\n#define mqrc_multiple_reasons          2136\n#define mqrc_open_failed               2137\n#define mqrc_adapter_disc_load_error   2138\n#define mqrc_cno_error                 2139\n#define mqrc_cics_wait_failed          2140\n#define mqrc_dlh_error                 2141\n#define mqrc_header_error              2142\n#define mqrc_source_length_error       2143\n#define mqrc_target_length_error       2144\n#define mqrc_source_buffer_error       2145\n#define mqrc_target_buffer_error       2146\n#define mqrc_iih_error                 2148\n#define mqrc_pcf_error                 2149\n#define mqrc_dbcs_error                2150\n#define mqrc_object_name_error         2152\n#define mqrc_object_q_mgr_name_error   2153\n#define mqrc_recs_present_error        2154\n#define mqrc_object_records_error      2155\n#define mqrc_response_records_error    2156\n#define mqrc_asid_mismatch             2157\n#define mqrc_pmo_record_flags_error    2158\n#define mqrc_put_msg_records_error     2159\n#define mqrc_conn_id_in_use            2160\n#define mqrc_q_mgr_quiescing           2161\n#define mqrc_q_mgr_stopping            2162\n#define mqrc_duplicate_recov_coord     2163\n#define mqrc_pmo_error                 2173\n#define mqrc_api_exit_not_found        2182\n#define mqrc_api_exit_load_error       2183\n#define mqrc_remote_q_name_error       2184\n#define mqrc_inconsistent_persistence  2185\n#define mqrc_gmo_error                 2186\n#define mqrc_cics_bridge_restriction   2187\n#define mqrc_stopped_by_cluster_exit   2188\n#define mqrc_cluster_resolution_error  2189\n#define mqrc_converted_string_too_big  2190\n#define mqrc_tmc_error                 2191\n#define mqrc_pageset_full              2192\n#define mqrc_storage_medium_full       2192\n#define mqrc_pageset_error             2193\n#define mqrc_name_not_valid_for_type   2194\n#define mqrc_unexpected_error          2195\n#define mqrc_unknown_xmit_q            2196\n#define mqrc_unknown_def_xmit_q        2197\n#define mqrc_def_xmit_q_type_error     2198\n#define mqrc_def_xmit_q_usage_error    2199\n#define mqrc_name_in_use               2201\n#define mqrc_connection_quiescing      2202\n#define mqrc_connection_stopping       2203\n#define mqrc_adapter_not_available     2204\n#define mqrc_msg_id_error              2206\n#define mqrc_correl_id_error           2207\n#define mqrc_file_system_error         2208\n#define mqrc_no_msg_locked             2209\n#define mqrc_file_not_audited          2216\n#define mqrc_connection_not_authorized 2217\n#define mqrc_msg_too_big_for_channel   2218\n#define mqrc_call_in_progress          2219\n#define mqrc_rmh_error                 2220\n#define mqrc_q_mgr_active              2222\n#define mqrc_q_mgr_not_active          2223\n#define mqrc_q_depth_high              2224\n#define mqrc_q_depth_low               2225\n#define mqrc_q_service_interval_high   2226\n#define mqrc_q_service_interval_ok     2227\n#define mqrc_unit_of_work_not_started  2232\n#define mqrc_channel_auto_def_ok       2233\n#define mqrc_channel_auto_def_error    2234\n#define mqrc_cfh_error                 2235\n#define mqrc_cfil_error                2236\n#define mqrc_cfin_error                2237\n#define mqrc_cfsl_error                2238\n#define mqrc_cfst_error                2239\n#define mqrc_incomplete_group          2241\n#define mqrc_incomplete_msg            2242\n#define mqrc_inconsistent_ccsids       2243\n#define mqrc_inconsistent_encodings    2244\n#define mqrc_inconsistent_uow          2245\n#define mqrc_invalid_msg_under_cursor  2246\n#define mqrc_match_options_error       2247\n#define mqrc_mde_error                 2248\n#define mqrc_msg_flags_error           2249\n#define mqrc_msg_seq_number_error      2250\n#define mqrc_offset_error              2251\n#define mqrc_original_length_error     2252\n#define mqrc_segment_length_zero       2253\n#define mqrc_uow_not_available         2255\n#define mqrc_wrong_gmo_version         2256\n#define mqrc_wrong_md_version          2257\n#define mqrc_group_id_error            2258\n#define mqrc_inconsistent_browse       2259\n#define mqrc_xqh_error                 2260\n#define mqrc_src_env_error             2261\n#define mqrc_src_name_error            2262\n#define mqrc_dest_env_error            2263\n#define mqrc_dest_name_error           2264\n#define mqrc_tm_error                  2265\n#define mqrc_cluster_exit_error        2266\n#define mqrc_cluster_exit_load_error   2267\n#define mqrc_cluster_put_inhibited     2268\n#define mqrc_cluster_resource_error    2269\n#define mqrc_no_destinations_available 2270\n#define mqrc_conn_tag_in_use           2271\n#define mqrc_partially_converted       2272\n#define mqrc_connection_error          2273\n#define mqrc_option_environment_error  2274\n#define mqrc_cd_error                  2277\n#define mqrc_client_conn_error         2278\n#define mqrc_channel_stopped_by_user   2279\n#define mqrc_hconfig_error             2280\n#define mqrc_function_error            2281\n#define mqrc_channel_started           2282\n#define mqrc_channel_stopped           2283\n#define mqrc_channel_conv_error        2284\n#define mqrc_service_not_available     2285\n#define mqrc_initialization_failed     2286\n#define mqrc_termination_failed        2287\n#define mqrc_unknown_q_name            2288\n#define mqrc_service_error             2289\n#define mqrc_q_already_exists          2290\n#define mqrc_user_id_not_available     2291\n#define mqrc_unknown_entity            2292\n#define mqrc_unknown_auth_entity       2293\n#define mqrc_unknown_ref_object        2294\n#define mqrc_channel_activated         2295\n#define mqrc_channel_not_activated     2296\n#define mqrc_uow_canceled              2297\n#define mqrc_function_not_supported    2298\n#define mqrc_selector_type_error       2299\n#define mqrc_command_type_error        2300\n#define mqrc_multiple_instance_error   2301\n#define mqrc_system_item_not_alterable 2302\n#define mqrc_bag_conversion_error      2303\n#define mqrc_selector_out_of_range     2304\n#define mqrc_selector_not_unique       2305\n#define mqrc_index_not_present         2306\n#define mqrc_string_error              2307\n#define mqrc_encoding_not_supported    2308\n#define mqrc_selector_not_present      2309\n#define mqrc_out_selector_error        2310\n#define mqrc_string_truncated          2311\n#define mqrc_selector_wrong_type       2312\n#define mqrc_inconsistent_item_type    2313\n#define mqrc_index_error               2314\n#define mqrc_system_bag_not_alterable  2315\n#define mqrc_item_count_error          2316\n#define mqrc_format_not_supported      2317\n#define mqrc_selector_not_supported    2318\n#define mqrc_item_value_error          2319\n#define mqrc_hbag_error                2320\n#define mqrc_parameter_missing         2321\n#define mqrc_cmd_server_not_available  2322\n#define mqrc_string_length_error       2323\n#define mqrc_inquiry_command_error     2324\n#define mqrc_nested_bag_not_supported  2325\n#define mqrc_bag_wrong_type            2326\n#define mqrc_item_type_error           2327\n#define mqrc_system_bag_not_deletable  2328\n#define mqrc_system_item_not_deletable 2329\n#define mqrc_coded_char_set_id_error   2330\n#define mqrc_msg_token_error           2331\n#define mqrc_missing_wih               2332\n#define mqrc_wih_error                 2333\n#define mqrc_rfh_error                 2334\n#define mqrc_rfh_string_error          2335\n#define mqrc_rfh_command_error         2336\n#define mqrc_rfh_parm_error            2337\n#define mqrc_rfh_duplicate_parm        2338\n#define mqrc_rfh_parm_missing          2339\n#define mqrc_char_conversion_error     2340\n#define mqrc_ucs2_conversion_error     2341\n#define mqrc_db2_not_available         2342\n#define mqrc_object_not_unique         2343\n#define mqrc_conn_tag_not_released     2344\n#define mqrc_cf_not_available          2345\n#define mqrc_cf_struc_in_use           2346\n#define mqrc_cf_struc_list_hdr_in_use  2347\n#define mqrc_cf_struc_auth_failed      2348\n#define mqrc_cf_struc_error            2349\n#define mqrc_conn_tag_not_usable       2350\n#define mqrc_global_uow_conflict       2351\n#define mqrc_local_uow_conflict        2352\n#define mqrc_handle_in_use_for_uow     2353\n#define mqrc_uow_enlistment_error      2354\n#define mqrc_uow_mix_not_supported     2355\n#define mqrc_wxp_error                 2356\n#define mqrc_current_record_error      2357\n#define mqrc_next_offset_error         2358\n#define mqrc_no_record_available       2359\n#define mqrc_object_level_incompatible 2360\n#define mqrc_next_record_error         2361\n#define mqrc_backout_threshold_reached 2362\n#define mqrc_msg_not_matched           2363\n#define mqrc_jms_format_error          2364\n#define mqrc_segments_not_supported    2365\n#define mqrc_wrong_cf_level            2366\n#define mqrc_config_create_object      2367\n#define mqrc_config_change_object      2368\n#define mqrc_config_delete_object      2369\n#define mqrc_config_refresh_object     2370\n#define mqrc_channel_ssl_error         2371\n#define mqrc_api_exit_error            2374\n#define mqrc_api_exit_init_error       2375\n#define mqrc_api_exit_term_error       2376\n#define mqrc_exit_reason_error         2377\n#define mqrc_reserved_value_error      2378\n#define mqrc_no_data_available         2379\n#define mqrc_sco_error                 2380\n#define mqrc_key_repository_error      2381\n#define mqrc_crypto_hardware_error     2382\n#define mqrc_auth_info_rec_count_error 2383\n#define mqrc_auth_info_rec_error       2384\n#define mqrc_air_error                 2385\n#define mqrc_auth_info_type_error      2386\n#define mqrc_auth_info_conn_name_error 2387\n#define mqrc_ldap_user_name_error      2388\n#define mqrc_ldap_user_name_length_err 2389\n#define mqrc_ldap_password_error       2390\n#define mqrc_ssl_already_initialized   2391\n#define mqrc_ssl_config_error          2392\n#define mqrc_ssl_initialization_error  2393\n#define mqrc_q_index_type_error        2394\n#define mqrc_ssl_not_allowed           2396\n#define mqrc_jsse_error                2397\n#define mqrc_ssl_peer_name_mismatch    2398\n#define mqrc_ssl_peer_name_error       2399\n#define mqrc_unsupported_cipher_suite  2400\n#define mqrc_ssl_certificate_revoked   2401\n#define mqrc_ssl_cert_store_error      2402\n#define mqrc_reopen_excl_input_error   6100\n#define mqrc_reopen_inquire_error      6101\n#define mqrc_reopen_saved_context_err  6102\n#define mqrc_reopen_temporary_q_error  6103\n#define mqrc_attribute_locked          6104\n#define mqrc_cursor_not_valid          6105\n#define mqrc_encoding_error            6106\n#define mqrc_struc_id_error            6107\n#define mqrc_null_pointer              6108\n#define mqrc_no_connection_reference   6109\n#define mqrc_no_buffer                 6110\n#define mqrc_binary_data_length_error  6111\n#define mqrc_buffer_not_automatic      6112\n#define mqrc_insufficient_buffer       6113\n#define mqrc_insufficient_data         6114\n#define mqrc_data_truncated            6115\n#define mqrc_zero_length               6116\n#define mqrc_negative_length           6117\n#define mqrc_negative_offset           6118\n#define mqrc_inconsistent_format       6119\n#define mqrc_inconsistent_object_state 6120\n#define mqrc_context_object_not_valid  6121\n#define mqrc_context_open_error        6122\n#define mqrc_struc_length_error        6123\n#define mqrc_not_connected             6124\n#define mqrc_not_open                  6125\n#define mqrc_distribution_list_empty   6126\n#define mqrc_inconsistent_open_options 6127\n#define mqrc_wrong_version             6128\n#define mqrc_reference_error           6129\n#define mqqt_local                     1\n#define mqqt_model                     2\n#define mqqt_alias                     3\n#define mqqt_remote                    6\n#define mqqt_cluster                   7\n#define mqcqt_local_q                  1\n#define mqcqt_alias_q                  2\n#define mqcqt_remote_q                 3\n#define mqcqt_q_mgr_alias              4\n#define mqqt_all                       1001\n#define mqqdt_predefined               1\n#define mqqdt_permanent_dynamic        2\n#define mqqdt_temporary_dynamic        3\n#define mqqdt_shared_dynamic           4\n#define mqqa_get_inhibited             1\n#define mqqa_get_allowed               0\n#define mqqa_put_inhibited             1\n#define mqqa_put_allowed               0\n#define mqqa_shareable                 1\n#define mqqa_not_shareable             0\n#define mqqa_backout_hardened          1\n#define mqqa_backout_not_hardened      0\n#define mqmds_priority                 0\n#define mqmds_fifo                     1\n#define mqtc_off                       0\n#define mqtc_on                        1\n#define mqtt_none                      0\n#define mqtt_first                     1\n#define mqtt_every                     2\n#define mqtt_depth                     3\n#define mqus_normal                    0\n#define mqus_transmission              1\n#define mqdl_supported                 1\n#define mqdl_not_supported             0\n#define mqit_none                      0\n#define mqit_msg_id                    1\n#define mqit_correl_id                 2\n#define mqit_msg_token                 4\n#define mqit_group_id                  5\n#define mqbnd_bind_on_open             0\n#define mqbnd_bind_not_fixed           1\n#define mqqsgd_q_mgr                   0\n#define mqqsgd_copy                    1\n#define mqqsgd_shared                  2\n#define mqqsgd_group                   3\n#define mqnc_max_namelist_name_count   256\n#define mqnt_none                      0\n#define mqnt_q                         1\n#define mqnt_cluster                   2\n#define mqnt_auth_info                 4\n#define mqnt_all                       1001\n#define mqchad_disabled                0\n#define mqchad_enabled                 1\n#define mqcmdl_level_1                 100\n#define mqcmdl_level_101               101\n#define mqcmdl_level_110               110\n#define mqcmdl_level_114               114\n#define mqcmdl_level_120               120\n#define mqcmdl_level_200               200\n#define mqcmdl_level_201               201\n#define mqcmdl_level_210               210\n#define mqcmdl_level_220               220\n#define mqcmdl_level_221               221\n#define mqcmdl_level_320               320\n#define mqcmdl_level_420               420\n#define mqcmdl_level_500               500\n#define mqcmdl_level_510               510\n#define mqcmdl_level_520               520\n#define mqcmdl_level_530               530\n#define mqexpi_off                     0\n#define mqigq_disabled                 0\n#define mqigq_enabled                  1\n#define mqigqpa_default                1\n#define mqigqpa_context                2\n#define mqigqpa_only_igq               3\n#define mqigqpa_alternate_or_igq       4\n#define mqpl_mvs                       1\n#define mqpl_os390                     1\n#define mqpl_zos                       1\n#define mqpl_os2                       2\n#define mqpl_aix                       3\n#define mqpl_unix                      3\n#define mqpl_os400                     4\n#define mqpl_windows                   5\n#define mqpl_windows_nt                11\n#define mqpl_vms                       12\n#define mqpl_nsk                       13\n#define mqpl_native                    1\n#define mqsp_available                 1\n#define mqsp_not_available             0\n\n/* Values for field \"ioqe_mqs_mqod_resolvedqmgrname\" */\n#define ioqe_mqs_mqod_length           0x150\n\n/* Values for field \"ioqe_db2_option\" */\n#define ioqe_db2_option_initapi        1          /* iniatapi                 */\n#define ioqe_db2_option_open           2          /* open                     */\n#define ioqe_db2_option_listen         3          /* listen                   */\n#define ioqe_db2_option_close          4          /* close                    */\n#define ioqe_db2_option_send           5          /* send                     */\n#define ioqe_db2_option_sendn          6          /* sendn                    */\n#define ioqe_db2_option_sendconf       7          /* sendconf                 */\n#define ioqe_db2_option_receive        8          /* receive                  */\n#define ioqe_db2_option_receiven       9          /* receiven                 */\n#define ioqe_db2_option_keepalive      10         /* keepalive                */\n#define ioqe_db2_option_sync           11         /* sync                     */\n#define ioqe_db2_option_allocate       12         /* allocate                 */\n#define ioqe_db2_option_accept         13         /* accept                   */\n#define ioqe_db2_option_inbound        14         /* inbound                  */\n#define ioqe_db2_option_cleanup        15         /* cleanup                  */\n#define ioqe_db2_option_sense          16         /* sense                    */\n#define ioqe_db2_option_dealloc        17         /* dealloc                  */\n#define ioqe_db2_option_error          18         /* error                    */\n#define ioqe_db2_option_termapi        19         /* termapi                  */\n\n/* Values for field \"ioqefmh5\" */\n#define ioqe_appcblockl                0x391\n\n/* Values for field \"ioqe_file_option\" */\n#define ioqe_file_option_send          1          /* send                     */\n#define ioqe_file_option_sendconf      2          /* sendconf                 */\n#define ioqe_file_option_receive       3          /* receive                  */\n#define ioqe_file_option_allocate      4          /* allocate                 */\n#define ioqe_file_option_open          5          /* open                     */\n#define ioqe_file_option_sync          6          /* sync                     */\n#define ioqe_file_option_dealloc       7          /* dealloc                  */\n#define ioqe_file_option_error         8          /* error                    */\n#define ioqe_file_option_inbound       9          /* inbound                  */\n#define ioqe_file_option_cleanup       10         /* cleanup                  */\n\n/* Values for field \"ioqe_sapi_flag\" */\n#define ioqe_sapi_flag_reset           0          /* reset state              */\n#define ioqe_sapi_flag_init            1          /* init state               */\n#define ioqe_sapi_flag_dsopen          2          /* dataset open flag        */\n#define ioqe_sapi_flag_dsend           4          /* end of dataset           */\n#define ioqe_sapi_flag_eof             8          /* no more data             */\n#define ioqe_sapi_flag_allocated       16         /* dataset alloc            */\n#define ioqe_sapi_flag_uparm           32         /* UPARM access o.k.        */\n#define ioqe_sapi_flag_vsamopen        64         /* VSAM dataset opened      */\n\n/* Values for field \"ioqe_sapi_flag1\" */\n#define ioqe_sapi_flag1_noqueue        1          /* dont queue the request   */\n#define ioqe_sapi_flag1_noqsam         2          /* dont need QSAM           */\n\n/* Values for field \"ioqe_sapi_key\" */\n#define ioqe_sapi_key_zero             0x00       /* in key zero              */\n#define ioqe_sapi_key_nzero            0xFF       /* nonzero key              */\n\n/* Values for field \"ioqe_exci_flag\" */\n#define ioqe_exci_flag_reset           0          /* reset state              */\n#define ioqe_exci_flag_init            1          /* init state               */\n#define ioqe_exci_flag_dsopen          2          /* dataset open flag        */\n#define ioqe_exci_flag_dsend           4          /* end of dataset           */\n#define ioqe_exci_flag_eof             8          /* no more data             */\n#define ioqe_exci_flag_allocated       16         /* dataset alloc            */\n#define ioqe_exci_flag_uparm           32         /* UPARM access o.k.        */\n#define ioqe_exci_flag_vsamopen        64         /* VSAM dataset opened      */\n\n/* Values for field \"ioqe_exci_key\" */\n#define ioqe_exci_key_zero             0x00       /* in key zero              */\n#define ioqe_exci_key_nzero            0xFF       /* nonzero key              */\n\n/* Values for field \"ioqe_exci_workflag\" */\n#define ioqe_exci_workflag_inbuffer    1          /* data in buffer           */\n\n/* Values for field \"ioqe_exci_pipe_type\" */\n#define ioqe_exci_generic_pipe         0x80       /* generic pipe             */\n#define ioqe_exci_specific_pipe        0x00       /* specfic pipe             */\n\n/* Values for field \"ioqe_exci_dpl_type\" */\n#define ioqe_exci_synconreturn         0x80       /* sync on return           */\n#define ioqe_exci_2phasecommit         0x00       /* 2 phase commit           */\n\n/* Values for field \"ioqe_exci_call_type\" */\n#define ioqe_exci_init_user            1          /* init user                */\n#define ioqe_exci_allocate_pipe        2          /* alloc pipe               */\n#define ioqe_exci_open_pipe            3          /* open pipe                */\n#define ioqe_exci_close_pipe           4          /* close pipe               */\n#define ioqe_exci_deallocate_pipe      5          /* dealloc pipe             */\n#define ioqe_exci_dpl_request          6          /* dpl request              */\n\n/* Values for field \"ioqe_exci_\" */\n#define ioqe_exciblockl                0x128\n\n/* Values for field \"ioqe_mqs_mqmd_originallength\" */\n#define ioqe_mqs_mqmd_length           0x16C\n\n/* Values for field \"ioqe_mqs_mqgmo_returnedlength\" */\n#define ioqe_mqs_mqgmo_length          0x64\n\n/* Values for field \"ioqe_bpx_tie\" */\n#define ioqe_tcpipblockl               0x48C\n\n/* Values for field \"ioqe_db2_prodb2__prof_msga\" */\n#define ioqe_db2_prodb2__prof_length   0x7C\n#define ioqe_db2blockl                 0x210\n\n/* Values for field \"ioqe_file_profile__prof_msga\" */\n#define ioqe_file_profile__prof_length 0x7C\n#define ioqe_fileblockl                0x22C\n\n/* Values for field \"ioqe_mqs_mqpmo_resolvedqmgrname\" */\n#define ioqe_mqs_mqpmo_length          0x80\n\n/* Values for field \"ioqe_mqs_cmtf\" */\n#define ioqe_cmtf_reset                0          /* reset                    */\n#define ioqe_cmtf_allocate             1          /* allocate                 */\n#define ioqe_cmtf_dealloc              2          /* first dealloc            */\n#define ioqe_cmtf_terminate            3          /* terminate                */\n#define ioqe_cmtf_commit               10         /* second , now need commit */\n#define ioqe_cmtf_commit_done          11         /* commit done              */\n#define ioqe_cmtf_rollback_done        12         /* rollback done            */\n\n/* Values for field \"ioqe_mqs_already_msg\" */\n#define ioqe_mqsblockl                 0x483\n\n/* Values for field \"ioqe_sapi_btoken\" */\n#define ioqe_sapiblockl                0x65C\n\n/* Values for field \"ioqe_mqs_mqmde_originallength\" */\n#define ioqe_mqs_mqmde_length          0x48\n\n/* Values for field \"ioqelbuf1\" */\n#define ioqe_max_buff                  32768      /* max buffer size          */\n#define ioqe_last_record_indicator     369        /* eof type                 */\n\n/* Values for field \"ioqe_mqs_query_mqod_resolvedqmgrname\" */\n#define ioqe_mqs_query_mqod_length     0x150\n\n/* Values for field \"ioqe_mqs_mqmd_saved_originallength\" */\n#define ioqe_mqs_mqmd_saved_length     0x16C\n\n/* Values for field \"ioqe_mqs_mqmd_saved_area\" */\n#define ioqelgth                       0x12000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ISISDEF": {"ttr": 7873, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_ISISDEF\n#define INCLUDE_ISISDEF\n        #define ISIS_PF_SID             \"mi\"\n        #define ISIS_PF_NAME            \"zOS\"\n        #define ISIS_PF_LID             IPL_OS390_ZOS\n        #define ISIS_PF_32BIT           1\n        #define ISIS_PF_BIGENDIAN       1\n        #define ISIS_PF_HOST            1\n        #define  ISIS_PF_POSIX           1 /*szm20041027*/\n        #define  ISIS_PF_POSIX_THR       1\n        #define  ISIS_PF_POSIX_TSH       1\n        #define  ISIS_PF_POSIX_CX        1\n        #define ISIS_PF_ATOMIC           1 /*szm20050308*/\n        #define  ISIS_PF_ATOMIC_COUNTER32 1\n        #undef  ISIS_PF_ATOMIC_COUNTER64\n        #define ISIS_PF_EBCDIC          1\n\t\t#define ISIS_EXT_C \t\t\textern \"C\"\n\t\t#define ISIS_EXT_ASM \t\textern \"OS_UPSTACK\"\n\t\t#define ISIS_EXT_C_START    extern \"C\" \u00e4\n        #define ISIS_EXT_C_END                 \u00fc\n\t\t/*\n  * distinction between different compilers at this platform\n  */\n        #ifdef __IBMCPP__\n            #define ISIS_PF_HOST_IBM    __IBMCPP__\n        #elif  __IBMC__\n            #define ISIS_PF_HOST_IBM   __IBMC__\n        #endif\n /*\n  * special characters for this platform\n  */\n        #define NOT\t    \t\t\t\t|\n        #define NEQ\t    \t\t\t\t|=\n  \t    #define _export _Export\n        #define ISIS_BOOLEAN        \t1   /* KV20030430 */\n        #define CHBSL\t    \t\t\t'/'\n        #define STBSL\t\t    \t\t\"/\"\n        #define CHPATHSEP               ':'     /* JRY 021030 Path element separator */\n        #define STPATHSEP               \":\"\n /*\n  * definition of compiler capabilities\n  */\n        #define ISIS_TEMPLATES          1\n        #define ISIS_NEWCASTS           1\n        #define ISIS_STL                1\n        #define ISIS_BOOLEAN            1\n        #define ISIS_EXPLICIT           1\n        #define ISIS_MUTABLE            1\n\n        #define _POSIX_SOURCE           1\n        #define _OPEN_THREADS           1\n        #define _OPEN_SYS_SOCK_EXT      1\n        #define _XOPEN_SOURCE_EXTENDED  1\n        #define _ALL_SOURCE             1\n        #define _VARARG_EXT_            1\n\n /*\n  * set old definitions for compatibility, DO NOT USE FOR NEW CODE\n  */\n    \t#define _SYS32_                 1\n        #define __SYS32__               1\n\n/*  oz070626 switching large file handling on +++++++++++++++++++++++ */\n        #ifndef USE_HUGE_FILES\n                #define USE_HUGE_FILES          1\n        #endif\n\n        #ifndef _LARGEFILE_SOURCE\n                #define _LARGEFILE_SOURCE       1\n        #endif\n\n        #ifndef _FILE_OFFSET_BITS\n                #define _FILE_OFFSET_BITS       64\n        #endif\n/******************************************************************************\n ** macros to correct inspection functions\n ******************************************************************************/\n#define i_isalpha(p)  isalpha((int)(unsigned char)(p))\n#define i_isupper(p)  isupper((int)(unsigned char)(p))\n#define i_islower(p)  islower((int)(unsigned char)(p))\n#define i_isdigit(p)  isdigit((int)(unsigned char)(p))\n#define i_isxdigit(p) isxdigit((int)(unsigned char)(p))\n#define i_isspace(p)  isspace((int)(unsigned char)(p))\n#define i_ispunct(p)  ispunct((int)(unsigned char)(p))\n#define i_isalnum(p)  isalnum((int)(unsigned char)(p))\n#define i_isprint(p)  isprint((int)(unsigned char)(p))\n#define i_isgraph(p)  isgraph((int)(unsigned char)(p))\n#define i_iscntrl(p)  iscntrl((int)(unsigned char)(p))\n#define i_toupper(p)  toupper((int)(unsigned char)(p))\n#define i_tolower(p)  tolower((int)(unsigned char)(p))\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IXGENF": {"ttr": 8591, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ixgenf \u00e4\n  struct \u00e4\n    unsigned char  _ixgenfacronym\u00c44\u00dc;     /* Eyecatcher C'ENF '                          */\n    unsigned char  _ixgenfcomponent\u00c45\u00dc;   /* Component Acronym                           */\n    unsigned char  _filler1\u00c43\u00dc;           /* Unused                                      */\n    struct \u00e4\n      unsigned char  _ixgenfeventsbyte0;\n      unsigned char  _ixgenfeventsbyte1;\n      unsigned char  _ixgenfeventsbyte2;\n      unsigned char  _ixgenfeventsbyte3;\n      \u00fc ixgenfevents;\n    struct \u00e4\n      unsigned char  _ixgenfeventreasonsbyte0;\n      unsigned char  _ixgenfeventreasonsbyte1;\n      unsigned char  _ixgenfeventreasonsbyte2;\n      unsigned char  _ixgenfeventreasonsbyte3;\n      \u00fc ixgenfeventreasons;\n    struct \u00e4\n      unsigned char  _ixgenfeventspecificinfobyte0;\n      unsigned char  _ixgenfeventspecificinfobyte1;\n      unsigned char  _ixgenfeventspecificinfobyte2;\n      unsigned char  _ixgenfeventspecificinfobyte3;\n      \u00fc ixgenfeventspecificinfo;\n    unsigned char  _ixgenfstrname\u00c416\u00dc;    /* Structure name that is the subject of the   */\n    int            _ixgenflogstreamcount; /* Number of log streams that are connected to */\n    unsigned char  _filler2\u00c416\u00dc;          /* Unused - Available                          */\n    \u00fc ixgenfcommon;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _ixgenfunion1;\n      unsigned char  _filler3\u00c4223\u00dc;\n      \u00fc _ixgenf_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ixgenfresmgrgmttimestamp\u00c48\u00dc;   /* Time stamp                                */\n        unsigned char  _ixgenfresmgrlogstreamname\u00c426\u00dc; /* log stream name                           */\n        unsigned char  _ixgenfresmgrname\u00c48\u00dc;           /* Resource Manager associated with this log */\n        unsigned char  _ixgenfresmgrdata\u00c48\u00dc;           /* Resource Manager Data.                    */\n        unsigned char  _ixgenfresmgrlsdescription\u00c416\u00dc; /* Description associated with the log       */\n        unsigned char  _ixgenfresmgrabendcode\u00c44\u00dc;      /* Copy of SDWAABCC if an sdwa was available */\n        \u00fc ixgenfresmgrdisabled;\n      unsigned char  _filler4\u00c4154\u00dc;\n      \u00fc _ixgenf_struct2;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ixgenfinventorygmttimestamp\u00c48\u00dc;     /* Time stamp                            */\n        unsigned char  _ixgenfinventorysysname\u00c48\u00dc;          /* System name on which the define or    */\n        unsigned char  _ixgenfinventorylogstreamname\u00c426\u00dc;   /* Log stream name                       */\n        unsigned char  _ixgenfinventorylogstreamdeftime\u00c48\u00dc; /* Set to binary zeroes for log          */\n        unsigned char  _ixgenfinventoryresmgrname\u00c48\u00dc;       /* Resource Manager associated with this */\n        unsigned char  _ixgenfinventorystructname\u00c416\u00dc;      /* CF structure name to which the log    */\n        struct \u00e4\n          unsigned char  _ixgenfinventoryflags0; /* Flags byte 0 */\n          unsigned char  _ixgenfinventoryflags1; /* Flags byte 1 */\n          \u00fc ixgenfinventoryflags;\n        unsigned char  _ixgenfinventorystgdataclas\u00c48\u00dc;      /* Data class for staging data sets      */\n        unsigned char  _ixgenfinventorystgmgmtclas\u00c48\u00dc;      /* Mgmt class for staging data sets      */\n        unsigned char  _ixgenfinventorystgstorclas\u00c48\u00dc;      /* Storage class for staging data sets   */\n        unsigned char  _ixgenfinventorylsdataclas\u00c48\u00dc;       /* Data class for log stream data sets   */\n        unsigned char  _ixgenfinventorylsmgmtclas\u00c48\u00dc;       /* Mgmt class for log stream data sets   */\n        unsigned char  _ixgenfinventorylsstorclas\u00c48\u00dc;       /* Storage class for log stream data     */\n        int            _ixgenfinventorylowoffload;          /* Low offload threshold                 */\n        int            _ixgenfinventoryhighoffload;         /* High offload threshold                */\n        unsigned char  _ixgenfinventorylsdescription\u00c416\u00dc;   /* Logstream description                 */\n        \u00fc ixgenfinventorydefupdate1;\n      struct \u00e4\n        struct \u00e4\n          unsigned char  _ixgenfinventorypendupdflags0; /* Flags 0 */\n          unsigned char  _ixgenfinventorypendupdflags1; /* Flags 1 */\n          unsigned char  _ixgenfinventorypendupdflags2; /* Flags 2 */\n          unsigned char  _filler5\u00c45\u00dc;\n          \u00fc ixgenfinventorypendupdflags;\n        int            _ixgenfinventorylssize;     /* LS_Size    */\n        int            _ixgenfinventorystgsize;    /* Stg_Size   */\n        int            _ixgenfinventorymaxbufsize; /* MaxBufSize */\n        struct \u00e4\n          unsigned char  _filler6;                   /* Reserved         */\n          int            _ixgenfinventoryretpd : 24; /* Retention period */\n          \u00fc ixgenfinventoryfw1;\n        unsigned char  _ixgenfinventoryehlq\u00c433\u00dc;   /* Ehlq/Hlq   */\n        unsigned char  _ixgenfinventorygroup\u00c48\u00dc;   /* Group      */\n        unsigned char  _ixgenfinventoryrsvd\u00c411\u00dc;   /* Reserved   */\n        \u00fc ixgenfinventoryext1area;\n      \u00fc ixgenfinventorydefupdate;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ixgenfinventorydelgmttimestamp\u00c48\u00dc;   /* Time stamp                          */\n        unsigned char  _ixgenfinventorydelsysname\u00c48\u00dc;        /* System name on which the log stream */\n        unsigned char  _ixgenfinventorydellogstreamname\u00c426\u00dc; /* Log stream name                     */\n        unsigned char  _ixgenfinventorydelresmgrname\u00c48\u00dc;     /* Resource Manager Name               */\n        \u00fc ixgenfinventorydelete;\n      unsigned char  _filler7\u00c4174\u00dc;\n      \u00fc _ixgenf_struct3;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ixgenfconndiscsysname\u00c48\u00dc;          /* System name on which the connect or     */\n        unsigned char  _ixgenfconndiscgmttimestamp\u00c48\u00dc;     /* Time stamp Set for both connect and     */\n        unsigned char  _ixgenfconndisclogstreamname\u00c426\u00dc;   /* log stream name. Set for both           */\n        unsigned char  _ixgenfconndisclogstreamdeftime\u00c48\u00dc; /* Set to binary zeroes for log            */\n        struct \u00e4\n          unsigned char  _ixgenfconndisclogstreaminsver\u00c48\u00dc; /* Alternate name for DASD only log */\n          \u00fc ixgenfconndisclogstreamstrver;\n        unsigned char  _ixgenfconndiscresmgrname\u00c48\u00dc;       /* Resource Manager associated with this   */\n        unsigned char  _ixgenfconndiscresmgrdata\u00c48\u00dc;       /* Resource Manager Data. Contains valid   */\n        unsigned char  _ixgenfconndiscresmgrevents;        /* Monitored events. Contains valid data   */\n        unsigned char  _ixgenfconndiscflags;               /* Additional flags                        */\n        int            _ixgenfconndiscnumofreads;          /* Number of read connections to this log  */\n        int            _ixgenfconndiscnumofwrites;         /* Number of write connections to this log */\n        unsigned char  _ixgenfconndisclsdescription\u00c416\u00dc;   /* LS Description data specified when      */\n        struct \u00e4\n          struct \u00e4\n            unsigned char  _ixgenfconndisclogstreamphysinsver\u00c48\u00dc; /* Alternate name for DASD only */\n            \u00fc ixgenfconndisclogstreamphysstrver;\n          unsigned char  _ixgenfconndisclogstreamphysstr2ver\u00c48\u00dc; /* Second physical structure */\n          \u00fc ixgenfconndisclogstreamphysstrsvers;\n        struct \u00e4\n          short int      _ixgenfconndisccount; /* The number of connections to this log stream */\n          \u00fc ixgenfconndiscdisconninfo;\n        \u00fc ixgenfconndiscinfo;\n      unsigned char  _filler8\u00c4106\u00dc;\n      \u00fc _ixgenf_struct4;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ixgenfwroffloadgmttimestamp\u00c48\u00dc;    /* Time stamp                       */\n        unsigned char  _ixgenfwroffloadlogstreamname\u00c426\u00dc;  /* log stream name                  */\n        unsigned char  _ixgenfwroffloadsafeimportpoint\u00c48\u00dc; /* Highest log block id, that is no */\n        \u00fc ixgenfwroffloadinfo;\n      unsigned char  _filler9\u00c4182\u00dc;\n      \u00fc _ixgenf_struct5;\n    struct \u00e4\n      unsigned char  _ixgenflogstreamnames\u00c426\u00dc; /* Name(s) of log streams that are connected */\n      unsigned char  _ifbnt_dsnlogrec\u00c416\u00dc;      /* System level                              */\n      unsigned char  _filler10\u00c4182\u00dc;\n      \u00fc _ixgenf_struct6;\n    \u00fc _ixgenf_union1;\n  \u00fc;\n\n#define ixgenfacronym                      ixgenfcommon._ixgenfacronym\n#define ixgenfcomponent                    ixgenfcommon._ixgenfcomponent\n#define ixgenfeventsbyte0                  ixgenfcommon.ixgenfevents._ixgenfeventsbyte0\n#define ixgenfeventsbyte1                  ixgenfcommon.ixgenfevents._ixgenfeventsbyte1\n#define ixgenfeventsbyte2                  ixgenfcommon.ixgenfevents._ixgenfeventsbyte2\n#define ixgenfeventsbyte3                  ixgenfcommon.ixgenfevents._ixgenfeventsbyte3\n#define ixgenfeventreasonsbyte0            ixgenfcommon.ixgenfeventreasons._ixgenfeventreasonsbyte0\n#define ixgenfeventreasonsbyte1            ixgenfcommon.ixgenfeventreasons._ixgenfeventreasonsbyte1\n#define ixgenfeventreasonsbyte2            ixgenfcommon.ixgenfeventreasons._ixgenfeventreasonsbyte2\n#define ixgenfeventreasonsbyte3            ixgenfcommon.ixgenfeventreasons._ixgenfeventreasonsbyte3\n#define ixgenfeventspecificinfobyte0       ixgenfcommon.ixgenfeventspecificinfo._ixgenfeventspecificinfobyte0\n#define ixgenfeventspecificinfobyte1       ixgenfcommon.ixgenfeventspecificinfo._ixgenfeventspecificinfobyte1\n#define ixgenfeventspecificinfobyte2       ixgenfcommon.ixgenfeventspecificinfo._ixgenfeventspecificinfobyte2\n#define ixgenfeventspecificinfobyte3       ixgenfcommon.ixgenfeventspecificinfo._ixgenfeventspecificinfobyte3\n#define ixgenfstrname                      ixgenfcommon._ixgenfstrname\n#define ixgenflogstreamcount               ixgenfcommon._ixgenflogstreamcount\n#define ixgenfunion1                       _ixgenf_union1._ixgenf_struct1._ixgenfunion1\n#define ixgenfresmgrgmttimestamp           _ixgenf_union1._ixgenf_struct2.ixgenfresmgrdisabled._ixgenfresmgrgmttimestamp\n#define ixgenfresmgrlogstreamname          _ixgenf_union1._ixgenf_struct2.ixgenfresmgrdisabled._ixgenfresmgrlogstreamname\n#define ixgenfresmgrname                   _ixgenf_union1._ixgenf_struct2.ixgenfresmgrdisabled._ixgenfresmgrname\n#define ixgenfresmgrdata                   _ixgenf_union1._ixgenf_struct2.ixgenfresmgrdisabled._ixgenfresmgrdata\n#define ixgenfresmgrlsdescription          _ixgenf_union1._ixgenf_struct2.ixgenfresmgrdisabled._ixgenfresmgrlsdescription\n#define ixgenfresmgrabendcode              _ixgenf_union1._ixgenf_struct2.ixgenfresmgrdisabled._ixgenfresmgrabendcode\n#define ixgenfinventorygmttimestamp        _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorygmttimestamp\n#define ixgenfinventorysysname             _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorysysname\n#define ixgenfinventorylogstreamname       _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylogstreamname\n#define ixgenfinventorylogstreamdeftime    _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylogstreamdeftime\n#define ixgenfinventoryresmgrname          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventoryresmgrname\n#define ixgenfinventorystructname          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorystructname\n#define ixgenfinventoryflags0              _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1.ixgenfinventoryflags._ixgenfinventoryflags0\n#define ixgenfinventoryflags1              _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1.ixgenfinventoryflags._ixgenfinventoryflags1\n#define ixgenfinventorystgdataclas         _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorystgdataclas\n#define ixgenfinventorystgmgmtclas         _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorystgmgmtclas\n#define ixgenfinventorystgstorclas         _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorystgstorclas\n#define ixgenfinventorylsdataclas          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylsdataclas\n#define ixgenfinventorylsmgmtclas          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylsmgmtclas\n#define ixgenfinventorylsstorclas          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylsstorclas\n#define ixgenfinventorylowoffload          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylowoffload\n#define ixgenfinventoryhighoffload         _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventoryhighoffload\n#define ixgenfinventorylsdescription       _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventorydefupdate1._ixgenfinventorylsdescription\n#define ixgenfinventorypendupdflags0       _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area.ixgenfinventorypendupdflags._ixgenfinventorypendupdflags0\n#define ixgenfinventorypendupdflags1       _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area.ixgenfinventorypendupdflags._ixgenfinventorypendupdflags1\n#define ixgenfinventorypendupdflags2       _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area.ixgenfinventorypendupdflags._ixgenfinventorypendupdflags2\n#define ixgenfinventorylssize              _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area._ixgenfinventorylssize\n#define ixgenfinventorystgsize             _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area._ixgenfinventorystgsize\n#define ixgenfinventorymaxbufsize          _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area._ixgenfinventorymaxbufsize\n#define ixgenfinventoryretpd               _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area.ixgenfinventoryfw1._ixgenfinventoryretpd\n#define ixgenfinventoryehlq                _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area._ixgenfinventoryehlq\n#define ixgenfinventorygroup               _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area._ixgenfinventorygroup\n#define ixgenfinventoryrsvd                _ixgenf_union1.ixgenfinventorydefupdate.ixgenfinventoryext1area._ixgenfinventoryrsvd\n#define ixgenfinventorydelgmttimestamp     _ixgenf_union1._ixgenf_struct3.ixgenfinventorydelete._ixgenfinventorydelgmttimestamp\n#define ixgenfinventorydelsysname          _ixgenf_union1._ixgenf_struct3.ixgenfinventorydelete._ixgenfinventorydelsysname\n#define ixgenfinventorydellogstreamname    _ixgenf_union1._ixgenf_struct3.ixgenfinventorydelete._ixgenfinventorydellogstreamname\n#define ixgenfinventorydelresmgrname       _ixgenf_union1._ixgenf_struct3.ixgenfinventorydelete._ixgenfinventorydelresmgrname\n#define ixgenfconndiscsysname              _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscsysname\n#define ixgenfconndiscgmttimestamp         _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscgmttimestamp\n#define ixgenfconndisclogstreamname        _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndisclogstreamname\n#define ixgenfconndisclogstreamdeftime     _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndisclogstreamdeftime\n#define ixgenfconndisclogstreaminsver      _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo.ixgenfconndisclogstreamstrver._ixgenfconndisclogstreaminsver\n#define ixgenfconndiscresmgrname           _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscresmgrname\n#define ixgenfconndiscresmgrdata           _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscresmgrdata\n#define ixgenfconndiscresmgrevents         _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscresmgrevents\n#define ixgenfconndiscflags                _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscflags\n#define ixgenfconndiscnumofreads           _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscnumofreads\n#define ixgenfconndiscnumofwrites          _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndiscnumofwrites\n#define ixgenfconndisclsdescription        _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo._ixgenfconndisclsdescription\n#define ixgenfconndisclogstreamphysinsver  _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo.ixgenfconndisclogstreamphysstrsvers.ixgenfconndisclogstreamphysstrver._ixgenfconndisclogstreamphysinsver\n#define ixgenfconndisclogstreamphysstr2ver _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo.ixgenfconndisclogstreamphysstrsvers._ixgenfconndisclogstreamphysstr2ver\n#define ixgenfconndisccount                _ixgenf_union1._ixgenf_struct4.ixgenfconndiscinfo.ixgenfconndiscdisconninfo._ixgenfconndisccount\n#define ixgenfwroffloadgmttimestamp        _ixgenf_union1._ixgenf_struct5.ixgenfwroffloadinfo._ixgenfwroffloadgmttimestamp\n#define ixgenfwroffloadlogstreamname       _ixgenf_union1._ixgenf_struct5.ixgenfwroffloadinfo._ixgenfwroffloadlogstreamname\n#define ixgenfwroffloadsafeimportpoint     _ixgenf_union1._ixgenf_struct5.ixgenfwroffloadinfo._ixgenfwroffloadsafeimportpoint\n#define ixgenflogstreamnames               _ixgenf_union1._ixgenf_struct6._ixgenflogstreamnames\n#define ifbnt_dsnlogrec                    _ixgenf_union1._ixgenf_struct6._ifbnt_dsnlogrec\n\n/* Values for field \"ixgenfeventsbyte0\" */\n#define ixgenfsystemloggeravail               0x80       /* MVS System Logger Services                 */\n#define ixgenfsystemloggernotavailforipl      0x40       /* MVS System Logger Services                 */\n#define ixgenflogstreamsavailable             0x20       /* Logstream resources mapped to the          */\n#define ixgenflogstreamsnotavailable          0x10       /* Logstream resources mapped to              */\n#define ixgenflogstreamresourcechange         0x08       /* A change in the state of the               */\n#define ixgenfsystemloggerresourcechg         0x04       /* A change in the state of                   */\n#define ixgenflogstreamconndisc               0x02       /* A connection to or a disconnection         */\n\n/* Values for field \"ixgenfeventsbyte1\" */\n#define ixgenflogstreamdefupdate              0x80       /* Either a log stream has been               */\n#define ixgenflogstreamdelete                 0x40       /* Log stream definition deleted from         */\n#define ixgenflogstreamoffloadcomplete        0x20       /* A writer offload event for                 */\n#define ixgenfrmdisabled                      0x10       /* The resource manager associated with the   */\n\n/* Values for field \"ixgenfeventreasonsbyte0\" */\n#define ixgenfstrrebuildstart                 0x80       /* Structure Rebuild processing for a log     */\n#define ixgenfstrrebuildcomplete              0x40       /* Structure Rebuild processing for a         */\n#define ixgenfstrrebuildfailed                0x20       /* Structure Rebuild processing has           */\n#define ixgenfstagingdsstorageavailable       0x10       /* Reclamation of staging data                */\n#define ixgenflogstreamstorageavailable       0x08       /* Migration of logstream data                */\n#define ixgenflossofdata                      0x04       /* A loss of data condition may exist for the */\n#define ixgenfcfresourcechange                0x02       /* A change in the state of coupling          */\n#define ixgenfxesrecommendaction              0x01       /* A XES Recommend Action event was           */\n\n/* Values for field \"ixgenfeventreasonsbyte1\" */\n#define ixgenfcomponenterror                  0x80       /* A system logger component error has        */\n#define ixgenfstrresourcechange               0x40       /* Resources in the structure named in        */\n#define ixgenfreqlogresnotavail               0x20       /* Logger required resources are not          */\n#define ixgenfloggernotavailxcflocal          0x10       /* PLEXCFG=XCFLOCAL, not in                   */\n#define ixgenfloggernotavailnostart           0x08       /* IXGLOGR=NOSTART on LOGR subsys             */\n#define ixgenfsetlogrforcedisconnect          0x04       /* Force Disconnect operation has             */\n#define ixgenfsystemleveldisc                 0x02       /* The disconnect event is for a system       */\n#define ixgenfsetlogrforcedelete              0x01       /* Force Delete operation has                 */\n\n/* Values for field \"ixgenfeventspecificinfobyte0\" */\n#define ixgenfstrrebuildfaillossconn          0x80       /* This bit is only valid when                */\n#define ixgenfstrrebuildfailstrfail           0x40       /* This bit is only valid when                */\n#define ixgenfstrrebuildcfduplex              0x20       /* On = CF Auto-duplex rebuild is in          */\n#define ixgenflossofconnectivity              0x10       /* This bit is only valid when                */\n#define ixgenflogstreamdisconnected           0x08       /* This bit is only valid when                */\n#define ixgenfstgallocerr                     0x04       /* Staging Data set could not be allocated    */\n\n/* Values for field \"ixgenfinventoryflags0\" */\n#define ixgenfinventorydefinereq              0x80       /* If set, request is to define a log         */\n#define ixgenfinventoryupdatereq              0x40       /* If set, request is to update the           */\n#define ixgenfinventorystgduplexyes           0x20       /* If set, STG_DUPLEX=YES in                  */\n#define ixgenfinventorystgmodecond            0x10       /* If set, DuplexMode=Cond in                 */\n#define ixgenfinventorymodelyes               0x08       /* If set, this is a log stream model         */\n#define ixgenfinventorydasdonlyyes            0x04       /* If set, this is a DASD only log            */\n#define ixgenfinventoryloggerduplexcond       0x02       /* If set, LOGGERDUPLEX=COND is               */\n#define ixgenfinventoryext1                   0x01       /* If set, IxgenfInventoryExt1Area section    */\n\n/* Values for field \"ixgenfinventoryflags1\" */\n#define ixgenfinventoryautodelete             0x80       /* If set, AutoDelete(Yes)                    */\n#define ixgenfinventoryoffrecall              0x40       /* If set, OffloadRecall(Yes)                 */\n#define ixgenfinventorystgmodedrxrc           0x20       /* If set, DuplexMode=DRXRC in                */\n\n/* Values for field \"ixgenfinventorypendupdflags0\" */\n#define ixgenfinventoryretpdpendupd           0x80\n#define ixgenfinventoryautodeletependupd      0x40\n#define ixgenfinventoryoffloadrecallpendupd   0x20\n#define ixgenfinventorylssizependupd          0x10\n#define ixgenfinventorylsdataclaspendupd      0x08\n#define ixgenfinventorylsmgmtclaspendupd      0x04\n#define ixgenfinventorylsstorclaspendupd      0x02\n#define ixgenfinventorylowoffloadpendupd      0x01\n\n/* Values for field \"ixgenfinventorypendupdflags1\" */\n#define ixgenfinventoryhighoffloadpendupd     0x80\n#define ixgenfinventorystgsizependupd         0x40\n#define ixgenfinventorystgdataclaspendupd     0x20\n#define ixgenfinventorystgmgmtclaspendupd     0x10\n#define ixgenfinventorystgstorclaspendupd     0x08\n#define ixgenfinventorymaxbufsizependupd      0x04\n#define ixgenfinventoryloggerduplexpendupd    0x02\n#define ixgenfinventorystgduplexyespendupd    0x01\n\n/* Values for field \"ixgenfinventorypendupdflags2\" */\n#define ixgenfinventoryduplexmodecondpendupd  0x80\n#define ixgenfinventoryduplexmodedrxrcpendupd 0x40\n\n/* Values for field \"ixgenfconndiscresmgrevents\" */\n#define ixgenfconndisclbwrites                0x80       /* If set, the resource manager is            */\n#define ixgenfconndisclbdeletes               0x40       /* If set, the resource manager is            */\n\n/* Values for field \"ixgenfconndiscflags\" */\n#define ixgenfconndiscauthread                0x80       /* If set then AUTH=READ specified on         */\n#define ixgenfconndiscauthwrite               0x40       /* If set then AUTH=WRITE specified on        */\n#define ixgenfconndiscresmgrmanaged           0x20       /* If set, RMNAME keuword specified           */\n#define ixgenfconndiscresmgrconnected         0x10       /* If set, resource manager is                */\n#define ixgenfconndiscconnect                 0x08       /* If set, this parmlist represents a         */\n#define ixgenfconndiscdisconnect              0x04       /* If set, this parmlist represents a         */\n#define ixgenfconndiscusingphysstr            0x02       /* On = using physical structure              */\n#define ixgenfconndiscusingphysstr2           0x01       /* On = using second physical                 */\n\n/* Values for field \"ixgenflogstreamnames\" */\n#define ixgenfeyecatcher                      0xC5D5C640\n#define ixgenf_len                            0x56\n\n/* Values for field \"ifbnt_dsnlogrec\" */\n#define ifbnt_version1                        0x01       /* First version of IFBNT_TOKEN               */\n#define ifbnt_version2                        0x02       /* Second version of IFBNT_TOKEN              */\n#define ifbnt_latest_version                  0x02       /* Latest version of IFBNT_TOKEN              */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IXLYCFSE": {"ttr": 8655, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ixlycfse \u00e4\n  unsigned char  ixlycfseacronym\u00c44\u00dc;   /* Eyecatcher C'ENF '                         */\n  unsigned char  ixlycfsecomponent\u00c45\u00dc; /* Component acronym                          */\n  unsigned char  _filler1\u00c43\u00dc;          /* Unused                                     */\n  unsigned char  _filler2\u00c44\u00dc;          /* Unused                                     */\n  unsigned char  ixlycfsetype\u00c44\u00dc;      /* Type of change that occurred to the device */\n  short int      ixlycfsesubchannel;   /* Subchannel number                          */\n  short int      ixlycfsedevc;         /* Device number                              */\n  unsigned char  _filler3\u00c440\u00dc;         /* Unused                                     */\n  \u00fc;\n\n/* Values for field \"_filler3\" */\n#define ixlycfsetypeipi    0xC9D7C940\n#define ixlycfsetypeipm    0xC9D7D440\n#define ixlycfseeyecatcher 0xC3C6E2C5 /* Eyecatcher */\n#define ixlycfse_len       0x40\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "JES": {"ttr": 8187, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct jes \u00e4\n  void          *jes_save\u00c418\u00dc;         /* save in JES           */\n  void          *jes_qcvt;             /* QFSS CVT              */\n  void          *jes_jes;              /* own address           */\n  void          *jes_qsam;             /* QSAM address          */\n  void          *jes_ioqe;             /* IOQE address          */\n  void          *jes_sapi;             /* SAPI address          */\n  void          *jes_baseregs\u00c44\u00dc;      /* base regs             */\n  void          *jes_crab;             /* CRAB pointer          */\n  void          *jes_parmlist\u00c48\u00dc;      /* parmlist              */\n  short int      jes_cparml;           /* list length           */\n  unsigned char  jes_cparm\u00c432\u00dc;        /* parms for C           */\n  unsigned char  jes_function\u00c48\u00dc;      /* function name         */\n  unsigned char  _filler1;             /* terminator            */\n  unsigned char  _filler2;\n  void          *jes_parms\u00c48\u00dc;         /* parameters            */\n  void          *jes_sjf;              /* SJF address           */\n  void          *jes_uparm;            /* UPARM address         */\n  void          *jes_debug;            /* debug flag            */\n  struct \u00e4\n    unsigned char  ___msg_msgid\u00c44\u00dc; /* message id */\n    \u00fc jes_msg;\n  void          *__msg_insert\u00c416\u00dc;     /* message insert list   */\n  void          *__msg_global;         /* global addr           */\n  unsigned char  __msg_hexsw;          /* hexa switch           */\n  unsigned char  __msg_wto;            /* wto switch            */\n  unsigned char  __msg_log;            /* log switch            */\n  unsigned char  __msg_asacc;          /* asa contol char       */\n  unsigned char  __msg_trc;            /* set TRC               */\n  short int      __msg_desc;           /* descriptor code       */\n  short int      __msg_routcde\u00c43\u00dc;     /* route code            */\n  unsigned char  __msg_pref;           /* control char prefix   */\n  unsigned char  __msg_date\u00c49\u00dc;        /* date filed            */\n  unsigned char  __msg_time\u00c414\u00dc;       /* time stemp            */\n  unsigned char  __msg_extr\u00c4140\u00dc;      /* extract buffer        */\n  unsigned char  jes_jesname\u00c44\u00dc;       /* actual subsystem name */\n  unsigned char  jes_disposition\u00c4128\u00dc; /* disposition values    */\n  unsigned char  _filler3\u00c43\u00dc;\n  void          *jes_count;            /* count reply           */\n  unsigned char  jes_browse_status;    /* browse status         */\n  unsigned char  jes_ctoken\u00c480\u00dc;       /* CTOKEN AREA           */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _jes_work\u00c4512\u00dc; /* work area */\n      unsigned char  _filler4\u00c4544\u00dc;\n      \u00fc _jes_struct1;\n    struct \u00e4\n      unsigned char  _jes_keyword\u00c432\u00dc; /* keyword */\n      unsigned char  _jes_value\u00c41024\u00dc; /* value   */\n      \u00fc _jes_struct2;\n    struct \u00e4\n      unsigned char  _filler5\u00c43\u00dc;\n      void          *_jes_espie_token;         /* ESPIE token                 */\n      struct \u00e4\n        void          *_filler6;  /* USER EXIT ROUTINE ADDRESS */\n        \u00fc jes_espie_l;\n      void          *_filler7;                 /* USER PARAMETER LIST ADDRESS */\n      unsigned char  _filler8\u00c42\u00dc;              /* INTERRUPTION MASK           */\n      unsigned char  _filler9\u00c42\u00dc;\n      void          *_filler10;                /* RESERVED                    */\n      short int      _m00m0007;                /* BPXESMF-0                   */\n      unsigned char  _filler11\u00c42\u00dc;\n      struct \u00e4\n        void          *_jes_bpxesmf_l_xversion_; /* ++ INPUT XL1    */\n        void          *_jes_bpxesmf_l_xacctdat_; /* ++ OUTPUT CL256 */\n        \u00fc jes_bpxesmf_l;\n      void          *_jes_bpxesmf_l_xascbptr_; /* ++ INPUT A                  */\n      void          *_jes_rc;                  /* BPXESMF return code         */\n      unsigned char  _filler12\u00c41013\u00dc;\n      \u00fc _jes_struct3;\n    \u00fc _jes_union1;\n  unsigned char  _filler13\u00c43\u00dc;\n  void          *jes_value_length;     /* length                */\n  unsigned char  jes_buffer\u00c480\u00dc;       /* buffer                */\n  unsigned char  jes_jobid\u00c480\u00dc;        /* buffer                */\n  \u00fc;\n\n#define __msg_msgid             jes_msg.___msg_msgid\n#define jes_work                _jes_union1._jes_struct1._jes_work\n#define jes_keyword             _jes_union1._jes_struct2._jes_keyword\n#define jes_value               _jes_union1._jes_struct2._jes_value\n#define jes_espie_token         _jes_union1._jes_struct3._jes_espie_token\n#define m00m0007                _jes_union1._jes_struct3._m00m0007\n#define jes_bpxesmf_l_xversion_ _jes_union1._jes_struct3.jes_bpxesmf_l._jes_bpxesmf_l_xversion_\n#define jes_bpxesmf_l_xacctdat_ _jes_union1._jes_struct3.jes_bpxesmf_l._jes_bpxesmf_l_xacctdat_\n#define jes_bpxesmf_l_xascbptr_ _jes_union1._jes_struct3._jes_bpxesmf_l_xascbptr_\n#define jes_rc                  _jes_union1._jes_struct3._jes_rc\n\n/* Values for field \"jes_browse_status\" */\n#define jes_browse_nowait 0x40  /* nowait flag   */\n#define jes_browse_listen 0x20  /* listen issued */\n\n/* Values for field \"jes_jobid\" */\n#define jes_work_l        0x4C7 /* length        */\n#define jes_length        0x784 /* dsect length  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "JESI": {"ttr": 8547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_JESI\n#define INCLUDE_JESI\n#include \"ppdecvt.hpp\"\n#ifdef __msg_msgid\n#undef __msg_msgid\n#endif\n#include \"jes.hpp\"\n#ifdef __msg_msgid\n#undef __msg_msgid\n#endif\n#include \"sss2.hpp\"\n#ifdef __msg_msgid\n#undef __msg_msgid\n#endif\n#include \"sapisel.hpp\"\n#include \"sapiinfo.hpp\"\n#include \"ioqe.hpp\"\n#ifdef __msg_msgid\n#undef __msg_msgid\n#endif\n\n\ntypedef struct sss2 SSS2;\ntypedef SSS2* pSSS2;\ntypedef struct sapisel SAPISEL;\ntypedef SAPISEL* pSAPISEL;\ntypedef struct sapiinfo SAPIINFO;\ntypedef SAPIINFO* pSAPIINFO;\ntypedef ioqedsect IOQE;\ntypedef IOQE* pIOQE;\ntypedef struct qfsscvt QFSSCVT;\ntypedef QFSSCVT * pQFSSCVT;\n\ntypedef struct sapi\n  \u00e4\n  pSSS2     sss2;\n  pSAPISEL  sel;\n  pSAPIINFO info;\n  char      ddname\u00c49\u00dc;\n   \u00fc SAPI;\n\n\ntypedef SAPI * pSAPI;\ntypedef struct jes JES;\ntypedef JES * pJES;\n\nISIS_EXT_ASM int QFSSJES(JES *);\n\n#ifndef   MaxBuffSize\n  #define   MaxBuffSize  32760\n#endif\n#ifndef   MinBufferSize\n  #define   MinBufferSize 4096\n#endif\n\n\n#define JesiOpen      \"OPEN\"\n#define JesiClose     \"CLOSE\"\n#define JesiCleanup   \"CLEANUP\" //szm\n#define InitSapi      \"INITSAPI\"\n#define NextSapi      \"NEXTSAPI\"\n#define TermSapi      \"TERMSAPI\"\n#define WaitSapi      \"WAITSAPI\"\n#define CountSapi     \"COUNTSAP\" //szm\n#define BrowseSapi    \"BROWSESA\" //szm\n#define SelectSapi    \"SELECTSA\" //szm\n#define InitIntr      \"INITINTR\"\n#define NextIntr      \"NEXTINTR\"\n#define TermIntr      \"TERMINTR\"\n#define KeyParm       \"KEYUPARM\"\n#define NextParm      \"NEXTUPARM\"\n#define UseSDSB       \"USESDSB \" //szm\n#define BPXESMF       \"BPXESMF\"  //szm\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JOBENV": {"ttr": 8519, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/jobenv.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_JOBENV\n#define INCLUDE_JOBENV\n\n#include \"mvsbase.hpp\"\n\nclass JOBENV\n\u00e4\npublic:\nenum JOBENV_ACTION\n\u00e4\n\tAbort,\n   Continue\n\u00fc;\npublic:\n    mvsSTRING jobName;\n    mvsSTRING jobId;\n    mvsSTRING stepName;\n    mvsSTRING procStepName;\n    mvsSTRING program;\n\t\tmvsSTRING programRb;\n    static int  debug;\npublic:\n    JOBENV(char *);\n    \u00dfJOBENV()\u00e4\u00fc\n    void print();\n    void static Error(char *,JOBENV_ACTION);\n    int  static DEBUG(int,char*);\n    int  static DEBUG(int,char*,int);\n    int  static DEBUG(int,size_t);\n    int  static DEBUG(int,char*,char*);\n    int  static DEBUG(int,char*,char*,char*);\n    int  static DEBUG(int,char*,char*,char*,char*);\n    int  static DEBUG(int,char*,char *,int);\n\u00fc;\n\nextern JOBENV * jobEnv;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KSDS": {"ttr": 8151, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma title(\"                                                    \")\n/*--------------------------------------------------------------------+\n|                                                                     |\n+--------------------------------------------------------------------*/\n#ifndef _KSDS\n  #define _KSDS\n  #ifdef CICSAPPL\n  #include \"cics.hpp\"\n  #endif\n  #ifndef CICSAPPL\n  #include \"tsodll.hpp\"\n  #endif\n#endif\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "MCALDLL": {"ttr": 8071, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _MCALDLL\n  #define _MCALDLL\n\n  #include <stdlib.h>\n  #include <string.h>\n  #include <setjmp.h>\n\n  #if ISIS_PF_HOST_SASC\n  typedef void (*PFN_DLL)();            //Pointer to function in DLL\n  #else\n  extern \"C\" \u00e4\n    typedef void (*PFN_DLL)();            //Pointer to function in DLL\n  \u00fc\n  #endif\n  #ifndef NEQ\n    #ifdef ISIS_PF_HOST_IBM\n    #define NEQ |=\n    #else\n    #define NEQ !=\n    #endif\n  #endif\n\n  #define MAXFUNCTIONS 128\n  typedef enum STATUS \u00e4 INIT, JUMPBACK, TERMINATE\u00fc status ;\n  typedef unsigned long HANDLE;\n\n  class FunctionVector\n  \u00e4\n     PFN_DLL Function\u00c4MAXFUNCTIONS\u00dc;\n   char *          Name\u00c4MAXFUNCTIONS\u00dc;\n   int  index ;\n  public:\n   FunctionVector()\u00e4index = 0;\u00fc\n   int getIndex()\u00e4return index;\u00fc\n   \u00dfFunctionVector()\u00e4\u00fc\n   void Add(PFN_DLL function, char * name)\n   \u00e4\n        Function\u00c4index\u00dc = function;\n        Name\u00c4index\u00dc   = name ;\n        index ++;\n        if ( index > MAXFUNCTIONS ) abort();\n        else return ;\n   \u00fc\n\n   PFN_DLL Search(char * name)\n   \u00e4\n    for (int i = 0;i<index;i++)\n    if (strcmp(name,Name\u00c4i\u00dc) == 0)\n     return Function\u00c4i\u00dc ;\n    return 0;\n   \u00fc\n   PFN_DLL Call(int i )\n   \u00e4\n    return Function\u00c4i\u00dc;\n   \u00fc\n   PFN_DLL Search(int id)\n   \u00e4\n    if (id<index)\n     return Function\u00c4id\u00dc ;\n    else\n     return 0;\n   \u00fc\n\n  \u00fc ;\n\n\n  class MVSDLL\n  \u00e4\n  protected:\n   FunctionVector * FVP ;\n   jmp_buf          env;\n   int (*dynaload)(status, jmp_buf *);\n  unsigned long handle;          //DLL Handle (if loaded)\n  unsigned long hinsta;          //CallerModuleHandle/Instance handl    e\n  char         name\u00c4260\u00dc;        //DLL Name / Error Name of load\n  public:\n  MVSDLL(char *name,\n    unsigned long hinstance);\n  \u00dfMVSDLL();\n  PFN_DLL GetProcAddress(unsigned long hndl,char * n)\n  \u00e4\n    handle = hndl ;\n    return FVP->Search(n);\n  \u00fc\n  PFN_DLL call(char *);\n  PFN_DLL call(int i)\n  \u00e4\n    return FVP->Call(i);\n  \u00fc\n  PFN_DLL QueryProcedure(char *, int = 0);\n  char *Name()\u00e4return(name);\u00fc\n  unsigned long Handle()\u00e4return(handle);\u00fc //Loaded Module Handle\n  unsigned long CallHandle()\u00e4return(hinsta);\u00fc //Caller Module Handle (directory)\n  int Ok()\u00e4return(handle NEQ 0);\u00fc\n  static void ModuleName(unsigned long handle,int bl,char *buff);\n  \u00fc;\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MCHAIN": {"ttr": 8647, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mchain.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MCHAIN\n#define INCLUDE_MCHAIN\n\n#include \"mvsbase.hpp\"\n\nstruct chainE \u00e4\n\n\tchainE * prev ;\n\tchainE * next ;\n\tchar * chainEid   ;\n\tint    chainEidl  ;\n\n\tchainE()\u00e4chainEid = 0; chainEidl = 0; prev = next = 0;\u00fc\n\n\tchainE(char * i,int l =0)\n\t\u00e4\n\t\tif (i)\n\t\t\u00e4\n\t\t\tif ( l ) chainEidl = l; else chainEidl =int(strlen(i));\n\t\t\tchainEid = new char\u00c4chainEidl+1\u00dc; memcpy(chainEid,i,chainEidl+1);\n\t\t\u00fc\n\t\telse chainEid =0;\n\t\tprev=next=0;\n\t\u00fc\n\n\tchainE(const char * i,int l =0)\n\t\u00e4\n\t\tif (i)\n\t\t\u00e4\n\t\t\tif ( l ) chainEidl = l; else chainEidl =int(strlen(i));\n\t\t\tchainEid = new char\u00c4chainEidl+1\u00dc; memcpy(chainEid,i,chainEidl+1);\n\t\t\u00fc\n\t\telse chainEid =0;\n\t\tprev=next=0;\n\t\u00fc\n\n\tchainE(const mvsSTRING * s)\n\t\u00e4\n\t\tif (s)\n\t\t\u00e4\n\t\t\tchainEidl = int((mvsSTRING *)s->lengthOf());\n\t\t\tchainEid = new char\u00c4chainEidl+1\u00dc;\n\t\t\tmemcpy(chainEid,(char *)mvsSTRING(*s),chainEidl+1);\n\t\t\u00fc\n\t\telse chainEid =0;\n\t\tprev=next=0;\n\t\u00fc\n\tvirtual \u00dfchainE()\n\t\u00e4\n\t\tdelete chainEid ;\n\t\u00fc\n\tvirtual void print()\u00e4\u00fc\n\u00fc;\n\n\nclass mCHAIN \u00e4\n\nprotected:\n\tchainE * first;\n\tchainE * last ;\n\n\tchainE * pgo;\n\tlong int    counter;\npublic:\n\tfriend class CHAINITER ;\n\n\tmCHAIN()\n\t\u00e4\n\n\t\tfirst = last = pgo = 0; counter = 0;\n\t\u00fc\n\n\tmCHAIN(chainE * nc)\n\t\u00e4\n\t\tpgo = 0;\n\t\tfirst = nc ; last = nc ;\n\t\tcounter = 1;\n\t\u00fc\n\n\tvirtual \u00dfmCHAIN();\n\tvirtual   long int    add(chainE * nc,chainE * c,long int code = 1);\n\tvirtual long int addfirst(chainE * nc )\n\t\u00e4 return add(nc,first,-1) ; \u00fc\n\tvirtual long int addlast(chainE * nc )\n\t\u00e4 return add(nc,last,+1) ; \u00fc\n\tvirtual long int before(chainE * nc , chainE * c)\n\t\u00e4return add(nc,c,-1);\u00fc\n\tvirtual long int after(chainE * nc , chainE * c)\n\t\u00e4return add(nc,c,+1);\u00fc\n\tvirtual long int del(chainE * c);\n\tvirtual void swap(chainE * a , chainE * b);\n\n\n\n\tvirtual chainE* goNext();\n\tvirtual chainE* goPrev();\n\tvirtual chainE* goFirst();\n\tvirtual chainE* goLast();\n\tvirtual chainE* go(int);\n\tvirtual chainE * searchEQ(const char * id,size_t =0);\n\tvirtual chainE * search(const char * id,size_t =0);\n\tvirtual chainE * search(const mvsSTRING &);\n\tvirtual chainE * search(char *id,size_t length =0)\u00e4 return search((const char *)id,length);\u00fc\n\tvirtual chainE * search(mvsSTRING &s)\u00e4 return search((const mvsSTRING&)s);\u00fc\n\n\tvirtual void sort(long int direction);\n\tvirtual void print_all_ids();\n\tvirtual void print();\n\tfriend int idcmp(chainE* , chainE*);\n\u00fc;\n\nenum SORTEDTYPE\u00e4UNIQUE =0 ,NOUNIQUE =1 \u00fc;\n\nclass SORTEDmCHAIN:public mCHAIN\n\u00e4\nprivate:\n\tSORTEDTYPE unique;\npublic:\n\tSORTEDmCHAIN(SORTEDTYPE st = UNIQUE):\n\t\t\tmCHAIN(), unique(st)\u00e4\u00fc;\n\t\t\tSORTEDmCHAIN(chainE *nc, SORTEDTYPE st = UNIQUE)\n\t\t\t\t:mCHAIN(nc), unique(st)\u00e4\u00fc;\n\t\t\tlong int add(chainE * nc,chainE * = 0,long int = 0);\n\t\t\tvirtual \u00dfSORTEDmCHAIN()\u00e4\u00fc\n\u00fc;\n\nclass mSTACK:public mCHAIN\n\u00e4\nprivate:\npublic:\n\tmSTACK():mCHAIN()\u00e4\u00fc\n\tmSTACK(chainE * nc):mCHAIN(nc)\u00e4\u00fc\n\n\tvirtual long int push(chainE * nc)\u00e4return addlast(nc);\u00fc\n\tvirtual chainE * examine(int i = 0 )\n\t\u00e4\n\t\tif ( i >= 0 ) return last;\n\t\ti = -i;\n\t\tif ( counter-i < 0 ) return NULL;\n\t\treturn go(counter-i);\n\n\t\u00fc\n\tvirtual chainE * pop()\u00e4chainE * r = last; if (last) del(last);return r;\u00fc\n\u00fc;\n\nclass mHASH:public mCHAIN\n\u00e4\nprivate:\n\tchainE * * table;\n\tint    hash;\n\tint\t\tpi;\npublic:\n\tmHASH(int h = 1023);\n\t\u00dfmHASH();\n\tlong int add(chainE *);\n\tlong int del(chainE *);\n\tchainE * next();\n\tchainE * search(chainE *);\nprivate:\n\tsize_t  hashCode(chainE *c)\n\t\u00e4\n\t\tint r = 0;\n\t\tif (c->chainEid)\n\t\t\tfor (int i = c->chainEidl;i;i--)\n\t\t\t\tr = (r<<1) \u00ac (c->chainEid\u00c4i-1\u00dc) ;\n\t\treturn size_t(r<0 ? -r:r);\n\t\u00fc\n\u00fc;\n\nclass CHAINITER\u00e4\nprivate:\n\tmCHAIN * c;\n\tchainE * a;\npublic:\n\tCHAINITER(mCHAIN &ch) \u00e4c = &ch ; a = (c->first ? c->first:0) ; \u00fc\n\tCHAINITER(mCHAIN *ch) \u00e4c =  ch ; a = (c->first ? c->first:0) ; \u00fc\n\t\u00dfCHAINITER()\u00e4\u00fc\n\tchainE * next() \u00e4\n\n\t\tchainE * r = a ;\n\t\tif ( a == 0 ) a =c->first ;\n\t\telse a = a->next ;\n\t\treturn r;\n\t\u00fc\n\tchainE * operator()()\u00e4 return next(); \u00fc\n\tvoid reset() \u00e4 a = (c ? c->first:0);\u00fc\n\u00fc;\n\nint idcmp(chainE* , chainE*);\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MCT": {"ttr": 8599, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mct \u00e4\n  unsigned char  mctmct\u00c44\u00dc;                   /* -         ACRONYM IN EDCDIC -MCT-                   */\n  void          *mccms100;                    /* -      SQA SHORTAGE MESSAGE ADDRESS                 */\n  void          *mccms101;                    /* -      CRITICAL SQA SHORTAGE MESSAGE ADDRESS        */\n  void          *mccms102;                    /* -      SQA SHORTAGE RELIEVED MESSAGE ADDRESS        */\n  int            _filler1;                    /* reserved                     @LHIAUXC               */\n  int            _filler2;                    /* reserved                     @LHIAUXC               */\n  int            _filler3;                    /* reserved                     @LHIAUXC               */\n  int            _filler4;                    /* reserved                     @LHIAUXC               */\n  int            _filler5;                    /* reserved                     @LHISTOC               */\n  int            _filler6;                    /* reserved                     @LHISTOC               */\n  int            _filler7;                    /* reserved                     @LHISTOC               */\n  int            _filler8;                    /* reserved                     @LHISTOC               */\n  void          *mccms500;                    /* -      SWAP IN FAIL USER MSG ADDR   @ZA31942        */\n  void          *mccms501;                    /* -      SWAP IN MESSAGE              @ZA31942        */\n  short int      mccplus;                     /* -             AVAILABLE FRAME QUEUE DELTA FOR       */\n  short int      _filler9;                    /* RESERVED                     @LCMPTM                */\n  short int      _filler10;                   /* -              Reserved                    @LHIAUXC */\n  short int      mccsiprt;                    /* -          TIME BETWEEN PG-RATE CALC   @G741PSS     */\n  short int      mccdfrpc;                    /* -              DOUBLE FRAME REPLENISH INCREMENT     */\n  short int      mccdfrec;                    /* -              DOUBLE FRAME RELEASE VALUE  @G860PSS */\n  short int      mccspcpt;                    /* The System Paging Cost Percentage                   */\n  short int      mccapcpt;                    /* Address Space Paging Cost Percentage                */\n  int            mccdump;                     /* DUMPSRV OUCB ADDRESS            @P8C                */\n  short int      mccicspl;                    /* Length of IRAICSP.ICSP      @WLMPGMY                */\n  short int      mccrqsvl;                    /* Length of IRARQSRV.RQSV     @WLMPGMY                */\n  short int      mcce39pl;                    /* Length of IRAE39P.E39P      @WLMPGMY                */\n  short int      mccrsdl;                     /* Length of IRARSD.RSD        @WLMPGMY                */\n  short int      mccoucbl;                    /* Length of IRAOUCB.OUCB      @WLMPGMY                */\n  short int      mccr5;                       /* @L6C                                                */\n  short int      mccfxbpr;                    /* Fixed Below High Percentage                         */\n  short int      _filler11;                   /* Reserved                     @LCMPTM                */\n  short int      _filler12;                   /* Reserved                    @LHIAUXC                */\n  unsigned char  mctvirtshortagelevel;        /* -   Virtual storage shortage level                  */\n  unsigned char  mctasmfl;                    /* -              Auxilliary Storage Flags    @ME13233 */\n  int            mctaveragevirtincrease;      /* -   Average virtual storage increase                */\n  int            mctslotsallocated;           /* -     Number of allocated slots at the              */\n  short int      mccasmt1;                    /* -             FIRST AUX SHORTAGE THRESHOLD          */\n  short int      mccasmt2;                    /* -             SECOND AUX SHORTAGE THRESHOLD         */\n  struct \u00e4\n    unsigned char  _mcvsiflg; /* -              STORAGE ISOLATION FLAGS     @G741PSS */\n    char           _mcclipt;  /* -           Large increase percentage thereshold    */\n    char           _mccaspct; /* -           % OF AUX STORAGE TO RECOMMEND   @L1C    */\n    char           _mccrspct; /* -           % OF REAL STORAGE TO RECOMMEND  @L1C    */\n    \u00fc mccend;\n  int            mcvstgpt;                    /* TIME OF PREVIOUS STGTEST CALL   @L1C                */\n  short int      mcvsipl;                     /* -              CMN LOW PAGE IN RATE SPEC   @G741PSS */\n  short int      mcvsiph;                     /* -              CMN HIGH PAGE IN RATE SPEC  @G741PSS */\n  int            mcvsibp;                     /* -              BASE PAGE IN CNT FOR CMN    @G741PSS */\n  int            mcvsibt;                     /* -              Base TOD value for page-in rate      */\n  short int      mcvsipr;                     /* -              CMN RECENT PAGE-IN RATE     @G741PSS */\n  short int      _filler13;                   /* -              Reserved                    @LHIAUXC */\n  short int      mcvstcri;                    /* -              HIGHEST SYSTEM UIC          @Z40BPCH */\n  short int      mcvfrcnt;                    /* -              SAVED AVAILABLE EXPANDED STORAGE     */\n  int            mcvavqc;                     /* -              COUNT OF AVQLOWS            @Z40BPCH */\n  int            mcvnwsmb;                    /* policy interval base for rcenwsf                    */\n  int            mcvwsmb;                     /* policy interval base for rcewsdne                   */\n  unsigned char  mccbelowpercentage;          /* @PYN0937                                            */\n  unsigned char  mccabovepercentage;          /* @PYN0937                                            */\n  unsigned char  _filler14;                   /* -              Reserved                    @LLSENHC */\n  unsigned char  mctafqcount;                 /* Number of RM1 Cycles we have an                     */\n  int            mcveswb;                     /* policy interval base for rceeswrt                   */\n  short int      mccbelowshortagethreshold;   /* @PYN0937                                            */\n  short int      mccaboveshortagethreshold;   /* @PYN0937                                            */\n  short int      mcvbelowshortagesamples;     /* Shortage samples RM2 intvl  @PYN0937                */\n  short int      mcvbelowshortagesampleslm;   /* Shortage samples 1 minute   @PYN0937                */\n  short int      mcvaboveshortagesamples;     /* Shortage samples RM2 intvl  @PYN0937                */\n  short int      mcvaboveshortagesampleslm;   /* Shortage samples 1 minute   @PYN0937                */\n  unsigned char  mctsflgs;                    /* -              FLAGS MODIFIED UNDER SALLOC LOCK     */\n  unsigned char  mctoflgs;                    /* -              FLAGS MODIFIED UNDER SRM LOCK        */\n  unsigned char  mctoflg1;                    /* -              MORE FLAGS - SRM LOCK       @G742PBP */\n  unsigned char  mctcflgs;                    /* -              FLAGS TURNED ON UNDER SALLOC LOCK    */\n  void          *mccms103;                    /* -      SQA EXPANDED MSG ADDR       @PDD0101         */\n  int            mcvtminq;                    /* -               TIME PR1 LAST RAN IN QUEUE @G860PAM */\n  short int      mccfxuic;                    /* -              FIXED FRAME SHORTAGE UIC THRESHOLD   */\n  short int      mcvchuic;                    /* -               HIGHEST UIC FOR CURRENTLY ALLOCATED */\n  short int      mcvpvtri;                    /* -               HIGHEST PVT AREA UIC       @ZA42038 */\n  short int      mcvhuice;                    /* UIC of oldest frame in expanded                     */\n  short int      mcclswup;                    /* -               TSO LOGICAL SWAP WORKING SET        */\n  short int      mcvdfpgc;                    /* -               DEFERRED PAGE REQUEST CT   @ZA64868 */\n  int            mcvoldeo;                    /* -               Value of RCEAECOK, with amount      */\n  short int      mccnclim;                    /* -               UIC LIMIT FOR NON-SWAPPABLES AND    */\n  short int      mccncdel;                    /* -               DELTA IN NON-SWAPPABLE AND COMMON   */\n  short int      mccncmax;                    /* -              MAXIMUM INTERVAL BETWEEN UPDATES     */\n  short int      mccswlim;                    /* -              UIC LIMIT FOR SWAPPABLES BEFORE      */\n  short int      mccswdel;                    /* -              DELTA IN SWAPPABLES UIC FOR          */\n  short int      mccswmax;                    /* -              MAXIMUM INTERVAL BETWEEN UPDATES     */\n  int            mcvsmxct;                    /* -              SWAPPABLE MAXIMUM COUNT    @G860PAM  */\n  int            mcvinc;                      /* PR1 INTERVAL COUNT FOR SWAPPABLES                   */\n  int            mcvcurct;                    /* PR1 INTERVAL COUNT FOR COMMON AND                   */\n  int            mcvmaxct;                    /* NON-SWAPPABLE AND COMMON MAXIMUM                    */\n  short int      mccsiwdl;                    /* -               TWSS DELTA % DECREASE      @ZM49741 */\n  short int      mccsiwdi;                    /* -               TWSS DELTA % INCREASE      @ZM49741 */\n  int            mccsieth;                    /* -            EXEC TIME THRESHOLD FOR PG RATE        */\n  int            mcvmigb;                     /* BASE MIGRATION COUNT        @YA62416                */\n  int            mccr19;                      /* @L6C                                                */\n  int            mccr20;                      /* @L6C                                                */\n  int            _filler15;                   /* Reserved                     @LCMPTM                */\n  void          *mccms104;                    /* -      SQA NO LONGER EXPANDED MSG  @PDD0101         */\n  struct \u00e4\n    short int      _mccafclo; /* Available frame queue low threshold              */\n    short int      _mccafcok; /* -             Available frame queue OK threshold */\n    \u00fc mccavqth;\n  int            mccuicth;                    /* -               MIN TIME BEFORE UIC UPDT   @G38APSS */\n  int            mccfxtm1;                    /* -          FIXED FRAME SHORTAGE TIME THRESHOLD      */\n  int            mccfxtm2;                    /* -          FIXED FRAME SHORTAGE TIME THRESHOLD      */\n  int            mcvcsacv;                    /* -               PREVIOUS GDACSACV VALUE    @G860PJC */\n  short int      mccdeffx;                    /* -               DEFER FIX THRESHOLD                 */\n  short int      mccfxtpr;                    /* -  (OPT PARM)  % All of real storage threshold @LTC */\n  short int      mccfxepr;                    /* -  (OPT PARM)  % Below 16M line storage thresold    */\n  short int      mctafcincrease;              /* AFC increase to drive steal @OA14318                */\n  short int      mccmedup;                    /* -              MEDIAN FIXED FRAME CNT ADJ UP   @L3A */\n  short int      mccmeddn;                    /* -              MEDIAN FIXED FRAME CNT ADJ DOWN @L3A */\n  short int      mccspint;                    /* -            TIME FOR DISABLED SPIN          @L3A   */\n  short int      mccr24;                      /* -              reserved (MCCFFCMP)         @LLAPAGC */\n  int            mccmaxfx;                    /* -              All of real shortage threshold count */\n  int            mccrelcr;                    /* -              All of real critical shortage        */\n  int            mccb16cr;                    /* -              Below the line critical shortage     */\n  int            mccrelok;                    /* -              All of real OK threshold        @LTC */\n  int            mccb16ok;                    /* -              Below the line OK threshold     @LTC */\n  int            mcvsbfxc;                    /* -              FIX CNT ACCUMULATOR             @L3A */\n  short int      mcvsbfxa;                    /* -              AVE FIX % BELOW 16MEG           @L3A */\n  short int      mcvsbltf;                    /* -              LONG TERM FIX %                 @L3A */\n  short int      mcvmedfc;                    /* -              MEDIAN FIX FRAME COUNT -             */\n  short int      mcvasmct;                    /* -              Samples taken for verification       */\n  int            mcvcapws;                    /* -              CAP WORKAREA - WORKING SET SIZE      */\n  short int      mccms6l;                     /* MS6 INTERVAL LOWER LIMIT        @H2A                */\n  short int      mcvswupd;                    /* -              SWAP COUNT UPDATE COUNTER       @H4C */\n  int            mcvoldel;                    /* -               Value of RCEAECLO, with amount      */\n  int            mcvmgage;                    /* EXTENDED STORE MIGRATION AGE    @H5C                */\n  int            mcvpr9tg;                    /* PR9 TARGET FOR TRIM AND BUILDING                    */\n  int            mcvpr5ou;                    /* OUCBPTR FOR PR5 WHEN REAL THRESHOLDS                */\n  int            mcvmgtme;                    /* WAITING-FOR-MIGRATOR TIME STAMP @H5A                */\n  int            mcvwraps;                    /* SAVED VALUE OF RCEWRAPS         @H5A                */\n  int            mcvmgcnt;                    /* SRM MIGRATION TIME COUNTER      @H5A                */\n  int            mcvsecws;                    /* NUMBER OF SECONDARY WORKING SET                     */\n  double         mctstmacreatetime;           /* Time when the STMA was created                      */\n  int            mctrsv03;                    /* reserved - was MCVDEFSE     @WLMP128                */\n  int            mccdefam;                    /* MULTIPLIER OF AFCOK THRESHOLD TO                    */\n  int            mccmgtex;                    /* MIGRATOR TIME EXCEEDED THRESHOLD                    */\n  int            mccswpet;                    /* EFRAMES RESERVED FOR PAGEOUTS BY                    */\n  short int      mccetght;                    /* EXTENDED STORE LOW THRESHOLD MULT.                  */\n  short int      mccaeclo;                    /* -            AVAIL EXTENDED FRAME QUEUE LO          */\n  short int      mccaecok;                    /* -            AVAIL EXTENDED FRAME QUEUE OK          */\n  short int      mccesbmp;                    /* -              SWAP TO EXTENDED WORKING SET         */\n  short int      mccppsbf;                    /* PAGABLE PAGE PER SEGMENT BUFFER @H5A                */\n  unsigned char  mctrsv04;                    /* reserved - was MCCMINTR     @WLMP128                */\n  unsigned char  mccsigtr;                    /* MIN AMOUNT OF FRAMES AN A.S. CAN                    */\n  short int      mccswupt;                    /* SWAP COUNTER UPDATE THRESHOLD   @H4A                */\n  char           mccb2ghi;                    /* High threshold for % of time running                */\n  char           mccfsidi;                    /* TWSS % INCREASE FOR FWA USERS   @L7A                */\n  char           mcces0lo;                    /* Low threshold for percent of time                   */\n  char           mcces0hi;                    /* High threshold for percent of time                  */\n  short int      mcves0ct;                    /* MCTESTO0 SAMPLE COUNTER         @H4A                */\n  short int      mcvessct;                    /* EXTENDED STORE THRESHOLDS SAMPLE                    */\n  short int      mccessth;                    /* EXTENDED STORE THRESHOLDS SAMPLE                    */\n  int            mcvaecmn;                    /* MINIMUM RCEAEC SAMPLED          @H4A                */\n  unsigned char  mcteflgs;                    /* EXTENDED STORE BITS             @H5A                */\n  unsigned char  mcteflg1;                    /* FLAGS MODIFIED UNDER SRM LOCK   @P2A                */\n  short int      mccmxris;                    /* -            Maximum amount by which real           */\n  void          *mccms700;                    /* -       VECTOR WAIT MESSAGE ADDRESS     @D1A        */\n  int            mctsdumpinit;                /* SDump reserved space, which gets                    */\n  int            mcvreldl;                    /* SDump reserved space, which is                      */\n  int            mcvmsgpt;                    /* Pointer to message stack        @LTC                */\n  int            mcvdomqp;                    /* Pointer to the DOM queue        @LTC                */\n  int            mccuicmx;                    /* UIC value to determine if stealing                  */\n  int            mcvfpt;                      /* Fixed and DREF shortage threshold                   */\n  int            mccdrfcr;                    /* Fixed and DREF critical shortage                    */\n  int            mccdrfok;                    /* Fixed and DREF OK threshold.    @LTA                */\n  int            mcvtwss;                     /* TARGET WSS FOR COMMON           @D9C                */\n  int            mcvsiwl;                     /* CMN LOW WSS SPECIFICATION       @D9C                */\n  int            mcvsiwh;                     /* CMN HIGH WSS SPECIFICATION      @D9C                */\n  int            mcvfmct;                     /* CMN EFFECTIVE FRAME COUNT       @D9C                */\n  int            mccr23;                      /* @L6C                                                */\n  int            _filler16;                   /* reserved                    @LHIAUXC                */\n  int            mccmaxsw;                    /* Target maximum number of frames to                  */\n  int            mcvavqlt;                    /* TIME (RRPATOD) OF LAST LEVEL1                       */\n  int            mcctosec;                    /* TWO SECOND VALUE TO FORCE                           */\n  short int      mccstgt;                     /* -            STGTEST TIME INTERVAL (1 SEC)   @L1A   */\n  short int      mccfxbco;                    /* -             CUT-OFF AMOUNT OF FIXED BELOW         */\n  int            mcvbytct;                    /* PREVIOUS BYTE COUNT OF RESERVE                      */\n  int            mcvblkct;                    /* PREVIOUS BLOCK COUNT OF RESERVE                     */\n  int            mcvswpas;                    /* Address of user picked for MS2 in                   */\n  int            mcvoldcl;                    /* The \"base\" low central storage                      */\n  int            mcvoldco;                    /* The \"base\" OK central storage                       */\n  int            mcvptlmt;                    /* Processor threshold raising limit                   */\n  int            mcvlsd;                      /* Number of logical swap discretionary                */\n  int            mcvmindf;                    /* This is the minimum error between                   */\n  int            mcvpgins;                    /* Page-ins rate count used for                        */\n  int            mcvavail;                    /* The number of Central and Expanded                  */\n  int            mcvuic1;                     /* total number of UIC bucket 1 frames                 */\n  int            mcvuic2;                     /* total number of UIC bucket 2 frames                 */\n  int            mcvuic3;                     /* total number of UIC bucket 3 frames                 */\n  int            mcvuic4;                     /* total number of UIC bucket 4 frames                 */\n  int            mcvuic1s;                    /* total number of UIC bucket 1 frames                 */\n  int            mcvuic2s;                    /* total number of UIC bucket 2 frames                 */\n  int            mcvuic3s;                    /* total number of UIC bucket 3 frames                 */\n  int            mcvuic4s;                    /* total number of UIC bucket 4 frames                 */\n  int            mcvuic1c;                    /* number of UIC bucket 1 frames in the                */\n  int            mcvuic2c;                    /* number of UIC bucket 2 frames in the                */\n  int            mcvuic3c;                    /* number of UIC bucket 3 frames in the                */\n  int            mcvuic4c;                    /* number of UIC bucket 4 frames in the                */\n  short int      mctrstorflcanceltime;        /* Maximum time for redrive of                         */\n  short int      mcccbbt;                     /* Central/Below 16 meg Balance                        */\n  int            mcveuic1;                    /* expanded storage UIC bucket 1   @L8C                */\n  int            mcveuic2;                    /* expanded storage UIC bucket 2   @L8C                */\n  int            mcveuic3;                    /* expanded storage UIC bucket 3   @L8C                */\n  int            mcveuic4;                    /* expanded storage UIC bucket 4   @L8C                */\n  int            mcvexwsd;                    /* Count of discretionary expanded                     */\n  int            mcveuicc;                    /* Count of invocations of pr1 to                      */\n  int            mcvmxeuc;                    /* Number of pr1 invocations before                    */\n  int            mcvcmpib;                    /* Base value for common pages paged in                */\n  short int      mcvcubd1;                    /* UIC bucket delimiter.  Used to                      */\n  short int      mcvcubd2;                    /* UIC bucket delimiter.  Used to                      */\n  short int      mcvcubd3;                    /* UIC bucket delimiter.  Used to                      */\n  short int      mcvcs0ct;                    /* central stor to 0 sample count  @L8A                */\n  short int      mcvcssct;                    /* Central  STORE THRESHOLDS SAMPLE                    */\n  short int      mcvshuic;                    /* High UIC for shared frames      @LAC                */\n  int            mcvafcmn;                    /* MINIMUM RCEAFC SAMPLED          @L8A                */\n  int            mcvstwss;                    /* Protective processor storage                        */\n  int            mcvsauxb;                    /* Base for RceSgAux               @LAA                */\n  int            mcvsuic1;                    /* Shared area central UIC bucket  @LAA                */\n  int            mcvsuic2;                    /* Shared area central UIC bucket  @LAA                */\n  int            mcvsuic3;                    /* Shared area central UIC bucket  @LAA                */\n  int            mcvsuic4;                    /* Shared area central UIC bucket  @LAA                */\n  int            mcvseuc1;                    /* Shared area expanded UIC bucket @LAA                */\n  int            mcvseuc2;                    /* Shared area expanded UIC bucket @LAA                */\n  int            mcvseuc3;                    /* Shared area expanded UIC bucket @LAA                */\n  int            mcvseuc4;                    /* Shared area expanded UIC bucket @LAA                */\n  int            _filler17;                   /* reserved                    @xxxxxxx                */\n  int            _filler18;                   /* reserved                    @xxxxxxx                */\n  short int      mccuicup;                    /* Interval (in seconds) at which UIC                  */\n  short int      mccconbt;                    /* UIC value, below which frames may                   */\n  void          *mccemdit;                    /* Maximum disabled time for STEAL and                 */\n  int            mccmaxbt;                    /* Between 16M and 2G pageable                         */\n  int            mccb2gcr;                    /* Between 16M and 2G pageable                         */\n  int            mccb2gok;                    /* Between 16M and 2G pageable                         */\n  short int      mccqdrsv;                    /* Percentage of quad frame groups to                  */\n  short int      _filler19;                   /* reserved                    @LCMPTMC                */\n  int            mcvoldqf;                    /* Number of quad frame groups on the                  */\n  unsigned char  mctshmf;                     /* Monitoring flag             @WLMP64V                */\n  unsigned char  mcttargetincreased;          /* Target increase flags       @ME04110                */\n  short int      mcttrimuic;                  /* UIC where trimming starts   @ME04110                */\n  short int      mctprestealsampleslow;       /* PreSteal samples low        @ME04110                */\n  short int      mctprestealsamplestotal;     /* PreSteal samples altogether @ME04110                */\n  int            mctprestolenmn;              /* Minimum RCENumberOfPreStolenFrames                  */\n  int            mctprestolenlow;             /* PreSteal low target         @WLMP128                */\n  int            mctprestolenok;              /* PreSteal OK target          @WLMP128                */\n  short int      mctprestealsampletime;       /* count RM2 intervals         @WLMP128                */\n  short int      mctprestealsampletarget;     /* 10th of a percent           @WLMP128                */\n  int            mctuicdistperc1;             /* Bucket 1 with   6.472%      @WLMP128                */\n  int            mctuicdistperc2;             /* Bucket 2 with   4.535%      @WLMP128                */\n  int            mctuicdistperc3;             /* Bucket 3 with  24.470%      @WLMP128                */\n  int            mctuicdistperc4;             /* Bucket 4 with  64.523%      @WLMP128                */\n  int            _filler20;                   /* Reserved                    @LHIAUXC                */\n  short int      mctira205itarget;            /* Percentage at which target the                      */\n  short int      mctminsystemuic;             /* Minimum System UIC          @WLMP128                */\n  short int      mctcursystemuic;             /* Current System UIC          @WLMP128                */\n  short int      mctmaxsystemuic;             /* Maximum System UIC          @WLMP128                */\n  int            mctswapsize;                 /* Maximum working set size SRM will                   */\n  short int      mctrealswapcanceltime;       /* Maximum time for redrive of                         */\n  unsigned char  mctfixedstorageshortagetype; /* Contains the shortage type, which                   */\n  unsigned char  mctstoragetargetadjustment;  /* RM2 cycle count, used for storage                   */\n  int            mctbelowafqmn;               /* Minimum RCEPBAFC plus RCENBAFCC                     */\n  int            mctaboveafqmn;               /* Minimum RCEPAAFC plus RCENAAFCC                     */\n  int            mctwtor1ecb;                 /* ECB for WTOR Processor 1    @LHIAUXC                */\n  int            mctwtor2ecb;                 /* ECB for WTOR Processor 2    @LHIAUXA                */\n  void          *mctfsaa;                     /* Pointer to FSAA             @LHISTOA                */\n  void          *mctasaa;                     /* Pointer to ASAA             @LHIAUXA                */\n  struct \u00e4\n    unsigned char  _mctwtor1flags;    /* WTOR processing flags       @LHIAUXA */\n    unsigned char  _mctwtor2flags;    /* WTOR processing flags       @LHIAUXA */\n    unsigned char  _mctwtor3flags\u00c42\u00dc; /* reserved                    @LHIAUXA */\n    \u00fc mctwtorflags;\n  char           mctrelieveperc;              /* Relieve percentage          @LHIAUXA                */\n  char           mctapplperc;                 /* Application perc.           @LHIAUXA                */\n  short int      _filler21;                   /* reserved                    @LHIAUXA                */\n  char           mctwarningb16perc;           /* below 16M percentage        @LHISTOA                */\n  char           mctwarningb2gperc;           /* between 16M and 2G          @LHISTOA                */\n  char           mctwarningtotperc;           /* all real                    @LHISTOA                */\n  char           mctwarningdrfperc;           /* all real and DREF           @LHISTOA                */\n  int            mctwarningb16;               /* below 16M                   @LHISTOA                */\n  int            mctwarningb2g;               /* between 16M and 2G          @LHISTOA                */\n  int            mctwarningtot;               /* all real                    @LHISTOA                */\n  int            mctwarningdrf;               /* all real and DREF           @LHISTOA                */\n  short int      _filler22;                   /* Reserved                    @ME13233                */\n  unsigned char  mctfixedshortagelevel;       /* -  Fixed storage shortage level                     */\n  unsigned char  mctfixedfl;                  /* -              Fixed Storage Flags         @ME13233 */\n  int            mctaveragefixedincrease;     /* Average fixed storage increase                      */\n  int            mctframesfixed;              /* Number of fixed frames at the last                  */\n  double         mctira405iissuetime;         /* When the last IRA405I message got                   */\n  double         mctfxsapplwarningtime;       /* When we entered the appl. warning                   */\n  double         mctfxsshortagetime;          /* When we entered the normal shortage                 */\n  double         mctcritfxsshortagetime;      /* When we entered the critical                        */\n  double         mctira205iissuetime;         /* When the last IRA205I message got                   */\n  double         mctauxapplwarningtime;       /* When we entered the appl. warning                   */\n  double         mctauxshortagetime;          /* When we entered the normal shortage                 */\n  double         mctcritauxshortagetime;      /* When we entered the critical                        */\n  double         mctafqshortagetime;          /* When we saw the last time a AFQ                     */\n  double         mctend;                      /* -                END OF MCT                         */\n  \u00fc;\n\n#define mcvsiflg      mccend._mcvsiflg\n#define mcclipt       mccend._mcclipt\n#define mccaspct      mccend._mccaspct\n#define mccrspct      mccend._mccrspct\n#define mccafclo      mccavqth._mccafclo\n#define mccafcok      mccavqth._mccafcok\n#define mctwtor1flags mctwtorflags._mctwtor1flags\n#define mctwtor2flags mctwtorflags._mctwtor2flags\n#define mctwtor3flags mctwtorflags._mctwtor3flags\n\n/* Values for field \"mctasmfl\" */\n#define mctvirtculpritprocessingneeded    0x80  /* - Virtual storage culprit                           */\n\n/* Values for field \"mcvsiflg\" */\n#define mcvsipg                           0x80  /* -              ADS STG ISOLATION IN EFFECT @G741PSS */\n#define mcvsicm                           0x40  /* -              CMN STG ISOLATION IN EFFECT @G741PSS */\n#define mcvsiws                           0x20  /* -              COMMON STORAGE PROTECTED BY WORKING  */\n#define mcvsipi                           0x10  /* -              COMMON STORAGE PROTECTED BY PAGE IN  */\n\n/* Values for field \"mctsflgs\" */\n#define mctsqa1                           0x80  /* -              SQA FIRST LEVEL SHORTAGE             */\n#define mctsqa2                           0x40  /* -              SQA SECOND LEVEL SHORTAGE            */\n#define mctavq1                           0x20  /* -              AVQ BELOW LIMIT                      */\n#define mctasmw                           0x10  /* -              ASM Warning level           @LLSENHA */\n#define mctafqenf55issued                 0x08  /* -       ENF 55 AFQ shortage issued  @LLSENHA        */\n\n/* Values for field \"mctoflgs\" */\n#define mctasm1                           0x80  /* -              ASM FIRST LEVEL SHORTAGE             */\n#define mctasm2                           0x40  /* -              ASM SECOND LEVEL SHORTAGE            */\n#define mctasma                           0x20  /* -              ASM Appl Warning            @LHIAUXC */\n#define mctams2                           0x10  /* -              Obsolete use MCTASM2        @LHIAUXC */\n#define mctsms1                           0x08  /* -              SQA FIRST LEVEL MESSAGE              */\n#define mctsms2                           0x04  /* -              SQA SECOND LEVEL MESSAGE             */\n#define mctfx1                            0x02  /* -              FIX PG 1ST LEVEL MSG        @Z40BPCH */\n#define mctfx2                            0x01  /* -              FIX PG 2ND LEVEL MSG        @Z40BPCH */\n\n/* Values for field \"mctoflg1\" */\n#define mctndisp                          0x40  /* Set nsw address spaces non                          */\n#define mctwtor                           0x20  /* Present a WTOR, when the system is                  */\n#define mctsqae                           0x10  /* -              SQA EXPANDED MESSAGE        @PDD0101 */\n#define mctfxmpl                          0x08  /* -              REDUCE MPL TO RELIEVE SHORTAGE  @L3A */\n#define mctwtorauto                       0x04  /* Present 20 messages instead of 5                    */\n#define mctlgavq                          0x02  /* -              LOGICAL AVQLOW LEVEL 1          @L3A */\n#define mctscbt                           0x01  /* -              STOLE COMMON BELOW THRES    @ZA58069 */\n\n/* Values for field \"mctcflgs\" */\n#define mctshort                          0x80  /* -              A shortage exists               @LTC */\n#define mctrlsht                          0x40  /* -              All of real pageable storage         */\n#define mctb16sh                          0x20  /* -              Below the 16 meg line pageable       */\n#define mctdrsht                          0x10  /* -              All of real and DREF pageable        */\n#define mctpvti                           0x08  /* -              PVT FIELDS INITIALIZED          @LTC */\n#define mctrsvb5                          0x04  /* -              reserved                    @ME04110 */\n#define mctrsvb6                          0x02  /* -              reserved                    @ME04110 */\n#define mctb2gsh                          0x01  /* -              Between 16M and 2G pageable          */\n\n/* Values for field \"mcteflgs\" */\n#define mctmigcn                          0x80  /* MIGCNSTR SYSEVENT ISSUED        @H5A                */\n#define mctovrmx                          0x40  /* AT LEAST ONE STOR ISOL ADDR SP OVER                 */\n#define mctovrsi                          0x20  /* OVERRIDE STOR ISOL IN MIGRATION @H5A                */\n#define mctesna                           0x10  /* EXTENDED STORE NOT AVAILABLE    @H5A                */\n#define mctesto0                          0x08  /* THE AMOUNT OF AVAILABLE EXTENDED                    */\n#define mctrsvb7                          0x04  /* Reserved                    @LLAPAGC                */\n#define mcteuics                          0x02  /* PR1 HAS BEEN SCHEDULED TO BUILD                     */\n#define mctmigtu                          0x01  /* MIGCNSTR tried to unprotect storage                 */\n\n/* Values for field \"mcteflg1\" */\n#define mctredriverequest                 0x80  /* Redrive a REALSWAP, TRANSWAP                        */\n#define mctrsvb1                          0x40  /* reserved                    @WLMP128                */\n#define mctpend                           0x20  /* -              REALSWAP or TRANSWAP                 */\n#define mctrsvb2                          0x10  /* -              reserved                    @WLMP128 */\n#define mctstoragemonitoring              0x08  /* -   Storage monitoring flag     @ME13233            */\n#define mctstoragemonitoringareaallocated 0x04  /* - Storage monitoring                                */\n#define mctdumpactive                     0x01  /* -        MCVRELDL value lowered, because            */\n\n/* Values for field \"mctshmf\" */\n#define mctshm1                           0x80  /* -              - First level msg issued    @WLMP64V */\n#define mctshm2                           0x40  /* -              - Second level msg issued   @WLMP64V */\n#define mctcom1                           0x20  /* -              - First level msg issued    @LCOM64A */\n#define mctcom2                           0x10  /* -              - Second level msg issued   @LCOM64A */\n#define mctlrg1                           0x08  /* -              - First level msg issued    @LLAPAGC */\n#define mctlrg2                           0x04  /* -              - Second level msg issued   @LLAPAGC */\n\n/* Values for field \"mcttargetincreased\" */\n#define mctafqincreased                   0x80  /* - The AFQ targets where just                        */\n#define mctbelowafqincreased              0x40  /* - The AFQ below targets where                       */\n#define mctaboveafqincreased              0x20  /* - The AFQ above targets where                       */\n#define mctprestealincreased              0x10  /* - The PreSteal targets where                        */\n#define mctdrivestoragetargetadjustment   0x01  /* - Force target recalculation                        */\n\n/* Values for field \"mctwtor1flags\" */\n#define mctwtor1masteractive              0x80  /* WTOR active indicator       @LHIAUXC                */\n#define mctwtor1start                     0x40  /* Start Request from IRASTFXS @LHIAUXC                */\n#define mctwtor1stop                      0x20  /* Stop Request from IRASTFXS  @LHIAUXC                */\n#define mctwtor1delay                     0x01  /* Delay the next WTOR         @ME13212                */\n\n/* Values for field \"mctwtor2flags\" */\n#define mctwtor2masteractive              0x80  /* WTOR active indicator       @LHIAUXA                */\n#define mctwtor2start                     0x40  /* Start Request from IRASTFXS @LHIAUXA                */\n#define mctwtor2stop                      0x20  /* Stop Request from IRASTFXS  @LHIAUXA                */\n#define mctwtor2delay                     0x01  /* Delay the next WTOR         @ME13212                */\n\n/* Values for field \"mctfixedfl\" */\n#define mctfixedculpritprocessingneeded   0x80  /* - Fixed storage culprit                             */\n\n/* Values for field \"mctend\" */\n#define mctlen                            0x388 /* -        LENGTH OF MCT                              */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "MD5": {"ttr": 8249, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_MD5\n#define INCLUDE_MD5\n\n\n/* MD5.H - header file for MD5C.C\n */\n\n/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\nrights reserved.\n\nLicense to copy and use this software is granted provided that it\nis identified as the \"RSA Data Security, Inc. MD5 Message-Digest\nAlgorithm\" in all material mentioning or referencing this software\nor this function.\n\nLicense is also granted to make and use derivative works provided\nthat such works are identified as \"derived from the RSA Data\nSecurity, Inc. MD5 Message-Digest Algorithm\" in all material\nmentioning or referencing the derived work.\n\nRSA Data Security, Inc. makes no representations concerning either\nthe merchantability of this software or the suitability of this\nsoftware for any particular purpose. It is provided \"as is\"\nwithout express or implied warranty of any kind.\n\nThese notices must be retained in any copies of any part of this\ndocumentation and/or software.\n */\n\n\n/* PROTOTYPES should be set to one if and only if the compiler supports\n  function argument prototyping.\n  The following makes PROTOTYPES default to 0 if it has not already\n  been defined with C compiler flags.\n */\n#ifndef PROTOTYPES\n#define PROTOTYPES 1\n#endif\n\n/* POINTER defines a generic pointer type */\ntypedef unsigned char *POINTER;\n\n/* UINT2 defines a two byte word */\ntypedef unsigned short int UINT2;\n\n/* UINT4 defines a four byte word */\ntypedef unsigned long int UINT4;\n\n/* PROTO_LIST is defined depending on how PROTOTYPES is defined above.\nIf using PROTOTYPES, then PROTO_LIST returns the list, otherwise it\n  returns an empty list.\n */\n#if PROTOTYPES\n#define PROTO_LIST(list) list\n#else\n#define PROTO_LIST(list) ()\n#endif\n\n/* MD5 context. */\ntypedef struct \u00e4\n  UINT4 state\u00c44\u00dc;                                   /* state (ABCD) */\n  UINT4 count\u00c42\u00dc;        /* number of bits, modulo 2\u00ac64 (lsb first) */\n  unsigned char buffer\u00c464\u00dc;                         /* input buffer */\n\u00fc MD5_CTX;\n\nvoid MD5Init PROTO_LIST ((MD5_CTX *));\nvoid MD5Update PROTO_LIST\n  ((MD5_CTX *,  unsigned char *, int));\nvoid MD5Final PROTO_LIST (( unsigned char \u00c416\u00dc, MD5_CTX *));\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MERROR": {"ttr": 7923, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/merror.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MERROR\n#define INCLUDE_MERROR\n\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\n\n\n\n\n#ifndef mERRORP\n#define mERRORP mERROR *\n#endif\n\nclass mERROR;\n\nclass mERRORPSTACK \u00e4\nprivate:\n   long int ip;\n   long int max;\n   mERRORP * sp;\npublic:\n   mERRORPSTACK(long int size=256);\n   void push(mERRORP value);\n   mERRORP examine();\n   int    callNextHandler(int);\n   mERRORP pop();\n   void  reset();\n  \u00dfmERRORPSTACK();\n\n\u00fc;\n\n\nclass mERROR\n\u00e4\nprotected:\n   char err;\n   int (* handler)(int);\nenum ERROR_ACTION\u00e4Warning, Abort\u00fc;\npublic:\n\nstatic int max_rc;\n\nfriend class mERRORPSTACK;\n   mERROR();\n   mERROR(int (*)(int) );\n\t virtual \u00dfmERROR()\u00e4\u00fc;\n   long int iserror()\u00e4return err;\u00fc\n   int  markerror(int code = 1)\n   \u00e4\n    err = 1;\n    if (handler) return (handler(code));\n    else return 0;\n   \u00fc\n   void clearerror()\u00e4err = 0;\u00fc\n   void setmERRORHandler(int (*h)(int))\u00e4handler = h;\u00fc\n   int error(char *,ERROR_ACTION);\n\u00fc;\n\nextern mERRORPSTACK mErrorPStack;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MFILE": {"ttr": 8305, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_MFILE\n#define INCLUDE_MFILE\n\n#include \"mvsbase.hpp\"\n#include \"mchain.hpp\"\n#include <fcntl.h>\n\ntypedef char * CHARP;\n\nclass MemoryFile;\n\nclass MemoryFileSystem : public SORTEDmCHAIN\n\u00e4\nprivate:\n\tCHAINITER  * iter;\npublic:\n\tstatic int unitsize;\n\tstatic int numberofunits;\n\tMemoryFileSystem();\n\tvirtual \u00dfMemoryFileSystem();\n\tMemoryFile * add(const char *, int);\n\tint          del(char *);\n\u00fc;\n\n\nclass MemoryFile: public chainE\n\u00e4\nprivate:\n\tenum STATUS \u00e4 Sreset , Sopen , Sclose, Serror \u00fc;\n\tchar * * memory;\n\tint  flags;\n\tint  lastpos;\n\tint  newpos;\n\tint  seekpending;\n\tint  pos;\n\tint  units;\n\tSTATUS   status;\npublic:\n\tMemoryFile(char *,int);\n\t\u00dfMemoryFile();\n\tint  close();\n\tlong lseek(long,int);\n\tint  open(int);\n\tint  read(char * , unsigned);\n\tint  write(const char *,unsigned);\n\tint  changepos(int);\n\tint  o2i(int ,int&);\n\tint  i2o(int , int);\n\u00fc;\n\nint \tMFS_close(int );\nint \tMFS_creat(const char *);\nlong    MFS_lseek(int,long,int);\nint     MFS_open(const char *,int);\nint     MFS_read(int, void *,unsigned);\nint     MFS_write(int,const void *,unsigned);\nint     MFS_remove(char *);\n\n\n\n #endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MISC": {"ttr": 8077, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/misc.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MISC\n#define INCLUDE_MISC\n\n#ifdef OWN_STDIO\n#include \"stdio.hpp\"\n#else\n#include <stdio.h>\n#endif\n\n#include <time.h>\n#include \"mvsbase.hpp\"\n#include <stdlib.h>\n\n#ifndef TRUE    /* stl 20090508 */\n#define TRUE 1\n#endif          /* stl 20090508 */\n#ifndef FALSE    /* stl 20090508 */\n#define FALSE 0\n#endif          /* stl 20090508 */\n\nunsigned long cvb(unsigned long,unsigned long = 8);\nunsigned long cvd(unsigned long);\nvoid    formatTime(char *,int,char *); //szm20061221 needed by dssn\n\n#if defined(CICSAPPL)  ]]  defined(MU_STANDALONE) //szm\nint dump(FILE *,char *, char *,  int );\nint dump(FILE *,char *, void * , int );\nint dump(char *,int, char *, int);\n\nint  fromInt(char *,long ,int  = sizeof(long));\nlong toInt(char *,int);\nlong toInt(unsigned char *,int);\nint  roundToInt(double);\n\nint   Char2Hex(char *);\nchar * Hex2Char(char );\nint   isnull(char *,int = 0 );\n\n#if 0\nunsigned char miscEtoa(unsigned char );\nunsigned char miscAtoe(unsigned char );\n// start of lines inserted from older MISC            PB n:2002.06.18.\nunsigned char miscetoa(unsigned char );\nunsigned char miscatoe(unsigned char );\n// end   of lines inserted from older MISC            PB n:2002.06.18.\nint   ActualtoE(char *,char *, int = 0);\nint   ActualtoA(char *,char *, int = 0);\nint   EtoActual(char *,char *, int = 0);\nint   AtoActual(char *,char *, int = 0);\nint   miscEtoA(char *,char *, int = 0);\nint   miscAtoE(char *,char *, int = 0);\nint   miscAtoActual(char *, char * =0, int = 0);\nint   miscActualtoA(char *, char * =0, int = 0);\nchar*  miscActualtoAp(char *f,char *t=0, int l= 0);\n#endif\n//void  getUniqueKey(char *); //szm20050323 moved to rarcsql.hpp\n\nchar*   getTimeStemp();\nint     DatetoTm(tm&,char *);\nchar *  DatetoString(tm, char *);\n#endif  //szm\n\nvoid  getUniqueKEY(char *);\nvoid  getUniqueLongKEY(char *);\nchar*   DatetoString();\nchar *\tDatetoIBM(char * from);\n\n\n//KV20040824 conflicting declaration in miscmq.hpp\n//char* StrTok(char *, char *);\n//KV20050426 naming conflict with class List in pocxxhcl/qdir.cpp\n// did not fine use of this function\n//int   List(const char *,const char *\u00c4\u00dc);\nint   strcmpiList(const char *,const char *\u00c4\u00dc,int &);\n\nchar *strrev(char *s);         /*szm20020927*/\n\nmvsSTRING makemvsSTRING(char *,int);\n\n#if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n  int stcpma(char * ,const char * );\n  void * memcpyp(void *,const void*,size_t,size_t,int);\n    #ifndef max\n        #define max(a,b) (((a)<(b))?(b):(a))\n    #endif\n    #ifndef min\n        #define min(a,b) (((a)>(b))?(b):(a))\n    #endif\n#endif\n\n#if defined(ISIS_PF_HOST) == 1 //ZA030923\n\n// start of lines inserted from older MISC            PB n:2002.06.18.\nchar * Astrupr(char *, int);\nchar * ConvertmvsSTRINGToAscii( char *, int);\nchar aup(char);\n//unsigned int  ungerade(int); //ZA030924\nvoid  swab( char *,char *, int);\nchar *  StrDup(char *);\n#endif\n\nchar   bit_rotate(unsigned char);\nmvsSTRING makemvsSTRING(char *,int);\nextern char __test__ ;\n\nextern unsigned char ETOA\u00c4256\u00dc;\nextern unsigned char ATOE\u00c4256\u00dc;\n#if defined(ISIS_PF_MU) ]] defined(ISIS_PF_MI)\n//szm\n#if defined(OWN_STDIO) == 0 //ZA050715\ninline int ffixed(FILE * f)\n\u00e4\n      fldata_t ft;\n      char fn\u00c4256\u00dc;\n      if (fldata(f,fn,&ft) == 0)\n         return (ft.__recfmF);\n      else\n\t\t\t\treturn 0;\n\u00fc\n#endif\n//szm\ninline void  strerror_r(int err, char *errmsg, int size)\n\u00e4\n    const char* msg=strerror(err);\n    if(strlen(msg)>size-1)\n    \u00e4\n        strncpy(errmsg,msg,size-1);\n        errmsg\u00c4size-1\u00dc='\u00d60';\n    \u00fc\n    else\n    \u00e4\n        strcpy(errmsg,msg);\n    \u00fc\n\u00fc\n#endif\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MNTE": {"ttr": 8589, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mnte \u00e4\n  struct \u00e4\n    int            _mntentfstype; /* File system type */\n    \u00fc mntentbodyv1v2;\n  struct \u00e4\n    unsigned char  _mntentfsmode1; /* File system mount method - byte 1 */\n    unsigned char  _mntentfsmode2; /* File system mount method - byte 2 */\n    unsigned char  _mntentfsmode3; /* File system mount method - byte 3 */\n    unsigned char  _mntentfsmode4; /* File system mount method - byte 4 */\n    \u00fc mntentfsmode;\n  int            mntentfsdev;            /* st_dev value to be returned by        */\n  int            mntentparentdev;        /* st_dev of the parent file system      */\n  int            mntentrootino;          /* ino of the mount point                */\n  unsigned char  mntentstatus;           /* Status of the file system             */\n  unsigned char  mntentfsddname\u00c49\u00dc;      /* DDNAME specified on mount - null      */\n  unsigned char  mntentfstname\u00c49\u00dc;       /* File system type name -               */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _mntentfsnam44\u00c444\u00dc; /* File system name - as a 44 byte field */\n      unsigned char  _filler1;\n      \u00fc _mnte_struct1;\n    unsigned char  _mntentfsname\u00c445\u00dc; /* File system name - for PDSE/X, this */\n    \u00fc _mnte_union1;\n  int            mntentpathlen;          /* length of mount point path name       */\n  unsigned char  mntentmountpoint\u00c41024\u00dc; /* Name of directory where the file      */\n  unsigned char  mntentjobname\u00c48\u00dc;       /* Job name of quiesce requestor    @D4C */\n  int            mntentpid;              /* PID of quiesce requestor              */\n  int            mntentparmoffset;       /* Offset of MntEntParm from MNTE        */\n  short int      mntentparmlen;          /* Length of mount parameter             */\n  unsigned char  mntentsysname\u00c48\u00dc;       /* Name of system to mount on       @DDA */\n  unsigned char  mntentqsysname\u00c48\u00dc;      /* Name of queisce system name      @DDA */\n  unsigned char  mntentfromsys\u00c48\u00dc;       /* Filesystems to be moved from here@DDA */\n  unsigned char  mntentres00\u00c42\u00dc;         /* Alignment                        @DDA */\n  struct \u00e4\n    unsigned char  _mntentrflags1; /* Request flags - byte 1           @DDA */\n    unsigned char  _mntentrflags2; /* Request flags - byte 2           @DDA */\n    unsigned char  _mntentrflags3; /* Request flags - byte 3           @DDA */\n    unsigned char  _mntentrflags4; /* Request flags - byte 4           @DDA */\n    \u00fc mntentrflags;\n  struct \u00e4\n    unsigned char  _mntentstatus2b1; /* Status of filesystem - byte 1 */\n    unsigned char  _mntentstatus2b2; /* Status of filesystem - byte 2 */\n    unsigned char  _mntentstatus2b3; /* Status of filesystem - byte 3 */\n    unsigned char  _mntentstatus2b4; /* Status of filesystem - byte 4 */\n    \u00fc mntentstatus2;\n  int            mntentsuccess;          /* Successful moves                 @DDA */\n  int            mntentreadct;           /* Number of reads from filesys     @DEA */\n  int            mntentwritect;          /* Number of writes done            @DEA */\n  int            mntentdiribc;           /* Number of directory I/O blocks   @DEA */\n  int            mntentreadibc;          /* Number of read I/O blocks        @DEA */\n  int            mntentwriteibc;         /* Number of write I/O blocks       @DEA */\n  unsigned char  mntentbytesread\u00c48\u00dc;     /* Number of bytes read             @DEA */\n  unsigned char  mntentbyteswritten\u00c48\u00dc;  /* Number of bytes written          @DEA */\n  unsigned char  mntentfiletag\u00c44\u00dc;       /* File tag (see BPXYSTAT)          @DFC */\n  int            mntentsyslistoffset;    /* Offset of system list            @DJA */\n  short int      mntentsyslistlength;    /* Length of system list            @DJA */\n  short int      mntentaggnamelength;    /* Length of Aggregate name         @DIA */\n  int            mntentaggnameoffset;    /* Aggregate Name Offset or 0       @DIA */\n  unsigned char  mntentroseclabel\u00c48\u00dc;    /* Readonly seclabel                @DLA */\n  \u00fc;\n\n#define mntentfstype    mntentbodyv1v2._mntentfstype\n#define mntentfsmode1   mntentfsmode._mntentfsmode1\n#define mntentfsmode2   mntentfsmode._mntentfsmode2\n#define mntentfsmode3   mntentfsmode._mntentfsmode3\n#define mntentfsmode4   mntentfsmode._mntentfsmode4\n#define mntentfsnam44   _mnte_union1._mnte_struct1._mntentfsnam44\n#define mntentfsname    _mnte_union1._mntentfsname\n#define mntentrflags1   mntentrflags._mntentrflags1\n#define mntentrflags2   mntentrflags._mntentrflags2\n#define mntentrflags3   mntentrflags._mntentrflags3\n#define mntentrflags4   mntentrflags._mntentrflags4\n#define mntentstatus2b1 mntentstatus2._mntentstatus2b1\n#define mntentstatus2b2 mntentstatus2._mntentstatus2b2\n#define mntentstatus2b3 mntentstatus2._mntentstatus2b3\n#define mntentstatus2b4 mntentstatus2._mntentstatus2b4\n\n/* Values for field \"mntentfstype\" */\n#define mntentfstypemvs     1     /* MVS Local File System                 */\n#define mntentfstyperemote  2     /* Remote File System               @P2A */\n#define mntentfstypepipe    3     /* Pipe file system                      */\n#define mntentfstypesocket  4     /* Socket file system               @D3A */\n#define mntentfstypexpfs    5     /* Cross System PFS (XPFS)          @DAA */\n#define mntentfstypecsps    6     /* Char special streams             @DBA */\n#define mntentfstypenfs     0x02  /* @P2C                                  */\n\n/* Values for field \"mntentfsmode3\" */\n#define mntentfssynchonly   0x01  /* File system SynchOnly specified  @DKA */\n\n/* Values for field \"mntentfsmode4\" */\n#define mntentsecacl        0x80  /* Acls supported by sec product    @DHA */\n#define mntentfsaunmount    0x40  /* UnMount during recovery          @DGA */\n#define mntentfsclient      0x20  /* File system is a client          @DDA */\n#define mntentfsnoautomove  0x10  /* Automove allowed                 @DDA */\n#define mntentfsmodenosec   0x08  /* No Security checks enforced      @DCA */\n#define mntentfsmodeexport  0x04  /* File system exported by DFS      @D9A */\n#define mntentfsmodenosuid  0x02  /* SetUID not permitted for              */\n#define mntentfsmoderdonly  0x01  /* File system mounted read only         */\n#define mntentfsmoderdwr    0x00  /* File system mounted read/write        */\n\n/* Values for field \"mntentstatus\" */\n#define mntentfileactive    0x00  /* File system is active       @D4C      */\n#define mntentfiledead      0x01  /* File system is dead                   */\n#define mntentfilereset     0x02  /* File system being reset               */\n#define mntentfiledrain     0x04  /* File system being unmounted with      */\n#define mntentfileforce     0x08  /* File system being unmounted with      */\n#define mntentfileimmed     0x10  /* File system being unmounted with      */\n#define mntentfilenorm      0x20  /* File system being unmounted with      */\n#define mntentimmedtried    0x40  /* File system Umount immed failed       */\n#define mntentquiesced      0x80  /* File system is quiesced               */\n#define mntentmntinprogress 0x81  /* Mount in progress for                 */\n#define mntentasynchmount   0x82  /* Asynchronous mount in progress        */\n\n/* Values for field \"mntentrflags4\" */\n#define mntentchange        0x01  /* Change f.s. server request       @P3A */\n#define mntentnewauto       0x02  /* Change automove setting          @DDA */\n\n/* Values for field \"mntentstatus2b4\" */\n#define mntentunowned       0x01  /* File system unowned         @DDA      */\n#define mntentinrecovery    0x02  /* File system in recovery     @DDA      */\n#define mntentsuperquiesced 0x04  /* File system super quiesced  @DDA      */\n\n/* Values for field \"mntentroseclabel\" */\n#define mnte_length         0x4CC /* Length of this structure              */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "MNTEH": {"ttr": 8245, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mnteh \u00e4\n  unsigned char  mntehid\u00c44\u00dc;   /* Eye catcher                 @DEA    */\n  void          *mntehsize;    /* Size of area (MNTEH+MNTE)           */\n  unsigned char  mntehcur\u00c48\u00dc;\n  int            mntehdevno;   /* Device number - this value is       */\n  int            mntehblen;    /* Length of mnte body used       @DEA */\n  unsigned char  mntehres1\u00c48\u00dc; /* Reserved for future - must be zero  */\n  \u00fc;\n\n/* Values for field \"mntehres1\" */\n#define mnteh_length 0x20 /* Length of header structure */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "MPFXREC": {"ttr": 7905, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mpfxrec \u00e4\n  void          *mpfxrec_mpfxrec_size;          /* record size  */\n  void          *mpfxrec_mpfxrec_id;            /* record id    */\n  unsigned char  mpfxrec_mpfxrec_prddumpt;      /* dump type    */\n  unsigned char  mpfxrec_mpfxrec_flag1;\n  unsigned char  mpfxrec_mpfxrec_flag2;\n  unsigned char  mpfxrec_mpfxrec_flag3;\n  unsigned char  mpfxrec_mpfxrec_stck\u00c48\u00dc;       /* clock        */\n  unsigned char  mpfxrec_mpfxrec_sysname\u00c48\u00dc;    /* system name  */\n  unsigned char  mpfxrec_mpfxrec_jobname\u00c48\u00dc;    /* job name     */\n  unsigned char  mpfxrec_mpfxrec_jobid\u00c48\u00dc;      /* jobid        */\n  unsigned char  mpfxrec_mpfxrec_asid\u00c42\u00dc;       /* asid         */\n  unsigned char  mpfxrec_mpfxrec_console\u00c48\u00dc;    /* console name */\n  unsigned char  mpfxrec_mpfxrec_ctxttmsg\u00c4126\u00dc; /* message text */\n  \u00fc;\n\n/* Values for field \"mpfxrec_mpfxrec_id\" */\n#define mpfxrec_mpfxrec_id_mpfx 2    /* record id */\n\n/* Values for field \"mpfxrec_mpfxrec_ctxttmsg\" */\n#define mpfxrec_mpfxrec_length  0xB0\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "MPGETIDM": {"ttr": 8681, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "GET /cgi/getidmo?KD_ADR=*&KD_LAND=&KD_PLZ=&ORDERBY=NOORDER&PATH=HTMLTPL&TYPE=AFP&HITS=10&COUNT=10        HTTP/1.0\nHTMLTPL&TYP=AFP& HITS=10&COUNT=10\nConnection:Keep-Alive\nHost:10.1.6.1\nAccept-Language:en\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MPHTTP": {"ttr": 8573, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef   INCLUDE_MPHTTP\n#define   INCLUDE_MPHTTP\n\n#define _XOPEN_SOURCE_EXTENDED 1\n#define  _OPEN_SYS             1\n#define  _OPEN_THREADS         1\n\n\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <sys/time.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <fcntl.h>\n#include <errno.h>\n#include <netinet/in.h>\n#include <errno.h>\n\n#include \"mpthread.hpp\"\n\n#define MsgMPHTTP 7700\n\nclass sendEntry \u00e4\npublic:\n    sendEntry         * next;\n    char              * text;\n    sendEntry(char * t)\n    \u00e4\n     next = NULL;\n     text = new char\u00c4strlen(t)+1\u00dc;\n     strcpy(text,t);\n    \u00fc\n    \u00dfsendEntry()\n    \u00e4\n      if (text)\n         delete \u00c4\u00dc text;\n      text = 0;\n     \u00fc\n\u00fc;\n\ntypedef sendEntry * pSendEntry;\n\nclass mpHTTP: public mpTHREAD\n\u00e4\npublic:\nstatic     sendEntry *     sE;\nstatic     char *          URL;\nstatic     char *          port;\nstatic     timeval         timeout;\nstatic     int             connwait;\nprivate:\n    int     socket;\n    sockaddr_in   sockaddr;\n    fd_set readSockets;\n    fd_set writeSockets;\n    fd_set exceptionSockets;\n    int    send_flag;\n    int    recv_flag;\n\npublic:\n    mpHTTP(int);\n    \u00dfmpHTTP();\n    int mpThreadProcess(void *);\nprivate:\n    int  diag(char *);\n\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MPTESTER": {"ttr": 8611, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef   INCLUDE_MPTESTER\n#define   INCLUDE_MPTESTER\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MPTHREAD": {"ttr": 8113, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef   INCLUDE_MPTHREAD\n#define   INCLUDE_MPTHREAD\n\n#include <stdlib.h>\n#include <time.h>\n#include \"merror.hpp\"\n\n#ifndef  ERROR_CODE\n #define  ERROR_CODE -1\n#endif\n\n#ifndef MAX_BUFFER_SIZE\n    #define MAX_BUFFER_SIZE 128000\n#endif\n\nclass mpTHREAD:public mERROR\n\u00e4\nprotected:\n    char * buf;\n    char * off;\n    size_t len;\n    int    rc;\n    time_t timeS;\n    time_t timeP;\n    size_t snd;\n    size_t rcv;\n    int    repeat;\npublic:\n    mpTHREAD(int);\n    \u00dfmpTHREAD();\n    virtual int mpThreadProcess(void *) = 0;\n    virtual diag(char *) = 0;\n\u00fc;\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGMGR": {"ttr": 8633, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/msgmgr.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n\n#ifndef INCLUDE_MSGMGR\n#define INCLUDE_MSGMGR\n\n#ifndef OWN_STDIO\n#include <stdio.h>\n#endif\n#include \"mvsbase.hpp\"\n#include \"misc.hpp\"\n\nnamespace isis_ns_mvs\n\t\u00e4\n\n\t/*--------------------------------------------------------------------+\n\t|                                                                     |\n\t| Message generation                                                  |\n\t|                                                                     |\n\t+--------------------------------------------------------------------*/\n\n\n\tenum MSGETypes\u00e4msgundef = 0, msgint    = 1,\n\t\tmsgshort = 2, msgcharp  = 3,\n\t\tmsgchar  = 4,  msgmvsSTRING = 5\u00fc;\n\n\n\tenum MSGEForm\u00e4msgfundef = 0, msgfd = 1, msgfs = 2, msgfx =3 , msgfc = 4\u00fc;\n\tclass MSGE\n\t\t\u00e4\n\t\tprivate:\n\t\t\tint         length;\n\t\t\tMSGEForm    form;\n\t\t\tMSGETypes   type;\n\t\t\tchar *      to;\n\t\t\tunion\u00e4\n\t\t\t\tchar     mchar;\n\t\t\t\tint      mint;\n\t\t\t\tshort    mshort;\n\t\t\t\tchar   * mcharp;\n\t\t\t\tmvsSTRING * mmvsSTRING;\n\t\t\t\t\u00fc;\n\t\tpublic:\n\t\t\tMSGE();\n\t\t\tMSGE(int i,int l=sizeof(int), MSGEForm f = msgfd);\n\t\t\tMSGE(short s,int l = sizeof(short), MSGEForm f= msgfd);\n\t\t\tMSGE(char * c,int l = 0, MSGEForm f = msgfs);\n\t\t\tMSGE(const mvsSTRING &s,int l = 0,MSGEForm f = msgfs );\n\t\t\tMSGE(char c);\n\n\t\t\t\u00dfMSGE()\n\t\t\t\t\u00e4\n\t\t\t\tif ( type == msgmvsSTRING) delete mmvsSTRING;\n\t\t\t\tif ( to ) delete \u00c4\u00dc to;\n\t\t\t\t\u00fc\n\t\t\tchar * format();\n\t\t\u00fc;\n\n\n\tclass EOL\u00e4\n\t\t\u00fc;\n\tconst EOL eol=EOL();\n\n\tMSGE * tCHARp(char * ,int  = 0);\n\n\tMSGE * tINT(int ,int = sizeof(int));\n\n\tMSGE * tSHORT(int ,int  = sizeof(short));\n\n\tMSGE * tmvsSTRING(mvsSTRING & ,int  = 0);\n\n\tMSGE * tHEX(int  ,int = (sizeof(int)*2) );\n\n\tMSGE * tHEX(char * , int);\n\n\n\n\t/* structure table for the used ENTRY     panels                      */\n\tenum FLAG_VALUE\u00e4 FLAG_TEXT = 5, FLAG_IO = 4\u00fc;\n\n\ttypedef   struct  ENTRY\n\t\t\u00e4\n\t\tchar * name     ;\n\t\tchar flag       ;\n\t\tint  xcoord     ;\n\t\tint  ycoord     ;\n\t\tint  length     ;\n\t\tchar attrib     ;\n\t\tint  access     ;\n\t\tchar fieldtype  ;\n\t\tchar align      ;\n\t\tchar caps       ;\n\t\tchar * defvalue ;\n\t\t\u00fc\n\tentry               ;\n\n\n\t/* the HELP and LIST panels and the messages need no structure defin's*/\n\t/* structure table for the used SELECTION panels                      */\n\n\ttypedef   struct  SELECTION\n\t\t\u00e4\n\t\tchar * line     ;\n\t\tint  access     ;\n\t\t\u00fc\n\tselection           ;\n\tstruct et\n\t\t\u00e4\n\t\tchar *   cid ;\n\t\tchar * * ett;\n\t\t\u00fc ;\n\n\n\n\n\n\tstruct TEXTENTRY\n\t\t\u00e4\n\t\tint i;\n\t\tchar * t;\n\t\t\u00fc;\n\n\n\tclass  MessageTEXT\n\t\t\u00e4\n\t\tprivate:\n\t\t\tchar timestemp;\n\t\t\tint (*printfv)(char *);\n\t\t\tchar * msgfilename;\n\t\t\tbool   logger;\n\t\t\tbool   onlylogger;\n\t\t\tFILE  * msgfile;\n\t\t\tTEXTENTRY *  vector;\n\t\t\tMSGE * v\u00c48\u00dc;\n\t\t\tint    vi;\n\t\t\tint    number;\n\t\t\tchar   deflt\u00c4256\u00dc;\n\n\t\tpublic:\n\t\t\tMessageTEXT(char * = 0,char * = 0);\n\t\t\t\u00dfMessageTEXT();\n\t\t\tMessageTEXT& operator<<(char *);\n\t\t\tMessageTEXT& operator<<(const mvsSTRING &);\n\t\t\t//MessageTEXT& operator<<(short);\n\t\t\tMessageTEXT& operator<<(int );\n\t\t\tchar *       operator<<(const EOL);\n\t\t\tMessageTEXT& operator<<(void *);\n\t\t\tchar * getText(int);\n\t\t\tint    copyText(int, char *, int);\n\t\t\tchar * print(char *);\n\t\t\tvoid   resetPrintFv()\u00e4 printfv = 0;\u00fc\n\t\tvoid   setPrintFv(int (*pfv)(char *))\u00e4 printfv= pfv;\u00fc\n\tvoid   setLogger(const char *);\n\tvoid   setOnlyLogger(const char * l)\n\t\t\u00e4\n\t\tsetLogger(l);\n\t\tonlylogger = logger;\n\t\t\u00fc\n\tvoid   setFILE(FILE *);\n\tFILE*  getFILE()\u00e4return msgfile;\u00fc\nvoid   setFileName(char *);\nvoid   setTimeStempFlag(char c = 1)\u00e4timestemp = c;\u00fc\nchar   getTimeStempFlag()\u00e4 return timestemp;\u00fc\nvoid   setNumber(int n);\n\t\t\u00fc;\n\n\tISIS_EXT_C typedef void * (*EXT_C_fp)();\n\n\n\tclass ExternalTEXT\n\t\t\u00e4\n\t\tprivate:\n\t\t\tEXT_C_fp fp;\n\t\t\tchar   language;\n\t\t\tchar   modulname\u00c48\u00dc;\n\t\t\tvoid * text ;\n\t\t\tvoid init(char * name);\n\t\tpublic:\n\t\t\tExternalTEXT(char * name,char lang);\n\t\t\tExternalTEXT(char * name);\n\n\t\t\t//???~TEXT(){if (fp) unloadm(fp);}\n\t\t\tint         MSGTEXT(int id, char * buff,int len);\n\t\t\tchar      * HelpText(char * hid);\n\t\t\tentry     * EntryText(char * hid);\n\t\t\tselection * SelectionText(char * hid);\n\t\t\u00fc;\n\n\textern ExternalTEXT * externaltext;\n\n\n\n\textern  MessageTEXT * messagetext;\n\tint initMessageText();\n\n\tint     Error(int , ...);\n\tchar *  Message(int , ...);\n\tchar *  getErrorText();\n\tchar *  getMessageText();\n\tMessageTEXT& Err(int);\n\tMessageTEXT& Msg(int);\n\n\t\u00fc //namespace isis_ns_mvs\n\nusing namespace isis_ns_mvs;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGTEXT": {"ttr": 8475, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/msgtext.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\nt(1,\"UPR0001E unable to allocate '%s' bytes\")\nt(2,\"UPR0002E open error for '%s' in '%s' mode\")\nt(3,\"UPR0003E error in '%s' function, errorcode:'%s'\")\nt(100,\"UPR0100I UPR program starts\")\nt(101,\"UPR0101I trace: '%s'\")\nt(102,\"UPR0102I trace: '%s' '%s'\")\nt(103,\"UPR0103I trace: '%s' '%s' '%s'\")\nt(104,\"UPR0104I trace: '%s' '%s' '%s' '%s'\")\nt(105,\"UPR0105I trace: '%s' '%s' '%s' '%s' '%s'\")\nt(110,\"UPR0110E unable to open:'%s'\")\nt(111,\"UPR0111E serious error above, execution terminating\")\nt(112,\"UPR0112I %s\")\nt(113,\"UPR0113I including from :'%s\")\nt(114,\"UPR0114I starting DUMP function\")\nt(115,\"UPR0115I starting RESTORE function\")\nt(301,\"UPR0301E function %s returned %s code\")\nt(201,\"UPR0201E the error above prevents continuations\")\nt(202,\"UPR0202E abnormal termination\")\nt(301,\"UPR0301E SUBTASK error, MVS function '%s' returned with rc:%s\")\nt(302,\"UPR0302E SUBTASK error, unable to load '%s\")\nt(400,\"UPR0400I job: %s(%s) in %s program\")\nt(500,\"UPR0500I terminating for user request's\")\n\n//*\n//* UPRUN   1000\n//*\nt(1000,\"UPR1000I Starting Up and Running address space %s(%s) Version:%s Compiled :%s\")\nt(1001,\"UPR1001I %s module will start the programs\")\nt(1002,\"UPR1002I starting subtask %s with : '%s'\")\nt(1003,\"UPR1003I started %s subtask with %s PID \")\nt(1004,\"UPR1004I '%s' command entered\")\nt(1005,\"UPR1005I Up and Running address space is stopping\")\nt(1006,\"UPR1006I started %s subtask RESTARTED with %s PID \")\nt(1009,\"UPR1009E unable to open '%s, aborted\")\nt(1010,\"UPR1010E in '%s' serious error: %s\")\nt(1020,\"UPR1020I pipe: '%s' blocked for %s\")\nt(1021,\"UPR1021I unable to restart %s subtask, suspect a loop, %s\")\nt(1022,\"UPR1022E no active task, we terminate now\")\nt(1023,\"UPR1023I %s %s\")\nt(1030,\"UPR1030I a STOP command received\")\nt(1031,\"UPR1031A %s job, reply with P (stop) or F ( modify)\")\n//*\n//* FILESYS 1100\n//*\nt(1101,\"HTW1101E Invalid file mode for '%s' file, '%s' ignored\")\nt(1102,\"HTW1102E READ/WRITE open mode for '%s' ignored\")\nt(1103,\"HTW1103E TRUNC/EXCL option ignored for '%s'\")\nt(1104,\"HTW1104E Unable to open '%s' as '%s' file\")\nt(1105,\"HTW1105E Unable to create LBUFF for  '%s'\")\nt(1106,\"HTW1106E Unable to create RBUFF for  '%s'\")\nt(1107,\"HTW1107I Using Email:%s for Userid:%s\")\n//*\n//* STR???   1200\n//*\n\nt(1200,\"STR0000I ISIS Information Systems   %s Program, Version: %s Compiled: %s\")\nt(1201,\"STR1201E unable to open '%s' parameterfile\")\nt(1202,\"STR1202I %s\")\nt(1203,\"STR1203W invalid keyword '%s', ignored\")\nt(1204,\"STR1204E unable to open pipe '%s'\")\nt(1205,\"STR1205E unable to open file '%s'\")\nt(1206,\"STR1206I >> %s\")\nt(1207,\"STR1207E write error for '%s' file\")\nt(1211,\"STR1211I transfered %s bytes over '%s'\")\nt(1212,\"STR1212I received %s bytes over '%s'\")\nt(1214,\"STR1214I '%s' ended with 0, Runtime:%s Cputime:%s\")\nt(1215,\"STR1215W no output generated, '%s' ended with 4, Runtime:%s Cputime:%s\")\nt(1216,\"STR1216E pipe name '%s' invalid\")\nt(1217,\"STR1217I '%s' primary pipe selected\")\nt(1218,\"STR1218I using %s pipe's and waiting for %s seconds\")\nt(1220,\"STR1220E timeout occured for '%s' pipe\")\nt(1221,\"STR1221E %s error occured for '%s' pipe, ERRNO: %s(%s)\")\nt(1222,\"STR1222E '%s' pipe is in invalid status\")\nt(1223,\"STR1223E %s\")\nt(1224,\"STR1224E timeout occured for '%s' pipe and '%s' pipe\")\nt(1225,\"STR1225E %s error occured for '%s' pipe, and '%s' pipe ERRNO: %s(%s)\")\nt(1299,\"STR1299E serious error occured\")\n\nt(1300,\"PPH1300E Product licence expired , contact with ISIS\")\nt(1301,\"PPH1301E DocumentQueue feature inactive, contact with ISIS\")\n//*\n//* IQC 1400\n//*\nt(1400,\"IQC1400E %s communication error %s - %s code: %s %s\")\nt(1401,\"IQC1401W %s waiting for connection, I will try in every %s second\")\nt(1500,\"EML1500I ISIS Information Systems Program:%s ,Version:%s Compileed:%s\")\nt(1501,\"EML1501E unable to open %s\")\nt(1502,\"EML1502I %s\")\nt(1503,\"EML1503W inavlid keyword:%s, ignored\")\nt(1507,\"EML1507I Email address:'%s' will be used for %s user\")\nt(1514,\"EML1514I %s ended with 0, Sent:%s bytes, Runtime:%s Cputime:%s\")\nt(1515,\"EML1515W no output generated, %s ended with 4, Runtime:%s Cputime:%s\")\nt(1527,\"EML1527I opening %s , to copy the attachments\")\nt(1528,\"EML1528I opening %s to attach as %s\")\nt(1528,\"EML1529I opening %s to attach as plain/text\")\nt(1530,\"EML1530I %s\")\nt(1599,\"EML1599E serious error occured\")\n//*\nt(2000,\"PPH2000E CICS error : '%s' function\")\nt(2001,\"PPH2001E file '%s' open error in '%s' mode\")\nt(2002,\"PPH2002E file '%s' WRITE error\")\nt(2003,\"PPH2003E file '%s' READ error\")\nt(2004,\"PPH2004I trace about '%s' function\")\nt(2005,\"PPH2005E invalid general CICS file '%s'\")\nt(2006,\"PPH2006E unable to get resource '%s'\")\nt(2007,\"PPH2007W waiting for resource '%s'\")\nt(2100,\"PPH2100E CICS error %s \")\nt(2101,\"PPH2101E open error for the library\")\nt(2101,\"PPH2101E open error for the library\")\nt(2102,\"PPH2102E open error for the library directory\")\nt(2102,\"PPH2102E open error for the library directory\" )\nt(2103,\"PPH2103E member not found:'%s' ; return code:'%s'\")\nt(2103,\"PPH2103E member not found:'%s' ; return code:'%s'\" )\nt(2104,\"PPH2104E file length RDF:'%s' AFPDS length:'%s' '%s'\")\nt(2104,\"PPH2104E file length missmatch RDF:'%s' AFPDS length:'%s' '%s'\" )\nt(2105,\"PPH2105E file too long record:'%s'\")\nt(2105,\"PPH2105E file too long record:'%s'\")\nt(2106,\"PPH2106E error during a READ operation \")\nt(2106,\"PPH2106E error during a READ operation \")\nt(2110,\"PPH2110E file error, operation:'%s' key:'%s'\")\nt(2110,\"PPH2110E file error, operation:'%s' key:'%s'\")\nt(2111,\"PPH2111E already ENQ'd the resource:'%s'\")\nt(2111,\"PPH2111E already ENQ'd the resource:'%s'\")\nt(2112,\"PPH2112E resource '%s' allocated to another user\")\nt(2112,\"PPH2112E resource '%s' allocated to another user\")\nt(2113,\"PPH2113E error during ''%s'' function\")\nt(2113,\"PPH2113E error during ''%s'' function\")\nt(2120,\"PPH2120E error , unable to take a socket from the TCP/IP listener, errno:%s\")\nt(2121,\"PPH2121I Socket '%s' taken , Client name: '%s' Client subtask: '%s'\")\nt(2122,\"PPH2122E '%s' connection - error in '%s' function, errorcode:%s\")\nt(2123,\"PPH2123I '%s'<%s> connected on %s port\")\nt(2124,\"PPH2124E unable to convert symbolic host addres '%s', use explicit IP address\")\nt(2125,\"PPH2125E TCPACCESS error : '%s'\")\nt(2130,\"PPH2130A unable to allocate session with '%s' system, reply 'R' for retry 'A' for abort\")\nt(2131,\"PPH2131A communication error '%s', reply 'C' to continue\")\nt(2132,\"PPH2132A communication error  by partner '%s' reply  'C' to continue\")\nt(2133,\"PPH2133A TS QUEUE %s near to full reply 'C' to continue\")\nt(2134,\"PPH2134A PPHC log queue full, queue will be deleted, reply 'C' to continue\")\nt(2160,\"PPH2160A unable to allocate session with '%s' system\")\nt(2161,\"PPH2161A communication error '%s'\")\nt(2162,\"PPH2162A communication error  by partner '%s'\")\nt(2163,\"PPH2163A TS QUEUE %s near to full\")\nt(2164,\"PPH2164A PPHC log queue full, queue will be deleted\")\nt(2402,\"PPH2402W undefined selection panel '%s' \")\nt(2403,\"PPH2403W undefined list panel '%s' \")\nt(2404,\"PPH2404W undefined entry panel '%s' \")\nt(2501,\"PPH2501E the field should have a value\")\nt(2502,\"PPH2502E invalid listbox value\")\nt(2503,\"PPH2503E invalid field type\")\nt(2504,\"PPH2504E invalid value\")\n//*\n//* TSO 2600\n//*\nt(2601,\"HTW2601E open error for the library\")\nt(2602,\"HTW2602E open error for the library directory\" )\nt(2603,\"HTW2603E member not found:'%s' ; return code:'%s'\")\nt(2604,\"HTW2604E file length missmatch RDF:'%s' AFPDS length:'%s' '%s'\")\nt(2605,\"HTW2605E file too long record:'%s'\")\nt(2606,\"HTW2606E error during a READ operation \" )\nt(2607,\"HTW2607E VDELETE error for '%s' rc;'%s'\" )\nt(2608,\"HTW2608E VDEFINE error for '%s' rc;'%s'\")\nt(2609,\"HTW2609E display error\")\nt(2610,\"HTW2610E file error, operation:'%s' key:'%s'\")\nt(2611,\"HTW2611E already ENQ'd the resource:'%s'\")\nt(2612,\"HTW2612E resource '%s' allocated to another user\")\nt(2613,\"HTW2613E error during '%s' function\")\nt(2614,\"HTW2614E %s\")\n\n#if 0\nt(2601,\"PPH2601E Invalid file mode for '%s' file, '%s' ignored\")\nt(2602,\"PPH2602E READ/WRITE open mode for '%s' ignored\")\nt(2603,\"PPH2603E TRUNC/EXCL option ignored for '%s'\")\nt(2604,\"PPH2604E Unable to open '%s' as '%s' file\")\nt(2605,\"PPH2605E Unable to create LBUFF for  '%s'\")\nt(2606,\"PPH2606E Unable to create RBUFF for  '%s'\")\n#endif\nt(2801,\"PPH2801E open error for the library\")\nt(2802,\"PPH2802E open error for the library directory\" )\nt(2803,\"PPH2803E member not found:'%s' ; return code:'%s'\")\nt(2804,\"PPH2804E file length missmatch RDF:'%s' AFPDS length:'%s' '%s'\")\nt(2805,\"PPH2805E file too long record:'%s'\")\nt(2806,\"PPH2806E error during a READ operation \" )\nt(2807,\"PPH2807E VDELETE error for '%s' rc;'%s'\" )\nt(2808,\"PPH2808E VDEFINE error for '%s' rc;'%s'\")\nt(2809,\"PPH2809E display error\")\nt(2810,\"PPH2810E file error, operation:'%s' key:'%s'\")\nt(2811,\"PPH2811E already ENQ'd the resource:'%s'\")\nt(2812,\"PPH2812E resource '%s' allocated to another user\")\nt(2813,\"PPH2813E error during '%s' function\")\nt(3001,\"PPH3001A Confirm request to delete '%s'\")\nt(3002,\"PPH3002E unable to get from :'%s' file :'<%s>%s.%s - request send error\")\nt(3003,\"PPH3003E unable to get from :'%s' file :'<%s>%s.%s - receive timeout\")\nt(3004,\"PPH3004I receiving file : '<%s>%s.%s'\")\nt(3005,\"PPH3005W no insert into the request queue\")\nt(3006,\"PPH3006I sending file : '<%s>%s.%s'\")\nt(3101,\"PPH3101A confirm to delete %s \")\nt(3102,\"PPH3102E name field empty\")\nt(3103,\"PPH3103E name already defined\")\nt(3201,\"PPH3201A Confirm request to delete '%s'\")\nt(3202,\"PPH3202E Input file '%s' open error\")\nt(3210,\"PPH3210E PPHCEXIT routine replied with ABORT for %s request\")\nt(3211,\"PPH3211I '%s' request %s opened '%s'\")\nt(3212,\"PPH3212I '%s' request %s processed by PPHCEXIT\")\n#if defined(CICS_MSG) == 1\nt(4000,\"<JobIdentification>\")\nt(4001,\" Jobname=%s\")\nt(4002,\" JobID=%s\")\nt(4003,\" UserID=%s\")\nt(4004,\" Programmer=%s\")\nt(4005,\" Room=%s\")\nt(4006,\" ProcStepName=%s\")\nt(4007,\" StepName=%s\")\nt(4008,\" DDName=%s\")\nt(4009,\" DatasetName=%s\")\nt(4010,\" Group=%s\")\nt(4011,\" GroupID1=%s\")\nt(4012,\" GroupID2=%s\")\nt(4013,\" DatasetId=%s\")\nt(4014,\" Device=%s\")\nt(4015,\" Version=%s %s\")\nt(4016,\" OutputProfile=%s\")\nt(4017,\" DocexecProfile=%s\")\nt(4018,\" RequestID=%s\")\nt(4019,\" TimeStemp=%s\")\nt(4920,\" Connection = %s %s\")\nt(4020,\"<JesParms>\")\nt(4021,\" %s=%s\")\nt(4022,\" Sysout=%s\")\nt(4023,\"<USERDATAParms>\")\nt(4031,\" %s=%s\")\nt(4032,\" USERDATA=%s=%s\")\nt(4040,\"<Data>\")\nt(4041,\" DataProfile=%s\")\nt(4042,\" DataMember=%s\")\nt(4043,\" DataExtension=%s\")\nt(4044,\" DataRecordCount=%s\")\nt(4045,\" DataSetSize in K bytes=%s\")\nt(4050,\"<Resource>\")\nt(4051,\" SendResource=%s\")\nt(4052,\" ResourceProfile=%s\")\nt(4062,\" ArchiveRecord=%s\")\nt(4063,\" TargetProfile=%s Member=%s Extension= %s RecordCount= %s\")\nt(4071,\"*Resource Name=%s Type=%s not found\")\nt(4080,\"<Control>\")\nt(4081,\" ControlProfile= %s\")\nt(4082,\" ControlMember=%s\")\nt(4083,\" ControlExtension=%s\")\nt(4084,\" ControlRecordCount=%s\")\nt(4101,\"PPH4101A Confirm request to delete %s USER\")\nt(4102,\"PPH4102E Unable to get the record:%s from the UDFILE\")\nt(4103,\"PPH4104E Already defined %s\")\nt(4104,\"PPH4104E Blank key not allowed\")\nt(4120,\" FON         =%s/%s/<%s>\")\nt(4121,\" CHS         =%s/%s/<%s>\")\nt(4122,\" CDP         =%s/%s/<%s>\")\nt(4123,\" OVL         =%s/%s/<%s>\")\nt(4124,\" FDF         =%s/%s/<%s>\")\nt(4125,\" PDF         =%s/%s/<%s>\")\nt(4126,\" PSG         =%s/%s/<%s>\")\nt(4127,\" DFD         =%s/%s/<%s>\")\nt(4128,\" DFT         =%s/%s/<%s>\")\nt(4129,\" DFA         =%s/%s/<%s>\")\nt(4132,\" RECFM       =%s\")\nt(4133,\" LRECL       =%s\")\nt(4134,\" CC          =%s\")\nt(4135,\" TRC         =%s\")\nt(4136,\" ASCII       =%s\")\nt(4137,\" FORMDEF     =%s/%s/%s.%s\")\nt(4138,\" PAGEDEF     =%s/%s/%s.%s\")\nt(4161,\" CHAR1       =%s\")\nt(4162,\" CHAR2       =%s\")\nt(4163,\" CHAR3       =%s\")\nt(4164,\" CHAR4       =%s\")\nt(4220,\" FON         =%s/<%s>\")\nt(4221,\" CHS         =%s/<%s>\")\nt(4222,\" CDP         =%s/<%s>\")\nt(4223,\" OVL         =%s/<%s>\")\nt(4224,\" FDF         =%s/<%s>\")\nt(4225,\" PDF         =%s/<%s>\")\nt(4226,\" PSG         =%s/<%s>\")\nt(4227,\" DFD         =%s/<%s>\")\nt(4228,\" DFT         =%s/<%s>\")\nt(4229,\" DFA         =%s/<%s>\")\nt(4237,\" FORMDEF     =%s/%s.%s\")\nt(4238,\" PAGEDEF     =%s/%s.%s\")\nt(4300,\" For PRTDEF=%s option sending definition from %s (%s)\")\nt(4301,\"<PrinterParms>\")\nt(4302,\" %s\")\nt(4999,\"<End>\")\nt(3407,\"Invalid document structure around page '%s' \")\nt(3408,\"The last record: %s %s %s %s %s \")\nt(5001,\"PPH5001E unable to get TD queue '%s'\")\nt(5002,\"PPH5002W %s unable to get partner profile'%s'\")\nt(5003,\"PPH5003E %s profile '%s' error - '%s'\")\nt(5004,\"PPH5004E %s profile '%s' error - '%s'\")\nt(5005,\"PPH5005E %s TP session allocation error for '%s' - '%s'\")\nt(5006,\"PPH5006E %s input open error for '%s'\")\nt(5007,\"PPH5007W %s unable to get DOCEXEC profile'%s'\")\nt(5008,\"PPH5008W %s unable to get OUTPUT profile'%s'\")\nt(5010,\"PPH5010E %s control file generate error '%s'\")\nt(5011,\"PPH5011E %s input error for '%s'\")\nt(5012,\"PPH5012E %s output error for '%s'\")\nt(5013,\"PPH5013I %s << %s \")\nt(5015,\"PPH5015E %s input empty '%s'\")\nt(5016,\"PPH5016I %s will not send control file to  '%s'\")\nt(5050,\"PPH5050I %s =  '%s'\")\nt(5060,\"PPH5060I %s request requeued\")\nt(5061,\"PPH5060E %s request lost\")\nt(5100,\"PPH5101I PPH manager terminating\")\nt(5200,\"PPH5200I PPHR ended \")\nt(5301,\"PPH5301E facility '%s' is not APPC - TCPIP capable\")\nt(5302,\"PPH5302E facility '%s' receive error, length '%s'\")\nt(5303,\"PPH5303E facility '%s' unexpected record type %s\")\nt(5304,\"PPH5304E facility '%s' TS QUEUE '%s' write error\")\nt(5340,\"PPH5340I facility '%s' >>>>>> '%s'\")\nt(5341,\"PPH5341I facility '%s' %s : %s\")\nt(5342,\"PPH5342I facility '%s' %s new status is %s\")\nt(5310,\"PPH5310I facility '%s' from partner '%s' data arrived into '%s' queue\")\nt(5311,\"PPH5311I facility '%s' received %s records, %s K bytes\")\nt(5320,\"PPH5320E facility '%s' received the following message: %s\")\nt(5400,\"PPH5400I PPHU will restart after every %s seconds\")\nt(5401,\"PPH5401I checking '%s' request\")\nt(5402,\"PPH5402I new status for '%s' is '%s'\")\nt(5403,\"PPH5403E '%s' request/document file update error for '%s'\")\nt(5404,\"PPH5404I '%s' request %s opened '%s'\")\nt(5405,\"PPH5405E '%s' request unable to get '%s' profile\")\nt(5406,\"PPH5406E PPHU already active\")\nt(5420,\"PPH5420I PPHU update transaction termination  status\")\nt(5421,\"PPH5421E status for '%s' '%s' invalid\")\nt(5422,\"PPH5422E internal error during store %s\")\nt(5425,\"PPH5425I %s partner ==========================\")\nt(5426,\"PPH5426I %8.8s : %s\")\nt(5430,\"PPH5430I PPHU update transaction terminating\")\nt(5440,\"PPH5440I request %s - in status :%s deleted\")\nt(5441,\"PPH5441E unable to delete %s - %s\")\nt(5450,\"PPH5450A serious error, check logs and reply with any character to continue\")\nt(5460,\"PPH5460I %s request requeued\")\nt(5461,\"PPH5461A PPHU quit requested, but there are %s active requests\")\nt(5500,\"PPH5500I PPHD document queue terminating\")\n#endif\n\n// Used id's :\n// 5500      AUTH\n// 5600      AUTHINF\n// 5700      MODULE\n//\nt(5500,\"AUT5500I ISIS Information Systems %s %s Compiled:%s\")\nt(5501,\"AUT5501E invalid argument '%s', it can be LIST or AUTH or INFO or?\")\nt(5502,\"AUT5502E invalid line\")\nt(5503,\"AUT5503I %s\")\nt(5504,\"AUT5504E invalid here the statement above\")\nt(5505,\"AUT5505E 'Customer' missing\")\nt(5506,\"AUT5506E 'Product' missing\")\nt(5507,\"AUT5507E 'Version' missing\")\nt(5508,\"AUT5508E FromDate only with EXPDATE\")\nt(5509,\"AUT5509E 'AuthKey' missing\")  //szm\nt(5520,\"AUT5520E 'DEFINE' error\")\nt(5521,\"AUT5521E unable to open 'DEFINE'file (%s) %s\")\nt(5522,\"AUT5522E invalid define '%s'\")\nt(5523,\"AUT5523E product feature for %s %s is missing\")\nt(5550,\" The ISISAUT program is the tool to authorize your ISIS products in your OS/390 enviroment\")\nt(5551,\" -----------------------------------------------------------------------------------------\")\nt(5552,\" To call the program specify the following DD statements in the JCL : \")\nt(5553,\" SYSLIB  - the load library contains the ISIS product to authorize\")\nt(5554,\" SYSPRINT - the message output\")\nt(5555,\" SYSIN    - the authorization deck from ISIS\")\nt(5601,\"AUT5601E invalid CPU id'%s' ( it should be 12 char long , vvppNNNNMMMM\")\nt(5602,\"AUT5602E keyword '%s' already defined, it will be ignored\")\nt(5610,\"AUT5610E you can authorize your product only after '%s'\")\nt(5622,\"AUT5622E invalid date format '%s', it should be in dd/mm/yyyy form\")\nt(5623,\"AUT5623E EXPDATE date '%s' is not higher as FROM '%s'\")\nt(5630,\"AUT5630E invalid key '%s'\")\nt(5631,\"AUT5631E invalid key '%s'\")\nt(5632,\"AUT5632E invalid key code '%s'\")\nt(5633,\"AUT5633E unable to open GEN file (%s) %s\")\nt(5634,\"AUT5634E no CPUID\")\nt(5640,\"AUT5640E invalid feature '%s'\")\nt(5650,\"AUT5650E invalid product, version %s - %s\")\nt(5670,\"AUT5670E invalid authKey '%s'\")\nt(5671,\"AUT5671E unable to authorize '%s' module\")\nt(5672,\"AUT5672E error during '%s' module authorization\")\nt(5673,\"AUT5673I no authorized CPUID\")\nt(5674,\"AUT5674I no Option\")\nt(5675,\"AUT5675I no Expiration\")\nt(5680,\"AUT5680I Product=%s Version= %s\")\nt(5681,\"AUT5681I Feature=%s Module=%s\")\nt(5682,\"AUT5682W unable to find '%s' module\")\nt(5683,\"AUT5683W unable to get authorization info for '%s' module\")\nt(5684,\"AUT5684I   CPUID      = %s\")\nt(5685,\"AUT5685I   Expiration = %s\")\nt(5686,\"AUT5686I   Option     = %s\")\nt(5689,\"AUT6889I     -----------------------\")\nt(5690,\"ISIS Information Systems %s %s %s = %s\")\nt(5691,\"Customer=%s\")\nt(5692,\"Product=%s\")\nt(5693,\"Version=%s\")\nt(5694,\"Option=%s\")\nt(5695,\"FeatureModule=%s\")\nt(5696,\"BaseModule=%s\")\nt(5697,\"CPUID=%s\")\nt(5698,\"Expire=%s\")\nt(5699,\"Period=%s days\")\nt(5700,\"ValidFrom=%s\")\nt(5701,\"AuthKey=%s\")\nt(5710,\"AUT5710E read error for the '%s' module\")\nt(5711,\"AUT5711W in SYSLIB unable to find '%s' module\")\nt(5712,\"AUT5712E authorization error for '%s' module\")\nt(5713,\"AUT5713E You can't change the 'PERIOD' for %s\")\nt(5714,\"AUT5714W in SYSLIB unable to find '%s' '%s' CSECT\")\nt(5715,\"AUT5715W in SYSLIB unable to load '%s' '%s' CSECT  \u00d6n\u00d6\n   IEWBIND return:%s reason:%s\")\nt(5716,\"AUT5716W in SYSLIB unable to authorise %s' '%s' CSECT  \u00d6n\u00d6\n   IEWBIND return:%s reason:%s\")\nt(5717,\"AUT5717E error in ISITMGD query  for %s'  \u00d6n\u00d6\n   ISITMGD return:%s reason:%s\")\nt(5718,\"AUT5718E error in DESERV get_names   %s'  \u00d6n\u00d6\n   DESERV  return:%s reason:%s \")\nt(5719,\"AUT5719W error occured during BSAM acces for %s(%s) in %s operation\u00d6n     \u00d6\n    return:%s(R15) reason:%s(R0) \")\nt(5720,\"AUT5720E unable to update %s, opened for INPUT only\")\nt(5799,\"AUT5799E authorization error, Please check your JCL and/or send this problem report to ISIS\")\nt(5900,\"INF5900I Informations about the running environment:\u00d6n\u00d6n\")\nt(5901,\"INF5901I Jobname:%s JobID:%s Program:%s\u00d6n\")\nt(5902,\"INF5902I CpuNumber:%s\u00d6n\")\nt(5903,\"INF5903I error during obtain system info, CSRSI return code%s\u00d6n\")\nt(5904,\"INF5904I CPU manufacturer:%s type:%s model:%s\u00d6n\")\nt(5905,\"INF5905I Operating system:%s %s %s %s %s\u00d6n\")\nt(5906,\"INF5906I Requested region size:%s Mb\u00d6n\")\nt(5907,\"INF5907I Under 16Mb region limit:%10s Mb, region high value:%10s Mb\u00d6n\")\nt(5908,\"INF5908I Over  16Mb region limit:%10s Mb, region high value:%10s Mb\u00d6n\")\nt(5910,\"INF5910I Ths USS limits:\u00d6n\u00d6n\")\nt(5911,\"INF5911I MaxProcSystem: %12s  MaxProcUser:    %12s  MaxUids:%12s\u00d6n\")\nt(5912,\"INF5912I MaxFileProc:   %12s  MaxPtysr:       %12s\u00d6n\")\nt(5913,\"INF5913I MaxThreads:    %12s  MaxThreadTasks: %12s\u00d6n\")\nt(5914,\"INF5914I MaxMmaparea:   %12s  MaxRtys:        %12s\u00d6n\")\nt(5915,\"INF5915I MaxFilesize:   %12s  MaxCoresize:    %12s\u00d6n\")\nt(5916,\"INF5916I MaxAssize:     %12s  MaxCputime:     %12s\u00d6n\")\nt(5917,\"INF5917I MaxSharepages: %12s  MaxQueuidsigs:  %12s\u00d6n\")\nt(5918,\"INF5918I IPC MessageQqueue Ids:%10s Qbytes:%10s Qnum:  %10s\")\nt(5919,\"INF5919I IPC SharedMemeory Ids:%10s Spages:%10s Mpages:%10s Nsegs:%10s\")\nt(5920,\"INF5920I IPC Semaphores    Ids:%10s Nsems: %10s Nops:  %10s\")\nt(5930,\"INF5930I Sending '%s' command to the USS shell\")\nt(5931,\"INF5931I : %s\")\nt(5932,\"INF5932E shell call error %s\")\nt(5934,\"INF5934I calling LE dump with %s options\")\nt(5935,\"INF5935E LE dump error, %s\")\nt(5940,\"INF5940I the used LNKLST is %s, it has %s entries\")\nt(5941,\"INF5941I %s  %s     %s\")\nt(5970,\"INF5970I >>>>>>>>>>>>>>>>>>>> System Information <<<<<<<<<<<<<<<<<<<<\")\nt(5971,\"INF5971I >>>>>>>>>>>>>>>>>>>> Library Information <<<<<<<<<<<<<<<<<<<\")\nt(5972,\"INF5972I >>>>>>>>>>>>>>>>>>>> Module Information <<<<<<<<<<<<<<<<<<<<\")\nt(5973,\"INF5973I >>>>>>>>>>>>>>>>>>>> USS Informations <<<<<<<<<<<<<<<<<<<<<<\")\nt(5974,\"INF5974I >>>>>>>>>>>>>>>>>>>> Actual APF List  <<<<<<<<<<<<<<<<<<<<<<\")\nt(5979,\"INF5970I >>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\")\n\nt(5980,\"INF5980E error during %s access, return:%s reason:%s\u00d6n\u00d6n\")\nt(5981,\"INF5981I    \u00d6t\u00d6t%s\")\nt(5982,\"INF5982I    \u00d6t\u00d6t%s \u00d6t%s\")\nt(5983,\"INF5983I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5984,\"INF5984I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5985,\"INF5985I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5986,\"INF5986I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5990,\"INF5990I====================================================================\u00d6n\u00d6n\")\nt(5991,\"INF5991I %s\")\nt(5992,\"INF5992I %s \u00d6t%s\")\nt(5993,\"INF5993I %s \u00d6t%s \u00d6t%s\")\nt(5994,\"INF5994I %s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5995,\"INF5995I %s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5996,\"INF5996I %s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\n\nt(5998,\"INF5991E invalid option:%s\")\nt(5999,\"INF5999I ISIS Information Systems %s %s Compiled:%s\")\nt(6000,\"ARC6000I ISIS Information Systems %s %s Compiled:%s\")\nt(6001,\"ARC6001E unable to open %s \u00d6n %s\")\nt(6002,\"ARC6002P %s\")\nt(6003,\"ARC6003E invalid paramter %s\")\nt(6004,\"ARC6004E DYNALLOC error for %44.44s, rc:%s reason:%s\")\nt(6005,\"ARC6005I dataset %44.44s migrated as %44.44s already on %6.6s volume\")\nt(6006,\"ARC6006E unable to open %s \u00d6n %s\")\nt(6007,\"ARC6007W read %s blocks, but it should be %s \")\nt(6008,\"ARC6008I restored %44.44s(%44.44s) to %6.6s (%s blocks)\")\nt(6009,\"ARC6009E we can't restore %44.44s, as %s and %s difference greater as delta\")\nt(6010,\"ARC6010E unable to get file status for %s \u00d6n %s\")\nt(6011,\"ARC6011E %s read error or empty file, rc:%s\u00d6n %s\")\nt(6020,\"ARC6020E ML2 volume list '%s' is invalid\")\nt(6021,\"ARC6021E unable to process %s volume\")\nt(6022,\"ARC6022E VTOC CVAF error , retrived volser:%s, requested:%s\")\nt(6023,\"ARC6023E unable to allocate %s on %s\")\nt(6024,\"ARC6024E write error for %s\u00d6n %s\")\nt(6025,\"ARC6025I copied %s to %s , %s 2K blocks\")\nt(6026,\"ARC6026E remove/delete error for %s\u00d6n %s\u00d6n\")\nt(6027,\"ARC6027I removed %s\")\nt(6028,\"ARC6028I no dataset found with %s prefix on %s volume\")\nt(6029,\"ARC6029I migrating %s from %s volume\")\nt(6030,\"ARC6030I restoring %44.44s\")\nt(6031,\"ARC6031I migrating %s from ML1 to ML2 as %s, (not used since %s days)\")\nt(6050,\"ARC6050E unable to open MCDS:%s(%s)\")\nt(6051,\"ARC6051I read %s MCDS valid ML2 migration records\")\nt(6052,\"ARC6052I MCSD dsn:%s RKP:%s keylen:%s\")\nt(6053,\"ARC6053E path:%s invalid(%s)\")\nt(6054,\"ARC6054I Total MCDS record:%s in ML2:%s Removed:%s\")\nt(6055,\"ARC6055I ML2 path:%s\")\nt(6056,\"ARC6056E ENQ rc:%s\")\n#if defined(CICS_MSG) == 1\nt(5801,\"PPH5801E TCP/IP function '%s' error, code : %s\")\nt(5802,\"PPH5802E listener format failure , %s \")\nt(5810,\"PPH5810I PPHN listener transaction is listening on port %s - %s\")\nt(5812,\"PPH5812I Starting '%s' - '%s'\")\nt(5814,\"PPH5814I listener socket call trace , about '%s' function\")\nt(5820,\"PPH5820I Listener transaction starting\")\nt(5821,\"PPH5821I Listener transaction terminating\")\nt(5901,\"PPH5901E TCPACCESS function '%s' error, code : %s\")\nt(5902,\"PPH5902E listener format failure , %s \")\nt(5910,\"PPH5910I PPHA listener transaction is listening on port %s - %s\")\nt(5912,\"PPH5912I Starting '%s' - '%s'\")\nt(5914,\"PPH5914I listener socket call trace , about '%s' function\")\nt(5920,\"PPH5920I TCPACCESS Listener transaction starting\")\nt(5921,\"PPH5921I TCPACCESS Listener transaction terminating\")\nt(6501,\"PPH6501A Confirm %s request \")\nt(6502,\"PPH6502E Unable to get %s bytes\")\nt(6591,\"PPH6591T %s\")\nt(6592,\"PPH6592T %s %s\")\nt(6593,\"PPH6593T %s %s %s\")\nt(6594,\"PPH6594T %s %s %s %s\")\nt(6595,\"PPH6595T %s %s %s %s %s\")\nt(6596,\"PPH6596T %s %s %s %s %s %s\")\nt(6597,\"PPH6597T %s %s %s %s %s %s %s\")\nt(6598,\"PPH6598T %s %s %s %s %s %s %s %s\")\nt(6599,\"PPH6599T %s %s %s %s %s %s %s %s %s\")\nt(6701,\"PPH6701E Invalid documnet name\")\nt(6702,\"PPH6702E already defined '%s'\")\nt(6703,\"PPH6703E Unable to open file '%s'\")\nt(6704,\"PPH6704A Confirm request to delete '%s'\")\nt(6705,\"PPH6705I No more page\")\nt(6706,\"PPH6706I Top of data\")\nt(6707,\"PPH6707E '%s' error at '%s' errorno: %s\")\nt(6708,\"PPH6708E '%s' error at page '%s'\")\n#endif\n//\n// mphttp 7700\n//\nt(7701,\"MPTE7701I waiting for %s %s\")\nt(7702,\"MPTE7702E error %s %s %s\")\nt(7703,\"MPTE7703I %s times in %s  sec\")\nt(7704,\"MPTE7704I Average:%s sec\")\nt(7705,\"MPTE7705I send:%s receive:%s\")\n\n//\n// mptester 7800\n//\nt(7801,\"MPTE7801I %s\")\n\n#if defined(OMS_MSG) == 1\nt(8200,\"MIG8200I OMS Migrate Utility V1R0M0 %s         ISIS Information Systems\")\nt(8201,\"MIG8201E unable to connect to OMS via '%s' shared memory\")\nt(8202,\"MIG8202E unable to open '%s' file\")\nt(8203,\"MIG8203E unable to get VSAM definition folder '%s'\")\nt(8204,\"MIG8204E unable to get migraetion start object '%s'\")\nt(8205,\"MIG8205E error during generation of '%s' COPYBOOK\")\nt(8206,\"MIG8206E error during object migrate '%s'\")\nt(8210,\"MIG8210I Option '%s' = '%s'\")\nt(8211,\"MIG8211E Option '%s' = '%s' error\")\nt(8212,\"MIG8212I Flag   '%s' set\")\nt(8213,\"MIG8213E invalid option'%s'\")\nt(8214,\"MIG8214I /Copybook option specified so we generate COPYBOOK into '%s'\")\nt(8215,\"MIG8215I /Rebuild option set so we make an unconditional migrate\")\nt(8216,\"MIG8216I /Dfafile option set so we generate DFA file(s) in '%s'\")\nt(8217,\"MIG8217I /Datafile option set so we generate test DATA file(s) in '%s'\")\n\nt(8221,\"MIG8221I miration ending with return code 0\")\nt(8230,\"MIG8230E serious error during %s record creation\")\nt(8231,\"MIG8231E serious error during %s record creation\")\nt(8299,\"MIG8299I Migration utility starting at %s\")\n\nt(8221,\"MIG8221I miration ending with return code %s\")\nt(8222,\"MIG8222I Generation statistic:\")\nt(8223,\"MIG8223I %s record(s) from %s\")\nt(8224,\"MIG8224E runtime error:%s\")\nt(8301,\"MIG8301E COBOL syntax error '%s' about %s code %s\")\nt(8302,\"MIG8302W for '%s' data length (%s) is larger as field length(%s)\")\nt(8303,\"MIG8303E structure error, '%s' is an aggregate without data field\")\nt(8304,\"MIG8304E invalid attribute type for '%s' '%s' check VSAM def\")\nt(8310,\"Field:%s in %s length from %s offset\")\nt(8320,\"MIG8320E Internal error, unable to store %s record\")\nt(8321,\"MIG8321E Write error for %s , recordlength %s , recordcount %s\")\nt(8301,\"Field:%s in %s length from %s offset\")\nt(8328,\"----------------------------------\")\nt(8329,\"Record:%s\")\nt(8330,\"Copybook generated at %s\")\nt(8401,\"MIG8401I Attribute '%s' refrences:\")\nt(8402,\"MIG8402I '%s' record as '%s' field\")\nt(8403,\"MIG8403I Object '%s'refrences:\")\n#else\nt(8000,\"SJB8000I JOBSEND utility %s %s Isis Information Systems Ver:%s Comp:%s\")\nt(8001,\"SJB8001I JOBSEND ending with rc:%s\")\nt(8010,\"SJB8010E unable to open %s (%s)\")\nt(8011,\"SJB8011E invalid keyword:%s\")\nt(8012,\"SJB8012I %s\")\nt(8013,\"SJB8013E I/O error during %s (%s)\")\nt(8014,\"SJB8014E error during JESJCL parse\")\nt(8015,\"SJB8015E error during DUMP/RESTORE\")\nt(8020,\"SJB8020I dumping Job:%s Jobid:%s Step:%s ProcStep:%s\")\nt(8021,\"SJB8021E error during close:%s (%s)\")\nt(8022,\"SJB8022I closeing %s DUMP file\")\nt(8030,\"SJB8030I skipping TERSE\")\nt(8031,\"SJB8031I skipping UNTERSE\")\nt(8032,\"SJB8032I skipping DUMP/RESTORE\")\n\n\nt(8100,\"SJB8100E nothing to dump/restore\")\nt(8110,\"SJB8110I start to process:%s\")\nt(8111,\"SJB8111I end of process:%s (%s Kbytes) rc:%s\")\nt(8112,\"SJB8112I %s dataset(s) marked for restore\")\nt(8113,\"SJB8113I %s dataset(s) marked for dump\")\nt(8120,\"SJB8120I %s\")\nt(8122,\"SJB8122I %s marked for restore\")\nt(8123,\"SJB81223 %s marked for dump\")\n\nt(8200,\"SJB8200E SAPI error:%s (at %s %s)\")\nt(8201,\"SJB8201W SAPI message:%s\")\nt(8202,\"SJB8202I UserId:%s Jobname:%s JobId:%s\")\nt(8203,\"SJB8203I using %44.44s for JESJCLIN ddn:%s\")\nt(8204,\"SJB8204E allocation error for JESJCLIN dsn:%44.44s rc:%s\")\nt(8205,\"SJB8205I Step:%8.8s DDname:%8.8s in SYSOUT class:%s Open %8.8s\")\nt(8206,\"SJB8206I %s\")\nt(8207,\"SJB8207I job submitted as %s\")\nt(8208,\"SJB8208E unable to get JESJCL\")\nt(8210,\"SJB8210I %s\")\n\nt(8300,\"SJB8300E unable to load TERSE pgm:%s\")\nt(8301,\"SJB8301I starting TERSE Pgm:%s, Option:%s Sysut1:%s Sysut2:%s\")\nt(8302,\"SJB8302I ending TERSE pgm:%s with rc:%s\")\n\nt(8400,\"SJB8400I %s\")\nt(8401,\"SJB8401E invalid content type above\")\nt(8402,\"SJB4002I restoring Job:%s Jobid:%s Step:%s ProcStep:%s\")\nt(8403,\"SJB8203I JES: %s %s copied %s record(s)\")\nt(8404,\"SJB8204I dataset:%s marked for RESTORE, DDnames:%s\")\nt(8405,\"SJB8405I restore from:%s\")\nt(8406,\"SJB8406I JCL in:%s\")\nt(8407,\"SJB8407I JESJCL lines in:%s\")\nt(8408,\"SJB8408W nothing to restore\")\n\n#endif\nt(9004,\"PPH9004E FILESYSTEM error for '%s' '%s'\")\nt(9001,\"HTW9001E the program '%s' called from '%s' ended with %s return code\")\nt(9002,\"HTW9002E the received line length %s is too long\")\nt(9003,\"HTW9003E invalid HTTP header record '%s'\")\nt(9004,\"HTW9004E the request header format is invalid '%s'\")\nt(9005,\"HTW9005E unable to load the '%s' program\")\nt(9006,\"HTW9006E unable to open '%s' file for '%s' HTML\")\nt(9007,\"HTW9007E unable to open cache-list '%s'\")\nt(9008,\"HTW9008E internal variable access error '%s'\")\nt(9009,\"HTW9009E the program '%s' called from '%s' is ABENDED\")\nt(9010,\"HTW9010E service unavailable '%s'\")\nt(9011,\"HTW9011E bad request for '%s'\")\nt(9012,\"HTW9012E unable to processs '%s' request\")\nt(9013,\"HTW9013E requested URL '%s' is not in the access list\")\nt(9019,\"HTW9019E TIMEOUT for the program '%s' called from '%s'\")\nt(9020,\"HTW9020E invalid query '%s'\")\nt(9021,\"HTW9021E error from DB/2:'%s'\")\nt(9022,\"HTW9022E nothing selected\")\nt(9024,\"HTW9024E nothing selected\")\nt(9025,\"HTW9025E invalid skeleton '%s'\")\nt(9030,\"HTW9030E error during 'PUT' process for '%s'\")\nt(9031,\"HTW9031E error during open in 'PUT' process for '%s'\")\nt(9032,\"HTW9032I stored '%s'\")\nt(9040,\"HTW9040E session abort in %s function\")\nt(9050,\"HTW9050E invalid multpart/form-data format %s\")\nt(9051,\"HTW9051E invalid entry in multipart/form-data %s\")\nt(9052,\"HTW9052E invalid content type:%s\")\nt(9053,\"HTW9053E boundary missing\")\nt(9054,\"HTW9054E invalid AFP input data\")\nt(9091,\" %s\")\nt(9092,\" %s %s\")\nt(9093,\" %s %s %s\")\nt(9120,\"HTW9120E invalid URL entry '%s' in '%s' URL\")\nt(9121,\"HTW9121E logic error for '%s' in '%s' URL\")\nt(9122,\"HTW9122E unable to open '%s'\")\nt(9123,\"HTW9123E unable to get '%s' skeleton HTML\")\nt(9124,\"HTW9124E unable to get'%s' directory\")\nt(9125,\"HTW9125E unable toget '%s' from catalog\")\nt(9126,\"HTW9126E invalid URL '%s'\")\nt(9127,\"HTW9127W directory access not allowed for '%s'\")\n//*\n//* TSO 9400\n//*\nt(9401,\n\"DSS9401I start '%s' request for '%s' - '%s'\")\nt(9402,\n\"DSS9402I ended with %s - %s return code\")\nt(9403,\n\"DSS9403W Warning '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(9404,\n\"DSS9404E Error '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(9405,\n\"DSS9405E Secondary error message from OAM:'%s'\")\nt(9406,\n\"DSS9406E Buffer are %s * %s is full\")\n\n//*\n//* CICS FEPI and EXCI 9500\n//*\nt(9500,\"TS09500I ISIS CICS FEPI interface %s %s %s\")\nt(9501,\"TS09501I try to allocate a session with '%s' pool, into '%s' target\")\nt(9510,\"TSO9510E Mvs Interface Error : '%s' '%s' '%s'\")\nt(9520,\"TSO9520E CICS FEPI Interface Error\")\nt(9521,\"TSO9521E CICS FEPI Interface Error : '%s'\")\nt(9522,\"TSO9523E CICS FEPI Interface Error : '%s' '%s'\")\nt(9523,\"TSO9523E CICS FEPI Interface Error : '%s' '%s' '%s'\")\nt(9524,\"TSO9524E CICS FEPI Interface Error : '%s' '%s' '%s' '%s'\")\nt(9525,\"TSO9525E CICS FEPI Interface Error : '%s' '%s' '%s' '%s' '%s'\")\nt(9550,\"TS09550I ISIS CICS EXCI interface %s %s %s\")\nt(9551,\"TS09551E unable to get COMMAREA\")\nt(9552,\"TS09552E unable to get ISIS_EXCI_PROGRAMM\")\n\nt(9560,\"TSO9560I ISIS CICS EXCI interface %s %s %s\")\nt(9561,\"TSO9561I called from %s program, input:%s output:%s\")\nt(9562,\"TSO9562E variable processing error from:%s\")\nt(9563,\"TSO9563Eunable to open:'%s'\")\nt(9570,\"TSO9570E program:%s for user:%s in transaction:%s\")\nt(9571,\"TSO9571E resp:%s resp2:%s abendcode:%s\")\nt(9581,\"TSO9581E EXCI error in %s call, resp:%s resp2:%s, subreason:%s\")\nt(9582,\"TSO9582E message from CICS:'%s'\")\nt(9583,\"TSO9583E unable to get %s storage\")\nt(9590,\"TSO9590T\")\nt(9591,\"TSO9591T %s \")\nt(9592,\"TSO9592T %s %s\")\nt(9593,\"TSO9593T %s %s %s\")\nt(9594,\"TSO9594T %s %s %s %s\")\nt(9595,\"TSO9595T %s %s %s %s %s\")\nt(9596,\"TSO9595T %s %s %s %s %s %s\")\nt(9597,\"TSO9595T %s %s %s %s %s %s %s\")\n\n//TODO: KV20030627 check if TSO or OMS\n/*\nt(9500,\"OMS9500T\")\nt(9501,\"OMS9501T %s \")\nt(9502,\"OMS9502T %s %s\")\nt(9503,\"OMS9503T %s %s %s\")\nt(9504,\"OMS9504T %s %s %s %s\")\nt(9505,\"OMS9505T %s %s %s %s %s\")\nt(9506,\"OMS9505T %s %s %s %s %s %s\")\nt(9507,\"OMS9505T %s %s %s %s %s %s %s\")\nt(9510,\"OMS9510E Mvs Interface Error : '%s' '%s' '%s'\")\nt(9520,\"OMS9520E OMS CICS Interface Error\")\nt(9521,\"OMS9521E OMS CICS Interface Error : '%s'\")\nt(9522,\"OMS9523E OMS CICS Interface Error : '%s' '%s'\")\nt(9523,\"OMS9523E OMS CICS Interface Error : '%s' '%s' '%s'\")\nt(9524,\"OMS9524E OMS CICS Interface Error : '%s' '%s' '%s' '%s'\")\nt(9525,\"OMS9525E OMS CICS Interface Error : '%s' '%s' '%s' '%s' '%s'\")\n*/\n//\n// WSSLINI 9600\n//\nt(9601,\" SSL init %s = '%s'\")\nt(9602,\" SSL init %s = %s\")\nt(9603,\" SSL init error, rc: %s(%s) errno:%s(%s)\")\n//\n// WSSL 9700\n//\nt(9701,\" secure socket init  %s = '%s'\")\nt(9702,\" Client Cerificate  %s = %s\")\nt(9703,\" error during secure socket init: %s(%s) errno:%s(%s)\")\nt(9704,\" %s error, rc: %s(%s) errno:%s(%s)\")\nt(9705,\" Client Certificate Error\")\nt(9706,\" unable to proces '%s'\")\nt(9707,\" RACF %s %s - %s %s(%s)\")\nt(9708,\" RACF %s %s(%s)\")\nt(9709,\" unable to find a match for the client certificate\")\nt(9720,\" socket timeout (%s sec) for %s\")\nt(9721,\" socket select error %s(%s)\")\n//\n// RARCSQL 9800 //ZA030519\n//\nt(9801,\"VIA9801E DB2 CONNECT error %s reason code %s\")\nt(9802,\"VIA9802E DB2 DISCONNECT error %s reason code %s\")\nt(9804,\"VIA9804E SQL ERROR: %s\")\nt(9805,\"VIA9805W SQL WARNING: %s\")\nt(9806,\"VIA9804E SQL NOTFOUND: %s\")\nt(9807,\"VIA9807E unable to get SQL error messages : %s\")\nt(9808,\"VIA9808E SQL : %s\")\nt(9811,\"VIA9811E DB2 OPEN error %s reason code %s\")\nt(9812,\"VIA9812E DB2 CLOSE error %s reason code %s\")\nt(9821,\"VIA9821E DB2 RRS %s error %s reason code %s\")\n//------------------------------------------------------------------------------------------\n//------------------------------------------------------------------------------------------\n//------------------------------------------------------------------------------------------\nt(10000+1,\"DSS0001E unable to allocate '%s' bytes\")\nt(10000+2,\"DSS0002E open error for '%s' in '%s' type, '%s' mode \u00d6n %s\")\nt(10000+3,\"DSS0003E error in '%s' function, errorcode:'%s'\")\nt(10000+12,\"DSS0012E open error for '%s',in '%s' mode \u00d6n %s\")\nt(10000+13,\"DSS0013I opening '%s'\")\nt(10000+100,\"DSS0100I DSS program starts\")\nt(10000+101,\"DSS0101I trace: '%s'\")\nt(10000+102,\"DSS0102I trace: '%s' '%s'\")\nt(10000+103,\"DSS0103I trace: '%s' '%s' '%s'\")\nt(10000+104,\"DSS0104I trace: '%s' '%s' '%s' '%s'\")\nt(10000+105,\"DSS0105I trace: '%s' '%s' '%s' '%s' '%s'\")\nt(10000+110,\"DSS0110E unable to open:'%s'\")\nt(10000+111,\"DSS0111E serious error above, execution terminating\")\nt(10000+112,\"DSS0112I %s\")\nt(10000+113,\"DSS0113I including from :'%s'\")\nt(10000+114,\"DSS0114I starting DUMP function\")\nt(10000+115,\"DSS0115I starting RESTORE function\")\nt(10000+116,\"DSS0116I date limit is %s (%s)\")\nt(10000+117,\"DSS0117W nothing selected to restore\")\nt(10000+118,\"DSS0118E not all the dataset's are online, please restore the datasets and try again\")\nt(10000+119,\"DSS0119I DSS program ending with %s return code\")\nt(10000+120,\"DSS0120E unable to open:'%s' , reson:'%s'\")\nt(10000+121,\"DSS0121E invalid element in the Dynamic Sql '%s'\")\nt(10000+122,\"DSS0122I we will use '%s' Sql\")\nt(10000+123,\"DSS0123I the generated Sql '%s'\")\nt(10000+124,\"DSS0124I for restore selected '%s'\")\nt(10000+125,\"DSS0125I for restore NOT selected '%s'\")\nt(10000+126,\"DSS0126I Try to restore from: '%s'\")\nt(10000+130,\"DSS0130I DSS/OMVS dump restore version:%s compiled:%s\")\nt(10000+201,\"DSS0201E the error above prevents continuations\")\nt(10000+202,\"DSS0202E abnormal termination\")\nt(10000+301,\"DSS0301E SUBTASK error, MVS function '%s' returned with rc:%s\")\nt(10000+302,\"DSS0302E SUBTASK error, unable to load '%s\")\nt(10000+400,\"DSS0400I job: %s(%s) in %s program\")\nt(10000+1000,\"DSS1000I DSS program connects to '%s' subsystem with '%s' plan, TCB: '%s'\")\nt(10000+1001,\"DSS1001E Sql error during '%s' \u00d6n SQLCODE:'%s' '%s'\")\nt(10000+1002,\"DSS1002E error during insert for %s\")\nt(10000+1003,\"DSS1003I working without DB2\")\nt(10000+3900,\"DSS3900I %s(%s) = '%s'\")\nt(10000+3901,\"DSS3901E undefined index for '%s' '%s'\")\nt(10000+3902,\"DSS3902E unable to open '%s' file\")\nt(10000+3903,\"DSS3903E undefined keyword '%s'\")\nt(10000+3904,\"DSS3904E too many values for '%s'  '%s'\")\nt(10000+3910,\"DSS3910I %s< %s >  =  '%s'\")\nt(10000+3911,\"DSS3911I                 = '%s'\")\nt(10000+9401,\n\"DSS9401I start '%s' request for '%s' - '%s'\")\nt(10000+9402,\n\"DSS9402I ended with %s - %s return code\")\nt(10000+9403,\n\"DSS9403W Warning '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(10000+9404,\n\"DSS9404E Error '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(10000+9405,\n\"DSS9405E Secondary error message from OAM:'%s'\")\nt(10000+9406,\n\"DSS9406E Buffer are %s * %s is full\")\nt(10000+9500,\"DSS9500I Visual Info - Archive utilty Version:%s Compiled:%s\")\nt(10000+9503,\"DSS9503I ending with return code :%s\")\nt(10000+9504,\"DSS9504E ending withh error code :%s\")\nt(10000+9601,\"DSS9601E unable to open '%s' file\")\nt(10000+9602,\"DSS9602E unable to get buffer for '%s' file\")\nt(10000+9603,\"DSS9603I closing file '%s' , read %s records\")\nt(10000+9611,\"DSS9611E not an AFPDS record in file '%s'-  about %s record\")\nt(10000+9612,\"DSS9612E AFPDS record length invalid in file '%s' - about %s record\")\nt(10000+9613,\"DSS9613E invalid record sequence %s - %s\")\nt(10000+9614,\"DSS9614E invalid record type %s\")\nt(10000+9615,\"DSS9615E invalid triplet in a IEL record %s -  about %s record\")\nt(10000+9616,\"DSS9616E invalid FQN triplet in a IEL record %s -  about %s record\")\nt(10000+9620,\"DSS9620E no Index parameter defined\")\nt(10000+9621,\"DSS9621E attribute name '%s' is not definded as an index\")\nt(10000+9630,\"DSS9630E missmatch beetwen the actual and requested object %s - %s , %s -%s\")\nt(10000+9650,\"DSS9650I object '%s' stored by OAM in %s size\")\nt(10000+9651,\"DSS9651I object '%s' inserted with the following attributes.\")\nt(10000+9652,\"DSS9652I '%s' = '%s'\")\nt(10000+9654,\"DSS9654I from %s page groups %s succesfully commited\")\nt(10000+9701,\"DSS9701E DB2 CONNECT error %s reason code %s\")\nt(10000+9702,\"DSS9702E DB2 DISCONNECT error %s reason code %s\")\nt(10000+9704,\"DSS9704E SQL ERROR: %s\")\nt(10000+9705,\"DSS9705W SQL WARNING: %s\")\nt(10000+9706,\"DSS9704E SQL NOTFOUND: %s\")\nt(10000+9707,\"DSS9707E unable to get SQL error messages : %s\")\nt(10000+9708,\"DSS9708E SQL : %s\")\nt(10000+9709,\"DSS9709E DB2 problem , %s occured, check DB2\")//szm\nt(10000+9711,\"DSS9711E DB2 OPEN error %s reason code %s\")\nt(10000+9712,\"DSS9712E DB2 CLOSE error %s reason code %s\")\nt(10000+9801,\"DSS9801E DB2 CONNECT error %s reason code %s\")\nt(10000+9802,\"DSS9802E DB2 DISCONNECT error %s reason code %s\")\nt(10000+9804,\"DSS9804E SQL ERROR: %s\")\nt(10000+9805,\"DSS9805W SQL WARNING: %s\")\nt(10000+9806,\"DSS9804E SQL NOTFOUND: %s\")\nt(10000+9807,\"DSS9807E unable to get SQL error messages : %s\")\nt(10000+9808,\"DSS9808E SQL : %s\")\nt(10000+9811,\"DSS9811E DB2 OPEN error %s reason code %s\")\nt(10000+9812,\"DSS9812E DB2 CLOSE error %s reason code %s\")\nt(10000+9821,\"DSS9821E DB2 RRS %s error %s reason code %s\")\nt(10000+9999,\"DSS9999E ABORT(U1210) due to an error above\")\n\n/* -------------- last line, do not delete it| -------------- */\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSBASE": {"ttr": 8561, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mvsbase.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n#ifndef _MVSBASE\n#define _MVSBASE\n#include \"merror.hpp\"\n#include \"dsnameut.h\" //KV20060404 genOpenName moved to dsnameut.h file to make it callable from C programs\n\n#ifndef  ISIS_PF_HOST\n    //szm0050403 change all STRING to mvsSTRING in mvs directory\n    #define INCL_DOSMEMMGR\n    #ifdef __OS2__  //HL what #ifndef __MSDOS__\n        #include <os2def.h>\n        #ifndef far\n            #define far _far16\n        #endif\n    #endif\n\n    #ifndef ISIS_PF_MU\n        #include <wtypes.h>\n    #endif\n    #ifndef __builtin\n        #define __builtin\n    #endif\n    #ifndef __ref\n        #define __ref\n    #endif\n#else\n#endif\n\n#include <stdlib.h>\n#if defined(OWN_STDIO) == 1\n#include \"stdio.hpp\"\n#else\n#include <assert.h>\n#endif\n\n#ifndef DSNAME_PREFIX\n  #define DSNAME_PREFIX  \"\"\n  #define DDNAME_PREFIX   \"dd:\"\n  #define DSNAME_NULLFILE \"/dev/null\"\n  #define HFS_PREFIX      \"///\"\n  #define MEM_PREFIX      \"mem:\" //szm0040909\n#endif\n#ifndef __asm\n  #define __asm \"OS\"\n#endif\n#ifndef null\n#define null '\u00d6x00'\n#endif\n\n#if 0\n#ifndef ff\n#define ff '\u00d6xff'\n#endif\n\n#ifndef blank\n#define blank ' '\n#endif\n#endif\n\n#ifndef nulls\n#define nulls \"\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\"\n#endif\n\n#if 0 //szm20030429  mvsSTRINGs.h\n#ifndef ffs\n#define ffs  \"\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\"\n#endif\n#endif\n\n#define HEX1(a) char(0x ## a)\n#define HEX2(a1,a2) Ushort(0x ## a1 ## a2)\n#define HEX3(a1,a2,a3) INT3(0x ## a1 ## a2 ## a3 )\n#define HEX4(a1,a2,a3,a4) int(0x ## a1 ## a2 ## a3 ## a4 )\n\n#if defined(UTYPES) == 0 && ( defined(ISIS_PF_HOST) == 1 ]] defined(ISIS_PF_MU) == 1 )\n  #define UTYPES\n  #ifndef USHORT\n    #define USHORT unsigned short\n  #endif\n  #ifndef UCHAR\n   #define UCHAR unsigned char\n  #endif\n  #ifndef ULONG\n    #define ULONG unsigned long\n  #endif\n#endif\n\nenum genOpenNameType\n\u00e4  sas_hfs,\n   ibm_hfs,\n   sas_ddn,\n   ibm_ddn,\n   sas_dsn,\n   ibm_dsn,\n   ont_dsn, //KV20050403 prefix ont_ to avoid name conflicts\n   ont_ddn,\n   ont_mem,   //szm0040909\n   ont_unknown,\n   genOpenNameType_int = -1\n\u00fc;\n\ngenOpenNameType genOpenType(const char *);\nchar * stripMemberName(const char *name, char* nm);\nchar * onlyMemberName(const char *name, char* nm);\n\n\n\nUSHORT  Ushort(int i);\nUSHORT  Ushort(short s);\nUSHORT  Ushort(char c);\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n#define copyS( t , f )    \u00d6\nif ( t  && f ) memcpyp( t , f , sizeof( t ) , sizeof( f ) , ' ')\n\n#define clearS( t ) \u00d6\nif ( t )  \u00d6\n \u00e4   size_t  sl = sizeof ( t ) ;  \u00d6\n    memset( t , 0 , sl ) ; \u00fc\n\n#define blankS( t )   \u00d6\nif ( t ) memset( t , ' ', sizeof( t  ))\n\nvoid * memcpyp(void * target , const void * source, size_t tsize, size_t ssize, int pad);\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nenum ALIGNTYPE\u00e4aLEFT=1, aRIGHT=3, aCENTER=2, aASIS=0, ALINGNTYPE_int = -1 \u00fc;\nenum CAPSTYPE\u00e4cUPPER=3, cLOWER=4, cWORD=2, cASIS=0, CAPSTYPE_int = -1\u00fc;\nenum FIELDTYPE\u00e4\n                      fCHAR =0,\n                      fALPHANUMERIC=1,\n                      fALPHABETIC=2,\n                      fNUMERIC= 3,\n                      fSLLTAG = 20,\n                      fLOGICAL=4 ,fHEXA=16,\n                      fBINARY=17 ,fDATE=5 ,fFTIME=6, fLISTBOX = 19,\n                      FIELDTYPE_int = -1\u00fc;\n//\n//--------------------------------------------------\n//\n\nclass FORMAT\n\u00e4\n   protected:\n   public:\n   ALIGNTYPE falign;\n   CAPSTYPE fcaps;\n  FORMAT() :  fcaps(cUPPER),\n    falign(aLEFT)\u00e4\u00fc\n\n  FORMAT(ALIGNTYPE a ,CAPSTYPE c=cASIS )\n  \u00e4\n\n    falign = a;\n      fcaps = c;\n  \u00fc\n  \u00dfFORMAT()\u00e4\u00fc\n\u00fc;\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nextern FORMAT F_alcu;\nextern FORMAT F_alcw;\nextern FORMAT F_arcu;\n//\n//--------------------------------------------------\n//\nstruct str \u00e4\nenum status \u00e4 _VALID, _INVALID, status_int = -1 \u00fc;\nenum length \u00e4 FIX, VARIABLE \u00fc;\nchar  * c;\nchar  * lls;\nlong int     l;\nstatus type;\nlength ltype;\nstr()\u00e4 c = lls = NULL; l = 0; type = _VALID; ltype = VARIABLE; \u00fc\n      \u00fc;\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nclass sLL;\n\nclass mvsSTRING \u00e4\n   protected:\n   str st;\n   public:\n   static char parseSepCh;\n   mvsSTRING();\n   mvsSTRING(const char *);\n   mvsSTRING(const mvsSTRING &);\n   mvsSTRING(const char *,long int l );\n   mvsSTRING(const char , const long int l);\n\n\t\tvirtual \u00dfmvsSTRING();\n\n  virtual mvsSTRING& operator=(const char * );\n  virtual mvsSTRING& operator=(const mvsSTRING &);\n\t\tvirtual mvsSTRING& operator=(const sLL &);\n\n  virtual operator char *() const\n  \u00e4\n  if ( st.type == str::_VALID )\n      return st.c;\n// perror(\"maybe _INVALID mvsSTRING in place of char *\");\n   return st.c;\n   \u00fc\n   virtual operator unsigned char *() const\n  \u00e4\n  if ( st.type == str::_VALID )\n      return (unsigned char *)st.c;\n// perror(\"maybe _INVALID mvsSTRING in place of char *\");\n   return (unsigned char *)st.c;\n   \u00fc\n   virtual operator const char *() const\n   \u00e4\n    return (const char *)st.c;\n   \u00fc\n   virtual operator const unsigned char *() const\n   \u00e4\n    return (const unsigned char *)st.c;\n   \u00fc\n   friend long int operator==(const mvsSTRING & , const mvsSTRING &);\n   friend long int operator|=(const mvsSTRING & , const mvsSTRING &);\n   friend mvsSTRING operator+(const mvsSTRING & , const mvsSTRING &);\n //mvsSTRING operator+(const mvsSTRING&);\n   mvsSTRING& operator+=(const mvsSTRING&);\n   void operator<<(long int );\n   void operator>>(long int );\n\n   virtual char& operator\u00c4\u00dc(int);\n   virtual char& byte(int);\n   mvsSTRING operator()(const long int , long int );\n\n   long int hashcode();\n  char * nameOf();\n   long int  lengthOf() const\u00e4return st.l;\u00fc\n   long int toint()\n          \u00e4 long int ret = 0;\n             if ( st.l >= sizeof(long int) )\n                     ret = * (long int *)(st.c);\n           else if ( st.l == sizeof(short) )\n              ret = * (short *)(st.c);\n           else if ( st.l == 1)\n              ret = *st.c;\n         return ret ;\n       \u00fc\n   void fromint(long int i)\n       \u00e4\n             if ( st.l >= sizeof(long int) )\n                      *(long int *)(st.c) = i;\n           else if ( st.l == sizeof(short) )\n              *(short *)(st.c) = (short )i;\n           else if ( st.l == 1)\n          *st.c =(char) i;\n       \u00fc\n  void changeAll(char ,char );\n  void align(ALIGNTYPE );\n  void caps(CAPSTYPE);\n  mvsSTRING & strip();\n  int  isEmpty();\n  mvsSTRING& stripmvsSTRING();\n    mvsSTRING& format(FORMAT *);\n  void parse(mvsSTRING&, char, mvsSTRING&);\n  void parse(mvsSTRING&, char, mvsSTRING&, char ,mvsSTRING &);\n  void parse(mvsSTRING&, char *,mvsSTRING&);\n  void parse(mvsSTRING&, char *, mvsSTRING&, char *,mvsSTRING &);\n  void split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &);\n\tvoid split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &,char *,mvsSTRING &);\n\tvoid split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &,char *,mvsSTRING &,char *,mvsSTRING&);\n\tvoid parse(mvsSTRING&, char *, mvsSTRING&, char *,mvsSTRING &,char *,mvsSTRING &);\n\tvoid dump(const char * ,int);\n  char * getLlmvsSTRING();\n\u00fc;\n\n\textern mvsSTRING nullstring; //szm\n//\n//--------------------------------------------------\n//\nextern mvsSTRING nullmvsSTRING;\n//\n//--------------------------------------------------\n//\nclass LLC_mvsSTRING : public mvsSTRING\n\u00e4\n   short codev;\n  public:\n  LLC_mvsSTRING():mvsSTRING(), codev(0)\u00e4\u00fc\n  LLC_mvsSTRING(char * s):mvsSTRING(),codev(0)\n    \u00e4\n     short l = *(short*) s;\n     if ( l >= 4 )\n\t\t\t\t//\t\u00e4(mvsSTRING)(*this)= mvsSTRING(s+4,l-4); codev = *(short *)(s+2); \u00fc szm\n\t\t\t\t\u00e4\n\t\t\t\tmvsSTRING x = mvsSTRING(s+4,l-4);\n\t\t\t\tmvsSTRING::operator=(x);\n\t\t\t\tcodev = *(short *)(s+2);\n\t\t\t\t\u00fc\n    \u00fc\n   LLC_mvsSTRING(long int c):mvsSTRING() , codev(c)\u00e4\u00fc\n  \u00dfLLC_mvsSTRING()\u00e4\u00fc\n   long int   code(void)\u00e4return codev;\u00fc\n operator long int()\n       \u00e4 long int ret = 0;\n          if ( st.l == sizeof(long int) )\n                  ret = * (long int *)(st.c);\n         else if ( st.l == sizeof(short) )\n            ret = * (short *)(st.c);\n       else if ( st.l == 1)\n            ret = *st.c;\n       return ret ;\n    \u00fc\n\u00fc;\n//\n//--------------------------------------------------\n//\n\nmvsSTRING patternchng(mvsSTRING input , mvsSTRING mask,\n  mvsSTRING (*function)(mvsSTRING));\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//\n\n\n#ifndef USHORT\n#define USHORT unsigned short\n#endif\n\nclass mvsSTRING;\nclass mERROR;\n\n\n\n\n#ifndef INCLUDE_SLL\n#define INCLUDE_SLL\n\n\n\n#ifndef USHORT\n#define USHORT unsigned short\n#endif\n\nclass mvsSTRING;\nclass mERROR;\n\nclass INT3\n\u00e4\nprivate :\n   long v;\npublic:\n   INT3(long u)\u00e4 v = u;\u00fc\n   operator long()\u00e4return v;\u00fc\n   INT3 & operator=(long u)\u00e4 v = u;return *this;\u00fc\n\n\u00fc;\n\n\n#endif\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//-----smaLL storage chunk in L.. data form\n//--------------------------------------------------------------\n\n#define MAX_sLL 1024\n\nenum sLLUsage \u00e4 sLLinput , sLLoutput , sLLoutputVar\u00fc ;\n\n   // input\n   // fix size output\n   // var size output\n\nenum sLLType   \u00e4sLLt0 = 0, sLLt1 = 1  ,sLLt2 = 2 , sLLt3 = 3 , sLLt4 = 4 \u00fc;\nenum sLLStatus \u00e4sLLOk = 0, sLLUf = 1  ,sLLOf = 2\u00fc;\n\nclass sLL;\n\n\nclass sLLskip\u00e4\nprivate:\n   int i;\npublic:\n   sLLskip(int v):i(v)\u00e4\u00fc\n   operator int()\u00e4return i;\u00fc\n\u00fc;\n\nclass sLL:public  mERROR\n\u00e4\n\nprotected:\n\n      int length;\n      int offset;\n      int llength;\n      int allocl;\n      int storedl;\n\n      sLL * base;\n      sLL * child;\n\n\n      char * start;\n      char * cursor;\n      sLLType type;\n      sLLStatus status;\n      char   dummy;\n\t\t\tmvsSTRING  string; //szm\nprotected:\n      sLLUsage usage;\n\nprotected:\n\n    void init(sLL *,int,sLLType);\n    int storeOk(int);\n\npublic:\n\n//\n//contruct /desctuct/copy/assign\n//\n\n    sLL (sLLType = sLLt2,\n            sLLUsage = sLLoutput,int=MAX_sLL );\n    sLL (sLL * , int ,\n            sLLType = sLLt2);\n    sLL (sLL * ,char *,\n            sLLType = sLLt2);\n    sLL (char *,\n            sLLType = sLLt2);\n      sLL (char *,\n                   int );\n\n\n    sLL (const sLL &);\n\n    virtual \u00dfsLL ();\n\n    virtual sLL & operator=(sLL &);\n\n//\n//\n//\n\n      operator int();\n\n\n    char & operator\u00c4\u00dc(int);\n\n\t\t\tint   getLength() const\n\t\t\t\t\u00e4\n\t\t\t\tif ( usage == sLLinput ) return length;\n\t\t\t\telse return storedl;\n\t\t\t\t\u00fc\n\n\t\t\tchar * getStart() const\n\t\t\t\t\u00e4 return start; \u00fc\n\n    sLL * getBase();\n    int   getOffset();\n    sLL * getChild();\n\n\n    int   getFullLength();\n    int   getRemainderLength();\n    int   getStoredLength();\n\n    char * getCursor();\n\t\t\tmvsSTRING  getString();//szm\n    void  setChild(sLL*);\n    void  setBase(sLL *);\n\n\n    void   setLength();\n    virtual void resetCursor();\n\n    char * goCursor(int);\n    void   setUsage(sLLUsage);\n\n//\n//\n//\n\n    sLL * next();\n    sLL * iterate(sLLType,int = 0);\n    void remove(sLL& );\n\n//\n// retrieve\n//\n\n\n    sLL& operator>>(int&);\n    sLL& operator>>(short&);\n    sLL& operator>>(unsigned short&);\n    sLL& operator>>(char &);\n    sLL& operator>>(char * &);\n    sLL& operator>>(mvsSTRING &);\n    sLL& operator>>(sLL &);\n    sLL& operator>>(INT3 &);\n    sLL& operator>>(sLLskip &);\n//\n// store\n//\n\n    sLL& operator<<(int);\n    sLL& operator<<(short);\n    sLL& operator<<(unsigned short);\n    sLL& operator<<(char );\n    sLL& operator<<(char *);\n    sLL& operator<<(mvsSTRING &);\n    sLL& operator<<(sLL& );\n    sLL& operator<<(INT3 &);\n    sLL& operator<<(sLLskip &);\n    sLL& store(char *,int);\n\n\n//\n// dump print etc.\n//\n\n   int write(void *);\n   friend sLL * readsLL(void *,sLLType);\n\t\t\tvirtual void dump(const char *,int);\n\n\u00fc;\n\nclass sLLTag: public sLL\n\u00e4\nprivate:\n   short      code;\n   char       * name;\n   short      searchcode;\n   void       init(short);\npublic:\n   sLLTag();\n   sLLTag(short);\n\n   sLLTag(char *);\n   sLLTag(sLL * , char *);\n   sLLTag(const sLLTag &);\n\n   \u00dfsLLTag()\u00e4\u00fc\n\t\tsLLTag& operator=(sLLTag&);\n\n   short      getCode()\u00e4 return code;\u00fc\n   char *     getName()\u00e4 return name ;\u00fc\n   sLLTag *   search(short=0);\n   void       resetCursor();\n   void       remove(sLLTag &);\n   sLLTag *   update(sLLTag& );\n   sLLTag *   next();\n   sLLTag *   iterate();\n\t virtual void dump(const char *,int);\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSEBCDI": {"ttr": 8731, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mvsebcdic.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   utility functions to convert from and to ebcdic charset\n*******************************************************************************/\n\n#ifndef __EBCDICUT_HPP__\n#define __EBCDICUT_HPP__\n\n\nextern const unsigned char isis_etoa\u00c4256\u00dc;\nextern const unsigned char isis_atoe\u00c4256\u00dc;\n\n\n/**\n * functions for ebcdic/ascii conversion\n * codesetConversion: helper function which does the conversion\n * local2ascii, ascii2local: generally called functions\n *   on ebcdic platforms they convert characters between ebcdic ascii\n *   on ascii platforms they don't change the characters\n * ascii2ebcdic, ebcdic2ascii: converts on ascii as well as on ebcdic platforms\n */\n\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab)\n\u00e4\n    char *d = dest;\n    for(;*src;++src,++d)\n    \u00e4\n        *d=convtab\u00c4(unsigned char)*src\u00dc;\n    \u00fc\n    *d=0;\n    return dest;\n\u00fc\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab,int len)\n\u00e4\n\n    for(int i=0;i<len;++i)\n    \u00e4\n        dest\u00c4i\u00dc=convtab\u00c4(unsigned char) src\u00c4i\u00dc\u00dc;\n    \u00fc\n    return dest;\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ascii(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* local2ascii(char* str,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char local2ascii(char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_etoa\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ascii2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ascii2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ascii2local(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ascii2local(char* str,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ascii2local(char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_atoe\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char local2ebcdic(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_atoe\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ebcdic2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ebcdic2local(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_etoa\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* ebcdic2ascii(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_etoa);\n\u00fc\n\ninline char* ascii2ebcdic(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_atoe);\n\u00fc\n\ninline char ebcdic2ascii(char c)\n\u00e4\n    return (char) isis_etoa\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ebcdic2ascii(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4c\u00dc;\n\u00fc\n\ninline char ascii2ebcdic(char c)\n\u00e4\n    return (char)isis_atoe\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ascii2ebcdic(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4c\u00dc;\n\u00fc\n\n// for backwards compatibility\ninline unsigned char etoa(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4 c\u00dc;\n\u00fc\n\ninline unsigned char atoe(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4 c\u00dc;\n\u00fc\n\n// Ascii representation of a string\n// useful if you need the ascii representation of a text independently from the platform's codeset\n// there is an overhead also on ascii platforms -> avoid frequent constructor calls\n// usage samples:\n// strcmp(fontName,AsciiString(\"Arial\"));\n// const AsciiString fontlist\u00c4\u00dc=\u00e4\"X1\",X2,\"X3\"\u00fc;\nclass AsciiString\n\u00e4\nprotected:\n    char * str;\npublic:\n    AsciiString(const char* s)\n    \u00e4\n        if(s)\n        \u00e4\n            str=new char\u00c4strlen(s)+1\u00dc;\n            local2ascii(str,s);\n        \u00fc\n        else\n        \u00e4\n            str=NULL;\n        \u00fc\n    \u00fc\n\n    \u00dfAsciiString()\n    \u00e4\n        delete\u00c4\u00dc str;\n    \u00fc\n\n    operator const char* () const\n    \u00e4\n        return str;\n    \u00fc\n\u00fc;\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSSTR": {"ttr": 8597, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_MVSSTRUCT\n#define INCLUDE_MVSSTRUCT\n\n#include \"ihapsa.hpp\"\n#include \"ihacvt.hpp\"\n#include \"ihascvt.hpp\"\n#include \"ikjtcb.hpp\"\n#include \"ihalda.hpp\"\n#include \"ihaecvt.hpp\"\n#include \"ihaascb.hpp\"\n#include \"ihaassb.hpp\"\n#include \"csvdlcb.hpp\"\n#include \"ihallt.hpp\"\n#include \"bpxzocvt.hpp\"\n#include \"bpxzopnt.hpp\"\n#include \"bpxzocve.hpp\"\n#include \"iewpmar.hpp\"\n#include \"iewpmara.hpp\"\n#include \"iewpmarl.hpp\"\n#include \"iewpmarr.hpp\"\n#include \"igwdesb.hpp\"\n#include \"igwdesd.hpp\"\n#include \"igwdesl.hpp\"\n#include \"igwdesn.hpp\"\n#include \"igwdesp.hpp\"\n#include \"igwdesr.hpp\"\n#include \"igwdesx.hpp\"\n#include \"igwdst.hpp\"\n#include \"smde.hpp\"\n#include \"smdefd.hpp\"\n#include \"smdename.hpp\"\n#include \"smdenlst.hpp\"\n#include \"smdepnam.hpp\"\n#include \"smdetokn.hpp\"\n#include \"tsvt.hpp\"\n#include \"tjdsectd.hpp\"\n#include \"tvdsectd.hpp\"\n#include \"dcuouth.hpp\"\n#include \"f1dscb.hpp\"\n#include \"rexxvar.hpp\"\n#include \"qfss70mu/f2dscb.hpp\"\n#include \"qfss70mu/f3dscb.hpp\"\n#include \"qfss70mu/mxdt.hpp\"\n#include \"qfss70mu/mxis.hpp\"\n#include \"qfss70mu/mxireq.hpp\"\n#include \"qfss70mu/pgtha.hpp\"\n#include \"qfss70mu/pgthb.hpp\"\n#include \"qfss70mu/pgthc.hpp\"\n#include \"qfss70mu/pgthd.hpp\"\n#include \"qfss70mu/pgthe.hpp\"\n#include \"qfss70mu/pgthf.hpp\"\n#include \"qfss70mu/pgthg.hpp\"\n#include \"qfss70mu/pgthh.hpp\"\n#include \"qfss70mu/pgthj.hpp\"\n#include \"qfss70mu/pgthk.hpp\"\n#include \"qfss70mu/pgps.hpp\"\n#include \"qfss70mu/bpxzotcb.hpp\"\n#include \"qfss70mu/bpxzthli.hpp\"\n#include \"qfss70mu/bpxzprli.hpp\"\n#include \"qfss70mu/bpxyopnf.hpp\"\n#include \"qfss70mu/rmct.hpp\"\n#include \"qfss70mu/csd.hpp\"\n#include \"qfss70mu/pcca.hpp\"\n#include \"qfss70mu/pccavt.hpp\"\n#include \"qfss70mu/smcabase.hpp\"\n#include \"qfss70mu/ihaasvt.hpp\"\n#include \"qfss70mu/mnte.hpp\"\n#include \"qfss70mu/mnteh.hpp\"\n#include \"qfss70mu/trvt.hpp\"\n#include \"qfss70mu/tbvt.hpp\"\n#include \"qfss70mu/tte.hpp\"\n\n\n#include \"qfss70mu/ceecaa.hpp\"\n#include \"qfss70mu/ceemch.hpp\"\n#include \"qfss70mu/ceedsahp.hpp\"\n#include \"qfss70mu/ceedsa.hpp\"\n//#include \"qfss70mu/ceecib.hpp\"\n#include \"qfss70mu/ceepcb.hpp\"\n#include \"qfss70mu/ceecedb.hpp\"\n#include \"qfss70mu/ceecdll.hpp\"\n#include \"qfss70mu/pa1h.hpp\"\n#include \"qfss70mu/pa2h.hpp\"\n#include \"qfss70mu/pa1epnm.hpp\"\n#include \"qfss70mu/ihastcb.hpp\"\n#include \"qfss70mu/ihaasxb.hpp\"\n#include \"qfss70mu/cct.hpp\"\n#include \"qfss70mu/ict.hpp\"\n#include \"qfss70mu/mct.hpp\"\n#include \"qfss70mu/ezbyptha.hpp\"\n#include \"qfss70mu/ezbcthdr.hpp\"\n#include \"qfss70mu/pcoms83.hpp\"\n#include \"qfss70mu/rfis.hpp\"\n#include \"qfss70mu/rfim.hpp\"\n#include \"qfss70mu/iocc.hpp\"\n#include \"qfss70mu/iazjsab.hpp\"\n#include \"qfss70mu/cvtxtnt1.hpp\"\n#include \"qfss70mu/cvtxtnt2.hpp\"\n\ntypedef struct psa    * psaP;\ntypedef struct cvt\t\t* cvtP;\ntypedef struct scvt  *  scvtP;\ntypedef struct tcbfix * tcbP;\ntypedef struct lda    * ldaP;\ntypedef struct ecvt   * ecvtP;\ntypedef struct ascb *   ascbP;\ntypedef struct assb *   assbP;\ntypedef struct dlcb *   dlcbP;\ntypedef struct llt  *   lltP;\ntypedef struct ocvt *   ocvtP;\ntypedef struct ocve *   ocveP;\ntypedef struct opnt *   opntP;\ntypedef struct desb  *  desbP;\ntypedef struct smde  *  smdeP;\ntypedef struct smde_name * smde_nameP;\ntypedef struct pmar *   pmarP;\ntypedef struct pmarl *\tpmarlP;\ntypedef struct pmarr *  pmarrP;\ntypedef struct tsvt  *  tsvtP;\ntypedef struct dcuouth * dcuouthP;\ntypedef struct rmct *   rmctP;\ntypedef struct csd  *   csdP;\ntypedef struct pccat *  pccatP;\ntypedef struct pcca * pccaP;\ntypedef struct trvt * trvtP;\ntypedef struct tbvt * tbvtP;\ntypedef struct tte  * tteP;\ntypedef struct cct *  cctP;\ntypedef struct ict *  ictP;\ntypedef struct mct *  mctP;\ntypedef struct record * pcoms83P;\ntypedef struct iazjsab * iazjsabP;\ntypedef struct f2dscb F2DSCB;\ntypedef struct f3dscb F3DSCB;\nstatic  psaP   PSA = 0;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSTIME": {"ttr": 7995, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mvstime.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MVSTIME\n#define INCLUDE_MVSTIME\n\n#include <time.h>\n\ntypedef void (*printfv_t)(const char *);\n\nclass MvsTimer\n\u00e4\npublic:\n   static char pb\u00c41024\u00dc;\n   static int  status;\n   static printfv_t printfv;\n   char * command;\n   int    count;\n   int    time;\n   int    time_max;\n   int    time_min;\n   int    total;\n   clock_t start_t;\n   clock_t stop_t;\n   MvsTimer(char *);\n    \u00dfMvsTimer()\u00e4\u00fc\n   char * print();\n   void start();\n   void stop();\n   void reset();\n   void set(int);\nprivate:\n   void storeclock(clock_t&);\n   int timediff(clock_t,clock_t);\n\u00fc;\n\nvoid InitMvsTimers(char* *,printfv_t);\nvoid ResetMvsTimers();\nvoid PrintMvsTimers();\nint  ToggleMvsTimers();\nvoid StartMvsTimer(int);\nvoid StopMvsTimer(int);\nvoid SetMvsTimer(int,int);\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MVSTOOL": {"ttr": 8739, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_MVSTOOL\n#define INCLUDE_MVSTOOL\n\n#define _ISOC99_SOURCE\n#define __C99\n#ifdef\tsignal\n#undef\tsignal\n#define signal signal\n#endif\n#include <stdarg.h>\n#include \"versinfo.h\"\n#include \"osmfind.hpp\"\n//#include \"systems.hpp\"\n#define _XOPEN_SOURCE_EXTENDED 1\n#define _XOPEN_SOURCE 500\n#define _OPEN_SYS_IPC_EXTENSION 1\n#define _LARGE_FILES 1\n#ifndef _SHR_ENVIRON\n#define _SHR_ENVIRON 1\n#endif\n#define _SHARE_EXT_VARS 1\n#define  environ  (*(__Envn()))\n#include <signal.h>\n#include <locale.h>\n#include <dll.h>\n#include <limits.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <iconv.h>\n#include <pwd.h>\n#include <assert.h>\n#include <ctype.h>\n#include <string.h>\n#include <strings.h>\n#include <dirent.h>\n#include <fcntl.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <sys/wait.h>\n#include <sys/socket.h>\n#include <sys/time.h>\n#include <sys/msg.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n#include <fcntl.h>\n#include <errno.h>\n#include <spawn.h>\n#include <errno.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <assert.h>\n#include <ctype.h>\n#include <string.h>\n#include <strings.h>\n#include <fcntl.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include \"ibmdebug.hpp\"\nextern \"C\" \u00e4\n\ttypedef int (DLL_FN)(void);\n\u00fc\ntypedef unsigned long long ULL;\ntypedef ULL * pULL;\ntypedef  unsigned long long DBLWRD;  // unsigned doubleword (8 bytes)\n#include \"misc.hpp\"\n//#include \"error.hpp\"\n#include \"mchain.hpp\"\n#include \"casmif.hpp\"\n#include \"msgmgr.hpp\"\n#include \"jobenv.hpp\"\n#include \"strserv.hpp\"\n#include \"smf.hpp\"\n#include <stdio.h>\n#include \"mvsstr.hpp\"\n#include \"db2str.hpp\"\n#include \"enfserv.hpp\"\n#include \"gimhc370.hpp\"\n#include <math.h>\n#include \"rexxvar.hpp\"\n\n\n\nint _edc_add_errno2   = setenv(\"_EDC_ADD_ERRNO2\",\"1\",1);  //szm20040129 byteseek set\n\nISIS_EXT_ASM int  DSNTIAR(...);\nconst int data_dim = 10;\nconst int data_len = 72;\n\ntypedef struct\n\u00e4\n\tshort error_len;\n\tchar error_text\u00c4data_dim\u00dc\u00c4data_len\u00dc;\n\u00fc ERROR_MESSAGE;\n\nint is_file_open(const char*);\n\nISIS_EXT_ASM typedef int EXTF(const char *);\n\n#pragma map(w_pioctl,\"BPX1PIO\")\nISIS_EXT_ASM int  w_pioctl(const int *, const unsigned char * *, int *,const int * , void ** , int *, int *, int * );\n\n\n#pragma map(__getthent,\"BPX1GTH\")\nISIS_EXT_ASM int  __getthent(const int *, void ** , const int * , void ** , int *, int *, int * );\n\n#pragma map(__getpsent,\"BPX1GPS\")\nISIS_EXT_ASM int __getpsent(const int *,  const int * , void ** , int *, int *, int * );\n\n\n#pragma map(__getmntent,\"BPX1GMN\")\nISIS_EXT_ASM int __getmntent(const int *, void * , int *, int *, int * );\n\n#pragma map(__querydub,\"BPX1QDB\")\nISIS_EXT_ASM int __querydub(int *, int *, int * );\n//*   Define equates for querydub output status\nconst int      QDB_DUBBED_FIRST  =   1;\n/*\nTask has already been dubbed.\n*                               This task and this RB caused the\n*                               dub.\n\n\u00a7DCA\n*/\nconst int     QDB_DUBBED           =   2;\n/*\nTask has already been dubbed.\n*                               Other task or other RB caused\n*                               the dub                          \u00a7DCA\n*/\nconst int     QDB_DUB_MAY_FAIL     =   4;\n/*\nTask has not been dubbed, but may\n*                               fail if attempted.  Most likely\n*                               reason for failure will be a missing\n*                               or incomplete user security profile,\n*                               or OMVS segment not defined      \u00a7DCA\n*/\nconst int    QDB_DUB_OKAY         =   8;\n/*\nTask has not been dubbed, and should\n*                               succeed if attempted             \u00a7DCA\n*/\nconst int  QDB_DUB_AS_PROCESS   =    16;\n/*\nTask has not been dubbed, but its\n*                               address space has. New task will dub\n*                               as another process within the address\n*                               space                            \u00a7DCA\n*/\nconst int   QDB_DUB_AS_THREAD    =   32;\n/*\nTask has not been dubbed, but its\n*                               address space has. New task will dub as\n*                               a thread within the process      \u00a7DCA\n*/\n\nchar* translate(char* input, char* tbl);\nchar    e_to_a\u00c4256\u00dc;\nchar    a_to_e\u00c4256\u00dc;\n\n\nint memcmpi(const char * s1,const char * s2,int l);\nchar * makeString(char * s,int l);\nint _dump(char * ,char * ,int );\nchar * argv\u00c4128\u00dc;\nint argc = 0;\n\ntypedef int (*testRoutine)();\nstruct testCase\n\u00e4\n\tchar * name;\n\ttestRoutine addr;\n\u00fc;\n\ntestCase testCases\u00c4512\u00dc;\nint      testCasesIndex = 0;\n\nint initTestCases(char * n,testRoutine f);\n\n#define testCase(n) \u00d6\n\tint _##n();\t\t\t\t\u00d6\n\tint _int##n    = initTestCases(#n,_##n);\n\ntestCase(rexxlist);\ntestCase(rexx4tab);\ntestCase(rexxjcl);\ntestCase(rexxsmf);\ntestCase(rexxdsmf);\ntestCase(dumpfile);\ntestCase(rexxenfs);\ntestCase(rexxgim);\ntestCase(rexxvsm);\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MXDT": {"ttr": 8317, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mxdt \u00e4\n  unsigned char  mxdtid\u00c44\u00dc;   /* Eye-catcher = Command Type      */\n  int            mxdtnum;     /* Number of entries               */\n  int            mxdtsiz;     /* Size of MXDT+Array              */\n  unsigned char  mxdtttl\u00c480\u00dc; /* Title line                      */\n  unsigned char  mxdtlb2\u00c480\u00dc; /* Label line 2                    */\n  unsigned char  mxdtlb3\u00c480\u00dc; /* Label line 3                    */\n  int            mxdtuser;    /* Reserved                        */\n  unsigned char  mxdtest;     /* First entry of result set array */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MXIREQ": {"ttr": 8339, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mxireq \u00e4\n  unsigned char  mxireq_command_length;   /* command length   */\n  unsigned char  mxireq_command\u00c471\u00dc;      /* command          */\n  unsigned char  mxireq_reserved\u00c456\u00dc;     /* resrved          */\n  unsigned char  mxireq_userid_length;    /* userid length    */\n  unsigned char  mxireq_userid\u00c48\u00dc;        /* userid           */\n  unsigned char  mxireq_group_length;     /* group length     */\n  unsigned char  mxireq_group_name\u00c48\u00dc;    /* group name       */\n  unsigned char  mxireq_mqs_ssid\u00c44\u00dc;      /* MQS SSID         */\n  unsigned char  mxireq_db2_ssid\u00c44\u00dc;      /* DB2 SSId         */\n  unsigned char  mxireq_operating_sys\u00c48\u00dc; /* operating system */\n  unsigned char  mxireq_user_data\u00c432\u00dc;    /* user data        */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MXIS": {"ttr": 8507, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct mxis \u00e4\n  unsigned char  mxisid\u00c44\u00dc;    /* MXIS eyecatcher = 'MXIS'                */\n  unsigned char  mxisflag;     /* MXIS flag settings                      */\n  unsigned char  mxisflg2;     /* MXIS flag 2                             */\n  unsigned char  mxisflg3;     /* MXIS flag 3                             */\n  unsigned char  mxisflg4;     /* Reserved                                */\n  int            mxisdsno;     /* Offset in line to dataset name          */\n  int            mxisvolo;     /* Offset in line to volser                */\n  int            mxismemo;     /* Offset in line to member                */\n  unsigned char  mxissmem\u00c48\u00dc;  /* Member name to search for (SRCH)        */\n  unsigned char  mxishelp\u00c48\u00dc;  /* HELP Panel name                         */\n  int            mxisrc;       /* Return code from panel                  */\n  int            mxissoff;     /* Screen offset                           */\n  int            mxisfnum;     /* Returned number of finds (for find all) */\n  int            mxisdtab;     /* MXDT address                            */\n  int            mxisstab;     /* Shadow table address                    */\n  int            mxisbufs;     /* Size of mxibuf                          */\n  int            mxisbufa;     /* Address of mxibuf                       */\n  int            mxislnea;     /* Address of mxilne                       */\n  int            mxislab2;     /* Address of mxilb2                       */\n  int            mxislab3;     /* Address of mxilb3                       */\n  unsigned char  mxisflen;     /* FIND length                             */\n  unsigned char  mxisfdat\u00c448\u00dc; /* FIND data                               */\n  unsigned char  mxisverb\u00c472\u00dc; /* MXICMD requested                        */\n  unsigned char  mxiscvrb\u00c472\u00dc; /* MXICMD that created this MXIS           */\n  unsigned char  mxissrti\u00c44\u00dc;  /* Saved SORT command parms                */\n  unsigned char  mxispanm\u00c48\u00dc;  /* Panel name to display results           */\n  unsigned char  mxisrcla\u00c48\u00dc;  /* Reserved                                */\n  unsigned char  mxisxmjl;     /* X-memory jobname length                 */\n  unsigned char  mxisxmjb\u00c48\u00dc;  /* X-memory jobname                        */\n  unsigned char  mxisxmas\u00c44\u00dc;  /* X-memory asid                           */\n  unsigned char  _filler1\u00c42\u00dc;\n  int            mxissnum;     /* Number of Columns                       */\n  unsigned char  mxissf1\u00c416\u00dc;  /* Column #1 :                             */\n  unsigned char  mxissf2\u00c416\u00dc;  /* Column #2                               */\n  unsigned char  mxissf3\u00c416\u00dc;  /* Column #3                               */\n  unsigned char  mxissf4\u00c416\u00dc;  /* Column #4                               */\n  unsigned char  mxissf5\u00c416\u00dc;  /* Column #5                               */\n  unsigned char  mxissf6\u00c416\u00dc;  /* Column #6                               */\n  unsigned char  mxissf7\u00c416\u00dc;  /* Column #7                               */\n  unsigned char  mxissf8\u00c416\u00dc;  /* Column #8                               */\n  unsigned char  mxissf9\u00c416\u00dc;  /* Column #9                               */\n  unsigned char  mxissf10\u00c416\u00dc; /* Column #10                              */\n  unsigned char  mxissf11\u00c416\u00dc; /* Column #11                              */\n  unsigned char  mxissf12\u00c416\u00dc; /* Column #12                              */\n  unsigned char  mxissf13\u00c416\u00dc; /* Column #13                              */\n  unsigned char  mxissf14\u00c416\u00dc; /* Column #14                              */\n  unsigned char  mxissf15\u00c416\u00dc; /* Column #15                              */\n  unsigned char  mxissf16\u00c416\u00dc; /* Column #16                              */\n  unsigned char  mxissf17\u00c416\u00dc; /* Column #17                              */\n  unsigned char  mxissf18\u00c416\u00dc; /* Column #18                              */\n  unsigned char  mxissf19\u00c416\u00dc; /* Column #19                              */\n  unsigned char  mxissf20\u00c416\u00dc; /* Column #20                              */\n  unsigned char  mxissf21\u00c416\u00dc; /* Column #21                              */\n  unsigned char  mxissf22\u00c416\u00dc; /* Column #22                              */\n  unsigned char  mxissf23\u00c416\u00dc; /* Column #23                              */\n  unsigned char  mxissf24\u00c416\u00dc; /* Column #24                              */\n  unsigned char  _filler2\u00c44\u00dc;\n  \u00fc;\n\n/* Values for field \"mxisflag\" */\n#define mxisscrl 0x80 /* scrolling is available            */\n#define mxissort 0x40 /* SORT is available                 */\n#define mxissrch 0x20 /* SRCH is available                 */\n#define mxisvolp 0x10 /* Volume serial numbers are present */\n#define mxisnchn 0x08 /* don't chain this MXIS             */\n#define mxislnnm 0x04 /* Show line numbers for scroll      */\n#define mxissets 0x02 /* Show settings on top line         */\n#define mxisdvrb 0x01 /* Move in creation verb on enter    */\n\n/* Values for field \"mxisflg2\" */\n#define mxisfbwd 0x80 /* FIND Backwards                    */\n#define mxisfnxt 0x40 /* FIND Next                         */\n#define mxisffst 0x20 /* FIND First                        */\n#define mxisflst 0x10 /* FIND Last                         */\n#define mxisfall 0x08 /* FIND All                          */\n#define mxisfrpt 0x04 /* Repeat FIND                       */\n\n/* Values for field \"mxisflg3\" */\n#define mxisxmem 0x80 /* MXIS is for X-MEM MEM Command     */\n#define mxisauto 0x40 /* AUTO is allowed                   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "OS": {"ttr": 8645, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/os.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n/**\n*\n* This header file contains declarations of various OS only routines.\n*\n**/\n\n#ifndef __IncOS\n#define __IncOS\n\n#include <stdlib.h>\n//szm\n#include <string.h>\n//ZA091008 comes from isislib/systems.cpp \u00dfFFBLK()\n\n//#define MAXDSNS 16*45 problem with more than 16 concat's szm\n#define MAXDSNS 256*45\n\nstruct DSNINFO \u00e4    /* argument structure for osdfind/osdnext */\n//   void * _ \u00c44\u00dc ;        /* reserved for library use */ /* stl20090508 */\n   void * xxx \u00c44\u00dc ;        /* reserved for library use */\n// stl\n   char cattype;         /* catalog entry type */\n   char dsname \u00c445\u00dc ;    /* null-terminated full dsname */\n   char mem \u00c49\u00dc ;        /* null-terminated member name */\n   char __;    /* padding */\n   int  TTR;\n   unsigned alias: 1;    /* alias member bit */\n   unsigned user_TTR_count: 2; /* number of user TTRs */\n   unsigned user_data_halfwords: 5; /* halfwords of user data */\n   char user_data \u00c462\u00dc ; /* user data from PDS directory */\n   /*char mmask\u00c49\u00dc    ; */ /* member name mask             */\n   char mmask\u00c4256\u00dc    ;  /* member name mask also for VSAM  //ZA050617 */\n   char * dsns        ;  /* list pointer                 */\n   char dsnsl\u00c4MAXDSNS\u00dc;  /* dsn list                     */\n   void * filepointer;   /* ve file pointer here         */\n                         /* ZA030926 taken from DSNINF   */\n\t void * FILEpointer;   //szm20070330 FILESYS FILE pointer\n   void* ptdatasname;    /* DataSName   pointer for osmnext */\n   void* ptdatasmember;  /* DataSMember pointer for osmnext */\n   void* rc;             /* return code from 1 call */\n\t int\t\tlsmvs_flag;     /* lsmvs active flag */ //szm\n\t void * lsmvs_pointer;  /* next entry pointer */\n\t int    lsmvs_counter;  /* counter            */\n\t char * lsmvs_cwork ;   //szm\n   bool isVsam;           /* true if vsam-enabled osmfind,osmnext,osmquit should be used  */\n //szm20060324\n DSNINFO()\n \u00e4\n \tmemset(this,0,sizeof(DSNINFO)); //szm20040913 //ZA091008 comes from isislib/systems.cpp \u00dfFFBLK()\n \t//lsmvs_cwork = (char *)0;\n \u00fc\n \u00dfDSNINFO()\n\t \u00e4\n\t\t\tif (lsmvs_cwork)\n\t\t\t\t\t\t\t\tfree(lsmvs_cwork);\n\t\t\tlsmvs_cwork = (char *)0;\n\t \u00fc\n //szm20060324\n\n\u00fc;\n\nISIS_EXT_C_START\n\n#pragma map(osdynalloc, \"#OSDYALC\")\n\n#ifndef _NOLIBCK\nISIS_EXT_ASM int oslink(const char *, ...);\n#if defined(CICSAPPL) == 0\nextern int osddinfo(const char *, char *, char *, char *, int *,\n                    int *);\nextern int osdsinfo(const char *, int, unsigned short *, char *,\n                    int *, int *);\n#endif\nextern int osdfind(struct DSNINFO *, const char *);\nextern int osdnext(struct DSNINFO *);\nextern void osdquit(struct DSNINFO *);\nextern int osmfind(struct DSNINFO *, const char *);\nextern int osmnext(struct DSNINFO *);\nextern void osmquit(struct DSNINFO *);\nextern int osdynalloc(int, const char *, char *, ...);\n#else\nISIS_EXT_ASM int oslink();\n#if defined(CICSAPPL) == 0\nextern int osddinfo();\nextern int osdsinfo();\n#endif\nextern int osdfind(), osdnext();\nextern void osdquit();\n#endif\nISIS_EXT_C_END\n\n#define RECFM_F 0x80 /* fixedlength records */\n#define RECFM_V 0x40 /* variable length records */\n#define RECFM_U 0xc0 /* undefined length records */\n#define RECFM_D 0x20 /* variable length ASCII records */\n#define RECFM_T 0x20 /* track overflow */\n#define RECFM_B 0x10 /* blocked records */\n#define RECFM_S 0x08 /* spanned/standard records */\n#define RECFM_A 0x04 /* ANS control characters */\n#define RECFM_M 0x02 /* machine control characters */\n\n#define LRECL_X -0x8000 /* no maximum record length */\n\n#define DSORG_IS 0x8000 /* indexed sequential */\n#define DSORG_PS 0x4000 /* physical sequential */\n#define DSORG_DA 0x2000 /* direct organization */\n#define DSORG_PO 0x0200 /* partitioned organization */\n#define DSORG_U  0x0100 /* unmovable */\n#define DSORG_AM 0x0008 /* VSAM */\n\n#define DYN_ALLOC 1\n#define DYN_FREE 2\n#define DYN_CONCAT 3\n#define DYN_DECONCAT 4\n#define DYN_NOTINUSE 5\n#define DYN_DDALLOC 6\n#define DYN_INQUIRE 7\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSIO": {"ttr": 8469, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _OSIO\n#define _OSIO\n/***\n* The following definition was generated by the DSECT2C utility from\n* the expansion of the MVS/XA DFP Release 2.0 DCBD macro.\n*\n* Note that the compiler option BITFIELD(1) is required for successful\n* compilation.\n***/\n\n\n#if !defined(_XL2)\n#define _XL2\ntypedef struct\n  {\n  char BF : 16;\n  } XL2;\n#endif\n\n#if !defined(_AL2)\n#define _AL2\ntypedef struct\n  {\n  char BF : 16;\n  } AL2;\n#endif\n\n#if !defined(_BL2)\n#define _BL2\ntypedef struct\n  {\n  char BF : 16;\n  } BL2;\n#endif\n\n#if !defined(_FL3)\n#define _FL3\ntypedef struct\n  {\n  char BF : 24;\n  } FL3;\n#endif\n\n#if !defined(_XL4)\n#define _XL4\ntypedef struct\n  {\n  char BF : 32;\n  } XL4;\n#endif\n\n#if !defined(_CL12)\n#define _CL12\ntypedef char CL12(|12|);\n#endif\n\n#if !defined(_AL3)\n#define _AL3\ntypedef struct\n  {\n  char BF : 24;\n  } AL3;\n#endif\n\n#if !defined(_CL8)\n#define _CL8\ntypedef char CL8(|8|);\n#endif\n\n#if !defined(_CL4)\n#define _CL4\ntypedef char CL4(|4|);\n#endif\n\n\ntypedef struct IHADCB\n  {\n  union\n    {\n    struct\n      {\n#define DCBBIT0 128\n#define DCBBIT1 64\n#define DCBBIT2 32\n#define DCBBIT3 16\n#define DCBBIT4 8\n#define DCBBIT5 4\n#define DCBBIT6 2\n#define DCBBIT7 1\n      CL4 dcbrelad;\n      signed char dcbkeycn;\n      CL8 dcbfdad;\n      } _s0;\n    struct\n      {\n      char _f0(|12|);\n      void *dcbdvtbl(|0|);\n      char _f1;\n      AL3 dcbdvtba;\n      signed char _f2;\n      char _f3;\n#define DCBDV311 0x21\n#define DCBDV301 0x22\n#define DCBDV303 0x23\n#define DCBDV302 0x24\n#define DCBDV321 0x25\n#define DCBD1305 0x26\n#define DCBDV305 0x27\n#define DCBDV314 0x28\n#define DCBDV330 0x29\n#define DCBDV340 0x2A\n#define DCBDV350 0x2B\n#define DCBDV375 0x2C\n#define DCBDV331 0x2D\n#define DCBDV380 0x2E\n      short dcbtrbal;\n      } _s1;\n    struct\n      {\n      CL12 _f4;\n      int dcbblkct;\n      char dcbtrtch;\n#define DCBMTE 0x23\n#define DCBMTT 0x3B\n#define DCBMTC 0x13\n#define DCBMTET 0x2B\n      char _f5;\n#define DCBDVMT 0x81\n#define DCBDVMT3 0x83\n#define DCBDVMT4 0x80\n      char dcbden;\n#define DCBMTDN0 0x03\n#define DCBMTDN1 0x43\n#define DCBMTDN2 0x83\n#define DCBMTDN3 0xC3\n#define DCBMTDN4 0xD3\n      char _f6;\n      } _s2;\n    struct\n      {\n      char _f7(|8|);\n      void *dcblctbl;\n      XL4 _f8;\n      char dcbcode;\n#define DCBPTCDN 0x80\n#define DCBPTCDI 0x40\n#define DCBPTCDF 0x20\n#define DCBPTCDB 0x10\n#define DCBPTCDC 0x08\n#define DCBPTCDA 0x04\n#define DCBPTCDT 0x02\n      char _f9;\n#define DCBDVPTP 0x50\n      char _f10;\n      char dcbptflg;\n#define DCBPTIC 16\n#define DCBPTECT 8\n#define DCBPTECR 4\n#define DCBPTUCT 2\n#define DCBPTERR 1\n      } _s3;\n    struct\n      {\n      char _f11(|16|);\n      char dcbprtsp;\n#define DCBPRSP0 0x01\n#define DCBPRSP1 0x09\n#define DCBPRSP2 0x11\n#define DCBPRSP3 0x19\n      char _f12;\n#define DCBDVPR1 0x48\n#define DCBDVPR2 0x4A\n#define DCBDVPR3 0x49\n#define DCBDVPR4 0x4B\n#define DCBDVPRT 0x4D\n#define DCBDVPR5 0x4E\n      char dcbprtov;\n#define DCBPRC9 0x20\n#define DCBPRC12 0x10\n      char dcbprbyt;\n#define DCBTRCID 3\n      char _f13;\n      } _s4;\n    struct\n      {\n      char _f14(|16|);\n      char dcbmode(|0|);\n      char dcbstack;\n#define DCBMODEC 128\n#define DCBMODEE 64\n#define DCBMODEO 32\n#define DCBMODER 16\n#define DCBSTCK2 2\n#define DCBSTCK1 1\n      char _f15;\n#define DCBDVCR0 0x41\n#define DCBDVCP0 0x42\n#define DCBDVCRP 0x43\n#define DCBDVCR1 0x44\n#define DCBDVCPR 0x45\n#define DCBDVCR2 0x46\n#define DCBDVCP1 0x4C\n      char _f16;\n      char dcbfunc;\n#define DCBFNCBI 128\n#define DCBFNCBR 64\n#define DCBFNCBP 32\n#define DCBFNCBW 16\n#define DCBFNCBD 8\n#define DCBFNCBX 4\n#define DCBFNCBT 2\n      } _s5;\n    struct\n      {\n      void *dcbwtoid(|0|);\n      char _f17;\n      AL3 dcbwtoia;\n      } _s6;\n    struct\n      {\n      char _f18(|4|);\n      void *dcberrcn(|0|);\n      char _f19;\n      AL3 dcberrca;\n      } _s7;\n    struct\n      {\n      char _f20(|4|);\n      char dcblnnum;\n      char dcblfmat;\n      char dcborflg;\n#define DCBEOPFG 128\n      char _f21;\n      void *dcbdsply(|0|);\n      CL4 dcbfrid(|0|);\n      char _f22;\n      AL3 dcbdspla;\n      void *dcbrescn(|0|);\n      void *dcbrdlne(|0|);\n      void *dcbfrtba(|0|);\n      char _f23;\n      AL3 dcbresca(|0|);\n      AL3 dcbrdlna;\n      char dcborbyt;\n#define DCBORSYN 128\n#define DCBOREOF 64\n#define DCBORBFP 32\n      char _f24;\n#define DCBDVOR5 0x5A\n#define DCBDVOR7 0x5B\n#define DCBDVOR8 0x5C\n#define DCBDVOR9 0x57\n      char dcbeib;\n#define DCBORNRM 64\n#define DCBORREJ 32\n#define DCBORERR 16\n#define DCBORECK 8\n#define DCBORWLR 4\n#define DCBORHPR 2\n#define DCBORDCK 1\n      char _f25;\n      } _s8;\n    CL8 dcbssid;\n    struct\n      {\n      void *_f26(|0|);\n      void *dcbqsmex;\n      void *dcbssad(|0|);\n      void *dcbimg(|0|);\n      char _f27;\n      AL3 dcbssada;\n      void *dcbimage(|0|);\n      char dcbmrfg;\n#define DCBMRBCT 192\n      AL3 dcbimaga;\n      void *dcbecblt(|0|);\n      void *dcbhdr(|0|);\n      char dcbmrind;\n#define DCBMRDCT 224\n#define DCBMRSCU 16\n#define DCBMRPLO 8\n#define DCBMRPLS 4\n#define DCBMRERP 2\n#define DCBMRERS 1\n      AL3 dcbecbla;\n      char dcbmrflg;\n#define DCBMRSCC 128\n#define DCBMRDBG 64\n#define DCBMRDRU 32\n#define DCBMRDR 16\n#define DCBMRPCC 12\n#define DCBMRDWT 2\n#define DCBMRUE 1\n      char _f28;\n#define DCBDVMR 0x5D\n#define DCBDVORS 0x5F\n#define DCBDVMRS 0x56\n#define DCBDVDRI 0x59\n      char dcbappin;\n      char _f29;\n      } _s9;\n    struct\n      {\n      char _f30(|16|);\n      int dcbrelb(|0|);\n      unsigned char dcbkeyle;\n      char dcbdevt(|0|);\n#define DCBDVTRM 0x4F\n      FL3 dcbrel;\n      void *dcbbufcb(|0|);\n      unsigned char dcbbufno;\n      AL3 dcbbufca;\n      short dcbbufl;\n      BL2 dcbdsorg(|0|);\n      char dcbdsrg1;\n#define DCBDSGIS 128\n#define DCBDSGPS 64\n#define DCBDSGDA 32\n#define DCBDSGCX 16\n#define DCBDSGPO 2\n#define DCBDSGU 1\n      char dcbdsrg2;\n#define DCBDSGGS 128\n#define DCBDSGTX 64\n#define DCBDSGTQ 32\n#define DCBACBM 8\n#define DCBDSGTR 4\n      void *dcbiobad(|0|);\n      void *dcbicqe(|0|);\n      void *dcbodeb(|0|);\n      signed char dcblnp(|0|);\n      char dcbqslm;\n#define DCB1DVDS 128\n#define DCBUPDCM 64\n#define DCBUPDBT 48\n#define DCBUPDT 32\n#define DCBNUPD 48\n#define DCBSVDEB 16\n      AL3 dcbiobaa(|0|);\n      AL3 dcbicqea(|0|);\n      AL3 dcbodeba;\n      } _s10;\n    struct\n      {\n      char _f31(|28|);\n      void *dcbsvcxl(|0|);\n      char _f32;\n      AL3 dcbsvcxa;\n      void *dcbeodad(|0|);\n      char dcbhiarc(|0|);\n      char dcbbftek(|0|);\n      char dcbbfaln;\n#define DCBH1 128\n#define DCBBFT 112\n#define DCBBFTA 96\n#define DCBBFTR 32\n#define DCBBFTS 64\n#define DCBBFTKR 32\n#define DCBBFTE 16\n#define DCBBFTKD 8\n#define DCBBFTK 8\n#define DCBBXLRI 104\n#define DCBH0 4\n#define DCBBFA 3\n#define DCBBFAD 2\n#define DCBBFAF1 1\n#define DCBBFAF2 3\n      AL3 dcbeoda;\n      void *dcbexlst(|0|);\n      char dcbrecfm;\n#define DCBRECLA 224\n#define DCBRECD 32\n#define DCBRECL 192\n#define DCBRECF 128\n#define DCBRECV 64\n#define DCBRECU 192\n#define DCBRECTO 32\n#define DCBRECBR 16\n#define DCBRECSB 8\n#define DCBRECCC 6\n#define DCBRECCA 4\n#define DCBRECCM 2\n#define DCBRECC 0x00\n#define DCBRECKL 1\n      AL3 dcbexlsa;\n      } _s11;\n    };\n  union\n    {\n    struct\n      {\n      CL8 dcbddnam;\n      char dcboflgs;\n#define DCBOFLWR 128\n#define DCBOFIOD 128\n#define DCBOFLRB 64\n#define DCBOFEOV 32\n#define DCBOFOPN 16\n#define DCBOFPPC 8\n#define DCBOFTM 4\n#define DCBOFUEX 2\n#define DCBOFIOF 1\n      char dcbiflg;\n#define DCBIBEC 192\n#define DCBIFNEP 0x00\n#define DCBEX 64\n#define DCBIFPEC 192\n#define DCBIBPCT 48\n#define DCBIFC9 32\n#define DCBIFC12 16\n#define DCBIBIOE 12\n#define DCBIFER 0x00\n#define DCBIFNE1 4\n#define DCBIFTIM 4\n#define DCBIFNE2 8\n#define DCBIFNE3 12\n      BL2 dcbmacr(|0|);\n      char dcbmacr1;\n#define DCBMRECP 128\n#define DCBMRFE 64\n#define DCBMRGET 64\n#define DCBMRPTQ 64\n#define DCBMRAPG 32\n#define DCBMRRD 32\n#define DCBMRWRQ 32\n#define DCBMRCI 16\n#define DCBMRMVG 16\n#define DCBMRRDK 16\n#define DCBMRLCG 8\n#define DCBMRRDI 8\n#define DCBMRABC 4\n#define DCBMRPT1 4\n#define DCBMRSBG 4\n#define DCBMRDBF 4\n#define DCBPGFXA 2\n#define DCBMRCRL 2\n#define DCBMRCHK 2\n#define DCBMRRDX 2\n#define DCBMRDMG 1\n#define DCBMRCK 1\n      char dcbmacr2;\n#define DCBMRSTL 128\n#define DCBMRPUT 64\n#define DCBMRGTQ 64\n#define DCBMRWRT 32\n#define DCBMRRDQ 32\n#define DCBMRMVP 16\n#define DCBMRWRK 16\n#define DCBMR5WD 8\n#define DCBMRLDM 8\n#define DCBMRLCP 8\n#define DCBMRIDW 8\n#define DCBMR4WD 4\n#define DCBMRPT2 4\n#define DCBMRTMD 4\n#define DCBMRUIP 4\n#define DCBMR3WD 2\n#define DCBMRCTL 2\n#define DCBMRSTK 2\n#define DCBMRAWR 2\n#define DCBMR1WD 1\n#define DCBMRSWA 1\n#define DCBMRDMD 1\n#define DCBMRSTI 1\n#define DCBLNGXE 52\n      } _s12;\n    struct\n      {\n      AL2 dcbtiot;\n      BL2 dcbmacrf(|0|);\n      char dcbmacf1;\n      char dcbmacf2;\n      void *dcbdebad(|0|);\n      char dcbiflgs;\n#define DCBIFEC 192\n#define DCBIFPCT 48\n#define DCBIFIOE 12\n#define DCBIFLDT 2\n      AL3 dcbdeba;\n      } _s13;\n    struct\n      {\n      char _f33(|8|);\n      void *dcbread(|0|);\n      void *dcbwrite(|0|);\n      char dcboflg;\n      AL3 dcbreada(|0|);\n      AL3 dcbwrita;\n      } _s14;\n    struct\n      {\n      char _f34(|8|);\n      void *dcbget(|0|);\n      void *dcbput(|0|);\n      char dcboflg1;\n      AL3 dcbgeta(|0|);\n      AL3 dcbputa;\n      } _s15;\n    };\n  void *dcbgerr(|0|);\n  void *dcbperr(|0|);\n  void *dcbcheck(|0|);\n  char dcboptcd;\n#define DCBOPTW 128\n#define DCBOPTU 64\n#define DCBOPTC 32\n#define DCBOPTH 16\n#define DCBOPTO 16\n#define DCBBCKPT 16\n#define DCBOPTQ 8\n#define DCBOPTZ 4\n#define DCBSRCHD 4\n#define DCBOPTT 2\n#define DCBOPTJ 1\n  AL3 dcbgerra(|0|);\n  AL3 dcbperra(|0|);\n  AL3 dcbchcka;\n  void *dcbsynad(|0|);\n  signed char dcbiobl;\n  AL3 dcbsyna;\n  char dcbflag1(|0|);\n  char dcbcind1;\n#define DCBCNTOV 128\n#define DCBSTQCK 128\n#define DCBSTFLS 64\n#define DCBCNSRD 64\n#define DCBCNEVB 32\n#define DCBCNEVA 16\n#define DCBCNCI 8\n#define DCBCNBRM 4\n#define DCBCNEXB 1\n  char dcbcind2;\n#define DCBCNSTO 128\n#define DCBCNWR0 64\n#define DCBCNCLO 32\n#define DCBCNIOE 16\n#define DCBCNBFP 8\n#define DCBCNCHS 4\n#define DCBCNFEO 2\n#define DCBCNQSM 1\n  short dcbblksi;\n  char dcbwcpo;\n  signed char dcbwcpl;\n  char dcboffsr;\n  char dcboffsw;\n  union\n    {\n    void *dcbioba;\n    struct\n      {\n      void *dcbcicb(|0|);\n      char _f35;\n      AL3 dcbcicba;\n      } _s16;\n    };\n  union\n    {\n    struct\n      {\n      char _f36(|8|);\n      short dcbdirct(|0|);\n      char dcbqsws(|0|);\n#define DCBPOPEN 4\n      char dcbusasi;\n#define DCBBLBP 64\n#define DCBQADFS 56\n#define DCBQADF1 32\n#define DCBQADF2 16\n#define DCBQADF3 8\n#define DCB3525A 2\n#define DCBQSTRU 1\n      unsigned char dcbbufof(|0|);\n      signed char dcbdircq;\n      } _s17;\n    struct\n      {\n      void *dcbeobr(|0|);\n      unsigned char dcbncp;\n      AL3 dcbeobra;\n      void *dcbeobw;\n      short _f37;\n      short dcblrecl;\n      void *dcbcntrl(|0|);\n      void *dcbnote(|0|);\n      void *dcbpoint;\n#define DCBLNGBS 88\n#define DCBLNGPO 88\n      } _s18;\n    struct\n      {\n      void *dcblccw(|0|);\n      void *dcbeobad;\n      void *dcbcccw(|0|);\n      void *dcbrecad(|0|);\n      char dcbrecbt;\n#define DCBRCREL 240\n#define DCBRCTRU 128\n#define DCBRCFGT 64\n      AL3 dcbreca;\n      char _f38;\n      signed char _f39;\n      short _f40;\n      void *_f41(|0|);\n      char dcberopt;\n#define DCBERACC 128\n#define DCBERSKP 64\n#define DCBERABE 32\n#define DCBERBAM 1\n      AL3 dcbxlrec(|0|);\n      AL3 _f42;\n      XL2 _f43;\n      short dcbprecl;\n      void *dcbeob;\n#define DCBLNGQS 96\n#define DCBLNGPS 96\n      } _s19;\n    };\n    struct {                    /* extra fields for C support      */\n      char *_;                  /* reserved                        */\n      char *_ri_info;           /* record interface information    */\n      char *_bs_info;           /* BSAM interface information      */\n      char *_USER;              /* for user use                    */\n    } _extension;\n  } DCB_t;\n\n\n\n\n#define DCBAPPIN                        _s9.dcbappin\n#define DCBBFALN                        _s11.dcbbfaln\n#define DCBBFTEK                        _s11.dcbbftek(|0|)\n#define DCBBLKCT                        _s2.dcbblkct\n#define DCBBLKSI                        dcbblksi\n#define DCBBUFCA                        _s10.dcbbufca\n#define DCBBUFCB                        _s10.dcbbufcb(|0|)\n#define DCBBUFL                         _s10.dcbbufl\n#define DCBBUFNO                        _s10.dcbbufno\n#define DCBBUFOF                        _s17.dcbbufof(|0|)\n#define DCBCCCW                         _s19.dcbcccw(|0|)\n#define DCBCHCKA                        dcbchcka\n#define DCBCHECK                        dcbcheck(|0|)\n#define DCBCICB                         _s16.dcbcicb(|0|)\n#define DCBCICBA                        _s16.dcbcicba\n#define DCBCIND1                        dcbcind1\n#define DCBCIND2                        dcbcind2\n#define DCBCNTRL                        _s18.dcbcntrl(|0|)\n#define DCBCODE                         _s3.dcbcode\n#define DCBDDNAM                        _s12.dcbddnam\n#define DCBDEBA                         _s13.dcbdeba\n#define DCBDEBAD                        _s13.dcbdebad(|0|)\n#define DCBDEN                          _s2.dcbden\n#define DCBDEVT                         _s10.dcbdevt(|0|)\n#define DCBDIRCQ                        _s17.dcbdircq\n#define DCBDIRCT                        _s17.dcbdirct(|0|)\n#define DCBDSORG                        _s10.dcbdsorg(|0|)\n#define DCBDSPLA                        _s8.dcbdspla\n#define DCBDSPLY                        _s8.dcbdsply(|0|)\n#define DCBDSRG1                        _s10.dcbdsrg1\n#define DCBDSRG2                        _s10.dcbdsrg2\n#define DCBDVTBA                        _s1.dcbdvtba\n#define DCBDVTBL                        _s1.dcbdvtbl(|0|)\n#define DCBECBLA                        _s9.dcbecbla\n#define DCBECBLT                        _s9.dcbecblt(|0|)\n#define DCBEIB                          _s8.dcbeib\n#define DCBEOB                          _s19.dcbeob\n#define DCBEOBAD                        _s19.dcbeobad\n#define DCBEOBR                         _s18.dcbeobr(|0|)\n#define DCBEOBRA                        _s18.dcbeobra\n#define DCBEOBW                         _s18.dcbeobw\n#define DCBEODA                         _s11.dcbeoda\n#define DCBEODAD                        _s11.dcbeodad(|0|)\n#define DCBEROPT                        _s19.dcberopt\n#define DCBERRCA                        _s7.dcberrca\n#define DCBERRCN                        _s7.dcberrcn(|0|)\n#define DCBEXLSA                        _s11.dcbexlsa\n#define DCBEXLST                        _s11.dcbexlst(|0|)\n#define DCBFDAD                         _s0.dcbfdad\n#define DCBFLAG1                        dcbflag1(|0|)\n#define DCBFRID                         _s8.dcbfrid(|0|)\n#define DCBFRTBA                        _s8.dcbfrtba(|0|)\n#define DCBFUNC                         _s5.dcbfunc\n#define DCBGERR                         dcbgerr(|0|)\n#define DCBGERRA                        dcbgerra(|0|)\n#define DCBGET                          _s15.dcbget(|0|)\n#define DCBGETA                         _s15.dcbgeta(|0|)\n#define DCBHDR                          _s9.dcbhdr(|0|)\n#define DCBHIARC                        _s11.dcbhiarc(|0|)\n#define DCBICQE                         _s10.dcbicqe(|0|)\n#define DCBICQEA                        _s10.dcbicqea(|0|)\n#define DCBIFLG                         _s12.dcbiflg\n#define DCBIFLGS                        _s13.dcbiflgs\n#define DCBIMAGA                        _s9.dcbimaga\n#define DCBIMAGE                        _s9.dcbimage(|0|)\n#define DCBIMG                          _s9.dcbimg(|0|)\n#define DCBIOBA                         dcbioba\n#define DCBIOBAA                        _s10.dcbiobaa(|0|)\n#define DCBIOBAD                        _s10.dcbiobad(|0|)\n#define DCBIOBL                         dcbiobl\n#define DCBKEYCN                        _s0.dcbkeycn\n#define DCBKEYLE                        _s10.dcbkeyle\n#define DCBLCCW                         _s19.dcblccw(|0|)\n#define DCBLCTBL                        _s3.dcblctbl\n#define DCBLFMAT                        _s8.dcblfmat\n#define DCBLNNUM                        _s8.dcblnnum\n#define DCBLNP                          _s10.dcblnp(|0|)\n#define DCBLRECL                        _s18.dcblrecl\n#define DCBMACF1                        _s13.dcbmacf1\n#define DCBMACF2                        _s13.dcbmacf2\n#define DCBMACR                         _s12.dcbmacr(|0|)\n#define DCBMACRF                        _s13.dcbmacrf(|0|)\n#define DCBMACR1                        _s12.dcbmacr1\n#define DCBMACR2                        _s12.dcbmacr2\n#define DCBMODE                         _s5.dcbmode(|0|)\n#define DCBMRFG                         _s9.dcbmrfg\n#define DCBMRFLG                        _s9.dcbmrflg\n#define DCBMRIND                        _s9.dcbmrind\n#define DCBNCP                          _s18.dcbncp\n#define DCBNOTE                         _s18.dcbnote(|0|)\n#define DCBODEB                         _s10.dcbodeb(|0|)\n#define DCBODEBA                        _s10.dcbodeba\n#define DCBOFFSR                        dcboffsr\n#define DCBOFFSW                        dcboffsw\n#define DCBOFLG                         _s14.dcboflg\n#define DCBOFLGS                        _s12.dcboflgs\n#define DCBOFLG1                        _s15.dcboflg1\n#define DCBOPTCD                        dcboptcd\n#define DCBORBYT                        _s8.dcborbyt\n#define DCBORFLG                        _s8.dcborflg\n#define DCBPERR                         dcbperr(|0|)\n#define DCBPERRA                        dcbperra(|0|)\n#define DCBPOINT                        _s18.dcbpoint\n#define DCBPRBYT                        _s4.dcbprbyt\n#define DCBPRECL                        _s19.dcbprecl\n#define DCBPRTOV                        _s4.dcbprtov\n#define DCBPRTSP                        _s4.dcbprtsp\n#define DCBPTFLG                        _s3.dcbptflg\n#define DCBPUT                          _s15.dcbput(|0|)\n#define DCBPUTA                         _s15.dcbputa\n#define DCBQSLM                         _s10.dcbqslm\n#define DCBQSMEX                        _s9.dcbqsmex\n#define DCBQSWS                         _s17.dcbqsws(|0|)\n#define DCBRDLNA                        _s8.dcbrdlna\n#define DCBRDLNE                        _s8.dcbrdlne(|0|)\n#define DCBREAD                         _s14.dcbread(|0|)\n#define DCBREADA                        _s14.dcbreada(|0|)\n#define DCBRECA                         _s19.dcbreca\n#define DCBRECAD                        _s19.dcbrecad(|0|)\n#define DCBRECBT                        _s19.dcbrecbt\n#define DCBRECFM                        _s11.dcbrecfm\n#define DCBREL                          _s10.dcbrel\n#define DCBRELAD                        _s0.dcbrelad\n#define DCBRELB                         _s10.dcbrelb(|0|)\n#define DCBRESCA                        _s8.dcbresca(|0|)\n#define DCBRESCN                        _s8.dcbrescn(|0|)\n#define DCBSSAD                         _s9.dcbssad(|0|)\n#define DCBSSADA                        _s9.dcbssada\n#define DCBSSID                         dcbssid\n#define DCBSTACK                        _s5.dcbstack\n#define DCBSVCXA                        _s11.dcbsvcxa\n#define DCBSVCXL                        _s11.dcbsvcxl(|0|)\n#define DCBSYNA                         dcbsyna\n#define DCBSYNAD                        dcbsynad(|0|)\n#define DCBTIOT                         _s13.dcbtiot\n#define DCBTRBAL                        _s1.dcbtrbal\n#define DCBTRTCH                        _s2.dcbtrtch\n#define DCBUSASI                        _s17.dcbusasi\n#define DCBWCPL                         dcbwcpl\n#define DCBWCPO                         dcbwcpo\n#define DCBWRITA                        _s14.dcbwrita\n#define DCBWRITE                        _s14.dcbwrite(|0|)\n#define DCBWTOIA                        _s6.dcbwtoia\n#define DCBWTOID                        _s6.dcbwtoid(|0|)\n#define DCBXLREC                        _s19.dcbxlrec(|0|)\n\n\n#define DCBUSER                         _extension._USER\n\n#define DCBLRC_X ((short) 0x8000) /* DCBLRECL value for LRECL=X      */\n\ntypedef unsigned DECB_t \u00dd5\u00a8 ;     /* DECB definition                 */\n\ntypedef struct {                  /* exit list entry definition      */\n   enum {INACTIVE, INHDR, OUTHDR, INTLR, OUTTLR, OPEN, EOV, JFCB,\n         USER_TOTAL=10, BLK_COUNT, DEFER_INTLR, DEFER_NONSTD_INTLR,\n         FCB=16, ABEND, JFCBE=21, TAPE_MOUNT=23, SECURITY=24,\n         LAST=128, SYNAD=256} exit_code;    /* exit type             */\n   union {\n      __remote int (*exit_addr)();          /* exit function address */\n      void *area_addr;            /* pseudo-exit (e.g., JFCB) address*/\n   };\n} exit_t;\n\ntypedef struct {                  /* record-oriented file position   */\n   unsigned _blkaddr;             /* block address (TTRz or blkno)   */\n   unsigned _recno;               /* record number within block      */\n} ospos_t;\n\n               /* argument values for osflush */\n\n#define QUIESCE 0                 /* quiesce I/O, no input flush     */\n#define SYNCH 1                   /* purge I/O and synchronize file  */\n#define PURGE 1\n#define CONCAT 2                  /* unlike concatenation in progress*/\n#define REPOS 3                   /* purge I/O for repositioning, do */\n                                  /* not issue TCLOSE                */\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\nextern DCB_t *osbdcb(exit_t \u00dd\u00a8 );\nextern int osbopen(DCB_t *, const char *);\nextern int osbopenj(DCB_t *,  const char *);\nextern void osbclose(DCB_t *, const char *, int);\nextern void ostclose(DCB_t *, const char *);\nextern int osfind(DCB_t *, const char *);\nextern int osfindc(DCB_t *, unsigned);\nextern int osbldl(DCB_t *, void *);\nextern int osstow(DCB_t *, const void *, char);\nextern void osread(DECB_t, DCB_t *, void *, int);\nextern void oswrite(DECB_t, DCB_t *, const void *, int);\nextern int oscheck(DECB_t);\nextern unsigned osnote(DCB_t *);\nextern void ospoint(DCB_t *, unsigned);\nextern DCB_t *osdcb(const char *, const char *, exit_t \u00dd\u00a8 ,char **);\nextern int osopen(DCB_t *, const char *, int);\nextern int osopenj(DCB_t *, const char *, int);\nextern int osclose(DCB_t *, const char *);\nextern int osget(DCB_t *, void **, int *);\nextern int osput(DCB_t *, const void *, int);\nextern int osflush(DCB_t *, int);\nextern int ostell(DCB_t *, ospos_t *);\nextern int osseek(DCB_t *, ospos_t);\n#ifdef __cplusplus\n\n}\n#endif\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OSMF": {"ttr": 8619, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct osmf \u00e4\n  unsigned char  osmfid\u00c44\u00dc;         /* EBCDIC ID - OSMF                */\n  char           osmfversion;       /* Version of System SMF           */\n  int            osmflength : 24;   /* Length used by System SMF       */\n  struct \u00e4\n    int            _osmfruid;      /* OpenMVS real user ID number           */\n    int            _osmfrgid;      /* OpenMVS real group ID number          */\n    int            _osmfprocessid; /* OpenMVS process ID number             */\n    int            _osmfprocgrpid; /* OpenMVS process group ID number       */\n    int            _osmfsessionid; /* OpenMVS session ID number             */\n    int            _osmfparentpid; /* OpenMVS parent process ID number @D2A */\n    unsigned char  _filler1\u00c44\u00dc;    /* Reserved                         @D2C */\n    \u00fc osmfuserid;\n  struct \u00e4\n    unsigned char  _osmfsystime\u00c48\u00dc;   /* Total CPU time spent in OpenMVS  */\n    int            _osmfsyscallcount; /* Total OpenMVS callable services. */\n    unsigned char  _filler2\u00c48\u00dc;       /* Reserved                         */\n    \u00fc osmfkernel;\n  struct \u00e4\n    int            _osmfdirr;    /* Directory read I/O blocks          */\n    int            _osmfstdr;    /* Standard file read I/O blocks      */\n    int            _osmfstdw;    /* Standard file write I/O blocks     */\n    int            _osmfchrsr;   /* Character special read I/O blocks  */\n    int            _osmfchrsw;   /* Character special write I/O blocks */\n    int            _osmfpiper;   /* Pipe read I/O blocks               */\n    int            _osmfpipew;   /* Pipe write I/O blocks              */\n    int            _osmflklfs;   /* Path name lookup calls to logical  */\n    int            _osmflkpfs;   /* Path name lookup calls to physical */\n    int            _osmfgnplfs;  /* Path name generation calls to      */\n    int            _osmfgnppfs;  /* Path name generation calls to      */\n    int            _osmfsckr;    /* Remote socket read I/O blocks      */\n    int            _osmfsckw;    /* Remote socket write I/O blocks     */\n    unsigned char  _filler3\u00c44\u00dc;  /* reserved              VERSION 1    */\n    \u00fc osmffilesys;\n  unsigned char  osmfexecpname\u00c416\u00dc; /* Exec'ed program name            */\n  unsigned char  _filler4\u00c44\u00dc;       /* reserved              VERSION 2 */\n  int            osmfmsqsend;       /* # Message send bytes            */\n  int            osmfmsqrcv;        /* # Message receive bytes         */\n  int            osmfsynccount;     /* # calls to sync()     VERSION 3 */\n  \u00fc;\n\n#define osmfruid         osmfuserid._osmfruid\n#define osmfrgid         osmfuserid._osmfrgid\n#define osmfprocessid    osmfuserid._osmfprocessid\n#define osmfprocgrpid    osmfuserid._osmfprocgrpid\n#define osmfsessionid    osmfuserid._osmfsessionid\n#define osmfparentpid    osmfuserid._osmfparentpid\n#define osmfsystime      osmfkernel._osmfsystime\n#define osmfsyscallcount osmfkernel._osmfsyscallcount\n#define osmfdirr         osmffilesys._osmfdirr\n#define osmfstdr         osmffilesys._osmfstdr\n#define osmfstdw         osmffilesys._osmfstdw\n#define osmfchrsr        osmffilesys._osmfchrsr\n#define osmfchrsw        osmffilesys._osmfchrsw\n#define osmfpiper        osmffilesys._osmfpiper\n#define osmfpipew        osmffilesys._osmfpipew\n#define osmflklfs        osmffilesys._osmflklfs\n#define osmflkpfs        osmffilesys._osmflkpfs\n#define osmfgnplfs       osmffilesys._osmfgnplfs\n#define osmfgnppfs       osmffilesys._osmfgnppfs\n#define osmfsckr         osmffilesys._osmfsckr\n#define osmfsckw         osmffilesys._osmfsckw\n\n/* Values for field \"osmfsynccount\" */\n#define osmf_id      0xD6E2D4C6\n#define osmf_version 3          /* Current Version of OSMF */\n#define osmf_length  0x90       /* Length of OSMF          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "OSMFIND": {"ttr": 8485, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _OSMFIND\n#define _OSMFIND\n#include \"os.hpp\"\n#include \"mchain.hpp\"\n#include \"filetype.hpp\"\n\n#include <string.h>\n#include <stdio.h>\n#define NEWRC 10000      /* this is the return-code after new */\n#define DDNAMES DDNAMIBM\n\n//szm20050825 ddname reallocation and free code moved here from XFILE\nint ddDynAlloc(char * dsn,char * member,char * ddn,char * togen);\n\n//ISIS_EXT_ASM int DDNAMES(char * , char * ,int ,char * = 0); szm\n  ISIS_EXT_C int osmfind(struct DSNINFO * dsninfo,\n                         const char * pattern);\n  ISIS_EXT_C  int osmnext(struct DSNINFO * dsninfo);\n  ISIS_EXT_C  void osmquit(struct DSNINFO * dsninfo);\n  FILE *   tmpFile(char * ); //szm20060908 tmpFile in mu\n\tint osmfindo(struct DSNINFO * dsninfo,\n               const char * pattern);\n  int osmnexto(struct DSNINFO * dsninfo);\n\n  //contains one partitioned dataset.\n  //the smc member contains a sorted chain of DataSMember types\n\n  FILE_TYPE getFileTypeLocal(const char * n);\n\n  class DataSMember;\n\n  class DataSName : public chainE\n  \u00e4\n  private:\n    FILE_TYPE    file_type;       // type flag\n    DSNINFO dsninfo;\n  public:\n    SORTEDmCHAIN* smc;\n\t\tDataSName()\u00e4smc =NULL;\u00fc\n    DataSName(char *, FILE_TYPE);\n    \u00dfDataSName();\n    int isQsam()\u00e4 return ( file_type |= FILE_VSAM ) ; \u00fc//szm20070329 everything not VSAM is QSAM\n    void FetchDSNINFO(DSNINFO* dsni)\n    \u00e4\n      char mask\u00c4sizeof(dsni->mmask)+1\u00dc;          //dsni->mmask save\n      strcpy(mask,dsni->mmask);   //save it\n\t\t\tvoid * sfilep = dsni->filepointer;  //szm\n      memcpy(dsni,&dsninfo,sizeof(DSNINFO));\n      dsni->filepointer = sfilep;          //szm\n\n      strcpy(dsni->mmask,mask);   //save it back\n    \u00fc\n    void UpdateDSNINFO(DSNINFO* dsni,int rc)\n    \u00e4\n      memcpy(&dsninfo,dsni,sizeof(DSNINFO));\n      //dsninfo._\u00c40\u00dc = this;\n      //dsninfo._\u00c41\u00dc = NULL;\n      //dsninfo._\u00c42\u00dc = (void*)rc;\n      dsninfo.ptdatasname = this; //ZA030926\n      dsninfo.ptdatasmember = NULL;\n      dsninfo.rc = (void*)rc;\n    \u00fc\n    int getRC()\n    \u00e4\n      //return (int)dsninfo._\u00c42\u00dc;\n      return (int)dsninfo.rc; //ZA030926\n    \u00fc\n  \u00fc;\n\n//contains a chain of partitioned datasets of Type DataSName\n//DSNINF is derived from DSNINFO\n//Changes to DSNINFO: the first 2 pointers  are used for osmnext\n//chopped off after mmask\n//ZA030926 taken out, DSNINFO used instead\n\n  class DataSNames:public SORTEDmCHAIN\n  \u00e4\n  private:\n   CHAINITER * iter;\n  public:\n   DataSNames();\n   \u00dfDataSNames();\n   DataSName * get(char *);\n  \u00fc;\n\n  //contains one member in a dataset\n  class DataSMember : public chainE\n  \u00e4\n  private:\n    DSNINFO dsninfo;\n  public:\n    DataSMember(DSNINFO* dsni,DataSName* dsnameg);\n    \u00dfDataSMember() \u00e4\u00fc\n    void FetchDSNINFO(DSNINFO* dsni)\n    \u00e4\n      char mask\u00c49\u00dc;          //dsni->mmask save\n      strcpy(mask,dsni->mmask);   //save it\n\t\t\tvoid * sfilep = dsni->filepointer;  //szm\n      memcpy(dsni,&dsninfo,sizeof(DSNINFO));\n      dsni->filepointer = sfilep;          //szm\n      strcpy(dsni->mmask,mask);   //save it back\n    \u00fc\n  \u00fc;\n\n#endif\n// end of osmfind\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PA1EPNM": {"ttr": 8355, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pa1epnm \u00e4\n  short int      pa1nlen; /* Length of program name */\n  unsigned char  pa1name; /* Program name           */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PA1H": {"ttr": 8081, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pa1 \u00e4\n  unsigned char  pa1_nmo; /* Offset to the entry name */\n  unsigned char  pa1_sig; /* CEL Signature (X'CE')    */\n  unsigned char  pa1_flg; /* Flag byte                */\n  unsigned char  pa1_mfl; /* Member defined flags     */\n  void          *pa1_pa2; /* A(PPA2)                  */\n  \u00fc;\n\n/* Values for field \"pa1_pa2\" */\n#define pa1eye 0xCE /* CEL Signature */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PA2H": {"ttr": 7951, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pa2 \u00e4\n  unsigned char  pa2_mid; /* Member ID                    */\n  unsigned char  pa2_sid; /* Must be X'00'                */\n  unsigned char  pa2_mfl; /* Member flags                 */\n  unsigned char  pa2_ctl; /* Level of PPAx control blocks */\n  void          *pa2_cst; /* A(CEESTART)                  */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PCCA": {"ttr": 8657, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pcca \u00e4\n  unsigned char  pccapcca\u00c44\u00dc;           /* -    CONTROL BLOCK ACRONYM IN EBCDIC                */\n  unsigned char  pccacpid\u00c412\u00dc;          /* -     CPU ID (CONTAINS SERIAL NUMBER)               */\n  short int      pccacpua;              /* -         PHYSICAL CPU ADDRESS                      */\n  short int      pccacafm;              /* -         BIT MASK CORRESPONDING TO PHYSICAL CPU    */\n  void          *pccatqep;              /* -         TQE POINTER                               */\n  void          *pccapsav;              /* -         VIRTUAL ADDRESS OF PSA                    */\n  void          *pccapsar;              /* -         ABSOLUTE ADDRESS OF PSA                   */\n  unsigned char  pccaisce;              /* -        INTERRUPT SUB-CLASSES TO ENABLE  @G860P22  */\n  struct \u00e4\n    unsigned char  _filler1;     /* @L2A */\n    unsigned char  _filler2\u00c42\u00dc;\n    \u00fc pccamchf;\n  struct \u00e4\n    unsigned char  _pccaiscm;      /* -        INTERRUPTION SUBCLASS MASK       @G860P22 */\n    int            _pccacr6l : 24; /* -       LOW-ORDER THREE BYTES OF CR 6    @G860P22  */\n    \u00fc pccacrg6;\n  int            pccaslih;              /* -         NUMBER OF ENTRIES TO THE I/O SLIH@G860PVB */\n  int            pccastpi;              /* -         NUMBER OF TPI WITH CC=1          @G860PVB */\n  int            pccaxslf;              /* -         EXCESSIVE SPIN LENGTH FACTOR.        @P1C */\n  int            pccarspr;              /* -         RELATIVE SPEED (X4096) OF THIS       @P1C */\n  struct \u00e4\n    short int      _pccatrda; /* -            TRAP DATA                            @03A */\n    unsigned char  _pccatrfl; /* -          TRAP FLAG                            @03A   */\n    unsigned char  _filler3;  /* -          RESERVED                             @03A   */\n    \u00fc pccatrw1;\n  void          *pccarv88;              /* -            RESERVED                               */\n  double         pcca_cpu_address_mask; /* Bit mask for CPU address             @L5C           */\n  void          *pccarv91;              /* -            RESERVED                               */\n  void          *pccarv92;              /* -            RESERVED                               */\n  void          *pccarv93;              /* -            RESERVED                               */\n  void          *pccarv94;              /* -            RESERVED                               */\n  void          *pccarv95;              /* -            RESERVED                               */\n  void          *pccarv96;              /* -            RESERVED                               */\n  void          *pccarv97;              /* -            RESERVED                               */\n  void          *pccarv98;              /* -            RESERVED                               */\n  void          *pccarv99;              /* -            RESERVED                               */\n  void          *pccarv9a;              /* -            RESERVED                               */\n  void          *pccarv9b;              /* -            RESERVED                               */\n  void          *pccarv9c;              /* -            RESERVED                               */\n  void          *pccarv9d;              /* -            RESERVED                               */\n  void          *pccarv9e;              /* -            RESERVED                               */\n  struct \u00e4\n    unsigned char  _pccatmfl; /* -      FIRST BYTE OF PCCATMST     */\n    unsigned char  _pccatode; /* -      TOD CLOCK ERROR FLAGS      */\n    unsigned char  _pccacce;  /* -      FLAGS FOR CLOCK COMPARATOR */\n    unsigned char  _pccainte; /* -      FLAGS FOR CPU TIMER        */\n    \u00fc pccatmst;\n  int            pccarpb;               /* -         EXTERNAL CALL SIGP BUFFER                 */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _pccarisp; /* -      CONTAINS PARALLEL/SERIAL REQUEST */\n      unsigned char  _pccaems2; /* -      SECOND BYTE OF PCCAEMSI          */\n      unsigned char  _pccaems3; /* -      THIRD BYTE OF PCCAEMSI           */\n      unsigned char  _pccarmsb; /* -      CONTAINS RMS INDICATOR           */\n      \u00fc pccaemsi;\n    void          *_pccaemsp; /* -         REMOTE IMMEDIATE SIGNAL PARAMETER ADDRESS */\n    void          *_pccaemse; /* -         REMOTE IMMEDIATE SIGNAL RECEIVING ROUTINE */\n    void          *_pccaemsa; /* -         PCCA ADDRESS OF THE RECEIVING ROUTINE     */\n    \u00fc pccaemsb;\n  void          *pccapwav;              /* -         VIRTUAL ADDRESS OF MCH PROCESSOR WORK     */\n  void          *pccapwar;              /* -         REAL ADDRESS OF MCH PROCESSOR WORK AREA   */\n  void          *pccalrbv;              /* -         VIRTUAL ADDRESS OF MCH LOGREC BUFFER      */\n  void          *pccalrbr;              /* -         REAL ADDRESS OF MCH LOGREC BUFFER         */\n  unsigned char  pccarios\u00c4208\u00dc;         /* -       RESERVED FOR IOS USE             @G860PVB   */\n  unsigned char  pccaattr;              /* -      PROCESSOR ATTRIBUTES             @G47AN9A    */\n  unsigned char  pccamfa;               /* -      MALFUNCTION ALERT FLAGS              @02A    */\n  unsigned char  pccaacrn;              /* -      CAUSE OF ACR                         @D2A    */\n  unsigned char  pccarcff;              /* Reconfig flags. Serialized by @L2A                  */\n  unsigned char  pcca_physical_cpuid;   /* Valid only when not LPAR or when     @H2A           */\n  unsigned char  _filler4;              /* RESERVED                             @H3C           */\n  union \u00e4\n    unsigned char  _pccaprocclass\u00c42\u00dc;         /* The class of processor for this CPU. */\n    unsigned char  _pcca_bylpar_procclass\u00c42\u00dc; /* The class of processor for this CPU. */\n    struct \u00e4\n      unsigned char  _pccaprocclass_byte0; /* @H3A */\n      unsigned char  _pccaprocclass_byte1; /* @H3A */\n      \u00fc _pcca_struct1;\n    struct \u00e4\n      unsigned char  _pcca_bylpar_procclass_byte0; /* @H4A */\n      unsigned char  _pcca_bylpar_procclass_byte1; /* @H4A */\n      \u00fc _pcca_struct2;\n    \u00fc _pcca_union1;\n  unsigned char  pccadiag\u00c42\u00dc;           /* @H4A                                                */\n  unsigned char  _filler5\u00c4198\u00dc;         /* -    RESERVED                             @H4C      */\n  \u00fc;\n\n#define pccaiscm                    pccacrg6._pccaiscm\n#define pccacr6l                    pccacrg6._pccacr6l\n#define pccatrda                    pccatrw1._pccatrda\n#define pccatrfl                    pccatrw1._pccatrfl\n#define pccatmfl                    pccatmst._pccatmfl\n#define pccatode                    pccatmst._pccatode\n#define pccacce                     pccatmst._pccacce\n#define pccainte                    pccatmst._pccainte\n#define pccarisp                    pccaemsb.pccaemsi._pccarisp\n#define pccaems2                    pccaemsb.pccaemsi._pccaems2\n#define pccaems3                    pccaemsb.pccaemsi._pccaems3\n#define pccarmsb                    pccaemsb.pccaemsi._pccarmsb\n#define pccaemsp                    pccaemsb._pccaemsp\n#define pccaemse                    pccaemsb._pccaemse\n#define pccaemsa                    pccaemsb._pccaemsa\n#define pccaprocclass               _pcca_union1._pccaprocclass\n#define pcca_bylpar_procclass       _pcca_union1._pcca_bylpar_procclass\n#define pccaprocclass_byte0         _pcca_union1._pcca_struct1._pccaprocclass_byte0\n#define pccaprocclass_byte1         _pcca_union1._pcca_struct1._pccaprocclass_byte1\n#define pcca_bylpar_procclass_byte0 _pcca_union1._pcca_struct2._pcca_bylpar_procclass_byte0\n#define pcca_bylpar_procclass_byte1 _pcca_union1._pcca_struct2._pcca_bylpar_procclass_byte1\n\n/* Values for field \"_filler1\" */\n#define pccasmch         0x80 /* -        A SOFTWARE-SIMULATED MACHINE CHECK        */\n\n/* Values for field \"pccatmfl\" */\n#define pccainit         0x80 /* -        ENTRY HAS BEEN INITIALIZED                */\n#define pccasync         0x40 /* -        CLOCK OUT OF SYNCHRONIZATION              */\n#define pccavkil         0x20 /* -        CONFIG CPU SHOULD BE CANCELLED            */\n#define pccamcc          0x10 /* -        PROCESSING FOR PERMANENTLY DAMAGED CLOCK  */\n#define pccamint         0x08 /* -        PROCESSING FOR CPU TIMER MUST BE DONE     */\n#define pccarv02         0x04 /* -  RESERVED                                        */\n#define pccarv03         0x02 /* -  RESERVED                                        */\n#define pccarv04         0x01 /* -  RESERVED                                        */\n\n/* Values for field \"pccatode\" */\n#define pccanutd         0x80 /* -        CLOCK CANNOT BE USED                      */\n#define pccanftd         0x40 /* -        CLOCK SHOULD NOT BE RESET                 */\n#define pccacttd         0x3F /* -        ERROR COUNT (6 BITS)                      */\n\n/* Values for field \"pccacce\" */\n#define pccanucc         0x80 /* -        CLOCK COMPARATOR CANNOT BE USED           */\n#define pccanfcc         0x40 /* -        CLOCK COMPARATOR SHOULD NOT BE RESET      */\n#define pccactcc         0x3F /* -        ERROR COUNT (6 BITS)                      */\n\n/* Values for field \"pccainte\" */\n#define pccanuin         0x80 /* -        CPU TIMER CANNOT BE USED                  */\n#define pccanfin         0x40 /* -        CPU TIMER SHOULD NOT BE RESET             */\n#define pccactin         0x3F /* -        ERROR COUNT (6 BITS)                      */\n\n/* Values for field \"pccarpb\" */\n#define pccaswth         0x80 /* SWITCH REQUEST                   @G860P22          */\n#define pccaioqc         0x40 /* IOQ compresseion request             @L5C          */\n#define pccarqck         0x20 /* RQCHECK REQUEST                  @G860P22          */\n#define pccagtfr         0x10 /* GTF REQUEST                      @G860P22          */\n#define pccaiose         0x08 /* I/O enable/disable request           @L5C          */\n#define pccamode         0x04 /* MODE REQUEST                     @G860P22          */\n#define pccastcp         0x02 /* STOPCP REQUEST                       @D3C          */\n#define pccamems         0x01 /* MEMSWT REQUEST                   @G860P22          */\n#define pccappsa         0x80 /* PrimePSA request                     @L6A          */\n\n/* Values for field \"pccarisp\" */\n#define pccaparl         0x80 /* -        PARALLEL REQUEST                          */\n#define pccaserl         0x40 /* -        SERIAL REQUEST                            */\n#define pccarv06         0x20 /* -  RESERVED                                        */\n#define pccarv07         0x10 /* -  RESERVED                                        */\n#define pccarv08         0x08 /* -  RESERVED                                        */\n#define pccarv09         0x04 /* -  RESERVED                                        */\n#define pccarv10         0x02 /* -  RESERVED                                        */\n#define pccarv11         0x01 /* -  RESERVED                                        */\n\n/* Values for field \"pccaems2\" */\n#define pccaserp         0x80 /* -        SERIAL PENDING INDICATOR         @G64UP9A */\n#define pccarv13         0x40 /* -  RESERVED                                        */\n#define pccarv14         0x20 /* -  RESERVED                                        */\n#define pccarv15         0x10 /* -  RESERVED                                        */\n#define pccarv16         0x08 /* -  RESERVED                                        */\n#define pccarv17         0x04 /* -  RESERVED                                        */\n#define pccarv18         0x02 /* -  RESERVED                                        */\n#define pccarv19         0x01 /* -  RESERVED                                        */\n\n/* Values for field \"pccaems3\" */\n#define pccaserf         0x80 /* -  SERIAL REQUEST FAILED            @G860P22       */\n#define pccarv21         0x40 /* -  RESERVED                                        */\n#define pccarv22         0x20 /* -  RESERVED                                        */\n#define pccarv23         0x10 /* -  RESERVED                                        */\n#define pccarv24         0x08 /* -  RESERVED                                        */\n#define pccarv25         0x04 /* -  RESERVED                                        */\n#define pccarv26         0x02 /* -  RESERVED                                        */\n#define pccarv27         0x01 /* -  RESERVED                                        */\n\n/* Values for field \"pccarmsb\" */\n#define pccarv28         0x80 /* -  RESERVED                                        */\n#define pccarv29         0x40 /* -  RESERVED                                        */\n#define pccarv30         0x20 /* -  RESERVED                                        */\n#define pccarv31         0x10 /* -  RESERVED                                        */\n#define pccarv32         0x08 /* -  RESERVED                                        */\n#define pccarv33         0x04 /* -  RESERVED                                        */\n#define pccarv34         0x02 /* -  RESERVED                                        */\n#define pccarms          0x01 /* -        SIGP WAS ISSUED VIA RMS                   */\n\n/* Values for field \"pccaattr\" */\n#define pccacpum         0x80 /* -        INDICATOR THAT DEAD CPU HAD A MALFUNCTION */\n#define pccaio           0x40 /* -        PROCESSOR HAS I/O CAPABILITY     @G47AN9A */\n#define pccanpfa         0x20 /* -        WHEN SET, PAGE FAULT ASSIST SHOULD NOT    */\n#define pccar101         0x10 /* -  RESERVED                         @G47AN9A       */\n#define pccar102         0x08 /* -  RESERVED                         @G47AN9A       */\n#define pccaziip         0x04 /* -  zIIP                                 @H3A       */\n#define pcca_bylpar_ziip 0x04 /* -  zIIP                                 @H4A       */\n#define pccasup          0x04 /* -  zIIP                                 @H3A       */\n#define pcca_bylpar_sup  0x04 /* -  zIIP                                 @H4A       */\n#define pccadscr         0x02 /* -        Discretionary Processor              @L7C */\n#define pccaifa          0x01 /* -        Special Processor                    @H2C */\n#define pcca_bylpar_zaap 0x01 /* -                                       @H4A       */\n#define pcca_bylpar_ifa  0x01 /* -                                        @H2C      */\n\n/* Values for field \"pccamfa\" */\n#define pccasmfa         0x80 /* -        SIMULATED MALFUNCTION ALERT          @02A */\n\n/* Values for field \"pccaacrn\" */\n#define pccakukn         0x00 /* UNKNOWN ERROR                        @D2A          */\n#define pccakmfa         0x01 /* MALFUNCTION ALERT, CPU CHECKSTOPPED  @D2A          */\n#define pccakipt         0x02 /* INSTRUCTION PROCESSING DAMAGE        @D2A          */\n#define pccaksdt         0x03 /* SYSTEM DAMAGE THRESHOLD              @D2A          */\n#define pccakivt         0x04 /* INVALID REGISTER OR PSW THRESHOLD    @D2A          */\n#define pccaktct         0x05 /* TIME OF DAY CLOCK DAMAGE THRESHOLD   @D2A          */\n#define pccakptt         0x06 /* PROCESSOR TIMER DAMAGE THRESHOLD     @D2A          */\n#define pccakcct         0x07 /* CLOCK COMPARATOR DAMAGE THRESHOLD    @D2A          */\n#define pccakpst         0x08 /* PRIMARY SYNC DAMAGE THRESHOLD        @D2A          */\n#define pccakadt         0x09 /* ETR ATTACHMENT DAMAGE THRESHOLD      @D2A          */\n#define pccakslt         0x0A /* SWITCH TO LOCAL THRESHOLD            @D2A          */\n#define pccakesl         0x0B /* EXCESSIVE SPIN LOOP                  @D2A          */\n#define pccaktcf         0x0C /* TOD CLOCK SYNCHRONIZATION FAILURE    @D2A          */\n#define pccakdat         0x0D /* MALFUNCTION OF DAT HARDWARE          @D2A          */\n#define pccakscf         0x0E /* TOD CLOCK COULD NOT BE SYNCHRONIZED  @D2A          */\n#define pccakume         0x0F /* UNRECOVERABLE MACHINE ERROR          @D2A          */\n\n/* Values for field \"pccarcff\" */\n#define pccacwlm         0x80 /* CPU on/offline initiated by WLM      @L2A          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PCCAVT": {"ttr": 8607, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pccavt \u00e4\n  void          *pccat00p;        /* -         ADDRESS OF PCCA FOR CPU 0               */\n  void          *pccat01p;        /* -         ADDRESS OF PCCA FOR CPU 1               */\n  void          *pccat02p;        /* -         ADDRESS OF PCCA FOR CPU 2               */\n  void          *pccat03p;        /* -         ADDRESS OF PCCA FOR CPU 3               */\n  void          *pccat04p;        /* -         ADDRESS OF PCCA FOR CPU 4               */\n  void          *pccat05p;        /* -         ADDRESS OF PCCA FOR CPU 5               */\n  void          *pccat06p;        /* -         ADDRESS OF PCCA FOR CPU 6               */\n  void          *pccat07p;        /* -         ADDRESS OF PCCA FOR CPU 7               */\n  void          *pccat08p;        /* -         ADDRESS OF PCCA FOR CPU 8               */\n  void          *pccat09p;        /* -         ADDRESS OF PCCA FOR CPU 9               */\n  void          *pccat10p;        /* -         ADDRESS OF PCCA FOR CPU 10              */\n  void          *pccat11p;        /* -         ADDRESS OF PCCA FOR CPU 11              */\n  void          *pccat12p;        /* -         ADDRESS OF PCCA FOR CPU 12              */\n  void          *pccat13p;        /* -         ADDRESS OF PCCA FOR CPU 13              */\n  void          *pccat14p;        /* -         ADDRESS OF PCCA FOR CPU 14              */\n  void          *pccat15p;        /* -         ADDRESS OF PCCA FOR CPU 15              */\n  void          *pccat16_31p\u00c416\u00dc; /* -       ADDRESS OF PCCAs for CPUs 16-31      @L3A */\n  void          *pccat32_63p\u00c432\u00dc; /* -       ADDRESS OF PCCAs for CPUs 32-63      @L3A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PCOMS83": {"ttr": 8049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct record \u00e4\n  void          *record_msg_type;      /* message type      */\n  unsigned char  record_type;          /* recordy type      */\n  unsigned char  record_source;        /* record source     */\n  unsigned char  record_flag1;         /* firts flag        */\n  unsigned char  record_flag2;         /* send flag         */\n  unsigned char  record_stck\u00c48\u00dc;       /* clock value       */\n  unsigned char  record_id_jobname\u00c48\u00dc; /* job name          */\n  unsigned char  record_id_jobrdr\u00c48\u00dc;  /* reader time stamp */\n  unsigned char  record_id_system\u00c44\u00dc;  /* system name       */\n  unsigned char  record_id_userid\u00c48\u00dc;  /* system name       */\n  unsigned char  record_dsn\u00c444\u00dc;\n  unsigned char  record_member\u00c48\u00dc;\n  unsigned char  record_newdsn\u00c444\u00dc;\n  unsigned char  record_path\u00c464\u00dc;      /* path              */\n  unsigned char  record_newpath\u00c464\u00dc;   /* path              */\n  \u00fc;\n\n/* Values for field \"record_type\" */\n#define record_type_update        1\n#define record_type_delete        2\n#define record_type_rename        3\n#define record_type_add_member    11\n#define record_type_delete_member 12\n#define record_type_rename_member 13\n#define record_type_update_path   21\n#define record_type_delete_path   22\n#define record_type_rename_path   23\n\n/* Values for field \"record_source\" */\n#define record_source_smf15       15\n#define record_source_smf17       17\n#define record_source_smf18       18\n#define record_source_smf42       42\n#define record_source_smf92       92\n\n/* Values for field \"record_newpath\" */\n#define record_length             0x108\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PFSWREC": {"ttr": 8447, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pfswrec \u00e4\n  void          *pfswrec_msg_type;    /* message type  */\n  unsigned char  pfswrec_type;        /* recordy type  */\n  unsigned char  pfswrec_source;      /* record source */\n  unsigned char  pfswrec_flag1;       /* firts flag    */\n  unsigned char  pfswrec_flag2;       /* send flag     */\n  unsigned char  pfswrec_stck\u00c48\u00dc;     /* clock value   */\n  struct \u00e4\n    unsigned char  _pfswrec_id_jobname\u00c48\u00dc; /* job name          */\n    unsigned char  _pfswrec_id_jobrdr\u00c48\u00dc;  /* reader time stamp */\n    unsigned char  _pfswrec_id_system\u00c44\u00dc;  /* system name       */\n    unsigned char  _pfswrec_id_userid\u00c48\u00dc;  /* system name       */\n    \u00fc pfswrec_id;\n  unsigned char  pfswrec_dsn\u00c444\u00dc;\n  unsigned char  pfswrec_member\u00c48\u00dc;\n  unsigned char  pfswrec_newdsn\u00c444\u00dc;\n  unsigned char  pfswrec_path\u00c464\u00dc;    /* path          */\n  unsigned char  pfswrec_newpath\u00c464\u00dc; /* path          */\n  \u00fc;\n\n#define pfswrec_id_jobname pfswrec_id._pfswrec_id_jobname\n#define pfswrec_id_jobrdr  pfswrec_id._pfswrec_id_jobrdr\n#define pfswrec_id_system  pfswrec_id._pfswrec_id_system\n#define pfswrec_id_userid  pfswrec_id._pfswrec_id_userid\n\n/* Values for field \"pfswrec_type\" */\n#define pfswrec_type_update        1\n#define pfswrec_type_delete        2\n#define pfswrec_type_rename        3\n#define pfswrec_type_add_member    11\n#define pfswrec_type_delete_member 12\n#define pfswrec_type_rename_member 13\n#define pfswrec_type_update_path   21\n#define pfswrec_type_delete_path   22\n#define pfswrec_type_rename_path   23\n\n/* Values for field \"pfswrec_source\" */\n#define pfswrec_source_smf15       15\n#define pfswrec_source_smf17       17\n#define pfswrec_source_smf18       18\n#define pfswrec_source_smf42       42\n#define pfswrec_source_smf92       92\n\n/* Values for field \"pfswrec_newpath\" */\n#define pfswrec_length             0x108\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGPS": {"ttr": 8005, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgps \u00e4\n  unsigned char  pgpsstatus0;         /* MVS status                       */\n  unsigned char  pgpsstatus1;         /* Process status                   */\n  unsigned char  pgpsstatus2;         /* System Call Status               */\n  unsigned char  pgpsstatus3;         /* State of reported task - with    */\n  int            pgpspid;             /* Process ID                       */\n  int            pgpsppid;            /* Parent ID                        */\n  int            pgpssid;             /* Session ID (leader)              */\n  int            pgpspgpid;           /* Process Group                    */\n  int            pgpsfgpid;           /* Foreground Process Group         */\n  int            pgpseuid;            /* Effective User ID                */\n  int            pgpsruid;            /* Real User ID                     */\n  int            pgpssuid;            /* Saved Set User ID                */\n  int            pgpsegid;            /* Effective Group ID               */\n  int            pgpsrgid;            /* Real Group ID                    */\n  int            pgpssgid;            /* Saved Set Group ID               */\n  int            pgpstsize;           /* Total size                       */\n  int            pgpsstarttime;       /* Starting time, GMT since EPOCH   */\n  int            pgpsusertime;        /* User CPU time (clock_t)          */\n  int            pgpssystime;         /* System CPU time (clock_t)        */\n  void          *pgpsconttyblen;      /* L'PGPSCONTTYBUF                  */\n  void          *pgpsconttyptr;       /* ->PGPSCONTTYBUF                  */\n  void          *pgpspathblen;        /* L'PGPSPATHBUF                    */\n  void          *pgpspathptr;         /* ->PGPSPATHBUF                    */\n  void          *pgpscmdblen;         /* L'PGPSCMDBUF                     */\n  void          *pgpscmdptr;          /* ->PGPSCMDBUF                     */\n  int            pgpsservertype;      /* Server type (FILE=1, LOCK=2)     */\n  unsigned char  pgpsservername\u00c432\u00dc;  /* Name supplied on registration    */\n  int            pgpsmaxvnodetokens;  /* Max number of VNode Toks allowed */\n  int            pgpsvnodetokencount; /* Current number of VNode Tokens   */\n  int            pgpsserflags;        /* Server flags                     */\n  int            pgpssyscallcount;    /* Count of syscalls this process   */\n  unsigned char  pgpsjobname\u00c48\u00dc;      /* AscbJBNI/JBNS  JobName           */\n  int            pgpswaittime;        /* Since Kern Wait Started          */\n  short int      pgpsasid;            /* Address space ID                 */\n  struct \u00e4\n    int            _pgpsconttylen;    /* Length ConTty returned      */\n    unsigned char  _pgpscontty\u00c41024\u00dc; /* ConTty (len+1-th char=null) */\n    \u00fc pgpsconttybuf;\n  struct \u00e4\n    int            _pgpspathlen;    /* Length Pathname returned      */\n    unsigned char  _pgpspath\u00c41024\u00dc; /* Pathname (len+1-th char=null) */\n    \u00fc pgpspathbuf;\n  struct \u00e4\n    int            _pgpscmdlen;    /* Length Command returned         */\n    unsigned char  _pgpscmd\u00c41024\u00dc; /* Command (array of len, element) */\n    \u00fc pgpscmdbuf;\n  \u00fc;\n\n#define pgpsconttylen pgpsconttybuf._pgpsconttylen\n#define pgpscontty    pgpsconttybuf._pgpscontty\n#define pgpspathlen   pgpspathbuf._pgpspathlen\n#define pgpspath      pgpspathbuf._pgpspath\n#define pgpscmdlen    pgpscmdbuf._pgpscmdlen\n#define pgpscmd       pgpscmdbuf._pgpscmd\n\n/* Values for field \"pgpsstatus0\" */\n#define pgpsswap       0x80  /* Swapped out                   */\n\n/* Values for field \"pgpsstatus1\" */\n#define pgpsstopped    0x80  /* Stopped process               */\n#define pgpstrace      0x40  /* PTrace active                 */\n#define pgpsmulthread  0x20  /* 0=One open task in process    */\n#define pgpspthread    0x10  /* 0=No pthread task in process  */\n#define pgpsmulprocess 0x08  /* 0=One process in addr space   */\n\n/* Values for field \"pgpsstatus2\" */\n#define pgpslenerr     0x80  /* PGPSLENGTH conflict           */\n\n/* Values for field \"pgpsstatus3\" */\n#define pgpsmsgrcv     'A'   /* IPC MSGRCV WAIT               */\n#define pgpsmsgsnd     'B'   /* IPC MSGSND WAIT               */\n#define pgpswaitc      'C'   /* COMM KERNELWAIT               */\n#define pgpssemop      'D'   /* IPC SEMOP WAIT                */\n#define pgpsfreeze     'E'   /* QUIESCEFREEZE                 */\n#define pgpswaitf      'F'   /* F S  KERNEL WAIT              */\n#define pgpsmvspause   'G'   /* MVSPAUSE                      */\n#define pgpszombie2    'L'   /* PROCESS TERMINATED AND STILL  */\n#define pgpswaito      'K'   /* OTHER KERNEL WAIT             */\n#define pgpsquiescet   'Q'   /* QUIESCE TEMRINATION WAIT      */\n#define pgpsrun        'R'   /* NOT KERNEL WAIT               */\n#define pgpssleep      'S'   /* SLEEP() ISSUED                */\n#define pgpschild      'W'   /* WAITING FOR CHILD             */\n#define pgpsfork       'X'   /* FORK NEW PROCESS              */\n#define pgpszombie     'Z'   /* PROCESS TERMINATED AND PARENT */\n\n/* Values for field \"pgpsasid\" */\n#define pgps_length    0x9A  /* Length of this structure      */\n\n/* Values for field \"pgpscmd\" */\n#define pgps_storage   0xCA6 /* Length, total area used       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHA": {"ttr": 8407, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgtha \u00e4\n  struct \u00e4\n    int            _pgthapid;        /* PROCESS ID (IGNORED IF FIRST)     */\n    unsigned char  _pgthathid\u00c48\u00dc;    /* THREAD ID (IGNORED IF FIRST/LAST) */\n    char           _pgthaaccesspid;  /* FIRST, CURRENT, NEXT              */\n    char           _pgthaaccessthid; /* FIRST, CURRENT, NEXT, LAST        */\n    \u00fc pgthacontinue;\n  short int      pgthaasid;         /* FILTER - ASID                */\n  unsigned char  pgthaloginname\u00c48\u00dc; /* FILTER - USERID ALIAS OR MVS */\n  char           pgthaflag1;        /* WHAT OUTPUT AREAS TO INCLUDE */\n  char           _filler1;\n  \u00fc;\n\n#define pgthapid        pgthacontinue._pgthapid\n#define pgthathid       pgthacontinue._pgthathid\n#define pgthaaccesspid  pgthacontinue._pgthaaccesspid\n#define pgthaaccessthid pgthacontinue._pgthaaccessthid\n\n/* Values for field \"pgthaaccesspid\" */\n#define pgth_next     0x02 /* NEXT AFTER SPECIFIED          */\n#define pgth_current  0x01 /* AS SPECIFIED                  */\n#define pgth_first    0x00 /* FIRST (EQUIV NEXT WITH PID=0) */\n#define pgth_last     0x03 /* only with PGTHIACCESSTHID     */\n\n/* Values for field \"pgthaflag1\" */\n#define pgthaprocess  0x80 /* PGTHC, PROCESS DATA           */\n#define pgthacontty   0x40 /* PGTHD, CONTTY                 */\n#define pgthapath     0x20 /* PGTHE, PATH                   */\n#define pgthacommand  0x10 /* PGTHF, CMD & ARGS             */\n#define pgthafiledata 0x08 /* PGTHG, FILE DATA              */\n#define pgthathread   0x04 /* PGTHJ, THREAD DATA            */\n#define pgthaptag     0x02 /* PGTHK, PTAG (NEEDS PGTHJ)     */\n\n/* Values for field \"_filler1\" */\n#define pgtha_len     0x1A\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHB": {"ttr": 8379, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthb \u00e4\n  unsigned char  pgthbid\u00c44\u00dc;     /* \"gthb\"                       */\n  struct \u00e4\n    int            _pgthbpid;        /* PROCESS ID              */\n    unsigned char  _pgthbthid\u00c48\u00dc;    /* THREAD ID               */\n    char           _pgthbaccesspid;  /* CURRENT/FIRST/NEXT      */\n    char           _pgthbaccessthid; /* CURRENT/FIRST/NEXT/LAST */\n    \u00fc pgthbcontinue;\n  short int      _filler1;\n  int            pgthblenused;   /* LENGTH OF OUTPUT BUFFER USED */\n  unsigned char  pgthblimitc;    /* N, A                         */\n  int            pgthboffc : 24; /* OFFSET OF PROCESS AREA       */\n  unsigned char  pgthblimitd;    /* N, A, X                      */\n  int            pgthboffd : 24; /* OFFSET OF CONTTY  AREA       */\n  unsigned char  pgthblimite;    /* N, A, X                      */\n  int            pgthboffe : 24; /* OFFSET OF PATH    AREA       */\n  unsigned char  pgthblimitf;    /* N, A, X                      */\n  int            pgthbofff : 24; /* OFFSET OF COMMAND AREA       */\n  unsigned char  pgthblimitg;    /* N, A, X                      */\n  int            pgthboffg : 24; /* OFFSET OF FILE DATA AREA     */\n  unsigned char  pgthblimitj;    /* N, A, V, X                   */\n  int            pgthboffj : 24; /* OFFSET OF THREAD AREA        */\n  \u00fc;\n\n#define pgthbpid        pgthbcontinue._pgthbpid\n#define pgthbthid       pgthbcontinue._pgthbthid\n#define pgthbaccesspid  pgthbcontinue._pgthbaccesspid\n#define pgthbaccessthid pgthbcontinue._pgthbaccessthid\n\n/* Values for field \"pgthboffj\" */\n#define pgthb_len         0x30\n#define pgth_notrequested 0xD5 /* Associated PghtA.. bit off */\n#define pgth_ok           0xC1 /* All data included          */\n#define pgth_storage      0xE2 /* output buffer exhausted    */\n#define pgth_vague        0xE5 /* Changed out from under us  */\n#define pgth_notconnected 0xE7 /* Need data not connected    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHC": {"ttr": 8011, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthc \u00e4\n  unsigned char  pgthcid\u00c44\u00dc;        /* \"gthc\"                      */\n  char           pgthcflag1;\n  char           pgthcflag2;\n  char           pgthcflag3;\n  char           _filler1;\n  int            pgthcpid;          /* PROCESS ID                  */\n  int            pgthcppid;         /* PARENT ID                   */\n  int            pgthcpgpid;        /* PROCESS GROUP               */\n  int            pgthcsid;          /* SESSION ID                  */\n  int            pgthcfgpid;        /* FOREGROUND PROCESS GROUP    */\n  int            pgthceuid;         /* EFFECTIVE USER ID           */\n  int            pgthcruid;         /* REAL USER ID                */\n  int            pgthcsuid;         /* SAVED SET USER ID           */\n  int            pgthcegid;         /* EFFECTIVE GROUP ID          */\n  int            pgthcrgid;         /* REAL GROUP ID               */\n  int            pgthcsgid;         /* SAVED SET GROUP ID          */\n  int            pgthctsize;        /* TOTAL SIZE                  */\n  int            pgthcsyscallcount; /* COUNT OF SLOW-PATH SYSCALLS */\n  int            pgthcusertime;     /* TIME SPENT IN USER CODE     */\n  int            pgthcsystime;      /* TIME SPENT IN SYSTEM CODE   */\n  int            pgthcstarttime;    /* TIME PROCESS WAS DUBBED     */\n  short int      pgthccntoe;        /* NO. OE THREADS              */\n  short int      pgthccntptcreated; /* NO. PTHREAD CREATED THREADS */\n  short int      pgthccntthreads;   /* COUNT OF ALL THREADS        */\n  short int      pgthcasid;         /* ADDRESS SPACE ID            */\n  unsigned char  pgthcjobname\u00c48\u00dc;   /* MVS JOB NAME                */\n  unsigned char  pgthcloginname\u00c48\u00dc; /* LOGIN NAME - ALIAS OR MVS   */\n  union \u00e4\n    int            _pgthcmemlimit; /* maximum Memlimit in bytes */\n    struct \u00e4\n      int            _pgthcmemlimitval : 24; /* Hex value                     */\n      unsigned char  _pgthcmemlmult;         /* multiplier when PGTHCMEMLTYPE */\n      \u00fc _pgthc_struct1;\n    \u00fc _pgthc_union1;\n  union \u00e4\n    int            _pgthcmemusage; /* bytes in use */\n    struct \u00e4\n      int            _pgthcmemusageval : 24; /* Hex value                     */\n      unsigned char  _pgthcmemumult;         /* multiplier when PGTHCMEMUTYPE */\n      \u00fc _pgthc_struct2;\n    \u00fc _pgthc_union2;\n  unsigned char  pgthcx;\n  \u00fc;\n\n#define pgthcmemlimit    _pgthc_union1._pgthcmemlimit\n#define pgthcmemlimitval _pgthc_union1._pgthc_struct1._pgthcmemlimitval\n#define pgthcmemlmult    _pgthc_union1._pgthc_struct1._pgthcmemlmult\n#define pgthcmemusage    _pgthc_union2._pgthcmemusage\n#define pgthcmemusageval _pgthc_union2._pgthc_struct2._pgthcmemusageval\n#define pgthcmemumult    _pgthc_union2._pgthc_struct2._pgthcmemumult\n\n/* Values for field \"pgthcflag1\" */\n#define pgthcmulprocess 0x80 /* MULTIPLE PROCESSES         */\n#define pgthcswap       0x40 /* TCBOUT                     */\n#define pgthctrace      0x20 /* THREAD IS BEING TRACED     */\n#define pgthcstopped    0x10 /* STOPPED                    */\n#define pgthcincomplete 0x08 /* NOT ALL BLOCKS PRESENT     */\n#define pgthczombie     0x04 /* PROCESS IS A ZOMBIE        */\n#define pgthcblocking   0x02 /* Shutdown blocking          */\n#define pgthcperm       0x01 /* SHutdown permanent         */\n\n/* Values for field \"pgthcflag2\" */\n#define pgthcmemltype   0x80 /* ON - MemLimit is a BinMult */\n#define pgthcrespawn    0x40 /* respawnable process        */\n\n/* Values for field \"pgthcflag3\" */\n#define pgthcmemutype   0x80 /* ON - MemUsage is a BinMult */\n\n/* Values for field \"pgthcx\" */\n#define pgth_kilo       0xD2 /* Kilobytes                  */\n#define pgth_mega       0xD4 /* Megabytes                  */\n#define pgth_giga       0xC7 /* Gigabytes                  */\n#define pgth_tera       0xE3 /* Terabytes                  */\n#define pgth_peta       0xD7 /* Petabytes                  */\n#define pgthc_len       0x68\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHD": {"ttr": 8201, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthd \u00e4\n  unsigned char  pgthdid\u00c44\u00dc;        /* \"gthd\"            */\n  short int      pgthdlen;          /* Length of ConTty  */\n  unsigned char  pgthdcontty\u00c41024\u00dc; /* 1024 = max ConTty */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHE": {"ttr": 8247, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthe \u00e4\n  unsigned char  pgtheid\u00c44\u00dc;      /* \"gthe\"          */\n  short int      pgthelen;        /* Length of Path  */\n  unsigned char  pgthepath\u00c41024\u00dc; /* 1024 = max path */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHF": {"ttr": 8631, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthf \u00e4\n  unsigned char  pgthfid\u00c44\u00dc;         /* \"gthf\"                          */\n  short int      pgthflen;           /* Length of command and arguments */\n  unsigned char  pgthfcommand\u00c41024\u00dc; /* 1024 = max command              */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHG": {"ttr": 8313, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthg \u00e4\n  unsigned char  pgthgid\u00c44\u00dc;           /* \"gthg\"                      */\n  unsigned char  pgthglimith;          /* N, A, S, X                  */\n  int            pgthgoffh : 24;       /* Offset of PgthH             */\n  int            pgthgcount;           /* Count of PgthH elements     */\n  int            pgthgmaxvnodetokens;  /* MAX NUMBER VNODE TOKENS     */\n  int            pgthgvnodetokencount; /* CURRENT NUMBER VNODE TOKENS */\n  int            pgthgserverflags;     /* SABFLAGS                    */\n  unsigned char  pgthgservername\u00c432\u00dc;  /* SABSERVERNAME SERVER=       */\n  int            pgthgactivefiles;     /* SABVDECOUNT   AF=           */\n  int            pgthgmaxfiles;        /* SABMAXVDES    MF=           */\n  int            pgthgservertype;      /* SABSERVERTYPE TYPE=         */\n  unsigned char  pgthgarray;           /* first PGTHH                 */\n  \u00fc;\n\n/* Values for field \"pgthgservertype\" */\n#define pgthg_len 0x44\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHH": {"ttr": 8429, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthh \u00e4\n  unsigned char  pgthhid\u00c42\u00dc;\n  unsigned char  pgthhtype;  /* Mapped in BPXYFTYP see FT_DIR + */\n  unsigned char  pgthhopen;  /* Mapped in BPXYOPNF see O_FLAGS4 */\n  int            pgthhinode; /* I-NODE        see stat()        */\n  int            pgthhdevno; /* DEVICE NUMBER see stat()        */\n  \u00fc;\n\n/* Values for field \"pgthhid\" */\n#define pgthh_idr 0x9984 /* root directory    (first)  */\n#define pgthh_idc 0x8384 /* current directory (second) */\n#define pgthh_idf 0x8684 /* file directory             */\n#define pgthh_idv 0xA584 /* vnode directory            */\n\n/* Values for field \"pgthhdevno\" */\n#define pgthh_len 0x0C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHJ": {"ttr": 8445, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthj \u00e4\n  unsigned char  pgthjid\u00c44\u00dc;        /* \"gthj\"                        */\n  unsigned char  pgthjlimitj;       /* A, S, X                       */\n  int            pgthjoffj : 24;    /* Offset of next PgthJ          */\n  unsigned char  pgthjlimitk;       /* N, A, S, X                    */\n  int            pgthjoffk : 24;    /* Offset of PgthK, this thread  */\n  unsigned char  pgthjthid\u00c48\u00dc;      /* THREAD ID                     */\n  unsigned char  pgthjsyscall\u00c44\u00dc;   /* SYSCALL (eg. \"1FRK\" for fork) */\n  void          *pgthjtcb;          /* TCB ADDRESS                   */\n  int            pgthjttime;        /* TIME RUNNING .001 SECS        */\n  int            pgthjwtime;        /* OE WAITING TIME .001 SECS     */\n  int            _filler1;          /* space                         */\n  short int      pgthjsemnum;       /* SEMAPHORE NUMBER IF STATUS2=D */\n  short int      pgthjsemval;       /* SEMAPHORE VALUE  IF STATUS2=D */\n  int            pgthjlatchwaitpid; /* LATCH PROCESS ID WAITED FOR   */\n  unsigned char  pgthjpenmask\u00c48\u00dc;   /* SIGNAL PENDING MASK           */\n  unsigned char  pgthjloginname\u00c48\u00dc; /* LOGIN NAME - ALIAS or MVS     */\n  unsigned char  pgthjprevsc\u00c45\u00dc\u00c44\u00dc; /* LAST FIVE SYSCALLS            */\n  struct \u00e4\n    unsigned char  _pgthjstatus1; /* STATUS 1 */\n    unsigned char  _pgthjstatus2; /* STATUS 2 */\n    unsigned char  _pgthjstatus3; /* STATUS 3 */\n    unsigned char  _pgthjstatus4; /* STATUS 4 */\n    unsigned char  _pgthjstatus5; /* STATUS 5 */\n    \u00fc pgthjstatuschars;\n  unsigned char  _filler2\u00c43\u00dc;\n  \u00fc;\n\n#define pgthjstatus1 pgthjstatuschars._pgthjstatus1\n#define pgthjstatus2 pgthjstatuschars._pgthjstatus2\n#define pgthjstatus3 pgthjstatuschars._pgthjstatus3\n#define pgthjstatus4 pgthjstatuschars._pgthjstatus4\n#define pgthjstatus5 pgthjstatuschars._pgthjstatus5\n\n/* Values for field \"pgthjstatus1\" */\n#define pgthj_pthdcreated 0xD1 /* pthread created               */\n\n/* Values for field \"pgthjstatus2\" */\n#define pgthj_msgrcv      0xC1 /* msgrcv wait                   */\n#define pgthj_msgsnd      0xC2 /* msgsnd wait                   */\n#define pgthj_waitc       0xC3 /* communication wait            */\n#define pgthj_semop       0xC4 /* see PgthJSemVal/SemNum        */\n#define pgthj_waitf       0xC6 /* file system wait              */\n#define pgthj_mvspause    0xC7 /* MVS in pause                  */\n#define pgthj_waito       0xD2 /* other kernel wait             */\n#define pgthj_waitp       0xD7 /* PTwaiting                     */\n#define pgthj_run         0xD9 /* running / non-kernel wait     */\n#define pgthj_sleep       0xE2 /* sleep                         */\n#define pgthj_child       0xE6 /* waiting for child             */\n#define pgthj_fork        0xE7 /* fork new process              */\n#define pgthj_mvswait     0xE8 /* MVS wait                      */\n\n/* Values for field \"pgthjstatus3\" */\n#define pgthj_mediumwght  0xD5 /* medium weight thread          */\n#define pgthj_async       0xD6 /* asynchronous thread           */\n#define pgthj_ipt         0xE4 /* Initial process thread        */\n#define pgthj_zombie      0xE9 /* Process terminated and parent */\n\n/* Values for field \"pgthjstatus4\" */\n#define pgthj_detached    0xE5 /* thread is detached            */\n\n/* Values for field \"pgthjstatus5\" */\n#define pgthj_freeze      0xC5 /* quiesce freeze                */\n\n/* Values for field \"_filler2\" */\n#define pgthj_len         0x5C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PGTHK": {"ttr": 8673, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct pgthk \u00e4\n  int            pgthkdatalen;  /* LENGTH TO TRAILING NULL */\n  unsigned char  pgthkdata\u00c468\u00dc; /* SEE pthread_tag_np      */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PPDECVT": {"ttr": 8565, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qfsscvt \u00e4\n  unsigned char  qfssname\u00c48\u00dc;                      /* system nane                                */\n  unsigned char  qfssid\u00c48\u00dc;                        /* id seq                                     */\n  unsigned char  qcvtrel\u00c48\u00dc;                       /* RELEASE                                    */\n  unsigned char  _filler1\u00c48\u00dc;\n  void          *qnsccvt;                          /* own address                                */\n  void          *qcvtlist;                         /* CVT list start addr                        */\n  void          *qcvtioq;                          /* common IOQE list                           */\n  unsigned char  qcvt_jobname\u00c48\u00dc;                  /* job name                                   */\n  unsigned char  qcvt_jobid\u00c48\u00dc;                    /* job id.                                    */\n  unsigned char  qcvt_status_program\u00c424\u00dc;          /* program status                             */\n  unsigned char  qcvt_resource_priv;               /* priv/nonpriv                               */\n  unsigned char  qcvt_resource_connfss;            /* connected                                  */\n  unsigned char  qcvt_resource_ecbpost;            /* ECB posted                                 */\n  unsigned char  qcvt_resource_order;              /* order                                      */\n  unsigned char  qcvt_resource_disconnect;         /* disconnect                                 */\n  unsigned char  qcvt_resource_stopfss;            /* stopfss                                    */\n  unsigned char  qcvt_resource_wait;               /* in wait status                             */\n  unsigned char  qcvt_resource_qnet;               /* qnet is running                            */\n  unsigned char  qcvt_resource_stat;               /* stat is running                            */\n  unsigned char  qcvt_resource_fss;                /* FSS support YES = ff NO = 0                */\n  unsigned char  qcvt_resource_ssi;                /* SSI support  YES = ff NO = 0               */\n  unsigned char  _filler2;\n  unsigned char  qnvtloadl_qfssqnt\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssqntaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssqntlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssqntflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssmsgp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssmsgpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssmsgplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssmsgpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsscmdp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsscmdpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsscmdplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsscmdpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsscomp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsscompaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsscomplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsscompflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssinbd\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssinbdaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssinbdlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssinbdflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssioq\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssioqaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssioqlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssioqflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssoqe\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssoqeaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssoqelgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssoqeflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssoutb\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssoutbaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssoutblgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssoutbflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssow\u00c48\u00dc;              /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssowaddr;             /* + LINKAGE                                  */\n  int            qnvtloadl_qfssowlgth;             /* + module length                            */\n  unsigned char  qnvtloadl_qfssowflag\u00c44\u00dc;          /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssdsp\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssdspaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssdsplgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssdspflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssproc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprocaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssproclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprocflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssprof\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprofaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssproflgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprofflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssbsam\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssbsamaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssbsamlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssbsamflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssqsam\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssqsamaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssqsamlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssqsamflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssvsam\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssvsamaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssvsamlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssvsamflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssque\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssqueaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssquelgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssqueflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssquew\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssquewaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssquewlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssquewflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssscnp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssscnpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssscnplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssscnpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssdlr\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssdlraddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssdlrlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsssdlrflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstp\u00c48\u00dc;              /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstpaddr;             /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstplgth;             /* + module length                            */\n  unsigned char  qnvtloadl_qfsstpflag\u00c44\u00dc;          /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssapc\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssapcaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssapclgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssapcflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstcp\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstcpaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstcplgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsstcpflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsst310\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsst310addr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsst310lgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsst310flag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstbpx\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstbpxaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstbpxlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsstbpxflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfile\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfileaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfilelgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssfileflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfsa\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfsaaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfsalgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssfsaflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssjf\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssjfaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssjflgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsssjfflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssdrvp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssdrvpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssdrvplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssdrvpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssafpc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssafpcaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssafpclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssafpcflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssafpd\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssafpdaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssafpdlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssafpdflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssafpe\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssafpeaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssafpelgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssafpeflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsspcnt\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsspcntaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsspcntlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsspcntflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssarch\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssarchaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssarchlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssarchflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssdbg\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssdbgaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssdbglgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssdbgflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsslink\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsslinkaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsslinklgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsslinkflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssbcbp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssbcbpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssbcbplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssbcbpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssserp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssserpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssserplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssserpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssyn\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssynaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssynlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsssynflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsslrec\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsslrecaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsslreclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsslrecflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssstat\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssstataddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssstatlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssstatflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssstrq\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssstrqaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssstrqlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssstrqflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsschn\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsschnaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsschnlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsschnflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfss__\u00c48\u00dc;              /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfss__addr;             /* + LINKAGE                                  */\n  int            qnvtloadl_qfss__lgth;             /* + module length                            */\n  unsigned char  qnvtloadl_qfss__flag\u00c44\u00dc;          /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsspipe\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsspipeaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsspipelgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsspipeflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssuprm\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssuprmaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssuprmlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssuprmflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstags\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstagsaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstagslgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsstagsflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssprxx\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprxxaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssprxxlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprxxflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssxml\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssxmladdr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssxmllgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssxmlflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfltr\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfltraddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfltrlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssfltrflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_pphsmem\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_pphsmemaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_pphsmemlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_pphsmemflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_ikjeff02\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_ikjeff02addr;           /* + LINKAGE                                  */\n  int            qnvtloadl_ikjeff02lgth;           /* + module length                            */\n  unsigned char  qnvtloadl_ikjeff02flag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_replyexi\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_replyexiaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_replyexilgth;           /* + module length                            */\n  unsigned char  qnvtloadl_replyexiflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswwi\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsswwiaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsswwilgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsswwiflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswwa\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsswwaaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsswwalgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsswwaflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssprun\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprunaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssprunlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprunflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswork\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssworkaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssworklgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssworkflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssmqs\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssmqsaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssmqslgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssmqsflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbback\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbbackaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbbacklgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbbackflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbcomm\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbcommaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbcommlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbcommflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbclos\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbclosaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbcloslgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbclosflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbcon\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbconaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbconlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbconflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbdisc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbdiscaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbdisclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbdiscflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbget\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbgetaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbgetlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbgetflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbinq\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbinqaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbinqlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbinqflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbopen\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbopenaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbopenlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbopenflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbput\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbputaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbputlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbputflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbput1\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbput1addr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbput1lgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbput1flag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbset\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbsetaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbsetlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbsetflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_ceepipi\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_ceepipiaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_ceepipilgth;            /* + module length                            */\n  unsigned char  qnvtloadl_ceepipiflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_wsslini\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_wssliniaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_wsslinilgth;            /* + module length                            */\n  unsigned char  qnvtloadl_wssliniflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswwc\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsswwcaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsswwclgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsswwcflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfilc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfilcaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfilclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssfilcflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssxmlc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssxmlcaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssxmlclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssxmlcflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssapi\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssapiaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssapilgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsssapiflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssexci\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssexciaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssexcilgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssexciflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_dfhxcis\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_dfhxcisaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_dfhxcislgth;            /* + module length                            */\n  unsigned char  qnvtloadl_dfhxcisflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qcvtjes\u00c44\u00dc;                       /* default JES name                           */\n  unsigned char  qcvtqsysout\u00c44\u00dc;                   /* queue sysouts under USER                   */\n  unsigned char  qcvtfssidc\u00c44\u00dc;                    /* FSS id in char form                        */\n  unsigned char  qcvtfss\u00c44\u00dc;                       /* FSS id (second halfword zero)              */\n  unsigned char  qcvtoken\u00c44\u00dc;                      /* JES start token                            */\n  unsigned char  qcvt_xml\u00c48\u00dc;                      /* XML option                                 */\n  unsigned char  qcvt_xmldef\u00c4128\u00dc;                 /* XML default definition                     */\n  struct \u00e4\n    void          *_filler3;  /* order routine */\n    \u00fc qcvtfsi_cdp;\n  void          *_filler4;                         /* address of the order routine               */\n  void          *_filler5;                         /* post routine                               */\n  void          *_filler6;                         /* address of the post routine                */\n  unsigned char  qnssname\u00c44\u00dc;                      /* system nane                                */\n  void          *qnssvt;                           /* address of the SSVT                        */\n  void          *qnscvt;                           /* address of the SSCVT                       */\n  struct \u00e4\n    void          *_qnpclxct; /* LX count */\n    \u00fc qnpclxl;\n  void          *qnpclx;                           /* LX value                                   */\n  struct \u00e4\n    void          *_qnpcetct; /* ET count */\n    \u00fc qnpcetl;\n  void          *qnpcettk;                         /* ET token                                   */\n  void          *qnpcnum;                          /* PC number                                  */\n  unsigned char  wlmsubsys\u00c48\u00dc;                     /* WLM subsystem name                         */\n  void          *wlmtkn;                           /* WLM connection token                       */\n  unsigned char  applenv\u00c432\u00dc;                      /* wlm AE                                     */\n  unsigned char  wlmqtype\u00c48\u00dc;                      /* wlm queue type                             */\n  unsigned char  wlmtype;                          /* wlm type flag                              */\n  unsigned char  _filler7\u00c43\u00dc;                      /* reserved                                   */\n  unsigned char  wlmaest;                          /* ae status                                  */\n  unsigned char  _filler8\u00c43\u00dc;\n  void          *wlm_queue_reserved;               /* wlm reserved                               */\n  unsigned char  qcvtioq_type\u00c410\u00dc;                 /* +default MODE64                            */\n  unsigned char  _filler9\u00c42\u00dc;\n  void          *qcvtioq_elength;                  /* +ioqe length in 4K                         */\n  unsigned char  _filler10\u00c44\u00dc;\n  void          *qcvtioq_entries;                  /* +number of entries                         */\n  void          *qcvtioq_global;                   /* +work area address                         */\n  unsigned char  qcvtioq_dsppref\u00c44\u00dc;               /* +DIV DSP PREF                              */\n  unsigned char  qcvtioq_divdd\u00c48\u00dc;                 /* +DIV dd name                               */\n  void          *pipesize;                         /* default 512K                               */\n  int            pipewait;                         /* default 3 min                              */\n  int            runaway;                          /* default 60 min                             */\n  int            taskrun;                          /* default 60 min                             */\n  int            dirdsp_size;                      /* directory DSP size                         */\n  int            dirdsp_dsp;                       /* directory DSP dsp                          */\n  void          *qcvtstrq;                         /* STREQ anchor                               */\n  void          *qcvtstat;                         /* STAT anchor                                */\n  int            qcvt_stat_wait;                   /* status update unit                         */\n  unsigned char  qcvt_stat_statusfile\u00c444\u00dc;         /* status cluster                             */\n  int            qcvt_stat_statuskeep;             /* status keep value                          */\n  unsigned char  qcvt_stat_onoff\u00c43\u00dc;               /* stautus ON/OFF                             */\n  unsigned char  qcvt_enablecaf\u00c43\u00dc;                /* enable CAF yes/no                          */\n  unsigned char  _filler11\u00c42\u00dc;\n  unsigned char  qcvt_unique\u00c48\u00dc;                   /* unique jobid                               */\n  void          *qcvt_tiot\u00c42\u00dc;                     /* tiot/JFCB list pointer                     */\n  unsigned char  qndsnam\u00c48\u00dc;                       /* DATA SPACE NAME                            */\n  void          *qndsplimit;                       /* 512 mbyte default                          */\n  unsigned char  qndstkn\u00c48\u00dc;                       /* data space token                           */\n  void          *qndsalet;                         /* ALET for data space                        */\n  void          *qndsorig;                         /* orig addr                                  */\n  int            qndsblks;                         /* size of the data space in 4K 64MB          */\n  void          *qndsmax;                          /* max dataspace addr                         */\n  int            qndsincr;                         /* incr in data space (BCB size'              */\n  void          *qndswwa;                          /* WWA cache DSP                              */\n  void          *qcvt_unique_dsid\u00c42\u00dc;              /* unique dsid                                */\n  void          *qcvtecbp;                         /* stop/modify ECB address                    */\n  void          *qcvtcibp;                         /* CIB block address                          */\n  void          *qcvtperm;                         /* perm task table pointer                    */\n  void          *qcvt_fsi_ordera;                  /* order parm list address                    */\n  unsigned char  qcvt_stoporder;                   /* stop order flag for FSS                    */\n  unsigned char  _filler12\u00c43\u00dc;\n  void          *qcvttcb_qnet;                     /* QNET task TCB addr                         */\n  void          *qcvttcb_stat;                     /* STAT task TCB addr                         */\n  void          *qcvtecb_dump;                     /* DUMP ecb                                   */\n  void          *qcvtecb_fss;                      /* FSS ecb                                    */\n  void          *qcvtecb_modify;                   /* stop/modify ECB                            */\n  void          *qcvtecb_qnet;                     /* QNET task ecb                              */\n  void          *qcvtecb_stat;                     /* STAT task ecb                              */\n  void          *wlongw;                           /* 5 min wait before timer int                */\n  void          *qcvtecbs;                         /* address FSS order ECB                      */\n  void          *_filler13;                        /* addresss Modify ECB                        */\n  void          *_filler14;                        /* address of QNET task ECB                   */\n  void          *_filler15;                        /* address of STAT task ECB                   */\n  void          *_filler16;                        /* address timer ECB                          */\n  void          *_filler17\u00c464\u00dc;                    /* address FSA subtask ECB                    */\n  void          *qnmn_ecb_stop;                    /* stop ECB for QFSSQNET task                 */\n  void          *qnmnecbp;                         /* addr of the stop/modify ECB                */\n  void          *qnmnecbt;                         /* addr of the timer ECB                      */\n  void          *qnmnecbl;                         /* addr of the select ECB                     */\n  void          *qnmnecbm;                         /* addr of the MQS event ECB                  */\n  void          *qnmnecbsapi;                      /* addr of SAPI ECB                           */\n  void          *qnmnecbexci;                      /* addr of EXCI ECB                           */\n  void          *qnmnecbdb2;                       /* addr of Db2  ECB                           */\n  void          *qnmnecbe;                         /* addr of EOM ecb                            */\n  void          *qnmnecbr;                         /* addr of RQS ecb                            */\n  void          *qnmnecbi;                         /* addr of inbound tran ECB                   */\n  void          *qnmnecbo;                         /* addr of outbound ECB                       */\n  void          *qnmnecbs\u00c4128\u00dc;                    /* subtask stop ECB address list              */\n  void          *qnmnioqe;                         /* IOQE block addr for main                   */\n  void          *qnmnioqe_appc;                    /* IOQE block addr for APPC main              */\n  void          *qnmnioqe_tcpip;                   /* IOQE block addr for TCPIP main             */\n  void          *qnmnioqe_file;                    /* IOQE block addr for FILE main              */\n  void          *qnmnioqe_mqs;                     /* IOQE block addr for MQS main               */\n  void          *qnmnioqe_sapi;                    /* IOQE block addr for SAPI main              */\n  void          *qnmnioqe_exci;                    /* IOQE block addr for EXCI main              */\n  void          *qnmnioqe_db2;                     /* IOQE block addr for DB2  main              */\n  void          *qnmnlast;                         /* last ECB in use                            */\n  void          *qneomecb;                         /* EOM ecb                                    */\n  void          *qnrqsecb;                         /* RQS ecb                                    */\n  void          *qnselecb;                         /* select ECB                                 */\n  unsigned char  _filler18\u00c4100\u00dc;                   /* for tcp/ip work                            */\n  void          *qnmqsecb;                         /* MQS event ecb                              */\n  void          *qnsapiecb;                        /* SAPI event ecb                             */\n  void          *qnexciecb;                        /* exci event ecb                             */\n  void          *qndb2ecb;                         /* db2 event ecb                              */\n  void          *qnmntcbm;                         /* main TCB addr                              */\n  void          *qnpmcode;                         /* start of the code                          */\n  struct \u00e4\n    unsigned char  _qnmnstkn\u00c48\u00dc; /* address space token */\n    void          *_qnmnascb;    /* ASCB addr           */\n    void          *_qnmnaecb;    /* start ECB addr      */\n    void          *_qnmnresv\u00c42\u00dc; /* reserved            */\n    \u00fc qnmnoda;\n  void          *qneomls;                          /* start of EOMlist                           */\n  void          *qneomle;                          /* end of the EOM list                        */\n  void          *qnrqsls;                          /* start add of RQS list                      */\n  void          *qnrqssiz;                         /* size of an RQS                             */\n  void          *qnrqsle;                          /* end of the RQS list                        */\n  void          *qnrqslmax;                        /* max used address in the RQS list           */\n  void          *qneoml\u00c416\u00dc;                       /* end of memory ASID list                    */\n  unsigned char  profddnm\u00c48\u00dc;                      /* profile DD name                            */\n  unsigned char  lockflag\u00c44\u00dc;                      /* lock flag : YES/NO                         */\n  unsigned char  system\u00c48\u00dc;                        /* system profile name                        */\n  void          *__prof_sysa\u00c42\u00dc;                   /* system profile start addr                  */\n  void          *__prof_rcva\u00c42\u00dc;                   /* receiver profile start addr                */\n  void          *__prof_liba\u00c42\u00dc;                   /* library profile start addr                 */\n  void          *__prof_browse;                    /* browse pointer                             */\n  unsigned char  __prof_dsn\u00c444\u00dc;                   /* profile dataset name                       */\n  unsigned char  __prof_mem\u00c48\u00dc;                    /* profile member name                        */\n  unsigned char  __prof_ddname\u00c48\u00dc;                 /* profile dd name                            */\n  unsigned char  __prof_typ\u00c44\u00dc;                    /* profile type - option                      */\n  void          *__prof_count;                     /* lu count                                   */\n  unsigned char  __prof_sys\u00c48\u00dc;                    /* system profile                             */\n  unsigned char  __prof_lib\u00c48\u00dc;                    /* library profile                            */\n  unsigned char  __prof_rcv\u00c48\u00dc;                    /* application profile                        */\n  void          *__prof_msga;                      /* message pointer                            */\n  unsigned char  userid\u00c48\u00dc;                        /* system default user id                     */\n  unsigned char  jes2\u00c44\u00dc;                          /* default jes name                           */\n  void          *qcvt_debug_gtffid;                /* GTF trace fid                              */\n  int            qcvt_debug_count;                 /* no debug                                   */\n  int            qcvt_link_count;                  /* no link                                    */\n  unsigned char  qfssfilterdd\u00c48\u00dc;                  /* filter DD                                  */\n  void          *qfssfilter;                       /* filter block                               */\n  unsigned char  qfssdebugdd\u00c48\u00dc;                   /* debug DD                                   */\n  void          *qfssdebuglist;                    /* debug block                                */\n  void          *qfsstrace_table;                  /* trace table size in elemnets               */\n  void          *qfsstrace_entry;                  /* trace table elemnent size                  */\n  void          *qfsstrace_start;                  /* trace table start address                  */\n  void          *qfsstrace_actual;                 /* trace table actual address                 */\n  void          *qfsstrace_end;                    /* trace table end address                    */\n  unsigned char  qnvtst\u00c424\u00dc;                       /* vtam status                                */\n  void          *qnvtacba;                         /* VTAM acb addr                              */\n  struct \u00e4\n    unsigned char  _filler19;  /* ACB IDENTIFICATION              */\n    unsigned char  _filler20;  /* ACB SUBTYPE             X04SVHS */\n    short int      _filler21;  /* ACB LENGTH             X03004HS */\n    \u00fc vtamacb;\n  void          *_filler22;                        /* AMB LIST POINTER                           */\n  void          *_filler23;                        /* PTR TO VTAM EXTENSION  X03004HS            */\n  unsigned char  _filler24;                        /* MACRF(1)                X04SVHS            */\n  unsigned char  _filler25;                        /* MACRF(2)                X04SVHS            */\n  unsigned char  _filler26;                        /* NO OF CONCURRENT        X04SVHS            */\n  unsigned char  _filler27;                        /* NUMBER OF STRINGS       X04SVHS            */\n  short int      _filler28;                        /* NUMBER OF DATA BUFFERS                     */\n  short int      _filler29;                        /* NUMBER OF INDEX BUFFERS                    */\n  unsigned char  _filler30;                        /* MACRF(3)                X04SVHS            */\n  unsigned char  _filler31;                        /* MACRF(4)                X04SVHS            */\n  short int      _filler32;                        /* JES BUFFER POOL/NUMBER  X04SVHS            */\n  unsigned char  _filler33;                        /* RECFM=A                                    */\n  unsigned char  _filler34;                        /* CONTROL CHARACTER TYPE                     */\n  unsigned char  _filler35\u00c42\u00dc;                     /* DSORG=ACB                                  */\n  void          *_filler36;                        /* X04SVHS                                    */\n  void          *_filler37;                        /* PASSWORD POINTER                           */\n  void          *_filler38;                        /* EXIT LIST POINTER                          */\n  unsigned char  _filler39;                        /* INDICATE VTAM            X03004            */\n  unsigned char  _filler40\u00c47\u00dc;                     /* PAD WITH ZEROS           X03004            */\n  unsigned char  _filler41;                        /* OFLAGS                                     */\n  unsigned char  _filler42;                        /* ERFLAGS                                    */\n  unsigned char  _filler43;                        /* INFLGS(1)               X04SVHS            */\n  unsigned char  _filler44;                        /* INFLGS(2)               X04SVHS            */\n  void          *_filler45;                        /* OPENJ JFCB POINTER                         */\n  void          *_filler46;                        /* BUFFER SPACE                               */\n  short int      _filler47;                        /* BLOCK SIZE                                 */\n  short int      _filler48;                        /* RECORD SIZE                                */\n  void          *_filler49;                        /* USER WORKAREA POINTER                      */\n  void          *_filler50;                        /* CONTROL BLOCK MANIPULATION                 */\n  void          *_filler51;                        /* PTR TO APPL NAME         X03004            */\n  unsigned char  _filler52\u00c44\u00dc;                     /* SET RETURN CODE(VTAM)    X03004            */\n  unsigned char  _filler53\u00c42\u00dc;                     /* RETURN TO CALLER(VTAM)   X03004            */\n  unsigned char  _filler54;                        /* ACBOPT1 FLAGS         @KFA @T1C            */\n  unsigned char  _filler55;                        /* ACBOPT2 FLAGS              @R1C            */\n  int            _filler56;                        /* RESERVED                 X03004            */\n  void          *_filler57;                        /* NIB ADDRESS            @G69AKJP            */\n  void          *_filler58;                        /* AMSI ADDRESS           @D5K4791            */\n  void          *_filler59;                        /* RIVL ADDRESS           @D5K4791            */\n  int            _filler60;                        /* USER FIELD             @D5K4791            */\n  void          *_filler61;                        /* APPLVCTR ADDRESS           @L2A            */\n  unsigned char  vapplid;                          /* applid length                              */\n  unsigned char  _filler62\u00c48\u00dc;                     /* application ID                             */\n  unsigned char  qnvtlul;                          /* LU name length                             */\n  unsigned char  qnvtlunm\u00c48\u00dc;                      /* applid                                     */\n  unsigned char  qnvtlgmd\u00c48\u00dc;                      /* logmode name                               */\n  unsigned char  _filler63\u00c42\u00dc;\n  int            allocwt;                          /* wait time for allocation in 1/100s         */\n  int            alloctry;                         /* retry count for allocation                 */\n  int            appctimeout;                      /* 1 min appc timeout                         */\n  int            waitow;                           /* half minute                                */\n  int            waitoc;                           /* max 10 minute wait for VTAM                */\n  unsigned char  gapplid\u00c48\u00dc;                       /* general application id                     */\n  unsigned char  qcvt_printerparms\u00c444\u00dc;            /* default printerparms dataset               */\n  int            qcvt_smfrec;                      /* SMF record number                          */\n  unsigned char  qcvt_smfext\u00c44\u00dc;                   /* SMF extension                              */\n  void          *qnet_tcpip_global;                /* global area pointer                        */\n  unsigned char  qnet_tcpip_tcpip\u00c48\u00dc;              /* tcpip address space name                   */\n  unsigned char  qnet_tcpip_version\u00c44\u00dc;            /* tcpip address space name                   */\n  unsigned char  qnet_tcpip_stcname\u00c48\u00dc;            /* started task name                          */\n  struct \u00e4\n    void          *_qnet_tcpip_clientid_domain; /* AF_INET */\n    \u00fc qnet_tcpip_clientid;\n  unsigned char  qnet_tcpip_clientid_name\u00c48\u00dc;      /* address space id                           */\n  unsigned char  qnet_tcpip_clientid_task\u00c48\u00dc;      /* task id                                    */\n  unsigned char  qnet_tcpip_clientid_reserved\u00c420\u00dc; /* reserved                                   */\n  short int      _filler64;                        /* reserved                                   */\n  short int      qnet_tcpip_port;                  /* port number                                */\n  short int      qnet_tcpip_socket;                /* main server socket                         */\n  short int      _filler65;                        /* reserved                                   */\n  short int      qnet_tcpip_www_port;              /* port number                                */\n  unsigned char  _filler66\u00c42\u00dc;\n  struct \u00e4\n    short int      _qnet_tcpip_name_family;      /* INET address family */\n    short int      _qnet_tcpip_name_port;        /* port number         */\n    void          *_qnet_tcpip_name_address;     /* IP address          */\n    unsigned char  _qnet_tcpip_name_reserved\u00c48\u00dc; /* reserved            */\n    \u00fc qnet_tcpip_name;\n  short int      _filler67;                        /* max socket number                          */\n  short int      qnet_tcpip_maxsoc;                /* max socket number                          */\n  void          *qnet_tcpip_maxsno;                /* gotten max socket number                   */\n  void          *qnet_tcpip_backlog;               /* backlog default                            */\n  unsigned char  qnet_tcpip_hostaddr\u00c416\u00dc;          /* host addr in EBCDIC                        */\n  unsigned char  qnet_tcpip_hostname\u00c432\u00dc;          /* host name in EBCDIC                        */\n  unsigned char  qnettp;                           /* TP flag                                    */\n  unsigned char  _filler68\u00c43\u00dc;\n  void          *qnet_server_trace;                /* trace flag                                 */\n  void          *qnet_server_cache;                /* cache flag                                 */\n  void          *wloga;                            /* ADDRESS OF COPIED DCB (BELOW 16MB)         */\n  void          *wlogad;                           /* ADDRESS OF DCB BLOCK TO COPY               */\n  void          *routcde;\n  unsigned char  qfsslrdd\u00c48\u00dc;                      /* lrec dd nmae                               */\n  unsigned char  msgsupr\u00c48\u00dc;                       /* supress id's                               */\n  unsigned char  qcvtlogger_streamname\u00c426\u00dc;        /* logger logstream name                      */\n  unsigned char  qcvtlogger_streamtoken\u00c416\u00dc;       /* logger stream token                        */\n  unsigned char  qncpkey\u00c48\u00dc;                       /* primary key                                */\n  unsigned char  qncpskey\u00c48\u00dc;                      /* secondary key                              */\n  unsigned char  qcvt_set_cmd\u00c48\u00dc;                  /* set command                                */\n  unsigned char  qcvtdebug\u00c48\u00dc;                     /* module name                                */\n  unsigned char  qcvtdebugs\u00c48\u00dc;                    /* debug switch                               */\n  unsigned char  qcvtlinks\u00c48\u00dc;                     /* link switch                                */\n  unsigned char  _filler69\u00c42\u00dc;\n  void          *qcvt_seta;                        /* command pointer                            */\n  unsigned char  qcvt_perm;                        /* permanent task flag                        */\n  unsigned char  _filler70\u00c43\u00dc;                     /* not in use                                 */\n  int            maxtask_max;                      /* maxtask max                                */\n  int            maxtask_act;                      /* actual maxtask                             */\n  void          *maxtask_act_qnt;                  /* actual maxtask for QNT                     */\n  void          *maxtask_ecb;                      /* maxtask ECB                                */\n  int            highwtm_q;                        /* high water mark for req queue              */\n  int            lowwtm_q;                         /* low water mark for req queue               */\n  struct \u00e4\n    void          *_itiqecb; /* queue ecb */\n    \u00fc itiioqe;\n  void          *itiqstr;                          /* start of queue                             */\n  void          *itiqend;                          /* end of queue                               */\n  void          *itiqlast;                         /* last entry                                 */\n  void          *itiqa;                            /* actual entry                               */\n  unsigned char  _filler71\u00c4256\u00dc\u00c48\u00dc;\n  struct \u00e4\n    void          *_itoqecb; /* queue ecb */\n    \u00fc itoioqe;\n  void          *itoqstr;                          /* start of queue                             */\n  void          *itoqend;                          /* end of queue                               */\n  void          *itoqlast;                         /* last entry                                 */\n  void          *itoqa;                            /* actual entry                               */\n  unsigned char  _filler72\u00c4256\u00dc\u00c48\u00dc;\n  unsigned char  qcvt_fsa\u00c464\u00dc\u00c4100\u00dc;                /* FSABLK's                                   */\n  unsigned char  qcvtssib\u00c436\u00dc;                     /* SSIB for connect                           */\n  unsigned char  qcvtssob\u00c428\u00dc;                     /* SSOB for CONNECT                           */\n  struct \u00e4\n    struct \u00e4\n      void          *_filler73;\n      \u00fc _key0;\n    \u00fc qcvt_set;\n  unsigned char  _filler74;\n  unsigned char  _filler75\u00c417\u00dc;\n  short int      _filler76;\n  unsigned char  _filler77;\n  short int      _filler78;\n  unsigned char  _filler79;\n  void          *_filler80;\n  void          *_filler81;\n  void          *_filler82;\n  void          *_filler83;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler84;\n      \u00fc _key1;\n    \u00fc _def1;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler85;\n      \u00fc _key2;\n    \u00fc qcvt_set_sub;\n  unsigned char  _filler86;\n  unsigned char  _filler87\u00c417\u00dc;\n  short int      _filler88;\n  unsigned char  _filler89;\n  short int      _filler90;\n  unsigned char  _filler91;\n  void          *_filler92;\n  void          *_filler93;\n  void          *_filler94;\n  void          *_filler95;\n  unsigned char  _filler96;\n  unsigned char  values00991\u00c43\u00dc;\n  unsigned char  _filler97;\n  unsigned char  values00992\u00c42\u00dc;\n  unsigned char  _filler98;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler99;\n      \u00fc _key3;\n    \u00fc _def3;\n  unsigned char  _filler100;\n  unsigned char  _filler101\u00c417\u00dc;\n  short int      _filler102;\n  unsigned char  _filler103;\n  short int      _filler104;\n  unsigned char  _filler105;\n  void          *_filler106;\n  void          *_filler107;\n  void          *_filler108;\n  void          *_filler109;\n  unsigned char  _filler110;\n  unsigned char  values01001\u00c43\u00dc;\n  unsigned char  _filler111;\n  unsigned char  values01002\u00c42\u00dc;\n  unsigned char  _filler112;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler113;\n      \u00fc _key4;\n    \u00fc _def4;\n  unsigned char  _filler114;\n  unsigned char  _filler115\u00c417\u00dc;\n  short int      _filler116;\n  unsigned char  _filler117;\n  short int      _filler118;\n  unsigned char  _filler119;\n  void          *_filler120;\n  void          *_filler121;\n  void          *_filler122;\n  void          *_filler123;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler124;\n      \u00fc _key5;\n    \u00fc _def5;\n  unsigned char  _filler125;\n  unsigned char  _filler126\u00c417\u00dc;\n  short int      _filler127;\n  unsigned char  _filler128;\n  short int      _filler129;\n  unsigned char  _filler130;\n  void          *_filler131;\n  void          *_filler132;\n  void          *_filler133;\n  void          *_filler134;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler135;\n      \u00fc _key6;\n    \u00fc _def6;\n  unsigned char  _filler136;\n  unsigned char  _filler137\u00c417\u00dc;\n  short int      _filler138;\n  unsigned char  _filler139;\n  short int      _filler140;\n  unsigned char  _filler141;\n  void          *_filler142;\n  void          *_filler143;\n  void          *_filler144;\n  void          *_filler145;\n  unsigned char  _filler146\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler147;\n    \u00fc _key7;\n  unsigned char  _filler148;\n  unsigned char  _filler149\u00c417\u00dc;\n  short int      _filler150;\n  unsigned char  _filler151;\n  short int      _filler152;\n  unsigned char  _filler153;\n  void          *_filler154;\n  void          *_filler155;\n  void          *_filler156;\n  void          *_filler157;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler158;\n      \u00fc _key8;\n    \u00fc _def8;\n  unsigned char  _filler159;\n  unsigned char  _filler160\u00c417\u00dc;\n  short int      _filler161;\n  unsigned char  _filler162;\n  short int      _filler163;\n  unsigned char  _filler164;\n  void          *_filler165;\n  void          *_filler166;\n  void          *_filler167;\n  void          *_filler168;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler169;\n      \u00fc _key9;\n    \u00fc _def9;\n  unsigned char  _filler170;\n  unsigned char  _filler171\u00c417\u00dc;\n  short int      _filler172;\n  unsigned char  _filler173;\n  short int      _filler174;\n  unsigned char  _filler175;\n  void          *_filler176;\n  void          *_filler177;\n  void          *_filler178;\n  void          *_filler179;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler180;\n      \u00fc _key10;\n    \u00fc _def10;\n  unsigned char  _filler181;\n  unsigned char  _filler182\u00c417\u00dc;\n  short int      _filler183;\n  unsigned char  _filler184;\n  short int      _filler185;\n  unsigned char  _filler186;\n  void          *_filler187;\n  void          *_filler188;\n  void          *_filler189;\n  void          *_filler190;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler191;\n      \u00fc _key11;\n    \u00fc _def11;\n  unsigned char  _filler192;\n  unsigned char  _filler193\u00c417\u00dc;\n  short int      _filler194;\n  unsigned char  _filler195;\n  short int      _filler196;\n  unsigned char  _filler197;\n  void          *_filler198;\n  void          *_filler199;\n  void          *_filler200;\n  void          *_filler201;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler202;\n      \u00fc _key12;\n    \u00fc _def12;\n  unsigned char  _filler203;\n  unsigned char  _filler204\u00c417\u00dc;\n  short int      _filler205;\n  unsigned char  _filler206;\n  short int      _filler207;\n  unsigned char  _filler208;\n  void          *_filler209;\n  void          *_filler210;\n  void          *_filler211;\n  void          *_filler212;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler213;\n      \u00fc _key13;\n    \u00fc _def13;\n  unsigned char  _filler214;\n  unsigned char  _filler215\u00c417\u00dc;\n  short int      _filler216;\n  unsigned char  _filler217;\n  short int      _filler218;\n  unsigned char  _filler219;\n  void          *_filler220;\n  void          *_filler221;\n  void          *_filler222;\n  void          *_filler223;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler224;\n      \u00fc _key14;\n    \u00fc _def14;\n  unsigned char  _filler225;\n  unsigned char  _filler226\u00c417\u00dc;\n  short int      _filler227;\n  unsigned char  _filler228;\n  short int      _filler229;\n  unsigned char  _filler230;\n  void          *_filler231;\n  void          *_filler232;\n  void          *_filler233;\n  void          *_filler234;\n  struct \u00e4\n    unsigned char  _filler235\u00c44\u00dc;\n    \u00fc _def15;\n  struct \u00e4\n    void          *_filler236;\n    \u00fc _key15;\n  unsigned char  _filler237;\n  unsigned char  _filler238\u00c417\u00dc;\n  short int      _filler239;\n  unsigned char  _filler240;\n  short int      _filler241;\n  unsigned char  _filler242;\n  void          *_filler243;\n  void          *_filler244;\n  void          *_filler245;\n  void          *_filler246;\n  struct \u00e4\n    unsigned char  _filler247\u00c44\u00dc;\n    \u00fc _def16;\n  struct \u00e4\n    void          *_filler248;\n    \u00fc _key16;\n  unsigned char  _filler249;\n  unsigned char  _filler250\u00c417\u00dc;\n  short int      _filler251;\n  unsigned char  _filler252;\n  short int      _filler253;\n  unsigned char  _filler254;\n  void          *_filler255;\n  void          *_filler256;\n  void          *_filler257;\n  void          *_filler258;\n  unsigned char  _filler259;\n  unsigned char  values01131\u00c44\u00dc;\n  unsigned char  _filler260;\n  unsigned char  values01132\u00c43\u00dc;\n  unsigned char  _filler261;\n  unsigned char  _filler262\u00c42\u00dc;\n  struct \u00e4\n    unsigned char  _filler263\u00c44\u00dc;\n    \u00fc _def17;\n  struct \u00e4\n    void          *_filler264;\n    \u00fc _key17;\n  unsigned char  _filler265;\n  unsigned char  _filler266\u00c417\u00dc;\n  short int      _filler267;\n  unsigned char  _filler268;\n  short int      _filler269;\n  unsigned char  _filler270;\n  void          *_filler271;\n  void          *_filler272;\n  void          *_filler273;\n  void          *_filler274;\n  unsigned char  _filler275;\n  unsigned char  values01141\u00c43\u00dc;\n  unsigned char  _filler276;\n  unsigned char  values01142\u00c42\u00dc;\n  unsigned char  _filler277;\n  unsigned char  values01143\u00c43\u00dc;\n  unsigned char  _filler278;\n  unsigned char  values01144\u00c44\u00dc;\n  unsigned char  _filler279;\n  unsigned char  values01145\u00c48\u00dc;\n  unsigned char  _filler280;\n  unsigned char  values01146\u00c48\u00dc;\n  unsigned char  _filler281;\n  unsigned char  values01147\u00c47\u00dc;\n  unsigned char  _filler282;\n  unsigned char  _filler283;\n  unsigned char  _filler284\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler285;\n    \u00fc _key18;\n  unsigned char  _filler286;\n  unsigned char  _filler287\u00c417\u00dc;\n  short int      _filler288;\n  unsigned char  _filler289;\n  short int      _filler290;\n  unsigned char  _filler291;\n  void          *_filler292;\n  void          *_filler293;\n  void          *_filler294;\n  void          *_filler295;\n  unsigned char  _filler296;\n  unsigned char  values01151\u00c43\u00dc;\n  unsigned char  _filler297;\n  unsigned char  values01152\u00c42\u00dc;\n  unsigned char  _filler298;\n  unsigned char  _filler299\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler300;\n    \u00fc _key19;\n  unsigned char  _filler301;\n  unsigned char  _filler302\u00c417\u00dc;\n  short int      _filler303;\n  unsigned char  _filler304;\n  short int      _filler305;\n  unsigned char  _filler306;\n  void          *_filler307;\n  void          *_filler308;\n  void          *_filler309;\n  void          *_filler310;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler311;\n      \u00fc _key20;\n    \u00fc _def20;\n  unsigned char  _filler312;\n  unsigned char  _filler313\u00c417\u00dc;\n  short int      _filler314;\n  unsigned char  _filler315;\n  short int      _filler316;\n  unsigned char  _filler317;\n  void          *_filler318;\n  void          *_filler319;\n  void          *_filler320;\n  void          *_filler321;\n  unsigned char  _filler322\u00c444\u00dc;\n  struct \u00e4\n    void          *_filler323;\n    \u00fc _key21;\n  unsigned char  _filler324;\n  unsigned char  _filler325\u00c417\u00dc;\n  short int      _filler326;\n  unsigned char  _filler327;\n  short int      _filler328;\n  unsigned char  _filler329;\n  void          *_filler330;\n  void          *_filler331;\n  void          *_filler332;\n  void          *_filler333;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler334;\n      \u00fc _key22;\n    \u00fc _def22;\n  unsigned char  _filler335;\n  unsigned char  _filler336\u00c417\u00dc;\n  short int      _filler337;\n  unsigned char  _filler338;\n  short int      _filler339;\n  unsigned char  _filler340;\n  void          *_filler341;\n  void          *_filler342;\n  void          *_filler343;\n  void          *_filler344;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler345;\n      \u00fc _key23;\n    \u00fc _def23;\n  unsigned char  _filler346;\n  unsigned char  _filler347\u00c417\u00dc;\n  short int      _filler348;\n  unsigned char  _filler349;\n  short int      _filler350;\n  unsigned char  _filler351;\n  void          *_filler352;\n  void          *_filler353;\n  void          *_filler354;\n  void          *_filler355;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler356;\n      \u00fc _key24;\n    \u00fc _def24;\n  unsigned char  _filler357;\n  unsigned char  _filler358\u00c417\u00dc;\n  short int      _filler359;\n  unsigned char  _filler360;\n  short int      _filler361;\n  unsigned char  _filler362;\n  void          *_filler363;\n  void          *_filler364;\n  void          *_filler365;\n  void          *_filler366;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler367;\n      \u00fc _key25;\n    \u00fc _def25;\n  unsigned char  _filler368;\n  unsigned char  _filler369\u00c417\u00dc;\n  short int      _filler370;\n  unsigned char  _filler371;\n  short int      _filler372;\n  unsigned char  _filler373;\n  void          *_filler374;\n  void          *_filler375;\n  void          *_filler376;\n  void          *_filler377;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler378;\n      \u00fc _key26;\n    \u00fc _def26;\n  unsigned char  _filler379;\n  unsigned char  _filler380\u00c417\u00dc;\n  short int      _filler381;\n  unsigned char  _filler382;\n  short int      _filler383;\n  unsigned char  _filler384;\n  void          *_filler385;\n  void          *_filler386;\n  void          *_filler387;\n  void          *_filler388;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler389;\n      \u00fc _key27;\n    \u00fc _def27;\n  unsigned char  _filler390;\n  unsigned char  _filler391\u00c417\u00dc;\n  short int      _filler392;\n  unsigned char  _filler393;\n  short int      _filler394;\n  unsigned char  _filler395;\n  void          *_filler396;\n  void          *_filler397;\n  void          *_filler398;\n  void          *_filler399;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler400;\n      \u00fc _key28;\n    \u00fc _def28;\n  unsigned char  _filler401;\n  unsigned char  _filler402\u00c417\u00dc;\n  short int      _filler403;\n  unsigned char  _filler404;\n  short int      _filler405;\n  unsigned char  _filler406;\n  void          *_filler407;\n  void          *_filler408;\n  void          *_filler409;\n  void          *_filler410;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler411;\n      \u00fc _key29;\n    \u00fc _def29;\n  unsigned char  _filler412;\n  unsigned char  _filler413\u00c417\u00dc;\n  short int      _filler414;\n  unsigned char  _filler415;\n  short int      _filler416;\n  unsigned char  _filler417;\n  void          *_filler418;\n  void          *_filler419;\n  void          *_filler420;\n  void          *_filler421;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler422;\n      \u00fc _key30;\n    \u00fc _def30;\n  unsigned char  _filler423;\n  unsigned char  _filler424\u00c417\u00dc;\n  short int      _filler425;\n  unsigned char  _filler426;\n  short int      _filler427;\n  unsigned char  _filler428;\n  void          *_filler429;\n  void          *_filler430;\n  void          *_filler431;\n  void          *_filler432;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler433;\n      \u00fc _key31;\n    \u00fc _def31;\n  unsigned char  _filler434;\n  unsigned char  _filler435\u00c417\u00dc;\n  short int      _filler436;\n  unsigned char  _filler437;\n  short int      _filler438;\n  unsigned char  _filler439;\n  void          *_filler440;\n  void          *_filler441;\n  void          *_filler442;\n  void          *_filler443;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler444;\n      \u00fc _key32;\n    \u00fc _def32;\n  unsigned char  _filler445;\n  unsigned char  _filler446\u00c417\u00dc;\n  short int      _filler447;\n  unsigned char  _filler448;\n  short int      _filler449;\n  unsigned char  _filler450;\n  void          *_filler451;\n  void          *_filler452;\n  void          *_filler453;\n  void          *_filler454;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler455;\n      \u00fc _key33;\n    \u00fc _def33;\n  unsigned char  _filler456;\n  unsigned char  _filler457\u00c417\u00dc;\n  short int      _filler458;\n  unsigned char  _filler459;\n  short int      _filler460;\n  unsigned char  _filler461;\n  void          *_filler462;\n  void          *_filler463;\n  void          *_filler464;\n  void          *_filler465;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler466;\n      \u00fc _key34;\n    \u00fc _def34;\n  unsigned char  _filler467;\n  unsigned char  _filler468\u00c417\u00dc;\n  short int      _filler469;\n  unsigned char  _filler470;\n  short int      _filler471;\n  unsigned char  _filler472;\n  void          *_filler473;\n  void          *_filler474;\n  void          *_filler475;\n  void          *_filler476;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler477;\n      \u00fc _key35;\n    \u00fc _def35;\n  unsigned char  _filler478;\n  unsigned char  _filler479\u00c417\u00dc;\n  short int      _filler480;\n  unsigned char  _filler481;\n  short int      _filler482;\n  unsigned char  _filler483;\n  void          *_filler484;\n  void          *_filler485;\n  void          *_filler486;\n  void          *_filler487;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler488;\n      \u00fc _key36;\n    \u00fc _def36;\n  unsigned char  _filler489;\n  unsigned char  _filler490\u00c417\u00dc;\n  short int      _filler491;\n  unsigned char  _filler492;\n  short int      _filler493;\n  unsigned char  _filler494;\n  void          *_filler495;\n  void          *_filler496;\n  void          *_filler497;\n  void          *_filler498;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler499;\n      \u00fc _key37;\n    \u00fc _def37;\n  unsigned char  _filler500;\n  unsigned char  _filler501\u00c417\u00dc;\n  short int      _filler502;\n  unsigned char  _filler503;\n  short int      _filler504;\n  unsigned char  _filler505;\n  void          *_filler506;\n  void          *_filler507;\n  void          *_filler508;\n  void          *_filler509;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler510;\n      \u00fc _key38;\n    \u00fc _def38;\n  unsigned char  _filler511;\n  unsigned char  _filler512\u00c417\u00dc;\n  short int      _filler513;\n  unsigned char  _filler514;\n  short int      _filler515;\n  unsigned char  _filler516;\n  void          *_filler517;\n  void          *_filler518;\n  void          *_filler519;\n  void          *_filler520;\n  unsigned char  _filler521;\n  unsigned char  values01351\u00c42\u00dc;\n  unsigned char  _filler522;\n  unsigned char  values01352\u00c43\u00dc;\n  unsigned char  _filler523;\n  struct \u00e4\n    unsigned char  _filler524\u00c43\u00dc;\n    unsigned char  _filler525;\n    \u00fc _def39;\n  struct \u00e4\n    void          *_filler526;\n    \u00fc _key39;\n  unsigned char  _filler527;\n  unsigned char  _filler528\u00c417\u00dc;\n  short int      _filler529;\n  unsigned char  _filler530;\n  short int      _filler531;\n  unsigned char  _filler532;\n  void          *_filler533;\n  void          *_filler534;\n  void          *_filler535;\n  void          *_filler536;\n  unsigned char  _filler537\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler538;\n    \u00fc _key40;\n  unsigned char  _filler539;\n  unsigned char  _filler540\u00c417\u00dc;\n  short int      _filler541;\n  unsigned char  _filler542;\n  short int      _filler543;\n  unsigned char  _filler544;\n  void          *_filler545;\n  void          *_filler546;\n  void          *_filler547;\n  void          *_filler548;\n  unsigned char  _filler549\u00c432\u00dc;\n  struct \u00e4\n    void          *_filler550;\n    \u00fc _key41;\n  unsigned char  _filler551;\n  unsigned char  _filler552\u00c417\u00dc;\n  short int      _filler553;\n  unsigned char  _filler554;\n  short int      _filler555;\n  unsigned char  _filler556;\n  void          *_filler557;\n  void          *_filler558;\n  void          *_filler559;\n  void          *_filler560;\n  unsigned char  _filler561;\n  unsigned char  values01381\u00c45\u00dc;\n  unsigned char  _filler562;\n  unsigned char  values01382\u00c46\u00dc;\n  unsigned char  _filler563;\n  unsigned char  values01383\u00c47\u00dc;\n  unsigned char  _filler564;\n  unsigned char  _filler565\u00c42\u00dc;\n  unsigned char  _filler566\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler567;\n    \u00fc _key42;\n  unsigned char  _filler568;\n  unsigned char  _filler569\u00c417\u00dc;\n  short int      _filler570;\n  unsigned char  _filler571;\n  short int      _filler572;\n  unsigned char  _filler573;\n  void          *_filler574;\n  void          *_filler575;\n  void          *_filler576;\n  void          *_filler577;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler578;\n      \u00fc _key43;\n    \u00fc _def43;\n  unsigned char  _filler579;\n  unsigned char  _filler580\u00c417\u00dc;\n  short int      _filler581;\n  unsigned char  _filler582;\n  short int      _filler583;\n  unsigned char  _filler584;\n  void          *_filler585;\n  void          *_filler586;\n  void          *_filler587;\n  void          *_filler588;\n  unsigned char  _filler589;\n  unsigned char  values01401\u00c46\u00dc;\n  unsigned char  _filler590;\n  unsigned char  values01402\u00c43\u00dc;\n  unsigned char  _filler591;\n  unsigned char  _filler592\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler593;\n    \u00fc _key44;\n  unsigned char  _filler594;\n  unsigned char  _filler595\u00c417\u00dc;\n  short int      _filler596;\n  unsigned char  _filler597;\n  short int      _filler598;\n  unsigned char  _filler599;\n  void          *_filler600;\n  void          *_filler601;\n  void          *_filler602;\n  void          *_filler603;\n  unsigned char  _filler604\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler605;\n    \u00fc _key45;\n  unsigned char  _filler606;\n  unsigned char  _filler607\u00c417\u00dc;\n  short int      _filler608;\n  unsigned char  _filler609;\n  short int      _filler610;\n  unsigned char  _filler611;\n  void          *_filler612;\n  void          *_filler613;\n  void          *_filler614;\n  void          *_filler615;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler616;\n      \u00fc _key46;\n    \u00fc _def46;\n  unsigned char  _filler617;\n  unsigned char  _filler618\u00c417\u00dc;\n  short int      _filler619;\n  unsigned char  _filler620;\n  short int      _filler621;\n  unsigned char  _filler622;\n  void          *_filler623;\n  void          *_filler624;\n  void          *_filler625;\n  void          *_filler626;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler627;\n      \u00fc _key47;\n    \u00fc _def47;\n  unsigned char  _filler628;\n  unsigned char  _filler629\u00c417\u00dc;\n  short int      _filler630;\n  unsigned char  _filler631;\n  short int      _filler632;\n  unsigned char  _filler633;\n  void          *_filler634;\n  void          *_filler635;\n  void          *_filler636;\n  void          *_filler637;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler638;\n      \u00fc _key48;\n    \u00fc _def48;\n  unsigned char  _filler639;\n  unsigned char  _filler640\u00c417\u00dc;\n  short int      _filler641;\n  unsigned char  _filler642;\n  short int      _filler643;\n  unsigned char  _filler644;\n  void          *_filler645;\n  void          *_filler646;\n  void          *_filler647;\n  void          *_filler648;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler649;\n      \u00fc _key49;\n    \u00fc _def49;\n  unsigned char  _filler650;\n  unsigned char  _filler651\u00c417\u00dc;\n  short int      _filler652;\n  unsigned char  _filler653;\n  short int      _filler654;\n  unsigned char  _filler655;\n  void          *_filler656;\n  void          *_filler657;\n  void          *_filler658;\n  void          *_filler659;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler660;\n      \u00fc _key50;\n    \u00fc _def50;\n  unsigned char  _filler661;\n  unsigned char  _filler662\u00c417\u00dc;\n  short int      _filler663;\n  unsigned char  _filler664;\n  short int      _filler665;\n  unsigned char  _filler666;\n  void          *_filler667;\n  void          *_filler668;\n  void          *_filler669;\n  void          *_filler670;\n  unsigned char  _filler671;\n  unsigned char  values01471\u00c42\u00dc;\n  unsigned char  _filler672;\n  unsigned char  values01472\u00c43\u00dc;\n  unsigned char  _filler673;\n  struct \u00e4\n    unsigned char  _filler674\u00c43\u00dc;\n    unsigned char  _filler675;\n    \u00fc _def51;\n  struct \u00e4\n    void          *_filler676;\n    \u00fc _key51;\n  unsigned char  _filler677;\n  unsigned char  _filler678\u00c417\u00dc;\n  short int      _filler679;\n  unsigned char  _filler680;\n  short int      _filler681;\n  unsigned char  _filler682;\n  void          *_filler683;\n  void          *_filler684;\n  void          *_filler685;\n  void          *_filler686;\n  unsigned char  _filler687;\n  unsigned char  values01481\u00c42\u00dc;\n  unsigned char  _filler688;\n  unsigned char  values01482\u00c43\u00dc;\n  unsigned char  _filler689;\n  struct \u00e4\n    unsigned char  _filler690\u00c43\u00dc;\n    unsigned char  _filler691;\n    \u00fc _def52;\n  struct \u00e4\n    void          *_filler692;\n    \u00fc _key52;\n  unsigned char  _filler693;\n  unsigned char  _filler694\u00c417\u00dc;\n  short int      _filler695;\n  unsigned char  _filler696;\n  short int      _filler697;\n  unsigned char  _filler698;\n  void          *_filler699;\n  void          *_filler700;\n  void          *_filler701;\n  void          *_filler702;\n  unsigned char  _filler703;\n  unsigned char  values01491\u00c42\u00dc;\n  unsigned char  _filler704;\n  unsigned char  values01492\u00c43\u00dc;\n  unsigned char  _filler705;\n  unsigned char  values01493\u00c45\u00dc;\n  unsigned char  _filler706;\n  unsigned char  _filler707\u00c42\u00dc;\n  unsigned char  _filler708\u00c45\u00dc;\n  unsigned char  _filler709\u00c43\u00dc;\n  struct \u00e4\n    void          *_filler710;\n    \u00fc _key53;\n  unsigned char  _filler711;\n  unsigned char  _filler712\u00c417\u00dc;\n  short int      _filler713;\n  unsigned char  _filler714;\n  short int      _filler715;\n  unsigned char  _filler716;\n  void          *_filler717;\n  void          *_filler718;\n  void          *_filler719;\n  void          *_filler720;\n  unsigned char  _filler721\u00c4128\u00dc;\n  struct \u00e4\n    void          *_filler722;\n    \u00fc _key54;\n  unsigned char  _filler723;\n  unsigned char  _filler724\u00c417\u00dc;\n  short int      _filler725;\n  unsigned char  _filler726;\n  short int      _filler727;\n  unsigned char  _filler728;\n  void          *_filler729;\n  void          *_filler730;\n  void          *_filler731;\n  void          *_filler732;\n  unsigned char  _filler733\u00c460\u00dc;\n  struct \u00e4\n    void          *_filler734;\n    \u00fc _key55;\n  unsigned char  _filler735;\n  unsigned char  _filler736\u00c417\u00dc;\n  short int      _filler737;\n  unsigned char  _filler738;\n  short int      _filler739;\n  unsigned char  _filler740;\n  void          *_filler741;\n  void          *_filler742;\n  void          *_filler743;\n  void          *_filler744;\n  unsigned char  _filler745\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler746;\n    \u00fc _key56;\n  unsigned char  _filler747;\n  unsigned char  _filler748\u00c417\u00dc;\n  short int      _filler749;\n  unsigned char  _filler750;\n  short int      _filler751;\n  unsigned char  _filler752;\n  void          *_filler753;\n  void          *_filler754;\n  void          *_filler755;\n  void          *_filler756;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler757;\n      \u00fc _key57;\n    \u00fc _def57;\n  unsigned char  _filler758;\n  unsigned char  _filler759\u00c417\u00dc;\n  short int      _filler760;\n  unsigned char  _filler761;\n  short int      _filler762;\n  unsigned char  _filler763;\n  void          *_filler764;\n  void          *_filler765;\n  void          *_filler766;\n  void          *_filler767;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler768;\n      \u00fc _key58;\n    \u00fc _def58;\n  unsigned char  _filler769;\n  unsigned char  _filler770\u00c417\u00dc;\n  short int      _filler771;\n  unsigned char  _filler772;\n  short int      _filler773;\n  unsigned char  _filler774;\n  void          *_filler775;\n  void          *_filler776;\n  void          *_filler777;\n  void          *_filler778;\n  unsigned char  _filler779\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler780;\n    \u00fc _key59;\n  unsigned char  _filler781;\n  unsigned char  _filler782\u00c417\u00dc;\n  short int      _filler783;\n  unsigned char  _filler784;\n  short int      _filler785;\n  unsigned char  _filler786;\n  void          *_filler787;\n  void          *_filler788;\n  void          *_filler789;\n  void          *_filler790;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler791;\n      \u00fc _key60;\n    \u00fc _def60;\n  unsigned char  _filler792;\n  unsigned char  _filler793\u00c417\u00dc;\n  short int      _filler794;\n  unsigned char  _filler795;\n  short int      _filler796;\n  unsigned char  _filler797;\n  void          *_filler798;\n  void          *_filler799;\n  void          *_filler800;\n  void          *_filler801;\n  struct \u00e4\n    void          *_filler802;\n    \u00fc _def61;\n  struct \u00e4\n    void          *_filler803;\n    \u00fc _key61;\n  struct \u00e4\n    unsigned char  _tranpr1\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr2\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr3\u00c48\u00dc; /* tcp/ip iq interface */\n    unsigned char  _tranpr4\u00c48\u00dc; /* WWA  prog name      */\n    unsigned char  _tranpr5\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr6\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr7\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr8\u00c48\u00dc; /* called program      */\n    \u00fc qnintran;\n  unsigned char  tranpr9\u00c48\u00dc;                       /* last one                                   */\n  unsigned char  tranpra\u00c48\u00dc;                       /* SAPI                                       */\n  unsigned char  tranprb\u00c48\u00dc;                       /* EXCI                                       */\n  unsigned char  tranprc\u00c48\u00dc;                       /* DB2                                        */\n  unsigned char  systems\u00c4256\u00dc;                     /* system profile names                       */\n  unsigned char  qnrqs\u00c4512\u00dc\u00c4143\u00dc;\n  unsigned char  _filler804;\n  unsigned char  qnet_tcpip_global_area\u00c48\u00dc;        /* global area                                */\n  unsigned char  _filler805\u00c432\u00dc\u00c436\u00dc;               /* cache area                                 */\n  struct \u00e4\n    void          *_filler806;  /* DCBE ADDRESS */\n    \u00fc wlog;\n  unsigned char  _filler807\u00c412\u00dc;                   /* FDAD, DVTBL                                */\n  void          *_filler808;                       /* KEYLEN, DEVT, TRBAL                        */\n  unsigned char  _filler809;                       /* BUFNO, NUMBER OF BUFFERS                   */\n  int            _filler810 : 24;                  /* BUFCB, BUFFER POOL CONTROL BLOCK           */\n  short int      _filler811;                       /* BUFL, BUFFER LENGTH                        */\n  unsigned char  _filler812\u00c42\u00dc;                    /* DSORG, DATA SET ORGANIZATION               */\n  void          *_filler813;                       /* IOBAD FOR EXCP OR RESERVED                 */\n  unsigned char  _filler814;                       /* BFTEK, BFALN, DCBE INDICATORS              */\n  int            _filler815 : 24;                  /* EODAD (END OF DATA ROUTINE ADDRESS)        */\n  unsigned char  _filler816;                       /* RECFM (RECORD FORMAT)                      */\n  int            _filler817 : 24;                  /* EXLST (EXIT LIST ADDRESS)                  */\n  unsigned char  _filler818\u00c48\u00dc;                    /* DDNAME                                     */\n  unsigned char  _filler819;                       /* OFLGS (OPEN FLAGS)                         */\n  unsigned char  _filler820;                       /* IFLGS (IOS FLAGS)                          */\n  unsigned char  _filler821\u00c42\u00dc;                    /* MACR (MACRO FORMAT)                        */\n  unsigned char  _filler822;                       /* OPTCD, OPTION CODES                        */\n  int            _filler823 : 24;                  /* CHECK OR INTERNAL QSAM SYNCHRONIZING RTN.  */\n  void          *_filler824;                       /* SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)    */\n  short int      _filler825;                       /* INTERNAL ACCESS METHOD FLAGS               */\n  short int      _filler826;                       /* BLKSIZE, BLOCK SIZE                        */\n  int            _filler827;                       /* INTERNAL ACCESS METHOD FLAGS               */\n  void          *_filler828;                       /* INTERNAL ACCESS METHOD USE                 */\n  void          *_filler829;                       /* EOBAD                                      */\n  void          *_filler830;                       /* RECAD                                      */\n  short int      _filler831;                       /* QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF    */\n  short int      _filler832;                       /* LRECL                                      */\n  unsigned char  _filler833;                       /* EROPT, ERROR OPTION                        */\n  int            _filler834 : 24;                  /* CNTRL                                      */\n  short int      _filler835\u00c42\u00dc;                    /* RESERVED AND PRECL                         */\n  void          *_filler836;                       /* EOB, INTERNAL ACCESS METHOD FIELD          */\n  void          *msgmdl;                           /* &PROJECT.MSGP module addr                  */\n  void          *msgcsect;                         /* &PROJECT.MSGS message csect                */\n  void          *msgwarea;                         /* work area address                          */\n  void          *msgdcb;                           /* message dcb addr                           */\n  void          *msgff02;                          /* IKJEFF02 addr                              */\n  unsigned char  msgtime\u00c44\u00dc;                       /* time yes                                   */\n  unsigned char  msgid\u00c44\u00dc;                         /* message id                                 */\n  void          *msgpages;                         /* no page size                               */\n  void          *msglinec;                         /* line counter                               */\n  void          *msgpagec;                         /* page counter                               */\n  unsigned char  msghead\u00c480\u00dc;                      /* head msg id                                */\n  void          *msgroutcd;                        /* ROUT CODE                                  */\n  void          *wlogpc;                           /* page count                                 */\n  void          *wloglc;                           /* line count                                 */\n  unsigned char  wloge\u00c44\u00dc;                         /* 0  Alignment and identifier                */\n  short int      _filler837;                       /* 4  Length of DCBE, minimum is 56           */\n  unsigned char  _filler838\u00c42\u00dc;                    /* 6  Reserved, should be zero                */\n  void          *_filler839;                       /* 8  0 if not open, OPEN points to DCB       */\n  unsigned char  _filler840\u00c44\u00dc;                    /* C  Disk address of current member          */\n  unsigned char  _filler841;                       /* 10  Flags set by system                    */\n  unsigned char  _filler842;                       /* 11  Flags set by user                      */\n  short int      _filler843;                       /* 12  Number of stripes if extended format   */\n  unsigned char  _filler844;                       /* 14  Flags set by user                 @L3A */\n  unsigned char  _filler845\u00c43\u00dc;                    /* 15  Reserved                          @L3C */\n  unsigned char  _filler846\u00c44\u00dc;                    /* 18  Reserved                          @L2A */\n  int            _filler847;                       /* 1C  Block size                        @L2A */\n  unsigned char  _filler848\u00c48\u00dc;                    /* 20  Reserved & number of blocks in ds @L2C */\n  void          *_filler849;                       /* 28  End of data routine address or 0       */\n  void          *_filler850;                       /* 2C  I/O error routine (synchronous) or 0   */\n  unsigned char  _filler851\u00c46\u00dc;                    /* 30  Reserved, should be zero               */\n  unsigned char  _filler852\u00c42\u00dc;                    /* 36  MULTACC and MULTSDN                    */\n  unsigned char  qcvt_tiotl\u00c41024\u00dc\u00c410\u00dc;\n  unsigned char  qcvt_dumponmessages\u00c460\u00dc;          /* dump on messages list                      */\n  unsigned char  _filler853\u00c44\u00dc;\n  struct \u00e4\n    unsigned char  _filler854;  /* FORMAT NUMBER OF ETD         */\n    unsigned char  _filler855;  /* RESERVED. MUST BE ZERO       */\n    short int      _filler856;  /* NUMBER OF ENTRY DESCRIPTIONS */\n    unsigned char  _qnpcqget;   /* INDEX FOR THIS ENTRY         */\n    unsigned char  _filler857;  /* FLAG BYTE                    */\n    short int      _filler858;  /* RESERVED                     */\n    \u00fc qnpcet;\n  void          *_filler859;                       /* ZERO PADDING                               */\n  void          *_filler860;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler861;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler862;                       /* ENTRY KEY MASK                             */\n  void          *_filler863;                       /* PARAMETER 1                                */\n  unsigned char  _filler864;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler865;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler866;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler867;                       /* ZERO PADDING                               */\n  void          *_filler868;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler869;                       /* PARAMETER 2                                */\n  unsigned char  _filler870;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler871\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcqput;                         /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler872;                       /* FLAG BYTE                                  */\n  short int      _filler873;                       /* RESERVED                                   */\n  void          *_filler874;                       /* ZERO PADDING                               */\n  void          *_filler875;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler876;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler877;                       /* ENTRY KEY MASK                             */\n  void          *_filler878;                       /* PARAMETER 1                                */\n  unsigned char  _filler879;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler880;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler881;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler882;                       /* ZERO PADDING                               */\n  void          *_filler883;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler884;                       /* PARAMETER 2                                */\n  unsigned char  _filler885;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler886\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcqbclose;                      /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler887;                       /* FLAG BYTE                                  */\n  short int      _filler888;                       /* RESERVED                                   */\n  void          *_filler889;                       /* ZERO PADDING                               */\n  void          *_filler890;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler891;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler892;                       /* ENTRY KEY MASK                             */\n  void          *_filler893;                       /* PARAMETER 1                                */\n  unsigned char  _filler894;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler895;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler896;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler897;                       /* ZERO PADDING                               */\n  void          *_filler898;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler899;                       /* PARAMETER 2                                */\n  unsigned char  _filler900;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler901\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcbget;                         /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler902;                       /* FLAG BYTE                                  */\n  short int      _filler903;                       /* RESERVED                                   */\n  void          *_filler904;                       /* ZERO PADDING                               */\n  void          *_filler905;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler906;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler907;                       /* ENTRY KEY MASK                             */\n  void          *_filler908;                       /* PARAMETER 1                                */\n  unsigned char  _filler909;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler910;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler911;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler912;                       /* ZERO PADDING                               */\n  void          *_filler913;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler914;                       /* PARAMETER 2                                */\n  unsigned char  _filler915;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler916\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcbput;                         /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler917;                       /* FLAG BYTE                                  */\n  short int      _filler918;                       /* RESERVED                                   */\n  void          *_filler919;                       /* ZERO PADDING                               */\n  void          *_filler920;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler921;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler922;                       /* ENTRY KEY MASK                             */\n  void          *_filler923;                       /* PARAMETER 1                                */\n  unsigned char  _filler924;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler925;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler926;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler927;                       /* ZERO PADDING                               */\n  void          *_filler928;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler929;                       /* PARAMETER 2                                */\n  unsigned char  _filler930;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler931\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcbpoint;                       /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler932;                       /* FLAG BYTE                                  */\n  short int      _filler933;                       /* RESERVED                                   */\n  void          *_filler934;                       /* ZERO PADDING                               */\n  void          *_filler935;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler936;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler937;                       /* ENTRY KEY MASK                             */\n  void          *_filler938;                       /* PARAMETER 1                                */\n  unsigned char  _filler939;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler940;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler941;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler942;                       /* ZERO PADDING                               */\n  void          *_filler943;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler944;                       /* PARAMETER 2                                */\n  unsigned char  _filler945;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler946\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpccheck;                        /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler947;                       /* FLAG BYTE                                  */\n  short int      _filler948;                       /* RESERVED                                   */\n  void          *_filler949;                       /* ZERO PADDING                               */\n  void          *_filler950;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler951;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler952;                       /* ENTRY KEY MASK                             */\n  void          *_filler953;                       /* PARAMETER 1                                */\n  unsigned char  _filler954;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler955;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler956;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler957;                       /* ZERO PADDING                               */\n  void          *_filler958;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler959;                       /* PARAMETER 2                                */\n  unsigned char  _filler960;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler961\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  void          *pipi_token;                       /* pipi token                                 */\n  void          *pipi_tbl;                         /* table addr                                 */\n  unsigned char  pipi_tbls\u00c48\u00dc;                     /* Eyecatcher                                 */\n  void          *_filler962;                       /* Number of entries                          */\n  int            _filler963;                       /* Entry size           @MF0017C              */\n  int            _filler964;                       /* Version                    @D1C            */\n  unsigned char  _filler965;                       /* @D1A                                       */\n  unsigned char  _filler966\u00c43\u00dc;                    /* @D1A                                       */\n  unsigned char  _filler967\u00c48\u00dc;                    /* Name                                       */\n  int            _filler968;                       /* Address                                    */\n  int            _filler969;                       /* Reserved for LE/370                        */\n  void          *pipi_wwi_tbl;                     /* table addr                                 */\n  unsigned char  pipi_wwi_tbls\u00c48\u00dc;                 /* Eyecatcher                                 */\n  void          *_filler970;                       /* Number of entries                          */\n  int            _filler971;                       /* Entry size           @MF0017C              */\n  int            _filler972;                       /* Version                    @D1C            */\n  unsigned char  _filler973;                       /* @D1A                                       */\n  unsigned char  _filler974\u00c43\u00dc;                    /* @D1A                                       */\n  unsigned char  _filler975\u00c48\u00dc;                    /* Name                                       */\n  void          *_filler976;                       /* Address                                    */\n  int            _filler977;                       /* Reserved for LE/370                        */\n  void          *pipi_initmain;\n  void          *pipi_initsub;                     /* 3                                          */\n  void          *pipi_initsubdp;                   /* 9                                          */\n  void          *pipi_callmain;                    /* 2                                          */\n  void          *pipi_callsub;                     /* 4                                          */\n  void          *pipi_callsubr;                    /* 10                                         */\n  void          *pipi_term;                        /* 5                                          */\n  unsigned char  pipi_runtime\u00c4256\u00dc;\n  unsigned char  qcvt_fsi_con\u00c464\u00dc;                 /* connect/disconnect parm area               */\n  unsigned char  qcvt_fsi_send\u00c436\u00dc;                /* send area                                  */\n  \u00fc;\n\n#define qnpclxct                   qnpclxl._qnpclxct\n#define qnpcetct                   qnpcetl._qnpcetct\n#define qnmnstkn                   qnmnoda._qnmnstkn\n#define qnmnascb                   qnmnoda._qnmnascb\n#define qnmnaecb                   qnmnoda._qnmnaecb\n#define qnmnresv                   qnmnoda._qnmnresv\n#define qnet_tcpip_clientid_domain qnet_tcpip_clientid._qnet_tcpip_clientid_domain\n#define qnet_tcpip_name_family     qnet_tcpip_name._qnet_tcpip_name_family\n#define qnet_tcpip_name_port       qnet_tcpip_name._qnet_tcpip_name_port\n#define qnet_tcpip_name_address    qnet_tcpip_name._qnet_tcpip_name_address\n#define qnet_tcpip_name_reserved   qnet_tcpip_name._qnet_tcpip_name_reserved\n#define itiqecb                    itiioqe._itiqecb\n#define itoqecb                    itoioqe._itoqecb\n#define tranpr1                    qnintran._tranpr1\n#define tranpr2                    qnintran._tranpr2\n#define tranpr3                    qnintran._tranpr3\n#define tranpr4                    qnintran._tranpr4\n#define tranpr5                    qnintran._tranpr5\n#define tranpr6                    qnintran._tranpr6\n#define tranpr7                    qnintran._tranpr7\n#define tranpr8                    qnintran._tranpr8\n#define qnpcqget                   qnpcet._qnpcqget\n\n/* Values for field \"qcvtioq\" */\n#define max_qcvtioq                 0x1000     /* max request queue entries */\n\n/* Values for field \"qnscvt\" */\n#define pcqget                      0x00       /* qget pc 0                 */\n#define pcqput                      0x01       /* qput pc 1                 */\n#define pcqbclose                   0x02       /* qbclose pc 2              */\n#define pcbget                      0x03       /* bget pc 3                 */\n#define pcbput                      0x04       /* bput pc 4                 */\n#define pcbpoint                    0x05       /* bpoint pc 5               */\n#define pccheck                     0x06       /* check pc 6                */\n\n/* Values for field \"wlmtype\" */\n#define wlmtype_qmgr                0x01       /* wlm queue manager         */\n#define wlmtype_smgr                0x02       /* wlm server manager        */\n#define wlmtype_wmgr                0x04       /* wlm work  manager         */\n\n/* Values for field \"wlmaest\" */\n#define wlmaest_reset               0x00       /* reset                     */\n#define wlmaest_active              0x01       /* acive                     */\n#define wlmaest_stopreq             0x02       /* stop requested            */\n#define wlmaest_stop                0x03       /* stopping                  */\n\n/* Values for field \"__prof_msga\" */\n#define __prof_length               0x7C       /* length of the local area  */\n\n/* Values for field \"qnettp\" */\n#define qnettp_appc                 0x01       /* APPC flag                 */\n#define qnettp_tcpip                0x02       /* TCPIP flag                */\n#define qnettp_file                 0x04       /* FILE flag                 */\n#define qnettp_mqs                  0x08       /* MQSeries flag             */\n#define qnettp_sapi                 0x10       /* SAPI flag                 */\n#define qnettp_exci                 0x20       /* EXCI flag                 */\n#define qnettp_db2                  0x40       /* DB2 flag                  */\n#define qnettp_jump_appc            0x00       /* APPC jump                 */\n#define qnettp_jump_tcpip           0x04       /* TCPIP jump                */\n#define qnettp_jump_file            0x08       /* FILE jump                 */\n#define qnettp_jump_mqs             0x0C       /* MQSeries jump             */\n#define qnettp_jump_sapi            0x10       /* SAPI jump                 */\n#define qnettp_jump_exci            0x14       /* EXCI jump                 */\n#define qnettp_jump_db2             0x18       /* DB2 jump                  */\n\n/* Values for field \"_filler805\" */\n#define qnet_tcpip_cache_size       0x480      /* size                      */\n#define qfssport                    0x50       /* QFSS port number          */\n#define _routcde                    0x1C       /* subsystem route code      */\n#define _desc                       0x0B       /* descriptor code           */\n#define _qfsscvt                    0x00       /* CVT                       */\n#define _qfssserp                   0x100      /* server program            */\n#define _qfssbcbp                   0x200      /* BCB program               */\n#define _qfssow                     0x300      /* OW program                */\n#define _qfssssip                   0x500      /* SSI program               */\n#define _qfsspc                     0x600      /* PC  program               */\n#define _qfssinip                   0x700      /* init program              */\n#define _qfss62p                    0x800      /* qfss62P program           */\n#define _qfssmain                   0x1000     /* main program              */\n\n/* Values for field \"wloglc\" */\n#define wlogl                       0xE4       /* LENGTH OF WLOG DCB        */\n\n/* Values for field \"qcvt_tiotl\" */\n#define qcvt_tiot_dummy             0x01       /* dummy flag                */\n\n/* Values for field \"_filler961\" */\n#define etd0163                     0x07       /* NUMBER OF ENTRIES IN LIST */\n#define qnpc_elength                0x28       /* entry length              */\n#define program_invalid_transaction 0xAAAA0001\n#define program_program_not_found   0xAAAA0002\n#define program_racf_error          0xAAAA0003\n#define user_racf_error             0xAAAA0005\n#define program_error_occured       0xAAAA0006\n#define program_qsam_error          0xAAAA0007\n#define program_owcb_error          0xAAAA0008\n#define program_prof_error          0xAAAA0009\n\n/* Values for field \"_filler969\" */\n#define ceexpit0172                 0x01       /* Number of entries         */\n\n/* Values for field \"_filler977\" */\n#define ceexpit0175                 0x01       /* Number of entries         */\n\n/* Values for field \"qcvt_fsi_send\" */\n#define qcvtsize                    0x195C8    /* CVT size                  */\n#define _owid                       0x12FF7A   /* overwiew record id        */\n#define _tptype                     0x110000   /* tp header record          */\n#define _ohfrtype                   0x210001   /* file request header       */\n#define _ohfstype                   0x210002   /* SEND data header          */\n#define _ohsstype                   0x910002   /* SEND FSS data type        */\n#define _ohdrtype                   0x210003   /* directory request header  */\n#define _ohprtype                   0x210004   /* profile request header    */\n#define _datatype                   0x300001   /* data record               */\n#define _dasstype                   0x300002   /* send FSS data type        */\n#define _otfrtype                   0x220001   /* file request trailer      */\n#define _otfstype                   0x220002   /* file SEND trailer         */\n#define _otsstype                   0x620002   /* file FSS trailer          */\n#define _otdrtype                   0x220003   /* directory request trailer */\n#define _otprtype                   0x220004   /* profile request trailer   */\n#define _otaptype                   0x120000   /* tp trailer record         */\n#define _maxtp                      0xFE       /* max header record length  */\n#define _maxappl                    0x3FE      /* max appl record length    */\n#define _applbyn                    0x00       /* binary data               */\n#define _applbin                    0x00       /* binary data               */\n#define _applsrc                    0x01       /* source program            */\n#define _applafp                    0x02       /* AFPDS data                */\n#define _appldir                    0x03       /* directory info            */\n#define _applmsg                    0x04       /* message                   */\n#define _applprof                   0x05       /* profile info              */\n#define _applbinc                   0x06       /* BINARY WITH CRLF          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PSA": {"ttr": 8613, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct psa \u00e4\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcrnpsw\u00c44\u00dc; /* -RESTART NEW PSW (AFTER IPL)        MDC001   */\n      void          *_filler1;     /* -  SECOND HALF OF RESTART NEW PSW     MDC128 */\n      \u00fc flcippsw;\n    struct \u00e4\n      unsigned char  _flceippsw\u00c48\u00dc; /* FLCE 0x: IPL PSW */\n      \u00fc flcesame;\n    \u00fc _psa_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcropsw\u00c48\u00dc; /* -      RESTART OLD PSW (AFTER IPL) */\n      \u00fc flciccw1;\n    unsigned char  _flceiccw1\u00c48\u00dc; /* FLCE 8x: IPL CCW1 */\n    \u00fc _psa_union2;\n  union \u00e4\n    struct \u00e4\n      void          *_flccvt;      /* -    ADDRESS OF CVT (AFTER IPL).  THIS OFFSET    */\n      unsigned char  _filler2\u00c44\u00dc;  /* -      RESERVED (AFTER IPL)  (MDC431)   @ZM48214 */\n      \u00fc flciccw2;\n    unsigned char  _flceiccw2\u00c48\u00dc; /* FLCE 10x: IPL CCW1 */\n    \u00fc _psa_union3;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flceopsw\u00c48\u00dc;  /* -      EXTERNAL OLD PSW                          */\n      unsigned char  _flcsopsw\u00c48\u00dc;  /* -      SVC OLD PSW.  THIS OFFSET FIXED BY        */\n      unsigned char  _flcpopsw\u00c48\u00dc;  /* -      PROGRAM CHECK OLD PSW                     */\n      unsigned char  _flcmopsw\u00c48\u00dc;  /* -      MACHINE CHECK OLD PSW                     */\n      unsigned char  _flciopsw\u00c48\u00dc;  /* -      INPUT/OUTPUT OLD PSW                      */\n      unsigned char  _filler3\u00c412\u00dc;  /* -     RESERVED                         @G860PXK  */\n      void          *_flccvt2;      /* -    ADDRESS OF CVT - USED BY DUMP               */\n      unsigned char  _filler4\u00c44\u00dc;   /* -      RESERVED                         @G860PXH */\n      unsigned char  _filler5\u00c44\u00dc;   /* -      RESERVED - FLCTRACE DELETED DUE TO        */\n      unsigned char  _flcenpsw\u00c44\u00dc;  /* -EXTERNAL NEW PSW                                */\n      void          *_filler6;      /* -  SECOND HALF OF EXTERNAL NEW PSW               */\n      unsigned char  _flcsnpsw\u00c44\u00dc;  /* -SVC NEW PSW                                     */\n      void          *_filler7;      /* -  SECOND HALF OF SVC NEW PSW                    */\n      unsigned char  _flcpnpsw\u00c44\u00dc;  /* - PROGRAM CHECK NEW PSW, DISABLED FOR @02C       */\n      void          *_filler8;      /* -  SECOND HALF OF PROGRAM CHECK NEW PSW          */\n      unsigned char  _flcmnpsw\u00c44\u00dc;  /* -MACHINE CHECK NEW PSW              MDC003       */\n      void          *_filler9;      /* -  SECOND HALF OF MACHINE CHECK NEW PSW          */\n      unsigned char  _flcinpsw\u00c44\u00dc;  /* -INPUT/OUTPUT NEW PSW                            */\n      void          *_filler10;     /* -  SECOND HALF OF I/O NEW PSW                    */\n      \u00fc _psa_struct1;\n    unsigned char  _flcer018\u00c4104\u00dc; /* FLCE 18x: reserved */\n    \u00fc _psa_union4;\n  union \u00e4\n    int            _psaeparm;     /* -         EXTERNAL INTERRUPTION PARAMETER  @G871A9A */\n    unsigned char  _flceeparm\u00c44\u00dc; /* FLCE 80x: External interruption parameter           */\n    \u00fc _psa_union5;\n  union \u00e4\n    struct \u00e4\n      short int      _psaspad;  /* -         ISSUING PROCESSOR'S PHYSICAL ADDRESS */\n      short int      _flceicod; /* -         EXTERNAL INTERRUPTION CODE           */\n      \u00fc psaeepsw;\n    struct \u00e4\n      unsigned char  _flcecpuad\u00c42\u00dc;  /* FLCE 84x: CPU address                */\n      unsigned char  _flceeicode\u00c42\u00dc; /* FLCE 86x: External interruption code */\n      \u00fc _psa_struct2;\n    \u00fc _psa_union6;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler11;     /* -      RESERVED - SET TO ZERO                 */\n      int                      : 5,\n                     _flcsilcb : 3; /* -        SIGNIFICANT BITS IN ILC FIELD - LAST */\n      short int      _flcsvcn;      /* -         SVC INTERRUPTION CODE - SVC NUMBER. */\n      \u00fc psaespsw;\n    unsigned char  _flcesdata\u00c44\u00dc; /* FLCE 88x: Additional SVC interruption data */\n    struct \u00e4\n      unsigned char  _flcesdatabyte0\u00c42\u00dc; /* FLCE 88x: */\n      unsigned char  _filler12\u00c42\u00dc;\n      \u00fc _psa_struct3;\n    struct \u00e4\n      unsigned char  _filler13;      /* FLCE 88x: Reserved                          */\n      int                       : 5,\n                     _flcesilcb : 3; /* FLCE 89x: Significant bits in ILC. Last bit */\n      unsigned char  _flcesicode\u00c42\u00dc; /* FLCE 8Ax: SVC interruption code             */\n      \u00fc _psa_struct4;\n    \u00fc _psa_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler14;     /* -      RESERVED - SET TO ZERO                 */\n      int                      : 5,\n                     _flcpilcb : 3; /* -        SIGNIFICANT BITS IN ILC FIELD - LAST */\n      struct \u00e4\n        char           _psaeecod;     /* -       EXCEPTION-EXTENSION CODE.            @03C  */\n        int            _psapiper : 1, /* -        PER INTERRUPT OCCURRED             MDC089 */\n                       _psapimc  : 1, /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090 */\n                       _psapipc  : 6; /* -        AN UNSOLICITED PROGRAM CHECK HAS          */\n        \u00fc flcpicod;\n      struct \u00e4\n        int            _flcteaxm  : 1, /* -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY */\n                                 : 23;\n        struct \u00e4\n          unsigned char  _flcteab3; /* -      LAST BYTE OF TEA.                    @L8A */\n          \u00fc flcdxc;\n        \u00fc flctea;\n      \u00fc psaeppsw;\n    struct \u00e4\n      unsigned char  _flcepdata\u00c44\u00dc; /* FLCE 8Cx: Additional Program interruption */\n      unsigned char  _filler15\u00c44\u00dc;\n      \u00fc _psa_struct5;\n    struct \u00e4\n      unsigned char  _flcepdatabyte0\u00c42\u00dc; /* FLCE 8Cx: */\n      unsigned char  _filler16\u00c46\u00dc;\n      \u00fc _psa_struct6;\n    struct \u00e4\n      unsigned char  _filler17;      /* FLCE 8Cx: Reserved                          */\n      int                       : 5,\n                     _flcepilcb : 3; /* FLCE 8Dx: Significant bits in ILC. Last bit */\n      unsigned char  _flcepicode\u00c42\u00dc; /* FLCE 8Ex: Program interruption code         */\n      unsigned char  _filler18\u00c44\u00dc;\n      \u00fc _psa_struct7;\n    struct \u00e4\n      unsigned char  _filler19\u00c42\u00dc;\n      char           _flcepicode0;          /* FLCE 8Ex: Exception extension code            */\n      int            _flcepiper        : 1, /* FLCE 8Fx: PER interruption code               */\n                     _flcepimc         : 1, /* FLCE 8Fx: Monitor Call interruption code      */\n                     _flcepipc         : 6; /* FLCE 8Fx: An unsolicited program interruption */\n      unsigned char  _flcepiinformation\u00c44\u00dc; /* FLCE 90x:                                     */\n      \u00fc _psa_struct8;\n    struct \u00e4\n      unsigned char  _filler20\u00c44\u00dc;\n      unsigned char  _filler21\u00c43\u00dc;\n      char           _flcedxc;      /* FLCE 93x: Data exception code for PI 7 */\n      \u00fc _psa_struct9;\n    \u00fc _psa_union8;\n  union \u00e4\n    unsigned char  _flcemcnum\u00c42\u00dc; /* FLCE 94x: Monitor class number */\n    struct \u00e4\n      unsigned char  _filler22;\n      unsigned char  _flcmcnum;     /* -      MONITOR CLASS NUMBER */\n      \u00fc _psa_struct10;\n    \u00fc _psa_union9;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcpercd;     /* -      PROGRAM EVENT RECORDING CODE       */\n      int            _flcpswb4 : 1, /* PSW.4 part of ATMID                  @LSA */\n                               : 7;\n      \u00fc _psa_struct11;\n    unsigned char  _flcepercode\u00c42\u00dc; /* FLCE 96x: PER code */\n    struct \u00e4\n      int            _flcepersb         : 1, /* FLCE 96x: PER successful branch event       */\n                     _flceperif         : 1, /* FLCE 96x: PER instruction fetch event       */\n                     _flcepersa         : 1, /* FLCE 96x: PER storage alteration event      */\n                                        : 1,\n                     _flcepersar        : 1, /* FLCE 96x: PER storage alteration using real */\n                                        : 3;\n      int            _flceperpsw4       : 1, /* FLCE 97x: PER PSW bit 4                     */\n                     _flceperatmidvalid : 1, /* FLCE 97x: When 1, the ATMID bits are valid  */\n                     _flceperpsw32      : 1, /* FLCE 97x: PER PSW bit 32                    */\n                     _flceperpsw5       : 1, /* FLCE 97x: PER PSW bit 5                     */\n                     _flceperpsw16      : 1, /* FLCE 97x: PER PSW bit 16                    */\n                     _flceperpsw17      : 1, /* FLCE 97x: PER PSW bit 17                    */\n                     _flceperasceid     : 2; /* FLCE 97x: PER ASCE identification. If a     */\n      \u00fc _psa_struct12;\n    \u00fc _psa_union10;\n  union \u00e4\n    struct \u00e4\n      void          *_flcper;      /* -         PER ADDRESS - ESA/390            @G860PXK */\n      unsigned char  _filler23;    /* -      RESERVED - SET TO ZERO                       */\n      unsigned char  _flcmtrcd\u00c43\u00dc; /* -      MONITOR CODE (ESA/390)                       */\n      \u00fc _psa_struct13;\n    unsigned char  _flceper\u00c48\u00dc; /* FLCE 98x: PER address */\n    struct \u00e4\n      unsigned char  _flceperw0\u00c44\u00dc; /* FLCE 98x: PER address word 0 */\n      void          *_flceperw1;    /* FLCE 9Cx: PER address word 1 */\n      \u00fc _psa_struct14;\n    \u00fc _psa_union11;\n  union \u00e4\n    unsigned char  _flctearn; /* -      CONTAINS THE ACCESS REGISTER NUMBER  @L8C */\n    char           _flceeaid; /* FLCE A0x: Exception access ID (The AR number     */\n    \u00fc _psa_union12;\n  union \u00e4\n    unsigned char  _flcperrn;   /* -      CONTAINS THE PER STORAGE ACCESS      @L8A */\n    char           _flceperaid; /* FLCE A1x: PER access ID (the access register     */\n    \u00fc _psa_union13;\n  char           flceopacid;           /* FLCE A2x:                                              */\n  union \u00e4\n    int                       : 7,\n                   _psaesame  : 1; /* -      ESAME                                @LSA */\n    int                       : 7,\n                   _flceloeme : 1; /* Logout is ESAME                                  */\n    \u00fc _psa_union14;\n  union \u00e4\n    void          *_psampl;  /* -    MPL ADDRESS.  THIS OFFSET FIXED BY */\n    void          *_flcempl; /* FLCE A4x: MPL address                   */\n    \u00fc _psa_union15;\n  union \u00e4\n    unsigned char  _flceteid\u00c48\u00dc;      /* FLCE A8x: Translation exception         */\n    unsigned char  _flcetea\u00c48\u00dc;       /* FLCE A8x: Translation exception address */\n    struct \u00e4\n      unsigned char  _filler24\u00c47\u00dc;\n      int                        : 4,\n                     _flcepealc  : 1, /* FLCE AFx: Protection exception due to        */\n                     _flcesopi   : 1, /* FLCE AFx: Suppress on protection indication  */\n                     _flceteastd : 2; /* FLCE AFx: Segment table designation for TEA: */\n      \u00fc _psa_struct15;\n    unsigned char  _flceteasninfo\u00c48\u00dc; /* FLCE A8x: ASN Info                      */\n    struct \u00e4\n      unsigned char  _filler25\u00c46\u00dc;\n      short int      _flceteasn;    /* FLCE AEx: ASN */\n      \u00fc _psa_struct16;\n    unsigned char  _flcetepcinfo\u00c48\u00dc;  /* FLCE A8x: PC Info                       */\n    struct \u00e4\n      unsigned char  _filler26\u00c44\u00dc;\n      int            _flcepcnum;    /* FLCE ACx: PC#. Bits 0-10 are 0, bit 11 is 1, */\n      \u00fc _psa_struct17;\n    \u00fc _psa_union16;\n  unsigned char  flcemonitorcode\u00c48\u00dc;   /* FLCE B0x: Monitor Code                                 */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcsid\u00c44\u00dc;  /* -      SUBSYSTEM ID                     @G860PVB */\n      unsigned char  _flciofp\u00c44\u00dc; /* -      I/O INTERRUPTION PARAMETER       @G860PVB */\n      \u00fc flciocdp;\n    struct \u00e4\n      unsigned char  _flcessid\u00c44\u00dc;      /* FLCE B8x: Subsystem ID word          */\n      unsigned char  _flceiointparm\u00c44\u00dc; /* FLCE BCx: I/O interruption parameter */\n      \u00fc _psa_struct18;\n    \u00fc _psa_union17;\n  unsigned char  flceiointid\u00c44\u00dc;       /* FLCE C0x: I/O interruption ID                          */\n  unsigned char  flcer0c4\u00c44\u00dc;          /* FLCE C4x: Reserved                                     */\n  union \u00e4\n    unsigned char  _flcfacl\u00c44\u00dc;            /* -     Facilities List. See FLCEFacilitiesList */\n    unsigned char  _flcefacilitieslist\u00c44\u00dc; /* FLCE C8x: Facilities list stored by STFL      */\n    struct \u00e4\n      int            _flceesamen3         : 1, /* Instructions marked \"N3\" in the instruction   */\n                     _flceesameinstalled  : 1, /* The ESAME architectural mode is installed     */\n                     _flceesame           : 1, /* The ESAME architectural mode is active on the */\n                                          : 5;\n      unsigned char  _flcefacilitieslistbyte1; /* FLCE C9x                                      */\n      unsigned char  _flcefacilitieslistbyte2; /* FLCE CAx                                      */\n      unsigned char  _flcefacilitieslistbyte3; /* FLCE CBx                                      */\n      \u00fc _psa_struct19;\n    \u00fc _psa_union18;\n  unsigned char  flcer0cc\u00c48\u00dc;          /* FLCE CCx: Reserved                                     */\n  union \u00e4\n    void          *_flcesar;     /* -      Absolute address of 4k extended      @LRA */\n    unsigned char  _flcer0d4\u00c44\u00dc; /* FLCE D4x: Reserved                               */\n    \u00fc _psa_union19;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcctsa\u00c48\u00dc; /* -      CPU-TIMER SAVE AREA (FROM STORE-     @LHA */\n      unsigned char  _flcccsa\u00c48\u00dc; /* -      CLOCK-COMPARATOR SAVE AREA (FROM     @LHA */\n      \u00fc _psa_struct20;\n    unsigned char  _flcer0d8\u00c416\u00dc; /* FLCE D8x: Reserved */\n    \u00fc _psa_union20;\n  union \u00e4\n    unsigned char  _flcmcic\u00c48\u00dc;  /* -      MACHINE-CHECK INTERRUPTION CODE  @G860PVB */\n    unsigned char  _flcemcic\u00c48\u00dc; /* FLCE E8x: Machine check interruption code        */\n    \u00fc _psa_union21;\n  unsigned char  flcemcice\u00c44\u00dc;         /* FLCE F0x: Machine check interruption code              */\n  unsigned char  flceedcode\u00c44\u00dc;        /* FLCE F4x: External damage code                         */\n  union \u00e4\n    struct \u00e4\n      void          *_flcfsa;       /* -         FAILING STORAGE ADDRESS          @G860PXK */\n      unsigned char  _filler27\u00c44\u00dc;  /* -      RESERVED - SET TO ZERO           @G860PXK    */\n      \u00fc _psa_struct21;\n    unsigned char  _flcefsa\u00c48\u00dc; /* FLCE F8x: Failing storage address */\n    \u00fc _psa_union22;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcfla\u00c416\u00dc;   /* -     FIXED LOGOUT AREA. SIZE FIXED BY     @L9C */\n      unsigned char  _flcrv110\u00c416\u00dc; /* -     RESERVED.                            @L9A */\n      \u00fc _psa_struct22;\n    unsigned char  _flcer100\u00c432\u00dc; /* FLCE 100x: Reserved */\n    \u00fc _psa_union23;\n  union \u00e4\n    int            _flcarsav\u00c416\u00dc; /* -     ACCESS REGISTER SAVE AREA            @L9A */\n    struct \u00e4\n      unsigned char  _flceropsw\u00c416\u00dc; /* FLCE 120x: Restart old PSW  */\n      unsigned char  _flceeopsw\u00c416\u00dc; /* FLCE 130x: External old PSW */\n      unsigned char  _flcesopsw\u00c416\u00dc; /* FLCE 140x: SVC old PSW      */\n      unsigned char  _flcepopsw\u00c416\u00dc; /* FLCE 150x: Program old PSW  */\n      \u00fc _psa_struct23;\n    \u00fc _psa_union24;\n  union \u00e4\n    unsigned char  _flcfpsav\u00c432\u00dc; /* -     FLOATING POINT REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcemopsw\u00c416\u00dc; /* FLCE 160x: Machine check old PSW */\n      unsigned char  _flceiopsw\u00c416\u00dc; /* FLCE 170x: I/O old PSW           */\n      \u00fc _psa_struct24;\n    \u00fc _psa_union25;\n  union \u00e4\n    int            _flcgrsav\u00c416\u00dc; /* -       GENERAL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcer180\u00c432\u00dc;  /* FLCE 180x: reserved         */\n      unsigned char  _flcernpsw\u00c416\u00dc; /* FLCE 1A0x: Restart new PSW  */\n      unsigned char  _flceenpsw\u00c416\u00dc; /* FLCE 1B0x: External new PSW */\n      \u00fc _psa_struct25;\n    \u00fc _psa_union26;\n  union \u00e4\n    int            _flccrsav\u00c416\u00dc; /* -       CONTROL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcesnpsw\u00c416\u00dc; /* FLCE 1C0x: SVC new PSW           */\n      unsigned char  _flcepnpsw\u00c416\u00dc; /* FLCE 1D0x: Program new PSW       */\n      unsigned char  _flcemnpsw\u00c416\u00dc; /* FLCE 1E0x: Machine check new PSW */\n      unsigned char  _flceinpsw\u00c416\u00dc; /* FLCE 1F0x: I/O new PSW           */\n      \u00fc _psa_struct26;\n    \u00fc _psa_union27;\n  struct \u00e4\n    unsigned char  _psapsa\u00c44\u00dc; /* -    CONTROL BLOCK ACRONYM IN EBCDIC                */\n    short int      _psacpupa;  /* -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR) */\n    short int      _psacpula;  /* -         LOGICAL CPU ADDRESS                       */\n    \u00fc flchdend;\n  void          *psapccav;             /* -         VIRTUAL ADDRESS OF PCCA                      */\n  void          *psapccar;             /* -         REAL ADDRESS OF PCCA                         */\n  void          *psalccav;             /* -         VIRTUAL ADDRESS OF LCCA                      */\n  void          *psalccar;             /* -         REAL ADDRESS OF LCCA                         */\n  void          *psatnew;              /* -         TCB pointer. Field maintained for code       */\n  void          *psatold;              /* -         Pointer to current TCB or zero if in SRB     */\n  void          *psaanew;              /* ASCB pointer.  Field maintained for code               */\n  void          *psaaold;              /* -         Pointer to the home (current) ASCB.          */\n  struct \u00e4\n    int            _psaio    : 1, /* -        I/O FLIH                                  */\n                   _psasvc   : 1, /* -        SVC FLIH                                  */\n                   _psaext   : 1, /* -        EXTERNAL FLIH                             */\n                   _psapi    : 1, /* -        PROGRAM CHECK FLIH                        */\n                   _psalock  : 1, /* -        LOCK ROUTINE                              */\n                   _psadisp  : 1, /* -        DISPATCHER                                */\n                   _psatctl  : 1, /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A */\n                   _psatype6 : 1; /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A */\n    int            _psaipcri : 1, /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE   */\n                   _psasvcr  : 1, /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227 */\n                   _psasvcrr : 1, /* -        SVC RECOVERY RECURSION INDICATOR.         */\n                             : 2,\n                   _psaacr   : 1, /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN    */\n                   _psartm   : 1, /* -        RECOVERY TERMINATION MONITOR (RTM) IN     */\n                   _psalcr   : 1; /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C */\n    int            _psaiosup : 1, /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS   */\n                             : 2,\n                   _psaspr   : 1, /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995 */\n                   _psaesta  : 1, /* -        SVC 60 RECOVERY ROUTINE ACTIVE            */\n                   _psarsm   : 1, /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR    */\n                   _psaulcms : 1, /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR       */\n                   _psaslip  : 1; /* -        IEAVTSLP RECURSION CONTROL BIT            */\n    int            _psaldwt  : 1, /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC */\n                   _psasmf   : 1, /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB */\n                   _psaesar  : 1, /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C */\n                             : 5;\n    \u00fc psasuper;\n  unsigned char  psarv22c\u00c416\u00dc;         /* -     RESERVED                             @H1C        */\n  int            psaaxp           : 1, /* INDICATES AXP                        @H1A              */\n                                  : 7;\n  int            psailsio         : 1, /* -      THE I/O FLIH IS USING THE            @L9A       */\n                 psailsex         : 1, /* -      THE EXTERNAL FLIH IS USING THE       @L9A       */\n                 psailspc         : 1, /* -      THE PROGRAM FLIH IS USING THE        @L9A       */\n                 psailsds         : 1, /* -      THE DISPATCHER IS USING THE          @L9A       */\n                 psailsrs         : 1, /* -      THE RESTART FLIH IS USING THE        @L9A       */\n                 psailsor         : 1, /* -      EXIT IS USING THE INTERRUPT HANDLER  @LAA       */\n                 psailst6         : 1, /* -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A       */\n                 psailslk         : 1; /* -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A       */\n  unsigned char  psalsvci\u00c42\u00dc;          /* -      LAST SVC ISSUED ON THIS PROCESSOR    @L6A       */\n  int            psaaeit          : 1, /* -      ADDRESSING ENVIRONMENT IS IN         @LOA       */\n                 psafpac          : 1, /* FP simulation is active on this CPU. @08A              */\n                 psafppe          : 1, /* Program-interrupt expected (i.e.,                      */\n                                  : 5;\n  unsigned char  psarv241\u00c410\u00dc;         /* RESERVED FOR FUTURE USE - SC1C5.     @LOC              */\n  int            psaemema         : 1, /* $$SCAFFOLD: ESAME                                      */\n                                  : 7;\n  void          *psalkcrf;             /* LINKAGE STACK POINTER SAVE AREA.     @D4A              */\n  unsigned char  psampsw\u00c48\u00dc;           /* - SETLOCK MODEL PSW                                    */\n  unsigned char  psamchex\u00c48\u00dc;          /* -      MCH EXIT PSW                                    */\n  int            psatclin;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaintin;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaipcin;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaems2s;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psastosm;             /* -            STOSM PSASLSA,X'00' INSTRUCTION.     @P5A */\n  int            psahlhis;             /* -         SAVE AREA FOR PSAHLHI              MDC050    */\n  unsigned char  psarecur;             /* -      RESTART FLIH RECURSION INDICATOR.  IF           */\n  unsigned char  psarssm;              /* -      STNSM AREA FOR IEAVERES              @L5C       */\n  unsigned char  psasnsm2;             /* -      STNSM AREA FOR IEAVTRT1 (MDC470) @G65RP9A       */\n  unsigned char  psartm1s;             /* -      BITS 0-7 OF THE CURRENT PSW ARE  @G383P9A       */\n  void          *psalwtsa;             /* -         REAL ADDRESS OF SAVE AREA USED WHEN  @LHC    */\n  struct \u00e4\n    struct \u00e4\n      void          *_psadispl; /* -  GLOBAL DISPATCHER LOCK  (MDC315) @G50DP9A        */\n      void          *_psaasml;  /* -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK   */\n      void          *_psasalcl; /* -  SPACE ALLOCATION LOCK  (MDC316)  @G50DP9A        */\n      void          *_psaiossl; /* -         IOS SYNCHRONIZATION LOCK           MDC010 */\n      void          *_psarsmdl; /* -         ADDRESS OF THE RSM DATA SPACE LOCK   @LBC */\n      void          *_psaiosul; /* -         IOS UNIT CONTROL BLOCK LOCK        MDC005 */\n      void          *_psarvlk1; /* -         RESERVED FOR LOCK EXPANSION      @G860PXK */\n      void          *_psarv29c; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psarv2a0; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psatpacl; /* -         TCAM'S TPACBDEB LOCK               MDC009 */\n      void          *_psaoptl;  /* -   OPTIMIZER LOCK  (MDC317)         @G50DP9A       */\n      void          *_psarsmgl; /* -         RSM GLOBAL LOCK                  @G860PXH */\n      void          *_psavfixl; /* VSM FIXED SUBPOOLS LOCK          @G860PXH           */\n      void          *_psaasmgl; /* -         ASM GLOBAL LOCK                  @G860PXH */\n      void          *_psarsmsl; /* -         RSM STEAL LOCK                   @G860PXH */\n      void          *_psarsmxl; /* -         RSM CROSS MEMORY LOCK            @G860PXH */\n      void          *_psarsmal; /* -         RSM ADDRESS SPACE LOCK           @G860PXH */\n      void          *_psavpagl; /* VSM PAGEABLE SUBPOOLS LOCK       @G860PXH           */\n      void          *_psarsmcl; /* RSM COMMON LOCK                  @G860PXK           */\n      void          *_psarvlk2; /* RESERVED FOR LOCK EXPANSION      @G860PXH           */\n      \u00fc psaclht1;\n    struct \u00e4\n      int            _psarsmex    : 1, /* -        BIT 0 OF PSARSML. IF ON, THE RSM           */\n                                 : 31;\n      int            _psatrcex    : 1, /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE         */\n                                 : 31;\n      int            _psaiosex    : 1, /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A  */\n                                  : 5,\n                     _psalks2     : 2, /* COUNT OF LOCKS IN CLHT2              @D3C           */\n                                 : 24;\n      void          *_psarvlk4;        /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht2;\n    struct \u00e4\n      int                      : 7,\n                     _psalks3  : 1, /* COUNT OF LOCKS IN CLHT3          @G860PXH           */\n                              : 24;\n      void          *_psarvlk5;     /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht3;\n    struct \u00e4\n      void          *_psacmsl;      /* -         CROSS MEMORY SERVICES LOCK                */\n      int                      : 6,\n                     _psalks4  : 1, /* COUNT OF LOCKS IN CLHT4          @G860PXH           */\n                              : 25;\n      void          *_psarvlk6;     /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht4;\n    \u00fc psaclht;\n  void          *psalcpua;             /* -         LOGICAL CPU ADDRESS FOR LOCK INSTRUCTION.    */\n  struct \u00e4\n    struct \u00e4\n      int            _psacpuli : 1, /* -        CPU LOCK INDICATOR               @G860PXH */\n                               : 2,\n                     _psasum   : 1, /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA */\n                     _psarsmli : 1, /* -        RSM LOCK INDICATOR               @G860PXH */\n                     _psatrcei : 1, /* -        TRACE LOCK INDICATOR             @G860PXH */\n                     _psaiosi  : 1, /* -        IOS LOCK INDICATOR                   @D3A */\n                               : 1;\n      int                      : 3,\n                     _psarsmci : 1, /* -        RSM COMMON LOCK INDICATOR        @G860PXK */\n                     _psarsmgi : 1, /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH */\n                     _psavfixi : 1, /* -        VSM FIX LOCK INDICATOR           @G860PXH */\n                     _psaasmgi : 1, /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH */\n                     _psarsmsi : 1; /* -        RSM STEAL LOCK INDICATOR         @G860PXH */\n      int            _psarsmxi : 1, /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH */\n                     _psarsmai : 1, /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH */\n                     _psavpagi : 1, /* -        VSM PAGE LOCK INDICATOR          @G860PXH */\n                     _psadspli : 1, /* -        DISPATCHER LOCK INDICATOR                 */\n                     _psaasmli : 1, /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A */\n                     _psasalli : 1, /* -        SPACE ALLOCATION LOCK INDICATOR           */\n                     _psaiosli : 1, /* -        IOS SYNCHRONIZATION LOCK INDICATOR        */\n                     _psarsmdi : 1; /* -        RSM DATA SPACE LOCK INDICATOR        @LBA */\n      int            _psaiouli : 1, /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A */\n                               : 3,\n                     _psatpali : 1, /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A */\n                     _psasrmli : 1, /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK        */\n                     _psacmsli : 1, /* -        CROSS MEMORY SERVICES LOCK INDICATOR      */\n                     _psalclli : 1; /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A */\n      \u00fc psaclhs;\n    \u00fc psahlhi;\n  void          *psalita;              /* -  ADDRESS OF LOCK INTERFACE TABLE.                    */\n  unsigned char  psastor8\u00c48\u00dc;          /* -      8-BYTE value for master's STO        @LSA       */\n  int            psacr0;               /* -         SAVE AREA FOR CONTROL REGISTER 0             */\n  unsigned char  psamchfl;             /* -      MCH RECURSION FLAGS                             */\n  unsigned char  psasymsk;             /* -      THIS FIELD WILL BE USED IN CONJUNCTION          */\n  unsigned char  psaactcd;             /* -      ACTION CODE SUPPLIED BY OPERATOR     @LHC       */\n  unsigned char  psamchic;             /* -      MCH INITIALIZATION COMPLETE FLAGS  MDC098       */\n  void          *psawkrap;             /* -         REAL ADDRESS OF VARY CPU PARAMETER LIST      */\n  void          *psawkvap;             /* -         VIRTUAL ADDRESS OF VARY CPU PARAMETER        */\n  short int      psavstap;             /* -         WORK AREA FOR VARY CPU             MDC108    */\n  short int      psacpusa;             /* -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)      */\n  int            psastor;              /* -         MASTER MEMORY'S SEGMENT TABLE ORIGIN         */\n  unsigned char  psaidawk\u00c490\u00dc;         /* -     WORK SAVE AREA FOR INTERNAL                      */\n  short int      psaret;               /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  short int      psaretcd;             /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  unsigned char  _filler28\u00c42\u00dc;         /* -      RESERVED                         @G860PVB       */\n  struct \u00e4\n    struct \u00e4\n      void          *_psacstk;  /* -         ADDRESS OF CURRENTLY USED FUNCTIONAL      */\n      void          *_psanstk;  /* -         ADDRESS OF NORMAL FRR STACK        MDC062 */\n      void          *_psasstk;  /* -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK   */\n      void          *_psassav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psamstk;  /* -         ADDRESS OF MCH FRR STACK           MDC067 */\n      void          *_psamsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psapstk;  /* -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK   */\n      void          *_psapsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk1; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav1; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk2; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav2; /* -         ADDRESS OF INTERRUPTED STACK SAVE BY      */\n      void          *_psaestk3; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav3; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psarstk;  /* -         ADDRESS OF RESTART FLIH FRR STACK  MDC077 */\n      void          *_psarsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      \u00fc psarsvte;\n    \u00fc psarsvt;\n  unsigned char  psalwpsw\u00c48\u00dc;          /* -      PSW OF WORK INTERRUPTED WHEN A       @LHC       */\n  unsigned char  psarspsw\u00c48\u00dc;          /* -      RESUME PSW FIELD FOR RESTART INTERRUPT          */\n  void          *psatstk;              /* -         ADDRESS OF RTM RECOVERY STACK.               */\n  void          *psatsav;              /* -         ADDRESS OF ERROR STACK SAVED BY RTM  @L7A    */\n  void          *psaastk;              /* -         ADDRESS OF ACR FRR STACK.            @L7A    */\n  void          *psaasav;              /* -         ADDRESS OF INTERRUPT STACK SAVED BY  @L7A    */\n  unsigned char  psartpsw\u00c48\u00dc;          /* -      RESUME PSW FOR RTM SETRP RETRY       @L7A       */\n  unsigned char  psarv3e8\u00c48\u00dc;          /* -      RESERVED                             @L7C       */\n  unsigned char  psasfacc\u00c44\u00dc;          /* - SETFRR ABEND COMPLETION CODE USED WHEN               */\n  int            psalsfcc;             /* -            L  1,PSASFACC INSTRUCTION TO LOAD    @P5A */\n  short int      psasvc13;             /* -            AN SVC 13 INSTRUCTION                @P5A */\n  unsigned char  _filler29;            /* -      RESERVED                         @G860PXK       */\n  int            psanuin          : 1, /* -        CPU TIMER CANNOT BE USED                      */\n                                  : 7;\n  int            psartm1r;             /* -            STOSM PSARTM1S,X'00' INSTRUCTION     @P5A */\n  unsigned char  psapcpsw\u00c48\u00dc;          /* -      TEMPORARY OLD PSW STORAGE FOR PROGRAM           */\n  void          *psaatcvt;             /* -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY       */\n  void          *psawtcod;             /* -         WAIT STATE CODE LOADED               @LHC    */\n  void          *psascwa;              /* -         ADDRESS OF SUPERVISOR CONTROL CPU            */\n  void          *psarsmsa;             /* -         ADDRESS OF RSM CPU RELATED WORK              */\n  unsigned char  psascpsw\u00c44\u00dc;          /* - MODEL PSW                                            */\n  void          *_filler30;            /* -         MODEL PSW SECOND HALF  (MDC325)  @G50DP9A    */\n  unsigned char  psasmpsw\u00c44\u00dc;          /* - SRB DISPATCH PSW  (MDC326)      @G50DP9A             */\n  void          *_filler31;            /* -         DISPATCH PSW SECOND HALF                     */\n  unsigned char  psarv428\u00c464\u00dc;         /* -     RESERVED                         @G860PXK        */\n  unsigned char  psapswsv\u00c48\u00dc;          /* -      PSW SAVE AREA FOR DISPATCHER AND ACR            */\n  unsigned char  psacput\u00c48\u00dc;           /* -      SUPERVISOR CPU TIMER SAVE AREA                  */\n  struct \u00e4\n    unsigned char  _psapcfb1;     /* -      FUNCTION VALUE  (MDC484)         @G383P9A   */\n    int            _psapctrr : 1, /* -        TRACE INTERRUPT RECURSION        @YA01102 */\n                   _psapcmt  : 1, /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A */\n                             : 6;\n    int            _psapcp1  : 1, /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A */\n                   _psapcp2  : 1, /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A */\n                   _psapcde  : 1, /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A */\n                   _psapclv  : 1, /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A */\n                   _psapcp3  : 1, /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A */\n                   _psapcp4  : 1, /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A */\n                   _psapcpfr : 1, /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA */\n                   _psapcavr : 1; /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA */\n    int            _psapcdnv : 1, /* -        DUCT validity indicator              @PBA */\n                   _psapclsr : 1, /* -        IEAVLSIH has invoked IARPTEPR and    @PEA */\n                             : 6;\n    \u00fc psapcfun;\n  short int      psapcps2;             /* -         PASID AT TIME OF SECOND LEVEL    @G383P9A    */\n  unsigned char  psarv47e\u00c42\u00dc;          /* -      RESERVED                         @G860PXK       */\n  unsigned char  psapcwka\u00c424\u00dc;         /* -     Work area for PC FLIH. Must be                   */\n  short int      psapcps3;             /* -         PASID AT TIME OF THIRD LEVEL     @G383P9A    */\n  short int      psapcps4;             /* -         PASID AT TIME OF FOURTH LEVEL                */\n  struct \u00e4\n    unsigned char  _filler32;     /* -      RESERVED - FIRST BYTE OF PSAMODEW           */\n    int            _psanss   : 1, /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A */\n                   _psaprsrb : 1, /* -        Preemptable-class SRB                @LPA */\n                             : 6;\n    unsigned char  _psamodeh;     /* -      SECOND HALFWORD OF PSAMODEW.     @G383P9A   */\n    unsigned char  _psamode;      /* -      SYSTEM MODE INDICATOR AND DISPLACEMENT      */\n    \u00fc psamodew;\n  unsigned char  _filler33\u00c43\u00dc;         /* -      RESERVED                         @G860PXK       */\n  unsigned char  psastnsm;             /* -      STNSM TARGET USED BY EXIT PROLOGUE              */\n  int            psalkjw;              /* -         LOCAL LOCK RELEASE SRB JOURNAL   @G383P9A    */\n  struct \u00e4\n    int            _psafzero;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    int            _filler34;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    \u00fc psadzero;\n  int            psalkjw2;             /* -         CMS LOCK RELEASE JOURNAL WORD.   @G383P9A    */\n  void          *psalkpt;              /* -   SETLOCK TEST,TYPE=HIER                             */\n  unsigned char  psarv4b8\u00c44\u00dc;          /* -      RESERVED.                            @LDC       */\n  void          *psalit2;              /* -  POINTER TO THE EXTENDED LOCK         @LDA           */\n  void          *psaecltp;             /* -   POINTER TO THE EXTENDED CURRENT      @LDA          */\n  struct \u00e4\n    int            _psablsdi : 1, /* -        BMFLSD LOCK INDICATOR.               @LGA */\n                   _psaxdsi  : 1, /* -        XCFDS LOCK INDICATOR.                @LEA */\n                   _psaxresi : 1, /* -        XCFRES LOCK INDICATOR.               @LEA */\n                   _psaxqi   : 1, /* -        XCFQ LOCK INDICATOR.                 @LEA */\n                   _psaeseti : 1, /* -        ETRSET LOCK INDICATOR.               @LFA */\n                   _psaixsci : 1, /* -        IXLSCH LOCK INDICATOR.               @LMC */\n                   _psaixshi : 1, /* -        IXLSHR LOCK INDICATOR.               @LMC */\n                   _psaixdsi : 1; /* -        IXLDS LOCK INDICATOR.                @LLA */\n    int            _psaixlli : 1, /* -        IXLSHELL LOCK INDICATOR.             @LMC */\n                   _psauluti : 1, /* -        IOSULUT LOCK INDICATOR.              @LJA */\n                   _psaixlri : 1, /* -        IXLREQST LOCK INDICATOR.             @05A */\n                   _psawlmri : 1, /* -        WLMRES LOCK INDICATOR                @LRA */\n                   _psawlmqi : 1, /* -        WLMQ LOCK INDICATOR.                 @LRA */\n                   _psacntxi : 1, /* -        CONTEXT LOCK INDICATOR               @LRA */\n                   _psaregsi : 1, /* -        REGSRV LOCK INDICATOR.               @LRA */\n                             : 1;\n    unsigned char  _psalheb2;     /* -      BYTE 2 OF THE CURRENT LOCK HELD      @LDA   */\n    unsigned char  _psalheb3;     /* -      BYTE 3 OF THE CURRENT LOCK HELD      @LDA   */\n    \u00fc psaclhse;\n  unsigned char  psarv4c8\u00c48\u00dc;          /* -    RESERVED FOR FUTURE LOCK EXPANSION.  @LDA         */\n  unsigned char  psarv4d0\u00c4184\u00dc;        /* -    RESERVED.                            @LDA         */\n  unsigned char  psahwfb;              /* -      HARDWARE FLAG BYTE.                  @L3A       */\n  unsigned char  psacr0cb;             /* -      CR0 CONTROL BYTE USED BY PROTPSA MACRO          */\n  unsigned char  _filler35\u00c42\u00dc;         /* -      RESERVED                         @G50NP9A       */\n  int                             : 3,\n                 psacr0en         : 1, /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA        */\n                                  : 1,\n                 psacr0fp         : 1, /* -        IF 1, extended floating point is              */\n                 psacr0vi         : 1, /* -        IF 1, vector instructions are                 */\n                                 : 25;\n  int            psapccr0;             /* -         PROGRAM CHECK FLIH CR0 SAVE AREA             */\n  int                             : 3,\n                 psarpen          : 1, /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA        */\n                                 : 28;\n  struct \u00e4\n    short int      _psatkn; /* -         CURRENT STACK TOKEN     (MDC610) @G383P9A */\n    short int      _psaasd; /* -         CURRENT STACK ADDRESS SPACE               */\n    int            _psasel; /* -         CURRENT STACK ELEMENTS ADDRESS            */\n    \u00fc psastke;\n  unsigned char  psaskpsw\u00c44\u00dc;          /* PCLINK STACK/UNSTACK MODEL PSW                         */\n  void          *psaskps2;             /* -         PCLINK PSW ADDRESS      (MDC604) @G383P9A    */\n  void          *psacpcls;             /* -      PCLINK WORKAREA - CURRENT STACK      @L9C       */\n  unsigned char  psarv5ac\u00c44\u00dc;          /* -      RESERVED.                            @L9A       */\n  void          *psascfs;              /* -      ADDRESS OF THE SUPERVISOR CONTROL    @L8C       */\n  void          *psapawa;              /* -      ADDRESS OF PC/AUTH WORK AREA.        @L8A       */\n  int            psaiopr          : 1, /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A     */\n                 psaiorty         : 1, /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A     */\n                                  : 6;\n  unsigned char  _filler36\u00c43\u00dc;         /* -      RESERVED                         @G860PXK       */\n  unsigned char  psacr0m1\u00c44\u00dc;          /* MASK OF CR0 WITH EXTERNAL MASK BITS  @04A              */\n  unsigned char  psacr0m2\u00c44\u00dc;          /* MASK OF CR0 WITH ONLY EXTERNAL MASK  @04A              */\n  unsigned char  psarv5c4\u00c4148\u00dc;        /* -    RESERVED                             @03A         */\n  double         psatime;              /* -         CURRENT SRB'S ACCUMULATED CPU TIME   @01C    */\n  int            psasrsav;             /* -        ADDRESS OF CURRENT FRR STACK     @G383P9A     */\n  unsigned char  psaesc8\u00c412\u00dc;          /* -     Save area for IEAVESC8               @LPA        */\n  struct \u00e4\n    struct \u00e4\n      short int      _psadpkmi; /* -        PKM IMAGE                        @G387PXH */\n      short int      _psadsasi; /* -        SECONDARY ASID                   @G387PXH */\n      \u00fc psadcr3i;\n    struct \u00e4\n      short int      _psadaxi;  /* -        AUTHORIZATION INDEX              @G387PXH */\n      short int      _psadpasi; /* -        PRIMARY ASID                     @G387PXH */\n      \u00fc psadcr4i;\n    \u00fc psadxmsi;\n  unsigned char  psadsars\u00c464\u00dc;         /* -     DISPATCHER ACCESS REGISTER SAVE AREA @L9C        */\n  struct \u00e4\n    struct \u00e4\n      short int      _psadpkm; /* -        DISPATCHER PROGRAM KEY MASK SAVE AREA */\n      short int      _psadsas; /* -        DISPATCHER SECONDARY ASID SAVE AREA   */\n      \u00fc psadcr3;\n    struct \u00e4\n      short int      _psadax;  /* -        DISPATCHER  AUTHORIZATION        @G383P9A */\n      short int      _psadpas; /* -        DISPATCHER PRIMARY ASID SAVE     @G383P9A */\n      \u00fc psadcr4;\n    \u00fc psadxmsv;\n  union \u00e4\n    double         _psadtsav;    /* -            CPU TIMER VALUE AT LAST DISPATCH,    @01C */\n    unsigned char  _psaff6c0\u00c48\u00dc; /* INITIALIZE FIELD PSADTSAV     @ZMC3284                 */\n    \u00fc _psa_union28;\n  unsigned char  psarv6c8\u00c4232\u00dc;        /* -    RESERVED                         @G860PXK         */\n  unsigned char  psadatlk\u00c448\u00dc;         /* -    AREA FOR DAT-OFF ASSIST LINKAGE CODE              */\n  void          *psadatof;             /* -         REAL STORAGE ADDRESS OF THE DAT-OFF          */\n  int            psadatln;             /* -        LENGTH OF THE DAT-OFF INDEX TABLE             */\n  union \u00e4\n    unsigned char  _psarv7e8\u00c44\u00dc; /* -          RESERVED FOR SYSTEM TRACE.       @G860PXK */\n    unsigned char  _psaff7e8\u00c44\u00dc; /* INITIALIZE FIELD PSARV7E8     @ZMC3284               */\n    \u00fc _psa_union29;\n  int            psatroff         : 1, /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS         */\n                                  : 7;\n  unsigned char  _filler37\u00c43\u00dc;         /* -      RESERVED FOR SYSTEM TRACE.       @G860PXK       */\n  void          *psatbvtr;             /* -         REAL ADDRESS OF SYSTEM TRACE BUFFER          */\n  void          *psatbvtv;             /* -         VIRTUAL ADDRESS CORRESPONDING TO             */\n  void          *psatrvt;              /* -  ADDRESS OF SYSTEM TRACE VECTOR                      */\n  void          *psatot;               /* -  ADDRESS OF SYSTEM TRACE OPERAND                     */\n  union \u00e4\n    struct \u00e4\n      double         _psaus2st;     /* START SECOND SET OF ASSIGNED     @G383PXU */\n      unsigned char  _filler38\u00c48\u00dc;\n      \u00fc _psa_struct27;\n    struct \u00e4\n      int            _psacdsae; /* CALLDISP REGISTER 14 SAVE AREA   @G383PXU */\n      int            _psacdsaf; /* CALLDISP REGISTER 15 SAVE AREA   @G383PXU */\n      int            _psacdsa0; /* CALLDISP REGISTER 0  SAVE AREA   @G383PXU */\n      int            _psacdsa1; /* CALLDISP REGISTER 1  SAVE AREA   @G383PXU */\n      \u00fc psacdsav;\n    \u00fc _psa_union30;\n  int            psagspsw;             /* GLOBAL SCHEDULE SYSTEM MASK SAVE @ZA63674              */\n  int            psagsrgs;             /* GLOBAL SCHEDULE REGISTER SAVE    @ZA63674              */\n  unsigned char  psarv818\u00c44\u00dc;          /* -     RESERVED                             @PAC        */\n  int            psasv01r;             /* IEAVTRG1 register 1 save area.       @PAA              */\n  int            psasv14r;             /* IEAVTRG1 register 14 save area.      @PAA              */\n  int            psaems2r;             /* -        REGISTER SAVE AREA                            */\n  struct \u00e4\n    int            _psatrgr0; /* -        TRACE REGISTER 0 SAVE AREA.      @G860PXH */\n    int            _psatrgr1; /* -        TRACE REGISTER 1 SAVE AREA.      @G860PXH */\n    int            _psatrgr2; /* -        TRACE REGISTER 2 SAVE AREA.      @G860PXH */\n    int            _psatrgr3; /* -        TRACE REGISTER 3 SAVE AREA.      @G860PXH */\n    int            _psatrgr4; /* -        TRACE REGISTER 4 SAVE AREA.      @G860PXH */\n    int            _psatrgr5; /* -        TRACE REGISTER 5 SAVE AREA.      @G860PXH */\n    int            _psatrgr6; /* -        TRACE REGISTER 6 SAVE AREA.      @G860PXH */\n    int            _psatrgr7; /* -        TRACE REGISTER 7 SAVE AREA.      @G860PXH */\n    int            _psatrgr8; /* -        TRACE REGISTER 8 SAVE AREA.      @G860PXH */\n    int            _psatrgr9; /* -        TRACE REGISTER 9 SAVE AREA.      @G860PXH */\n    int            _psatrgra; /* -        TRACE REGISTER 10 SAVE AREA.     @G860PXH */\n    int            _psatrgrb; /* -        TRACE REGISTER 11 SAVE AREA.     @G860PXH */\n    int            _psatrgrc; /* -        TRACE REGISTER 12 SAVE AREA.     @G860PXH */\n    int            _psatrgrd; /* -        TRACE REGISTER 13 SAVE AREA.     @G860PXH */\n    int            _psatrgre; /* -        TRACE REGISTER 14 SAVE AREA.     @G860PXH */\n    int            _psatrgrf; /* -        TRACE REGISTER 15 SAVE AREA.     @G860PXH */\n    \u00fc psatrsav;\n  unsigned char  psarv868\u00c464\u00dc;         /* -     RESERVED.                            @L8C        */\n  union \u00e4\n    unsigned char  _psagsav\u00c464\u00dc;  /* -         REGISTER SAVE AREA USED BY   */\n    unsigned char  _psaff8a8\u00c464\u00dc; /* INITIALIZE FIELD PSAGSAV      @ZMC3284 */\n    \u00fc _psa_union31;\n  int            psascrg1;             /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psascrg2;             /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psagpreg\u00c43\u00dc;          /* -       REGISTER SAVE AREA FOR SVC FLIH                */\n  int            psarsreg;             /* -        RESTART FLIH REGISTER SAVE       @G860PXK     */\n  int            psapcgr8;             /* -        PROGRAM FLIH REGISTER 8 SAVE AREA             */\n  int            psapcgr9;             /* -        PROGRAM FLIH REGISTER 9 SAVE AREA             */\n  struct \u00e4\n    int            _psapcgra; /* -        PROGRAM FLIH REGISTER 10 SAVE AREA */\n    int            _psapcgrb; /* -        PROGRAM FLIH REGISTER 11 SAVE AREA */\n    \u00fc psapcgab;\n  struct \u00e4\n    int            _psalkr0;  /* -        IEAVELK REGISTER 0 SAVE AREA     @G860PXK */\n    int            _psalkr1;  /* -        IEAVELK REGISTER 1 SAVE AREA     @G860PXK */\n    int            _psalkr2;  /* -        IEAVELK REGISTER 2 SAVE AREA     @G860PXK */\n    int            _psalkr3;  /* -        IEAVELK REGISTER 3 SAVE AREA     @G860PXK */\n    int            _psalkr4;  /* -        IEAVELK REGISTER 4 SAVE AREA     @G860PXK */\n    int            _psalkr5;  /* -        IEAVELK REGISTER 5 SAVE AREA     @G860PXK */\n    int            _psalkr6;  /* -        IEAVELK REGISTER 6 SAVE AREA     @G860PXK */\n    int            _psalkr7;  /* -        IEAVELK REGISTER 7 SAVE AREA     @G860PXK */\n    int            _psalkr8;  /* -        IEAVELK REGISTER 8 SAVE AREA     @G860PXK */\n    int            _psalkr9;  /* -        IEAVELK REGISTER 9 SAVE AREA     @G860PXK */\n    int            _psalkr10; /* -        IEAVELK REGISTER 10 SAVE AREA    @G860PXK */\n    int            _psalkr11; /* -        IEAVELK REGISTER 11 SAVE AREA    @G860PXK */\n    int            _psalkr12; /* -        IEAVELK REGISTER 12 SAVE AREA    @G860PXK */\n    int            _psalkr13; /* -        IEAVELK REGISTER 13 SAVE AREA    @G860PXK */\n    int            _psalkr14; /* -        IEAVELK REGISTER 14 SAVE AREA    @G860PXK */\n    int            _psalkr15; /* -        IEAVELK REGISTER 15 SAVE AREA    @G860PXK */\n    \u00fc psalksa;\n  union \u00e4\n    unsigned char  _psaslsa\u00c472\u00dc;  /* -         SINGLE LEVEL SAVE AREA USED BY DISABLED */\n    unsigned char  _psaff950\u00c472\u00dc; /* INITIALIZE FIELD PSASLSA       @ZMC3284           */\n    \u00fc _psa_union32;\n  union \u00e4\n    unsigned char  _psajstsa\u00c464\u00dc; /* -     SAVE AREA FOR JOB STEP TIMING        @H1A */\n    unsigned char  _psaff998\u00c464\u00dc; /* INITIALIZE FIELD PSAJSTSA         @H1A          */\n    \u00fc _psa_union33;\n  union \u00e4\n    struct \u00e4\n      double         _psaus2nd;      /* END SECOND SET OF ASSIGNED           @H1M */\n      unsigned char  _filler39\u00c456\u00dc;\n      \u00fc _psa_struct28;\n    struct \u00e4\n      int            _psaslkr0; /* -        IEAVESLK REGISTER 0 SAVE AREA        @P4A */\n      int            _psaslkr1; /* -        IEAVESLK REGISTER 1 SAVE AREA        @P4A */\n      int            _psaslkr2; /* -        IEAVESLK REGISTER 2 SAVE AREA        @P4A */\n      int            _psaslkr3; /* -        IEAVESLK REGISTER 3 SAVE AREA        @P4A */\n      int            _psaslkr4; /* -        IEAVESLK REGISTER 4 SAVE AREA        @P4A */\n      int            _psaslkr5; /* -        IEAVESLK REGISTER 5 SAVE AREA        @P4A */\n      int            _psaslkr6; /* -        IEAVESLK REGISTER 6 SAVE AREA        @P4A */\n      int            _psaslkr7; /* -        IEAVESLK REGISTER 7 SAVE AREA        @P4A */\n      int            _psaslkr8; /* -        IEAVESLK REGISTER 8 SAVE AREA        @P4A */\n      int            _psaslkr9; /* -        IEAVESLK REGISTER 9 SAVE AREA        @P4A */\n      int            _psaslkra; /* -        IEAVESLK REGISTER 10 SAVE AREA       @P4A */\n      int            _psaslkrb; /* -        IEAVESLK REGISTER 11 SAVE AREA       @P4A */\n      int            _psaslkrc; /* -        IEAVESLK REGISTER 12 SAVE AREA       @P4A */\n      int            _psaslkrd; /* -        IEAVESLK REGISTER 13 SAVE AREA       @P4A */\n      int            _psaslkre; /* -        IEAVESLK REGISTER 14 SAVE AREA       @P4A */\n      int            _psaslkrf; /* -        IEAVESLK REGISTER 15 SAVE AREA       @P4A */\n      \u00fc psaslksa;\n    \u00fc _psa_union34;\n  unsigned char  psarva18\u00c436\u00dc;         /* -    RESERVED                             @P4A         */\n  unsigned char  psascsav\u00c464\u00dc;         /* IEAVESC0 save area                   @P7A              */\n  int            psaschda         : 1, /* Schedule is active                   @LPA              */\n                 psamcha          : 1, /* Machine Check is active              @06A              */\n                 psarsta          : 1, /* Restart is active                    @06A              */\n                 psaegra          : 1, /* Global Recovery is active            @06A              */\n                 psartma          : 1, /* Selected RTM functions are active    @06A              */\n                                  : 3;\n  unsigned char  psarva7d\u00c43\u00dc;          /* Reserved for future use - SC1C5      @P8A              */\n  unsigned char  psarva80\u00c4188\u00dc;        /* -    RESERVED                             @P8C         */\n  void          *psagsch7;             /* -  ENABLED GLOBAL SCHEDULE ENTRY                       */\n  void          *psagsch8;             /* -  DISABLED GLOBAL SCHEDULE ENTRY                      */\n  void          *psalsch1;             /* -  ENABLED SCHEDULE ENTRY POINT                        */\n  void          *psalsch2;             /* -  DISABLED SCHEDULE ENTRY POINT                       */\n  void          *psasvt;               /* -  ADDRESS OF SUPERVISOR VECTOR TABLE                  */\n  void          *psasvtx;              /* Address of Supervisor Vector Table   @LNC              */\n  unsigned char  psarvb54\u00c484\u00dc;         /* -     Reserved                             @LNC        */\n  int            psaxstk;              /* -        OFFSET TO AND LENGTH OF THE ARRAY OF          */\n  unsigned char  psarvbac\u00c484\u00dc;         /* -     RESERVED                         @G387PXH        */\n  unsigned char  psastak\u00c4856\u00dc;         /* -   NORMAL FRR STACK                     @D5C          */\n  unsigned char  _filler40\u00c4168\u00dc;       /* -   RESERVED FOR EXPANSION OF            @D5C          */\n  double         psaend;               /* -           END OF PSA            (MDC612)   @G383P9A  */\n  \u00fc;\n\n#define flcrnpsw                _psa_union1.flcippsw._flcrnpsw\n#define flceippsw               _psa_union1.flcesame._flceippsw\n#define flcropsw                _psa_union2.flciccw1._flcropsw\n#define flceiccw1               _psa_union2._flceiccw1\n#define flccvt                  _psa_union3.flciccw2._flccvt\n#define flceiccw2               _psa_union3._flceiccw2\n#define flceopsw                _psa_union4._psa_struct1._flceopsw\n#define flcsopsw                _psa_union4._psa_struct1._flcsopsw\n#define flcpopsw                _psa_union4._psa_struct1._flcpopsw\n#define flcmopsw                _psa_union4._psa_struct1._flcmopsw\n#define flciopsw                _psa_union4._psa_struct1._flciopsw\n#define flccvt2                 _psa_union4._psa_struct1._flccvt2\n#define flcenpsw                _psa_union4._psa_struct1._flcenpsw\n#define flcsnpsw                _psa_union4._psa_struct1._flcsnpsw\n#define flcpnpsw                _psa_union4._psa_struct1._flcpnpsw\n#define flcmnpsw                _psa_union4._psa_struct1._flcmnpsw\n#define flcinpsw                _psa_union4._psa_struct1._flcinpsw\n#define flcer018                _psa_union4._flcer018\n#define psaeparm                _psa_union5._psaeparm\n#define flceeparm               _psa_union5._flceeparm\n#define psaspad                 _psa_union6.psaeepsw._psaspad\n#define flceicod                _psa_union6.psaeepsw._flceicod\n#define flcecpuad               _psa_union6._psa_struct2._flcecpuad\n#define flceeicode              _psa_union6._psa_struct2._flceeicode\n#define flcsilcb                _psa_union7.psaespsw._flcsilcb\n#define flcsvcn                 _psa_union7.psaespsw._flcsvcn\n#define flcesdata               _psa_union7._flcesdata\n#define flcesdatabyte0          _psa_union7._psa_struct3._flcesdatabyte0\n#define flcesilcb                _psa_union7._psa_struct4._flcesilcb\n#define flcesicode              _psa_union7._psa_struct4._flcesicode\n#define flcpilcb                _psa_union8.psaeppsw._flcpilcb\n#define psaeecod                _psa_union8.psaeppsw.flcpicod._psaeecod\n#define psapiper                _psa_union8.psaeppsw.flcpicod._psapiper\n#define psapimc                _psa_union8.psaeppsw.flcpicod._psapimc\n#define psapipc                _psa_union8.psaeppsw.flcpicod._psapipc\n#define flcteaxm                        _psa_union8.psaeppsw.flctea._flcteaxm\n#define flcteab3                _psa_union8.psaeppsw.flctea.flcdxc._flcteab3\n#define flcepdata               _psa_union8._psa_struct5._flcepdata\n#define flcepdatabyte0          _psa_union8._psa_struct6._flcepdatabyte0\n#define flcepilcb                _psa_union8._psa_struct7._flcepilcb\n#define flcepicode              _psa_union8._psa_struct7._flcepicode\n#define flcepicode0             _psa_union8._psa_struct8._flcepicode0\n#define flcepiper             _psa_union8._psa_struct8._flcepiper\n#define flcepimc             _psa_union8._psa_struct8._flcepimc\n#define flcepipc             _psa_union8._psa_struct8._flcepipc\n#define flcepiinformation       _psa_union8._psa_struct8._flcepiinformation\n#define flcedxc                 _psa_union8._psa_struct9._flcedxc\n#define flcemcnum               _psa_union9._flcemcnum\n#define flcmcnum                _psa_union9._psa_struct10._flcmcnum\n#define flcpercd                _psa_union10._psa_struct11._flcpercd\n#define flcpswb4                _psa_union10._psa_struct11._flcpswb4\n#define flcepercode             _psa_union10._flcepercode\n#define flcepersb            _psa_union10._psa_struct12._flcepersb\n#define flceperif            _psa_union10._psa_struct12._flceperif\n#define flcepersa            _psa_union10._psa_struct12._flcepersa\n#define flcepersar            _psa_union10._psa_struct12._flcepersar\n#define flceperpsw4            _psa_union10._psa_struct12._flceperpsw4\n#define flceperatmidvalid            _psa_union10._psa_struct12._flceperatmidvalid\n#define flceperpsw32            _psa_union10._psa_struct12._flceperpsw32\n#define flceperpsw5            _psa_union10._psa_struct12._flceperpsw5\n#define flceperpsw16            _psa_union10._psa_struct12._flceperpsw16\n#define flceperpsw17            _psa_union10._psa_struct12._flceperpsw17\n#define flceperasceid            _psa_union10._psa_struct12._flceperasceid\n#define flcper                  _psa_union11._psa_struct13._flcper\n#define flcmtrcd                _psa_union11._psa_struct13._flcmtrcd\n#define flceper                 _psa_union11._flceper\n#define flceperw0               _psa_union11._psa_struct14._flceperw0\n#define flceperw1               _psa_union11._psa_struct14._flceperw1\n#define flctearn                _psa_union12._flctearn\n#define flceeaid                _psa_union12._flceeaid\n#define flcperrn                _psa_union13._flcperrn\n#define flceperaid              _psa_union13._flceperaid\n#define psaesame                 _psa_union14._psaesame\n#define flceloeme               _psa_union14._flceloeme\n#define psampl                  _psa_union15._psampl\n#define flcempl                 _psa_union15._flcempl\n#define flceteid                _psa_union16._flceteid\n#define flcetea                 _psa_union16._flcetea\n#define flcepealc                _psa_union16._psa_struct15._flcepealc\n#define flcesopi                _psa_union16._psa_struct15._flcesopi\n#define flceteastd                _psa_union16._psa_struct15._flceteastd\n#define flceteasninfo           _psa_union16._flceteasninfo\n#define flceteasn               _psa_union16._psa_struct16._flceteasn\n#define flcetepcinfo            _psa_union16._flcetepcinfo\n#define flcepcnum               _psa_union16._psa_struct17._flcepcnum\n#define flcsid                  _psa_union17.flciocdp._flcsid\n#define flciofp                 _psa_union17.flciocdp._flciofp\n#define flcessid                _psa_union17._psa_struct18._flcessid\n#define flceiointparm           _psa_union17._psa_struct18._flceiointparm\n#define flcfacl                 _psa_union18._flcfacl\n#define flcefacilitieslist      _psa_union18._flcefacilitieslist\n#define flceesamen3 _psa_union18._psa_struct19._flceesamen3\n#define flceesameinstalled _psa_union18._psa_struct19._flceesameinstalled\n#define flceesame _psa_union18._psa_struct19._flceesame\n#define flcefacilitieslistbyte1 _psa_union18._psa_struct19._flcefacilitieslistbyte1\n#define flcefacilitieslistbyte2 _psa_union18._psa_struct19._flcefacilitieslistbyte2\n#define flcefacilitieslistbyte3 _psa_union18._psa_struct19._flcefacilitieslistbyte3\n#define flcesar                 _psa_union19._flcesar\n#define flcer0d4                _psa_union19._flcer0d4\n#define flcctsa                 _psa_union20._psa_struct20._flcctsa\n#define flcccsa                 _psa_union20._psa_struct20._flcccsa\n#define flcer0d8                _psa_union20._flcer0d8\n#define flcmcic                 _psa_union21._flcmcic\n#define flcemcic                _psa_union21._flcemcic\n#define flcfsa                  _psa_union22._psa_struct21._flcfsa\n#define flcefsa                 _psa_union22._flcefsa\n#define flcfla                  _psa_union23._psa_struct22._flcfla\n#define flcrv110                _psa_union23._psa_struct22._flcrv110\n#define flcer100                _psa_union23._flcer100\n#define flcarsav                _psa_union24._flcarsav\n#define flceropsw               _psa_union24._psa_struct23._flceropsw\n#define flceeopsw               _psa_union24._psa_struct23._flceeopsw\n#define flcesopsw               _psa_union24._psa_struct23._flcesopsw\n#define flcepopsw               _psa_union24._psa_struct23._flcepopsw\n#define flcfpsav                _psa_union25._flcfpsav\n#define flcemopsw               _psa_union25._psa_struct24._flcemopsw\n#define flceiopsw               _psa_union25._psa_struct24._flceiopsw\n#define flcgrsav                _psa_union26._flcgrsav\n#define flcer180                _psa_union26._psa_struct25._flcer180\n#define flcernpsw               _psa_union26._psa_struct25._flcernpsw\n#define flceenpsw               _psa_union26._psa_struct25._flceenpsw\n#define flccrsav                _psa_union27._flccrsav\n#define flcesnpsw               _psa_union27._psa_struct26._flcesnpsw\n#define flcepnpsw               _psa_union27._psa_struct26._flcepnpsw\n#define flcemnpsw               _psa_union27._psa_struct26._flcemnpsw\n#define flceinpsw               _psa_union27._psa_struct26._flceinpsw\n#define psapsa                  flchdend._psapsa\n#define psacpupa                flchdend._psacpupa\n#define psacpula                flchdend._psacpula\n#define psaio                 psasuper._psaio\n#define psasvc                 psasuper._psasvc\n#define psaext                 psasuper._psaext\n#define psapi                 psasuper._psapi\n#define psalock                 psasuper._psalock\n#define psadisp                 psasuper._psadisp\n#define psatctl                 psasuper._psatctl\n#define psatype6                 psasuper._psatype6\n#define psaipcri                 psasuper._psaipcri\n#define psasvcr                 psasuper._psasvcr\n#define psasvcrr                 psasuper._psasvcrr\n#define psaacr                 psasuper._psaacr\n#define psartm                 psasuper._psartm\n#define psalcr                 psasuper._psalcr\n#define psaiosup                 psasuper._psaiosup\n#define psaspr                 psasuper._psaspr\n#define psaesta                 psasuper._psaesta\n#define psarsm                 psasuper._psarsm\n#define psaulcms                 psasuper._psaulcms\n#define psaslip                 psasuper._psaslip\n#define psaldwt                 psasuper._psaldwt\n#define psasmf                 psasuper._psasmf\n#define psaesar                 psasuper._psaesar\n#define psadispl                psaclht.psaclht1._psadispl\n#define psaasml                 psaclht.psaclht1._psaasml\n#define psasalcl                psaclht.psaclht1._psasalcl\n#define psaiossl                psaclht.psaclht1._psaiossl\n#define psarsmdl                psaclht.psaclht1._psarsmdl\n#define psaiosul                psaclht.psaclht1._psaiosul\n#define psarvlk1                psaclht.psaclht1._psarvlk1\n#define psarv29c                psaclht.psaclht1._psarv29c\n#define psarv2a0                psaclht.psaclht1._psarv2a0\n#define psatpacl                psaclht.psaclht1._psatpacl\n#define psaoptl                 psaclht.psaclht1._psaoptl\n#define psarsmgl                psaclht.psaclht1._psarsmgl\n#define psavfixl                psaclht.psaclht1._psavfixl\n#define psaasmgl                psaclht.psaclht1._psaasmgl\n#define psarsmsl                psaclht.psaclht1._psarsmsl\n#define psarsmxl                psaclht.psaclht1._psarsmxl\n#define psarsmal                psaclht.psaclht1._psarsmal\n#define psavpagl                psaclht.psaclht1._psavpagl\n#define psarsmcl                psaclht.psaclht1._psarsmcl\n#define psarvlk2                psaclht.psaclht1._psarvlk2\n#define psarsmex                 psaclht.psaclht2._psarsmex\n#define psatrcex                psaclht.psaclht2._psatrcex\n#define psaiosex                 psaclht.psaclht2._psaiosex\n#define psalks2                 psaclht.psaclht2._psalks2\n#define psarvlk4                psaclht.psaclht2._psarvlk4\n#define psalks3                 psaclht.psaclht3._psalks3\n#define psarvlk5                psaclht.psaclht3._psarvlk5\n#define psacmsl                 psaclht.psaclht4._psacmsl\n#define psalks4                psaclht.psaclht4._psalks4\n#define psarvlk6                psaclht.psaclht4._psarvlk6\n#define psacpuli                psahlhi.psaclhs._psacpuli\n#define psasum                psahlhi.psaclhs._psasum\n#define psarsmli                psahlhi.psaclhs._psarsmli\n#define psatrcei                psahlhi.psaclhs._psatrcei\n#define psaiosi                psahlhi.psaclhs._psaiosi\n#define psarsmci                psahlhi.psaclhs._psarsmci\n#define psarsmgi                psahlhi.psaclhs._psarsmgi\n#define psavfixi                psahlhi.psaclhs._psavfixi\n#define psaasmgi                psahlhi.psaclhs._psaasmgi\n#define psarsmsi                psahlhi.psaclhs._psarsmsi\n#define psarsmxi                psahlhi.psaclhs._psarsmxi\n#define psarsmai                psahlhi.psaclhs._psarsmai\n#define psavpagi                psahlhi.psaclhs._psavpagi\n#define psadspli                psahlhi.psaclhs._psadspli\n#define psaasmli                psahlhi.psaclhs._psaasmli\n#define psasalli                psahlhi.psaclhs._psasalli\n#define psaiosli                psahlhi.psaclhs._psaiosli\n#define psarsmdi                psahlhi.psaclhs._psarsmdi\n#define psaiouli                psahlhi.psaclhs._psaiouli\n#define psatpali                psahlhi.psaclhs._psatpali\n#define psasrmli                psahlhi.psaclhs._psasrmli\n#define psacmsli                psahlhi.psaclhs._psacmsli\n#define psalclli                psahlhi.psaclhs._psalclli\n#define psacstk                 psarsvt.psarsvte._psacstk\n#define psanstk                 psarsvt.psarsvte._psanstk\n#define psasstk                 psarsvt.psarsvte._psasstk\n#define psassav                 psarsvt.psarsvte._psassav\n#define psamstk                 psarsvt.psarsvte._psamstk\n#define psamsav                 psarsvt.psarsvte._psamsav\n#define psapstk                 psarsvt.psarsvte._psapstk\n#define psapsav                 psarsvt.psarsvte._psapsav\n#define psaestk1                psarsvt.psarsvte._psaestk1\n#define psaesav1                psarsvt.psarsvte._psaesav1\n#define psaestk2                psarsvt.psarsvte._psaestk2\n#define psaesav2                psarsvt.psarsvte._psaesav2\n#define psaestk3                psarsvt.psarsvte._psaestk3\n#define psaesav3                psarsvt.psarsvte._psaesav3\n#define psarstk                 psarsvt.psarsvte._psarstk\n#define psarsav                 psarsvt.psarsvte._psarsav\n#define psapcfb1                psapcfun._psapcfb1\n#define psapctrr                psapcfun._psapctrr\n#define psapcmt                psapcfun._psapcmt\n#define psapcp1                psapcfun._psapcp1\n#define psapcp2                psapcfun._psapcp2\n#define psapcde                psapcfun._psapcde\n#define psapclv                psapcfun._psapclv\n#define psapcp3                psapcfun._psapcp3\n#define psapcp4                psapcfun._psapcp4\n#define psapcpfr                psapcfun._psapcpfr\n#define psapcavr                psapcfun._psapcavr\n#define psapcdnv                psapcfun._psapcdnv\n#define psapclsr                psapcfun._psapclsr\n#define psanss                psamodew._psanss\n#define psaprsrb                psamodew._psaprsrb\n#define psamodeh                psamodew._psamodeh\n#define psamode                 psamodew._psamode\n#define psafzero                psadzero._psafzero\n#define psablsdi                psaclhse._psablsdi\n#define psaxdsi                psaclhse._psaxdsi\n#define psaxresi                psaclhse._psaxresi\n#define psaxqi                psaclhse._psaxqi\n#define psaeseti                psaclhse._psaeseti\n#define psaixsci                psaclhse._psaixsci\n#define psaixshi                psaclhse._psaixshi\n#define psaixdsi                psaclhse._psaixdsi\n#define psaixlli                psaclhse._psaixlli\n#define psauluti                psaclhse._psauluti\n#define psaixlri                psaclhse._psaixlri\n#define psawlmri                psaclhse._psawlmri\n#define psawlmqi                psaclhse._psawlmqi\n#define psacntxi                psaclhse._psacntxi\n#define psaregsi                psaclhse._psaregsi\n#define psalheb2                psaclhse._psalheb2\n#define psalheb3                psaclhse._psalheb3\n#define psatkn                  psastke._psatkn\n#define psaasd                  psastke._psaasd\n#define psasel                  psastke._psasel\n#define psadpkmi                psadxmsi.psadcr3i._psadpkmi\n#define psadsasi                psadxmsi.psadcr3i._psadsasi\n#define psadaxi                 psadxmsi.psadcr4i._psadaxi\n#define psadpasi                psadxmsi.psadcr4i._psadpasi\n#define psadpkm                 psadxmsv.psadcr3._psadpkm\n#define psadsas                 psadxmsv.psadcr3._psadsas\n#define psadax                  psadxmsv.psadcr4._psadax\n#define psadpas                 psadxmsv.psadcr4._psadpas\n#define psadtsav                _psa_union28._psadtsav\n#define psaff6c0                _psa_union28._psaff6c0\n#define psarv7e8                _psa_union29._psarv7e8\n#define psaff7e8                _psa_union29._psaff7e8\n#define psaus2st                _psa_union30._psa_struct27._psaus2st\n#define psacdsae                _psa_union30.psacdsav._psacdsae\n#define psacdsaf                _psa_union30.psacdsav._psacdsaf\n#define psacdsa0                _psa_union30.psacdsav._psacdsa0\n#define psacdsa1                _psa_union30.psacdsav._psacdsa1\n#define psatrgr0                psatrsav._psatrgr0\n#define psatrgr1                psatrsav._psatrgr1\n#define psatrgr2                psatrsav._psatrgr2\n#define psatrgr3                psatrsav._psatrgr3\n#define psatrgr4                psatrsav._psatrgr4\n#define psatrgr5                psatrsav._psatrgr5\n#define psatrgr6                psatrsav._psatrgr6\n#define psatrgr7                psatrsav._psatrgr7\n#define psatrgr8                psatrsav._psatrgr8\n#define psatrgr9                psatrsav._psatrgr9\n#define psatrgra                psatrsav._psatrgra\n#define psatrgrb                psatrsav._psatrgrb\n#define psatrgrc                psatrsav._psatrgrc\n#define psatrgrd                psatrsav._psatrgrd\n#define psatrgre                psatrsav._psatrgre\n#define psatrgrf                psatrsav._psatrgrf\n#define psagsav                 _psa_union31._psagsav\n#define psaff8a8                _psa_union31._psaff8a8\n#define psapcgra                psapcgab._psapcgra\n#define psapcgrb                psapcgab._psapcgrb\n#define psalkr0                 psalksa._psalkr0\n#define psalkr1                 psalksa._psalkr1\n#define psalkr2                 psalksa._psalkr2\n#define psalkr3                 psalksa._psalkr3\n#define psalkr4                 psalksa._psalkr4\n#define psalkr5                 psalksa._psalkr5\n#define psalkr6                 psalksa._psalkr6\n#define psalkr7                 psalksa._psalkr7\n#define psalkr8                 psalksa._psalkr8\n#define psalkr9                 psalksa._psalkr9\n#define psalkr10                psalksa._psalkr10\n#define psalkr11                psalksa._psalkr11\n#define psalkr12                psalksa._psalkr12\n#define psalkr13                psalksa._psalkr13\n#define psalkr14                psalksa._psalkr14\n#define psalkr15                psalksa._psalkr15\n#define psaslsa                 _psa_union32._psaslsa\n#define psaff950                _psa_union32._psaff950\n#define psajstsa                _psa_union33._psajstsa\n#define psaff998                _psa_union33._psaff998\n#define psaus2nd                _psa_union34._psa_struct28._psaus2nd\n#define psaslkr0                _psa_union34.psaslksa._psaslkr0\n#define psaslkr1                _psa_union34.psaslksa._psaslkr1\n#define psaslkr2                _psa_union34.psaslksa._psaslkr2\n#define psaslkr3                _psa_union34.psaslksa._psaslkr3\n#define psaslkr4                _psa_union34.psaslksa._psaslkr4\n#define psaslkr5                _psa_union34.psaslksa._psaslkr5\n#define psaslkr6                _psa_union34.psaslksa._psaslkr6\n#define psaslkr7                _psa_union34.psaslksa._psaslkr7\n#define psaslkr8                _psa_union34.psaslksa._psaslkr8\n#define psaslkr9                _psa_union34.psaslksa._psaslkr9\n#define psaslkra                _psa_union34.psaslksa._psaslkra\n#define psaslkrb                _psa_union34.psaslksa._psaslkrb\n#define psaslkrc                _psa_union34.psaslksa._psaslkrc\n#define psaslkrd                _psa_union34.psaslksa._psaslkrd\n#define psaslkre                _psa_union34.psaslksa._psaslkre\n#define psaslkrf                _psa_union34.psaslksa._psaslkrf\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "PSMFREC": {"ttr": 7889, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct psmfrec \u00e4\n  void          *psmfrec_msg_type;      /* message type      */\n  unsigned char  psmfrec_type;          /* recordy type      */\n  unsigned char  psmfrec_source;        /* record source     */\n  unsigned char  psmfrec_flag1;         /* firts flag        */\n  unsigned char  psmfrec_flag2;         /* send flag         */\n  unsigned char  psmfrec_stck\u00c48\u00dc;       /* clock value       */\n  unsigned char  psmfrec_id_jobname\u00c48\u00dc; /* job name          */\n  unsigned char  psmfrec_id_jobrdr\u00c48\u00dc;  /* reader time stamp */\n  unsigned char  psmfrec_id_system\u00c44\u00dc;  /* system name       */\n  unsigned char  psmfrec_id_userid\u00c48\u00dc;  /* system name       */\n  unsigned char  psmfrec_dsn\u00c444\u00dc;\n  unsigned char  psmfrec_member\u00c48\u00dc;\n  unsigned char  psmfrec_newdsn\u00c444\u00dc;\n  unsigned char  psmfrec_path\u00c464\u00dc;      /* path              */\n  unsigned char  psmfrec_newpath\u00c464\u00dc;   /* path              */\n  \u00fc;\n\n/* Values for field \"psmfrec_type\" */\n#define psmfrec_type_update        1\n#define psmfrec_type_delete        2\n#define psmfrec_type_rename        3\n#define psmfrec_type_add_member    11\n#define psmfrec_type_delete_member 12\n#define psmfrec_type_rename_member 13\n#define psmfrec_type_update_path   21\n#define psmfrec_type_delete_path   22\n#define psmfrec_type_rename_path   23\n\n/* Values for field \"psmfrec_source\" */\n#define psmfrec_source_smf15       15\n#define psmfrec_source_smf17       17\n#define psmfrec_source_smf18       18\n#define psmfrec_source_smf42       42\n#define psmfrec_source_smf92       92\n\n/* Values for field \"psmfrec_newpath\" */\n#define psmfrec_length             0x108\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QFSSCBS": {"ttr": 8473, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_QFSSCBS\n#define INCLUDE_QFSSCBS\n#pragma pack(packed)\n#include \"qfss62mu/qfsscvt.hpp\"\n#include \"qfss62mu/ftr.hpp\"\n#include \"qfss62mu/ftl.hpp\"\n#include \"qfss62mu/fts.hpp\"\n#include \"qfss62mu/ioqe.hpp\"\n#include \"qfss62mu/cmd_lu.hpp\"\n#include \"qfss62mu/ftrselectd.hpp\"\ntypedef struct qfsscvt * qfsscvtP;\ntypedef struct ftr * ftrP;\ntypedef struct fts * ftsP;\ntypedef struct ftl * ftlP;\ntypedef struct lu  * luP;\ntypedef struct ftrselectd * ftrselectdP;\nstruct link_entry \u00e4\n\tunsigned char name\u00c48\u00dc;\n  void *        addr;\n\tsize_t        length;\n\tunsigned char flag\u00c44\u00dc;\n\t\u00fc;\ntypedef link_entry * link_entryP;\nstruct cvtlist_entry\n\t\u00e4\n\t void * ecb;\n\t void * tcb;\n\t void * cvt;\n\t\u00fc;\ntypedef cvtlist_entry * cvtlist_entryP;\n#pragma pack(reset)\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QFSSCVT": {"ttr": 8609, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qfsscvt \u00e4\n  unsigned char  qfssname\u00c48\u00dc;                      /* system nane                                */\n  unsigned char  qfssid\u00c48\u00dc;                        /* id seq                                     */\n  unsigned char  qcvtrel\u00c48\u00dc;                       /* RELEASE                                    */\n  unsigned char  _filler1\u00c48\u00dc;\n  void          *qnsccvt;                          /* own address                                */\n  void          *qcvtlist;                         /* CVT list start addr                        */\n  void          *qcvtioq;                          /* common IOQE list                           */\n  unsigned char  qcvt_jobname\u00c48\u00dc;                  /* job name                                   */\n  unsigned char  qcvt_jobid\u00c48\u00dc;                    /* job id.                                    */\n  unsigned char  qcvt_status_program\u00c424\u00dc;          /* program status                             */\n  unsigned char  qcvt_resource_priv;               /* priv/nonpriv                               */\n  unsigned char  qcvt_resource_connfss;            /* connected                                  */\n  unsigned char  qcvt_resource_ecbpost;            /* ECB posted                                 */\n  unsigned char  qcvt_resource_order;              /* order                                      */\n  unsigned char  qcvt_resource_disconnect;         /* disconnect                                 */\n  unsigned char  qcvt_resource_stopfss;            /* stopfss                                    */\n  unsigned char  qcvt_resource_wait;               /* in wait status                             */\n  unsigned char  qcvt_resource_qnet;               /* qnet is running                            */\n  unsigned char  qcvt_resource_stat;               /* stat is running                            */\n  unsigned char  qcvt_resource_fss;                /* FSS support YES = ff NO = 0                */\n  unsigned char  qcvt_resource_ssi;                /* SSI support  YES = ff NO = 0               */\n  unsigned char  _filler2;\n  unsigned char  qnvtloadl_qfssqnt\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssqntaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssqntlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssqntflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssmsgp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssmsgpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssmsgplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssmsgpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsscmdp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsscmdpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsscmdplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsscmdpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsscomp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsscompaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsscomplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsscompflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssinbd\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssinbdaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssinbdlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssinbdflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssioq\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssioqaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssioqlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssioqflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssoqe\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssoqeaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssoqelgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssoqeflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssoutb\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssoutbaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssoutblgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssoutbflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssow\u00c48\u00dc;              /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssowaddr;             /* + LINKAGE                                  */\n  int            qnvtloadl_qfssowlgth;             /* + module length                            */\n  unsigned char  qnvtloadl_qfssowflag\u00c44\u00dc;          /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssdsp\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssdspaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssdsplgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssdspflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssproc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprocaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssproclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprocflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssprof\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprofaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssproflgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprofflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssbsam\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssbsamaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssbsamlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssbsamflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssqsam\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssqsamaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssqsamlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssqsamflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssvsam\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssvsamaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssvsamlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssvsamflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssque\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssqueaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssquelgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssqueflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssquew\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssquewaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssquewlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssquewflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssscnp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssscnpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssscnplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssscnpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssdlr\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssdlraddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssdlrlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsssdlrflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstp\u00c48\u00dc;              /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstpaddr;             /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstplgth;             /* + module length                            */\n  unsigned char  qnvtloadl_qfsstpflag\u00c44\u00dc;          /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssapc\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssapcaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssapclgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssapcflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstcp\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstcpaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstcplgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsstcpflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsst310\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsst310addr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsst310lgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsst310flag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstbpx\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstbpxaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstbpxlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsstbpxflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfile\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfileaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfilelgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssfileflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfsa\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfsaaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfsalgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssfsaflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssjf\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssjfaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssjflgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsssjfflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssdrvp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssdrvpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssdrvplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssdrvpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssafpc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssafpcaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssafpclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssafpcflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssafpd\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssafpdaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssafpdlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssafpdflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssafpe\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssafpeaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssafpelgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssafpeflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsspcnt\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsspcntaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsspcntlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsspcntflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssarch\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssarchaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssarchlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssarchflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssdbg\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssdbgaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssdbglgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssdbgflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsslink\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsslinkaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsslinklgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsslinkflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssbcbp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssbcbpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssbcbplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssbcbpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssserp\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssserpaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssserplgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssserpflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssyn\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssynaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssynlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsssynflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsslrec\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsslrecaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsslreclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsslrecflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssstat\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssstataddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssstatlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssstatflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssstrq\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssstrqaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssstrqlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssstrqflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsschn\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsschnaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsschnlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsschnflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfss__\u00c48\u00dc;              /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfss__addr;             /* + LINKAGE                                  */\n  int            qnvtloadl_qfss__lgth;             /* + module length                            */\n  unsigned char  qnvtloadl_qfss__flag\u00c44\u00dc;          /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsspipe\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsspipeaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsspipelgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsspipeflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssuprm\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssuprmaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssuprmlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssuprmflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsstags\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsstagsaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsstagslgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsstagsflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssprxx\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprxxaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssprxxlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprxxflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_irxexec\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_irxexecaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_irxexeclgth;            /* + module length                            */\n  unsigned char  qnvtloadl_irxexecflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_irxinit\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_irxinitaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_irxinitlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_irxinitflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_irxterm\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_irxtermaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_irxtermlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_irxtermflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_irxexcom\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_irxexcomaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_irxexcomlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_irxexcomflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssrexx\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssrexxaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssrexxlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssrexxflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssxml\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssxmladdr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssxmllgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssxmlflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssfltr\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssfltraddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssfltrlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssfltrflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_pphsmem\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_pphsmemaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_pphsmemlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_pphsmemflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_ikjeff02\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_ikjeff02addr;           /* + LINKAGE                                  */\n  int            qnvtloadl_ikjeff02lgth;           /* + module length                            */\n  unsigned char  qnvtloadl_ikjeff02flag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswwi\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsswwiaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsswwilgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsswwiflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswwa\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsswwaaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfsswwalgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfsswwaflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssprun\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssprunaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssprunlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssprunflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsswork\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssworkaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssworklgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssworkflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssmqs\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssmqsaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_qfssmqslgth;            /* + module length                            */\n  unsigned char  qnvtloadl_qfssmqsflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbback\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbbackaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbbacklgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbbackflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbcomm\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbcommaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbcommlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbcommflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbclos\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbclosaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbcloslgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbclosflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbcon\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbconaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbconlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbconflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbdisc\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbdiscaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbdisclgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbdiscflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbget\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbgetaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbgetlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbgetflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbinq\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbinqaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbinqlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbinqflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbopen\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbopenaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbopenlgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbopenflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbput\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbputaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbputlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbputflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbput1\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbput1addr;           /* + LINKAGE                                  */\n  int            qnvtloadl_csqbput1lgth;           /* + module length                            */\n  unsigned char  qnvtloadl_csqbput1flag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_csqbset\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_csqbsetaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_csqbsetlgth;            /* + module length                            */\n  unsigned char  qnvtloadl_csqbsetflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qnvtloadl_qfsssapi\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfsssapiaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfsssapilgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfsssapiflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_qfssexci\u00c48\u00dc;            /* + MODULE &MODULE                           */\n  void          *qnvtloadl_qfssexciaddr;           /* + LINKAGE                                  */\n  int            qnvtloadl_qfssexcilgth;           /* + module length                            */\n  unsigned char  qnvtloadl_qfssexciflag\u00c44\u00dc;        /* + trace flags                              */\n  unsigned char  qnvtloadl_dfhxcis\u00c48\u00dc;             /* + MODULE &MODULE                           */\n  void          *qnvtloadl_dfhxcisaddr;            /* + LINKAGE                                  */\n  int            qnvtloadl_dfhxcislgth;            /* + module length                            */\n  unsigned char  qnvtloadl_dfhxcisflag\u00c44\u00dc;         /* + trace flags                              */\n  unsigned char  qcvtjes\u00c44\u00dc;                       /* default JES name                           */\n  unsigned char  qcvtqsysout\u00c44\u00dc;                   /* queue sysouts under USER                   */\n  unsigned char  qcvtfssidc\u00c44\u00dc;                    /* FSS id in char form                        */\n  unsigned char  qcvtfss\u00c44\u00dc;                       /* FSS id (second halfword zero)              */\n  unsigned char  qcvtoken\u00c44\u00dc;                      /* JES start token                            */\n  unsigned char  qcvt_xml\u00c48\u00dc;                      /* XML option                                 */\n  unsigned char  qcvt_xmldef\u00c4128\u00dc;                 /* XML default definition                     */\n  struct \u00e4\n    void          *_filler3;  /* order routine */\n    \u00fc qcvtfsi_cdp;\n  void          *_filler4;                         /* address of the order routine               */\n  void          *_filler5;                         /* post routine                               */\n  void          *_filler6;                         /* address of the post routine                */\n  unsigned char  qnssname\u00c44\u00dc;                      /* system nane                                */\n  void          *qnssvt;                           /* address of the SSVT                        */\n  void          *qnscvt;                           /* address of the SSCVT                       */\n  struct \u00e4\n    void          *_qnpclxct; /* LX count */\n    \u00fc qnpclxl;\n  void          *qnpclx;                           /* LX value                                   */\n  struct \u00e4\n    void          *_qnpcetct; /* ET count */\n    \u00fc qnpcetl;\n  void          *qnpcettk;                         /* ET token                                   */\n  void          *qnpcnum;                          /* PC number                                  */\n  unsigned char  wlmsubsys\u00c48\u00dc;                     /* WLM subsystem name                         */\n  void          *wlmtkn;                           /* WLM connection token                       */\n  unsigned char  applenv\u00c432\u00dc;                      /* wlm AE                                     */\n  unsigned char  wlmqtype\u00c48\u00dc;                      /* wlm queue type                             */\n  unsigned char  wlmtype;                          /* wlm type flag                              */\n  unsigned char  _filler7\u00c43\u00dc;                      /* reserved                                   */\n  unsigned char  wlmaest;                          /* ae status                                  */\n  unsigned char  _filler8\u00c43\u00dc;\n  void          *wlm_queue_reserved;               /* wlm reserved                               */\n  unsigned char  qcvtioq_type\u00c410\u00dc;                 /* +default MODE64                            */\n  unsigned char  _filler9\u00c46\u00dc;\n  void          *qcvtioq_elength;                  /* +ioqe length in 4K                         */\n  unsigned char  _filler10\u00c44\u00dc;\n  void          *qcvtioq_entries;                  /* +number of entries                         */\n  void          *qcvtioq_global;                   /* +work area address                         */\n  unsigned char  qcvtioq_dsppref\u00c44\u00dc;               /* +DIV DSP PREF                              */\n  unsigned char  qcvtioq_divdd\u00c48\u00dc;                 /* +DIV dd name                               */\n  void          *pipesize;                         /* default 512K                               */\n  int            pipewait;                         /* default 3 min                              */\n  int            runaway;                          /* default 60 min                             */\n  int            taskrun;                          /* default 60 min                             */\n  int            dirdsp_size;                      /* directory DSP size                         */\n  int            dirdsp_dsp;                       /* directory DSP dsp                          */\n  void          *qcvtstrq;                         /* STREQ anchor                               */\n  void          *qcvtstat;                         /* STAT anchor                                */\n  int            qcvt_stat_wait;                   /* status update unit                         */\n  unsigned char  qcvt_stat_statusfile\u00c444\u00dc;         /* status cluster                             */\n  int            qcvt_stat_statuskeep;             /* status keep value                          */\n  unsigned char  qcvt_stat_onoff\u00c43\u00dc;               /* stautus ON/OFF                             */\n  unsigned char  qcvt_enablecaf\u00c43\u00dc;                /* enable CAF yes/no                          */\n  unsigned char  _filler11\u00c42\u00dc;\n  unsigned char  qcvt_unique\u00c48\u00dc;                   /* unique jobid                               */\n  void          *qcvt_tiot\u00c42\u00dc;                     /* tiot/JFCB list pointer                     */\n  unsigned char  qndsnam\u00c48\u00dc;                       /* DATA SPACE NAME                            */\n  void          *qndsplimit;                       /* 512 mbyte default                          */\n  unsigned char  qndstkn\u00c48\u00dc;                       /* data space token                           */\n  void          *qndsalet;                         /* ALET for data space                        */\n  void          *qndsorig;                         /* orig addr                                  */\n  int            qndsblks;                         /* size of the data space in 4K 64MB          */\n  void          *qndsmax;                          /* max dataspace addr                         */\n  int            qndsincr;                         /* incr in data space (BCB size'              */\n  void          *qndswwa;                          /* WWA cache DSP                              */\n  void          *qcvt_unique_dsid\u00c42\u00dc;              /* unique dsid                                */\n  void          *qcvtecbp;                         /* stop/modify ECB address                    */\n  void          *qcvtcibp;                         /* CIB block address                          */\n  void          *qcvtperm;                         /* perm task table pointer                    */\n  void          *qcvt_fsi_ordera;                  /* order parm list address                    */\n  unsigned char  qcvt_stoporder;                   /* stop order flag for FSS                    */\n  unsigned char  _filler12\u00c43\u00dc;\n  void          *qcvttcb_qnet;                     /* QNET task TCB addr                         */\n  void          *qcvttcb_stat;                     /* STAT task TCB addr                         */\n  void          *qcvtecb_dump;                     /* DUMP ecb                                   */\n  void          *qcvtecb_fss;                      /* FSS ecb                                    */\n  void          *qcvtecb_modify;                   /* stop/modify ECB                            */\n  void          *qcvtecb_qnet;                     /* QNET task ecb                              */\n  void          *qcvtecb_stat;                     /* STAT task ecb                              */\n  void          *wlongw;                           /* 5 min wait before timer int                */\n  void          *qcvtecbs;                         /* address FSS order ECB                      */\n  void          *_filler13;                        /* addresss Modify ECB                        */\n  void          *_filler14;                        /* address of QNET task ECB                   */\n  void          *_filler15;                        /* address of STAT task ECB                   */\n  void          *_filler16;                        /* address timer ECB                          */\n  void          *_filler17\u00c464\u00dc;                    /* address FSA subtask ECB                    */\n  void          *qnmn_ecb_stop;                    /* stop ECB for QFSSQNET task                 */\n  void          *qnmnecbp;                         /* addr of the stop/modify ECB                */\n  void          *qnmnecbt;                         /* addr of the timer ECB                      */\n  void          *qnmnecbl;                         /* addr of the select ECB                     */\n  void          *qnmnecbm;                         /* addr of the MQS event ECB                  */\n  void          *qnmnecbsapi;                      /* addr of SAPI ECB                           */\n  void          *qnmnecbexci;                      /* addr of EXCI ECB                           */\n  void          *qnmnecbdb2;                       /* addr of Db2  ECB                           */\n  void          *qnmnecbe;                         /* addr of EOM ecb                            */\n  void          *qnmnecbr;                         /* addr of RQS ecb                            */\n  void          *qnmnecbi;                         /* addr of inbound tran ECB                   */\n  void          *qnmnecbo;                         /* addr of outbound ECB                       */\n  void          *qnmnecbs\u00c4128\u00dc;                    /* subtask stop ECB address list              */\n  void          *qnmnioqe;                         /* IOQE block addr for main                   */\n  void          *qnmnioqe_appc;                    /* IOQE block addr for APPC main              */\n  void          *qnmnioqe_tcpip;                   /* IOQE block addr for TCPIP main             */\n  void          *qnmnioqe_file;                    /* IOQE block addr for FILE main              */\n  void          *qnmnioqe_mqs;                     /* IOQE block addr for MQS main               */\n  void          *qnmnioqe_sapi;                    /* IOQE block addr for SAPI main              */\n  void          *qnmnioqe_exci;                    /* IOQE block addr for EXCI main              */\n  void          *qnmnioqe_db2;                     /* IOQE block addr for DB2  main              */\n  void          *qnmnlast;                         /* last ECB in use                            */\n  void          *qneomecb;                         /* EOM ecb                                    */\n  void          *qnrqsecb;                         /* RQS ecb                                    */\n  void          *qnselecb;                         /* select ECB                                 */\n  unsigned char  _filler18\u00c4100\u00dc;                   /* for tcp/ip work                            */\n  void          *qnmqsecb;                         /* MQS event ecb                              */\n  void          *qnsapiecb;                        /* SAPI event ecb                             */\n  void          *qnexciecb;                        /* exci event ecb                             */\n  void          *qndb2ecb;                         /* db2 event ecb                              */\n  void          *qnmntcbm;                         /* main TCB addr                              */\n  void          *qnpmcode;                         /* start of the code                          */\n  struct \u00e4\n    unsigned char  _qnmnstkn\u00c48\u00dc; /* address space token */\n    void          *_qnmnascb;    /* ASCB addr           */\n    void          *_qnmnaecb;    /* start ECB addr      */\n    void          *_qnmnresv\u00c42\u00dc; /* reserved            */\n    \u00fc qnmnoda;\n  void          *qneomls;                          /* start of EOMlist                           */\n  void          *qneomle;                          /* end of the EOM list                        */\n  void          *qnrqsls;                          /* start add of RQS list                      */\n  void          *qnrqssiz;                         /* size of an RQS                             */\n  void          *qnrqsle;                          /* end of the RQS list                        */\n  void          *qnrqslmax;                        /* max used address in the RQS list           */\n  void          *qneoml\u00c416\u00dc;                       /* end of memory ASID list                    */\n  unsigned char  profddnm\u00c48\u00dc;                      /* profile DD name                            */\n  unsigned char  lockflag\u00c44\u00dc;                      /* lock flag : YES/NO                         */\n  unsigned char  system\u00c48\u00dc;                        /* system profile name                        */\n  void          *__prof_sysa\u00c42\u00dc;                   /* system profile start addr                  */\n  void          *__prof_rcva\u00c42\u00dc;                   /* receiver profile start addr                */\n  void          *__prof_liba\u00c42\u00dc;                   /* library profile start addr                 */\n  void          *__prof_browse;                    /* browse pointer                             */\n  unsigned char  __prof_dsn\u00c444\u00dc;                   /* profile dataset name                       */\n  unsigned char  __prof_mem\u00c48\u00dc;                    /* profile member name                        */\n  unsigned char  __prof_ddname\u00c48\u00dc;                 /* profile dd name                            */\n  unsigned char  __prof_typ\u00c44\u00dc;                    /* profile type - option                      */\n  void          *__prof_count;                     /* lu count                                   */\n  unsigned char  __prof_sys\u00c48\u00dc;                    /* system profile                             */\n  unsigned char  __prof_lib\u00c48\u00dc;                    /* library profile                            */\n  unsigned char  __prof_rcv\u00c48\u00dc;                    /* application profile                        */\n  void          *__prof_msga;                      /* message pointer                            */\n  unsigned char  userid\u00c48\u00dc;                        /* system default user id                     */\n  unsigned char  jes2\u00c44\u00dc;                          /* default jes name                           */\n  void          *qcvt_debug_gtffid;                /* GTF trace fid                              */\n  int            qcvt_debug_count;                 /* no debug                                   */\n  int            qcvt_link_count;                  /* no link                                    */\n  unsigned char  qfssfilterdd\u00c48\u00dc;                  /* filter DD                                  */\n  void          *qfssfilter;                       /* filter block                               */\n  unsigned char  qfssdebugdd\u00c48\u00dc;                   /* debug DD                                   */\n  void          *qfssdebuglist;                    /* debug block                                */\n  void          *qfsstrace_table;                  /* trace table size in elemnets               */\n  void          *qfsstrace_entry;                  /* elemnent size                              */\n  void          *qfsstrace_start;                  /* trace table start address                  */\n  void          *qfsstrace_actual;                 /* trace table actual address                 */\n  void          *qfsstrace_end;                    /* trace table end address                    */\n  void          *qfsstrace_qsam;                   /* TRCONMSG file QSAM pointer                 */\n  void          *qcvt_request_id;                  /* request id                                 */\n  void          *qcvt_traceon_lock;                /* internal trace lock                        */\n  unsigned char  qcvt_traceon_dd\u00c48\u00dc;               /* trace on message                           */\n  unsigned char  qcvt_traceon_maj\u00c48\u00dc;\n  unsigned char  qcvt_traceon_min\u00c48\u00dc;\n  unsigned char  qnvtst\u00c424\u00dc;                       /* vtam status                                */\n  void          *qnvtacba;                         /* VTAM acb addr                              */\n  struct \u00e4\n    unsigned char  _filler19;  /* ACB IDENTIFICATION              */\n    unsigned char  _filler20;  /* ACB SUBTYPE             X04SVHS */\n    short int      _filler21;  /* ACB LENGTH             X03004HS */\n    \u00fc vtamacb;\n  void          *_filler22;                        /* AMB LIST POINTER                           */\n  void          *_filler23;                        /* PTR TO VTAM EXTENSION  X03004HS            */\n  unsigned char  _filler24;                        /* MACRF(1)                X04SVHS            */\n  unsigned char  _filler25;                        /* MACRF(2)                X04SVHS            */\n  unsigned char  _filler26;                        /* NO OF CONCURRENT        X04SVHS            */\n  unsigned char  _filler27;                        /* NUMBER OF STRINGS       X04SVHS            */\n  short int      _filler28;                        /* NUMBER OF DATA BUFFERS                     */\n  short int      _filler29;                        /* NUMBER OF INDEX BUFFERS                    */\n  unsigned char  _filler30;                        /* MACRF(3)                X04SVHS            */\n  unsigned char  _filler31;                        /* MACRF(4)                X04SVHS            */\n  short int      _filler32;                        /* JES BUFFER POOL/NUMBER  X04SVHS            */\n  unsigned char  _filler33;                        /* RECFM=A                                    */\n  unsigned char  _filler34;                        /* CONTROL CHARACTER TYPE                     */\n  unsigned char  _filler35\u00c42\u00dc;                     /* DSORG=ACB                                  */\n  void          *_filler36;                        /* X04SVHS                                    */\n  void          *_filler37;                        /* PASSWORD POINTER                           */\n  void          *_filler38;                        /* EXIT LIST POINTER                          */\n  unsigned char  _filler39;                        /* INDICATE VTAM            X03004            */\n  unsigned char  _filler40\u00c47\u00dc;                     /* PAD WITH ZEROS           X03004            */\n  unsigned char  _filler41;                        /* OFLAGS                                     */\n  unsigned char  _filler42;                        /* ERFLAGS                                    */\n  unsigned char  _filler43;                        /* INFLGS(1)               X04SVHS            */\n  unsigned char  _filler44;                        /* INFLGS(2)               X04SVHS            */\n  void          *_filler45;                        /* OPENJ JFCB POINTER                         */\n  void          *_filler46;                        /* BUFFER SPACE                               */\n  short int      _filler47;                        /* BLOCK SIZE                                 */\n  short int      _filler48;                        /* RECORD SIZE                                */\n  void          *_filler49;                        /* USER WORKAREA POINTER                      */\n  void          *_filler50;                        /* CONTROL BLOCK MANIPULATION                 */\n  void          *_filler51;                        /* PTR TO APPL NAME         X03004            */\n  unsigned char  _filler52\u00c44\u00dc;                     /* SET RETURN CODE(VTAM)    X03004            */\n  unsigned char  _filler53\u00c42\u00dc;                     /* RETURN TO CALLER(VTAM)   X03004            */\n  unsigned char  _filler54;                        /* ACBOPT1 FLAGS         @KFA @T1C            */\n  unsigned char  _filler55;                        /* ACBOPT2 FLAGS              @R1C            */\n  int            _filler56;                        /* RESERVED                 X03004            */\n  void          *_filler57;                        /* NIB ADDRESS            @G69AKJP            */\n  void          *_filler58;                        /* AMSI ADDRESS           @D5K4791            */\n  void          *_filler59;                        /* RIVL ADDRESS           @D5K4791            */\n  int            _filler60;                        /* USER FIELD             @D5K4791            */\n  void          *_filler61;                        /* APPLVCTR ADDRESS           @L2A            */\n  unsigned char  vapplid;                          /* applid length                              */\n  unsigned char  _filler62\u00c48\u00dc;                     /* application ID                             */\n  unsigned char  qnvtlul;                          /* LU name length                             */\n  unsigned char  qnvtlunm\u00c48\u00dc;                      /* applid                                     */\n  unsigned char  qnvtlgmd\u00c48\u00dc;                      /* logmode name                               */\n  unsigned char  _filler63\u00c42\u00dc;\n  int            allocwt;                          /* wait time for allocation in 1/100s         */\n  int            alloctry;                         /* retry count for allocation                 */\n  int            appctimeout;                      /* 1 min appc timeout                         */\n  int            waitow;                           /* half minute                                */\n  int            waitoc;                           /* max 10 minute wait for VTAM                */\n  unsigned char  gapplid\u00c48\u00dc;                       /* general application id                     */\n  unsigned char  qcvt_printerparms\u00c444\u00dc;            /* default printerparms dataset               */\n  int            qcvt_smfrec;                      /* SMF record number                          */\n  unsigned char  qcvt_smfext\u00c44\u00dc;                   /* SMF extension                              */\n  void          *qnet_tcpip_global;                /* global area pointer                        */\n  unsigned char  qnet_tcpip_tcpip\u00c48\u00dc;              /* tcpip address space name                   */\n  unsigned char  qnet_tcpip_version\u00c44\u00dc;            /* tcpip address space name                   */\n  unsigned char  qnet_tcpip_stcname\u00c48\u00dc;            /* started task name                          */\n  struct \u00e4\n    void          *_qnet_tcpip_clientid_domain; /* AF_INET */\n    \u00fc qnet_tcpip_clientid;\n  unsigned char  qnet_tcpip_clientid_name\u00c48\u00dc;      /* address space id                           */\n  unsigned char  qnet_tcpip_clientid_task\u00c48\u00dc;      /* task id                                    */\n  unsigned char  qnet_tcpip_clientid_reserved\u00c420\u00dc; /* reserved                                   */\n  short int      _filler64;                        /* reserved                                   */\n  short int      qnet_tcpip_port;                  /* port number                                */\n  short int      qnet_tcpip_socket;                /* main server socket                         */\n  short int      _filler65;                        /* reserved                                   */\n  short int      qnet_tcpip_www_port;              /* port number                                */\n  unsigned char  _filler66\u00c42\u00dc;\n  struct \u00e4\n    short int      _qnet_tcpip_name_family;      /* INET address family */\n    short int      _qnet_tcpip_name_port;        /* port number         */\n    void          *_qnet_tcpip_name_address;     /* IP address          */\n    unsigned char  _qnet_tcpip_name_reserved\u00c48\u00dc; /* reserved            */\n    \u00fc qnet_tcpip_name;\n  short int      _filler67;                        /* max socket number                          */\n  short int      qnet_tcpip_maxsoc;                /* max socket number                          */\n  void          *qnet_tcpip_maxsno;                /* gotten max socket number                   */\n  void          *qnet_tcpip_backlog;               /* backlog default                            */\n  unsigned char  qnet_tcpip_hostaddr\u00c416\u00dc;          /* host addr in EBCDIC                        */\n  unsigned char  qnet_tcpip_hostname\u00c432\u00dc;          /* host name in EBCDIC                        */\n  unsigned char  qnettp;                           /* TP flag                                    */\n  unsigned char  _filler68\u00c43\u00dc;\n  void          *qnet_server_trace;                /* trace flag                                 */\n  void          *qnet_server_cache;                /* cache flag                                 */\n  void          *wloga;                            /* ADDRESS OF COPIED DCB (BELOW 16MB)         */\n  void          *wlogad;                           /* ADDRESS OF DCB BLOCK TO COPY               */\n  void          *routcde;\n  unsigned char  qfsslrdd\u00c48\u00dc;                      /* lrec dd nmae                               */\n  unsigned char  msgsupr\u00c48\u00dc;                       /* supress id's                               */\n  unsigned char  qcvtlogger_streamname\u00c426\u00dc;        /* logger logstream name                      */\n  unsigned char  qcvtlogger_streamtoken\u00c416\u00dc;       /* logger stream token                        */\n  unsigned char  qncpkey\u00c48\u00dc;                       /* primary key                                */\n  unsigned char  qncpskey\u00c48\u00dc;                      /* secondary key                              */\n  unsigned char  qcvt_set_cmd\u00c48\u00dc;                  /* set command                                */\n  unsigned char  qcvtdebug\u00c48\u00dc;                     /* module name                                */\n  unsigned char  qcvtdebugs\u00c48\u00dc;                    /* debug switch                               */\n  unsigned char  qcvtlinks\u00c48\u00dc;                     /* link switch                                */\n  unsigned char  _filler69\u00c42\u00dc;\n  void          *qcvt_seta;                        /* command pointer                            */\n  unsigned char  qcvt_perm;                        /* permanent task flag                        */\n  unsigned char  _filler70\u00c43\u00dc;                     /* not in use                                 */\n  int            maxtask_max;                      /* maxtask max                                */\n  int            maxtask_act;                      /* actual maxtask                             */\n  void          *maxtask_act_qnt;                  /* actual maxtask for QNT                     */\n  void          *maxtask_ecb;                      /* maxtask ECB                                */\n  int            highwtm_q;                        /* high water mark for req queue              */\n  int            lowwtm_q;                         /* low water mark for req queue               */\n  unsigned char  qcvt_mqs_major\u00c48\u00dc;                /* MQ major  ENQ name                         */\n  struct \u00e4\n    void          *_itiqecb; /* queue ecb */\n    \u00fc itiioqe;\n  void          *itiqstr;                          /* start of queue                             */\n  void          *itiqend;                          /* end of queue                               */\n  void          *itiqlast;                         /* last entry                                 */\n  void          *itiqa;                            /* actual entry                               */\n  unsigned char  _filler71\u00c4256\u00dc\u00c48\u00dc;\n  struct \u00e4\n    void          *_itoqecb; /* queue ecb */\n    \u00fc itoioqe;\n  void          *itoqstr;                          /* start of queue                             */\n  void          *itoqend;                          /* end of queue                               */\n  void          *itoqlast;                         /* last entry                                 */\n  void          *itoqa;                            /* actual entry                               */\n  unsigned char  _filler72\u00c4256\u00dc\u00c48\u00dc;\n  unsigned char  qcvt_fsa\u00c464\u00dc\u00c4100\u00dc;                /* FSABLK's                                   */\n  unsigned char  qcvtssib\u00c436\u00dc;                     /* SSIB for connect                           */\n  unsigned char  qcvtssob\u00c428\u00dc;                     /* SSOB for CONNECT                           */\n  struct \u00e4\n    struct \u00e4\n      void          *_filler73;\n      \u00fc _key0;\n    \u00fc qcvt_set;\n  unsigned char  _filler74;\n  unsigned char  _filler75\u00c417\u00dc;\n  short int      _filler76;\n  unsigned char  _filler77;\n  short int      _filler78;\n  unsigned char  _filler79;\n  void          *_filler80;\n  void          *_filler81;\n  void          *_filler82;\n  void          *_filler83;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler84;\n      \u00fc _key1;\n    \u00fc _def1;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler85;\n      \u00fc _key2;\n    \u00fc qcvt_set_sub;\n  unsigned char  _filler86;\n  unsigned char  _filler87\u00c417\u00dc;\n  short int      _filler88;\n  unsigned char  _filler89;\n  short int      _filler90;\n  unsigned char  _filler91;\n  void          *_filler92;\n  void          *_filler93;\n  void          *_filler94;\n  void          *_filler95;\n  unsigned char  _filler96;\n  unsigned char  values01001\u00c43\u00dc;\n  unsigned char  _filler97;\n  unsigned char  values01002\u00c42\u00dc;\n  unsigned char  _filler98;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler99;\n      \u00fc _key3;\n    \u00fc _def3;\n  unsigned char  _filler100;\n  unsigned char  _filler101\u00c417\u00dc;\n  short int      _filler102;\n  unsigned char  _filler103;\n  short int      _filler104;\n  unsigned char  _filler105;\n  void          *_filler106;\n  void          *_filler107;\n  void          *_filler108;\n  void          *_filler109;\n  unsigned char  _filler110;\n  unsigned char  values01011\u00c43\u00dc;\n  unsigned char  _filler111;\n  unsigned char  values01012\u00c42\u00dc;\n  unsigned char  _filler112;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler113;\n      \u00fc _key4;\n    \u00fc _def4;\n  unsigned char  _filler114;\n  unsigned char  _filler115\u00c417\u00dc;\n  short int      _filler116;\n  unsigned char  _filler117;\n  short int      _filler118;\n  unsigned char  _filler119;\n  void          *_filler120;\n  void          *_filler121;\n  void          *_filler122;\n  void          *_filler123;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler124;\n      \u00fc _key5;\n    \u00fc _def5;\n  unsigned char  _filler125;\n  unsigned char  _filler126\u00c417\u00dc;\n  short int      _filler127;\n  unsigned char  _filler128;\n  short int      _filler129;\n  unsigned char  _filler130;\n  void          *_filler131;\n  void          *_filler132;\n  void          *_filler133;\n  void          *_filler134;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler135;\n      \u00fc _key6;\n    \u00fc _def6;\n  unsigned char  _filler136;\n  unsigned char  _filler137\u00c417\u00dc;\n  short int      _filler138;\n  unsigned char  _filler139;\n  short int      _filler140;\n  unsigned char  _filler141;\n  void          *_filler142;\n  void          *_filler143;\n  void          *_filler144;\n  void          *_filler145;\n  unsigned char  _filler146\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler147;\n    \u00fc _key7;\n  unsigned char  _filler148;\n  unsigned char  _filler149\u00c417\u00dc;\n  short int      _filler150;\n  unsigned char  _filler151;\n  short int      _filler152;\n  unsigned char  _filler153;\n  void          *_filler154;\n  void          *_filler155;\n  void          *_filler156;\n  void          *_filler157;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler158;\n      \u00fc _key8;\n    \u00fc _def8;\n  unsigned char  _filler159;\n  unsigned char  _filler160\u00c417\u00dc;\n  short int      _filler161;\n  unsigned char  _filler162;\n  short int      _filler163;\n  unsigned char  _filler164;\n  void          *_filler165;\n  void          *_filler166;\n  void          *_filler167;\n  void          *_filler168;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler169;\n      \u00fc _key9;\n    \u00fc _def9;\n  unsigned char  _filler170;\n  unsigned char  _filler171\u00c417\u00dc;\n  short int      _filler172;\n  unsigned char  _filler173;\n  short int      _filler174;\n  unsigned char  _filler175;\n  void          *_filler176;\n  void          *_filler177;\n  void          *_filler178;\n  void          *_filler179;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler180;\n      \u00fc _key10;\n    \u00fc _def10;\n  unsigned char  _filler181;\n  unsigned char  _filler182\u00c417\u00dc;\n  short int      _filler183;\n  unsigned char  _filler184;\n  short int      _filler185;\n  unsigned char  _filler186;\n  void          *_filler187;\n  void          *_filler188;\n  void          *_filler189;\n  void          *_filler190;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler191;\n      \u00fc _key11;\n    \u00fc _def11;\n  unsigned char  _filler192;\n  unsigned char  _filler193\u00c417\u00dc;\n  short int      _filler194;\n  unsigned char  _filler195;\n  short int      _filler196;\n  unsigned char  _filler197;\n  void          *_filler198;\n  void          *_filler199;\n  void          *_filler200;\n  void          *_filler201;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler202;\n      \u00fc _key12;\n    \u00fc _def12;\n  unsigned char  _filler203;\n  unsigned char  _filler204\u00c417\u00dc;\n  short int      _filler205;\n  unsigned char  _filler206;\n  short int      _filler207;\n  unsigned char  _filler208;\n  void          *_filler209;\n  void          *_filler210;\n  void          *_filler211;\n  void          *_filler212;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler213;\n      \u00fc _key13;\n    \u00fc _def13;\n  unsigned char  _filler214;\n  unsigned char  _filler215\u00c417\u00dc;\n  short int      _filler216;\n  unsigned char  _filler217;\n  short int      _filler218;\n  unsigned char  _filler219;\n  void          *_filler220;\n  void          *_filler221;\n  void          *_filler222;\n  void          *_filler223;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler224;\n      \u00fc _key14;\n    \u00fc _def14;\n  unsigned char  _filler225;\n  unsigned char  _filler226\u00c417\u00dc;\n  short int      _filler227;\n  unsigned char  _filler228;\n  short int      _filler229;\n  unsigned char  _filler230;\n  void          *_filler231;\n  void          *_filler232;\n  void          *_filler233;\n  void          *_filler234;\n  struct \u00e4\n    unsigned char  _filler235\u00c44\u00dc;\n    \u00fc _def15;\n  struct \u00e4\n    void          *_filler236;\n    \u00fc _key15;\n  unsigned char  _filler237;\n  unsigned char  _filler238\u00c417\u00dc;\n  short int      _filler239;\n  unsigned char  _filler240;\n  short int      _filler241;\n  unsigned char  _filler242;\n  void          *_filler243;\n  void          *_filler244;\n  void          *_filler245;\n  void          *_filler246;\n  struct \u00e4\n    unsigned char  _filler247\u00c44\u00dc;\n    \u00fc _def16;\n  struct \u00e4\n    void          *_filler248;\n    \u00fc _key16;\n  unsigned char  _filler249;\n  unsigned char  _filler250\u00c417\u00dc;\n  short int      _filler251;\n  unsigned char  _filler252;\n  short int      _filler253;\n  unsigned char  _filler254;\n  void          *_filler255;\n  void          *_filler256;\n  void          *_filler257;\n  void          *_filler258;\n  unsigned char  _filler259;\n  unsigned char  values01141\u00c44\u00dc;\n  unsigned char  _filler260;\n  unsigned char  values01142\u00c43\u00dc;\n  unsigned char  _filler261;\n  unsigned char  _filler262\u00c42\u00dc;\n  struct \u00e4\n    unsigned char  _filler263\u00c44\u00dc;\n    \u00fc _def17;\n  struct \u00e4\n    void          *_filler264;\n    \u00fc _key17;\n  unsigned char  _filler265;\n  unsigned char  _filler266\u00c417\u00dc;\n  short int      _filler267;\n  unsigned char  _filler268;\n  short int      _filler269;\n  unsigned char  _filler270;\n  void          *_filler271;\n  void          *_filler272;\n  void          *_filler273;\n  void          *_filler274;\n  unsigned char  _filler275;\n  unsigned char  values01151\u00c43\u00dc;\n  unsigned char  _filler276;\n  unsigned char  values01152\u00c42\u00dc;\n  unsigned char  _filler277;\n  unsigned char  values01153\u00c43\u00dc;\n  unsigned char  _filler278;\n  unsigned char  values01154\u00c44\u00dc;\n  unsigned char  _filler279;\n  unsigned char  values01155\u00c48\u00dc;\n  unsigned char  _filler280;\n  unsigned char  values01156\u00c48\u00dc;\n  unsigned char  _filler281;\n  unsigned char  values01157\u00c47\u00dc;\n  unsigned char  _filler282;\n  unsigned char  _filler283;\n  unsigned char  _filler284\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler285;\n    \u00fc _key18;\n  unsigned char  _filler286;\n  unsigned char  _filler287\u00c417\u00dc;\n  short int      _filler288;\n  unsigned char  _filler289;\n  short int      _filler290;\n  unsigned char  _filler291;\n  void          *_filler292;\n  void          *_filler293;\n  void          *_filler294;\n  void          *_filler295;\n  unsigned char  _filler296;\n  unsigned char  values01161\u00c43\u00dc;\n  unsigned char  _filler297;\n  unsigned char  values01162\u00c42\u00dc;\n  unsigned char  _filler298;\n  unsigned char  _filler299\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler300;\n    \u00fc _key19;\n  unsigned char  _filler301;\n  unsigned char  _filler302\u00c417\u00dc;\n  short int      _filler303;\n  unsigned char  _filler304;\n  short int      _filler305;\n  unsigned char  _filler306;\n  void          *_filler307;\n  void          *_filler308;\n  void          *_filler309;\n  void          *_filler310;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler311;\n      \u00fc _key20;\n    \u00fc _def20;\n  unsigned char  _filler312;\n  unsigned char  _filler313\u00c417\u00dc;\n  short int      _filler314;\n  unsigned char  _filler315;\n  short int      _filler316;\n  unsigned char  _filler317;\n  void          *_filler318;\n  void          *_filler319;\n  void          *_filler320;\n  void          *_filler321;\n  unsigned char  _filler322\u00c444\u00dc;\n  struct \u00e4\n    void          *_filler323;\n    \u00fc _key21;\n  unsigned char  _filler324;\n  unsigned char  _filler325\u00c417\u00dc;\n  short int      _filler326;\n  unsigned char  _filler327;\n  short int      _filler328;\n  unsigned char  _filler329;\n  void          *_filler330;\n  void          *_filler331;\n  void          *_filler332;\n  void          *_filler333;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler334;\n      \u00fc _key22;\n    \u00fc _def22;\n  unsigned char  _filler335;\n  unsigned char  _filler336\u00c417\u00dc;\n  short int      _filler337;\n  unsigned char  _filler338;\n  short int      _filler339;\n  unsigned char  _filler340;\n  void          *_filler341;\n  void          *_filler342;\n  void          *_filler343;\n  void          *_filler344;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler345;\n      \u00fc _key23;\n    \u00fc _def23;\n  unsigned char  _filler346;\n  unsigned char  _filler347\u00c417\u00dc;\n  short int      _filler348;\n  unsigned char  _filler349;\n  short int      _filler350;\n  unsigned char  _filler351;\n  void          *_filler352;\n  void          *_filler353;\n  void          *_filler354;\n  void          *_filler355;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler356;\n      \u00fc _key24;\n    \u00fc _def24;\n  unsigned char  _filler357;\n  unsigned char  _filler358\u00c417\u00dc;\n  short int      _filler359;\n  unsigned char  _filler360;\n  short int      _filler361;\n  unsigned char  _filler362;\n  void          *_filler363;\n  void          *_filler364;\n  void          *_filler365;\n  void          *_filler366;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler367;\n      \u00fc _key25;\n    \u00fc _def25;\n  unsigned char  _filler368;\n  unsigned char  _filler369\u00c417\u00dc;\n  short int      _filler370;\n  unsigned char  _filler371;\n  short int      _filler372;\n  unsigned char  _filler373;\n  void          *_filler374;\n  void          *_filler375;\n  void          *_filler376;\n  void          *_filler377;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler378;\n      \u00fc _key26;\n    \u00fc _def26;\n  unsigned char  _filler379;\n  unsigned char  _filler380\u00c417\u00dc;\n  short int      _filler381;\n  unsigned char  _filler382;\n  short int      _filler383;\n  unsigned char  _filler384;\n  void          *_filler385;\n  void          *_filler386;\n  void          *_filler387;\n  void          *_filler388;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler389;\n      \u00fc _key27;\n    \u00fc _def27;\n  unsigned char  _filler390;\n  unsigned char  _filler391\u00c417\u00dc;\n  short int      _filler392;\n  unsigned char  _filler393;\n  short int      _filler394;\n  unsigned char  _filler395;\n  void          *_filler396;\n  void          *_filler397;\n  void          *_filler398;\n  void          *_filler399;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler400;\n      \u00fc _key28;\n    \u00fc _def28;\n  unsigned char  _filler401;\n  unsigned char  _filler402\u00c417\u00dc;\n  short int      _filler403;\n  unsigned char  _filler404;\n  short int      _filler405;\n  unsigned char  _filler406;\n  void          *_filler407;\n  void          *_filler408;\n  void          *_filler409;\n  void          *_filler410;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler411;\n      \u00fc _key29;\n    \u00fc _def29;\n  unsigned char  _filler412;\n  unsigned char  _filler413\u00c417\u00dc;\n  short int      _filler414;\n  unsigned char  _filler415;\n  short int      _filler416;\n  unsigned char  _filler417;\n  void          *_filler418;\n  void          *_filler419;\n  void          *_filler420;\n  void          *_filler421;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler422;\n      \u00fc _key30;\n    \u00fc _def30;\n  unsigned char  _filler423;\n  unsigned char  _filler424\u00c417\u00dc;\n  short int      _filler425;\n  unsigned char  _filler426;\n  short int      _filler427;\n  unsigned char  _filler428;\n  void          *_filler429;\n  void          *_filler430;\n  void          *_filler431;\n  void          *_filler432;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler433;\n      \u00fc _key31;\n    \u00fc _def31;\n  unsigned char  _filler434;\n  unsigned char  _filler435\u00c417\u00dc;\n  short int      _filler436;\n  unsigned char  _filler437;\n  short int      _filler438;\n  unsigned char  _filler439;\n  void          *_filler440;\n  void          *_filler441;\n  void          *_filler442;\n  void          *_filler443;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler444;\n      \u00fc _key32;\n    \u00fc _def32;\n  unsigned char  _filler445;\n  unsigned char  _filler446\u00c417\u00dc;\n  short int      _filler447;\n  unsigned char  _filler448;\n  short int      _filler449;\n  unsigned char  _filler450;\n  void          *_filler451;\n  void          *_filler452;\n  void          *_filler453;\n  void          *_filler454;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler455;\n      \u00fc _key33;\n    \u00fc _def33;\n  unsigned char  _filler456;\n  unsigned char  _filler457\u00c417\u00dc;\n  short int      _filler458;\n  unsigned char  _filler459;\n  short int      _filler460;\n  unsigned char  _filler461;\n  void          *_filler462;\n  void          *_filler463;\n  void          *_filler464;\n  void          *_filler465;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler466;\n      \u00fc _key34;\n    \u00fc _def34;\n  unsigned char  _filler467;\n  unsigned char  _filler468\u00c417\u00dc;\n  short int      _filler469;\n  unsigned char  _filler470;\n  short int      _filler471;\n  unsigned char  _filler472;\n  void          *_filler473;\n  void          *_filler474;\n  void          *_filler475;\n  void          *_filler476;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler477;\n      \u00fc _key35;\n    \u00fc _def35;\n  unsigned char  _filler478;\n  unsigned char  _filler479\u00c417\u00dc;\n  short int      _filler480;\n  unsigned char  _filler481;\n  short int      _filler482;\n  unsigned char  _filler483;\n  void          *_filler484;\n  void          *_filler485;\n  void          *_filler486;\n  void          *_filler487;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler488;\n      \u00fc _key36;\n    \u00fc _def36;\n  unsigned char  _filler489;\n  unsigned char  _filler490\u00c417\u00dc;\n  short int      _filler491;\n  unsigned char  _filler492;\n  short int      _filler493;\n  unsigned char  _filler494;\n  void          *_filler495;\n  void          *_filler496;\n  void          *_filler497;\n  void          *_filler498;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler499;\n      \u00fc _key37;\n    \u00fc _def37;\n  unsigned char  _filler500;\n  unsigned char  _filler501\u00c417\u00dc;\n  short int      _filler502;\n  unsigned char  _filler503;\n  short int      _filler504;\n  unsigned char  _filler505;\n  void          *_filler506;\n  void          *_filler507;\n  void          *_filler508;\n  void          *_filler509;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler510;\n      \u00fc _key38;\n    \u00fc _def38;\n  unsigned char  _filler511;\n  unsigned char  _filler512\u00c417\u00dc;\n  short int      _filler513;\n  unsigned char  _filler514;\n  short int      _filler515;\n  unsigned char  _filler516;\n  void          *_filler517;\n  void          *_filler518;\n  void          *_filler519;\n  void          *_filler520;\n  unsigned char  _filler521;\n  unsigned char  values01361\u00c42\u00dc;\n  unsigned char  _filler522;\n  unsigned char  values01362\u00c43\u00dc;\n  unsigned char  _filler523;\n  struct \u00e4\n    unsigned char  _filler524\u00c43\u00dc;\n    unsigned char  _filler525;\n    \u00fc _def39;\n  struct \u00e4\n    void          *_filler526;\n    \u00fc _key39;\n  unsigned char  _filler527;\n  unsigned char  _filler528\u00c417\u00dc;\n  short int      _filler529;\n  unsigned char  _filler530;\n  short int      _filler531;\n  unsigned char  _filler532;\n  void          *_filler533;\n  void          *_filler534;\n  void          *_filler535;\n  void          *_filler536;\n  unsigned char  _filler537\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler538;\n    \u00fc _key40;\n  unsigned char  _filler539;\n  unsigned char  _filler540\u00c417\u00dc;\n  short int      _filler541;\n  unsigned char  _filler542;\n  short int      _filler543;\n  unsigned char  _filler544;\n  void          *_filler545;\n  void          *_filler546;\n  void          *_filler547;\n  void          *_filler548;\n  unsigned char  _filler549\u00c432\u00dc;\n  struct \u00e4\n    void          *_filler550;\n    \u00fc _key41;\n  unsigned char  _filler551;\n  unsigned char  _filler552\u00c417\u00dc;\n  short int      _filler553;\n  unsigned char  _filler554;\n  short int      _filler555;\n  unsigned char  _filler556;\n  void          *_filler557;\n  void          *_filler558;\n  void          *_filler559;\n  void          *_filler560;\n  unsigned char  _filler561;\n  unsigned char  values01391\u00c45\u00dc;\n  unsigned char  _filler562;\n  unsigned char  values01392\u00c46\u00dc;\n  unsigned char  _filler563;\n  unsigned char  values01393\u00c47\u00dc;\n  unsigned char  _filler564;\n  unsigned char  _filler565\u00c42\u00dc;\n  unsigned char  _filler566\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler567;\n    \u00fc _key42;\n  unsigned char  _filler568;\n  unsigned char  _filler569\u00c417\u00dc;\n  short int      _filler570;\n  unsigned char  _filler571;\n  short int      _filler572;\n  unsigned char  _filler573;\n  void          *_filler574;\n  void          *_filler575;\n  void          *_filler576;\n  void          *_filler577;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler578;\n      \u00fc _key43;\n    \u00fc _def43;\n  unsigned char  _filler579;\n  unsigned char  _filler580\u00c417\u00dc;\n  short int      _filler581;\n  unsigned char  _filler582;\n  short int      _filler583;\n  unsigned char  _filler584;\n  void          *_filler585;\n  void          *_filler586;\n  void          *_filler587;\n  void          *_filler588;\n  unsigned char  _filler589;\n  unsigned char  values01411\u00c46\u00dc;\n  unsigned char  _filler590;\n  unsigned char  values01412\u00c43\u00dc;\n  unsigned char  _filler591;\n  unsigned char  _filler592\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler593;\n    \u00fc _key44;\n  unsigned char  _filler594;\n  unsigned char  _filler595\u00c417\u00dc;\n  short int      _filler596;\n  unsigned char  _filler597;\n  short int      _filler598;\n  unsigned char  _filler599;\n  void          *_filler600;\n  void          *_filler601;\n  void          *_filler602;\n  void          *_filler603;\n  unsigned char  _filler604\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler605;\n    \u00fc _key45;\n  unsigned char  _filler606;\n  unsigned char  _filler607\u00c417\u00dc;\n  short int      _filler608;\n  unsigned char  _filler609;\n  short int      _filler610;\n  unsigned char  _filler611;\n  void          *_filler612;\n  void          *_filler613;\n  void          *_filler614;\n  void          *_filler615;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler616;\n      \u00fc _key46;\n    \u00fc _def46;\n  unsigned char  _filler617;\n  unsigned char  _filler618\u00c417\u00dc;\n  short int      _filler619;\n  unsigned char  _filler620;\n  short int      _filler621;\n  unsigned char  _filler622;\n  void          *_filler623;\n  void          *_filler624;\n  void          *_filler625;\n  void          *_filler626;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler627;\n      \u00fc _key47;\n    \u00fc _def47;\n  unsigned char  _filler628;\n  unsigned char  _filler629\u00c417\u00dc;\n  short int      _filler630;\n  unsigned char  _filler631;\n  short int      _filler632;\n  unsigned char  _filler633;\n  void          *_filler634;\n  void          *_filler635;\n  void          *_filler636;\n  void          *_filler637;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler638;\n      \u00fc _key48;\n    \u00fc _def48;\n  unsigned char  _filler639;\n  unsigned char  _filler640\u00c417\u00dc;\n  short int      _filler641;\n  unsigned char  _filler642;\n  short int      _filler643;\n  unsigned char  _filler644;\n  void          *_filler645;\n  void          *_filler646;\n  void          *_filler647;\n  void          *_filler648;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler649;\n      \u00fc _key49;\n    \u00fc _def49;\n  unsigned char  _filler650;\n  unsigned char  _filler651\u00c417\u00dc;\n  short int      _filler652;\n  unsigned char  _filler653;\n  short int      _filler654;\n  unsigned char  _filler655;\n  void          *_filler656;\n  void          *_filler657;\n  void          *_filler658;\n  void          *_filler659;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler660;\n      \u00fc _key50;\n    \u00fc _def50;\n  unsigned char  _filler661;\n  unsigned char  _filler662\u00c417\u00dc;\n  short int      _filler663;\n  unsigned char  _filler664;\n  short int      _filler665;\n  unsigned char  _filler666;\n  void          *_filler667;\n  void          *_filler668;\n  void          *_filler669;\n  void          *_filler670;\n  unsigned char  _filler671;\n  unsigned char  values01481\u00c42\u00dc;\n  unsigned char  _filler672;\n  unsigned char  values01482\u00c43\u00dc;\n  unsigned char  _filler673;\n  struct \u00e4\n    unsigned char  _filler674\u00c43\u00dc;\n    unsigned char  _filler675;\n    \u00fc _def51;\n  struct \u00e4\n    void          *_filler676;\n    \u00fc _key51;\n  unsigned char  _filler677;\n  unsigned char  _filler678\u00c417\u00dc;\n  short int      _filler679;\n  unsigned char  _filler680;\n  short int      _filler681;\n  unsigned char  _filler682;\n  void          *_filler683;\n  void          *_filler684;\n  void          *_filler685;\n  void          *_filler686;\n  unsigned char  _filler687;\n  unsigned char  values01491\u00c42\u00dc;\n  unsigned char  _filler688;\n  unsigned char  values01492\u00c43\u00dc;\n  unsigned char  _filler689;\n  struct \u00e4\n    unsigned char  _filler690\u00c43\u00dc;\n    unsigned char  _filler691;\n    \u00fc _def52;\n  struct \u00e4\n    void          *_filler692;\n    \u00fc _key52;\n  unsigned char  _filler693;\n  unsigned char  _filler694\u00c417\u00dc;\n  short int      _filler695;\n  unsigned char  _filler696;\n  short int      _filler697;\n  unsigned char  _filler698;\n  void          *_filler699;\n  void          *_filler700;\n  void          *_filler701;\n  void          *_filler702;\n  unsigned char  _filler703;\n  unsigned char  values01501\u00c42\u00dc;\n  unsigned char  _filler704;\n  unsigned char  values01502\u00c43\u00dc;\n  unsigned char  _filler705;\n  unsigned char  values01503\u00c45\u00dc;\n  unsigned char  _filler706;\n  unsigned char  _filler707\u00c42\u00dc;\n  unsigned char  _filler708\u00c45\u00dc;\n  unsigned char  _filler709\u00c43\u00dc;\n  struct \u00e4\n    void          *_filler710;\n    \u00fc _key53;\n  unsigned char  _filler711;\n  unsigned char  _filler712\u00c417\u00dc;\n  short int      _filler713;\n  unsigned char  _filler714;\n  short int      _filler715;\n  unsigned char  _filler716;\n  void          *_filler717;\n  void          *_filler718;\n  void          *_filler719;\n  void          *_filler720;\n  unsigned char  _filler721\u00c4128\u00dc;\n  struct \u00e4\n    void          *_filler722;\n    \u00fc _key54;\n  unsigned char  _filler723;\n  unsigned char  _filler724\u00c417\u00dc;\n  short int      _filler725;\n  unsigned char  _filler726;\n  short int      _filler727;\n  unsigned char  _filler728;\n  void          *_filler729;\n  void          *_filler730;\n  void          *_filler731;\n  void          *_filler732;\n  unsigned char  _filler733\u00c460\u00dc;\n  struct \u00e4\n    void          *_filler734;\n    \u00fc _key55;\n  unsigned char  _filler735;\n  unsigned char  _filler736\u00c417\u00dc;\n  short int      _filler737;\n  unsigned char  _filler738;\n  short int      _filler739;\n  unsigned char  _filler740;\n  void          *_filler741;\n  void          *_filler742;\n  void          *_filler743;\n  void          *_filler744;\n  struct \u00e4\n    struct \u00e4\n      void          *_filler745;\n      \u00fc _key56;\n    \u00fc _def56;\n  unsigned char  _filler746;\n  unsigned char  _filler747\u00c417\u00dc;\n  short int      _filler748;\n  unsigned char  _filler749;\n  short int      _filler750;\n  unsigned char  _filler751;\n  void          *_filler752;\n  void          *_filler753;\n  void          *_filler754;\n  void          *_filler755;\n  unsigned char  _filler756\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler757;\n    \u00fc _key57;\n  unsigned char  _filler758;\n  unsigned char  _filler759\u00c417\u00dc;\n  short int      _filler760;\n  unsigned char  _filler761;\n  short int      _filler762;\n  unsigned char  _filler763;\n  void          *_filler764;\n  void          *_filler765;\n  void          *_filler766;\n  void          *_filler767;\n  struct \u00e4\n    void          *_filler768;\n    \u00fc _def58;\n  struct \u00e4\n    void          *_filler769;\n    \u00fc _key58;\n  unsigned char  _filler770;\n  unsigned char  _filler771\u00c417\u00dc;\n  short int      _filler772;\n  unsigned char  _filler773;\n  short int      _filler774;\n  unsigned char  _filler775;\n  void          *_filler776;\n  void          *_filler777;\n  void          *_filler778;\n  void          *_filler779;\n  unsigned char  _filler780\u00c48\u00dc;\n  struct \u00e4\n    void          *_filler781;\n    \u00fc _key59;\n  unsigned char  _filler782;\n  unsigned char  _filler783\u00c417\u00dc;\n  short int      _filler784;\n  unsigned char  _filler785;\n  short int      _filler786;\n  unsigned char  _filler787;\n  void          *_filler788;\n  void          *_filler789;\n  void          *_filler790;\n  void          *_filler791;\n  unsigned char  _filler792\u00c460\u00dc;\n  struct \u00e4\n    void          *_filler793;\n    \u00fc _key60;\n  struct \u00e4\n    unsigned char  _tranpr1\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr2\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr3\u00c48\u00dc; /* tcp/ip iq interface */\n    unsigned char  _tranpr4\u00c48\u00dc; /* WWA  prog name      */\n    unsigned char  _tranpr5\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr6\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr7\u00c48\u00dc; /* tran prog name      */\n    unsigned char  _tranpr8\u00c48\u00dc; /* called program      */\n    \u00fc qnintran;\n  unsigned char  tranpr9\u00c48\u00dc;                       /* last one                                   */\n  unsigned char  tranpra\u00c48\u00dc;                       /* SAPI                                       */\n  unsigned char  tranprb\u00c48\u00dc;                       /* EXCI                                       */\n  unsigned char  tranprc\u00c48\u00dc;                       /* DB2                                        */\n  unsigned char  systems\u00c4256\u00dc;                     /* system profile names                       */\n  unsigned char  qnrqs\u00c4512\u00dc\u00c4143\u00dc;\n  unsigned char  _filler794;\n  unsigned char  qnet_tcpip_global_area\u00c48\u00dc;        /* global area                                */\n  unsigned char  _filler795\u00c432\u00dc\u00c436\u00dc;               /* cache area                                 */\n  struct \u00e4\n    void          *_filler796;  /* DCBE ADDRESS */\n    \u00fc wlog;\n  unsigned char  _filler797\u00c412\u00dc;                   /* FDAD, DVTBL                                */\n  void          *_filler798;                       /* KEYLEN, DEVT, TRBAL                        */\n  unsigned char  _filler799;                       /* BUFNO, NUMBER OF BUFFERS                   */\n  int            _filler800 : 24;                  /* BUFCB, BUFFER POOL CONTROL BLOCK           */\n  short int      _filler801;                       /* BUFL, BUFFER LENGTH                        */\n  unsigned char  _filler802\u00c42\u00dc;                    /* DSORG, DATA SET ORGANIZATION               */\n  void          *_filler803;                       /* IOBAD FOR EXCP OR RESERVED                 */\n  unsigned char  _filler804;                       /* BFTEK, BFALN, DCBE INDICATORS              */\n  int            _filler805 : 24;                  /* EODAD (END OF DATA ROUTINE ADDRESS)        */\n  unsigned char  _filler806;                       /* RECFM (RECORD FORMAT)                      */\n  int            _filler807 : 24;                  /* EXLST (EXIT LIST ADDRESS)                  */\n  unsigned char  _filler808\u00c48\u00dc;                    /* DDNAME                                     */\n  unsigned char  _filler809;                       /* OFLGS (OPEN FLAGS)                         */\n  unsigned char  _filler810;                       /* IFLGS (IOS FLAGS)                          */\n  unsigned char  _filler811\u00c42\u00dc;                    /* MACR (MACRO FORMAT)                        */\n  unsigned char  _filler812;                       /* OPTCD, OPTION CODES                        */\n  int            _filler813 : 24;                  /* CHECK OR INTERNAL QSAM SYNCHRONIZING RTN.  */\n  void          *_filler814;                       /* SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)    */\n  short int      _filler815;                       /* INTERNAL ACCESS METHOD FLAGS               */\n  short int      _filler816;                       /* BLKSIZE, BLOCK SIZE                        */\n  int            _filler817;                       /* INTERNAL ACCESS METHOD FLAGS               */\n  void          *_filler818;                       /* INTERNAL ACCESS METHOD USE                 */\n  void          *_filler819;                       /* EOBAD                                      */\n  void          *_filler820;                       /* RECAD                                      */\n  short int      _filler821;                       /* QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF    */\n  short int      _filler822;                       /* LRECL                                      */\n  unsigned char  _filler823;                       /* EROPT, ERROR OPTION                        */\n  int            _filler824 : 24;                  /* CNTRL                                      */\n  short int      _filler825\u00c42\u00dc;                    /* RESERVED AND PRECL                         */\n  void          *_filler826;                       /* EOB, INTERNAL ACCESS METHOD FIELD          */\n  void          *msgmdl;                           /* &PROJECT.MSGP module addr                  */\n  void          *msgcsect;                         /* &PROJECT.MSGS message csect                */\n  void          *msgwarea;                         /* work area address                          */\n  void          *msgdcb;                           /* message dcb addr                           */\n  void          *msgff02;                          /* IKJEFF02 addr                              */\n  unsigned char  msgtime\u00c44\u00dc;                       /* time yes                                   */\n  unsigned char  msgid\u00c44\u00dc;                         /* message id                                 */\n  void          *msgpages;                         /* no page size                               */\n  void          *msglinec;                         /* line counter                               */\n  void          *msgpagec;                         /* page counter                               */\n  unsigned char  msghead\u00c480\u00dc;                      /* head msg id                                */\n  void          *msgroutcd;                        /* ROUT CODE                                  */\n  void          *wlogpc;                           /* page count                                 */\n  void          *wloglc;                           /* line count                                 */\n  unsigned char  wloge\u00c44\u00dc;                         /* 0  Alignment and identifier                */\n  short int      _filler827;                       /* 4  Length of DCBE, minimum is 56           */\n  unsigned char  _filler828\u00c42\u00dc;                    /* 6  Reserved, should be zero                */\n  void          *_filler829;                       /* 8  0 if not open, OPEN points to DCB       */\n  unsigned char  _filler830\u00c44\u00dc;                    /* C  Disk address of current member          */\n  unsigned char  _filler831;                       /* 10  Flags set by system                    */\n  unsigned char  _filler832;                       /* 11  Flags set by user                      */\n  short int      _filler833;                       /* 12  Number of stripes if extended format   */\n  unsigned char  _filler834;                       /* 14  Flags set by user                 @L3A */\n  unsigned char  _filler835\u00c43\u00dc;                    /* 15  Reserved                          @L3C */\n  unsigned char  _filler836\u00c44\u00dc;                    /* 18  Reserved                          @L2A */\n  int            _filler837;                       /* 1C  Block size                        @L2A */\n  unsigned char  _filler838\u00c48\u00dc;                    /* 20  Reserved & number of blocks in ds @L2C */\n  void          *_filler839;                       /* 28  End of data routine address or 0       */\n  void          *_filler840;                       /* 2C  I/O error routine (synchronous) or 0   */\n  unsigned char  _filler841\u00c46\u00dc;                    /* 30  Reserved, should be zero               */\n  unsigned char  _filler842\u00c42\u00dc;                    /* 36  MULTACC and MULTSDN                    */\n  unsigned char  qcvt_tiotl\u00c41024\u00dc\u00c410\u00dc;\n  unsigned char  qcvt_dumponmessages\u00c460\u00dc;          /* dump on messages list                      */\n  unsigned char  qcvt_traceon_messages\u00c460\u00dc;        /* dump on messages list                      */\n  unsigned char  _filler843\u00c44\u00dc;\n  struct \u00e4\n    unsigned char  _filler844;  /* FORMAT NUMBER OF ETD         */\n    unsigned char  _filler845;  /* RESERVED. MUST BE ZERO       */\n    short int      _filler846;  /* NUMBER OF ENTRY DESCRIPTIONS */\n    unsigned char  _qnpcqget;   /* INDEX FOR THIS ENTRY         */\n    unsigned char  _filler847;  /* FLAG BYTE                    */\n    short int      _filler848;  /* RESERVED                     */\n    \u00fc qnpcet;\n  void          *_filler849;                       /* ZERO PADDING                               */\n  void          *_filler850;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler851;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler852;                       /* ENTRY KEY MASK                             */\n  void          *_filler853;                       /* PARAMETER 1                                */\n  unsigned char  _filler854;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler855;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler856;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler857;                       /* ZERO PADDING                               */\n  void          *_filler858;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler859;                       /* PARAMETER 2                                */\n  unsigned char  _filler860;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler861\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcqput;                         /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler862;                       /* FLAG BYTE                                  */\n  short int      _filler863;                       /* RESERVED                                   */\n  void          *_filler864;                       /* ZERO PADDING                               */\n  void          *_filler865;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler866;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler867;                       /* ENTRY KEY MASK                             */\n  void          *_filler868;                       /* PARAMETER 1                                */\n  unsigned char  _filler869;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler870;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler871;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler872;                       /* ZERO PADDING                               */\n  void          *_filler873;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler874;                       /* PARAMETER 2                                */\n  unsigned char  _filler875;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler876\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcqbclose;                      /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler877;                       /* FLAG BYTE                                  */\n  short int      _filler878;                       /* RESERVED                                   */\n  void          *_filler879;                       /* ZERO PADDING                               */\n  void          *_filler880;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler881;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler882;                       /* ENTRY KEY MASK                             */\n  void          *_filler883;                       /* PARAMETER 1                                */\n  unsigned char  _filler884;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler885;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler886;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler887;                       /* ZERO PADDING                               */\n  void          *_filler888;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler889;                       /* PARAMETER 2                                */\n  unsigned char  _filler890;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler891\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcbget;                         /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler892;                       /* FLAG BYTE                                  */\n  short int      _filler893;                       /* RESERVED                                   */\n  void          *_filler894;                       /* ZERO PADDING                               */\n  void          *_filler895;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler896;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler897;                       /* ENTRY KEY MASK                             */\n  void          *_filler898;                       /* PARAMETER 1                                */\n  unsigned char  _filler899;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler900;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler901;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler902;                       /* ZERO PADDING                               */\n  void          *_filler903;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler904;                       /* PARAMETER 2                                */\n  unsigned char  _filler905;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler906\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcbput;                         /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler907;                       /* FLAG BYTE                                  */\n  short int      _filler908;                       /* RESERVED                                   */\n  void          *_filler909;                       /* ZERO PADDING                               */\n  void          *_filler910;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler911;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler912;                       /* ENTRY KEY MASK                             */\n  void          *_filler913;                       /* PARAMETER 1                                */\n  unsigned char  _filler914;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler915;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler916;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler917;                       /* ZERO PADDING                               */\n  void          *_filler918;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler919;                       /* PARAMETER 2                                */\n  unsigned char  _filler920;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler921\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpcbpoint;                       /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler922;                       /* FLAG BYTE                                  */\n  short int      _filler923;                       /* RESERVED                                   */\n  void          *_filler924;                       /* ZERO PADDING                               */\n  void          *_filler925;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler926;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler927;                       /* ENTRY KEY MASK                             */\n  void          *_filler928;                       /* PARAMETER 1                                */\n  unsigned char  _filler929;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler930;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler931;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler932;                       /* ZERO PADDING                               */\n  void          *_filler933;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler934;                       /* PARAMETER 2                                */\n  unsigned char  _filler935;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler936\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qnpccheck;                        /* INDEX FOR THIS ENTRY                       */\n  unsigned char  _filler937;                       /* FLAG BYTE                                  */\n  short int      _filler938;                       /* RESERVED                                   */\n  void          *_filler939;                       /* ZERO PADDING                               */\n  void          *_filler940;                       /* ROUTINE ADDRESS                 @D2C       */\n  short int      _filler941;                       /* AUTHORIZATION KEY MASK                     */\n  short int      _filler942;                       /* ENTRY KEY MASK                             */\n  void          *_filler943;                       /* PARAMETER 1                                */\n  unsigned char  _filler944;                       /* ETD OPTIONS BYTE 1                         */\n  unsigned char  _filler945;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */\n  short int      _filler946;                       /* EXTENDED AUTHORIZATION INDEX               */\n  void          *_filler947;                       /* ZERO PADDING                               */\n  void          *_filler948;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */\n  void          *_filler949;                       /* PARAMETER 2                                */\n  unsigned char  _filler950;                       /* LPA FLAG BYTE 1                 @L2A       */\n  unsigned char  _filler951\u00c43\u00dc;                    /* RESERVED - MUST BE ZERO         @L2C       */\n  unsigned char  qcvt_fsi_con\u00c464\u00dc;                 /* connect/disconnect parm area               */\n  unsigned char  qcvt_fsi_send\u00c436\u00dc;                /* send area                                  */\n  \u00fc;\n\n#define qnpclxct                   qnpclxl._qnpclxct\n#define qnpcetct                   qnpcetl._qnpcetct\n#define qnmnstkn                   qnmnoda._qnmnstkn\n#define qnmnascb                   qnmnoda._qnmnascb\n#define qnmnaecb                   qnmnoda._qnmnaecb\n#define qnmnresv                   qnmnoda._qnmnresv\n#define qnet_tcpip_clientid_domain qnet_tcpip_clientid._qnet_tcpip_clientid_domain\n#define qnet_tcpip_name_family     qnet_tcpip_name._qnet_tcpip_name_family\n#define qnet_tcpip_name_port       qnet_tcpip_name._qnet_tcpip_name_port\n#define qnet_tcpip_name_address    qnet_tcpip_name._qnet_tcpip_name_address\n#define qnet_tcpip_name_reserved   qnet_tcpip_name._qnet_tcpip_name_reserved\n#define itiqecb                    itiioqe._itiqecb\n#define itoqecb                    itoioqe._itoqecb\n#define tranpr1                    qnintran._tranpr1\n#define tranpr2                    qnintran._tranpr2\n#define tranpr3                    qnintran._tranpr3\n#define tranpr4                    qnintran._tranpr4\n#define tranpr5                    qnintran._tranpr5\n#define tranpr6                    qnintran._tranpr6\n#define tranpr7                    qnintran._tranpr7\n#define tranpr8                    qnintran._tranpr8\n#define qnpcqget                   qnpcet._qnpcqget\n\n/* Values for field \"qcvtioq\" */\n#define max_qcvtioq                 4096       /* max request queue entries */\n\n/* Values for field \"qnscvt\" */\n#define pcqget                      0          /* qget pc 0                 */\n#define pcqput                      1          /* qput pc 1                 */\n#define pcqbclose                   2          /* qbclose pc 2              */\n#define pcbget                      3          /* bget pc 3                 */\n#define pcbput                      4          /* bput pc 4                 */\n#define pcbpoint                    5          /* bpoint pc 5               */\n#define pccheck                     6          /* check pc 6                */\n\n/* Values for field \"wlmtype\" */\n#define wlmtype_qmgr                0x01       /* wlm queue manager         */\n#define wlmtype_smgr                0x02       /* wlm server manager        */\n#define wlmtype_wmgr                0x04       /* wlm work  manager         */\n\n/* Values for field \"wlmaest\" */\n#define wlmaest_reset               0x00       /* reset                     */\n#define wlmaest_active              0x01       /* acive                     */\n#define wlmaest_stopreq             0x02       /* stop requested            */\n#define wlmaest_stop                0x03       /* stopping                  */\n\n/* Values for field \"__prof_msga\" */\n#define __prof_length               0x7C       /* length of the local area  */\n\n/* Values for field \"qnettp\" */\n#define qnettp_appc                 1          /* APPC flag                 */\n#define qnettp_tcpip                2          /* TCPIP flag                */\n#define qnettp_file                 4          /* FILE flag                 */\n#define qnettp_mqs                  8          /* MQSeries flag             */\n#define qnettp_sapi                 16         /* SAPI flag                 */\n#define qnettp_exci                 32         /* EXCI flag                 */\n#define qnettp_db2                  64         /* DB2 flag                  */\n#define qnettp_jump_appc            0          /* APPC jump                 */\n#define qnettp_jump_tcpip           4          /* TCPIP jump                */\n#define qnettp_jump_file            8          /* FILE jump                 */\n#define qnettp_jump_mqs             12         /* MQSeries jump             */\n#define qnettp_jump_sapi            16         /* SAPI jump                 */\n#define qnettp_jump_exci            20         /* EXCI jump                 */\n#define qnettp_jump_db2             24         /* DB2 jump                  */\n\n/* Values for field \"_filler795\" */\n#define qnet_tcpip_cache_size       0x480      /* size                      */\n#define qfssport                    80         /* QFSS port number          */\n#define _routcde                    28         /* subsystem route code      */\n#define _desc                       11         /* descriptor code           */\n#define _qfsscvt                    0x00       /* CVT                       */\n#define _qfssserp                   0x100      /* server program            */\n#define _qfssbcbp                   0x200      /* BCB program               */\n#define _qfssow                     0x300      /* OW program                */\n#define _qfssssip                   0x500      /* SSI program               */\n#define _qfsspc                     0x600      /* PC  program               */\n#define _qfssinip                   0x700      /* init program              */\n#define _qfss62p                    0x800      /* qfss62P program           */\n#define _qfssmain                   0x1000     /* main program              */\n\n/* Values for field \"wloglc\" */\n#define wlogl                       0xE4       /* LENGTH OF WLOG DCB        */\n\n/* Values for field \"qcvt_tiotl\" */\n#define qcvt_tiot_dummy             0x01       /* dummy flag                */\n\n/* Values for field \"_filler951\" */\n#define etd0163                     7          /* NUMBER OF ENTRIES IN LIST */\n#define qnpc_elength                0x28       /* entry length              */\n#define program_invalid_transaction 0xAAAA0001\n#define program_program_not_found   0xAAAA0002\n#define program_racf_error          0xAAAA0003\n#define user_racf_error             0xAAAA0005\n#define program_error_occured       0xAAAA0006\n#define program_qsam_error          0xAAAA0007\n#define program_owcb_error          0xAAAA0008\n#define program_prof_error          0xAAAA0009\n\n/* Values for field \"qcvt_fsi_send\" */\n#define qcvtsize                    0x194B8    /* CVT size                  */\n#define _owid                       0x12FF7A   /* overwiew record id        */\n#define _tptype                     0x110000   /* tp header record          */\n#define _ohfrtype                   0x210001   /* file request header       */\n#define _ohfstype                   0x210002   /* SEND data header          */\n#define _ohsstype                   0x910002   /* SEND FSS data type        */\n#define _ohdrtype                   0x210003   /* directory request header  */\n#define _ohprtype                   0x210004   /* profile request header    */\n#define _datatype                   0x300001   /* data record               */\n#define _dasstype                   0x300002   /* send FSS data type        */\n#define _otfrtype                   0x220001   /* file request trailer      */\n#define _otfstype                   0x220002   /* file SEND trailer         */\n#define _otsstype                   0x620002   /* file FSS trailer          */\n#define _otdrtype                   0x220003   /* directory request trailer */\n#define _otprtype                   0x220004   /* profile request trailer   */\n#define _otaptype                   0x120000   /* tp trailer record         */\n#define _maxtp                      254        /* max header record length  */\n#define _maxappl                    1022       /* max appl record length    */\n#define _applbyn                    0x00       /* binary data               */\n#define _applbin                    0x00       /* binary data               */\n#define _applsrc                    0x01       /* source program            */\n#define _applafp                    0x02       /* AFPDS data                */\n#define _appldir                    0x03       /* directory info            */\n#define _applmsg                    0x04       /* message                   */\n#define _applprof                   0x05       /* profile info              */\n#define _applbinc                   0x06       /* BINARY WITH CRLF          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QFSSGLBL": {"ttr": 8003, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_QFSSGLBL\n#define INCLUDE_QFSSGLBL\n\n#include \"wwi.hpp\"\n#include \"wwa.hpp\"\n#include \"fts.hpp\"\n#include \"qfsscvt.hpp\"\n#include \"ioqe.hpp\"\n\ntypedef struct wwi * pWWI;\ntypedef struct wwa * pWWA;\ntypedef struct fts * pFTS;\ntypedef struct qfsscvt * pCVT;\ntypedef struct ioqedsect * pIOQE;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QWHA": {"ttr": 8321, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwha \u00e4\n  unsigned char  qwhalen\u00c42\u00dc;  /* LENGTH OF  HEADER             */\n  unsigned char  qwhatyp;     /* TYPE OF HEADER - DATA SHARING */\n  unsigned char  _filler1;    /* RESERVED                      */\n  unsigned char  qwhamemn\u00c48\u00dc; /* DB2 MEMBER NAME               */\n  unsigned char  qwhadsgn\u00c48\u00dc; /* DB2 DATA SHARING GROUP NAME   */\n  unsigned char  qwhaend;\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QWHC": {"ttr": 8711, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwhc \u00e4\n  unsigned char  qwhclen\u00c42\u00dc;   /* LENGTH OF THE CORRELATION HEADER              */\n  unsigned char  qwhctyp;      /* TYPE OF HEADER - CORRELATION =2               */\n  unsigned char  _filler1;     /* RESERVED                                      */\n  unsigned char  qwhcaid\u00c48\u00dc;   /* %U AUTHORIZATION ID                           */\n  unsigned char  qwhccv\u00c412\u00dc;   /* CORRELATION ID  VALUE                         */\n  unsigned char  qwhccn\u00c48\u00dc;    /* CONNECTION NAME (NOT VALID ON END OF MEMORY & */\n  unsigned char  qwhcplan\u00c48\u00dc;  /* PLAN NAME                                     */\n  unsigned char  qwhcopid\u00c48\u00dc;  /* %U ORIGINAL OPERATOR ID                       */\n  int            qwhcatyp;     /* CONNECTING SYSTEM TYPE CODE                   */\n  unsigned char  qwhctokn\u00c422\u00dc; /* ACCOUNTING TOKEN                              */\n  unsigned char  qwhcres2\u00c42\u00dc;  /* RESERVED                                      */\n  unsigned char  qwhceuid\u00c416\u00dc; /* THE END USER'S USERID AT THE                  */\n  unsigned char  qwhceutx\u00c432\u00dc; /* THE END USER'S TRANSACTION NAME.              */\n  unsigned char  qwhceuwn\u00c418\u00dc; /* THE END USER'S WORKSTATION NAME.              */\n  short int      qwhcaid_off;  /* Offset from QWHC to                           */\n  short int      qwhcopid_off; /* Offset from QWHC to                           */\n  short int      qwhceuid_off; /* Offset from QWHC to                           */\n  short int      qwhctcxt_off; /* Offset from QWHC to                           */\n  short int      qwhcrole_off; /* Offset from QWHC to                           */\n  short int      qwhcoaud_off; /* Offset from QWHC to original                  */\n  short int      qwhcctkn_off; /* Offset from QWHC to                           */\n  int            qwhcend;\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QWHD": {"ttr": 8697, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwhd \u00e4\n  unsigned char  qwhdlen\u00c42\u00dc;   /* LENGTH OF THE DISTRIBUTED HEADER             */\n  unsigned char  qwhdtyp;      /* TYPE OF HEADER - DISTRIBUTED  = 16           */\n  unsigned char  _filler1;     /* RESERVED                                     */\n  unsigned char  qwhdrqnm\u00c416\u00dc; /* %U REQUESTER LOCATION NAME - BLANK IF HEADER */\n  unsigned char  qwhdtstp\u00c48\u00dc;  /* TIMESTAMP FOR DBAT TRACE RECORDS             */\n  unsigned char  qwhdsvnm\u00c416\u00dc; /* %U SRVNAM PARAMETER OF DRDA EXCSAT COMMAND   */\n  unsigned char  qwhdprid\u00c48\u00dc;  /* PRDID PARAMETER OF DRDA ACCRDB COMMAND       */\n  short int      qwhdrqnm_off; /* Offset from QWHD to                          */\n  short int      qwhdsvnm_off; /* Offset from QWHD                             */\n  int            qwhdend;\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QWHS": {"ttr": 8437, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwhs \u00e4\n  unsigned char  qwhslen\u00c42\u00dc;   /* LENGTH OF THE STANDARD HEADER       */\n  unsigned char  qwhstyp;      /* HEADER TYPE                         */\n  unsigned char  qwhsrmid;     /* RESOURCE MANAGER ID                 */\n  unsigned char  qwhsiid\u00c42\u00dc;   /* IFCID                               */\n  struct \u00e4\n    unsigned char  _qwhsnsda; /* NUMBER OF SELF DEFINING AREAS  */\n    unsigned char  _qwhsrn;   /* RELEASE INDICATOR NUMBER - HEX */\n    \u00fc qwhsreln;\n  void          *qwhsace;      /* ACE ADDRESS - DISPATCH UNIT ADDRESS */\n  unsigned char  qwhsssid\u00c44\u00dc;  /* SUBSYSTEM NAME                      */\n  unsigned char  qwhsstck\u00c48\u00dc;  /* STORE CLOCK VALUE OF HEADER -       */\n  unsigned char  qwhsiseq\u00c44\u00dc;  /* SEQUENCE NUMBER FOR IFCID           */\n  unsigned char  qwhswseq\u00c44\u00dc;  /* SEQUENCE NUMBER FOR DESTINATION     */\n  unsigned char  qwhsmtn\u00c44\u00dc;   /* ACTIVE TRACE NUMBER MASK            */\n  unsigned char  qwhslocn\u00c416\u00dc; /* %U LOCAL LOCATION NAME              */\n  struct \u00e4\n    unsigned char  _qwhsnid\u00c48\u00dc;  /* NETWORK ID       */\n    unsigned char  _qwhslunm\u00c48\u00dc; /* LUNAME           */\n    unsigned char  _qwhsluuv\u00c46\u00dc; /* UNIQUENESS VALUE */\n    short int      _qwhslucc;    /* COMMIT COUNT     */\n    \u00fc qwhslwid;\n  unsigned char  qwhsflag;     /* Flags                               */\n  unsigned char  _filler1;     /* Reserved                            */\n  short int      qwhslocn_off; /* Offset from QWHS to                 */\n  short int      qwhssubv;     /* THE SUBVERSION FOR THE BASE RELEASE */\n  unsigned char  qwhsend;      /* END OF STANDARD HEADER              */\n  \u00fc;\n\n#define qwhsnsda qwhsreln._qwhsnsda\n#define qwhsrn   qwhsreln._qwhsrn\n#define qwhsnid  qwhslwid._qwhsnid\n#define qwhslunm qwhslwid._qwhslunm\n#define qwhsluuv qwhslwid._qwhsluuv\n#define qwhslucc qwhslwid._qwhslucc\n\n/* Values for field \"qwhstyp\" */\n#define qwhshs01     1    /* ..STANDARD HEADER                 */\n#define qwhshc02     2    /* ..CORRELATION HEADER              */\n#define qwhsht04     4    /* ..TRACE HEADER                    */\n#define qwhshu08     8    /* ..CPU HEADER                      */\n#define qwhshd16     16   /* ..DISTRIBUTED HEADER              */\n#define qwhsha32     32   /* ..DATA SHARING HEADER             */\n\n/* Values for field \"qwhsflag\" */\n#define qwhs_unicode 0x80 /* %U fields contain Unicode (UTF-8) */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QWHT": {"ttr": 8065, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwht \u00e4\n  unsigned char  qwhtlen\u00c42\u00dc; /* LENGTH OF  HEADER             */\n  unsigned char  qwhttyp;    /* TYPE OF HEADER - TRACE        */\n  unsigned char  qwhtflg0;   /* FLAGS                         */\n  short int      qwhttid;    /* ID SPECIFIED DSNWTRC MACRO    */\n  unsigned char  qwhttag;    /* TAG SPECIFIED DSNWTRC MACRO   */\n  unsigned char  qwhtfunc;   /* FUNC SPECIFIED DSNWTRC MACRO  */\n  void          *qwhteb;     /* EB ADDRESS                    */\n  short int      qwhtpasi;   /* PASID - EPAR                  */\n  short int      qwhtr14a;   /* REGISTER 14 ASID              */\n  int            qwhtr14;    /* REGISTER 14                   */\n  int            qwhtr15;    /* REGISTER 15                   */\n  int            qwhtr0;     /* REGISTER 0                    */\n  int            qwhtr1;     /* REGISTER 1                    */\n  void          *qwhtexu;    /* ADDRESS OF MVS EXECUTION UNIT */\n  short int      qwhtdim;    /* NUMBER OF DATA ITEMS          */\n  short int      qwhthasi;   /* HOME ASID                     */\n  void          *qwhtdata;   /* ADDRESS OF THE DATA           */\n  short int      qwhtflag;   /* FLAGS IN THE TRACE LIST       */\n  short int      qwhtdatl;   /* LENGTH  OF THE DATA           */\n  struct \u00e4\n    int            _qwhtalet; /* ALET TOKEN FOR DATA FIELD */\n    \u00fc qwhtend;\n  \u00fc;\n\n#define qwhtalet qwhtend._qwhtalet\n\n/* Values for field \"qwhtflg0\" */\n#define qwhtalfg 0x20 /* ON - DATA USES ALET TOKEN */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QWHU": {"ttr": 8335, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwhu \u00e4\n  unsigned char  qwhulen\u00c42\u00dc; /* LENGTH OF  HEADER                    */\n  unsigned char  qwhutyp;    /* TYPE OF HEADER - CPU MAPPED QWHSHU08 */\n  unsigned char  _filler1;   /* RESERVED                             */\n  unsigned char  qwhucpu\u00c48\u00dc; /* CPU time of the currently dispatched */\n  unsigned char  qwhucnt\u00c42\u00dc; /* (S) COUNT FIELD RESERVED             */\n  unsigned char  qwhuend;\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QWT0": {"ttr": 7943, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qwt0 \u00e4\n  void          *qwt02pso;    /* OFFSET TO THE PRODUCT SECTION          */\n  unsigned char  qwt02psl\u00c42\u00dc; /* LENGTH OF THE PRODUCT SECTION          */\n  unsigned char  qwt02psn\u00c42\u00dc; /* NUMBER OF PRODUCT SECTIONS             */\n  void          *qwt02r1o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r1l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r1n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r2o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r2l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r2n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r3o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r3l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r3n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r4o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r4l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r4n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r5o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r5l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r5n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r6o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r6l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r6n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r7o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r7l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r7n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r8o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r8l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r8n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02r9o;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02r9l\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02r9n\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02rao;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02ral\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02ran\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02rbo;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02rbl\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02rbn\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02rco;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02rcl\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02rcn\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02rdo;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02rdl\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02rdn\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02reo;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02rel\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02ren\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  void          *qwt02rfo;    /* OFFSET TO THE DATA SECTION    TU3100IF */\n  unsigned char  qwt02rfl\u00c42\u00dc; /* LENGTH OF THE DATA SECTION    TU3100IF */\n  unsigned char  qwt02rfn\u00c42\u00dc; /* NUMBER OF DATA SECTIONS       TU3100IF */\n  void          *qwt02rgo;    /* OFFSET TO THE DATA SECTION             */\n  unsigned char  qwt02rgl\u00c42\u00dc; /* LENGTH OF THE DATA SECTION             */\n  unsigned char  qwt02rgn\u00c42\u00dc; /* NUMBER OF DATA SECTIONS                */\n  unsigned char  qwt02end;    /* END OF THE SELF DEFINING SECTION       */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0022": {"ttr": 8323, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0022 \u00e4\n  union \u00e4\n    int            _qw0022qn; /* QUERY NUMBER. */\n    struct \u00e4\n      short int      _qw0022pl; /* PLAN NUMBER.                      */\n      short int      _qw0022mn; /* NUMBER OF INDEX ACCESS OPERATIONS */\n      \u00fc _qw0022_struct1;\n    struct \u00e4\n      short int      _qw0022ms; /* INDEX ACCESS SEQUENCE NUMBER */\n      short int      _qw0022xm; /* NUMBER OF MATCH COLUMNS      */\n      \u00fc _qw0022_struct2;\n    \u00fc _qw0022_union1;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _qw0022dd\u00c42\u00dc; /* DBID        */\n        unsigned char  _qw0022ob\u00c42\u00dc; /* RECORD OBID */\n        \u00fc qw0022i;\n      unsigned char  _qw0022cn\u00c418\u00dc; /* %U TABLE CORRELATION NAME.            */\n      unsigned char  _qw0022cr\u00c48\u00dc;  /* %U TABLE CREATOR.                     */\n      unsigned char  _qw0022tn\u00c418\u00dc; /* %U TABLE NAME                         */\n      unsigned char  _qw0022lm\u00c43\u00dc;  /* TABLESPACE LOCK MODE.                 */\n      unsigned char  _qw0022z;      /* flags                                 */\n      int            _qw0022bp;     /* (S)                                   */\n      struct \u00e4\n        short int      _qw0022od; /* ACCESS METHOD                */\n        short int      _qw0022bx; /* (S)                          */\n        unsigned char  _qw0022yp; /* ACCESS TYPE                  */\n        unsigned char  _qw0022dt; /* PAGE RANGE FLAG.             */\n        short int      _qw0022id; /* (S)                          */\n        void          *_qw0022lr; /* (S)                          */\n        void          *_qw0022tr; /* PTR TO NEXT MINIPLAN IN LIST */\n        short int      _qw0022dx; /* (S)                          */\n        unsigned char  _qw0022ag; /* FLAG FOR NEW (JOIN) TABLE    */\n        unsigned char  _qw0022a2; /* FLAG FOR THE JOIN COMPOSITE  */\n        \u00fc qw0022ni;\n      short int      _qw0022p1;     /* ACCESS_DEGREE - THE DEGREE OF         */\n      short int      _qw0022p2;     /* ACCESS_PGROUP_ID - THE PARALLEL       */\n      short int      _qw0022p3;     /* JOIN_DEGREE - THE DEGREE OF           */\n      short int      _qw0022p4;     /* HALF WORD INTEGER FOR JOIN_PGROUP_ID. */\n      unsigned char  _qw0022p5\u00c44\u00dc;  /* (S)                                   */\n      short int      _qw0022jc;     /* NUMBER OF MERGE JOIN COLUMNS.         */\n      short int      _qw0022cl;     /* (S)                                   */\n      void          *_qw0022ap;     /* (S)                                   */\n      void          *_qw0022jp;     /* (S)                                   */\n      unsigned char  _qw0022jt;     /* 'L' FOR LEFT OUTER JOIN.              */\n      unsigned char  _qw0022wf;     /* (S)                                   */\n      short int      _qw0022p6;     /* SORT NEW PARALLEL GROUP ID.           */\n      short int      _qw0022p7;     /* SORT COMPOSITE PARALLEL GROUP ID.     */\n      unsigned char  _qw0022pm;     /* PARALLEL MODE.                        */\n      unsigned char  _qw0022xx\u00c45\u00dc;  /* (S)                                   */\n      unsigned char  _qw0022ds\u00c44\u00dc;  /* (S)                                   */\n      unsigned char  _qw0022dr\u00c44\u00dc;  /* (S)                                   */\n      unsigned char  _qw0022rd\u00c44\u00dc;  /* (S)                                   */\n      unsigned char  _qw0022pa;     /* 'D' if Direct Access is possible      */\n      unsigned char  _filler1\u00c43\u00dc;   /* UNUSED                                */\n      \u00fc _qw0022_struct3;\n    struct \u00e4\n      short int      _qw0022qb;     /* QUERY BLOCK NUMBER.        */\n      short int      _qw0022pq;     /* PARENT QUERY BLOCK NUMBER. */\n      unsigned char  _qw0022gm\u00c48\u00dc;  /* GROUP MEMBER.              */\n      unsigned char  _qw0022al\u00c48\u00dc;  /* APPLICATION NAME.          */\n      unsigned char  _qw0022pn\u00c48\u00dc;  /* PLAN NAME                  */\n      unsigned char  _qw0022ci\u00c418\u00dc; /* %U COLLECTION ID.          */\n      unsigned char  _qw0022pg\u00c48\u00dc;  /* %U PROGRAM NAME.           */\n      unsigned char  _qw0022ct\u00c48\u00dc;  /* CONSISTENCY TOKEN.         */\n      short int      _qw0022vl;     /* VERSION LENGTH.            */\n      unsigned char  _qw0022vn\u00c464\u00dc; /* VERSION.                   */\n      \u00fc _qw0022_struct4;\n    struct \u00e4\n      unsigned char  _qw0022xc\u00c48\u00dc;  /* %U INDEX CREATOR               */\n      unsigned char  _qw0022xn\u00c418\u00dc; /* %U INDEX NAME                  */\n      unsigned char  _qw0022mo;     /* TYPE OF INDEX ACCESS OPERATION */\n      unsigned char  _qw0022xf;     /* INDEX ACCESS FLAGS             */\n      unsigned char  _qw0022ff\u00c44\u00dc;  /* (S)                            */\n      short int      _qw0022xc_off; /* Offset from QW0022 to          */\n      short int      _qw0022xn_off; /* Offset from QW0022 to          */\n      unsigned char  _filler2\u00c48\u00dc;   /* UNUSED                         */\n      unsigned char  _filler3\u00c484\u00dc;\n      \u00fc _qw0022_struct5;\n    \u00fc _qw0022_union2;\n  union \u00e4\n    unsigned char  _qw0022os\u00c44\u00dc; /* COST FOR THE SQL STATEMENT          */\n    unsigned char  _qw0022cy\u00c44\u00dc; /* Table Cardinality in floating point */\n    \u00fc _qw0022_union3;\n  union \u00e4\n    struct \u00e4\n      short int      _qw0022lc; /* (S) */\n      short int      _qw0022gc; /* (S) */\n      \u00fc _qw0022_struct6;\n    int            _qw0022np; /* Number of pages for table */\n    \u00fc _qw0022_union4;\n  union \u00e4\n    unsigned char  _qw0022rp; /* Query Parallelism is disabled by the */\n    unsigned char  _filler4;  /* UNUSED (RESERVED FOR QW00PA IN V6)   */\n    \u00fc _qw0022_union5;\n  unsigned char  qw0022f2;     /* FLAGS                               */\n  union \u00e4\n    unsigned char  _qw0022rx\u00c42\u00dc; /* X'0000' =   0: Access path determined */\n    struct \u00e4\n      unsigned char  _qw0022tt; /* Table type: 'T','F','W','Q' */\n      unsigned char  _filler5;  /* UNUSED                      */\n      \u00fc _qw0022_struct7;\n    \u00fc _qw0022_union6;\n  union \u00e4\n    unsigned char  _qw0022ts\u00c416\u00dc; /* TIMESTAMP. */\n    struct \u00e4\n      short int      _qw0022cn_off; /* Offset from QW0022 to */\n      short int      _qw0022cr_off; /* Offset from QW0022 to */\n      short int      _qw0022tn_off; /* Offset from QW0022 to */\n      unsigned char  _filler6\u00c410\u00dc;  /* UNUSED                */\n      \u00fc _qw0022_struct8;\n    \u00fc _qw0022_union7;\n  unsigned char  qw0022qt\u00c46\u00dc;  /* Statement type                      */\n  unsigned char  qw0022bt\u00c410\u00dc; /* Bind Time                           */\n  int            qw0022ce;     /* Processor Cost Estimate (millisecs) */\n  int            qw0022as;     /* Processor Cost Estimate (SU)        */\n  unsigned char  qw0022cc;     /* COST CATEGORY                       */\n  unsigned char  qw0022rs;     /* COST CATEGORY B REASON CODE         */\n  unsigned char  _filler7\u00c42\u00dc;  /* RESERVED                            */\n  unsigned char  qw0022qo\u00c48\u00dc;  /* %U OPTIMIZATION HINT identifier     */\n  unsigned char  qw0022fg;     /* FLAGS                               */\n  unsigned char  _filler8\u00c43\u00dc;  /* Reserved                            */\n  unsigned char  qw0022co\u00c44\u00dc;  /* (S) (FLOAT)                         */\n  short int      qw0022ci_off; /* Offset from QW0022 to               */\n  short int      qw0022pg_off; /* Offset from QW0022 to               */\n  short int      qw0022qo_off; /* Offset from QW0022 to               */\n  \u00fc;\n\n#define qw0022qn     _qw0022_union1._qw0022qn\n#define qw0022pl     _qw0022_union1._qw0022_struct1._qw0022pl\n#define qw0022mn     _qw0022_union1._qw0022_struct1._qw0022mn\n#define qw0022ms     _qw0022_union1._qw0022_struct2._qw0022ms\n#define qw0022xm     _qw0022_union1._qw0022_struct2._qw0022xm\n#define qw0022dd     _qw0022_union2._qw0022_struct3.qw0022i._qw0022dd\n#define qw0022ob     _qw0022_union2._qw0022_struct3.qw0022i._qw0022ob\n#define qw0022cn     _qw0022_union2._qw0022_struct3._qw0022cn\n#define qw0022cr     _qw0022_union2._qw0022_struct3._qw0022cr\n#define qw0022tn     _qw0022_union2._qw0022_struct3._qw0022tn\n#define qw0022lm     _qw0022_union2._qw0022_struct3._qw0022lm\n#define qw0022z      _qw0022_union2._qw0022_struct3._qw0022z\n#define qw0022bp     _qw0022_union2._qw0022_struct3._qw0022bp\n#define qw0022od     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022od\n#define qw0022bx     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022bx\n#define qw0022yp     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022yp\n#define qw0022dt     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022dt\n#define qw0022id     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022id\n#define qw0022lr     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022lr\n#define qw0022tr     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022tr\n#define qw0022dx     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022dx\n#define qw0022ag     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022ag\n#define qw0022a2     _qw0022_union2._qw0022_struct3.qw0022ni._qw0022a2\n#define qw0022p1     _qw0022_union2._qw0022_struct3._qw0022p1\n#define qw0022p2     _qw0022_union2._qw0022_struct3._qw0022p2\n#define qw0022p3     _qw0022_union2._qw0022_struct3._qw0022p3\n#define qw0022p4     _qw0022_union2._qw0022_struct3._qw0022p4\n#define qw0022p5     _qw0022_union2._qw0022_struct3._qw0022p5\n#define qw0022jc     _qw0022_union2._qw0022_struct3._qw0022jc\n#define qw0022cl     _qw0022_union2._qw0022_struct3._qw0022cl\n#define qw0022ap     _qw0022_union2._qw0022_struct3._qw0022ap\n#define qw0022jp     _qw0022_union2._qw0022_struct3._qw0022jp\n#define qw0022jt     _qw0022_union2._qw0022_struct3._qw0022jt\n#define qw0022wf     _qw0022_union2._qw0022_struct3._qw0022wf\n#define qw0022p6     _qw0022_union2._qw0022_struct3._qw0022p6\n#define qw0022p7     _qw0022_union2._qw0022_struct3._qw0022p7\n#define qw0022pm     _qw0022_union2._qw0022_struct3._qw0022pm\n#define qw0022xx     _qw0022_union2._qw0022_struct3._qw0022xx\n#define qw0022ds     _qw0022_union2._qw0022_struct3._qw0022ds\n#define qw0022dr     _qw0022_union2._qw0022_struct3._qw0022dr\n#define qw0022rd     _qw0022_union2._qw0022_struct3._qw0022rd\n#define qw0022pa     _qw0022_union2._qw0022_struct3._qw0022pa\n#define qw0022qb     _qw0022_union2._qw0022_struct4._qw0022qb\n#define qw0022pq     _qw0022_union2._qw0022_struct4._qw0022pq\n#define qw0022gm     _qw0022_union2._qw0022_struct4._qw0022gm\n#define qw0022al     _qw0022_union2._qw0022_struct4._qw0022al\n#define qw0022pn     _qw0022_union2._qw0022_struct4._qw0022pn\n#define qw0022ci     _qw0022_union2._qw0022_struct4._qw0022ci\n#define qw0022pg     _qw0022_union2._qw0022_struct4._qw0022pg\n#define qw0022ct     _qw0022_union2._qw0022_struct4._qw0022ct\n#define qw0022vl     _qw0022_union2._qw0022_struct4._qw0022vl\n#define qw0022vn     _qw0022_union2._qw0022_struct4._qw0022vn\n#define qw0022xc     _qw0022_union2._qw0022_struct5._qw0022xc\n#define qw0022xn     _qw0022_union2._qw0022_struct5._qw0022xn\n#define qw0022mo     _qw0022_union2._qw0022_struct5._qw0022mo\n#define qw0022xf     _qw0022_union2._qw0022_struct5._qw0022xf\n#define qw0022ff     _qw0022_union2._qw0022_struct5._qw0022ff\n#define qw0022xc_off _qw0022_union2._qw0022_struct5._qw0022xc_off\n#define qw0022xn_off _qw0022_union2._qw0022_struct5._qw0022xn_off\n#define qw0022os     _qw0022_union3._qw0022os\n#define qw0022cy     _qw0022_union3._qw0022cy\n#define qw0022lc     _qw0022_union4._qw0022_struct6._qw0022lc\n#define qw0022gc     _qw0022_union4._qw0022_struct6._qw0022gc\n#define qw0022np     _qw0022_union4._qw0022np\n#define qw0022rp     _qw0022_union5._qw0022rp\n#define qw0022rx     _qw0022_union6._qw0022rx\n#define qw0022tt     _qw0022_union6._qw0022_struct7._qw0022tt\n#define qw0022ts     _qw0022_union7._qw0022ts\n#define qw0022cn_off _qw0022_union7._qw0022_struct8._qw0022cn_off\n#define qw0022cr_off _qw0022_union7._qw0022_struct8._qw0022cr_off\n#define qw0022tn_off _qw0022_union7._qw0022_struct8._qw0022tn_off\n\n/* Values for field \"qw0022z\" */\n#define qw0022cd 0x80 /* 1 IF COLUMN FUNCTION EVALUATED AT    */\n#define qw0022cs 0x40 /* 1 IF COLUMN FUNCTION EVALUATED AT    */\n\n/* Values for field \"qw0022dt\" */\n#define qw0022pr 0x40 /* 1 IF PAGE RANGE SCAN                 */\n\n/* Values for field \"qw0022ag\" */\n#define qw0022bl 0x80 /* SUMMARY FIELD, 1 IF ANY OTHER        */\n#define qw0022in 0x40 /* 1 IF SORT KEY IS JOIN PREDICATE      */\n#define qw0022db 0x20 /* 1 IF SORT KEY IS ORDERBY LIST        */\n#define qw0022pb 0x10 /* 1 IF SORT KEY IS GROUPBY LIST        */\n#define qw0022iq 0x08 /* 1 IF SORT SHOULD ELIMINATE           */\n#define qw0022un 0x04 /* 1 IF SORT KEY IS SET FUNCTION        */\n#define qw0022ef 0x02 /* 1 IF PREFETCH                        */\n#define qw0022es 0x01 /* SORT ON RESULT FOR ORDER-BY          */\n\n/* Values for field \"qw0022a2\" */\n#define qw0022cm 0x80 /* SUMMARY FIELD, 1 IF ANY OTHER        */\n#define qw00222j 0x40 /* 1 IF SORT KEY IS JOIN PREDICAT       */\n#define qw00222o 0x20 /* 1 IF SORT KEY IS ORDERBY LIST        */\n#define qw00222g 0x10 /* 1 IF SORT KEY IS GROUP-BY LIST       */\n#define qw00222q 0x08 /* 1 IF SORT SHOULD ELIMINATE DUP       */\n#define qw00222n 0x04 /* 1 IF SORT KEY IS SET FUNCTION        */\n\n/* Values for field \"qw0022mo\" */\n#define qw0022mx 0x80 /* 1 IF INDEX SCAN                      */\n#define qw0022mi 0x40 /* 1 IF INDEX INTERSECTION              */\n#define qw0022mu 0x20 /* 1 IF INDEX UNION                     */\n\n/* Values for field \"qw0022xf\" */\n#define qw0022xo 0x80 /* 1 IF INDEX ONLY                      */\n#define qw0022sp 0x40 /* 1 IF SEQUENTIAL PREFETCH             */\n#define qw0022lp 0x20 /* 1 IF LIST PREFETCH                   */\n\n/* Values for field \"qw0022f2\" */\n#define qw0022sj 0x10 /* YES IF THIS TABLE IS STARJOIN BY DM. */\n\n/* Values for field \"qw0022cc\" */\n#define qw0022ac 'A'  /* CATEGORY A                           */\n#define qw0022bc 'B'  /* CATEGORY B                           */\n#define qw0022b  ' '  /* NOT PROVIDED                         */\n\n/* Values for field \"qw0022rs\" */\n#define qw0022rh 0x80 /* 1 IF THERE ARE HOST VARIABLES        */\n#define qw0022rt 0x40 /* 1 IF TABLE CARD IS MISSING           */\n#define qw0022rg 0x20 /* 1 IF TRIGGERS MAY BE USED            */\n#define qw0022rf 0x10 /* 1 IF UDFS MIGHT BE INVOKED           */\n#define qw0022rr 0x08 /* 1 IF REFERENTIAL CONSTRAINTS         */\n#define qw0022rv 0x04 /* 1 IF HAVING CLAUSE                   */\n\n/* Values for field \"qw0022fg\" */\n#define qw0022ht 0x80 /* 1 IF OPTIMIZATION HINTS WERE USED    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0053": {"ttr": 8163, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0053 \u00e4\n  union \u00e4\n    unsigned char  _qw0053ln\u00c416\u00dc; /* %U LOCATION NAME */\n    struct \u00e4\n      unsigned char  _qw0053id\u00c44\u00dc; /* IDENTIFICATION (ID) - SEE EQUATES BELOW */\n      unsigned char  _filler1\u00c44\u00dc;  /* UNUSED                                  */\n      unsigned char  _qw0053rp\u00c48\u00dc; /* ROWS PROCESSED- ANY RECORD TYPE         */\n      \u00fc _qw0053_struct1;\n    \u00fc _qw0053_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _qw0053pc\u00c418\u00dc;  /* %U PACKAGE COLLECTION ID */\n      unsigned char  _qw0053pn\u00c418\u00dc;  /* %U PROGRAM NAME          */\n      unsigned char  _qw0053ts\u00c48\u00dc;   /* PRECOMPILER TIME STAMP   */\n      unsigned char  _qw0053os\u00c42\u00dc;   /* RESERVED                 */\n      unsigned char  _qw0053sq\u00c4136\u00dc; /* SQLCA CONTENTS           */\n      \u00fc _qw0053_struct2;\n    struct \u00e4\n      unsigned char  _qw0053la\u00c48\u00dc;   /* ROWS LOOKED AT - RIGHT RECORD TYPE      */\n      unsigned char  _qw0053dq\u00c48\u00dc;   /* ROWS DATA MANAGER QUALIFIED             */\n      unsigned char  _qw0053rq\u00c48\u00dc;   /* ROWS RDS QUALIFIED                      */\n      unsigned char  _qw0053in\u00c48\u00dc;   /* ROWS INSERTED                           */\n      unsigned char  _qw0053up\u00c48\u00dc;   /* ROWS UPDATED                            */\n      unsigned char  _qw0053de\u00c48\u00dc;   /* ROWS DELETED                            */\n      int            _qw0053ps;      /* PAGES SCANNED                           */\n      int            _qw0053pr;      /* ADDITIONAL PAGES SCANNED TO ENFORCE     */\n      unsigned char  _qw0053dr\u00c48\u00dc;   /* ADDITIONAL ROWS DELETED OR SET NULL     */\n      unsigned char  _qw0053pl\u00c44\u00dc;   /* Additional pages scanned in a LOB       */\n      unsigned char  _qw0053ul\u00c44\u00dc;   /* Count of LOB data pages updated (either */\n      unsigned char  _filler2\u00c4110\u00dc;\n      \u00fc _qw0053_struct3;\n    \u00fc _qw0053_union2;\n  unsigned char  _filler3\u00c42\u00dc;  /* RESERVED              */\n  int            qw0053sn;     /* STATEMENT NUMBER      */\n  short int      qw0053ln_off; /* Offset from QW0053 to */\n  short int      qw0053pc_off; /* Offset from QW0053 to */\n  short int      qw0053pn_off; /* Offset from QW0053 to */\n  unsigned char  qw0053cid\u00c48\u00dc; /* QUERY COMMAND ID      */\n  unsigned char  qw0053qid\u00c48\u00dc; /* QUERY INSTANCE ID     */\n  \u00fc;\n\n#define qw0053ln _qw0053_union1._qw0053ln\n#define qw0053id _qw0053_union1._qw0053_struct1._qw0053id\n#define qw0053rp _qw0053_union1._qw0053_struct1._qw0053rp\n#define qw0053pc _qw0053_union2._qw0053_struct2._qw0053pc\n#define qw0053pn _qw0053_union2._qw0053_struct2._qw0053pn\n#define qw0053ts _qw0053_union2._qw0053_struct2._qw0053ts\n#define qw0053os _qw0053_union2._qw0053_struct2._qw0053os\n#define qw0053sq _qw0053_union2._qw0053_struct2._qw0053sq\n#define qw0053la _qw0053_union2._qw0053_struct3._qw0053la\n#define qw0053dq _qw0053_union2._qw0053_struct3._qw0053dq\n#define qw0053rq _qw0053_union2._qw0053_struct3._qw0053rq\n#define qw0053in _qw0053_union2._qw0053_struct3._qw0053in\n#define qw0053up _qw0053_union2._qw0053_struct3._qw0053up\n#define qw0053de _qw0053_union2._qw0053_struct3._qw0053de\n#define qw0053ps _qw0053_union2._qw0053_struct3._qw0053ps\n#define qw0053pr _qw0053_union2._qw0053_struct3._qw0053pr\n#define qw0053dr _qw0053_union2._qw0053_struct3._qw0053dr\n#define qw0053pl _qw0053_union2._qw0053_struct3._qw0053pl\n#define qw0053ul _qw0053_union2._qw0053_struct3._qw0053ul\n\n/* Values for field \"qw0053ul\" */\n#define qw0053ix 0xC9D5C4E7 /* ID = INDEX                    */\n#define qw0053sd 0xE2C5D8C4 /* ID = SEQUENTIAL DATA          */\n#define qw0053sw 0xE2C5D8E6 /* ID = SEQUENTIAL DATA WORKFILE */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0055": {"ttr": 8231, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0055 \u00e4\n  unsigned char  qw0055oi\u00c48\u00dc;  /* %U PREVIOUS (CURRENT) SQLID          */\n  unsigned char  qw0055ni\u00c48\u00dc;  /* %U NEW (ATTEMPTED ) SQLID            */\n  unsigned char  qw0055st;     /* STATUS OF STATEMENT(SUCCESS or FAIL) */\n  unsigned char  _filler1;     /* Reserved                             */\n  short int      qw0055oi_off; /* Offset from QW0055 to                */\n  short int      qw0055ni_off; /* Offset from QW0055 to                */\n  \u00fc;\n\n/* Values for field \"qw0055ni_off\" */\n#define qw0055s 'S'  /* SUCCESSFUL STATUS                 */\n#define qw0055f 'F'  /* FAILED STATUS                     */\n#define qw0055x 'X'  /* SUCCESSFUL - USER HAD SYSADM AUTH */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0058": {"ttr": 8735, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0058 \u00e4\n  union \u00e4\n    unsigned char  _qw0058ln\u00c416\u00dc; /* %U LOCATION NAME */\n    struct \u00e4\n      unsigned char  _qw0058id\u00c44\u00dc; /* IDENTIFICATION (ID) - SEE EQUATES BELOW */\n      unsigned char  _filler1\u00c44\u00dc;  /* UNUSED                                  */\n      unsigned char  _qw0058rp\u00c48\u00dc; /* ROWS PROCESSED- ANY RECORD TYPE         */\n      \u00fc _qw0058_struct1;\n    \u00fc _qw0058_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _qw0058pc\u00c418\u00dc;  /* %U PACKAGE COLLECTION ID */\n      unsigned char  _qw0058pn\u00c418\u00dc;  /* %U PROGRAM NAME          */\n      unsigned char  _qw0058ts\u00c48\u00dc;   /* PRECOMPILER TIME STAMP   */\n      unsigned char  _qw0058os\u00c42\u00dc;   /* RESERVED                 */\n      unsigned char  _qw0058sq\u00c4136\u00dc; /* SQLCA CONTENTS           */\n      \u00fc _qw0058_struct2;\n    struct \u00e4\n      unsigned char  _qw0058la\u00c48\u00dc;   /* ROWS LOOKED AT - RIGHT RECORD TYPE      */\n      unsigned char  _qw0058dq\u00c48\u00dc;   /* ROWS DATA MANAGER QUALIFIED             */\n      unsigned char  _qw0058rq\u00c48\u00dc;   /* ROWS RDS QUALIFIED                      */\n      unsigned char  _qw0058in\u00c48\u00dc;   /* ROWS INSERTED                           */\n      unsigned char  _qw0058up\u00c48\u00dc;   /* ROWS UPDATED                            */\n      unsigned char  _qw0058de\u00c48\u00dc;   /* ROWS DELETED                            */\n      unsigned char  _qw0058ps\u00c44\u00dc;   /* PAGES SCANNED                           */\n      unsigned char  _qw0058pr\u00c44\u00dc;   /* ADDITIONAL PAGES SCANNED TO ENFORCE     */\n      unsigned char  _qw0058dr\u00c48\u00dc;   /* ADDITIONAL ROWS DELETED OR SET NULL     */\n      unsigned char  _qw0058pl\u00c44\u00dc;   /* Additional pages scanned in a LOB       */\n      unsigned char  _qw0058ul\u00c44\u00dc;   /* Count of LOB data pages updated (either */\n      unsigned char  _filler2\u00c4110\u00dc;\n      \u00fc _qw0058_struct3;\n    \u00fc _qw0058_union2;\n  unsigned char  _filler3\u00c42\u00dc;  /* Reserved              */\n  int            qw0058sn;     /* STATEMENT NUMBER      */\n  short int      qw0058ln_off; /* Offset from QW0058 to */\n  short int      qw0058pc_off; /* Offset from QW0058 to */\n  short int      qw0058pn_off; /* Offset from QW0058 to */\n  unsigned char  qw0058cid\u00c48\u00dc; /* QUERY COMMAND ID      */\n  unsigned char  qw0058qid\u00c48\u00dc; /* QUERY INSTANCE ID     */\n  \u00fc;\n\n#define qw0058ln _qw0058_union1._qw0058ln\n#define qw0058id _qw0058_union1._qw0058_struct1._qw0058id\n#define qw0058rp _qw0058_union1._qw0058_struct1._qw0058rp\n#define qw0058pc _qw0058_union2._qw0058_struct2._qw0058pc\n#define qw0058pn _qw0058_union2._qw0058_struct2._qw0058pn\n#define qw0058ts _qw0058_union2._qw0058_struct2._qw0058ts\n#define qw0058os _qw0058_union2._qw0058_struct2._qw0058os\n#define qw0058sq _qw0058_union2._qw0058_struct2._qw0058sq\n#define qw0058la _qw0058_union2._qw0058_struct3._qw0058la\n#define qw0058dq _qw0058_union2._qw0058_struct3._qw0058dq\n#define qw0058rq _qw0058_union2._qw0058_struct3._qw0058rq\n#define qw0058in _qw0058_union2._qw0058_struct3._qw0058in\n#define qw0058up _qw0058_union2._qw0058_struct3._qw0058up\n#define qw0058de _qw0058_union2._qw0058_struct3._qw0058de\n#define qw0058ps _qw0058_union2._qw0058_struct3._qw0058ps\n#define qw0058pr _qw0058_union2._qw0058_struct3._qw0058pr\n#define qw0058dr _qw0058_union2._qw0058_struct3._qw0058dr\n#define qw0058pl _qw0058_union2._qw0058_struct3._qw0058pl\n#define qw0058ul _qw0058_union2._qw0058_struct3._qw0058ul\n\n/* Values for field \"qw0058ul\" */\n#define qw0058ix 0xC9D5C4E7 /* ID = INDEX                    */\n#define qw0058sd 0xE2C5D8C4 /* ID = SEQUENTIAL DATA          */\n#define qw0058sw 0xE2C5D8E6 /* ID = SEQUENTIAL DATA WORKFILE */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0059": {"ttr": 8371, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0059 \u00e4\n  unsigned char  qw0059ln\u00c416\u00dc; /* %U LOCATION NAME         */\n  unsigned char  qw0059pc\u00c418\u00dc; /* %U PACKAGE COLLECTION ID */\n  unsigned char  qw0059pn\u00c418\u00dc; /* %U PROGRAM NAME          */\n  unsigned char  qw0059ts\u00c48\u00dc;  /* PRECOMPILER TIME STAMP   */\n  unsigned char  qw0059os\u00c42\u00dc;  /* Reserved                 */\n  unsigned char  qw0059st;     /* STATEMENT TYPE           */\n  unsigned char  qw0059cl\u00c42\u00dc;  /* CURSOR NAME LENGTH       */\n  unsigned char  qw0059cn\u00c418\u00dc; /* %U CURSOR NAME           */\n  unsigned char  _filler1;     /* Reserved                 */\n  int            qw0059sn;     /* STATEMENT NUMBER         */\n  unsigned char  qw0059fs;     /* FETCH SENSITIVITY        */\n  unsigned char  qw0059fo;     /* FETCH ORIENTATION        */\n  unsigned char  _filler2\u00c42\u00dc;  /* Reserved                 */\n  short int      qw0059ln_off; /* Offset from QW0059 to    */\n  short int      qw0059pc_off; /* Offset from QW0059 to    */\n  short int      qw0059pn_off; /* Offset from QW0059 to    */\n  short int      qw0059cn_off; /* Offset from QW0059 to    */\n  unsigned char  qw0059cid\u00c48\u00dc; /* QUERY COMMAND ID         */\n  unsigned char  qw0059qid\u00c48\u00dc; /* QUERY INSTANCE ID        */\n  \u00fc;\n\n/* Values for field \"qw0059st\" */\n#define qw0059fe 0x01 /* FETCH TYPE                    */\n\n/* Values for field \"qw0059fs\" */\n#define qw0059sf 'S'  /* FETCH SENSITIVE               */\n#define qw0059if 'I'  /* FETCH INSENSITIVE             */\n#define qw0059uf ' '  /* FETCH SENSITIVITY UNSPECIFIED */\n\n/* Values for field \"qw0059fo\" */\n#define qw0059ff 'F'  /* FETCH FIRST                   */\n#define qw0059fl 'L'  /* FETCH LAST                    */\n#define qw0059fb 'B'  /* FETCH BEFORE                  */\n#define qw0059fa 'A'  /* FETCH AFTER                   */\n#define qw0059fn 'N'  /* FETCH NEXT                    */\n#define qw0059fp 'P'  /* FETCH PREV                    */\n#define qw0059fc 'C'  /* FETCH CURRENT                 */\n#define qw0059ft 'T'  /* FETCH ABSOLUTE                */\n#define qw0059fr 'R'  /* FETCH RELATIVE                */\n#define qw0059fu ' '  /* FETCH ORIENTATION UNSPECIFIED */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0060": {"ttr": 8025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0060 \u00e4\n  unsigned char  qw0060ln\u00c416\u00dc; /* %U LOCATION NAME          */\n  unsigned char  qw0060pc\u00c418\u00dc; /* %U PACKAGE COLLECTION ID  */\n  unsigned char  qw0060pn\u00c418\u00dc; /* %U PROGRAM NAME           */\n  unsigned char  qw0060ts\u00c48\u00dc;  /* PRECOMPILER TIME STAMP    */\n  unsigned char  qw0060os\u00c42\u00dc;  /* Reserved                  */\n  unsigned char  qw0060st;     /* STATEMENT TYPE            */\n  unsigned char  qw0060i;      /* STATEMENT ISOLATION LEVEL */\n  unsigned char  qw0060ro\u00c42\u00dc;  /* REOPTIMIZATION            */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                  */\n  int            qw0060sn;     /* STATEMENT NUMBER          */\n  short int      qw0060ln_off; /* Offset from QW0060 to     */\n  short int      qw0060pc_off; /* Offset from QW0060 to     */\n  short int      qw0060pn_off; /* Offset from QW0060 to     */\n  unsigned char  qw0060cid\u00c48\u00dc; /* QUERY COMMAND ID          */\n  unsigned char  qw0060qid\u00c48\u00dc; /* QUERY INSTANCE ID         */\n  \u00fc;\n\n/* Values for field \"qw0060ro\" */\n#define qw0060rr 'R'  /* RR ISOLATION LEVEL                     */\n#define qw0060rs 'T'  /* RS ISOLATION LEVEL                     */\n#define qw0060cs 'S'  /* CS ISOLATION LEVEL                     */\n#define qw0060ur 'U'  /* UR ISOLATION LEVEL                     */\n#define qw0060r0 0x00 /* REOPTIMIZATION DID NOT OCCUR           */\n#define qw0060r1 0x01 /* REOPTIMIZATION OCCURRED FOR INPUT VARS */\n#define qw0060se 0x00 /* SELECT TYPE                            */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0061": {"ttr": 7999, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0061 \u00e4\n  unsigned char  qw0061ln\u00c416\u00dc; /* %U LOCATION NAME          */\n  unsigned char  qw0061pc\u00c418\u00dc; /* %U PACKAGE COLLECTION ID  */\n  unsigned char  qw0061pn\u00c418\u00dc; /* %U PROGRAM NAME           */\n  unsigned char  qw0061ts\u00c48\u00dc;  /* PRECOMPILER TIME STAMP    */\n  unsigned char  qw0061os\u00c42\u00dc;  /* Reserved                  */\n  unsigned char  qw0061st;     /* STATEMENT TYPE            */\n  unsigned char  qw0061cl\u00c42\u00dc;  /* CURSOR NAME LENGTH        */\n  unsigned char  qw0061cn\u00c418\u00dc; /* %U CURSOR NAME            */\n  unsigned char  qw0061i;      /* STATEMENT ISOLATION LEVEL */\n  unsigned char  qw0061ro\u00c42\u00dc;  /* REOPTIMIZATION            */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                  */\n  int            qw0061sn;     /* STATEMENT NUMBER          */\n  short int      qw0061ln_off; /* Offset from QW0061 to     */\n  short int      qw0061pc_off; /* Offset from QW0061 to     */\n  short int      qw0061pn_off; /* Offset from QW0061 to     */\n  short int      qw0061cn_off; /* Offset from QW0061 to     */\n  unsigned char  qw0061ci\u00c48\u00dc;  /* QUERY COMMAND ID          */\n  unsigned char  qw0061qi\u00c48\u00dc;  /* QUERY INSTANCE ID         */\n  \u00fc;\n\n/* Values for field \"qw0061st\" */\n#define qw0061is 0x10 /* INSERT TYPE                            */\n#define qw0061un 0x20 /* UPDATE TYPE- NON CURSOR                */\n#define qw0061uc 0x21 /* UPDATE TYPE- CURSOR                    */\n#define qw0061mg 0x30 /* MERGE  TYPE                            */\n#define qw0061dn 0x40 /* DELETE TYPE- NON CURSOR                */\n#define qw0061dc 0x41 /* DELETE TYPE- CURSOR                    */\n#define qw0061tr 0x50 /* TRUNCATE TYPE                          */\n\n/* Values for field \"qw0061i\" */\n#define qw0061rr 'R'  /* RR ISOLATION LEVEL                     */\n#define qw0061rs 'T'  /* RS ISOLATION LEVEL                     */\n#define qw0061cs 'S'  /* CS ISOLATION LEVEL                     */\n\n/* Values for field \"qw0061ro\" */\n#define qw0061r0 0x00 /* REOPTIMIZATION DID NOT OCCUR           */\n#define qw0061r1 0x01 /* REOPTIMIZATION OCCURRED FOR INPUT VARS */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0062": {"ttr": 8463, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0062 \u00e4\n  unsigned char  qw0062st;    /* STATEMENT TYPE       */\n  unsigned char  qw0062ot;    /* OBJECT TYPE          */\n  unsigned char  qw0062ol\u00c42\u00dc; /* OBJECT NAME LENGTH+2 */\n  unsigned char  qw0062on;    /* %U OBJECT NAME       */\n  \u00fc;\n\n/* Values for field \"qw0062st\" */\n#define qw0062cj 0xF0 /* CREATE JAR                     */\n#define qw0062ca 0xF1 /* CREATE ALIAS                   */\n#define qw0062cx 0xF2 /* CREATE AUX TABLE               */\n#define qw0062ct 0xF3 /* CREATE TABLE                   */\n#define qw0062cl 0xF4 /* CREATE GLOBAL TEMPORARY TABLE  */\n#define qw0062ci 0xF5 /* CREATE INDEX                   */\n#define qw0062cf 0xF6 /* CREATE FUNCTION                */\n#define qw0062cb 0xF7 /* CREATE TABLESPACE              */\n#define qw0062cp 0xF8 /* CREATE PROCEDURE               */\n#define qw0062cs 0xF9 /* CREATE SYNONYM                 */\n#define qw0062cd 0xFB /* CREATE DATABASE                */\n#define qw0062ce 0xFC /* CREATE DISTINCT TYPE           */\n#define qw0062cg 0xFD /* CREATE STORAGE GROUP           */\n#define qw0062cr 0xFE /* CREATE TRIGGER                 */\n#define qw0062cv 0xFF /* CREATE VIEW                    */\n#define qw0062cq 0xC0 /* CREATE SEQUENCES               */\n#define qw0062rc 0xB1 /* CREATE ROLE                    */\n#define qw0062cu 0xB2 /* CREATE TRUSTED CONTEXT         */\n#define qw0062dj 0xE0 /* DROP JAR                       */\n#define qw0062da 0xE1 /* DROP ALIAS                     */\n#define qw0062dt 0xE3 /* DROP TABLE                     */\n#define qw0062di 0xE5 /* DROP INDEX                     */\n#define qw0062db 0xE7 /* DROP TABLESPACE                */\n#define qw0062df 0xE8 /* DROP UDF                       */\n#define qw0062ds 0xE9 /* DROP SYNONYM                   */\n#define qw0062dp 0xEA /* DROP PROCEDURE                 */\n#define qw0062dd 0xEB /* DROP DATABASE                  */\n#define qw0062de 0xEC /* DROP DISTINCT TYPE             */\n#define qw0062dg 0xED /* DROP STORAGE GROUP             */\n#define qw0062dr 0xEE /* DROP TRIGGER                   */\n#define qw0062dv 0xEF /* DROP VIEW                      */\n#define qw0062dk 0xD2 /* DROP PACKAGE                   */\n#define qw0062dq 0xB0 /* DROP SEQUENCES                 */\n#define qw0062du 0xB3 /* DROP TRUSTED CONTEXT           */\n#define qw0062rd 0xB4 /* DROP ROLE                      */\n#define qw0062ag 0xDD /* ALTER STORAGE GROUP            */\n#define qw0062at 0xD3 /* ALTER TABLE                    */\n#define qw0062af 0xD4 /* ALTER FUNCTION                 */\n#define qw0062ai 0xD5 /* ALTER INDEX                    */\n#define qw0062ap 0xD6 /* ALTER PROCEDURE                */\n#define qw0062ab 0xD7 /* ALTER TABLESPACE               */\n#define qw0062ad 0xDB /* ALTER DATABASE                 */\n#define qw0062aq 0xA0 /* ALTER SEQUENCES                */\n#define qw0062aj 0xA2 /* ALTER JAR                      */\n#define qw0062av 0xDA /* ALTER VIEW                     */\n#define qw0062au 0xB5 /* ALTER TRUSTED CONTEXT          */\n#define qw0062dc 0xC1 /* DECLARE GLOBAL TEMPORARY TABLE */\n#define qw0062co 0xC3 /* COMMENT ON                     */\n#define qw0062lo 0xC5 /* LABEL ON                       */\n#define qw0062lk 0xC7 /* LOCK                           */\n#define qw0062gr 0xC9 /* GRANT                          */\n#define qw0062rv 0xCB /* REVOKE                         */\n#define qw0062rx 0xCC /* RENAME INDEX                   */\n#define qw0062rt 0xCD /* RENAME TABLE                   */\n#define qw0062hl 0xCE /* HOLD LOCATOR                   */\n#define qw0062fl 0xCF /* FREE LOCATOR                   */\n\n/* Values for field \"qw0062ot\" */\n#define qw0062t  'T'  /* TABLE                          */\n#define qw0062i  'I'  /* INDEX                          */\n#define qw0062p  'P'  /* TABLESPACE                     */\n#define qw0062y  'Y'  /* SYNONYM                        */\n#define qw0062d  'D'  /* DATA BASE                      */\n#define qw0062s  'S'  /* STORAGE GROUP                  */\n#define qw0062v  'V'  /* VIEW                           */\n#define qw0062a  'A'  /* ALIAS                          */\n#define qw0062k  'K'  /* PACKAGE                        */\n#define qw0062f  'F'  /* FUNCTION                       */\n#define qw0062o  'O'  /* STORED PROCEDURE               */\n#define qw0062r  'R'  /* TRIGGER                        */\n#define qw0062e  'E'  /* DISTINCT TYPE                  */\n#define qw0062j  'J'  /* JAR                            */\n#define qw0062q  'Q'  /* SEQUENCES                      */\n#define qw0062u  'U'  /* TRUSTED CONTEXT                */\n#define qw0062l  'L'  /* ROLE                           */\n#define qw0062n  'N'  /* NONE                           */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0063": {"ttr": 8001, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0063 \u00e4\n  unsigned char  qw0063ot;    /* PARSER OPTIONS AND HOST LANGUAGE        */\n  unsigned char  qw0063hl;    /* HOST LANGUAGE SECOND FIELD              */\n  unsigned char  qw0063ll\u00c42\u00dc; /* LL - LENGTH OF FOLLOWING FIELD + 2      */\n  unsigned char  qw0063st;    /* %U SQL STATEMENT REQUESTED TO BE PARSED */\n  \u00fc;\n\n/* Values for field \"qw0063ot\" */\n#define qw0063oq 0x80 /* OPTION - APOST(0) OR QUOTE(1)          */\n#define qw0063od 0x40 /* OPTION - PERIOD(0) OR COMMA(1)         */\n#define qw0063or 0x20 /* OPTION - APOSTSQL(0) OR QUOTESQL(1)    */\n#define qw0063om 0x10 /* OPTION - MIXED=NO (0) OR MIXED=YES (1) */\n#define qw0063oh 0x07 /* OPTION - HOST LANGUAGE BIT MASK        */\n#define qw0063oa 1    /* OPTION - HOST ASSEMBLER LANGUAGE       */\n#define qw0063oc 2    /* OPTION - HOST COBOL                    */\n#define qw0063op 3    /* OPTION - HOST PL/I                     */\n#define qw0063os 4    /* OPTION - DYNAMIC SQL                   */\n#define qw0063of 5    /* OPTION - HOST FORTRAN                  */\n#define qw0063o2 6    /* OPTION - HOST COB2                     */\n#define qw006307 7    /* LOOK AT FIELD QW0063HL TO DETERMINE    */\n\n/* Values for field \"qw0063hl\" */\n#define qw0063hb 'B'  /* OPTION - HOST ASSEMBLER                */\n#define qw0063hc 'C'  /* OPTION - HOST COBOL                    */\n#define qw0063hd 'D'  /* OPTION - HOST C                        */\n#define qw0063hf 'F'  /* OPTION - HOST FORTRAN                  */\n#define qw0063hp 'P'  /* OPTION - HOST PL/I                     */\n#define qw0063h2 '2'  /* OPTION - HOST COBOL II                 */\n#define qw0063h3 '3'  /* OPTION - HOST IBM COBOL                */\n#define qw0063h4 '4'  /* OPTION - HOST C++                      */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0064": {"ttr": 8299, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0064 \u00e4\n  unsigned char  qw0064ln\u00c416\u00dc; /* %U LOCATION NAME         */\n  unsigned char  qw0064ci\u00c418\u00dc; /* %U PACKAGE COLLECTION ID */\n  unsigned char  qw0064pn\u00c418\u00dc; /* %U PROGRAM NAME          */\n  unsigned char  qw0064ts\u00c48\u00dc;  /* PRECOMPILER TIME STAMP   */\n  unsigned char  qw0064os\u00c42\u00dc;  /* Reserved                 */\n  unsigned char  qw0064st;     /* STATEMENT TYPE           */\n  unsigned char  qw0064cl\u00c42\u00dc;  /* CURSOR NAME LENGTH       */\n  unsigned char  qw0064cn\u00c418\u00dc; /* %U CURSOR NAME           */\n  unsigned char  _filler1;     /* Reserved                 */\n  int            qw0064sn;     /* STATEMENT NUMBER         */\n  short int      qw0064ln_off; /* Offset from QW0064 to    */\n  short int      qw0064ci_off; /* Offset from QW0064 to    */\n  short int      qw0064pn_off; /* Offset from QW0064 to    */\n  short int      qw0064cn_off; /* Offset from QW0064 to    */\n  unsigned char  qw0064cid\u00c48\u00dc; /* QUERY COMMAND ID         */\n  unsigned char  qw0064qid\u00c48\u00dc; /* QUERY INSTANCE ID        */\n  \u00fc;\n\n/* Values for field \"qw0064st\" */\n#define qw0064pc 0x81 /* PREPARE TYPE, CURSOR SECTION   */\n#define qw0064p  0x80 /* PREPARE TYPE,NON CURSORSECTION */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0065": {"ttr": 8709, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0065 \u00e4\n  unsigned char  qw0065ln\u00c416\u00dc; /* %U LOCATION NAME          */\n  unsigned char  qw0065pc\u00c418\u00dc; /* %U PACKAGE COLLECTION ID  */\n  unsigned char  qw0065pn\u00c418\u00dc; /* %U PROGRAM NAME           */\n  unsigned char  qw0065ts\u00c48\u00dc;  /* PRECOMPILER TIME STAMP    */\n  unsigned char  qw0065os\u00c42\u00dc;  /* Reserved                  */\n  unsigned char  qw0065st;     /* STATEMENT TYPE            */\n  unsigned char  qw0065cl\u00c42\u00dc;  /* CURSOR NAME LENGTH +2     */\n  unsigned char  qw0065cn\u00c418\u00dc; /* %U CURSOR NAME            */\n  unsigned char  qw0065i;      /* STATEMENT ISOLATION LEVEL */\n  unsigned char  qw0065ro\u00c42\u00dc;  /* REOPTIMIZATION            */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                  */\n  int            qw0065sn;     /* STATEMENT NUMBER          */\n  unsigned char  qw0065sc;     /* Cursor SCROLLABILITY      */\n  unsigned char  qw0065sv;     /* Cursor SENSITIVITY        */\n  unsigned char  qw0065rt;     /* Cursor result table type  */\n  unsigned char  _filler2;     /* Reserved                  */\n  short int      qw0065ln_off; /* Offset from QW0065 to     */\n  short int      qw0065pc_off; /* Offset from QW0065 to     */\n  short int      qw0065pn_off; /* Offset from QW0065 to     */\n  short int      qw0065cn_off; /* Offset from QW0065 to     */\n  unsigned char  qw0065cid\u00c48\u00dc; /* QUERY COMMAND ID          */\n  unsigned char  qw0065qid\u00c48\u00dc; /* QUERY INSTANCE ID         */\n  \u00fc;\n\n/* Values for field \"qw0065st\" */\n#define qw0065oc 0x91 /* OPEN TYPE                              */\n\n/* Values for field \"qw0065i\" */\n#define qw0065rr 'R'  /* RR ISOLATION LEVEL                     */\n#define qw0065rs 'T'  /* RS ISOLATION LEVEL                     */\n#define qw0065cs 'S'  /* CS ISOLATION LEVEL                     */\n#define qw0065ur 'U'  /* UR ISOLATION LEVEL                     */\n#define qw0065xr 'X'  /* RR ISOLATION LEVEL WITH X-LOCK         */\n#define qw0065xs 'L'  /* RS ISOLATION LEVEL WITH X-LOCK         */\n\n/* Values for field \"qw0065sc\" */\n#define qw0065ss 'S'  /* Cursor declared SCROLL                 */\n#define qw0065ns ' '  /* Cursor declared non-SCROLL             */\n\n/* Values for field \"qw0065sv\" */\n#define qw0065se 'S'  /* Cursor attribute SENSITIVE             */\n#define qw0065si 'I'  /* Cursor attribute INSENSITIVE           */\n#define qw0065su ' '  /* Cursor sensitivity unspecified         */\n\n/* Values for field \"qw0065rt\" */\n#define qw0065sa 'S'  /* Cursor result table STATIC             */\n#define qw0065dy 'D'  /* Cursor result table DYNAMIC            */\n#define qw0065ru ' '  /* Cursor result table unspecified        */\n\n/* Values for field \"qw0065qid\" */\n#define qw0065r0 0x00 /* REOPTIMIZATION DID NOT OCCUR           */\n#define qw0065r1 0x01 /* REOPTIMIZATION OCCURRED FOR INPUT VARS */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0066": {"ttr": 7997, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0066 \u00e4\n  unsigned char  qw0066ln\u00c416\u00dc; /* %U LOCATION NAME         */\n  unsigned char  qw0066pc\u00c418\u00dc; /* %U PACKAGE COLLECTION ID */\n  unsigned char  qw0066pn\u00c418\u00dc; /* %U PROGRAM NAME          */\n  unsigned char  qw0066ts\u00c48\u00dc;  /* PRECOMPILER TIME STAMP   */\n  unsigned char  qw0066os\u00c42\u00dc;  /* Reserved                 */\n  unsigned char  qw0066st;     /* STATEMENT TYPE           */\n  unsigned char  qw0066cl\u00c42\u00dc;  /* CURSOR NAME LENGTH       */\n  unsigned char  qw0066cn\u00c418\u00dc; /* %U CURSOR NAME           */\n  unsigned char  _filler1;     /* Reserved                 */\n  int            qw0066sn;     /* STATEMENT NUMBER         */\n  short int      qw0066ln_off; /* Offset from QW0066 to    */\n  short int      qw0066pc_off; /* Offset from QW0066 to    */\n  short int      qw0066pn_off; /* Offset from QW0066 to    */\n  short int      qw0066cn_off; /* Offset from QW0066 to    */\n  unsigned char  qw0066cid\u00c48\u00dc; /* QUERY COMMAND ID         */\n  unsigned char  qw0066qid\u00c48\u00dc; /* QUERY INSTANCE ID        */\n  \u00fc;\n\n/* Values for field \"qw0066st\" */\n#define qw0066oc 0xA1 /* CLOSE TYPE */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0092": {"ttr": 8491, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0092 \u00e4\n  short int      qw0092pl; /* AMS COMMAND LENGTH + 2     */\n  unsigned char  qw0092p1; /* AMS COMMAND (160 BYTE MAX) */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0096": {"ttr": 7979, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0096 \u00e4\n  int            qw0096nr;     /* NUMBER OF RECORDS SORTED           */\n  int            qw0096dl;     /* SORT DATA AREA SIZE (IN BYTES)     */\n  int            qw0096kl;     /* SORT KEY SIZE (IN BYTES)           */\n  int            qw0096in;     /* (S)                                */\n  int            qw0096rd;     /* (S)                                */\n  int            qw0096wr;     /* SORT RECORD SIZE (IN BYTES)        */\n  int            qw0096wf;     /* NUMBER OF WORK FILES USED          */\n  short int      qw0096rc;     /* SORT RETURN CODE                   */\n  short int      _filler1;     /* RESERVED                           */\n  int            qw0096ir;     /* NUMBER OF INITIAL WORKFILES        */\n  int            qw0096rl;     /* ROWS DELETED DUE TO MERGING        */\n  int            qw0096mp;     /* NUMBER OF MERGE PASSES DURING SORT */\n  unsigned char  qw0096ts\u00c44\u00dc;  /* THE TYPE OF SORT THAT OCCURRED:    */\n  unsigned char  qw0096pn\u00c418\u00dc; /* %U PROGRAM NAME FOR THE QUERY THAT */\n  unsigned char  qw0096pc\u00c418\u00dc; /* %U PACKAGE COLLECTION ID FOR THE   */\n  int            qw0096sn;     /* THE STATEMENT NUMBER FOR THE QUERY */\n  int            qw0096pw;     /* NUMBER OF WORKFILES (EQUAL TO THE  */\n  unsigned char  qw0096pp;     /* INDICATES IF PARTITIONING OF THE   */\n  unsigned char  qw0096po;     /* INDICATES IF ONLY PARTITIONING     */\n  unsigned char  qw0096pt;     /* INDICATES WHERE THE PARTITIONING   */\n  unsigned char  _filler2;     /* RESERVED                           */\n  short int      qw0096sc;     /* NUMBER OF SORT COLUMNS             */\n  short int      qw0096sk;     /* NUMBER OF SORT KEYS                */\n  int            qw0096ru;     /* (S)                                */\n  short int      qw0096pn_off; /* Offset from QW0096 to              */\n  short int      qw0096pc_off; /* Offset from QW0096 to              */\n  \u00fc;\n\n/* Values for field \"qw0096ts\" */\n#define qw0096ce 0xC5E2C140 /* ESA SORT - CONSTANT FOR QW0096TS -   */\n#define qw0096cg 0xC5E2C1C7 /* GROUP BY SORT - CONSTANT FOR         */\n#define qw0096ch 0xD9C3E8C3 /* GROUP BY SORT - CONSTANT FOR         */\n#define qw0096cs 0xC5E2C1E3 /* ESA TAG SORT - CONSTANT FOR          */\n#define qw0096ct 0xD9C5C740 /* NON ESA SORT - CONSTANT FOR QW0096TS */\n#define qw0096cn 0xD5D6D5C5 /* NO SORT OCCURRED - CONSTANT FOR      */\n\n/* Values for field \"qw0096pt\" */\n#define qw0096cw 'W'        /* PARTITION WORKFILE - CONSTANT FOR    */\n#define qw0096cm 'M'        /* PARTITION LAST MERGE PASS -          */\n#define qw0096co 'O'        /* PARTITION ONE RECORD - CONSTANT FOR  */\n#define qw0096cp 'P'        /* PARTITION PRE-SORTED RECORDS -       */\n#define qw0096cb 'N'        /* NOT PARTITIONING RECORDS -           */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0097": {"ttr": 8083, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0097 \u00e4\n  int            qw0097rc; /* AMS RETURN CODE            */\n  short int      qw0097pl; /* AMS COMMAND LENGTH + 2     */\n  unsigned char  qw0097p1; /* AMS COMMAND (160 BYTE MAX) */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0112": {"ttr": 8351, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0112 \u00e4\n  unsigned char  qw0112pn\u00c48\u00dc;  /* PLAN NAME                                */\n  unsigned char  qw0112i\u00c42\u00dc;   /* ISOLATION LEVEL                          */\n  unsigned char  qw0112q;      /* AQUIRE LOCKS AT                          */\n  unsigned char  qw0112r;      /* RELEASE LOCKS AT                         */\n  unsigned char  qw0112dy;     /* Use DYNAMICRULES for dynamic SQL stmts   */\n  unsigned char  qw0112dp;     /* DEFER PREPARE of SQL with remote objects */\n  unsigned char  qw0112ro\u00c42\u00dc;  /* REOPT SQL STATEMENTS AT RUNTIME          */\n  unsigned char  qw0112kd;     /* KEEP Dynamic statements past COMMIT      */\n  unsigned char  qw0112pr;     /* DATABASE PROTOCOL FOR 3 PART NAME        */\n  unsigned char  qw0112oh\u00c48\u00dc;  /* %U OPTHINT('HINT-ID') DEFAULT IS BLANKS  */\n  unsigned char  qw0112iw;     /* IMMEDIATE WRITE of updated GBP buffers   */\n  unsigned char  qw0112sc;     /* SCHEME OF ENCODING CCSID                 */\n  unsigned char  qw0112cc\u00c42\u00dc;  /* ENDCODING CCSID VALUE                    */\n  short int      qw0112oh_off; /* Offset from QW0112 to                    */\n  \u00fc;\n\n/* Values for field \"qw0112i\" */\n#define qw0112ir 0xD9D9 /* REPEATABLE READ                     */\n#define qw0112it 0xD9E2 /* READ STABILITY                      */\n#define qw0112ic 0xC3E2 /* CURSOR STABILITY                    */\n#define qw0112iu 0xE4D9 /* UNCOMMITED READ                     */\n\n/* Values for field \"qw0112q\" */\n#define qw0112qa 'A'    /* ALLOCATION                          */\n#define qw0112qu 'U'    /* FIRST USE                           */\n\n/* Values for field \"qw0112r\" */\n#define qw0112rc 'C'    /* COMMIT                              */\n#define qw0112rd 'D'    /* DEALLOCATION                        */\n\n/* Values for field \"qw0112dy\" */\n#define qw0112db 'B'    /* BIND                                */\n#define qw0112dr 'R'    /* RUN                                 */\n\n/* Values for field \"qw0112pr\" */\n#define qw0112d  'D'    /* D    DRDA                           */\n#define qw0112p  'P'    /* P    PRIVATE                        */\n\n/* Values for field \"qw0112iw\" */\n#define qw0112i1 '1'    /* PH1                                 */\n\n/* Values for field \"qw0112sc\" */\n#define qw0112sa 'A'    /* ASCII - ENCODING CCSID IS ASCII     */\n#define qw0112se 'E'    /* EBCDIC - ENCODING CCSID IS EBCDIC   */\n#define qw0112su 'U'    /* UNICODE - ENCODING CCSID IS UNICODE */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0173": {"ttr": 8409, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0173 \u00e4\n  unsigned char  qw0173id\u00c48\u00dc;   /* %U AUTH ID                          */\n  unsigned char  qw0173pc\u00c418\u00dc;  /* %U PACKAGE COLLECTION ID            */\n  unsigned char  qw0173pk\u00c48\u00dc;   /* %U PACKAGE  NAME                    */\n  unsigned char  qw0173pl\u00c48\u00dc;   /* PLAN    NAME                        */\n  unsigned char  qw0173cn\u00c418\u00dc;  /* %U CURSOR NAME if it exists         */\n  int            qw0173ut;      /* (S) Time used so far                */\n  int            qw0173at;      /* (S) User ASUTIME                    */\n  short int      qw0173sn;      /* SECTION NUMBER                      */\n  unsigned char  _filler1\u00c42\u00dc;   /* Reserved                            */\n  int            qw0173st;      /* STATEMENT NUMBER                    */\n  unsigned char  qw0173cs\u00c44\u00dc;   /* cached statement ID, or zero        */\n  unsigned char  qw0173di\u00c4128\u00dc; /* (S) RLF Diagnostic information area */\n  short int      qw0173id_off;  /* Offset from QW0173 to               */\n  short int      qw0173pc_off;  /* Offset from QW0173 to               */\n  short int      qw0173pk_off;  /* Offset from QW0173 to               */\n  short int      qw0173cn_off;  /* Offset from QW0173 to               */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0177": {"ttr": 8539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0177 \u00e4\n  struct \u00e4\n    unsigned char  _qw0177lo\u00c416\u00dc; /* %U LOCATION NAME OF PACKAGE (SERVER) */\n    unsigned char  _qw0177co\u00c418\u00dc; /* %U COLLECTION ID                     */\n    unsigned char  _qw0177pi\u00c418\u00dc; /* %U PACKAGE ID                        */\n    unsigned char  _qw0177ct\u00c48\u00dc;  /* CONSISTENCY TOKEN                    */\n    struct \u00e4\n      short int      _qw0177vl;     /* LENGTH OF PACKAGE VERSION */\n      unsigned char  _qw0177vn\u00c464\u00dc; /* VERSION NAME              */\n      \u00fc qw0177vr;\n    \u00fc qw0177pk;\n  unsigned char  qw0177pl\u00c48\u00dc;  /* PLAN NAME UNDER WHICH PACKAGE IS RUNNING */\n  unsigned char  qw0177is;     /* ISOLATION LEVEL OF THE PACKAGE           */\n  unsigned char  qw0177aq;     /* ACQUIRE LEVEL OF OF THE PACKAGE          */\n  unsigned char  qw0177rl;     /* RELEASE LEVEL OF THE PACKAGE             */\n  unsigned char  qw0177dy;     /* DYNAMICRULES VALUE FOR DYNAMIC SQL STMTS */\n  unsigned char  qw0177dp;     /* DEFER PREPARE OF REMOTE SQL STATEMENTS   */\n  unsigned char  qw0177ro\u00c42\u00dc;  /* REOPTIMIZE SQL STATEMENTS AT RUN-TIME    */\n  unsigned char  qw0177kd;     /* KEEP DYNAMIC STATEMENTS ACROSS COMMIT    */\n  unsigned char  qw0177pr;     /* DBPROTOCOL                               */\n  unsigned char  qw0177oh\u00c48\u00dc;  /* %U OPTHINT VALUE                         */\n  unsigned char  qw0177iw;     /* IMMEDIATE WRITE OF UPDATED GBP BUFFERS   */\n  unsigned char  qw0177cc\u00c42\u00dc;  /* ENCODING CCSID VALUE                     */\n  unsigned char  qw0177sc;     /* SCHEME OF ENCODING CCSID                 */\n  unsigned char  _filler1;     /* Reserved                                 */\n  short int      qw0177lo_off; /* Offset from QW0177 to                    */\n  short int      qw0177co_off; /* Offset from QW0177 to                    */\n  short int      qw0177pi_off; /* Offset from QW0177 to                    */\n  short int      qw0177oh_off; /* Offset from QW0177 to                    */\n  \u00fc;\n\n#define qw0177lo qw0177pk._qw0177lo\n#define qw0177co qw0177pk._qw0177co\n#define qw0177pi qw0177pk._qw0177pi\n#define qw0177ct qw0177pk._qw0177ct\n#define qw0177vl qw0177pk.qw0177vr._qw0177vl\n#define qw0177vn qw0177pk.qw0177vr._qw0177vn\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0233": {"ttr": 8703, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0233 \u00e4\n  unsigned char  qw0233ln\u00c418\u00dc;     /* %U Location name (RDB name)            */\n  unsigned char  qw0233pc\u00c418\u00dc;     /* %U Package collection id               */\n  unsigned char  qw0233pn\u00c418\u00dc;     /* %U Program name                        */\n  unsigned char  qw0233ts\u00c48\u00dc;      /* PRECOMPILER TIME STAMP                 */\n  unsigned char  qw0233sn\u00c42\u00dc;      /* RESERVED - DO NOT USE IN V9.           */\n  unsigned char  qw0233ex;         /* ENTRY/EXIT EVENT TYPE                  */\n  unsigned char  qw0233ty;         /* ROUTINE TYPE                           */\n  unsigned char  qw0233nl\u00c42\u00dc;      /* NESTING LEVEL                          */\n  unsigned char  qw0233pr\u00c418\u00dc;     /* %U ROUTINE SPECIFIC NAME               */\n  unsigned char  _filler1\u00c42\u00dc;      /* RESERVED                               */\n  unsigned char  qw0233sq\u00c4136\u00dc;    /* THE SQLCA RETURNED TO THE PROGRAM THAT */\n  unsigned char  qw0233sc\u00c48\u00dc;      /* %U SCHEMA NAME                         */\n  short int      qw0233ln_off;     /* Offset from QW0233 to                  */\n  short int      qw0233pc_off;     /* Offset from QW0233 to                  */\n  short int      qw0233pn_off;     /* Offset from QW0233 to                  */\n  short int      qw0233pr_off;     /* Offset from QW0233 to                  */\n  short int      qw0233sc_off;     /* Offset from QW0233 to                  */\n  unsigned char  _filler2\u00c42\u00dc;      /* RESERVED                               */\n  unsigned char  qw0233sn_long\u00c44\u00dc; /* STATEMENT NUMBER                       */\n  \u00fc;\n\n/* Values for field \"qw0233ex\" */\n#define qw0233e 0x00 /* THE AGENT IS ENTERING A ROUTINE       */\n#define qw0233x 0x01 /* THE AGENT HAS RETURNED FROM A ROUTINE */\n\n/* Values for field \"qw0233ty\" */\n#define qw0233p 'P'  /* THE ROUTINE IS A PROCEDURE            */\n#define qw0233f 'F'  /* THE ROUTINE IS A FUNCTION             */\n#define qw0233a 'A'  /* THE ROUTINE IS an AuthLE Routine      */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0237": {"ttr": 8079, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0237 \u00e4\n  unsigned char  qw0237oi\u00c43\u00dc; /* Previous (current) degree            */\n  unsigned char  qw0237ni\u00c43\u00dc; /* New (attepmted) degree               */\n  unsigned char  qw0237st;    /* Status of statement (sucess or fail) */\n  \u00fc;\n\n/* Values for field \"qw0237st\" */\n#define qw0237cs 'S'  /* SUCCESSFUL STMT - Constant for QW0237ST - */\n#define qw0237cf 'F'  /* FAILED STMT - Constant for QW0237ST -     */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0250CN": {"ttr": 7911, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0250cn \u00e4\n  unsigned char  qw0250sz\u00c44\u00dc; /* Structure size - number of 4K blocks.    */\n  unsigned char  qw0250sm\u00c44\u00dc; /* Maximum structure size saved at the time */\n  unsigned char  qw0250dr\u00c44\u00dc; /* Allocated directory entry count.         */\n  unsigned char  qw0250dt\u00c44\u00dc; /* Allocated data element count (for DB2    */\n  unsigned char  qw0250f1\u00c44\u00dc; /* (S)Flags                                 */\n  unsigned char  qw0250f2\u00c44\u00dc; /* Flags                                    */\n  unsigned char  qw0250cd;    /* Type of Connect                          */\n  unsigned char  qw0250ca;    /* Allocation indicator                     */\n  unsigned char  qw0250co\u00c42\u00dc; /* Maximum number of castout classes        */\n  unsigned char  qw0250ce;    /* End of QW0250CN data section             */\n  \u00fc;\n\n/* Values for field \"qw0250f2\" */\n#define qw0250j4 0x10 /* This flag is only valid if                      */\n\n/* Values for field \"qw0250cd\" */\n#define qw0250nc 'N'  /* New Connection                                  */\n#define qw0250re 'R'  /* Re-connect of Failed-Persistent connection      */\n\n/* Values for field \"qw0250ca\" */\n#define qw0250na 'N'  /* This Connect did NOT cause structure allocation */\n#define qw0250sa 'A'  /* This Connect DID cause structure allocation     */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0250DS": {"ttr": 8671, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0250ds \u00e4\n  unsigned char  qw0250dd;    /* Type of Disconnect           */\n  unsigned char  _filler1\u00c43\u00dc; /* RESERVED                     */\n  unsigned char  qw0250de;    /* End of QW0250DS data section */\n  \u00fc;\n\n/* Values for field \"qw0250dd\" */\n#define qw0250dn 'N'  /* Normal Disconnect                     */\n#define qw0250df 'F'  /* Disconnect to Failed-Persistent state */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0250HE": {"ttr": 8529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0250he \u00e4\n  unsigned char  qw0250ty;     /* Type of request (C or D)         */\n  unsigned char  _filler1\u00c43\u00dc;  /* RESERVED                         */\n  unsigned char  qw0250sn\u00c416\u00dc; /* Coupling facility structure name */\n  unsigned char  qw0250gn\u00c48\u00dc;  /* Group Buffer Pool name           */\n  int            qw0250rc;     /* MVS XES return code              */\n  struct \u00e4\n    unsigned char  _filler2\u00c42\u00dc;  /* (S)High order 2 bytes of MVS XES reason code */\n    unsigned char  _qw0250r2\u00c42\u00dc; /* Low order 2 bytes of MVS XES reason code     */\n    \u00fc qw0250rs;\n  unsigned char  qw0250en;     /* End of QW0250 header section     */\n  \u00fc;\n\n#define qw0250r2 qw0250rs._qw0250r2\n\n/* Values for field \"qw0250ty\" */\n#define qw0250tc 'C'  /* Connect                            */\n#define qw0250td 'D'  /* Disconnect                         */\n#define qw0250tr 'R'  /* Rebuild                            */\n#define qw0250ts 'S'  /* Connect to secondary for duplexing */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0250X": {"ttr": 8271, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0250x \u00e4\n  unsigned char  qw0250x1\u00c44\u00dc; /* System Authorization Facility (SAF) return */\n  unsigned char  qw0250x2\u00c44\u00dc; /* SAF reason code                            */\n  unsigned char  qw0250xe;    /* End of QW0250X  data section               */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0250Z": {"ttr": 8341, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0250z \u00e4\n  unsigned char  qw0250zn\u00c48\u00dc; /* CF name                                 */\n  int            qw0250zr;    /* Reason code why the CF was not suitable */\n  unsigned char  qw0250zm\u00c44\u00dc; /* This field is only valid when           */\n  unsigned char  qw0250zg\u00c44\u00dc; /* Total space in the CF in 4K blocks      */\n  unsigned char  qw0250zh\u00c44\u00dc; /* Total control space in the CF in 4K     */\n  unsigned char  qw0250zi\u00c44\u00dc; /* Total free space in 4K blocks (free     */\n  unsigned char  qw0250zj\u00c44\u00dc; /* Free control space in 4K blocks.        */\n  unsigned char  qw0250zk\u00c42\u00dc; /* Storage increment size in 4K blocks.    */\n  unsigned char  qw0250zl;    /* Maximum element characteristic.  The    */\n  unsigned char  _filler1;    /* Reserved                                */\n  unsigned char  qw0250zo\u00c42\u00dc; /* Maximum number of castout classes for   */\n  unsigned char  _filler2\u00c42\u00dc; /* Reserved                                */\n  unsigned char  qw0250ze;    /* End of QW0250Z  data section            */\n  \u00fc;\n\n/* Values for field \"qw0250zr\" */\n#define qw0250z1 0x01 /* REASON:  The active policy indicates that */\n#define qw0250z2 0x02 /* REASON:  The CF is not defined in the     */\n#define qw0250z3 0x03 /* REASON:  Connectivity to the CF has been  */\n#define qw0250z4 0x04 /* REASON:  The CF has failed.               */\n#define qw0250z5 0x05 /* REASON:  The structure failed during the  */\n#define qw0250z6 0x06 /* REASON:  The structure attributes were    */\n#define qw0250z7 0x07 /* REASON:  The structure size specified     */\n#define qw0250z8 0x08 /* REASON:  New structures cannot be         */\n#define qw0250z9 0x09 /* REASON:  MVS XES component error.         */\n#define qw0250y1 0x0A /* REASON:  Unknown.                         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "QW0272": {"ttr": 8499, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0272 \u00e4\n  unsigned char  qw0272ln\u00c416\u00dc; /* %U LOCATION NAME                 */\n  unsigned char  qw0272pc\u00c418\u00dc; /* %U PKG COLLECTION ID             */\n  unsigned char  qw0272pg\u00c418\u00dc; /* %U PROGRAM NAME                  */\n  unsigned char  qw0272ts\u00c48\u00dc;  /* PROGRAM PRECOMPILE TIMESTAMP     */\n  int            qw0272sn;     /* STATEMENT NUMBER                 */\n  unsigned char  qw0272ll\u00c42\u00dc;  /* PROC LOCATION LEN (0-18)         */\n  unsigned char  qw0272lp\u00c418\u00dc; /* %U LOCATION OF STORED PROCEDURE  */\n  unsigned char  qw0272ql\u00c42\u00dc;  /* PROC QUALIFIER LEN (0-18)        */\n  unsigned char  qw0272qn\u00c418\u00dc; /* %U QUALIFIER OF STORED PROCEDURE */\n  unsigned char  qw0272pl\u00c42\u00dc;  /* PROCEDURE NAME LEN (0-18)        */\n  unsigned char  qw0272pn\u00c418\u00dc; /* %U STORED PROCEDURE NAME         */\n  unsigned char  qw0272nl\u00c42\u00dc;  /* NUMBER OF LOCATORS               */\n  short int      qw0272ln_off; /* Offset from QW0272 to            */\n  short int      qw0272pc_off; /* Offset from QW0272 to            */\n  short int      qw0272pg_off; /* Offset from QW0272 to            */\n  short int      qw0272lp_off; /* Offset from QW0272 to            */\n  short int      qw0272qn_off; /* Offset from QW0272 to            */\n  short int      qw0272pn_off; /* Offset from QW0272 to            */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0273": {"ttr": 7897, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0273 \u00e4\n  unsigned char  qw0273ln\u00c416\u00dc; /* %U LOCATION NAME                 */\n  unsigned char  qw0273pc\u00c418\u00dc; /* %U PKG COLLECTION ID             */\n  unsigned char  qw0273pg\u00c418\u00dc; /* %U PROGRAM NAME                  */\n  unsigned char  qw0273ts\u00c48\u00dc;  /* PROGRAM PRECOMPILE TIMESTAMP     */\n  int            qw0273sn;     /* STATEMENT NUMBER                 */\n  unsigned char  qw0273cl\u00c42\u00dc;  /* CURSOR NAME LENGTH (0-18)        */\n  unsigned char  qw0273cn\u00c418\u00dc; /* %U ALLOCATE CURSOR NAME          */\n  unsigned char  qw0273rl\u00c42\u00dc;  /* REAL CURS NAME LEN (0-18)        */\n  unsigned char  qw0273rn\u00c418\u00dc; /* %U REAL CURSOR NAME IN ST. PROC. */\n  unsigned char  qw0273ll\u00c42\u00dc;  /* PROC LOCATION LEN (0-18)         */\n  unsigned char  qw0273lp\u00c418\u00dc; /* %U LOCATION OF STORED PROCEDURE  */\n  unsigned char  qw0273ql\u00c42\u00dc;  /* PROC QUALIFIER LEN (0-18)        */\n  unsigned char  qw0273qn\u00c418\u00dc; /* %U QUALIFIER OF STORED PROCEDURE */\n  unsigned char  qw0273pl\u00c42\u00dc;  /* PROCEDURE NAME LEN (0-18)        */\n  unsigned char  qw0273pn\u00c418\u00dc; /* %U STORED PROCEDURE NAME         */\n  int            qw0273lv;     /* LOCATOR VALUE                    */\n  short int      qw0273ln_off; /* Offset from QW0273 to            */\n  short int      qw0273pc_off; /* Offset from QW0273 to            */\n  short int      qw0273pg_off; /* Offset from QW0273 to            */\n  short int      qw0273cn_off; /* Offset from QW0273 to            */\n  short int      qw0273rn_off; /* Offset from QW0273 to            */\n  short int      qw0273lp_off; /* Offset from QW0273 to            */\n  short int      qw0273qn_off; /* Offset from QW0273 to            */\n  short int      qw0273pn_off; /* Offset from QW0273 to            */\n  unsigned char  qw0273cid\u00c48\u00dc; /* QUERY COMMAND ID                 */\n  unsigned char  qw0273qid\u00c48\u00dc; /* QUERY INSTANCE ID                */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QW0325": {"ttr": 8377, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct qw0325 \u00e4\n  unsigned char  qw0325co\u00c418\u00dc;  /* %U Collection ID of the package that   */\n  unsigned char  qw0325pr\u00c48\u00dc;   /* %U Name of the program or package that */\n  unsigned char  _filler1\u00c42\u00dc;   /* Unused, for alignment                  */\n  int            qw0325sn;      /* Statement number of SQL statement that */\n  unsigned char  qw0325sc\u00c48\u00dc;   /* %U Schema name of the trigger          */\n  struct \u00e4\n    short int      _qw0325lx;     /* Length of external trigger name */\n    unsigned char  _qw0325tx\u00c430\u00dc; /* %U External trigger name text   */\n    \u00fc qw0325ex;\n  unsigned char  qw0325nm\u00c48\u00dc;   /* %U Trigger name                        */\n  unsigned char  qw0325ts\u00c48\u00dc;   /* Trigger Timestamp                      */\n  unsigned char  qw0325ac;      /* Trigger activation time                */\n  unsigned char  qw0325gr;      /* Trigger granularity                    */\n  unsigned char  qw0325ss;      /* Triggering SQL statement:              */\n  unsigned char  qw0325et;      /* Entry/exit event type:                 */\n  unsigned char  qw0325cn;      /* Triggered action condition evaluation: */\n  unsigned char  _filler2;      /* Unused, for alignment                  */\n  short int      qw0325nl;      /* Nesting level of the trigger           */\n  unsigned char  qw0325sq\u00c4136\u00dc; /* The SQLCA returned from the trigger    */\n  short int      qw0325co_off;  /* Offset from QW0325 to                  */\n  short int      qw0325pr_off;  /* Offset from QW0325 to                  */\n  short int      qw0325sc_off;  /* Offset from QW0325 to                  */\n  short int      qw0325tx_off;  /* Offset from QW0325 to                  */\n  short int      qw0325nm_off;  /* Offset from QW0325 to                  */\n  unsigned char  qw0325en;      /* End of record                          */\n  \u00fc;\n\n#define qw0325lx qw0325ex._qw0325lx\n#define qw0325tx qw0325ex._qw0325tx\n\n/* Values for field \"qw0325ac\" */\n#define qw0325b 'B'  /* Trigger activation time is BEFORE.         */\n#define qw0325a 'A'  /* Trigger activation time is AFTER.          */\n\n/* Values for field \"qw0325gr\" */\n#define qw0325r 'R'  /* Trigger granularity is FOR EACH ROW.       */\n#define qw0325s 'S'  /* Trigger granularity is FOR EACH STATEMENT. */\n\n/* Values for field \"qw0325ss\" */\n#define qw0325u 'U'  /* Triggering SQL statement is UPDATE.        */\n#define qw0325i 'I'  /* Triggering SQL statement is INSERT.        */\n#define qw0325d 'D'  /* Triggering SQL statement is DELETE.        */\n\n/* Values for field \"qw0325et\" */\n#define qw0325e 'E'  /* The agent is entering trigger activation.  */\n#define qw0325x 'X'  /* The agent is exiting trigger activation.   */\n\n/* Values for field \"qw0325cn\" */\n#define qw0325t 'T'  /* Triggered action condition tested true.    */\n#define qw0325f 'F'  /* Triggered action condition tested false.   */\n#define qw0325n 'N'  /* There was no triggered action condition    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "REXXVAR": {"ttr": 8399, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_REXXVAR\n#define INCLUDE_REXXVAR\n#include \"shvblock.hpp\"\n\nISIS_EXT_ASM typedef int IRXEXCOM(const char * ,void *,void *,shvblock *,void *,int *);\nISIS_EXT_ASM typedef int IKJCT441(const int *,char * *,int *,char * *,int *,void *,int *,int *,int *);\nclass REXXVAR\n\t\u00e4\n\tIRXEXCOM * irxexcom;\n\tIKJCT441 * ikjct441;\n\tshvblock shv;\n\tsize_t   bufflength;\n\tint rc;\n\tvoid * envaddr;\n\tvoid * token;\n\tchar * to ;\n\tint    etc;\n\tint    next;\n\tbool   debug;\n\tpublic:\n\t\tREXXVAR(bool d = false,size_t max =32760)\n\t\t\t\u00e4\n\t\t\tirxexcom=(IRXEXCOM  *)::fetch(\"IRXEXCOM\");\n\t\t\tikjct441=(IKJCT441 * )::fetch(\"IKJCT441\");\n\t\t\ttoken =  0;\n\t\t\tdebug = d;\n\t\t\tmemset(&shv,0,sizeof(shv));\n\t\t\tbufflength = max;\n\t\t\trc = 0;\n\t\t\tenvaddr = NULL;\n\t\t\tetc = -1;\n\t\t\tnext = 0;\n\t\t\tto = new char\u00c4bufflength\u00dc;\n\t\t\t\u00fc\n\t\t\u00dfREXXVAR()\n\t\t\t\u00e4\n\t\t\tif (to)\n\t\t\t\tdelete \u00c4\u00dc to;\n\t\t\tto = NULL;\n\t\t\t\u00fc\n\t\tchar * fetch(const char * name);\n\t\tsize_t set(const char *n,long v)\n\t\t\u00e4\n\t\t\treturn(set(n,int(v)));\n\t\t\u00fc\n\t\tsize_t set(const char *n,unsigned int v)\n\t\t\u00e4\n\t\t\treturn(set(n,int(v)));\n\t\t\u00fc\n\t\tsize_t set(const char *n,int v)\n\t\t\u00e4\n\t\t\tchar w\u00c4128\u00dc;\n\t\t\tsprintf(w,\"%d\",v);\n\t\t return(set(n,w));\n\t\t\u00fc\n\n\t\tsize_t set(const char *n,double v)\n\t\t\u00e4\n\t\t\tchar w\u00c4128\u00dc;\n\t\t\tsprintf(w,\"%#10.4f\",v);\n\t\t return(set(n,w));\n\t\t\u00fc\n\t\tsize_t set(const char *n,unsigned long long v)\n\t\t\u00e4\n\t\t\tchar w\u00c4128\u00dc;\n\t\t\tsprintf(w,\"%lu\",v);\n\t\t return(set(n,w));\n\t\t\u00fc\n\t\tsize_t set(const char * name,const char * from,size_t length = 0);\n\t\tsize_t setStem(const char *name,int &,const char *from,size_t length = 0);\n\t\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RFIM": {"ttr": 8205, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rfim \u00e4\n  int            rfim_type; /* IPC MSG TYPE, FROM RFIS_TYPE */\n  struct \u00e4\n    unsigned char  _rfim_utok\u00c48\u00dc; /* USER TOKEN, FROM RFIS_UTOK */\n    short int      _rfim_event;   /* CHANGE EVENT               */\n    struct \u00e4\n      unsigned char  _rfim_flags1; /* FLAGS Byte 1 */\n      unsigned char  _rfim_flags2; /* FLAGS Byte 2 */\n      \u00fc rfim_flags;\n    \u00fc rfim_text;\n  \u00fc;\n\n#define rfim_utok   rfim_text._rfim_utok\n#define rfim_event  rfim_text._rfim_event\n#define rfim_flags1 rfim_text.rfim_flags._rfim_flags1\n#define rfim_flags2 rfim_text.rfim_flags._rfim_flags2\n\n/* Values for field \"rfim_flags1\" */\n#define rfim_lostmsgs 0x80 /* MSGSND HAS FAILED            */\n\n/* Values for field \"rfim_flags2\" */\n#define rfim_length   0x10 /* Length of this structure     */\n#define rfim_write    1    /* WRITE, TRUNC, OPEN(O_TRUNC)  */\n#define rfim_attr     2    /* ANY ATTR CHANGE, CHMOD, ETC. */\n#define rfim_unlink   3    /* ANY NAME UNLINKED            */\n#define rfim_rename   4    /* ANY NAME RENAMED             */\n#define rfim_unmount  5    /* CONTAINING FILE SYS UNMNTED  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "RFIS": {"ttr": 8051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rfis \u00e4\n  short int      rfis_cmd;      /* CMD = REG OR UNREG           */\n  struct \u00e4\n    unsigned char  _rfis_flags1; /* FLAGS Byte 1 */\n    unsigned char  _rfis_flags2; /* FLAGS Byte 2 */\n    \u00fc rfis_flags;\n  unsigned char  rfis_rftok\u00c48\u00dc; /* SYSTEM REGISTERED FILE TOKEN */\n  int            rfis_qid;      /* IPC MSG QUEUE ID             */\n  int            rfis_type;     /* IPC MSG TYPE                 */\n  unsigned char  rfis_utok\u00c48\u00dc;  /* IPC MSG USER TOKEN           */\n  \u00fc;\n\n#define rfis_flags1 rfis_flags._rfis_flags1\n#define rfis_flags2 rfis_flags._rfis_flags2\n\n/* Values for field \"rfis_flags1\" */\n#define rfis_lostmsgs 0x80 /* MSGSND HAS FAILED        */\n\n/* Values for field \"rfis_utok\" */\n#define rfis_length   0x1C /* Length of this structure */\n#define rfis_reg      1\n#define rfis_unreg    2\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "RMCT": {"ttr": 8453, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rmct \u00e4\n  unsigned char  rmctname\u00c44\u00dc;   /* -           BLOCK IDENTIFICATION                    */\n  void          *rmctcct;       /* -            CPU MANAGEMENT CONTROL TABLE           */\n  void          *rmctict;       /* -            I/O MANAGEMENT CONTROL TABLE           */\n  void          *rmctmct;       /* -            STORAGE MANAGEMENT CONTROL TABLE       */\n  void          *rmctrmpt;      /* -           CTL ALGORITHM PARAMETER TABLE           */\n  void          *rmctrmca;      /* -           CTL ALGORITHM CONTROL AREA              */\n  void          *rmctwmst;      /* -              ADDR OF WLM SPECIFICATION TABLE      */\n  void          *rmctsrbc;      /* -       TCB/SRB CODE IN INT         @YA08710        */\n  void          *rmctwmct;      /* -              WLM mode control table          @L6C */\n  void          *rmctrmpd;      /* -              ADDR OF RESOURCES MANAGER PERF DATA  */\n  void          *rmctrmex;      /* -           ROUTINE EXITING VECTOR TABLE            */\n  void          *rmctrmsb;      /* -           SUBROUTINE CALLING VECTOR TABLE         */\n  void          *rmcteppa;      /* -        PRTL ANALYSIS ENTRY TABLE                  */\n  void          *rmctepdt;      /* -        USER ACTION ENTRY TABLE                    */\n  void          *rmctepat;      /* -        ALGORITHM ENTRY TABLE                      */\n  void          *rmctlsct;      /* -           LOGICAL SWAP CONTROL TABLE  @G50IPJH    */\n  int            rmctadjc;      /* -              ADJUSTMENT FACTOR FOR CPU RATE       */\n  void          *rmctitt;       /* -       INTFC EVENT CHARACTERISTICS TABLE           */\n  void          *rmctepet;      /* -       EVENT ROUTING VECTOR TABLE                  */\n  void          *rmctltt;       /* lock trace table address        @L6C                */\n  void          *rmcteppr;      /* -        PROCESS RATE DEPENDENT ENTRY TABLE         */\n  void          *rmctwast;      /* -              ADDR OF WMST FOR SET IPS    @G741PGM */\n  void          *rmct15f;       /* Address of 15F abend        @WLMPESM                */\n  void          *rmcttmqe;      /* -       SCHEDULED RTNE QUEUE HEADER ADDR            */\n  int            rmctaqct;      /* -              ACTION QUEUE MEMBER COUNT            */\n  void          *rmctaqhd;      /* -        ACTION QUEUE FORWARD POINTER               */\n  void          *rmctwtqe;      /* -        WAIT - QUEUE HEADER BLOCK ADDRESS          */\n  void          *rmctlsqe;      /* -        LOG SWAP WAIT QUEUE HEADER ADDR @H5A       */\n  void          *rmctotqe;      /* -        OUT - QUEUE HEADER BLOCK ADDRESS           */\n  void          *rmctinqe;      /* -        IN - QUEUE HEADER BLOCK ADDRESS            */\n  int            rmcttbs;       /* -              STARTING TIME BASE FOR TIME OF DAY   */\n  int            rmcttod;       /* -              TIME OF DAY - SYST RSRC MGR INVOKE   */\n  double         rmcttoc;       /* -              TIME OF CENTURY - 64BIT BINARY NMB   */\n  unsigned char  rmctala\u00c44\u00dc;    /* -      ALGORITHM REQUEST ACCUMULATOR FIELD          */\n  unsigned char  rmctalr\u00c44\u00dc;    /* -      IMMEDIATE ALGORITHM REQUEST FIELD            */\n  void          *rmctrqsv;      /* -           ADDR OF REQ SRV DATA AREA   @Z40BPCH    */\n  unsigned char  rmctflgs;      /* -      PROCESSING CONTROL FLAGS                     */\n  unsigned char  _filler1;      /* -      OVERRIDE CONDITION FLAGS                     */\n  unsigned char  rmcttape;      /* (OPT PARM) TAPE SELECTION:        @G741PGS          */\n  unsigned char  rmctflg2;      /* -      PROCESSING FLAGS           @G744PJC          */\n  void          *rmcttelm;      /* -       RESOURCES MANAGER TIMING ELEMENT            */\n  int            rmctcpid;      /* -              RES MANAGER CELL POOL ID    @G860PJC */\n  double         rmcttoci;      /* -              CLOCK READ AREA - 64BIT BINARY NMB   */\n  void          *rmctoucb;      /* -        PREASSEMBLED MODEL OUCB                    */\n  void          *rmctouxb;      /* -        INTERPOSED DUMMY OUXB                      */\n  void          *rmctsrbt;      /* -        RESOURCES MANAGER SRB TABLE                */\n  void          *rmctdmdt;      /* -              ADDR OF DOMAIN TABLE        @Z40BPCH */\n  void          *rmctdmde;      /* -              ADDR OF LAST DMN TAB ENTRY  @Z40BPCH */\n  short int      rmctdmnc;      /* -              NUMBER OF DOMAINS           @Z40BPCH */\n  short int      rmctscsq;      /* -              Speed change sequence no    @WLMPIFA */\n  void          *rmcttspt;      /* -              FIRST TS PATTERN ENTRY      @G50IPSS */\n  void          *rmcttspe;      /* -              LAST TS PATTERN ENTRY       @G50IPSS */\n  void          *rmcttsgt;      /* -              FIRST TSGRP TABLE ENTRY     @G50IPSS */\n  void          *rmcttsge;      /* -              LAST TSGRP TABLE ENTRY      @G50IPSS */\n  int            rmctcpu;       /* -              CPU service coefficient         @L6C */\n  int            rmctmso;       /* -              MSO service coefficient         @L6C */\n  int            rmctioc;       /* -              IOC service coefficient         @L6C */\n  void          *rmcticst;      /* -              ICSC TABLE ADDR             @G742PSS */\n  int            rmctcpmp;      /* -              CPU ADJUSTING FACTOR - IF THIS       */\n  void          *rmctrct;       /* -            ADDRESS OF RCT              @G742PGM   */\n  double         rmctbrqe;      /* -              BASIC REPORTING QUEUE       @G742PJC */\n  double         rmcterqe;      /* -              EXTENDED REPORTING QUEUE    @G742PJC */\n  double         rmctupdq;      /* -              UPDATE QUEUE                @G742PJC */\n  void          *rmcttrad;      /* -              XACN RPTING Q 1ST PAGE PTR  @G742PJC */\n  int            rmcttrpc;      /* -              XACN RPTING PAGE COUNT      @G742PJC */\n  void          *rmcticsp;      /* -           XACN DESCRIPTION TABLE      @G743PSS    */\n  void          *rmctrspl;      /* -           RSPL ADDRESS                @G743PSS    */\n  unsigned char  rmctcsb;       /* -      RMCT COMPARE/SWAP BIT       @ZA70182         */\n  unsigned char  rmctrsvb;      /* -      RESERVED                    @ZA70182         */\n  short int      rmctshdl;      /* -           LENGTH OF SRM STACK HEADER (MUST        */\n  void          *rmctptch;      /* -       PATCH AREA ADRESS           @G81OPJC        */\n  void          *rmctcmct;      /* CHANNEL MEAS CNTL TABLE     @G860P26                */\n  void          *rmctesct;      /* EXT STORE CRITERIA TABLE        @H4C                */\n  void          *rmctepbg;      /* -           EPAT BEGINNING             @G50IPSS     */\n  unsigned char  rmcthdid\u00c44\u00dc;   /* SRM STACK HEADER ID             @LSC                */\n  void          *rmctpagp;      /* -              SYSTEM PAGING BLOCK POINTER     @L5A */\n  int            rmctelet;      /* Executed long enough threshold for                  */\n  int            rmctsrb;       /* -              SRB service coefficient         @L6A */\n  int            rmctiter;      /* iteration number                @L6A                */\n  int            rmctsmc;       /* sample monitoring control block                     */\n  int            rmctdfqf;      /* address of first oucb on deferred                   */\n  int            rmctdfql;      /* address of last oucb on deferred                    */\n  int            rmctsmfb;      /* Pointer to SMF99 Buffer         @L6A                */\n  void          *rmctepdb;      /* First RMEP on EPDT              @L6C                */\n  int            rmctsmfs;      /* Address of last SMF99 SRB       @L6A                */\n  int            rmctrsda;      /* Address of RSD List             @L8A                */\n  int            rmctench;      /* System Encb Queue header        @L7A                */\n  int            rmctencl;      /* System Encb Queue trailer       @L7A                */\n  int            rmctsrru;      /* Address of Sysplex Router Registered                */\n  int            rmctdsfc;      /* Number of times sending sysplex                     */\n  int            rmctgrss;      /* Address of Generic Resource Selected                */\n  int            rmctle55;      /* -              Last saved for ENF 55       @WLMPENH */\n  int            rmctswmb;      /* Address of Subsystem Work                           */\n  int            rmctrcts;      /* Timestamp (time of day in 1.048576                  */\n  int            rmctipat;      /* Internal policy activation                          */\n  int            rmctr01;       /* -              Reserved                    @WLMPTSO */\n  int            rmctx2;        /* Address of RMCT Extention 2                         */\n  unsigned char  rmctx1c4\u00c4128\u00dc; /* Cache Line 4                @ME08717                */\n  unsigned char  rmctx1c5\u00c4128\u00dc; /* Cache Line 5                @ME08717                */\n  unsigned char  rmctx1c6\u00c4128\u00dc; /* Cache Line 6                @ME08717                */\n  unsigned char  rmctx1c7\u00c4128\u00dc; /* Cache Line 7                @ME08717                */\n  unsigned char  rmctx1c8\u00c4128\u00dc; /* Cache Line 8                @ME08717                */\n  double         rmctend;       /* -                END OF RMCT                        */\n  \u00fc;\n\n/* Values for field \"rmctflgs\" */\n#define rmctmfa  0x80  /* -              MEASUREMENT FACILITY ACTIVE          */\n#define rmctcps1 0x40  /* CAP SWITCH                  @Z40BPSS                */\n#define rmctics  0x20  /* CONTROL MEMBER DEFINED      @G742PJC                */\n#define rmctinit 0x10  /* -              SRM INITIALIZATION WAS PERFORMED     */\n#define rmctrept 0x08  /* -              NON-TSO REPORTING ACTIVE   @G741PJC  */\n#define rmctstw  0x04  /* -              SET HAS STOPPED WAR COLLECTION       */\n#define rmcttsac 0x02  /* -              TIME SLICE ALG ACTIVE      @G50IPSS  */\n#define rmctwlm  0x01  /* -              WLM mode active                @L6A  */\n\n/* Values for field \"_filler1\" */\n#define rmctrep1 0x80  /* -              Reactivation of the in storage       */\n#define rmctmfs  0x40  /* -              RMF ACTIVE,SET  RCVD       @G742PGM  */\n#define rmctcnsw 0x20  /* -            COUNT NON-SWAPPABLES IN CMPL @G742PGM  */\n#define rmctclst 0x10  /* -           COUNT EACH COMMAND IN A CLIST @G743PGM  */\n#define rmctrtso 0x08  /* -           TSO TRXNAME REPORTING ACTIVE  @G744PGS  */\n#define rmctdmti 0x04  /* -              Set to reinitialize the domain       */\n#define rmctokcp 0x02  /* -              This bit is set so that next time    */\n#define rmctrep2 0x01  /* -              Reactivation of the in storage       */\n\n/* Values for field \"rmcttape\" */\n#define rmctsltn 0x80  /* -              NEXT HIGHEST               @G741PGS  */\n#define rmctsltr 0x40  /* -              RANDOM                     @G741PGS  */\n#define rmctsltl 0x20  /* -              LOWEST ADDRESS             @G741PGS  */\n#define rmctsltf 0x10  /* -              FIRST DEVICE IN LIST       @G741PGS  */\n\n/* Values for field \"rmctflg2\" */\n#define rmctovfl 0x40  /* -              OVERFLOW OCCURED           @ZA45676  */\n#define rmctuntr 0x20  /* -              Real time period durations are       */\n#define rmctsrng 0x10  /* -              Send empty SRRU to systems     @P3C  */\n#define rmctsqmr 0x08  /* -              Schedule queue manager               */\n\n/* Values for field \"rmctcsb\" */\n#define rmctutqe 0x80  /* -           SRM TQE IS PAST DUE         @ZA70182    */\n#define rmctsimt 0x40  /* -              PASSAGE OF TIME HAS BEEN SIMULATED   */\n#define rmctnobq 0x20  /* -              NO BASIC RPTING Q ELEMNTS       @H5C */\n#define rmctnoeq 0x10  /* -              NO EXTND RPTING Q ELEMNTS       @H5C */\n#define rmcttpp  0x08  /* -              SRM TIMER POP PENDING       @ZA78879 */\n#define rmctstgf 0x04  /* -              VIO journaling dataset failure       */\n#define rmctwsmf 0x02  /* -              Write SMF 99 records            @L6A */\n#define rmctssmf 0x01  /* -              SRB to write SMF99 records has       */\n\n/* Values for field \"rmctend\" */\n#define rmctlen  0x400 /* -      LENGTH OF RMCT                               */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R702CCF": {"ttr": 7991, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r702ccf \u00e4\n  unsigned char  r702snec\u00c48\u00dc; /* Single DES: Number of calls                     */\n  unsigned char  r702sneb\u00c48\u00dc; /* Single DES: Number of bytes                     */\n  unsigned char  r702snei\u00c48\u00dc; /* Single DES: Number of CMD instructions          */\n  unsigned char  r702tnec\u00c48\u00dc; /* Triple DES: Number of calls                     */\n  unsigned char  r702tneb\u00c48\u00dc; /* Triple DES: Number of bytes                     */\n  unsigned char  r702tnei\u00c48\u00dc; /* Triple DES: Number of CMD instructions          */\n  unsigned char  r702sndc\u00c48\u00dc; /* Single DES: Number of calls                     */\n  unsigned char  r702sndb\u00c48\u00dc; /* Single DES: Number of bytes                     */\n  unsigned char  r702sndi\u00c48\u00dc; /* Single DES: Number of CMD instructions          */\n  unsigned char  r702tndc\u00c48\u00dc; /* Triple DES: Number of calls to decipher         */\n  unsigned char  r702tndb\u00c48\u00dc; /* Triple DES: Number of bytes                     */\n  unsigned char  r702tndi\u00c48\u00dc; /* Triple DES: Number of CMD instructions          */\n  unsigned char  r702nmgc\u00c48\u00dc; /* Number of calls to MAC generate                 */\n  unsigned char  r702nmgb\u00c48\u00dc; /* Number of bytes of data MAC generated           */\n  unsigned char  r702nmgi\u00c48\u00dc; /* Number of PCMF instructions                     */\n  unsigned char  r702nmvc\u00c48\u00dc; /* Number of calls to MAC verify                   */\n  unsigned char  r702nmvb\u00c48\u00dc; /* Number of bytes of data MAC verified            */\n  unsigned char  r702nmvi\u00c48\u00dc; /* Number of PCMF instructions                     */\n  unsigned char  r702nhac\u00c48\u00dc; /* For SHA-1: Number of calls to hash              */\n  unsigned char  r702nhab\u00c48\u00dc; /* For SHA-1: Number of bytes of data hashed       */\n  unsigned char  r702nhai\u00c48\u00dc; /* For SHA-1: Number of PCMF instructions          */\n  unsigned char  r702nptc\u00c48\u00dc; /* Number of calls to PIN translate                */\n  unsigned char  r702npvc\u00c48\u00dc; /* Number of calls to PIN verify                   */\n  unsigned char  r702nh2c\u00c48\u00dc; /* For SHA-224 and SHA-256:                   @21C */\n  unsigned char  r702nh2b\u00c48\u00dc; /* For SHA-224 and SHA-256:                   @21C */\n  unsigned char  r702nh2i\u00c48\u00dc; /* For SHA-224 and SHA-256:                   @21C */\n  unsigned char  r702nh5c\u00c48\u00dc; /* For SHA-384 and SHA-512:                        */\n  unsigned char  r702nh5b\u00c48\u00dc; /* For SHA-384 and SHA-512:                        */\n  unsigned char  r702nh5i\u00c48\u00dc; /* For SHA-384 and SHA-512:                        */\n  int            r702cdlv;    /* ICSF data level                        @OA28670 */\n  unsigned char  r702aesc\u00c48\u00dc; /* Number of AES encipher calls sent to a          */\n  unsigned char  r702aesb\u00c48\u00dc; /* Number of bytes processed by the AES            */\n  unsigned char  r702aesi\u00c48\u00dc; /* Number of operations required to complete       */\n  unsigned char  r702asdc\u00c48\u00dc; /* Number of AES decipher calls sent to a          */\n  unsigned char  r702asdb\u00c48\u00dc; /* Number of bytes processed by the AES            */\n  unsigned char  r702asdi\u00c48\u00dc; /* Number of operations required to complete       */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "R702TYP3": {"ttr": 8181, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r702typ3 \u00e4\n  unsigned char  r7023ax;     /* Crypto processor index                     @J1A */\n  unsigned char  r7023ct;     /* Crypto processor type                      @J1A */\n  unsigned char  _filler1\u00c46\u00dc; /* Reserved                                   @J1A */\n  unsigned char  r7023sf\u00c48\u00dc;  /* Scaling factor for the indicating               */\n  unsigned char  r7023t0\u00c48\u00dc;  /* Execution time of all operations on the         */\n  unsigned char  r7023c0\u00c48\u00dc;  /* Execution number of all operations on the       */\n  unsigned char  _filler2\u00c48\u00dc; /* Reserved                                   @J1C */\n  unsigned char  r7023c1\u00c48\u00dc;  /* Execution number of RSA-key-genaration          */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "R702TYP4": {"ttr": 8191, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r702typ4 \u00e4\n  unsigned char  r7024ax;     /* Crypto processor index                     @J1A */\n  unsigned char  r7024ct;     /* Crypto processor type                      @J1A */\n  unsigned char  r7024msk;    /* Validity bit mask. Each bit position   @OA31349 */\n  unsigned char  _filler1;    /* Reserved                               @OA31349 */\n  unsigned char  r7024en\u00c44\u00dc;  /* Number of engines. This is the number of   @K1A */\n  unsigned char  r7024sf\u00c48\u00dc;  /* Scaling factor for the indicating               */\n  union \u00e4\n    unsigned char  _r7024tc\u00c45\u00dc\u00c464\u00dc; /* Timers & counters for the cryptographic */\n    struct \u00e4\n      unsigned char  _r7021met\u00c48\u00dc;   /* Execution time for 1024-bit ME-format    */\n      unsigned char  _r7021mec\u00c48\u00dc;   /* Execution number for 1024-bit ME-format  */\n      unsigned char  _r7022met\u00c48\u00dc;   /* Execution time for 2048-bit ME-format    */\n      unsigned char  _r7022mec\u00c48\u00dc;   /* Execution number for 2048-bit ME-format  */\n      unsigned char  _r7021crt\u00c48\u00dc;   /* Execution time for 1024-bit CRT-format   */\n      unsigned char  _r7021crc\u00c48\u00dc;   /* Execution number for 1024-bit CRT-format */\n      unsigned char  _r7022crt\u00c48\u00dc;   /* Execution time for 2048-bit CRT-format   */\n      unsigned char  _r7022crc\u00c48\u00dc;   /* Execution number for 2048-bit CRT-format */\n      unsigned char  _filler2\u00c4256\u00dc;\n      \u00fc _r702typ4_struct1;\n    \u00fc _r702typ4_union1;\n  unsigned char  r7023met\u00c48\u00dc; /* Execution time for 4096-bit ME-format           */\n  unsigned char  r7023mec\u00c48\u00dc; /* Execution number for 4096-bit ME-format         */\n  unsigned char  r7023crt\u00c48\u00dc; /* Execution time for 4096-bit CRT-format          */\n  unsigned char  r7023crc\u00c48\u00dc; /* Execution number for 4096-bit CRT-format        */\n  \u00fc;\n\n#define r7024tc  _r702typ4_union1._r7024tc\n#define r7021met _r702typ4_union1._r702typ4_struct1._r7021met\n#define r7021mec _r702typ4_union1._r702typ4_struct1._r7021mec\n#define r7022met _r702typ4_union1._r702typ4_struct1._r7022met\n#define r7022mec _r702typ4_union1._r702typ4_struct1._r7022mec\n#define r7021crt _r702typ4_union1._r702typ4_struct1._r7021crt\n#define r7021crc _r702typ4_union1._r702typ4_struct1._r7021crc\n#define r7022crt _r702typ4_union1._r702typ4_struct1._r7022crt\n#define r7022crc _r702typ4_union1._r702typ4_struct1._r7022crc\n\n/* Values for field \"r7024msk\" */\n#define r7021km  0x80 /* 1024-bit ME-format RSA operations      @OA31349 */\n#define r7022km  0x40 /* 2048-bit ME-format RSA operations      @OA31349 */\n#define r7021kc  0x20 /* 1024-bit CRT-format RSA operations     @OA31349 */\n#define r7022kc  0x10 /* 2048-bit CRT-format RSA operations     @OA31349 */\n#define r7023km  0x08 /* 4096-bit ME-format RSA operations      @OA31349 */\n#define r7023kc  0x04 /* 4096-bit CRT-format RSA operations     @OA31349 */\n\n/* Values for field \"r7022crc\" */\n#define r702neng 5    /* Max number of entries in the R7024TC array @K1C */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79AELEM": {"ttr": 8511, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79aelem \u00e4\n  unsigned char  r79atwsr\u00c44\u00dc; /* TIME WEIGHTED SERVICE RATE       @LBA */\n  unsigned char  _filler1\u00c42\u00dc; /* Reserved                         @A3C */\n  unsigned char  r79arua\u00c42\u00dc;  /* AVERAGE NUMBER OF READY USERS    @LBA */\n  unsigned char  r79rsv5\u00c42\u00dc;  /* RESERVED LJM-SPE                 @Y2C */\n  unsigned char  r79acmpl\u00c42\u00dc; /* CURRENT MPL VALUE                @LBA */\n  unsigned char  r79aoutu\u00c42\u00dc; /* AVERAGE NUMBER OF USERS SWAPPED OUT   */\n  unsigned char  r79aincu\u00c42\u00dc; /* AVERAGE NUMBER OF SWAPPED IN-USER     */\n  unsigned char  _filler2\u00c42\u00dc; /* Reserved                         @A3C */\n  unsigned char  r79acidx\u00c42\u00dc; /* CONTENTION INDEX                 @LBA */\n  unsigned char  r79answ\u00c42\u00dc;  /* NUMBER OF NON SWAPPABLE USERS         */\n  unsigned char  r79admno;    /* DOMAIN NUMBER                    @LBA */\n  unsigned char  r79resv1;    /* RESERVED. FORMER R79ADMLO        @P3C */\n  unsigned char  r79resv2;    /* RESERVED. FORMER R79ADMHI        @P3C */\n  unsigned char  _filler3;    /* Reserved                         @A3C */\n  unsigned char  r79aips\u00c42\u00dc;  /* CURRENT IPS                      @LBA */\n  unsigned char  r79acpu\u00c44\u00dc;  /* CPU SERVICE COEF.                @LBA */\n  unsigned char  r79aios\u00c44\u00dc;  /* I/O SERVICE COEF.                @LBA */\n  unsigned char  r79arsv4\u00c44\u00dc; /* RESERVED SINCE RMF 4.2.0         @Y2C */\n  unsigned char  r79asrb\u00c44\u00dc;  /* SRB SERVICE COEF.                @LBA */\n  unsigned char  r79atwet\u00c44\u00dc; /* AVERAGE FIRST PERIOD TSO TRANSACTION  */\n  unsigned char  r79admlo\u00c42\u00dc; /* MIN MPL LEVEL                    @P3C */\n  unsigned char  r79admhi\u00c42\u00dc; /* MAX MPL LEVEL                    @P3A */\n  unsigned char  r79amso\u00c48\u00dc;  /* MAIN STORAGE SERVICE COEFICIENT  @Y2A */\n  unsigned char  r79aimpl\u00c42\u00dc; /* IN MPL Target                    @A3A */\n  unsigned char  r79aompl\u00c42\u00dc; /* OUT MPL Target                   @A3A */\n  \u00fc;\n\n/* Values for field \"r79aompl\" */\n#define r79arlen 0x40 /* LENGTH OF ONE RELOCATE BLOCK */\n#define r79aflen 0    /* LENGTH OF ONE FIXED BLOCK    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79BCNTL": {"ttr": 8699, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79bcntl \u00e4\n  unsigned char  r79betyp;    /* TYPE OF DATA THAT FOLLOWS:       @K2C */\n  unsigned char  _filler1\u00c43\u00dc; /* RESERVED                              */\n  \u00fc;\n\n/* Values for field \"_filler1\" */\n#define r79bflen 0x04 /* LENGTH OF FIXED SECTION */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79BELEM": {"ttr": 8363, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79belem \u00e4\n  unsigned char  r79bsalc\u00c44\u00dc; /* SLOTS IN THIS DATA SET           @LBA */\n  unsigned char  r79bsavl\u00c44\u00dc; /* SLOTS AVAILABLE                  @LBA */\n  unsigned char  r79bslbd\u00c44\u00dc; /* NUMBER OF BAD SLOTS              @LBA */\n  unsigned char  r79bsuse\u00c44\u00dc; /* ASM IN USE COUNT                 @LBA */\n  unsigned char  r79bsios\u00c44\u00dc; /* I/O REQUESTS                     @LBA */\n  unsigned char  r79breqs\u00c44\u00dc; /* PAGES TRANSFERRED                @LBA */\n  unsigned char  r79bflg;     /* FLAGS                            @LBA */\n  unsigned char  r79bdev;     /* DEVICE TYPE CODE                 @LBA */\n  unsigned char  r79bdadr\u00c43\u00dc; /* 3 DIGIT DEV NUMBER OR \"UCB\",     @C2C */\n  unsigned char  r79bvser\u00c46\u00dc; /* VOLUME SERIAL                    @LBA */\n  unsigned char  r79bdsn\u00c444\u00dc; /* DATA SET NAME                    @LBA */\n  unsigned char  r79bfl2;     /* FLAGS                        @ZA57889 */\n  unsigned char  r79bdevn\u00c48\u00dc; /* DEVICE NAME                      @Y1A */\n  unsigned char  r79bcu\u00c48\u00dc;   /* CONTROL UNIT NAME                @Y1A */\n  unsigned char  r79bdvn\u00c42\u00dc;  /* DEV NUMBER (BIN) FROM UCBCHAN    @C2A */\n  \u00fc;\n\n/* Values for field \"r79bflg\" */\n#define r79bsbad 0x80 /* 1... .... BAD DATA SET INDICATOR      */\n#define r79bplpa 0x40 /* .1.. .... PLPA DATA SET               */\n#define r79bcomm 0x20 /* ..1. .... COMMON DATA SET             */\n#define r79bdplx 0x10 /* ...1 .... Reserved               @K2C */\n#define r79blocl 0x08 /* .... 1... LOCAL DATA SET              */\n#define r79bpage 0x04 /* .... .1.. PAGE DATA                   */\n#define r79bswap 0x02 /* .... ..1. Reserved               @K2C */\n#define r79bvio  0x01 /* .... ...1 DATASET ACCEPTS VIO PAGES   */\n\n/* Values for field \"r79bfl2\" */\n#define r79bmexp 0x80 /* MULTIPLE EXPOSURE DEVICE     @ZA57889 */\n#define r79balcu 0x40 /* ALTERNATE CONTROL UNIT DEVICE    @E1A */\n#define r79bdnm  0x20 /* INDICATES IF FIELD R79BDEVN CONTAINS  */\n\n/* Values for field \"r79bdvn\" */\n#define r79brlen 0x62 /* LENGTH OF RELOCATE SECTION   @OA16748 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79CCHNL": {"ttr": 8109, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79cchnl \u00e4\n  unsigned char  r79ccpid;    /* CHANNEL PATH IDENTIFICATIONS         */\n  unsigned char  r79cfg2;     /* CHANNEL FLAGS                        */\n  unsigned char  r79cfg3;     /* Channel flags continued         @BAA */\n  unsigned char  r79ccpd;     /* Channel path description.       @C3A */\n  unsigned char  r79cbsy\u00c44\u00dc;  /* Number of samples in which the       */\n  unsigned char  r79cpby\u00c44\u00dc;  /* Partitions channel-path-busy         */\n  struct \u00e4\n    unsigned char  _filler1;     /* Overflow area               @WA39393 */\n    unsigned char  _r79ccpts\u00c43\u00dc; /* Last CPMB entry time stamp in        */\n    \u00fc r79ccptx;\n  unsigned char  r79cacr\u00c45\u00dc;  /* Channel path acronym            @G1A */\n  unsigned char  r79ccmg;     /* CPMF Channel Measurement Group  @H1A */\n  unsigned char  r79cfg4;     /* Channel Path Flags              @H1C */\n  unsigned char  r79ccpp;     /* Channel path parameter          @I3C */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _r79ctut\u00c44\u00dc; /* CPMF Total channel path busy    @H1A */\n        unsigned char  _r79cput\u00c44\u00dc; /* CPMF LPAR channel path busy     @H1A */\n        \u00fc r79ccm1;\n      unsigned char  _filler2\u00c440\u00dc;  /* Reserved                        @H1A */\n      \u00fc _r79cchnl_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _r79cmbc\u00c44\u00dc; /* CPMF Maximum Bus Cycles per     @H1A */\n        unsigned char  _r79cmcu\u00c44\u00dc; /* CPMF Maximum Channel work Units @H1A */\n        unsigned char  _r79cmwu\u00c44\u00dc; /* CPMF Maximum Write data Units   @H1A */\n        unsigned char  _r79cmru\u00c44\u00dc; /* CPMF Maximum Read data Units    @H1A */\n        unsigned char  _r79cus\u00c44\u00dc;  /* CPMF data Unit Size in bytes    @H1A */\n        \u00fc r79cccc;\n      struct \u00e4\n        unsigned char  _r79ctbc\u00c44\u00dc; /* CPMF Total Bus Cycles Count     @H1A */\n        unsigned char  _r79ctuc\u00c44\u00dc; /* CPMF Total channel work Unit    @H1A */\n        unsigned char  _r79cpuc\u00c44\u00dc; /* CPMF LPAR channel work Unit     @H1A */\n        unsigned char  _r79ctwu\u00c44\u00dc; /* CPMF Total Write data Units     @H1A */\n        unsigned char  _r79cpwu\u00c44\u00dc; /* CPMF LPAR Write data Units      @H1A */\n        unsigned char  _r79ctru\u00c44\u00dc; /* CPMF Total Read data Units      @H1A */\n        unsigned char  _r79cpru\u00c44\u00dc; /* CPMF LPAR Read data Units       @H1A */\n        \u00fc r79cccd;\n      \u00fc _r79cchnl_struct2;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _r79cpdu\u00c44\u00dc;  /* CPMF LPAR Data Unit size in     @J4A */\n        unsigned char  _r79ctdu\u00c44\u00dc;  /* CPMF Total Data Unit size in    @J4A */\n        unsigned char  _r79cpum\u00c44\u00dc;  /* CPMF LPAR Message sent unit     @J4A */\n        unsigned char  _r79ctum\u00c44\u00dc;  /* CPMF Total Message sent unit    @J4A */\n        unsigned char  _filler3\u00c44\u00dc;  /* Reserved                        @J4A */\n        \u00fc r79ccc3;\n      struct \u00e4\n        unsigned char  _r79cpms\u00c44\u00dc; /* CPMF LPAR Message sent units    @J4A */\n        unsigned char  _r79ctms\u00c44\u00dc; /* CPMF Total Message sent units   @J4A */\n        unsigned char  _r79cpus\u00c44\u00dc; /* CPMF LPAR count of Unsuccessful @J4A */\n        unsigned char  _r79cpub\u00c44\u00dc; /* CPMF LPAR count of Unsuccessful @J4A */\n        unsigned char  _r79ctub\u00c44\u00dc; /* CPMF Total count of             @J4A */\n        unsigned char  _r79cpds\u00c44\u00dc; /* CPMF LPAR Data units Sent count @J4A */\n        unsigned char  _r79ctds\u00c44\u00dc; /* CPMF Total Data units Sent      @J4A */\n        \u00fc r79ccd3;\n      \u00fc _r79cchnl_struct3;\n    unsigned char  _r79cccm\u00c448\u00dc; /* CPMF Channel Measurement        @H1A */\n    \u00fc _r79cchnl_union1;\n  unsigned char  r79cgen;     /* Channel type generation         @J5A */\n  unsigned char  _filler4\u00c43\u00dc; /* Reserved                             */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _r79cxoc\u00c44\u00dc; /* Total number of FICON command-  @22A */\n      unsigned char  _r79cxod\u00c44\u00dc; /* Total number of FICON command-  @22A */\n      unsigned char  _r79cxos\u00c48\u00dc; /* Summation count of FICON        @22A */\n      unsigned char  _r79cxtc\u00c44\u00dc; /* Total number of FICON transport @22A */\n      unsigned char  _r79cxtd\u00c44\u00dc; /* Total number of FICON transport @22A */\n      unsigned char  _r79cxts\u00c48\u00dc; /* Summation count of FICON        @22A */\n      \u00fc r79cxcm2;\n    unsigned char  _r79cccmx\u00c432\u00dc; /* CPMF Extended channel           @22A */\n    \u00fc _r79cchnl_union2;\n  \u00fc;\n\n#define r79ccpts r79ccptx._r79ccpts\n#define r79ctut  _r79cchnl_union1._r79cchnl_struct1.r79ccm1._r79ctut\n#define r79cput  _r79cchnl_union1._r79cchnl_struct1.r79ccm1._r79cput\n#define r79cmbc  _r79cchnl_union1._r79cchnl_struct2.r79cccc._r79cmbc\n#define r79cmcu  _r79cchnl_union1._r79cchnl_struct2.r79cccc._r79cmcu\n#define r79cmwu  _r79cchnl_union1._r79cchnl_struct2.r79cccc._r79cmwu\n#define r79cmru  _r79cchnl_union1._r79cchnl_struct2.r79cccc._r79cmru\n#define r79cus   _r79cchnl_union1._r79cchnl_struct2.r79cccc._r79cus\n#define r79ctbc  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79ctbc\n#define r79ctuc  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79ctuc\n#define r79cpuc  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79cpuc\n#define r79ctwu  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79ctwu\n#define r79cpwu  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79cpwu\n#define r79ctru  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79ctru\n#define r79cpru  _r79cchnl_union1._r79cchnl_struct2.r79cccd._r79cpru\n#define r79cpdu  _r79cchnl_union1._r79cchnl_struct3.r79ccc3._r79cpdu\n#define r79ctdu  _r79cchnl_union1._r79cchnl_struct3.r79ccc3._r79ctdu\n#define r79cpum  _r79cchnl_union1._r79cchnl_struct3.r79ccc3._r79cpum\n#define r79ctum  _r79cchnl_union1._r79cchnl_struct3.r79ccc3._r79ctum\n#define r79cpms  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79cpms\n#define r79ctms  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79ctms\n#define r79cpus  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79cpus\n#define r79cpub  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79cpub\n#define r79ctub  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79ctub\n#define r79cpds  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79cpds\n#define r79ctds  _r79cchnl_union1._r79cchnl_struct3.r79ccd3._r79ctds\n#define r79cccm  _r79cchnl_union1._r79cccm\n#define r79cxoc  _r79cchnl_union2.r79cxcm2._r79cxoc\n#define r79cxod  _r79cchnl_union2.r79cxcm2._r79cxod\n#define r79cxos  _r79cchnl_union2.r79cxcm2._r79cxos\n#define r79cxtc  _r79cchnl_union2.r79cxcm2._r79cxtc\n#define r79cxtd  _r79cchnl_union2.r79cxcm2._r79cxtd\n#define r79cxts  _r79cchnl_union2.r79cxcm2._r79cxts\n#define r79cccmx _r79cchnl_union2._r79cccmx\n\n/* Values for field \"r79cfg2\" */\n#define r79crv1  0xC0 /* RESERVED                             */\n#define r79cbl   0x20 /* BLOCK MULTIPLEXER                    */\n#define r79cby   0x10 /* BYTE MULTIPLEXER                     */\n#define r79ccvc  0x08 /* ES Conversion Channel           @Z1A */\n#define r79ccnc  0x04 /* ES Connection Channel           @Z2A */\n#define r79cdoc  0x02 /* ESCON Director on Chanel        @Z2A */\n#define r79ccc   0x01 /* Channel to Channel          @YA67090 */\n\n/* Values for field \"r79cfg3\" */\n#define r79cshr  0x80 /* Channel path is shared between       */\n#define r79cnvl  0x40 /* CPMF indication, this entry is       */\n#define r79cfxt  0x10 /* Channel converter 3090          @C3A */\n#define r79ccpm  0x08 /* Channel path is DCM managed     @I3A */\n#define r79ccdc  0x04 /* Channel characteristics changed @K4A */\n#define r79cxcm  0x02 /* Extended channel measurements        */\n\n/* Values for field \"r79cfg4\" */\n#define r79cwd1  0x80 /* CPMF Channel characteristics         */\n#define r79cwd2  0x40 /* CPMF Channel characteristics         */\n#define r79cwd3  0x20 /* CPMF Channel characteristics         */\n#define r79cwd4  0x10 /* CPMF Channel characteristics         */\n#define r79cwd5  0x08 /* CPMF Channel characteristics         */\n\n/* Values for field \"r79cxts\" */\n#define r79crlen 0x6C /* LENGTH OF RELOCATE SECTION           */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79CCNTL": {"ttr": 8029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79ccntl \u00e4\n  unsigned char  r79csmp\u00c44\u00dc;  /* NUMBER OF SAMPLES, WEIGHTED BY SRM,  */\n  unsigned char  r79cflag;    /* Flags                           @BAA */\n  unsigned char  r79ccmi;     /* CPMF mode info                  @H1A */\n  unsigned char  _filler1\u00c42\u00dc; /* Reserved for future use         @H1C */\n  unsigned char  r79ccfrc\u00c44\u00dc; /* CPMF restart count              @BAA */\n  unsigned char  r79ccfsc\u00c44\u00dc; /* CPMF sample count               @BAA */\n  unsigned char  r79ccss;     /* Channel SubSystem Id,           @K3A */\n  unsigned char  _filler2\u00c43\u00dc; /* Reserved for future use         @K3A */\n  \u00fc;\n\n/* Values for field \"r79cflag\" */\n#define r79ccpmf 0x80 /* CPMF available                  @BAA */\n#define r79ccfgc 0x40 /* Configuration change            @E1A */\n#define r79ccmh  0x20 /* DCM supported by the hardware   @I3A */\n#define r79ccmd  0x10 /* Configuration contains DCM      @I3A */\n#define r79crna  0x08 /* RMF address space not active    @I3A */\n#define r79cmcs  0x04 /* Hardware allows multiple        @K3A */\n#define r79cecm  0x02 /* Enhanced channel measurement    @22A */\n\n/* Values for field \"_filler2\" */\n#define r79cflen 0x14 /* LENGTH OF FIXED SECTION              */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79CHL": {"ttr": 8229, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79chl \u00e4\n  unsigned char  r79gtod\u00c44\u00dc;   /* -              DATA GATHERER CALL TOD        */\n  unsigned char  r79lf2;       /* -              FLAG BYTE                     */\n  unsigned char  r79rv1;       /* -              RESERVED                      */\n  unsigned char  r79ses\u00c42\u00dc;    /* -              SESSION NAME                  */\n  unsigned char  r79rsv\u00c42\u00dc;    /* -              RESERVED                      */\n  unsigned char  r79user\u00c42\u00dc;   /* -              USER FIELD                    */\n  unsigned char  r79rid\u00c48\u00dc;    /* -              MEASUREMENT NAME              */\n  unsigned char  r79ctxtl\u00c42\u00dc;  /* -              LEN OF COMMAND TEXT           */\n  unsigned char  r79ctext\u00c432\u00dc; /* -             COMMAND TEXT                   */\n  unsigned char  r79dtxtl\u00c42\u00dc;  /* -              LEN OF DEFAULT DR TEXT        */\n  unsigned char  r79dtext\u00c432\u00dc; /* -             DEFAULT DR TEXT                */\n  unsigned char  r79ist\u00c44\u00dc;    /* -              MONITOR I INTERVAL START TIME */\n  unsigned char  r79tsr\u00c42\u00dc;    /* Total number of small records    @W3A        */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved for future use          @W3A        */\n  unsigned char  r79tot\u00c44\u00dc;    /* Total number of data sections in             */\n  unsigned char  r79nxt\u00c44\u00dc;    /* Number of data sections in following         */\n  unsigned char  r79iwmtk\u00c48\u00dc;  /* Token returned from IWMRCOLL                 */\n  \u00fc;\n\n/* Values for field \"r79lf2\" */\n#define r79par  0x80 /* -            NOT ENOUGH RELOCATE SECTION TO        */\n#define r79sg   0x40 /* -            Report to be sorted by SG        @U1A */\n#define r79rsm  0x20 /* -            Invalid RSM data obtained        @W2A */\n#define r79goal 0x10 /* -            System is in GOAL mode           @C1A */\n#define r79trxi 0x08 /* -            Invalid transaction data         @C1A */\n#define r79srmc 0x04 /* -            SRM mode changed                 @C1A */\n#define r79inv  0x02 /* -            invalid data from Mon I      @YA66876 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79DCS": {"ttr": 8477, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79dcs \u00e4\n  unsigned char  r79did1\u00c42\u00dc;  /* LOGICAL CONTROL UNIT IDENTIFIER            @P4C */\n  unsigned char  r79dntr\u00c42\u00dc;  /* NUMBER OF DESCRIPTOR TRIPLETS                   */\n  unsigned char  r79dcpds\u00c44\u00dc; /* OFFSET TO CONFIGURATION DATA SECTION            */\n  unsigned char  r79dcpdl\u00c42\u00dc; /* LENGTH OF CONFIGURATION DATA SECTION            */\n  unsigned char  r79dcpdn\u00c42\u00dc; /* NUMBER OF CONFIGURATION DATA SECTIONS           */\n  \u00fc;\n\n/* Values for field \"r79dcpdn\" */\n#define r79dcpdx 8    /* NUMBER OF CONFIGURATION DATA SECTIONS  @YA61897 */\n#define r79dcsl  0x6C /* LENGTH OF CONFIGURATION                         */\n#define r79drlen 0x8C /* LENGTH OF A RELOCATE BLOCK                      */\n#define r79dflen 0    /* LENGTH OF A FIXED BLOCK                         */\n#define r79drmax 256  /* MAXIMUM NUMBER OF RELOCATE BLOCKS (MAXRB)       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79DDS": {"ttr": 8665, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79dds \u00e4\n  unsigned char  _filler1;    /* RESERVED                                   @P4C */\n  unsigned char  r79ddst;     /* DATA STATUS                                     */\n  unsigned char  r79dict\u00c42\u00dc;  /* COUNT OF SUCCESSIVE UNSUCCESSFUL SAMPLES        */\n  unsigned char  r79daby\u00c44\u00dc;  /* NUMBER OF SAMPLES WHEN ALL CHANNEL PATHS        */\n  unsigned char  r79dtis\u00c44\u00dc;  /* TOTAL NUMBER OF  INITIAL SELECTION ATTEMPTS     */\n  unsigned char  r79dsis\u00c44\u00dc;  /* TOTAL NUMBER OF SUCCESSFUL SELECTION            */\n  unsigned char  r79dcub\u00c44\u00dc;  /* TOTAL NUMBER OF UNSUCCESSFUL SELECTION          */\n  unsigned char  r79ddvb\u00c44\u00dc;  /* TOTAL NUMBER OF UNSUCCESSFUL SELECTION          */\n  unsigned char  r79dque\u00c44\u00dc;  /* TOTAL NUMBER OF REQUESTS QUEUED FOR THE LCU     */\n  unsigned char  r79did2\u00c42\u00dc;  /* LOGICAL CONTROL UNIT IDENTIFIER            @P4A */\n  unsigned char  _filler2\u00c42\u00dc; /* RESERVED                                   @P4A */\n  \u00fc;\n\n/* Values for field \"r79ddst\" */\n#define r79dcps  0x80 /* 1... .... ON= NO STCPS DATA AVAILABLE           */\n#define r79dnhma 0x20 /* ..1. .... ON= NO HARDWARE MEASUREMENTS     @O1A */\n\n/* Values for field \"_filler2\" */\n#define r79ddsl  0x20 /* LENGTH OF DATA SECTION                          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79ECPD": {"ttr": 8425, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79ecpd \u00e4\n  unsigned char  r79ecpid;    /* CHANNEL PATH IDENTIFIER                    @P4A */\n  unsigned char  r79ecpst;    /* CHANNEL PATH STATUS                        @P4A */\n  unsigned char  r79ecun\u00c42\u00dc;  /* NUMBER OF CONTROL UNITS ATTACHED           @P4A */\n  struct \u00e4\n    unsigned char  _r79ecu1\u00c42\u00dc; /* 1ST CONTROL UNIT IDENTIFIER                @P4A */\n    unsigned char  _r79ecu2\u00c42\u00dc; /* 2ND CONTROL UNIT IDENTIFIER                @P4A */\n    unsigned char  _r79ecu3\u00c42\u00dc; /* 3RD CONTROL UNIT IDENTIFIER                @P4A */\n    unsigned char  _r79ecu4\u00c42\u00dc; /* 4TH CONTROL UNIT IDENTIFIER                @P4A */\n    \u00fc r79ecu;\n  unsigned char  r79ecub\u00c44\u00dc;  /* COUNT OF CU BUSY                           @P4A */\n  unsigned char  r79ept\u00c44\u00dc;   /* COUNT OF OPERATIONS ACCEPTED               @P4A */\n  unsigned char  _filler1\u00c44\u00dc; /* No longer used                         @WA50187 */\n  unsigned char  r79edpbc\u00c44\u00dc; /* Count of ESCON Director port busy          @Z2C */\n  unsigned char  r79ecbt\u00c44\u00dc;  /* Control unit Busy delay Time in units of   @K3C */\n  unsigned char  r79ecmr\u00c44\u00dc;  /* Initial CoMmand Response time in units of  @K3A */\n  unsigned char  r79esbs\u00c44\u00dc;  /* Switch busy count summation                @K3A */\n  unsigned char  _filler2\u00c44\u00dc; /* Reserved for future use                    @K3A */\n  unsigned char  r79ecpxf;    /* Channel path extended flags                @K3A */\n  unsigned char  r79ecpat;    /* Path attributes:                           @L1A */\n  unsigned char  _filler3\u00c42\u00dc; /* Reserved for future use                    @L1C */\n  \u00fc;\n\n#define r79ecu1 r79ecu._r79ecu1\n#define r79ecu2 r79ecu._r79ecu2\n#define r79ecu3 r79ecu._r79ecu3\n#define r79ecu4 r79ecu._r79ecu4\n\n/* Values for field \"r79ecpst\" */\n#define r79ecpi  0x80 /* CHANNEL PATH INSTALLED                     @P4A */\n#define r79ecpo  0x40 /* CHANNEL PATH ONLINE                        @P4A */\n#define r79ecpv  0x20 /* CHANNEL PATH VARIED                        @P4A */\n#define r79evpof 0x10 /* PATH OFFLINE TO ALL DEVICES OF THE LCU     @P4A */\n#define r79evp   0x08 /* PATH CONNECTIVITY TO DEVICES OF THE LCU    @P4A */\n#define r79ecpm  0x02 /* Channel path is DCM managed                @I3A */\n#define r79ecpmr 0x01 /* CHPID manipulated, requiring data reset    @I3A */\n\n/* Values for field \"r79ecpxf\" */\n#define r79ecpxm 0x80 /* 1... .... 1= extended I/O-measurement-     @K3A */\n\n/* Values for field \"_filler3\" */\n#define r79ecpdy 0x30 /* LENGTH OF CONFIGURATION DATA SECTION      @P4A  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79ECS": {"ttr": 8413, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79ecs \u00e4\n  unsigned char  r79eid1\u00c42\u00dc;  /* LOGICAL CONTROL UNIT IDENTIFIER            @P4A */\n  unsigned char  r79entr\u00c42\u00dc;  /* NUMBER OF DESCRIPTOR TRIPLETS              @P4A */\n  unsigned char  r79ecpds\u00c44\u00dc; /* OFFSET TO CONFIGURATION DATA SECTION       @P4A */\n  unsigned char  r79ecpdl\u00c42\u00dc; /* LENGTH OF CONFIGURATION DATA SECTION       @P4A */\n  unsigned char  r79ecpdn\u00c42\u00dc; /* NUMBER OF CONFIGURATION DATA SECTIONS      @P4A */\n  \u00fc;\n\n/* Values for field \"r79ecpdn\" */\n#define r79ecpdx 8     /* NUMBER OF CONFIGURATION DATA SECTIONS  @YA41310 */\n#define r79ecsl  0x18C /* LENGTH OF CONFIG.      @P4A                     */\n#define r79erlen 0x1C4 /* LENGTH OF A RELOCATE BLOCK         @P4A         */\n#define r79ermax 256   /* MAXIMUM NUMBER OF RELOCATE BLOCKS (MAXRB)  @P4A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79EDS": {"ttr": 8347, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79eds \u00e4\n  unsigned char  r79eid2\u00c42\u00dc;  /* LOGICAL CONTROL UNIT IDENTIFIER            @P4A */\n  unsigned char  r79edst;     /* DATA STATUS                                @P4A */\n  unsigned char  _filler1;    /* RESERVED                                   @P4A */\n  unsigned char  r79eqsm\u00c44\u00dc;  /* QUEUED SUM ON THE CU-HDR QUEUE             @P4A */\n  unsigned char  r79eqct\u00c44\u00dc;  /* COUNT OF ENTRIES PLACED ON THE CU-HDR Q.   @P4A */\n  unsigned char  r79emcmn\u00c42\u00dc; /* Min number of DCM managed channels used    @I3A */\n  unsigned char  r79emcmx\u00c42\u00dc; /* Max number of DCM managed channels used    @I3A */\n  unsigned char  r79emcdf\u00c42\u00dc; /* Defined number of DCM managed channels     @I3A */\n  unsigned char  _filler2\u00c42\u00dc; /* Reserved                                   @I3A */\n  unsigned char  r79eptm\u00c44\u00dc;  /* Accumulated path taken count for DCM       @I3A */\n  unsigned char  r79edpbm\u00c44\u00dc; /* Accumulated director port busy count for   @I3A */\n  unsigned char  r79ecubm\u00c44\u00dc; /* Accumulated control unit busy count for    @I3A */\n  unsigned char  r79ecbtm\u00c44\u00dc; /* Accumulated control unit busy time for     @K3A */\n  unsigned char  r79ecmrm\u00c44\u00dc; /* Accumulated initial command response time  @K3A */\n  unsigned char  r79esbsm\u00c44\u00dc; /* Accumulated switch busy count summation    @K3A */\n  unsigned char  _filler3\u00c48\u00dc; /* Reserved for future use                    @K3A */\n  unsigned char  r79ecsst\u00c44\u00dc; /* Channel subsystem wait time in             @K3A */\n  \u00fc;\n\n/* Values for field \"r79edst\" */\n#define r79enhma 0x40 /* .1.. .... ON= NO HARDWARE MEASUREMENTS     @Z1C */\n#define r79eldcm 0x08 /* .... 1... ON= LCU contains DCM managed     @I3A */\n#define r79elpat 0x04 /* .... .1.. ON= Path attributes are valid    @L1A */\n\n/* Values for field \"r79ecsst\" */\n#define r79edsl  0x38 /* LENGTH OF DATA SECTION                     @P4A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79EGD": {"ttr": 8279, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79egd \u00e4\n  unsigned char  r79egflg;    /* GLOBAL IOQ STATUS                          @P4A */\n  unsigned char  _filler1\u00c43\u00dc; /* FOR ALIGNMENT ONLY                         @P4A */\n  unsigned char  _filler2\u00c44\u00dc; /* No longer used                         @WA50187 */\n  \u00fc;\n\n/* Values for field \"r79egflg\" */\n#define r79egcmf 0x80 /* 1... .... ON= DATA IS INVALID DUE TO FAILURE    */\n#define r79egdif 0x40 /* .1.. .... ON= DIAGNOSE INTERFACE FAILURE   @P4A */\n#define r79egdir 0x20 /* ..1. .... ON= ESCON Director in Config.    @Z2A */\n#define r79egssq 0x10 /* ...1 .... ON= CHSC store secondary queue        */\n#define r79egcmh 0x08 /* .... 1... ON= DCM is supported by hardware @I3A */\n#define r79egcmd 0x04 /* .... .1.. ON= Configuration contains DCM   @I3A */\n#define r79egcmr 0x02 /* .... ..1. ON= initial-command-response-    @K3A */\n\n/* Values for field \"_filler2\" */\n#define r79eflen 0x08 /* LENGTH OF A FIXED BLOCK                    @P4A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R79FIRML": {"ttr": 8273, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r79firlm \u00e4\n  unsigned char  r79fistn\u00c416\u00dc; /* IRLM Lock Structure Name                   @F1A */\n  unsigned char  r79fdlkc\u00c44\u00dc;  /* Dead Lock Cycle Number                     @F1A */\n  unsigned char  r79fetyp;     /* 'B' = Blocker / 'W' = Waiter               @F1A */\n  unsigned char  r79favl\u00c43\u00dc;   /* Reserved                                   @F1A */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _r79fblkr; /* @F1A */\n        \u00fc r79fwait;\n      unsigned char  _filler1\u00c47\u00dc;\n      \u00fc _r79firlm_struct1;\n    unsigned char  _r79fimsi\u00c48\u00dc; /* IMS Subsystem ID                           @F1A */\n    \u00fc _r79firlm_union1;\n  unsigned char  r79fpstn\u00c42\u00dc;  /* PST Number                                 @F1A */\n  unsigned char  r79fpsbn\u00c48\u00dc;  /* PSB Name                                   @F1A */\n  unsigned char  r79frgty;     /* Region Type                                @F1A */\n  unsigned char  r79frcvt\u00c416\u00dc; /* Recovery Token                             @F1A */\n  unsigned char  r79fctid\u00c48\u00dc;  /* CICS Task ID (If CICS)                     @F1A */\n  unsigned char  r79flhti\u00c48\u00dc;  /* Lock Held Time-Duration                    @F1A */\n  unsigned char  r79flhcn\u00c44\u00dc;  /* Max Lock Held-PSTLKHLD                     @F1A */\n  unsigned char  r79flkna\u00c416\u00dc; /* Lock Name                                  @F1A */\n  unsigned char  r79ftrnm\u00c48\u00dc;  /* Transaction Name / Job Name            @WA27252 */\n  unsigned char  r79frsna\u00c48\u00dc;  /* Resource (DB/Area) Name                    @F1A */\n  \u00fc;\n\n#define r79fblkr _r79firlm_union1._r79firlm_struct1.r79fwait._r79fblkr\n#define r79fimsi _r79firlm_union1._r79fimsi\n\n/* Values for field \"r79frsna\" */\n#define r79firll 0x6F /* Length of data section                 @F1A     */\n#define r79frbat 0x80 /* Region type = BATCH                        @F1A */\n#define r79frbmp 0x40 /* Region type = BMP                          @F1A */\n#define r79frifp 0x20 /* Region type = IFP                          @F1A */\n#define r79frcic 0x10 /* Region type = CICS                         @F1A */\n#define r79frmpp 0x08 /* Region type = MPP                          @F1A */\n#define r79frdbc 0x04 /* Region type = DBCTL                        @F1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R791ELEM": {"ttr": 8641, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r791elem \u00e4\n  unsigned char  r791asid\u00c42\u00dc; /* ADDRESS SPACE IDENTIFIER              */\n  unsigned char  r791jbn\u00c48\u00dc;  /* NAME OF JOB                           */\n  unsigned char  r791dmn\u00c42\u00dc;  /* DOMAIN NUMBER                         */\n  unsigned char  r791npg\u00c42\u00dc;  /* PERFORMANCE GROUP                     */\n  unsigned char  r791pgp\u00c42\u00dc;  /* PERFORMANCE GROUP PERIOD              */\n  unsigned char  r791ttod\u00c44\u00dc; /* REAL TIME INTO TRANSACTION       @J2C */\n  unsigned char  r791cl\u00c42\u00dc;   /* CURRENT LOCATION                      */\n  unsigned char  r791tas\u00c42\u00dc;  /* TYPE OF USER                          */\n  unsigned char  r791src\u00c42\u00dc;  /* REASON LAST SWAP OUT                  */\n  unsigned char  r791dp\u00c42\u00dc;   /* -              DISPATCHER PRIORITY    */\n  unsigned char  r791seqn\u00c42\u00dc; /* RESERVED                         @S1C */\n  unsigned char  r791rsv1\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r791rsv2\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r791swc\u00c42\u00dc;  /* TRANSACTION SWAP COUNT                */\n  unsigned char  r791swmr\u00c42\u00dc; /* SRM WORKLOAD RECOM VALUE              */\n  unsigned char  _filler1\u00c42\u00dc; /* Reserved                         @A3C */\n  unsigned char  _filler2\u00c42\u00dc; /* Reserved                         @A3C */\n  unsigned char  r791wms\u00c44\u00dc;  /* SRM SSERVICE FOR THE CURRENT          */\n  unsigned char  r791tcpu\u00c44\u00dc; /* Total CPU time consumed on behalf     */\n  unsigned char  _filler3\u00c42\u00dc; /* Reserved                         @A3C */\n  unsigned char  _filler4\u00c42\u00dc; /* Reserved                     @YA28328 */\n  unsigned char  r791esct\u00c44\u00dc; /* Number of expanded storage frames     */\n  unsigned char  r791rsv3\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r791pin\u00c44\u00dc;  /* Page in count                    @W1A */\n  unsigned char  r791trtm\u00c44\u00dc; /* Transaction residency time       @W1A */\n  unsigned char  r791flg;     /* Flags                            @W1A */\n  unsigned char  r791flg2;    /* Additional flags                 @I4C */\n  unsigned char  r791fmct\u00c44\u00dc; /* NUMBER OF REAL STORAGE FRAMES    @W5A */\n  unsigned char  r791wss\u00c44\u00dc;  /* WORKING SET AT LAST SWAP IN      @W5A */\n  unsigned char  r791twss\u00c44\u00dc; /* SRM TARGET WORKING SET SIZE      @W5A */\n  unsigned char  r791eshp\u00c44\u00dc; /* Number of hiperspace expanded storage */\n  unsigned char  r791esvi\u00c44\u00dc; /* Number of VIO expanded storage        */\n  unsigned char  r791hin\u00c44\u00dc;  /* Number of hiperspace page ins    @W8A */\n  unsigned char  r791hrms\u00c44\u00dc; /* Number of ESO hiperspace read         */\n  unsigned char  r791bpin\u00c44\u00dc; /* Number of blocked pages brought       */\n  unsigned char  r791pine\u00c44\u00dc; /* Number of pages brought in from       */\n  unsigned char  r791bpne\u00c44\u00dc; /* Number of blocked pages brought       */\n  unsigned char  r791ctar\u00c44\u00dc; /* Central storage target number of      */\n  unsigned char  r791val\u00c44\u00dc;  /* Recommendation value for WSM          */\n  unsigned char  r791scl\u00c48\u00dc;  /* Service class name               @C1A */\n  unsigned char  r791scp\u00c42\u00dc;  /* Service class period             @C1A */\n  unsigned char  r791wkld\u00c48\u00dc; /* Workload name                    @C1A */\n  unsigned char  r791rgrp\u00c48\u00dc; /* Resource group name              @C1A */\n  unsigned char  r791spi\u00c44\u00dc;  /* Number of page-ins from               */\n  unsigned char  r791cmni\u00c44\u00dc; /* Number of common pages for current    */\n  unsigned char  r791pnv\u00c44\u00dc;  /* Number of non-vio pages for current   */\n  unsigned char  r791pvio\u00c44\u00dc; /* Number of vio pages for current       */\n  unsigned char  r791exct\u00c44\u00dc; /* EXCP count for                        */\n  unsigned char  r791tcpc\u00c44\u00dc; /* Total CPU time consumed in this       */\n  unsigned char  r791asst\u00c44\u00dc; /* CPU time consumed by preemptible-     */\n  unsigned char  r791phtm\u00c44\u00dc; /* CPU time consumed by preemptible-     */\n  unsigned char  r791rcl\u00c48\u00dc;  /* Report class name                @I4A */\n  unsigned char  r791mlim\u00c48\u00dc; /* Address space memory limit            */\n  unsigned char  r791tifa\u00c44\u00dc; /* CPU time consumed on zAAPs (IFAs)     */\n  unsigned char  r791tcp\u00c44\u00dc;  /* CPU time consumed on standard CPs     */\n  unsigned char  r791tifc\u00c44\u00dc; /* CPU time consumed on standard CPs by  */\n  unsigned char  r791nffi\u00c44\u00dc; /* Normalization factor for zAAP time.   */\n  unsigned char  r791tsup\u00c44\u00dc; /* CPU time consumed on zIIPs            */\n  unsigned char  r791tsuc\u00c44\u00dc; /* CPU time consumed on standard CPs     */\n  unsigned char  r791nffs\u00c44\u00dc; /* Normalization factor for zIIP time.   */\n  unsigned char  r791excw\u00c48\u00dc; /* EXCP Count ( DoubleWord )    @OA15850 */\n  \u00fc;\n\n/* Values for field \"r791flg\" */\n#define r791xm   0x80 /* -- Cross memory address space    @W1A */\n#define r791pmon 0x40 /* On = data in R791CTAR is valid.       */\n#define r791valv 0x20 /* On = data in R791VAL is valid.        */\n#define r791goal 0x10 /* On = system is in GOAL mode      @C1A */\n#define r791srv  0x08 /* On = this address space is a          */\n#define r791qsc  0x04 /* On = address space has been           */\n#define r791txme 0x02 /* Like RASDTRXNMGMTEXEMPT          @I4A */\n#define r791taff 0x01 /* On = address space has temporal       */\n\n/* Values for field \"r791flg2\" */\n#define r791cprc 0x80 /* Same as RASDCPROTCPU             @I4A */\n#define r791cpre 0x40 /* Same as RASDASPROTSTG            @I4A */\n#define r791cpri 0x20 /* Same as RASDCPROTSTG             @I4A */\n#define r791cpup 0x10 /* Same as RASDCPUPROTECTED         @I4A */\n#define r791stop 0x08 /* Same as RASDSTGPROTECTED         @I4A */\n\n/* Values for field \"r791excw\" */\n#define r791rlen 0xE4 /* LENGTH OF ONE RELOCATE BLOCK          */\n#define r791flen 0    /* LENGTH OF ONE FIXED BLOCK             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R792ELEM": {"ttr": 7893, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r792elem \u00e4\n  unsigned char  r792asid\u00c42\u00dc; /* ASID ADDRESS SPACE IDENTIFIER         */\n  unsigned char  r792jbn\u00c48\u00dc;  /* NAME OF JOB                           */\n  unsigned char  r792dmn\u00c42\u00dc;  /* DOMAIN NUMBER                         */\n  unsigned char  r792npg\u00c42\u00dc;  /* PERFORMANCE GROUP                     */\n  unsigned char  r792cl\u00c42\u00dc;   /* CURRENT LOCATION                      */\n  unsigned char  r792tas\u00c42\u00dc;  /* TYPE OF USER                          */\n  unsigned char  r792trc\u00c42\u00dc;  /* TRANSACTION COUNT                     */\n  unsigned char  r792ttod\u00c44\u00dc; /* TRANSACTION ELAPSED TIME,             */\n  unsigned char  r792prfx\u00c44\u00dc; /* NUMBER OF PRIVATE FIXED FRAMES        */\n  unsigned char  r792rsv1\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r792svar\u00c44\u00dc; /* SRM SERVICE ABSORPTION RATE FOR STEP  */\n  unsigned char  r792tcpu\u00c44\u00dc; /* TOTAL TCB TIME FOR STEP          @R0C */\n  struct \u00e4\n    unsigned char  _r792pss1\u00c44\u00dc; /* HIGH ORDER WORD */\n    unsigned char  _r792pss2\u00c44\u00dc; /* LOW ORDER WORD  */\n    \u00fc r792pss;\n  unsigned char  r792ejst\u00c44\u00dc; /* Total CPU time consumed on behalf     */\n  unsigned char  r792tsrm\u00c44\u00dc; /* TOTAL SRM SERVICE FOR STEP            */\n  unsigned char  r792rtm\u00c44\u00dc;  /* RESIDENT TIME FOR STEP IN SECONDS     */\n  unsigned char  r792excp\u00c42\u00dc; /* EXCP COUNT FOR STEP                   */\n  unsigned char  r792cmni\u00c44\u00dc; /* NUMBER OF COMMON PAGES FOR CURRENT    */\n  unsigned char  r792pnv\u00c44\u00dc;  /* NUMBER OF NON-VIO PAGES FOR CURRENT   */\n  unsigned char  r792pvio\u00c44\u00dc; /* NUMBER OF VIO PAGES FOR CURRENT       */\n  unsigned char  r792fxbl\u00c44\u00dc; /* NUMBER OF FIXED FRAMES WHICH ARE      */\n  unsigned char  r792pswp\u00c44\u00dc; /* NUMBER OF PAGES SWAPPED IN FOR        */\n  unsigned char  r792lpai\u00c44\u00dc; /* NUMBER OF LPA PAGES SWAPPED IN FOR    */\n  unsigned char  r792csai\u00c44\u00dc; /* NUMBER OF CSA PAGES SWAPPED IN FOR    */\n  unsigned char  r792lsqa\u00c44\u00dc; /* NUMBER OF LSQA FIXED FRAMES           */\n  unsigned char  r792nlqf\u00c44\u00dc; /* NUMBER OF NON-LSQA FIXED FRAMES       */\n  unsigned char  r792tdev\u00c44\u00dc; /* TOTAL DEVICE CONNECT TIME IN          */\n  unsigned char  r792rsv2\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r792pin\u00c44\u00dc;  /* PAGE-IN COUNT                         */\n  unsigned char  r792trtm\u00c44\u00dc; /* TRANSACTION RESIDENCY TIME            */\n  unsigned char  r792flg;     /* FLAGS:                                */\n  unsigned char  r792flg2;    /* Additional flags                 @J1C */\n  unsigned char  r792lsqr\u00c44\u00dc; /* LSQA pages in real storage            */\n  unsigned char  r792lsqe\u00c44\u00dc; /* LSQA pages in ext. storage            */\n  unsigned char  r792ars\u00c44\u00dc;  /* AVG NUM OF REAL FRAMES FOR STEP  @W5A */\n  unsigned char  r792twss\u00c44\u00dc; /* SRM TARGET WORKING SET SIZE           */\n  unsigned char  r792phsp\u00c44\u00dc; /* Number of hiperspace pages            */\n  unsigned char  r792exct\u00c44\u00dc; /* New 4-byte EXCP count field  @YA42170 */\n  unsigned char  r792scl\u00c48\u00dc;  /* Service class name               @C1A */\n  unsigned char  r792scp\u00c42\u00dc;  /* Service class period             @C1A */\n  unsigned char  r792wkld\u00c48\u00dc; /* Workload name                    @C1A */\n  unsigned char  r792rgrp\u00c48\u00dc; /* Resource group name              @C1A */\n  unsigned char  _filler1\u00c42\u00dc; /* RESERVED                              */\n  unsigned char  r792tcpc\u00c44\u00dc; /* Total CPU time consumed in this       */\n  unsigned char  r792asst\u00c44\u00dc; /* CPU time consumed by preemptible-     */\n  unsigned char  r792phtm\u00c44\u00dc; /* CPU time consumed by preemptible-     */\n  unsigned char  r792fxab\u00c44\u00dc; /* Number of fixed frames between        */\n  unsigned char  r792tifa\u00c44\u00dc; /* CPU time consumed on zAAPs (IFAs)     */\n  unsigned char  r792tcp\u00c44\u00dc;  /* CPU time consumed on standard CPs     */\n  unsigned char  r792tifc\u00c44\u00dc; /* CPU time consumed on standard CPs by  */\n  unsigned char  r792nffi\u00c44\u00dc; /* Normalization factor for IFA time.    */\n  unsigned char  r792tsup\u00c44\u00dc; /* CPU time consumed on zIIPs            */\n  unsigned char  r792tsuc\u00c44\u00dc; /* CPU time consumed on standard CPs     */\n  unsigned char  r792nffs\u00c44\u00dc; /* Normalization factor for zIIP time.   */\n  unsigned char  r792excw\u00c48\u00dc; /* EXCP Count ( DoubleWord )    @OA15850 */\n  \u00fc;\n\n#define r792pss1 r792pss._r792pss1\n#define r792pss2 r792pss._r792pss2\n\n/* Values for field \"r792flg\" */\n#define r792xm   0x80 /* -- CROSS MEMORY ADDRESS SPACE         */\n#define r792rsm  0x40 /* Invalid RSM data for address          */\n#define r792rsv3 0x20 /* Reserved                         @C1A */\n#define r792goal 0x10 /* On = system is in GOAL mode      @C1A */\n#define r792srv  0x08 /* On = this address space is a          */\n#define r792qsc  0x04 /* On = address space has been           */\n#define r792txme 0x02 /* Like RASDTRXNMGMTEXEMPT          @J1A */\n#define r792taff 0x01 /* On = address space has temporal       */\n\n/* Values for field \"r792flg2\" */\n#define r792cprc 0x80 /* Same as RASDCPROTCPU             @J1A */\n#define r792cpre 0x40 /* Same as RASDASPROTSTG            @J1A */\n#define r792cpri 0x20 /* Same as RASDCPROTSTG             @J1A */\n#define r792cpup 0x10 /* Same as RASDCPUPROTECTED         @J1A */\n#define r792stop 0x08 /* Same as RASDSTGPROTECTED         @J1A */\n\n/* Values for field \"r792excw\" */\n#define r792rlen 0xD8 /* LENGTH OF ONE RELOCATE BLOCK          */\n#define r792flen 0    /* LENGTH OF ONE FIXED BLOCK             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R793": {"ttr": 8075, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r793 \u00e4\n  unsigned char  r793rsv1\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r793cri\u00c42\u00dc;  /* Current System UIC                    */\n  unsigned char  r793sqa\u00c42\u00dc;  /* NUMBER OF FIXED SQA FRAMES            */\n  unsigned char  r793cmnf\u00c42\u00dc; /* NUMBER OF COMMON (LPA+CSA)            */\n  unsigned char  r793cmff\u00c42\u00dc; /* NUMBER OF COMMON (LPA+CSA)            */\n  unsigned char  r793prfx\u00c42\u00dc; /* NUMBER OF PRIVATE FIXED FRAMES        */\n  unsigned char  r793cpuu\u00c42\u00dc; /* PROCESSOR UTILIZATION (0-101)         */\n  unsigned char  r793dq\u00c42\u00dc;   /* LENGTH OF OUT WAIT QUEUE     @WA19913 */\n  unsigned char  r793inc\u00c42\u00dc;  /* NUMBER OF ADDRESS SPACES IN STORAGE   */\n  unsigned char  r793outu\u00c42\u00dc; /* NUMBER OF ADDRESS SPACES OUT OF       */\n  unsigned char  r793lcu\u00c42\u00dc;  /* RESERVED                              */\n  unsigned char  r793rsv4\u00c42\u00dc; /* RESERVED LJM-SPE                 @Y2C */\n  unsigned char  r793lpaf\u00c42\u00dc; /* Number of total LPA frames   @YA34458 */\n  unsigned char  r793csaf\u00c42\u00dc; /* Number of total CSA frames   @YA34458 */\n  unsigned char  r793lpfx\u00c42\u00dc; /* NUMBER OF LPA FIXED FRAMES            */\n  unsigned char  r793csfx\u00c42\u00dc; /* NUMBER OF CSA FIXED FRAMES            */\n  unsigned char  r793lsqa\u00c42\u00dc; /* NUMBER OF FIXED LSQA FRAMES           */\n  unsigned char  r793nlqf\u00c42\u00dc; /* NUMBER OF PRIVATE NON LSQA FIX FRAMES */\n  unsigned char  r793lout\u00c42\u00dc; /* NUMBER OF ADDRESS SPACES LOGICALLY    */\n  unsigned char  r793sqr\u00c44\u00dc;  /* SQA pages in real storage             */\n  unsigned char  r793sqe\u00c44\u00dc;  /* SQA pages in ext. storage             */\n  unsigned char  r793lsqr\u00c44\u00dc; /* LSQA pages in real storage            */\n  unsigned char  r793lsqe\u00c44\u00dc; /* LSQA pages in ext. storage            */\n  unsigned char  r793afc\u00c44\u00dc;  /* NUMBER OF AVAILABLE FRAMES       @W5A */\n  unsigned char  r793cut\u00c44\u00dc;  /* MVS view of CPU utilization           */\n  unsigned char  r793sqa4\u00c44\u00dc; /* NUMBER OF FIXED SQA FRAMES   @WA56739 */\n  unsigned char  r793cmn4\u00c44\u00dc; /* NUMBER OF COMMON (LPA+CSA)   @WA56739 */\n  unsigned char  r793cmf4\u00c44\u00dc; /* NUMBER OF COMMON (LPA+CSA)   @WA56739 */\n  unsigned char  r793pfx4\u00c44\u00dc; /* NUMBER OF PRIVATE FIXED      @WA56739 */\n  unsigned char  r793lpf4\u00c44\u00dc; /* Number of total LPA frames   @WA56739 */\n  unsigned char  r793csf4\u00c44\u00dc; /* Number of total CSA frames   @WA56739 */\n  unsigned char  r793lfx4\u00c44\u00dc; /* NUMBER OF LPA FIXED FRAMES   @WA56739 */\n  unsigned char  r793cfx4\u00c44\u00dc; /* NUMBER OF CSA FIXED FRAMES   @WA56739 */\n  unsigned char  r793lsq4\u00c44\u00dc; /* NUMBER OF FIXED LSQA FRAMES  @WA56739 */\n  unsigned char  r793nlf4\u00c44\u00dc; /* NUMBER OF PRIVATE NON LSQA   @WA56739 */\n  \u00fc;\n\n/* Values for field \"r793nlf4\" */\n#define r793rlen 0x66 /* LENGTH OF ONE RELOCATE BLOCK */\n#define r793flen 0    /* LENGTH OF ONE FIXED BLOCK    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R794": {"ttr": 8329, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r794 \u00e4\n  unsigned char  r794cmni\u00c44\u00dc; /* SYSTEM COMMON (LPA+CSA) PAGES IN      */\n  unsigned char  r794cmno\u00c44\u00dc; /* SYSTEM COMMON (CSA) PAGES OUT         */\n  unsigned char  r794cmnr\u00c44\u00dc; /* SYSTEM COMMON (LPA+CSA) PAGES         */\n  unsigned char  r794swpo\u00c44\u00dc; /* NUMBER OF SWAPS (OUT)            @P1C */\n  unsigned char  r794pspi\u00c44\u00dc; /* NUMBER OF PAGES SWAPPED IN            */\n  unsigned char  r794pspo\u00c44\u00dc; /* NUMBER OF PAGES SWAPPED OUT           */\n  unsigned char  r794prvi\u00c44\u00dc; /* NUMBER OF PRIVATE PAGES               */\n  unsigned char  r794prvo\u00c44\u00dc; /* NUMBER OF PRIVATE PAGES               */\n  unsigned char  r794prvr\u00c44\u00dc; /* NUMBER OF PRIVATE PAGES               */\n  unsigned char  r794vio\u00c44\u00dc;  /* NUMBER OF VIO PAGES (IN+OUT)          */\n  unsigned char  r794rsv1\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  r794cri\u00c42\u00dc;  /* Current System UIC                    */\n  unsigned char  r794acri\u00c42\u00dc; /* AVERAGE OF HIGH UIC COUNT             */\n  unsigned char  r794rv1\u00c42\u00dc;  /* RESERVED                              */\n  unsigned char  r794lpai\u00c44\u00dc; /* SYSTEM LPA PAGES IN          @G537NLS */\n  unsigned char  r794csai\u00c44\u00dc; /* SYSTEM CSA PAGES OUT         @G537NLS */\n  unsigned char  r794lpar\u00c44\u00dc; /* SYSTEM LPA PAGES RECLAIMED   @G537NLS */\n  unsigned char  r794csar\u00c44\u00dc; /* SYSTEM CSA PAGES RECLAIMED   @G537NLS */\n  unsigned char  r794rsv2\u00c42\u00dc; /* Reserved since 4.1.0             @W5C */\n  unsigned char  _filler1\u00c42\u00dc; /* UNUSED (Was Migation age)        @Q2C */\n  unsigned char  r794erte\u00c44\u00dc; /* NO. PAGES TO EXT. STORAGE        @P2A */\n  unsigned char  r794eval\u00c44\u00dc; /* NO. OF EXTENDED STORAGE SLOTS         */\n  unsigned char  r794essl\u00c44\u00dc; /* AVAILABLE FOR FUTURE USE         @P2A */\n  unsigned char  r794mrte\u00c44\u00dc; /* NO. OF PAGES MIGRATED FROM            */\n  unsigned char  r794mage\u00c44\u00dc; /* Migration age                    @Q2M */\n  unsigned char  r794afc\u00c44\u00dc;  /* NUMBER AVAILABLE FRAMES          @W5A */\n  unsigned char  r794twss\u00c44\u00dc; /* TARGET WORKING SETSIZE FOR THE COMMON */\n  unsigned char  r794hsp\u00c44\u00dc;  /* Number of hiperspace pages            */\n  unsigned char  r794ppia\u00c44\u00dc; /* Number of blocked pages paged in      */\n  unsigned char  r794lpia\u00c44\u00dc; /* Number of blocks paged in from        */\n  \u00fc;\n\n/* Values for field \"r794lpia\" */\n#define r794rlen 0x6C /* LENGTH OF ONE RELOCATE BLOCK */\n#define r794flen 0    /* LENGTH OF ONE FIXED BLOCK    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R795ELEM": {"ttr": 8177, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r795elem \u00e4\n  unsigned char  r795asid\u00c42\u00dc; /* ADDRESS SPACE IDENTIFIER              */\n  unsigned char  r795jbn\u00c48\u00dc;  /* NAME OF JOB                           */\n  unsigned char  r795dmn\u00c42\u00dc;  /* DOMAIN NAME                           */\n  unsigned char  r795npg\u00c42\u00dc;  /* PERFORMANCE GROUP                     */\n  unsigned char  r795pgp\u00c42\u00dc;  /* PERFORMANCE GROUP PERIOD              */\n  unsigned char  r795ttod\u00c44\u00dc; /* REAL TIME INTO TRANSACTION            */\n  unsigned char  r795cl\u00c42\u00dc;   /* CURRENT LOCATION                      */\n  unsigned char  r795tas\u00c42\u00dc;  /* TYPE OF USER                          */\n  unsigned char  r795trod\u00c44\u00dc; /* TRANSACTION RESIDENT TIME             */\n  unsigned char  r795tcnt\u00c42\u00dc; /* TRANSACTION COUNT                     */\n  unsigned char  r795swc\u00c42\u00dc;  /* TRANSACTION SWAP COUNT                */\n  unsigned char  r795cpus\u00c44\u00dc; /* TOTAL PROCESSOR  SERVICE FOR          */\n  unsigned char  r795msos\u00c44\u00dc; /* TOTAL MSO SERVICE FOR                 */\n  unsigned char  r795iocs\u00c44\u00dc; /* TOTAL IOC SERVICE FOR                 */\n  unsigned char  r795wms\u00c44\u00dc;  /* TOTAL SERVICE FOR                     */\n  unsigned char  r795totl\u00c44\u00dc; /* TOTAL SERVIC FOR SESSION              */\n  unsigned char  r795tot\u00c44\u00dc;  /* TOTAL SERVICE FOR TRANSACTION         */\n  unsigned char  r795srbs\u00c44\u00dc; /* TOTAL SRB SERVICE FOR                 */\n  unsigned char  r795flg;     /* Flags                            @C1A */\n  unsigned char  r795scl\u00c48\u00dc;  /* Service class name               @C1A */\n  unsigned char  r795scp\u00c42\u00dc;  /* Service class period             @C1A */\n  unsigned char  r795wkld\u00c48\u00dc; /* Workload name                    @C1A */\n  unsigned char  r795rgrp\u00c48\u00dc; /* Resource group name              @C1A */\n  \u00fc;\n\n/* Values for field \"r795flg\" */\n#define r795rsv1 0xE0 /* Reserved                         @C1A */\n#define r795goal 0x10 /* On = system is in GOAL mode      @C1A */\n#define r795srv  0x08 /* On = this address space is a          */\n#define r795qsc  0x04 /* On = address space has been           */\n\n/* Values for field \"r795rgrp\" */\n#define r795rlen 0x57 /* LENGTH OF ONE RELOCATE BLOCK          */\n#define r795flen 0    /* LENGTH OF ONE FIXED BLOCK             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R796ELEM": {"ttr": 8203, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r796elem \u00e4\n  unsigned char  r796asid\u00c42\u00dc; /* ADDRESS SPACE ID OF THE JOB WHICH@L8A */\n  unsigned char  r796maj\u00c48\u00dc;  /* MAJOR NAME OF THE RESOURCE       @L8A */\n  unsigned char  r796min\u00c444\u00dc; /* MINOR NAME OF THE RESOURCE       @L8A */\n  unsigned char  r796jbn\u00c48\u00dc;  /* NAME OF THE JOB IN WHICH THE     @L8A */\n  unsigned char  r796vols\u00c46\u00dc; /* VOLUME SERIAL OF THE VOLUME      @L8A */\n  unsigned char  r796ucb\u00c43\u00dc;  /* THE 3 DIGIT DEV NUMBER AGAINST   @C2C */\n  unsigned char  r796req\u00c42\u00dc;  /* TYPE AND STATUS OF REQUEST FOR   @L8A */\n  unsigned char  r796minl\u00c42\u00dc; /* MINOR NAME LENGTH FOR REPORTING  @L8A */\n  unsigned char  r796flg;     /* DATA TYPE FLAGS                  @L8A */\n  unsigned char  r796sid\u00c48\u00dc;  /* SYSTEM ID OF THE JOB BY WHICH         */\n  unsigned char  r796dvn\u00c42\u00dc;  /* DEV NUMBER (BIN) FROM UCBCHAN    @C2A */\n  \u00fc;\n\n/* Values for field \"r796flg\" */\n#define r796resv 0x80 /* 1... .... ON=DEVICE RESERVED BY       */\n#define r796trun 0x40 /* .1.. .... ON=MINOR NAME TRUNCATED     */\n#define r796glbl 0x20 /* ..1. .... ON=GLOBAL RESOURCE     @LCA */\n#define r796resc 0x10 /* ...1 .... ON=RES REQU CONV TO         */\n\n/* Values for field \"r796dvn\" */\n#define r796rlen 0x56 /* LENGTH OF ONE RELOCATE BLOCK          */\n#define r796flen 0    /* LENGTH OF ONE FIXED BLOCK             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R797ELEM": {"ttr": 7915, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r797elem \u00e4\n  unsigned char  r797maj\u00c48\u00dc;  /* MAJOR NAME OF THE RESOURCE       @L8A */\n  unsigned char  r797min\u00c444\u00dc; /* MINOR NAME OF THE RESOURCE       @L8A */\n  unsigned char  r797flg;     /* DATA TYPE FLAGS                  @L8A */\n  unsigned char  r797minl\u00c44\u00dc; /* MINOR NAME LENGTH FOR REPORTING       */\n  unsigned char  r797own\u00c42\u00dc;  /* COUNT OF REQUESTS OWNING RESOURCE     */\n  unsigned char  r797excw\u00c42\u00dc; /* COUNT EXCL REQS WAITING FOR RESOURCE  */\n  unsigned char  r797shrw\u00c42\u00dc; /* COUNT SHR REQS WAITING FOR RESOURCE   */\n  unsigned char  r797req\u00c42\u00dc;  /* TYPE AND STATUS OF REQUEST       @L8A */\n  unsigned char  r797jbn\u00c48\u00dc;  /* NAME OF JOB WHICH ISSUED THE ENQ @L8A */\n  unsigned char  r797asid\u00c42\u00dc; /* ADDRESS SPACE ID OF THE JOB WHICH     */\n  unsigned char  r797scop\u00c44\u00dc; /* SCOPE OF THE RESOURCE                 */\n  unsigned char  r797res\u00c42\u00dc;  /* RESERVED                         @L8A */\n  unsigned char  r797sid\u00c48\u00dc;  /* SYSTEM ID OF JOB THAT ISSUED ENQ      */\n  unsigned char  _filler1\u00c43\u00dc; /* RESERVED FOR ALIGNMENT                */\n  \u00fc;\n\n/* Values for field \"r797flg\" */\n#define r797gdet 0x80 /* 1... .... ON=DETAIL DATA, OFF=SUMMARY */\n#define r797gmaj 0x40 /* .1.. .... ON= MAJOR NAME IS           */\n#define r797gmin 0x20 /* ..1. .... ON= MINOR NAME IS           */\n#define r797trnc 0x10 /* ...1 .... ON=MINOR NAME               */\n#define r797glbl 0x08 /* .... 1... ON=GLOBAL RESOURCE     @LCA */\n#define r797alls 0x04 /* .... .1.. ON=RESOURCES IS HELD BY SYS */\n#define r797alle 0x02 /* .... ..1. ON=ALL EXL OWNED HELD       */\n\n/* Values for field \"_filler1\" */\n#define r797rlen 0x5C /* LENGTH OF ONE RELOCATE BLOCK          */\n#define r797flen 0    /* LENGTH OF ONE FIXED BLOCK             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R798ELEM": {"ttr": 8501, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r798elem \u00e4\n  unsigned char  r798icsi\u00c42\u00dc; /* ICS MEMBER NAME ID           @GM2EPDV */\n  unsigned char  r798ipsi\u00c42\u00dc; /* IPS MEMBER NAME ID           @GM2EPDV */\n  unsigned char  r798pgn\u00c42\u00dc;  /* PERFORMANCE GROUP NUMBER     @GM2EPDV */\n  unsigned char  r798pgp\u00c42\u00dc;  /* PERFORMANCE GROUP PERIOD     @GM2EPDV */\n  unsigned char  r798sys\u00c44\u00dc;  /* SUBSYSTEM NAME               @GM2EPDV */\n  unsigned char  r798ttx\u00c44\u00dc;  /* NUMBER OF ENDED TRANSACTIONS @GM2EPDV */\n  unsigned char  r798ttm\u00c44\u00dc;  /* ELAPSED TIME OF ENDED TRANS FOR PGP,  */\n  unsigned char  r798cls\u00c410\u00dc; /* TRANSACTION CLASS NAME       @GM2EPDV */\n  unsigned char  r798usr\u00c410\u00dc; /* USERID                       @GM2EPDV */\n  unsigned char  r798nam\u00c410\u00dc; /* TRANSACTION NAME             @GM2EPDV */\n  unsigned char  r798fl1;     /* DATA TYPE FLAGS              @GM2EPDV */\n  unsigned char  _filler1\u00c45\u00dc; /* RESERVED                         @C1C */\n  struct \u00e4\n    int            _r798tet1; /* R798TET - WORD 1                 @C1A */\n    int            _r798tet2; /* R798TET - WORD 2                 @C1A */\n    \u00fc r798tet;\n  \u00fc;\n\n#define r798tet1 r798tet._r798tet1\n#define r798tet2 r798tet._r798tet2\n\n/* Values for field \"r798fl1\" */\n#define r798rpt  0x80 /* 1... .... ON=RPT PGN,        @GM2EPDV */\n#define r798acn  0x40 /* .1.. .... ON=ACCTINFO USED       @R0A */\n\n/* Values for field \"r798tet2\" */\n#define r798rlen 0x40 /* LENGTH OF ONE RELOCATE BLOCK          */\n#define r798flen 0    /* LENGTH OF ONE FIXED BLOCK             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "R799ELEM": {"ttr": 8031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct r799elem \u00e4\n  unsigned char  r799num\u00c42\u00dc; /* DEVICE NUMBER IN THE RANGE X'0000' TO X'0FFF'   */\n  unsigned char  r799lcu\u00c42\u00dc; /* LOGICAL CONTROL UNIT GROUP NUMBER 0 TO 255      */\n  unsigned char  r799rv0;    /* RESERVED                                        */\n  unsigned char  r799cnf;    /* DEVICE FLAGS:                                   */\n  unsigned char  r799ser\u00c46\u00dc; /* VOLUME SERIAL NUMBER OF MOUNTED VOLUME          */\n  unsigned char  r799typ\u00c44\u00dc; /* UNIT TYPE                                       */\n  unsigned char  r799nux\u00c44\u00dc; /* Number of exposures (if multiple).              */\n  unsigned char  r799ssc\u00c44\u00dc; /* START SUBCHANNEL (SSCH) COUNT                   */\n  unsigned char  r799mec\u00c44\u00dc; /* MEASUREMENT EVENT COUNT (NUMBER OF SSCH         */\n  unsigned char  r799cnn\u00c44\u00dc; /* DEVICE CONNECT TIME                             */\n  unsigned char  r799pen\u00c44\u00dc; /* FUNCTION PENDING TIME                           */\n  unsigned char  r799atv\u00c44\u00dc; /* FUNCTION ACTIVE TIME                            */\n  unsigned char  r799dis\u00c44\u00dc; /* DEVICE DISCONNECT TIME                          */\n  unsigned char  r799que\u00c44\u00dc; /* NUMBER OF REQUESTS QUEUED IN IOS FOR            */\n  unsigned char  r799utl\u00c44\u00dc; /* NUMBER OF SAMPLES WHEN THE DEVICE WAS           */\n  unsigned char  r799rsv\u00c44\u00dc; /* NUMBER OF SAMPLES DURING THE MEASUREMENT        */\n  unsigned char  r799dso\u00c44\u00dc; /* reserved - do not use - variable name is        */\n  unsigned char  r799alc\u00c44\u00dc; /* NUMBER OF SAMPLES DURING THE MEASUREMENT        */\n  unsigned char  r799dvb\u00c44\u00dc; /* device busy delay time                     @Z1C */\n  unsigned char  r799cub\u00c44\u00dc; /* No longer used                             @K1C */\n  unsigned char  r799ict\u00c42\u00dc; /* invalid sample count                       @Z1C */\n  unsigned char  r799cnx;    /* Device flag extensions                     @G2A */\n  unsigned char  r799res;    /* reserved                                   @G2C */\n  unsigned char  r799sgn\u00c48\u00dc; /* Storage Group Name                         @U1A */\n  unsigned char  r799nda\u00c44\u00dc; /* Total number of allocations in effect for the   */\n  unsigned char  r799dpb\u00c44\u00dc; /* No longer used                             @K1C */\n  unsigned char  r799cmr\u00c44\u00dc; /* Command response time in units of          @K1C */\n  unsigned char  r799pct\u00c44\u00dc; /* Number of unsuccessful PAV samples     @WA31701 */\n  unsigned char  r799psm\u00c44\u00dc; /* Number of successful PAV samples           @01A */\n  \u00fc;\n\n/* Values for field \"r799cnf\" */\n#define r799qul  0x80 /* 1... ....   ON= IOS Q-LENGTH INVALID            */\n#define r799lcd  0x40 /* .1.. ....   ON= NO LCU INFORMATION              */\n#define r799cmb  0x20 /* ..1. ....   ON= CMB DATA INVALID                */\n#define r799dtf  0x10 /* ...1 ....   ON= DEVICE CONNECT OR PENDING OR    */\n#define r799mxb  0x04 /* .... .1..   ON= DEVICE IS MULTIPLE EXPOSURE     */\n#define r799vac  0x02 /* .... ..1.   ON= DATA RECORDED IS INVALID        */\n#define r799sta  0x01 /* .... ...1   ON= DEVICE IS CURRENTLY ONLINE      */\n\n/* Values for field \"r799cnx\" */\n#define r799pav  0x80 /* 1... .... =1 If base exposure of a Parallel     */\n#define r799nxc  0x40 /* .1.. .... =1 If number of alias exposures       */\n#define r799ntf  0x20 /* ..1. .... =1 Timing facility not active    @I2A */\n#define r799ecm  0x10 /* ...1 .... =1 ECMB mode                     @K3A */\n#define r799sts  0x08 /* .... 1... =1 model dependent data not      @K1A */\n#define r799fcm  0x04 /* .... .1.. =1 Initial command response      @K1A */\n#define r799hpv  0x02 /* .... ..1. =1 HyperPAV base device          @01A */\n\n/* Values for field \"r799psm\" */\n#define r799rlen 0x68 /* LENGTH OF ONE RELOCATE BLOCK                    */\n#define r799flen 0    /* LENGTH OF ONE FIXED BLOCK                       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SAPIINFO": {"ttr": 8241, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct sapiinfo \u00e4\n  unsigned char  sapiinfo_sapi_info_compid\u00c44\u00dc;  /* component subsystem id */\n  unsigned char  sapiinfo_sapi_info_workid\u00c48\u00dc;  /* uow id                 */\n  unsigned char  sapiinfo_sapi_info_jobid\u00c48\u00dc;   /* jobid                  */\n  unsigned char  sapiinfo_sapi_info_jobname\u00c48\u00dc; /* jobname                */\n  unsigned char  sapiinfo_sapi_info_userid\u00c48\u00dc;  /* userid                 */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SAPISEL": {"ttr": 8495, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct sapisel \u00e4\n  unsigned char  sapisel_sapi_sel_held\u00c43\u00dc;      /* held     yes/no               */\n  unsigned char  sapisel_sapi_sel_noheld\u00c43\u00dc;    /* noheld   yes/no               */\n  unsigned char  sapisel_sapi_sel_class\u00c48\u00dc;     /* sysout class values           */\n  unsigned char  sapisel_sapi_sel_dest\u00c417\u00dc;     /* destination                   */\n  unsigned char  sapisel_sapi_sel_jobname\u00c48\u00dc;   /* jobname mask                  */\n  unsigned char  sapisel_sapi_sel_jobid\u00c48\u00dc;     /* jobid                         */\n  unsigned char  sapisel_sapi_sel_jobidl\u00c48\u00dc;    /* jobid low                     */\n  unsigned char  sapisel_sapi_sel_jobidh\u00c48\u00dc;    /* jobid high                    */\n  unsigned char  sapisel_sapi_sel_writer\u00c48\u00dc;    /* writer name                   */\n  unsigned char  sapisel_sapi_sel_forms\u00c48\u00dc;     /* forms                         */\n  unsigned char  sapisel_sapi_sel_flash\u00c48\u00dc;     /* flash id                      */\n  unsigned char  sapisel_sapi_sel_creator\u00c48\u00dc;   /* creator user                  */\n  unsigned char  sapisel_sapi_sel_prmode\u00c48\u00dc;    /* prmode                        */\n  unsigned char  sapisel_sapi_sel_ipaddr\u00c43\u00dc;    /* ipaddr yes/no                 */\n  unsigned char  sapisel_sapi_sel_nipaddr\u00c43\u00dc;   /* nipaddr yes/no                */\n  unsigned char  sapisel_sapi_sel_fcb\u00c48\u00dc;       /* fcb value                     */\n  unsigned char  sapisel_sapi_sel_ucs\u00c48\u00dc;       /* ucs value                     */\n  unsigned char  sapisel_sapi_sel_job\u00c43\u00dc;       /* job select yes/no             */\n  unsigned char  sapisel_sapi_sel_stc\u00c43\u00dc;       /* stc select yes/no             */\n  unsigned char  sapisel_sapi_sel_tsu\u00c43\u00dc;       /* tsu select yes/no             */\n  unsigned char  sapisel_sapi_sel_appc\u00c43\u00dc;      /* appc select yes/no            */\n  void          *sapisel_sapi_sel_age;          /* age                           */\n  void          *sapisel_sapi_sel_lines_min;    /* lines min                     */\n  void          *sapisel_sapi_sel_lines_max;    /* lines max                     */\n  void          *sapisel_sapi_sel_pages_min;    /* pages min                     */\n  void          *sapisel_sapi_sel_pages_max;    /* pages max                     */\n  unsigned char  sapisel_sapi_sel_prio\u00c43\u00dc;      /* priority yes/no               */\n  unsigned char  sapisel_sapi_sel_vols\u00c424\u00dc;     /* volumes                       */\n  unsigned char  sapisel_sapi_sel_ncpds\u00c43\u00dc;     /* ncpds yes/no                  */\n  unsigned char  sapisel_sapi_sel_orgn\u00c417\u00dc;     /* original node                 */\n  unsigned char  sapisel_sapi_sel_disp\u00c48\u00dc;      /* disp syshold/hold/release/del */\n  unsigned char  sapisel_sapi_sel_newclass;     /* new sysout class              */\n  unsigned char  sapisel_sapi_sel_newforms\u00c48\u00dc;  /* new forms                     */\n  unsigned char  sapisel_sapi_sel_newwriter\u00c48\u00dc; /* new writer                    */\n  unsigned char  sapisel_sapi_sel_newdest\u00c417\u00dc;  /* new destination               */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SDWA": {"ttr": 7969, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct sdwa \u00e4\n  void          *sdwaparm;    /* -     PARAMETER LIST ADDRESS IF (E)STAE MACRO    */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _sdwacmpf;    /* -     FLAG BITS IN COMPLETION CODE.            */\n      unsigned char  _sdwacmpc\u00c43\u00dc; /* -   SYSTEM COMPLETION CODE (FIRST 12 BITS) AND */\n      \u00fc sdwaabcc;\n    \u00fc sdwafiob;\n  struct \u00e4\n    unsigned char  _sdwacmka;      /* -     CHANNEL INTERRUPT MASKS.                  */\n    unsigned char  _sdwamwpa;      /* -     PSW KEY AND 'M-W-P'.                      */\n    unsigned char  _sdwainta\u00c42\u00dc;   /* -   INTERRUPT CODE (LAST 2 BYTES OF INTERRUPT   */\n    unsigned char  _sdwapmka;      /* -     INSTRUCTION LENGTH CODE, CONDITION CODE,  */\n    int            _sdwanxta : 24; /* -   ADDRESS OF NEXT INSTRUCTION TO BE EXECUTED. */\n    \u00fc sdwactl1;\n  struct \u00e4\n    unsigned char  _sdwacmkp;      /* -     CHANNEL INTERRUPT MASKS.                  */\n    unsigned char  _sdwamwpp;      /* -     PSW KEY AND 'M-W-P'.                      */\n    unsigned char  _sdwaintp\u00c42\u00dc;   /* -   INTERRUPT CODE (LAST 2 BYTES OF INTERRUPT   */\n    unsigned char  _sdwapmkp;      /* -     INSTRUCTION LENGTH CODE, CONDITION CODE,  */\n    int            _sdwanxtp : 24; /* -   ADDRESS OF NEXT INSTRUCTION TO BE EXECUTED. */\n    \u00fc sdwactl2;\n  struct \u00e4\n    int            _sdwagr00; /* -     GPR 0.  */\n    int            _sdwagr01; /* -     GPR 1.  */\n    int            _sdwagr02; /* -     GPR 2.  */\n    int            _sdwagr03; /* -     GPR 3.  */\n    int            _sdwagr04; /* -     GPR 4.  */\n    int            _sdwagr05; /* -     GPR 5.  */\n    int            _sdwagr06; /* -     GPR 6.  */\n    int            _sdwagr07; /* -     GPR 7.  */\n    int            _sdwagr08; /* -     GPR 8.  */\n    int            _sdwagr09; /* -     GPR 9.  */\n    int            _sdwagr10; /* -     GPR 10. */\n    int            _sdwagr11; /* -     GPR 11. */\n    int            _sdwagr12; /* -     GPR 12. */\n    int            _sdwagr13; /* -     GPR 13. */\n    int            _sdwagr14; /* -     GPR 14. */\n    int            _sdwagr15; /* -     GPR 15. */\n    \u00fc sdwagrsv;\n  struct \u00e4\n    void          *_sdwarbad;    /* -     RB ADDRESS OF ABENDING PROGRAM (IF SUPERVISOR */\n    unsigned char  _filler1\u00c44\u00dc;  /* -   CONTAINS ZEROS IF SUPERVISOR MODE PROGRAM       */\n    \u00fc sdwaname;\n  void          *sdwaepa;     /* -     ENTRY POINT ADDRESS OF ABENDING PROGRAM.   */\n  void          *sdwaiobr;    /* -     POINTER TO SDWAFIOB FIELD,                 */\n  struct \u00e4\n    unsigned char  _sdwaemk1; /* INTERRUPT INFORMATION MASKS     */\n    unsigned char  _sdwamwp1; /* PSW KEY AND 'M-W-P'             */\n    unsigned char  _sdwaint1; /* CONDITION CODE AND PROGRAM MASK */\n    unsigned char  _filler2;  /* RESERVED                        */\n    struct \u00e4\n      unsigned char  _sdwaamf1;    /* ADDRESSING MODE FLAG                    @G860P1S */\n      unsigned char  _sdwaadd1\u00c43\u00dc; /* INSTRUCTION ADDRESS                              */\n      \u00fc sdwanxt1;\n    \u00fc sdwaec1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler3;  /* RESERVED                                */\n      unsigned char  _sdwailc1; /* INSTRUCTION LENGTH CODE FOR PSW DEFINED */\n      struct \u00e4\n        unsigned char  _filler4;  /* RESERVED FOR IMPRECISE INTERRUPTS */\n        unsigned char  _sdwaicd1; /* 8 BIT INTERRUPT CODE              */\n        \u00fc sdwainc1;\n      void          *_sdwatran; /* VIRTUAL ADDRESS CAUSING TRANSLATION     */\n      \u00fc sdwaaec1;\n    struct \u00e4\n      unsigned char  _filler5\u00c47\u00dc;\n      unsigned char  _sdwadxc;     /* Data exception code when program interrupt */\n      \u00fc _sdwa_struct1;\n    \u00fc _sdwa_union1;\n  struct \u00e4\n    unsigned char  _sdwaemk2; /* INTERRUPT INFORMATION MASKS     */\n    unsigned char  _sdwamwp2; /* PSW KEY AND 'M-W-P'             */\n    unsigned char  _sdwaint2; /* CONDITION CODE AND PROGRAM MASK */\n    unsigned char  _filler6;  /* RESERVED                        */\n    struct \u00e4\n      unsigned char  _sdwaamf2;    /* ADDRESSING MODE FLAG                    @G860P1S */\n      unsigned char  _sdwaadd2\u00c43\u00dc; /* INSTRUCTION ADDRESS                              */\n      \u00fc sdwanxt2;\n    \u00fc sdwaec2;\n  struct \u00e4\n    unsigned char  _filler7;  /* RESERVED                                */\n    unsigned char  _sdwailc2; /* INSTRUCTION LENGTH CODE FOR PSW DEFINED */\n    struct \u00e4\n      unsigned char  _filler8;  /* RESERVED FOR IMPRECISE INTERRUPTS */\n      unsigned char  _sdwaicd2; /* 8 BIT INTERRUPT CODE              */\n      \u00fc sdwainc2;\n    void          *_sdwatrn2; /* VIRTUAL ADDRESS CAUSING TRANSLATION     */\n    \u00fc sdwaaec2;\n  struct \u00e4\n    int            _sdwasr00; /* GPR 0.  */\n    int            _sdwasr01; /* GPR 1.  */\n    int            _sdwasr02; /* GPR 2.  */\n    int            _sdwasr03; /* GPR 3.  */\n    int            _sdwasr04; /* GPR 4.  */\n    int            _sdwasr05; /* GPR 5.  */\n    int            _sdwasr06; /* GPR 6.  */\n    int            _sdwasr07; /* GPR 7.  */\n    int            _sdwasr08; /* GPR 8.  */\n    int            _sdwasr09; /* GPR 9.  */\n    int            _sdwasr10; /* GPR 10. */\n    int            _sdwasr11; /* GPR 11. */\n    int            _sdwasr12; /* GPR 12. */\n    int            _sdwasr13; /* GPR 13. */\n    int            _sdwasr14; /* GPR 14. */\n    int            _sdwasr15; /* GPR 15. */\n    \u00fc sdwasrsv;\n  struct \u00e4\n    unsigned char  _sdwaspid;    /* SUBPOOL ID OF STORAGE CONTAINING THIS SDWA */\n    unsigned char  _sdwalnth\u00c43\u00dc; /* LENGTH OF THIS SDWA IN BYTES               */\n    \u00fc sdwaidnt;\n  struct \u00e4\n    struct \u00e4\n      void          *_sdwasckb; /* BEGINNING VIRTUAL ADDRESS OF STORAGE CHECK */\n      void          *_sdwascke; /* ENDING VIRTUAL ADDRESS OF STORAGE CHECK    */\n      \u00fc sdwastck;\n    struct \u00e4\n      unsigned char  _sdwamchs; /* MCH FLAG BYTE                                    */\n      unsigned char  _sdwamchd; /* INPUT INFORMATION TO RECOVERY ROUTINE CONCERNING */\n      \u00fc sdwamchi;\n    unsigned char  _sdwacpid\u00c42\u00dc; /* ID OF OF FAILING CPU CAUSING ACR                 */\n    unsigned char  _sdwarsr1;    /* ADDITIONAL STORAGE FRAME ERROR INDICATORS        */\n    unsigned char  _sdwarsr2;    /* ADDITIONAL STORAGE ERROR INDICATORS.             */\n    unsigned char  _sdwamcho;    /* OTHER MACHINE CHECK FLAGS                   @04A */\n    unsigned char  _filler9;     /* RESERVED                                    @04C */\n    void          *_sdwarfsa;    /* REAL STORAGE FAILING ADDRESS  ( VALID ONLY IF    */\n    unsigned char  _sdwatime\u00c48\u00dc; /* TIME STAMP OF ASSOCIATED MACHINE CHECK RECORD    */\n    \u00fc sdwamch;\n  struct \u00e4\n    unsigned char  _sdwaerra; /* ERROR TYPE CAUSING ENTRY TO RECOVERY EXIT */\n    unsigned char  _sdwaerrb; /* ADDITIONAL ERROR ENTRY INFORMATION        */\n    unsigned char  _sdwaerrc; /* ADDITIONAL ERROR ENTRY INFORMATION        */\n    unsigned char  _sdwaerrd; /* ADDITIONAL ERROR ENTRY INFORMATION        */\n    \u00fc sdwaflgs;\n  unsigned char  sdwafmid\u00c42\u00dc; /* ASID OF MEMORY IN WHICH ERROR OCCURRED.          */\n  unsigned char  sdwaiofs;    /* THIS IS THE CURRENT I/O STATUS (THE I/O          */\n  unsigned char  sdwacpui;    /* ERRORID LOGICAL CPUID                  @G17EP5W  */\n  struct \u00e4\n    unsigned char  _sdwartyf;       /* ADDRESSING MODE INDICATOR BYTE          @G860P1S */\n    int            _filler10 : 24;  /* LOW THREE ORDER BYTES OF RETRY ADDRESS  @G860P1S */\n    \u00fc sdwartya;\n  void          *sdwareca;    /* ADDRESS OF VARIABLE RECORDING AREA WITHIN SDWA   */\n  struct \u00e4\n    unsigned char  _filler11\u00c42\u00dc;  /* RESERVED                                */\n    short int      _sdwalcpu;     /* LOGICAL ADDRESS OF CPU HOLDING RESOURCE */\n    \u00fc sdwacpua;\n  struct \u00e4\n    unsigned char  _sdwarcde; /* RETURN CODE FROM RECOVERY ROUTINE TO INDICATE   */\n    unsigned char  _sdwaacf2; /* FLAGS TO INDICATE ADDITIONAL PROCESSING         */\n    unsigned char  _sdwaacf3; /* FLAGS INDICATING SOME GLOBAL LOCKS TO BE FREED. */\n    unsigned char  _sdwaacf4; /* ADDITIONAL LOCKS TO BE FREED, OR ADDITIONAL     */\n    \u00fc sdwaparq;\n  struct \u00e4\n    struct \u00e4\n      void          *_sdwalrsd;  /* LOCKWORD FOR THE RSM DATA SPACE LOCK        @L6C */\n      void          *_sdwaiulw;  /* LOCKWORD FOR THE IOSUCB LOCK                     */\n      void          *_filler12;  /* LOCKWORD - RESERVED                         @P3C */\n      void          *_sdwaiplw;  /* LOCKWORD FOR THE IOSYNCH LOCK                    */\n      void          *_sdwaaplw;  /* LOCKWORD FOR THE ASM CLASS LOCK         Z40WPXH  */\n      void          *_filler13;  /* RESERVED                                   @L9C  */\n      void          *_filler14;  /* RESERVED                                   @L9C  */\n      void          *_sdwatalw;  /* LOCKWORD - RESERVED                     Z40WPXH  */\n      \u00fc sdwalkws;\n    \u00fc sdwalkwa;\n  unsigned char  sdwaasid\u00c42\u00dc; /* ASID FOR LOGREC DEBUGGING (HOME ASID)   @ZA05516 */\n  unsigned char  sdwaseq_\u00c42\u00dc; /* ERRORID SEQUENCE NUMBER                 @G17EP5W */\n  struct \u00e4\n    unsigned char  _sdwamodn\u00c48\u00dc; /* THE LOAD MODULE NAME INVOLVED IN THE ERROR  */\n    unsigned char  _sdwacsct\u00c48\u00dc; /* THE CSECT (MICROFICHE) NAME INVOLVED IN THE */\n    unsigned char  _sdwarexn\u00c48\u00dc; /* THE RECOVERY ROUTINE (MICROFICHE) NAME      */\n    \u00fc sdwarecp;\n  void          *sdwadpla;    /* POINTER TO DUMP PARAMETER LIST                   */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _sdwadpid;  /* ID OF DUMP REQUESTED                           */\n      unsigned char  _sdwadpfs;  /* DUMP FLAGS                                     */\n      unsigned char  _sdwadpf2;  /* DUMP FLAGS 2                          @G382P2F */\n      unsigned char  _filler15;  /* RESERVED                                       */\n      \u00fc sdwadump;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _sdwasda0; /* SDATA OPTIONS FLAG ONE                 @G33SPHW */\n        unsigned char  _sdwasda1; /* SDATA OPTIONS                         @G33SPHW  */\n        \u00fc sdwasdat;\n      unsigned char  _sdwapdat;  /* PDATA OPTIONS */\n      unsigned char  _filler16;  /* RESERVED      */\n      \u00fc sdwaddat;\n    \u00fc sdwasnpa;\n  struct \u00e4\n    struct \u00e4\n      void          *_sdwafrm1; /* BEGINNING ADDRESS FOR STORAGE RANGE 1 */\n      void          *_sdwato1;  /* ENDING ADDRESS FOR STORAGE RANGE 1    */\n      void          *_sdwafrm2; /* BEGINNING ADDRESS FOR STORAGE RANGE2  */\n      void          *_sdwato2;  /* ENDING ADDRESS FOR STORAGE RANGE 2    */\n      void          *_sdwafrm3; /* BEGINNING ADDRESS FOR STORAGE RANGE 3 */\n      void          *_sdwato3;  /* ENDING ADDRESS FOR STORAGE RANGE 3    */\n      void          *_sdwafrm4; /* BEGINNING ADDRESS FOR STORAGE RANGE 4 */\n      void          *_sdwato4;  /* ENDING ADDRESS FOR STORAGE RANGE 4    */\n      \u00fc sdwadpsl;\n    void          *_filler17;  /* RESERVED */\n    \u00fc sdwadpsa;\n  struct \u00e4\n    unsigned char  _sdwaverf\u00c42\u00dc; /* FFFF INDICATES VID FIELD IS VALID       @G38FP2F */\n    unsigned char  _sdwavid\u00c42\u00dc;  /* VERSION INDICATOR, EXPLAINED AS FOLLOWS:    @L1A */\n    \u00fc sdwaveri;\n  void          *sdwaxpad;    /* ADDR OF THE EXTENSION POINTERS (SDWAPTRS)   @L1C */\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _sdwakm\u00c42\u00dc;   /* KEY MASK                                @G381P2F */\n        unsigned char  _sdwascnd\u00c42\u00dc; /* ASID OF THE SECONDARY ADDR SPACE -SASID @G381P2F */\n        \u00fc sdwacr3;\n      struct \u00e4\n        unsigned char  _sdwaax\u00c42\u00dc;   /* AUTHORIZATION INDEX                     @G381P2F */\n        unsigned char  _sdwaprim\u00c42\u00dc; /* ASID OF THE PRIMARY ADDR SPACE -PASID   @G381P2F */\n        \u00fc sdwacr4;\n      \u00fc sdwacrgs;\n    void          *_sdwacmla; /* ADDRESS OF ASCB OF CML TO BE FREED      @G381P2F */\n    \u00fc sdwaxm;\n  unsigned char  sdwacomu\u00c48\u00dc; /* FRR TO ESTAE COMMUNICATION BUFFER       @G382P2F */\n  void          *sdwacomp;    /* THIS WORD IS PROVIDED FOR COMMUNICATION OF       */\n  unsigned char  sdwaertm\u00c44\u00dc; /* ERRORID TIME STAMP                     @G17EP5W  */\n  struct \u00e4\n    unsigned char  _sdwavral\u00c42\u00dc;  /* LENGTH OF VARIABLE RECORDING AREA                */\n    unsigned char  _sdwadpva;     /* BITS THAT DEFINE DATA IN VARIABLE AREA           */\n    unsigned char  _sdwaural;     /* LENGTH OF USER SUPPLIED INFORMATION IN           */\n    unsigned char  _sdwavra\u00c4255\u00dc; /* VARIABLE RECORDING AREA                 @G388P2F */\n    unsigned char  _sdwaid\u00c45\u00dc;    /* CONTAINS 'SDWA ' AS ID                  @G860P1F */\n    \u00fc sdwara;\n  double         sdwaend;     /* END OF NON-EXTENDED SDWA                @G381P2F */\n  \u00fc;\n\n#define sdwacmpf  sdwafiob.sdwaabcc._sdwacmpf\n#define sdwacmpc  sdwafiob.sdwaabcc._sdwacmpc\n#define sdwacmka  sdwactl1._sdwacmka\n#define sdwamwpa  sdwactl1._sdwamwpa\n#define sdwainta  sdwactl1._sdwainta\n#define sdwapmka  sdwactl1._sdwapmka\n#define sdwanxta  sdwactl1._sdwanxta\n#define sdwacmkp  sdwactl2._sdwacmkp\n#define sdwamwpp  sdwactl2._sdwamwpp\n#define sdwaintp  sdwactl2._sdwaintp\n#define sdwapmkp  sdwactl2._sdwapmkp\n#define sdwanxtp  sdwactl2._sdwanxtp\n#define sdwagr00  sdwagrsv._sdwagr00\n#define sdwagr01  sdwagrsv._sdwagr01\n#define sdwagr02  sdwagrsv._sdwagr02\n#define sdwagr03  sdwagrsv._sdwagr03\n#define sdwagr04  sdwagrsv._sdwagr04\n#define sdwagr05  sdwagrsv._sdwagr05\n#define sdwagr06  sdwagrsv._sdwagr06\n#define sdwagr07  sdwagrsv._sdwagr07\n#define sdwagr08  sdwagrsv._sdwagr08\n#define sdwagr09  sdwagrsv._sdwagr09\n#define sdwagr10  sdwagrsv._sdwagr10\n#define sdwagr11  sdwagrsv._sdwagr11\n#define sdwagr12  sdwagrsv._sdwagr12\n#define sdwagr13  sdwagrsv._sdwagr13\n#define sdwagr14  sdwagrsv._sdwagr14\n#define sdwagr15  sdwagrsv._sdwagr15\n#define sdwarbad  sdwaname._sdwarbad\n#define sdwaemk1  sdwaec1._sdwaemk1\n#define sdwamwp1  sdwaec1._sdwamwp1\n#define sdwaint1  sdwaec1._sdwaint1\n#define sdwaamf1  sdwaec1.sdwanxt1._sdwaamf1\n#define sdwaadd1  sdwaec1.sdwanxt1._sdwaadd1\n#define sdwailc1  _sdwa_union1.sdwaaec1._sdwailc1\n#define sdwaicd1  _sdwa_union1.sdwaaec1.sdwainc1._sdwaicd1\n#define sdwatran  _sdwa_union1.sdwaaec1._sdwatran\n#define sdwadxc   _sdwa_union1._sdwa_struct1._sdwadxc\n#define sdwaemk2  sdwaec2._sdwaemk2\n#define sdwamwp2  sdwaec2._sdwamwp2\n#define sdwaint2  sdwaec2._sdwaint2\n#define sdwaamf2  sdwaec2.sdwanxt2._sdwaamf2\n#define sdwaadd2  sdwaec2.sdwanxt2._sdwaadd2\n#define sdwailc2  sdwaaec2._sdwailc2\n#define sdwaicd2  sdwaaec2.sdwainc2._sdwaicd2\n#define sdwatrn2  sdwaaec2._sdwatrn2\n#define sdwasr00  sdwasrsv._sdwasr00\n#define sdwasr01  sdwasrsv._sdwasr01\n#define sdwasr02  sdwasrsv._sdwasr02\n#define sdwasr03  sdwasrsv._sdwasr03\n#define sdwasr04  sdwasrsv._sdwasr04\n#define sdwasr05  sdwasrsv._sdwasr05\n#define sdwasr06  sdwasrsv._sdwasr06\n#define sdwasr07  sdwasrsv._sdwasr07\n#define sdwasr08  sdwasrsv._sdwasr08\n#define sdwasr09  sdwasrsv._sdwasr09\n#define sdwasr10  sdwasrsv._sdwasr10\n#define sdwasr11  sdwasrsv._sdwasr11\n#define sdwasr12  sdwasrsv._sdwasr12\n#define sdwasr13  sdwasrsv._sdwasr13\n#define sdwasr14  sdwasrsv._sdwasr14\n#define sdwasr15  sdwasrsv._sdwasr15\n#define sdwaspid  sdwaidnt._sdwaspid\n#define sdwalnth  sdwaidnt._sdwalnth\n#define sdwasckb  sdwamch.sdwastck._sdwasckb\n#define sdwascke  sdwamch.sdwastck._sdwascke\n#define sdwamchs  sdwamch.sdwamchi._sdwamchs\n#define sdwamchd  sdwamch.sdwamchi._sdwamchd\n#define sdwacpid  sdwamch._sdwacpid\n#define sdwarsr1  sdwamch._sdwarsr1\n#define sdwarsr2  sdwamch._sdwarsr2\n#define sdwamcho  sdwamch._sdwamcho\n#define sdwarfsa  sdwamch._sdwarfsa\n#define sdwatime  sdwamch._sdwatime\n#define sdwaerra  sdwaflgs._sdwaerra\n#define sdwaerrb  sdwaflgs._sdwaerrb\n#define sdwaerrc  sdwaflgs._sdwaerrc\n#define sdwaerrd  sdwaflgs._sdwaerrd\n#define sdwartyf  sdwartya._sdwartyf\n#define sdwalcpu  sdwacpua._sdwalcpu\n#define sdwarcde  sdwaparq._sdwarcde\n#define sdwaacf2  sdwaparq._sdwaacf2\n#define sdwaacf3  sdwaparq._sdwaacf3\n#define sdwaacf4  sdwaparq._sdwaacf4\n#define sdwalrsd  sdwalkwa.sdwalkws._sdwalrsd\n#define sdwaiulw  sdwalkwa.sdwalkws._sdwaiulw\n#define sdwaiplw  sdwalkwa.sdwalkws._sdwaiplw\n#define sdwaaplw  sdwalkwa.sdwalkws._sdwaaplw\n#define sdwatalw  sdwalkwa.sdwalkws._sdwatalw\n#define sdwamodn  sdwarecp._sdwamodn\n#define sdwacsct  sdwarecp._sdwacsct\n#define sdwarexn  sdwarecp._sdwarexn\n#define sdwadpid  sdwasnpa.sdwadump._sdwadpid\n#define sdwadpfs  sdwasnpa.sdwadump._sdwadpfs\n#define sdwadpf2  sdwasnpa.sdwadump._sdwadpf2\n#define sdwasda0  sdwasnpa.sdwaddat.sdwasdat._sdwasda0\n#define sdwasda1  sdwasnpa.sdwaddat.sdwasdat._sdwasda1\n#define sdwapdat  sdwasnpa.sdwaddat._sdwapdat\n#define sdwafrm1  sdwadpsa.sdwadpsl._sdwafrm1\n#define sdwato1   sdwadpsa.sdwadpsl._sdwato1\n#define sdwafrm2  sdwadpsa.sdwadpsl._sdwafrm2\n#define sdwato2   sdwadpsa.sdwadpsl._sdwato2\n#define sdwafrm3  sdwadpsa.sdwadpsl._sdwafrm3\n#define sdwato3   sdwadpsa.sdwadpsl._sdwato3\n#define sdwafrm4  sdwadpsa.sdwadpsl._sdwafrm4\n#define sdwato4   sdwadpsa.sdwadpsl._sdwato4\n#define sdwaverf  sdwaveri._sdwaverf\n#define sdwavid   sdwaveri._sdwavid\n#define sdwakm    sdwaxm.sdwacrgs.sdwacr3._sdwakm\n#define sdwascnd  sdwaxm.sdwacrgs.sdwacr3._sdwascnd\n#define sdwaax    sdwaxm.sdwacrgs.sdwacr4._sdwaax\n#define sdwaprim  sdwaxm.sdwacrgs.sdwacr4._sdwaprim\n#define sdwacmla  sdwaxm._sdwacmla\n#define sdwavral  sdwara._sdwavral\n#define sdwadpva  sdwara._sdwadpva\n#define sdwaural  sdwara._sdwaural\n#define sdwavra   sdwara._sdwavra\n#define sdwaid    sdwara._sdwaid\n\n/* Values for field \"sdwacmpf\" */\n#define sdwareq  0x80 /* - ON, SYSABEND/SYSMDUMP/SYSUDUMP DUMP TO BE        */\n#define sdwastep 0x40 /* - ON, JOBSTEP TO BE TERMINATED.                    */\n#define sdwastcc 0x10 /* - ON, DON'T STORE COMPLETION CODE.                 */\n#define sdwarcf  0x04 /* - ON, REASON CODE IN SDWACRC IS VALID         @PBC */\n\n/* Values for field \"sdwacmka\" */\n#define sdwaioa  0xFE /* - I/O INTERRUPTS (ALL ZEROS OR ALL ONES).          */\n#define sdwaexta 0x01 /* - EXTERNAL INTERRUPT.                              */\n\n/* Values for field \"sdwamwpa\" */\n#define sdwakeya 0xF0 /* - PSW KEY.                                         */\n#define sdwamcka 0x04 /* - MACHINE CHECK INTERRUPT.                         */\n#define sdwawata 0x02 /* - WAIT STATE.                                      */\n#define sdwaspva 0x01 /* - SUPERVISOR/PROBLEM-PROGRAM MODE.                 */\n\n/* Values for field \"sdwapmka\" */\n#define sdwaila  0xC0 /* - INSTRUCTION LENGTH CODE.                         */\n#define sdwacca  0x30 /* - LAST CONDITION CODE.                             */\n#define sdwafpa  0x08 /* - FIXED-POINT OVERFLOW.                            */\n#define sdwadoa  0x04 /* - DECIMAL OVERFLOW.                                */\n#define sdwaeua  0x02 /* - EXPONENT UNDERFLOW.                              */\n#define sdwasga  0x01 /* - SIGNIFICANCE.                                    */\n\n/* Values for field \"sdwacmkp\" */\n#define sdwaiop  0xFE /* - I/O INTERRUPTS (ALL ZEROS OR ALL ONES).          */\n#define sdwaextp 0x01 /* - EXTERNAL INTERRUPT.                              */\n\n/* Values for field \"sdwamwpp\" */\n#define sdwakeyp 0xF0 /* - PSW KEY.                                         */\n#define sdwamckp 0x04 /* - MACHINE CHECK INTERRUPT.                         */\n#define sdwawatp 0x02 /* - WAIT STATE.                                      */\n#define sdwaspvp 0x01 /* - SUPERVISOR/PROBLEM-PROGRAM MODE.                 */\n\n/* Values for field \"sdwapmkp\" */\n#define sdwailp  0xC0 /* - INSTRUCTION LENGTH CODE.                         */\n#define sdwaccp  0x30 /* - LAST CONDITION CODE.                             */\n#define sdwafpp  0x08 /* - FIXED-POINT OVERFLOW.                            */\n#define sdwadop  0x04 /* - DECIMAL OVERFLOW.                                */\n#define sdwaeup  0x02 /* - EXPONENT UNDERFLOW.                              */\n#define sdwasgp  0x01 /* - SIGNIFICANCE.                                    */\n\n/* Values for field \"sdwaemk1\" */\n#define sdwaper1 0x40 /* ON,PROGRAM EVENT RECORDING                         */\n#define sdwatrm1 0x04 /* ON,ADDRESS TRANSLATION ACTIVE                      */\n#define sdwaio1  0x02 /* OFF,I/0 INTERRUPTION CAN NOT OCCUR                 */\n#define sdwaext1 0x01 /* OFF,EXTERNAL INTERRUPTION CANNOT OCCUR             */\n\n/* Values for field \"sdwamwp1\" */\n#define sdwakey1 0xF0 /* PSW KEY                                            */\n#define sdwaect1 0x08 /* EXTENDED CONTROL MODE BIT                          */\n#define sdwamck1 0x04 /* OFF,MACHINE CHECK CANNOT OCCUR                     */\n#define sdwawat1 0x02 /* ON,CPU IN WAIT STATE                               */\n#define sdwapgm1 0x01 /* ON,PROBLEM STATE                                   */\n\n/* Values for field \"sdwaint1\" */\n#define sdwaascm 0xC0 /* ADDRESS SPACE CONTROL MODE BITS                    */\n#define sdwas1   0x80 /* ADDRESS SPACE SELECTION BIT             @G381P2F   */\n#define sdwacc1  0x30 /* CONDITION CODE                                     */\n#define sdwafpo1 0x08 /* FIXED POINT OVERFLOW                               */\n#define sdwadec1 0x04 /* DECIMAL OVERFLOW                                   */\n#define sdwaexp1 0x02 /* EXPONENT UNDERFLOW                                 */\n#define sdwasgn1 0x01 /* SIGNIFICANCE                                       */\n\n/* Values for field \"sdwaamf1\" */\n#define sdwamod1 0x80 /* ADDRESSING MODE OF THE NEXT INSTRUCTION @G860P1S   */\n\n/* Values for field \"sdwailc1\" */\n#define sdwail1  0x06 /* ILC                                                */\n\n/* Values for field \"sdwaicd1\" */\n#define sdwaipr1 0x80 /* PER INTERRUPT OCCURRED                             */\n#define sdwaimc1 0x40 /* MONITOR CALL INTERRUPT OCCURRED                    */\n#define sdwaipc1 0x3F /* AN UNSOLICITED PROGRAM CHECK                       */\n\n/* Values for field \"sdwaemk2\" */\n#define sdwaper2 0x40 /* ON,PROGRAM EVENT RECORDING                         */\n#define sdwatrm2 0x04 /* ON,ADDRESS TRANSLATION ACTIVE                      */\n#define sdwaio2  0x02 /* OFF,I/0 INTERRUPTION CANNOT OCCUR                  */\n#define sdwaext2 0x01 /* OFF,EXTERNAL INTERRUPTION CANNOT OCCUR             */\n\n/* Values for field \"sdwamwp2\" */\n#define sdwakey2 0xF0 /* PSW KEY                                            */\n#define sdwaect2 0x08 /* EXTENDED CONTROL MODE BIT                          */\n#define sdwamck2 0x04 /* OFF,MACHINE CHECK CANNOT OCCUR                     */\n#define sdwawat2 0x02 /* ON,CPU IN WAIT STATE                               */\n#define sdwapgm2 0x01 /* ON,PROBLEM STATE                                   */\n\n/* Values for field \"sdwaint2\" */\n#define sdwas2   0x80 /* ADDRESS SPACE SELECTION BIT             @G381P2F   */\n#define sdwacc2  0x30 /* CONDITION CODE                                     */\n#define sdwafpo2 0x08 /* FIXED POINT OVERFLOW                               */\n#define sdwadec2 0x04 /* DECIMAL OVERFLOW                                   */\n#define sdwaexp2 0x02 /* EXPONENT UNDERFLOW                                 */\n#define sdwasgn2 0x01 /* SIGNIFICANCE                                       */\n\n/* Values for field \"sdwaamf2\" */\n#define sdwamod2 0x80 /* ADDRESSING MODE OF THE NEXT INSTRUCTION @G860P1S   */\n\n/* Values for field \"sdwailc2\" */\n#define sdwail2  0x06 /* ILC                                                */\n\n/* Values for field \"sdwaicd2\" */\n#define sdwaipr2 0x80 /* PER INTERRUPT OCCURRED                             */\n#define sdwaimc2 0x40 /* MONITOR CALL INTERRRUPT OCCURRED                   */\n#define sdwaipc2 0x3F /* AN UNSOLICITED PROGRAM CHECK                       */\n\n/* Values for field \"sdwamchs\" */\n#define sdwasrvl 0x80 /* ON,STORAGE ADDRESSES SUPPLIED                      */\n#define sdwarcdf 0x40 /* ON,MACHINE CHECK RECORD NOT RECORDED               */\n#define sdwatsvl 0x20 /* ON,TIME STAMP IS VALID                             */\n#define sdwainvp 0x10 /* ON,STORAGE IS RECONFIGURED, PAGE IS INVALIDATED    */\n#define sdwarsrc 0x08 /* ON,STORAGE RECONFIGURATION (SDWARSR1,SDWARSR2)     */\n#define sdwarsrf 0x04 /* ON,STORAGE RECONFIGURATION NOT ATTEMPTED.          */\n#define sdwavriv 0x02 /* ON, INDICATES VECTOR REGISTERS ARE UNPREDICTABLE   */\n#define sdwaargu 0x01 /* ON, INDICATES ACCESS REGISTERS ARE UNPREDICTABLE   */\n\n/* Values for field \"sdwamchd\" */\n#define sdwaskyf 0x80 /* ON,STORAGE KEY FAILURE                             */\n#define sdwaregu 0x40 /* ON,GENERAL PURPOSE REGISTER CONTENTS AT TIME OF    */\n#define sdwapswu 0x20 /* ON,PSW AND/OR CONTROL REGISTERS AT TIME OF         */\n#define sdwasck  0x10 /* ON,INDICATES STORAGE DATA CHECK                    */\n#define sdwaacr  0x08 /* ON,INDICATES ACR REQUEST                           */\n#define sdwainsf 0x04 /* ON,INSTRUCTION FAILURE                             */\n#define sdwafprx 0x02 /* ON,CONTENTS OF FLOATING POINT REGISTERS AT TIME    */\n#define sdwaterr 0x01 /* ON,TIMER ERROR - CAUSES ENTRY TO                   */\n\n/* Values for field \"sdwarsr1\" */\n#define sdwapref 0x20 /* PREFERRED FRAME                         @G860P1F   */\n#define sdwavrcn 0x10 /* V = R CANDIDATE - CAN GO OFFLINE        @G860P1F   */\n#define sdwanswp 0x08 /* LONG-TERM NON-SWAPPABLE ADDRESS SPACE   @G860P1F   */\n#define sdwanswa 0x04 /* NON-SWAPPABLE ADDRESS SPACE             @G860P1F   */\n#define sdwamser 0x02 /* STORAGE ERROR ALREADY SET IN FRAME.                */\n#define sdwachng 0x01 /* CHANGE INDICATOR WAS ON IN FRAME.                  */\n\n/* Values for field \"sdwarsr2\" */\n#define sdwaofln 0x80 /* FRAME OFFLINE OR SCHEDULED TO GO OFFLINE           */\n#define sdwaintc 0x40 /* INTERCEPT                                          */\n#define sdwasper 0x20 /* STORAGE ERROR PERMANENT ON FRAME.                  */\n#define sdwanucl 0x10 /* FRAME CONTAINS PERMANENT RESIDENT STORAGE,         */\n#define sdwafsqa 0x08 /* FRAME IN SQA                                       */\n#define sdwaflsq 0x04 /* FRAME IN LSQA                                      */\n#define sdwapgfx 0x02 /* FRAME IS PAGE FIXED                                */\n#define sdwaveqr 0x01 /* FRAME IS VIRTUAL = REAL                 @G860P1F   */\n\n/* Values for field \"sdwamcho\" */\n#define sdwaskpr 0x80 /* SKIP RECORDING REQUESTED BY MACHINE CHECK   @04A   */\n\n/* Values for field \"sdwaerra\" */\n#define sdwamchk 0x80 /* ON INDICATES MACHINE CHECK                         */\n#define sdwapchk 0x40 /* ON INDICATES PROGRAM CHECK                         */\n#define sdwarkey 0x20 /* ON INDICATES CONSOLE RESTART KEY WAS DEPRESSED     */\n#define sdwasvcd 0x10 /* ON INDICATES TASK ISSUED SVC 13                    */\n#define sdwaabtm 0x08 /* ON INDICATES SYSTEM FORCED SVC 13(I.E.ABTERM)      */\n#define sdwasvce 0x04 /* ON,INDICATES AN SVC WAS ISSUED BY                  */\n#define sdwatexc 0x02 /* ON,INDICATES AN UNRECOVERABLE TRANSLATION          */\n#define sdwapgio 0x01 /* ON,INDICATES A PAGE I/O ERROR                      */\n#define sdwastrm 0x01 /* ON,INDICATES AN RTM1 SERVICE ROUTINE    @G38AP1F   */\n\n/* Values for field \"sdwaerrb\" */\n#define sdwapdip 0x80 /* ON INDICATES THAT THIS TASK WAS PARALLEL           */\n#define sdwanmfs 0x40 /* Not My Fault Summary -- indicates that this        */\n#define sdwasrbs 0x10 /* On - this SDWA was allocated for an SRB            */\n#define sdwatyp1 0x08 /* ON TYPE 1 SVC IN CONTROL AT TIME OF ERROR          */\n#define sdwaenrb 0x04 /* ON ENABLED RB IN CONTROL AT TIME OF ERROR          */\n#define sdwaldis 0x02 /* ON A LOGICALLY OR PHYSICALLY DISABLED ROUTINE      */\n#define sdwasrbm 0x01 /* ON SYSTEM IN SRB MODE AT TIME OF ERROR             */\n\n/* Values for field \"sdwaerrc\" */\n#define sdwastaf 0x80 /* ON INDICATES A PREVIOUS (E)STA  OR FRR             */\n#define sdwastai 0x40 /* ON A (E)STAI EXIT PREVIOUSLY RECEIVED CONTROL      */\n#define sdwairb  0x20 /* ON AN IRB PRECEDED THE RB THAT IS                  */\n#define sdwaperc 0x10 /* ON THIS RECOVERY ROUTINE IS BEING PERCOLATED TO    */\n#define sdwaeas  0x08 /* ON INDICATES A LOWER LEVEL EXIT HAS RECOGNIZED     */\n#define sdwaskip 0x04 /* ON INDICATES FRRS WERE SKIPPED          @G381P2F   */\n#define sdwalcl  0x02 /* ON IND ENTRY AS A LOCAL RESOURCE MGR    @G382P2F   */\n#define sdwaglbl 0x01 /* ON IND ENTRY AS A GLOBAL RESOURCE MGR   @G382P2F   */\n\n/* Values for field \"sdwaerrd\" */\n#define sdwaclup 0x80 /* ON INDICATES RECOVERY EXIT ONLY TO CLEANUP AND     */\n#define sdwanrbe 0x40 /* ON RB ASSOCIATED WITH THIS ESTA EXIT WAS NOT       */\n#define sdwastae 0x20 /* ON THIS ESTA EXIT HAS BEEN ENTERED FOR A           */\n#define sdwacts  0x10 /* ON,THIS TASK WAS NOT IN CONTROL AT TIME OF         */\n#define sdwamabd 0x08 /* ON,THIS TASK WAS NOT IN CONTROL AT TIME OF         */\n#define sdwarpiv 0x04 /* ON, THE REGISTERS, PSW AND CONTROL REGISTERS       */\n#define sdwamciv 0x02 /* ON,MACHINE CHECK ERROR INFORMATION                 */\n#define sdwaerfl 0x01 /* ON,ERRORID INFORMATION AVAILABLE       @G17EP5W    */\n\n/* Values for field \"sdwaiofs\" */\n#define sdwaioqr 0x80 /* ON,I/O FOR FAILING PROGRAM HAS BEEN QUIESCED AND   */\n#define sdwaioht 0x40 /* ON,I/O FOR FAILING PROGRAM HAS BEEN HALTED AND     */\n#define sdwanoio 0x20 /* ON,FAILING PROGRAM HAS NO I/O OUTSTANDING          */\n#define sdwaniop 0x10 /* ON,USER REQUESTED NO I/O PROCESSING                */\n\n/* Values for field \"sdwartyf\" */\n#define sdwaamod 0x80 /* ADDRESSING MODE OF THE RETRY ROUTINE    @G860P1F   */\n\n/* Values for field \"sdwarcde\" */\n#define sdwacwt  0    /* 0 ,CONTINUE WITH TERMINATION. THIS INDICATION      */\n#define sdwarety 4    /* 4 ,RETRY USING RETRY ADDRESS IN SDWARTYA FIELD     */\n#define sdwapsti 16   /* 16,PREVENT FURTHER (E)STAI PROCESSING              */\n\n/* Values for field \"sdwaacf2\" */\n#define sdwarcrd 0x80 /* ON,RECORDING REQUESTED                             */\n#define sdwarfxm 0x40 /* ON,RETRY TO FULLXM AT TIME OF FRR SET.             */\n#define sdwaspin 0x20 /* ON,PROGRAM INTERRUPTED VIA  THE RESTART KEY WAS    */\n#define sdwarerr 0x10 /* ON,RETRY USING THE CROSS MEMORY ADDRESSING         */\n#define sdwauprg 0x08 /* ON,UPDATED REGISTERS STARTING WITH SDWASR00 ARE    */\n#define sdwafree 0x04 /* ON, SDWA (RTCA) TO BE FREED PRIOR TO RETRY.        */\n#define sdwaserp 0x02 /* ON,SERIALIZE PERCOLATION (USED WHEN AN SRB MODE    */\n#define sdwacml  0x01 /* ON,FREE THE CROSS MEMORY LOCAL LOCK     @G381P2F   */\n\n/* Values for field \"sdwaacf3\" */\n#define sdwafrsx 0x80 /* ON, THE RSM CROSS MEMORY CLASS LOCK     @G860P1S   */\n#define sdwafrsa 0x40 /* ON, THE RSM ADDRESS SPACE CLASS LOCK    @G860P1S   */\n#define sdwafvsp 0x20 /* ON, THE VSM PAGE LOCK                   @G860P1S   */\n#define sdwadisp 0x10 /* ON,THE DISPATCHER LOCK                             */\n#define sdwaasmp 0x08 /* ON,THE ASM CLASS LOCK                   Z40WPXH    */\n#define sdwasall 0x04 /* ON, THE SALLOC LOCK                                */\n#define sdwaiprg 0x02 /* ON, THE IOSYNCH LOCK                               */\n#define sdwafrsd 0x01 /* ON, THE RSM DATA SPACE LOCK                 @L6C   */\n\n/* Values for field \"sdwaacf4\" */\n#define sdwaiucb 0x80 /* ON, FREE IOSUCB LOCK                               */\n#define sdwatadb 0x08 /* RESERVED LOCK                           Z40WPXH    */\n#define sdwaoptm 0x04 /* ON, FREE SYSTEM RESOURCES MGR(SRM) LOCK            */\n#define sdwacms  0x02 /* ON, FREE CMS LOCK                                  */\n#define sdwafllk 0x01 /* ON, FREE LOCAL LOCK                                */\n\n/* Values for field \"sdwadpfs\" */\n#define sdwadpt  0x80 /* ALWAYS OFF, INDICATES SNAP DUMP REQUEST            */\n#define sdwadlst 0x40 /* ALWAYS ON, INDICATES  OS/VS2 REL. 2 DUMP           */\n#define sdwaensn 0x20 /* ON,ENHANCED DUMP OPTIONS              @G33SPHW     */\n#define sdwaslst 0x02 /* ON,STORAGE LISTS SUPPLIED FOR DUMP                 */\n\n/* Values for field \"sdwadpf2\" */\n#define sdwadvs3 0x80 /* ON, STORAGE RANGES IN SDWADSR, OFF, STORAGE        */\n#define sdwaxlst 0x08 /* ON,DATA SPACE STORAGE LISTS SUPPLIED FOR DUMP      */\n#define sdwalvl2 0x04 /* ON, MVS/SP2.1 VERSION OF SNAP PARMLIST  @G860P1F   */\n#define sdwasubl 0x02 /* ON, SUBPOOL LIST SUPPLIED               @G860P1C   */\n\n/* Values for field \"sdwasda0\" */\n#define sdwanuc  0x80 /* DISPLAY NUCLEUS                                    */\n#define sdwasqa  0x40 /* DISPLAY SQA                                        */\n#define sdwalsqa 0x20 /* DISPLAY LSQA                                       */\n#define sdwaswa  0x10 /* DISPLAY SWA                                        */\n#define sdwagtf  0x08 /* DISPLAY GTF INCORE TRACE TABLE                     */\n#define sdwacbs  0x04 /* FORMAT AND DISPLAY CONTROL BLOCKS                  */\n#define sdwaqqs  0x02 /* FORMAT AND DISPLAY QCBS/QELS                       */\n#define sdwadm   0x01 /* FORMAT DATA MGT CONTROL BLOCKS        @G33SPHW     */\n\n/* Values for field \"sdwasda1\" */\n#define sdwaio   0x80 /* FORMAT I/O SUPERVISOR CONTROL BLOCKS  @G33SPHW     */\n#define sdwaerr  0x40 /* FORMAT ERROR CONTROL BLOCKS           @G33SPHW     */\n#define sdwasum  0x10 /* PROVIDE SUMMARY DUMP                    @G860P1S   */\n#define sdwaalln 0x08 /* DISPLAY ENTIRE VIRTUAL NUCLEUS          @G860P1S   */\n\n/* Values for field \"sdwapdat\" */\n#define sdwadsas 0x80 /* DISPLAY SAVE AREAS                                 */\n#define sdwadsah 0x40 /* DISPLAY SAVE AREA HEADER                           */\n#define sdwadreg 0x20 /* DISPLAY REGISTERS                                  */\n#define sdwatlpa 0x10 /* DISPLAY LPA MODULES OF TASK                        */\n#define sdwatjpa 0x08 /* DISPLAY JPA MODULES OF TASK                        */\n#define sdwadpsw 0x04 /* DISPLAY PSW                                        */\n#define sdwauspl 0x02 /* DISPLAY USER SUBPOOLS                              */\n\n/* Values for field \"sdwavid\" */\n#define sdwavs3  1    /* 1, INDICATES THE SDWA IS AT AN MVS/SYSTEM          */\n#define sdwavs4  2    /* 2, INDICATES THE SDWA IS AT AN MVS/SYSTEM          */\n#define sdwavs5  3    /* 3, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L1A   */\n#define sdwavs6  4    /* 4, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L4A   */\n#define sdwavs7  5    /* 5, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L9A   */\n#define sdwavs8  6    /* 6, INDICATES THE SDWA IS AT AN MVS/SYSTEM   @L9A   */\n#define sdwavs9  7    /* 7, indicates the SDWA is at an OS/390 R10   @L9A   */\n#define sdwavs10 8    /* 8, indicates the SDWA is at a z/OS R7       @LNA   */\n#define sdwavsn  8    /* 8, indicates the SDWA is at a z/OS R7       @LNC   */\n\n/* Values for field \"sdwadpva\" */\n#define sdwahex  0x80 /* SDWAVRA DATA TO BE PRINTED BY EREP IN HEX          */\n#define sdwaebc  0x40 /* SDWAVRA DATA TO BE PRINTED BY EREP IN EBCDIC       */\n#define sdwavram 0x20 /* SDWAVRA DATA IS IN THE FORMAT MAPPED BY THE        */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SECURES": {"ttr": 8713, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*\n * THIS FILE CONTAINS SAMPLE CODE.  IBM PROVIDES THIS CODE ON AN\n * 'AS IS' BASIS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n */\n\n#ifndef _SECURES_H\n#define _SECURES_H\n\n#include <sys/socket.h>\n#include <netinet/in.h>\n\n#if defined(__cplusplus)\nextern \"C\" {\n#endif\n\n/*\n * The following defines are extended command codes for secure_ioctl().\n * there is a potential problem here if ioctl() ever starts using\n * these values, but for now these seem pretty safe.\n *\n * As input to the S_INIT command, secure_ioctl() expects a\n * pointer to a gsk_init_data structure.\n *\n * As input to the S_SOCINIT command, secure_ioctl() expects a\n * pointer to a gsk_soc_init_data structure.\n */\n#define S_INIT -200\n#define S_SOCINIT -201\n\nint secure_socket( Connection *handle, int family, int type, int data );\n\nint secure_bind( Connection *handle, struct sockaddr *sin, int len );\n\nint secure_listen( Connection *handle, int maxQueued );\n\nConnection *secure_accept( Connection *handle, struct sockaddr *sin, int *len );\n\nint secure_connect( Connection *handle, struct sockaddr *sin, int len );\n\nint secure_ioctl( Connection *handle, int command, void *data );\n\nint secure_send( Connection *handle, void *data, int len, int flag );\n\nint secure_recv( Connection *handle, void *data, int len, int flag );\n\nint secure_close( Connection *handle );\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif /* _SECURES_H */\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SHVBLOCK": {"ttr": 8157, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct shvblock \u00e4\n  void          *shvnext; /* Chain pointer to next SHVBLOCK */\n  int            shvuser; /* Used during \"FETCH NEXT\"       */\n  struct \u00e4\n    unsigned char  _shvcode;  /* Function code - indicates type */\n    unsigned char  _shvret;   /* Return codes                   */\n    short int      _filler1;  /* Reserved (should be 0)         */\n    \u00fc shvcodes;\n  int            shvbufl; /* Length of fetch value buffer   */\n  void          *shvnama; /* Address of variable name       */\n  int            shvnaml; /* Length of variable name        */\n  void          *shvvala; /* Address of value buffer        */\n  int            shvvall; /* Length of value buffer         */\n  \u00fc;\n\n#define shvcode  shvcodes._shvcode\n#define shvret   shvcodes._shvret\n\n/* Values for field \"shvvall\" */\n#define shvblen  0x20       /* Length of SHVBLOCK              */\n#define shvfetch 0xC6       /* Copy value of shared variable   */\n#define shvstore 0xE2       /* Set variable from given value   */\n#define shvdropv 0xC4       /* Drop variable                   */\n#define shvsyfet 0x86       /* Symbolic name retrieve          */\n#define shvsyset 0xA2       /* Symbolic name set               */\n#define shvsydro 0x84       /* Symbolic name drop              */\n#define shvnextv 0xD5       /* Fetch \"next\" variable           */\n#define shvpriv  0xD7       /* Fetch private information       */\n#define shvclean 0x00       /* Execution was OK                */\n#define shvnewv  0x01       /* Variable did not exist          */\n#define shvlvar  0x02       /* Last variable transferred (\"N\") */\n#define shvtrunc 0x04       /* Truncation occurred for \"Fetch\" */\n#define shvbadn  0x08       /* Invalid variable name           */\n#define shvbadv  0x10       /* Invalid value specified         */\n#define shvbadf  0x80       /* Invalid function code (SHVCODE) */\n#define shvrcok  0x00       /* Entire Plist chain processed    */\n#define shvrcinv 0xFFFFFFFF /* Invalid entry conditions        */\n#define shvrcist 0xFFFFFFFE /* Insufficient storage available  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SIV1V2V3": {"ttr": 8343, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct siv1v2v3 \u00e4\n  unsigned char  siv1v2v3si00\u00c464\u00dc;     /* Area mapped by dsect SI00   */\n  unsigned char  siv1v2v3si11v1\u00c44096\u00dc; /* Area mapped by dsect SI11V1 */\n  unsigned char  siv1v2v3si22v1\u00c44096\u00dc; /* Area mapped by dsect SI22V1 */\n  unsigned char  siv1v2v3si22v2\u00c44096\u00dc; /* Area mapped by dsect SI22V2 */\n  unsigned char  siv1v2v3si22v3\u00c44096\u00dc; /* Area mapped by dsect SI22V3 */\n  \u00fc;\n\n/* Values for field \"siv1v2v3si22v3\" */\n#define siv1v2v3_len 0x4040\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SI00": {"ttr": 8009, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct si00 \u00e4\n  unsigned char  si00cpcvariety;                   /* SI00CPCVariety_V1CPC_Machine,         */\n  unsigned char  si00validityflags;                /* Validity flags                        */\n  unsigned char  _filler1\u00c42\u00dc;                      /* Reserved                              */\n  unsigned char  si00pccacpid\u00c412\u00dc;                 /* PCCACPID value (CPU ID) for this CPU  */\n  unsigned char  si00pccacpua\u00c42\u00dc;                  /* PCCACPUA value for this CPU           */\n  unsigned char  si00pccacafm\u00c42\u00dc;                  /* PCCACAFM value for this CPU. This has */\n  unsigned char  _filler2\u00c44\u00dc;                      /* Reserved                              */\n  unsigned char  si00lastupdatetimestamp\u00c48\u00dc;       /* STCK timestamp when system last       */\n  unsigned char  si00pcca_cpu_address_mask\u00c48\u00dc;     /* PCCA_CPU_ADDRESS_MASK value for this  */\n  short int      si00pcca_cpu_address_mask_offset; /* PCCA_CPU_ADDRESS_MASK_OFFSET          */\n  unsigned char  _filler3\u00c414\u00dc;                     /* Reserved                              */\n  unsigned char  si00noninterface\u00c48\u00dc;              /* Not a programming interface           */\n  \u00fc;\n\n/* Values for field \"si00validityflags\" */\n#define si00validsi11v1              0x80 /* SI11V1 was requested and the information     */\n#define si00validsi22v1              0x40 /* SI22V1 was requested and the information     */\n#define si00validsi22v2              0x20 /* SI22V2 was requested and the information     */\n#define si00validsi22v3              0x10 /* SI22V3 was requested and the information     */\n\n/* Values for field \"si00noninterface\" */\n#define si00cpcvariety_v1cpc_machine 1    /* Value for a V1 CPC (not LPAR, not            */\n#define si00cpcvariety_v2cpc_lpar    2    /* Value for a V2 CPC (LPAR)                    */\n#define si00cpcvariety_v3cpc_vm      3    /* Value for a V3 CPC (VM)                      */\n#define csrsi_request_v1cpc_machine  1    /* Requests information about a V1 CPC          */\n#define csrsi_request_v2cpc_lpar     2    /* Requests information about a V2 CPC          */\n#define csrsi_request_v3cpc_vm       4    /* Requests information about a V3 CPC (VM)     */\n#define csrsi_success                0    /* CSRSI service completed successfully         */\n#define csrsi_stsinotavailable       4    /* STSI instruction is not available on this    */\n#define csrsi_servicenotavailable    8    /* CSRSI service is not available on this       */\n#define csrsi_badrequest             12   /* The request parameter did not specify a word */\n#define csrsi_badinfoarealen         16   /* The value of the InfoAreaLen parameter       */\n#define csrsi_badlock                20   /* Service was called holding a system lock     */\n#define si00_len                     0x40\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SI11V1": {"ttr": 8755, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct si11v1 \u00e4\n  unsigned char  si11v1flags;                    /* Flag(s)                                       */\n  unsigned char  _filler1;                       /* Reserved                                      */\n  unsigned char  si11v1ccr;                      /* Capacity-Change Reason. When SI11V1CAI is     */\n  unsigned char  si11v1cai;                      /* Capacity-Adjustment Indication. When zero,    */\n  unsigned char  _filler2\u00c428\u00dc;                   /* Reserved                                      */\n  unsigned char  si11v1cpcmanufacturer\u00c416\u00dc;      /* The 16-character (0-9 or uppercase A-Z)       */\n  unsigned char  si11v1cpctype\u00c44\u00dc;               /* The 4-character (0-9) EBCDIC type identifier  */\n  unsigned char  _filler3\u00c412\u00dc;                   /* Reserved                                      */\n  union \u00e4\n    unsigned char  _si11v1cpcmodel\u00c416\u00dc;         /* The 16-character (0-9 or uppercase A-Z) */\n    unsigned char  _si11v1cpcmodelcapident\u00c416\u00dc; /* The 16-character (0-9 or uppercase A-Z) */\n    \u00fc _si11v1_union1;\n  unsigned char  si11v1cpcsequencecode\u00c416\u00dc;      /* The 16-character (0-9 or uppercase A-Z)       */\n  unsigned char  si11v1cpcplantofmanufacture\u00c44\u00dc; /* The 4-character (0-9 or uppercase             */\n  unsigned char  si11v1cpcmodel1\u00c416\u00dc;            /* The 16-character (0-9 or uppercase A-Z)       */\n  unsigned char  si11v1cpcmodelpermcapident\u00c416\u00dc; /* When non-zero, the 16-character               */\n  unsigned char  si11v1cpcmodeltempcapident\u00c416\u00dc; /* When non-zero, the 16-character               */\n  int            si11v1cpcmodelcaprating;        /* When non-zero, an unsigned integer whose      */\n  int            si11v1cpcmodelpermcaprating;    /* When non-zero, an unsigned integer            */\n  int            si11v1cpcmodeltempcaprating;    /* When non-zero, an unsigned integer            */\n  union \u00e4\n    unsigned char  _si11v1diag\u00c48\u00dc;      /* Name no longer used                           */\n    unsigned char  _si11v1typenpctg\u00c48\u00dc; /* Type N Pctg: Each of the byte fields contains */\n    struct \u00e4\n      unsigned char  _si11v1_type1pctg;\n      unsigned char  _si11v1_type2pctg;\n      unsigned char  _si11v1_type3pctg;\n      unsigned char  _si11v1_type4pctg;\n      unsigned char  _si11v1_type5pctg;\n      unsigned char  _filler4\u00c43\u00dc;       /* Reserved */\n      \u00fc _si11v1_struct1;\n    \u00fc _si11v1_union2;\n  int            si11v1_nommcr;                  /* Nominal Model-Capacity Rating. When non-zero, */\n  int            si11v1_nommpcr;                 /* Nominal Model-Permanent-Capacity. Rating When */\n  int            si11v1_nommtcr;                 /* Nominal Model-Temporary-Capacity Rating. When */\n  unsigned char  _filler5\u00c43916\u00dc;                 /* Reserved                                      */\n  \u00fc;\n\n#define si11v1cpcmodel         _si11v1_union1._si11v1cpcmodel\n#define si11v1cpcmodelcapident _si11v1_union1._si11v1cpcmodelcapident\n#define si11v1diag             _si11v1_union2._si11v1diag\n#define si11v1typenpctg        _si11v1_union2._si11v1typenpctg\n#define si11v1_type1pctg       _si11v1_union2._si11v1_struct1._si11v1_type1pctg\n#define si11v1_type2pctg       _si11v1_union2._si11v1_struct1._si11v1_type2pctg\n#define si11v1_type3pctg       _si11v1_union2._si11v1_struct1._si11v1_type3pctg\n#define si11v1_type4pctg       _si11v1_union2._si11v1_struct1._si11v1_type4pctg\n#define si11v1_type5pctg       _si11v1_union2._si11v1_struct1._si11v1_type5pctg\n\n/* Values for field \"si11v1flags\" */\n#define si11v1_typenpctgv 0x80   /* When 1, the type-percentage bytes, located */\n#define si11v1_transient  0x01   /* When 1, indicates that the condition       */\n\n/* Values for field \"_filler5\" */\n#define si11v1_len        0x1000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SI22V1": {"ttr": 8349, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct si22v1 \u00e4\n  unsigned char  si22v1format;                    /* When the value is 1, the ACCOffset field is */\n  unsigned char  _filler1;                        /* Reserved                                    */\n  short int      si22v1accoffset;                 /* Alternate Cpu Capability Offset. A 16-bit   */\n  unsigned char  _filler2\u00c420\u00dc;                    /* Reserved                                    */\n  int            si22v1_nomcc;                    /* Nominal CPU Capability. An unsigned binary  */\n  unsigned char  si22v1secondarycpucapability\u00c44\u00dc; /* An unsigned binary integer that,            */\n  unsigned char  si22v1cpucapability\u00c44\u00dc;          /* If bits 0-8 are 0, this is an unsigned      */\n  unsigned char  si22v1totalcpucount\u00c42\u00dc;          /* A 16-bit unsigned binary integer that       */\n  unsigned char  si22v1configuredcpucount\u00c42\u00dc;     /* A 16-bit unsigned binary integer that       */\n  unsigned char  si22v1standbycpucount\u00c42\u00dc;        /* A 16-bit unsigned binary integer that       */\n  unsigned char  si22v1reservedcpucount\u00c42\u00dc;       /* A 16-bit unsigned binary integer that       */\n  union \u00e4\n    unsigned char  _si22v1mpcpucapabilityafs\u00c44052\u00dc; /* A series of contiguous 2-byte */\n    struct \u00e4\n      unsigned char  _si22v1mpcpucapabilityaf\u00c42\u00dc; /* Each individual adjustment factor. */\n      unsigned char  _filler3\u00c44050\u00dc;\n      \u00fc _si22v1_struct1;\n    \u00fc _si22v1_union1;\n  \u00fc;\n\n#define si22v1mpcpucapabilityafs _si22v1_union1._si22v1mpcpucapabilityafs\n#define si22v1mpcpucapabilityaf  _si22v1_union1._si22v1_struct1._si22v1mpcpucapabilityaf\n\n/* Values for field \"si22v1mpcpucapabilityaf\" */\n#define si22v1_len 0x1000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SI22V2": {"ttr": 8097, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct si22v2 \u00e4\n  unsigned char  _filler1\u00c432\u00dc;                 /* Reserved                                   */\n  union \u00e4\n    unsigned char  _si22v2lparnumber\u00c42\u00dc; /* A 16-bit unsigned binary integer which is the */\n    unsigned char  _si22v2cpcnumber\u00c42\u00dc;\n    \u00fc _si22v2_union1;\n  unsigned char  _filler2;                     /* Reserved                                   */\n  unsigned char  si22v2lcpucharacteristics;    /* The characteristics of the logical         */\n  unsigned char  si22v2totallcpucount\u00c42\u00dc;      /* A 16-bit unsigned binary integer that      */\n  unsigned char  si22v2configuredlcpucount\u00c42\u00dc; /* A 16-bit unsigned binary integer that      */\n  unsigned char  si22v2standbylcpucount\u00c42\u00dc;    /* A 16-bit unsigned binary integer that      */\n  unsigned char  si22v2reservedlcpucount\u00c42\u00dc;   /* A 16-bit unsigned binary integer that      */\n  union \u00e4\n    unsigned char  _si22v2lparname\u00c48\u00dc; /* The 8-character EBCDIC name of this level-2 */\n    unsigned char  _si22v2cpcname\u00c48\u00dc;\n    \u00fc _si22v2_union2;\n  union \u00e4\n    unsigned char  _si22v2lparcapabilityaf\u00c44\u00dc; /* Capability Adjustment Factor (CAF). An */\n    unsigned char  _si22v2cpccapabilityaf\u00c44\u00dc;\n    \u00fc _si22v2_union3;\n  unsigned char  si22v2lparorigin\u00c48\u00dc;          /* A 64-bit unsigned binary integer, called a */\n  unsigned char  _filler3\u00c48\u00dc;                  /* Reserved                                   */\n  unsigned char  si22v2dedicatedlcpucount\u00c42\u00dc;  /* A 16-bit unsigned binary integer that      */\n  unsigned char  si22v2sharedlcpucount\u00c42\u00dc;     /* A 16-bit unsigned binary integer that      */\n  unsigned char  _filler4\u00c44020\u00dc;               /* Reserved                                   */\n  \u00fc;\n\n#define si22v2lparnumber       _si22v2_union1._si22v2lparnumber\n#define si22v2cpcnumber        _si22v2_union1._si22v2cpcnumber\n#define si22v2lparname         _si22v2_union2._si22v2lparname\n#define si22v2cpcname          _si22v2_union2._si22v2cpcname\n#define si22v2lparcapabilityaf _si22v2_union3._si22v2lparcapabilityaf\n#define si22v2cpccapabilityaf  _si22v2_union3._si22v2cpccapabilityaf\n\n/* Values for field \"si22v2lcpucharacteristics\" */\n#define si22v2lcpudedicated 0x80   /* When one, indicates that one or more of     */\n#define si22v2lcpushared    0x40   /* When one, indicates that one or more of the */\n#define si22v2lcpuulimit    0x20   /* Utilization limit: When one, indicates that */\n\n/* Values for field \"_filler4\" */\n#define si22v2_len          0x1000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SI22V3": {"ttr": 8039, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct si22v3 \u00e4\n  unsigned char  _filler1\u00c428\u00dc;       /* Reserved */\n  unsigned char  _filler2\u00c43\u00dc;        /* Reserved */\n  unsigned char  si22v3dbcountfield;\n  union \u00e4\n    unsigned char  _si22v3dbs\u00c4512\u00dc; /* From 1 to 8 64-byte virtual machine */\n    struct \u00e4\n      unsigned char  _si22v3dbe\u00c464\u00dc; /* An individual entry, mapped by dsect SI22V3DB */\n      unsigned char  _filler3\u00c4448\u00dc;\n      \u00fc _si22v3_struct1;\n    \u00fc _si22v3_union1;\n  unsigned char  _filler4\u00c43552\u00dc;     /* Reserved */\n  \u00fc;\n\n#define si22v3dbs _si22v3_union1._si22v3dbs\n#define si22v3dbe _si22v3_union1._si22v3_struct1._si22v3dbe\n\n/* Values for field \"si22v3dbcountfield\" */\n#define si22v3dbcount 0x0F   /* Description Block Count. A 4-bit unsigned */\n\n/* Values for field \"_filler4\" */\n#define si22v3_len    0x1000\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMCABASE": {"ttr": 8743, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smcabase \u00e4\n  unsigned char  smcaopt;     /* -            SMFDEFLT OPTIONS SELECTED AT              */\n  unsigned char  smcamisc;    /* -            MISCELLANEOUS INDICATORS                  */\n  short int      smcatoff;    /* -            OFFSET OF THE FIRST SMF TIOT ENTRY FROM   */\n  unsigned char  smcasmca\u00c44\u00dc; /* CONTROL BLOCK ID                                       */\n  int            smcajwt;     /* -            JOB WAIT TIME LIMIT - BIT 31     @ZA18120 */\n  void          *smcas842;    /* -            ADDRESS OF IEEMB842              @G743PJK */\n  unsigned char  smcasid\u00c44\u00dc;  /* -          SYSTEM IDENTIFICATION (SID)        MDC002   */\n  void          *smcabufp;    /* -            ADDRESS OF THE SMF BUFFER                 */\n  unsigned char  smcamtd\u00c48\u00dc;  /* MAXDORM TIME AND DATE            @G743PJW              */\n  void          *smcaoptb;    /* -            ADDRESS OF SMFOPTAB              @G743PJK */\n  void          *smcadflt;    /* -            ADDRESS OF SMFDELFT              @G743PJK */\n  int            smcaarct;    /* -            # OF RECORDS AT LAST ABEND       @G743PBB */\n  int            smcaabct;    /* -            # OF BUFFERS AT LAST ABEND       @G743PBB */\n  int            smcasrct;    /* -            # OF RECORDS AT LAST STATUS      @G743PJW */\n  int            smcasbct;    /* -            # OF BUFFERS AT LAST STATUS      @G743PJW */\n  void          *smcapfba;    /* -            PAGE FIX BEGINNING ADDRESS       @G743PBB */\n  void          *smcapfea;    /* -            PAGE FIX END ADDRESS             @G743PBB */\n  void          *smcaecba;    /* -            PAGE FIX ECB ADDRESS             @G743PBB */\n  short int      smcabr14;    /* -            SMF RMTR (BR 14)                 @G743PBB */\n  short int      smcaasid;    /* -            ASID OF SMF ADDRESS SPACE            @L1C */\n  int            smcawait\u00c42\u00dc; /* -           THE ACCUMULATED WAIT TIME, EXPRESSED IN    */\n  struct \u00e4\n    unsigned char  _smcaendi; /* -            A COMMUNICATION FIELD                   */\n    unsigned char  _smcaenop; /* -            ENTRY CODE THAT INDICATES WHICH LOAD OF */\n    \u00fc smcaenty;\n  unsigned char  smcafopt;    /* -            SMF FOREGROUND OPTIONS.                   */\n  unsigned char  smcabits;    /* -            BIT INDICATORS                       @0SC */\n  int            smcawrtp;    /* -            AN OPTIMUM BUFFER LOAD DISPLACEMENT       */\n  int            smcaoary;    /* -            POINTER TO OLD RDS ARRAY         @G743PBB */\n  int            smcanary;    /* -            POINTER TO NEW RDS ARRAY         @G743PBB */\n  int            smcasubp;    /* -            POINTER TO SUBPARM CHAIN         @G383P26 */\n  int            smcabfmf;    /* -            MAXIMUM NUMBER OF FULL BUFFERS   @G743PBB */\n  int            smcapcno;    /* -            PC NUMBER FOR SMFWTM                 @L1C */\n  unsigned char  smcadstm\u00c48\u00dc; /* -          START TIME AND DATE AT WHICH NO DATA SET    */\n  int            smcadsct;    /* -            THE NUMBER OF SMF RECORDS THAT HAVE BEEN  */\n  void          *smcaascb;    /* -            ASCB OF SMF ADDRESS SPACE            @L1C */\n  int            smcamacr;    /* -            ENTRY POINT TO MACRO RTN         @G742PJK */\n  void          *smcasave;    /* -            USER EXIT ADDRESS SAVE FIELD (OS/VS2)     */\n  int            smcatexp;    /* -            TIME OF MOST RECENT EXPIRATION OF A       */\n  unsigned char  smcastkn\u00c48\u00dc; /* -          SMF Address Space Token              @05C   */\n  unsigned char  smcasjwt\u00c44\u00dc; /* -          SAVE JWT AS ENTERED (HHMM)       @G742PJK   */\n  unsigned char  smcasmdm\u00c44\u00dc; /* -          SAVE MAXDORM AS ENTERED (MMSS)   @G742PJK   */\n  unsigned char  smcassts\u00c46\u00dc; /* -          SAVE STATUS AS ENTERED (HHMMSS)  @G742PJK   */\n  unsigned char  smcaparm\u00c42\u00dc; /* -          PARMLIB SUFFIX FOR RESTART                  */\n  void          *smcaslca;    /* -            ADDRESS OF SLCA                      @L1A */\n  int            smcapgm;     /* -            NUMBER OF PAGES MIGRATED           ICB310 */\n  void          *smcau83;     /* -            ADDRESS OF SMF OUTPUT EXIT (IEFU83)       */\n  void          *smcawtcb;    /* -            ADDRESS OF SMF WRITER'S TCB - USED BY     */\n  void          *smcatsk2;    /* -            ADDRESS OF IFASMF TASK                    */\n  void          *smcaactp;    /* -            ADDRESS OF THE ACT (USED BY PARSE AND     */\n  struct \u00e4\n    int            _smcanmfl; /* -            NUMBER OF FULL BUFFERS           @G742PJK */\n    void          *_smcassb;  /* -            POINTER TO SMF SUSPEND BLOCK     @ZM50077 */\n    \u00fc smcacds;\n  short int      smcamnbf;    /* -            RESERVED (PREVIOUSLY THE MINIMUM          */\n  short int      smcamxbf;    /* -            RESERVED (PREVIOUSLY THE MAXIMUM          */\n  void          *smcasttt;    /* -            ADDRESS OF STATUS TIMER ELEMENT  @G742PJK */\n  void          *smcamaxt;    /* -            ADDRESS OF MAXDORM TIMER ELEMENT @G742PJK */\n  void          *smcadtb;     /* -            ADDRESS OF DUMP TIMER ELEMENT    @G742PJK */\n  struct \u00e4\n    unsigned char  _smcaprmt; /* -          REPLACES OPI BIT                 @G741PLS */\n    unsigned char  _smcaflgs; /* -          WRITER STATUS FLAGS              @G741PLS */\n    unsigned char  _smcaflgr; /* -          RECOVERY FOOTPRINTS              @G743PBB */\n    unsigned char  _smcarcur; /* -          RECOVERY RECURSION BITS          @G743PBB */\n    \u00fc smcabitf;\n  int            smcaecb0;    /* -            DISPLAY SMF ECB                      @L1C */\n  void          *smcasrb;     /* -            ADDRESS OF SMF SRB                   @L1C */\n  int            smcaecb1;    /* -            SET SMF ECB                          @L1A */\n  int            smcaecb2;    /* -            DUMP CHECK ECB                       @L1A */\n  int            smcaecb3;    /* -            SETSMF ECB                           @L1A */\n  int            smcaalcn;    /* -            Alternate console ID for SWITCH SMF  @06C */\n  int            smcaxmca;    /* -            ADDR OF CROSS MEM COMMUNICATION AREA @L1C */\n  unsigned char  smcardsh\u00c44\u00dc; /* -          RDSH - CHAIN HEADER ID           @G741PLS   */\n  void          *smcafrds;    /* -            FIRST RDS                        @G741PLS */\n  void          *smcalrds;    /* -            LAST RDS                         @G741PLS */\n  void          *smcasvcr;    /* -            CURRENT RDS FOR SVC 83 (IEEMB830)    @L1C */\n  void          *smcasrbr;    /* -            CURRENT RDS FOR SRB (IEEMB834)       @L1C */\n  int            smca994e\u00c43\u00dc; /* -           DOM ID of IEE994E messages.  Array         */\n  int            smcaecbi;    /* -           ADDRESS OF ECB FOR SMF INIT          @L1A  */\n  int            smcadmid;    /* -           DOM ID OF SMF TERMINATED MSG         @L1C  */\n  int            _filler1;    /* -           Reserved                             @P3C  */\n  struct \u00e4\n    int            _smcad986; /* -           DOM ID OF IEE986E MSG                @DIA */\n    \u00fc smcad978;\n  int            smcabfls;    /* -           NUMBER OF RCDS LOST DUE TO BUFFER          */\n  int            smcad979;    /* -           DOM ID OF IEE979W MSG                @L1A  */\n  int            smcabfwt;    /* -           BUFFERS WRITTEN                  @G742PJK  */\n  int            smcarcwt;    /* -           RECORDS WRITTEN                  @G742PJK  */\n  void          *smcatqe;     /* -            ADDRESS OF TQE                   @G742PJK */\n  void          *smcaenqe;    /* -            ADDRESS OF ENQUE ENTRY POINT     @G742PJK */\n  void          *smcadeqe;    /* -            ADDRESS OF DEQUE ENTRY POINT     @G742PJK */\n  void          *smcansrb;    /* -            ADDRESS OF NEXT ELEMENT ON CHAIN @G742PJK */\n  unsigned char  smcaendt\u00c48\u00dc; /* -          TIME WHEN DIE INVOKED PLUS 1 SEC @G742PJK   */\n  void          *smcasstp;    /* -            ADDRESS OF SMF SELECTIVITY       @G741PJK */\n  void          *smcasysp;    /* -            ADDR OF THE SYSTEM (DEFAULT) SST @G741PJK */\n  unsigned char  smcaitme\u00c44\u00dc; /* -          IPL TIME (BINARY) IN HUNDREDTHS OF A @P6A   */\n  unsigned char  smcaidte\u00c44\u00dc; /* -          IPL DATE (0CYYDDDF)                  @P5C   */\n  void          *smcasact;    /* -            ADDRESS OF THE NEW ACT FOR SET   @G743PJK */\n  short int      smcansst;    /* -            NUMBER OF SST ENTRIES            @G743PJK */\n  short int      smcalsst;    /* -            LENGTH OF ONE SST ENTRY          @G741PJK */\n  int            smcaiomc;    /* NUMBER OF TIMES I/O MEASUREMENTS @G860P27              */\n  void          *smca836;     /* ADDRESS OF IEEMB836              @G860P27              */\n  void          *smca727;     /* ADDRESS OF IEFTB727              @G860P27              */\n  void          *smca728;     /* ADDRESS OF IEFTB728              @G860P27              */\n  int            smcacisz;    /* SESSION DATASET CONTROL INT SIZE     @DHA              */\n  struct \u00e4\n    void          *_smcajac; /* ADDRESS OF IFAJAC00                  @DNA */\n    \u00fc smca721;\n  void          *smcasmcx;    /* POINTER TO SMCX (SMCA EXTENSION      @LPC              */\n  void          *smcaschd;    /* ADDR OF DEFERRED SCHED SUB-ROUTINE   @LTC              */\n  unsigned char  smcaexfl;    /* USER EXIT FLAGS                      @LWC              */\n  unsigned char  smcasidb;    /* SMF SID Syntax Used                  @LWA              */\n  unsigned char  smcauflg;    /* Usage Data Collection Services Flags @01C              */\n  unsigned char  _filler2;    /* Reserved                             @LWA              */\n  unsigned char  smcadlfl;    /* DATA LOST CONTROL FLAGS              @01C              */\n  unsigned char  _filler3;    /* Reserved                             @01A              */\n  short int      smcaasis;    /* SMF ASID used for serialization      @05C              */\n  int            _filler4;    /* -            Reserved                             @LVC */\n  int            _filler5;    /* -            Reserved                             @LVC */\n  void          *smcajac1;    /* ADDRESS OF IFAJAC01                  @LRA              */\n  void          *smcaudca;    /* Address of Usage Data Collection     @01A              */\n  int            smcaupcl;    /* Usage PCA Lockword                   @01A              */\n  int            smcaupca;    /* Address of first PCA on chain        @01A              */\n  int            smcauacl;    /* Usage ACA Lockword                   @01A              */\n  int            smcauaca;    /* Address of first ACA on chain        @01A              */\n  void          *smcaudct;    /* Address of Usage Data Collection     @03A              */\n  unsigned char  _filler6\u00c44\u00dc; /* Reserved for Alignment               @03A              */\n  unsigned char  smcaust\u00c48\u00dc;  /* Usage Data Start Time (TOD)          @03A              */\n  unsigned char  smcaustl\u00c48\u00dc; /* Usage Data Start Time (Local)        @03A              */\n  unsigned char  smcauet\u00c48\u00dc;  /* Usage Data End Time (TOD)            @03A              */\n  unsigned char  smcauetl\u00c48\u00dc; /* Usage Data End Time (Local)          @03A              */\n  unsigned char  smcauit\u00c48\u00dc;  /* Usage Record End   Time (TOD)        @07C              */\n  unsigned char  smcauitl\u00c48\u00dc; /* Usage Record End   Time (Local)      @07C              */\n  unsigned char  smcauisl\u00c48\u00dc; /* Usage Record Start Time (Local)      @07A              */\n  \u00fc;\n\n#define smcaendi smcaenty._smcaendi\n#define smcaenop smcaenty._smcaenop\n#define smcanmfl smcacds._smcanmfl\n#define smcassb  smcacds._smcassb\n#define smcaprmt smcabitf._smcaprmt\n#define smcaflgs smcabitf._smcaflgs\n#define smcaflgr smcabitf._smcaflgr\n#define smcarcur smcabitf._smcarcur\n#define smcad986 smcad978._smcad986\n#define smcajac  smca721._smcajac\n\n/* Values for field \"smcaopt\" */\n#define smcaopt1 0x80 /* -         RESERVED                                  */\n#define smcaopt2 0x40 /* -         RESERVED                                  */\n#define smcaext  0x20 /* -         RESERVED                                  */\n#define smcadsa  0x10 /* -         DATA SET ACCOUNTING                       */\n#define smcavol  0x08 /* -         VOLUME ACCOUNTING                         */\n#define smcaudcs 0x04 /* Usage Data Collection Services       @01A           */\n#define smcars01 0x04 /* -   RESERVED                                        */\n#define smcatds  0x02 /* -         TYPE 17 RECORDS MAINTAINED FOR TEMPORARY  */\n#define smcafgnd 0x01 /* -         SMF FOREGROUND OPTIONS BIT.  IF 0, ABOVE  */\n\n/* Values for field \"smcamisc\" */\n#define smcauser 0x80 /* -         SMF RECORDING REQUESTED                   */\n#define smcaman  0x40 /* -         SYS1.MAN DATA SET IS/IS NOT PRESENT.      */\n#define smcadsic 0x20 /* DATA SET INIT COMPLETE BY IEEMB829   @Q4C           */\n#define smcafirt 0x10 /* -         SMF DATA SET TO BE OPENED                 */\n#define smcapsdp 0x08 /* -         PSEUDO-DUMP SWITCH                        */\n#define smcadbsy 0x04 /* -         DUMP IS BUSY (SMF WRITER)                 */\n#define smcabsw  0x02 /* -         BUFFER SWITCH.  IF 0, LEFT HALF OF BUFFER */\n#define smcadump 0x01 /* -         DUMP BUSY                                 */\n\n/* Values for field \"smcaendi\" */\n#define smcars14 0x80 /* -   RESERVED                                        */\n#define smcars15 0x40 /* -   RESERVED                                        */\n#define smcars16 0x20 /* -   RESERVED                                        */\n#define smcars17 0x10 /* -   RESERVED                                        */\n#define smcars18 0x08 /* -   RESERVED                                        */\n#define smcars19 0x04 /* -   RESERVED                                        */\n#define smcadspo 0x02 /* -         DISPLAY OPTIONS (D SMF,O) IS IN EFFECT    */\n#define smcadsnf 0x01 /* -         IF ZERO, DATA SET (X OR Y) WAS FOUND.     */\n\n/* Values for field \"smcabits\" */\n#define smcadar  0x80 /* -        DUMPABND OPTION INDICATOR            @0SA  */\n#define smcadsnm 0x40 /* -        Data Set Name Migration Indicator    @LXA  */\n\n/* Values for field \"smcaprmt\" */\n#define smcaiplr 0x80 /* -        PROMPT(IPLR) OR PROMPT(ALL)      @G741PLS  */\n#define smcalist 0x40 /* -        PROMPT(LIST) OR PROMPT(ALL)      @G741PLS  */\n#define smcaldsn 0x20 /* -        DISPLAY DATASET STATUS           @G741PLS  */\n#define smcamxdm 0x10 /* -        MAXDORM SPECIFIED?               @G742PJK  */\n#define smcastus 0x08 /* -        STATUS SPECIFIED?                @G742PJK  */\n#define smcarun  0x04 /* -        WRITER SRB RUNNING               @ZA53006  */\n#define smcaskd  0x02 /* -        WRITER SRB HAS BEEN SCHEDULED    @ZA53006  */\n#define smcacons 0x01 /* -        DD CONSOLIDATION                     @02A  */\n\n/* Values for field \"smcaflgs\" */\n#define smcainit 0x80 /* -        WRITER TASK INITIALIZED          @G741PLS  */\n#define smcarstr 0x40 /* -        RESTART IN PROGRESS                  @L1C  */\n#define smcadtls 0x20 /* -        DATA LOST - NO SPACE ON DATA SETS    @L1C  */\n#define smcasetp 0x10 /* -        SET SMF IN PROCESS               @G741PLS  */\n#define smcadisp 0x08 /* -        DISPLAY SMF FOR OPTIONS OR DATASETS        */\n#define smcall   0x04 /* -        LOCK HELD WHEN DISP LOCK OBTAIN  @G741PLS  */\n#define smcalate 0x02 /* -        NEXT ELEMENT LONGER THAN 1 SEC   @G741PLS  */\n#define smcasets 0x01 /* -        SETSMF IN PROCESS                @G383P26  */\n\n/* Values for field \"smcaflgr\" */\n#define smcaterm 0x80 /* -        SMF TERMINATED                   @G743PBB  */\n#define smcapgfx 0x40 /* -        PAGEFIX ISSUED                   @G743PBB  */\n#define smcasrbf 0x20 /* -        WRITER SRB ABENDED AND ISSUED SDUMP        */\n#define smcapsus 0x10 /* -        PREVENT SUSPEND PROCESSING WHILE HANDLING  */\n#define smcapcdt 0x10 /* -        IFAPCWTR HAS TAKEN DUMP              @L1A  */\n#define smcau29  0x08 /* -        IEFU29 EXIT CALLED               @G743PBB  */\n#define smcanost 0x04 /* -        NO MORE SETS ALLOWED             @G743PBB  */\n#define smcaprev 0x02 /* -        PREVIOUS ABEND IN EASI INTERVAL  @G384P27  */\n#define smcanmre 0x01 /* -        NO MORE EASI INTERVAL PROC       @G384P27  */\n\n/* Values for field \"smcarcur\" */\n#define smcamxdr 0x80 /* -        PREVENT MAXDORM RECURSION        @G743PBB  */\n#define smcasttr 0x40 /* -        PREVENT STATUS RECURSION         @G743PBB  */\n#define smcasusr 0x20 /* -        PREVENT SUSPEND RECURSION        @G743PBB  */\n#define smcatimr 0x10 /* -        PREVENT TIMER RECURSON           @G743PBB  */\n#define smcasetr 0x08 /* -        PREVENT SET RECURSION            @G743PBB  */\n#define smcasetc 0x04 /* FOOTPRINTS FOR SET RECOVERY      @G743PJK           */\n\n/* Values for field \"smcaiomc\" */\n#define smcaioms 0x80 /* MEASUREMENTS ARE CURRENTLY ON    @G860P27           */\n\n/* Values for field \"smcaexfl\" */\n#define smcaexr1 0x08 /* -         RESERVED                             @DHA */\n#define smcaexr3 0x04 /* -         RESERVED                             @DHA */\n#define smcaexr4 0x02 /* -         RESERVED                             @DHA */\n#define smcaexr5 0x01 /* -         RESERVED                             @DHA */\n\n/* Values for field \"smcasidb\" */\n#define smcasdft 0x80 /* 'Default'                            @LWA           */\n#define smcasonl 0x40 /* SID(xxxx)                            @LWA           */\n#define smcasser 0x20 /* SID(xxxx,ser#)                       @LWA           */\n#define smcassys 0x10 /* SID(xxxxSYSNAME(sysname))            @LWA           */\n#define smcassym 0x08 /* SID(&SYSNAME(m:n))                   @LWA           */\n#define smcascom 0x04 /* SID(xxxx,COMBIN(ser#,ser#))          @LWA           */\n#define smcasrsv 0x03 /* Reserved                             @LWA           */\n\n/* Values for field \"smcauflg\" */\n#define smcaut89 0x80 /* -         Type 89 Subtype 1 Recording Active   @01A */\n#define smcat892 0x40 /* -         Type 89 Subtype 2 Recording Active   @MXA */\n\n/* Values for field \"smcadlfl\" */\n#define smcadlwt 0x80 /* -         MAXBUFFS OPTION SPECIFIED            @DHA */\n#define smcadlhl 0x40 /* -         NOBUFFS(HALT) SPECIFIED              @DHA */\n#define smcadlld 0x20 /* -         LASTDS(HALT) SPECIFIED               @DHA */\n#define smcadlr1 0x10 /* -         RESERVED                             @DHA */\n#define smcadlr2 0x08 /* -         RESERVED                             @DHA */\n#define smcadlr3 0x04 /* -         RESERVED                             @DHA */\n#define smcadlr4 0x02 /* -         RESERVED                             @DHA */\n#define smcadlr5 0x01 /* -         RESERVED                             @DHA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMDE": {"ttr": 8189, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde \u00e4\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _smde_id\u00c48\u00dc;  /* EYECATCHER IGWSMDE            */\n      int            _smde_len;    /* LENGTH OF CONTROL BLOCK. THIS */\n      unsigned char  _smde_lvl;    /* SMDE VERSION NUMBER           */\n      unsigned char  _filler1\u00c43\u00dc;  /* RESERVED                      */\n      \u00fc smde_hdr;\n    unsigned char  _smde_libtype;       /* SOURCE LIBRARY TYPE. POSSIBLE    */\n    unsigned char  _smde_flag;          /* FLAG BYTE                        */\n    unsigned char  _filler2\u00c42\u00dc;         /* RESERVED. MUST BE ZERO.          */\n    unsigned char  _filler3;            /* RESERVED. MUST BE ZERO.          */\n    struct \u00e4\n      unsigned char  _smde_mlt\u00c43\u00dc; /* MLT OF MEMBER (ZERO IF HFS) */\n      unsigned char  _smde_cnct;   /* CONCATENATION NUMBER        */\n      \u00fc smde_mltk;\n    unsigned char  _smde_libf;          /* LIBRARY FLAG (Z-BYTE)            */\n    short int      _smde_name_off;      /* NAME OFFSET                      */\n    struct \u00e4\n      short int      _smde_pmar_len; /* SUM OF LENGTHS OF PROGRAM */\n      \u00fc smde_usrd_len;\n    struct \u00e4\n      short int      _smde_pmar_off; /* PROGRAM MANAGEMENT */\n      \u00fc smde_usrd_off;\n    short int      _smde_token_len;     /* TOKEN LENGTH                     */\n    short int      _smde_token_off;     /* TOKEN DATA OFFSET                */\n    short int      _smde_pname_off;     /* PRIMARY NAME OFFSET.             */\n    short int      _smde_nlst_cnt;      /* NUMBER OF NOTE LIST              */\n    short int      _smde_c370_attr_off; /* OFFSET TO C370LIB ATTRIBUTE @02A */\n    short int      _filler4;            /* @02C                             */\n    \u00fc smde_basic;\n  unsigned char  smde_sections; /* START OF ENTRY SECTIONS */\n  \u00fc;\n\n#define smde_id            smde_basic.smde_hdr._smde_id\n#define smde_len           smde_basic.smde_hdr._smde_len\n#define smde_lvl           smde_basic.smde_hdr._smde_lvl\n#define smde_libtype       smde_basic._smde_libtype\n#define smde_flag          smde_basic._smde_flag\n#define smde_mlt           smde_basic.smde_mltk._smde_mlt\n#define smde_cnct          smde_basic.smde_mltk._smde_cnct\n#define smde_libf          smde_basic._smde_libf\n#define smde_name_off      smde_basic._smde_name_off\n#define smde_pmar_len      smde_basic.smde_usrd_len._smde_pmar_len\n#define smde_pmar_off      smde_basic.smde_usrd_off._smde_pmar_off\n#define smde_token_len     smde_basic._smde_token_len\n#define smde_token_off     smde_basic._smde_token_off\n#define smde_pname_off     smde_basic._smde_pname_off\n#define smde_nlst_cnt      smde_basic._smde_nlst_cnt\n#define smde_c370_attr_off smde_basic._smde_c370_attr_off\n\n/* Values for field \"smde_lvl\" */\n#define smde_lvl_val         0x01 /* LEVEL CONSTANT                  */\n\n/* Values for field \"smde_libtype\" */\n#define smde_libtype_c370lib 0x03 /* C370LIB LIBRARY TYPE       @L2A */\n#define smde_libtype_hfs     0x02 /* HFS FILE TYPE                   */\n#define smde_libtype_pdse    0x01 /* PDSE LIBRARY TYPE               */\n#define smde_libtype_pds     0x00 /* PDS LIBRARY TYPE                */\n\n/* Values for field \"smde_flag\" */\n#define smde_flag_alias      0x80 /* ENTRY IS AN ALIAS.              */\n#define smde_flag_lmod       0x40 /* MEMBER IS A PROGRAM.            */\n#define smde_system_dcb      0x20 /* DCB IS A SYSTEM DCB, THEREFORE  */\n\n/* Values for field \"smde_libf\" */\n#define smde_libf_tasklib    0x02 /* LIBRARY FOUND FLAG - TASKLIB    */\n#define smde_libf_linklib    0x01 /* LIBRARY FOUND FLAG - LNKLST     */\n#define smde_libf_private    0x00 /* LIBRARY FOUND FLAG - PRIVATE    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMDE@FD": {"ttr": 3945, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde_fd \u00e4\n  int            smde_fd_token; /* FILE DESCRIPTOR */\n  unsigned char  smde_fd_end;\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMDEFD": {"ttr": 8581, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde_fd \u00e4\n  int            smde_fd_token; /* FILE DESCRIPTOR */\n  unsigned char  smde_fd_end;\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMDENAME": {"ttr": 8719, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde_name \u00e4\n  short int      smde_name_len; /* LENGTH OF ENTRY NAME */\n  unsigned char  smde_name_val; /* ENTRY NAME           */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMDENLST": {"ttr": 7941, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde_nlst \u00e4\n  struct \u00e4\n    unsigned char  _smde_nlst_rlt\u00c43\u00dc; /* NOTE LIST RECORD LOCATION  */\n    unsigned char  _smde_nlst_num;    /* NUMBER OF RLT DESCRIBED BY */\n    \u00fc smde_nlst_entry;\n  \u00fc;\n\n#define smde_nlst_rlt smde_nlst_entry._smde_nlst_rlt\n#define smde_nlst_num smde_nlst_entry._smde_nlst_num\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMDEPNAM": {"ttr": 8301, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde_pname \u00e4\n  short int      smde_pname_len; /* LENGTH OF PRIMARY NAME */\n  unsigned char  smde_pname_val; /* PRIMARY NAME           */\n  \u00fc;\n\n/* Values for field \"smde_pname_val\" */\n#define smde_po1_name_maxlen 0x3F  /* Maximum length of names in a   */\n#define smde_hfs_name_maxlen 0x100 /* Maximum length of names in a   */\n#define smde_po2_name_maxlen 0x400 /* Maximum length of names in a   */\n#define smde_name_maxlen     0x400 /* Maximum length of names   @L1A */\n#define smde_pname_maxlen    0x08  /* Maximum length of primary      */\n#define smde_maxlen          0x11F\n#define smde_hfs_maxlen      0x4BA\n#define smde_po2_maxlen      0x4E0\n#define smde_all_maxlen      0x4E0 /* Maximum length of SMDE for all */\n#define smde_pds_maxlen      0x42\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMDETOKN": {"ttr": 8035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smde_token \u00e4\n  union \u00e4\n    struct \u00e4\n      int            _smde_token_connid; /* CONNECT_IDENTIFIER */\n      int            _smde_token_itemno; /* ITEM NUMBER        */\n      unsigned char  _smde_token_ft\u00c424\u00dc; /* FILE TOKEN         */\n      \u00fc _smde_token_struct1;\n    struct \u00e4\n      unsigned char  _filler1\u00c416\u00dc;          /* RESERVED                    @L2A */\n      unsigned char  _smde_token_bmf_ct\u00c48\u00dc; /* BMF CONNECT TOKEN           @L2A */\n      unsigned char  _smde_token_cdm_ct\u00c48\u00dc; /* JCDM CONNECT TOKEN          @L2A */\n      \u00fc _smde_token_struct2;\n    \u00fc _smde_token_union1;\n  unsigned char  smde_token_end;\n  \u00fc;\n\n#define smde_token_connid _smde_token_union1._smde_token_struct1._smde_token_connid\n#define smde_token_itemno _smde_token_union1._smde_token_struct1._smde_token_itemno\n#define smde_token_ft     _smde_token_union1._smde_token_struct1._smde_token_ft\n#define smde_token_bmf_ct _smde_token_union1._smde_token_struct2._smde_token_bmf_ct\n#define smde_token_cdm_ct _smde_token_union1._smde_token_struct2._smde_token_cdm_ct\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF": {"ttr": 7973, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_SMF\n#define INCLUDE_SMF\n#include \"qfss70mu/smf30cas.hpp\"\n#include \"qfss70mu/smf30id.hpp\"\n#include \"qfss70mu/smf30sap.hpp\"\n#include \"qfss70mu/smf14.hpp\"\n#include \"qfss70mu/smf30cmp.hpp\"\n#include \"qfss70mu/smf30mse.hpp\"\n#include \"qfss70mu/smf30prf.hpp\"\n#include \"qfss70mu/smf30ud.hpp\"\n#include \"qfss70mu/smf30acs.hpp\"\n#include \"qfss70mu/smf30dr.hpp\"\n#include \"qfss70mu/smf30op.hpp\"\n#include \"qfss70mu/smf30ura.hpp\"\n#include \"qfss70mu/smf30ar.hpp\"\n#include \"qfss70mu/smf30exp.hpp\"\n#include \"qfss70mu/smf30ops.hpp\"\n#include \"qfss70mu/smf30rm.hpp\"\n#include \"qfss70mu/smfrcd30.hpp\"\n#include \"qfss70mu/smfrcd92.hpp\"\n#include \"qfss70mu/smf92fcl.hpp\"\n#include \"qfss70mu/smf92fop.hpp\"\n#include \"qfss70mu/smf92fsm.hpp\"\n#include \"qfss70mu/smf92fsp.hpp\"\n#include \"qfss70mu/smf92fsr.hpp\"\n#include \"qfss70mu/smf92fsu.hpp\"\n#include \"qfss70mu/smf92fsv.hpp\"\n#include \"qfss70mu/smf92id.hpp\"\n#include \"qfss70mu/smf92mmp.hpp\"\n#include \"qfss70mu/smf92mun.hpp\"\n#include \"qfss70mu/smf92sss.hpp\"\n#include \"qfss70mu/ermdsmp0.hpp\"\n#include \"qfss70mu/r79firml.hpp\"\n#include \"qfss70mu/r79eds.hpp\"\n#include \"qfss70mu/r79ecpd.hpp\"\n#include \"qfss70mu/r79ecs.hpp\"\n#include \"qfss70mu/r79egd.hpp\"\n#include \"qfss70mu/r79dds.hpp\"\n#include \"qfss70mu/r79cchnl.hpp\"\n#include \"qfss70mu/r79ccntl.hpp\"\n#include \"qfss70mu/r79belem.hpp\"\n#include \"qfss70mu/r79bcntl.hpp\"\n#include \"qfss70mu/r79aelem.hpp\"\n#include \"qfss70mu/r799elem.hpp\"\n#include \"qfss70mu/r798elem.hpp\"\n#include \"qfss70mu/r797elem.hpp\"\n#include \"qfss70mu/r796elem.hpp\"\n#include \"qfss70mu/r795elem.hpp\"\n#include \"qfss70mu/r794.hpp\"\n#include \"qfss70mu/r793.hpp\"\n#include \"qfss70mu/r792elem.hpp\"\n#include \"qfss70mu/r791elem.hpp\"\n#include \"qfss70mu/r79chl.hpp\"\n#include \"qfss70mu/smf79hdr.hpp\"\n#include \"qfss70mu/smf79pro.hpp\"\n#include \"qfss70mu/osmf.hpp\"\n#include \"qfss70mu/pfswrec.hpp\"\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMFRCD30": {"ttr": 8125, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smfrcd30 \u00e4\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _smf30len\u00c42\u00dc; /* RECORD LENGTH           @G742PJW              */\n      unsigned char  _smf30seg\u00c42\u00dc; /* SEGMENT DESCRIPTOR      @G742PJW              */\n      unsigned char  _smf30flg;    /* HEADER FLAG BYTE -      @G742PJW              */\n      unsigned char  _smf30rty;    /* RECORD TYPE 30          @G742PJW              */\n      unsigned char  _smf30tme\u00c44\u00dc; /* TIME RECORD WAS MOVED                         */\n      unsigned char  _smf30dte\u00c44\u00dc; /* DATE THAT THE RECORD                          */\n      unsigned char  _smf30sid\u00c44\u00dc; /* SYSTEM IDENTIFICATION   @G742PJW              */\n      unsigned char  _smf30wid\u00c44\u00dc; /* OUCBSUBN     SUBSYSTEM IDENTIFIER    @G743PJW */\n      unsigned char  _smf30stp\u00c42\u00dc; /* RECORD SUBTYPE          @G860P27              */\n      \u00fc smf30rhd;\n    struct \u00e4\n      int            _smf30sof;    /* OFFSET TO SUBSYSTEM SEGTION       */\n      unsigned char  _smf30sln\u00c42\u00dc; /* LENGTH OF SUBSYSTEM SECTION       */\n      unsigned char  _smf30son\u00c42\u00dc; /* NUMBER OF SUBSYSTEM SECTIONS      */\n      int            _smf30iof;    /* OFFSET TO IDENTIFICATION          */\n      unsigned char  _smf30iln\u00c42\u00dc; /* LENGTH OF IDENTIFICATION          */\n      unsigned char  _smf30ion\u00c42\u00dc; /* NUMBER OF IDENTIFICATION          */\n      int            _smf30uof;    /* OFFSET TO I/O ACTIVITY SECTION    */\n      unsigned char  _smf30uln\u00c42\u00dc; /* LENGTH OF I/O ACTIVITY SECTION    */\n      unsigned char  _smf30uon\u00c42\u00dc; /* NUMBER OF I/O ACTIVITY SECTIONS   */\n      int            _smf30tof;    /* OFFSET TO COMPLETION SECTION      */\n      unsigned char  _smf30tln\u00c42\u00dc; /* LENGTH OF COMPLETION SECTION      */\n      unsigned char  _smf30ton\u00c42\u00dc; /* NUMBER OF COMPLETION SECTIONS     */\n      int            _smf30cof;    /* OFFSET TO PROCESSOR SECTION       */\n      unsigned char  _smf30cln\u00c42\u00dc; /* LENGTH OF PROCESSOR SECTION       */\n      unsigned char  _smf30con\u00c42\u00dc; /* NUMBER OF PROCESSOR SECTIONS      */\n      int            _smf30aof;    /* OFFSET TO ACCOUNTING SECTION      */\n      unsigned char  _smf30aln\u00c42\u00dc; /* LENGTH OF ACCOUNTING SECTION      */\n      unsigned char  _smf30aon\u00c42\u00dc; /* NUMBER OF ACCOUNTING SECTIONS     */\n      int            _smf30rof;    /* OFFSET TO STORAGE SECTION         */\n      unsigned char  _smf30rln\u00c42\u00dc; /* LENGTH OF STORAGE SECTION         */\n      unsigned char  _smf30ron\u00c42\u00dc; /* NUMBER OF STORAGE SECTIONS        */\n      int            _smf30pof;    /* OFFSET TO PERFORMANCE SECTION     */\n      unsigned char  _smf30pln\u00c42\u00dc; /* LENGTH OF PERFORMANCE SECTIONS    */\n      unsigned char  _smf30pon\u00c42\u00dc; /* NUMBER OF PERFORMANCE SECTIONS    */\n      int            _smf30oof;    /* OFFSET TO OPERATOR SECTION        */\n      unsigned char  _smf30oln\u00c42\u00dc; /* LENGTH OF OPERATOR SECTION        */\n      unsigned char  _smf30oon\u00c42\u00dc; /* NUMBER OF OPERATOR SECTIONS       */\n      int            _smf30eof;    /* OFFSET TO EXCP SECTION            */\n      unsigned char  _smf30eln\u00c42\u00dc; /* LENGTH OF EXCP SECTIONS IN THIS   */\n      unsigned char  _smf30eon\u00c42\u00dc; /* NUMBER OF EXCP SECTIONS IN THIS   */\n      unsigned char  _smf30eor\u00c42\u00dc; /* NUMBER OF EXCP SEGMENTS IN        */\n      unsigned char  _smf30rvd\u00c42\u00dc; /* RESERVED                     @01C */\n      unsigned char  _smf30eos\u00c44\u00dc; /* NUMBER OF EXCP SECTIONS           */\n      unsigned char  _smf30dro\u00c44\u00dc; /* Offset of APPC/MVS                */\n      unsigned char  _smf30drl\u00c42\u00dc; /* Length of APPC/MVS                */\n      unsigned char  _smf30drn\u00c42\u00dc; /* Number of APPC/MVS                */\n      unsigned char  _smf30aro\u00c44\u00dc; /* Offset of APPC/MVS Cumulative     */\n      unsigned char  _smf30arl\u00c42\u00dc; /* Length of APPC/MVS Cumulative     */\n      unsigned char  _smf30arn\u00c42\u00dc; /* Number of APPC/MVS Cumulative     */\n      unsigned char  _smf30opo\u00c44\u00dc; /* Offset of OpenMVS Process         */\n      unsigned char  _smf30opl\u00c42\u00dc; /* Length of OpenMVS Process         */\n      unsigned char  _smf30opn\u00c42\u00dc; /* Number of OpenMVS Process         */\n      unsigned char  _smf30opm\u00c44\u00dc; /* Number of OpenMVS Process         */\n      int            _smf30udo;    /* Offset of Usage Sections     @06A */\n      unsigned char  _smf30udl\u00c42\u00dc; /* Length of Usage Section      @06A */\n      unsigned char  _smf30udn\u00c42\u00dc; /* Number of Usage Sections in  @06C */\n      int            _smf30uds;    /* Number of Usage Sections in  @06C */\n      unsigned char  _smf30rmo\u00c44\u00dc; /* Offset of first ARM Section       */\n      unsigned char  _smf30rml\u00c42\u00dc; /* Length of each ARM Section        */\n      unsigned char  _smf30rmn\u00c42\u00dc; /* Number of ARM sections on         */\n      unsigned char  _smf30rms\u00c44\u00dc; /* Number of ARM sections on         */\n      unsigned char  _smf30mof\u00c44\u00dc; /* Offset to MultiSystem Enclave     */\n      unsigned char  _smf30mln\u00c42\u00dc; /* Length of MultiSystem Enclave     */\n      unsigned char  _smf30mno\u00c42\u00dc; /* Number of MultiSystem Enclave     */\n      unsigned char  _smf30mos\u00c44\u00dc; /* Number of MultiSystem Enclave     */\n      \u00fc smf30sds;\n    \u00fc smf30rps;\n  \u00fc;\n\n#define smf30len smf30rps.smf30rhd._smf30len\n#define smf30seg smf30rps.smf30rhd._smf30seg\n#define smf30flg smf30rps.smf30rhd._smf30flg\n#define smf30rty smf30rps.smf30rhd._smf30rty\n#define smf30tme smf30rps.smf30rhd._smf30tme\n#define smf30dte smf30rps.smf30rhd._smf30dte\n#define smf30sid smf30rps.smf30rhd._smf30sid\n#define smf30wid smf30rps.smf30rhd._smf30wid\n#define smf30stp smf30rps.smf30rhd._smf30stp\n#define smf30sof smf30rps.smf30sds._smf30sof\n#define smf30sln smf30rps.smf30sds._smf30sln\n#define smf30son smf30rps.smf30sds._smf30son\n#define smf30iof smf30rps.smf30sds._smf30iof\n#define smf30iln smf30rps.smf30sds._smf30iln\n#define smf30ion smf30rps.smf30sds._smf30ion\n#define smf30uof smf30rps.smf30sds._smf30uof\n#define smf30uln smf30rps.smf30sds._smf30uln\n#define smf30uon smf30rps.smf30sds._smf30uon\n#define smf30tof smf30rps.smf30sds._smf30tof\n#define smf30tln smf30rps.smf30sds._smf30tln\n#define smf30ton smf30rps.smf30sds._smf30ton\n#define smf30cof smf30rps.smf30sds._smf30cof\n#define smf30cln smf30rps.smf30sds._smf30cln\n#define smf30con smf30rps.smf30sds._smf30con\n#define smf30aof smf30rps.smf30sds._smf30aof\n#define smf30aln smf30rps.smf30sds._smf30aln\n#define smf30aon smf30rps.smf30sds._smf30aon\n#define smf30rof smf30rps.smf30sds._smf30rof\n#define smf30rln smf30rps.smf30sds._smf30rln\n#define smf30ron smf30rps.smf30sds._smf30ron\n#define smf30pof smf30rps.smf30sds._smf30pof\n#define smf30pln smf30rps.smf30sds._smf30pln\n#define smf30pon smf30rps.smf30sds._smf30pon\n#define smf30oof smf30rps.smf30sds._smf30oof\n#define smf30oln smf30rps.smf30sds._smf30oln\n#define smf30oon smf30rps.smf30sds._smf30oon\n#define smf30eof smf30rps.smf30sds._smf30eof\n#define smf30eln smf30rps.smf30sds._smf30eln\n#define smf30eon smf30rps.smf30sds._smf30eon\n#define smf30eor smf30rps.smf30sds._smf30eor\n#define smf30rvd smf30rps.smf30sds._smf30rvd\n#define smf30eos smf30rps.smf30sds._smf30eos\n#define smf30dro smf30rps.smf30sds._smf30dro\n#define smf30drl smf30rps.smf30sds._smf30drl\n#define smf30drn smf30rps.smf30sds._smf30drn\n#define smf30aro smf30rps.smf30sds._smf30aro\n#define smf30arl smf30rps.smf30sds._smf30arl\n#define smf30arn smf30rps.smf30sds._smf30arn\n#define smf30opo smf30rps.smf30sds._smf30opo\n#define smf30opl smf30rps.smf30sds._smf30opl\n#define smf30opn smf30rps.smf30sds._smf30opn\n#define smf30opm smf30rps.smf30sds._smf30opm\n#define smf30udo smf30rps.smf30sds._smf30udo\n#define smf30udl smf30rps.smf30sds._smf30udl\n#define smf30udn smf30rps.smf30sds._smf30udn\n#define smf30uds smf30rps.smf30sds._smf30uds\n#define smf30rmo smf30rps.smf30sds._smf30rmo\n#define smf30rml smf30rps.smf30sds._smf30rml\n#define smf30rmn smf30rps.smf30sds._smf30rmn\n#define smf30rms smf30rps.smf30sds._smf30rms\n#define smf30mof smf30rps.smf30sds._smf30mof\n#define smf30mln smf30rps.smf30sds._smf30mln\n#define smf30mno smf30rps.smf30sds._smf30mno\n#define smf30mos smf30rps.smf30sds._smf30mos\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFRCD92": {"ttr": 8169, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smfrcd92 \u00e4\n  struct \u00e4\n    struct \u00e4\n      short int      _smf92len;    /* Record length                   */\n      short int      _smf92seg;    /* Segment descriptor              */\n      unsigned char  _smf92flg;    /* Header flag byte                */\n      unsigned char  _smf92rty;    /* Record type - 92 ('5C'x)        */\n      int            _smf92tme;    /* Record written time             */\n      int            _smf92dte;    /* Record written date             */\n      unsigned char  _smf92sid\u00c44\u00dc; /* System identifier               */\n      unsigned char  _smf92wid\u00c44\u00dc; /* Subsystem identifier            */\n      short int      _smf92stp;    /* Record subtype                  */\n      unsigned char  _filler1\u00c42\u00dc;  /* Reserved                        */\n      short int      _smf92sdl;    /* Length of self-defining section */\n      \u00fc smf92rhd;\n    struct \u00e4\n      int            _smf92sof; /* Offset to subsystem section      */\n      short int      _smf92sln; /* Length of subsystem section      */\n      short int      _smf92son; /* Number of subsystem sections     */\n      int            _smf92iof; /* Offset of identification section */\n      short int      _smf92iln; /* Length of identification section */\n      short int      _smf92ion; /* Number of identification section */\n      int            _smf92dof; /* Offset of data section           */\n      short int      _smf92dln; /* Length of data section           */\n      short int      _smf92don; /* Number of data sections          */\n      \u00fc smf92sds;\n    \u00fc smf92rps;\n  \u00fc;\n\n#define smf92len smf92rps.smf92rhd._smf92len\n#define smf92seg smf92rps.smf92rhd._smf92seg\n#define smf92flg smf92rps.smf92rhd._smf92flg\n#define smf92rty smf92rps.smf92rhd._smf92rty\n#define smf92tme smf92rps.smf92rhd._smf92tme\n#define smf92dte smf92rps.smf92rhd._smf92dte\n#define smf92sid smf92rps.smf92rhd._smf92sid\n#define smf92wid smf92rps.smf92rhd._smf92wid\n#define smf92stp smf92rps.smf92rhd._smf92stp\n#define smf92sdl smf92rps.smf92rhd._smf92sdl\n#define smf92sof smf92rps.smf92sds._smf92sof\n#define smf92sln smf92rps.smf92sds._smf92sln\n#define smf92son smf92rps.smf92sds._smf92son\n#define smf92iof smf92rps.smf92sds._smf92iof\n#define smf92iln smf92rps.smf92sds._smf92iln\n#define smf92ion smf92rps.smf92sds._smf92ion\n#define smf92dof smf92rps.smf92sds._smf92dof\n#define smf92dln smf92rps.smf92sds._smf92dln\n#define smf92don smf92rps.smf92sds._smf92don\n\n/* Values for field \"smf92flg\" */\n#define smf92ssf     0x80 /* Bit 0 - Subsys ID after Sys ID */\n#define smf92sbt     0x40 /* Bit 1 - Subtypes utilized      */\n\n/* Values for field \"smf92don\" */\n#define smfrcd92_len 0x34\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMFXCOMM": {"ttr": 8577, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smfxcomm \u00e4\n  void          *smfxcomm_mvssmfx;      /* MVSSMFX module address         */\n  void          *smfxcomm_callback;     /* callback routine address       */\n  void          *smfxcomm_regs_ent\u00c416\u00dc; /* register save area at entry    */\n  void          *smfxcomm_regs_cbk\u00c416\u00dc; /* register save area at callback */\n  \u00fc;\n\n/* Values for field \"smfxcomm_regs_cbk\" */\n#define smfxcomm_length 0x88 /* dsect length */\n#define r0              0\n#define r1              1\n#define r2              2\n#define r3              3\n#define r4              4\n#define r5              5\n#define r6              6\n#define r7              7\n#define r8              8\n#define r9              9\n#define r10             10\n#define r11             11\n#define r12             12\n#define r13             13\n#define r14             14\n#define r15             15\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF14": {"ttr": 8419, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf14 \u00e4\n  unsigned char  smf14len\u00c42\u00dc;   /* RECORD LENGTH                                  */\n  unsigned char  smf14seg\u00c42\u00dc;   /* SEGMENT DESCRIPTOR                             */\n  unsigned char  smf14flg;      /* HEADER FLAG BYTE                               */\n  unsigned char  smf14rty;      /* RECORD TYPE 14                                 */\n  unsigned char  smf14tme\u00c44\u00dc;   /* TIME OF DAY OF EOV OR CLOSE, USING TIME        */\n  unsigned char  smf14dte\u00c44\u00dc;   /* DATE OF EOV OR CLOSE,PACKED DECIMAL (00YYDDDF) */\n  unsigned char  smf14sid\u00c44\u00dc;   /* SYSTEM ID                                      */\n  unsigned char  smf14jbn\u00c48\u00dc;   /* JOB NAME                                       */\n  unsigned char  smf14rst\u00c44\u00dc;   /* READER START TIME                              */\n  unsigned char  smf14rsd\u00c44\u00dc;   /* READER START DATE, PK/DEC FORM: 00YYDDDF       */\n  unsigned char  smf14uid\u00c48\u00dc;   /* USERID                                         */\n  unsigned char  smf14rin\u00c42\u00dc;   /* RECORD INDICATORS:                             */\n  unsigned char  smf14sdc;      /* SIZE OF DCB/DEB SEGMENT                        */\n  unsigned char  smf14nuc;      /* NO. UCB SEGMENTS                               */\n  unsigned char  smf14suc;      /* SIZE OF EACH UCB SEGMENT                       */\n  unsigned char  smf14set;      /* SIZE OF ISAM EXTENSION SEGMENT                 */\n  unsigned char  smf14ope\u00c44\u00dc;   /* TIME OF OPEN USING TIME BIN INTV.              */\n  unsigned char  smftioe1;      /* TIOELNGH                                       */\n  unsigned char  smftioe2;      /* TIOESSTA                                       */\n  unsigned char  smftioe3;      /* TIOEWTCT                                       */\n  unsigned char  smftioe4;      /* TIOELINK                                       */\n  unsigned char  smftioe5\u00c48\u00dc;   /* TIOEDDNM                                       */\n  unsigned char  smftioe6\u00c43\u00dc;   /* TIOEJFCB                                       */\n  unsigned char  smftioe7;      /* TIOESTTC                                       */\n  unsigned char  smfjfcb1\u00c4176\u00dc; /* JFCB SEGMENT (ENTIRE JFCB)                     */\n  unsigned char  smfdcbor\u00c42\u00dc;   /* DCBDSORG                                       */\n  unsigned char  smfdcbrf;      /* DCBRECFM                                       */\n  unsigned char  smfdcbmf\u00c42\u00dc;   /* DCBMACRF                                       */\n  unsigned char  smfdcbfl;      /* DCBOFLGS                                       */\n  unsigned char  smfdcbop;      /* DCBOPTCD                                       */\n  unsigned char  smf14rv2;      /* RESERVED                                       */\n  unsigned char  smfdebfl;      /* DEBOFLGS                                       */\n  unsigned char  smfdebop;      /* DEBOPATB                                       */\n  unsigned char  smfdebvl\u00c42\u00dc;   /* DEBVOLSQ                                       */\n  union \u00e4\n    unsigned char  _smfdcbbl\u00c44\u00dc; /* DCBBLKCT                                       */\n    unsigned char  _smf14ntu\u00c44\u00dc; /* If SMF14STR=0, relative track & record    @P1C */\n    \u00fc _smf14_union1;\n  union \u00e4\n    unsigned char  _smfdssno\u00c46\u00dc; /* DATA SET SERIAL NUMBER */\n    struct \u00e4\n      unsigned char  _smf14ntr\u00c44\u00dc; /* NUMBER OF TRACKS RELEASED BY DADSM RELSE RTN   */\n      unsigned char  _smf14ner;    /* NUMBER OF EXTENTS RELEASED                     */\n      unsigned char  _smf14edi;    /* EDI flag byte                             @L5A */\n      \u00fc _smf14_struct1;\n    \u00fc _smf14_union2;\n  union \u00e4\n    unsigned char  _smf14rv3; /* RESERVED                                  @L7A */\n    unsigned char  _smf14fg1; /* Flag byte                                 @L6A */\n    \u00fc _smf14_union3;\n  union \u00e4\n    unsigned char  _smf14tda; /* Tape data set authorization flags         @L7A */\n    unsigned char  _smf14rv4; /* RESERVED                                  @L6C */\n    \u00fc _smf14_union4;\n  union \u00e4\n    unsigned char  _smf14opd\u00c44\u00dc; /* DATE OF OPEN, PACKED DECIMAL (00YYDDF)    @02M */\n    unsigned char  _filler1\u00c44\u00dc;  /* SAME AS SMF14OPD. MUST STAY AT SAME       @02A */\n    \u00fc _smf14_union5;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _smfucbch; /* UCBCHA */\n      unsigned char  _smfucbua; /* UCBUA  */\n      \u00fc smfucbdv;\n    unsigned char  _smf14rv6\u00c42\u00dc; /* RESERVED                                       */\n    short int      _smf14sxs;    /* SIZE OF EXTENDED INFO SEGMENT(ALL SECTIONS@L1A */\n    \u00fc _smf14_union6;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _smfsrtev\u00c46\u00dc;   /* SRTEVOLI                                      */\n      unsigned char  _smfucbty\u00c44\u00dc;   /* UCBTYP                                        */\n      unsigned char  _smfsrtes;      /* SRTESTAB                                      */\n      unsigned char  _smf14nex;      /* NUMBER EXTENTS                                */\n      unsigned char  _smf14rv5\u00c42\u00dc;   /* RESERVED                                      */\n      unsigned char  _smfexcp\u00c44\u00dc;    /* EXCP COUNT SO FAR IN STEP. FOR PDSE DATA SETS */\n      unsigned char  _smfsrtef\u00c42\u00dc;   /* SRTEFSCT                                      */\n      unsigned char  _smfsrteq\u00c42\u00dc;   /* SRTEFSEQ                                      */\n      unsigned char  _filler2\u00c4111\u00dc;\n      \u00fc _smf14_struct2;\n    struct \u00e4\n      unsigned char  _smfdcbma;      /* DCBMAC                                   */\n      unsigned char  _smfdcbnl;      /* DCBNLEV                                  */\n      unsigned char  _smfdcbr3\u00c44\u00dc;   /* DCBRORG3                                 */\n      unsigned char  _smfdcbnr\u00c44\u00dc;   /* DCBNREC                                  */\n      unsigned char  _smfdcbr2\u00c42\u00dc;   /* DCBRORG2                                 */\n      unsigned char  _smfdcbno\u00c42\u00dc;   /* DCBNOREC                                 */\n      unsigned char  _smfdcbr1\u00c42\u00dc;   /* DCBRORG1                                 */\n      unsigned char  _smf14rv7;      /* RESERVED                                 */\n      unsigned char  _smfdebni;      /* DEBNIEE                                  */\n      unsigned char  _smfdebnp;      /* DEBNPEE                                  */\n      unsigned char  _smfdebno;      /* DEBNOEE                                  */\n      unsigned char  _smfncyls\u00c42\u00dc;   /* # CYL'S IN INDEPENDENT INDEX AREA        */\n      unsigned char  _smfnpcyl\u00c42\u00dc;   /* NUMBER OF CYL'S IN PRIME AREA            */\n      unsigned char  _smfnocyl\u00c42\u00dc;   /* NUMBER OF CYL'S IN INDEPENDENT OVFL AREA */\n      unsigned char  _filler3\u00c4107\u00dc;\n      \u00fc _smf14_struct3;\n    struct \u00e4\n      short int      _smf14esl;     /* LENGTH OF SECTION IN EXTENDED INFORMATION @L1A */\n      char           _filler4;      /* RESERVED                                  @L1A */\n      char           _smf14sty;     /* SECTION TYPE                              @L1A */\n      unsigned char  _smf14xf1;     /* EXTENDED SEGMENT INDICATOR FLAG BYTE 1    @L1A */\n      unsigned char  _smf14xf2;     /* EXTENDED SEGMENT INDICATOR FLAG BYTE 2    @L1A */\n      unsigned char  _smf14cdl\u00c48\u00dc;  /* NUMBER OF BYTES OF COMPRESSED DATA READ   @L1A */\n      unsigned char  _smf14udl\u00c48\u00dc;  /* NUMBER OF BYTES OF DATA READ OR WRITTEN   @L1A */\n      unsigned char  _smf14cds\u00c48\u00dc;  /* COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C */\n      unsigned char  _smf14uds\u00c48\u00dc;  /* COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C */\n      unsigned char  _smf14cis\u00c44\u00dc;  /* PHYSICAL BLOCK SIZE OF COMPRESSED FORMAT  @02C */\n      short int      _smf14tkl;     /* DICTIONARY TOKEN LENGTH(NOT INCLUDING     @L1A */\n      unsigned char  _smf14tkn\u00c436\u00dc; /* DICTIONARY TOKEN FOR COMPRESSED FORMAT    @02C */\n      unsigned char  _filler5\u00c453\u00dc;\n      \u00fc _smf14_struct4;\n    struct \u00e4\n      unsigned char  _filler6\u00c44\u00dc;\n      unsigned char  _smf14mcn\u00c48\u00dc;   /* SMS MANAGEMENT CLASS NAME                 @03A */\n      unsigned char  _smf14dcn\u00c48\u00dc;   /* SMS DATA CLASS NAME                       @03A */\n      unsigned char  _smf14scn\u00c48\u00dc;   /* SMS STORAGE CLASS NAME                    @03A */\n      unsigned char  _filler7\u00c4105\u00dc;\n      \u00fc _smf14_struct5;\n    struct \u00e4\n      unsigned char  _filler8\u00c44\u00dc;\n      unsigned char  _smf14spn\u00c48\u00dc;   /* STEP NAME                                 @L2A */\n      unsigned char  _smf14pgn\u00c48\u00dc;   /* ACTIVE PROGRAM NAME                       @L2A */\n      unsigned char  _filler9\u00c4113\u00dc;\n      \u00fc _smf14_struct6;\n    struct \u00e4\n      unsigned char  _filler10\u00c44\u00dc;\n      unsigned char  _smf14cfg;       /* CCSID FLAGS                               @L3A */\n      unsigned char  _smf14usr\u00c44\u00dc;    /* CCSID BEING USED BY APPLICATION(SPECIFIED @L3A */\n      unsigned char  _smf14tpe\u00c44\u00dc;    /* CCSID BEING USED TO PROCESS TAPE(SPECIFIED@L3A */\n      unsigned char  _smf14lbl\u00c44\u00dc;    /* CCSID SPECIFIED IN THE TAPE LABELS OF AN  @L3A */\n      unsigned char  _filler11\u00c4116\u00dc;\n      \u00fc _smf14_struct7;\n    struct \u00e4\n      unsigned char  _filler12\u00c44\u00dc;\n      unsigned char  _smf14bfg\u00c42\u00dc;    /* ADC FLAGS(DEFINES INFORMATION PRESENT)    @L4A */\n      unsigned char  _smf14lbs\u00c48\u00dc;    /* BLOCK SIZE VALUE                          @L4A */\n      unsigned char  _smf14flgs\u00c42\u00dc;   /* FLAGS                                     @L9A */\n      unsigned char  _filler13\u00c410\u00dc;   /* RESERVED                                  @L9C */\n      unsigned char  _filler14\u00c4107\u00dc;\n      \u00fc _smf14_struct8;\n    struct \u00e4\n      unsigned char  _filler15\u00c44\u00dc;\n      unsigned char  _smf14drd\u00c44\u00dc;   /* DIRECTORY READ REQUEST COUNT              @L8A */\n      unsigned char  _smf14drdh\u00c44\u00dc;  /* DIRECTORY READ HIT COUNT                  @L8A */\n      unsigned char  _smf14mrd\u00c44\u00dc;   /* MEMBER READ REQUEST COUNT                 @L8A */\n      unsigned char  _smf14mrdh\u00c44\u00dc;  /* MEMBER READ HIT COUNT                     @L8A */\n      unsigned char  _smf14mce\u00c44\u00dc;   /* MEMBER CACHE ELIGIBLE                     @L8A */\n      unsigned char  _smf14mst\u00c44\u00dc;   /* MEMBER CACHE STOLEN                       @L8A */\n      unsigned char  _smf14mnc\u00c44\u00dc;   /* MEMBER CACHE ELIGIBLE BUT NOT CACHED      @L8A */\n      unsigned char  _smf14mcf\u00c44\u00dc;   /* MEMBER CACHE ELIGIBLE BUT CACHE FULL      @L8A */\n      unsigned char  _filler16\u00c497\u00dc;\n      \u00fc _smf14_struct9;\n    struct \u00e4\n      unsigned char  _filler17\u00c44\u00dc;\n      unsigned char  _smf14kl1\u00c464\u00dc; /* KEY LABEL 1                               @L9A */\n      unsigned char  _smf14cd1;     /* ENCODING MECHANISM FOR KEY LABEL 1        @L9A */\n      unsigned char  _smf14kl2\u00c464\u00dc; /* KEY LABEL 2                               @L9A */\n      \u00fc _smf14_struct10;\n    struct \u00e4\n      unsigned char  _filler18\u00c418\u00dc;\n      unsigned char  _smf14nta\u00c44\u00dc;   /* NUMBER TRACKS ALLOCATED        */\n      unsigned char  _smfioreq\u00c44\u00dc;   /* NUMBER OF IO REQUESTS ISSUED   */\n      unsigned char  _smfchits\u00c44\u00dc;   /* NUMBER OF CACHE HITS           */\n      unsigned char  _smfnmwts\u00c44\u00dc;   /* NUMBER OF WAITS                */\n      unsigned char  _smfphios\u00c44\u00dc;   /* NUMBER OF PHYSICAL IO REQUESTS */\n      unsigned char  _smfcios\u00c44\u00dc;    /* NUMBER OF CACHED IO REQUESTS   */\n      unsigned char  _filler19\u00c491\u00dc;\n      \u00fc _smf14_struct11;\n    \u00fc _smf14_union7;\n  unsigned char  smf14cd2;      /* ENCODING MECHANISM FOR KEY LABEL 2        @L9A */\n  unsigned char  smf14ket\u00c44\u00dc;   /* KEY EXCHANGE TIME IN HUNDREDTHS SECONDS.  @0BA */\n  \u00fc;\n\n#define smfdcbbl  _smf14_union1._smfdcbbl\n#define smf14ntu  _smf14_union1._smf14ntu\n#define smfdssno  _smf14_union2._smfdssno\n#define smf14ntr  _smf14_union2._smf14_struct1._smf14ntr\n#define smf14ner  _smf14_union2._smf14_struct1._smf14ner\n#define smf14edi  _smf14_union2._smf14_struct1._smf14edi\n#define smf14rv3  _smf14_union3._smf14rv3\n#define smf14fg1  _smf14_union3._smf14fg1\n#define smf14tda  _smf14_union4._smf14tda\n#define smf14rv4  _smf14_union4._smf14rv4\n#define smf14opd  _smf14_union5._smf14opd\n#define smfucbch  _smf14_union6.smfucbdv._smfucbch\n#define smfucbua  _smf14_union6.smfucbdv._smfucbua\n#define smf14rv6  _smf14_union6._smf14rv6\n#define smf14sxs  _smf14_union6._smf14sxs\n#define smfsrtev  _smf14_union7._smf14_struct2._smfsrtev\n#define smfucbty  _smf14_union7._smf14_struct2._smfucbty\n#define smfsrtes  _smf14_union7._smf14_struct2._smfsrtes\n#define smf14nex  _smf14_union7._smf14_struct2._smf14nex\n#define smf14rv5  _smf14_union7._smf14_struct2._smf14rv5\n#define smfexcp   _smf14_union7._smf14_struct2._smfexcp\n#define smfsrtef  _smf14_union7._smf14_struct2._smfsrtef\n#define smfsrteq  _smf14_union7._smf14_struct2._smfsrteq\n#define smfdcbma  _smf14_union7._smf14_struct3._smfdcbma\n#define smfdcbnl  _smf14_union7._smf14_struct3._smfdcbnl\n#define smfdcbr3  _smf14_union7._smf14_struct3._smfdcbr3\n#define smfdcbnr  _smf14_union7._smf14_struct3._smfdcbnr\n#define smfdcbr2  _smf14_union7._smf14_struct3._smfdcbr2\n#define smfdcbno  _smf14_union7._smf14_struct3._smfdcbno\n#define smfdcbr1  _smf14_union7._smf14_struct3._smfdcbr1\n#define smf14rv7  _smf14_union7._smf14_struct3._smf14rv7\n#define smfdebni  _smf14_union7._smf14_struct3._smfdebni\n#define smfdebnp  _smf14_union7._smf14_struct3._smfdebnp\n#define smfdebno  _smf14_union7._smf14_struct3._smfdebno\n#define smfncyls  _smf14_union7._smf14_struct3._smfncyls\n#define smfnpcyl  _smf14_union7._smf14_struct3._smfnpcyl\n#define smfnocyl  _smf14_union7._smf14_struct3._smfnocyl\n#define smf14esl  _smf14_union7._smf14_struct4._smf14esl\n#define smf14sty  _smf14_union7._smf14_struct4._smf14sty\n#define smf14xf1  _smf14_union7._smf14_struct4._smf14xf1\n#define smf14xf2  _smf14_union7._smf14_struct4._smf14xf2\n#define smf14cdl  _smf14_union7._smf14_struct4._smf14cdl\n#define smf14udl  _smf14_union7._smf14_struct4._smf14udl\n#define smf14cds  _smf14_union7._smf14_struct4._smf14cds\n#define smf14uds  _smf14_union7._smf14_struct4._smf14uds\n#define smf14cis  _smf14_union7._smf14_struct4._smf14cis\n#define smf14tkl  _smf14_union7._smf14_struct4._smf14tkl\n#define smf14tkn  _smf14_union7._smf14_struct4._smf14tkn\n#define smf14mcn  _smf14_union7._smf14_struct5._smf14mcn\n#define smf14dcn  _smf14_union7._smf14_struct5._smf14dcn\n#define smf14scn  _smf14_union7._smf14_struct5._smf14scn\n#define smf14spn  _smf14_union7._smf14_struct6._smf14spn\n#define smf14pgn  _smf14_union7._smf14_struct6._smf14pgn\n#define smf14cfg  _smf14_union7._smf14_struct7._smf14cfg\n#define smf14usr  _smf14_union7._smf14_struct7._smf14usr\n#define smf14tpe  _smf14_union7._smf14_struct7._smf14tpe\n#define smf14lbl  _smf14_union7._smf14_struct7._smf14lbl\n#define smf14bfg  _smf14_union7._smf14_struct8._smf14bfg\n#define smf14lbs  _smf14_union7._smf14_struct8._smf14lbs\n#define smf14flgs _smf14_union7._smf14_struct8._smf14flgs\n#define smf14drd  _smf14_union7._smf14_struct9._smf14drd\n#define smf14drdh _smf14_union7._smf14_struct9._smf14drdh\n#define smf14mrd  _smf14_union7._smf14_struct9._smf14mrd\n#define smf14mrdh _smf14_union7._smf14_struct9._smf14mrdh\n#define smf14mce  _smf14_union7._smf14_struct9._smf14mce\n#define smf14mst  _smf14_union7._smf14_struct9._smf14mst\n#define smf14mnc  _smf14_union7._smf14_struct9._smf14mnc\n#define smf14mcf  _smf14_union7._smf14_struct9._smf14mcf\n#define smf14kl1  _smf14_union7._smf14_struct10._smf14kl1\n#define smf14cd1  _smf14_union7._smf14_struct10._smf14cd1\n#define smf14kl2  _smf14_union7._smf14_struct10._smf14kl2\n#define smf14nta  _smf14_union7._smf14_struct11._smf14nta\n#define smfioreq  _smf14_union7._smf14_struct11._smfioreq\n#define smfchits  _smf14_union7._smf14_struct11._smfchits\n#define smfnmwts  _smf14_union7._smf14_struct11._smfnmwts\n#define smfphios  _smf14_union7._smf14_struct11._smfphios\n#define smfcios   _smf14_union7._smf14_struct11._smfcios\n\n/* Values for field \"smf14rin\" */\n#define smf14rv0  128  /* RESERVED                                       */\n#define smf14eov  64   /* RECORD WRITTEN BY EOV                          */\n#define smf14dad  32   /* DASD DEVICE                                    */\n#define smf14tds  16   /* TEMPORARY DATA SET                             */\n#define smf14dda  8    /* DCBDSORG = DA                                  */\n#define smf14is   4    /* DCBDSORG = IS                                  */\n#define smf14jis  2    /* JFCDSORG = IS                                  */\n#define smf14vio  1    /* VIO DATA SET ACCESS                            */\n#define smf14ipd  0x80 /* PDSE DATA SET                                  */\n#define smf14trc  0x40 /* QSAM TRUNC MACRO HAS BEEN ISSUED FOR A PDSE    */\n#define smf14nsg  0x20 /* NULL SEGMENT ENCOUNTERED IN DATA SET           */\n#define smf14str  0x10 /* EXTENDED FORMAT SEQUENTIAL DATA SET      @P1C  */\n#define smf14hbt  0x08 /* HIPERBATCH SECTION PRESENT               @L1A  */\n#define smf14xsg  0x04 /* EXTENDED INFORMATION SEGMENT PRESENT     @L1A  */\n\n/* Values for field \"smf14edi\" */\n#define smf14ext  0x80 /* Data set name found in EDI exclusion table@L5A */\n#define smf14opo  0x40 /* Data set being opened for output but is   @L5A */\n#define smf14ino  0x20 /* Data set being opened for input but is    @L5A */\n#define smf14eps  0x10 /* Application requested EDI processing be   @L5A */\n\n/* Values for field \"smf14fg1\" */\n#define smf14lge  0x80 /* Large format sequential data set.         @P1C */\n\n/* Values for field \"smf14tda\" */\n#define smf148wn  0x80 /* RACF RC8 chg'd to RC0 (TAPEAUTHRC8=WARN)  @L7A */\n\n/* Values for field \"smf14sty\" */\n#define smf14xds  1    /* COMPRESSED FORMAT D/S TYPE CODE IS 1      @02C */\n#define smf14sms  2    /* SMS CLASS INFORMATION TYPE CODE IS 2      @03A */\n#define smf14stp  3    /* STEP INFORMATION TYPE CODE IS 3           @L2A */\n#define smf14av4  4    /* ANSI VERSION 4 CCSID TYPE CODE IS 4       @L3A */\n#define smf14adc  5    /* ADDTIONAL DATA SET CHARACTERISTICS TYPE   @L4A */\n#define smf14pdse 6    /* PDSE STATISTICS TYPE CODE IS 6            @L8A */\n#define smf14kekl 7    /* KEK LABEL DATA FOR TAPE ENCRYPTION        @L9A */\n\n/* Values for field \"smf14xf1\" */\n#define smf14lbd  0x80 /* COMPRESSED FORMAT DATA SET SIZE VALUES    @02C */\n#define smf14crj  0x40 /* COMPRESSION OF THIS DATA SET HAS BEEN     @L1A */\n\n/* Values for field \"smf14tkl\" */\n#define smf14t36  36   /* CURRENTLY TOKEN LENGTH IS 36 ONLY         @L1A */\n\n/* Values for field \"smf14cfg\" */\n#define smf14ibm  0x80 /* IBM VERSION 4 CREATED TAPE                @L3A */\n#define smf14out  0x40 /* OPENED FOR OUTPUT NOT DISP=MOD            @L3A */\n#define smf14mod  0x20 /* OPENED FOR OUTPUT DISP=MOD                @L3A */\n#define smf14udf  0x10 /* USR CCSID DEFAULTED                       @L3A */\n#define smf14tdf  0x08 /* TAPE CCSID DEFAULTED                      @L3A */\n#define smf14ign  0x04 /* TAPE CCSID WAS IGNORED                    @L3A */\n\n/* Values for field \"smf14bfg\" */\n#define smf14blk  0x80 /* BLOCK SIZE PRESENT                        @L4A */\n#define smf14flgp 0x40 /* FLAG FIELD PRESENT                        @L9A */\n\n/* Values for field \"smf14flgs\" */\n#define smf14upf  0x80 /* BSAM USER PGFIX OPTION FLAG(DEB2XUPF)     @L9A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30ACS": {"ttr": 8531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30acs \u00e4\n  unsigned char  smf30acl; /* LENGTH OF ACCOUNTING SECTION, */\n  unsigned char  smf30act; /* JOB OR STEP ACCOUNTING FIELD  */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30AR": {"ttr": 7975, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30ar \u00e4\n  int            smf30cn;     /* TOTAL NUMBER OF CONVERSATIONS    */\n  int            smf30cna;    /* TOTAL NUMBER OF CONVERSATIONS    */\n  int            smf30sen;    /* TOTAL NUMBER OF TIMES THE TP     */\n  unsigned char  smf30dat\u00c48\u00dc; /* TOTAL AMOUNT OF DATA SENT BY     */\n  int            smf30rec;    /* TOTAL NUMBER OF TIMES THE TP     */\n  unsigned char  smf30dar\u00c48\u00dc; /* TOTAL AMOUNT FO DATA RECIEVED    */\n  int            smf30tac;    /* TOTAL NUMBER OF ACTIVE      @DPA */\n  int            smf30atr;    /* NUMBER OF APPC/MVS TRANSACTIONS  */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30CAS": {"ttr": 7989, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30cas \u00e4\n  unsigned char  smf30pty\u00c42\u00dc;                      /* SCTSDP      ADDRESS SPACE DISPATCHING              */\n  union \u00e4\n    unsigned char  _smf30rv3\u00c42\u00dc; /* RESERVED                @G744PJW */\n    unsigned char  _smf30tfl\u00c42\u00dc; /* TIMER FLAGS-ALIAS           @0KA */\n    \u00fc _smf30cas_union1;\n  int            smf30cpt;                         /* D    ASCBEJST OR  STEP CPU TIME UNDER TCB @G744PJW */\n  int            smf30cps;                         /* D    ASCBSRBT OR  STEP CPU TIME UNDER SRB @G744PJW */\n  int            smf30icu;                         /* D    ASCBEJST +   INITIATOR CPU TIME UNDER TCB     */\n  int            smf30isb;                         /* D    ASCBSRBT +   INITIATOR CPU TIME UNDER SRB     */\n  int            smf30jvu;                         /* D    ASCBEVST OR  STEP VECTOR USAGE TIME      @H4A */\n  int            smf30ivu;                         /* D    ASCBEVST +   INITIATOR VECTOR USAGE TIME      */\n  int            smf30jva;                         /* D    ASCBVFAT OR  STEP VECTOR AFFINITY TIME   @D6A */\n  int            smf30iva;                         /* D    ASCBVFAT +   INITIATOR VECTOR AFFINITY TIME   */\n  int            smf30ist;                         /* INTERVAL START TIME, IN                            */\n  unsigned char  smf30idt\u00c44\u00dc;                      /* INTERVAL START DATE FOR     @L4A                   */\n  int            smf30iip;                         /* D    ASSBIIPT     AMOUNT OF PROCESSOR TIME USED TO */\n  int            smf30rct;                         /* D    TCBTTIME     AMOUNT OF PROCESSOR TIME USED BY */\n  int            smf30hpt;                         /* D    ASSBHST      PROCESSOR TIME CONSUMED FOR THE  */\n  int            smf30csc;                         /* D    ASSBFSC      INTEGRATED CRYPTOGRAPHIC SERVICE */\n  int            smf30dmi;                         /* D    ASSBTPMT     Number of pages moved with ADMF  */\n  int            smf30dmo;                         /* D    ASSBTPMA     Number of pages moved with ADMF  */\n  int            smf30asr;                         /* D    ASSBASST     Additional CPU time, in          */\n  int            smf30enc;                         /* D    RQSVECPT     Independent                      */\n  int            smf30det;                         /* D    RQSVDET      Dependent                        */\n  int            smf30cep;                         /* RqsvCPUtimeConsumedWhileENQpromoted                */\n  unsigned char  smf30tf2;                         /* More failure flags. Each flag                      */\n  unsigned char  smf30t32;                         /* More failure flags. Each flag                      */\n  unsigned char  smf30t33;                         /* More failure flags. Each flag                      */\n  unsigned char  _filler1;                         /* Reserved                    @H6C                   */\n  int            smf30_time_on_ifa;                /* ASSB_Time_On_IFA Time spent on IFA                 */\n  int            smf30_enclave_time_on_ifa;        /* Rqsv_Enclave_Time_On_IFA                           */\n  int            smf30_dep_enclave_time_on_ifa;    /* Rqsv_Dep_Enclave_Time_On_IFA                       */\n  int            smf30_time_ifa_on_cp;             /* ASSB_Time_IFA_ON_CP IFA CPU time spent on          */\n  int            smf30_enclave_time_ifa_on_cp;     /* Rqsv_Enclave_Time_IFA_ON_CP                        */\n  int            smf30_dep_enclave_time_ifa_on_cp; /* Rqsv_Dep_Enclave_Time_IFA_ON_CP                    */\n  int            smf30cepi;                        /* RqsvCPUtimeConsumedWhileENQpromoted                */\n  struct \u00e4\n    int            _smf30_time_on_sup;\n    \u00fc smf30_time_on_ziip;\n  struct \u00e4\n    int            _smf30_enclave_time_on_sup;\n    \u00fc smf30_enclave_time_on_ziip;\n  struct \u00e4\n    int            _smf30_depenc_time_on_sup;\n    \u00fc smf30_depenc_time_on_ziip;\n  struct \u00e4\n    int            _smf30_time_sup_on_cp;\n    \u00fc smf30_time_ziip_on_cp;\n  struct \u00e4\n    int            _smf30_enclave_time_sup_on_cp;\n    \u00fc smf30_enclave_time_ziip_on_cp;\n  struct \u00e4\n    int            _smf30_depenc_time_sup_on_cp;\n    \u00fc smf30_depenc_time_ziip_on_cp;\n  struct \u00e4\n    int            _smf30_enclave_time_sup_qual;\n    \u00fc smf30_enclave_time_ziip_qual;\n  struct \u00e4\n    int            _smf30_depenc_time_sup_qual;\n    \u00fc smf30_depenc_time_ziip_qual;\n  \u00fc;\n\n#define smf30rv3                     _smf30cas_union1._smf30rv3\n#define smf30tfl                     _smf30cas_union1._smf30tfl\n#define smf30_time_on_sup            smf30_time_on_ziip._smf30_time_on_sup\n#define smf30_enclave_time_on_sup    smf30_enclave_time_on_ziip._smf30_enclave_time_on_sup\n#define smf30_depenc_time_on_sup     smf30_depenc_time_on_ziip._smf30_depenc_time_on_sup\n#define smf30_time_sup_on_cp         smf30_time_ziip_on_cp._smf30_time_sup_on_cp\n#define smf30_enclave_time_sup_on_cp smf30_enclave_time_ziip_on_cp._smf30_enclave_time_sup_on_cp\n#define smf30_depenc_time_sup_on_cp  smf30_depenc_time_ziip_on_cp._smf30_depenc_time_sup_on_cp\n#define smf30_enclave_time_sup_qual  smf30_enclave_time_ziip_qual._smf30_enclave_time_sup_qual\n#define smf30_depenc_time_sup_qual   smf30_depenc_time_ziip_qual._smf30_depenc_time_sup_qual\n\n/* Values for field \"smf30tfl\" */\n#define smf30tfo                           0x80 /* BIT 0 - TIMER FLAGS ARE USED@0KA */\n#define smf30ctf                           0x40 /* BIT 1 - SMF30CPT INVALID    @0KA */\n#define smf30csf                           0x20 /* BIT 2 - SMF30CPS INVALID    @0KA */\n#define smf30vuf                           0x10 /* BIT 3 - SMF30JVU INVALID    @0KA */\n#define smf30vaf                           0x08 /* BIT 4 - SMF30JVA INVALID    @0KA */\n#define smf30isf                           0x04 /* BIT 5 - SMF30ISB INVALID    @0KA */\n#define smf30icf                           0x02 /* BIT 6 - SMF30ICU INVALID    @0KA */\n#define smf30ivf                           0x01 /* BIT 7 - SMF30IVU INVALID    @0KA */\n#define smf30iaf                           0x80 /* BIT 0 - SMF30IVA INVALID    @0KA */\n#define smf30iif                           0x40 /* BIT 1 - SMF30IIP INVALID    @0KA */\n#define smf30hpf                           0x20 /* BIT 2 - SMF30HPT INVALID    @0KA */\n#define smf30rcf                           0x10 /* BIT 3 - SMF30RCT INVALID    @0KA */\n#define smf30asf                           0x08 /* BIT 4 - SMF30ASR INVALID    @L7A */\n#define smf30enf                           0x04 /* BIT 5 - SMF30ENC INVALID    @L7A */\n#define smf30def                           0x02 /* BIT 6 - SMF30DET INVALID    @DWA */\n#define smf30cin                           0x01 /* BIT 7 - SMF30CEP INVALID    @PBA */\n\n/* Values for field \"smf30tf2\" */\n#define smf30_time_on_ifa_f                0x80 /* @H5A                             */\n#define smf30_enclave_time_on_ifa_f        0x40 /* @H5A                             */\n#define smf30_dep_enclave_time_on_ifa_f    0x20 /* @H5A                             */\n#define smf30_time_ifa_on_cp_f             0x10 /* @H5A                             */\n#define smf30_enclave_time_ifa_on_cp_f     0x08 /* @H5A                             */\n#define smf30_dep_enclave_time_ifa_on_cp_f 0x04 /* @H5A                             */\n#define smf30_cepi_f                       0x02 /* Failure in SMF30CEPI  @PAA       */\n\n/* Values for field \"smf30t32\" */\n#define smf30_time_on_ziip_f               0x80 /* @H6A                             */\n#define smf30_time_on_sup_f                0x80 /* @H6A                             */\n#define smf30_enclave_time_on_ziip_f       0x40 /* @H6A                             */\n#define smf30_enclave_time_on_sup_f        0x40 /* @H6A                             */\n#define smf30_depenc_time_on_ziip_f        0x20 /* @H6A                             */\n#define smf30_depenc_time_on_sup_f         0x20 /* @H6A                             */\n#define smf30_time_ziip_on_cp_f            0x10 /* @H6A                             */\n#define smf30_time_sup_on_cp_f             0x10 /* @H6A                             */\n#define smf30_enclave_time_ziip_on_cp_f    0x08 /* @H6A                             */\n#define smf30_enclave_time_sup_on_cp_f     0x08 /* @H6A                             */\n#define smf30_depenc_time_ziip_on_cp_f     0x04 /* @H6A                             */\n#define smf30_depenc_time_sup_on_cp_f      0x04 /* @H6A                             */\n\n/* Values for field \"smf30t33\" */\n#define smf30_enclave_time_on_ziip_n_f     0x80 /* @H6A                             */\n#define smf30_enclave_time_on_sup_n_f      0x80 /* @H6A                             */\n#define smf30_depenc_time_on_ziip_n_f      0x40 /* @H6A                             */\n#define smf30_depenc_time_on_sup_n_f       0x40 /* @H6A                             */\n#define smf30_enclave_time_ziip_qual_f     0x20 /* @H6A                             */\n#define smf30_enclave_time_sup_qual_f      0x20 /* @H6A                             */\n#define smf30_depenc_time_ziip_qual_f      0x10 /* @H6A                             */\n#define smf30_depenc_time_sup_qual_f       0x10 /* @H6A                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30CMP": {"ttr": 7949, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30cmp \u00e4\n  unsigned char  smf30scc\u00c42\u00dc; /* TCTCMPC     STEP COMPLETION CODE    @G742PJW */\n  unsigned char  smf30sti\u00c42\u00dc; /* STEP TERMINATION INDICATOR                   */\n  int            smf30arc;    /* TCBARC     ABEND REASON CODE       @G860P27  */\n  \u00fc;\n\n/* Values for field \"smf30scc\" */\n#define smf30uab 0x80 /* BIT0 - USER ABEND          @PEA             */\n\n/* Values for field \"smf30sti\" */\n#define smf30rs3 0x80 /* BIT0 - RESERVED            @PEC             */\n#define smf30ujv 0x40 /* JCTJMRCL    BIT1 - CANCELLED BY EXIT IEFUJV */\n#define smf30uji 0x20 /* BIT2 - CANCELLED BY EXIT IEFUJI             */\n#define smf30usi 0x10 /* BIT3 - CANCELLED BY EXIT IEFUSI             */\n#define smf30trt 0x08 /* BIT4 -CANCELLED BY EXIT IEFACTRT            */\n#define smf30srs 0x04 /* BIT5 - STEP IS TO BE RESTARTED              */\n#define smf30abd 0x02 /* TCBFA       BIT6 - IF ZERO, NORMAL          */\n#define smf30flh 0x01 /* TCTHWM      BIT7 - IF 0, NORMAL COMPLETION. */\n#define smf30exf 0x80 /* TCTIEX      BIT0 - EXCP COUNTS MIGHT BE     */\n#define smf30isk 0x40 /* TCTISK      BIT1 - PREVIOUS INTERVAL RECORD */\n#define smf30nex 0x20 /* BIT2 - EXCP SECTIONS NOT MERGED             */\n#define smf30sye 0x10 /* BIT3 - STEP ENDED WITH POST                 */\n#define smf30ere 0x08 /* BIT4 - STEP ENDED DUE TO OpenMVS            */\n#define smf30cde 0x04 /* BIT5 - JOB abnormally ended @0NA            */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30DR": {"ttr": 8219, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30dr \u00e4\n  int            smf30dc;     /* Number of conversations    */\n  int            smf30dca;    /* Number of all              */\n  int            smf30dsc;    /* Number of times the        */\n  unsigned char  smf30dds\u00c48\u00dc; /* Amount of data sent by the */\n  int            smf30drc;    /* Number of times the        */\n  unsigned char  smf30ddr\u00c48\u00dc; /* Amount of data received    */\n  int            smf30dac;    /* Number of active           */\n  int            smf30dtr;    /* Number of APPC/MVS         */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30EXP": {"ttr": 8033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30exp \u00e4\n  struct \u00e4\n    unsigned char  _smf30dev;    /* UCBTBYT3    DEVICE CLASS            @G742PJW */\n    unsigned char  _smf30utp;    /* UCBTBYT3    UNIT TYPE               @G742PJW */\n    unsigned char  _smf30cua\u00c42\u00dc; /* UCBCHAN     Device number               @LYC */\n    unsigned char  _smf30ddn\u00c48\u00dc; /* TIOEDDNM    DD NAME USED TO ACCESS THE DATA  */\n    \u00fc smf30key;\n  int            smf30blk;    /* D     TCTDCTR     COUNT OF BLOCKS ISSUED FOR THE */\n  unsigned char  smf30bsz\u00c42\u00dc; /* TCTBLKSZ    LARGEST BLOCKSIZE OF THE DATA        */\n  unsigned char  smf30dct\u00c44\u00dc; /* DEVICE CONNECT TIME FOR THIS                     */\n  unsigned char  smf30xbs\u00c48\u00dc; /* TCTXBLKS    BLOCKSIZE >32K              @LGA     */\n  \u00fc;\n\n#define smf30dev smf30key._smf30dev\n#define smf30utp smf30key._smf30utp\n#define smf30cua smf30key._smf30cua\n#define smf30ddn smf30key._smf30ddn\n\n/* Values for field \"smf30bsz\" */\n#define smf30cbs 0x80 /* INDICATES CHANGED BLOCKSIZE FOR */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30ID": {"ttr": 8483, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30id \u00e4\n  unsigned char  smf30jbn\u00c48\u00dc;  /* JMRJOB      JOB OR SESSION NAME. THE JOB     */\n  unsigned char  smf30pgm\u00c48\u00dc;  /* SCTPGMNM    PROGRAM NAME (TAKEN FROM PGM=    */\n  unsigned char  smf30stm\u00c48\u00dc;  /* SCTSNAME    STEP NAME (TAKEN FROM NAME ON    */\n  unsigned char  smf30uif\u00c48\u00dc;  /* JMRUSEID    User identification (taken       */\n  unsigned char  smf30jnm\u00c48\u00dc;  /* SSIB        JES JOB IDENTIFIER      @G742PJW */\n  unsigned char  smf30stn\u00c42\u00dc;  /* SCTSNUMB    STEP NUMBER (FIRST STEP = 1,     */\n  unsigned char  smf30cls;     /* JCTJCSMF    JOB CLASS. ZERO FOR TSO SESSION  */\n  unsigned char  smf30jf1;     /* Job / Session ID section flag                */\n  unsigned char  smf30pgn\u00c42\u00dc;  /* OUCBNPG     Job performance group number     */\n  unsigned char  smf30jpt\u00c42\u00dc;  /* JCTJPRTY    JES INPUT PRIORITY. IF NO VALUE  */\n  int            smf30ast;     /* TCTAST      DEVICE ALLOCATION START TIME     */\n  int            smf30pps;     /* TCTPPST     PROBLEM PROGRAM START TIME       */\n  int            smf30sit;     /* JCTJMRSS    TIME, IN HUNDREDTHS OF A SECOND  */\n  unsigned char  smf30std\u00c44\u00dc;  /* JCTSSD      DATE INITIATOR SELECTED THIS     */\n  int            smf30rst;     /* JMRENTRY    TIME, IN HUNDREDTHS OF A SECOND  */\n  unsigned char  smf30rsd\u00c44\u00dc;  /* JMREDATE    DATE READER RECOGNIZED THE JOB   */\n  struct \u00e4\n    int            _smf30ret;    /* TIME, IN HUNDREDTHS OF A SECOND, */\n    unsigned char  _smf30red\u00c44\u00dc; /* DATE READER RECOGNIZED THE END   */\n    \u00fc smf30rde;\n  unsigned char  smf30usr\u00c420\u00dc; /* ACTPRGNM    PROGRAMMERS NAME        @G742PJW */\n  unsigned char  smf30grp\u00c48\u00dc;  /* ACEEGRPN    RACF GROUP ID. 0=RACF NOT ACTIVE */\n  unsigned char  smf30rud\u00c48\u00dc;  /* ACEEUSRI    RACF USER ID. 0=RACF NOT ACTIVE  */\n  unsigned char  smf30tid\u00c48\u00dc;  /* ACEETRMF    RACF TERMINAL ID. THE FIELD IS   */\n  unsigned char  smf30tsn\u00c48\u00dc;  /* TSBTRMID    TERMINAL SYMBOLIC NAME      @DCA */\n  unsigned char  smf30psn\u00c48\u00dc;  /* SCTSCLPC    THE NAME OF THE STEP THAT        */\n  unsigned char  smf30cl8\u00c48\u00dc;  /* LCTCLASS    8-CHARACTER JOB CLASS.  BLANK    */\n  unsigned char  smf30iss\u00c48\u00dc;  /* TCTISS      Interval Start Time for          */\n  unsigned char  smf30iet\u00c48\u00dc;  /* SMCXINTE    Interval End Time for            */\n  int            smf30ssn;     /* SCTSSNUM    Sub-Step Number             @LQA */\n  unsigned char  smf30exn\u00c416\u00dc; /* OpenMVS Exec'ed program     @L5A             */\n  \u00fc;\n\n#define smf30ret smf30rde._smf30ret\n#define smf30red smf30rde._smf30red\n\n/* Values for field \"smf30jf1\" */\n#define smf30pgf 0x80 /* SMF30PGN is invalid         @PBA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30MSE": {"ttr": 8443, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30mse \u00e4\n  struct \u00e4\n    unsigned char  _smf30mrs\u00c48\u00dc; /* System name.                         @LFA */\n    int            _smf30mra;    /* Adjustment factor for CPU rate.      @LFA */\n    \u00fc smf30mky;\n  int            smf30mrd; /* CPU Time used by dependent enclaves  @LFA */\n  int            smf30mri; /* CPU Time used by independent         @LFA */\n  \u00fc;\n\n#define smf30mrs smf30mky._smf30mrs\n#define smf30mra smf30mky._smf30mra\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30OP": {"ttr": 8143, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30op \u00e4\n  int            smf30opi; /* Process ID                  @LUA          */\n  int            smf30opg; /* Process Group ID            @LUA          */\n  int            smf30oui; /* Process User ID             @LUA          */\n  int            smf30oug; /* Process User Group ID       @LUA          */\n  int            smf30osi; /* Process Session ID          @LUA          */\n  int            smf30osc; /* Total CPU time accumulated by             */\n  int            smf30ost; /* Number of OpenMVS Syscalls                */\n  int            smf30odr; /* Number of directory I/O blocks            */\n  int            smf30ofr; /* Number of I/O blocks read                 */\n  int            smf30ofw; /* Number of I/O blocks written              */\n  int            smf30opr; /* Number of I/O blocks read                 */\n  int            smf30opw; /* Number of I/O blocks written              */\n  int            smf30osr; /* Number of I/O blocks read                 */\n  int            smf30osw; /* Number of I/O blocks written              */\n  int            smf30oll; /* Number of path name Look calls            */\n  int            smf30olp; /* Number of path name Look calls            */\n  int            smf30ogl; /* Number of path name Generation            */\n  int            smf30ogp; /* Number of path name Generation            */\n  int            smf30opp; /* OpenMVS parent process ID number     @L5A */\n  int            smf30okr; /* Number of I/O blocks read for Remote      */\n  int            smf30okw; /* Number of I/O blocks written for          */\n  int            smf30oms; /* Number of bytes that message queues       */\n  int            smf30omr; /* Number of bytes that message queues       */\n  int            smf30osy; /* Number of sync() function calls      @LCA */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30OPS": {"ttr": 8043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30ops \u00e4\n  int            smf30pdm; /* TCTPDASD         NUMBER OF NON-SPECIFIC DASD    */\n  int            smf30prd; /* TCTRDASD         NUMBER OF SPECIFIC DASD MOUNTS */\n  int            smf30ptm; /* TCTPTAPE         NUMBER OF NON-SPECIFIC TAPE    */\n  int            smf30tpr; /* TCTRTAPE         NUMBER OF SPECIFIC TAPE MOUNTS */\n  int            smf30mtm; /* TCTPMSS          NUMBER OF NON-SPECIFIC MSS     */\n  int            smf30msr; /* TCTRMSS          NUMBER OF SPECIFIC MSS MOUNTS. */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30PRF": {"ttr": 8733, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30prf \u00e4\n  int            smf30srv;     /* D OUXBJBS +        TOTAL SERVICE UNITS     @G742PJW */\n  int            smf30csu;     /* D OUXBCPU          CPU SERVICE UNITS       @G742PJW */\n  int            smf30srb;     /* D OUXBSRB          SRB SERVICE UNITS       @G742PJW */\n  int            smf30io;      /* D OUXBIOC          I/O SERVICE UNITS       @G742PJW */\n  int            smf30mso;     /* D OUXBMSO          MSO SERVICE UNITS       @G742PJW */\n  int            smf30tat;     /* D OUXBJBT +        TRANSACTION ACTIVE TIME IN 1024- */\n  int            smf30sus;     /* D                  Copy of RmctAdjC when this SMF   */\n  int            smf30res;     /* D OUXBJBR          TRANSACTION RESIDENCY TIME IN    */\n  int            smf30trs;     /* D OUXBTRC          NUMBER OF TRANSACTIONS  @G742PJW */\n  unsigned char  smf30wlm\u00c48\u00dc;  /* Workload Name               @L1A                    */\n  unsigned char  smf30scn\u00c48\u00dc;  /* Service Class Name          @L1A                    */\n  unsigned char  smf30grn\u00c48\u00dc;  /* Resource Group Name         @L1A                    */\n  unsigned char  smf30rcn\u00c48\u00dc;  /* Reporting Class Name        @L1A                    */\n  int            smf30eta;     /* D RQSVETIM         Independent Enclave Transaction  */\n  int            smf30esu;     /* D RQSVECPU         Independent Enclave CPU          */\n  int            smf30etc;     /* D RQSVETRC         Independent Enclave Transaction  */\n  unsigned char  smf30pfl\u00c416\u00dc; /* D RQSVSCHEDENV  JCL SCHEDENV value          @LEA    */\n  int            smf30jqt;     /* D RQSVJCLCONVERSIONTIME JCL conversion time for     */\n  int            smf30rqt;     /* D RqsvSysOrResAffTime Resource and/or system        */\n  int            smf30hqt;     /* D RqsvIneligibleTime Hold time not due to system    */\n  int            smf30sqt;     /* D RqsvQueueTime    Time that job was eligible for   */\n  unsigned char  smf30pf1;     /* Performance section flags   @LEA                    */\n  unsigned char  smf30pf2;     /* Performance section flags                           */\n  unsigned char  smf30rs4;     /* Reserved                    @0GC                    */\n  unsigned char  smf30zep;     /* ZEP                         @0GA                    */\n  unsigned char  smf30jpn\u00c48\u00dc;  /* IWMCLSFY SUBCOLN Subsystem collection name          */\n  int            smf30msc;     /* MSO SDC, scaled by 10000    @0CA                    */\n  short int      smf30cpc;     /* CPU SDC, scaled by 10       @0CA                    */\n  short int      smf30loc;     /* IOC SDC, scaled by 10       @0CA                    */\n  short int      smf30src;     /* SRB SDC, scaled by 10       @0CA                    */\n  short int      smf30znf;     /* zAAP Normalization Factor                           */\n  short int      smf30snf;     /* zIIP Normalization Factor                           */\n  \u00fc;\n\n/* Values for field \"smf30pf1\" */\n#define smf30pfj 0x80 /* D RqsvResetBeforeInitiation Reset before     */\n#define smf30pfr 0x40 /* D RqsvResetAfterInitiation  Reset after      */\n#define smf30pff 0x20 /* D RqsvOperatorForcedInitiation               */\n#define smf30rtr 0x10 /* D RqsvJobReincarnated                        */\n#define smf30msi 0x08 /* D RqsvRSDIncomplete                          */\n#define smf30wmi 0x04 /* Job is executing in a workload               */\n#define smf30ccp 0x02 /* RasdCProtCpu      Service class assigned was */\n#define smf30csp 0x01 /* RasdCProtStg      Service class served was   */\n\n/* Values for field \"smf30pf2\" */\n#define smf30asp 0x80 /* RasdASProtStg     Address space was          */\n#define smf30sme 0x40 /* RasdTrxnMgmtExempt Address space cannot be   */\n#define smf30cpr 0x20 /* RasdCpuProtected  Address space is currently */\n#define smf30spr 0x10 /* RasdStgProtected  Address space is currently */\n#define smf30pin 0x08 /* The following fields contain                 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30PSS": {"ttr": 8019, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30pss \u00e4\n  unsigned char  smf30typ\u00c42\u00dc; /* SUB TYPE IDENTIFICATION FOR            */\n  unsigned char  smf30rs1\u00c42\u00dc; /* RESERVED                      @G744PJW */\n  unsigned char  smf30rvn\u00c42\u00dc; /* RECORD VERSION NUMBER C'05'       @D2C */\n  unsigned char  smf30pnm\u00c48\u00dc; /* SUBSYTEM OR PRODUCT NAME- SMF @G742PJW */\n  unsigned char  smf30osl\u00c48\u00dc; /* MVS PRODUCT LEVEL                 @DOA */\n  unsigned char  smf30syn\u00c48\u00dc; /* Current System Name Value         @L3A */\n  unsigned char  smf30syp\u00c48\u00dc; /* Sysplex name                      @05A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30RM": {"ttr": 7883, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30rm \u00e4\n  unsigned char  smf30rnm\u00c416\u00dc; /* Element Name                         @L3A              */\n  unsigned char  smf30rtp\u00c48\u00dc;  /* Element Type                         @L3A              */\n  unsigned char  smf30rrg\u00c416\u00dc; /* Restart Group for Element            @L3A              */\n  unsigned char  smf30rsn\u00c48\u00dc;  /* The system name for the system on    @L3A              */\n  int            smf30rgt;     /* -            Time (local) Element requested       @L3A */\n  unsigned char  smf30rgd;     /* -            Date Element requested REGISTER      @L3A */\n  unsigned char  _filler1\u00c43\u00dc;\n  int            smf30rwt;     /* -            Time (local) Element requested       @L3A */\n  unsigned char  smf30rwd;     /* -            Date Element requested WAITPRED      @L3A */\n  unsigned char  _filler2\u00c43\u00dc;\n  int            smf30ryt;     /* -            Time (local) Element was READY,      @L3A */\n  unsigned char  smf30ryd;     /* -            Date Element was READY, in the       @L3A */\n  unsigned char  _filler3\u00c43\u00dc;\n  int            smf30rtt;     /* -            Time (local) Element was             @L3A */\n  unsigned char  smf30rtd;     /* -            Date Element was DEREGISTERED, in    @L3A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF30SAP": {"ttr": 8727, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30sap \u00e4\n  unsigned char  smf30rsv\u00c42\u00dc;  /* RESERVED - NOTE THAT SMF30RGN,                      */\n  unsigned char  smf30sfl;     /* STORAGE FLAGS. IF STORAGE WAS                       */\n  unsigned char  smf30spk;     /* TCBPKF           STORAGE PROTECT KEY, IN THE FORM   */\n  unsigned char  smf30prv\u00c42\u00dc;  /* TCTHWM/1024      LARGEST AMOUNT OF STORAGE USED     */\n  unsigned char  smf30sys\u00c42\u00dc;  /* TCTLWM          LARGEST AMOUNT OF STORAGE USED      */\n  union \u00e4\n    int            _smf30pgi; /* D OUXBPIN +        NUMBER OF PAGES THAT WERE PAGED  */\n    int            _smf30pia; /* D OUXBPIN +        NUMBER OF PAGE-INS ALIAS    @LLA */\n    \u00fc _smf30sap_union1;\n  union \u00e4\n    int            _smf30pgo; /* D OUXBPOUT +       NUMBER OF PAGES THAT WERE PAGED  */\n    int            _smf30poa; /* D OUXBPOUT +       NUMBER OF PAGE-OUTS ALIAS   @LLA */\n    \u00fc _smf30sap_union2;\n  int            smf30cpm;     /* D OUXB             NUMBER OF ATTEMPTS TO READ DATA  */\n  int            smf30nsw;     /* D OUXBSWCT         NUMBER OF ADDRESS SPACE SWAP     */\n  int            smf30psi;     /* D OUXBSPIN +       NUMBER OF PAGES SWAPPED IN. THIS */\n  int            smf30pso;     /* D OUXBSPOT +       NUMBER OF PAGES SWAPPED OUT.     */\n  int            smf30vpi;     /* D OUXBVAMI +       NUMBER OF VIO PAGE INS FOR THIS  */\n  int            smf30vpo;     /* D OUXBVAMO +       NUMBER OF VIO PAGE OUTS FOR THIS */\n  int            smf30vpr;     /* D OUXBVAMR +       NUMBER OF VIO RECLAIMS  @G742PJW */\n  int            smf30cpi;     /* D OUXBCAPI +       NUMBER OF COMMON AREA PAGE-INS   */\n  int            smf30hpi;     /* D OUXBHSPI         NUMBER OF HIPERSPACE PAGE-INS    */\n  int            smf30lpi;     /* D OUXBLPAI         NUMBER OF LPA PAGE-INS  @G742PJW */\n  int            smf30hpo;     /* D OUXBHSPO         NUMBER OF HIPERSPACE PAGE-OUTS   */\n  int            smf30pst;     /* D OUXBSTCT +       NUMBER OF PAGES STOLEN FROM      */\n  double         smf30psc;     /* D OUCBPSS          NUMBER OF CPU PAGE SECONDS FOR   */\n  int            smf30rgb;     /* TCTRGNB        PRIVATE AREA SIZE IN BYTES, BELOW    */\n  int            smf30erg;     /* TCTERGNB       PRIVATE AREA SIZE IN BYTES, ABOVE    */\n  int            smf30arb;     /* TCTHWM         MAXIMUM VIRTUAL STORAGE IN BYTES     */\n  int            smf30ear;     /* TCTEHWM        MAXIMUM VIRTUAL STORAGE IN BYTES     */\n  int            smf30urb;     /* TCTLWM         MAXIMUM VIRTUAL STORAGE IN BYTES     */\n  int            smf30eur;     /* TCTELWM        MAXIMUM VIRTUAL STORAGE IN BYTES     */\n  unsigned char  smf30rgn\u00c44\u00dc;  /* TCTRSZ*2       REGION SIZE ESTABLISHED, IN 1K       */\n  int            smf30dsv;     /* RAXDSHWM       AMOUNT OF USER KEY DATA SPACE        */\n  int            smf30pie;     /* NUMBER OF UNBLOCKED PAGES THAT                      */\n  int            smf30poe;     /* NUMBER OF UNBLOCKED PAGES THAT                      */\n  int            smf30bia;     /* NUMBER OF BLOCKED PAGES THAT WERE                   */\n  int            smf30boa;     /* NUMBER OF BLOCKED PAGES THAT WERE                   */\n  int            smf30bie;     /* NUMBER OF BLOCKED PAGES THAT WERE                   */\n  int            smf30boe;     /* NUMBER OF BLOCKED PAGES THAT WERE                   */\n  int            smf30kia;     /* NUMBER OF BLOCKS THAT WERE PAGED                    */\n  int            smf30koa;     /* NUMBER OF BLOCKS THAT WERE PAGED                    */\n  int            smf30kie;     /* NUMBER OF BLOCKS THAT WERE PAGED                    */\n  int            smf30koe;     /* NUMBER OF BLOCKS THAT WERE PAGED                    */\n  double         smf30psf;     /* Number of CPU page seconds for the                  */\n  int            smf30pai;     /* Number of shared pages that were                    */\n  int            smf30pei;     /* Number of shared pages that were                    */\n  unsigned char  smf30ers\u00c48\u00dc;  /* Expanded storage page residency                     */\n  unsigned char  smf30mem\u00c48\u00dc;  /* MEMLIMIT value in 1MB units as                      */\n  unsigned char  smf30mes;     /* MEMLIMIT source               @0AA                  */\n  unsigned char  _filler1\u00c423\u00dc; /* Reserved                      @0AC                  */\n  \u00fc;\n\n#define smf30pgi _smf30sap_union1._smf30pgi\n#define smf30pia _smf30sap_union1._smf30pia\n#define smf30pgo _smf30sap_union2._smf30pgo\n#define smf30poa _smf30sap_union2._smf30poa\n\n/* Values for field \"smf30sfl\" */\n#define smf30vqr 0x80 /* EAADDRBT BIT     V=R IS SPECIFIED. THIS BIT HAS */\n#define smf30ucl 0x40 /* IEFUSI-REGION    IEFUSI CHANGED REGION LIMIT    */\n#define smf30ucm 0x20 /* IEFUSI-MEMLIMIT  IEFUSI CHANGED MEMLIMIT        */\n#define smf30sin 0x10 /* The following fields contain                    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30UD": {"ttr": 8251, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30ud \u00e4\n  unsigned char  smf30upo\u00c416\u00dc; /* Product Owner or Vendor Name         @06A */\n  unsigned char  smf30upn\u00c416\u00dc; /* Product Name                         @06A */\n  unsigned char  smf30upv\u00c48\u00dc;  /* Product Version                      @06A */\n  unsigned char  smf30upq\u00c48\u00dc;  /* Product Qualifer                     @06A */\n  unsigned char  smf30upi\u00c48\u00dc;  /* Product ID Value                     @06A */\n  int            smf30uct;     /* Product CPU Time (.01 Seconds)       @06A */\n  int            smf30ucs;     /* Product SRB Time (.01 Seconds)       @06A */\n  unsigned char  smf30urd\u00c48\u00dc;  /* Product 'Specific' Resource Data     @06A */\n  unsigned char  smf30udf;     /* Data format of value in SMF30URD     @06A */\n  unsigned char  smf30ufg;     /* Usage Entry Flags                    @06A */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                             @06A */\n  \u00fc;\n\n/* Values for field \"smf30ufg\" */\n#define smf30uun 0x80 /* UNAUTHORIZED REGISTER Requested      @06A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF30URA": {"ttr": 8091, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf30ura \u00e4\n  int            smf30inp;    /* SCTSMF      NUMBER OF CARD IMAGE RECORDS IN  */\n  int            smf30tep;    /* D    ASCBIOSC    Total blocks transferred    */\n  int            smf30tpt;    /* D    TCTLOUT     NUMBER OF TPUTS FOR A TSO   */\n  int            smf30tgt;    /* D    TCTLIN      NUMBER OF TGETS FOR A TSO   */\n  unsigned char  smf30rdr;    /* JMRRDR      READER DEVICE CLASS     @G742PJW */\n  unsigned char  smf30rdt;    /* JMRRDR      READER DEVICE TYPE      @G742PJW */\n  unsigned char  smf30tcn\u00c44\u00dc; /* ASCBDCTI    TOTAL DEVICE CONNECT TIME FOR    */\n  unsigned char  smf30dcf;    /* DEVICE CONNECT FLAGS   @ZMC2889              */\n  unsigned char  smf30rs2\u00c43\u00dc; /* RESERVED               @ZMC2889              */\n  short int      smf30rsb;    /* RESERVED FOR BOUNDARY      @D9A              */\n  int            smf30trr;    /* ASSBASRR-   TOTAL ADDRESS SPACE RE-READ @D9A */\n  int            smf30aic;    /* DASD I/O connect time for                    */\n  int            smf30aid;    /* DASD I/O disconnect time for                 */\n  int            smf30aiw;    /* DASD I/O pending plus control                */\n  int            smf30ais;    /* DASD I/O start subchannel count              */\n  int            smf30eic;    /* DASD I/O connect time for                    */\n  int            smf30eid;    /* DASD I/O disconnect time for                 */\n  int            smf30eiw;    /* DASD I/O pending plus control                */\n  int            smf30eis;    /* DASD I/O start subchannel count              */\n  double         smf30tex;    /* D    ASCBIOSX    Total blocks transferred    */\n  \u00fc;\n\n/* Values for field \"smf30dcf\" */\n#define smf30mfl 0x80 /* DEVICE CONNECT TIME MAY BE      */\n#define smf30iin 0x40 /* The following fields contain    */\n#define smf30tef 0x20 /* SMF30TEP invalid when set  @0EA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4": {"ttr": 7961, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4 \u00e4\n  unsigned char  smf4len\u00c42\u00dc;  /* RECORD LENGTH                                  */\n  unsigned char  smf4seg\u00c42\u00dc;  /* SEGMENT DESCRIPTOR                             */\n  unsigned char  smf4flg;     /* HEADER FLAG BYTE                               */\n  unsigned char  smf4rty;     /* RECORD TYPE 4                                  */\n  unsigned char  smf4tme\u00c44\u00dc;  /* TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL. */\n  unsigned char  smf4dte\u00c44\u00dc;  /* DATE IN PACKED DECIMAL FORM: OOYYDDDF          */\n  unsigned char  smf4sid\u00c44\u00dc;  /* SYSTEM IDENTIFICATION                   Y02901 */\n  unsigned char  smf4jbn\u00c48\u00dc;  /* JOB NAME                                       */\n  unsigned char  smf4rst\u00c44\u00dc;  /* READER START TIME (IN 100THS SECONDS)          */\n  unsigned char  smf4rsd\u00c44\u00dc;  /* READER START DATE                              */\n  unsigned char  smf4uif\u00c48\u00dc;  /* USER IDENTIFICATION FIELD                      */\n  unsigned char  smf4stn;     /* STEP NUMBER                                    */\n  unsigned char  smf4sit\u00c44\u00dc;  /* STEP INITIATION TIME (IN 100THS SECONDS)       */\n  unsigned char  smf4stid\u00c44\u00dc; /* STEP INITIATION DATE (PACKED DECIMAL FORMAT)   */\n  unsigned char  smf4nci\u00c44\u00dc;  /* NUMBER OF CARD IMAGES IN DD DATA OR DD *       */\n  unsigned char  smf4scc\u00c42\u00dc;  /* STEP COMPLETION CODE                  @G50FPRL */\n  unsigned char  smf4prty;    /* PRIORITY AT WHICH STEP WAS DISPATCHED :        */\n  unsigned char  smf4pgmn\u00c48\u00dc; /* PROGRAM NAME                                   */\n  unsigned char  smf4stmn\u00c48\u00dc; /* STEP NAME                                      */\n  unsigned char  smf4rsv5\u00c42\u00dc; /* RESERVED                                  @PVC */\n  unsigned char  smf4syst\u00c42\u00dc; /* SYSTEM AREA USED(TOP OF PROVATE AREA)   Y02901 */\n  unsigned char  smf4h0st\u00c42\u00dc; /* STORAGE USED(VIRT OR REAL-SEE SMF4RIN)         */\n  unsigned char  smf4rv1\u00c42\u00dc;  /* RESERVED                                  @PVC */\n  unsigned char  smf4rsh0\u00c44\u00dc; /* REGION SIZE REQ(PRIVATE AREA 1K UNIT)     @PVM */\n  unsigned char  smf4spk;     /* STORAGE PROTECT KEY                     A40791 */\n  unsigned char  smf4sti;     /* STEP TERMINATION INDICATOR                     */\n  unsigned char  smf4rv2\u00c42\u00dc;  /* RESERVED                                A40791 */\n  unsigned char  smf4ast\u00c44\u00dc;  /* DEVICE ALLOC START TIME                 A40791 */\n  unsigned char  smf4ppst\u00c44\u00dc; /* PROBLEM PROGRAM START TIME              A40791 */\n  unsigned char  smf4rv3;     /* RESERVED                              @YL026WA */\n  unsigned char  smf4srbt\u00c43\u00dc; /* STEP CPU TIME UNDER SRB(.01 SEC)      @YL026WA */\n  unsigned char  smf4rin\u00c42\u00dc;  /* RECORD INDICATORS                              */\n  unsigned char  smf4rlct\u00c42\u00dc; /* OFFSET TO RELOCATE SECTION                     */\n  unsigned char  smf4lenn\u00c42\u00dc; /* LENGTH OF EXCP PORTION OF RECORD               */\n  union \u00e4\n    unsigned char  _smf4devc; /* DEVICE CLASS                          */\n    unsigned char  _smf4lnth; /* TOTAL LENGTH OF CPU AND ACCT. SECTION */\n    \u00fc _smf4_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _smf4utyp;    /* UNIT TYPE                                      */\n      unsigned char  _smf4cuad\u00c42\u00dc; /* Device Number                             @LYC */\n      \u00fc _smf4_struct1;\n    unsigned char  _smf4setm\u00c43\u00dc; /* RESERVED                                 @LAC */\n    \u00fc _smf4_union2;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _smf4excp\u00c44\u00dc; /* COUNT OF EXCP'S ISSUED FOR THE DEVICE AND */\n      unsigned char  _filler1;\n      \u00fc _smf4_struct2;\n    struct \u00e4\n      unsigned char  _smf4naf;     /* NUMBER OF ACCOUNTING FIELDS                */\n      unsigned char  _smf4actf;    /* EXEC STATEMENT ACCOUNTING FIELDS(VARIABLE) */\n      unsigned char  _filler2\u00c43\u00dc;\n      \u00fc _smf4_struct3;\n    struct \u00e4\n      unsigned char  _filler3;\n      unsigned char  _smf4pgin\u00c44\u00dc; /* NUMBER OF PAGE-INS */\n      \u00fc _smf4_struct4;\n    \u00fc _smf4_union3;\n  unsigned char  smf4pgot\u00c44\u00dc; /* NUMBER OF PAGE-OUTS                            */\n  unsigned char  smf4nsw\u00c44\u00dc;  /* NUM OF SWAPS                            Y02901 */\n  unsigned char  smf4psi\u00c44\u00dc;  /* PAGES SWAPPED IN                        Y02901 */\n  unsigned char  smf4pso\u00c44\u00dc;  /* PAGES SWAPPED OUT                       Y02901 */\n  unsigned char  smf4vpi\u00c44\u00dc;  /* VAM PAGE INS                            Y02132 */\n  unsigned char  smf4vpo\u00c44\u00dc;  /* VAM PAGE OUTS                           Y02132 */\n  unsigned char  smf4sst\u00c44\u00dc;  /* STEP SERVICE TIME           @YM07459           */\n  unsigned char  smf4act\u00c44\u00dc;  /* STEP ACTIVE TIME            @YM07459           */\n  unsigned char  smf4pgno\u00c42\u00dc; /* Step performance group number:          @LZC   */\n  unsigned char  smf4tran\u00c44\u00dc; /* STEP TRANSACTION RESIDENCY TIME     @Z40FPPF   */\n  unsigned char  smf4cpm\u00c44\u00dc;  /* CREAD PAGE MISS COUNT                   @DFC   */\n  unsigned char  smf4rclm\u00c44\u00dc; /* NUMBER OF VIO RECLAIMS              @Z40FPPF   */\n  unsigned char  smf4cpgn\u00c44\u00dc; /* NUMBER OF COMMON PAGE-INS           @Z40FPPF   */\n  unsigned char  smf4hspi\u00c44\u00dc; /* HIPERSPACE PAGE IN COUNT                @LBC   */\n  unsigned char  smf4pgst\u00c44\u00dc; /* NUMBER OF PAGES STOLEN FROM         @Z40FPPF   */\n  unsigned char  smf4psec\u00c48\u00dc; /* COUNT OF PAGE SECONDS               @Z40FPPF   */\n  unsigned char  smf4lpai\u00c44\u00dc; /* LPA PAGE INS                        @G50FPRL   */\n  unsigned char  smf4hspo\u00c44\u00dc; /* HIPERSPACE PAGE OUT COUNT               @LBC   */\n  unsigned char  smf4cpus\u00c44\u00dc; /* STEP CPU SERVICE                    @G50FPRL   */\n  unsigned char  smf4iocs\u00c44\u00dc; /* STEP I/O SERVICE                    @G50FPRL   */\n  unsigned char  smf4msos\u00c44\u00dc; /* STEP MAIN STORAGE SERVICE           @G50FPRL   */\n  unsigned char  smf4srbs\u00c44\u00dc; /* STEP SRB SERVICE                    @G50FPRL   */\n  unsigned char  smf4rsv1\u00c48\u00dc; /* RESERVED                            @YA15607   */\n  \u00fc;\n\n#define smf4devc _smf4_union1._smf4devc\n#define smf4lnth _smf4_union1._smf4lnth\n#define smf4utyp _smf4_union2._smf4_struct1._smf4utyp\n#define smf4cuad _smf4_union2._smf4_struct1._smf4cuad\n#define smf4setm _smf4_union2._smf4setm\n#define smf4excp _smf4_union3._smf4_struct2._smf4excp\n#define smf4naf  _smf4_union3._smf4_struct3._smf4naf\n#define smf4actf _smf4_union3._smf4_struct3._smf4actf\n#define smf4pgin _smf4_union3._smf4_struct4._smf4pgin\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF42": {"ttr": 7885, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42 \u00e4\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        short int      _smf42rcl;    /* Record Length                              */\n        short int      _smf42sgd;    /* Segment Descriptor (RDW) -- 0 if record is */\n        unsigned char  _smf42flg;    /* System indicator flags                     */\n        char           _smf42rty;    /* Record type: 42 (X'2A')                    */\n        unsigned char  _filler1\u00c42\u00dc;\n        \u00fc smf42bas;\n      unsigned char  _filler2\u00c42\u00dc;\n      \u00fc _smf42_struct1;\n    struct \u00e4\n      unsigned char  _filler3\u00c46\u00dc;\n      int            _smf42tme;\n      \u00fc _smf42_struct2;\n    \u00fc _smf42_union1;\n  unsigned char  smf42dte\u00c44\u00dc; /* Record written date (by SMF)   */\n  unsigned char  smf42sid\u00c44\u00dc; /* System identification (by SMF) */\n  unsigned char  smf42ssi\u00c44\u00dc; /* Subsystem Id                   */\n  short int      smf42sty;    /* Record subtype                 */\n  short int      smf42nt;     /* Number of triplets (optional)  */\n  short int      _filler4;    /* Reserved (optional)            */\n  int            smf42ops;    /* Offset to product section      */\n  short int      smf42lps;    /* Length of product section      */\n  short int      smf42nps;    /* Number of product sections     */\n  unsigned char  smf42end;    /* 1st data section triplet       */\n  \u00fc;\n\n#define smf42rcl _smf42_union1._smf42_struct1.smf42bas._smf42rcl\n#define smf42sgd _smf42_union1._smf42_struct1.smf42bas._smf42sgd\n#define smf42flg _smf42_union1._smf42_struct1.smf42bas._smf42flg\n#define smf42rty _smf42_union1._smf42_struct1.smf42bas._smf42rty\n#define smf42tme _smf42_union1._smf42_struct2._smf42tme\n\n/* Values for field \"smf42flg\" */\n#define smf42fsi  0x80 /* When set=subsystem id follows system id */\n#define smf42fsu  0x40 /* When set = subtypes are used            */\n#define smf42fxa  0x04 /* When set = MVS/XA (SMF enters)          */\n#define smf42fs2  0x02 /* When set = VS2 (SMF enters)             */\n#define smf42fs1  0x01 /* When set = VS1 (SMF enters)             */\n\n/* Values for field \"smf42end\" */\n#define smf42_len 0x24\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42D6": {"ttr": 7877, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s6 \u00e4\n  int            smf42jho; /* Offset to job header section  */\n  short int      smf42jhl; /* Length of job header section  */\n  short int      smf42jhn; /* Number of job header sections */\n  \u00fc;\n\n/* Values for field \"smf42jhn\" */\n#define smf42l6     8    /* Length of subtype 6 header section       */\n#define smf42ln     36   /* Length of beginning SMF42 header section */\n#define smf42s6_len 0x08\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42LA0": {"ttr": 8023, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42la0 \u00e4\n  short int      smf42lal;     /* Length of the alias name that@L2A */\n  unsigned char  smf42lan\u00c463\u00dc; /* Alias name that was deleted  @L2A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF42PA0": {"ttr": 8103, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42pa0 \u00e4\n  short int      smf42pal;     /* Length of the alias name which was */\n  unsigned char  smf42pan\u00c463\u00dc; /* Alias name that was deleted        */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF42PRD": {"ttr": 8513, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42prd \u00e4\n  unsigned char  smf42pdl\u00c48\u00dc;  /* Product Level                                */\n  unsigned char  smf42pdn\u00c410\u00dc; /* Product Name                                 */\n  unsigned char  smf42psv;     /* Subtype version number                  @P1A */\n  unsigned char  _filler1;     /* Reserved                                @P1C */\n  unsigned char  smf42pts\u00c48\u00dc;  /* Interval Start or Open TOD                   */\n  unsigned char  smf42pte\u00c48\u00dc;  /* Interval End or Close TOD                    */\n  unsigned char  _filler2\u00c44\u00dc;  /* Reserved                                     */\n  \u00fc;\n\n/* Values for field \"_filler2\" */\n#define smf42pln     40   /* Length of Product Section                    */\n#define smf42pvr     1    /* Product Section Version                 @P1A */\n#define smf42prd_len 0x28\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SA": {"ttr": 8685, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sa \u00e4\n  int            smf42vsf; /* Offset to Volume Selection Failure data @23A */\n  short int      smf42vsl; /* Length of Volume Selection Failure data @23A */\n  short int      smf42vsn; /* Number of Volume Selection Failure data @23A */\n  \u00fc;\n\n/* Values for field \"smf42vsn\" */\n#define smf42la     8    /* Length of subtype 10 header section     @23A */\n#define smf42sa_len 0x08 /* @23A                                         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SB": {"ttr": 8369, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sb \u00e4\n  int            smf42xro; /* Offset to XRC statistics                @07A */\n  short int      smf42xrl; /* Length of XRC statistics                @07A */\n  short int      smf42xrn; /* Number of XRC sessions                  @07A */\n  \u00fc;\n\n/* Values for field \"smf42xrn\" */\n#define smf42lb     8    /* Length of subtype 11 header section     @07A */\n#define smf42sb_len 0x08 /* @07A                                         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SF": {"ttr": 8207, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sf \u00e4\n  int            smf42fc1; /* Offset to SYSPLEX wide SC           */\n  short int      smf42fc2; /* Length of SYSPLEX wide SC           */\n  short int      smf42fc3; /* Number of SYSPLEX wide SC           */\n  int            smf42fc4; /* Offset to SC/CF/SYS                 */\n  short int      smf42fc5; /* Length of SC/CF/SYS                 */\n  short int      smf42fc6; /* Number of SC/CF/SYS                 */\n  int            smf2afc1; /* Offset to SYSPLEX wide SC      @64A */\n  short int      smf2afc2; /* Length of SYSPLEX wide SC      @64A */\n  short int      smf2afc3; /* Number of SYSPLEX wide SC      @64A */\n  int            smf2afc4; /* Offset to SC/CF/SYS            @64A */\n  short int      smf2afc5; /* Length of SC/CF/SYS            @64A */\n  short int      smf2afc6; /* Number of SC/CF/SYS            @64A */\n  \u00fc;\n\n/* Values for field \"smf2afc6\" */\n#define smf42lf 0x20 /* Length of subtype 15 header */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SG": {"ttr": 7925, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sg \u00e4\n  int            smf42gd1; /* Offset to SYSPLEX wide data set     */\n  short int      smf42gd2; /* Length of SYSPLEX wide data set     */\n  short int      smf42gd3; /* Number of SYSPLEX wide data set     */\n  int            smf42gd4; /* Offset to data set/CF/SYS           */\n  short int      smf42gd5; /* Length of data set/CF/SYS           */\n  short int      smf42gd6; /* Number of data set/CF/SYS           */\n  int            smf2agd1; /* Offset to SYSPLEX wide data    @64A */\n  short int      smf2agd2; /* Length of SYSPLEX wide data    @64A */\n  short int      smf2agd3; /* Number of SYSPLEX wide data    @64A */\n  int            smf2agd4; /* Offset to data set/CF/SYS      @64A */\n  short int      smf2agd5; /* Length of data set/CF/SYS      @64A */\n  short int      smf2agd6; /* Number of data set/CF/SYS      @64A */\n  \u00fc;\n\n/* Values for field \"smf2agd6\" */\n#define smf42lg 0x20 /* Length of subtype 16 header */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SH": {"ttr": 7931, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sh \u00e4\n  int            smf42hl1; /* Offset to MVS SYS lock structure */\n  short int      smf42hl2; /* Length of MVS SYS lock structure */\n  short int      smf42hl3; /* Number of MVS SYS lock structure */\n  int            smf42hl4; /* Offset to lock structure         */\n  short int      smf42hl5; /* Length of lock structure         */\n  short int      smf42hl6; /* Number of lock structure         */\n  \u00fc;\n\n/* Values for field \"smf42hl6\" */\n#define smf42lh 0x10 /* Length of subtype 9 header */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SI": {"ttr": 8651, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42si \u00e4\n  int            smf42im1; /* Offset to CF cache partition        */\n  short int      smf42im2; /* Length of CF cache partition        */\n  short int      smf42im3; /* Number of CF cache partition        */\n  int            smf42im4; /* Offset to single cache partition    */\n  short int      smf42im5; /* Length of single CF cache           */\n  short int      smf42im6; /* Number of single CF cache           */\n  int            smf42im7; /* Offset to directory/element    @11A */\n  short int      smf42im8; /* Length of directory/element    @11A */\n  short int      smf42im9; /* Number of directory/element    @11A */\n  \u00fc;\n\n/* Values for field \"smf42im9\" */\n#define smf42li 0x18 /* Length of subtype 18 header */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SJ": {"ttr": 7993, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sj \u00e4\n  int            smf42jn1; /* Offset to Buffer Manager LRU   @11A */\n  short int      smf42jn2; /* Length of Buffer Manager LRU   @11A */\n  short int      smf42jn3; /* Number of Buffer Manager LRU   @11A */\n  int            smf42jn4; /* Offset to Buffer Manager LRU   @11A */\n  short int      smf42jn5; /* Length of Buffer Manager LRU   @11A */\n  short int      smf42jn6; /* Number of Buffer Manager LRU   @11A */\n  int            smf2ajn1; /* Offset to Buffer Manager LRU   @64A */\n  short int      smf2ajn2; /* Length of Buffer Manager LRU   @64A */\n  short int      smf2ajn3; /* Number of Buffer Manager LRU   @64A */\n  int            smf2ajn4; /* Offset to Buffer Manager LRU   @64A */\n  short int      smf2ajn5; /* Length of Buffer Manager LRU   @64A */\n  short int      smf2ajn6; /* Number of Buffer Manager LRU   @64A */\n  \u00fc;\n\n/* Values for field \"smf2ajn6\" */\n#define smf42lj 0x20 /* Length of subtype 19 header    @11A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SK": {"ttr": 7939, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sk \u00e4\n  int            smf42kn1; /* Offset to STOW Initialize      @L2A */\n  short int      smf42kn2; /* Length of STOW Initialize      @L2A */\n  short int      smf42kn3; /* Number of STOW Initialize      @L2A */\n  int            smf42kn4; /* Offset to Additional Info      @26A */\n  short int      smf42kn5; /* Length of Additional Info      @26A */\n  short int      smf42kn6; /* Number of Additional Info      @26A */\n  \u00fc;\n\n/* Values for field \"smf42kn6\" */\n#define smf42lk 0x10 /* Length of subtype 20 header    @L2A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SL": {"ttr": 8195, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sl \u00e4\n  int            smf42ln1; /* Offset to Member Delete        @L2A */\n  short int      smf42ln2; /* Length of Member delete        @L2A */\n  short int      smf42ln3; /* Number of Member delete        @L2A */\n  int            smf42ln4; /* Offset to Deleted alias names  @L2A */\n  short int      smf42ln5; /* Length of Deleted alias names  @L2A */\n  short int      smf42ln6; /* Number of Deleted alias names  @L2A */\n  int            smf42ln7; /* Offset to Additional Info      @26A */\n  short int      smf42ln8; /* Length of Additional Info      @26A */\n  short int      smf42ln9; /* Number of Additional Info      @26A */\n  \u00fc;\n\n/* Values for field \"smf42ln9\" */\n#define smf42ll 0x18 /* Length of subtype 21 header    @L2A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SM": {"ttr": 8725, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sm \u00e4\n  int            smf4222aud; /* Offset to audit section                  @MZA */\n  short int      smf4222lad; /* Length of audit section                  @MZA */\n  short int      smf4222nad; /* Number of audit sections                 @MZA */\n  int            smf4222rec; /* Offset to record section                 @MZA */\n  short int      smf4222lrc; /* Length of record section                 @MZA */\n  short int      smf4222nrc; /* Number of record sections                @MZA */\n  unsigned char  smf4222end; /* End of audit section                     @MZA */\n  \u00fc;\n\n/* Values for field \"smf4222end\" */\n#define smf4222len 0x10 /* Length of subtype 22 header section      @MZA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SN": {"ttr": 8221, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sn \u00e4\n  int            smf4223sec; /* Offset to security section               @MZA */\n  short int      smf4223lsc; /* Length of security section               @MZA */\n  short int      smf4223nsc; /* Number of security sections              @MZA */\n  unsigned char  smf4223end; /* End of security section                  @MZA */\n  \u00fc;\n\n/* Values for field \"smf4223end\" */\n#define smf4223len 0x08 /* Length of subtype 23 header section      @MZA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SP": {"ttr": 8741, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sp \u00e4\n  int            smf42pn1; /* Offset to Member add/replace   @26A */\n  short int      smf42pn2; /* Length of Member add/replace   @26A */\n  short int      smf42pn3; /* Number of Member add/replace   @26A */\n  int            smf42pn4; /* Offset to alias names          @26A */\n  short int      smf42pn5; /* Length of alias names          @26A */\n  short int      smf42pn6; /* Number of alias names          @26A */\n  int            smf42pn7; /* Offset to Additional Info      @26A */\n  short int      smf42pn8; /* Length of Additional Info      @26A */\n  short int      smf42pn9; /* Number of Additional Info      @26A */\n  \u00fc;\n\n/* Values for field \"smf42pn9\" */\n#define smf42pl 0x18 /* Length of subtype 24 header    @26A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42SQ": {"ttr": 8487, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42sq \u00e4\n  int            smf42qn1; /* Offset to Member rename        @26A */\n  short int      smf42qn2; /* Length of Member rename        @26A */\n  short int      smf42qn3; /* Number of Member rename        @26A */\n  int            smf42qn4; /* Offset to old member name      @26A */\n  short int      smf42qn5; /* Length of old member name      @26A */\n  short int      smf42qn6; /* Number of old member name      @26A */\n  int            smf42qn7; /* Offset to Additional Info      @26A */\n  short int      smf42qn8; /* Length of Additional Info      @26A */\n  short int      smf42qn9; /* Number of Additional Info      @26A */\n  \u00fc;\n\n/* Values for field \"smf42qn9\" */\n#define smf42ql 0x18 /* Length of subtype 25 header    @26A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42S1": {"ttr": 8639, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s1 \u00e4\n  int            smf42bmo; /* Offset to BMF totals section             */\n  short int      smf42bml; /* Length of BMF totals section             */\n  short int      smf42bmn; /* Number of BMF totals sections            */\n  int            smf42sco; /* Offset to storage class summary section  */\n  short int      smf42scl; /* Length of storage class summary section  */\n  short int      smf42scn; /* Number of storage class summary sections */\n  \u00fc;\n\n/* Values for field \"smf42scn\" */\n#define smf42l1     16   /* Length of subtype 1 header section */\n#define smf42s1_len 0x10\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42S2": {"ttr": 8617, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s2 \u00e4\n  int            smf42cuo; /* Offset to control unit cache section  */\n  short int      smf42cul; /* Length of control unit cache section  */\n  short int      smf42cun; /* Number of control unit cache sections */\n  int            smf42vlo; /* Offset to volume section              */\n  short int      smf42vll; /* Length of volume section              */\n  short int      smf42vln; /* Number of volume sections             */\n  \u00fc;\n\n/* Values for field \"smf42vln\" */\n#define smf42l2     16   /* Length of subtype 2 header section */\n#define smf42s2_len 0x10\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42S3": {"ttr": 8059, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s3 \u00e4\n  int            smf42eao; /* Offset to event audit section  */\n  short int      smf42eal; /* Length of event audit section  */\n  short int      smf42ean; /* Number of event audit sections */\n  \u00fc;\n\n/* Values for field \"smf42ean\" */\n#define smf42l3     8    /* Length of subtype 3 header section */\n#define smf42s3_len 0x08\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42S4": {"ttr": 8417, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s4 \u00e4\n  int            smf42cco; /* Offset to CC statistics             @OY66824 */\n  short int      smf42ccl; /* Length of CC statistics             @OY66824 */\n  short int      smf42ccn; /* Number of CC sessions               @OY66824 */\n  int            smf42exo; /* Offset to EXT statistics            @OY66824 */\n  short int      smf42exl; /* Length of EXT statistics            @OY66824 */\n  short int      smf42exn; /* Number of EXT sessions              @OY66824 */\n  int            smf42vco; /* Offset to VCC statistics                @65a */\n  short int      smf42vcl; /* Length of VCC statistics                @65a */\n  short int      smf42vcn; /* Number of VCC sessions                  @65a */\n  \u00fc;\n\n/* Values for field \"smf42vcn\" */\n#define smf42l4     0x18 /* Length of subtype 4 header section      @65C */\n#define smf42s4_len 0x18 /* @OY66824                                     */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42S5": {"ttr": 8277, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s5 \u00e4\n  int            smf42sro; /* Offset to storage class response time section */\n  short int      smf42srl; /* Length of storage class response time section */\n  short int      smf42srn; /* Number of storage class response time         */\n  int            smf42vho; /* Offset to volume header section          @P1A */\n  short int      smf42vhl; /* Length of volume header section          @P1A */\n  short int      smf42vhn; /* Number of volume header sections (=1)    @P1A */\n  \u00fc;\n\n/* Values for field \"smf42vhn\" */\n#define smf42l5     0x10 /* Length of subtype 5 header section       @P1C */\n#define smf42s5_len 0x10\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF42S9": {"ttr": 8567, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf42s9 \u00e4\n  int            smf42abo; /* Offset to X37 abend section             @P1A */\n  short int      smf42abl; /* Length of X37 abend section             @P1A */\n  short int      smf42abn; /* Number of X37 abend sections (always 1) @P1A */\n  int            smf42smo; /* Offset to SMS data section              @P1A */\n  short int      smf42sml; /* Length of SMS data section              @P1A */\n  short int      smf42smn; /* Number of SMS data sections (always 1)  @P1A */\n  \u00fc;\n\n/* Values for field \"smf42smn\" */\n#define smf42l9     16   /* Length of subtype 9 header section      @P1A */\n#define smf42s9_len 0x10\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420AA": {"ttr": 8509, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420aa \u00e4\n  struct \u00e4\n    unsigned char  _smf42jbn\u00c48\u00dc;   /* JOBNAME                                   @23A */\n    unsigned char  _smf42pgn\u00c48\u00dc;   /* Program name                              @23A */\n    unsigned char  _smf42stn\u00c48\u00dc;   /* Step name                                 @23A */\n    unsigned char  _smf42ddn\u00c48\u00dc;   /* DD name                                   @23A */\n    unsigned char  _smf42dsn\u00c444\u00dc;  /* Data Set name                             @23A */\n    struct \u00e4\n      int            _smf42rsp;    /* Requested space quantity                  @23A */\n      unsigned char  _smf42unt\u00c42\u00dc; /* Unit of Requested space quantity          @24A */\n      \u00fc smf42spq;\n    struct \u00e4\n      short int      _smf42dcl;     /* Length of DC                              @23A */\n      unsigned char  _smf42dcn\u00c430\u00dc; /* Data Class name                           @23A */\n      \u00fc smf42vdc;\n    struct \u00e4\n      short int      _smf42mcl;     /* Length of MC                              @23A */\n      unsigned char  _smf42mcn\u00c430\u00dc; /* Management Class name                     @23A */\n      \u00fc smf42vmc;\n    struct \u00e4\n      short int      _smf42sln;     /* Length of SC                              @23A */\n      unsigned char  _smf42snm\u00c430\u00dc; /* storage class name                        @23A */\n      \u00fc smf42vsc;\n    unsigned char  _smf42sgs\u00c4480\u00dc; /* List of Storage groups 15 entries*32bytes @23A */\n    \u00fc smf42vss;\n  \u00fc;\n\n#define smf42jbn smf42vss._smf42jbn\n#define smf42pgn smf42vss._smf42pgn\n#define smf42stn smf42vss._smf42stn\n#define smf42ddn smf42vss._smf42ddn\n#define smf42dsn smf42vss._smf42dsn\n#define smf42rsp smf42vss.smf42spq._smf42rsp\n#define smf42unt smf42vss.smf42spq._smf42unt\n#define smf42dcl smf42vss.smf42vdc._smf42dcl\n#define smf42dcn smf42vss.smf42vdc._smf42dcn\n#define smf42mcl smf42vss.smf42vmc._smf42mcl\n#define smf42mcn smf42vss.smf42vmc._smf42mcn\n#define smf42sln smf42vss.smf42vsc._smf42sln\n#define smf42snm smf42vss.smf42vsc._smf42snm\n#define smf42sgs smf42vss._smf42sgs\n\n/* Values for field \"smf42sgs\" */\n#define smf420aa_len 0x292 /* @23A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420BA": {"ttr": 8041, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ba \u00e4\n  unsigned char  s42xrid\u00c48\u00dc;  /* Logical Session ID                        @07A */\n  unsigned char  s42xrtyp\u00c48\u00dc; /* Session type                              @07A */\n  int            s42xrsso;    /* Offset to first SSID data section         @07A */\n  short int      s42xrssn;    /* Number of SSIDs  for the session          @07A */\n  short int      s42xrssl;    /* Length of  SSID data section              @07A */\n  int            s42xrvlo;    /* Offset to first volume data SECTION       @14A */\n  short int      s42xrvln;    /* Number of volume data SECTIONS            @14A */\n  short int      s42xrvll;    /* Length of volume data                     @14C */\n  \u00fc;\n\n/* Values for field \"s42xrvll\" */\n#define smf420ba_len 0x20 /* @07A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420FA": {"ttr": 8027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420fa \u00e4\n  struct \u00e4\n    int            _smf42faa;     /* INTERVAL LENGTH. THIS IS THE     */\n    unsigned char  _smf42f00\u00c412\u00dc; /* INDICATES IF DFSMS GREATER  @P5A */\n    short int      _smf42fab;     /* LENGTH OF THE STORAGE CLASS      */\n    unsigned char  _smf42fac\u00c430\u00dc; /* STORAGE CLASS NAME          @10A */\n    short int      _smf42f01;     /* CACHESETNAME LENGTH         @10A */\n    unsigned char  _smf42fad\u00c430\u00dc; /* CACHESET NAME               @10A */\n    int            _smf42fae;     /* NUMBER OF LOCK REQUESTS          */\n    int            _smf42faf;     /* NUMBER OF TRUE CONTENTION        */\n    int            _smf42fag;     /* NUMBER OF FALSE CONTENTION       */\n    short int      _smf42f02;     /* SMSDIRECTWEIGHT             @10A */\n    short int      _smf42f12;     /* SMSSEQUENTIALWEIGHT         @10A */\n    unsigned char  _smf42fah\u00c416\u00dc; /* RESERVED                    @10A */\n    struct \u00e4\n      struct \u00e4\n        int            _smf42fca;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fcb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fcc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fcd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fce;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fcf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fcg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fch;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fci;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fcj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fck;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fcl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fcm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fcn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fco;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fcp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fcq\u00c42\u00dc;  /* NUMBER OF BYTES XFERED INTO THE   */\n        int            _smf42fcr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fcs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fct\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fcu\u00c42\u00dc;  /* NUMBER OF                         */\n        unsigned char  _smf42fcv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fcw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fcx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fcy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fcz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fc7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42fa3;\n      struct \u00e4\n        int            _smf42fda;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fdb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fdc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fdd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fde;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fdf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fdg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fdh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fdi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fdj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fdk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fdl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fdm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fdn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fdo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fdp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fdq\u00c42\u00dc;  /* NUMBER OF BYTES XFERED INTO THE   */\n        int            _smf42fdr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fds;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fdt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fdu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fdv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fdw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fdx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fdy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fdz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fd7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42fa4;\n      \u00fc smf42fa2;\n    struct \u00e4\n      struct \u00e4\n        int            _smf42fea;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42feb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fec;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fed;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fee;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fef;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42feg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42feh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fei;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fej;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fek;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fel;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fem;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fen;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42feo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fep;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42feq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fer;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fes;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fet\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42feu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fev\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42few\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fex;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fey;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fez\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fe7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42fa6;\n      struct \u00e4\n        int            _smf42ffa;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42ffb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42ffc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42ffd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42ffe;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fff;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42ffg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42ffh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42ffi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42ffj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42ffk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42ffl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42ffm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42ffn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42ffo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42ffp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42ffq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42ffr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42ffs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fft\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42ffu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42ffv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42ffw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42ffx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42ffy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42ffz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42ff7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42fa7;\n      struct \u00e4\n        int            _smf42fga;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fgb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fgc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fgd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fge;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fgf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fgg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fgh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fgi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fgj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fgk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fgl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fgm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fgn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fgo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fgp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fgq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fgr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fgs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fgt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fgu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fgv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fgw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fgx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fgy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fgz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fg7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42fa8;\n      struct \u00e4\n        int            _smf42fha;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fhb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fhc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fhd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fhe;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fhf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fhg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fhh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fhi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fhj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fhk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fhl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fhm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fhn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fho;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fhp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fhq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fhr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fhs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fht\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fhu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fhv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fhw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fhx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fhy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fhz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fh7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42fa9;\n      \u00fc smf42fa5;\n    struct \u00e4\n      int            _smf42foa;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42fob;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42foc;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42fod;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42foe;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n      int            _smf42fof;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n      unsigned char  _smf42fog\u00c48\u00dc;  /* RESERVED                    @10A */\n      int            _smf42foh;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42foi;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42foj;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fok;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fol;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fom;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fon;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42foo;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fop;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42foq;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42for;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fos;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fot;     /* NUMBER OF COMPONENT_2       @10A */\n      int            _smf42fou;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n      int            _smf42fov;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n      int            _smf42fow;     /* NUMBER OF COMPONENT_2       @10A */\n      unsigned char  _smf42fox\u00c432\u00dc; /* RESERVED                    @10A */\n      \u00fc smf42fx1;\n    struct \u00e4\n      int            _smf42fpr\u00c42\u00dc; /* TOTAL TIME ALL THREAD       @64C */\n      int            _smf42fps;    /* TOTAL NUMBER OF ALL THREAD  @10A */\n      int            _smf42fpt;    /* RESERVED                    @10A */\n      int            _smf42fpu;    /* AVERAGE RESPONSE TIME FOR   @10A */\n      int            _smf42fpv;    /* NORMALIZED RESPONSE TIME    @10A */\n      unsigned char  _smf42fpw\u00c48\u00dc; /* RESERVED                    @10A */\n      \u00fc smf42fx2;\n    \u00fc smf42fa1;\n  unsigned char  smf42fai\u00c416\u00dc; /* Lock Structure name         @L3C */\n  unsigned char  smf42faj\u00c48\u00dc;  /* Lock Set                    @L3A */\n  \u00fc;\n\n#define smf42faa smf42fa1._smf42faa\n#define smf42f00 smf42fa1._smf42f00\n#define smf42fab smf42fa1._smf42fab\n#define smf42fac smf42fa1._smf42fac\n#define smf42f01 smf42fa1._smf42f01\n#define smf42fad smf42fa1._smf42fad\n#define smf42fae smf42fa1._smf42fae\n#define smf42faf smf42fa1._smf42faf\n#define smf42fag smf42fa1._smf42fag\n#define smf42f02 smf42fa1._smf42f02\n#define smf42f12 smf42fa1._smf42f12\n#define smf42fah smf42fa1._smf42fah\n#define smf42fca smf42fa1.smf42fa2.smf42fa3._smf42fca\n#define smf42fcb smf42fa1.smf42fa2.smf42fa3._smf42fcb\n#define smf42fcc smf42fa1.smf42fa2.smf42fa3._smf42fcc\n#define smf42fcd smf42fa1.smf42fa2.smf42fa3._smf42fcd\n#define smf42fce smf42fa1.smf42fa2.smf42fa3._smf42fce\n#define smf42fcf smf42fa1.smf42fa2.smf42fa3._smf42fcf\n#define smf42fcg smf42fa1.smf42fa2.smf42fa3._smf42fcg\n#define smf42fch smf42fa1.smf42fa2.smf42fa3._smf42fch\n#define smf42fci smf42fa1.smf42fa2.smf42fa3._smf42fci\n#define smf42fcj smf42fa1.smf42fa2.smf42fa3._smf42fcj\n#define smf42fck smf42fa1.smf42fa2.smf42fa3._smf42fck\n#define smf42fcl smf42fa1.smf42fa2.smf42fa3._smf42fcl\n#define smf42fcm smf42fa1.smf42fa2.smf42fa3._smf42fcm\n#define smf42fcn smf42fa1.smf42fa2.smf42fa3._smf42fcn\n#define smf42fco smf42fa1.smf42fa2.smf42fa3._smf42fco\n#define smf42fcp smf42fa1.smf42fa2.smf42fa3._smf42fcp\n#define smf42fcq smf42fa1.smf42fa2.smf42fa3._smf42fcq\n#define smf42fcr smf42fa1.smf42fa2.smf42fa3._smf42fcr\n#define smf42fcs smf42fa1.smf42fa2.smf42fa3._smf42fcs\n#define smf42fct smf42fa1.smf42fa2.smf42fa3._smf42fct\n#define smf42fcu smf42fa1.smf42fa2.smf42fa3._smf42fcu\n#define smf42fcv smf42fa1.smf42fa2.smf42fa3._smf42fcv\n#define smf42fcw smf42fa1.smf42fa2.smf42fa3._smf42fcw\n#define smf42fcx smf42fa1.smf42fa2.smf42fa3._smf42fcx\n#define smf42fcy smf42fa1.smf42fa2.smf42fa3._smf42fcy\n#define smf42fcz smf42fa1.smf42fa2.smf42fa3._smf42fcz\n#define smf42fc7 smf42fa1.smf42fa2.smf42fa3._smf42fc7\n#define smf42fda smf42fa1.smf42fa2.smf42fa4._smf42fda\n#define smf42fdb smf42fa1.smf42fa2.smf42fa4._smf42fdb\n#define smf42fdc smf42fa1.smf42fa2.smf42fa4._smf42fdc\n#define smf42fdd smf42fa1.smf42fa2.smf42fa4._smf42fdd\n#define smf42fde smf42fa1.smf42fa2.smf42fa4._smf42fde\n#define smf42fdf smf42fa1.smf42fa2.smf42fa4._smf42fdf\n#define smf42fdg smf42fa1.smf42fa2.smf42fa4._smf42fdg\n#define smf42fdh smf42fa1.smf42fa2.smf42fa4._smf42fdh\n#define smf42fdi smf42fa1.smf42fa2.smf42fa4._smf42fdi\n#define smf42fdj smf42fa1.smf42fa2.smf42fa4._smf42fdj\n#define smf42fdk smf42fa1.smf42fa2.smf42fa4._smf42fdk\n#define smf42fdl smf42fa1.smf42fa2.smf42fa4._smf42fdl\n#define smf42fdm smf42fa1.smf42fa2.smf42fa4._smf42fdm\n#define smf42fdn smf42fa1.smf42fa2.smf42fa4._smf42fdn\n#define smf42fdo smf42fa1.smf42fa2.smf42fa4._smf42fdo\n#define smf42fdp smf42fa1.smf42fa2.smf42fa4._smf42fdp\n#define smf42fdq smf42fa1.smf42fa2.smf42fa4._smf42fdq\n#define smf42fdr smf42fa1.smf42fa2.smf42fa4._smf42fdr\n#define smf42fds smf42fa1.smf42fa2.smf42fa4._smf42fds\n#define smf42fdt smf42fa1.smf42fa2.smf42fa4._smf42fdt\n#define smf42fdu smf42fa1.smf42fa2.smf42fa4._smf42fdu\n#define smf42fdv smf42fa1.smf42fa2.smf42fa4._smf42fdv\n#define smf42fdw smf42fa1.smf42fa2.smf42fa4._smf42fdw\n#define smf42fdx smf42fa1.smf42fa2.smf42fa4._smf42fdx\n#define smf42fdy smf42fa1.smf42fa2.smf42fa4._smf42fdy\n#define smf42fdz smf42fa1.smf42fa2.smf42fa4._smf42fdz\n#define smf42fd7 smf42fa1.smf42fa2.smf42fa4._smf42fd7\n#define smf42fea smf42fa1.smf42fa5.smf42fa6._smf42fea\n#define smf42feb smf42fa1.smf42fa5.smf42fa6._smf42feb\n#define smf42fec smf42fa1.smf42fa5.smf42fa6._smf42fec\n#define smf42fed smf42fa1.smf42fa5.smf42fa6._smf42fed\n#define smf42fee smf42fa1.smf42fa5.smf42fa6._smf42fee\n#define smf42fef smf42fa1.smf42fa5.smf42fa6._smf42fef\n#define smf42feg smf42fa1.smf42fa5.smf42fa6._smf42feg\n#define smf42feh smf42fa1.smf42fa5.smf42fa6._smf42feh\n#define smf42fei smf42fa1.smf42fa5.smf42fa6._smf42fei\n#define smf42fej smf42fa1.smf42fa5.smf42fa6._smf42fej\n#define smf42fek smf42fa1.smf42fa5.smf42fa6._smf42fek\n#define smf42fel smf42fa1.smf42fa5.smf42fa6._smf42fel\n#define smf42fem smf42fa1.smf42fa5.smf42fa6._smf42fem\n#define smf42fen smf42fa1.smf42fa5.smf42fa6._smf42fen\n#define smf42feo smf42fa1.smf42fa5.smf42fa6._smf42feo\n#define smf42fep smf42fa1.smf42fa5.smf42fa6._smf42fep\n#define smf42feq smf42fa1.smf42fa5.smf42fa6._smf42feq\n#define smf42fer smf42fa1.smf42fa5.smf42fa6._smf42fer\n#define smf42fes smf42fa1.smf42fa5.smf42fa6._smf42fes\n#define smf42fet smf42fa1.smf42fa5.smf42fa6._smf42fet\n#define smf42feu smf42fa1.smf42fa5.smf42fa6._smf42feu\n#define smf42fev smf42fa1.smf42fa5.smf42fa6._smf42fev\n#define smf42few smf42fa1.smf42fa5.smf42fa6._smf42few\n#define smf42fex smf42fa1.smf42fa5.smf42fa6._smf42fex\n#define smf42fey smf42fa1.smf42fa5.smf42fa6._smf42fey\n#define smf42fez smf42fa1.smf42fa5.smf42fa6._smf42fez\n#define smf42fe7 smf42fa1.smf42fa5.smf42fa6._smf42fe7\n#define smf42ffa smf42fa1.smf42fa5.smf42fa7._smf42ffa\n#define smf42ffb smf42fa1.smf42fa5.smf42fa7._smf42ffb\n#define smf42ffc smf42fa1.smf42fa5.smf42fa7._smf42ffc\n#define smf42ffd smf42fa1.smf42fa5.smf42fa7._smf42ffd\n#define smf42ffe smf42fa1.smf42fa5.smf42fa7._smf42ffe\n#define smf42fff smf42fa1.smf42fa5.smf42fa7._smf42fff\n#define smf42ffg smf42fa1.smf42fa5.smf42fa7._smf42ffg\n#define smf42ffh smf42fa1.smf42fa5.smf42fa7._smf42ffh\n#define smf42ffi smf42fa1.smf42fa5.smf42fa7._smf42ffi\n#define smf42ffj smf42fa1.smf42fa5.smf42fa7._smf42ffj\n#define smf42ffk smf42fa1.smf42fa5.smf42fa7._smf42ffk\n#define smf42ffl smf42fa1.smf42fa5.smf42fa7._smf42ffl\n#define smf42ffm smf42fa1.smf42fa5.smf42fa7._smf42ffm\n#define smf42ffn smf42fa1.smf42fa5.smf42fa7._smf42ffn\n#define smf42ffo smf42fa1.smf42fa5.smf42fa7._smf42ffo\n#define smf42ffp smf42fa1.smf42fa5.smf42fa7._smf42ffp\n#define smf42ffq smf42fa1.smf42fa5.smf42fa7._smf42ffq\n#define smf42ffr smf42fa1.smf42fa5.smf42fa7._smf42ffr\n#define smf42ffs smf42fa1.smf42fa5.smf42fa7._smf42ffs\n#define smf42fft smf42fa1.smf42fa5.smf42fa7._smf42fft\n#define smf42ffu smf42fa1.smf42fa5.smf42fa7._smf42ffu\n#define smf42ffv smf42fa1.smf42fa5.smf42fa7._smf42ffv\n#define smf42ffw smf42fa1.smf42fa5.smf42fa7._smf42ffw\n#define smf42ffx smf42fa1.smf42fa5.smf42fa7._smf42ffx\n#define smf42ffy smf42fa1.smf42fa5.smf42fa7._smf42ffy\n#define smf42ffz smf42fa1.smf42fa5.smf42fa7._smf42ffz\n#define smf42ff7 smf42fa1.smf42fa5.smf42fa7._smf42ff7\n#define smf42fga smf42fa1.smf42fa5.smf42fa8._smf42fga\n#define smf42fgb smf42fa1.smf42fa5.smf42fa8._smf42fgb\n#define smf42fgc smf42fa1.smf42fa5.smf42fa8._smf42fgc\n#define smf42fgd smf42fa1.smf42fa5.smf42fa8._smf42fgd\n#define smf42fge smf42fa1.smf42fa5.smf42fa8._smf42fge\n#define smf42fgf smf42fa1.smf42fa5.smf42fa8._smf42fgf\n#define smf42fgg smf42fa1.smf42fa5.smf42fa8._smf42fgg\n#define smf42fgh smf42fa1.smf42fa5.smf42fa8._smf42fgh\n#define smf42fgi smf42fa1.smf42fa5.smf42fa8._smf42fgi\n#define smf42fgj smf42fa1.smf42fa5.smf42fa8._smf42fgj\n#define smf42fgk smf42fa1.smf42fa5.smf42fa8._smf42fgk\n#define smf42fgl smf42fa1.smf42fa5.smf42fa8._smf42fgl\n#define smf42fgm smf42fa1.smf42fa5.smf42fa8._smf42fgm\n#define smf42fgn smf42fa1.smf42fa5.smf42fa8._smf42fgn\n#define smf42fgo smf42fa1.smf42fa5.smf42fa8._smf42fgo\n#define smf42fgp smf42fa1.smf42fa5.smf42fa8._smf42fgp\n#define smf42fgq smf42fa1.smf42fa5.smf42fa8._smf42fgq\n#define smf42fgr smf42fa1.smf42fa5.smf42fa8._smf42fgr\n#define smf42fgs smf42fa1.smf42fa5.smf42fa8._smf42fgs\n#define smf42fgt smf42fa1.smf42fa5.smf42fa8._smf42fgt\n#define smf42fgu smf42fa1.smf42fa5.smf42fa8._smf42fgu\n#define smf42fgv smf42fa1.smf42fa5.smf42fa8._smf42fgv\n#define smf42fgw smf42fa1.smf42fa5.smf42fa8._smf42fgw\n#define smf42fgx smf42fa1.smf42fa5.smf42fa8._smf42fgx\n#define smf42fgy smf42fa1.smf42fa5.smf42fa8._smf42fgy\n#define smf42fgz smf42fa1.smf42fa5.smf42fa8._smf42fgz\n#define smf42fg7 smf42fa1.smf42fa5.smf42fa8._smf42fg7\n#define smf42fha smf42fa1.smf42fa5.smf42fa9._smf42fha\n#define smf42fhb smf42fa1.smf42fa5.smf42fa9._smf42fhb\n#define smf42fhc smf42fa1.smf42fa5.smf42fa9._smf42fhc\n#define smf42fhd smf42fa1.smf42fa5.smf42fa9._smf42fhd\n#define smf42fhe smf42fa1.smf42fa5.smf42fa9._smf42fhe\n#define smf42fhf smf42fa1.smf42fa5.smf42fa9._smf42fhf\n#define smf42fhg smf42fa1.smf42fa5.smf42fa9._smf42fhg\n#define smf42fhh smf42fa1.smf42fa5.smf42fa9._smf42fhh\n#define smf42fhi smf42fa1.smf42fa5.smf42fa9._smf42fhi\n#define smf42fhj smf42fa1.smf42fa5.smf42fa9._smf42fhj\n#define smf42fhk smf42fa1.smf42fa5.smf42fa9._smf42fhk\n#define smf42fhl smf42fa1.smf42fa5.smf42fa9._smf42fhl\n#define smf42fhm smf42fa1.smf42fa5.smf42fa9._smf42fhm\n#define smf42fhn smf42fa1.smf42fa5.smf42fa9._smf42fhn\n#define smf42fho smf42fa1.smf42fa5.smf42fa9._smf42fho\n#define smf42fhp smf42fa1.smf42fa5.smf42fa9._smf42fhp\n#define smf42fhq smf42fa1.smf42fa5.smf42fa9._smf42fhq\n#define smf42fhr smf42fa1.smf42fa5.smf42fa9._smf42fhr\n#define smf42fhs smf42fa1.smf42fa5.smf42fa9._smf42fhs\n#define smf42fht smf42fa1.smf42fa5.smf42fa9._smf42fht\n#define smf42fhu smf42fa1.smf42fa5.smf42fa9._smf42fhu\n#define smf42fhv smf42fa1.smf42fa5.smf42fa9._smf42fhv\n#define smf42fhw smf42fa1.smf42fa5.smf42fa9._smf42fhw\n#define smf42fhx smf42fa1.smf42fa5.smf42fa9._smf42fhx\n#define smf42fhy smf42fa1.smf42fa5.smf42fa9._smf42fhy\n#define smf42fhz smf42fa1.smf42fa5.smf42fa9._smf42fhz\n#define smf42fh7 smf42fa1.smf42fa5.smf42fa9._smf42fh7\n#define smf42foa smf42fa1.smf42fx1._smf42foa\n#define smf42fob smf42fa1.smf42fx1._smf42fob\n#define smf42foc smf42fa1.smf42fx1._smf42foc\n#define smf42fod smf42fa1.smf42fx1._smf42fod\n#define smf42foe smf42fa1.smf42fx1._smf42foe\n#define smf42fof smf42fa1.smf42fx1._smf42fof\n#define smf42fog smf42fa1.smf42fx1._smf42fog\n#define smf42foh smf42fa1.smf42fx1._smf42foh\n#define smf42foi smf42fa1.smf42fx1._smf42foi\n#define smf42foj smf42fa1.smf42fx1._smf42foj\n#define smf42fok smf42fa1.smf42fx1._smf42fok\n#define smf42fol smf42fa1.smf42fx1._smf42fol\n#define smf42fom smf42fa1.smf42fx1._smf42fom\n#define smf42fon smf42fa1.smf42fx1._smf42fon\n#define smf42foo smf42fa1.smf42fx1._smf42foo\n#define smf42fop smf42fa1.smf42fx1._smf42fop\n#define smf42foq smf42fa1.smf42fx1._smf42foq\n#define smf42for smf42fa1.smf42fx1._smf42for\n#define smf42fos smf42fa1.smf42fx1._smf42fos\n#define smf42fot smf42fa1.smf42fx1._smf42fot\n#define smf42fou smf42fa1.smf42fx1._smf42fou\n#define smf42fov smf42fa1.smf42fx1._smf42fov\n#define smf42fow smf42fa1.smf42fx1._smf42fow\n#define smf42fox smf42fa1.smf42fx1._smf42fox\n#define smf42fpr smf42fa1.smf42fx2._smf42fpr\n#define smf42fps smf42fa1.smf42fx2._smf42fps\n#define smf42fpt smf42fa1.smf42fx2._smf42fpt\n#define smf42fpu smf42fa1.smf42fx2._smf42fpu\n#define smf42fpv smf42fa1.smf42fx2._smf42fpv\n#define smf42fpw smf42fa1.smf42fx2._smf42fpw\n\n/* Values for field \"smf42fc7\" */\n#define smf42fa3_len 0xA8\n\n/* Values for field \"smf42fd7\" */\n#define smf42fa4_len 0xA8\n\n/* Values for field \"smf42fe7\" */\n#define smf42fa6_len 0xA8\n\n/* Values for field \"smf42ff7\" */\n#define smf42fa7_len 0xA8\n\n/* Values for field \"smf42fg7\" */\n#define smf42fa8_len 0xA8\n\n/* Values for field \"smf42fh7\" */\n#define smf42fa9_len 0xA8\n#define smf42fa5_len 0x2A0\n\n/* Values for field \"smf42fox\" */\n#define smf42fx1_len 0x80  /* @10A */\n\n/* Values for field \"smf42fpw\" */\n#define smf42fx2_len 0x20  /* @10A */\n\n/* Values for field \"smf42faj\" */\n#define smf420fa_len 0x518 /* @10A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420FB": {"ttr": 8569, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420fb \u00e4\n  struct \u00e4\n    int            _smf42fba;     /* INTERVAL LENGTH. THIS IS THE     */\n    unsigned char  _smf42f03\u00c412\u00dc; /* INDICATES IF DFSMS GREATER  @P5A */\n    short int      _smf42fbb;     /* LENGTH OF THE STORAGE CLASS      */\n    unsigned char  _smf42fbc\u00c430\u00dc; /* STORAGE CLASS NAME          @10A */\n    short int      _smf42f04;     /* CACHESETNAMELENGTH               */\n    unsigned char  _smf42fbd\u00c430\u00dc; /* CACHESETNAME                @10A */\n    unsigned char  _smf42fbe\u00c48\u00dc;  /* MVS SYSTEM NAME             @10A */\n    unsigned char  _smf42f05\u00c48\u00dc;  /* RESERVED                    @10A */\n    unsigned char  _smf42fbf\u00c42\u00dc;  /* RESERVED                    @10A */\n    unsigned char  _smf42fbg\u00c430\u00dc; /* DFP CACHE STRUCTURE  NAME   @10A */\n    int            _smf42fbh;     /* NUMBER OF LOCK REQUESTS          */\n    int            _smf42fbi;     /* NUMBER OF TRUE CONTENTION        */\n    int            _smf42fbj;     /* NUMBER OF FALSE CONTENTION       */\n    short int      _smf42fb2;     /* SMSDIRECTWEIGHT             @10A */\n    short int      _smf42fb3;     /* SMSSEQUENTIALWEIGHT         @10A */\n    unsigned char  _smf42fbl\u00c416\u00dc; /* RESERVED                    @10A */\n    struct \u00e4\n      struct \u00e4\n        int            _smf42fia;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fib;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fic;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fid;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fie;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fif;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fig;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fih;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fii;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fij;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fik;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fil;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fim;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fin;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fio;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fip;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fiq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fir;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fis;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fit\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fiu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fiv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fiw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fix;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fiy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fiz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fi7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42f1c;\n      struct \u00e4\n        int            _smf42fja;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fjb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fjc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fjd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fje;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fjf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fjg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fjh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fji;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fjj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fjk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fjl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fjm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fjn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fjo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fjp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fjq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fjr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fjs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fjt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fju\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fjv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fjw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fjx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fjy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fjz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fj7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42f1d;\n      \u00fc smf42f1b;\n    struct \u00e4\n      struct \u00e4\n        int            _smf42fka;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fkb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fkc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fkd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fke;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fkf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fkg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fkh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fki;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fkj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fkk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fkl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fkm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fkn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fko;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fkp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fkq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fkr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fks;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fkt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fku\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fkv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fkw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fkx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fky;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fkz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fk7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42f1f;\n      struct \u00e4\n        int            _smf42fla;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42flb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42flc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fld;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fle;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42flf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fl6;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42flh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fli;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42flj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42flk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fll;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42flm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fln;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42flo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42flp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42flq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42flr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fls;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42flt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42flu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42flv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42flw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42flx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fly;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42flz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fl7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42f1g;\n      struct \u00e4\n        int            _smf42fma;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fmb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fmc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fmd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fme;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fmf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fmg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fmh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fmi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fmj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fmk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fml;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fmm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fmn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fmo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fmp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fmq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fmr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fms;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fmt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fmu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fmv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fmw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fmx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fmy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fmz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fm7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42f1h;\n      struct \u00e4\n        int            _smf42fna;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42fnb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42fnc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fnd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42fne;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42fnf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42fng;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42fnh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42fni;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42fnj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42fnk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42fnl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42fnm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42fnn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42fno;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42fnp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42fnq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42fnr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42fns;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42fnt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42fnu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42fnv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42fnw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42fnx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42fny;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42fnz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42fn7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42f1i;\n      \u00fc smf42f1e;\n    struct \u00e4\n      int            _smf42fra;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42frb;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42frc;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42frd;     /* NUMBER OF RECORD LOCK       @10A */\n      int            _smf42fre;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n      int            _smf42frf;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n      unsigned char  _smf42frg\u00c48\u00dc;  /* RESERVED                    @10A */\n      int            _smf42frh;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fri;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frj;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frk;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frl;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frm;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frn;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42fro;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frp;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frq;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frr;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frs;     /* NUMBER OF COMPONENT_1       @10A */\n      int            _smf42frt;     /* NUMBER OF COMPONENT_2       @10A */\n      int            _smf42fru;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n      int            _smf42frv;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n      int            _smf42frw;     /* NUMBER OF COMPONENT_2       @10A */\n      unsigned char  _smf42frx\u00c432\u00dc; /* RESERVED                    @10A */\n      \u00fc smf42fx3;\n    struct \u00e4\n      int            _smf42fqr\u00c42\u00dc; /* TOTAL TIME ALL THREAD       @64C */\n      int            _smf42fqs;    /* TOTAL NUMBER OF ALL THREAD  @10A */\n      int            _smf42fqt;    /* RESERVED                    @10A */\n      int            _smf42fqu;    /* AVERAGE RESPONSE TIME FOR   @10A */\n      int            _smf42fqv;    /* NORMALIZED RESPONSE TIME    @10A */\n      unsigned char  _smf42fqw\u00c48\u00dc; /* RESERVED                    @10A */\n      \u00fc smf42fx4;\n    \u00fc smf42f1a;\n  unsigned char  smf42fbm\u00c416\u00dc; /* Lock Structure name         @P7A */\n  unsigned char  smf42fbn\u00c48\u00dc;  /* Lock Set                    @P7A */\n  \u00fc;\n\n#define smf42fba smf42f1a._smf42fba\n#define smf42f03 smf42f1a._smf42f03\n#define smf42fbb smf42f1a._smf42fbb\n#define smf42fbc smf42f1a._smf42fbc\n#define smf42f04 smf42f1a._smf42f04\n#define smf42fbd smf42f1a._smf42fbd\n#define smf42fbe smf42f1a._smf42fbe\n#define smf42f05 smf42f1a._smf42f05\n#define smf42fbf smf42f1a._smf42fbf\n#define smf42fbg smf42f1a._smf42fbg\n#define smf42fbh smf42f1a._smf42fbh\n#define smf42fbi smf42f1a._smf42fbi\n#define smf42fbj smf42f1a._smf42fbj\n#define smf42fb2 smf42f1a._smf42fb2\n#define smf42fb3 smf42f1a._smf42fb3\n#define smf42fbl smf42f1a._smf42fbl\n#define smf42fia smf42f1a.smf42f1b.smf42f1c._smf42fia\n#define smf42fib smf42f1a.smf42f1b.smf42f1c._smf42fib\n#define smf42fic smf42f1a.smf42f1b.smf42f1c._smf42fic\n#define smf42fid smf42f1a.smf42f1b.smf42f1c._smf42fid\n#define smf42fie smf42f1a.smf42f1b.smf42f1c._smf42fie\n#define smf42fif smf42f1a.smf42f1b.smf42f1c._smf42fif\n#define smf42fig smf42f1a.smf42f1b.smf42f1c._smf42fig\n#define smf42fih smf42f1a.smf42f1b.smf42f1c._smf42fih\n#define smf42fii smf42f1a.smf42f1b.smf42f1c._smf42fii\n#define smf42fij smf42f1a.smf42f1b.smf42f1c._smf42fij\n#define smf42fik smf42f1a.smf42f1b.smf42f1c._smf42fik\n#define smf42fil smf42f1a.smf42f1b.smf42f1c._smf42fil\n#define smf42fim smf42f1a.smf42f1b.smf42f1c._smf42fim\n#define smf42fin smf42f1a.smf42f1b.smf42f1c._smf42fin\n#define smf42fio smf42f1a.smf42f1b.smf42f1c._smf42fio\n#define smf42fip smf42f1a.smf42f1b.smf42f1c._smf42fip\n#define smf42fiq smf42f1a.smf42f1b.smf42f1c._smf42fiq\n#define smf42fir smf42f1a.smf42f1b.smf42f1c._smf42fir\n#define smf42fis smf42f1a.smf42f1b.smf42f1c._smf42fis\n#define smf42fit smf42f1a.smf42f1b.smf42f1c._smf42fit\n#define smf42fiu smf42f1a.smf42f1b.smf42f1c._smf42fiu\n#define smf42fiv smf42f1a.smf42f1b.smf42f1c._smf42fiv\n#define smf42fiw smf42f1a.smf42f1b.smf42f1c._smf42fiw\n#define smf42fix smf42f1a.smf42f1b.smf42f1c._smf42fix\n#define smf42fiy smf42f1a.smf42f1b.smf42f1c._smf42fiy\n#define smf42fiz smf42f1a.smf42f1b.smf42f1c._smf42fiz\n#define smf42fi7 smf42f1a.smf42f1b.smf42f1c._smf42fi7\n#define smf42fja smf42f1a.smf42f1b.smf42f1d._smf42fja\n#define smf42fjb smf42f1a.smf42f1b.smf42f1d._smf42fjb\n#define smf42fjc smf42f1a.smf42f1b.smf42f1d._smf42fjc\n#define smf42fjd smf42f1a.smf42f1b.smf42f1d._smf42fjd\n#define smf42fje smf42f1a.smf42f1b.smf42f1d._smf42fje\n#define smf42fjf smf42f1a.smf42f1b.smf42f1d._smf42fjf\n#define smf42fjg smf42f1a.smf42f1b.smf42f1d._smf42fjg\n#define smf42fjh smf42f1a.smf42f1b.smf42f1d._smf42fjh\n#define smf42fji smf42f1a.smf42f1b.smf42f1d._smf42fji\n#define smf42fjj smf42f1a.smf42f1b.smf42f1d._smf42fjj\n#define smf42fjk smf42f1a.smf42f1b.smf42f1d._smf42fjk\n#define smf42fjl smf42f1a.smf42f1b.smf42f1d._smf42fjl\n#define smf42fjm smf42f1a.smf42f1b.smf42f1d._smf42fjm\n#define smf42fjn smf42f1a.smf42f1b.smf42f1d._smf42fjn\n#define smf42fjo smf42f1a.smf42f1b.smf42f1d._smf42fjo\n#define smf42fjp smf42f1a.smf42f1b.smf42f1d._smf42fjp\n#define smf42fjq smf42f1a.smf42f1b.smf42f1d._smf42fjq\n#define smf42fjr smf42f1a.smf42f1b.smf42f1d._smf42fjr\n#define smf42fjs smf42f1a.smf42f1b.smf42f1d._smf42fjs\n#define smf42fjt smf42f1a.smf42f1b.smf42f1d._smf42fjt\n#define smf42fju smf42f1a.smf42f1b.smf42f1d._smf42fju\n#define smf42fjv smf42f1a.smf42f1b.smf42f1d._smf42fjv\n#define smf42fjw smf42f1a.smf42f1b.smf42f1d._smf42fjw\n#define smf42fjx smf42f1a.smf42f1b.smf42f1d._smf42fjx\n#define smf42fjy smf42f1a.smf42f1b.smf42f1d._smf42fjy\n#define smf42fjz smf42f1a.smf42f1b.smf42f1d._smf42fjz\n#define smf42fj7 smf42f1a.smf42f1b.smf42f1d._smf42fj7\n#define smf42fka smf42f1a.smf42f1e.smf42f1f._smf42fka\n#define smf42fkb smf42f1a.smf42f1e.smf42f1f._smf42fkb\n#define smf42fkc smf42f1a.smf42f1e.smf42f1f._smf42fkc\n#define smf42fkd smf42f1a.smf42f1e.smf42f1f._smf42fkd\n#define smf42fke smf42f1a.smf42f1e.smf42f1f._smf42fke\n#define smf42fkf smf42f1a.smf42f1e.smf42f1f._smf42fkf\n#define smf42fkg smf42f1a.smf42f1e.smf42f1f._smf42fkg\n#define smf42fkh smf42f1a.smf42f1e.smf42f1f._smf42fkh\n#define smf42fki smf42f1a.smf42f1e.smf42f1f._smf42fki\n#define smf42fkj smf42f1a.smf42f1e.smf42f1f._smf42fkj\n#define smf42fkk smf42f1a.smf42f1e.smf42f1f._smf42fkk\n#define smf42fkl smf42f1a.smf42f1e.smf42f1f._smf42fkl\n#define smf42fkm smf42f1a.smf42f1e.smf42f1f._smf42fkm\n#define smf42fkn smf42f1a.smf42f1e.smf42f1f._smf42fkn\n#define smf42fko smf42f1a.smf42f1e.smf42f1f._smf42fko\n#define smf42fkp smf42f1a.smf42f1e.smf42f1f._smf42fkp\n#define smf42fkq smf42f1a.smf42f1e.smf42f1f._smf42fkq\n#define smf42fkr smf42f1a.smf42f1e.smf42f1f._smf42fkr\n#define smf42fks smf42f1a.smf42f1e.smf42f1f._smf42fks\n#define smf42fkt smf42f1a.smf42f1e.smf42f1f._smf42fkt\n#define smf42fku smf42f1a.smf42f1e.smf42f1f._smf42fku\n#define smf42fkv smf42f1a.smf42f1e.smf42f1f._smf42fkv\n#define smf42fkw smf42f1a.smf42f1e.smf42f1f._smf42fkw\n#define smf42fkx smf42f1a.smf42f1e.smf42f1f._smf42fkx\n#define smf42fky smf42f1a.smf42f1e.smf42f1f._smf42fky\n#define smf42fkz smf42f1a.smf42f1e.smf42f1f._smf42fkz\n#define smf42fk7 smf42f1a.smf42f1e.smf42f1f._smf42fk7\n#define smf42fla smf42f1a.smf42f1e.smf42f1g._smf42fla\n#define smf42flb smf42f1a.smf42f1e.smf42f1g._smf42flb\n#define smf42flc smf42f1a.smf42f1e.smf42f1g._smf42flc\n#define smf42fld smf42f1a.smf42f1e.smf42f1g._smf42fld\n#define smf42fle smf42f1a.smf42f1e.smf42f1g._smf42fle\n#define smf42flf smf42f1a.smf42f1e.smf42f1g._smf42flf\n#define smf42fl6 smf42f1a.smf42f1e.smf42f1g._smf42fl6\n#define smf42flh smf42f1a.smf42f1e.smf42f1g._smf42flh\n#define smf42fli smf42f1a.smf42f1e.smf42f1g._smf42fli\n#define smf42flj smf42f1a.smf42f1e.smf42f1g._smf42flj\n#define smf42flk smf42f1a.smf42f1e.smf42f1g._smf42flk\n#define smf42fll smf42f1a.smf42f1e.smf42f1g._smf42fll\n#define smf42flm smf42f1a.smf42f1e.smf42f1g._smf42flm\n#define smf42fln smf42f1a.smf42f1e.smf42f1g._smf42fln\n#define smf42flo smf42f1a.smf42f1e.smf42f1g._smf42flo\n#define smf42flp smf42f1a.smf42f1e.smf42f1g._smf42flp\n#define smf42flq smf42f1a.smf42f1e.smf42f1g._smf42flq\n#define smf42flr smf42f1a.smf42f1e.smf42f1g._smf42flr\n#define smf42fls smf42f1a.smf42f1e.smf42f1g._smf42fls\n#define smf42flt smf42f1a.smf42f1e.smf42f1g._smf42flt\n#define smf42flu smf42f1a.smf42f1e.smf42f1g._smf42flu\n#define smf42flv smf42f1a.smf42f1e.smf42f1g._smf42flv\n#define smf42flw smf42f1a.smf42f1e.smf42f1g._smf42flw\n#define smf42flx smf42f1a.smf42f1e.smf42f1g._smf42flx\n#define smf42fly smf42f1a.smf42f1e.smf42f1g._smf42fly\n#define smf42flz smf42f1a.smf42f1e.smf42f1g._smf42flz\n#define smf42fl7 smf42f1a.smf42f1e.smf42f1g._smf42fl7\n#define smf42fma smf42f1a.smf42f1e.smf42f1h._smf42fma\n#define smf42fmb smf42f1a.smf42f1e.smf42f1h._smf42fmb\n#define smf42fmc smf42f1a.smf42f1e.smf42f1h._smf42fmc\n#define smf42fmd smf42f1a.smf42f1e.smf42f1h._smf42fmd\n#define smf42fme smf42f1a.smf42f1e.smf42f1h._smf42fme\n#define smf42fmf smf42f1a.smf42f1e.smf42f1h._smf42fmf\n#define smf42fmg smf42f1a.smf42f1e.smf42f1h._smf42fmg\n#define smf42fmh smf42f1a.smf42f1e.smf42f1h._smf42fmh\n#define smf42fmi smf42f1a.smf42f1e.smf42f1h._smf42fmi\n#define smf42fmj smf42f1a.smf42f1e.smf42f1h._smf42fmj\n#define smf42fmk smf42f1a.smf42f1e.smf42f1h._smf42fmk\n#define smf42fml smf42f1a.smf42f1e.smf42f1h._smf42fml\n#define smf42fmm smf42f1a.smf42f1e.smf42f1h._smf42fmm\n#define smf42fmn smf42f1a.smf42f1e.smf42f1h._smf42fmn\n#define smf42fmo smf42f1a.smf42f1e.smf42f1h._smf42fmo\n#define smf42fmp smf42f1a.smf42f1e.smf42f1h._smf42fmp\n#define smf42fmq smf42f1a.smf42f1e.smf42f1h._smf42fmq\n#define smf42fmr smf42f1a.smf42f1e.smf42f1h._smf42fmr\n#define smf42fms smf42f1a.smf42f1e.smf42f1h._smf42fms\n#define smf42fmt smf42f1a.smf42f1e.smf42f1h._smf42fmt\n#define smf42fmu smf42f1a.smf42f1e.smf42f1h._smf42fmu\n#define smf42fmv smf42f1a.smf42f1e.smf42f1h._smf42fmv\n#define smf42fmw smf42f1a.smf42f1e.smf42f1h._smf42fmw\n#define smf42fmx smf42f1a.smf42f1e.smf42f1h._smf42fmx\n#define smf42fmy smf42f1a.smf42f1e.smf42f1h._smf42fmy\n#define smf42fmz smf42f1a.smf42f1e.smf42f1h._smf42fmz\n#define smf42fm7 smf42f1a.smf42f1e.smf42f1h._smf42fm7\n#define smf42fna smf42f1a.smf42f1e.smf42f1i._smf42fna\n#define smf42fnb smf42f1a.smf42f1e.smf42f1i._smf42fnb\n#define smf42fnc smf42f1a.smf42f1e.smf42f1i._smf42fnc\n#define smf42fnd smf42f1a.smf42f1e.smf42f1i._smf42fnd\n#define smf42fne smf42f1a.smf42f1e.smf42f1i._smf42fne\n#define smf42fnf smf42f1a.smf42f1e.smf42f1i._smf42fnf\n#define smf42fng smf42f1a.smf42f1e.smf42f1i._smf42fng\n#define smf42fnh smf42f1a.smf42f1e.smf42f1i._smf42fnh\n#define smf42fni smf42f1a.smf42f1e.smf42f1i._smf42fni\n#define smf42fnj smf42f1a.smf42f1e.smf42f1i._smf42fnj\n#define smf42fnk smf42f1a.smf42f1e.smf42f1i._smf42fnk\n#define smf42fnl smf42f1a.smf42f1e.smf42f1i._smf42fnl\n#define smf42fnm smf42f1a.smf42f1e.smf42f1i._smf42fnm\n#define smf42fnn smf42f1a.smf42f1e.smf42f1i._smf42fnn\n#define smf42fno smf42f1a.smf42f1e.smf42f1i._smf42fno\n#define smf42fnp smf42f1a.smf42f1e.smf42f1i._smf42fnp\n#define smf42fnq smf42f1a.smf42f1e.smf42f1i._smf42fnq\n#define smf42fnr smf42f1a.smf42f1e.smf42f1i._smf42fnr\n#define smf42fns smf42f1a.smf42f1e.smf42f1i._smf42fns\n#define smf42fnt smf42f1a.smf42f1e.smf42f1i._smf42fnt\n#define smf42fnu smf42f1a.smf42f1e.smf42f1i._smf42fnu\n#define smf42fnv smf42f1a.smf42f1e.smf42f1i._smf42fnv\n#define smf42fnw smf42f1a.smf42f1e.smf42f1i._smf42fnw\n#define smf42fnx smf42f1a.smf42f1e.smf42f1i._smf42fnx\n#define smf42fny smf42f1a.smf42f1e.smf42f1i._smf42fny\n#define smf42fnz smf42f1a.smf42f1e.smf42f1i._smf42fnz\n#define smf42fn7 smf42f1a.smf42f1e.smf42f1i._smf42fn7\n#define smf42fra smf42f1a.smf42fx3._smf42fra\n#define smf42frb smf42f1a.smf42fx3._smf42frb\n#define smf42frc smf42f1a.smf42fx3._smf42frc\n#define smf42frd smf42f1a.smf42fx3._smf42frd\n#define smf42fre smf42f1a.smf42fx3._smf42fre\n#define smf42frf smf42f1a.smf42fx3._smf42frf\n#define smf42frg smf42f1a.smf42fx3._smf42frg\n#define smf42frh smf42f1a.smf42fx3._smf42frh\n#define smf42fri smf42f1a.smf42fx3._smf42fri\n#define smf42frj smf42f1a.smf42fx3._smf42frj\n#define smf42frk smf42f1a.smf42fx3._smf42frk\n#define smf42frl smf42f1a.smf42fx3._smf42frl\n#define smf42frm smf42f1a.smf42fx3._smf42frm\n#define smf42frn smf42f1a.smf42fx3._smf42frn\n#define smf42fro smf42f1a.smf42fx3._smf42fro\n#define smf42frp smf42f1a.smf42fx3._smf42frp\n#define smf42frq smf42f1a.smf42fx3._smf42frq\n#define smf42frr smf42f1a.smf42fx3._smf42frr\n#define smf42frs smf42f1a.smf42fx3._smf42frs\n#define smf42frt smf42f1a.smf42fx3._smf42frt\n#define smf42fru smf42f1a.smf42fx3._smf42fru\n#define smf42frv smf42f1a.smf42fx3._smf42frv\n#define smf42frw smf42f1a.smf42fx3._smf42frw\n#define smf42frx smf42f1a.smf42fx3._smf42frx\n#define smf42fqr smf42f1a.smf42fx4._smf42fqr\n#define smf42fqs smf42f1a.smf42fx4._smf42fqs\n#define smf42fqt smf42f1a.smf42fx4._smf42fqt\n#define smf42fqu smf42f1a.smf42fx4._smf42fqu\n#define smf42fqv smf42f1a.smf42fx4._smf42fqv\n#define smf42fqw smf42f1a.smf42fx4._smf42fqw\n\n/* Values for field \"smf42fi7\" */\n#define smf42f1c_len 0xA8  /* @10A */\n\n/* Values for field \"smf42fj7\" */\n#define smf42f1d_len 0xA8  /* @10A */\n#define smf42f1b_len 0x150 /* @10A */\n\n/* Values for field \"smf42fk7\" */\n#define smf42f1f_len 0xA8  /* @10A */\n\n/* Values for field \"smf42fl7\" */\n#define smf42f1g_len 0xA8  /* @10A */\n\n/* Values for field \"smf42fm7\" */\n#define smf42f1h_len 0xA8  /* @10A */\n\n/* Values for field \"smf42fn7\" */\n#define smf42f1i_len 0xA8  /* @10A */\n#define smf42f1e_len 0x2A0 /* @10A */\n\n/* Values for field \"smf42frx\" */\n#define smf42fx3_len 0x80  /* @10A */\n\n/* Values for field \"smf42fqw\" */\n#define smf42fx4_len 0x20  /* @10A */\n\n/* Values for field \"smf42fbn\" */\n#define smf420fb_len 0x548 /* @10A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420GA": {"ttr": 8401, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ga \u00e4\n  struct \u00e4\n    int            _smf42gaa;     /* INTERVAL LENGTH. THIS IS THE           */\n    unsigned char  _smf42a00\u00c412\u00dc; /* RESERVED                    @MDK       */\n    unsigned char  _smf42gab\u00c444\u00dc; /* DATA SET NAME               @10A       */\n    int            _smf42a01;     /* RESERVED                    @10A       */\n    unsigned char  _smf42gac\u00c444\u00dc; /* VSAM SPHERE NAME            @10A       */\n    int            _smf42a02;     /* RESERVED                    @10A       */\n    short int      _smf42gad;     /* LENGTH OF THE STORAGE CLASS            */\n    unsigned char  _smf42gae\u00c430\u00dc; /* STORAGE CLASS NAME          @10A       */\n    short int      _smf42a03;     /* CACHESETNAME LENGTH         @10A       */\n    unsigned char  _smf42gaf\u00c430\u00dc; /* CACHESET NAME               @10A       */\n    unsigned char  _smf42gag\u00c42\u00dc;  /* RESERVED                    @10A       */\n    unsigned char  _smf42gah\u00c430\u00dc; /* DFP CACHE STRUCTURE NAME    @10A       */\n    int            _smf42gai;     /* INDICATOR OF COMPONENT BEING           */\n    unsigned char  _smf42gaj\u00c412\u00dc; /* INDICATES DFSMS GREATER     @P5A       */\n    int            _smf42gak;     /* NUMBER OF LOCK REQUESTS                */\n    int            _smf42gal;     /* NUMBER OF TRUE CONTENTION              */\n    int            _smf42gam;     /* NUMBER OF FALSE CONTENTION             */\n    short int      _smf42gz1;     /* SMSDIRECTWEIGHT             @10A       */\n    short int      _smf42gz2;     /* SMSSEQUENTIALWEIGHT         @10A       */\n    unsigned char  _smf42gan\u00c48\u00dc;  /* IN DFSMS 1.4   WLM SERV CLASS NAME@10A */\n    unsigned char  _smf42gao\u00c48\u00dc;  /* IN DFSMS 1.4   WLM REPORT CLS NAME@10A */\n    unsigned char  _smf42gap\u00c416\u00dc; /* SMS DATACLASS NAME          @P5A       */\n    struct \u00e4\n      struct \u00e4\n        int            _smf42gca;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gcb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gcc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gcd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gce;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gcf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gcg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gch;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gci;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gcj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gck;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gcl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gcm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gcn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gco;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gcp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gcq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gcr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gcs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gct\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gcu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gcv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gcw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gcx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gcy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gcz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gc7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42ga3;\n      struct \u00e4\n        int            _smf42gda;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gdb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gdc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gdd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gde;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gdf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gdg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gdh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gdi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gdj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gdk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gdl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gdm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gdn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gdo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gdp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gdq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gdr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gds;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gdt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gdu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gdv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gdw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gdx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gdy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gdz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gd7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42ga4;\n      \u00fc smf42ga2;\n    struct \u00e4\n      struct \u00e4\n        int            _smf42gea;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42geb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gec;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42ged;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gee;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gef;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42geg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42geh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gei;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gej;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gek;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gel;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gem;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gen;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42geo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gep;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42geq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42ger;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42ges;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42get\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42geu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gev\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gew\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gex;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gey;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gez\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42ge7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42ga6;\n      struct \u00e4\n        int            _smf42gfa;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gfb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gfc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gfd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gfe;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gff;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gfg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gfh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gfi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gfj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gfk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gfl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gfm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gfn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gfo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gfp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gfq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gfr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gfs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gft\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gfu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gfv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gfw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gfx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gfy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gfz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gf7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42ga7;\n      struct \u00e4\n        int            _smf42gga;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42ggb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42ggc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42ggd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gge;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42ggf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42ggg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42ggh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42ggi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42ggj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42ggk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42ggl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42ggm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42ggn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42ggo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42ggp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42ggq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42ggr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42ggs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42ggt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42ggu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42ggv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42ggw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42ggx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42ggy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42ggz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gg7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42ga8;\n      struct \u00e4\n        int            _smf42gha;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42ghb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42ghc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42ghd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42ghe;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42ghf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42ghg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42ghh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42ghi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42ghj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42ghk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42ghl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42ghm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42ghn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gho;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42ghp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42ghq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42ghr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42ghs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42ght\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42ghu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42ghv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42ghw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42ghx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42ghy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42ghz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gh7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42ga9;\n      struct \u00e4\n        int            _smf42gpa;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gpb;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gpc;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gpd;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gpe;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n        int            _smf42gpf;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n        unsigned char  _smf42gpg\u00c48\u00dc;  /* RESERVED                    @10A */\n        int            _smf42gph;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpi;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpj;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpk;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpl;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpm;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpn;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpo;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpp;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpq;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpr;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gps;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gpt;     /* NUMBER OF COMPONENT_2       @10A */\n        int            _smf42gpu;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n        int            _smf42gpv;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n        int            _smf42gpw;     /* NUMBER OF COMPONENT_2       @10A */\n        unsigned char  _smf42gpx\u00c432\u00dc; /* RESERVED                    @10A */\n        \u00fc smf42fx5;\n      \u00fc smf42ga5;\n    struct \u00e4\n      int            _smf42gra;     /* NUMBER OF REDOS             @21A */\n      int            _smf42grb;     /* NUMBER OF RECURSIVE REDOS   @21A */\n      int            _smf42grc;     /* NUMBER OF BMF WRITES        @21A */\n      int            _smf42grd;     /* NUMBER OF SCM READ REQUESTS @21A */\n      int            _smf42gre;     /* NUMBER OF SCM READ REQUESTS @21A */\n      int            _smf42grg;     /* REDO PERCENT                @21A */\n      int            _smf42grh;     /* RECURSIVE REDO PERCENT      @21A */\n      int            _smf42gri;     /* SCM CASTOUT LOCK PERCENT    @21A */\n      unsigned char  _smf42grf\u00c412\u00dc; /* RESERVED                    @21A */\n      unsigned char  _smf42grj\u00c44\u00dc;  /* RESERVED                    @21A */\n      unsigned char  _smf42grk\u00c416\u00dc; /* RESERVED                    @21A */\n      \u00fc smf42fx7;\n    \u00fc smf42ga1;\n  unsigned char  smf42gaq\u00c416\u00dc; /* LOCK STRUCTURE NAME         @L3A */\n  \u00fc;\n\n#define smf42gaa smf42ga1._smf42gaa\n#define smf42a00 smf42ga1._smf42a00\n#define smf42gab smf42ga1._smf42gab\n#define smf42a01 smf42ga1._smf42a01\n#define smf42gac smf42ga1._smf42gac\n#define smf42a02 smf42ga1._smf42a02\n#define smf42gad smf42ga1._smf42gad\n#define smf42gae smf42ga1._smf42gae\n#define smf42a03 smf42ga1._smf42a03\n#define smf42gaf smf42ga1._smf42gaf\n#define smf42gag smf42ga1._smf42gag\n#define smf42gah smf42ga1._smf42gah\n#define smf42gai smf42ga1._smf42gai\n#define smf42gaj smf42ga1._smf42gaj\n#define smf42gak smf42ga1._smf42gak\n#define smf42gal smf42ga1._smf42gal\n#define smf42gam smf42ga1._smf42gam\n#define smf42gz1 smf42ga1._smf42gz1\n#define smf42gz2 smf42ga1._smf42gz2\n#define smf42gan smf42ga1._smf42gan\n#define smf42gao smf42ga1._smf42gao\n#define smf42gap smf42ga1._smf42gap\n#define smf42gca smf42ga1.smf42ga2.smf42ga3._smf42gca\n#define smf42gcb smf42ga1.smf42ga2.smf42ga3._smf42gcb\n#define smf42gcc smf42ga1.smf42ga2.smf42ga3._smf42gcc\n#define smf42gcd smf42ga1.smf42ga2.smf42ga3._smf42gcd\n#define smf42gce smf42ga1.smf42ga2.smf42ga3._smf42gce\n#define smf42gcf smf42ga1.smf42ga2.smf42ga3._smf42gcf\n#define smf42gcg smf42ga1.smf42ga2.smf42ga3._smf42gcg\n#define smf42gch smf42ga1.smf42ga2.smf42ga3._smf42gch\n#define smf42gci smf42ga1.smf42ga2.smf42ga3._smf42gci\n#define smf42gcj smf42ga1.smf42ga2.smf42ga3._smf42gcj\n#define smf42gck smf42ga1.smf42ga2.smf42ga3._smf42gck\n#define smf42gcl smf42ga1.smf42ga2.smf42ga3._smf42gcl\n#define smf42gcm smf42ga1.smf42ga2.smf42ga3._smf42gcm\n#define smf42gcn smf42ga1.smf42ga2.smf42ga3._smf42gcn\n#define smf42gco smf42ga1.smf42ga2.smf42ga3._smf42gco\n#define smf42gcp smf42ga1.smf42ga2.smf42ga3._smf42gcp\n#define smf42gcq smf42ga1.smf42ga2.smf42ga3._smf42gcq\n#define smf42gcr smf42ga1.smf42ga2.smf42ga3._smf42gcr\n#define smf42gcs smf42ga1.smf42ga2.smf42ga3._smf42gcs\n#define smf42gct smf42ga1.smf42ga2.smf42ga3._smf42gct\n#define smf42gcu smf42ga1.smf42ga2.smf42ga3._smf42gcu\n#define smf42gcv smf42ga1.smf42ga2.smf42ga3._smf42gcv\n#define smf42gcw smf42ga1.smf42ga2.smf42ga3._smf42gcw\n#define smf42gcx smf42ga1.smf42ga2.smf42ga3._smf42gcx\n#define smf42gcy smf42ga1.smf42ga2.smf42ga3._smf42gcy\n#define smf42gcz smf42ga1.smf42ga2.smf42ga3._smf42gcz\n#define smf42gc7 smf42ga1.smf42ga2.smf42ga3._smf42gc7\n#define smf42gda smf42ga1.smf42ga2.smf42ga4._smf42gda\n#define smf42gdb smf42ga1.smf42ga2.smf42ga4._smf42gdb\n#define smf42gdc smf42ga1.smf42ga2.smf42ga4._smf42gdc\n#define smf42gdd smf42ga1.smf42ga2.smf42ga4._smf42gdd\n#define smf42gde smf42ga1.smf42ga2.smf42ga4._smf42gde\n#define smf42gdf smf42ga1.smf42ga2.smf42ga4._smf42gdf\n#define smf42gdg smf42ga1.smf42ga2.smf42ga4._smf42gdg\n#define smf42gdh smf42ga1.smf42ga2.smf42ga4._smf42gdh\n#define smf42gdi smf42ga1.smf42ga2.smf42ga4._smf42gdi\n#define smf42gdj smf42ga1.smf42ga2.smf42ga4._smf42gdj\n#define smf42gdk smf42ga1.smf42ga2.smf42ga4._smf42gdk\n#define smf42gdl smf42ga1.smf42ga2.smf42ga4._smf42gdl\n#define smf42gdm smf42ga1.smf42ga2.smf42ga4._smf42gdm\n#define smf42gdn smf42ga1.smf42ga2.smf42ga4._smf42gdn\n#define smf42gdo smf42ga1.smf42ga2.smf42ga4._smf42gdo\n#define smf42gdp smf42ga1.smf42ga2.smf42ga4._smf42gdp\n#define smf42gdq smf42ga1.smf42ga2.smf42ga4._smf42gdq\n#define smf42gdr smf42ga1.smf42ga2.smf42ga4._smf42gdr\n#define smf42gds smf42ga1.smf42ga2.smf42ga4._smf42gds\n#define smf42gdt smf42ga1.smf42ga2.smf42ga4._smf42gdt\n#define smf42gdu smf42ga1.smf42ga2.smf42ga4._smf42gdu\n#define smf42gdv smf42ga1.smf42ga2.smf42ga4._smf42gdv\n#define smf42gdw smf42ga1.smf42ga2.smf42ga4._smf42gdw\n#define smf42gdx smf42ga1.smf42ga2.smf42ga4._smf42gdx\n#define smf42gdy smf42ga1.smf42ga2.smf42ga4._smf42gdy\n#define smf42gdz smf42ga1.smf42ga2.smf42ga4._smf42gdz\n#define smf42gd7 smf42ga1.smf42ga2.smf42ga4._smf42gd7\n#define smf42gea smf42ga1.smf42ga5.smf42ga6._smf42gea\n#define smf42geb smf42ga1.smf42ga5.smf42ga6._smf42geb\n#define smf42gec smf42ga1.smf42ga5.smf42ga6._smf42gec\n#define smf42ged smf42ga1.smf42ga5.smf42ga6._smf42ged\n#define smf42gee smf42ga1.smf42ga5.smf42ga6._smf42gee\n#define smf42gef smf42ga1.smf42ga5.smf42ga6._smf42gef\n#define smf42geg smf42ga1.smf42ga5.smf42ga6._smf42geg\n#define smf42geh smf42ga1.smf42ga5.smf42ga6._smf42geh\n#define smf42gei smf42ga1.smf42ga5.smf42ga6._smf42gei\n#define smf42gej smf42ga1.smf42ga5.smf42ga6._smf42gej\n#define smf42gek smf42ga1.smf42ga5.smf42ga6._smf42gek\n#define smf42gel smf42ga1.smf42ga5.smf42ga6._smf42gel\n#define smf42gem smf42ga1.smf42ga5.smf42ga6._smf42gem\n#define smf42gen smf42ga1.smf42ga5.smf42ga6._smf42gen\n#define smf42geo smf42ga1.smf42ga5.smf42ga6._smf42geo\n#define smf42gep smf42ga1.smf42ga5.smf42ga6._smf42gep\n#define smf42geq smf42ga1.smf42ga5.smf42ga6._smf42geq\n#define smf42ger smf42ga1.smf42ga5.smf42ga6._smf42ger\n#define smf42ges smf42ga1.smf42ga5.smf42ga6._smf42ges\n#define smf42get smf42ga1.smf42ga5.smf42ga6._smf42get\n#define smf42geu smf42ga1.smf42ga5.smf42ga6._smf42geu\n#define smf42gev smf42ga1.smf42ga5.smf42ga6._smf42gev\n#define smf42gew smf42ga1.smf42ga5.smf42ga6._smf42gew\n#define smf42gex smf42ga1.smf42ga5.smf42ga6._smf42gex\n#define smf42gey smf42ga1.smf42ga5.smf42ga6._smf42gey\n#define smf42gez smf42ga1.smf42ga5.smf42ga6._smf42gez\n#define smf42ge7 smf42ga1.smf42ga5.smf42ga6._smf42ge7\n#define smf42gfa smf42ga1.smf42ga5.smf42ga7._smf42gfa\n#define smf42gfb smf42ga1.smf42ga5.smf42ga7._smf42gfb\n#define smf42gfc smf42ga1.smf42ga5.smf42ga7._smf42gfc\n#define smf42gfd smf42ga1.smf42ga5.smf42ga7._smf42gfd\n#define smf42gfe smf42ga1.smf42ga5.smf42ga7._smf42gfe\n#define smf42gff smf42ga1.smf42ga5.smf42ga7._smf42gff\n#define smf42gfg smf42ga1.smf42ga5.smf42ga7._smf42gfg\n#define smf42gfh smf42ga1.smf42ga5.smf42ga7._smf42gfh\n#define smf42gfi smf42ga1.smf42ga5.smf42ga7._smf42gfi\n#define smf42gfj smf42ga1.smf42ga5.smf42ga7._smf42gfj\n#define smf42gfk smf42ga1.smf42ga5.smf42ga7._smf42gfk\n#define smf42gfl smf42ga1.smf42ga5.smf42ga7._smf42gfl\n#define smf42gfm smf42ga1.smf42ga5.smf42ga7._smf42gfm\n#define smf42gfn smf42ga1.smf42ga5.smf42ga7._smf42gfn\n#define smf42gfo smf42ga1.smf42ga5.smf42ga7._smf42gfo\n#define smf42gfp smf42ga1.smf42ga5.smf42ga7._smf42gfp\n#define smf42gfq smf42ga1.smf42ga5.smf42ga7._smf42gfq\n#define smf42gfr smf42ga1.smf42ga5.smf42ga7._smf42gfr\n#define smf42gfs smf42ga1.smf42ga5.smf42ga7._smf42gfs\n#define smf42gft smf42ga1.smf42ga5.smf42ga7._smf42gft\n#define smf42gfu smf42ga1.smf42ga5.smf42ga7._smf42gfu\n#define smf42gfv smf42ga1.smf42ga5.smf42ga7._smf42gfv\n#define smf42gfw smf42ga1.smf42ga5.smf42ga7._smf42gfw\n#define smf42gfx smf42ga1.smf42ga5.smf42ga7._smf42gfx\n#define smf42gfy smf42ga1.smf42ga5.smf42ga7._smf42gfy\n#define smf42gfz smf42ga1.smf42ga5.smf42ga7._smf42gfz\n#define smf42gf7 smf42ga1.smf42ga5.smf42ga7._smf42gf7\n#define smf42gga smf42ga1.smf42ga5.smf42ga8._smf42gga\n#define smf42ggb smf42ga1.smf42ga5.smf42ga8._smf42ggb\n#define smf42ggc smf42ga1.smf42ga5.smf42ga8._smf42ggc\n#define smf42ggd smf42ga1.smf42ga5.smf42ga8._smf42ggd\n#define smf42gge smf42ga1.smf42ga5.smf42ga8._smf42gge\n#define smf42ggf smf42ga1.smf42ga5.smf42ga8._smf42ggf\n#define smf42ggg smf42ga1.smf42ga5.smf42ga8._smf42ggg\n#define smf42ggh smf42ga1.smf42ga5.smf42ga8._smf42ggh\n#define smf42ggi smf42ga1.smf42ga5.smf42ga8._smf42ggi\n#define smf42ggj smf42ga1.smf42ga5.smf42ga8._smf42ggj\n#define smf42ggk smf42ga1.smf42ga5.smf42ga8._smf42ggk\n#define smf42ggl smf42ga1.smf42ga5.smf42ga8._smf42ggl\n#define smf42ggm smf42ga1.smf42ga5.smf42ga8._smf42ggm\n#define smf42ggn smf42ga1.smf42ga5.smf42ga8._smf42ggn\n#define smf42ggo smf42ga1.smf42ga5.smf42ga8._smf42ggo\n#define smf42ggp smf42ga1.smf42ga5.smf42ga8._smf42ggp\n#define smf42ggq smf42ga1.smf42ga5.smf42ga8._smf42ggq\n#define smf42ggr smf42ga1.smf42ga5.smf42ga8._smf42ggr\n#define smf42ggs smf42ga1.smf42ga5.smf42ga8._smf42ggs\n#define smf42ggt smf42ga1.smf42ga5.smf42ga8._smf42ggt\n#define smf42ggu smf42ga1.smf42ga5.smf42ga8._smf42ggu\n#define smf42ggv smf42ga1.smf42ga5.smf42ga8._smf42ggv\n#define smf42ggw smf42ga1.smf42ga5.smf42ga8._smf42ggw\n#define smf42ggx smf42ga1.smf42ga5.smf42ga8._smf42ggx\n#define smf42ggy smf42ga1.smf42ga5.smf42ga8._smf42ggy\n#define smf42ggz smf42ga1.smf42ga5.smf42ga8._smf42ggz\n#define smf42gg7 smf42ga1.smf42ga5.smf42ga8._smf42gg7\n#define smf42gha smf42ga1.smf42ga5.smf42ga9._smf42gha\n#define smf42ghb smf42ga1.smf42ga5.smf42ga9._smf42ghb\n#define smf42ghc smf42ga1.smf42ga5.smf42ga9._smf42ghc\n#define smf42ghd smf42ga1.smf42ga5.smf42ga9._smf42ghd\n#define smf42ghe smf42ga1.smf42ga5.smf42ga9._smf42ghe\n#define smf42ghf smf42ga1.smf42ga5.smf42ga9._smf42ghf\n#define smf42ghg smf42ga1.smf42ga5.smf42ga9._smf42ghg\n#define smf42ghh smf42ga1.smf42ga5.smf42ga9._smf42ghh\n#define smf42ghi smf42ga1.smf42ga5.smf42ga9._smf42ghi\n#define smf42ghj smf42ga1.smf42ga5.smf42ga9._smf42ghj\n#define smf42ghk smf42ga1.smf42ga5.smf42ga9._smf42ghk\n#define smf42ghl smf42ga1.smf42ga5.smf42ga9._smf42ghl\n#define smf42ghm smf42ga1.smf42ga5.smf42ga9._smf42ghm\n#define smf42ghn smf42ga1.smf42ga5.smf42ga9._smf42ghn\n#define smf42gho smf42ga1.smf42ga5.smf42ga9._smf42gho\n#define smf42ghp smf42ga1.smf42ga5.smf42ga9._smf42ghp\n#define smf42ghq smf42ga1.smf42ga5.smf42ga9._smf42ghq\n#define smf42ghr smf42ga1.smf42ga5.smf42ga9._smf42ghr\n#define smf42ghs smf42ga1.smf42ga5.smf42ga9._smf42ghs\n#define smf42ght smf42ga1.smf42ga5.smf42ga9._smf42ght\n#define smf42ghu smf42ga1.smf42ga5.smf42ga9._smf42ghu\n#define smf42ghv smf42ga1.smf42ga5.smf42ga9._smf42ghv\n#define smf42ghw smf42ga1.smf42ga5.smf42ga9._smf42ghw\n#define smf42ghx smf42ga1.smf42ga5.smf42ga9._smf42ghx\n#define smf42ghy smf42ga1.smf42ga5.smf42ga9._smf42ghy\n#define smf42ghz smf42ga1.smf42ga5.smf42ga9._smf42ghz\n#define smf42gh7 smf42ga1.smf42ga5.smf42ga9._smf42gh7\n#define smf42gpa smf42ga1.smf42ga5.smf42fx5._smf42gpa\n#define smf42gpb smf42ga1.smf42ga5.smf42fx5._smf42gpb\n#define smf42gpc smf42ga1.smf42ga5.smf42fx5._smf42gpc\n#define smf42gpd smf42ga1.smf42ga5.smf42fx5._smf42gpd\n#define smf42gpe smf42ga1.smf42ga5.smf42fx5._smf42gpe\n#define smf42gpf smf42ga1.smf42ga5.smf42fx5._smf42gpf\n#define smf42gpg smf42ga1.smf42ga5.smf42fx5._smf42gpg\n#define smf42gph smf42ga1.smf42ga5.smf42fx5._smf42gph\n#define smf42gpi smf42ga1.smf42ga5.smf42fx5._smf42gpi\n#define smf42gpj smf42ga1.smf42ga5.smf42fx5._smf42gpj\n#define smf42gpk smf42ga1.smf42ga5.smf42fx5._smf42gpk\n#define smf42gpl smf42ga1.smf42ga5.smf42fx5._smf42gpl\n#define smf42gpm smf42ga1.smf42ga5.smf42fx5._smf42gpm\n#define smf42gpn smf42ga1.smf42ga5.smf42fx5._smf42gpn\n#define smf42gpo smf42ga1.smf42ga5.smf42fx5._smf42gpo\n#define smf42gpp smf42ga1.smf42ga5.smf42fx5._smf42gpp\n#define smf42gpq smf42ga1.smf42ga5.smf42fx5._smf42gpq\n#define smf42gpr smf42ga1.smf42ga5.smf42fx5._smf42gpr\n#define smf42gps smf42ga1.smf42ga5.smf42fx5._smf42gps\n#define smf42gpt smf42ga1.smf42ga5.smf42fx5._smf42gpt\n#define smf42gpu smf42ga1.smf42ga5.smf42fx5._smf42gpu\n#define smf42gpv smf42ga1.smf42ga5.smf42fx5._smf42gpv\n#define smf42gpw smf42ga1.smf42ga5.smf42fx5._smf42gpw\n#define smf42gpx smf42ga1.smf42ga5.smf42fx5._smf42gpx\n#define smf42gra smf42ga1.smf42fx7._smf42gra\n#define smf42grb smf42ga1.smf42fx7._smf42grb\n#define smf42grc smf42ga1.smf42fx7._smf42grc\n#define smf42grd smf42ga1.smf42fx7._smf42grd\n#define smf42gre smf42ga1.smf42fx7._smf42gre\n#define smf42grg smf42ga1.smf42fx7._smf42grg\n#define smf42grh smf42ga1.smf42fx7._smf42grh\n#define smf42gri smf42ga1.smf42fx7._smf42gri\n#define smf42grf smf42ga1.smf42fx7._smf42grf\n#define smf42grj smf42ga1.smf42fx7._smf42grj\n#define smf42grk smf42ga1.smf42fx7._smf42grk\n\n/* Values for field \"smf42gai\" */\n#define smf42gai0    0x80000000 /* DATA COMPONENT              @10A */\n#define smf42gai1    0x40000000 /* INDEX COMPONENT             @10A */\n\n/* Values for field \"smf42gc7\" */\n#define smf42ga3_len 0xA8       /* @10A                             */\n\n/* Values for field \"smf42gd7\" */\n#define smf42ga4_len 0xA8       /* @10A                             */\n#define smf42ga2_len 0x150      /* @10A                             */\n\n/* Values for field \"smf42ge7\" */\n#define smf42ga6_len 0xA8\n\n/* Values for field \"smf42gf7\" */\n#define smf42ga7_len 0xA8\n\n/* Values for field \"smf42gg7\" */\n#define smf42ga8_len 0xA8\n\n/* Values for field \"smf42gh7\" */\n#define smf42ga9_len 0xA8\n#define smf42ga5_len 0x2A0\n\n/* Values for field \"smf42gpx\" */\n#define smf42fx5_len 0x80       /* @10A                             */\n\n/* Values for field \"smf42grk\" */\n#define smf42fx7_len 0x40       /* @21A                             */\n\n/* Values for field \"smf42gaq\" */\n#define smf420ga_len 0x5D0      /* @10A                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420GB": {"ttr": 8549, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420gb \u00e4\n  struct \u00e4\n    int            _smf42gba;     /* INTERVAL LENGTH. THIS IS THE           */\n    unsigned char  _smf42a05\u00c412\u00dc; /* RESERVED                    @10A       */\n    unsigned char  _smf42gbb\u00c444\u00dc; /* DATA SET NAME               @10A       */\n    int            _smf42a06;     /* RESERVED                    @10A       */\n    unsigned char  _smf42gbc\u00c444\u00dc; /* VSAM SPHERE NAME            @10A       */\n    int            _smf42a07;     /* RESERVED                    @10A       */\n    short int      _smf42gbd;     /* LENGTH OF THE STORAGE CLASS            */\n    unsigned char  _smf42gbe\u00c430\u00dc; /* STORAGE CLASS NAME          @10A       */\n    short int      _smf42a08;     /* CACHESETNAME LENGTH         @10A       */\n    unsigned char  _smf42gbf\u00c430\u00dc; /* CACHESET NAME               @10A       */\n    short int      _smf42a12;     /* RESERVED                    @10A       */\n    unsigned char  _smf42gbg\u00c430\u00dc; /* DFP CACHE STRUCTURE NAME    @10A       */\n    unsigned char  _smf42gbh\u00c48\u00dc;  /* MVS SYSTEM NAME             @10A       */\n    unsigned char  _smf42a11\u00c48\u00dc;  /* RESERVED                    @10A       */\n    int            _smf42gbi;     /* INDICATOR OF COMPONENT BEING           */\n    unsigned char  _smf42a09\u00c412\u00dc; /* INDICATES DFSMS GREATER     @P5A       */\n    int            _smf42gbk;     /* NUMBER OF LOCK REQUESTS                */\n    int            _smf42gbl;     /* NUMBER OF TRUE CONTENTION              */\n    int            _smf42gbm;     /* NUMBER OF FALSE CONTENTION             */\n    short int      _smf42gz8;     /* SMSDIRECTWEIGHT             @10A       */\n    short int      _smf42gz9;     /* SMSSEQUENTIALWEIGHT         @10A       */\n    unsigned char  _smf42gbn\u00c48\u00dc;  /* IN DFSMS 1.4   WLM SERV CLASS NAME@10A */\n    unsigned char  _smf42gbo\u00c48\u00dc;  /* IN DFSMS 1.4   WLM REPORT CLS NAME@10A */\n    unsigned char  _smf42gbp\u00c416\u00dc; /* SMS DATACLASS NAME          @P5A       */\n    struct \u00e4\n      struct \u00e4\n        int            _smf42gia;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gib;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gic;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gid;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gie;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gif;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gig;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gih;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gii;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gij;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gik;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gil;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gim;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gin;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gio;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gip;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42giq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gir;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gis;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42git\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42giu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42giv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42giw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gix;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42giy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42giz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gi7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42g1c;\n      struct \u00e4\n        int            _smf42gja;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gjb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gjc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gjd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gje;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gjf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gjg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gjh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gji;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gjj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gjk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gjl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gjm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gjn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gjo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gjp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gjq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gjr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gjs;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gjt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gju\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gjv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gjw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gjx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gjy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gjz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gj7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42g1d;\n      \u00fc smf42g1b;\n    struct \u00e4\n      struct \u00e4\n        int            _smf42gka;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gkb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gkc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gkd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gke;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gkf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gkg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gkh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gki;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gkj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gkk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gkl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gkm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gkn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gko;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gkp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gkq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gkr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gks;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gkt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gku\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gkv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gkw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gkx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gky;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gkz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gk7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42g1f;\n      struct \u00e4\n        int            _smf42gla;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42glb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42glc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gld;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gle;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42glf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42glg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42glh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gli;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42glj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42glk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gll;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42glm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gln;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42glo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42glp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42glq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42glr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gls;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42glt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42glu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42glv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42glw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42glx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gly;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42glz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gl7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42g1g;\n      struct \u00e4\n        int            _smf42gma;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gmb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gmc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gmd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gme;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gmf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gmg;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gmh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gmi;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gmj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gmk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gml;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gmm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gmn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gmo;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gmp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gmq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gmr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gms;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gmt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gmu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gmv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gmw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gmx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gmy;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gmz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gm7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42g1h;\n      struct \u00e4\n        int            _smf42gna;     /* COUPLE FACILITY CACHE PARTITION   */\n        int            _smf42gnb;     /* TOTAL NUMBER OF REQUESTS          */\n        int            _smf42gnc;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gnd;     /* TOTAL NUMBER OF READ REQUESTS -   */\n        int            _smf42gne;     /* TOTAL NUMBER OF WRITE REQUESTS    */\n        int            _smf42gnf;     /* NUMBER OF BMF REQUESTS            */\n        int            _smf42gng;     /* NUMBER OF BMF READ REQUESTS       */\n        int            _smf42gnh;     /* NUMBER OF BMF WRITE REQUESTS      */\n        int            _smf42gni;     /* NUMBER OF BMF READ HITS           */\n        int            _smf42gnj;     /* NUMBER OF BMF VALID READ HITS     */\n        int            _smf42gnk;     /* NUMBER OF BMF FALSE INVALIDS      */\n        int            _smf42gnl;     /* NUMBER OF REQUESTS PROCESSED BY   */\n        int            _smf42gnm;     /* NUMBER OF CF READ REQUESTS        */\n        int            _smf42gnn;     /* NUMBER OF CF WRITE REQUESTS @10A  */\n        int            _smf42gno;     /* NUMBER OF CF READ HITS      @10A  */\n        int            _smf42gnp;     /* NUMBER OF CF READ CASTINS   @10A  */\n        int            _smf42gnq\u00c42\u00dc;  /* NUMBER OF BYTES XFERRED INTO THE  */\n        int            _smf42gnr;     /* NUMBER OF READ  REAL I/O REQUESTS */\n        int            _smf42gns;     /* NUMBER OF WRITE REAL I/O REQUESTS */\n        int            _smf42gnt\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        int            _smf42gnu\u00c42\u00dc;  /* NUMBER OF BYTES TRANSFERRED TO    */\n        unsigned char  _smf42gnv\u00c416\u00dc; /* RESERVED                          */\n        int            _smf42gnw\u00c42\u00dc;  /* TOTAL AMOUNT OF TIME FOR ALL THE  */\n        int            _smf42gnx;     /* AVERAGE RESPONSE TIME FOR ALL OF  */\n        int            _smf42gny;     /* NORMALIZED RESPONSE TIME FOR ALL  */\n        unsigned char  _smf42gnz\u00c48\u00dc;  /* RESERVED                    @10A  */\n        unsigned char  _smf42gn7\u00c432\u00dc; /* RESERVED                    @10A  */\n        \u00fc smf42g1i;\n      struct \u00e4\n        int            _smf42gqa;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gqb;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gqc;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gqd;     /* NUMBER OF RECORD LOCK       @10A */\n        int            _smf42gqe;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n        int            _smf42gqf;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n        unsigned char  _smf42gqg\u00c48\u00dc;  /* RESERVED                    @10A */\n        int            _smf42gqh;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqi;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqj;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqk;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gql;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqm;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqn;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqo;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqp;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqq;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqr;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqs;     /* NUMBER OF COMPONENT_1       @10A */\n        int            _smf42gqt;     /* NUMBER OF COMPONENT_2       @10A */\n        int            _smf42gqu;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n        int            _smf42gqv;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n        int            _smf42gqw;     /* NUMBER OF COMPONENT_2       @10A */\n        unsigned char  _smf42gqx\u00c432\u00dc; /* RESERVED                    @10A */\n        \u00fc smf42gx6;\n      \u00fc smf42g1e;\n    struct \u00e4\n      int            _smf42grl;     /* NUMBER OF REDOS             @21A */\n      int            _smf42grm;     /* NUMBER OF RECURSIVE REDOS   @21A */\n      int            _smf42grn;     /* NUMBER OF BMF WRITES        @21A */\n      int            _smf42gro;     /* NUMBER OF SCM READ REQUESTS @21A */\n      int            _smf42grp;     /* NUMBER OF SCM READ REQUESTS @21A */\n      int            _smf42grr;     /* REDO PERCENT                @21A */\n      int            _smf42grs;     /* RECURSIVE REDO PERCENT      @21A */\n      int            _smf42grt;     /* SCM CASTOUT LOCK PERCENT    @21A */\n      unsigned char  _smf42grq\u00c412\u00dc; /* RESERVED                    @21A */\n      unsigned char  _smf42gru\u00c44\u00dc;  /* RESERVED                    @21A */\n      unsigned char  _smf42grv\u00c416\u00dc; /* RESERVED                    @21A */\n      \u00fc smf42fx8;\n    \u00fc smf42g1a;\n  unsigned char  smf42gbq\u00c416\u00dc; /* LOCK STRUCTURE NAME         @P7A */\n  \u00fc;\n\n#define smf42gba smf42g1a._smf42gba\n#define smf42a05 smf42g1a._smf42a05\n#define smf42gbb smf42g1a._smf42gbb\n#define smf42a06 smf42g1a._smf42a06\n#define smf42gbc smf42g1a._smf42gbc\n#define smf42a07 smf42g1a._smf42a07\n#define smf42gbd smf42g1a._smf42gbd\n#define smf42gbe smf42g1a._smf42gbe\n#define smf42a08 smf42g1a._smf42a08\n#define smf42gbf smf42g1a._smf42gbf\n#define smf42a12 smf42g1a._smf42a12\n#define smf42gbg smf42g1a._smf42gbg\n#define smf42gbh smf42g1a._smf42gbh\n#define smf42a11 smf42g1a._smf42a11\n#define smf42gbi smf42g1a._smf42gbi\n#define smf42a09 smf42g1a._smf42a09\n#define smf42gbk smf42g1a._smf42gbk\n#define smf42gbl smf42g1a._smf42gbl\n#define smf42gbm smf42g1a._smf42gbm\n#define smf42gz8 smf42g1a._smf42gz8\n#define smf42gz9 smf42g1a._smf42gz9\n#define smf42gbn smf42g1a._smf42gbn\n#define smf42gbo smf42g1a._smf42gbo\n#define smf42gbp smf42g1a._smf42gbp\n#define smf42gia smf42g1a.smf42g1b.smf42g1c._smf42gia\n#define smf42gib smf42g1a.smf42g1b.smf42g1c._smf42gib\n#define smf42gic smf42g1a.smf42g1b.smf42g1c._smf42gic\n#define smf42gid smf42g1a.smf42g1b.smf42g1c._smf42gid\n#define smf42gie smf42g1a.smf42g1b.smf42g1c._smf42gie\n#define smf42gif smf42g1a.smf42g1b.smf42g1c._smf42gif\n#define smf42gig smf42g1a.smf42g1b.smf42g1c._smf42gig\n#define smf42gih smf42g1a.smf42g1b.smf42g1c._smf42gih\n#define smf42gii smf42g1a.smf42g1b.smf42g1c._smf42gii\n#define smf42gij smf42g1a.smf42g1b.smf42g1c._smf42gij\n#define smf42gik smf42g1a.smf42g1b.smf42g1c._smf42gik\n#define smf42gil smf42g1a.smf42g1b.smf42g1c._smf42gil\n#define smf42gim smf42g1a.smf42g1b.smf42g1c._smf42gim\n#define smf42gin smf42g1a.smf42g1b.smf42g1c._smf42gin\n#define smf42gio smf42g1a.smf42g1b.smf42g1c._smf42gio\n#define smf42gip smf42g1a.smf42g1b.smf42g1c._smf42gip\n#define smf42giq smf42g1a.smf42g1b.smf42g1c._smf42giq\n#define smf42gir smf42g1a.smf42g1b.smf42g1c._smf42gir\n#define smf42gis smf42g1a.smf42g1b.smf42g1c._smf42gis\n#define smf42git smf42g1a.smf42g1b.smf42g1c._smf42git\n#define smf42giu smf42g1a.smf42g1b.smf42g1c._smf42giu\n#define smf42giv smf42g1a.smf42g1b.smf42g1c._smf42giv\n#define smf42giw smf42g1a.smf42g1b.smf42g1c._smf42giw\n#define smf42gix smf42g1a.smf42g1b.smf42g1c._smf42gix\n#define smf42giy smf42g1a.smf42g1b.smf42g1c._smf42giy\n#define smf42giz smf42g1a.smf42g1b.smf42g1c._smf42giz\n#define smf42gi7 smf42g1a.smf42g1b.smf42g1c._smf42gi7\n#define smf42gja smf42g1a.smf42g1b.smf42g1d._smf42gja\n#define smf42gjb smf42g1a.smf42g1b.smf42g1d._smf42gjb\n#define smf42gjc smf42g1a.smf42g1b.smf42g1d._smf42gjc\n#define smf42gjd smf42g1a.smf42g1b.smf42g1d._smf42gjd\n#define smf42gje smf42g1a.smf42g1b.smf42g1d._smf42gje\n#define smf42gjf smf42g1a.smf42g1b.smf42g1d._smf42gjf\n#define smf42gjg smf42g1a.smf42g1b.smf42g1d._smf42gjg\n#define smf42gjh smf42g1a.smf42g1b.smf42g1d._smf42gjh\n#define smf42gji smf42g1a.smf42g1b.smf42g1d._smf42gji\n#define smf42gjj smf42g1a.smf42g1b.smf42g1d._smf42gjj\n#define smf42gjk smf42g1a.smf42g1b.smf42g1d._smf42gjk\n#define smf42gjl smf42g1a.smf42g1b.smf42g1d._smf42gjl\n#define smf42gjm smf42g1a.smf42g1b.smf42g1d._smf42gjm\n#define smf42gjn smf42g1a.smf42g1b.smf42g1d._smf42gjn\n#define smf42gjo smf42g1a.smf42g1b.smf42g1d._smf42gjo\n#define smf42gjp smf42g1a.smf42g1b.smf42g1d._smf42gjp\n#define smf42gjq smf42g1a.smf42g1b.smf42g1d._smf42gjq\n#define smf42gjr smf42g1a.smf42g1b.smf42g1d._smf42gjr\n#define smf42gjs smf42g1a.smf42g1b.smf42g1d._smf42gjs\n#define smf42gjt smf42g1a.smf42g1b.smf42g1d._smf42gjt\n#define smf42gju smf42g1a.smf42g1b.smf42g1d._smf42gju\n#define smf42gjv smf42g1a.smf42g1b.smf42g1d._smf42gjv\n#define smf42gjw smf42g1a.smf42g1b.smf42g1d._smf42gjw\n#define smf42gjx smf42g1a.smf42g1b.smf42g1d._smf42gjx\n#define smf42gjy smf42g1a.smf42g1b.smf42g1d._smf42gjy\n#define smf42gjz smf42g1a.smf42g1b.smf42g1d._smf42gjz\n#define smf42gj7 smf42g1a.smf42g1b.smf42g1d._smf42gj7\n#define smf42gka smf42g1a.smf42g1e.smf42g1f._smf42gka\n#define smf42gkb smf42g1a.smf42g1e.smf42g1f._smf42gkb\n#define smf42gkc smf42g1a.smf42g1e.smf42g1f._smf42gkc\n#define smf42gkd smf42g1a.smf42g1e.smf42g1f._smf42gkd\n#define smf42gke smf42g1a.smf42g1e.smf42g1f._smf42gke\n#define smf42gkf smf42g1a.smf42g1e.smf42g1f._smf42gkf\n#define smf42gkg smf42g1a.smf42g1e.smf42g1f._smf42gkg\n#define smf42gkh smf42g1a.smf42g1e.smf42g1f._smf42gkh\n#define smf42gki smf42g1a.smf42g1e.smf42g1f._smf42gki\n#define smf42gkj smf42g1a.smf42g1e.smf42g1f._smf42gkj\n#define smf42gkk smf42g1a.smf42g1e.smf42g1f._smf42gkk\n#define smf42gkl smf42g1a.smf42g1e.smf42g1f._smf42gkl\n#define smf42gkm smf42g1a.smf42g1e.smf42g1f._smf42gkm\n#define smf42gkn smf42g1a.smf42g1e.smf42g1f._smf42gkn\n#define smf42gko smf42g1a.smf42g1e.smf42g1f._smf42gko\n#define smf42gkp smf42g1a.smf42g1e.smf42g1f._smf42gkp\n#define smf42gkq smf42g1a.smf42g1e.smf42g1f._smf42gkq\n#define smf42gkr smf42g1a.smf42g1e.smf42g1f._smf42gkr\n#define smf42gks smf42g1a.smf42g1e.smf42g1f._smf42gks\n#define smf42gkt smf42g1a.smf42g1e.smf42g1f._smf42gkt\n#define smf42gku smf42g1a.smf42g1e.smf42g1f._smf42gku\n#define smf42gkv smf42g1a.smf42g1e.smf42g1f._smf42gkv\n#define smf42gkw smf42g1a.smf42g1e.smf42g1f._smf42gkw\n#define smf42gkx smf42g1a.smf42g1e.smf42g1f._smf42gkx\n#define smf42gky smf42g1a.smf42g1e.smf42g1f._smf42gky\n#define smf42gkz smf42g1a.smf42g1e.smf42g1f._smf42gkz\n#define smf42gk7 smf42g1a.smf42g1e.smf42g1f._smf42gk7\n#define smf42gla smf42g1a.smf42g1e.smf42g1g._smf42gla\n#define smf42glb smf42g1a.smf42g1e.smf42g1g._smf42glb\n#define smf42glc smf42g1a.smf42g1e.smf42g1g._smf42glc\n#define smf42gld smf42g1a.smf42g1e.smf42g1g._smf42gld\n#define smf42gle smf42g1a.smf42g1e.smf42g1g._smf42gle\n#define smf42glf smf42g1a.smf42g1e.smf42g1g._smf42glf\n#define smf42glg smf42g1a.smf42g1e.smf42g1g._smf42glg\n#define smf42glh smf42g1a.smf42g1e.smf42g1g._smf42glh\n#define smf42gli smf42g1a.smf42g1e.smf42g1g._smf42gli\n#define smf42glj smf42g1a.smf42g1e.smf42g1g._smf42glj\n#define smf42glk smf42g1a.smf42g1e.smf42g1g._smf42glk\n#define smf42gll smf42g1a.smf42g1e.smf42g1g._smf42gll\n#define smf42glm smf42g1a.smf42g1e.smf42g1g._smf42glm\n#define smf42gln smf42g1a.smf42g1e.smf42g1g._smf42gln\n#define smf42glo smf42g1a.smf42g1e.smf42g1g._smf42glo\n#define smf42glp smf42g1a.smf42g1e.smf42g1g._smf42glp\n#define smf42glq smf42g1a.smf42g1e.smf42g1g._smf42glq\n#define smf42glr smf42g1a.smf42g1e.smf42g1g._smf42glr\n#define smf42gls smf42g1a.smf42g1e.smf42g1g._smf42gls\n#define smf42glt smf42g1a.smf42g1e.smf42g1g._smf42glt\n#define smf42glu smf42g1a.smf42g1e.smf42g1g._smf42glu\n#define smf42glv smf42g1a.smf42g1e.smf42g1g._smf42glv\n#define smf42glw smf42g1a.smf42g1e.smf42g1g._smf42glw\n#define smf42glx smf42g1a.smf42g1e.smf42g1g._smf42glx\n#define smf42gly smf42g1a.smf42g1e.smf42g1g._smf42gly\n#define smf42glz smf42g1a.smf42g1e.smf42g1g._smf42glz\n#define smf42gl7 smf42g1a.smf42g1e.smf42g1g._smf42gl7\n#define smf42gma smf42g1a.smf42g1e.smf42g1h._smf42gma\n#define smf42gmb smf42g1a.smf42g1e.smf42g1h._smf42gmb\n#define smf42gmc smf42g1a.smf42g1e.smf42g1h._smf42gmc\n#define smf42gmd smf42g1a.smf42g1e.smf42g1h._smf42gmd\n#define smf42gme smf42g1a.smf42g1e.smf42g1h._smf42gme\n#define smf42gmf smf42g1a.smf42g1e.smf42g1h._smf42gmf\n#define smf42gmg smf42g1a.smf42g1e.smf42g1h._smf42gmg\n#define smf42gmh smf42g1a.smf42g1e.smf42g1h._smf42gmh\n#define smf42gmi smf42g1a.smf42g1e.smf42g1h._smf42gmi\n#define smf42gmj smf42g1a.smf42g1e.smf42g1h._smf42gmj\n#define smf42gmk smf42g1a.smf42g1e.smf42g1h._smf42gmk\n#define smf42gml smf42g1a.smf42g1e.smf42g1h._smf42gml\n#define smf42gmm smf42g1a.smf42g1e.smf42g1h._smf42gmm\n#define smf42gmn smf42g1a.smf42g1e.smf42g1h._smf42gmn\n#define smf42gmo smf42g1a.smf42g1e.smf42g1h._smf42gmo\n#define smf42gmp smf42g1a.smf42g1e.smf42g1h._smf42gmp\n#define smf42gmq smf42g1a.smf42g1e.smf42g1h._smf42gmq\n#define smf42gmr smf42g1a.smf42g1e.smf42g1h._smf42gmr\n#define smf42gms smf42g1a.smf42g1e.smf42g1h._smf42gms\n#define smf42gmt smf42g1a.smf42g1e.smf42g1h._smf42gmt\n#define smf42gmu smf42g1a.smf42g1e.smf42g1h._smf42gmu\n#define smf42gmv smf42g1a.smf42g1e.smf42g1h._smf42gmv\n#define smf42gmw smf42g1a.smf42g1e.smf42g1h._smf42gmw\n#define smf42gmx smf42g1a.smf42g1e.smf42g1h._smf42gmx\n#define smf42gmy smf42g1a.smf42g1e.smf42g1h._smf42gmy\n#define smf42gmz smf42g1a.smf42g1e.smf42g1h._smf42gmz\n#define smf42gm7 smf42g1a.smf42g1e.smf42g1h._smf42gm7\n#define smf42gna smf42g1a.smf42g1e.smf42g1i._smf42gna\n#define smf42gnb smf42g1a.smf42g1e.smf42g1i._smf42gnb\n#define smf42gnc smf42g1a.smf42g1e.smf42g1i._smf42gnc\n#define smf42gnd smf42g1a.smf42g1e.smf42g1i._smf42gnd\n#define smf42gne smf42g1a.smf42g1e.smf42g1i._smf42gne\n#define smf42gnf smf42g1a.smf42g1e.smf42g1i._smf42gnf\n#define smf42gng smf42g1a.smf42g1e.smf42g1i._smf42gng\n#define smf42gnh smf42g1a.smf42g1e.smf42g1i._smf42gnh\n#define smf42gni smf42g1a.smf42g1e.smf42g1i._smf42gni\n#define smf42gnj smf42g1a.smf42g1e.smf42g1i._smf42gnj\n#define smf42gnk smf42g1a.smf42g1e.smf42g1i._smf42gnk\n#define smf42gnl smf42g1a.smf42g1e.smf42g1i._smf42gnl\n#define smf42gnm smf42g1a.smf42g1e.smf42g1i._smf42gnm\n#define smf42gnn smf42g1a.smf42g1e.smf42g1i._smf42gnn\n#define smf42gno smf42g1a.smf42g1e.smf42g1i._smf42gno\n#define smf42gnp smf42g1a.smf42g1e.smf42g1i._smf42gnp\n#define smf42gnq smf42g1a.smf42g1e.smf42g1i._smf42gnq\n#define smf42gnr smf42g1a.smf42g1e.smf42g1i._smf42gnr\n#define smf42gns smf42g1a.smf42g1e.smf42g1i._smf42gns\n#define smf42gnt smf42g1a.smf42g1e.smf42g1i._smf42gnt\n#define smf42gnu smf42g1a.smf42g1e.smf42g1i._smf42gnu\n#define smf42gnv smf42g1a.smf42g1e.smf42g1i._smf42gnv\n#define smf42gnw smf42g1a.smf42g1e.smf42g1i._smf42gnw\n#define smf42gnx smf42g1a.smf42g1e.smf42g1i._smf42gnx\n#define smf42gny smf42g1a.smf42g1e.smf42g1i._smf42gny\n#define smf42gnz smf42g1a.smf42g1e.smf42g1i._smf42gnz\n#define smf42gn7 smf42g1a.smf42g1e.smf42g1i._smf42gn7\n#define smf42gqa smf42g1a.smf42g1e.smf42gx6._smf42gqa\n#define smf42gqb smf42g1a.smf42g1e.smf42gx6._smf42gqb\n#define smf42gqc smf42g1a.smf42g1e.smf42gx6._smf42gqc\n#define smf42gqd smf42g1a.smf42g1e.smf42gx6._smf42gqd\n#define smf42gqe smf42g1a.smf42g1e.smf42gx6._smf42gqe\n#define smf42gqf smf42g1a.smf42g1e.smf42gx6._smf42gqf\n#define smf42gqg smf42g1a.smf42g1e.smf42gx6._smf42gqg\n#define smf42gqh smf42g1a.smf42g1e.smf42gx6._smf42gqh\n#define smf42gqi smf42g1a.smf42g1e.smf42gx6._smf42gqi\n#define smf42gqj smf42g1a.smf42g1e.smf42gx6._smf42gqj\n#define smf42gqk smf42g1a.smf42g1e.smf42gx6._smf42gqk\n#define smf42gql smf42g1a.smf42g1e.smf42gx6._smf42gql\n#define smf42gqm smf42g1a.smf42g1e.smf42gx6._smf42gqm\n#define smf42gqn smf42g1a.smf42g1e.smf42gx6._smf42gqn\n#define smf42gqo smf42g1a.smf42g1e.smf42gx6._smf42gqo\n#define smf42gqp smf42g1a.smf42g1e.smf42gx6._smf42gqp\n#define smf42gqq smf42g1a.smf42g1e.smf42gx6._smf42gqq\n#define smf42gqr smf42g1a.smf42g1e.smf42gx6._smf42gqr\n#define smf42gqs smf42g1a.smf42g1e.smf42gx6._smf42gqs\n#define smf42gqt smf42g1a.smf42g1e.smf42gx6._smf42gqt\n#define smf42gqu smf42g1a.smf42g1e.smf42gx6._smf42gqu\n#define smf42gqv smf42g1a.smf42g1e.smf42gx6._smf42gqv\n#define smf42gqw smf42g1a.smf42g1e.smf42gx6._smf42gqw\n#define smf42gqx smf42g1a.smf42g1e.smf42gx6._smf42gqx\n#define smf42grl smf42g1a.smf42fx8._smf42grl\n#define smf42grm smf42g1a.smf42fx8._smf42grm\n#define smf42grn smf42g1a.smf42fx8._smf42grn\n#define smf42gro smf42g1a.smf42fx8._smf42gro\n#define smf42grp smf42g1a.smf42fx8._smf42grp\n#define smf42grr smf42g1a.smf42fx8._smf42grr\n#define smf42grs smf42g1a.smf42fx8._smf42grs\n#define smf42grt smf42g1a.smf42fx8._smf42grt\n#define smf42grq smf42g1a.smf42fx8._smf42grq\n#define smf42gru smf42g1a.smf42fx8._smf42gru\n#define smf42grv smf42g1a.smf42fx8._smf42grv\n\n/* Values for field \"smf42gbi\" */\n#define smf42gbi0    0x80000000 /* DATA COMPONENT              @10A */\n#define smf42gbi1    0x40000000 /* INDEX COMPONENT             @10A */\n\n/* Values for field \"smf42gi7\" */\n#define smf42g1c_len 0xA8       /* @10A                             */\n\n/* Values for field \"smf42gj7\" */\n#define smf42g1d_len 0xA8       /* @10A                             */\n#define smf42g1b_len 0x150      /* @10A                             */\n\n/* Values for field \"smf42gk7\" */\n#define smf42g1f_len 0xA8       /* @10A                             */\n\n/* Values for field \"smf42gl7\" */\n#define smf42g1g_len 0xA8       /* @10A                             */\n\n/* Values for field \"smf42gm7\" */\n#define smf42g1h_len 0xA8       /* @10A                             */\n\n/* Values for field \"smf42gn7\" */\n#define smf42g1i_len 0xA8       /* @10A                             */\n#define smf42g1e_len 0x2A0      /* @10A                             */\n\n/* Values for field \"smf42gqx\" */\n#define smf42gx6_len 0x80       /* @10A                             */\n\n/* Values for field \"smf42grv\" */\n#define smf42fx8_len 0x40       /* @21A                             */\n\n/* Values for field \"smf42gbq\" */\n#define smf420gb_len 0x5E0      /* @10A                             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420HA": {"ttr": 8563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ha \u00e4\n  struct \u00e4\n    int            _smf42haa;     /* INTERVAL LENGTH. THIS IS THE     */\n    unsigned char  _smf42h00\u00c412\u00dc; /* RESERVED                    @10A */\n    unsigned char  _smf42hab\u00c416\u00dc; /* DFP LAF NAME                @10A */\n    unsigned char  _smf42h01\u00c416\u00dc; /* RESERVED                    @10A */\n    int            _smf42hac;     /* NUMBER OF LOCK REQUESTS          */\n    int            _smf42had;     /* NUMBER OF TRUE CONTENTION        */\n    int            _smf42hae;     /* NUMBER OF FALSE CONTENTION       */\n    int            _smf42haf;     /* RESERVED                         */\n    unsigned char  _smf42hag\u00c432\u00dc; /* RESERVED                         */\n    int            _smf42hah;     /* NUMBER OF LOCK REQUESTS          */\n    int            _smf42hai;     /* NUMBER OF TRUE CONTENTION        */\n    int            _smf42haj;     /* NUMBER OF FALSE CONTENTION       */\n    int            _smf42hak;     /* RESERVED                         */\n    unsigned char  _smf42hal\u00c432\u00dc; /* RESERVED                         */\n    int            _smf42hca;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hcb;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hcc;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hcd;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hce;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n    int            _smf42hcf;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n    unsigned char  _smf42hcg\u00c48\u00dc;  /* RESERVED                    @10A */\n    int            _smf42hch;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hci;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcj;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hck;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcl;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcm;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcn;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hco;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcp;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcq;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcr;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hcs;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hct;     /* NUMBER OF COMPONENT_2       @10A */\n    int            _smf42hcu;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n    int            _smf42hcv;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n    int            _smf42hcw;     /* NUMBER OF COMPONENT_2       @10A */\n    int            _smf42hcx;     /* NUMBER OF SPECIAL LOCK      @10A */\n    unsigned char  _smf42hcy\u00c412\u00dc; /* RESERVED                    @10A */\n    unsigned char  _smf42hcz\u00c432\u00dc; /* RESERVED                    @10A */\n    \u00fc smf42ha1;\n  \u00fc;\n\n#define smf42haa smf42ha1._smf42haa\n#define smf42h00 smf42ha1._smf42h00\n#define smf42hab smf42ha1._smf42hab\n#define smf42h01 smf42ha1._smf42h01\n#define smf42hac smf42ha1._smf42hac\n#define smf42had smf42ha1._smf42had\n#define smf42hae smf42ha1._smf42hae\n#define smf42haf smf42ha1._smf42haf\n#define smf42hag smf42ha1._smf42hag\n#define smf42hah smf42ha1._smf42hah\n#define smf42hai smf42ha1._smf42hai\n#define smf42haj smf42ha1._smf42haj\n#define smf42hak smf42ha1._smf42hak\n#define smf42hal smf42ha1._smf42hal\n#define smf42hca smf42ha1._smf42hca\n#define smf42hcb smf42ha1._smf42hcb\n#define smf42hcc smf42ha1._smf42hcc\n#define smf42hcd smf42ha1._smf42hcd\n#define smf42hce smf42ha1._smf42hce\n#define smf42hcf smf42ha1._smf42hcf\n#define smf42hcg smf42ha1._smf42hcg\n#define smf42hch smf42ha1._smf42hch\n#define smf42hci smf42ha1._smf42hci\n#define smf42hcj smf42ha1._smf42hcj\n#define smf42hck smf42ha1._smf42hck\n#define smf42hcl smf42ha1._smf42hcl\n#define smf42hcm smf42ha1._smf42hcm\n#define smf42hcn smf42ha1._smf42hcn\n#define smf42hco smf42ha1._smf42hco\n#define smf42hcp smf42ha1._smf42hcp\n#define smf42hcq smf42ha1._smf42hcq\n#define smf42hcr smf42ha1._smf42hcr\n#define smf42hcs smf42ha1._smf42hcs\n#define smf42hct smf42ha1._smf42hct\n#define smf42hcu smf42ha1._smf42hcu\n#define smf42hcv smf42ha1._smf42hcv\n#define smf42hcw smf42ha1._smf42hcw\n#define smf42hcx smf42ha1._smf42hcx\n#define smf42hcy smf42ha1._smf42hcy\n#define smf42hcz smf42ha1._smf42hcz\n\n/* Values for field \"smf42hcz\" */\n#define smf420ha_len 0x120\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420HB": {"ttr": 7909, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420hb \u00e4\n  struct \u00e4\n    int            _smf42hba;     /* INTERVAL LENGTH. THIS IS THE     */\n    unsigned char  _smf42h02\u00c412\u00dc; /* RESERVED                    @10A */\n    unsigned char  _smf42hbb\u00c416\u00dc; /* DFP LAF NAME                @10A */\n    unsigned char  _smf42hbc\u00c48\u00dc;  /* MVS SYSTEM NAME             @10A */\n    unsigned char  _smf42h03\u00c48\u00dc;  /* RESERVED                    @10A */\n    int            _smf42hbd;     /* NUMBER OF LOCK REQUESTS          */\n    int            _smf42hbe;     /* NUMBER OF TRUE CONTENTION        */\n    int            _smf42hbf;     /* NUMBER OF FALSE CONTENTION       */\n    int            _smf42hbg;     /* RESERVED                         */\n    unsigned char  _smf42hbh\u00c432\u00dc; /* RESERVED                         */\n    int            _smf42hbi;     /* NUMBER OF LOCK REQUESTS          */\n    int            _smf42hbj;     /* NUMBER OF TRUE CONTENTION        */\n    int            _smf42hbk;     /* NUMBER OF FALSE CONTENTION       */\n    int            _smf42hbl;     /* RESERVED                         */\n    unsigned char  _smf42hbm\u00c432\u00dc; /* RESERVED                    @10A */\n    int            _smf42hda;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hdb;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hdc;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hdd;     /* NUMBER OF RECORD LOCK       @10A */\n    int            _smf42hde;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n    int            _smf42hdf;     /* NUMBER OF COMPONENT_1 TYPE  @10A */\n    unsigned char  _smf42hdg\u00c48\u00dc;  /* RESERVED                    @10A */\n    int            _smf42hdh;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdi;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdj;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdk;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdl;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdm;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdn;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdo;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdp;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdq;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdr;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hds;     /* NUMBER OF COMPONENT_1       @10A */\n    int            _smf42hdt;     /* NUMBER OF COMPONENT_2       @10A */\n    int            _smf42hdu;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n    int            _smf42hdv;     /* NUMBER OF COMPONENT_2 LOCKS @10A */\n    int            _smf42hdw;     /* NUMBER OF COMPONENT_2       @10A */\n    int            _smf42hdx;     /* NUMBER OF SPECIAL LOCK      @10A */\n    unsigned char  _smf42hdy\u00c412\u00dc; /* RESERVED                    @10A */\n    unsigned char  _smf42hdz\u00c432\u00dc; /* RESERVED                    @10A */\n    \u00fc smf42ha2;\n  \u00fc;\n\n#define smf42hba smf42ha2._smf42hba\n#define smf42h02 smf42ha2._smf42h02\n#define smf42hbb smf42ha2._smf42hbb\n#define smf42hbc smf42ha2._smf42hbc\n#define smf42h03 smf42ha2._smf42h03\n#define smf42hbd smf42ha2._smf42hbd\n#define smf42hbe smf42ha2._smf42hbe\n#define smf42hbf smf42ha2._smf42hbf\n#define smf42hbg smf42ha2._smf42hbg\n#define smf42hbh smf42ha2._smf42hbh\n#define smf42hbi smf42ha2._smf42hbi\n#define smf42hbj smf42ha2._smf42hbj\n#define smf42hbk smf42ha2._smf42hbk\n#define smf42hbl smf42ha2._smf42hbl\n#define smf42hbm smf42ha2._smf42hbm\n#define smf42hda smf42ha2._smf42hda\n#define smf42hdb smf42ha2._smf42hdb\n#define smf42hdc smf42ha2._smf42hdc\n#define smf42hdd smf42ha2._smf42hdd\n#define smf42hde smf42ha2._smf42hde\n#define smf42hdf smf42ha2._smf42hdf\n#define smf42hdg smf42ha2._smf42hdg\n#define smf42hdh smf42ha2._smf42hdh\n#define smf42hdi smf42ha2._smf42hdi\n#define smf42hdj smf42ha2._smf42hdj\n#define smf42hdk smf42ha2._smf42hdk\n#define smf42hdl smf42ha2._smf42hdl\n#define smf42hdm smf42ha2._smf42hdm\n#define smf42hdn smf42ha2._smf42hdn\n#define smf42hdo smf42ha2._smf42hdo\n#define smf42hdp smf42ha2._smf42hdp\n#define smf42hdq smf42ha2._smf42hdq\n#define smf42hdr smf42ha2._smf42hdr\n#define smf42hds smf42ha2._smf42hds\n#define smf42hdt smf42ha2._smf42hdt\n#define smf42hdu smf42ha2._smf42hdu\n#define smf42hdv smf42ha2._smf42hdv\n#define smf42hdw smf42ha2._smf42hdw\n#define smf42hdx smf42ha2._smf42hdx\n#define smf42hdy smf42ha2._smf42hdy\n#define smf42hdz smf42ha2._smf42hdz\n\n/* Values for field \"smf42hdz\" */\n#define smf420hb_len 0x120\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420IA": {"ttr": 8263, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ia \u00e4\n  union \u00e4\n    struct \u00e4\n      double         _smf42ia1;      /* CF CACHE PARTITION TOTALS */\n      unsigned char  _filler1\u00c4188\u00dc;\n      \u00fc _smf420ia_struct1;\n    struct \u00e4\n      int            _smf42iaa;     /* INTERVAL LENGTH. THIS IS THE      */\n      unsigned char  _smf42i00\u00c412\u00dc; /* RESERVED                     @10A */\n      unsigned char  _smf42iab\u00c432\u00dc; /* RESERVED                     @10A */\n      unsigned char  _smf42ibg\u00c416\u00dc; /* PARTITION TYPE               @10A */\n      int            _smf42ibh;     /* SMS SPECIFIED CACHE WEIGHT   @10A */\n      unsigned char  _smf42i01\u00c412\u00dc; /* PARTITIONNAMEWORD            @10A */\n      int            _smf42iad;     /* COUPLE FACILITY CACHE             */\n      int            _smf42iae;     /* STATUS CONDITIONS            @10A */\n      int            _smf42iaf;     /* READ HIT COUNTER             @10A */\n      int            _smf42iag;     /* READ MISS DIRECTORY HIT           */\n      int            _smf42iah;     /* READ MISS ASSIGN SUPP             */\n      int            _smf42iai;     /* READ MISS, NAME ASSIGNED          */\n      int            _smf42iaj;     /* READ MISS TARGET STORAGE          */\n      int            _smf42iak;     /* WRITE HIT CHANGE BIT 0            */\n      int            _smf42ial;     /* WRITE HIT CHANGE BIT 1            */\n      int            _smf42iam;     /* WRITE MISS NOT REGISTERED         */\n      int            _smf42ian;     /* WRITE MISS INVALID STATE          */\n      int            _smf42iao;     /* WRITE MISS TARGET STORAGE CLASS   */\n      int            _smf42iap;     /* DIRECTORY ENTRY RECLAIM           */\n      int            _smf42iaq;     /* DATA TABLE ENTRY RECLAIM          */\n      int            _smf42iar;     /* XI FOR DIRECTORY RECLAIM          */\n      int            _smf42ias;     /* XI FOR WRITE COUNTER         @10A */\n      int            _smf42iat;     /* XI FOR NAME INVALIDATION          */\n      int            _smf42iau;     /* XI FOR COMPLEMENT INVALIDATION    */\n      int            _smf42iav;     /* CASTOUT COUNTER              @10A */\n      int            _smf42iaw;     /* REFERENCE SIGNAL MISS             */\n      int            _smf42iax;     /* TARGET STORAGE CLASS FULL         */\n      int            _smf42iay;     /* DIRECTORY ENTRY COUNTER      @10A */\n      int            _smf42iaz;     /* DATA AREA ELEMENT COUNTER    @10A */\n      int            _smf42iba;     /* TOTAL CHANGED COUNTER        @10A */\n      int            _smf42ibb;     /* DATA AREA COUNTER            @10A */\n      int            _smf42ibc;     /* COMPLETED REFERENCE LISTS         */\n      int            _smf42ibd;     /* PARTIALLY COMPLETED REFERENCE     */\n      int            _smf42ibe;     /* XI FOR LCEN REPLACEMENT           */\n      int            _smf42ibf;     /* WRITE UNCHANGED WITH XI           */\n      \u00fc smf42iac;\n    \u00fc _smf420ia_union1;\n  \u00fc;\n\n#define smf42ia1 _smf420ia_union1._smf420ia_struct1._smf42ia1\n#define smf42iaa _smf420ia_union1.smf42iac._smf42iaa\n#define smf42i00 _smf420ia_union1.smf42iac._smf42i00\n#define smf42iab _smf420ia_union1.smf42iac._smf42iab\n#define smf42ibg _smf420ia_union1.smf42iac._smf42ibg\n#define smf42ibh _smf420ia_union1.smf42iac._smf42ibh\n#define smf42i01 _smf420ia_union1.smf42iac._smf42i01\n#define smf42iad _smf420ia_union1.smf42iac._smf42iad\n#define smf42iae _smf420ia_union1.smf42iac._smf42iae\n#define smf42iaf _smf420ia_union1.smf42iac._smf42iaf\n#define smf42iag _smf420ia_union1.smf42iac._smf42iag\n#define smf42iah _smf420ia_union1.smf42iac._smf42iah\n#define smf42iai _smf420ia_union1.smf42iac._smf42iai\n#define smf42iaj _smf420ia_union1.smf42iac._smf42iaj\n#define smf42iak _smf420ia_union1.smf42iac._smf42iak\n#define smf42ial _smf420ia_union1.smf42iac._smf42ial\n#define smf42iam _smf420ia_union1.smf42iac._smf42iam\n#define smf42ian _smf420ia_union1.smf42iac._smf42ian\n#define smf42iao _smf420ia_union1.smf42iac._smf42iao\n#define smf42iap _smf420ia_union1.smf42iac._smf42iap\n#define smf42iaq _smf420ia_union1.smf42iac._smf42iaq\n#define smf42iar _smf420ia_union1.smf42iac._smf42iar\n#define smf42ias _smf420ia_union1.smf42iac._smf42ias\n#define smf42iat _smf420ia_union1.smf42iac._smf42iat\n#define smf42iau _smf420ia_union1.smf42iac._smf42iau\n#define smf42iav _smf420ia_union1.smf42iac._smf42iav\n#define smf42iaw _smf420ia_union1.smf42iac._smf42iaw\n#define smf42iax _smf420ia_union1.smf42iac._smf42iax\n#define smf42iay _smf420ia_union1.smf42iac._smf42iay\n#define smf42iaz _smf420ia_union1.smf42iac._smf42iaz\n#define smf42iba _smf420ia_union1.smf42iac._smf42iba\n#define smf42ibb _smf420ia_union1.smf42iac._smf42ibb\n#define smf42ibc _smf420ia_union1.smf42iac._smf42ibc\n#define smf42ibd _smf420ia_union1.smf42iac._smf42ibd\n#define smf42ibe _smf420ia_union1.smf42iac._smf42ibe\n#define smf42ibf _smf420ia_union1.smf42iac._smf42ibf\n\n/* Values for field \"smf42ibf\" */\n#define smf420ia_len 0xC4\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420IC": {"ttr": 8013, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ic \u00e4\n  union \u00e4\n    struct \u00e4\n      double         _smf42ic1;      /* CF CACHE PARTITION SUMMARY */\n      unsigned char  _filler1\u00c4188\u00dc;\n      \u00fc _smf420ic_struct1;\n    struct \u00e4\n      int            _smf42ica;     /* INTERVAL LENGTH. THIS IS THE      */\n      unsigned char  _smf42i02\u00c412\u00dc; /* RESERVED                     @10A */\n      short int      _smf42i04;     /* RESERVED                     @10A */\n      unsigned char  _smf42icb\u00c430\u00dc; /* CACHE STRUCTURE NAME         @10A */\n      unsigned char  _smf42idg\u00c416\u00dc; /* PARTITION TYPE               @10A */\n      int            _smf42idh;     /* SMS SPECIFIED CACHE WEIGHT   @10A */\n      unsigned char  _smf42i03\u00c412\u00dc; /* RESERVED                     @10A */\n      int            _smf42icd;     /* COUPLE FACILITY CACHE             */\n      int            _smf42ice;     /* STATUS CONDITIONS            @10A */\n      int            _smf42icf;     /* READ HIT COUNTER             @10A */\n      int            _smf42icg;     /* READ MISS DIRECTORY HIT           */\n      int            _smf42ich;     /* READ MISS ASSIGN SUPP             */\n      int            _smf42ici;     /* READ MISS, NAME ASSIGNED          */\n      int            _smf42icj;     /* READ MISS TARGET STORAGE          */\n      int            _smf42ick;     /* WRITE HIT CHANGE BIT 0            */\n      int            _smf42icl;     /* WRITE HIT CHANGE BIT 1            */\n      int            _smf42icm;     /* WRITE MISS NOT REGISTERED         */\n      int            _smf42icn;     /* WRITE MISS INVALID STATE          */\n      int            _smf42ico;     /* WRITE MISS TARGET STORAGE CLASS   */\n      int            _smf42icp;     /* DIRECTORY ENTRY RECLAIM           */\n      int            _smf42icq;     /* DATA TABLE ENTRY RECLAIM          */\n      int            _smf42icr;     /* XI FOR DIRECTORY RECLAIM          */\n      int            _smf42ics;     /* XI FOR WRITE COUNTER         @10A */\n      int            _smf42ict;     /* XI FOR NAME INVALIDATION          */\n      int            _smf42icu;     /* XI FOR COMPLEMENT INVALIDATION    */\n      int            _smf42icv;     /* CASTOUT COUNTER              @10A */\n      int            _smf42icw;     /* REFERENCE SIGNAL MISS             */\n      int            _smf42icx;     /* TARGET STORAGE CLASS FULL         */\n      int            _smf42icy;     /* DIRECTORY ENTRY COUNTER      @10A */\n      int            _smf42icz;     /* DATA AREA ELEMENT COUNTER    @10A */\n      int            _smf42ida;     /* TOTAL CHANGED COUNTER        @10A */\n      int            _smf42idb;     /* DATA AREA COUNTER            @10A */\n      int            _smf42idc;     /* COMPLETED REFERENCE LISTS         */\n      int            _smf42idd;     /* PARTIALLY COMPLETED REFERENCE     */\n      int            _smf42ide;     /* XI FOR LCEN REPLACEMENT           */\n      int            _smf42idf;     /* WRITE UNCHANGED WITH XI           */\n      \u00fc smf42icc;\n    \u00fc _smf420ic_union1;\n  \u00fc;\n\n#define smf42ic1 _smf420ic_union1._smf420ic_struct1._smf42ic1\n#define smf42ica _smf420ic_union1.smf42icc._smf42ica\n#define smf42i02 _smf420ic_union1.smf42icc._smf42i02\n#define smf42i04 _smf420ic_union1.smf42icc._smf42i04\n#define smf42icb _smf420ic_union1.smf42icc._smf42icb\n#define smf42idg _smf420ic_union1.smf42icc._smf42idg\n#define smf42idh _smf420ic_union1.smf42icc._smf42idh\n#define smf42i03 _smf420ic_union1.smf42icc._smf42i03\n#define smf42icd _smf420ic_union1.smf42icc._smf42icd\n#define smf42ice _smf420ic_union1.smf42icc._smf42ice\n#define smf42icf _smf420ic_union1.smf42icc._smf42icf\n#define smf42icg _smf420ic_union1.smf42icc._smf42icg\n#define smf42ich _smf420ic_union1.smf42icc._smf42ich\n#define smf42ici _smf420ic_union1.smf42icc._smf42ici\n#define smf42icj _smf420ic_union1.smf42icc._smf42icj\n#define smf42ick _smf420ic_union1.smf42icc._smf42ick\n#define smf42icl _smf420ic_union1.smf42icc._smf42icl\n#define smf42icm _smf420ic_union1.smf42icc._smf42icm\n#define smf42icn _smf420ic_union1.smf42icc._smf42icn\n#define smf42ico _smf420ic_union1.smf42icc._smf42ico\n#define smf42icp _smf420ic_union1.smf42icc._smf42icp\n#define smf42icq _smf420ic_union1.smf42icc._smf42icq\n#define smf42icr _smf420ic_union1.smf42icc._smf42icr\n#define smf42ics _smf420ic_union1.smf42icc._smf42ics\n#define smf42ict _smf420ic_union1.smf42icc._smf42ict\n#define smf42icu _smf420ic_union1.smf42icc._smf42icu\n#define smf42icv _smf420ic_union1.smf42icc._smf42icv\n#define smf42icw _smf420ic_union1.smf42icc._smf42icw\n#define smf42icx _smf420ic_union1.smf42icc._smf42icx\n#define smf42icy _smf420ic_union1.smf42icc._smf42icy\n#define smf42icz _smf420ic_union1.smf42icc._smf42icz\n#define smf42ida _smf420ic_union1.smf42icc._smf42ida\n#define smf42idb _smf420ic_union1.smf42icc._smf42idb\n#define smf42idc _smf420ic_union1.smf42icc._smf42idc\n#define smf42idd _smf420ic_union1.smf42icc._smf42idd\n#define smf42ide _smf420ic_union1.smf42icc._smf42ide\n#define smf42idf _smf420ic_union1.smf42icc._smf42idf\n\n/* Values for field \"smf42idf\" */\n#define smf420ic_len 0xC4\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420IE": {"ttr": 8267, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ie \u00e4\n  struct \u00e4\n    int            _smf42iea;     /* Interval length               @11A */\n    unsigned char  _smf42i06\u00c412\u00dc; /* reserved                      @11A */\n    unsigned char  _smf42i07\u00c42\u00dc;  /* reserved                      @11A */\n    unsigned char  _smf42ieb\u00c430\u00dc; /* DFSMS cache structure name    @11A */\n    int            _smf42iec;     /* Number of times the           @11A */\n    int            _smf42ied;     /* Number of times the           @11A */\n    int            _smf42iee;     /* Low  ratio value in this      @11A */\n    int            _smf42ief;     /* Low  ratio value in this      @11A */\n    int            _smf42ieg;     /* High ratio value in this      @11A */\n    int            _smf42ieh;     /* High ratio value in this      @11A */\n    int            _smf42iei;     /* Current ratio value in this   @11A */\n    int            _smf42iej;     /* Current ratio value in this   @11A */\n    \u00fc smf42ie1;\n  \u00fc;\n\n#define smf42iea smf42ie1._smf42iea\n#define smf42i06 smf42ie1._smf42i06\n#define smf42i07 smf42ie1._smf42i07\n#define smf42ieb smf42ie1._smf42ieb\n#define smf42iec smf42ie1._smf42iec\n#define smf42ied smf42ie1._smf42ied\n#define smf42iee smf42ie1._smf42iee\n#define smf42ief smf42ie1._smf42ief\n#define smf42ieg smf42ie1._smf42ieg\n#define smf42ieh smf42ie1._smf42ieh\n#define smf42iei smf42ie1._smf42iei\n#define smf42iej smf42ie1._smf42iej\n\n/* Values for field \"smf42iej\" */\n#define smf420ie_len 0x50 /* Length of section             @11A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420JA": {"ttr": 8707, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ja \u00e4\n  union \u00e4\n    struct \u00e4\n      double         _smf42ja1;       /* sysplex totals section     @11A */\n      unsigned char  _filler1\u00c41376\u00dc;\n      \u00fc _smf420ja_struct1;\n    struct \u00e4\n      int            _smf42jna;      /* Interval length. This is the    @11A */\n      unsigned char  _smf42j00\u00c412\u00dc;  /* reserved                        @11A */\n      unsigned char  _smf42jnb\u00c416\u00dc;  /* reserved                        @11A */\n      unsigned char  _smf42jnd\u00c48\u00dc;   /* Reserved                        @11A */\n      int            _smf42jne\u00c42\u00dc;   /* @64C                                 */\n      int            _smf42jnf\u00c42\u00dc;   /* @64C                                 */\n      unsigned char  _smf42jn0\u00c44\u00dc;   /* Reserved                        @21A */\n      int            _smf42jn7;      /* Total number of write           @21A */\n      int            _smf42jng;      /* Average number of buffer        @11A */\n      int            _smf42jnh;      /* Total number of buffer          @11A */\n      int            _smf42jni;      /* Average                         @11A */\n      int            _smf42jnj;      /* Total                           @11A */\n      int            _smf42jnk;      /* Avg. number of times that       @11A */\n      int            _smf42jnl;      /* Total number of times that      @11A */\n      int            _smf42jnm;      /* Average number of BMF           @11A */\n      int            _smf42jnn;      /* Total number of BMF             @11A */\n      int            _smf42jno;      /* Buffer manager number of        @11A */\n      int            _smf42jnp;      /* Buffer manager number of        @11A */\n      int            _smf42jnq;      /* Buffer manager number of        @11A */\n      int            _smf42jnr;      /* Buffer manager average          @11A */\n      int            _smf42jns;      /* Avg. Sysplex Cache manager      @11A */\n      int            _smf42jnt;      /* Tot Sysplex Cache manager       @11A */\n      int            _smf42jnu;      /* Sysplex Cache manager hits      @11A */\n      int            _smf42jnv;      /* Sysplex Cache manager hits      @11A */\n      int            _smf42jnw;      /* Sysplex Cache manager hits      @11A */\n      int            _smf42jnx;      /* Sysplex Cache manager hits      @11A */\n      int            _smf42jny;      /* Avg. DASD number of 'hits'      @11A */\n      int            _smf42jnz;      /* Tot DASD number of 'hits'       @11A */\n      int            _smf42joa;      /* DASD 'hits' current             @11A */\n      int            _smf42job;      /* DASD 'hits' low percentage      @11A */\n      int            _smf42joc;      /* DASD 'hits' high percentage     @11A */\n      int            _smf42jod;      /* Average                         @11A */\n      unsigned char  _smf42joe\u00c4512\u00dc; /* Sysplex average                 @11A */\n      unsigned char  _smf42jri\u00c4512\u00dc; /* Sysplex wide totals -           @11A */\n      int            _smf42jon;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42joo;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jop;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42joq;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jor;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jos;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jot;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jou;      /* reserved                        @11A */\n      int            _smf42jov;      /* Buffer size calculated          @11A */\n      int            _smf42jow;      /* Buffer size calculated          @11A */\n      int            _smf42jox;      /* Buffer size calculated          @11A */\n      int            _smf42joy;      /* Buffer size calculated          @11A */\n      int            _smf42joz;      /* Buffer size calculated          @11A */\n      int            _smf42jra;      /* Buffer size calculated          @11A */\n      int            _smf42jrb;      /* Buffer size calculated          @11A */\n      int            _smf42jrc;      /* Reserved                        @11A */\n      unsigned char  _smf42jrd\u00c48\u00dc;   /* Reserved                        @11A */\n      unsigned char  _smf42jre\u00c464\u00dc;  /* Calculated megabytes            @11A */\n      unsigned char  _smf42jrg\u00c464\u00dc;  /* Calculated megabytes            @11A */\n      \u00fc smf42jac;\n    \u00fc _smf420ja_union1;\n  int            smf42jta; /* Avg. number of scm read reques@21A */\n  int            smf42jtb; /* Total number of scm read reque@21A */\n  int            smf42jtc; /* Avg. number of scm read reques@21A */\n  int            smf42jtd; /* Total number of scm read reque@21A */\n  int            smf42jte; /* SCM read requests which       @21A */\n  int            smf42jtf; /* SCM read requests which       @21A */\n  int            smf42jtg; /* SCM read requests which       @21A */\n  int            smf42jth; /* SCM read requests which       @21A */\n  int            smf42jti; /* Avg. number of redos          @21A */\n  int            smf42jtj; /* Total number of redos         @21A */\n  int            smf42jtk; /* Avg. number of recursive redos@21A */\n  int            smf42jtl; /* Total number of recursive redo@21A */\n  int            smf42jtm; /* Redos current percentage      @21A */\n  int            smf42jtn; /* Redos low percentage          @21A */\n  int            smf42jto; /* Redos high percentage         @21A */\n  int            smf42jtp; /* Redos average percentage      @21A */\n  int            smf42jtq; /* Recursive Redos               @21A */\n  int            smf42jtr; /* Recursive Redos               @21A */\n  int            smf42jts; /* Recursive Redos               @21A */\n  int            smf42jtt; /* Recursive Redos               @21A */\n  int            smf42jua; /* Avg. number of                @21A */\n  int            smf42jub; /* Total number of               @21A */\n  \u00fc;\n\n#define smf42ja1 _smf420ja_union1._smf420ja_struct1._smf42ja1\n#define smf42jna _smf420ja_union1.smf42jac._smf42jna\n#define smf42j00 _smf420ja_union1.smf42jac._smf42j00\n#define smf42jnb _smf420ja_union1.smf42jac._smf42jnb\n#define smf42jnd _smf420ja_union1.smf42jac._smf42jnd\n#define smf42jne _smf420ja_union1.smf42jac._smf42jne\n#define smf42jnf _smf420ja_union1.smf42jac._smf42jnf\n#define smf42jn0 _smf420ja_union1.smf42jac._smf42jn0\n#define smf42jn7 _smf420ja_union1.smf42jac._smf42jn7\n#define smf42jng _smf420ja_union1.smf42jac._smf42jng\n#define smf42jnh _smf420ja_union1.smf42jac._smf42jnh\n#define smf42jni _smf420ja_union1.smf42jac._smf42jni\n#define smf42jnj _smf420ja_union1.smf42jac._smf42jnj\n#define smf42jnk _smf420ja_union1.smf42jac._smf42jnk\n#define smf42jnl _smf420ja_union1.smf42jac._smf42jnl\n#define smf42jnm _smf420ja_union1.smf42jac._smf42jnm\n#define smf42jnn _smf420ja_union1.smf42jac._smf42jnn\n#define smf42jno _smf420ja_union1.smf42jac._smf42jno\n#define smf42jnp _smf420ja_union1.smf42jac._smf42jnp\n#define smf42jnq _smf420ja_union1.smf42jac._smf42jnq\n#define smf42jnr _smf420ja_union1.smf42jac._smf42jnr\n#define smf42jns _smf420ja_union1.smf42jac._smf42jns\n#define smf42jnt _smf420ja_union1.smf42jac._smf42jnt\n#define smf42jnu _smf420ja_union1.smf42jac._smf42jnu\n#define smf42jnv _smf420ja_union1.smf42jac._smf42jnv\n#define smf42jnw _smf420ja_union1.smf42jac._smf42jnw\n#define smf42jnx _smf420ja_union1.smf42jac._smf42jnx\n#define smf42jny _smf420ja_union1.smf42jac._smf42jny\n#define smf42jnz _smf420ja_union1.smf42jac._smf42jnz\n#define smf42joa _smf420ja_union1.smf42jac._smf42joa\n#define smf42job _smf420ja_union1.smf42jac._smf42job\n#define smf42joc _smf420ja_union1.smf42jac._smf42joc\n#define smf42jod _smf420ja_union1.smf42jac._smf42jod\n#define smf42joe _smf420ja_union1.smf42jac._smf42joe\n#define smf42jri _smf420ja_union1.smf42jac._smf42jri\n#define smf42jon _smf420ja_union1.smf42jac._smf42jon\n#define smf42joo _smf420ja_union1.smf42jac._smf42joo\n#define smf42jop _smf420ja_union1.smf42jac._smf42jop\n#define smf42joq _smf420ja_union1.smf42jac._smf42joq\n#define smf42jor _smf420ja_union1.smf42jac._smf42jor\n#define smf42jos _smf420ja_union1.smf42jac._smf42jos\n#define smf42jot _smf420ja_union1.smf42jac._smf42jot\n#define smf42jou _smf420ja_union1.smf42jac._smf42jou\n#define smf42jov _smf420ja_union1.smf42jac._smf42jov\n#define smf42jow _smf420ja_union1.smf42jac._smf42jow\n#define smf42jox _smf420ja_union1.smf42jac._smf42jox\n#define smf42joy _smf420ja_union1.smf42jac._smf42joy\n#define smf42joz _smf420ja_union1.smf42jac._smf42joz\n#define smf42jra _smf420ja_union1.smf42jac._smf42jra\n#define smf42jrb _smf420ja_union1.smf42jac._smf42jrb\n#define smf42jrc _smf420ja_union1.smf42jac._smf42jrc\n#define smf42jrd _smf420ja_union1.smf42jac._smf42jrd\n#define smf42jre _smf420ja_union1.smf42jac._smf42jre\n#define smf42jrg _smf420ja_union1.smf42jac._smf42jrg\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420JB": {"ttr": 8101, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420jb \u00e4\n  int            smf42jof; /* Low value of the number of     @11A */\n  int            smf42jog; /* High value of the number of    @11A */\n  int            smf42joh; /* value of the number of         @11A */\n  int            smf42joi; /* Reserved                       @11A */\n  int            smf42joj; /* Low value of the number of     @11A */\n  int            smf42jok; /* High value of the number of    @11A */\n  int            smf42jol; /* value of the number of         @11A */\n  int            smf42jom; /* Reserved                       @11A */\n  \u00fc;\n\n/* Values for field \"smf42jom\" */\n#define smf420jb_len 0x20 /* Length of single entry         @11A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420JC": {"ttr": 8459, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420jc \u00e4\n  int            smf42jrj; /* Low value of the number of     @11A */\n  int            smf42jrk; /* High value of the number of    @11A */\n  int            smf42jrl; /* value of the number of         @11A */\n  int            smf42jrm; /* reserved                       @11A */\n  int            smf42jrn; /* Low value of the number of     @11A */\n  int            smf42jro; /* High value of the number of    @11A */\n  int            smf42jrp; /* value of the number of         @11A */\n  int            smf42jrq; /* reserved                       @11A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420JD": {"ttr": 8325, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420jd \u00e4\n  int            smf42jrf; /* Number of times calculated     @11A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420JE": {"ttr": 8585, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420je \u00e4\n  int            smf42jrh; /* Number of times calculated     @11A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420JF": {"ttr": 8297, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420jf \u00e4\n  int            smf42jpz; /* Low value of the number of     @11A */\n  int            smf42jqa; /* High value of the number of    @11A */\n  int            smf42jqb; /* value of the number of         @11A */\n  int            smf42jq6; /* reserved                       @11A */\n  int            smf42jqc; /* Low value of the number of     @11A */\n  int            smf42jqd; /* High value of the number of    @11A */\n  int            smf42jqf; /* value of the number of         @11A */\n  int            smf42jq7; /* reserved                       @11A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420JG": {"ttr": 8215, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420jg \u00e4\n  int            smf42jqp; /* Number of times calculated     @11A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420KA": {"ttr": 8701, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ka \u00e4\n  unsigned char  smf42kjb\u00c48\u00dc;  /* Job name, started task       @L2A */\n  unsigned char  smf42kst\u00c48\u00dc;  /* Step name                    @L2A */\n  unsigned char  smf42kpr\u00c48\u00dc;  /* Proc name or blanks          @L2A */\n  unsigned char  smf42kds\u00c444\u00dc; /* Data set name                @L2A */\n  unsigned char  smf42kvs\u00c46\u00dc;  /* VOLSER                       @L2A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420KB": {"ttr": 8121, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420kb \u00e4\n  unsigned char  smf42kui\u00c480\u00dc; /* userid token of the caller of @26A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420LA": {"ttr": 8481, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420la \u00e4\n  unsigned char  smf42ljb\u00c48\u00dc;  /* Job name, started task       @L2A */\n  unsigned char  smf42lst\u00c48\u00dc;  /* Step name                    @L2A */\n  unsigned char  smf42lpr\u00c48\u00dc;  /* Proc name or blanks          @L2A */\n  unsigned char  smf42lds\u00c444\u00dc; /* Data set name                @L2A */\n  unsigned char  smf42lvs\u00c46\u00dc;  /* VOLSER                       @L2A */\n  short int      smf42lnl;     /* Length of the member name    @L2A */\n  unsigned char  smf42lfl;     /* Flags                        @L2A */\n  unsigned char  _filler1\u00c43\u00dc;  /* Reserved                     @L2A */\n  unsigned char  smf42lmn\u00c463\u00dc; /* Member name that was         @L2A */\n  \u00fc;\n\n/* Values for field \"smf42lfl\" */\n#define smf42lxa 0x80 /* Some aliases were excluded from */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420LC": {"ttr": 8595, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420lc \u00e4\n  unsigned char  smf42lui\u00c480\u00dc; /* userid token of the caller of STOW */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420MA": {"ttr": 8405, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420ma \u00e4\n  unsigned char  smf42mjbn\u00c48\u00dc;     /* Job name                       @MZA */\n  unsigned char  smf42mrst\u00c44\u00dc;     /* Reader start time              @MZA */\n  unsigned char  smf42mrsd\u00c44\u00dc;     /* Reader start date              @MZA */\n  unsigned char  smf42muid\u00c48\u00dc;     /* RACF user id                   @MZA */\n  unsigned char  smf42mact;        /* Activity type:                 @MZA */\n  unsigned char  smf42mfg1;        /* Flag 1                         @MZA */\n  unsigned char  smf42mcvtsflg;    /* Virtual tape server flag       @MZA */\n  unsigned char  smf42mcenable;    /* Control record enable flag     @MZA */\n  double         smf42mldto;       /* Local time/date offset         @MZA */\n  int            smf42mcjnrecn;    /* Journal record number          @MZA */\n  int            smf42mjnrecnum;   /* Number of next jn rec written  @MZA */\n  int            smf42mcupdvsi;    /* VSI when MCUPDACT set on       @MZA */\n  int            smf42mcvsicnt;    /* VSI control count              @MZA */\n  unsigned char  smf42mcvrlctk\u00c48\u00dc; /* VRSEL last change token        @MZA */\n  int            smf42mcvrscnt;    /* Current VRS change counter     @MZA */\n  int            smf42mcvrsrun;    /* Last HSKP VRS change counter   @MZA */\n  struct \u00e4\n    int            _smf42mcsyncdt; /* Catsynch date                  @MZA */\n    int            _smf42mcsynctm; /* Catsynch time                  @MZA */\n    \u00fc smf42mcsyncts;\n  int            smf42mend;        /* 1st data section end           @MZA */\n  \u00fc;\n\n#define smf42mcsyncdt smf42mcsyncts._smf42mcsyncdt\n#define smf42mcsynctm smf42mcsyncts._smf42mcsynctm\n\n/* Values for field \"smf42mfg1\" */\n#define smf42mlis    0x80 /* Last in set                    @MZA */\n#define smf42mjrn    0x40 /* Journal record available       @MZA */\n\n/* Values for field \"smf42mend\" */\n#define smf420ma_len 0x4C /* Length of single entry         @MZA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420NA": {"ttr": 8583, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420na \u00e4\n  unsigned char  smf42njbn\u00c48\u00dc;  /* Job name                       @MZA */\n  unsigned char  smf42nrst\u00c44\u00dc;  /* Reader start time              @MZA */\n  unsigned char  smf42nrsd\u00c44\u00dc;  /* Reader start date              @MZA */\n  unsigned char  smf42nuif\u00c48\u00dc;  /* User identification            @MZA */\n  unsigned char  smf42nuid\u00c48\u00dc;  /* RACF user id                   @MZA */\n  unsigned char  smf42ncgp\u00c48\u00dc;  /* RACF connect group             @MZA */\n  unsigned char  smf42nver;     /* Record version identifier (2)  @MZA */\n  unsigned char  smf42nact;     /* Activity type:                 @MZA */\n  unsigned char  smf42nstp;     /* Security type                  @MZA */\n  unsigned char  _filler1;      /* Reserved                       @MZA */\n  unsigned char  smf42ndsn\u00c444\u00dc; /* Dataset name                   @MZA */\n  unsigned char  smf42nvol\u00c46\u00dc;  /* Volume serial number           @MZA */\n  unsigned char  smf42nunt\u00c48\u00dc;  /* Device type                    @MZA */\n  short int      smf42ndsq;     /* Dataset sequence number        @MZA */\n  unsigned char  smf42nvsq\u00c42\u00dc;  /* Volume sequence number         @MZA */\n  double         smf42nldto;    /* Local time/date offset         @MZA */\n  unsigned char  smf42nend;     /* 1st data section end           @MZA */\n  \u00fc;\n\n/* Values for field \"smf42nend\" */\n#define smf420na_len 0x72 /* Length of single entry         @MZA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF420PA": {"ttr": 8389, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420pa \u00e4\n  union \u00e4\n    struct \u00e4\n      double         _smf42pa1;      /* @11A */\n      unsigned char  _filler1\u00c4792\u00dc;\n      \u00fc _smf420pa_struct1;\n    struct \u00e4\n      int            _smf42jpa;      /* Interval length. This is the    @11A */\n      unsigned char  _smf42j01\u00c412\u00dc;  /* Reserved                        @11A */\n      unsigned char  _smf42jpb\u00c48\u00dc;   /* MVS system name.                @11A */\n      unsigned char  _smf42jpc\u00c48\u00dc;   /* Reserved                        @11A */\n      unsigned char  _smf42jpd\u00c48\u00dc;   /* Reserved                        @11A */\n      unsigned char  _smf42jpe\u00c48\u00dc;   /* Average CPU time spent by       @11A */\n      unsigned char  _smf42jpf\u00c48\u00dc;   /* Total CPU time for this         @11A */\n      unsigned char  _smf42jp1\u00c412\u00dc;  /* Reserved                        @21A */\n      int            _smf42jp6;      /* Total number of write           @21A */\n      int            _smf42jpg;      /* Number of buffer manager        @11A */\n      int            _smf42jph;      /* Number of buffer manager        @11A */\n      int            _smf42jpi;      /* Total number of times that BMF  @11A */\n      int            _smf42jp2;      /* Number of buffer manager        @21A */\n      int            _smf42jpj;      /* Buffer manager number of        @11A */\n      int            _smf42jpk;      /* Buffer manager number of        @11A */\n      int            _smf42jpl;      /* Buffer manager number of        @11A */\n      int            _smf42jpm;      /* Buffer manager number of        @11A */\n      int            _smf42jpn;      /* Buffer manager average          @11A */\n      unsigned char  _smf42jp3\u00c412\u00dc;  /* Reserved                        @11A */\n      int            _smf42jpo;      /* Sysplex Cache manager           @11A */\n      int            _smf42jpp;      /* Sysplex cache manager num       @11A */\n      int            _smf42jpq;      /* Sysplex Cache manager hits      @11A */\n      int            _smf42jpr;      /* Sysplex Cache manager hits      @11A */\n      int            _smf42jps;      /* Sysplex Cache manager hits      @11A */\n      unsigned char  _smf42jp4\u00c412\u00dc;  /* Reserved                        @11A */\n      int            _smf42jpt;      /* DASD number of 'hits'           @11A */\n      int            _smf42jpu;      /* DASD number                     @11A */\n      int            _smf42jpv;      /* DASD 'hits' low percentage      @11A */\n      int            _smf42jpw;      /* DASD 'hits' high percentage     @11A */\n      int            _smf42jpx;      /* DASD average 'hits' during      @11A */\n      unsigned char  _smf42jp5\u00c412\u00dc;  /* Reserved                        @11A */\n      unsigned char  _smf42jpy\u00c4512\u00dc; /* Buffer pool count array.        @11A */\n      int            _smf42jqg;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jqh;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jqi;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jqj;      /* Buffer size goal (in mega-      @11A */\n      int            _smf42jqk;      /* Buffer size calculated          @11A */\n      int            _smf42jql;      /* Buffer size calculated          @11A */\n      int            _smf42jqm;      /* Buffer size calculated          @11A */\n      int            _smf42jqn;      /* Buffer size calculated          @11A */\n      unsigned char  _smf42jq3\u00c48\u00dc;   /* Reserved                        @11A */\n      unsigned char  _smf42jqo\u00c464\u00dc;  /* Calculated megabytes            @11A */\n      \u00fc smf42pac;\n    \u00fc _smf420pa_union1;\n  int            smf42jsa; /* Number of SCM Read requests    @21A */\n  int            smf42jsb; /* Number of SCM Read requests    @21A */\n  int            smf42jsc; /* Current percentage of SCM read @21A */\n  int            smf42jsd; /* Low percentage during this     @21A */\n  int            smf42jse; /* High percentage during this    @21A */\n  int            smf42jsf; /* Average percentage during this @21A */\n  int            smf42jsg; /* Number of Redos during         @21A */\n  int            smf42jsh; /* Current percentage of Redos    @21A */\n  int            smf42jsi; /* Low percentage during this     @21A */\n  int            smf42jsj; /* High percentage during this    @21A */\n  int            smf42jsk; /* Average percentage during      @21A */\n  int            smf42jsl; /* Number of Recursive Redos duri @21A */\n  int            smf42jsm; /* Current percentage of          @21A */\n  int            smf42jsn; /* Low percentage during this     @21A */\n  int            smf42jso; /* High percentage during this    @21A */\n  int            smf42jsp; /* Average percentage during this @21A */\n  int            smf42juc; /* Total number of fixed pages   @PJS  */\n  int            smf42jud; /* Total number of fixed pages   @PJS  */\n  int            smf42jue; /* Total number of fixed pages   @PJS  */\n  int            smf42juf; /* Fixed Storage Amount          @PJS  */\n  int            smf42jug; /* Real Storage Percentage       @PJS  */\n  \u00fc;\n\n#define smf42pa1 _smf420pa_union1._smf420pa_struct1._smf42pa1\n#define smf42jpa _smf420pa_union1.smf42pac._smf42jpa\n#define smf42j01 _smf420pa_union1.smf42pac._smf42j01\n#define smf42jpb _smf420pa_union1.smf42pac._smf42jpb\n#define smf42jpc _smf420pa_union1.smf42pac._smf42jpc\n#define smf42jpd _smf420pa_union1.smf42pac._smf42jpd\n#define smf42jpe _smf420pa_union1.smf42pac._smf42jpe\n#define smf42jpf _smf420pa_union1.smf42pac._smf42jpf\n#define smf42jp1 _smf420pa_union1.smf42pac._smf42jp1\n#define smf42jp6 _smf420pa_union1.smf42pac._smf42jp6\n#define smf42jpg _smf420pa_union1.smf42pac._smf42jpg\n#define smf42jph _smf420pa_union1.smf42pac._smf42jph\n#define smf42jpi _smf420pa_union1.smf42pac._smf42jpi\n#define smf42jp2 _smf420pa_union1.smf42pac._smf42jp2\n#define smf42jpj _smf420pa_union1.smf42pac._smf42jpj\n#define smf42jpk _smf420pa_union1.smf42pac._smf42jpk\n#define smf42jpl _smf420pa_union1.smf42pac._smf42jpl\n#define smf42jpm _smf420pa_union1.smf42pac._smf42jpm\n#define smf42jpn _smf420pa_union1.smf42pac._smf42jpn\n#define smf42jp3 _smf420pa_union1.smf42pac._smf42jp3\n#define smf42jpo _smf420pa_union1.smf42pac._smf42jpo\n#define smf42jpp _smf420pa_union1.smf42pac._smf42jpp\n#define smf42jpq _smf420pa_union1.smf42pac._smf42jpq\n#define smf42jpr _smf420pa_union1.smf42pac._smf42jpr\n#define smf42jps _smf420pa_union1.smf42pac._smf42jps\n#define smf42jp4 _smf420pa_union1.smf42pac._smf42jp4\n#define smf42jpt _smf420pa_union1.smf42pac._smf42jpt\n#define smf42jpu _smf420pa_union1.smf42pac._smf42jpu\n#define smf42jpv _smf420pa_union1.smf42pac._smf42jpv\n#define smf42jpw _smf420pa_union1.smf42pac._smf42jpw\n#define smf42jpx _smf420pa_union1.smf42pac._smf42jpx\n#define smf42jp5 _smf420pa_union1.smf42pac._smf42jp5\n#define smf42jpy _smf420pa_union1.smf42pac._smf42jpy\n#define smf42jqg _smf420pa_union1.smf42pac._smf42jqg\n#define smf42jqh _smf420pa_union1.smf42pac._smf42jqh\n#define smf42jqi _smf420pa_union1.smf42pac._smf42jqi\n#define smf42jqj _smf420pa_union1.smf42pac._smf42jqj\n#define smf42jqk _smf420pa_union1.smf42pac._smf42jqk\n#define smf42jql _smf420pa_union1.smf42pac._smf42jql\n#define smf42jqm _smf420pa_union1.smf42pac._smf42jqm\n#define smf42jqn _smf420pa_union1.smf42pac._smf42jqn\n#define smf42jq3 _smf420pa_union1.smf42pac._smf42jq3\n#define smf42jqo _smf420pa_union1.smf42pac._smf42jqo\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420PB": {"ttr": 8737, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420pb \u00e4\n  short int      smf42p_a; /* Number of alias names that were     */\n  unsigned char  smf42paa; /* Alias name array. contains SMF42P#A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420QA": {"ttr": 7881, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420qa \u00e4\n  unsigned char  smf42qjb\u00c48\u00dc;  /* Job name, started task control, or  */\n  unsigned char  smf42qst\u00c48\u00dc;  /* Step name                      @26A */\n  unsigned char  smf42qpr\u00c48\u00dc;  /* Proc name or blanks            @26A */\n  unsigned char  smf42qds\u00c444\u00dc; /* Data set name                  @26A */\n  unsigned char  smf42qvs\u00c46\u00dc;  /* VOLSER                         @26A */\n  short int      smf42qml;     /* Length of the member name after the */\n  unsigned char  smf42qmn\u00c463\u00dc; /* Member name after rename            */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420QB": {"ttr": 8393, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420qb \u00e4\n  short int      smf42qol;     /* Length of the member name before    */\n  unsigned char  smf42qon\u00c463\u00dc; /* Member name before rename      @26A */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF420QC": {"ttr": 8357, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf420qc \u00e4\n  unsigned char  smf42qui\u00c480\u00dc; /* USERID token of caller of STOW or */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF4201A": {"ttr": 8265, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4201a \u00e4\n  struct \u00e4\n    int            _smf42tna; /* Total number of storage classes               */\n    int            _smf42tmt; /* Interval length (total time of measurement    */\n    int            _smf42trt; /* Total number of member data page reads        */\n    int            _smf42trh; /* Total number of member data page read hits    */\n    int            _smf42tdt; /* Total number of directory data page reads     */\n    int            _smf42tdh; /* Total number of directory data page read hits */\n    int            _smf42buf; /* Total number of active BMF 4K buffers   @18A  */\n    int            _smf42bmx; /* High water mark of BMF buffers          @18A  */\n    short int      _smf42lru; /* BMF LRU interval time                   @18A  */\n    short int      _smf42uic; /* BMF LRU cycles before buffer cast out   @18A  */\n    \u00fc smf42bmf;\n  \u00fc;\n\n#define smf42tna smf42bmf._smf42tna\n#define smf42tmt smf42bmf._smf42tmt\n#define smf42trt smf42bmf._smf42trt\n#define smf42trh smf42bmf._smf42trh\n#define smf42tdt smf42bmf._smf42tdt\n#define smf42tdh smf42bmf._smf42tdh\n#define smf42buf smf42bmf._smf42buf\n#define smf42bmx smf42bmf._smf42bmx\n#define smf42lru smf42bmf._smf42lru\n#define smf42uic smf42bmf._smf42uic\n\n/* Values for field \"smf42uic\" */\n#define smf4201a_len 0x24\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4201B": {"ttr": 8159, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4201b \u00e4\n  struct \u00e4\n    struct \u00e4\n      short int      _smf42pnl;     /* Storage class name length */\n      unsigned char  _smf42pnn\u00c430\u00dc; /* Storage class name        */\n      \u00fc smf42pna;\n    int            _smf42srt; /* Total number of member data page reads        */\n    int            _smf42srh; /* Total number of member data page read hits    */\n    int            _smf42sdt; /* Total number of directory data page reads     */\n    int            _smf42sdh; /* Total number of directory data page read hits */\n    \u00fc smf42sc;\n  \u00fc;\n\n#define smf42pnl smf42sc.smf42pna._smf42pnl\n#define smf42pnn smf42sc.smf42pna._smf42pnn\n#define smf42srt smf42sc._smf42srt\n#define smf42srh smf42sc._smf42srh\n#define smf42sdt smf42sc._smf42sdt\n#define smf42sdh smf42sc._smf42sdh\n\n/* Values for field \"smf42sdh\" */\n#define smf4201b_len 0x30\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4202A": {"ttr": 7901, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4202a \u00e4\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _smf42scs;    /* Storage director caching status. Format as    */\n      unsigned char  _smf42ncs;    /* Subsystem non-volatile storage status. Format */\n      short int      _smf42cid;    /* Subsystem identifier                          */\n      int            _smf42css;    /* Configured subsystem storage capacity. F'-1'  */\n      int            _smf42ssa;    /* Subsystem storage available for allocation as */\n      int            _smf42sap;    /* Subsystem storage allocated for pinned data   */\n      int            _smf42ssu;    /* Subsystem storage unavailable due to          */\n      int            _smf42nsz;    /* Configured non-volatile cache capacity. F'-1' */\n      int            _smf42spr;    /* Non-volatile cache allocated for pinned data  */\n      unsigned char  _smf42ssf;    /* Subsystem Flags                         @08A  */\n      unsigned char  _filler1\u00c43\u00dc;  /* Reserved                                @08C  */\n      \u00fc smf42hws;\n    struct \u00e4\n      int            _smf42lct;    /* I/O count for subsystem             */\n      int            _smf42lfw;    /* Fast write wait count               */\n      int            _smf42lrh;    /* Cache normal read hit percent       */\n      int            _smf42lwm;    /* Fast write waits per minute         */\n      struct \u00e4\n        short int      _smf42lyy; /* Year                           */\n        short int      _smf42ldd; /* Day                            */\n        int            _smf42ltm; /* Time: HH:MM:SS:TH (1 byte ea.) */\n        \u00fc smf42lts;\n      int            _smf42cct;    /* I/O count for subsystem             */\n      int            _smf42cfw;    /* Fast write wait count               */\n      int            _smf42crh;    /* Cache normal read hit percent       */\n      int            _smf42cwm;    /* Fast write waits per minute         */\n      struct \u00e4\n        short int      _smf42cyy; /* Year                           */\n        short int      _smf42cdd; /* Day                            */\n        int            _smf42ctm; /* Time: HH:MM:SS:TH (1 byte ea.) */\n        \u00fc smf42cts;\n      short int      _smf42ahr;    /* Average hit ratio                   */\n      short int      _smf42afw;    /* Average fast write waits per minute */\n      unsigned char  _filler2\u00c44\u00dc;  /* Reserved                            */\n      \u00fc smf42sws;\n    \u00fc smf42cuc;\n  \u00fc;\n\n#define smf42scs smf42cuc.smf42hws._smf42scs\n#define smf42ncs smf42cuc.smf42hws._smf42ncs\n#define smf42cid smf42cuc.smf42hws._smf42cid\n#define smf42css smf42cuc.smf42hws._smf42css\n#define smf42ssa smf42cuc.smf42hws._smf42ssa\n#define smf42sap smf42cuc.smf42hws._smf42sap\n#define smf42ssu smf42cuc.smf42hws._smf42ssu\n#define smf42nsz smf42cuc.smf42hws._smf42nsz\n#define smf42spr smf42cuc.smf42hws._smf42spr\n#define smf42ssf smf42cuc.smf42hws._smf42ssf\n#define smf42lct smf42cuc.smf42sws._smf42lct\n#define smf42lfw smf42cuc.smf42sws._smf42lfw\n#define smf42lrh smf42cuc.smf42sws._smf42lrh\n#define smf42lwm smf42cuc.smf42sws._smf42lwm\n#define smf42lyy smf42cuc.smf42sws.smf42lts._smf42lyy\n#define smf42ldd smf42cuc.smf42sws.smf42lts._smf42ldd\n#define smf42ltm smf42cuc.smf42sws.smf42lts._smf42ltm\n#define smf42cct smf42cuc.smf42sws._smf42cct\n#define smf42cfw smf42cuc.smf42sws._smf42cfw\n#define smf42crh smf42cuc.smf42sws._smf42crh\n#define smf42cwm smf42cuc.smf42sws._smf42cwm\n#define smf42cyy smf42cuc.smf42sws.smf42cts._smf42cyy\n#define smf42cdd smf42cuc.smf42sws.smf42cts._smf42cdd\n#define smf42ctm smf42cuc.smf42sws.smf42cts._smf42ctm\n#define smf42ahr smf42cuc.smf42sws._smf42ahr\n#define smf42afw smf42cuc.smf42sws._smf42afw\n\n/* Values for field \"smf42ssf\" */\n#define smf42enh     0x80 /* Subsystem is D/T3990-6 enhanced mode    @08A */\n\n/* Values for field \"_filler2\" */\n#define smf4202a_len 0x58\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4202B": {"ttr": 8067, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4202b \u00e4\n  struct \u00e4\n    unsigned char  _smf42vol\u00c46\u00dc; /* Volume serial number */\n    unsigned char  _filler1\u00c42\u00dc;  /* Reserved             */\n    int            _smf42dev;    /* Device number        */\n    struct \u00e4\n      unsigned char  _smf42db1; /* Device status flags, byte 1. Format as */\n      unsigned char  _smf42db2; /* Device status flags, byte 2. Format as */\n      \u00fc smf42vst;\n    unsigned char  _filler2\u00c42\u00dc;  /* Reserved             */\n    \u00fc smf42vls;\n  \u00fc;\n\n#define smf42vol smf42vls._smf42vol\n#define smf42dev smf42vls._smf42dev\n#define smf42db1 smf42vls.smf42vst._smf42db1\n#define smf42db2 smf42vls.smf42vst._smf42db2\n\n/* Values for field \"_filler2\" */\n#define smf4202b_len 0x10\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4203A": {"ttr": 8293, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4203a \u00e4\n  struct \u00e4\n    unsigned char  _smf42eac\u00c48\u00dc;  /* Action which caused record to be created:    */\n    int            _smf42erc;     /* Return code from resulting event             */\n    int            _smf42ers;     /* Reason code from resulting event             */\n    void          *_smf42eua;     /* UCB address for device                       */\n    unsigned char  _smf42evo\u00c46\u00dc;  /* Volser for device                            */\n    char           _smf42esa;     /* UCBSTAT field                           @J1A */\n    unsigned char  _filler1;      /* Reserved                                @J1C */\n    char           _smf42eos;     /* Old MVS volume status                        */\n    char           _smf42ens;     /* New MVS volume status                        */\n    short int      _smf42efl;     /* UCBSFLS field                           @J1C */\n    unsigned char  _smf42ety\u00c48\u00dc;  /* Type of VARY request: STORGRP, LIBRARY,      */\n    struct \u00e4\n      short int      _smf42enl;     /* Name length                                */\n      unsigned char  _smf42enm\u00c430\u00dc; /* STORGRP name or LIBRARY name or DRIVE name */\n      \u00fc smf42ern;\n    unsigned char  _smf42evl\u00c46\u00dc;  /* Volume serial                                */\n    unsigned char  _filler2\u00c42\u00dc;   /* Reserved                                     */\n    unsigned char  _smf42esy\u00c48\u00dc;  /* System name or '(ALL)'                       */\n    unsigned char  _smf42est\u00c412\u00dc; /* Resulting status: ENABLE or ENABLE,NEW or    */\n    unsigned char  _filler3\u00c44\u00dc;   /* Reserved                                     */\n    unsigned char  _smf42esd\u00c444\u00dc; /* Source control data set name                 */\n    unsigned char  _smf42ead\u00c444\u00dc; /* Active control data set name                 */\n    \u00fc smf42eas;\n  \u00fc;\n\n#define smf42eac smf42eas._smf42eac\n#define smf42erc smf42eas._smf42erc\n#define smf42ers smf42eas._smf42ers\n#define smf42eua smf42eas._smf42eua\n#define smf42evo smf42eas._smf42evo\n#define smf42esa smf42eas._smf42esa\n#define smf42eos smf42eas._smf42eos\n#define smf42ens smf42eas._smf42ens\n#define smf42efl smf42eas._smf42efl\n#define smf42ety smf42eas._smf42ety\n#define smf42enl smf42eas.smf42ern._smf42enl\n#define smf42enm smf42eas.smf42ern._smf42enm\n#define smf42evl smf42eas._smf42evl\n#define smf42esy smf42eas._smf42esy\n#define smf42est smf42eas._smf42est\n#define smf42esd smf42eas._smf42esd\n#define smf42ead smf42eas._smf42ead\n\n/* Values for field \"smf42ead\" */\n#define smf4203a_len 0xC0\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4204C": {"ttr": 8145, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4204c \u00e4\n  int            s42ccid;     /* Logical Session ID                    @OY66824 */\n  unsigned char  s42ccrqs\u00c42\u00dc; /* Request type, 'CC ' = Concurrent copy @OY66824 */\n  unsigned char  s42ccts;     /* Termination status,                   @OY66824 */\n  unsigned char  _filler1;    /* Reserved                              @OY66824 */\n  unsigned char  s42ccjnm\u00c48\u00dc; /* Invoking Jobname                      @OY66824 */\n  unsigned char  s42ccjno\u00c48\u00dc; /* Invoking Job number                   @OY66824 */\n  unsigned char  s42ccsst\u00c48\u00dc; /* Session start TOD                     @OY66824 */\n  unsigned char  s42cceit\u00c48\u00dc; /* Initialization end TOD                @OY66824 */\n  unsigned char  s42ccset\u00c48\u00dc; /* Session end TOD                       @OY66824 */\n  int            s42ccsso;    /* Offset to first SSID header           @OY66824 */\n  short int      s42ccssn;    /* Number of SSIDs  for the session      @OY66824 */\n  short int      s42ccssl;    /* Length of  SSID header                @OY66824 */\n  unsigned char  _filler2\u00c48\u00dc; /* Reserved                              @OY66824 */\n  \u00fc;\n\n/* Values for field \"_filler2\" */\n#define smf4204c_len 0x40 /* @OY66824 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4204V": {"ttr": 8061, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4204v \u00e4\n  int            s42vcid;     /* VCC Logical Session ID                    @65A  */\n  unsigned char  s42vcrqs\u00c43\u00dc; /* Request type, 'VCC' =                     @65A  */\n  unsigned char  s42vcts;     /* Termination status,                       @65A  */\n  unsigned char  s42vcjnm\u00c48\u00dc; /* Invoking Jobname                          @65A  */\n  unsigned char  s42vcjno\u00c48\u00dc; /* Invoking Job number                       @65A  */\n  unsigned char  s42vcsst\u00c48\u00dc; /* Session start TOD                         @65A  */\n  unsigned char  s42vceit\u00c48\u00dc; /* Initialization end TOD                    @65A  */\n  unsigned char  s42vcset\u00c48\u00dc; /* Session end TOD                           @65A  */\n  unsigned char  s42vcctk\u00c48\u00dc; /* Total number of tracks processed using cc @65A  */\n  unsigned char  s42vcvtk\u00c48\u00dc; /* Total number of tracks processed using vcc @65A */\n  unsigned char  s42vcdsp\u00c48\u00dc; /* Total number of tracks stored in dataspace @65A */\n  int            s42vcsso;    /* Offset to first SSID header               @65A  */\n  short int      s42vcssn;    /* Number of SSIDs  for the session          @65A  */\n  short int      s42vcssl;    /* Length of  SSID header                    @65A  */\n  unsigned char  _filler1\u00c48\u00dc; /* Reserved                                  @65A  */\n  \u00fc;\n\n/* Values for field \"_filler1\" */\n#define smf4204v_len 0x58 /* @65A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4205A": {"ttr": 8311, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4205a \u00e4\n  struct \u00e4\n    short int      _s42scrnl;     /* Storage class name length */\n    unsigned char  _s42scrnn\u00c430\u00dc; /* Storage class name        */\n    \u00fc s42scnam;\n  struct \u00e4\n    int            _s42scior; /* Response time            */\n    int            _s42scioc; /* Avg I/O connect time     */\n    int            _s42sciop; /* Avg I/O pending time     */\n    int            _s42sciod; /* Avg I/O disconnect time  */\n    int            _s42scioq; /* Avg cntl unit queue time */\n    int            _s42scion; /* Total number of I/Os     */\n    int            _s42sccnd; /* No. of cache candidates  */\n    int            _s42schit; /* No. of cache hits        */\n    int            _s42scwcn; /* No. of write candidates  */\n    int            _s42scwhi; /* No. of write hits        */\n    \u00fc s42scio;\n  int            s42scseq; /* No. of sequential I/Os            @OW00573 */\n  int            s42scrlc; /* No. of RLC I/O's                  @OW00573 */\n  int            s42scicl; /* No. of ILC I/O's                  @OW00573 */\n  int            s42scdao; /* Average I/O device-active-only time   @19C */\n  \u00fc;\n\n#define s42scrnl s42scnam._s42scrnl\n#define s42scrnn s42scnam._s42scrnn\n#define s42scior s42scio._s42scior\n#define s42scioc s42scio._s42scioc\n#define s42sciop s42scio._s42sciop\n#define s42sciod s42scio._s42sciod\n#define s42scioq s42scio._s42scioq\n#define s42scion s42scio._s42scion\n#define s42sccnd s42scio._s42sccnd\n#define s42schit s42scio._s42schit\n#define s42scwcn s42scio._s42scwcn\n#define s42scwhi s42scio._s42scwhi\n\n/* Values for field \"s42scdao\" */\n#define smf4205a_len 0x58\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4205B": {"ttr": 8119, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4205b \u00e4\n  int            s42vtnxt;    /* Offset to next volume                 @P1A */\n  unsigned char  s42vtser\u00c46\u00dc; /* Volume serial                         @P1A */\n  short int      s42vtadr;    /* Device address                        @P1A */\n  char           s42vtfl1;    /* Flags                                 @P1A */\n  unsigned char  _filler1\u00c47\u00dc; /* Reserved                              @P1A */\n  int            s42vtunc;    /* I/O count, unknown data set           @P1A */\n  int            s42vtvdo;    /* Offset to VTOC Data component section @P1A */\n  short int      s42vtvdl;    /* Length of VTOC Data component section @P1A */\n  short int      _filler2;    /* Reserved                              @P1A */\n  int            s42vtvxo;    /* Offset to VTOC Index section          @P1A */\n  short int      s42vtvxl;    /* Length of VTOC Index section          @P1A */\n  short int      _filler3;    /* Reserved                              @P1A */\n  int            s42vtvvo;    /* Offset to VVDS section                @P1A */\n  short int      s42vtvvl;    /* Length of VVDS section                @P1A */\n  short int      _filler4;    /* Reserved                              @P1A */\n  \u00fc;\n\n/* Values for field \"s42vtfl1\" */\n#define s42vtonl     0x80 /* Device online                         @P1A */\n#define s42vtsms     0x40 /* SMS volume                            @P1A */\n\n/* Values for field \"_filler4\" */\n#define smf4205b_len 0x30 /* @P1A                                       */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4205C": {"ttr": 8217, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4205c \u00e4\n  int            s42vdior; /* Response time                         @P1A */\n  int            s42vdioc; /* Avg I/O connect time                  @P1A */\n  int            s42vdiop; /* Avg I/O pending time                  @P1A */\n  int            s42vdiod; /* Avg I/O disconnect time               @P1A */\n  int            s42vdioq; /* Avg cntl unit queue time              @P1A */\n  int            s42vdion; /* Total number of I/Os                  @P1A */\n  int            s42vdcnd; /* No. of cache candidates               @P1A */\n  int            s42vdhit; /* No. of cache hits                     @P1A */\n  int            s42vdwcn; /* No. of write candidates               @P1A */\n  int            s42vdwhi; /* No. of write hits                     @P1A */\n  int            s42vdseq; /* No. of sequential I/Os                @P1A */\n  int            s42vdrlc; /* No. of RLC I/O's                      @P1A */\n  int            s42vdicl; /* No. of ICL I/O's                      @P1A */\n  int            s42vddao; /* Average I/O device-active-only time   @19C */\n  \u00fc;\n\n/* Values for field \"s42vddao\" */\n#define smf4205c_len 0x38 /* @P1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4205D": {"ttr": 8149, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4205d \u00e4\n  int            s42vxior; /* Response time                         @P1A */\n  int            s42vxioc; /* Avg I/O connect time                  @P1A */\n  int            s42vxiop; /* Avg I/O pending time                  @P1A */\n  int            s42vxiod; /* Avg I/O disconnect time               @P1A */\n  int            s42vxioq; /* Avg cntl unit queue time              @P1A */\n  int            s42vxion; /* Total number of I/Os                  @P1A */\n  int            s42vxcnd; /* No. of cache candidates               @P1A */\n  int            s42vxhit; /* No. of cache hits                     @P1A */\n  int            s42vxwcn; /* No. of write candidates               @P1A */\n  int            s42vxwhi; /* No. of write hits                     @P1A */\n  int            s42vxseq; /* No. of sequential I/Os                @P1A */\n  int            s42vxrlc; /* No. of RLC I/O's                      @P1A */\n  int            s42vxicl; /* No. of ICL I/O's                      @P1A */\n  int            s42vxdao; /* Average I/O device-active-only time   @19C */\n  \u00fc;\n\n/* Values for field \"s42vxdao\" */\n#define smf4205d_len 0x38 /* @P1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4205E": {"ttr": 8105, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4205e \u00e4\n  int            s42vvior; /* Response time                         @P1A */\n  int            s42vvioc; /* Avg I/O connect time                  @P1A */\n  int            s42vviop; /* Avg I/O pending time                  @P1A */\n  int            s42vviod; /* Avg I/O disconnect time               @P1A */\n  int            s42vvioq; /* Avg cntl unit queue time              @P1A */\n  int            s42vvion; /* Total number of I/Os                  @P1A */\n  int            s42vvcnd; /* No. of cache candidates               @P1A */\n  int            s42vvhit; /* No. of cache hits                     @P1A */\n  int            s42vvwcn; /* No. of write candidates               @P1A */\n  int            s42vvwhi; /* No. of write hits                     @P1A */\n  int            s42vvseq; /* No. of sequential I/Os                @P1A */\n  int            s42vvrlc; /* No. of RLC I/O's                      @P1A */\n  int            s42vvicl; /* No. of ICL I/O's                      @P1A */\n  int            s42vvdao; /* Average I/O device-active-only time   @19C */\n  \u00fc;\n\n/* Values for field \"s42vvdao\" */\n#define smf4205e_len 0x38 /* @P1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4206A": {"ttr": 8723, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4206a \u00e4\n  unsigned char  s42jdjnm\u00c48\u00dc; /* Job name                                     */\n  int            s42jdrst;    /* Time, in hundreds of a second, reader        */\n  unsigned char  s42jdrsd\u00c44\u00dc; /* Date reader recognized the JOB card for this */\n  unsigned char  s42jduid\u00c48\u00dc; /* User identification (taken from common exit  */\n  int            s42jddso;    /* Offset to first data set hdr                 */\n  short int      s42jddsl;    /* Length of DS header sec                      */\n  char           s42jdcod;    /* 0=Close, 1=Interval record                   */\n  unsigned char  _filler1;    /* Reserved                                     */\n  short int      s42jdpgn;    /* Job performance group number                 */\n  short int      s42jdiol;    /* Length of Data Set I/O section               */\n  short int      s42jdaml;    /* Length of AM section               @OW00573  */\n  unsigned char  _filler2\u00c42\u00dc; /* Reserved                               @09A  */\n  int            s42jdgmo;    /* GMT Offset represented in 1.048576 sec @09A  */\n  unsigned char  s42jdwsc\u00c48\u00dc; /* Workload Manager Service Class name    @P1A  */\n  unsigned char  s42jdwld\u00c48\u00dc; /* Workload Manager Workload name         @P1A  */\n  unsigned char  _filler3\u00c44\u00dc; /* Reserved                               @09A  */\n  \u00fc;\n\n/* Values for field \"_filler3\" */\n#define smf4206a_len 0x40\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4209A": {"ttr": 8053, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4209a \u00e4\n  unsigned char  s42asyid\u00c44\u00dc;  /* System ID                       @P1A */\n  unsigned char  s42jobn\u00c48\u00dc;   /* Job name                        @P1A */\n  unsigned char  s42rdst\u00c44\u00dc;   /* Reader start time               @P1A */\n  unsigned char  s42rdsd\u00c44\u00dc;   /* Reader start date(packed)       @P1A */\n  unsigned char  s42aauid\u00c48\u00dc;  /* User identification             @P1A */\n  unsigned char  s42astpn;     /* Step number                     @P1A */\n  unsigned char  s42flags;     /* Flags                           @P1A */\n  unsigned char  _filler1\u00c44\u00dc;  /* Reserved                        @P1A */\n  unsigned char  s42dsorg\u00c42\u00dc;  /* Data set organization           @P1A */\n  unsigned char  s42adisp;     /* Disp                            @P1A */\n  unsigned char  s42dsnme\u00c444\u00dc; /* Data set name                   @15C */\n  unsigned char  s42volsr\u00c46\u00dc;  /* Volser of current volume        @P1A */\n  unsigned char  s42ucbtp\u00c44\u00dc;  /* UCB type field of current vol   @P1A */\n  char           s42next;      /* Number of extents for data set  @P1A */\n  int            s42tntrk;     /* Total tracks allocated for      @P1A */\n  unsigned char  s42assat\u00c44\u00dc;  /* Secondary allocation amount     @P1A */\n  unsigned char  s42adrlh\u00c43\u00dc;  /* Average data block length if    @P1A */\n  unsigned char  _filler2\u00c45\u00dc;  /* Reserved                        @P1A */\n  \u00fc;\n\n/* Values for field \"s42flags\" */\n#define s42b37       0x80 /* 1... .... B37 Abend             @P1A */\n#define s42d37       0x40 /* .1.. .... D37 Abend             @P1A */\n#define s42e37       0x20 /* ..1. .... E37 Abend             @P1A */\n\n/* Values for field \"_filler2\" */\n#define smf4209a_len 0x6C /* Length of subtype 9 part 1      @P1A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF4209B": {"ttr": 8303, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf4209b \u00e4\n  struct \u00e4\n    unsigned char  _s42mcnme\u00c430\u00dc; /* Management class name           @P1A */\n    unsigned char  _s42scnme\u00c430\u00dc; /* Storage class name              @P1A */\n    unsigned char  _s42dcnme\u00c430\u00dc; /* Data class name                 @P1A */\n    unsigned char  _filler1\u00c430\u00dc;\n    \u00fc s4209sms;\n  \u00fc;\n\n#define s42mcnme s4209sms._s42mcnme\n#define s42scnme s4209sms._s42scnme\n#define s42dcnme s4209sms._s42dcnme\n\n/* Values for field \"s42dcnme\" */\n#define smf4209b_len 0x5A /* @13C */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF421PA": {"ttr": 8133, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf421pa \u00e4\n  unsigned char  smf42pjb\u00c48\u00dc;  /* Job name, started task control, or  */\n  unsigned char  smf42pst\u00c48\u00dc;  /* Step name                      @26A */\n  unsigned char  smf42ppr\u00c48\u00dc;  /* Proc name or blanks            @26A */\n  unsigned char  smf42pds\u00c444\u00dc; /* Data set name                  @26A */\n  unsigned char  smf42pvs\u00c46\u00dc;  /* VOLSER                         @26A */\n  short int      smf42pml;     /* Length of the member name which was */\n  unsigned char  smf42pf1;     /* Flags                          @26A */\n  unsigned char  _filler1\u00c43\u00dc;  /* Reserved                       @26A */\n  unsigned char  smf42pmn\u00c463\u00dc; /* Member name that was added or       */\n  \u00fc;\n\n/* Values for field \"smf42pf1\" */\n#define smf42pxa 0x80 /* Some aliases were excluded from     */\n#define smf42pad 0x40 /* on - member was added new      @26A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF5": {"ttr": 7987, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf5 \u00e4\n  unsigned char  smf5len\u00c42\u00dc;   /* RECORD LENGTH                                  */\n  unsigned char  smf5seg\u00c42\u00dc;   /* SEGMENT DESCRIPTOR                             */\n  unsigned char  smf5flg;      /* HEADER FLAG BYTE                               */\n  unsigned char  smf5rty;      /* RECORD TYPE 5                                  */\n  unsigned char  smf5tme\u00c44\u00dc;   /* TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL. */\n  unsigned char  smf5dte\u00c44\u00dc;   /* DATE, PACKED DEC. FORM : OOYYDDDF(F IS A SIGN) */\n  unsigned char  smf5sid\u00c44\u00dc;   /* SYSTEM IDENTIFICATION                   Y02901 */\n  unsigned char  smf5jbn\u00c48\u00dc;   /* JOB NAME                                       */\n  unsigned char  smf5rst\u00c44\u00dc;   /* READER START TIME FOR JOB (IN 100THS/SECONDS)  */\n  unsigned char  smf5rsd\u00c44\u00dc;   /* READER START DATE,PACKED DECIMAL FORMAT        */\n  unsigned char  smf5uif\u00c48\u00dc;   /* USER IDENTIFICATION FIELD                      */\n  unsigned char  smf5nst;      /* NUMBER OF STEPS IN THE JOB                     */\n  unsigned char  smf5jit\u00c44\u00dc;   /* JOB INITIATION TIME (IN 100THS/SECONDS)        */\n  unsigned char  smf5jid\u00c44\u00dc;   /* JOB INITIATION DATE, PACKED DECIMAL FORMAT     */\n  unsigned char  smf5nci\u00c44\u00dc;   /* NUMBER OF CARD-IMAGE RECORDS IN DD DATA OR DD* */\n  unsigned char  smf5jcc\u00c42\u00dc;   /* JOB COMPLETION CODE                            */\n  unsigned char  smf5jpty;     /* JOB PRIORITY                                   */\n  unsigned char  smf5rstt\u00c44\u00dc;  /* READER STOP TIME FOR JOB (IN 100THS/SECONDS)   */\n  unsigned char  smf5rstd\u00c44\u00dc;  /* READER STOP DATE FOR JOB (IN PACKED DEC.FORM)  */\n  unsigned char  smf5jbti;     /* JOB TERMINATION INDICATOR                      */\n  unsigned char  smf5smci;     /* RESV-FORMERLY SYSOUT CLASSES INDICATOR  Y02120 */\n  unsigned char  smf5tran\u00c44\u00dc;  /* TOTAL TRANSACTION RESIDENCY TIME      @ZM01380 */\n  unsigned char  smf5ckre;     /* RESV                                           */\n  unsigned char  smf5rdcl;     /* READER DEVICE CLASS                            */\n  unsigned char  smf5ruty;     /* READER UNIT TYPE                               */\n  unsigned char  smf5jicl;     /* JOB INPUT CLASS                                */\n  unsigned char  smf5spk;      /* STORAGE PROTECT KEY                     A40791 */\n  unsigned char  smf5srbt\u00c43\u00dc;  /* JOB CPU TIME UNDER SRB(.01 SEC)       @YL026WA */\n  unsigned char  smf5tjs\u00c44\u00dc;   /* TOTAL JOB SERVICE(SERVICE UNITS)        Y02133 */\n  unsigned char  smf5ttat\u00c44\u00dc;  /* TOTAL TRANSACTION ACTIVE TIME FOR JOB   Y02133 */\n  unsigned char  smf5rv2\u00c44\u00dc;   /* RESERVED                              @YL026WA */\n  unsigned char  smf5pgno\u00c42\u00dc;  /* Performance group number                  @LZC */\n  unsigned char  smf5rv3\u00c42\u00dc;   /* RESERVED                              @YL026WA */\n  unsigned char  smf5tlen;     /* TOTAL LENGTH OF ACCT SECT OF RECORD @G50FPRL   */\n  unsigned char  smf5prgn\u00c420\u00dc; /* PROGRAMMER'S NAME                              */\n  unsigned char  smf5jcpu\u00c43\u00dc;  /* RESERVED                                  @LAC */\n  unsigned char  smf5actf;     /* NUMBER OF ACCOUNTING FIELDS                    */\n  unsigned char  smf5cpus\u00c44\u00dc;  /* JOB CPU SERVICE                       @G50FPRL */\n  unsigned char  smf5iocs\u00c44\u00dc;  /* JOB I/O SERVICE                       @G50FPRL */\n  unsigned char  smf5msos\u00c44\u00dc;  /* JOB MAIN STORAGE SERVICE              @G50FPRL */\n  unsigned char  smf5srbs\u00c44\u00dc;  /* JOB SRB SERVICE                       @G50FPRL */\n  unsigned char  smf5rsv1\u00c48\u00dc;  /* RESERVED                              @YA15607 */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF70AID": {"ttr": 8757, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70aid \u00e4\n  short int      smf70rmn; /* READY MINIMUM VALUE OVER INTERVAL               */\n  short int      smf70rmm; /* READY MAXIMUM VALUE OVER INTERVAL               */\n  int            smf70rtt; /* READY TOTAL VALUE OVER INTERVAL                 */\n  int            smf70r00; /* COUNT OF TIMES READY VALUE WAS 0                */\n  int            smf70r01; /* COUNT OF TIMES READY VALUE WAS 1                */\n  int            smf70r02; /* COUNT OF TIMES READY VALUE WAS 2                */\n  int            smf70r03; /* COUNT OF TIMES READY VALUE WAS 3                */\n  int            smf70r04; /* COUNT OF TIMES READY VALUE WAS 4                */\n  int            smf70r05; /* COUNT OF TIMES READY VALUE WAS 5                */\n  int            smf70r06; /* COUNT OF TIMES READY VALUE WAS 6                */\n  int            smf70r07; /* COUNT OF TIMES READY VALUE WAS 7                */\n  int            smf70r08; /* COUNT OF TIMES READY VALUE WAS 8                */\n  int            smf70r09; /* COUNT OF TIMES READY VALUE WAS 9                */\n  int            smf70r10; /* COUNT OF TIMES READY VALUE WAS 10               */\n  int            smf70r11; /* COUNT OF TIMES READY VALUE WAS 11               */\n  int            smf70r12; /* COUNT OF TIMES READY VALUE WAS 12               */\n  int            smf70r13; /* COUNT OF TIMES READY VALUE WAS 13               */\n  int            smf70r14; /* COUNT OF TIMES READY VALUE WAS 14               */\n  int            smf70r15; /* COUNT OF TIMES READY VALUE WAS 14+              */\n  short int      smf70imn; /* IN USERS MINIMUM OVER INTERVAL                  */\n  short int      smf70imm; /* IN USERS MAXIMUM OVER INTERVAL                  */\n  int            smf70itt; /* IN USERS TOTAL VALUE OVER INTERVAL              */\n  int            smf70i00; /* COUNT OF TIMES IN USERS WAS 0                   */\n  int            smf70i01; /* COUNT OF TIMES IN USERS WAS 1-2                 */\n  int            smf70i02; /* COUNT OF TIMES IN USERS WAS 3-4                 */\n  int            smf70i03; /* COUNT OF TIMES IN USERS WAS 5-6                 */\n  int            smf70i04; /* COUNT OF TIMES IN USERS WAS 7-8                 */\n  int            smf70i05; /* COUNT OF TIMES IN USERS WAS 9-10                */\n  int            smf70i06; /* COUNT OF TIMES IN USERS WAS 11-15               */\n  int            smf70i07; /* COUNT OF TIMES IN USERS WAS 16-20               */\n  int            smf70i08; /* COUNT OF TIMES IN USERS WAS 21-25               */\n  int            smf70i09; /* COUNT OF TIMES IN USERS WAS 26-30               */\n  int            smf70i10; /* COUNT OF TIMES IN USERS WAS 31-35               */\n  int            smf70i11; /* COUNT OF TIMES IN USERS WAS 35+                 */\n  short int      smf70omn; /* OUT USERS MINIMUM OVER INTERVAL                 */\n  short int      smf70omm; /* OUT USERS MAXIMUM OVER INTERVAL                 */\n  int            smf70ott; /* OUT USERS TOTAL VALUE OVER INTERVAL             */\n  int            smf70o00; /* COUNT OF TIMES OUT USERS WAS 0                  */\n  int            smf70o01; /* COUNT OF TIMES OUT USERS WAS 1-2                */\n  int            smf70o02; /* COUNT OF TIMES OUT USERS WAS 3-4                */\n  int            smf70o03; /* COUNT OF TIMES OUT USERS WAS 5-6                */\n  int            smf70o04; /* COUNT OF TIMES OUT USERS WAS 7-8                */\n  int            smf70o05; /* COUNT OF TIMES OUT USERS WAS 9-10               */\n  int            smf70o06; /* COUNT OF TIMES OUT USERS WAS 11-15              */\n  int            smf70o07; /* COUNT OF TIMES OUT USERS WAS 16-20              */\n  int            smf70o08; /* COUNT OF TIMES OUT USERS WAS 21-25              */\n  int            smf70o09; /* COUNT OF TIMES OUT USERS WAS 26-30              */\n  int            smf70o10; /* COUNT OF TIMES OUT USERS WAS 31-35              */\n  int            smf70o11; /* COUNT OF TIMES OUT USERS WAS 35+                */\n  short int      smf70wmn; /* WAIT USERS MINIMUM OVER INTERVAL                */\n  short int      smf70wmm; /* WAIT USERS MAXIMUM OVER INTERVAL                */\n  int            smf70wtt; /* WAIT USERS TOTAL VALUE OVER INTERVAL            */\n  int            smf70w00; /* COUNT OF TIMES WAIT USERS WAS 0                 */\n  int            smf70w01; /* COUNT OF TIMES WAIT USERS WAS 1-2               */\n  int            smf70w02; /* COUNT OF TIMES WAIT USERS WAS 3-4               */\n  int            smf70w03; /* COUNT OF TIMES WAIT USERS WAS 5-6               */\n  int            smf70w04; /* COUNT OF TIMES WAIT USERS WAS 7-8               */\n  int            smf70w05; /* COUNT OF TIMES WAIT USERS WAS 9-10              */\n  int            smf70w06; /* COUNT OF TIMES WAIT USERS WAS 11-15             */\n  int            smf70w07; /* COUNT OF TIMES WAIT USERS WAS 16-20             */\n  int            smf70w08; /* COUNT OF TIMES WAIT USERS WAS 21-25             */\n  int            smf70w09; /* COUNT OF TIMES WAIT USERS WAS 26-30             */\n  int            smf70w10; /* COUNT OF TIMES WAIT USERS WAS 31-35             */\n  int            smf70w11; /* COUNT OF TIMES WAIT USERS WAS 35+               */\n  short int      smf70bmn; /* BATCH USERS MINIMUM OVER INTERVAL               */\n  short int      smf70bmm; /* BATCH USERS MAXIMUM OVER INTERVAL               */\n  int            smf70btt; /* BATCH USERS TOTAL VALUE OVER INTERVAL           */\n  int            smf70b00; /* COUNT OF TIMES BATCH USERS WAS 0                */\n  int            smf70b01; /* COUNT OF TIMES BATCH USERS WAS 1-2              */\n  int            smf70b02; /* COUNT OF TIMES BATCH USERS WAS 3-4              */\n  int            smf70b03; /* COUNT OF TIMES BATCH USERS WAS 5-6              */\n  int            smf70b04; /* COUNT OF TIMES BATCH USERS WAS 7-8              */\n  int            smf70b05; /* COUNT OF TIMES BATCH USERS WAS 9-10             */\n  int            smf70b06; /* COUNT OF TIMES BATCH USERS WAS 11-15            */\n  int            smf70b07; /* COUNT OF TIMES BATCH USERS WAS 16-20            */\n  int            smf70b08; /* COUNT OF TIMES BATCH USERS WAS 21-25            */\n  int            smf70b09; /* COUNT OF TIMES BATCH USERS WAS 26-30            */\n  int            smf70b10; /* COUNT OF TIMES BATCH USERS WAS 31-35            */\n  int            smf70b11; /* COUNT OF TIMES BATCH USERS WAS 35+              */\n  short int      smf70smn; /* STARTED USERS MINIMUM OVER INTERVAL             */\n  short int      smf70smm; /* STARTED USERS MAXIMUM OVER INTERVAL             */\n  int            smf70stt; /* STARTED USERS TOTAL VALUE OVER INTERVAL         */\n  int            smf70s00; /* COUNT OF TIMES STARTED USERS WAS 0              */\n  int            smf70s01; /* COUNT OF TIMES STARTED USERS WAS 1-2            */\n  int            smf70s02; /* COUNT OF TIMES STARTED USERS WAS 3-4            */\n  int            smf70s03; /* COUNT OF TIMES STARTED USERS WAS 5-6            */\n  int            smf70s04; /* COUNT OF TIMES STARTED USERS WAS 7-8            */\n  int            smf70s05; /* COUNT OF TIMES STARTED USERS WAS 9-10           */\n  int            smf70s06; /* COUNT OF TIMES STARTED USERS WAS 11-15          */\n  int            smf70s07; /* COUNT OF TIMES STARTED USERS WAS 16-20          */\n  int            smf70s08; /* COUNT OF TIMES STARTED USERS WAS 21-25          */\n  int            smf70s09; /* COUNT OF TIMES STARTED USERS WAS 26-30          */\n  int            smf70s10; /* COUNT OF TIMES STARTED USERS WAS 31-35          */\n  int            smf70s11; /* COUNT OF TIMES STARTED USERS WAS 35+            */\n  short int      smf70tmn; /* TSO USERS MINIMUM OVER INTERVAL                 */\n  short int      smf70tmm; /* TSO USERS MAXIMUM OVER INTERVAL                 */\n  int            smf70ttt; /* TSO USERS TOTAL VALUE OVER INTERVAL             */\n  int            smf70t00; /* COUNT OF TIMES TSO USERS WAS 0                  */\n  int            smf70t01; /* COUNT OF TIMES TSO USERS WAS 1-2                */\n  int            smf70t02; /* COUNT OF TIMES TSO USERS WAS 3-4                */\n  int            smf70t03; /* COUNT OF TIMES TSO USERS WAS 5-6                */\n  int            smf70t04; /* COUNT OF TIMES TSO USERS WAS 7-8                */\n  int            smf70t05; /* COUNT OF TIMES TSO USERS WAS 9-10               */\n  int            smf70t06; /* COUNT OF TIMES TSO USERS WAS 11-15              */\n  int            smf70t07; /* COUNT OF TIMES TSO USERS WAS 16-20              */\n  int            smf70t08; /* COUNT OF TIMES TSO USERS WAS 21-25              */\n  int            smf70t09; /* COUNT OF TIMES TSO USERS WAS 26-30              */\n  int            smf70t10; /* COUNT OF TIMES TSO USERS WAS 31-35              */\n  int            smf70t11; /* COUNT OF TIMES TSO USERS WAS 35+                */\n  short int      smf70lmn; /* LOGICAL RDY USERS MINIMUM                       */\n  short int      smf70lmm; /* LOGICAL RDY USERS MAXIMUM                       */\n  int            smf70ltt; /* LOGICAL RDY USERS TOTAL                         */\n  int            smf70l00; /* COUNT OF TIMES LOGICAL RDY USERS WAS 0          */\n  int            smf70l01; /* COUNT OF TIMES LOGICAL RDY USERS WAS 1-2        */\n  int            smf70l02; /* COUNT OF TIMES LOGICAL RDY USERS WAS 3-4        */\n  int            smf70l03; /* COUNT OF TIMES LOGICAL RDY USERS WAS 5-6        */\n  int            smf70l04; /* COUNT OF TIMES LOGICAL RDY USERS WAS 7-8        */\n  int            smf70l05; /* COUNT OF TIMES LOGICAL RDY USERS WAS 9-10       */\n  int            smf70l06; /* COUNT OF TIMES LOGICAL RDY USERS WAS 11-15      */\n  int            smf70l07; /* COUNT OF TIMES LOGICAL RDY USERS WAS 16-20      */\n  int            smf70l08; /* COUNT OF TIMES LOGICAL RDY USERS WAS 21-25      */\n  int            smf70l09; /* COUNT OF TIMES LOGICAL RDY USERS WAS 26-30      */\n  int            smf70l10; /* COUNT OF TIMES LOGICAL RDY USERS WAS 31-35      */\n  int            smf70l11; /* COUNT OF TIMES LOGICAL RDY USERS WAS 35+        */\n  short int      smf70amn; /* LOGICAL WAIT USERS MINIMUM                      */\n  short int      smf70amm; /* LOGICAL WAIT USERS MAXIMUM                      */\n  int            smf70att; /* LOGICAL WAIT USERS TOTAL                        */\n  int            smf70a00; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 0         */\n  int            smf70a01; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 1-2       */\n  int            smf70a02; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 3-4       */\n  int            smf70a03; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 5-6       */\n  int            smf70a04; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 7-8       */\n  int            smf70a05; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 9-10      */\n  int            smf70a06; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 11-15     */\n  int            smf70a07; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 16-20     */\n  int            smf70a08; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 21-25     */\n  int            smf70a09; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 26-30     */\n  int            smf70a10; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 31-35     */\n  int            smf70a11; /* COUNT OF TIMES LOGICAL WAIT USERS WAS 35+       */\n  short int      smf70pmn; /* ASCH USERS MINIMUM                              */\n  short int      smf70pmm; /* ASCH USERS MAXIMUM                              */\n  int            smf70ptt; /* ASCH USERS TOTAL                                */\n  int            smf70p00; /* COUNT OF TIMES ASCH USERS WAS 0                 */\n  int            smf70p01; /* COUNT OF TIMES ASCH USERS WAS 1-2               */\n  int            smf70p02; /* COUNT OF TIMES ASCH USERS WAS 3-4               */\n  int            smf70p03; /* COUNT OF TIMES ASCH USERS WAS 5-6               */\n  int            smf70p04; /* COUNT OF TIMES ASCH USERS WAS 7-8               */\n  int            smf70p05; /* COUNT OF TIMES ASCH USERS WAS 9-10              */\n  int            smf70p06; /* COUNT OF TIMES ASCH USERS WAS 11-15             */\n  int            smf70p07; /* COUNT OF TIMES ASCH USERS WAS 16-20             */\n  int            smf70p08; /* COUNT OF TIMES ASCH USERS WAS 21-25             */\n  int            smf70p09; /* COUNT OF TIMES ASCH USERS WAS 26-30             */\n  int            smf70p10; /* COUNT OF TIMES ASCH USERS WAS 31-35             */\n  int            smf70p11; /* COUNT OF TIMES ASCH USERS WAS 35+               */\n  short int      smf70xmn; /* OMVS USERS MINIMUM                              */\n  short int      smf70xmm; /* OMVS USERS MAXIMUM                              */\n  int            smf70xtt; /* OMVS USERS TOTAL                                */\n  int            smf70x00; /* COUNT OF TIMES OMVS USERS WAS 0                 */\n  int            smf70x01; /* COUNT OF TIMES OMVS USERS WAS 1-2               */\n  int            smf70x02; /* COUNT OF TIMES OMVS USERS WAS 3-4               */\n  int            smf70x03; /* COUNT OF TIMES OMVS USERS WAS 5-6               */\n  int            smf70x04; /* COUNT OF TIMES OMVS USERS WAS 7-8               */\n  int            smf70x05; /* COUNT OF TIMES OMVS USERS WAS 9-10              */\n  int            smf70x06; /* COUNT OF TIMES OMVS USERS WAS 11-15             */\n  int            smf70x07; /* COUNT OF TIMES OMVS USERS WAS 16-20             */\n  int            smf70x08; /* COUNT OF TIMES OMVS USERS WAS 21-25             */\n  int            smf70x09; /* COUNT OF TIMES OMVS USERS WAS 26-30             */\n  int            smf70x10; /* COUNT OF TIMES OMVS USERS WAS 31-35             */\n  int            smf70x11; /* COUNT OF TIMES OMVS USERS WAS 35+               */\n  int            smf70q00; /* Count of times In Ready was <= N while N is     */\n  int            smf70q01; /* Count of times In Ready was N+1            @L2A */\n  int            smf70q02; /* Count of times In Ready was N+2            @L2A */\n  int            smf70q03; /* Count of times In Ready was N+3            @L2A */\n  int            smf70q04; /* Count of times In Ready was N+4 or N+5     @L2A */\n  int            smf70q05; /* Count of times In Ready was N+6 to N+10    @L2A */\n  int            smf70q06; /* Count of times In Ready was N+11 to N+15   @L2A */\n  int            smf70q07; /* Count of times In Ready was N+16 to N+20   @L2A */\n  int            smf70q08; /* Count of times In Ready was N+21 to N+30   @L2A */\n  int            smf70q09; /* Count of times In Ready was N+31 to N+40   @L2A */\n  int            smf70q10; /* Count of times In Ready was N+41 to N+60   @L2A */\n  int            smf70q11; /* Count of times In Ready was N+61 to N+80   @L2A */\n  int            smf70q12; /* Count of times In Ready was > N+80         @L2A */\n  int            smf70srm; /* Number of SRM samples for WEB calculation  @41A */\n  int            smf70cmn; /* General purpose processors minimum         @41A */\n  int            smf70cmm; /* General purpose processors maximum         @41A */\n  int            smf70ctt; /* General purpose processors total           @41A */\n  int            smf70dmn; /* AAP processors minimum                     @41A */\n  int            smf70dmm; /* AAP processors maximum                     @41A */\n  int            smf70dtt; /* AAP processors total                       @41A */\n  int            smf70emn; /* IIP processors minimum                     @41A */\n  int            smf70emm; /* IIP processors maximum                     @41A */\n  int            smf70ett; /* IIP processors total                       @41A */\n  int            smf70u00; /* Count of times the number of work units         */\n  int            smf70u01; /* Count of times the number of work units         */\n  int            smf70u02; /* Count of times the number of work units         */\n  int            smf70u03; /* Count of times the number of work units         */\n  int            smf70u04; /* Count of times the number of work units         */\n  int            smf70u05; /* Count of times the number of work units         */\n  int            smf70u06; /* Count of times the number of work units         */\n  int            smf70u07; /* Count of times the number of work units         */\n  int            smf70u08; /* Count of times the number of work units         */\n  int            smf70u09; /* Count of times the number of work units         */\n  int            smf70u10; /* Count of times the number of work units         */\n  int            smf70u11; /* Count of times the number of work units         */\n  int            smf70u12; /* Count of times the number of work units         */\n  int            smf70u13; /* Count of times the number of work units         */\n  int            smf70u14; /* Count of times the number of work units         */\n  int            smf70u15; /* Count of times the number of work units         */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF70BCT": {"ttr": 8571, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70bct \u00e4\n  struct \u00e4\n    unsigned char  _smf70lpm\u00c48\u00dc; /* Logical Partition name                          */\n    unsigned char  _smf70lpn;    /* Logical Partition number                        */\n    unsigned char  _smf70pfg;    /* Partition flags                                 */\n    unsigned char  _smf70bdn\u00c42\u00dc; /* Number of logical CPUs assigned to this         */\n    unsigned char  _smf70bds\u00c44\u00dc; /* Start of data section block number              */\n    unsigned char  _smf70bda\u00c44\u00dc; /* Accumulated number of logical CPUs active for   */\n    unsigned char  _smf70spn\u00c48\u00dc; /* Name of the logical-partition cluster. Zeros    */\n    unsigned char  _smf70stn\u00c48\u00dc; /* Name of the operating-system instance. Zeros    */\n    unsigned char  _filler1\u00c44\u00dc;  /* Reserved                                   @I3A */\n    unsigned char  _smf70csf\u00c44\u00dc; /* Number of megabytes of central storage          */\n    unsigned char  _filler2\u00c44\u00dc;  /* Reserved                                   @I3A */\n    unsigned char  _smf70esf\u00c44\u00dc; /* Number of megabytes of expanded storage         */\n    unsigned char  _smf70msu\u00c44\u00dc; /* Defined capacity limit (in millions             */\n    unsigned char  _smf70pfl\u00c42\u00dc; /* Additional partition flags             @OA10346 */\n    unsigned char  _smf70upi;    /* User partition ID. Valid if bit 0          @33C */\n    unsigned char  _filler3;     /* Reserved                                   @01C */\n    unsigned char  _smf70gnm\u00c48\u00dc; /* Name of the capacity group this partition       */\n    unsigned char  _smf70gmu\u00c44\u00dc; /* Group maximum licensing units.                  */\n    \u00fc smf70bpc;\n  \u00fc;\n\n#define smf70lpm smf70bpc._smf70lpm\n#define smf70lpn smf70bpc._smf70lpn\n#define smf70pfg smf70bpc._smf70pfg\n#define smf70bdn smf70bpc._smf70bdn\n#define smf70bds smf70bpc._smf70bds\n#define smf70bda smf70bpc._smf70bda\n#define smf70spn smf70bpc._smf70spn\n#define smf70stn smf70bpc._smf70stn\n#define smf70csf smf70bpc._smf70csf\n#define smf70esf smf70bpc._smf70esf\n#define smf70msu smf70bpc._smf70msu\n#define smf70pfl smf70bpc._smf70pfl\n#define smf70upi smf70bpc._smf70upi\n#define smf70gnm smf70bpc._smf70gnm\n#define smf70gmu smf70bpc._smf70gmu\n\n/* Values for field \"smf70pfg\" */\n#define smf70pdv 0x80   /* Partition deactivated during interval           */\n#define smf70nvc 0x40   /* Number of logical procrs has changed            */\n#define smf70ndc 0x20   /* Number of dedicated procrs has changed     @H1A */\n#define smf70nsc 0x10   /* Number of shared procrs has changed        @H1A */\n#define smf70wlm 0x08   /* WLM LPAR Management is active for this          */\n#define smf70wtf 0x04   /* Wait Time field is defined             @WA46477 */\n#define smf70msc 0x02   /* Defined capacity limit has been changed    @K2C */\n#define smf70msf 0x01   /* No longer used                             @L4C */\n\n/* Values for field \"smf70pfl\" */\n#define smf70uvf 0x8000 /* Content of SMF70UPI is valid           @OA10346 */\n#define smf70grp 0x4000 /* Group flag. This partition is member            */\n#define smf70pwf 0x2000 /* Polarization flag. This partition is            */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF70BPD": {"ttr": 8243, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70bpd \u00e4\n  unsigned char  smf70pdt\u00c48\u00dc; /* Logical processor total dispatch time            */\n  unsigned char  smf70vpa\u00c42\u00dc; /* Logical processor address                        */\n  unsigned char  smf70bps\u00c42\u00dc; /* Processor relative share                         */\n  unsigned char  smf70vpf;    /* Logical processor flags                          */\n  unsigned char  smf70pof;    /* Polarization flags                      @OA21140 */\n  unsigned char  smf70cix\u00c42\u00dc; /* Index to the CPU-identification name section     */\n  unsigned char  smf70edt\u00c48\u00dc; /* Logical processor effective dispatch time        */\n  unsigned char  smf70acs\u00c44\u00dc; /* Accumulated processor actual share      @WA46477 */\n  unsigned char  smf70mis\u00c42\u00dc; /* Processor minimum share                     @I3A */\n  unsigned char  smf70mas\u00c42\u00dc; /* Processor maximum share                     @I3A */\n  unsigned char  smf70nsi\u00c44\u00dc; /* Number of Diagnose samples within the            */\n  unsigned char  smf70nsa\u00c44\u00dc; /* Number of Diagnose samples within the            */\n  unsigned char  smf70ont\u00c48\u00dc; /* Logical processor online time               @I3A */\n  unsigned char  smf70wst\u00c48\u00dc; /* Logical processor wait state time           @I3A */\n  unsigned char  smf70pma\u00c44\u00dc; /* Average pricing management adjustment weight     */\n  unsigned char  smf70nsw\u00c44\u00dc; /* Number of Diagnose samples where WLM             */\n  unsigned char  smf70pow\u00c44\u00dc; /* Weight for the logical CPU when HiperDispatch    */\n  int            smf70nca;    /* Number of Diagnose samples where capping         */\n  unsigned char  _filler1\u00c48\u00dc; /* Reserved                                    @34C */\n  \u00fc;\n\n/* Values for field \"smf70vpf\" */\n#define smf70wsa 0x80 /* Wait Completion state enabled                    */\n#define smf70wsc 0x40 /* Wait Completion state changed during interval    */\n#define smf70rsc 0x20 /* Relative share changed during interval           */\n#define smf70cap 0x10 /* Partition Capping Flag.  Capped=yes in           */\n#define smf70cpc 0x08 /* Partition Capping option changed during          */\n#define smf70lpo 0x04 /* Logical processor varied online during           */\n\n/* Values for field \"smf70pof\" */\n#define smf70poi 0xC0 /* Polarization indicator (2 bits)         @OA21140 */\n#define smf70poc 0x20 /* Polarization indication changed during  @OA21140 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF70CIS": {"ttr": 8395, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70cis \u00e4\n  unsigned char  smf70cin\u00c416\u00dc; /* CPU-identification name                     @I1A */\n  unsigned char  smf70ctn\u00c42\u00dc;  /* Number of physical CPUs of this type             */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                                @OA13499 */\n  int            smf70can;     /* Accumulated number of physical CPUs.             */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF70CPU": {"ttr": 7895, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70cpu \u00e4\n  unsigned char  smf70wat\u00c48\u00dc; /* CPU wait time, where bit 51 = 1 microsecond     */\n  unsigned char  smf70cid\u00c42\u00dc; /* CPU identification                              */\n  unsigned char  smf70cnf;    /* Configuration activity indicator                */\n  unsigned char  smf70rv3;    /* Reserved                                        */\n  unsigned char  smf70ser\u00c43\u00dc; /* CPU serial number (6 hexadecimal digits)        */\n  unsigned char  smf70typ;    /* CPU type                                        */\n  unsigned char  smf70slh\u00c44\u00dc; /* Number of entries to the I/O SLIH               */\n  unsigned char  smf70tpi\u00c44\u00dc; /* Number of TPI with CC=1                         */\n  unsigned char  smf70vfs\u00c44\u00dc; /* Number of samples when the vector bit           */\n  unsigned char  smf70v;      /* Vector configuration                            */\n  unsigned char  smf70cpm\u00c43\u00dc; /* Reserved                                   @I2C */\n  unsigned char  smf70pat\u00c48\u00dc; /* CPU parked time, bit 51 = 1 microsecond    @11C */\n  double         smf70tcb;    /* Number of TCB dispatches for this CPU      @32A */\n  double         smf70srb;    /* Number of SRB dispatches for this CPU      @32A */\n  double         smf70nio;    /* Number of I/Os for this CPU                @32A */\n  double         smf70sig;    /* Total number of SIGPs for this CPU     @OA29820 */\n  double         smf70wtd;    /* Wait dispatch count for this CPU           @41A */\n  \u00fc;\n\n/* Values for field \"smf70cnf\" */\n#define smf70dci 8    /* Data available for a complete interval @WA27840 */\n#define smf70par 4    /* CPU was varied during Postprocessor             */\n#define smf70vac 2    /* Data invalid, CPU varied on or offline          */\n#define smf70sta 1    /* CPU is online at end of interval                */\n\n/* Values for field \"smf70v\" */\n#define smf70von 0x80 /* Vector was online                               */\n\n/* Values for field \"smf70wtd\" */\n#define smf70tcp 0    /* General purpose CP                         @K2A */\n#define smf70tif 1    /* zAAP (IFA)                                 @K2A */\n#define smf70tsu 2    /* zIIP                                   @OA13499 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF70CTL": {"ttr": 8129, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70ctl \u00e4\n  unsigned char  smf70mod\u00c42\u00dc;  /* CPU processor family                       @I2C */\n  unsigned char  smf70ver;     /* CPU version number                              */\n  unsigned char  smf70bnp;     /* Number of physical processors assigned for      */\n  unsigned char  smf70inb;     /* PR/SM indicator bits                            */\n  unsigned char  smf70stf;     /* Control section flags                      @I2C */\n  unsigned char  smf70gts\u00c42\u00dc;  /* PR/SM - Dispatch interval                       */\n  unsigned char  smf70mdl\u00c416\u00dc; /* EBCDIC CPC model identifier.                    */\n  unsigned char  smf70dsa\u00c42\u00dc;  /* Number of Diagnose samples                 @I3A */\n  unsigned char  smf70ifa\u00c42\u00dc;  /* zAAPs (IFAs) online at the end of the           */\n  unsigned char  smf70cpa\u00c44\u00dc;  /* Physical CPU adjustment factor (will be         */\n  unsigned char  smf70wla\u00c44\u00dc;  /* Millions of service units available to MVS      */\n  unsigned char  smf70lac\u00c44\u00dc;  /* Long-term average CPU service in millions       */\n  unsigned char  smf70hof\u00c48\u00dc;  /* Hypervisor date/time offset in STCK format      */\n  unsigned char  smf70hwm\u00c416\u00dc; /* EBCDIC CPC physical model identifier. Valid     */\n  unsigned char  smf70sup\u00c42\u00dc;  /* zIIPs online at end of the interval    @OA13499 */\n  unsigned char  smf70gjt\u00c48\u00dc;  /* Time in STCK format when the partition          */\n  unsigned char  smf70pom\u00c44\u00dc;  /* EBCDIC plant code that identifies the plant     */\n  unsigned char  smf70csc\u00c416\u00dc; /* EBCDIC sequence code of the configuration.      */\n  unsigned char  smf70hhf;     /* Additional flags                       @OA24074 */\n  unsigned char  smf70cr;      /* ZEP field 0                            @OA29310 */\n  int            smf70pmi;     /* Accumulated number of blocked dispatchable      */\n  int            smf70pmu;     /* Number of blocked dispatchable units being      */\n  int            smf70pmw;     /* Accumulated number of address spaces and        */\n  int            smf70pmp;     /* Maximum number of address spaces and enclaves   */\n  short int      smf70pmt;     /* 1/1000s of the CPU capacity for promote         */\n  short int      smf70pml;     /* Swapped-in starvation threshold. When an        */\n  unsigned char  smf70mpc\u00c416\u00dc; /* When non-zero, EBCDIC model permanent           */\n  unsigned char  smf70mtc\u00c416\u00dc; /* When non-zero, EBCDIC model temporary           */\n  int            smf70mcr;     /* Model capacity rating. When non-zero,           */\n  int            smf70mpr;     /* Model permanent capacity rating. When           */\n  int            smf70mtr;     /* Model temporary capacity rating. When           */\n  int            smf70zep;     /* ZEP field 1                            @OA25078 */\n  unsigned char  smf70zer\u00c48\u00dc;  /* ZEP field 2                            @OA25078 */\n  unsigned char  smf70zee\u00c48\u00dc;  /* ZEP field 3                            @OA25078 */\n  unsigned char  smf70zec\u00c48\u00dc;  /* ZEP field 4                            @OA25078 */\n  int            smf70nrm;     /* Normalization factor for zIIP. Multiply         */\n  int            smf70gau;     /* Long-term average of CPU service in millions    */\n  unsigned char  smf70zei\u00c48\u00dc;  /* ZEP field 5                            @OA29310 */\n  int            smf70ncr;     /* Nominal model-capacity rating.                  */\n  int            smf70npr;     /* Nominal permanent model-capacity rating.        */\n  int            smf70ntr;     /* Nominal temporary model-capacity rating.        */\n  unsigned char  smf70cai;     /* Capacity-adjustment indication. When zero, the  */\n  unsigned char  smf70ccr;     /* Capacity-change reason.                         */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                               @OA29530 */\n  \u00fc;\n\n/* Values for field \"smf70inb\" */\n#define smf70dif 0x80 /* PR/SM - Diagnose X'204' failure                 */\n#define smf70npc 0x40 /* PR/SM - Number of phys procrs has changed       */\n#define smf70tsc 0x20 /* PR/SM - Dispatch interval value changed         */\n#define smf70phy 0x10 /* PR/SM - An additional partition is presented    */\n#define smf70dge 0x08 /* PR/SM - Diagnose X'204' extended data is        */\n\n/* Values for field \"smf70stf\" */\n#define smf70sts 0x80 /* Store-system-information facility          @I2A */\n#define smf70adc 0x40 /* Physical CPU adjustment factor changed @WA46477 */\n#define smf70wuc 0x20 /* Service units available to MVS image            */\n#define smf70rcu 0x10 /* SMF70LAC is provided for systems running        */\n#define smf70hwv 0x08 /* SMF70MDL is the model-capacity identifier       */\n#define smf70ptc 0x04 /* CP promote slices (OPT parameter BLWLTRPCT)     */\n#define smf70plc 0x02 /* Swapped-in starvation threshold                 */\n#define smf70gav 0x01 /* SMF70GAU is valid                          @34A */\n\n/* Values for field \"smf70hhf\" */\n#define smf70hhs 0x80 /* HiperDispatch supported                @OA24074 */\n#define smf70hha 0x40 /* HiperDispatch is active                @OA24074 */\n#define smf70hhc 0x20 /* HiperDispatch status changed during             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF70HDR": {"ttr": 7899, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70hdr \u00e4\n  union \u00e4\n    unsigned char  _smf70hdc\u00c436\u00dc; /* COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 */\n    struct \u00e4\n      unsigned char  _smf70len\u00c42\u00dc; /* RECORD LENGTH                     */\n      unsigned char  _smf70seg\u00c42\u00dc; /* SEGMENT DESCRIPTOR                */\n      unsigned char  _smf70flg;    /* HEADER FLAG BYTE                  */\n      unsigned char  _smf70rty;    /* RECORD TYPE                       */\n      unsigned char  _smf70tme\u00c44\u00dc; /* TOD RECORD WRITTEN                */\n      unsigned char  _smf70dte\u00c44\u00dc; /* DATE RECORD WRITTEN               */\n      unsigned char  _smf70sid\u00c44\u00dc; /* SYSTEM ID FROM INSTALLATION       */\n      unsigned char  _smf70ssi\u00c44\u00dc; /* SUBSYSTEM ID (RMF)                */\n      unsigned char  _smf70sty\u00c42\u00dc; /* SUBTYPE                           */\n      unsigned char  _smf70trn\u00c42\u00dc; /* NUMBER OF TRIPLETS IN THIS RECORD */\n      unsigned char  _filler1\u00c42\u00dc;  /* RESERVED                          */\n      unsigned char  _smf70prs\u00c44\u00dc; /* OFFSET TO RMF PRODUCT SECTION     */\n      unsigned char  _smf70prl\u00c42\u00dc; /* LENGTH OF RMF PRODUCT SECTION     */\n      unsigned char  _smf70prn\u00c42\u00dc; /* NUMBER OF RMF PRODUCT SECTIONS    */\n      \u00fc _smf70hdr_struct1;\n    \u00fc _smf70hdr_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _smf70ccs\u00c44\u00dc; /* Offset to CPU Control section           */\n      unsigned char  _smf70ccl\u00c42\u00dc; /* Length of CPU Control section           */\n      unsigned char  _smf70ccn\u00c42\u00dc; /* Number of CPU Control sections          */\n      unsigned char  _smf70cps\u00c44\u00dc; /* Offset to CPU Data section              */\n      unsigned char  _smf70cpl\u00c42\u00dc; /* Length of CPU Data section              */\n      unsigned char  _smf70cpn\u00c42\u00dc; /* Number of CPU Data sections             */\n      unsigned char  _smf70ass\u00c44\u00dc; /* Offset to ASID Data section             */\n      unsigned char  _smf70asl\u00c42\u00dc; /* Length of ASID Data section             */\n      unsigned char  _smf70asn\u00c42\u00dc; /* Number of ASID Data sections            */\n      unsigned char  _smf70bcs\u00c44\u00dc; /* Offset to PR/SM Partition data sections */\n      unsigned char  _smf70bcl\u00c42\u00dc; /* Length of PR/SM Partition data section  */\n      unsigned char  _smf70bcn\u00c42\u00dc; /* Number of PR/SM Partition data sections */\n      unsigned char  _smf70bvs\u00c44\u00dc; /* Offset to PR/SM Processor data sections */\n      unsigned char  _smf70bvl\u00c42\u00dc; /* Length of PR/SM Processor data section  */\n      unsigned char  _smf70bvn\u00c42\u00dc; /* Number of PR/SM Processor data sections */\n      \u00fc smf70hdx;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _smf7023s\u00c44\u00dc; /* Offset to crypto coprocessor section       @K1C */\n        unsigned char  _smf7023l\u00c42\u00dc; /* Length of crypto coprocessor section       @K1C */\n        unsigned char  _smf7023n\u00c42\u00dc; /* Number of crypto coprocessor section       @K1C */\n        unsigned char  _smf7024s\u00c44\u00dc; /* Offset to crypto accelerator section       @K1C */\n        unsigned char  _smf7024l\u00c42\u00dc; /* Length of crypto accelerator section       @K1C */\n        unsigned char  _smf7024n\u00c42\u00dc; /* Number of crypto accelerator section       @K1C */\n        unsigned char  _smf702cs\u00c44\u00dc; /* Offset to ICSF section                     @K1C */\n        unsigned char  _smf702cl\u00c42\u00dc; /* Length of ICSF section                     @K1C */\n        unsigned char  _smf702cn\u00c42\u00dc; /* Number of ICSF section                     @K1C */\n        \u00fc smf702hx;\n      unsigned char  _filler2\u00c416\u00dc;\n      \u00fc _smf70hdr_struct2;\n    \u00fc _smf70hdr_union2;\n  unsigned char  smf70cns\u00c44\u00dc; /* Offset to CPU-identification name section  @I1A */\n  unsigned char  smf70cnl\u00c42\u00dc; /* Length of CPU-identification name section  @I1A */\n  unsigned char  smf70cnn\u00c42\u00dc; /* Number of CPU-identification name sections @I1A */\n  \u00fc;\n\n#define smf70hdc _smf70hdr_union1._smf70hdc\n#define smf70len _smf70hdr_union1._smf70hdr_struct1._smf70len\n#define smf70seg _smf70hdr_union1._smf70hdr_struct1._smf70seg\n#define smf70flg _smf70hdr_union1._smf70hdr_struct1._smf70flg\n#define smf70rty _smf70hdr_union1._smf70hdr_struct1._smf70rty\n#define smf70tme _smf70hdr_union1._smf70hdr_struct1._smf70tme\n#define smf70dte _smf70hdr_union1._smf70hdr_struct1._smf70dte\n#define smf70sid _smf70hdr_union1._smf70hdr_struct1._smf70sid\n#define smf70ssi _smf70hdr_union1._smf70hdr_struct1._smf70ssi\n#define smf70sty _smf70hdr_union1._smf70hdr_struct1._smf70sty\n#define smf70trn _smf70hdr_union1._smf70hdr_struct1._smf70trn\n#define smf70prs _smf70hdr_union1._smf70hdr_struct1._smf70prs\n#define smf70prl _smf70hdr_union1._smf70hdr_struct1._smf70prl\n#define smf70prn _smf70hdr_union1._smf70hdr_struct1._smf70prn\n#define smf70ccs _smf70hdr_union2.smf70hdx._smf70ccs\n#define smf70ccl _smf70hdr_union2.smf70hdx._smf70ccl\n#define smf70ccn _smf70hdr_union2.smf70hdx._smf70ccn\n#define smf70cps _smf70hdr_union2.smf70hdx._smf70cps\n#define smf70cpl _smf70hdr_union2.smf70hdx._smf70cpl\n#define smf70cpn _smf70hdr_union2.smf70hdx._smf70cpn\n#define smf70ass _smf70hdr_union2.smf70hdx._smf70ass\n#define smf70asl _smf70hdr_union2.smf70hdx._smf70asl\n#define smf70asn _smf70hdr_union2.smf70hdx._smf70asn\n#define smf70bcs _smf70hdr_union2.smf70hdx._smf70bcs\n#define smf70bcl _smf70hdr_union2.smf70hdx._smf70bcl\n#define smf70bcn _smf70hdr_union2.smf70hdx._smf70bcn\n#define smf70bvs _smf70hdr_union2.smf70hdx._smf70bvs\n#define smf70bvl _smf70hdr_union2.smf70hdx._smf70bvl\n#define smf70bvn _smf70hdr_union2.smf70hdx._smf70bvn\n#define smf7023s _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7023s\n#define smf7023l _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7023l\n#define smf7023n _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7023n\n#define smf7024s _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7024s\n#define smf7024l _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7024l\n#define smf7024n _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7024n\n#define smf702cs _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf702cs\n#define smf702cl _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf702cl\n#define smf702cn _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf702cn\n\n/* Values for field \"smf70flg\" */\n#define smf70rrf 0x80 /* NEW RECORD FORMAT                              */\n#define smf70sut 0x40 /* SUBTYPES USED                             @R0A */\n#define smf70v4  0x10 /* MVS/ESA Version 4                         @A1A */\n#define smf70esa 0x08 /* MVS/ESA VERSION                           @W1A */\n#define smf70vxa 0x04 /* MVS/XA VERSION                            @R0A */\n#define smf70os  0x02 /* OPERATING SYSTEM IS OS/VS2                     */\n#define smf70bfy 0x01 /* System running in PR/SM mode              @J1C */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF70PRO": {"ttr": 8361, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf70pro \u00e4\n  unsigned char  smf70mfv\u00c42\u00dc; /* RMF VERSION NUMBER, WITH INTRODUCTION OF   @O2C */\n  unsigned char  smf70prd\u00c48\u00dc; /* PRODUCT NAME                                    */\n  unsigned char  smf70ist\u00c44\u00dc; /* TOD MONITOR INTERVAL START: 0HHMMSSF            */\n  unsigned char  smf70dat\u00c44\u00dc; /* DATE MONITOR INTERVAL START: 00YYDDDF           */\n  unsigned char  smf70int\u00c44\u00dc; /* DURATION OF MONITOR INTERVAL: MMSSTTTF          */\n  unsigned char  smf70mfl\u00c42\u00dc; /* RESERVED                                   @J1C */\n  unsigned char  smf70sam\u00c44\u00dc; /* NUMBER OF SAMPLES                               */\n  unsigned char  smf70rv2\u00c42\u00dc; /* RESERVED                                        */\n  unsigned char  smf70fla\u00c42\u00dc; /* FLAGS                                           */\n  unsigned char  smf70rls\u00c44\u00dc; /* RESERVED                                   @J1C */\n  unsigned char  smf70cyc\u00c44\u00dc; /* CYCLE IN PACKED DECIMAL 000TTTTF                */\n  unsigned char  smf70mvs\u00c48\u00dc; /* MVS software level (consists of an acronym @J1C */\n  unsigned char  smf70iml;    /* Indicates the type of processor complex    @J1C */\n  unsigned char  smf70prf;    /* PROCESSOR FLAGS                            @P2A */\n  unsigned char  smf70ptn;    /* PR/SM PARTITION NUMBER                     @Z1C */\n  unsigned char  smf70srl;    /* SMF record level                       @YA28449 */\n  unsigned char  smf70iet\u00c48\u00dc; /* Interval expiration time token             @B1A */\n  unsigned char  smf70lgo\u00c48\u00dc; /* Offset GMT to local time                   @C1A */\n  unsigned char  smf70rao\u00c44\u00dc; /* Offset to reassembly area relative to      @C2A */\n  unsigned char  smf70ral\u00c42\u00dc; /* Length of reassembly area. Length depends  @C2A */\n  unsigned char  smf70ran\u00c42\u00dc; /* Number of reassembly area. Only 0 or 1 are @C2A */\n  unsigned char  smf70oil\u00c42\u00dc; /* Original interval length                   @C2A */\n  unsigned char  smf70syn\u00c42\u00dc; /* SYNC value in seconds                      @C2A */\n  unsigned char  smf70gie\u00c48\u00dc; /* Projected gathering interval end           @C2A */\n  unsigned char  smf70xnm\u00c48\u00dc; /* Sysplex name                               @C1A */\n  unsigned char  smf70snm\u00c48\u00dc; /* System name for current system             @C1A */\n  \u00fc;\n\n/* Values for field \"smf70fla\" */\n#define smf70cnv 0x80 /* DATA CONVERT.FROM VER.2                         */\n#define smf70iss 0x40 /* INVALID SAMPLES TO BE SKIPPED              @Q1A */\n#define smf70m3r 0x20 /* Record was written by RMF Monitor III      @B1A */\n#define smf70ism 0x10 /* Interval was written under SMF control     @B1A */\n\n/* Values for field \"smf70prf\" */\n#define smf70qes 0x80 /* Equipped with Expanded Storage             @P2A */\n#define smf70cne 0x40 /* Equipped with ESCON Channel                @Z1A */\n#define smf70drc 0x20 /* ESCON Director in configuration            @Z1A */\n#define smf70eme 0x10 /* System in z/ARCH mode                      @I1A */\n#define smf70pri 0x08 /* At least one zAAP is currently installed   @22C */\n#define smf70prp 0x04 /* At least one zIIP is currently installed   @22C */\n#define smf70ped 0x02 /* Enhanced DAT architecture available        @21C */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF79HDR": {"ttr": 8441, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf79hdr \u00e4\n  union \u00e4\n    unsigned char  _smf79hdc\u00c436\u00dc; /* COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 */\n    struct \u00e4\n      unsigned char  _smf79len\u00c42\u00dc; /* RECORD LENGTH                     */\n      unsigned char  _smf79seg\u00c42\u00dc; /* SEGMENT DESCRIPTOR                */\n      unsigned char  _smf79flg;    /* HEADER FLAG BYTE                  */\n      unsigned char  _smf79rty;    /* RECORD TYPE                       */\n      unsigned char  _smf79tme\u00c44\u00dc; /* TOD RECORD WRITTEN                */\n      unsigned char  _smf79dte\u00c44\u00dc; /* DATE RECORD WRITTEN               */\n      unsigned char  _smf79sid\u00c44\u00dc; /* SYSTEM ID FROM INSTALLATION       */\n      unsigned char  _smf79ssi\u00c44\u00dc; /* SUBSYSTEM ID (RMF)                */\n      unsigned char  _smf79sty\u00c42\u00dc; /* SUBTYPE                           */\n      unsigned char  _smf79trn\u00c42\u00dc; /* NUMBER OF TRIPLETS IN THIS RECORD */\n      unsigned char  _filler1\u00c42\u00dc;  /* RESERVED                          */\n      unsigned char  _smf79prs\u00c44\u00dc; /* OFFSET TO RMF PRODUCT SECTION     */\n      unsigned char  _smf79prl\u00c42\u00dc; /* LENGTH OF RMF PRODUCT SECTION     */\n      unsigned char  _smf79prn\u00c42\u00dc; /* NUMBER OF RMF PRODUCT SECTIONS    */\n      \u00fc _smf79hdr_struct1;\n    \u00fc _smf79hdr_union1;\n  union \u00e4\n    struct \u00e4\n      int            _smf79fpo; /* Offset to IMS Long Lock Data Sct @F1A */\n      short int      _smf79fpl; /* Length of IMS Long Lock Data Sct @F1A */\n      short int      _smf79fpn; /* Number of IMS Long Lock Data Sct @F1A */\n      \u00fc smf79fhx;\n    struct \u00e4\n      int            _smf79mcs; /* -                OFFSET TO MONITOR II CONTROL SECTION */\n      short int      _smf79mcl; /* -                LENGTH OF MONITOR II CONTROL SECTION */\n      short int      _smf79mcn; /* -                NUMBER OF MONITOR II CONTROL SECTION */\n      \u00fc _smf79hdr_struct2;\n    \u00fc _smf79hdr_union2;\n  int            smf79ass; /* -                OFFSET TO DATA SECTION                */\n  short int      smf79asl; /* -                LENGTH OF DATA SECTION                */\n  short int      smf79asn; /* -                NUMBER OF DATA SECTION                */\n  int            smf79dcs; /* -                OFFSET TO DATA CONTROL SECTION        */\n  short int      smf79dcl; /* -                LENGTH OF DATA CONTROL SECTION        */\n  short int      smf79dcn; /* -                NUMBER OF DATA CONTROL SECTION        */\n  int            smf79qss; /* -                OFFSET TO I/O QUEUING GLBL.SECT. @P4A */\n  short int      smf79qsl; /* -                LENGTH OF I/O QUEUING GLBL.SECT. @P4A */\n  short int      smf79qsn; /* -                NUMBER OF I/O QUEUING GLBL.SECT. @P4A */\n  \u00fc;\n\n#define smf79hdc _smf79hdr_union1._smf79hdc\n#define smf79len _smf79hdr_union1._smf79hdr_struct1._smf79len\n#define smf79seg _smf79hdr_union1._smf79hdr_struct1._smf79seg\n#define smf79flg _smf79hdr_union1._smf79hdr_struct1._smf79flg\n#define smf79rty _smf79hdr_union1._smf79hdr_struct1._smf79rty\n#define smf79tme _smf79hdr_union1._smf79hdr_struct1._smf79tme\n#define smf79dte _smf79hdr_union1._smf79hdr_struct1._smf79dte\n#define smf79sid _smf79hdr_union1._smf79hdr_struct1._smf79sid\n#define smf79ssi _smf79hdr_union1._smf79hdr_struct1._smf79ssi\n#define smf79sty _smf79hdr_union1._smf79hdr_struct1._smf79sty\n#define smf79trn _smf79hdr_union1._smf79hdr_struct1._smf79trn\n#define smf79prs _smf79hdr_union1._smf79hdr_struct1._smf79prs\n#define smf79prl _smf79hdr_union1._smf79hdr_struct1._smf79prl\n#define smf79prn _smf79hdr_union1._smf79hdr_struct1._smf79prn\n#define smf79fpo _smf79hdr_union2.smf79fhx._smf79fpo\n#define smf79fpl _smf79hdr_union2.smf79fhx._smf79fpl\n#define smf79fpn _smf79hdr_union2.smf79fhx._smf79fpn\n#define smf79mcs _smf79hdr_union2._smf79hdr_struct2._smf79mcs\n#define smf79mcl _smf79hdr_union2._smf79hdr_struct2._smf79mcl\n#define smf79mcn _smf79hdr_union2._smf79hdr_struct2._smf79mcn\n\n/* Values for field \"smf79flg\" */\n#define smf79rrf 0x80 /* NEW RECORD FORMAT                              */\n#define smf79sut 0x40 /* SUBTYPES USED                             @R0A */\n#define smf79v4  0x10 /* MVS/ESA Version 4                         @A1A */\n#define smf79esa 0x08 /* MVS/ESA VERSION                           @W1A */\n#define smf79vxa 0x04 /* MVS/XA VERSION                            @R0A */\n#define smf79os  0x02 /* OPERATING SYSTEM IS OS/VS2                     */\n#define smf79bfy 0x01 /* System running in PR/SM mode              @J1C */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF79PRO": {"ttr": 8605, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf79pro \u00e4\n  unsigned char  smf79mfv\u00c42\u00dc; /* RMF VERSION NUMBER, WITH INTRODUCTION OF   @O2C */\n  unsigned char  smf79prd\u00c48\u00dc; /* PRODUCT NAME                                    */\n  unsigned char  smf79ist\u00c44\u00dc; /* TOD MONITOR INTERVAL START: 0HHMMSSF            */\n  unsigned char  smf79dat\u00c44\u00dc; /* DATE MONITOR INTERVAL START: 00YYDDDF           */\n  unsigned char  smf79int\u00c44\u00dc; /* DURATION OF MONITOR INTERVAL: MMSSTTTF          */\n  unsigned char  smf79mfl\u00c42\u00dc; /* RESERVED                                   @J1C */\n  unsigned char  smf79sam\u00c44\u00dc; /* NUMBER OF SAMPLES                               */\n  unsigned char  smf79rv2\u00c42\u00dc; /* RESERVED                                        */\n  unsigned char  smf79fla\u00c42\u00dc; /* FLAGS                                           */\n  unsigned char  smf79rls\u00c44\u00dc; /* RESERVED                                   @J1C */\n  unsigned char  smf79cyc\u00c44\u00dc; /* CYCLE IN PACKED DECIMAL 000TTTTF                */\n  unsigned char  smf79mvs\u00c48\u00dc; /* MVS software level (consists of an acronym @J1C */\n  unsigned char  smf79iml;    /* Indicates the type of processor complex    @J1C */\n  unsigned char  smf79prf;    /* PROCESSOR FLAGS                            @P2A */\n  unsigned char  smf79ptn;    /* PR/SM PARTITION NUMBER                     @Z1C */\n  unsigned char  smf79srl;    /* SMF record level                       @YA28449 */\n  unsigned char  smf79iet\u00c48\u00dc; /* Interval expiration time token             @B1A */\n  unsigned char  smf79lgo\u00c48\u00dc; /* Offset GMT to local time                   @C1A */\n  unsigned char  smf79rao\u00c44\u00dc; /* Offset to reassembly area relative to      @C2A */\n  unsigned char  smf79ral\u00c42\u00dc; /* Length of reassembly area. Length depends  @C2A */\n  unsigned char  smf79ran\u00c42\u00dc; /* Number of reassembly area. Only 0 or 1 are @C2A */\n  unsigned char  smf79oil\u00c42\u00dc; /* Original interval length                   @C2A */\n  unsigned char  smf79syn\u00c42\u00dc; /* SYNC value in seconds                      @C2A */\n  unsigned char  smf79gie\u00c48\u00dc; /* Projected gathering interval end           @C2A */\n  unsigned char  smf79xnm\u00c48\u00dc; /* Sysplex name                               @C1A */\n  unsigned char  smf79snm\u00c48\u00dc; /* System name for current system             @C1A */\n  \u00fc;\n\n/* Values for field \"smf79fla\" */\n#define smf79cnv 0x80 /* DATA CONVERT.FROM VER.2                         */\n#define smf79iss 0x40 /* INVALID SAMPLES TO BE SKIPPED              @Q1A */\n#define smf79m3r 0x20 /* Record was written by RMF Monitor III      @B1A */\n#define smf79ism 0x10 /* Interval was written under SMF control     @B1A */\n\n/* Values for field \"smf79prf\" */\n#define smf79qes 0x80 /* Equipped with Expanded Storage             @P2A */\n#define smf79cne 0x40 /* Equipped with ESCON Channel                @Z1A */\n#define smf79drc 0x20 /* ESCON Director in configuration            @Z1A */\n#define smf79eme 0x10 /* System in z/ARCH mode                      @I1A */\n#define smf79pri 0x08 /* zAAPs (IFAs) available                     @K2A */\n#define smf79prp 0x04 /* zIIPs available                        @OA13499 */\n#define smf79ped 0x02 /* Enhanced DAT architecture available    @OA12774 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FCL": {"ttr": 8433, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fcl \u00e4\n  unsigned char  smf92cto\u00c48\u00dc;  /* Open time - STCK format          */\n  unsigned char  smf92ctc\u00c48\u00dc;  /* Close time - STCK format         */\n  unsigned char  smf92cty;     /* File type as defined in BPXYFTYP */\n  unsigned char  smf92cfg;     /* record flag                      */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                         */\n  unsigned char  smf92ctk\u00c44\u00dc;  /* Open file token                  */\n  int            smf92cin;     /* Inode number                     */\n  int            smf92cdn;     /* Unique device number             */\n  int            smf92csr;     /* Reads                            */\n  int            smf92csw;     /* Writes                           */\n  int            smf92cdi;     /* Directory I/O blocks             */\n  int            smf92cir;     /* I/O blocks read                  */\n  int            smf92ciw;     /* I/O blocks written               */\n  unsigned char  smf92cbr\u00c48\u00dc;  /* Bytes read                       */\n  unsigned char  smf92cbw\u00c48\u00dc;  /* Bytes written                    */\n  unsigned char  smf92cpn\u00c464\u00dc; /* Pathname                         */\n  \u00fc;\n\n/* Values for field \"smf92cfg\" */\n#define smf92cnf     0x80 /* record generated by VNode interface service */\n#define smf92cns     0x40 /* Network or local socket 1 = network         */\n#define smf92ccs     0x20 /* Client or server socket 1 = server          */\n#define smf92cfc     0x10 /* File was cached                             */\n#define smf92cdr     0x08 /* File had Deny Read on it                    */\n#define smf92cdw     0x04 /* File had Deny Write on it                   */\n\n/* Values for field \"smf92cpn\" */\n#define smf92fcl_len 0x84\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FOP": {"ttr": 7945, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fop \u00e4\n  unsigned char  smf92oto\u00c48\u00dc; /* Open time - STCK format          */\n  unsigned char  smf92oty;    /* File Type as defined in BPXYFTYP */\n  unsigned char  smf92ofg;    /* record flag                      */\n  unsigned char  _filler1\u00c42\u00dc; /* Reserved                         */\n  unsigned char  smf92otk\u00c44\u00dc; /* Open file token (Matches close)  */\n  int            smf92oin;    /* Inode number                     */\n  int            smf92odn;    /* Unique device number             */\n  \u00fc;\n\n/* Values for field \"smf92ofg\" */\n#define smf92onf     0x80 /* record generated by VNode interface service */\n#define smf92ons     0x40 /* Network or local socket, 1 = network        */\n#define smf92ocs     0x20 /* Client or server socket 1 = client          */\n\n/* Values for field \"smf92odn\" */\n#define smf92fop_len 0x18\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FSM": {"ttr": 8225, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fsm \u00e4\n  unsigned char  smf92mtm\u00c48\u00dc;  /* Time of mount, STCK format                    */\n  int            smf92mpf;     /* Offset of path section                        */\n  int            smf92mft;     /* File system type from MntEntFSType field of   */\n  int            smf92mfm;     /* File system mode from MntEntFSMode field of   */\n  int            smf92mdn;     /* File system device number from MntEntFSDev    */\n  unsigned char  smf92mdd\u00c48\u00dc;  /* DDNAME specified on mount from MntEntFSDDName */\n  unsigned char  smf92mtn\u00c48\u00dc;  /* File system type name from MntEntFSTName      */\n  unsigned char  smf92mfn\u00c444\u00dc; /* File system name from MntEntFSName field of   */\n  int            smf92mbl;     /* File system block size                        */\n  unsigned char  smf92mst\u00c48\u00dc;  /* Total space in file system in block size      */\n  unsigned char  smf92msu\u00c48\u00dc;  /* Allocated space in file system in block size  */\n  unsigned char  smf92mfg;     /* Flag byte                                     */\n  unsigned char  smf92mf2;     /* Second Flag byte                              */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                                      */\n  \u00fc;\n\n/* Values for field \"smf92mfg\" */\n#define smf92mau     0x80 /* Mounted by Automounter             */\n#define smf92mas     0x40 /* Asynchronous mount 1 = Yes, 0 = No */\n\n/* Values for field \"smf92mf2\" */\n#define smf92mlu     0x80 /* Mounted localy                     */\n#define smf92mnu     0x40 /* Mounted remotely                   */\n#define smf92mdo     0x20 /* HFS Sysplex client                 */\n#define smf92msn     0x10 /* Filesystem owner                   */\n\n/* Values for field \"_filler1\" */\n#define smf92fsm_len 0x6C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FSP": {"ttr": 8255, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fsp \u00e4\n  short int      smf92ppl; /* Length of path name                         */\n  unsigned char  smf92ppn; /* Path name of directory where file system is */\n  \u00fc;\n\n/* Values for field \"smf92ppn\" */\n#define smf92fsp_len 0x02\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FSR": {"ttr": 8095, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fsr \u00e4\n  unsigned char  smf92rts\u00c48\u00dc;  /* Time of suspend, STCK format                  */\n  unsigned char  smf92rtr\u00c48\u00dc;  /* Time of resume, STCK format                   */\n  int            smf92rft;     /* File system type from MntEntFSType field of   */\n  int            smf92rfm;     /* File system mode from MntEntFSMode field of   */\n  int            smf92rdn;     /* File system device number from MntEntFSDev    */\n  unsigned char  smf92rdd\u00c48\u00dc;  /* DDNAME specified on mount from MntEntFSDDName */\n  unsigned char  smf92rtn\u00c48\u00dc;  /* File system type name from MntEntFSTName      */\n  unsigned char  smf92rfn\u00c444\u00dc; /* File system name from MntEntFSName field of   */\n  unsigned char  smf92rfg;     /* Flag btye                                     */\n  \u00fc;\n\n/* Values for field \"smf92rfg\" */\n#define smf92rlu     0x80 /* Mounted localy     */\n#define smf92rnu     0x40 /* Mounted remotely   */\n#define smf92rdo     0x20 /* HFS Sysplex client */\n#define smf92rsn     0x10 /* Filesystem owner   */\n#define smf92fsr_len 0x59\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FSU": {"ttr": 8543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fsu \u00e4\n  unsigned char  smf92utm\u00c48\u00dc;  /* Time of mount, STCK format                    */\n  unsigned char  smf92utu\u00c48\u00dc;  /* Time of unmount, STCK format                  */\n  int            smf92uft;     /* File system type from MntEntFSType field of   */\n  int            smf92ufm;     /* File system mode from MntEntFSMode field of   */\n  int            smf92udn;     /* File system device number from MntEntFSDev    */\n  unsigned char  smf92udd\u00c48\u00dc;  /* DDNAME specified on mount from MntEntFSDDName */\n  unsigned char  smf92utn\u00c48\u00dc;  /* File system type name from MntEntFSTName      */\n  unsigned char  smf92ufn\u00c444\u00dc; /* File system name from MntEntFSName field of   */\n  int            smf92ubl;     /* File system block size                        */\n  unsigned char  smf92ust\u00c48\u00dc;  /* Total space in file system in block size      */\n  unsigned char  smf92usu\u00c48\u00dc;  /* Allocated space in file system in block size  */\n  int            smf92usr;     /* Reads                                         */\n  int            smf92usw;     /* Writes                                        */\n  int            smf92udi;     /* Directory I/O blocks                          */\n  int            smf92uir;     /* I/O blocks read                               */\n  int            smf92uiw;     /* I/O blocks written                            */\n  unsigned char  smf92ubr\u00c48\u00dc;  /* Bytes read                                    */\n  unsigned char  smf92ubw\u00c48\u00dc;  /* Bytes written                                 */\n  unsigned char  smf92ufg;     /* Flag byte                                     */\n  unsigned char  smf92uf2;     /* Second flag byte                              */\n  unsigned char  _filler1\u00c42\u00dc;  /* Reserved                                      */\n  \u00fc;\n\n/* Values for field \"smf92ufg\" */\n#define smf92uau     0x80 /* Unmounted by Automounter */\n\n/* Values for field \"smf92uf2\" */\n#define smf92ulu     0x80 /* Mounted localy           */\n#define smf92unu     0x40 /* Mounted remotely         */\n#define smf92udo     0x20 /* HFS Sysplex client       */\n#define smf92usn     0x10 /* Filesystem owner         */\n\n/* Values for field \"_filler1\" */\n#define smf92fsu_len 0x94\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92FSV": {"ttr": 8295, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92fsv \u00e4\n  unsigned char  smf92vtv\u00c48\u00dc;  /* Time of move, STCK format                     */\n  unsigned char  smf92vtm\u00c48\u00dc;  /* Time of mount, STCK format                    */\n  int            smf92vft;     /* File system type from MntEntFSType field of   */\n  int            smf92vfm;     /* File system mode from MntEntFSMode field of   */\n  int            smf92vdn;     /* File system device number from MntEntFSDev    */\n  unsigned char  smf92vdd\u00c48\u00dc;  /* DDNAME specified on mount from MntEntFSDDName */\n  unsigned char  smf92vtn\u00c48\u00dc;  /* File system type name from MntEntFSTName      */\n  unsigned char  smf92vnm\u00c444\u00dc; /* File system name from MntEntFSName field of   */\n  int            smf92vbl;     /* File system block size                        */\n  unsigned char  smf92vst\u00c48\u00dc;  /* Total space in file system in block size      */\n  unsigned char  smf92vsu\u00c48\u00dc;  /* Allocated space in file system in block size  */\n  int            smf92vsr;     /* Reads                                         */\n  int            smf92vsw;     /* Writes                                        */\n  int            smf92vdi;     /* Directory I/O blocks                          */\n  int            smf92vir;     /* I/O blocks read                               */\n  int            smf92viw;     /* I/O blocks written                            */\n  unsigned char  smf92vbr\u00c48\u00dc;  /* Bytes read                                    */\n  unsigned char  smf92vbw\u00c48\u00dc;  /* Bytes written                                 */\n  unsigned char  smf92vfg;     /* Flag byte - reason for move                   */\n  unsigned char  smf92vof;     /* Flag byte - old status                        */\n  unsigned char  smf92vnf;     /* Flag byte - new status                        */\n  unsigned char  _filler1;     /* Reserved                                      */\n  \u00fc;\n\n/* Values for field \"smf92vfg\" */\n#define smf92vui     0x80 /* User-initiated     */\n#define smf92vri     0x40 /* Recovery           */\n\n/* Values for field \"smf92vof\" */\n#define smf92vol     0x80 /* Mounted localy     */\n#define smf92von     0x40 /* Mounted remotely   */\n#define smf92vod     0x20 /* HFS Sysplex client */\n#define smf92vos     0x10 /* Filesystem owner   */\n\n/* Values for field \"smf92vnf\" */\n#define smf92vnl     0x80 /* Mounted localy     */\n#define smf92vnn     0x40 /* Mounted remotely   */\n#define smf92vnd     0x20 /* HFS Sysplex client */\n#define smf92vns     0x10 /* Filesystem owner   */\n\n/* Values for field \"_filler1\" */\n#define smf92fsv_len 0x94\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92ID": {"ttr": 8209, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92id \u00e4\n  unsigned char  smf92jbn\u00c48\u00dc; /* JobName                    */\n  int            smf92rst;    /* Reader start time          */\n  unsigned char  smf92rsd\u00c44\u00dc; /* Reader start date          */\n  unsigned char  smf92stm\u00c48\u00dc; /* Step name                  */\n  unsigned char  smf92rgd\u00c48\u00dc; /* SAF group ID               */\n  unsigned char  smf92rud\u00c48\u00dc; /* SAF user ID                */\n  int            smf92uid;    /* OpenMVS real user ID       */\n  int            smf92gid;    /* OpenMVS real group ID      */\n  int            smf92pid;    /* OpenMVS process ID         */\n  int            smf92pgd;    /* OpenMVS process group ID   */\n  int            smf92ssd;    /* OpenMVS session ID         */\n  int            smf92api;    /* OpenMVS anchor process ID  */\n  int            smf92apg;    /* OpenMVS anchor proc grp ID */\n  int            smf92asg;    /* OpenMVS anchor session ID  */\n  \u00fc;\n\n/* Values for field \"smf92asg\" */\n#define smf92id_len 0x48\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92MMP": {"ttr": 8235, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92mmp \u00e4\n  unsigned char  smf92mto\u00c48\u00dc; /* time of mmap - STCK format                    */\n  int            smf92msz;    /* Number of bytes being memory mapped           */\n  int            smf92mtk;    /* mmap file token (matches token in munmap data */\n  int            smf92min;    /* file serial number                            */\n  int            smf92mmdn;   /* file unique device number                     */\n  \u00fc;\n\n/* Values for field \"smf92mmdn\" */\n#define smf92mmp_len 0x18\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92MUN": {"ttr": 8515, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92mun \u00e4\n  unsigned char  smf92muto\u00c48\u00dc; /* time of mmap - STCK format                  */\n  unsigned char  smf92mutc\u00c48\u00dc; /* time of munmap - STCK format                */\n  int            smf92musz;    /* number of bytes being memory mapped         */\n  int            smf92mutk;    /* mmap file token (matches token in mmap data */\n  int            smf92muin;    /* file serial number                          */\n  int            smf92mudn;    /* file unique device number                   */\n  int            smf92muir;    /* I/O blocks read                             */\n  int            smf92muiw;    /* I/O blocks written                          */\n  \u00fc;\n\n/* Values for field \"smf92muiw\" */\n#define smf92mun_len 0x28\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SMF92SSS": {"ttr": 8123, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct smf92sss \u00e4\n  short int      smf92typ;    /* Record subtype, 1 = File system mount, 2 = */\n  unsigned char  smf92rvn\u00c42\u00dc; /* Record version number                      */\n  unsigned char  smf92pnm\u00c48\u00dc; /* Product name - OpenMVS                     */\n  unsigned char  smf92osl\u00c48\u00dc; /* MVS product level                          */\n  \u00fc;\n\n/* Values for field \"smf92osl\" */\n#define smf92sss_len 0x14\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SM102": {"ttr": 8661, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct sm102 \u00e4\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _sm102len\u00c42\u00dc; /* SM102 TOTAL LENGTH */\n      unsigned char  _sm102sgd\u00c42\u00dc; /* ZZ BYTES           */\n      \u00fc sm102bke;\n    \u00fc qwsp;\n  unsigned char  sm102flg;    /* SYSTEM INDICATOR                   */\n  unsigned char  sm102rty;    /* RECORD TYPE X'66'                  */\n  unsigned char  sm102tme\u00c44\u00dc; /* TIME SMF MOVED RECORD              */\n  unsigned char  sm102dte\u00c44\u00dc; /* DATE SMF MOVED RECORD              */\n  unsigned char  sm102sid\u00c44\u00dc; /* SYSTEM ID (SID)                    */\n  unsigned char  sm102ssi\u00c44\u00dc; /* SUBSYSTEM ID                       */\n  unsigned char  sm102stf;    /* RESERVED                           */\n  unsigned char  sm102ri;     /* RESERVED                           */\n  struct \u00e4\n    unsigned char  _sm102buf\u00c44\u00dc; /* TEMPORARY POINTER TO BUFFER AREA */\n    \u00fc sm102seq;\n  unsigned char  sm102end;    /* START OF THE SELF DEFINING SECTION */\n  \u00fc;\n\n#define sm102len qwsp.sm102bke._sm102len\n#define sm102sgd qwsp.sm102bke._sm102sgd\n#define sm102buf sm102seq._sm102buf\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SRMENF1": {"ttr": 7963, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct srmenf1 \u00e4\n  unsigned char  srme1; /* Byte 1 */\n  unsigned char  srme2; /* Byte 2 */\n  unsigned char  srme3; /* Byte 3 */\n  unsigned char  srme4; /* Byte 4 */\n  \u00fc;\n\n/* Values for field \"srme4\" */\n#define srmenf11 0x80000000 /* MODIFY WLM, MODE=COMPAT command */\n#define srmenf12 0x40000000 /* MODIFY WLM, MODE=COMPAT command */\n#define srmenf13 0x20000000 /* MODIFY WLM, MODE=COMPAT command */\n#define srmenf14 0x10000000 /* MODIFY WLM, MODE=GOAL command   */\n#define srmenf15 0x8000000  /* MODIFY WLM, MODE=GOAL command   */\n#define srmenf16 0x4000000  /* MODIFY WLM, MODE=GOAL command   */\n#define srmenf21 0x800000   /* SET IPS command issued          */\n#define srmenf22 0x400000   /* SET IPS command completed       */\n#define srmenf23 0x200000   /* SET IPS command failed          */\n#define srmenf24 0x100000   /* SET ICS command issued          */\n#define srmenf25 0x80000    /* SET ICS command completed       */\n#define srmenf26 0x40000    /* SET ICS command failed          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SSIB": {"ttr": 8717, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct ssib \u00e4\n  unsigned char  ssibid\u00c44\u00dc;    /* CONTROL BLOCK IDENTIFIER              */\n  short int      ssiblen;      /* SSIB LENGTH                           */\n  int            ssibpjes : 1, /* THIS SSIB IS USED TO START THE        */\n                 ssibnsvc : 1, /* NO SVC INDICATOR             @G38RP2Q */\n                          : 6;\n  unsigned char  ssibssid;     /* SUBSYSTEM IDENTIFIER. SET    @YC01974 */\n  unsigned char  ssibssnm\u00c44\u00dc;  /* Subsystem name to which a        @P1C */\n  unsigned char  ssibjbid\u00c48\u00dc;  /* Job Identifier or Subsystem name @P1C */\n  unsigned char  ssibdest\u00c48\u00dc;  /* DEFAULT USERID FOR SYSOUT DESTINATION */\n  int            ssibrsv1;     /* RESERVED                              */\n  int            ssibsuse;     /* RESERVED FOR SUBSYSTEM USAGE          */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SSS2": {"ttr": 8505, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct sss2 \u00e4\n  short int      sss2len;        /* I.Length of Sysout extension         */\n  unsigned char  sss2ver;        /* I.SSOB version                       */\n  char           sss2reas;       /* O.Reason code associated with        */\n  unsigned char  sss2eye\u00c44\u00dc;     /* I.Eye catcher                        */\n  unsigned char  sss2appl\u00c48\u00dc;    /* I.For application use.  Either       */\n  unsigned char  sss2apl1\u00c420\u00dc;   /* I.For application use.               */\n  unsigned char  sss2type;       /* I.Type of call                       */\n  int            _filler1 : 24;  /* Reserved for future use and must     */\n  struct \u00e4\n    void          *_sss2ecbp; /* I.ECB address (see above) */\n    \u00fc sss2inpt;\n  unsigned char  sss2rba\u00c48\u00dc;     /* IO.Relative Byte Address of          */\n  unsigned char  sss2uflg;       /* IBM.User disposition flags           */\n  unsigned char  _filler2\u00c42\u00dc;    /* Reserved for future use and must     */\n  unsigned char  sss2sel1;       /* IS.Data set selection flags          */\n  unsigned char  sss2sel2;       /* IS.More data set selection flags     */\n  unsigned char  sss2sel3;       /* IS.More data set selection flags     */\n  unsigned char  sss2sel4;       /* IS.More data set selection flags     */\n  unsigned char  sss2sel5;       /* IS.More data set selection flags     */\n  unsigned char  _filler3\u00c42\u00dc;    /* Reserved for future use and must be  */\n  unsigned char  sss2msc1;       /* IS.Current data set misc. flags      */\n  unsigned char  _filler4\u00c43\u00dc;    /* Reserved for future use and must be  */\n  unsigned char  sss2jobn\u00c48\u00dc;    /* IS*.Jobname used for selection (if   */\n  unsigned char  sss2jbil\u00c48\u00dc;    /* IS.Low jobid used for selection      */\n  unsigned char  sss2jbih\u00c48\u00dc;    /* IS.High jobid used for selection     */\n  unsigned char  sss2crea\u00c48\u00dc;    /* IS*.Owning userid used for           */\n  unsigned char  sss2prmo\u00c44\u00dc\u00c48\u00dc; /* IS*.1 to 4 PRMODEs used for          */\n  unsigned char  sss2dest\u00c418\u00dc;   /* IS*.Destination value used for       */\n  unsigned char  _filler5\u00c418\u00dc;   /* Reserved for future use and must     */\n  unsigned char  sss2des2\u00c418\u00dc;   /* IBM.Destination value used for       */\n  unsigned char  sss2pgmn\u00c48\u00dc;    /* IS*.User writer name used for        */\n  unsigned char  sss2form\u00c48\u00dc\u00c48\u00dc; /* IS*.Form numbers used for selection  */\n  unsigned char  _filler6\u00c48\u00dc;    /* Reserved for future use and must     */\n  unsigned char  _filler7\u00c48\u00dc;    /* Reserved for future use and must     */\n  unsigned char  sss2clsl\u00c436\u00dc;   /* IS.Sysout class list used for        */\n  unsigned char  sss2clas;       /* IBM.New class if SSS2SETC is on.     */\n  unsigned char  _filler8\u00c47\u00dc;    /* Really reserved for future SYSOUT    */\n  int            sss2lmin;       /* IS.Minimum line count for data set   */\n  unsigned char  sss2lmax\u00c44\u00dc;    /* IS.Maximum line count for data set   */\n  int            sss2pmin;       /* IS.Minimum page count for data set   */\n  unsigned char  sss2pmax\u00c44\u00dc;    /* IS.Maximum page count for data set   */\n  unsigned char  sss2fcb\u00c44\u00dc;     /* IS.FCB image name used for           */\n  unsigned char  sss2ucs\u00c44\u00dc;     /* IS.UCS image name used for           */\n  unsigned char  sss2char\u00c44\u00dc\u00c44\u00dc; /* IS.Printer translate table           */\n  unsigned char  sss2mod\u00c44\u00dc;     /* IS.Modify image used for selection   */\n  unsigned char  sss2flsh\u00c44\u00dc;    /* IS.Flash cartridge ID for selection  */\n  void          *sss2sect;       /* I.Zero or an address of where the    */\n  unsigned char  sss2age\u00c44\u00dc;     /* IS.Minimum age of data sets to be    */\n  unsigned char  sss2vol\u00c44\u00dc\u00c46\u00dc;  /* IS.List of SPOOL volume serial       */\n  void          *sss2ctkn;       /* IS.Address of client token  @R05LOPI */\n  unsigned char  sss2odst\u00c48\u00dc;    /* IS*.Origin node name used   @OW29707 */\n  int            _filler9\u00c49\u00dc;    /* Reserved for future use and @OW29707 */\n  struct \u00e4\n    unsigned char  _sss2dsp1;     /* ID.Flags describing the disposition  */\n    unsigned char  _sss2dsp2;     /* ID.Flags describing the     @Z07LSAP */\n    unsigned char  _filler10\u00c42\u00dc;  /* Reserved for future use and @Z07LSAP */\n    \u00fc sss2disp;\n  unsigned char  sss2dcls;       /* ID.New class                         */\n  unsigned char  _filler11\u00c47\u00dc;   /* Really reserved for future use       */\n  unsigned char  sss2dfor\u00c48\u00dc;    /* ID.New forms                         */\n  unsigned char  sss2dpgm\u00c48\u00dc;    /* ID.New user writer name              */\n  unsigned char  sss2ddes\u00c418\u00dc;   /* ID.New destination.                  */\n  short int      sss2clft;       /* ID.Number of copies left to process  */\n  char           sss2dpri;       /* ID.New data set prioriry    @Z07LSAP */\n  unsigned char  _filler12\u00c43\u00dc;   /* Reserved for future use and @Z07LSAP */\n  int            _filler13\u00c411\u00dc;\n  unsigned char  sss2jest\u00c412\u00dc;   /* O.JES token associated with this     */\n  void          *sss2btok;       /* O.Address of a JES initialized       */\n  short int      sss2copy;       /* O.Total number of copies requested   */\n  short int      _filler14;      /* Reserved for future use and must be  */\n  char           sss2cpyg\u00c48\u00dc;    /* O.Copy groups                        */\n  unsigned char  sss2jobr\u00c48\u00dc;    /* O.Jobname of selected job            */\n  unsigned char  sss2jbir\u00c48\u00dc;    /* O.Job ID of selected job             */\n  unsigned char  sss2ojbi\u00c48\u00dc;    /* O.Original jobid of selected job.    */\n  unsigned char  sss2crer\u00c48\u00dc;    /* O.Owning userid of data set          */\n  unsigned char  sss2jdvt\u00c48\u00dc;    /* O.JCL Definition Vector Table        */\n  unsigned char  sss2prmr\u00c48\u00dc;    /* O.PRMODE of data set selected        */\n  unsigned char  sss2desr\u00c418\u00dc;   /* O.Destination of selected data set.  */\n  unsigned char  sss2pgmr\u00c48\u00dc;    /* O.Writer name of selected data set   */\n  unsigned char  sss2forr\u00c48\u00dc;    /* O.Form number of selected data set   */\n  unsigned char  sss2tjn\u00c48\u00dc;     /* O.APPC Transaction Program Jobname   */\n  unsigned char  sss2tjid\u00c48\u00dc;    /* O.APPC Transaction Program Job ID    */\n  unsigned char  sss2dsn\u00c444\u00dc;    /* O.Data set name of selected data     */\n  short int      _filler15;      /* Reserved for future use and must     */\n  int            sss2segm;       /* O.Segment id (zero if data set not   */\n  int            sss2wrtn;       /* O.SWB Processing Error - Return      */\n  int            sss2wrsn;       /* O.SWB Processing Error - Reason      */\n  unsigned char  sss2clar;       /* O.Sysout class of selected data set  */\n  unsigned char  _filler16\u00c47\u00dc;   /* Really reserved for future use and   */\n  short int      sss2mlrl;       /* O.Maximum logical record length      */\n  unsigned char  sss2dsid\u00c48\u00dc;    /* O.DSID for the selected data set     */\n  unsigned char  sss2ret1;       /* O.Returned flags                     */\n  unsigned char  sss2ret2;       /* O.Returned flags                     */\n  unsigned char  sss2ret3;       /* O.Returned flags                     */\n  unsigned char  sss2ret4;       /* O.Returned flags                     */\n  unsigned char  sss2ret5;       /* O.Queue where data set      @OW32461 */\n  unsigned char  sss2rfor;       /* Record format             @MG05491   */\n  int            sss2lnct;       /* O.Line count                         */\n  int            sss2pgct;       /* O.Page count                         */\n  int            sss2byct\u00c42\u00dc;    /* O.Byte count after blank truncation  */\n  int            sss2rcct;       /* O.Record count (JES3 only)           */\n  unsigned char  sss2prcd\u00c48\u00dc;    /* O.Procname for the step creating     */\n  unsigned char  sss2stpd\u00c48\u00dc;    /* O.Stepname for the step creating     */\n  unsigned char  sss2ddnd\u00c48\u00dc;    /* O.DDNAME for the data set creation   */\n  unsigned char  sss2swbt\u00c48\u00dc;    /* O.Token used for SJFREQ services.    */\n  void          *sss2swtu;       /* O.Address of the SWBTU block.  This  */\n  unsigned char  sss2priv\u00c48\u00dc;    /* IO.Copied from/to SAPPRIV if JES2,   */\n  unsigned char  sss2chr1\u00c44\u00dc;    /* O.Printer translate table 1          */\n  unsigned char  sss2chr2\u00c44\u00dc;    /* O.Printer translate table 2          */\n  unsigned char  sss2chr3\u00c44\u00dc;    /* O.Printer translate table 3          */\n  unsigned char  sss2chr4\u00c44\u00dc;    /* O.Printer translate table 4          */\n  unsigned char  sss2ognm\u00c426\u00dc;   /* O.JES2 output group name             */\n  unsigned char  _filler17\u00c42\u00dc;   /* Reserved for future use and must be  */\n  unsigned char  sss2rmod\u00c44\u00dc;    /* O.Printer copy modification          */\n  char           sss2modt;       /* O.Printer table reference character  */\n  unsigned char  sss2rfls\u00c44\u00dc;    /* O.Printer flash cartridge ID         */\n  char           sss2flsc;       /* O.Number of flash copies             */\n  char           sss2prio;       /* O.Data set priority                  */\n  char           sss2linc;       /* O.Lines/page (JES2 only)             */\n  unsigned char  sss2tod\u00c44\u00dc;     /* O.Date and time of data set          */\n  int            sss2cds;        /* O.Count of work units (JOEs/OSEs)    */\n  void          *sss2njed;       /* O.Address of NJE data set header.    */\n  unsigned char  sss2fcbr\u00c44\u00dc;    /* O.Forms Control Buf (FCB)   @OW32461 */\n  unsigned char  sss2ucsr\u00c44\u00dc;    /* O.Univ Character Set (UCS)  @OW32461 */\n  void          *sss2dstr;       /* O.Address of data set token @OW36019 */\n  int            _filler18\u00c49\u00dc;   /* Reserved for future use and @OW36019 */\n  unsigned char  sss2pnam\u00c420\u00dc;   /* O.Programmer name from the JOB       */\n  unsigned char  sss2room\u00c48\u00dc;    /* O.Job level room number              */\n  unsigned char  sss2notn\u00c48\u00dc;    /* O.Job notify node                    */\n  unsigned char  sss2notu\u00c48\u00dc;    /* O.Job notify userid                  */\n  void          *sss2acct;       /* O.Address of encoded accounting      */\n  unsigned char  sss2xeq\u00c48\u00dc;     /* O.Node where job executed            */\n  unsigned char  sss2org\u00c48\u00dc;     /* O.Node where job entered network     */\n  int            sss2time;       /* O.Time on input processor for the    */\n  unsigned char  sss2date\u00c44\u00dc;    /* O.Date on input processor for the    */\n  unsigned char  sss2sys\u00c48\u00dc;     /* O.System name of the MVS image       */\n  unsigned char  sss2mbr\u00c44\u00dc;     /* O.Member name of the JES2 image      */\n  void          *sss2njej;       /* O.Address of NJE job header.         */\n  unsigned char  sss2nact\u00c48\u00dc;    /* O.Net account (from /*NETACCT)       */\n  unsigned char  sss2usid\u00c48\u00dc;    /* O.JMR User Id               @Z040229 */\n  unsigned char  sss2mxrc\u00c43\u00dc;    /* Max return code             @Z07LSAP */\n  unsigned char  sss2lsab\u00c43\u00dc;    /* Last ABEND code             @Z07LSAP */\n  unsigned char  _filler19\u00c42\u00dc;   /* Reserved for future use and @Z07LSAP */\n  int            _filler20\u00c46\u00dc;   /* must be zero.             @Z07LSAP   */\n  \u00fc;\n\n#define sss2ecbp  sss2inpt._sss2ecbp\n#define sss2dsp1  sss2disp._sss2dsp1\n#define sss2dsp2  sss2disp._sss2dsp2\n\n/* Values for field \"sss2ver\" */\n#define sss2iver 0x01 /* Initial version number    @R05LOPI   */\n#define sss2vctp 0x02 /* Version supporting                   */\n#define sss2cver 0x02 /* Current version number    @R05LOPI   */\n\n/* Values for field \"sss2reas\" */\n#define sss2reni 0x04 /* SSS2JEST zero, but SSS2DSN not null  */\n#define sss2reip 0x08 /* SSS2SIPA and SSS2SIPN are mutually   */\n#define sss2ralo 0x0C /* Prior data set still allocated       */\n#define sss2rdup 0x10 /* SSS2SDUP on in SSS2SEL1 and wild     */\n#define sss2rjbi 0x14 /* SSS2JBIH < SSS2JBIL & SSS2SJBI on    */\n#define sss2rcre 0x18 /* SSS2CREA has error & SSS2SCRE on     */\n#define sss2rlen 0x1C /* SSS2LEN is less than SSS2SIZE        */\n#define sss2rtyp 0x20 /* SSS2TYPE is not valid                */\n#define sss2rdes 0x24 /* SSS2DEST has error & SSS2SDST on     */\n#define sss2rjnm 0x28 /* SSS2JOBN has error & SSS2SJBN on     */\n#define sss2rfrm 0x2C /* SSS2FORM has error & SSS2SFRM on     */\n#define sss2rpgm 0x30 /* SSS2PGMN has error & SSS2SPGM on     */\n#define sss2rprm 0x34 /* SSS2PRMO has error & SSS2SPRM on     */\n#define sss2rcls 0x38 /* SSS2CLSL has error & SSS2SCLS on     */\n#define sss2rfcb 0x3C /* SSS2FCB  has error & SSS2SFCB on     */\n#define sss2rucs 0x40 /* SSS2UCS  has error & SSS2SUCS on     */\n#define sss2rchr 0x44 /* SSS2CHAR has error & SSS2SCHR on     */\n#define sss2rmo  0x48 /* SSS2MOD  has error & SSS2SMOD on     */\n#define sss2rfl  0x4C /* SSS2FLSH has error & SSS2SFLS on     */\n#define sss2rlpm 0x50 /* SSS2LMIN or SSS2LMAX is negative     */\n#define sss2rlpg 0x54 /* SSS2LMIN > SSS2LMAX & SSS2SLIN on    */\n#define sss2rde2 0x58 /* SSS2DES2 has error & SSS2TYPE is     */\n#define sss2rvol 0x5C /* SSS2VOL  has error & SSS2SVOL on     */\n#define sss2reye 0x60 /* SSS2EYE does not have \"SSS2\"         */\n#define sss2rctk 0x64 /* SSS2CTKN bad & SSS2SCTK on  @R05LOPI */\n#define sss2rbro 0x68 /* SSS2SBRO on and SSS2TYPE is          */\n#define sss2recj 0x6C /* SSS2SCTK & SSS2SJBI are     @R05LOPI */\n#define sss2rods 0x70 /* SSS2ODST has error &        @OW29707 */\n#define sss2rgid 0x74 /* SSS2GRID has error &        @Z07LTCP */\n#define sss2rdcl 0xB8 /* SSS2DCLS has error                   */\n#define sss2rdfr 0xBC /* SSS2DFOR has error                   */\n#define sss2rdpg 0xC0 /* SSS2DPGM has error                   */\n#define sss2rdds 0xC4 /* SSS2DDES has error                   */\n#define sss2rdhr 0xC8 /* Both SSS2DHLD & SSS2DRLS             */\n#define sss2rron 0xCC /* SSS2SRON on, but attempt    @Z07LSAP */\n#define sss2rblk 0xEC /* Data Set is blocked output  @MG06558 */\n#define sss2renm 0xF0 /* No matching output            @R10AE */\n#define sss2rens 0xF4 /* Matching output not           @R10AE */\n\n/* Values for field \"sss2type\" */\n#define sss2puge 0x01 /* Request type of Put/Get              */\n#define sss2coun 0x02 /* Request type of Count.               */\n#define sss2bulk 0x03 /* Bulk modify request.                 */\n\n/* Values for field \"sss2uflg\" */\n#define sss2setc 0x80 /* Use SSS2CLAS as the new class        */\n#define sss2delc 0x40 /* Delete selected data set(s)          */\n#define sss2rout 0x20 /* Use SSS2DES2 as the new data set     */\n#define sss2rlse 0x10 /* Release selected data sets           */\n\n/* Values for field \"sss2sel1\" */\n#define sss2shld 0x80 /* Select \"HOLD/LEAVE\" output (JES2);   */\n#define sss2sxwh 0x40 /* Select \"hold for XWTR\".  In a        */\n#define sss2shol 0xC0 /* Select from the hold queue.          */\n#define sss2swtr 0x20 /* Select \"WRITE/KEEP\" output (JES2);   */\n#define sss2sawt 0xE0 /* Select from all the above.           */\n#define sss2scls 0x10 /* Use SSS2CLSL as the class            */\n#define sss2sdst 0x08 /* Use SSS2DEST as a filter             */\n#define sss2sjbn 0x04 /* Use SSS2JOBN as a filter             */\n#define sss2sdup 0x06 /* Use SSS2JOBN as a filter, but        */\n#define sss2sdu2 0x02 /* Give RC of SSS2DUPJ if duplicate     */\n#define sss2sjbi 0x01 /* Use SSS2JBIL and SSS2JBIH as         */\n\n/* Values for field \"sss2sel2\" */\n#define sss2spgm 0x80 /* Use SSS2PGMN as a filter             */\n#define sss2sgid 0x80 /* Use SSS2GRID as a filter  @Z07LTCP   */\n#define sss2sfrm 0x40 /* Use SSS2FORM as a filter             */\n#define sss2scre 0x20 /* Use SSS2CREA as a filter             */\n#define sss2sprm 0x10 /* Use SSS2PRMO as a filter             */\n#define sss2sipa 0x08 /* Only select output which has an      */\n#define sss2sipn 0x04 /* Only select output which has no      */\n#define sss2sfcb 0x02 /* Use SSS2FCB as a filter              */\n#define sss2sucs 0x01 /* Use SSS2UCS as a filter              */\n\n/* Values for field \"sss2sel3\" */\n#define sss2sstc 0x80 /* Include Started Tasks (STCs)         */\n#define sss2stsu 0x40 /* Include Time Sharing Users (TSUs)    */\n#define sss2sjob 0x20 /* Include batch jobs (JOBs)            */\n#define sss2sapc 0x10 /* Include APPC output                  */\n#define sss2styp 0xFF /* If none of these bits is on, then    */\n\n/* Values for field \"sss2sel4\" */\n#define sss2smod 0x80 /* Use SSS2MOD as a filter              */\n#define sss2sfls 0x40 /* Use SSS2FLSH as a filter             */\n#define sss2sage 0x20 /* Data sets selected must be at        */\n#define sss2slin 0x10 /* Use minimum and maximum line         */\n#define sss2spag 0x08 /* Use minimum and maximum page         */\n#define sss2spri 0x04 /* Select output based on priority      */\n#define sss2svol 0x02 /* Select output based on the volume    */\n#define sss2schr 0x01 /* Use Printer translation tables in    */\n\n/* Values for field \"sss2sel5\" */\n#define sss2scpn 0x80 /* Only select output which is not      */\n#define sss2sctk 0x40 /* Use SSS2CTKN as a filter  @R05LOPI   */\n#define sss2sbro 0x20 /* Application intent is to  @R05LOPI   */\n#define sss2sods 0x10 /* Use SSS2ODST as a filter  @OW29707   */\n#define sss2sron 0x08 /* Application intent is to  @Z07LSAP   */\n#define sss2sblk 0x04 /* Application wants blocked   @MG06558 */\n\n/* Values for field \"sss2msc1\" */\n#define sss2ctrl 0x80 /* On - Processing complete             */\n#define sss2fswb 0x60 /* Return token for SJFREQ calls in     */\n#define sss2fswt 0x20 /* Return address of SWBTUREQ buffer    */\n#define sss2njeh 0x10 /* Return address of NJE data set       */\n\n/* Values for field \"sss2dsp1\" */\n#define sss2dkpe 0x80 /* Keep the data set                    */\n#define sss2rhld 0x40 /* Keep the data set and make it        */\n#define sss2rnpr 0x20 /* Keep the data set and leave it       */\n#define sss2dhld 0x10 /* Hold the data set                    */\n#define sss2drls 0x08 /* Release the data set                 */\n#define sss2chkp 0x04 /* Use SSS2RBA to checkpoint the        */\n#define sss2dnwr 0x02 /* Set writer name to a null value      */\n#define sss2rnpt 0x01 /* Leave the data set        @OW36019   */\n\n/* Values for field \"sss2dsp2\" */\n#define sss2rpri 0x80 /* SSS2DPRI is set           @Z07LSAP   */\n#define sss2dnfo 0x40 /* Set forms code to the     @MG05491   */\n#define sss2remv 0x20 /* Ensure data set removed   @MG05936   */\n\n/* Values for field \"sss2wrtn\" */\n#define sss2wok  0x00 /* Processing successful                */\n#define sss2werr 0x04 /* Processing failed                    */\n\n/* Values for field \"sss2ret1\" */\n#define sss2gnva 0x80 /* An output group name has been        */\n#define sss2dscl 0x40 /* Line count, page count, byte         */\n#define sss2dsf  0x20 /* First data set in output group       */\n#define sss2dsc  0x30 /* Output group being continued         */\n#define sss2dsl  0x08 /* Last data set in output group        */\n#define sss2ip   0x04 /* An Internet Protocol (IP)            */\n#define sss2brst 0x02 /* BURST=YES specified                  */\n#define sss2optj 0x01 /* OPTCD=J specified                    */\n\n/* Values for field \"sss2ret2\" */\n#define sss2nchr 0x80 /* Selection using printer              */\n#define sss2nvol 0x40 /* Selecting output based on a          */\n#define sss2nnhd 0x20 /* Returning addresses of NJE           */\n#define sss2nmod 0x10 /* Selecting output based on Copy       */\n#define sss2npri 0x08 /* Selecting output in priority         */\n#define sss2nipa 0x04 /* IP Address selection not             */\n\n/* Values for field \"sss2ret3\" */\n#define sss2rstc 0x80 /* Data set created by a started        */\n#define sss2rtsu 0x40 /* Data set created by a time           */\n#define sss2rjob 0x20 /* Data set created by a batch job      */\n\n/* Values for field \"sss2ret4\" */\n#define sss2cpds 0x80 /* Data set has page mode data          */\n#define sss2spun 0x40 /* Data set was spun at close           */\n#define sss2dsh  0x20 /* All data sets in the current         */\n\n/* Values for field \"sss2ret5\" */\n#define sss2rhlv 0x80 /* Data set on \"HOLD/LEAVE\"  @OW32461   */\n#define sss2rxwh 0x40 /* Data set on  \"hold for    @OW32461   */\n#define sss2rhol 0xC0 /* Data set on one of the    @OW32461   */\n#define sss2rwtr 0x20 /* Data set on \"WRITE/KEEP\"  @OW32461   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "STRNODE": {"ttr": 8535, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_STRNODE\n#define INCLUDE_STRNODE\n#include \"mchain.hpp\"\n\n#define SLASH\t\t\t'/'\n#define POINT\t\t\t'.'\n#define BLANK\t\t\t' '\n#define NEWLINE\t\t'\u00d6n'\n#define UNDERSCORE '_'\n\nstatic const char * EXT_Tso = \"Tso\";\nstatic const char * EXT_Jes = \"Jes\";\nstatic const char * EXT_Cmd = \"Cmd\";\nstatic const char * EXT_Uss = \"Uss\";\nstatic const char * EXT_Dsn = \"Dsn\";\nstatic const char * EXT_Edi = \"Edi\";\nstatic const int\t\tINIT_BUFF_SIZE  = 1024*256;\n\ntypedef enum\n\t\u00e4\n\tStrNodeEntry,\n\tStrNode,\n\tStrFolderEntry,\n\tStrFolder,\n\tStrUnknown = -1\n\t\u00fc StrType;\n\ntypedef enum\n\t\u00e4\n\tStrKindTso  = 0,\n\tStrKindJes\t= 1,\n\tStrKindCmd  = 2,\n\tStrKindUss  = 3,\n\tStrKindDsn  = 4,\n\tStrKindEdi  = 5,\n\tStrKindUnknown = -1\n\t\u00fc StrKind;\n\nclass Str:public chainE\n\t\u00e4\n\tstatic int index;\n\tprivate:\n\t\tchar * path;\t\t//path name\n\t\tchar * member;  //member name\n\t\tchar * ext;     //extension\n\t\tchar * name;    //reference name\n\t\tchar * link;    //link desc\n\t\tchar * icon;    //icon\n\t\tchar * varname; //\n\t\tStrType type;   //type\n\t\tStrKind kind;   //kind of entry\n\t\tSORTEDmCHAIN * sub; //subdirs\n\t\tchar * create;\n\tprotected:\n\t\tbool   ok;\n\t\tstruct stat info;\n\tpublic:\n\t\tStr();\n\t\tStr(const char *);\n\t\tStr(const Str&);\n\t\tvirtual \u00dfStr();\n\n\t\tchar * getPath()\n\t\t\t\u00e4return path;\u00fc\n\t\tchar * getMember()\n\t\t\t\u00e4return member;\u00fc\n\t\tchar * getExt()\n\t\t\t\u00e4return ext;\u00fc\n\t\tchar * getName()\n\t\t\t\u00e4return name;\u00fc\n\t\tchar * getIcon()\n\t\t\t\u00e4return icon;\u00fc\n\t\tStrType getType()\n\t\t\t\u00e4return type;\u00fc\n\t\tStrKind getKind()\n\t\t\t\u00e4 return kind;\u00fc\n\t\tchar * getCreate()\n\t\t\t\u00e4return create;\u00fc\n\t\tchar * getVarName()\n\t\t\t\u00e4 return varname;\u00fc\n\t\tvoid  printTree(const char * =NULL);\n\tprotected:\n\t\tvoid init(const char * =NULL);\n\t\tchar * path2Name(const char *);\n\t\tchar * name2Path(const char *);\n\t\tvoid   setCreate();\n\t\tvoid   setVarName();\n\t\tint    readDir(const char *);\n\t\u00fc;\n\ntypedef struct \u00e4\n\tint         reserved_first;\n\tint         kind;\n\tchar        chainEid\u00c41024\u00dc;\n\tchar        create\u00c432\u00dc;\n\tint         reserved_last;\n\t\u00fc StrDataHead;\n\nclass StrData:public Str\n\t\u00e4\n\tprivate:\n\t\tFILE *        file;\n\t\tchar\t\t\t\t* buff;\n\t\tint           buffOffset;\n\t\tStrDataHead   head;\n\t\tint           offset;\n\t\tint           length;\n\t\tint           buffSize;\n\tpublic:\n\t\tStrData(const char *);\n\t\tvirtual \t\u00dfStrData();\n\t\tvirtual  StrDataHead * getHead()\n\t\t\t\u00e4 return &head;\u00fc\n\t\tvirtual int getFirst();\n\t\tvirtual\tint getLast();\n\t\tvirtual\tint getNext();\n\t\tvirtual\tint getPrev();\n\t\tvirtual int add(int,const char *p =NULL);\n\t\tvoid  addBuff(char *,int=0);\n\t\tvoid resetBuff();\n\t\tchar * getBuff()\u00e4 return buff;\u00fc\n\tint    getLength()\u00e4 return length;\u00fc\n\tint    print(int = -1);\n\tprotected:\n\t\tvoid\tinit();\n\t\tvoid  reallocBuff(int);\n\t\u00fc;\n\n/*\nclass StrNodeEntry:public Str\n\u00e4\nprivate:\nsize_t      iOffset;\nsize_t      oOffset;\nsize_t      length;\nchar * created;\nInputType\t\tiType;\nOutputType  oType;\npublic:\nStrNodeEntry();\nStrNodeEntry(const char *);\nStrNodeEntry(const StrNodeEntry&);\n\u00dfStrNodeEntry();\nint display();\nint read();\nint write();\nint open();\nint close();\n\u00fc;\n\n\nclass StrNode:public Str\n\u00e4\nprivate:\npublic:\nStrNode();\n\u00dfStrNode();\n\u00fc;\n\nclass StrFolderEntry:public Str\n\u00e4\nprivate:\npublic:\nStrFolderEntry();\n\u00dfStrFolderEntry();\n\u00fc;\n\nclass StrFolder:public:Str\n\u00e4\nprivate:\npublic:\nStrFolder();\n\u00dfStrFolder();\n\u00fc;\n\n*/\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STRSERV": {"ttr": 8759, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_STRSERVICE\n#define INCLUDE_STRSERVICE\n#define _XOPEN_SOURCE_EXTENDED 1\n#include <sys/socket.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <sys/wait.h>\n#include \"rexxvar.hpp\"\n#include \"ibmdebug.hpp\"\n#include \"iggcsi00.hpp\"\n#include \"subtask.hpp\"\n#include <sys/types.h>\n#include <sys/time.h>\n#include <sys/msg.h>\n#include <netinet/in.h>\n#include \"qfss70mu/symbp.hpp\"\n\ntypedef struct symbp SYMBP;\n\n\nclass StrData;\ntypedef StrData * reply;\nISIS_EXT_ASM typedef int BPXWDYN(const char *);\nISIS_EXT_ASM typedef int SDSF(void  *);\n\nISIS_EXT_ASM typedef int IKJTSOEV(int * resv,\n\t\t\t\t\t\t\t\t  int * rc,\n\t\t\t\t\t\t\t\t  int * abend,\n\t\t\t\t\t\t\t\t  int * reason,\n\t\t\t\t\t\t\t\t  int * cppl);\n\nISIS_EXT_ASM typedef int IKJEFTSI(int * ect,\n\t\t\t\t\t\t\t\t  int * resv,\n\t\t\t\t\t\t\t\t  char * token,\n\t\t\t\t\t\t\t\t  int * rc,\n\t\t\t\t\t\t\t\t  int * abend,\n\t\t\t\t\t\t\t\t  int * reason);\nISIS_EXT_ASM typedef int IKJEFTSR(int * flag,\n\t\t\t\t\t\t\t\t  char * cmd,\n\t\t\t\t\t\t\t\t  int * length,\n\t\t\t\t\t\t\t\t  int * rc,\n\t\t\t\t\t\t\t\t  int * abend,\n\t\t\t\t\t\t\t\t  int * reason,\n\t\t\t\t\t\t\t\t  int * program_parm,\n\t\t\t\t\t\t\t\t  char * cppl,\n\t\t\t\t\t\t\t\t  char * token);\nISIS_EXT_ASM typedef int IKJEFTST(int * ect,\n\t\t\t\t\t\t\t\t  int * resv,\n\t\t\t\t\t\t\t\t  char * token,\n\t\t\t\t\t\t\t\t  int * rc,\n\t\t\t\t\t\t\t\t  int * abend,\n\t\t\t\t\t\t\t\t  int * reson);\nextern \"C\"\n\u00e4\n\ttypedef int ASASYMBM(char *,int,char *,int *,char *,char *,int *);\n\u00fc;\n\nstruct sockaddr_un \u00e4\n\tunsigned char  sun_len;\n\tunsigned char  sun_family;\n\tchar  sun_path\u00c4108\u00dc;        /* pathname */\n\u00fc;\n\nclass tcpipClient\n\u00e4\nprotected:\n\tint socket;\n\tbool connected;\n\tshort port;\n\tsockaddr_in   sockaddr;\n\tsockaddr_un   sockaddrUnix;\n\tfd_set\t\t\t\treadSockets;\n\tfd_set\t\t\t\twriteSockets;\n\tfd_set\t\t\t  exceptionSockets;\npublic:\n\tstatic     timeval         timeout;\n\tstatic     int             connwait;\n\tstatic     char            URL\u00c4255\u00dc;\n\ttcpipClient(short );\n\tvirtual \u00dftcpipClient();\n\tint send(char *,size_t);\n\tint receive(char *,size_t);\nprivate:\n\tint  diag(char *);\n\n\u00fc;\n\nclass CmdService\n\u00e4\nprotected:\n\n\tchar       buff\u00c432768*8\u00dc;\n\tchar *     service;\n\tint        ok;\n\tint        imax;\n\tint        rc;\n\tint        abend;\n\tint        reason;\n\treply\t\t   print;\n\tstatic     BPXWDYN  * dyn;\n\tREXXVAR  * rexx;\n\t//int        printf(const char *, ...);\n\npublic:\n\tstatic bool debug;\n\tCmdService(char * s,reply p = NULL):service(s),print(p)\n\t\u00e4\n\t\t//debug = _isis_pf_mi_debug;\n\t\timax  = ok = rc = abend = reason = 0;\n\t\trexx  = new REXXVAR();\n\t\u00fc\n\tvirtual \u00dfCmdService()\n\t\u00e4\n\t\tif (rexx)\n\t\t\tdelete rexx;\n\t\trexx = NULL;\n\t\u00fc;\n\tvirtual int  cmd(char * ) = 0;\n\tvirtual void diag(const char *);\n\tvirtual int  backFromRexx();\n\u00fc;\nclass TsoCmdService: public CmdService\n\u00e4\nprivate:\n\n\tIKJEFTSI * tsi;\n\tIKJEFTSR * tsr;\n\tIKJEFTST * tst;\n\tIKJTSOEV * tso;\n\n\tint\t\t\t\t flag;\n\tint        etc;\n\tint        resv;\n\tint        length;\n\tint        program_parm;\n\tint        cpplTso;\n\tchar       cppl\u00c416\u00dc;\n\tchar       token\u00c416\u00dc;\npublic:\n\tTsoCmdService(reply=NULL);\n\t\u00dfTsoCmdService();\n\tint cmd(char *);\n\u00fc;\n\nclass UssCmdService:public CmdService\n\u00e4\nprivate:\n\tFILE * replyFile;\npublic:\n\tUssCmdService(reply=NULL);\n\t\u00dfUssCmdService();\n\tint cmd(char *);\n\tchar * next(char * = NULL);\n\u00fc;\n\nclass JesCmdService:public CmdService\n\u00e4\nprivate:\npublic:\n\tJesCmdService(reply=NULL);\n\t\u00dfJesCmdService();\n\tint cmd(char *);\n\n\u00fc;\n\n\nclass DsnCmdService:public CmdService\n\u00e4\nprivate:\n\tIGGCSI00 * csi;\n\tchar *     cwork;\n\tASASYMBM *   asasymbm;\n\tSYMBP symbp;\n\tCSIRetInfo   retinfo_st;\n\tCSISelFields selfields_st;\n\tCSIWorkData* csirwork_pst;\n\tCSIEntryData *p;\npublic:\n\tDsnCmdService(reply=NULL);\n\t\u00dfDsnCmdService();\n\tint cmd(char *,char * =NULL);\n\tint cmd(char * a)\n\t\u00e4\n\t\treturn(cmd(a,NULL));\n\t\u00fc\n\u00fc;\n\nclass OperCmdService:public CmdService , public tcpipClient\n\u00e4\nprivate:\npublic:\n\tOperCmdService(reply=NULL);\n\t\u00dfOperCmdService();\n\tint cmd(char *);\n\u00fc;\n\nclass SdsfCmdService: public CmdService\n\u00e4\nprivate:\n\tSDSF * sdsf;\n\tFILE * file;\n\tprogramArguments arg;\npublic:\n\tSdsfCmdService(reply=NULL);\n\t\u00dfSdsfCmdService();\n\tint cmd(char *);\n\u00fc;\n\nclass MxServerCmdService:public CmdService , public tcpipClient\n\u00e4\nprivate:\npublic:\n\tMxServerCmdService(reply=NULL);\n\t\u00dfMxServerCmdService();\n\tint cmd(char *);\n\u00fc;\n\n\nclass RexxServerCmdService:public CmdService, public tcpipClient\n\u00e4\nprivate:\npublic:\n\tRexxServerCmdService(reply=NULL);\n\t\u00dfRexxServerCmdService();\n\tint cmd(char *);\n\u00fc;\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SUBTASK": {"ttr": 8579, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/subtask.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_SUBTASK\n#define INCLUDE_SUBTASK\n#include \"merror.hpp\"\n#include \"mvsbase.hpp\"\n#include \"msgmgr.hpp\"\n\n#if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU) //szm\n#define\t\t__alignmem\n#define\t\t__local\n#endif\n\n#ifndef PSA_CONST\n#define PSA_CONST\nconst  unsigned PSATOLD = 0x21c;\nconst  unsigned PSAAOLD = 0x224;\nconst  unsigned TCBFSA  = 0x70/4;\nconst  unsigned TCBUSER = 0xA8;\nconst  unsigned tcbuser = 0xa8;\nconst  unsigned SAVEr1  = 0x18/4;\nstatic unsigned POSTcode = 0x40000000;\nstatic unsigned WAITcode = 0x80000000;\n#endif\n\nclass SUBTASK;\nclass JOBENV;\n\n\ntypedef void       (*SUBTASK_FUNCTION)(void*);\ntypedef void       * addressP;\ninline addressP getASCB()\u00e4return(*(addressP*)PSAAOLD);\u00fc\ninline addressP getTCB()\u00e4return (*(addressP *)PSATOLD);\u00fc\n\n\nenum SUBTASK_STATUS\n\u00e4\n    Reset,\n    Started,\n    WaitingForWork,\n    WaitingForMain,\n    Working,\n    Stopping\n\u00fc;\ntypedef struct PROGRAM_ARGUMENTS \u00e4\n  short  arg_l;\n  char   arg_v\u00c41024\u00dc;\n  \u00fc programArguments;\n\n__alignmem class SUBTASK: public mERROR\n\u00e4\nprivate:\n  char * dll;\nprotected:\n  MessageTEXT * messageText;\n  JOBENV *      jobEnv;\n  void * TCB;\n  unsigned ECB;\n  unsigned StopECB;\n  unsigned WorkECB;\n  unsigned MainECB;\n  unsigned SuspendECB;\n  unsigned *  ecblist\u00c42\u00dc;\n  __local void(* address)(void);\n  void (*subrun)();\n  int R15 ;\n  SUBTASK_FUNCTION functions\u00c44\u00dc;\n  void  * arg\u00c44\u00dc;\n  int subtask_rc;\n  int suspendflag;\n  SUBTASK_STATUS status;\n  char   name\u00c49\u00dc;\n  char   subtaskposted;\n  char   first_start;\n  int    timeout;\npublic:\n  friend void run();\n  SUBTASK();\n  SUBTASK(char *);\n  SUBTASK(addressP,SUBTASK_FUNCTION,char*);\n  SUBTASK(int,char * *,char *,char *);\n  virtual \u00dfSUBTASK();\n  virtual int    attach();\n  virtual int    detach();\n  virtual int    callAsync(int);\n  virtual int    callSync(int);\n  virtual int    waitForSubtask();\n  virtual int    waitForEndOfSubtask();\n  virtual void   start();\n  virtual void   stop();\n  virtual void   chap(int);\n  virtual void   exit(int);\n  virtual int    isTerminated()\u00e4 return (ECB&0x7fffffff);\u00fc\n  SUBTASK_STATUS askStatus()\u00e4return status;\u00fc\n  MessageTEXT * getMessageText()\u00e4return messageText;\u00fc\n  JOBENV      * getJobEnv()\u00e4return jobEnv;\u00fc\n  addressP      getParam()\u00e4return(addressP(argV));\u00fc\n  addressP      getTCB()\u00e4return(addressP(TCB));\u00fc\n  int           getTimeout()\u00e4return timeout;\u00fc\n  char *        getDllName()\u00e4 return dll;\u00fc\n  void          setDllName(char *d)\u00e4 dll = d;\u00fc\n  char * *  argV;\n  int       argC;\n\nstatic addressP GetTCB()\u00e4return (*(addressP *)PSATOLD);\u00fc\nstatic addressP GetASCB()\u00e4return(*(addressP*)PSAAOLD);\u00fc\n\nprotected:\n  int    checkR15(char *);\n  void   init(char *);\n  void   error(char *);\n\u00fc;\n\n__alignmem class DLL_SUBTASK\n\u00e4\nprivate:\npublic:\n  SUBTASK * subtask;\n  DLL_SUBTASK(int,char * *,char *,char * = \"SUBRUN \");\n  \u00dfDLL_SUBTASK();\n  void      start()\u00e4subtask->start();\u00fc\n  void      stop()\u00e4subtask->stop();\u00fc\n  int       detach()\u00e4return(subtask->detach());\u00fc\n  addressP  getTCB()\u00e4return(subtask->getTCB());\u00fc\n\u00fc;\n\n__alignmem class MAIN_SUBTASK:public SUBTASK\n\u00e4\nprivate:\nmvsSTRING startmvsSTRING;\n void * plist\u00c41\u00dc;\nprogramArguments   argument;\nprogramArguments * argumentP;\npublic:\n MAIN_SUBTASK();\n MAIN_SUBTASK(int,char * *,char *);\n MAIN_SUBTASK(programArguments *,char * );\n virtual int  attach();\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYMBP": {"ttr": 8403, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct symbp \u00e4\n  union \u00e4\n    void          *_symbppattern_;    /* Address of input pattern containing symbols */\n    void          *_symbppatternaddr; /* Same as SymbpPattern@                       */\n    \u00fc _symbp_union1;\n  int            symbppatternlength; /* Length of input pattern */\n  union \u00e4\n    void          *_symbptarget_;    /* Address of output target area. The target, */\n    void          *_symbptargetaddr; /* Same as SymbpTarget@                       */\n    \u00fc _symbp_union2;\n  union \u00e4\n    void          *_symbptargetlength_;    /* Address of input output fullword field */\n    void          *_symbptargetlengthaddr; /* Same as SymbpTargetLength              */\n    \u00fc _symbp_union3;\n  union \u00e4\n    void          *_symbpsymboltable_;    /* Address of symbol table mapped by SYMBT */\n    void          *_symbpsymboltableaddr; /* Same as SymbpSymbolTable                */\n    \u00fc _symbp_union4;\n  union \u00e4\n    void          *_symbptimestamp_;    /* Address of 8-character area containing the */\n    void          *_symbptimestampaddr; /* Same as SymbpTimeStamp@                    */\n    \u00fc _symbp_union5;\n  union \u00e4\n    int            _symbpreturncode_;    /* Address of fullword which is to contain the */\n    void          *_symbpreturncodeaddr; /* Same as SymbpReturnCode                     */\n    \u00fc _symbp_union6;\n  \u00fc;\n\n#define symbppattern_         _symbp_union1._symbppattern_\n#define symbppatternaddr      _symbp_union1._symbppatternaddr\n#define symbptarget_          _symbp_union2._symbptarget_\n#define symbptargetaddr       _symbp_union2._symbptargetaddr\n#define symbptargetlength_    _symbp_union3._symbptargetlength_\n#define symbptargetlengthaddr _symbp_union3._symbptargetlengthaddr\n#define symbpsymboltable_     _symbp_union4._symbpsymboltable_\n#define symbpsymboltableaddr  _symbp_union4._symbpsymboltableaddr\n#define symbptimestamp_       _symbp_union5._symbptimestamp_\n#define symbptimestampaddr    _symbp_union5._symbptimestampaddr\n#define symbpreturncode_      _symbp_union6._symbpreturncode_\n#define symbpreturncodeaddr   _symbp_union6._symbpreturncodeaddr\n\n/* Values for field \"symbpreturncodeaddr\" */\n#define symbp_len 0x1C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SYMBT": {"ttr": 8153, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct symbt \u00e4\n  union \u00e4\n    unsigned char  _symbtheader\u00c44\u00dc;\n    struct \u00e4\n      unsigned char  _symbtflags\u00c42\u00dc;\n      unsigned char  _filler1\u00c42\u00dc;\n      \u00fc _symbt_struct1;\n    struct \u00e4\n      unsigned char  _symbtflag0;           /* Byte 0 of SymbtFlags                      */\n      unsigned char  _symbtflag1;           /* Byte 1 of SymbtFlags                      */\n      short int      _symbtnumberofsymbols; /* Number of entries in symbol table. Can be */\n      \u00fc _symbt_struct2;\n    \u00fc _symbt_union1;\n  unsigned char  symbttableentries; /* Symbol table entries. One for each indicated */\n  \u00fc;\n\n#define symbtheader          _symbt_union1._symbtheader\n#define symbtflags           _symbt_union1._symbt_struct1._symbtflags\n#define symbtflag0           _symbt_union1._symbt_struct2._symbtflag0\n#define symbtflag1           _symbt_union1._symbt_struct2._symbtflag1\n#define symbtnumberofsymbols _symbt_union1._symbt_struct2._symbtnumberofsymbols\n\n/* Values for field \"symbtflag0\" */\n#define symbtnodefaultsymbols           0x80  /* Avoid using the default symbol set        */\n#define symbtonlystaticsymbols          0x40  /* Allow only static symbols                 */\n#define symbttimestampisgmt             0x20  /* The input timestamp is GMT-time, not      */\n#define symbttimestampislocal           0x10  /* The input timestamp is Local-Time, not    */\n#define symbtwarnsubstrings             0x08  /* When a substring problem is encountered,  */\n#define symbtchecknullsubtext           0x04  /* The presence of null sub-text will be     */\n#define symbtptrsareoffsets             0x02  /* The pointer fields within the             */\n#define symbtonlydynamicsymbols         0x01  /* Allow only dynamic symbols. This          */\n\n/* Values for field \"symbtflag1\" */\n#define symbtflag1rsv1                  0x80  /* Reserved. Must be zero. Do not use.       */\n#define symbttimestampisstck            0x40  /* The input timestamp is from the STCK      */\n#define symbtwarnnosub                  0x20  /* When no substitution at all has occurred, */\n#define symbtindirectsymbolarea         0x10  /* Indicates that the symbol area is         */\n#define symbtmixedcasesymbols           0x08  /* Indicates that the input may have         */\n#define symbtflag1rsv3                  0x07  /* Unused. Must be zero.                     */\n\n/* Values for field \"symbttableentries\" */\n#define symbtmaxstaticsymbollength      8     /* The max length of a static symbol,        */\n#define symbtmaxstaticentriesprezosr4   103   /* The max number of full-sized              */\n#define symbtmaxstaticentrieszosr4      928   /* The max number of full-sized              */\n#define symbtmaxstaticentries           928   /* The max number of full-sized entries.     */\n#define symbtmaxstaticsubtextlength     9     /* The max length of substitution text       */\n#define symbtmaxstatictablesizeprezosr4 3609  /* The max table size, taking                */\n#define symbtmaxstatictablesizezosr4    32512 /* The max table size, taking into           */\n#define symbtmaxstatictablesize         32512\n#define symbt_len                       0x04\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "SYMBTE": {"ttr": 8375, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct symbp \u00e4\n  union \u00e4\n    void          *_symbppattern_;    /* Address of input pattern containing symbols */\n    void          *_symbppatternaddr; /* Same as SymbpPattern@                       */\n    \u00fc _symbp_union1;\n  int            symbppatternlength; /* Length of input pattern */\n  union \u00e4\n    void          *_symbptarget_;    /* Address of output target area. The target, */\n    void          *_symbptargetaddr; /* Same as SymbpTarget@                       */\n    \u00fc _symbp_union2;\n  union \u00e4\n    void          *_symbptargetlength_;    /* Address of input output fullword field */\n    void          *_symbptargetlengthaddr; /* Same as SymbpTargetLength              */\n    \u00fc _symbp_union3;\n  union \u00e4\n    void          *_symbpsymboltable_;    /* Address of symbol table mapped by SYMBT */\n    void          *_symbpsymboltableaddr; /* Same as SymbpSymbolTable                */\n    \u00fc _symbp_union4;\n  union \u00e4\n    void          *_symbptimestamp_;    /* Address of 8-character area containing the */\n    void          *_symbptimestampaddr; /* Same as SymbpTimeStamp@                    */\n    \u00fc _symbp_union5;\n  union \u00e4\n    int            _symbpreturncode_;    /* Address of fullword which is to contain the */\n    void          *_symbpreturncodeaddr; /* Same as SymbpReturnCode                     */\n    \u00fc _symbp_union6;\n  \u00fc;\n\n#define symbppattern_         _symbp_union1._symbppattern_\n#define symbppatternaddr      _symbp_union1._symbppatternaddr\n#define symbptarget_          _symbp_union2._symbptarget_\n#define symbptargetaddr       _symbp_union2._symbptargetaddr\n#define symbptargetlength_    _symbp_union3._symbptargetlength_\n#define symbptargetlengthaddr _symbp_union3._symbptargetlengthaddr\n#define symbpsymboltable_     _symbp_union4._symbpsymboltable_\n#define symbpsymboltableaddr  _symbp_union4._symbpsymboltableaddr\n#define symbptimestamp_       _symbp_union5._symbptimestamp_\n#define symbptimestampaddr    _symbp_union5._symbptimestampaddr\n#define symbpreturncode_      _symbp_union6._symbpreturncode_\n#define symbpreturncodeaddr   _symbp_union6._symbpreturncodeaddr\n\n/* Values for field \"symbpreturncodeaddr\" */\n#define symbp_len 0x1C\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TAGCTLG": {"ttr": 7879, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "TAG(QUERY_STRING,0,\"query_string\")\nTAG(REQUEST_METHOD,1,\"GET\")\nTAG(GATEWAY_INTERFACE,2,\"CGI 1.1\")\nTAG(SERVER_PROTOCOL,3,\"HTTP/1.1\")\nTAG(SERVER_PORT,4,\"80\")\nTAG(SERVER_NAME,5,\" ISIS Papyrus Host Server\")\nTAG(CONTENT_TYPE,6,\"text/html\")\nTAG(CONTENT_LENGTH,7,\"0\")\nTAG(PATH_INFO,8,\"/\")\nTAG(PATH_TRANSLATED,9,\"/\")\nTAG(SCRIPT_NAME,10,\"script\")\nTAG(REMOTE_HOST,11,\"remote_host\")\nTAG(REMOTE_ADDR,12,\"14.0.0.0\")\nTAG(REMOTE_USER,13,\"user\")\nTAG(REMOTE_IDENT,14,\"ident\")\nTAG(HTTP_USER_AGENT,16,\"user\")\nTAG(HTTP_ACCEPT,17,\"*/*\")\nTAG(REFERER_URL,18,\"referer\")\nTAG(HTTP_IF_MODIFIED_SINCE,19,\"0\")\nTAG(HTTP_VERSION,20,\"HTTP/1.1\")\nTAG(LOCATION,21,\"\")\nTAG(CONTENT_ENCODING,22,\"\")\nTAG(PRAGMA,23,\"\")\nTAG(HTTP_DATE,24,\"\")\nTAG(AUTHORIZATION,25,\"\")\nTAG(FROM,26,\"\")\nTAG(HTTP_EXPIRES,27,\"\")\nTAG(HTTP_ALLOW,28,\"\")\nTAG(HTTP_LAST_MODIFIED,29,\"\")\nTAG(HTTP_CONNECTION,30,\"\")\nTAG(HTTP_HOST,31,\"\")\nTAG(ROOT_DDN,32,\"HTTPHTML\")\nTAG(ROOT_MEMBER,33,\"WELCOME\")\nTAG(CACHE_OBJECTS,34,\"YES\")\nTAG(CALL_COUNT,35,\"0\")\nTAG(BOUNDARY,36,\"\")\nTAG(BOUNDARY_ASCII,37,\"\")\nTAG(SERVER_SOFTWARE,38,\"ISIS Papyrus Host Server 6.0.0\")\nTAG(SERVER_ROOT,40,\"\")\nTAG(HTTP_COOKIE,41,\"\")\nTAG(HTTPS_CLIENT_CERT,42,\"\")\nTAG(HTTPS_CLIENT_CERT_LEN,43,\"\")\nTAG(HTTPS_CLIENT_CERT_SESSIONID,44,\"\")\nTAG(HTTPS_CLIENT_CERT_SERIAL_NUM,45,\"\")\nTAG(HTTPS_CLIENT_CERT_COMMON_NAME,46,\"\")\nTAG(HTTPS_CLIENT_CERT_LOCALITY,47,\"\")\nTAG(HTTPS_CLIENT_CERT_STATE_OR_PROVINCE,48,\"\")\nTAG(HTTPS_CLIENT_CERT_COUNTRY,49,\"\")\nTAG(HTTPS_CLIENT_CERT_ORG,50,\"\")\nTAG(HTTPS_CLIENT_CERT_ORG_UNIT,51,\"\")\nTAG(HTTPS_CLIENT_CERT_ISSUER_COMMON_NAME,52,\"\")\nTAG(HTTPS_CLIENT_CERT_ISSUER_LOCALITY,53,\"\")\nTAG(HTTPS_CLIENT_CERT_ISSUER_STATE_OR_PROVINCE,54,\"\")\nTAG(HTTPS_CLIENT_CERT_ISSUER_COUNTRY,55,\"\")\nTAG(HTTPS_CLIENT_CERT_ISSUER_ORG,56,\"\")\nTAG(HTTPS_CLIENT_CERT_ISSUER_ORG_UNIT,57,\"\")\nTAG(HTTPS,58,\"OFF\")\nTAG(REMOTE_PWD,59,\"\")\nTAG(ERROR_VAR,99,\"\")\nTAG(Profile,100,\"\")\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TAGS": {"ttr": 7937, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_TAGS\n#define INCLUDE_TAGS\n\n#include \"mvsbase.hpp\"\n\n//\n// field types : fALPHANUMERIC - cH - character\n//               fBINARY       - bI - binary\n//               fsLLTag       - sL\n\n// groups : 0    system defaults\n//          1    partner system defaults\n//          2    docexec profile defaults\n//          3    request parameters\n\nconst int MaxTagCatalogEntry = 999;\n\n\n\t#ifndef cH\n\t\t#define cH fALPHANUMERIC\n\t#endif\n\n\t#ifndef bI\n\t\t#define bI fBINARY\n\t#endif\n\n\t#ifndef sL\n\t\t#define sL fSLLTAG\n\t#endif\n\n\t#ifndef aL\n\t\t#define aL aLEFT\n\t\t#define aR aRIGHT\n\t#endif\n\n\t#ifndef cU\n\t\t#define cU cUPPER\n\t\t#define cL cLOWER\n\t#define cA cASIS\n\t#endif\n\n#if defined(input_high) == 0 && defined(input_low) == 0\n  #define input_high  '\u00d6x09'\n  #define input_low   '\u00d6x01'\n  #define input_error '\u00d6x10'\n#endif\n\nextern int TagCatalogMaxUsed ;\n\nclass TagCatalogEntry\n\u00e4\npublic:\n  int         code;\n  STRING      name;\n  STRING      deflt;\n  int         maxlength;\n  FIELDTYPE   fieldtype;\n  ALIGNTYPE   aligntype;\n  CAPSTYPE    capstype;\n  char        attrib;\n  int         vectors;\n  int         vectora;\n  char   *  * vector;\n  TagCatalogEntry(\n\t\t  int c,\n\t\t  int ml,\n\t\t  char * df = 0,\n\t\t  FIELDTYPE ft = fALPHANUMERIC,\n\t\t  ALIGNTYPE at = aLEFT,\n\t\t  CAPSTYPE ct = cUPPER,\n\t\t  char attr = input_high,\n\t\t  int  vs = 0);\n  TagCatalogEntry(TagCatalogEntry&);\n  \u00dfTagCatalogEntry();\n  char * operator\u00c4\u00dc(int );\n  char * get(int i = 0)\u00e4 return vector\u00c4i\u00dc; \u00fc\n\u00fc;\n\n#define  TagCatalogEntryP TagCatalogEntry *\nextern  \t\t  TagCatalogEntryP   * TagCatalog;\nint     \t \t initTags();\nint     \t\t  readTags(char * = 0);\nint     \t \t printTags();\nTagCatalogEntry * searchTags(char *);\n\n#ifndef Nodef\n#define Nodef \u00d6x00\n#endif\n\n#define   tag( n , c , l , d , ft , al , cap , attr , vs )  \u00d6\nconst int n = c;\n#define   tagS( n , c , l , d ,  vs )  \u00d6\nconst int n = c;\n#define TAG( n , c , d) \u00d6\nconst int n = c ;\n\n#define TC( n ) (TagCatalog\u00c4 n \u00dc->get(0))\n\n#include \"tagctlg.hpp\"\n\n#undef tag\n#undef tagS\n#undef TAG\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TBVT": {"ttr": 8461, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tbvt \u00e4\n  unsigned char  tbvtid\u00c44\u00dc;   /* TBVT EBCDIC IDENTIFIER.          */\n  unsigned char  tbvtblvl;    /* CONTROL BLOCK LEVEL NUMBER.      */\n  unsigned char  _filler1;    /* UNUSED                           */\n  short int      tbvtpid;     /* PROCESSOR IDENTIFIER.       @L1A */\n  struct \u00e4\n    void          *_tbvtc120; /* BYTES 0-3 OF CR12           @L2A */\n    struct \u00e4\n      unsigned char  _filler2\u00c43\u00dc;\n      unsigned char  _filler3;\n      \u00fc tbvtc121;\n    \u00fc tbvtc12e;\n  struct \u00e4\n    void          *_tbvtnxtr; /* REAL ADDRESS OF NEXT TBVT.    */\n    void          *_tbvtnxtv; /* VIRTUAL ADDRESS OF NEXT TBVT. */\n    \u00fc tbvtfwrd;\n  void          *tbvtbwrd;    /* VIRTUAL ADDRESS OF PREVIOUS      */\n  void          *tbvtbufv;    /* VIRTUAL ADDRESS OF 4K BUFFER     */\n  struct \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _tbvtbfg1; /* STATE FLAGS. */\n        unsigned char  _tbvtbfg2; /* STATE FLAGS. */\n        \u00fc tbvtbfgs;\n      short int      _tbvtbsa; /* SASID AT TIME BUFFER BECAME */\n      short int      _tbvtbha; /* HASID AT TIME BUFFER BECAME */\n      short int      _tbvtbpa; /* PASID AT TIME BUFFER BECAME */\n      \u00fc tbvtcr34;\n    void          *_tbvtbtb;     /* PSATOLD AT TIME BUFFER BECAME    */\n    int            _tbvtbcnt;    /* BUFFER USE COUNT.           @L1C */\n    unsigned char  _tbvtbtod\u00c48\u00dc; /* TIME OF DAY BUFFER BECAME        */\n    \u00fc tbvtbst;\n  unsigned char  tbvtbsat\u00c48\u00dc; /* TIME OF DAY BUFFER BECAME        */\n  union \u00e4\n    unsigned char  _tbvtente\u00c48\u00dc; /* ESAME CR12                  @L2A */\n    struct \u00e4\n      unsigned char  _tbvtent0\u00c44\u00dc; /* WORD 0 OF ESAME CR12        @L2A */\n      void          *_tbvtent1;    /* WORD 1 OF ESAME CR12             */\n      \u00fc _tbvt_struct1;\n    \u00fc _tbvt_union1;\n  unsigned char  tbvtwork\u00c48\u00dc; /* WORK AREA                   @L2A */\n  double         tbvtend;     /* END OF TBVT.                     */\n  \u00fc;\n\n#define tbvtc120 tbvtc12e._tbvtc120\n#define tbvtnxtr tbvtfwrd._tbvtnxtr\n#define tbvtnxtv tbvtfwrd._tbvtnxtv\n#define tbvtbfg1 tbvtbst.tbvtcr34.tbvtbfgs._tbvtbfg1\n#define tbvtbfg2 tbvtbst.tbvtcr34.tbvtbfgs._tbvtbfg2\n#define tbvtbsa  tbvtbst.tbvtcr34._tbvtbsa\n#define tbvtbha  tbvtbst.tbvtcr34._tbvtbha\n#define tbvtbpa  tbvtbst.tbvtcr34._tbvtbpa\n#define tbvtbtb  tbvtbst._tbvtbtb\n#define tbvtbcnt tbvtbst._tbvtbcnt\n#define tbvtbtod tbvtbst._tbvtbtod\n#define tbvtente _tbvt_union1._tbvtente\n#define tbvtent0 _tbvt_union1._tbvt_struct1._tbvtent0\n#define tbvtent1 _tbvt_union1._tbvt_struct1._tbvtent1\n\n/* Values for field \"tbvtc120\" */\n#define tbvtrbre 0x80 /* ESAME BRANCH TRACE OPTION   @L2A */\n#define tbvtrmoe 0x40 /* ESAME MODE TRACE OPTION     @L2A */\n\n/* Values for field \"_filler2\" */\n#define tbvtrbr  0x80 /* BRANCH TRACE OPTION. BIT 0.      */\n\n/* Values for field \"_filler3\" */\n#define tbvtrasd 0x02 /* ASID TRACE OPTION. BIT 30.       */\n#define tbvtrexp 0x01 /* EXPLICIT TRACE OPTION. BIT 31.   */\n\n/* Values for field \"tbvtbfg1\" */\n#define tbvtplst 0x80 /* PREVIOUS TBVT(S) LOST FLAG.      */\n#define tbvtc12c 0x40 /* CONTROL REGISTER 12 HAS THE      */\n\n/* Values for field \"tbvtend\" */\n#define tbvtlvln 0x01 /* TBVT LEVEL NUMBER.               */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TCBFIX": {"ttr": 8167, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct tcbfix \u00e4\n  struct \u00e4\n    double         _tcbfrs0; /* -     SAVE AREA FOR FLOATING POINT REGISTER 0 */\n    double         _tcbfrs2; /* -     SAVE AREA FOR FLOATING POINT REGISTER 2 */\n    double         _tcbfrs4; /* -     SAVE AREA FOR FLOATING POINT REGISTER 4 */\n    double         _tcbfrs6; /* -     SAVE AREA FOR FLOATING POINT REGISTER 6 */\n    \u00fc tcbfrs;\n  void          *tcbrbp;        /* -     ADDRESS OF THE RB FOR EXECUTING PROGRAM.  THIS   */\n  void          *tcbpie;        /* -     Address of SPIE/ESPIE Control Area          @P6C */\n  void          *tcbdeb;        /* -     ADDRESS OF THE DEB QUEUE                         */\n  void          *tcbtio;        /* -     ADDRESS OF THE TASK I/O TABLE (TIOT)             */\n  struct \u00e4\n    unsigned char  _tcbcmpf;    /* -     INDICATOR FLAGS                        */\n    unsigned char  _tcbcmpc\u00c43\u00dc; /* -   SYSTEM COMPLETION CODE IN FIRST 12 BITS, */\n    \u00fc tcbcmp;\n  struct \u00e4\n    int            _tcbmod91 : 1, /* - BOTH TESTRAN AND DECIMAL SIMULATOR ON A MOD 91  */\n                   _tcbnochk : 1, /* - SUPPRESS TAKING CHECKPOINTS FOR THIS STEP       */\n                   _tcbgrph  : 1, /* - GAM/SP ACTIVE FOR THIS TASK                     */\n                             : 1,\n                   _tcbtcpp  : 1, /* - TCAM POST-PENDING  (RORI)                       */\n                   _tcbtcp   : 1, /* - TEST TASK - USED BY TEST SVC                    */\n                   _tcboltep : 1, /* - OLTEP FUNCTIONS REQUIRE CLEANUP BEFORE ABNORMAL */\n                             : 1;\n    int            _tcbtrnb : 24; /* -   ADDRESS OF TESTRAN CONTROL CORE TABLE         */\n    \u00fc tcbtrn;\n  struct \u00e4\n    unsigned char  _filler1;      /* -     HIGH ORDER BYTE OF TCBMSS                   @H2C */\n    int            _tcbmssb : 24; /* -   SAME AS TCBMSS                              @L6C   */\n    \u00fc tcbmss;\n  int            tcbflag   : 4, /* - STORAGE PROTECTION KEY                               */\n                 tcbzero   : 4; /* - MUST BE ZERO                                         */\n  struct \u00e4\n    int            _tcbfa    : 1, /* - May be on when a task is being abnormally   @L6C   */\n                   _tcbfe    : 1, /* - On when the system is calling resource      @L6C   */\n                   _tcbfera  : 1, /* - ENTER ABEND ERASE ROUTINE WHEN IN CONTROL AGAIN    */\n                   _tcbnonpr : 1, /* - TASK IS NON-PREEMPTABLE                            */\n                   _tcbpdump : 1, /* - PREVENT DUMP INDICATOR                             */\n                   _tcbft    : 1, /* - TOP TASK IN TREE BEING ABTERMED                    */\n                   _tcbfs    : 1, /* - ABTERM DUMP COMPLETED                              */\n                   _tcbfx    : 1; /* - PROHIBIT QUEUEING OF ASYNCHRONOUS EXITS FOR        */\n    int            _tcbfoinp : 1, /* - THE TASK IS ABENDING AND IS IN THE PROCESS OF      */\n                   _tcbfsti  : 1, /* - SECOND JOB STEP INTERVAL HAS EXPIRED               */\n                   _tcbfabop : 1, /* - IF 1, THE SYSABEND DUMP DATA SET HAS BEEN OPENED   */\n                   _tcbfsmc  : 1, /* - TASK HAS ISSUED A SYSTEM-MUST-COMPLETE AND SET     */\n                   _tcbfjmc  : 1, /* - TASK HAS ISSUED A STEP-MUST-COMPLETE AND TURNED    */\n                   _tcbfdsop : 1, /* - SYSABEND OPEN FOR JOB STEP                         */\n                   _tcbfetxr : 1, /* - ETXR TO BE SCHEDULED                               */\n                   _tcbfts   : 1; /* - THIS TASK IS A MEMBER OF A TIME-SLICED GROUP       */\n    int            _tcbfsm   : 1, /* - ALL PSW'S IN SUPERVISOR STATE                      */\n                   _tcbrt1s  : 1, /* - RTM1 HAS INVOKED SLIP FOR A TASK IN EUT MODE.      */\n                   _tcbabtrm : 1, /* - ABTERM BIT TO PREVENT MULTIPLE ABENDS              */\n                   _tcbfxset : 1, /* - TCBFX WAS SET BY STATUS MCSTEP              @04A   */\n                             : 1,\n                   _tcbkey9  : 1, /* - TCB was attached using KEY=NINE and so is to be    */\n                   _tcbenqrm : 1, /* - ENQ/DEQ RESOURCE MANAGER HAS RECEIVED   @G381P9A   */\n                   _tcbdwsta : 1; /* - THIS TASK WAS DETACHED WITH STAE=YES OPTION        */\n    int            _tcbndump : 1, /* - ABDUMP NONDISPATCHABILITY INDICATOR                */\n                   _tcbser   : 1, /* - SER1 NONDISPATCHABILITY INDICATOR                  */\n                   _tcbrqena : 1, /* - I/O RQE'S EXHAUSTED                                */\n                   _tcbhndsp : 1, /* - TASK OR JOB STEP IS MOMENTARILY 'FROZEN' UNTIL     */\n                   _tcbuxndv : 1, /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n                   _tcbrbwf  : 1, /* - TOP RB IS IN WAIT STATE                 @G50DP9A   */\n                             : 1,\n                   _tcbondsp : 1; /* - TASK TERMINATING AND NONDISPATCHABLE BECAUSE       */\n    unsigned char  _tcbflgs5;     /* -     MORE NONDISPATCHABILITY FLAGS.   IF ANY BIT IN */\n    \u00fc tcbflgs;\n  char           tcblmp;        /* -   TASK LIMIT PRIORITY                                */\n  char           tcbdsp;        /* -   DISPATCHING PRIORITY FOR THIS TASK                 */\n  void          *tcblls;        /* -     ADDRESS OF LAST LOAD LIST ELEMENT (LLE) IN LOAD  */\n  void          *tcbjlb;        /* -     ADDRESS OF A JOBLIB DCB                          */\n  struct \u00e4\n    int            _tcbjpqf  : 1, /* - JPQ PURGE FLAG                                     */\n                             : 7;\n    int            _tcbjpqb : 24; /* -   LOW ORDER 24-BITS OF TCBJPQ             @G860PXB */\n    \u00fc tcbjpq;\n  struct \u00e4\n    int            _tcbgrs0;  /* -     SAVE AREA FOR GENERAL REGISTER 0  */\n    int            _tcbgrs1;  /* -     SAVE AREA FOR GENERAL REGISTER 1  */\n    int            _tcbgrs2;  /* -     SAVE AREA FOR GENERAL REGISTER 2  */\n    int            _tcbgrs3;  /* -     SAVE AREA FOR GENERAL REGISTER 3  */\n    int            _tcbgrs4;  /* -     SAVE AREA FOR GENERAL REGISTER 4  */\n    int            _tcbgrs5;  /* -     SAVE AREA FOR GENERAL REGISTER 5  */\n    int            _tcbgrs6;  /* -     SAVE AREA FOR GENERAL REGISTER 6  */\n    int            _tcbgrs7;  /* -     SAVE AREA FOR GENERAL REGISTER 7  */\n    int            _tcbgrs8;  /* -     SAVE AREA FOR GENERAL REGISTER 8  */\n    int            _tcbgrs9;  /* -     SAVE AREA FOR GENERAL REGISTER 9  */\n    int            _tcbgrs10; /* -     SAVE AREA FOR GENERAL REGISTER 10 */\n    int            _tcbgrs11; /* -     SAVE AREA FOR GENERAL REGISTER 11 */\n    int            _tcbgrs12; /* -     SAVE AREA FOR GENERAL REGISTER 12 */\n    int            _tcbgrs13; /* -     SAVE AREA FOR GENERAL REGISTER 13 */\n    int            _tcbgrs14; /* -     SAVE AREA FOR GENERAL REGISTER 14 */\n    int            _tcbgrs15; /* -     SAVE AREA FOR GENERAL REGISTER 15 */\n    \u00fc tcbgrs;\n  struct \u00e4\n    char           _filler2;      /* -   FIRST BYTE OF TCBFSA                    @G381P9A */\n    int            _tcbfsab : 24; /* -   ADDRESS OF THE FIRST PROBLEM PROGRAM SAVE AREA   */\n    \u00fc tcbfsa;\n  void          *tcbtcb;        /* -     Queue of TCBs in an address space.          @L5C */\n  int            tcbtqet   : 1, /* - IF ZERO, TASK TYPE TQE.                              */\n                          : 31;\n  struct \u00e4\n    unsigned char  _filler3;       /* -     HIGH ORDER BYTE OF TCBJSTCB             @G860PXB */\n    int            _tcbjstca : 24; /* -   LOW ORDER 24 BITS OF TCBJSTCB           @G860PXB   */\n    \u00fc tcbjstcb;\n  void          *tcbntc;        /* -     ADDRESS OF THE TCB FOR THE TASK PREVIOUSLY       */\n  void          *tcbotc;        /* -     ADDRESS OF THE TCB FOR THE TASK (THE ORIGINATING */\n  void          *tcbltc;        /* -     ADDRESS OF THE TCB FOR THE TASK LAST ATTACHED BY */\n  void          *tcbiqe;        /* -     ADDRESS OF AN INTERRUPTION QUEUE ELEMENT (IQE)   */\n  void          *tcbecb;        /* -     ADDRESS OF THE ECB THAT WILL BE POSTED BY THE    */\n  int            tcbtstsk  : 1, /* - SWAPPED TIME SHARING TASK (OS/VS1)                   */\n                 tcbstppr  : 1, /* - TASK SHOULD BE MADE NONDISPATCHABLE VIA TCBSTPP      */\n                 tcbatt    : 1, /* - TASK SHOULD NOT HAVE ATTENTION EXITS SCHEDULED       */\n                 tcbtiotg  : 1, /* - PURGE TGET/TPUT AFTER ATTENTION                      */\n                 tcbsmcp   : 1, /* - STATUS MCSTEP PENDING,TASK IS SUSPENDED     @L4A     */\n                           : 1,\n                 tcbdydsp  : 1, /* - M195 TASK IS MEMBER OF DYNAMIC DISPATCHING           */\n                 tcbcpubn  : 1; /* - FOR M195, ZERO MEANS I/O BOUND AND ONE MEANS         */\n  char           tcbstpct;      /* -   NUMBER OF SETTASK STARTS WHICH MUST BE             */\n  char           tcbtslp;       /* -   LIMIT PRIORITY OF TIME SHARING TASK                */\n  unsigned char  tcbtsdp;       /* -     DISPATCHING PRIORITY OF TIME SHARING TASK        */\n  void          *tcbrd;         /* POINTER TO DPQE MINUS 8 FOR THE JOB STEP               */\n  void          *tcbae;         /* LIST ORIGIN OF AQE(S) FOR THIS TASK                    */\n  struct \u00e4\n    int            _tcbstabe  : 1, /* - ABEND ENTERED BECAUSE OF ERROR IN STAE           */\n                   _tcbquies  : 1, /* - STAE INVOKED PURGE I/O ROUTINE WITH QUIESCE I/O  */\n                   _tcb33e    : 1, /* - A 33E ABEND HAS OCCURRED FOR TASK                */\n                   _tcbppsup  : 1, /* - 1=SUPERVISOR MODE,0=PROBLEM PROGRAM MODE         */\n                   _tcbhalt   : 1, /* - PURGE I/O ROUTINE DID NOT SUCCESSFULLY QUIESCE   */\n                   _tcbsynch  : 1, /* - SYNCH ISSUED BY ASIR TO SCHEDULE EXIT ROUTINE    */\n                              : 1,\n                   _tcbstcur  : 1; /* - STAE RECURSION VALID                      ICB443 */\n    int            _tcbstabb : 24; /* -   ADDRESS OF THE CURRENT STAE CONTROL BLOCK      */\n    \u00fc tcbstab;\n  struct \u00e4\n    int            _tcbsmfgf : 1, /* - IF ZERO, THE TCT CORE TABLE IS NOT TO BE       */\n                             : 7;\n    int            _tcbtctb : 24; /* -   ADDRESS OF THE TIMING CONTROL TABLE (TCT) IF */\n    \u00fc tcbtct;\n  void          *tcbuser;       /* -     A WORD AVAILABLE TO THE USER                     */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _tcbndsp0;     /* -     BYTE 0                                       */\n      unsigned char  _tcbndsp1;     /* -     BYTE 1                                       */\n      int            _tcbabd   : 1, /* - ABDUMP IS PROCESSING  (OS/VS1)                   */\n                     _tcbstpp  : 1, /* - TASK SET NONDISPATCHABLE BY SETTASK              */\n                     _tcbndsvc : 1, /* - TASK IS NONDISPATCHABLE BECAUSE SVC DUMP IS      */\n                     _tcbndts  : 1, /* - TASK IS NONDISPATCHABLE BECAUSE IT IS BEING      */\n                     _tcbiwait : 1, /* - TASK IS NONDISPATCHABLE DUE TO AN INPUT WAIT     */\n                     _tcbowait : 1, /* - TASK IS NONDISPATCHABLE DUE TO AN OUTPUT WAIT    */\n                     _tcbdss   : 1, /* - DYNAMIC SUPPORT SYSTEM (DSS) HAS SET THIS        */\n                     _tcbabe   : 1; /* - ABEND ROUTINE WAS ENTERED FOR THIS TASK WHILE    */\n      int            _tcbljsnd : 1, /* - TASK IS ABENDING AND NONDISPATCHABLE BECAUSE IT  */\n                     _tcbndnyi : 1, /* - RCT TASK IS NONDISPATCHABLE BECAUSE ADDRESS @P4A */\n                     _tcbsrbnd : 1, /* - TCB NONDISPATCHABLE BECAUSE SRB'S ARE STOPPED    */\n                     _tcbslper : 1, /* - SET NONDISPATCHABLE SO THAT SLIP/PER CAN ALTER   */\n                     _tcbs3mr  : 1, /* - STAGE 3 EXIT EFFECTOR MUST RUN TO SYNCHRONIZE    */\n                     _tcbareq  : 1, /* - TSO AUTHORIZED REQUEST PROCESSING ACTIVE         */\n                     _tcbndsmf : 1, /* - Indicates task is stopped because its CPU   @03A */\n                     _tcbndint : 1; /* - INITIATOR SETS THIS BIT TO PREVENT JOB STEP      */\n      \u00fc tcbndsp;\n    \u00fc tcbscndy;\n  int            tcbmdids;      /* -     RESERVED FOR MODEL-DEPENDENT SUPPORT AND FOR     */\n  struct \u00e4\n    unsigned char  _tcbrecde;      /* -     ABEND RECURSION BYTE                      ICB456 */\n    int            _tcbjscbb : 24; /* -   ADDRESS OF THE JOB STEP CONTROL BLOCK              */\n    \u00fc tcbjscb;\n  void          *tcbssat;       /* -     ADDRESS OF THE SUBSYSTEM AFFINITY TABLE @G381P9A */\n  void          *tcbiobrc;      /* -     ADDRESS OF IOB RESTORE CHAIN FOR I/O QUIESCED    */\n  void          *tcbexcpd;      /* -     ADDRESS OF EXCP DEBUG AREA                YM4297 */\n  struct \u00e4\n    unsigned char  _filler4;       /* -     RESERVED.                                   @H2C */\n    int            _tcbext1a : 24; /* -   ADDRESS OF OS-OS/VS COMMON TCB EXTENSION  ICB311   */\n    \u00fc tcbext1;\n  struct \u00e4\n    unsigned char  _tcbndsp4;     /* -     SECONDARY NONDISPATCHABILITY FLAGS COMMON TO */\n    unsigned char  _tcbndsp5;     /* -     SECONDARY NONDISPATCHABILITY FLAGS UNIQUE TO */\n    int            _tcbrv    : 1, /* - THE PARTITION IS FIXED IN REAL STORAGE.  VIRTUAL */\n                   _tcbpie17 : 1, /* - PAGE FAULT INTERRUPT IS TO BE PASSED TO THE      */\n                   _tcbcpu   : 1, /* - TASK IS CPU-BOUND MEMBER OF AUTOMATIC PRIORITY   */\n                   _tcbspvlk : 1, /* - TASK SCHEDULED FOR ABTERM WHILE OWNING           */\n                             : 1,\n                   _tcbmigr  : 1, /* - REGION SELECTED FOR MIGRATION FROM PRIMARY       */\n                   _tcbapg   : 1, /* - TASK IS IN AUTOMATIC PRIORITY GROUP (APG)        */\n                   _tcbntjs  : 1; /* - JOB STEP TASK BUT NOT HIGHEST IN FAILING TREE    */\n    int            _tcbgpecb : 1, /* - TASK IS IN AN ECB WAIT FOR A GETPART             */\n                             : 1,\n                   _tcbsvcsp : 1, /* - IF 1, SVC SCREENING IS TO BE PROPAGATED TO       */\n                   _tcbstack : 1, /* - SET IN JOB STEP TCB TO INDICATE THAT A TASK IN   */\n                   _tcbsvcs  : 1, /* - IF 1, SVC SCREENING IS REQUIRED FOR THE TASK.    */\n                   _tcbrstsk : 1, /* - RESIDENT SYSTEM TASK                             */\n                   _tcbadmp  : 1, /* - ALL OTHER TASKS IN JOB STEP HAVE BEEN SET        */\n                   _tcbgtofm : 1; /* - GENERALIZED TRACE FACILITY (GTF) TRACING HAS     */\n    \u00fc tcbbits;\n  unsigned char  tcbdar;        /* -     DAMAGE ASSESSMENT ROUTINE (DAR) FLAGS            */\n  unsigned char  tcbrsv37;      /* -     RESERVED FOR USER                                */\n  char           tcbsysct;      /* -   NUMBER OF OUTSTANDING SYSTEM-MUST-COMPLETE         */\n  char           tcbstmct;      /* -   NUMBER OF OUTSTANDING STEP-MUST-COMPLETE           */\n  struct \u00e4\n    unsigned char  _filler5;       /* -     FIRST BYTE OF TCBEXT2                   @G381P9A */\n    int            _tcbext2a : 24; /* -   ADDRESS OF OS/VS1 - OS/VS2 COMMON EXTENSION        */\n    \u00fc tcbext2;\n  int            tcbaecb;       /* -     ABEND ECB.  POSTED BY A MOTHER TASK IN RTM2      */\n  void          *tcbxsb;        /* -     ADDRESS OF CURRENT XSB FOR TASK.        @G381P9A */\n  void          *tcbback;       /* -     ADDRESS OF PREVIOUS TCB ON READY QUEUE.  ZERO    */\n  void          *tcbrtwa;       /* -     POINTER TO CURRENT RTM2 WORK AREA                */\n  int            tcbnssqa  : 1, /* - NORMAL STACK SAVED IN SQA INDICATOR.    @G38CPXB     */\n                          : 31;\n  void          *tcbxlas;       /* -     ASCB ADDRESS OF THE CML LOCK HELD WHILE @G381PXU */\n  unsigned char  tcbabcur;      /* -     ABEND RECURSION BYTE                             */\n  char           tcbfjmct;      /* -   NUMBER OF OUTSTANDING STEP-MUST-COMPLETE@YA02725   */\n  unsigned char  tcbtid;        /* -     TASK ID NUMBER                            ICB374 */\n  int            tcbdying  : 1, /* - IF ON, INDICATES THAT THE SYSTEM HAS        @P1A     */\n                 tcbnoirb  : 1, /* - If on, IRBs will not be queued to this TCB. @08A     */\n                           : 6;\n  struct \u00e4\n    int            _tcbactiv : 1, /* - BIT ON MEANS THIS TCB IS CURRENTLY ACTIVE ON A     */\n                   _tcbs3a   : 1, /* - STAGE 3 EXIT EFFECTOR/RESUME/TCTL INTERSECT FLAG   */\n                   _tcbllreq : 1, /* - TASK REQUESTED LOCAL LOCK               @G50DP9A   */\n                             : 1,\n                   _tcbtdorm : 1, /* - Turned on to detect dormant Tasks by        @06A   */\n                             : 3;\n    int            _tcbcmlf  : 1, /* - CML RESOURCE MANAGER PROCESSING         @G381P9A   */\n                   _tcbllnew : 1, /* - Lock Manager has given this task the local  @L5A   */\n                             : 6;\n    short int      _tcbccpvi;     /* -     ID OF THE CURRENT CPU RUNNING THIS TASK.  USED */\n    \u00fc tcbxsct;\n  struct \u00e4\n    unsigned char  _filler6;      /* -     RESERVED.                                   @H2C */\n    int            _tcbfoea : 24; /* -   ADDRESS OF FIRST FIX OWNERSHIP ELEMENT (FOE)       */\n    \u00fc tcbfoe;\n  void          *tcbswa;        /* -     ADDRESS OF FIRST SCHEDULER WORK AREA (SWA) SPQE  */\n  void          *tcbstawa;      /* -     ESTAE ROUTINE WORK AREA POINTER         @Z40FP9A */\n  unsigned char  tcbtcbid\u00c44\u00dc;   /* -   CONTAINS BLOCK ID - 'TCB '                         */\n  void          *tcbrtm12;      /* -     POINTER TO PARAMETER AREAS PASSED FROM RTM1 TO   */\n  struct \u00e4\n    unsigned char  _tcbscbky;     /* -     KEY IN WHICH SYNCH IS TO PASS CONTROL          */\n    int            _tcbeterm : 1, /* - ESTAE EXIT ENTERED WITH TERM OPTION                */\n                   _tcbstafx : 1, /* - SERIALIZED BY TCB ACTIVE                @ZA30005   */\n                             : 6;\n    char           _tcbertyp;     /* -   TYPE OF ERROR CAUSING ENTRY TO THE RTM.  SET     */\n    char           _tcbmode;      /* -   MASK INDICATING MODE OF SYSTEM AT TIME OF ERROR. */\n    \u00fc tcbestae;\n  void          *tcbukysp;      /* -     ADDRESS OF SPQE'S FOR SUBPOOLS 229 AND 230       */\n  unsigned char  tcbr272\u00c42\u00dc;    /* -   RESERVED.                                   @L5C   */\n  unsigned char  tcbaffn\u00c42\u00dc;    /* -   CPU AFFINITY INDICATOR                             */\n  int            tcbeotfm  : 1, /* - END OF TASK FLAG FOR FREEMAIN.  SET TO 1 BY TASK     */\n                 tcbrtm1e  : 1, /* - RTM1 IS CURRENTLY PROCESSING EUT FRR'S  @G381PXU     */\n                 tcbndios  : 1, /* - TASK HAS BEEN SET NONDISPATCHABLE VIA STATUSND       */\n                 tcbpgnly  : 1, /* - SET BY RTM2 TO INDICATE ONLY PURGE PHASE TO BE       */\n                 tcbrtm2   : 1, /* - SET BY RTM2 TO INDICATE RTM2 HAS BEEN ENTERED        */\n                 tcbeot    : 1, /* - SET BY RTM2 TO INDICATE TO EXIT THAT END OF TASK     */\n                 tcbsattn  : 1, /* - SYNCHRONIZATION OF ATTENTION INTERRUPT REQUIRED      */\n                 tcbllh    : 1; /* - Task was interrupted holding the local lock.         */\n  int            tcbcncb   : 1, /* - SET BY RTM2 IN THE JOB STEP TCB WHEN IT HAS BEEN     */\n                 tcbfmw    : 1, /* - MOTHER WAITING FLAG.  TURNED ON IN A SUBTASK IN      */\n                 tcbfdw    : 1, /* - DAUGHTER WAITING FLAG.  TURNED ON IN A MOTHER        */\n                 tcbfprap  : 1, /* - SET BY RTM2 TO PREVENT PERCOLATION TO THE TASK       */\n                 tcbrt1nr  : 1, /* - IF 1, ERROR PROPAGATED FROM RTM1 IS         @D1A     */\n                 tcbecbnv  : 1, /* - IF 1, ECB POINTED TO BY TCBECB IS NOT TO BE          */\n                 tcbsspc   : 1, /* - STATUS STOP PENDING,TASK HOLDS A CML LOCK            */\n                 tcbrtm1c  : 1; /* - A TASK WITH EUT FRRS HAS BEEN CANCELLED. THIS        */\n  int            tcbexp    : 1, /* - EXPANDED VERSION OF THE TCB             @ZA72701     */\n                 tcbnctl   : 1, /* - IF 1, INDICATES USER PROGRAM IS LOADED  @ZA84893     */\n                 tcbrtmde  : 1, /* - DETACH HAS BEEN CALLED BY RTM           @ZA93650     */\n                           : 5;\n  int            tcbpmc    : 1, /* - IF 1, INDICATES TASK IS IN PROCESS MUST     @D2C     */\n                 tcbnojlb  : 1, /* - If 1, indicates that TCBJLB is not to be used        */\n                           : 6;\n  void          *tcbrpt;        /* -     ADDRESS OF RADIX PARTITION TREE FOR LOCAL        */\n  void          *tcbvat;        /* -     ADDRESS OF THE VAT (VSAM). THERE IS ONE @ZA63673 */\n  void          *tcbswasa;      /* -     ADDRESS OF SAVE AREA USED BY SWA MANAGER         */\n  void          *tcbsvca2;      /* -     ADDRESS OF SVC SCREENING TABLE          @G50EP9A */\n  void          *tcberd;        /* EXTENDED REGION DESCRIPTOR.             @G860PXU       */\n  void          *tcbeae;        /* EXTENDED ALLOCATED ELEMENT QUEUE        @G860PXU       */\n  void          *tcbarc;        /* REASON CODE FOR ABEND                   @G860PXB       */\n  int            tcbgres;       /* -     TASK GLOBAL RESOURCE COUNT - NUMBER OF GLOBAL    */\n  void          *tcbstcb;       /* ADDRESS OF STCB                             @H2C       */\n  unsigned char  tcbttime\u00c48\u00dc;   /* -  TCB'S ACCUMULATED CPU TIME                  @01A    */\n  void          *tcbcelap;      /* -  COMMON EXECUTION LIBRARY ANCHOR POINTER     @02A    */\n  unsigned char  tcbr148\u00c42\u00dc;    /* -  RESERVED                                    @05C    */\n  int            tcbpvict  : 1, /* - If 1, indicates that the associated task    @05M     */\n                 tcbpking  : 1, /* - If 1, indicates that the associated Task has         */\n                 tcbpcand  : 1, /* - If 1, indicates that this Task has requested         */\n                 tcbptop   : 1, /* - If 1, indicates that this Task is at the top         */\n                           : 4;\n  unsigned char  tcblevel;      /* -     LEVEL NUMBER OF TCB                     @ZA72701 */\n  void          *tcbbdt;        /* -     ADDRESS OF BDT'S GSD LINKAGE            @ZA72701 */\n  int            tcbndaxp;      /* -     COUNT OF NUMBER OF CONSECUTIVE DISPATCHES   @H1A */\n  void          *tcbsenv;       /* -     ADDRESS OF ACEE FOR THE TASK.               @H1A */\n  \u00fc;\n\n#define tcbfrs0  tcbfrs._tcbfrs0\n#define tcbfrs2  tcbfrs._tcbfrs2\n#define tcbfrs4  tcbfrs._tcbfrs4\n#define tcbfrs6  tcbfrs._tcbfrs6\n#define tcbcmpf  tcbcmp._tcbcmpf\n#define tcbcmpc  tcbcmp._tcbcmpc\n#define tcbmod91   tcbtrn._tcbmod91\n#define tcbnochk   tcbtrn._tcbnochk\n#define tcbgrph   tcbtrn._tcbgrph\n#define tcbtcpp   tcbtrn._tcbtcpp\n#define tcbtcp   tcbtrn._tcbtcp\n#define tcboltep   tcbtrn._tcboltep\n#define tcbtrnb  tcbtrn._tcbtrnb\n#define tcbmssb  tcbmss._tcbmssb\n#define tcbfa tcbflgs._tcbfa\n#define tcbfe tcbflgs._tcbfe\n#define tcbfera tcbflgs._tcbfera\n#define tcbnonpr tcbflgs._tcbnonpr\n#define tcbpdump tcbflgs._tcbpdump\n#define tcbft tcbflgs._tcbft\n#define tcbfs tcbflgs._tcbfs\n#define tcbfx tcbflgs._tcbfx\n#define tcbfoinp tcbflgs._tcbfoinp\n#define tcbfsti tcbflgs._tcbfsti\n#define tcbfabop tcbflgs._tcbfabop\n#define tcbfsmc tcbflgs._tcbfsmc\n#define tcbfjmc tcbflgs._tcbfjmc\n#define tcbfdsop tcbflgs._tcbfdsop\n#define tcbfetxr tcbflgs._tcbfetxr\n#define tcbfts tcbflgs._tcbfts\n#define tcbfsm tcbflgs._tcbfsm\n#define tcbrt1s tcbflgs._tcbrt1s\n#define tcbabtrm tcbflgs._tcbabtrm\n#define tcbfxset tcbflgs._tcbfxset\n#define tcbkey9 tcbflgs._tcbkey9\n#define tcbenqrm tcbflgs._tcbenqrm\n#define tcbdwsta tcbflgs._tcbdwsta\n#define tcbndump tcbflgs._tcbndump\n#define tcbser tcbflgs._tcbser\n#define tcbrqena tcbflgs._tcbrqena\n#define tcbhndsp tcbflgs._tcbhndsp\n#define tcbuxndv tcbflgs._tcbuxndv\n#define tcbrbwf tcbflgs._tcbrbwf\n#define tcbondsp tcbflgs._tcbondsp\n#define tcbflgs5 tcbflgs._tcbflgs5\n#define tcbjpqf tcbjpq._tcbjpqf\n#define tcbjpqb  tcbjpq._tcbjpqb\n#define tcbgrs0  tcbgrs._tcbgrs0\n#define tcbgrs1  tcbgrs._tcbgrs1\n#define tcbgrs2  tcbgrs._tcbgrs2\n#define tcbgrs3  tcbgrs._tcbgrs3\n#define tcbgrs4  tcbgrs._tcbgrs4\n#define tcbgrs5  tcbgrs._tcbgrs5\n#define tcbgrs6  tcbgrs._tcbgrs6\n#define tcbgrs7  tcbgrs._tcbgrs7\n#define tcbgrs8  tcbgrs._tcbgrs8\n#define tcbgrs9  tcbgrs._tcbgrs9\n#define tcbgrs10 tcbgrs._tcbgrs10\n#define tcbgrs11 tcbgrs._tcbgrs11\n#define tcbgrs12 tcbgrs._tcbgrs12\n#define tcbgrs13 tcbgrs._tcbgrs13\n#define tcbgrs14 tcbgrs._tcbgrs14\n#define tcbgrs15 tcbgrs._tcbgrs15\n#define tcbfsab  tcbfsa._tcbfsab\n#define tcbjstca tcbjstcb._tcbjstca\n#define tcbstabe tcbstab._tcbstabe\n#define tcbquies tcbstab._tcbquies\n#define tcb33e tcbstab._tcb33e\n#define tcbppsup tcbstab._tcbppsup\n#define tcbhalt tcbstab._tcbhalt\n#define tcbsynch tcbstab._tcbsynch\n#define tcbstcur tcbstab._tcbstcur\n#define tcbstabb tcbstab._tcbstabb\n#define tcbsmfgf tcbtct._tcbsmfgf\n#define tcbtctb  tcbtct._tcbtctb\n#define tcbndsp0 tcbscndy.tcbndsp._tcbndsp0\n#define tcbndsp1 tcbscndy.tcbndsp._tcbndsp1\n#define tcbabd tcbscndy.tcbndsp._tcbabd\n#define tcbstpp tcbscndy.tcbndsp._tcbstpp\n#define tcbndsvc tcbscndy.tcbndsp._tcbndsvc\n#define tcbndts tcbscndy.tcbndsp._tcbndts\n#define tcbiwait tcbscndy.tcbndsp._tcbiwait\n#define tcbowait tcbscndy.tcbndsp._tcbowait\n#define tcbdss tcbscndy.tcbndsp._tcbdss\n#define tcbabe tcbscndy.tcbndsp._tcbabe\n#define tcbljsnd tcbscndy.tcbndsp._tcbljsnd\n#define tcbndnyi tcbscndy.tcbndsp._tcbndnyi\n#define tcbsrbnd tcbscndy.tcbndsp._tcbsrbnd\n#define tcbslper tcbscndy.tcbndsp._tcbslper\n#define tcbs3mr tcbscndy.tcbndsp._tcbs3mr\n#define tcbareq tcbscndy.tcbndsp._tcbareq\n#define tcbndsmf tcbscndy.tcbndsp._tcbndsmf\n#define tcbndint tcbscndy.tcbndsp._tcbndint\n#define tcbrecde tcbjscb._tcbrecde\n#define tcbjscbb tcbjscb._tcbjscbb\n#define tcbext1a tcbext1._tcbext1a\n#define tcbndsp4 tcbbits._tcbndsp4\n#define tcbndsp5 tcbbits._tcbndsp5\n#define tcbrv tcbbits._tcbrv\n#define tcbpie17 tcbbits._tcbpie17\n#define tcbcpu tcbbits._tcbcpu\n#define tcbspvlk tcbbits._tcbspvlk\n#define tcbmigr tcbbits._tcbmigr\n#define tcbapg tcbbits._tcbapg\n#define tcbntjs tcbbits._tcbntjs\n#define tcbgpecb tcbbits._tcbgpecb\n#define tcbsvcsp tcbbits._tcbsvcsp\n#define tcbstack tcbbits._tcbstack\n#define tcbsvcs tcbbits._tcbsvcs\n#define tcbrstsk tcbbits._tcbrstsk\n#define tcbadmp tcbbits._tcbadmp\n#define tcbgtofm tcbbits._tcbgtofm\n#define tcbext2a tcbext2._tcbext2a\n#define tcbactiv tcbxsct._tcbactiv\n#define tcbs3a tcbxsct._tcbs3a\n#define tcbllreq tcbxsct._tcbllreq\n#define tcbtdorm tcbxsct._tcbtdorm\n#define tcbcmlf tcbxsct._tcbcmlf\n#define tcbllnew tcbxsct._tcbllnew\n#define tcbccpvi tcbxsct._tcbccpvi\n#define tcbfoea  tcbfoe._tcbfoea\n#define tcbscbky tcbestae._tcbscbky\n#define tcbeterm tcbestae._tcbeterm\n#define tcbstafx tcbestae._tcbstafx\n#define tcbertyp tcbestae._tcbertyp\n#define tcbmode  tcbestae._tcbmode\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TIOT1": {"ttr": 8047, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/tiot1.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n\n#if  defined(_CL4)== 0\n#define _CL4\ntypedef char CL4\u00c44\u00dc;\n#endif\n\n#if defined(_AL3) == 0\n#define _AL3\ntypedef struct\n\u00e4\n  char BF\u00c43\u00dc;\n\u00fc AL3;\n#endif\n\n#if defined(_CL3) == 0\n#define _CL3\ntypedef char CL3\u00c43\u00dc;\n#endif\n\n#if defined(_CL2) == 0\n#define _CL2\ntypedef char CL2\u00c42\u00dc;\n#endif\n\n#if defined(_CL16) == 0\n#define _CL16\ntypedef char CL16\u00c416\u00dc;\n#endif\n\n#if defined(_CL8) == 0\n#define _CL8\ntypedef char CL8\u00c48\u00dc;\n#endif\n\n/*\n#define SSIBPJES 0x80 */                /*              THIS SSIB IS USED TO START THE          */\n#define SSIBNSVC 0x40                   /*              NO SVC INDICATOR             @G38RP2Q   */\n#define SSIBUNKN 0x00                   /*              UNKNOWN SUBSYSTEM ID         @YA01974   */\n#define SSIBJES2 0x02                   /*              JES2 SUBSYSTEM ID            @YA01974   */\n#define SSIBJES3 0x03                   /*              JES3 SUBSYSTEM ID            @YA01974   */\n#define FLCSILCB 0x07                   /* -        SIGNIFICANT BITS IN ILC FIELD - LAST        */\n#define FLCPILCB 0x07                   /* -        SIGNIFICANT BITS IN ILC FIELD - LAST        */\n#define PSAPIPER 0x80                   /* -        PER INTERRUPT OCCURRED             MDC089   */\n#define PSAPIMC 0x40                    /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090   */\n#define PSAPIPC 0x3F                    /* -        AN UNSOLICITED PROGRAM CHECK HAS            */\n#define FLCTEAXM 0x80                   /*   -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY      */\n#define FLCSOPI 0x04                    /*   -      SUPPRESSION ON PROTECTION FLAG       @LQA   */\n#define FLCTSTDP 0x00                   /*   -      IF 1, THE PRIMARY STD WAS USED.      @L8A   */\n#define FLCTSTDA 0x01                   /*   -      IF 1, THE STD WAS AR QUALIFIED.      @L8A   */\n#define FLCTSTDS 0x02                   /*   -      IF 1, THE SECONDARY STD WAS USED.    @L8A   */\n#define FLCTSTDH 0x03                   /*   -      IF 1, THE HOME STD WAS USED.         @L8A   */\n#define PSAIO 0x80                      /* -        I/O FLIH                                    */\n#define PSASVC 0x40                     /* -        SVC FLIH                                    */\n#define PSAEXT 0x20                     /* -        EXTERNAL FLIH                               */\n#define PSAPI 0x10                      /* -        PROGRAM CHECK FLIH                          */\n#define PSALOCK 0x08                    /* -        LOCK ROUTINE                                */\n#define PSADISP 0x04                    /* -        DISPATCHER                                  */\n#define PSATCTL 0x02                    /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A   */\n#define PSATYPE6 0x01                   /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A   */\n#define PSAIPCRI 0x80                   /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE     */\n#define PSASVCR 0x40                    /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227   */\n#define PSASVCRR 0x20                   /* -        SVC RECOVERY RECURSION INDICATOR.           */\n#define PSAACR 0x04                     /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN      */\n#define PSARTM 0x02                     /* -        RECOVERY TERMINATION MONITOR (RTM) IN       */\n#define PSALCR 0x01                     /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C   */\n#define PSAIOSUP 0x80                   /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS     */\n#define PSASPR 0x10                     /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995   */\n#define PSAESTA 0x08                    /* -        SVC 60 RECOVERY ROUTINE ACTIVE              */\n#define PSARSM 0x04                     /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR      */\n#define PSAULCMS 0x02                   /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR         */\n#define PSASLIP 0x01                    /* -        IEAVTSLP RECURSION CONTROL BIT              */\n#define PSALDWT 0x80                    /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC   */\n#define PSASMF 0x40                     /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB   */\n#define PSAESAR 0x20                    /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C   */\n#define PSAAXP 0x80                     /*          INDICATES AXP                        @H1A   */\n#define PSAILSIO 0x80                   /*   -      THE I/O FLIH IS USING THE            @L9A   */\n#define PSAILSEX 0x40                   /*   -      THE EXTERNAL FLIH IS USING THE       @L9A   */\n#define PSAILSPC 0x20                   /*   -      THE PROGRAM FLIH IS USING THE        @L9A   */\n#define PSAILSDS 0x10                   /*   -      THE DISPATCHER IS USING THE          @L9A   */\n#define PSAILSRS 0x08                   /*   -      THE RESTART FLIH IS USING THE        @L9A   */\n#define PSAILSOR 0x04                   /*   -      EXIT IS USING THE INTERRUPT HANDLER  @LAA   */\n#define PSAILST6 0x02\n/*   -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A   */\n#define PSAILSLK 0x01                   /*   -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A   */\n#define PSAAEIT 0x80                    /*   -      ADDRESSING ENVIRONMENT IS IN         @LOA   */\n#define PSAPIOM 0x02                    /*          INPUT/OUTPUT INTERRUPT MASK      @G860PXK   */\n#define PSAPEXM 0x01                    /*          EXTERNAL INTERRUPT MASK          @G860PXK   */\n#define PSALKS1 19                      /*             COUNT OF LOCKS IN CLHT1          @G860PXK   */\n#define PSARSMEX 0x80                   /* -        BIT 0 OF PSARSML. IF ON, THE RSM            */\n#define PSATRCEX 0x80                   /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE          */\n#define PSAIOSEX 0x80                   /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A   */\n#define PSALKS2 3                       /*              COUNT OF LOCKS IN CLHT2              @D3C   */\n#define PSALKS3 1                       /*              COUNT OF LOCKS IN CLHT3          @G860PXH   */\n#define PSALKS4 2                       /*              COUNT OF LOCKS IN CLHT4          @G860PXH   */\n#define PSACPULI 0x80                   /* -        CPU LOCK INDICATOR               @G860PXH   */\n#define PSASUM 0x10                     /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA   */\n#define PSARSMLI 0x08                   /* -        RSM LOCK INDICATOR               @G860PXH   */\n#define PSATRCEI 0x04                   /* -        TRACE LOCK INDICATOR             @G860PXH   */\n#define PSAIOSI 0x02                    /* -        IOS LOCK INDICATOR                   @D3A   */\n#define PSARSMCI 0x10                   /* -        RSM COMMON LOCK INDICATOR        @G860PXK   */\n#define PSARSMGI 0x08                   /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH   */\n#define PSAVFIXI 0x04                   /* -        VSM FIX LOCK INDICATOR           @G860PXH   */\n#define PSAASMGI 0x02                   /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH   */\n#define PSARSMSI 0x01                   /* -        RSM STEAL LOCK INDICATOR         @G860PXH   */\n#define PSARSMXI 0x80                   /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH   */\n#define PSARSMAI 0x40                   /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH   */\n#define PSAVPAGI 0x20                   /* -        VSM PAGE LOCK INDICATOR          @G860PXH   */\n#define PSADSPLI 0x10                   /* -        DISPATCHER LOCK INDICATOR                   */\n#define PSAASMLI 0x08                   /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A   */\n#define PSASALLI 0x04                   /* -        SPACE ALLOCATION LOCK INDICATOR             */\n#define PSAIOSLI 0x02                   /* -        IOS SYNCHRONIZATION LOCK INDICATOR          */\n#define PSARSMDI 0x01                   /* -        RSM DATA SPACE LOCK INDICATOR        @LBA   */\n#define PSAIOULI 0x80                   /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A   */\n#define PSATPALI 0x08                   /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A   */\n#define PSASRMLI 0x04                   /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK          */\n#define PSACMSLI 0x02                   /* -        CROSS MEMORY SERVICES LOCK INDICATOR        */\n#define PSALCLLI 0x01                   /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A   */\n#define PSANUIN 0x80                    /* -        CPU TIMER CANNOT BE USED                    */\n#define PSAPCMC 0x01                    /* -        MC INTERRUPT      (MDC605)       @G383P9A   */\n#define PSAPCPF 0x02                    /* -        PAGE FAULT                       @G383P9A   */\n#define PSAPCPS 0x03                    /* -        PER/SPACE SWITCH INTERRUPT       @G383PXU   */\n#define PSAPCAD 0x04                    /* -        ADDRESSING EXCEPTION  (MDC488)   @G383P9A   */\n#define PSAPCTR 0x05                    /* -        TRANSLATION EXCEPTION  (MDC489)  @G383P9A   */\n#define PSAPCPC 0x06                    /* -        PROGRAM CHECK  (MDC490)          @G383P9A   */\n#define PSAPCTRC 0x07                   /* -        TRACE INTERRUPT                  @G860PXK   */\n#define PSAPCAF 0x08                    /* -        NEW VALUE FOR PROGRAM INTERRUPT      @03A   */\n#define PSAPCLS 0x09                    /* -        LINKAGE STACK INTERRUPT FUNCTION     @L8A   */\n#define PSAPCART 0x0A                   /* -        ACCESS REGISTER TRANSLATION          @L8A   */\n#define PSAPCDPF 0x0B                   /* -        DISABLED PAGE/SEGMENT FAULT          @LCA   */\n#define PSAPCDAR 0x0C                   /* -        DISABLED ART PIC X'2B' FUNCTION      @LCA   */\n#define PSAPCPRT 0x0D                   /* -        PROTECTION EXCEPTION FUNCTION VALUE  @LQA   */\n#define PSAPCMAX 0x0D                   /* -        MAXIMUM VALID FUNCTION VALUE         @LQC   */\n#define PSAPCTRR 0x80                   /* -        TRACE INTERRUPT RECURSION        @YA01102   */\n#define PSAPCMT 0x40                    /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A   */\n#define PSAPCP1 0x80                    /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A   */\n#define PSAPCP2 0x40                    /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A   */\n#define PSAPCDE 0x20                    /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A   */\n#define PSAPCLV 0x10                    /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A   */\n#define PSAPCP3 0x08                    /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A   */\n#define PSAPCP4 0x04                    /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A   */\n#define PSAPCPFR 0x02                   /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA   */\n#define PSAPCAVR 0x01                   /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA   */\n#define PSAPCDNV 0x80                   /* -        DUCT VALIDITY INDICATOR              @PBA   */\n#define PSAPCLSR 0x40                   /* -        IEAVLSIH HAS INVOKED IARPTEPR AND    @PEA   */\n#define PSANSS 0x80                     /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A   */\n#define PSAPRSRB 0x40                   /* -        PREEMPTABLE-CLASS SRB                @LPA   */\n#define PSATASKM 0x00                   /* -        TASK MODE VALUE  (MDC338)        @G50DP9A   */\n#define PSASRBM 0x04                    /* -        SRB MODE VALUE  (MDC339)         @G50DP9A   */\n#define PSAWAITM 0x08                   /* -        WAIT MODE VALUE  (MDC340)        @G50DP9A   */\n#define PSADISPM 0x10                   /* -        DISPATCHER MODE VALUE  (MDC342)  @G50DP9A   */\n#define PSAPSRBM 0x20                   /* -        PSEUDO SRB MODE FLAG BIT.  THIS BIT MAY     */\n#define PSABLSDI 0x80                   /* -        BMFLSD LOCK INDICATOR.               @LGA   */\n#define PSAXDSI 0x40                    /* -        XCFDS LOCK INDICATOR.                @LEA   */\n#define PSAXRESI 0x20                   /* -        XCFRES LOCK INDICATOR.               @LEA   */\n#define PSAXQI 0x10                     /* -        XCFQ LOCK INDICATOR.                 @LEA   */\n#define PSAESETI 0x08                   /* -        ETRSET LOCK INDICATOR.               @LFA   */\n#define PSAIXSCI 0x04                   /* -        IXLSCH LOCK INDICATOR.               @LMC   */\n#define PSAIXSHI 0x02                   /* -        IXLSHR LOCK INDICATOR.               @LMC   */\n#define PSAIXDSI 0x01                   /* -        IXLDS LOCK INDICATOR.                @LLA   */\n#define PSAIXLLI 0x80                   /* -        IXLSHELL LOCK INDICATOR.             @LMC   */\n#define PSAULUTI 0x40                   /* -        IOSULUT LOCK INDICATOR.              @LJA   */\n#define PSAIXLRI 0x20                   /* -        IXLREQST LOCK INDICATOR.             @05A   */\n#define PSAWLMRI 0x10                   /* -        WLMRES LOCK INDICATOR                @LRA   */\n#define PSAWLMQI 0x08                   /* -        WLMQ LOCK INDICATOR.                 @LRA   */\n#define PSACNTXI 0x04                   /* -        CONTEXT LOCK INDICATOR               @LRA   */\n#define PSAREGSI 0x02                   /* -        REGSRV LOCK INDICATOR.               @LRA   */\n#define PSAENABL 0x10                   /* -        TO ENABLE PSA PROTECTION                    */\n#define PSADSABL 0x00                   /* -        TO DISABLE PSA PROTECTION                   */\n#define PSACR0EN 0x10                   /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA      */\n#define PSACR0FP 0x04                   /* -        IF 1, EXTENDED FLOATING POINT IS            */\n#define PSACR0VI 0x02                   /* -        IF 1, VECTOR INSTRUCTIONS ARE               */\n#define PSARPEN 0x10                    /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA      */\n#define PSAIOPR 0x80                    /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A   */\n#define PSAIORTY 0x40                   /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A   */\n#define PSATROFF 0x80                   /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS       */\n#define PSASCHDA 0x80                   /*          SCHEDULE IS ACTIVE                   @LPA   */\n#define PSAMCHA 0x40                    /*          MACHINE CHECK IS ACTIVE              @06A   */\n#define PSARSTA 0x20                    /*          RESTART IS ACTIVE                    @06A   */\n#define PSAEGRA 0x10                    /*          GLOBAL RECOVERY IS ACTIVE            @06A   */\n#define PSARTMA 0x08                    /*          SELECTED RTM FUNCTIONS ARE ACTIVE    @06A   */\n#define TCBPM 0x0F                      /* - PROGRAM MASK AT TIME OF SPIE INITIATION.  MASK     */\n#define TCBCREQ 0x80                    /* - A DUMP HAS BEEN REQUESTED                          */\n#define TCBCSTEP 0x40                   /* - A STEP ABEND HAS BEEN REQUESTED                    */\n#define TCBCPP 0x20                     /* - SOME PROBLEM PROGRAM STORAGE WAS OVERLAID BY THE   */\n#define TCBDMPO 0x20                    /* - DUMP OPTIONS WERE PROVIDED ON CALLRTM OR SETRP     */\n#define TCBSTCC 0x10                    /* - COMPLETION CODE IS NOT TO BE STORED IN TCBCMPC     */\n#define TCBNOCC 0x10                    /* - A COMPLETION CODE WAS NOT PROVIDED ON CALLRTM      */\n#define TCBCDBL 0x08                    /* - A DOUBLE ABEND HAS OCCURRED (OS/VS1)               */\n#define TCBCASID 0x08                   /* - ABEND WAS SCHEDULED VIA CROSS MEMORY ABTERM        */\n#define TCBCWTO 0x04                    /* - A DUMP MESSAGE (WTO) IS TO BE ISSUED TO THE        */\n#define TCBRV316 0x04                   /* - INDICATES REASON CODE (TCBARC) IS VALID            */\n#define TCBCIND 0x02                    /* - ABEND TO OUTPUT AN INDICATIVE DUMP  (OS/VS1)       */\n#define TCBCMSG 0x01                    /* - AN ABEND MESSAGE IS PROVIDED TO BE PRINTED BY      */\n#define TCBMOD91 0x80                   /* - BOTH TESTRAN AND DECIMAL SIMULATOR ON A MOD 91     */\n#define TCBNOCHK 0x40                   /* - SUPPRESS TAKING CHECKPOINTS FOR THIS STEP          */\n#define TCBGRPH 0x20                    /* - GAM/SP ACTIVE FOR THIS TASK                        */\n#define TCBTCPP 0x08                    /* - TCAM POST-PENDING  (RORI)                          */\n#define TCBTCP 0x04                     /* - TEST TASK - USED BY TEST SVC                       */\n#define TCBOLTEP 0x02                   /* - OLTEP FUNCTIONS REQUIRE CLEANUP BEFORE ABNORMAL    */\n#define TCBFLAG 0xF0                    /* - STORAGE PROTECTION KEY                             */\n#define TCBZERO 0x0F                    /* - MUST BE ZERO                                       */\n#define TCBFA 0x80                      /* - MAY BE ON WHEN A TASK IS BEING ABNORMALLY   @L6C   */\n#define TCBFE 0x40                      /* - ON WHEN THE SYSTEM IS CALLING RESOURCE      @L6C   */\n#define TCBFERA 0x20                    /* - ENTER ABEND ERASE ROUTINE WHEN IN CONTROL AGAIN    */\n#define TCBNONPR 0x10                   /* - TASK IS NON-PREEMPTABLE                            */\n#define TCBPDUMP 0x08                   /* - PREVENT DUMP INDICATOR                             */\n#define TCBFT 0x04                      /* - TOP TASK IN TREE BEING ABTERMED                    */\n#define TCBFS 0x02                      /* - ABTERM DUMP COMPLETED                              */\n#define TCBFX 0x01                      /* - PROHIBIT QUEUEING OF ASYNCHRONOUS EXITS FOR        */\n#define TCBFOINP 0x80                   /* - THE TASK IS ABENDING AND IS IN THE PROCESS OF      */\n#define TCBFSTI 0x40                    /* - SECOND JOB STEP INTERVAL HAS EXPIRED               */\n#define TCBFABOP 0x20                   /* - IF 1, THE SYSABEND DUMP DATA SET HAS BEEN OPENED   */\n#define TCBFSMC 0x10                    /* - TASK HAS ISSUED A SYSTEM-MUST-COMPLETE AND SET     */\n#define TCBFJMC 0x08                    /* - TASK HAS ISSUED A STEP-MUST-COMPLETE AND TURNED    */\n#define TCBFDSOP 0x04                   /* - SYSABEND OPEN FOR JOB STEP                         */\n#define TCBFETXR 0x02                   /* - ETXR TO BE SCHEDULED                               */\n#define TCBFTS 0x01                     /* - THIS TASK IS A MEMBER OF A TIME-SLICED GROUP       */\n#define TCBFSM 0x80                     /* - ALL PSW'S IN SUPERVISOR STATE                      */\n#define TCBRT1S 0x40                    /* - RTM1 HAS INVOKED SLIP FOR A TASK IN EUT MODE.      */\n#define TCBABTRM 0x20                   /* - ABTERM BIT TO PREVENT MULTIPLE ABENDS              */\n#define TCBFXSET 0x10                   /* - TCBFX WAS SET BY STATUS MCSTEP              @04A   */\n#define TCBENQRM 0x02                   /* - ENQ/DEQ RESOURCE MANAGER HAS RECEIVED   @G381P9A   */\n#define TCBDWSTA 0x01                   /* - THIS TASK WAS DETACHED WITH STAE=YES OPTION        */\n#define TCBNDUMP 0x80                   /* - ABDUMP NONDISPATCHABILITY INDICATOR                */\n#define TCBSER 0x40                     /* - SER1 NONDISPATCHABILITY INDICATOR                  */\n#define TCBRQENA 0x20                   /* - I/O RQE'S EXHAUSTED                                */\n#define TCBHNDSP 0x10                   /* - TASK OR JOB STEP IS MOMENTARILY 'FROZEN' UNTIL     */\n#define TCBUXNDV 0x08                   /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n#define TCBRBWF 0x04                    /* - TOP RB IS IN WAIT STATE                 @G50DP9A   */\n#define TCBONDSP 0x01                   /* - TASK TERMINATING AND NONDISPATCHABLE BECAUSE       */\n#define TCBFC 0x80                      /* - TASK TERMINATED                                    */\n#define TCBABWF 0x40                    /* - ABNORMAL WAIT                                      */\n#define TCBUXNDF 0x40                   /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n#define TCBPAGE 0x20                    /* - TASK IS NONDISPATCHABLE DUE TO EXCESSIVE PAGING    */\n#define TCBANDSP 0x10                   /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE IT     */\n#define TCBSYS 0x08                     /* - ANOTHER TASK IS IN SYSTEM-MUST-COMPLETE STATUS     */\n#define TCBSTP 0x04                     /* - ANOTHER TASK IN THIS JOB STEP IS IN                */\n#define TCBFCD1 0x02                    /* - INITIATOR WAITING FOR REGION                       */\n#define TCBPNDSP 0x01                   /* - PRIMARY NONDISPATCHABILITY BIT.   THIS BIT IS      */\n#define TCBJPQF 0x80                    /* - JPQ PURGE FLAG                                     */\n#define TCBTQET 0x80                    /* - IF ZERO, TASK TYPE TQE.                            */\n#define TCBTSTSK 0x80                   /* - SWAPPED TIME SHARING TASK (OS/VS1)                 */\n#define TCBSTPPR 0x40                   /* - TASK SHOULD BE MADE NONDISPATCHABLE VIA TCBSTPP    */\n#define TCBATT 0x20                     /* - TASK SHOULD NOT HAVE ATTENTION EXITS SCHEDULED     */\n#define TCBTIOTG 0x10                   /* - PURGE TGET/TPUT AFTER ATTENTION                    */\n#define TCBSMCP 0x08                    /* - STATUS MCSTEP PENDING,TASK IS SUSPENDED     @L4A   */\n#define TCBDYDSP 0x02                   /* - M195 TASK IS MEMBER OF DYNAMIC DISPATCHING         */\n#define TCBCPUBN 0x01                   /* - FOR M195, ZERO MEANS I/O BOUND AND ONE MEANS       */\n#define TCBSTABE 0x80                   /* - ABEND ENTERED BECAUSE OF ERROR IN STAE             */\n#define TCBQUIES 0x40                   /* - STAE INVOKED PURGE I/O ROUTINE WITH QUIESCE I/O    */\n#define TCB33E 0x20                     /* - A 33E ABEND HAS OCCURRED FOR TASK                  */\n#define TCBPPSUP 0x10                   /* - 1=SUPERVISOR MODE,0=PROBLEM PROGRAM MODE           */\n#define TCBHALT 0x08                    /* - PURGE I/O ROUTINE DID NOT SUCCESSFULLY QUIESCE     */\n#define TCBSYNCH 0x04                   /* - SYNCH ISSUED BY ASIR TO SCHEDULE EXIT ROUTINE      */\n#define TCBSTCUR 0x01                   /* - STAE RECURSION VALID                      ICB443   */\n#define TCBSMFGF 0x80                   /* - IF ZERO, THE TCT CORE TABLE IS NOT TO BE           */\n#define TCBDARTN 0x80                   /* - THE TASK IS TEMPORARILY NONDISPATCHABLE -          */\n#define TNONDISP 0x80                   /* * ALIAS *                                         */\n#define TCBDARPN 0x40                   /* - THE TASK IS PERMANENTLY NONDISPATCHABLE -          */\n#define PNONDISP 0x40                   /* * ALIAS *                                         */\n#define TCBRSTND 0x20                   /* - THE TASK IS TEMPORARILY NONDISPATCHABLE -          */\n#define TCBRSPND 0x10                   /* - THE TASK IS PERMANENTLY NONDISPATCHABLE -          */\n#define TCBDDRND 0x08                   /* - THE TASK IS IN DEVICE ALLOCATION AND DYNAMIC       */\n#define TCBTPSP 0x04                    /* - DISPATCHING OF TCAM TASK MUST BE DELAYED UNTIL     */\n#define TCBPIEND 0x02                   /* - SRB IS TO BE SCHEDULED TO PERFORM PIE/PICA         */\n#define TCBABTIN 0x01                   /* - THE TASK IS TEMPORARILY NONDISPATCHABLE WHILE      */\n#define TCBABD 0x80                     /* - ABDUMP IS PROCESSING  (OS/VS1)                     */\n#define TCBSTPP 0x40                    /* - TASK SET NONDISPATCHABLE BY SETTASK                */\n#define TCBNDSVC 0x20                   /* - TASK IS NONDISPATCHABLE BECAUSE SVC DUMP IS        */\n#define TCBNDTS 0x10                    /* - TASK IS NONDISPATCHABLE BECAUSE IT IS BEING        */\n#define TCBIWAIT 0x08                   /* - TASK IS NONDISPATCHABLE DUE TO AN INPUT WAIT       */\n#define TCBOWAIT 0x04                   /* - TASK IS NONDISPATCHABLE DUE TO AN OUTPUT WAIT      */\n#define TCBDSS 0x02                     /* - DYNAMIC SUPPORT SYSTEM (DSS) HAS SET THIS          */\n#define TCBABE 0x01                     /* - ABEND ROUTINE WAS ENTERED FOR THIS TASK WHILE      */\n#define TCBLJSND 0x80                   /* - TASK IS ABENDING AND NONDISPATCHABLE BECAUSE IT    */\n#define TCBNDNYI 0x40                   /* - RCT TASK IS NONDISPATCHABLE BECAUSE ADDRESS @P4A   */\n#define TCBSRBND 0x20                   /* - TCB NONDISPATCHABLE BECAUSE SRB'S ARE STOPPED      */\n#define TCBSLPER 0x10                   /* - SET NONDISPATCHABLE SO THAT SLIP/PER CAN ALTER     */\n#define TCBS3MR 0x08                    /* - STAGE 3 EXIT EFFECTOR MUST RUN TO SYNCHRONIZE      */\n#define TCBAREQ 0x04                    /* - TSO AUTHORIZED REQUEST PROCESSING ACTIVE           */\n#define TCBNDSMF 0x02                   /* - INDICATES TASK IS STOPPED BECAUSE ITS CPU   @03A   */\n#define TCBNDINT 0x01                   /* - INITIATOR SETS THIS BIT TO PREVENT JOB STEP        */\n#define TCBREC 0x80                     /* - VALID REENTRY TO ABEND IF NON-ZERO VALUE IN        */\n#define TCBOPEN 0x01                    /* - OPEN DUMP DATA SET                        ICB456   */\n#define TCBCLOSD 0x02                   /* - CLOSE DIRECT SYSOUT ON TAPE               ICB456   */\n#define TCBCLOSE 0x03                   /* - CLOSE OPEN DATA SETS                      ICB456   */\n#define TCBCLOSF 0x04                   /* - RESERVED.                                 ICB456   */\n#define TCBGREC 0x05                    /* - GRAPHICS                                  ICB456   */\n#define TCBADUMP 0x07                   /* - ABDUMP                                    ICB456   */\n#define TCBPTAXE 0x08                   /* - PURGE TAXE                                ICB456   */\n#define TCBMESG 0x09                    /* - MESSAGE RECURSION                         ICB456   */\n#define TCBDYNAM 0x0A                   /* - DD-DYNAM TIOT CLEANUP                     ICB456   */\n#define TCBDAMSG 0x0B                   /* - ABEND IS ISSUING A WTOR ASKING WHETHER THE JOB     */\n#define TCBQTIP 0x0C                    /* - PURGE TSO INTERPARTITION POSTS            ICB456   */\n#define TCBTCAMP 0x0D                   /* - PURGE TCAM INTERPARTITION POSTS           ICB456   */\n#define TCBINDRC 0x0E                   /* - INDICATIVE DUMP (LOAD 8 OF ABEND) HAS ABENDED.     */\n#define TCBSAVCD 0x0F                   /* - ASIR RECURSION.  SAVE OLD COMPLETION CODE ICB456   */\n#define TCBTYP1W 0x10                   /* - TYPE 1 MESSAGE WRITE TO PROGRAMMER        ICB456   */\n#define TCBWTPSE 0x20                   /* - WRITE-TO-PROGRAMMER (WTP) FAILED.  JOB STEP        */\n#define TCBVTAM1 0x21                   /* - ABEND IS ENTERING FIRST VTAM INTERFACE,            */\n#define TCBVTAM2 0x22                   /* - ABEND IS ENTERING SECOND VTAM INTERFACE,           */\n#define TCBVTAM3 0x23                   /* - ABEND IS ENTERING FIRST VTAM INTERFACE,            */\n#define TCBVTAM4 0x24                   /* - ABEND IS ENTERING SECOND VTAM INTERFACE,           */\n#define TCBNOSTA 0x30                   /* - STAE/STAI NOT TO BE HONORED               ICB456   */\n#define TCBSTRET 0x31                   /* - RETURN FROM DUMP PROCESSING               ICB456   */\n#define TCBCONVR 0x32                   /* - CONVERT TO STEP ABEND                     ICB456   */\n#define TCBDARET 0x33                   /* - RETURN FROM DAMAGE ASSESSMENT ROUTINES    ICB456   */\n#define TCBTYP1R 0x34                   /* - RETURN FROM TYPE 1 MESSAGE MODULE         ICB456   */\n#define TCBNEWRB 0x35                   /* - ABEND ISSUED SVC 13 TO TRANSFER CONTROL (XCTL)     */\n#define TCBMCCNS 0x40                   /* - A MUST COMPLETE TASK HAS ABNORMALLY TERMINATED     */\n#define TCBRV 0x80                      /* - THE PARTITION IS FIXED IN REAL STORAGE.  VIRTUAL   */\n#define TCBPIE17 0x40                   /* - PAGE FAULT INTERRUPT IS TO BE PASSED TO THE        */\n#define TCBCPU 0x20                     /* - TASK IS CPU-BOUND MEMBER OF AUTOMATIC PRIORITY     */\n#define TCBSPVLK 0x10                   /* - TASK SCHEDULED FOR ABTERM WHILE OWNING             */\n#define TCBMIGR 0x04                    /* - REGION SELECTED FOR MIGRATION FROM PRIMARY         */\n#define TCBAPG 0x02                     /* - TASK IS IN AUTOMATIC PRIORITY GROUP (APG)          */\n#define TCBNTJS 0x01                    /* - JOB STEP TASK BUT NOT HIGHEST IN FAILING TREE      */\n#define TCBGPECB 0x80                   /* - TASK IS IN AN ECB WAIT FOR A GETPART               */\n#define TCBSVCSP 0x20                   /* - IF 1, SVC SCREENING IS TO BE PROPAGATED TO         */\n#define TCBSTACK 0x10                   /* - SET IN JOB STEP TCB TO INDICATE THAT A TASK IN     */\n#define TCBSVCS 0x08                    /* - IF 1, SVC SCREENING IS REQUIRED FOR THE TASK.      */\n#define TCBRSTSK 0x04                   /* - RESIDENT SYSTEM TASK                               */\n#define TCBADMP 0x02                    /* - ALL OTHER TASKS IN JOB STEP HAVE BEEN SET          */\n#define TCBGTOFM 0x01                   /* - GENERALIZED TRACE FACILITY (GTF) TRACING HAS       */\n#define TCBDARP 0x80                    /* - PRIMARY DAR RECURSION.  DAR HAS BEEN ENTERED FOR   */\n#define TCBDARS 0x40                    /* - SECONDARY DAR RECURSION.  IF DAR IS REENTERED,     */\n#define TCBDARD 0x20                    /* - A DUMP HAS BEEN REQUESTED FOR A WRITER OR          */\n#define TCBDARC 0x10                    /* - RECURSION PERMITTED IN CLOSE -                     */\n#define TCBDARMC 0x10                   /* - DAR HAS BEEN ENTERED TO HANDLE A VALID RECURSION   */\n#define TCBDARO 0x08                    /* - SYSTEM ERROR TASK IS FAILING.  DAR DUMP SHOULD     */\n#define TCBDARWT 0x04                   /* - A WTO OPERATION WITH A 'REINSTATEMENT FAILURE'     */\n#define TCBDARMS 0x02                   /* - WTO OPERATION WITH A 'DAR IN PROGRESS' MESSAGE     */\n#define TCBEXSVC 0x01                   /* - THE DUMP SVC ROUTINE IS EXECUTING FOR THIS TASK    */\n#define TCBNSSQA 0x80                   /* - NORMAL STACK SAVED IN SQA INDICATOR.    @G38CPXB   */\n#define TCBPAGID 255                    /* -   ID FOR PAGING SUPERVISOR TASK             ICB403   */\n#define TCBSYERR 254                    /* -   ID FOR SYSTEM ERROR TASK                  ICB403   */\n#define TCBCOMM 253                     /* -   ID FOR COMMUNCIATIONS TASK                ICB403   */\n#define TCBIORMS 252                    /* -   ID FOR I/O RMS TASK                       ICB403   */\n#define TCBMASTR 251                    /* -   ID FOR MASTER SCHEDULER TASK              ICB403   */\n#define TCBJES 250                      /* -   ID FOR JOB ENTRY SUBSYSTEM (JES) MONITOR TASK      */\n#define TCBDSSID 249                    /* -   ID FOR DYNAMIC SUPPORT SYSTEM (DSS) TASK  ICB403   */\n#define TCBLOGID 248                    /* -   ID FOR SYSTEM LOG TASK                             */\n#define TCBDYING 0x80                   /* - IF ON, INDICATES THAT THE SYSTEM HAS        @P1A   */\n#define TCBACTIV 0x80                   /* - BIT ON MEANS THIS TCB IS CURRENTLY ACTIVE ON A     */\n#define TCBS3A 0x40                     /* - STAGE 3 EXIT EFFECTOR/RESUME/TCTL INTERSECT FLAG   */\n#define TCBLLREQ 0x20                   /* - TASK REQUESTED LOCAL LOCK               @G50DP9A   */\n#define TCBTDORM 0x08                   /* - TURNED ON TO DETECT DORMANT TASKS BY        @06A   */\n#define TCBCMLF 0x80                    /* - CML RESOURCE MANAGER PROCESSING         @G381P9A   */\n#define TCBLLNEW 0x40                   /* - LOCK MANAGER HAS GIVEN THIS TASK THE LOCAL  @L5A   */\n#define TCBETERM 0x80                   /* - ESTAE EXIT ENTERED WITH TERM OPTION                */\n#define TCBSTAFX 0x40                   /* - SERIALIZED BY TCB ACTIVE                @ZA30005   */\n#define TCBEOTFM 0x80                   /* - END OF TASK FLAG FOR FREEMAIN.  SET TO 1 BY TASK   */\n#define TCBRTM1E 0x40                   /* - RTM1 IS CURRENTLY PROCESSING EUT FRR'S  @G381PXU   */\n#define TCBNDIOS 0x20                   /* - TASK HAS BEEN SET NONDISPATCHABLE VIA STATUSND     */\n#define TCBPGNLY 0x10                   /* - SET BY RTM2 TO INDICATE ONLY PURGE PHASE TO BE     */\n#define TCBRTM2 0x08                    /* - SET BY RTM2 TO INDICATE RTM2 HAS BEEN ENTERED      */\n#define TCBEOT 0x04                     /* - SET BY RTM2 TO INDICATE TO EXIT THAT END OF TASK   */\n#define TCBSATTN 0x02                   /* - SYNCHRONIZATION OF ATTENTION INTERRUPT REQUIRED    */\n#define TCBLLH 0x01                     /* - TASK WAS INTERRUPTED HOLDING THE LOCAL LOCK.       */\n#define TCBCNCB 0x80                    /* - SET BY RTM2 IN THE JOB STEP TCB WHEN IT HAS BEEN   */\n#define TCBFMW 0x40                     /* - MOTHER WAITING FLAG.  TURNED ON IN A SUBTASK IN    */\n#define TCBFDW 0x20                     /* - DAUGHTER WAITING FLAG.  TURNED ON IN A MOTHER      */\n#define TCBFPRAP 0x10                   /* - SET BY RTM2 TO PREVENT PERCOLATION TO THE TASK     */\n#define TCBRT1NR 0x08                   /* - IF 1, ERROR PROPAGATED FROM RTM1 IS         @D1A   */\n#define TCBECBNV 0x04                   /* - IF 1, ECB POINTED TO BY TCBECB IS NOT TO BE        */\n#define TCBSSPC 0x02                    /* - STATUS STOP PENDING,TASK HOLDS A CML LOCK          */\n#define TCBRTM1C 0x01                   /* - A TASK WITH EUT FRRS HAS BEEN CANCELLED. THIS      */\n#define TCBEXP 0x80                     /* - EXPANDED VERSION OF THE TCB             @ZA72701   */\n#define TCBNCTL 0x40                    /* - IF 1, INDICATES USER PROGRAM IS LOADED  @ZA84893   */\n#define TCBRTMDE 0x20                   /* - DETACH HAS BEEN CALLED BY RTM           @ZA93650   */\n#define TCBPMC 0x80                     /* - IF 1, INDICATES TASK IS IN PROCESS MUST     @D2C   */\n#define TCBNOJLB 0x40                   /* - IF 1, INDICATES THAT TCBJLB IS NOT TO BE USED      */\n#define TCBPVICT 0x80                   /* - IF 1, INDICATES THAT THE ASSOCIATED TASK    @05M   */\n#define TCBPKING 0x40                   /* - IF 1, INDICATES THAT THE ASSOCIATED TASK HAS       */\n#define TCBPCAND 0x20                   /* - IF 1, INDICATES THAT THIS TASK HAS REQUESTED       */\n#define TCBPTOP 0x10                    /* - IF 1, INDICATES THAT THIS TASK IS AT THE TOP       */\n#define TCBVS02A 0x02                   /* - JBB2110 (NOT IN BASE)                   @ZA72701   */\n#define TCBVS02B 0x02                   /* - JBB2125                                 @ZA72701   */\n#define TCBVS03 0x03                    /* - JBB2133                                     @H1A   */\n#define TCBVERS 0x03                    /* - LEVEL OF THIS MAPPING                       @H1C   */\n#define TCBASYNC 0x80                   /* - GTF ASYNCHRONOUS GATHER ROUTINE IS IN CONTROL      */\n#define TCBERRTN 0x40                   /* - GTF ASYNCHRONOUS GATHER ERROR ROUTINE IS IN        */\n#define TCBDSPIT 0x20                   /* - MACHINE CHECK INTERRUPTION HANDLER SHOULD          */\n#define TCBRCVRY 0x80                   /* - TASK IS IN RECOVERY.                    @G381P9A   */\n\nstruct TIOT1\n\u00e4\n/*                   %TIOTL1 : ;                                                            */\n/*                                                                                          */\n/*                     * START OF SPECIFICATIONS ***************************************    */\n/*                                 TASK INPUT/OUTPUT TABLE                                  */\n/*                                                                                          */\n/*                     01* MACRO NAME: IEFTIOT1                                             */\n/*                                                                                          */\n/*                     01* DESCRIPTIVE-NAME: TASK INPUT/OUTPUT TABLE                        */\n/*                                                                                          */\n/*                     01* EXTERNAL CLASSIFICATION:                                         */\n/*                         DMTI: BASE                                                       */\n/*                         GUPI: FIELDS                                                     */\n/*                         TIOCNJOB TIOCSTEP TIOCSTPN TIOCPSTN TIOCJSTN                     */\n/*                         TIOEDDNM TIOEJFCB TIOEFSRT TIOELNGH TIOEWTCT                     */\n/*                                                                                          */\n/*                     01* END OF EXTERNAL CLASSIFICATION:                                  */\n/*                                                                                          */\n/*                     01* PROPRIETARY STATEMENT=                                           */\n/*                     **PROPRIETARY_STATEMENT*******************************************   */\n/*                                                                                          */\n/*                                                                                          */\n/*                      LICENSED MATERIALS - PROPERTY OF IBM                                */\n/*                      THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                         */\n/*                      5645-001 (C) COPYRIGHT IBM CORP. 1980,1996                          */\n/*                                                                                          */\n/*                      STATUS= JBB6602                                                     */\n/*                                                                                          */\n/*                     **END_OF_PROPRIETARY_STATEMENT************************************   */\n/*                                                                                          */\n/*                     01* DSECT NAME:                                                      */\n/*                         NO DSECT CARD PUT OUT BY MACRO. TIOT1 MAY BE USED IN THE         */\n/*                         USING STATEMENT.                                                 */\n/*                                                                                          */\n/*                     01* COMPONENT = ALLOCATION/UNALLOCATION (SC1B4)                      */\n/*                                                                                          */\n/*                     01* EYE CATCHER = NONE                                               */\n/*                     02*   OFFSET = N/A                                                   */\n/*                     02*   LENGTH = N/A                                                   */\n/*                                                                                          */\n/*                     01* STORAGE ATTRIBUTES =                                             */\n/*                                                                                          */\n/*                                                                                          */\n/*                     01* SIZE: VARIABLE (INSTALLATION DEFINED)                            */\n/*                     01*   MAIN STORAGE = NO                                              */\n/*                     01*   VIRTUAL STORAGE = YES                                          */\n/*                     01*   DATA SPACE = NO                                                */\n/*                     01*   SUBPOOL = 237 (OBTAINED FROM JSCBSWSP)                  @P2C   */\n/*                     01*   KEY = 1                                                        */\n/*                     01*   RESIDENCY = BELOW (NORMAL TIOT) OR ABOVE (XTIOT) 16M           */\n/*                     01*   FREQUENCY = ONE PER JOBSTEP                                    */\n/*                                                                                          */\n/*                     01* CREATED BY: DEVICE ALLOCATION                                    */\n/*                                                                                          */\n/*                     01* POINTED TO BY:                                                   */\n/*                      TCBTIO FIELD OF THE TCB DATA AREA                            @P2A   */\n/*                      DCBTIOT FIELD OF THE DCB DATA AREA                                  */\n/*                      DSABTIOT FIELD OF THE DSAB DATA AREA (DD ENTRY TIOT)                */\n/*                      JCTSTIOT FIELD OF THE JCT DATA AREA                                 */\n/*                      SMCATIOT FIELD OF THE SMCA DATA AREA (MASTER SCHEDULER TIOT)        */\n/*                     01* SERIALIZATION: ENQ ON SYSZTIOT                                   */\n/*                                                                                          */\n/*                     01* FUNCTION: PROVIDES THE I/O SUPPORT ROUTINES WITH POINTERS        */\n/*                         TO JFCBS AND TO ALLOCATED DEVICES.                               */\n/*                                                                                          */\n/*                     02* -  EACH DD STATEMENT, WHETHER IT IS A MEMBER OF A         @P2A   */\n/*                            CONCATENATION OR NOT, HAS ITS OWN TIOT DD ENTRY. THERE @P2A   */\n/*                            WILL BE ONE DD STATEMENT FOR EACH GDG DATA SET FOR A   @P2A   */\n/*                            GDGALL REQUEST.                                        @P2A   */\n/*                                                                                          */\n/*                     02* -  WITHIN EACH DD ENTRY THERE WILL BE ONE DEVICE ENTRY    @P2A   */\n/*                            FOR EACH DEVICE ALLOCATED TO THAT DD STATEMENT.        @P2A   */\n/*                            SINGLE DEVICE DOES NOT ALWAYS MEAN \"NOT A MULTI-VOLUME\"@P2A   */\n/*                            DATA SET.  FOR PERMRES DEVICES (E.G., D/T3390), DEVICE @P2A   */\n/*                            AND VOLUME ARE SYNONYMOUS.  HOWEVER, FOR TAPE REQUESTS @P2A   */\n/*                            DEVICE AND VOLUME ARE NOT SYNONYMOUS SINCE A TAPE      @P2A   */\n/*                            VOLUME CAN BE MOUNTED ON ANY ONE OF MANY TAPE DEVICES. @P2A   */\n/*                                                                                          */\n/*                     01* METHOD OF ACCESS:                                                */\n/*                           A DSECT CARD SHOULD PRECEDE THE MACRO CALL. USING ON           */\n/*                           TIOT1 GIVES ADDRESSABILITY FOR ALL SYMBOLS.                    */\n/*                     01* METHOD OF PL/S ACCESS:                                           */\n/*                           PL/S - DCL TIOTPTR PTR                                         */\n/*                                                                                          */\n/*                       DEPENDENCY - ANY CHANGES TO THE TIOENTRY STRUCTURE OF THIS  @L0A   */\n/*                                    MAPPING SHOULD BE REFLECTED IN THE IPCS        @L0A   */\n/*                                    MODEL IEFMTIOE.                                @L0A   */\n/*                                                                                          */\n/*                       CHANGE ACTIVITY - L0                                               */\n/*                        $L0= DDPERF   HBB4420 900406 PDDS: DDLPERFIPCS DD LIMIT           */\n/*                                                                       PERFORMANCE @L0A   */\n/*                        $P1= PSD0454  JBB6602 950921 PDXB: FIX TIOEJFCB COMMENT,   @P1A   */\n/*                                                           ADD TIOCSTEP SUBFIELDS. @P1A   */\n/*                        $P2= PSD0771  JBB6602 960208 PDNN: UPDATES TO THE PROLOG   @P2A   */\n/*                                                                                          */\n/*                      ****************************************************************    */\n/*                      C - ADDED TCBTIO UNDER POINTED TO BY AND ADDED ADDITIONAL    @P2A   */\n/*                          EXPLANATIONS ON TIOT ENTRIES.                            @P2A   */\n/*                      C - CHANGE COMMENT ON TIOEJFCB. ADD SUBFIELDS TO TIOCSTEP.   @P1A   */\n/*                      A - ADD DEPENDENCY NOTE FOR IPCS TIOT ENTRY CONTROL BLOCK    @L0A   */\n/*                          MODEL                                                    @L0A   */\n/*                     ** END OF SPECIFICATIONS ****************************************    */\n/*                                                                                          */\n/*                   %GOTO TIOTL2;                                                          */\n  //int _f0\u00c40\u00dc;                         /* */\n  CL8 tiocnjob;                         /*  -         JOB NAME                                  */\n  //CL16 tiocstep\u00c40\u00dc;                   /* -         STEP INFORMATION                    @P1C  */\n  //CL8 tiocstpn\u00c40\u00dc;                    /*  -         8-BYTE STEP NAME FOR NON-PROCS      @P1A  */\n  CL8 tiocpstn;                         /*   -         8-BYTE PROC STEP NAME FOR PROCS     @P1A  */\n  CL8 tiocjstn;                         /*   -         8-BYTE JOBSTEP NAME FOR PROCS       @P1A  */\n/*                   ********************************************************************** */\n/*                                                                                        * */\n/*                      DD ENTRY                                                          * */\n/*                                                                                        * */\n/*                           THERE IS A 16-BYTE DD ENTRY FOR EACH DD STATEMENT IN THE     * */\n/*                           JOB STEP OR PROCEDURE STEP.  (REFERENCES TO GDG (ALL) DATA   * */\n/*                           SETS, THE JOBLIB DATA SET OR PGM=*.DDNAME CREATE STILL       * */\n/*                           OTHER DD ENTRIES.)                                           * */\n/*                                                                                        * */\n/*                           A DD ENTRY INCLUDES A DEVICE ENTRY.  BEFORE ALLOCATION,      * */\n/*                           THERE MAY BE SEVERAL DEVICE ENTRIES IN EACH DD ENTRY.        * */\n/*                                                                                        * */\n/*                   ********************************************************************** */\n#define TIOENTRY 24                     /* -            TIODDPTR                                  */\n  signed char tioelngh;                 /* -          LENGTH, IN BYTES, OF THIS ENTRY           */\n/*                                                (INCLUDING ALL DEVICE ENTRIES)            */\n  char tioestta;                        /* -            STATUS BYTE A                             */\n#define TIOSLTYP 0x80                   /* -        NONSTANDARD LABEL (TAPE) (OS/VS1)         */\n/*                                                FREED TIOT ENTRY (OS/VS2)        @ZA45994 */\n#define TIOSPLTP 0x40                   /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n/*                                                PRIMARY.  (THIS IS THE FIRST DD ENTRY FOR */\n/*                                                A SPLIT CYLINDER.)                        */\n/*                                                DURING STEP TERMINATION, NO UNALLOCATION  */\n/*                                                NECESSARY.                                */\n#define TIOSPLTS 0x20                   /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n/*                                                SECONDARY.  (THIS IS NOT THE FIRST DD     */\n/*                                                ENTRY FOR A SPLIT CYLINDER.)              */\n/*                                                DURING STEP TERMINATION, REWIND BUT NO    */\n/*                                                UNLOADING.                                */\n#define TIOSJBLB 0x10                   /* -        JOBLIB INDICATOR                          */\n#define TIOSDADS 0x08                   /* -        DADSM ALLOCATION NECESSRY                 */\n#define TIOSLABL 0x04                   /* -        LABELED TAPE.  IF BIT 0 IS OFF, SL OR     */\n/*                                                SUL.  IF BIT 0 IS ALSO ON, AL OR AUL.     */\n#define TIOSDSP1 0x02                   /* -        REWIND/UNLOAD THE TAPE VOLUME (TAPE)      */\n/*                                                PRIVATE VOLUME (DIRECT ACCESS)     MDC001 */\n#define TIOSDSP2 0x01                   /* -        REWIND THE TAPE VOLUME (TAPE)             */\n/*                                                PUBLIC VOLUME (DIRECT ACCESS)      MDC002 */\n  //CL2 tioerloc\u00c40\u00dc;                    /* -         RELATIVE LOCATION OF POOL                 */\n  char tioewtct;                        /* -          DURING ALLOCATION, NUMBER OF DEVICES      */\n/*                                                REQUESTED FOR THIS DATA SET               */\n  char tioelink;                        /* -          DURING ALLOCATION, LINK TO THE            */\n/*                                                APPROPRIATE PRIME SPLIT, UNIT AFFINITY,   */\n/*                                                VOLUME AFFINITY OR SUBALLOCATE TIOT       */\n/*                                                ENTRY.  AFTER ALLOCATION, FLAG BYTE.      */\n#define TIOSYOUT 0x80                   /* -        THIS IS A SYSOUT DATA SET THAT CONTAINS   */\n/*                                                DATA (AFTER CLOSE)                        */\n#define TIOTRV01 0x40                   /* -        RESERVED                           MDC006 */\n#define TIOTTERM 0x20                   /* -        DEVICE IS A TERMINAL                      */\n#define TIOEDYNM 0x10                   /* -        DYNAM CODED ON DD STATEMENT               */\n#define TIOEQNAM 0x08                   /* -        QNAME CODED ON DD STATEMENT               */\n#define TIOESYIN 0x04                   /* -        ENTRY FOR SPOOLED SYSIN DATA SET          */\n/*                                                (OS/VS1)                           MDC003 */\n#define TIOESYOT 0x02                   /* -        ENTRY FOR SPOOLED SYSOUT DATA SET         */\n/*                                                (OS/VS1)                           MDC004 */\n#define TIOESSDS 0x02                   /* -        ENTRY FOR A SUBSYSTEM DATA SET            */\n/*                                                (OS/VS2)                           MDC005 */\n#define TIOTREM 0x01                    /* -        ENTRY FOR A REMOTE DEVICE          ICB340 */\n  CL8 tioeddnm;                         /* -          DD NAME                                   */\n  CL3 tioejfcb;                         /* -          SWA VIRTUAL ADDRESS TOKEN, MAPPED         */\n/*                                                BY SWAREQ MACRO. REFER TO THAT MACRO FOR  */\n/*                                                FURTHER INFORMATION.                 @P1C */\n  char tioesttc;                        /* -            STATUS BYTE C.  USED DURING ALLOCATION    */\n/*                                                ONLY.  SET TO ZEROS AT END OF ALLOCATION. */\n#define TIOSDKCR 0x80                   /* -        MAIN STORAGE OR DASD ADDRESS              */\n#define TIOSDEFR 0x40                   /* -        DEFERRED MOUNT                            */\n#define TIOSAFFP 0x20                   /* -        PRIMARY UNIT AFFINITY                     */\n#define TIOSAFFS 0x10                   /* -        SECONDARY UNIT AFFINITY                   */\n#define TIOSVOLP 0x08                   /* -        PRIMARY VOLUME AFFINITY                   */\n#define TIOSVOLS 0x04                   /* -        SECONDARY VOLUME AFFINITY                 */\n#define TIOSBALP 0x02                   /* -        PRIMARY SUBALLOCATE                       */\n#define TIOSBALS 0x01                   /* -        SECONDARY SUBALLOCATE                     */\n/*                   ********************************************************************** */\n/*                                                                                        * */\n/*                      DEVICE ENTRIES                                                    * */\n/*                                                                                        * */\n/*                         1. DURING ALLOCATION -                                         * */\n/*                                   ONE DEVICE ENTRY FOR EACH DEVICE REQUIRED, OR FOR    * */\n/*                                   EACH PUBLIC DEVICE ELIGIBLE.                         * */\n/*                                                                                        * */\n/*                         2. DURING PROBLEM PROGRAM -                                    * */\n/*                                   ONE DEVICE ENTRY FOR EACH ALLOCATED DEVICE.          * */\n/*                                                                                        * */\n/*                   ********************************************************************** */\n  char tioesttb;                        /* -            STATUS BYTE B - DURING ALLOCATION AND     */\n/*                                                DURING PROBLEM PROGRAM                    */\n#define TIOSUSED 0x80                   /* -        DATA SET IS ON DEVICE                     */\n#define TIOSREQD 0x40                   /* -        DATA SET WILL USE DEVICE                  */\n#define TIOSPVIO 0x20                   /* -        DEVICE VIOLATES SEPARATION                */\n#define TIOSVLSR 0x10                   /* -        VOLUME SERIAL PRESENT                     */\n#define TIOSSETU 0x08                   /* -        SETUP MESSAGE REQUIRED                    */\n#define TIOSMNTD 0x04                   /* -        IF 0, DELETE UNLOADED VOLUME IF UNLOAD    */\n/*                                                REQUIRED.  IF 1, RETAIN UNLOADED VOLUME   */\n/*                                                IF UNLOAD REQUIRED.                       */\n#define TIOSUNLD 0x02                   /* -        UNLOAD REQUIRED                           */\n#define TIOSVERF 0x01                   /* -        VERIFICATION REQUIRED                     */\n  AL3 tioefsrt;                         /* -          DURING PROBLEM PROGRAM, ADDRESS OF UCB.   */\n/*                                                DURING ALLOCATION, BITS 0-11 CONTAIN      */\n/*                                                OFFSET, IN THE UCB LOOK-UP TABLE, TO AN   */\n/*                                                ADDRESS FOR A DEVICE REQUIRED OR ELIGIBLE */\n/*                                                FOR THIS DATA SET.  THE UCB LOOK-UP TABLE */\n/*                                                HAS ADDRESSES OF UCB'S.  BITS 12-23       */\n/*                                                CONTAIN OFFSET, IN THE STEP VOLUME TABLE  */\n/*                                                (VOLT), TO THE VOLUME SERIAL NUMBER FOR   */\n/*                                                THE VOLUME REQUIRED OR ELIGIBLE FOR THIS  */\n/*                                                DATA SET.                                 */\n/*                           TIOT POOL ENTRY                                                */\n#define POOLSTAR 44                     /* */\n  char _f1;                             /* -          RESERVED                                  */\n  signed char tiopnslt;                 /* -          NUMBER OF SLOTS FOR POOL                  */\n  char _f2;                             /* -          RESERVED                                  */\n  signed char tiopnsrt;                 /* -          NUMBER OF DEVICES (FILLED SLOTS)          */\n  CL8 tioppool;                         /* -          POOL NAME                                 */\n  char tiopsttb;                        /* -          STATUS OF SLOT                            */\n  AL3 tiopslot;                         /* -          UCB ADDRESS OR EMPTY SLOT                 */\n  CL4 tiotfend;                         /* -          FINAL END OF THE TIOT - BINARY ZEROS      */\n/*                   %JSCBL1 : ;                                                            */\n/*                                                                                          */\n/*                      START OF SPECIFICATIONS *****************************************   */\n/*                                                                                          */\n/*                     01* MACRO NAME:  IEZJSCB                                      @L1C   */\n/*                                                                                          */\n/*                     01* DESCRIPTIVE NAME:  JOB/STEP CONTROL BLOCK                        */\n/*                                                                                          */\n/*                     02*  ACRONYM:  JSCB                                                  */\n/*                                                                                          */\n/*                     01* PROPRIETARY STATEMENT=                                           */\n/*                     **PROPRIETARY_STATEMENT*******************************************   */\n/*                                                                                          */\n/*                                                                                          */\n/*                      LICENSED MATERIALS - PROPERTY OF IBM                                */\n/*                      THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                         */\n/*                      5647-A01 (C) COPYRIGHT IBM CORP. 1979, 1998                         */\n/*                                                                                          */\n/*                      STATUS= HBB6606                                                     */\n/*                                                                                          */\n/*                     **END_OF_PROPRIETARY_STATEMENT************************************   */\n/*                                                                                          */\n/*                     01* DSECT NAME:                                                      */\n/*                          IEZJSCB                                                         */\n/*                                                                                          */\n/*                     01* COMPONENT:  INITIATOR (SC1B6)                                    */\n/*                                                                                          */\n/*                     01* EYE-CATCHER:  NONE                                               */\n/*                                                                                          */\n/*                     01* STORAGE ATTRIBUTES:                                              */\n/*                     02*  SUBPOOL:  253                                                   */\n/*                     02*  KEY:  0                                                         */\n/*                     02*  RESIDENCY:  BELOW 16 MB IN VIRTUAL STORAGE.                     */\n/*                                                                                          */\n/*                     01* SIZE:  192 BYTES                                                 */\n/*                                                                                          */\n/*                     01* CREATED BY:                                                      */\n/*                          IEESB601                                                        */\n/*                          IEESB606                                                        */\n/*                          IEFIB600                                                        */\n/*                                                                                          */\n/*                     01* POINTED TO BY:                                                   */\n/*                          TCBJSCB FIELD OF DATA AREA TCB                                  */\n/*                          JSCBACT FIELD OF DATA AREA JSCB (ACTIVE JSCB)                   */\n/*                                                                                          */\n/*                     01* SERIALIZATION:                                                   */\n/*                          NONE REQUIRED                                                   */\n/*                                                                                          */\n/*                     01* FUNCTION:                                                        */\n/*                     02*  COMMUNICATION OF JOB OR STEP RELATED DATA ITEMS.  THIS IS       */\n/*                          THE BASE FOR THE JOB STEP ENVIRONMENT, IN PARTICULAR SWA        */\n/*                          AND ALLOCATION.                                                 */\n/*                                                                                          */\n/*                     01* METHOD OF ACCESS:                                                */\n/*                     02*  ASM:    L     REG,TCBJSCB                                       */\n/*                                  USING IEZJSCB,REG                                       */\n/*                                                                                          */\n/*                                  WHERE REG IS ANY REGISTER OTHER THAN ZERO GIVES         */\n/*                                  ADDRESSABILITY FOR ALL SYMBOLS.                         */\n/*                     02*  PL/AS:                                                          */\n/*                                  %INCLUDE SYSLIB(IKJTCB)                          @L1C   */\n/*                                  %INCLUDE SYSLIB(IEZJSCB)                         @L1A   */\n/*                                  SET %IEZJSCB_GENEQU='NO' IF YOU WANT CONSTANTS          */\n/*                                   INSTEAD OF THE GENERATED EQUATES.                      */\n/*                                                                                          */\n/*                     01* DELETED BY: IEFINSWD                                             */\n/*                                                                                          */\n/*                     01* FREQUENCY: ONE PER 'JOB STEP ENVIRONMENT'                        */\n/*                                                                                          */\n/*                     01* EXTERNAL CLASSIFICATION:                                  @P4A   */\n/*                     02*    DMTI:  BASE                                                   */\n/*                     02*    PSPI:  FIELDS                                                 */\n/*                                                                                          */\n/*                              JSCBPASS                                                    */\n/*                              JSCBAUTH                                                    */\n/*                     02*    GUPI:  FIELDS                                                 */\n/*                                                                                          */\n/*                              JSCBACT                                                     */\n/*                              JSCBPGMN                                                    */\n/*                              JSCBQMPI                                                    */\n/*                              JSCBSTEP                                                    */\n/*                                                                                          */\n/*                     01* END OF EXTERNAL CLASSIFICATION:                                  */\n/*                                                                                          */\n/*                     01* DEPENDENCIES:                                                    */\n/*                         - CHANGES TO THIS MACRO SHOULD BE REFLECTED IN IPCS              */\n/*                           MODEL IEZMJSCB                                          @L3A   */\n/*                         - SVAS IN THIS MACRO SHOULD BE RESOLVED TO REAL ADDRESSES        */\n/*                           BY USING SWAREQ                                         @P2A   */\n/*                         - MOST ENVIRONMENTS SHOULD USE PSATOLD -> TCBJSCB -> JCSBACT     */\n/*                           TO LOCATE THE 'ACTIVE JSCB'.                            @P2A   */\n/*                                                                                          */\n/*                     01* NOTES:                                                           */\n/*                          THE JSCB IS ALSO POINTED TO BY THE LCTJSCB FIELD OF DATA        */\n/*                          AREA LCT.                                                       */\n/*                                                                                          */\n/*                     01* DISTRIBUTION LIBRARY:                                            */\n/*                                                                                          */\n/*                       CHANGE ACTIVITY = L1,OZ95568,OY01530,D1,OY19251,L2,L3,T1,01,       */\n/*                                         P4                                        @P4A   */\n/*                      THE ABOVE SECTION OF THE CHANGE ACTIVITY IS NO LONGER UPDATED.      */\n/*                                                                                          */\n/*                      $L1= SMSSTG2 JBB2223 860324 PDT4: STOR MGMT SUBSYS STG2 SUPT @L1A   */\n/*                      $D1= DCR0023 JBB2223 861117 PDFF: DYNAMIC OUTPUT SUPPORT     @D1A   */\n/*                      $T1= OY39346 JBB2223 901001 PDIB: ADDED FIELD JSCBRSWA       @T1A   */\n/*                      $L2= EMVS2   HBB4410 881107 PDKK: CSCB VSCR                  @L2A   */\n/*                      $P1= PEO3967 HBB4410 900328 PDH1: FIXED RESTRICTION LIFTED   @P1A   */\n/*                      $L3= DDPERF  HBB4420 900406 PDDS: DDLPERFIPCS DD LIMIT              */\n/*                                                                    PERFORMANCE    @L3A   */\n/*                      $P2= PKB1814 HBB4430 920429 PDCC: 10X DEFECT ELIMINATION     @P2A   */\n/*                                                        SHOWHDR FORMAT COMPLETE    @P2A   */\n/*                      $01= OY55080 JBB2223 920423 PDIB: DELETED JSCBRSWA           @01A   */\n/*                      $P4= PIG4009 HBB5510 930421 PDJY: CONTINUOUS IMPROVEMENT PTM @P4A   */\n/*                      $P5= PIG4163 HBB5510 930909 PDDZ: CDPI CLEANUP               @P5A   */\n/*                      $L4= PR530   HBB6603 950415 PDXB: PL/X CONSTANTS             @L4A   */\n/*                      $L5= ALLEN   HBB6606 971231 PDNN: DDLIMIT SUPPORT            @L5A   */\n/*                                                                                          */\n/*                           CODE HAS BEEN ADDED FOR THE FOLLOWING SUPPORT                  */\n/*                           CODES: @G860PB2, PCC0915, PCC1264, PCC1510          @ZMC1510   */\n/*                                                                                          */\n/*                       NOTE:                                                              */\n/*                           IN ADDITION TO THE MANDATORY USE OF THIS MACRO FOR             */\n/*                           REFERENCES TO THE JSCB, MODULES IN 0S/VS1 AND OS/VS2 WHICH     */\n/*                           ALLOCATE AND/OR FREE THE JSCB ARE REQUIRED TO USE THE          */\n/*                           GETJSCB AND FREEJSCB MACROS.                                   */\n/*                                                                                          */\n/*                      END OF SPECIFICATIONS *******************************************   */\n/*                      JSCBECB1 - ADDRESS OF THE CANCEL ECB IN THE CSCB WHILE   @ZMC1510   */\n/*                                 THE INITIATOR IS WAITING FOR A REGION. THIS   @ZMC1510   */\n/*                                 IS THE FIRST ECB IN A LIST OF TWO ECBS.       @ZMC1510   */\n/*                      JSCBECB2 - ADDRESS OF THE WAIT FOR REGION ECB WHILE THE  @ZMC1510   */\n/*                                 INITIATOR IS WAITING FOR A REGION. THIS IS    @ZMC1510   */\n/*                                 THE SECOND ECB IN A LIST OF TWO ECBS.         @ZMC1510   */\n/*                              THESE TWO ECBS OCCUPY THE SAME SPACE AS JSCBPGMN @ZMC1510   */\n/*                              SINCE ALL THE FIELDS ARE ONLY USED IN IEFSD263,  @ZMC1510   */\n/*                              AND THE ECBS ARE USED (IF NEEDED) BEFORE THE     @ZMC1510   */\n/*                              THE AREA IS REFERENCED AS JSCBPGMN.              @ZMC1510   */\n/*                      JSCBALOC - ADDRESS OF THE ALLOCATION WORK AREA. THIS     @ZMC1264   */\n/*                                 FIELD WAS MOVED TO PREVIOUSLY RESERVED FIELD  @ZMC1264   */\n/*                                 WHICH REPLACED JSCBSWAB. THIS FIELD WAS AFTER @ZMC1264   */\n/*                                 JSCBJRBA.                                     @ZMC1264   */\n/*                      JSCBSECB - RESTORED. THIS FIELD NEEDS TO BE IN THE JSCB  @ZMC1264   */\n/*                                 WHICH IS FIXED RATHER THAN IN THE LCT WHICH   @ZMC1264   */\n/*                                 WHICH IS PAGEABLE. THE ECB NEEDS TO BE FIXED  @ZMC1264   */\n/*                                 BECAUSE WHILE WAITING FOR A REGION, IF THE    @ZMC1264   */\n/*                                 ECB IS IN PAGEABLE STORAGE IT COULD BE PAGED  @ZMC1264   */\n/*                                 OUT TO GET THE NECESSARY SPACE FOR THE REGION.@ZMC1264   */\n/*                      JSCBALOC - ADDRESS OF THE ALLOCATION WORK AREA. THIS     @ZMC0915   */\n/*                                 FIELD REPLACES THE RESERVED FIELD MADE BY     @ZMC0915   */\n/*                                 THE REMOVAL OF JSCBSECB.                      @ZMC0915   */\n/*                      JSCBSECB - NO LONGER NEEDED. FIELD CHANGED TO RESERVED.  @G860PB2   */\n/*                      JSCRIUCP - ADDRESS OF THE DYNAMIC ALLOCATION             @ZA95568   */\n/*                                 COMMUNICATION TABLE                           @ZA95568   */\n/*                      JSCBASW2 - ADDED POINTER TO THE ALLOCATION STAE WORKAREA     @L1A   */\n/*                      JSCBJESW - ADDED ADDRESS OF A JES WORK AREA IN SUPPORT   @YA01530   */\n/*                                 OF JES3 PTM PB50691                           @YA01530   */\n/*                      JSCBODNO - A COUNTER USED BY DYNAMIC OUTPUT TO GENERATE      @D1A   */\n/*                                 OUTPUT DESCRIPTOR NAMES.                          @D1A   */\n/*                      JSCAMCPL - A DEFINED NEW FIELD TO CONTAIN THE ALLOCATION @YA19251   */\n/*                                 MESSAGE CELLPOOL ID IN SUPPORT OF OY15987     @YA19251   */\n/*                                 REPLACES RESERVED FIELD JSCRSV52.             @YA19251   */\n/*                                                                                   @L2A   */\n/*                      A - ADDED JSCBCSCX FIELD TO STORE AMODE24 EXTENSION OF CSCB  @L2A   */\n/*                      C - JSCBSECB COMMENT BECAUSE REQUIREMENT THAT THE            @P1A   */\n/*                          ECB MUST BE IN FIXED STORAGE HAS BEEN LIFTED AND IS NO   @P1A   */\n/*                          LONGER A REQUIREMENT.                                    @P1A   */\n/*                      A - ADDED DEPENDENCY NOTE FOR IPCS CONTROL BLOCK MODEL       @L3A   */\n/*                      C - CHANGED JSCRIUCP TO JSCRSV34 BECAUSE FIELD IS NO LONGER  @L3A   */\n/*                          USED                                                     @L3A   */\n/*                      JSCBRSWA - A DEFINED NEW FIELD TO INDICATE IF SWA            @T1A   */\n/*                                 ALLOCATIONS AND DELETIONS ARE TO BE ALLOWED       @T1A   */\n/*                      C - CHANGED APPROPRIATE TTRS TO SVAS, REMOVED JSCBTTTR       @P2A   */\n/*                      JSCBRSWA - CHANGED JSCBRSWA TO RESERVED                      @01A   */\n/*                      C - CHANGED BITS JSCBRV04 AND JSCBRV05 TO BE JSCBSJFY AND    @P4A   */\n/*                          JSCBSJFN, RESPECTIVELY.                                  @P4A   */\n/*                      A - CDPI CHANGES                                             @P4A   */\n/*                      C - REMOVED JSCDSABQ FROM LIST OF INTENDED FIELDS            @P5A   */\n/*                      A - ADDED IEZJSCB_GENEQU SUPPORT, SO USERS COULD GET PL/X    @L4A   */\n/*                          CONSTANTS INSTEAD OF GEN'D EQUATES                       @L4A   */\n/*                      C - CHANGED JSCRSV34 TO JSCDSNQP FOR THE DD LIMIT SUPPORT    @L5A   */\n/*                                                                                          */\n/*                   %GOTO JSCBL2;                                                          */\n/*                                                                                          */\n \u00fc;\n\n\n\n\n#define TIOCJSTN                        tiocjstn\n#define TIOCNJOB                        tiocnjob\n#define TIOCPSTN                        tiocpstn\n#define TIOCSTEP                        tiocstep\u00c40\u00dc\n#define TIOCSTPN                        tiocstpn\u00c40\u00dc\n#define TIOEDDNM                        tioeddnm\n#define TIOEFSRT                        tioefsrt\n#define TIOEJFCB                        tioejfcb\n#define TIOELINK                        tioelink\n#define TIOELNGH                        tioelngh\n#define TIOERLOC                        tioerloc\u00c40\u00dc\n#define TIOESTTA                        tioestta\n#define TIOESTTB                        tioesttb\n#define TIOESTTC                        tioesttc\n#define TIOEWTCT                        tioewtct\n#define TIOPNSLT                        tiopnslt\n#define TIOPNSRT                        tiopnsrt\n#define TIOPPOOL                        tioppool\n#define TIOPSLOT                        tiopslot\n#define TIOPSTTB                        tiopsttb\n#define TIOTFEND                        tiotfend\n\n\n\n\n\n\n\n\n/*\nSYMBOL         OFFSET     SIZE     TYPE      C-TYPE               C-NAME\nTIOCJSTN       000010    000008    CL8       CL8                  tiocjstn\nTIOCNJOB       000000    000008    CL8       CL8                  tiocnjob\nTIOCPSTN       000008    000008    CL8       CL8                  tiocpstn\nTIOCSTEP       000008    000000    0CL16     CL16 \u00c40\u00dc           tiocstep\nTIOCSTPN       000008    000000    0CL8      CL8 \u00c40\u00dc            tiocstpn\nTIOEDDNM       00001C    000008    CL8       CL8                  tioeddnm\nTIOEFSRT       000029    000003    AL3       AL3                  tioefsrt\nTIOEJFCB       000024    000003    CL3       CL3                  tioejfcb\nTIOELINK       00001B    000001    CL1       char                 tioelink\nTIOELNGH       000018    000001    FL1       signed char          tioelngh\nTIOERLOC       00001A    000000    0CL2      CL2 \u00c40\u00dc            tioerloc\nTIOESTTA       000019    000001    B         char                 tioestta\nTIOESTTB       000028    000001    B         char                 tioesttb\nTIOESTTC       000027    000001    B         char                 tioesttc\nTIOEWTCT       00001A    000001    CL1       char                 tioewtct\nTIOPNSLT       00002D    000001    FL1       signed char          tiopnslt\nTIOPNSRT       00002F    000001    FL1       signed char          tiopnsrt\nTIOPPOOL       000030    000008    CL8       CL8                  tioppool\nTIOPSLOT       000039    000003    AL3       AL3                  tiopslot\nTIOPSTTB       000038    000001    XL1       char                 tiopsttb\nTIOTFEND       00003C    000004    CL4       CL4                  tiotfend\n\n\n*/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TIOT1DS": {"ttr": 8439, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct tiot1ds \u00e4\n  unsigned char  tiocnjob\u00c48\u00dc;   /* -         JOB NAME                                 */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _tiocpstn\u00c48\u00dc; /* -         8-BYTE PROC STEP NAME FOR PROCS     @P1A */\n      \u00fc tiocstpn;\n    unsigned char  _tiocjstn\u00c48\u00dc; /* -         8-BYTE JOBSTEP NAME FOR PROCS       @P1A */\n    \u00fc tiocstep;\n  char           tioelngh;      /* -          LENGTH, IN BYTES, OF THIS ENTRY         */\n  int            tiosltyp  : 1, /* -        NONSTANDARD LABEL (TAPE) (OS/VS1)         */\n                 tiospltp  : 1, /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n                 tiosplts  : 1, /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n                 tiosjblb  : 1, /* -        JOBLIB INDICATOR                          */\n                 tiosdads  : 1, /* -        DADSM ALLOCATION NECESSRY                 */\n                 tioslabl  : 1, /* -        LABELED TAPE.  IF BIT 0 IS OFF, SL OR     */\n                 tiosdsp1  : 1, /* -        REWIND/UNLOAD THE TAPE VOLUME (TAPE)      */\n                 tiosdsp2  : 1; /* -        REWIND THE TAPE VOLUME (TAPE)             */\n  struct \u00e4\n    unsigned char  _tioewtct; /* -          DURING ALLOCATION, NUMBER OF DEVICES */\n    unsigned char  _tioelink; /* -          DURING ALLOCATION, LINK TO THE       */\n    \u00fc tioerloc;\n  unsigned char  tioeddnm\u00c48\u00dc;   /* -          DD NAME                                 */\n  unsigned char  tioejfcb\u00c43\u00dc;   /* -          SWA virtual address token, mapped       */\n  int            tiosdkcr  : 1, /* -        MAIN STORAGE OR DASD ADDRESS              */\n                 tiosdefr  : 1, /* -        DEFERRED MOUNT                            */\n                 tiosaffp  : 1, /* -        PRIMARY UNIT AFFINITY                     */\n                 tiosaffs  : 1, /* -        SECONDARY UNIT AFFINITY                   */\n                 tiosvolp  : 1, /* -        PRIMARY VOLUME AFFINITY                   */\n                 tiosvols  : 1, /* -        SECONDARY VOLUME AFFINITY                 */\n                 tiosbalp  : 1, /* -        PRIMARY SUBALLOCATE                       */\n                 tiosbals  : 1; /* -        SECONDARY SUBALLOCATE                     */\n  int            tiosused  : 1, /* -        DATA SET IS ON DEVICE                     */\n                 tiosreqd  : 1, /* -        DATA SET WILL USE DEVICE                  */\n                 tiospvio  : 1, /* -        DEVICE VIOLATES SEPARATION                */\n                 tiosvlsr  : 1, /* -        VOLUME SERIAL PRESENT                     */\n                 tiossetu  : 1, /* -        SETUP MESSAGE REQUIRED                    */\n                 tiosmntd  : 1, /* -        IF 0, DELETE UNLOADED VOLUME IF UNLOAD    */\n                 tiosunld  : 1, /* -        UNLOAD REQUIRED                           */\n                 tiosverf  : 1; /* -        VERIFICATION REQUIRED                     */\n  int            tioefsrt : 24; /* -          DURING PROBLEM PROGRAM, ADDRESS OF UCB. */\n  unsigned char  _filler1;      /* -          RESERVED                                */\n  char           tiopnslt;      /* -          NUMBER OF SLOTS FOR POOL                */\n  unsigned char  _filler2;      /* -          RESERVED                                */\n  char           tiopnsrt;      /* -          NUMBER OF DEVICES (FILLED SLOTS)        */\n  unsigned char  tioppool\u00c48\u00dc;   /* -          POOL NAME                               */\n  unsigned char  tiopsttb;      /* -          STATUS OF SLOT                          */\n  int            tiopslot : 24; /* -          UCB ADDRESS OR EMPTY SLOT               */\n  unsigned char  tiotfend\u00c44\u00dc;   /* -          FINAL END OF THE TIOT - BINARY ZEROS    */\n  \u00fc;\n\n#define tiocpstn tiocstep.tiocstpn._tiocpstn\n#define tiocjstn tiocstep._tiocjstn\n#define tioewtct tioerloc._tioewtct\n#define tioelink tioerloc._tioelink\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TJDSECTD": {"ttr": 8037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tjdsectd \u00e4\n  union \u00e4\n    unsigned char  _ikjeftsj\u00c460\u00dc; /* Bytes in structure    @PG10120 */\n    struct \u00e4\n      void          *_eftsi_ectparm_; /* Pointer to the */\n      unsigned char  _filler1\u00c456\u00dc;\n      \u00fc _tjdsectd_struct1;\n    struct \u00e4\n      unsigned char  _eftsi_ectparm__hibit; /* This bit must be OFF  @PG10120 */\n      unsigned char  _filler2\u00c43\u00dc;\n      void          *_eftsi_reserved_;      /* Pointer to RESERVED   @PG10120 */\n      unsigned char  _filler3\u00c452\u00dc;\n      \u00fc _tjdsectd_struct2;\n    struct \u00e4\n      unsigned char  _filler4\u00c44\u00dc;\n      unsigned char  _eftsi_reserved__hibit; /* End of list           @PG10120 */\n      unsigned char  _filler5\u00c43\u00dc;\n      void          *_eftsi_token_;          /* Pointer to TOKEN data @PG10120 */\n      unsigned char  _filler6\u00c448\u00dc;\n      \u00fc _tjdsectd_struct3;\n    struct \u00e4\n      unsigned char  _filler7\u00c48\u00dc;\n      unsigned char  _eftsi_token__hibit; /* This bit must be OFF  @PG10120 */\n      unsigned char  _filler8\u00c43\u00dc;\n      void          *_eftsi_error_;       /* Ptr to ERROR data     @PG10120 */\n      unsigned char  _filler9\u00c444\u00dc;\n      \u00fc _tjdsectd_struct4;\n    struct \u00e4\n      unsigned char  _filler10\u00c412\u00dc;\n      unsigned char  _eftsi_error__hibit; /* End of list           @PG10120 */\n      unsigned char  _filler11\u00c43\u00dc;\n      void          *_eftsi_abend_;       /* Pointer to ABEND data          */\n      unsigned char  _filler12\u00c440\u00dc;\n      \u00fc _tjdsectd_struct5;\n    struct \u00e4\n      unsigned char  _filler13\u00c416\u00dc;\n      unsigned char  _eftsi_abend__hibit; /* End of list            */\n      unsigned char  _filler14\u00c43\u00dc;\n      void          *_eftsi_reason_;      /* Pointer to REASON data */\n      unsigned char  _filler15\u00c436\u00dc;\n      \u00fc _tjdsectd_struct6;\n    struct \u00e4\n      unsigned char  _filler16\u00c420\u00dc;\n      unsigned char  _eftsi_reason__hibit; /* End of list                  */\n      unsigned char  _filler17\u00c43\u00dc;\n      void          *_eftsi_ectparm;       /* ECT address.                 */\n      unsigned char  _eftsi_reserved\u00c44\u00dc;   /* Reserved field      @WA17712 */\n      unsigned char  _eftsi_token\u00c416\u00dc;     /* Token passed back to caller. */\n      unsigned char  _filler18\u00c412\u00dc;\n      \u00fc _tjdsectd_struct7;\n    struct \u00e4\n      unsigned char  _filler19\u00c432\u00dc;\n      int            _eftsi_token1;    /* 1st fullword    @PG10120   */\n      int            _eftsi_token2;    /* 2nd fullword    @PG10120   */\n      int            _eftsi_token3;    /* 3rd fullword    @PG10120   */\n      int            _eftsi_token4;    /* 4th fullword    @PG10120   */\n      int            _eftsi_error;     /* Error reason code when     */\n      unsigned char  _eftsi_abend\u00c44\u00dc;  /* Internal error abend code  */\n      unsigned char  _eftsi_reason\u00c44\u00dc; /* Internal error reason code */\n      \u00fc _tjdsectd_struct8;\n    \u00fc _tjdsectd_union1;\n  \u00fc;\n\n#define ikjeftsj              _tjdsectd_union1._ikjeftsj\n#define eftsi_ectparm_        _tjdsectd_union1._tjdsectd_struct1._eftsi_ectparm_\n#define eftsi_ectparm__hibit  _tjdsectd_union1._tjdsectd_struct2._eftsi_ectparm__hibit\n#define eftsi_reserved_       _tjdsectd_union1._tjdsectd_struct2._eftsi_reserved_\n#define eftsi_reserved__hibit _tjdsectd_union1._tjdsectd_struct3._eftsi_reserved__hibit\n#define eftsi_token_          _tjdsectd_union1._tjdsectd_struct3._eftsi_token_\n#define eftsi_token__hibit    _tjdsectd_union1._tjdsectd_struct4._eftsi_token__hibit\n#define eftsi_error_          _tjdsectd_union1._tjdsectd_struct4._eftsi_error_\n#define eftsi_error__hibit    _tjdsectd_union1._tjdsectd_struct5._eftsi_error__hibit\n#define eftsi_abend_          _tjdsectd_union1._tjdsectd_struct5._eftsi_abend_\n#define eftsi_abend__hibit    _tjdsectd_union1._tjdsectd_struct6._eftsi_abend__hibit\n#define eftsi_reason_         _tjdsectd_union1._tjdsectd_struct6._eftsi_reason_\n#define eftsi_reason__hibit   _tjdsectd_union1._tjdsectd_struct7._eftsi_reason__hibit\n#define eftsi_ectparm         _tjdsectd_union1._tjdsectd_struct7._eftsi_ectparm\n#define eftsi_reserved        _tjdsectd_union1._tjdsectd_struct7._eftsi_reserved\n#define eftsi_token           _tjdsectd_union1._tjdsectd_struct7._eftsi_token\n#define eftsi_token1          _tjdsectd_union1._tjdsectd_struct8._eftsi_token1\n#define eftsi_token2          _tjdsectd_union1._tjdsectd_struct8._eftsi_token2\n#define eftsi_token3          _tjdsectd_union1._tjdsectd_struct8._eftsi_token3\n#define eftsi_token4          _tjdsectd_union1._tjdsectd_struct8._eftsi_token4\n#define eftsi_error           _tjdsectd_union1._tjdsectd_struct8._eftsi_error\n#define eftsi_abend           _tjdsectd_union1._tjdsectd_struct8._eftsi_abend\n#define eftsi_reason          _tjdsectd_union1._tjdsectd_struct8._eftsi_reason\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TOKEN": {"ttr": 8319, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct token \u00e4\n  unsigned char  toklen;     /* UTOKEN / RTOKEN LENGTH              */\n  unsigned char  tokvers;    /* UTOKEN / RTOKEN VERSION #           */\n  unsigned char  tokflg1;    /* MISCELLANEOUS FLAGS                 */\n  unsigned char  tokstyp;    /* SESSION TYPE (01 - 255 DEC.)        */\n  unsigned char  tokflg2;    /* MISCELLANEOUS FLAGS                 */\n  unsigned char  tokpoex;    /* PORT OF ENTRY CLASS INDEX           */\n  unsigned char  tokflg3;    /* MISCELLANEOUS FLAGS            @L3A */\n  unsigned char  _filler1;   /* RESERVED                       @L3C */\n  unsigned char  tokscl\u00c48\u00dc;  /* SECLABL                             */\n  unsigned char  tokxnod\u00c48\u00dc; /* EXECUTION NODE                      */\n  unsigned char  toksusr\u00c48\u00dc; /* SUBMITTING USERID                   */\n  unsigned char  toksnod\u00c48\u00dc; /* SUBMITTER NODE                      */\n  unsigned char  toksgrp\u00c48\u00dc; /* SUBMITTING GROUPID                  */\n  union \u00e4\n    unsigned char  _tokiplok\u00c416\u00dc; /* IP LOOKup value               @L9A */\n    struct \u00e4\n      unsigned char  _tokpoe\u00c48\u00dc;  /* PORT OF ENTRY(CONS ID,TERM. ID)    */\n      unsigned char  _toknetw\u00c48\u00dc; /* Remote network name, if       @L7A */\n      \u00fc _token_struct1;\n    \u00fc _token_union1;\n  unsigned char  tokuser\u00c48\u00dc; /* SESSION OWNER USERID                */\n  unsigned char  tokgrup\u00c48\u00dc; /* SESSION OWNER GROUPID               */\n  \u00fc;\n\n#define tokiplok _token_union1._tokiplok\n#define tokpoe   _token_union1._token_struct1._tokpoe\n#define toknetw  _token_union1._token_struct1._toknetw\n\n/* Values for field \"tokvers\" */\n#define tokver01 1    /* RELEASE 1.9 UTOKEN                  */\n#define tokcver  1    /* CURRENT UTOKEN VERSION              */\n\n/* Values for field \"tokflg1\" */\n#define tokencr  0x80 /* TOKEN IS ENCRYPTED                  */\n#define toklt19  0x20 /* TOKEN CREATED BY PRE RACF 1.9 CALL  */\n#define tokvxprp 0x10 /* VERIFYX PROPAGATION OCCURRED  @P1A  */\n#define tokunusr 0x08 /* NJE UNKNOWN USER              @P3A  */\n#define toklogu  0x04 /* LOG USER INDICATOR            @P4A  */\n#define tokrspec 0x02 /* RACF SPECIAL INDICATOR        @P4A  */\n\n/* Values for field \"tokstyp\" */\n#define toksas   1    /* SYSTEM ADDRESS SPACE                */\n#define tokcmnd  2    /* COMMAND                             */\n#define tokcons  3    /* CONSOLE OPERATOR                    */\n#define tokstp   4    /* STARTED PROCEDURE                   */\n#define tokmnt   5    /* MOUNT                               */\n#define toktso   6    /* TSO LOGON                           */\n#define tokbch   7    /* INTERNAL READER BATCH JOB      @D3C */\n#define tokxbm   8    /* EXECUTION BATCH MONITOR             */\n#define tokrje   9    /* RJE OPERATOR                        */\n#define toknje   10   /* NJE OPERATOR                        */\n#define toknjeus 11   /* VERIFYX UNKNOWN USER TOKEN     @D6C */\n#define tokebch  12   /* EXTERNAL READER BATCH JOB      @D3A */\n#define tokrbch  13   /* RJE BATCH JOB                  @D3A */\n#define toknbch  14   /* NJE BATCH JOB                  @D3A */\n#define toknsys  15   /* NJE SYSOUT                     @D4A */\n#define tokexbm  16   /* EXTERNAL XBM                   @D7A */\n#define tokrxbm  17   /* RJE XBM                        @D7A */\n#define toknxbm  18   /* NJE XBM                        @D7A */\n#define tokappc  19   /* APPCTP                         @L2A */\n#define tokosrv  20   /* OMVSSRV                        @L6A */\n#define tokip    21   /* IPLOOKup value                 @L9A */\n#define toklsess 21   /* LAST CURRENTLY DEFINED SESSION @L9C */\n\n/* Values for field \"tokflg2\" */\n#define tokdflt  0x80 /* DEFAULT TOKEN                       */\n#define tokudus  0x40 /* UNDEFINED USER                      */\n#define tokerr   0x10 /* TOKEN IN ERROR                      */\n#define toktrst  0x08 /* PART OF TRUSTED COMPUTER BASE       */\n#define toksus   0x04 /* SURROGATE USERID                    */\n#define tokremot 0x02 /* REMOTE JOB INDICATOR                */\n#define tokpriv  0x01 /* PRIVILEDGED USER INDICATOR    @D5A  */\n\n/* Values for field \"tokpoex\" */\n#define tokterm  1    /* TERMINAL CLASS                      */\n#define tokcon   2    /* CONSOLE  CLASS                      */\n#define tokjesi  3    /* JESINPUT CLASS                      */\n#define tokaport 4    /* APPCPORT CLASS               @L2A   */\n#define tokserv  5    /* SERVAUTH CLASS                 @L9A */\n\n/* Values for field \"tokflg3\" */\n#define tokdgrp  0x80 /* DEFAULT GROUP ASSIGNED         @L3A */\n#define tokdsec  0x40 /* DEFAULT SECLABEL ASSIGNED      @L3A */\n#define toknetf  0x20 /* Network name specified         @L7C */\n#define tokipv   0x10 /* IP Value present for                */\n#define tokwdwn  0x08 /* If \"ON\", when MLS is Active,        */\n\n/* Values for field \"tokgrup\" */\n#define tokcurln 0x50 /* CURRENT VERSION LENGTH              */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TRDSECT": {"ttr": 8649, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tr \u00e4\n  void          *tr_stck\u00c42\u00dc;                 /* stck area                             */\n  unsigned char  tr_flag_exit;               /* entry/exit flag                       */\n  unsigned char  tr_flag_xplink;             /* xplink flag                           */\n  unsigned char  tr_flag_errno;              /* errno flag                            */\n  unsigned char  tr_flag_args;               /* args flag                             */\n  unsigned char  tr_flag_multi;              /* multi flag                            */\n  unsigned char  tr_flag_head;               /* head flag                             */\n  unsigned char  tr_flag_backtrace;          /* BACKTRACE flag                        */\n  unsigned char  tr_flag_intern;             /* internal call flag                    */\n  unsigned char  tr_flag_skip;               /* skip flag                             */\n  unsigned char  tr_flag_format;             /* TR format flag                        */\n  unsigned char  tr_flag_res2;               /* reserved                              */\n  unsigned char  tr_flag_res3;               /* reserved                              */\n  void          *tr_next;                    /* next trace block                      */\n  void          *tr_tcb;                     /* actual tcb address                    */\n  void          *tr_thdid\u00c42\u00dc;                /* thread id                             */\n  void          *tr_filter;                  /* filter address                        */\n  void          *tr_caller_ll;               /* caller LL address                     */\n  void          *tr_caller_addr;             /* caller address                        */\n  void          *tr_caller_offset;           /* caller offset                         */\n  unsigned char  tr_caller\u00c432\u00dc;              /* caller name                           */\n  unsigned char  tr_called\u00c432\u00dc;              /* called name                           */\n  unsigned char  tr_epname\u00c48\u00dc;               /* EPname                                */\n  void          *tr_dsa;                     /* DSA address                           */\n  void          *tr_errno;                   /* errno value                           */\n  void          *tr_errno2;                  /* errno2 value                          */\n  void          *tr_return;                  /* return value                          */\n  void          *tr_r1;                      /* r1 value                              */\n  void          *tr_r2;                      /* r2 value                              */\n  void          *tr_r3;                      /* r3 value                              */\n  void          *tr_r15;                     /* r15 value                             */\n  void          *tr_args\u00c43\u00dc;                 /* arglist                               */\n  unsigned char  tr_arg0\u00c4128\u00dc;               /* arg1                                  */\n  unsigned char  tr_arg1\u00c4128\u00dc;               /* arg2                                  */\n  unsigned char  tr_arg2\u00c4128\u00dc;               /* arg3                                  */\n  unsigned char  tr_path\u00c4128\u00dc;               /* path name                             */\n  struct \u00e4\n    void          *_filler1;  /* USER EXIT ROUTINE ADDRESS */\n    \u00fc tr_espie_l;\n  void          *_filler2;                   /* USER PARAMETER LIST ADDRESS           */\n  unsigned char  _filler3\u00c42\u00dc;                /* INTERRUPTION MASK                     */\n  unsigned char  _filler4\u00c42\u00dc;\n  void          *_filler5;                   /* RESERVED                              */\n  void          *tr_espie_token;             /* ESPIE token                           */\n  unsigned char  _filler6\u00c44\u00dc;\n  double         _filler7\u00c48\u00dc;                /* work area                             */\n  union \u00e4\n    unsigned char  _tr_buff\u00c4256\u00dc; /* buffer */\n    struct \u00e4\n      short int      _tr_buff_rdw\u00c42\u00dc;     /* rdw       */\n      unsigned char  _filler8;\n      unsigned char  _tr_buff_caller\u00c432\u00dc; /* caller    */\n      unsigned char  _tr_buff_id\u00c43\u00dc;      /* id        */\n      unsigned char  _tr_buff_called\u00c432\u00dc; /* called    */\n      unsigned char  _tr_buff_pad1;\n      unsigned char  _tr_buff_tcb\u00c412\u00dc;    /* TCB       */\n      unsigned char  _filler9;\n      unsigned char  _tr_buff_tid\u00c420\u00dc;    /* Thread ID */\n      unsigned char  _filler10;\n      unsigned char  _filler11\u00c4149\u00dc;\n      \u00fc _tr_struct1;\n    struct \u00e4\n      unsigned char  _filler12\u00c45\u00dc;\n      unsigned char  _tr_buff_return\u00c45\u00dc;\n      unsigned char  _tr_buff_return_value\u00c421\u00dc;\n      unsigned char  _tr_buff_errno\u00c46\u00dc;\n      unsigned char  _tr_buff_errno_value\u00c421\u00dc;\n      unsigned char  _tr_buff_errno2\u00c47\u00dc;\n      unsigned char  _tr_buff_errno2_value\u00c421\u00dc;\n      unsigned char  _filler13\u00c4170\u00dc;\n      \u00fc _tr_struct2;\n    struct \u00e4\n      unsigned char  _filler14\u00c45\u00dc;\n      unsigned char  _tr_buff_off\u00c44\u00dc;\n      unsigned char  _tr_buff_dump_hex\u00c48\u00dc\u00c49\u00dc;\n      unsigned char  _tr_buff_dump_char\u00c432\u00dc;\n      unsigned char  _filler15\u00c4143\u00dc;\n      \u00fc _tr_struct3;\n    struct \u00e4\n      unsigned char  _filler16\u00c45\u00dc;\n      unsigned char  _tr_buff_args\u00c45\u00dc;        /* arg   */\n      unsigned char  _filler17\u00c421\u00dc;           /* value */\n      unsigned char  _tr_buff_args_dump\u00c4105\u00dc; /* dump  */\n      unsigned char  _filler18\u00c4120\u00dc;\n      \u00fc _tr_struct4;\n    struct \u00e4\n      unsigned char  _filler19\u00c45\u00dc;\n      unsigned char  _tr_buff_caller_addr\u00c412\u00dc;   /* caller addr */\n      unsigned char  _filler20;\n      unsigned char  _tr_buff_caller_offset\u00c412\u00dc; /* caller addr */\n      unsigned char  _filler21\u00c45\u00dc;\n      unsigned char  _tr_buff_caller_module\u00c464\u00dc;\n      unsigned char  _filler22\u00c4157\u00dc;\n      \u00fc _tr_struct5;\n    \u00fc _tr_union1;\n  void          *tr_buffa;                   /* pointer to buff                       */\n  void          *tr_bufflen;                 /* actual buffer length                  */\n  void          *tr_retval;                  /* return value                          */\n  void          *tr_retcode;                 /* return code                           */\n  void          *tr_rsncode;                 /* reson code                            */\n  void          *tr_fdbkcode\u00c43\u00dc;             /* feadback code                         */\n  void          *tr_plist\u00c424\u00dc;               /* parm list                             */\n  void          *tr_dsa_prev;                /* prev DSA                              */\n  void          *tr_dsa_format;              /* actual DSA format                     */\n  unsigned char  _filler23;                  /* PELLAST flag byte.        X02113      */\n  unsigned char  _filler24;                  /* PELMILEN - RNAME length.              */\n  unsigned char  _filler25;\n  unsigned char  _filler26;                  /* PELRET - return code byte.            */\n  void          *_filler27;                  /* QNAME ADDRESS                         */\n  void          *_filler28;                  /* RNAME ADDRESS                         */\n  struct \u00e4\n    short int      _filler29;  /* LENGTH   */\n    short int      _filler30;  /* FID CODE */\n    \u00fc tr_gtf;\n  void          *_filler31;                  /* DATA ADDRESS                          */\n  unsigned char  _filler32\u00c48\u00dc;               /* DATA64 AREA ADDRESS    @P3C           */\n  unsigned char  _filler33\u00c44\u00dc;\n  unsigned char  tr_csvquery_xversion;       /* ++ INPUT XVERSION                     */\n  unsigned char  tr_csvquery_xflags1;        /* ++ FIELD_LABEL                        */\n  unsigned char  tr_csvquery_xflags2;        /* ++ FIELD_LABEL                        */\n  unsigned char  tr_csvquery_xflags3;        /* ++ FIELD_LABEL                        */\n  unsigned char  tr_csvquery_xinepname\u00c48\u00dc;   /* ++                                    */\n  void          *tr_csvquery_xinaddr;        /* ++                                    */\n  int            tr_csvquery_xoutlength;     /* ++                                    */\n  void          *tr_csvquery_xoutepa;        /* ++                                    */\n  unsigned char  tr_csvquery_xoutepnm\u00c48\u00dc;    /* ++                                    */\n  unsigned char  tr_csvquery_xoutmjnm\u00c48\u00dc;    /* ++                                    */\n  unsigned char  tr_csvquery_xoutsp;         /* ++                                    */\n  unsigned char  tr_csvquery_xoutattr1;      /* ++                                    */\n  unsigned char  tr_csvquery_xoutattr2;      /* ++                                    */\n  unsigned char  tr_csvquery_xoutattr3;      /* ++                                    */\n  unsigned char  tr_csvquery_xoutvalid\u00c44\u00dc;   /* ++                                    */\n  void          *tr_csvquery_xoutloadpt;     /* ++                                    */\n  struct \u00e4\n    void          *_filler34;  /* DE OR EPLOC ADDRESS          @G860PXB */\n    \u00fc tr_filter_attachl;\n  void          *_filler35;                  /* DCB ADDRESS                  @G860PXB */\n  void          *_filler36;                  /* NEW FORMAT + ECB ADDR        @G860PXB */\n  void          *_filler37;                  /* GSPL OR GSPV                 @G860PXB */\n  void          *_filler38;                  /* SHSPV OR SHSPL               @G860PXB */\n  void          *_filler39;                  /* EXIT ROUTINE ADDRESS         @G860PXB */\n  short int      _filler40;                  /* DPMOD VALUE                  @G860PXB */\n  unsigned char  _filler41;                  /* LPMOD VALUE                  @G860PXB */\n  unsigned char  _filler42;                  /* STATUS BYTE                  @G860PXB */\n  void          *_filler43\u00c42\u00dc;               /* EP NAME SPACE                @G860PXB */\n  void          *_filler44;                  /* ADDRESS OF JSCB              @G860PXB */\n  void          *_filler45;                  /* (E)STAI PARM LIST            @G860PXB */\n  void          *_filler46;                  /* EXIT ADDRESS                 @G860PXB */\n  void          *_filler47;                  /* TASKLIB                      @G860PXB */\n  unsigned char  _filler48;                  /* FLAG BYTE                    @G860PXB */\n  unsigned char  _filler49;                  /* TASK ID                      @G860PXB */\n  short int      _filler50;                  /* PARM LIST LENGTH             @G860PXB */\n  void          *_filler51;                  /* SUBPOOL LIST ADDRESS/VALUE   @G860PXB */\n  unsigned char  _filler52;                  /* SET FLAGS                    @G860PXB */\n  unsigned char  _filler53;                  /* SET UP FORMAT NUMBER         @G860PXB */\n  unsigned char  _filler54\u00c410\u00dc;              /* RESERVED BYTES FOR FUTURE    @G860PXB */\n  unsigned char  _filler55\u00c44\u00dc;\n  void          *tr_filter_ecb;              /* ECB                                   */\n  void          *tr_filter_tcb;              /* TCB addr                              */\n  void          *tr_save\u00c418\u00dc;                /* temp save are                         */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _tr_ieatdump_xplistname\u00c44\u00dc; /* ++ CONSTANT  XPLISTNAME */\n      unsigned char  _tr_ieatdump_xword1\u00c44\u00dc;     /* ++ FIELD_LABEL  XWORD1  */\n      \u00fc tr_ieatdump;\n    struct \u00e4\n      unsigned char  _filler56\u00c44\u00dc;\n      unsigned char  _tr_ieatdump_xplistlen\u00c42\u00dc; /* ++ INPUT  XPLISTLEN   */\n      unsigned char  _tr_ieatdump_xversion;     /* ++ INPUT XVERSION     */\n      unsigned char  _tr_ieatdump_xrsv0001;     /* ++ RESERVED  XRSV0001 */\n      \u00fc _tr_struct6;\n    \u00fc _tr_union2;\n  unsigned char  tr_ieatdump_xsdata1;        /* ++ FIELD_LABEL                        */\n  unsigned char  tr_ieatdump_xsdata2;        /* ++ FIELD_LABEL                        */\n  unsigned char  tr_ieatdump_xflags1;        /* ++ FIELD_LABEL                        */\n  unsigned char  tr_ieatdump_xrsv0002;       /* ++ RESERVED  XRSV0002                 */\n  unsigned char  tr_ieatdump_xdsp_stoken\u00c48\u00dc; /* ++   XDSP_STOKEN                      */\n  void          *tr_ieatdump_xdsp_origin;    /* ++   XDSP_ORIGIN                      */\n  void          *tr_ieatdump_xdsp_records_;  /* ++   XDSP_RECORDS@                    */\n  unsigned char  tr_ieatdump_xddname\u00c48\u00dc;     /* ++   XDDNAME                          */\n  union \u00e4\n    void          *_tr_ieatdump_xdsnad;    /* ++   XDSNAD   */\n    void          *_tr_ieatdump_xdsn_addr; /* ++  ADDR XDSN */\n    \u00fc _tr_union3;\n  int            tr_ieatdump_xdsn_alet;      /* ++  ALET XDSN                         */\n  union \u00e4\n    void          *_tr_ieatdump_xhdrad;    /* ++   XHDRAD   */\n    void          *_tr_ieatdump_xhdr_addr; /* ++  ADDR XHDR */\n    \u00fc _tr_union4;\n  int            tr_ieatdump_xhdr_alet;      /* ++  ALET XHDR                         */\n  union \u00e4\n    void          *_tr_ieatdump_xidxad;    /* ++   XIDXAD   */\n    void          *_tr_ieatdump_xidx_addr; /* ++  ADDR XIDX */\n    \u00fc _tr_union5;\n  int            tr_ieatdump_xidx_alet;      /* ++  ALET XIDX                         */\n  union \u00e4\n    void          *_tr_ieatdump_xsymrecad;    /* ++   XSYMRECAD   */\n    void          *_tr_ieatdump_xsymrec_addr; /* ++  ADDR XSYMREC */\n    \u00fc _tr_union6;\n  int            tr_ieatdump_xsymrec_alet;   /* ++  ALET XSYMREC                      */\n  union \u00e4\n    void          *_tr_ieatdump_xintokenad;    /* ++   XINTOKENAD   */\n    void          *_tr_ieatdump_xintoken_addr; /* ++  ADDR XINTOKEN */\n    \u00fc _tr_union7;\n  int            tr_ieatdump_xintoken_alet;  /* ++  ALET XINTOKEN                     */\n  union \u00e4\n    void          *_tr_ieatdump_xremotead;    /* ++   XREMOTEAD   */\n    void          *_tr_ieatdump_xremote_addr; /* ++  ADDR XREMOTE */\n    \u00fc _tr_union8;\n  int            tr_ieatdump_xremote_alet;   /* ++  ALET XREMOTE                      */\n  union \u00e4\n    void          *_tr_ieatdump_xprobdescad;    /* ++   XPROBDESCAD   */\n    void          *_tr_ieatdump_xprobdesc_addr; /* ++  ADDR XPROBDESC */\n    \u00fc _tr_union9;\n  int            tr_ieatdump_xprobdesc_alet; /* ++  ALET XPROBDESC                    */\n  union \u00e4\n    void          *_tr_ieatdump_xlistad;    /* ++   XLISTAD   */\n    void          *_tr_ieatdump_xlist_addr; /* ++  ADDR XLIST */\n    \u00fc _tr_union10;\n  int            tr_ieatdump_xlist_alet;     /* ++  ALET XLIST                        */\n  union \u00e4\n    void          *_tr_ieatdump_xsubplstad;    /* ++   XSUBPLSTAD   */\n    void          *_tr_ieatdump_xsubplst_addr; /* ++  ADDR XSUBPLST */\n    \u00fc _tr_union11;\n  int            tr_ieatdump_xsubplst_alet;  /* ++  ALET XSUBPLST                     */\n  union \u00e4\n    void          *_tr_ieatdump_xdsplistad;    /* ++   XDSPLISTAD   */\n    void          *_tr_ieatdump_xdsplist_addr; /* ++  ADDR XDSPLIST */\n    \u00fc _tr_union12;\n  int            tr_ieatdump_xdsplist_alet;  /* ++  ALET XDSPLIST                     */\n  union \u00e4\n    void          *_tr_ieatdump_xecbad;    /* ++   XECBAD   */\n    void          *_tr_ieatdump_xecb_addr; /* ++  ADDR XECB */\n    \u00fc _tr_union13;\n  int            tr_ieatdump_xecb_alet;      /* ++  ALET XECB                         */\n  void          *tr_ceetest_parms\u00c43\u00dc;\n  unsigned char  tr_ceetest_cmd\u00c416\u00dc;\n  void          *tr_ceetest_fc\u00c43\u00dc;\n  unsigned char  tr_ceetest_dsa\u00c4128\u00dc;\n  unsigned char  tr_ti\u00c474\u00dc;                  /* work TI area                          */\n  unsigned char  _filler57\u00c42\u00dc;\n  struct \u00e4\n    void          *_filler58;  /* USER EXIT ROUTINE ADDRESS */\n    \u00fc tr_espie_save;\n  void          *_filler59;                  /* USER PARAMETER LIST ADDRESS           */\n  unsigned char  _filler60\u00c42\u00dc;               /* INTERRUPTION MASK                     */\n  unsigned char  _filler61\u00c42\u00dc;\n  void          *_filler62;                  /* RESERVED                              */\n  unsigned char  _filler63\u00c42312\u00dc;            /* round to 2k                           */\n  \u00fc;\n\n#define tr_buff                    _tr_union1._tr_buff\n#define tr_buff_rdw                _tr_union1._tr_struct1._tr_buff_rdw\n#define tr_buff_caller             _tr_union1._tr_struct1._tr_buff_caller\n#define tr_buff_id                 _tr_union1._tr_struct1._tr_buff_id\n#define tr_buff_called             _tr_union1._tr_struct1._tr_buff_called\n#define tr_buff_pad1               _tr_union1._tr_struct1._tr_buff_pad1\n#define tr_buff_tcb                _tr_union1._tr_struct1._tr_buff_tcb\n#define tr_buff_tid                _tr_union1._tr_struct1._tr_buff_tid\n#define tr_buff_return             _tr_union1._tr_struct2._tr_buff_return\n#define tr_buff_return_value       _tr_union1._tr_struct2._tr_buff_return_value\n#define tr_buff_errno              _tr_union1._tr_struct2._tr_buff_errno\n#define tr_buff_errno_value        _tr_union1._tr_struct2._tr_buff_errno_value\n#define tr_buff_errno2             _tr_union1._tr_struct2._tr_buff_errno2\n#define tr_buff_errno2_value       _tr_union1._tr_struct2._tr_buff_errno2_value\n#define tr_buff_off                _tr_union1._tr_struct3._tr_buff_off\n#define tr_buff_dump_hex           _tr_union1._tr_struct3._tr_buff_dump_hex\n#define tr_buff_dump_char          _tr_union1._tr_struct3._tr_buff_dump_char\n#define tr_buff_args               _tr_union1._tr_struct4._tr_buff_args\n#define tr_buff_args_dump          _tr_union1._tr_struct4._tr_buff_args_dump\n#define tr_buff_caller_addr        _tr_union1._tr_struct5._tr_buff_caller_addr\n#define tr_buff_caller_offset      _tr_union1._tr_struct5._tr_buff_caller_offset\n#define tr_buff_caller_module      _tr_union1._tr_struct5._tr_buff_caller_module\n#define tr_ieatdump_xplistname     _tr_union2.tr_ieatdump._tr_ieatdump_xplistname\n#define tr_ieatdump_xword1         _tr_union2.tr_ieatdump._tr_ieatdump_xword1\n#define tr_ieatdump_xplistlen      _tr_union2._tr_struct6._tr_ieatdump_xplistlen\n#define tr_ieatdump_xversion       _tr_union2._tr_struct6._tr_ieatdump_xversion\n#define tr_ieatdump_xrsv0001       _tr_union2._tr_struct6._tr_ieatdump_xrsv0001\n#define tr_ieatdump_xdsnad         _tr_union3._tr_ieatdump_xdsnad\n#define tr_ieatdump_xdsn_addr      _tr_union3._tr_ieatdump_xdsn_addr\n#define tr_ieatdump_xhdrad         _tr_union4._tr_ieatdump_xhdrad\n#define tr_ieatdump_xhdr_addr      _tr_union4._tr_ieatdump_xhdr_addr\n#define tr_ieatdump_xidxad         _tr_union5._tr_ieatdump_xidxad\n#define tr_ieatdump_xidx_addr      _tr_union5._tr_ieatdump_xidx_addr\n#define tr_ieatdump_xsymrecad      _tr_union6._tr_ieatdump_xsymrecad\n#define tr_ieatdump_xsymrec_addr   _tr_union6._tr_ieatdump_xsymrec_addr\n#define tr_ieatdump_xintokenad     _tr_union7._tr_ieatdump_xintokenad\n#define tr_ieatdump_xintoken_addr  _tr_union7._tr_ieatdump_xintoken_addr\n#define tr_ieatdump_xremotead      _tr_union8._tr_ieatdump_xremotead\n#define tr_ieatdump_xremote_addr   _tr_union8._tr_ieatdump_xremote_addr\n#define tr_ieatdump_xprobdescad    _tr_union9._tr_ieatdump_xprobdescad\n#define tr_ieatdump_xprobdesc_addr _tr_union9._tr_ieatdump_xprobdesc_addr\n#define tr_ieatdump_xlistad        _tr_union10._tr_ieatdump_xlistad\n#define tr_ieatdump_xlist_addr     _tr_union10._tr_ieatdump_xlist_addr\n#define tr_ieatdump_xsubplstad     _tr_union11._tr_ieatdump_xsubplstad\n#define tr_ieatdump_xsubplst_addr  _tr_union11._tr_ieatdump_xsubplst_addr\n#define tr_ieatdump_xdsplistad     _tr_union12._tr_ieatdump_xdsplistad\n#define tr_ieatdump_xdsplist_addr  _tr_union12._tr_ieatdump_xdsplist_addr\n#define tr_ieatdump_xecbad         _tr_union13._tr_ieatdump_xecbad\n#define tr_ieatdump_xecb_addr      _tr_union13._tr_ieatdump_xecb_addr\n\n/* Values for field \"tr_flag_format\" */\n#define tr_flag_format_full             0     /* full length        */\n#define tr_flag_format_short            1     /* short              */\n\n/* Values for field \"tr_args\" */\n#define tr_gtf_length_short             0xA8\n\n/* Values for field \"tr_arg2\" */\n#define tr_gtf_length                   0x228\n#define tr_gtf_length_full              0x228\n\n/* Values for field \"tr_gtf\" */\n#define ihlmdma1                        0xFFF /* 4095               */\n#define iggsp169                        0xFFE /* 4094                         Y02014 */\n#define iggsp451                        0xFFD /* 4093                         Y02014 */\n#define iggsp251                        0xFFC /* 4092                         Y02014 */\n#define iggsp145                        0xFFB /* 4091                         Y02014 */\n#define iggsp239                        0xFFA /* 4090                         Y02014 */\n#define iggsp235                        0xFF9 /* 4089                         Y02014 */\n#define iggsp119                        0xFF8 /* 4088                         Y02014 */\n#define iggsp215                        0xFF7 /* 4087                         Y02014 */\n#define iggsp112                        0xFF6 /* 4086                         Y02014 */\n#define idaam01                         0xFF5 /* 4085               */\n#define iggsp008                        0xFF4 /* 4084                         Y02014 */\n#define iggsp002                        0xFF3 /* 4083                         Y02014 */\n#define istlneid                        0xFF2 /* 4082                       @Y30AI3O */\n#define istcleid                        0xFF1 /* 4081                       @Y30AI3O */\n#define istrpeid                        0xFF0 /* 4080                       @Y30AI3O */\n#define isttpeid                        0xFEF /* 4079                       @Y30AI3O */\n#define istvieid                        0xFE1 /* 4065   VTAM INTERNAL TRACE @G35AGWC */\n#define isttheid                        0xFE2 /* 4066   VTAM INTERNAL TRACE @ZA70345 */\n#define isttreid                        0xFE3 /* 4067   VTAM INTERNAL TRACE @ZA70345 */\n#define isttdeid                        0xFE4 /* 4068   VTAM INTERNAL TRACE @ZA70345 */\n#define imdgpd50                        0xFE0 /* 4064                       @G81OP1C */\n#define imdgpd49                        0xFDF /* 4063                       @G81OP1C */\n#define imdgpd48                        0xFDE /* 4062                       @G81OP1C */\n#define imdgpd47                        0xFDD /* 4061                       @G81OP1C */\n#define imdgpd46                        0xFDC /* 4060                       @G81OP1C */\n#define imdgpd45                        0xFDB /* 4059                       @G81OP1C */\n#define imdgpd44                        0xFDA /* 4058                       @G81OP1C */\n#define imdgpd43                        0xFD9 /* 4057                       @G81OP1C */\n#define imdgpd42                        0xFD8 /* 4056                       @G81OP1C */\n#define imdgpd41                        0xFD7 /* 4055                       @G81OP1C */\n#define imdgpd40                        0xFD6 /* 4054                       @G81OP1C */\n#define imdgpd39                        0xFD5 /* 4053                       @G81OP1C */\n#define imdgpd38                        0xFD4 /* 4052                       @G81OP1C */\n#define imdgpd37                        0xFD3 /* 4051                       @G81OP1C */\n#define imdgpd36                        0xFD2 /* 4050                       @G81OP1C */\n#define imdgpd35                        0xFD1 /* 4049                       @G81OP1C */\n#define imdgpd34                        0xFD0 /* 4048                       @G81OP1C */\n#define imdgpd33                        0xFCF /* 4047                       @G81OP1C */\n#define imdgpd32                        0xFCE /* 4046                       @G81OP1C */\n#define imdgpd31                        0xFCD /* 4045                       @G81OP1C */\n#define imdgpd30                        0xFCC /* 4044                       @G81OP1C */\n#define imdgpd29                        0xFCB /* 4043                       @G81OP1C */\n#define imdgpd28                        0xFCA /* 4042                       @G81OP1C */\n#define imdgpd27                        0xFC9 /* 4041                       @G81OP1C */\n#define imdgpd26                        0xFC8 /* 4040                       @G81OP1C */\n#define imdgpd25                        0xFC7 /* 4039                       @G81OP1C */\n#define imdgpd24                        0xFC6 /* 4038                       @G81OP1C */\n#define imdgpd23                        0xFC5 /* 4037                       @G81OP1C */\n#define imdgpd22                        0xFC4 /* 4036                       @G81OP1C */\n#define imdgpd21                        0xFC3 /* 4035                       @G81OP1C */\n#define imdgpd20                        0xFC2 /* 4034                       @G81OP1C */\n#define imdgpd19                        0xFC1 /* 4033                       @G81OP1C */\n#define imdgpd18                        0xFC0 /* 4032                       @G81OP1C */\n#define imdgpd17                        0xFBF /* 4031                       @G81OP1C */\n#define imdgpd16                        0xFBE /* 4030                       @G81OP1C */\n#define imdgpd15                        0xFBD /* 4029                       @G81OP1C */\n#define imdgpd14                        0xFBC /* 4028                       @G81OP1C */\n#define imdgpd13                        0xFBB /* 4027                       @G81OP1C */\n#define imdgpd12                        0xFBA /* 4026                       @G81OP1C */\n#define imdgpd11                        0xFB9 /* 4025                       @G81OP1C */\n#define imdgpd10                        0xFB8 /* 4024                       @G81OP1C */\n#define imdgpd09                        0xFB7 /* 4023                       @G81OP1C */\n#define imdgpd08                        0xFB6 /* 4022                       @G81OP1C */\n#define imdgpd07                        0xFB5 /* 4021                       @G81OP1C */\n#define imdgpd06                        0xFB4 /* 4020                       @G81OP1C */\n#define imdgpd05                        0xFB3 /* 4019                       @G81OP1C */\n#define imdgpd04                        0xFB2 /* 4018                       @G81OP1C */\n#define imdgpd03                        0xFB1 /* 4017                       @G81OP1C */\n#define imdgpd02                        0xFB0 /* 4016                       @G81OP1C */\n#define imdgpd01                        0xFAF /* 4015                       @G81OP1C */\n#define imdgpd00                        0xFAC /* 4012 NetSpool                  @P2A */\n#define imdnfs01                        0xFAB /* 4011 NFS                       @L1A */\n#define imdtcam9                        0xFA9 /* 4009 TCAM                      @P1A */\n#define imdtcam8                        0xFA8 /* 4008 TCAM                      @P1A */\n#define imdtcam7                        0xFA7 /* 4007 TCAM                      @P1A */\n#define imdtcam6                        0xFA6 /* 4006 TCAM                      @P1A */\n#define imdtcam5                        0xFA5 /* 4005 TCAM                      @P1A */\n#define imdtcam4                        0xFA4 /* 4004 TCAM                      @P1A */\n#define imdtcam3                        0xFA3 /* 4003 TCAM                      @P1A */\n#define imdtcam2                        0xFA2 /* 4002 TCAM                      @P1A */\n#define imdtcam1                        0xFA1 /* 4001 TCAM                      @P1A */\n#define imdtcam0                        0xFA0 /* 4000 TCAM                      @P1A */\n#define imdcics                         0xF6C /* 3948 CICS                      @P1A */\n#define imdvsm                          0xF65 /* 3941 VIRTUAL STORAGE MANAGER   @P1A */\n#define imddb2vt                        0xF5F /* 3935 DB2/VSAM TRANSPARENCY     @P1A */\n#define imdfsitd                        0xF5D /* 3933 FSI TRACE                 @P1A */\n#define imdfsitc                        0xF5C /* 3932 FSI TRACE                 @P1A */\n#define imdfsitb                        0xF5B /* 3931 FSI TRACE                 @P1A */\n#define imdfsita                        0xF5A /* 3930 FSI TRACE                 @P1A */\n#define imdfsit9                        0xF59 /* 3929 FSI TRACE                 @P1A */\n#define imdfsit8                        0xF58 /* 3928 FSI TRACE                 @P1A */\n#define imdfsit7                        0xF57 /* 3927 FSI TRACE                 @P1A */\n#define imdfsit6                        0xF56 /* 3926 FSI TRACE                 @P1A */\n#define imdfsit5                        0xF55 /* 3925 FSI TRACE                 @P1A */\n#define imdfsit4                        0xF54 /* 3924 FSI TRACE                 @P1A */\n#define imdosic                         0xF53 /* 3923 OPEN SYSTEMS INTERCONN    @P1A */\n#define imdlanrw                        0xF3F /* LANRES                         @P2A */\n#define imdlanrv                        0xF3E /* LANRES                         @P2A */\n#define imdlanru                        0xF3D /* LANRES                         @P2A */\n#define imdlanrt                        0xF3C /* LANRES                         @P2A */\n#define imdlanrs                        0xF3B /* LANRES                         @P2A */\n#define imdlanrr                        0xF3A /* LANRES                         @P2A */\n#define imdlanrq                        0xF39 /* LANRES                         @P2A */\n#define imdlanrp                        0xF38 /* LANRES                         @P2A */\n#define imdlanro                        0xF37 /* LANRES                         @P2A */\n#define imdlanrn                        0xF36 /* LANRES                         @P2A */\n#define imdlanrm                        0xF35 /* LANRES                         @P2A */\n#define imdlanrl                        0xF34 /* LANRES                         @P2A */\n#define imdlanrk                        0xF33 /* LANRES                         @P2A */\n#define imdlanrj                        0xF32 /* LANRES                         @P2A */\n#define imdlanri                        0xF31 /* LANRES                         @P2A */\n#define imdlanrh                        0xF30 /* LANRES                         @P2A */\n#define imdlanrg                        0xF2F /* LANRES                         @P2A */\n#define imdlanrf                        0xF2E /* LANRES                         @P2A */\n#define imdlanre                        0xF2D /* LANRES                         @P2A */\n#define imdlanrd                        0xF2C /* LANRES                         @P2A */\n#define imdlanrc                        0xF2B /* LANRES                         @P2A */\n#define imdlanrb                        0xF2A /* LANRES                         @P2A */\n#define imdlanra                        0xF29 /* LANRES                         @P2A */\n#define imdlanr9                        0xF28 /* LANRES                         @P2A */\n#define imdlanr8                        0xF27 /* LANRES                         @P2A */\n#define imdlanr7                        0xF26 /* LANRES                         @P2A */\n#define imdlanr6                        0xF25 /* LANRES                         @P2A */\n#define imdlanr5                        0xF24 /* LANRES                         @P2A */\n#define imdlanr4                        0xF23 /* LANRES                         @P2A */\n#define imdlanr3                        0xF22 /* LANRES                         @P2A */\n#define imdlanr2                        0xF21 /* LANRES                         @P2A */\n#define imdlanr1                        0xF20 /* LANRES                         @P2A */\n#define iefdb400a                       0xF1F /* DYNALLOC                       @P3A */\n#define iefdb400b                       0xF1E /* DYNALLOC                       @P3A */\n#define iefdb400c                       0xF1D /* DYNALLOC                       @P3A */\n\n/* Values for field \"tr_csvquery_xflags1\" */\n#define tr_csvquery_keyused_outlength   0x80\n#define tr_csvquery_keyused_outepa      0x40\n#define tr_csvquery_keyused_outepnm     0x20\n#define tr_csvquery_keyused_outmjnm     0x10\n#define tr_csvquery_keyused_outsp       0x08\n#define tr_csvquery_keyused_outpdata    0x04\n#define tr_csvquery_keyused_outpid      0x02\n#define tr_csvquery_keyused_outeptkn    0x01\n\n/* Values for field \"tr_csvquery_xflags2\" */\n#define tr_csvquery_keyused_outattr1    0x80\n#define tr_csvquery_keyused_outattr2    0x40\n#define tr_csvquery_keyused_outattr3    0x20\n#define tr_csvquery_keyused_outvalid    0x10\n#define tr_csvquery_xsearch_jpalpa      0x08\n#define tr_csvquery_xsearch_jpa         0x04\n#define tr_csvquery_xsearch_lpa         0x02\n#define tr_csvquery_keyused_outloadpt   0x01\n\n/* Values for field \"tr_csvquery_xflags3\" */\n#define tr_csvquery_xsearchminor_yes    0x80\n#define tr_csvquery_keyused_outxtlst    0x40\n#define tr_csvquery_keyused_outdiag     0x20\n#define tr_csvquery_keyused_outrtid     0x10\n#define tr_csvquery_keyused_outepa64    0x08\n#define tr_csvquery_keyused_inaddr64    0x04\n#define tr_csvquery_keyused_outloadpt64 0x02\n#define tr_csvquery_keyused_outlength64 0x01\n\n/* Values for field \"tr_ieatdump_xsdata1\" */\n#define tr_ieatdump_xsdata_defs         0x80\n#define tr_ieatdump_xsdata_allnuc       0x40\n#define tr_ieatdump_xsdata_csa          0x20\n#define tr_ieatdump_xsdata_grsq         0x10\n#define tr_ieatdump_xsdata_lpa          0x08\n#define tr_ieatdump_xsdata_lsqa         0x04\n#define tr_ieatdump_xsdata_nuc          0x02\n#define tr_ieatdump_xsdata_rgn          0x01\n\n/* Values for field \"tr_ieatdump_xsdata2\" */\n#define tr_ieatdump_xsdata_sqa          0x80\n#define tr_ieatdump_xsdata_sum          0x40\n#define tr_ieatdump_xsdata_swa          0x20\n#define tr_ieatdump_xsdata_trt          0x10\n#define tr_ieatdump_xsdata_psa          0x08\n\n/* Values for field \"tr_ieatdump_xflags1\" */\n#define tr_ieatdump_keyused_ddname      0x40\n\n/* Values for field \"tr_ieatdump_xecb_addr\" */\n#define tr_ieatdumpl                    0x7C  /* ++ LENGTH OF PLIST */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TRVT": {"ttr": 8197, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct trvt \u00e4\n  unsigned char  trvtid\u00c44\u00dc;   /* TRVT EBCDIC IDENTIFIER.          */\n  unsigned char  trvtdate\u00c48\u00dc; /* MODULE DATE.                     */\n  unsigned char  trvtmlvl\u00c48\u00dc; /* MODULE LEVEL.                    */\n  unsigned char  trvtblvl;    /* CONTROL BLOCK LEVEL NUMBER.      */\n  unsigned char  trvtrsd1\u00c43\u00dc; /* RESERVED.                        */\n  void          *trvttob;     /* ADDRESS OF TRACE OPTION BLOCK.   */\n  void          *trvtetat;    /* ADDRESS OF ALTRTRC               */\n  void          *trvtetst;    /* ADDRESS OF SNAPTRC               */\n  void          *trvtetaf;    /* ADDRESS OF ASIDTRC               */\n  void          *trvtetsc;    /* ADDRESS OF TRACE STORAGE         */\n  void          *trvtetrr;    /* ADDRESS OF TRACE RECEIVING       */\n  void          *trvtetct;    /* ADDRESS OF COPYTRC               */\n  void          *trvtettv;    /* ADDRESS OF VERFYTRC              */\n  void          *trvtetfr;    /* ADDRESS OF TRACE SERVICES        */\n  void          *trvtettd;    /* ADDRESS OF TRACE TIMER           */\n  void          *trvtrsd2;    /* RESERVED.                        */\n  void          *trvtrsd3;    /* RESERVED.                        */\n  unsigned char  trvtrpmk\u00c44\u00dc; /* REGISTER PAIR INDICATOR MASK.    */\n  unsigned char  trvttcw1\u00c44\u00dc; /* MASK TO CLEAR THE TRACING        */\n  unsigned char  trvttpsr\u00c44\u00dc; /* TIME INTERVAL THAT SYSTEM        */\n  void          *trvtetss;    /* ADDRESS OF START SUBCHANNEL      */\n  void          *trvtetms;    /* ADDRESS OF MODIFY SUBCHANNEL     */\n  void          *trvteths;    /* ADDRESS OF HALT SUBCHANNEL       */\n  void          *trvtetcs;    /* ADDRESS OF CLEAR SUBCHANNEL      */\n  void          *trvtetrs;    /* ADDRESS OF RESUME SUBCHANNEL     */\n  void          *trvtetex;    /* ADDRESS OF EXTERNAL INTERRUPT    */\n  void          *trvtetsv;    /* ADDRESS OF SVC INTERRUPT         */\n  void          *trvtetsr;    /* ADDRESS OF SVC RETURN            */\n  void          *trvtetse;    /* ADDRESS OF SVC ERROR             */\n  void          *trvtetpi;    /* ADDRESS OF PROGRAM INTERRUPT     */\n  void          *trvtetio;    /* ADDRESS OF I/O INTERRUPT         */\n  void          *trvtetdp;    /* ADDRESS OF TASK DISPATCH         */\n  void          *trvtetis;    /* ADDRESS OF INITIAL SRB DISPATCH  */\n  void          *trvtetsb;    /* ADDRESS OF SUSPENDED SRB         */\n  void          *trvtetwt;    /* ADDRESS OF WAIT TASK DISPATCH    */\n  void          *trvtetmh;    /* ADDRESS OF MACHINE CHECK         */\n  void          *trvtetre;    /* ADDRESS OF RESTART               */\n  void          *trvtetar;    /* ADDRESS OF ACR                   */\n  void          *trvtetsu;    /* ADDRESS OF SUSPENSION            */\n  void          *trvtetta;    /* ADDRESS OF TRACE ALTERATION      */\n  void          *trvtetur;    /* ADDRESS OF USER EVENT            */\n  void          *trvtetsl;    /* ADDRESS OF SLIP/PER EVENT   @L1A */\n  void          *trvtetsy;    /* ADDRESS OF PC OR BRANCH     @L2C */\n  void          *trvtetrv;    /* ADDRESS OF RCVY             @L3C */\n  void          *trvtettm;    /* ADDRESS OF TIME             @L4C */\n  void          *trvtetsa;    /* ADDR OF SIGA CREATION RTN   @P1M */\n  unsigned char  trvttctx\u00c44\u00dc; /* MASK TO PRESERVE ONLY THE        */\n  unsigned char  trvttcto\u00c44\u00dc; /* MASK TO PRESERVE ONLY THE        */\n  unsigned char  trvttcw0\u00c44\u00dc; /* MASK TO CLEAR THE TRACING        */\n  void          *trvtetxs;    /* ADDRESS OF CANCEL SUBCHANNEL     */\n  void          *trvtetug;    /* ADDRESS OF USER EVENT            */\n  void          *trvtrsda;    /* RESERVED FOR FUTURE USE     @L5A */\n  void          *trvtspit;    /* ADDRESS OF SERVICE          @L5A */\n  void          *trvtrsdb;    /* RESERVED FOR FUTURE USE     @L5A */\n  void          *trvtrsdc;    /* RESERVED FOR FUTURE USE     @L5A */\n  void          *trvtrsdd;    /* RESERVED FOR FUTURE USE     @L5A */\n  void          *trvtrsde;    /* RESERVED FOR FUTURE USE     @L5A */\n  double         trvtend;     /* END OF TRVT.                     */\n  \u00fc;\n\n/* Values for field \"trvtend\" */\n#define trvtlvln 0x01 /* TRVT LEVEL NUMBER. */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TSODLL": {"ttr": 8541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--------------------------------------------------------------------+\n|                                                                     |\n| File processing TSO processing                                      |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n|                                                                     |\n+--------------------------------------------------------------------*/\n#ifndef _TSODLL\n#define _TSODLL\n#include \"filevsm.hpp\"\n#include \"mvsbase.hpp\"\n\n#if ISIS_PF_HOST_IBM\nextern \"C\" \u00e4\n#endif\n\nint SystemCommand(char * command);\nchar * SystemUserId(void);\n\nFILE * FileOpen( char * filename, char * filemode,\n                        char * am , char *  amparms);\nint FilePut(FILE * f , char * data , int length );\nint FileClose(FILE * f);\n\nint    KSDS_Open(FileBlock * fb,int);\nint    KSDS_Close(FileBlock * fb);\nint    KSDS_Read(FileBlock * fb);\nint    KSDS_Rewrite(FileBlock * fb);\nint    KSDS_Delete(FileBlock * fb);\nint    KSDS_Write(FileBlock * fb, int = 0);\nint    KSDS_Flush(FileBlock * fb);\nint    KSDS_Startbr(FileBlock * fb);\nint    KSDS_Readnext(FileBlock * fb);\nint    KSDS_Endbr(FileBlock * fb);\nint    KSDS_Unlock(FileBlock * fb) ;\nint    KSDS_Clearerr(FileBlock * fb);\nint    _isVsam(char *);\n\nFILE * SpoolOpen(STRING&,int);\nint    SpoolClose(FILE *);\nint    SpoolPut(FILE *,char * ,int);\n\nint    Enq(char *,int );\nint    Deq(char *,int );\nint    Sync();\nchar * LoadM(char *);\n\n\nFILE * fileopen(char * ,char *,char *,char *);\nint    fileput(FILE *, char *,int);\nint    fileget(FILE *, char *,int);\nint    fileclose(FILE *);\nint    fileMfind(struct DSNINFO *,const char *);\nint    fileMnext(DSNINFO *);\nint    fileMquit(DSNINFO *);\nvoid   PanelSetMessageUncond(char *);\n\n#if ISIS_PF_HOST_IBM\n\u00fc;\n#endif\n\n#if 0\nint  TerminalDISPLAY(PanelBlock * pb,TerminalBlock * tb);\nvoid TerminalCLEAR(void);\nvoid TerminalINQ(TerminalBlock * tb);\nvoid TerminalMessage(char *);\nvoid putSnap(char *);\n#endif\n\n  /*--------------------------------------------------------------+\n  | EXIT routine call                                             |\n  |                                                               |\n  |                                                               |\n  +--------------------------------------------------------------*/\n\nclass EXIT \u00e4\nprivate:\n  STRING program;\n  unsigned ecb;\n  void *   subtcb;\n  void *   plist\u00c41\u00dc;\n  struct\n  \u00e4\n    short len;\n    char  text\u00c4128\u00dc;\n  \u00fc parm ;\n  int   rc;\npublic:\n  EXIT(char * prog, char * par);\n  int retcode()\u00e4return rc;\u00fc\n  \u00dfEXIT()\u00e4\u00fc\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOVSM": {"ttr": 8257, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef _TSOVSM\n#define _TSOVSM\n#include \"filevsm.hpp\"\n#include \"mvsbase.hpp\"\n\nint SystemCommand(char * command);\nchar * SystemUserId(void);\n\nint    KSDS_Open(FileBlock * fb,int );\nint    KSDS_Close(FileBlock * fb);\nint    KSDS_Read(FileBlock * fb);\nint    KSDS_Rewrite(FileBlock * fb);\nint    KSDS_Delete(FileBlock * fb);\nint    KSDS_Write(FileBlock * fb, int );\nint    KSDS_Write(FileBlock * fb );\nint    KSDS_Flush(FileBlock * fb);\nint    KSDS_Startbr(FileBlock * fb);\nint    KSDS_Readnext(FileBlock * fb);\nint    KSDS_Endbr(FileBlock * fb);\nint    KSDS_Unlock(FileBlock * fb) ;\nint    KSDS_Clearerr(FileBlock * fb);\n\nFILE * SpoolOpen(STRING&,int);\nint    SpoolClose(FILE *);\nint    SpoolPut(FILE *,char * ,int);\n\nint    Enq(char *,int );\nint    Deq(char *,int );\nint    Sync();\nchar * LoadM(char *);\n\n#if 0\nint  TerminalDISPLAY(PanelBlock * pb,TerminalBlock * tb);\nvoid TerminalCLEAR(void);\nvoid TerminalINQ(TerminalBlock * tb);\nvoid TerminalMessage(char *);\nvoid putSnap(char *);\n#endif\n\n\n  /*--------------------------------------------------------------+\n  | EXIT routine call                                             |\n  |                                                               |\n  |                                                               |\n  +--------------------------------------------------------------*/\n\nclass EXIT \u00e4\nprivate:\n  STRING program;\n  unsigned ecb;\n  void *   subtcb;\n  void *   plist\u00c41\u00dc;\n  struct\n  \u00e4\n    short len;\n    char  text\u00c4128\u00dc;\n  \u00fc parm ;\n  int   rc;\npublic:\n  EXIT(char * prog, char * par);\n  int retcode()\u00e4return rc;\u00fc\n  \u00dfEXIT()\u00e4\u00fc\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSVT": {"ttr": 7913, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tsvt \u00e4\n  unsigned char  tsvttsvt\u00c44\u00dc; /* ACRONYM IN EBCDIC 'TSVT'                      */\n  unsigned char  tsvtlev;     /* TSVT VERSION                                  */\n  unsigned char  tsvtflg1;    /* FLAG INDICATORS                    @DG10015   */\n  unsigned char  tsvtrsv1\u00c42\u00dc; /* RESERVED                           @DG10015   */\n  void          *tsvtnct;     /* ADDRESS OF THE MOST CURRENT NOTICE            */\n  void          *tsvtvacc;    /* ADDRESS OF THE CLIST VARIABLE ACCESS ROUTINE  */\n  void          *tsvtasf;     /* ADDRESS OF THE AUTHORIZED SERVICE             */\n  void          *tsvtltbl;    /* ADDRESS OF LOGON ADDRESS TABLE      @E2267F2  */\n  void          *tsvtfla1;    /* ADDRESS OF LOGON INITIALIZATION     @E2267F2  */\n  void          *tsvtctio;    /* ADDRESS OF CLIST I/O LAR            @E2267F2  */\n  void          *tsvtctab;    /* ADDRESS OF LOAD MODULE CONTAINING   @E2267F2  */\n  void          *tsvtt440;    /* ADDRESS OF CLIST VARIABLE ACCESS    @E2267F2  */\n  void          *tsvtt441;    /* ADDRESS OF GENERAL VARIABLE ACCESS  @E2267F2  */\n  void          *tsvtputl;    /* ADDRESS OF PUTLINE ROUTINE          @E2267F2  */\n  void          *tsvtptgt;    /* ADDRESS OF PUTGET ROUTINE           @E2267F2  */\n  void          *tsvtgetl;    /* ADDRESS OF GETLINE ROUTINE          @E2267F2  */\n  void          *tsvtstck;    /* ADDRESS OF STACK ROUTINE            @E2267F2  */\n  void          *tsvttsl;     /* ADDRESS OF TMP LAR                  @E2267F2  */\n  void          *tsvtscan;    /* ADDRESS OF SCAN ROUTINE             @E2267F2  */\n  void          *tsvtpars;    /* ADDRESS OF PARSE ROUTINE            @E2267F2  */\n  void          *tsvtef02;    /* ADDRESS OF MESSAGE WRITER ROUTINE   @E2267F2  */\n  void          *tsvttpvt;    /* Address of TPVT                     @E1402S6  */\n  void          *tsvtrcvy;    /* Address of Recovery Routine IKJCMDRC @E1402B1 */\n  void          *tsvttran;    /* IKJTRANS                            @E22D2D3  */\n  unsigned char  tsvtbcmt\u00c48\u00dc; /* Member Token for Broadcast Notice XCF Group   */\n  void          *tsvtcaf;     /* CLIST ATTENTION FACILITY ADDR REL 3 @PBY0257  */\n  struct \u00e4\n    unsigned char  _tsvtlver;    /* - VERSION LEVEL                    @PBY0257 */\n    unsigned char  _tsvtlrel\u00c42\u00dc; /* - RELEASE NUMBER                   @PBY0257 */\n    unsigned char  _tsvtlmod;    /* - MODIFICATION LEVEL               @PBY0257 */\n    \u00fc tsvttsol;\n  void          *tsvtctdb;    /* ADDRESS OF DOUBLE BYTE CHAR ROUTINE @E1402C1  */\n  void          *tsvtrif;     /* BROADCAST DATA SET INTERFACE        @E1402V7  */\n  void          *tsvtraf;     /* LOGON RACF SUPPORT ROUTINE ADDRESS  @E1402V7  */\n  void          *tsvtrtrp;    /* TSO ROUTER ADDRESS                  @E1402S6  */\n  void          *tsvttbls;    /* ADDRESS OF TABLE LOOK UP SERVICE    @E1502I7  */\n  void          *tsvtadtb;    /* ADDRESS OF ALTLIB                   @E1502I7  */\n  void          *tsvttblr;    /* ADDRESS OF TABLE LOOKUP SERVICE RTN @PEI0434  */\n  void          *tsvtestk;    /* Address of IRXESTK1                 @PEI0617  */\n  void          *tsvttvar;    /* Address of IRXTVARS                 @PEI0432  */\n  void          *tsvtinit;    /* Address of IRXINIT                  @PEI0709  */\n  void          *tsvtolar;    /* Address of IRXIOLAR                 @PEI0709  */\n  void          *tsvtto00;    /* Address of IRXSTO00                 @PEI0709  */\n  void          *tsvtt44x;    /* Address of IKJCT44X                 @PEI0791  */\n  void          *tsvtfts2;    /* Address of IKJEFTS2                 @PEI0944  */\n  void          *tsvtexe;     /* Address of IRXEXEC                  @YA19182  */\n  void          *tsvtinou;    /* Address of IRXINOUT                 @YA19182  */\n  void          *tsvtloa;     /* Address of IRXLOAD                  @YA19182  */\n  void          *tsvtter;     /* Address of IRXTERM                  @YA19182  */\n  void          *tsvtsubc;    /* Address of IRXSUBCM                 @YA19182  */\n  void          *tsvtmsgi;    /* Address of IRXMSGID                 @YA19182  */\n  void          *tsvtexco;    /* Address of IRXEXCOM                 @YA19182  */\n  void          *tsvtterm;    /* Address of IRXTERMA                 @YA19182  */\n  void          *tsvtetvp;    /* Address of Exit & Vector Table       @YA26799 */\n  void          *tsvttsfi;    /* Address of IKJEFTSI                 @E22D2E9  */\n  void          *tsvttsft;    /* Address of IKJEFTST                 @E22D2E9  */\n  int            tsvtpcn1;    /* PC number for IKJPCENV              @E23D2DB  */\n  void          *tsvtsnta;    /* System copy of the SNTAB            @E23D2F1  */\n  void          *tsvtsvta;    /* System copy of the SVTAB            @E23D2F1  */\n  int            tsvtsyml;    /* Length of system SNTAB and SVTAB    @E23D2F1  */\n  int            tsvtxcfu;    /* Lock for parmlib updating           @YA34930  */\n  void          *tsvtmstr;    /* Address of Master ASCB              @YA34930  */\n  int            tsvtbecb;    /* ECB for IKJBCMSG                    @YA34930  */\n  void          *tsvtappc;    /* Addr of APPC callable service table @E24D2D0  */\n  void          *tsvturps;    /* Address of IKJURPS module           @E24D2H3  */\n  int            tsvtpcn2;    /* PC number for IKJCMDPC              @KO10185  */\n  void          *tsvtmsr0;    /* Address of IKJMSR0 module               @L1A  */\n  void          *tsvtmdt_;    /* Address of module table                 @L2A  */\n  int            tsvtsecb;    /* ECB for broadcast switches              @L3A  */\n  void          *tsvtswas;    /* Address of ASCB for address space       @L3A  */\n  void          *tsvtswwa;    /* Address of switch processing work area  @L3A  */\n  void          *tsvtswcb;    /* Address of switch control block         @L3A  */\n  int            _filler1\u00c47\u00dc; /* Reserved                                @L3C  */\n  double         tsvtend;     /* ASSURE TSVT ENDS ON DOUBLE WORD     @E2267F2  */\n  \u00fc;\n\n#define tsvtlver tsvttsol._tsvtlver\n#define tsvtlrel tsvttsol._tsvtlrel\n#define tsvtlmod tsvttsol._tsvtlmod\n\n/* Values for field \"tsvtend\" */\n#define tsvtclev 0x08 /* CURRENT LEVEL OF THE TSVT           @AA17180 */\n#define tsveretr 0x01 /* RETURN VARIABLE VALUE                        */\n#define tsveupdt 0x02 /* UPDATE VARIABLE                              */\n#define tsveloc  0x03 /* LOCATE / LOCATE NEXT                         */\n#define tsversvd 0x04 /* RESERVED                                     */\n#define tsvnoimp 0x12 /* NO IMPLICIT                  @ZA87430        */\n#define tsvrok   0x00 /* EVERY THING OK                               */\n#define tsvrnors 0x04 /* VARIABLE RETURNED SHOULDN'T                  */\n#define tsvreval 0x08 /* VARIABLE RETURNED REQUIRES                   */\n#define tsvrlab  0x0C /* VARIABLE RETURNED IS A                       */\n#define tsvrnaup 0x10 /* SYSTEM VARIABLE - CAN'T BE                   */\n#define tsvrnom  0x14 /* FOR LOCATE - NO VARIABLE                     */\n#define tsvrproc 0x18 /* VARIABLE RETURNED IS A PROCEDURE             */\n#define tsvrsvd2 0x1E /* RESERVED                     @E21D2G9        */\n#define tsvrgetf 0x20 /* GETMAIN/FREEMAIN FAILURE                     */\n#define tsvrnsiz 0x24 /* SYMBOL NAME TOO LARGE                        */\n#define tsvrenv  0x28 /* INCORRECT ENVIRONMENT                        */\n#define tsvrparm 0x2C /* INVALID ENTRY CODE                           */\n#define tsvrdup  0x30 /* DUPLICATE SYMBOL FOUND                       */\n#define tsvrundf 0x34 /* UNDEFINED VARIABLE                           */\n#define tsvrgler 0x38 /* TOO MANY GLOBAL VARIABLES                    */\n#define tsvrundg 0x3C /* UNDEFINED GLOBAL VARIABLE                    */\n#define tsvrinvr 0x40 /* VARIABLE NOT VALID AS A CALL BY              */\n#define tsvrundr 0x44 /* UNDEFINED CALL BY REFERENCE VARIABLE         */\n#define tsvirexx 0x50 /* VARIABLE NAME IS NOT VALID FOR REXX          */\n#define tsvrexxe 0x51 /* AN UNEXPECTED RETURN CODE WAS                */\n#define tsvtnctu 0x80 /* Instorage copy of system notices             */\n#define tsvtnetl 0x40 /* None of the TSO/E Exits                      */\n#define tsvtupdp 0x20 /* IKJBCMSG posted for parmlib update           */\n#define tsvtswch 0x10 /* IKJBCMSG posted to switch the                */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TTE": {"ttr": 8183, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tte \u00e4\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _ttetype;   /* TRACE TABLE ENTRY TYPE (X'7N'). */\n        unsigned char  _ttembz1;   /* RESERVED. (MUST BE ZERO)        */\n        unsigned char  _ttetod\u00c46\u00dc; /* TOD-CLOCK BITS 16-63.           */\n        struct \u00e4\n          unsigned char  _filler1\u00c42\u00dc;  /* FLAG BYTES. */\n          struct \u00e4\n            unsigned char  _ttexpsid; /* EXPLICIT ENTRY SUB-ID. */\n            unsigned char  _ttexpid;  /* EXPLICIT ENTRY ID.     */\n            \u00fc ttexptyp;\n          \u00fc ttetote;\n        \u00fc ttexp;\n      int            _tteunq;        /* UNIQUE ENTRY DESCRIPTIONS. */\n      unsigned char  _filler2\u00c4128\u00dc;\n      \u00fc _tte_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _tteetype;    /* TRACE TABLE ENTRY TYPE (X'7N').  */\n        unsigned char  _tteembz1;    /* MUST BE 10000000            @LGA */\n        unsigned char  _tteetod\u00c410\u00dc; /* TOD-CLOCK BITS 0-79.        @LGA */\n        struct \u00e4\n          unsigned char  _filler3\u00c42\u00dc;  /* FLAG BYTES. */\n          struct \u00e4\n            unsigned char  _tteexpsd; /* EXPLICIT ENTRY SUB-ID.      @LGA */\n            unsigned char  _tteexpid; /* EXPLICIT ENTRY ID.          @LGA */\n            \u00fc tteexptp;\n          \u00fc tteetote;\n        \u00fc tteexp;\n      int            _tteeunq;       /* UNIQUE ENTRY DESCRIPTIONS.  @LGA */\n      unsigned char  _filler4\u00c4124\u00dc;\n      \u00fc _tte_struct2;\n    struct \u00e4\n      unsigned char  _filler5\u00c412\u00dc;\n      struct \u00e4\n        struct \u00e4\n          void          *_ttetcb; /* TCB ADDRESS. */\n          \u00fc ttewrd0;\n        struct \u00e4\n          short int      _ttedep;  /* DEPENDENT ON EACH */\n          short int      _tteasid; /* ASID.             */\n          \u00fc ttewrd1;\n        unsigned char  _ttewrd2\u00c44\u00dc; /* TTE WORD 2.  */\n        unsigned char  _ttewrd3\u00c44\u00dc; /* TTE WORD 3.  */\n        unsigned char  _ttewrd4\u00c44\u00dc; /* TTE WORD 4.  */\n        unsigned char  _ttewrd5\u00c44\u00dc; /* TTE WORD 5.  */\n        unsigned char  _ttewrd6\u00c44\u00dc; /* TTE WORD 6.  */\n        unsigned char  _ttewrd7\u00c44\u00dc; /* TTE WORD 7.  */\n        unsigned char  _ttewrd8\u00c44\u00dc; /* TTE WORD 8.  */\n        unsigned char  _ttewrd9\u00c44\u00dc; /* TTE WORD 9.  */\n        unsigned char  _ttewrda\u00c44\u00dc; /* TTE WORD 10. */\n        unsigned char  _ttewrdb\u00c44\u00dc; /* TTE WORD 11. */\n        unsigned char  _ttewrdc\u00c44\u00dc; /* TTE WORD 12. */\n        unsigned char  _ttewrdd\u00c44\u00dc; /* TTE WORD 13. */\n        unsigned char  _ttewrde\u00c44\u00dc; /* TTE WORD 14. */\n        unsigned char  _ttewrdf\u00c44\u00dc; /* TTE WORD 15. */\n        \u00fc tteexcom;\n      int            _ttexpend;     /* END OF MAXIMUM EXPLICIT TTE. */\n      unsigned char  _filler6\u00c464\u00dc;\n      \u00fc _tte_struct3;\n    struct \u00e4\n      unsigned char  _filler7\u00c416\u00dc;\n      struct \u00e4\n        struct \u00e4\n          unsigned char  _filler8\u00c44\u00dc;  /* RESERVED                    @LGA */\n          void          *_tteetcb;     /* TCB ADDRESS.                @LGA */\n          \u00fc tteewrd0;\n        struct \u00e4\n          unsigned char  _filler9\u00c44\u00dc;  /* RESERVED                    @LGA */\n          short int      _tteedep;     /* DEPENDENT ON EACH           @LGA */\n          short int      _tteeasid;    /* ASID.                       @LGA */\n          \u00fc tteewrd1;\n        unsigned char  _tteewrd2\u00c48\u00dc; /* TTE DOUBLE WORD3            @LGA */\n        unsigned char  _tteewrd3\u00c48\u00dc; /* TTE DOUBLE WORD4            @LGA */\n        unsigned char  _tteewrd4\u00c48\u00dc; /* TTE DOUBLE WORD5            @LGA */\n        unsigned char  _tteewrd5\u00c48\u00dc; /* TTE DOUBLE WORD6            @LGA */\n        unsigned char  _tteewrd6\u00c48\u00dc; /* TTE DOUBLE WORD7            @LGA */\n        unsigned char  _tteewrd7\u00c48\u00dc; /* TTE DOUBLE WORD8            @LGA */\n        unsigned char  _tteewrd8\u00c48\u00dc; /* TTE DOUBLE WORD9            @LGA */\n        unsigned char  _tteewrd9\u00c48\u00dc; /* TTE DOUBLE WORD10           @LGA */\n        unsigned char  _tteewrda\u00c48\u00dc; /* TTE DOUBLE WORD11           @LGA */\n        unsigned char  _tteewrdb\u00c48\u00dc; /* TTE DOUBLE WORD12           @LGA */\n        unsigned char  _tteewrdc\u00c48\u00dc; /* TTE DOUBLE WORD13           @LGA */\n        unsigned char  _tteewrdd\u00c48\u00dc; /* TTE DOUBLE WORD14           @LGA */\n        unsigned char  _tteewrde\u00c48\u00dc; /* TTE DOUBLE WORD15           @LGA */\n        unsigned char  _tteewrdf\u00c48\u00dc; /* TTE DOUBLE WORD16           @LGA */\n        \u00fc tteeecom;\n      \u00fc _tte_struct4;\n    \u00fc _tte_union1;\n  int            tteexend; /* END OF MAXIMUM EXPLICIT TTE. */\n  \u00fc;\n\n#define ttetype  _tte_union1._tte_struct1.ttexp._ttetype\n#define ttembz1  _tte_union1._tte_struct1.ttexp._ttembz1\n#define ttetod   _tte_union1._tte_struct1.ttexp._ttetod\n#define ttexpsid _tte_union1._tte_struct1.ttexp.ttetote.ttexptyp._ttexpsid\n#define ttexpid  _tte_union1._tte_struct1.ttexp.ttetote.ttexptyp._ttexpid\n#define tteunq   _tte_union1._tte_struct1._tteunq\n#define tteetype _tte_union1._tte_struct2.tteexp._tteetype\n#define tteembz1 _tte_union1._tte_struct2.tteexp._tteembz1\n#define tteetod  _tte_union1._tte_struct2.tteexp._tteetod\n#define tteexpsd _tte_union1._tte_struct2.tteexp.tteetote.tteexptp._tteexpsd\n#define tteexpid _tte_union1._tte_struct2.tteexp.tteetote.tteexptp._tteexpid\n#define tteeunq  _tte_union1._tte_struct2._tteeunq\n#define ttetcb   _tte_union1._tte_struct3.tteexcom.ttewrd0._ttetcb\n#define ttedep   _tte_union1._tte_struct3.tteexcom.ttewrd1._ttedep\n#define tteasid  _tte_union1._tte_struct3.tteexcom.ttewrd1._tteasid\n#define ttewrd2  _tte_union1._tte_struct3.tteexcom._ttewrd2\n#define ttewrd3  _tte_union1._tte_struct3.tteexcom._ttewrd3\n#define ttewrd4  _tte_union1._tte_struct3.tteexcom._ttewrd4\n#define ttewrd5  _tte_union1._tte_struct3.tteexcom._ttewrd5\n#define ttewrd6  _tte_union1._tte_struct3.tteexcom._ttewrd6\n#define ttewrd7  _tte_union1._tte_struct3.tteexcom._ttewrd7\n#define ttewrd8  _tte_union1._tte_struct3.tteexcom._ttewrd8\n#define ttewrd9  _tte_union1._tte_struct3.tteexcom._ttewrd9\n#define ttewrda  _tte_union1._tte_struct3.tteexcom._ttewrda\n#define ttewrdb  _tte_union1._tte_struct3.tteexcom._ttewrdb\n#define ttewrdc  _tte_union1._tte_struct3.tteexcom._ttewrdc\n#define ttewrdd  _tte_union1._tte_struct3.tteexcom._ttewrdd\n#define ttewrde  _tte_union1._tte_struct3.tteexcom._ttewrde\n#define ttewrdf  _tte_union1._tte_struct3.tteexcom._ttewrdf\n#define ttexpend _tte_union1._tte_struct3._ttexpend\n#define tteetcb  _tte_union1._tte_struct4.tteeecom.tteewrd0._tteetcb\n#define tteedep  _tte_union1._tte_struct4.tteeecom.tteewrd1._tteedep\n#define tteeasid _tte_union1._tte_struct4.tteeecom.tteewrd1._tteeasid\n#define tteewrd2 _tte_union1._tte_struct4.tteeecom._tteewrd2\n#define tteewrd3 _tte_union1._tte_struct4.tteeecom._tteewrd3\n#define tteewrd4 _tte_union1._tte_struct4.tteeecom._tteewrd4\n#define tteewrd5 _tte_union1._tte_struct4.tteeecom._tteewrd5\n#define tteewrd6 _tte_union1._tte_struct4.tteeecom._tteewrd6\n#define tteewrd7 _tte_union1._tte_struct4.tteeecom._tteewrd7\n#define tteewrd8 _tte_union1._tte_struct4.tteeecom._tteewrd8\n#define tteewrd9 _tte_union1._tte_struct4.tteeecom._tteewrd9\n#define tteewrda _tte_union1._tte_struct4.tteeecom._tteewrda\n#define tteewrdb _tte_union1._tte_struct4.tteeecom._tteewrdb\n#define tteewrdc _tte_union1._tte_struct4.tteeecom._tteewrdc\n#define tteewrdd _tte_union1._tte_struct4.tteeecom._tteewrdd\n#define tteewrde _tte_union1._tte_struct4.tteeecom._tteewrde\n#define tteewrdf _tte_union1._tte_struct4.tteeecom._tteewrdf\n\n/* Values for field \"ttetype\" */\n#define ttetex   0x70  /* EXPLICIT TTE TYPE (X'7N').       */\n#define ttemex   0xF0  /* MASK FOR EXPLICIT TTE TYPE.      */\n#define tteregs  0x0F  /* MASK FOR ONE LESS THAN THE       */\n\n/* Values for field \"ttexpsid\" */\n#define ttemsid  0x0F  /* MASK FOR EXPLICIT TTE SUB-ID.    */\n\n/* Values for field \"tteetype\" */\n#define tteetex  0x70  /* EXPLICIT TTE TYPE (X'7N').  @LGA */\n#define tteemex  0xF0  /* MASK FOR EXPLICIT TTE TYPE. @LGA */\n#define tteeregs 0x0F  /* MASK FOR ONE LESS THAN THE  @LGA */\n\n/* Values for field \"tteexpsd\" */\n#define tteemsid 0x0F  /* MASK FOR EXPLICIT TTE SUB-ID.    */\n\n/* Values for field \"ttexpend\" */\n#define ttetmax  76    /* MAXIMUM LENGTH OF EXPLICIT       */\n\n/* Values for field \"tteexend\" */\n#define tteetmax 144   /* MAXIMUM LENGTH OF EXPLICIT  @LGA */\n#define ttemtsch 0x01  /* SUBCHANNEL TYPE MAJOR ID.        */\n#define ttemtext 0x03  /* EXTERNAL INTERRUPT TYPE MAJOR    */\n#define ttemtsvc 0x05  /* SVC TYPE MAJOR ID.               */\n#define ttemtdsp 0x0F  /* DISPATCHER TYPE MAJOR ID.        */\n#define ttetssch 0x01  /* SSCH TYPE ID.                    */\n#define ttetext  0x03  /* GENERAL EXT TYPE ID.             */\n#define ttetsvc  0x05  /* GENERAL SVC TYPE ID.             */\n#define ttetpgm  0x07  /* PGM TYPE ID.                     */\n#define ttetsper 0x09  /* SLIP/PER TYPE ID.           @L1A */\n#define ttetdsp  0x0F  /* DSP TYPE ID.                     */\n#define ttetio   0x0B  /* IO TYPE ID.                      */\n#define ttetmch  0x13  /* MCH TYPE ID.                     */\n#define ttetrst  0x15  /* RST TYPE ID.                     */\n#define ttetacr  0x17  /* ACR TYPE ID.                     */\n#define ttetsusp 0x19  /* SUSP TYPE ID.                    */\n#define ttetaltr 0x1B  /* ALTR TYPE ID.                    */\n#define ttetrcvy 0x1D  /* RCVY TYPE ID.               @L3A */\n#define ttettime 0x1F  /* TIME TYPE ID.               @L5A */\n#define ttetusr0 0x7F  /* USR0 TYPE ID.                    */\n#define ttetems  0x103 /* EMS EXT TYPE ID.                 */\n#define ttetmsch 0x101 /* MSCH TYPE ID.                    */\n#define ttetsvcr 0x105 /* SVCR TYPE ID.                    */\n#define ttetsrb  0x10F /* SRB TYPE ID.                     */\n#define ttetusr1 0x17F /* USR1 TYPE ID.                    */\n#define ttethsch 0x201 /* HSCH TYPE ID.                    */\n#define ttetss   0x203 /* SS EXT TYPE ID.                  */\n#define ttetssrv 0x205 /* SSRV TYPE ID.               @L2A */\n#define ttetssrb 0x20F /* SSRB TYPE ID.                    */\n#define ttetusr2 0x27F /* USR2 TYPE ID.                    */\n#define ttetcsch 0x301 /* CSCH TYPE ID.                    */\n#define ttetcall 0x303 /* EXTERNAL CALL EXT TYPE ID.       */\n#define ttetusr3 0x37F /* USR3 TYPE ID.                    */\n#define ttetrsch 0x401 /* RSCH TYPE ID.                    */\n#define ttetclkc 0x403 /* CLOCK COMPARATOR EXT TYPE ID.    */\n#define ttetusr4 0x47F /* USR4 TYPE ID.                    */\n#define ttetsiga 0x501 /* SIGA TYPE ID.               @01A */\n#define ttetusr5 0x57F /* USR5 TYPE ID.                    */\n#define ttetxsch 0x601 /* XSCH TYPE ID.               @02A */\n#define ttetusr6 0x67F /* USR6 TYPE ID.                    */\n#define ttetusr7 0x77F /* USR7 TYPE ID.                    */\n#define ttetusr8 0x87F /* USR8 TYPE ID.                    */\n#define ttetusr9 0x97F /* USR9 TYPE ID.                    */\n#define ttetusra 0xA7F /* USRA TYPE ID.                    */\n#define ttetusrb 0xB7F /* USRB TYPE ID.                    */\n#define ttetusrc 0xC7F /* USRC TYPE ID.                    */\n#define ttetusrd 0xD7F /* USRD TYPE ID.                    */\n#define ttetusre 0xE7F /* USRE TYPE ID.                    */\n#define ttetsvce 0xF05 /* SVC ERROR TYPE ID.               */\n#define ttetwait 0xF0F /* WAIT TYPE ID.                    */\n#define ttetusrf 0xF7F /* USRF TYPE ID.                    */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TTRENF60": {"ttr": 8431, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ttrenf60 \u00e4\n  unsigned char  enf60_id\u00c46\u00dc;     /* Eye catcher 'ENF60 '            */\n  unsigned char  enf60_version;   /* Version of mapping              */\n  unsigned char  _filler1;        /* Reserved                        */\n  int            enf60_length;    /* Length of parameter list        */\n  struct \u00e4\n    unsigned char  _enf60_byte1; /* Qualifier Byte 1 */\n    unsigned char  _enf60_byte2; /* Qualifier Byte 2 */\n    unsigned char  _enf60_byte3; /* Qualifier Byte 3 */\n    unsigned char  _enf60_byte4; /* Qualifier Byte 4 */\n    \u00fc enf60_qual;\n  unsigned char  enf60_sysnm\u00c48\u00dc;  /* Name of the system on which the */\n  unsigned char  enf60_wtr\u00c47\u00dc;    /* Writer procname                 */\n  unsigned char  _filler2;        /* - reserved                      */\n  int            enf60_bfsz;      /* Buffer size (in binary)         */\n  unsigned char  enf60_seqn;      /* Filter seq. num for ON or OFF   */\n  unsigned char  enf60_lvl;       /* Filter level indicator          */\n  unsigned char  _filler3\u00c42\u00dc;     /* - reserved                      */\n  union \u00e4\n    unsigned char  _enf60_cmdfltr; /* Command filter area   */\n    unsigned char  _enf60_cmdflg;  /* Filter composite flag */\n    \u00fc _ttrenf60_union1;\n  unsigned char  enf60_cmdflg2;   /* Filter composite flag           */\n  unsigned char  enf60_cmdrsd\u00c42\u00dc; /* Reserved                        */\n  union \u00e4\n    unsigned char  _enf60_tranflt\u00c410\u00dc; /* Transaction Name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_tranflg;      /* TRAN filter parameter    */\n      unsigned char  _enf60_tranlen;      /* Length of TRAN parameter */\n      unsigned char  _enf60_tranentry\u00c48\u00dc; /* TRAN filter parameter    */\n      \u00fc _ttrenf60_struct1;\n    \u00fc _ttrenf60_union2;\n  union \u00e4\n    unsigned char  _enf60_userflt\u00c410\u00dc; /* USERSID filter parm */\n    struct \u00e4\n      unsigned char  _enf60_userflg;      /* USERID filter parameter    */\n      unsigned char  _enf60_userlen;      /* Length of USERID parameter */\n      unsigned char  _enf60_userentry\u00c48\u00dc; /* USER filter parameter      */\n      \u00fc _ttrenf60_struct2;\n    \u00fc _ttrenf60_union3;\n  union \u00e4\n    unsigned char  _enf60_collflt\u00c420\u00dc; /* Collection Name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_collflg;       /* Collection Name filter parm */\n      unsigned char  _enf60_colllen;       /* Length of COLL parameter    */\n      unsigned char  _enf60_collentry\u00c418\u00dc; /* COLL filter parameter       */\n      \u00fc _ttrenf60_struct3;\n    \u00fc _ttrenf60_union4;\n  union \u00e4\n    unsigned char  _enf60_lunmflt\u00c410\u00dc; /* LUNAME filter parm */\n    struct \u00e4\n      unsigned char  _enf60_lunmflg;      /* LUNAME filter parm     */\n      unsigned char  _enf60_lunmlen;      /* Length of LU parameter */\n      unsigned char  _enf60_lunmentry\u00c48\u00dc; /* LU filter parameter    */\n      \u00fc _ttrenf60_struct4;\n    \u00fc _ttrenf60_union5;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _enf60_procflt\u00c410\u00dc; /* PROC name filter parm */\n      unsigned char  _filler4\u00c410\u00dc;\n      \u00fc _ttrenf60_struct5;\n    struct \u00e4\n      unsigned char  _enf60_procflg;       /* PROC name filter parm      */\n      unsigned char  _enf60_proclen;       /* Length of PROC parameter   */\n      unsigned char  _enf60_procentry\u00c418\u00dc; /* PROC name filter parameter */\n      \u00fc _ttrenf60_struct6;\n    \u00fc _ttrenf60_union6;\n  union \u00e4\n    unsigned char  _enf60_pkgflt\u00c410\u00dc; /* Pkg name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_pkgflg;      /* Pkg name filter parm      */\n      unsigned char  _enf60_pkglen;      /* Length of PKG parameter   */\n      unsigned char  _enf60_pkgentry\u00c48\u00dc; /* Pkg name filter parameter */\n      \u00fc _ttrenf60_struct7;\n    \u00fc _ttrenf60_union7;\n  union \u00e4\n    unsigned char  _enf60_netflt\u00c410\u00dc; /* NETID filter parm */\n    struct \u00e4\n      unsigned char  _enf60_netflg;      /* NETID filter parm         */\n      unsigned char  _enf60_netlen;      /* Length of NETID parameter */\n      unsigned char  _enf60_netentry\u00c48\u00dc; /* NETID filter parameter    */\n      \u00fc _ttrenf60_struct8;\n    \u00fc _ttrenf60_union8;\n  union \u00e4\n    unsigned char  _enf60_planflt\u00c410\u00dc; /* PLAN name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_planflg;      /* PLAN name filter parm      */\n      unsigned char  _enf60_planlen;      /* Length of PLAN parameter   */\n      unsigned char  _enf60_planentry\u00c48\u00dc; /* PLAN name filter parameter */\n      \u00fc _ttrenf60_struct9;\n    \u00fc _ttrenf60_union9;\n  union \u00e4\n    unsigned char  _enf60_conflt\u00c410\u00dc; /* CON name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_conflg;      /* CON name filter parm      */\n      unsigned char  _enf60_conlen;      /* Length of CON parameter   */\n      unsigned char  _enf60_conentry\u00c48\u00dc; /* CON name filter parameter */\n      \u00fc _ttrenf60_struct10;\n    \u00fc _ttrenf60_union10;\n  union \u00e4\n    unsigned char  _enf60_corflt\u00c420\u00dc; /* COR name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_corflg;       /* COR name filter parm      */\n      unsigned char  _enf60_corlen;       /* Length of COR parameter   */\n      unsigned char  _enf60_corentry\u00c418\u00dc; /* COR name filter parameter */\n      \u00fc _ttrenf60_struct11;\n    \u00fc _ttrenf60_union11;\n  union \u00e4\n    unsigned char  _enf60_prfflt\u00c410\u00dc; /* PRF name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_prfflg;      /* PRF name filter parm      */\n      unsigned char  _enf60_prflen;      /* Length of PRF parameter   */\n      unsigned char  _enf60_prfentry\u00c48\u00dc; /* PRF name filter parameter */\n      \u00fc _ttrenf60_struct12;\n    \u00fc _ttrenf60_union12;\n  union \u00e4\n    unsigned char  _enf60_prsflt\u00c434\u00dc; /* PRS name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_prsflg;       /* PRS name filter parm      */\n      unsigned char  _enf60_prslen;       /* Length of PRS parameter   */\n      unsigned char  _enf60_prsentry\u00c432\u00dc; /* PRS name filter parameter */\n      \u00fc _ttrenf60_struct13;\n    \u00fc _ttrenf60_union13;\n  union \u00e4\n    unsigned char  _enf60_rsvflt\u00c420\u00dc;   /* Reserved */\n    unsigned char  _enf60_rsventry\u00c420\u00dc; /* Reserved */\n    \u00fc _ttrenf60_union14;\n  union \u00e4\n    unsigned char  _enf60_subflt\u00c420\u00dc; /* SUB name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_subflg;       /* SUB name filter parm      */\n      unsigned char  _enf60_sublen;       /* Length of SUB parameter   */\n      unsigned char  _enf60_subentry\u00c418\u00dc; /* SUB name filter parameter */\n      \u00fc _ttrenf60_struct14;\n    \u00fc _ttrenf60_union15;\n  union \u00e4\n    unsigned char  _enf60_tcflt\u00c410\u00dc; /* TC name filter parm */\n    struct \u00e4\n      unsigned char  _enf60_tcflg;      /* TC name filter parm      */\n      unsigned char  _enf60_tclen;      /* Length of TC parameter   */\n      unsigned char  _enf60_tcentry\u00c48\u00dc; /* TC name filter parameter */\n      \u00fc _ttrenf60_struct15;\n    \u00fc _ttrenf60_union16;\n  unsigned char  enf60rs1\u00c4124\u00dc;   /* Reserved                        */\n  unsigned char  enf60rs2\u00c48\u00dc;     /* Reserved                        */\n  \u00fc;\n\n#define enf60_byte1     enf60_qual._enf60_byte1\n#define enf60_byte2     enf60_qual._enf60_byte2\n#define enf60_byte3     enf60_qual._enf60_byte3\n#define enf60_byte4     enf60_qual._enf60_byte4\n#define enf60_cmdfltr   _ttrenf60_union1._enf60_cmdfltr\n#define enf60_cmdflg    _ttrenf60_union1._enf60_cmdflg\n#define enf60_tranflt   _ttrenf60_union2._enf60_tranflt\n#define enf60_tranflg   _ttrenf60_union2._ttrenf60_struct1._enf60_tranflg\n#define enf60_tranlen   _ttrenf60_union2._ttrenf60_struct1._enf60_tranlen\n#define enf60_tranentry _ttrenf60_union2._ttrenf60_struct1._enf60_tranentry\n#define enf60_userflt   _ttrenf60_union3._enf60_userflt\n#define enf60_userflg   _ttrenf60_union3._ttrenf60_struct2._enf60_userflg\n#define enf60_userlen   _ttrenf60_union3._ttrenf60_struct2._enf60_userlen\n#define enf60_userentry _ttrenf60_union3._ttrenf60_struct2._enf60_userentry\n#define enf60_collflt   _ttrenf60_union4._enf60_collflt\n#define enf60_collflg   _ttrenf60_union4._ttrenf60_struct3._enf60_collflg\n#define enf60_colllen   _ttrenf60_union4._ttrenf60_struct3._enf60_colllen\n#define enf60_collentry _ttrenf60_union4._ttrenf60_struct3._enf60_collentry\n#define enf60_lunmflt   _ttrenf60_union5._enf60_lunmflt\n#define enf60_lunmflg   _ttrenf60_union5._ttrenf60_struct4._enf60_lunmflg\n#define enf60_lunmlen   _ttrenf60_union5._ttrenf60_struct4._enf60_lunmlen\n#define enf60_lunmentry _ttrenf60_union5._ttrenf60_struct4._enf60_lunmentry\n#define enf60_procflt   _ttrenf60_union6._ttrenf60_struct5._enf60_procflt\n#define enf60_procflg   _ttrenf60_union6._ttrenf60_struct6._enf60_procflg\n#define enf60_proclen   _ttrenf60_union6._ttrenf60_struct6._enf60_proclen\n#define enf60_procentry _ttrenf60_union6._ttrenf60_struct6._enf60_procentry\n#define enf60_pkgflt    _ttrenf60_union7._enf60_pkgflt\n#define enf60_pkgflg    _ttrenf60_union7._ttrenf60_struct7._enf60_pkgflg\n#define enf60_pkglen    _ttrenf60_union7._ttrenf60_struct7._enf60_pkglen\n#define enf60_pkgentry  _ttrenf60_union7._ttrenf60_struct7._enf60_pkgentry\n#define enf60_netflt    _ttrenf60_union8._enf60_netflt\n#define enf60_netflg    _ttrenf60_union8._ttrenf60_struct8._enf60_netflg\n#define enf60_netlen    _ttrenf60_union8._ttrenf60_struct8._enf60_netlen\n#define enf60_netentry  _ttrenf60_union8._ttrenf60_struct8._enf60_netentry\n#define enf60_planflt   _ttrenf60_union9._enf60_planflt\n#define enf60_planflg   _ttrenf60_union9._ttrenf60_struct9._enf60_planflg\n#define enf60_planlen   _ttrenf60_union9._ttrenf60_struct9._enf60_planlen\n#define enf60_planentry _ttrenf60_union9._ttrenf60_struct9._enf60_planentry\n#define enf60_conflt    _ttrenf60_union10._enf60_conflt\n#define enf60_conflg    _ttrenf60_union10._ttrenf60_struct10._enf60_conflg\n#define enf60_conlen    _ttrenf60_union10._ttrenf60_struct10._enf60_conlen\n#define enf60_conentry  _ttrenf60_union10._ttrenf60_struct10._enf60_conentry\n#define enf60_corflt    _ttrenf60_union11._enf60_corflt\n#define enf60_corflg    _ttrenf60_union11._ttrenf60_struct11._enf60_corflg\n#define enf60_corlen    _ttrenf60_union11._ttrenf60_struct11._enf60_corlen\n#define enf60_corentry  _ttrenf60_union11._ttrenf60_struct11._enf60_corentry\n#define enf60_prfflt    _ttrenf60_union12._enf60_prfflt\n#define enf60_prfflg    _ttrenf60_union12._ttrenf60_struct12._enf60_prfflg\n#define enf60_prflen    _ttrenf60_union12._ttrenf60_struct12._enf60_prflen\n#define enf60_prfentry  _ttrenf60_union12._ttrenf60_struct12._enf60_prfentry\n#define enf60_prsflt    _ttrenf60_union13._enf60_prsflt\n#define enf60_prsflg    _ttrenf60_union13._ttrenf60_struct13._enf60_prsflg\n#define enf60_prslen    _ttrenf60_union13._ttrenf60_struct13._enf60_prslen\n#define enf60_prsentry  _ttrenf60_union13._ttrenf60_struct13._enf60_prsentry\n#define enf60_rsvflt    _ttrenf60_union14._enf60_rsvflt\n#define enf60_rsventry  _ttrenf60_union14._enf60_rsventry\n#define enf60_subflt    _ttrenf60_union15._enf60_subflt\n#define enf60_subflg    _ttrenf60_union15._ttrenf60_struct14._enf60_subflg\n#define enf60_sublen    _ttrenf60_union15._ttrenf60_struct14._enf60_sublen\n#define enf60_subentry  _ttrenf60_union15._ttrenf60_struct14._enf60_subentry\n#define enf60_tcflt     _ttrenf60_union16._enf60_tcflt\n#define enf60_tcflg     _ttrenf60_union16._ttrenf60_struct15._enf60_tcflg\n#define enf60_tclen     _ttrenf60_union16._ttrenf60_struct15._enf60_tclen\n#define enf60_tcentry   _ttrenf60_union16._ttrenf60_struct15._enf60_tcentry\n\n/* Values for field \"enf60_version\" */\n#define enf60_vone    1    /* Version 1                      */\n#define enf60_cver    0x01 /* Current version                */\n\n/* Values for field \"enf60_byte1\" */\n#define enf60_ton     0x80 /* TTrace is turned on            */\n#define enf60_tfa     0x40 /* TTrace filter set addition     */\n#define enf60_tfr     0x20 /* TTrace filter set removal      */\n#define enf60_toff    0x10 /* TTrace is turned off           */\n\n/* Values for field \"enf60_byte2\" */\n#define enf60_wst     0x80 /* CTRACE External writer started */\n#define enf60_wsp     0x40 /* CTRACE External writer stopped */\n#define enf60_ltn     0x20 /* LATENT=N specified             */\n#define enf60_lty     0x10 /* LATENT=Y specified             */\n#define enf60_buf     0x08 /* BUFSIZ= specified              */\n\n/* Values for field \"enf60_cmdflg\" */\n#define e60ctran      0x80 /* TRAN= specified                */\n#define e60cusr       0x40 /* USER= specified                */\n#define e60ccoll      0x20 /* COLL= specified                */\n#define e60clunm      0x10 /* LU= specified                  */\n#define e60cnet       0x08 /* NET= specified                 */\n#define e60cproc      0x04 /* PROC= specified                */\n#define e60cpkg       0x02 /* PKG= specified                 */\n#define e60cplan      0x01 /* PLAN= specified                */\n\n/* Values for field \"enf60_cmdflg2\" */\n#define e60ccon       0x80 /* CON= specified                 */\n#define e60ccor       0x40 /* COR= specified                 */\n#define e60cprf       0x20 /* PRF= specified                 */\n#define e60cprs       0x10 /* PRS= specified                 */\n#define e60cslu       0x08 /* sourcelu (for ITZFI)           */\n#define e60csub       0x04 /* SUB= specified                 */\n#define e60ctc        0x02 /* TC= specified                  */\n#define e60clvl       0x01 /* display level (for ITZDT)      */\n\n/* Values for field \"enf60_tranflg\" */\n#define enf60_tranvld 0x80 /* TRAN is valid                  */\n#define enf60_tranwc  0x40 /* Wildcard exists for TRAN       */\n\n/* Values for field \"enf60_userflg\" */\n#define enf60_uservld 0x80 /* USER is valid                  */\n#define enf60_userwc  0x40 /* Wildcard exists for USER       */\n\n/* Values for field \"enf60_collflg\" */\n#define enf60_collvld 0x80 /* Coll is valid                  */\n#define enf60_collwc  0x40 /* Wildcard exists for COLL       */\n\n/* Values for field \"enf60_lunmflg\" */\n#define enf60_lunmvld 0x80 /* LU is valid                    */\n#define enf60_lunmwc  0x40 /* Wildcard exists for LU         */\n\n/* Values for field \"enf60_procflg\" */\n#define enf60_procvld 0x80 /* PROC name is valid             */\n#define enf60_procwc  0x40 /* Wildcard exists for PROC       */\n\n/* Values for field \"enf60_pkgflg\" */\n#define enf60_pkgvld  0x80 /* Pkg name is valid              */\n#define enf60_pkgwc   0x40 /* Wildcard exists for PKG        */\n\n/* Values for field \"enf60_netflg\" */\n#define enf60_netvld  0x80 /* NETID is valid                 */\n#define enf60_netwc   0x40 /* Wildcard exists for NETID      */\n\n/* Values for field \"enf60_planflg\" */\n#define enf60_planvld 0x80 /* PLAN name is valid             */\n#define enf60_planwc  0x40 /* Wildcard exists for PLAN       */\n\n/* Values for field \"enf60_conflg\" */\n#define enf60_convld  0x80 /* CON name is valid              */\n#define enf60_conwc   0x40 /* Wildcard exists for CON        */\n\n/* Values for field \"enf60_corflg\" */\n#define enf60_corvld  0x80 /* COR name is valid              */\n#define enf60_corwc   0x40 /* Wildcard exists for COR        */\n\n/* Values for field \"enf60_prfflg\" */\n#define enf60_prfvld  0x80 /* PRF name is valid              */\n#define enf60_prfwc   0x40 /* Wildcard exists for PRF        */\n\n/* Values for field \"enf60_prsflg\" */\n#define enf60_prsvld  0x80 /* PRS name is valid              */\n#define enf60_prswc   0x40 /* Wildcard exists for PRS        */\n\n/* Values for field \"enf60_subflg\" */\n#define enf60_subvld  0x80 /* SUB name is valid              */\n#define enf60_subwc   0x40 /* Wildcard exists for SUB        */\n\n/* Values for field \"enf60_tcflg\" */\n#define enf60_tcvld   0x80 /* TC name is valid               */\n#define enf60_tcwc    0x40 /* Wildcard exists for TC         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "TVDSECTD": {"ttr": 8751, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct tvdsectd \u00e4\n  union \u00e4\n    unsigned char  _ikjeftsv\u00c460\u00dc; /* Total bytes */\n    struct \u00e4\n      void          *_eftst_ectparm_; /* Pointer to the */\n      unsigned char  _filler1\u00c456\u00dc;\n      \u00fc _tvdsectd_struct1;\n    struct \u00e4\n      unsigned char  _eftst_ectparm__hibit; /* This bit must be OFF  @PG10120 */\n      unsigned char  _filler2\u00c43\u00dc;\n      void          *_eftst_reserved_;      /* Pointer to RESERVED   @PG10120 */\n      unsigned char  _filler3\u00c452\u00dc;\n      \u00fc _tvdsectd_struct2;\n    struct \u00e4\n      unsigned char  _filler4\u00c44\u00dc;\n      unsigned char  _eftst_reserved__hibit; /* End of list           @PG10120 */\n      unsigned char  _filler5\u00c43\u00dc;\n      void          *_eftst_token_;          /* Pointer to TOKEN data          */\n      unsigned char  _filler6\u00c448\u00dc;\n      \u00fc _tvdsectd_struct3;\n    struct \u00e4\n      unsigned char  _filler7\u00c48\u00dc;\n      unsigned char  _eftst_token__hibit; /* End of list                    */\n      unsigned char  _filler8\u00c43\u00dc;\n      void          *_eftst_error_;       /* Ptr to ERROR data     @PG10120 */\n      unsigned char  _filler9\u00c444\u00dc;\n      \u00fc _tvdsectd_struct4;\n    struct \u00e4\n      unsigned char  _filler10\u00c412\u00dc;\n      unsigned char  _eftst_error__hibit; /* End of list           @PG10120 */\n      unsigned char  _filler11\u00c43\u00dc;\n      void          *_eftst_abend_;       /* Pointer to ABEND data          */\n      unsigned char  _filler12\u00c440\u00dc;\n      \u00fc _tvdsectd_struct5;\n    struct \u00e4\n      unsigned char  _filler13\u00c416\u00dc;\n      unsigned char  _eftst_abend__hibit; /* End of list            */\n      unsigned char  _filler14\u00c43\u00dc;\n      void          *_eftst_reason_;      /* Pointer to REASON data */\n      unsigned char  _filler15\u00c436\u00dc;\n      \u00fc _tvdsectd_struct6;\n    struct \u00e4\n      unsigned char  _filler16\u00c420\u00dc;\n      unsigned char  _eftst_reason__hibit; /* End of list                  */\n      unsigned char  _filler17\u00c43\u00dc;\n      void          *_eftst_ectparm;       /* ECT address.                 */\n      unsigned char  _eftst_reserved\u00c44\u00dc;   /* Reserved field      @WA17712 */\n      unsigned char  _eftst_token\u00c416\u00dc;     /* Token passed to IKJEFTST.  A */\n      unsigned char  _filler18\u00c412\u00dc;\n      \u00fc _tvdsectd_struct7;\n    struct \u00e4\n      unsigned char  _filler19\u00c432\u00dc;\n      int            _eftst_token1;    /* 1st fullword    @PG10120   */\n      int            _eftst_token2;    /* 2nd fullword    @PG10120   */\n      int            _eftst_token3;    /* 3rd fullword    @PG10120   */\n      int            _eftst_token4;    /* 4th fullword    @PG10120   */\n      int            _eftst_error;     /* Error reason code when     */\n      unsigned char  _eftst_abend\u00c44\u00dc;  /* Internal error abend code  */\n      unsigned char  _eftst_reason\u00c44\u00dc; /* Internal error reason code */\n      \u00fc _tvdsectd_struct8;\n    \u00fc _tvdsectd_union1;\n  \u00fc;\n\n#define ikjeftsv              _tvdsectd_union1._ikjeftsv\n#define eftst_ectparm_        _tvdsectd_union1._tvdsectd_struct1._eftst_ectparm_\n#define eftst_ectparm__hibit  _tvdsectd_union1._tvdsectd_struct2._eftst_ectparm__hibit\n#define eftst_reserved_       _tvdsectd_union1._tvdsectd_struct2._eftst_reserved_\n#define eftst_reserved__hibit _tvdsectd_union1._tvdsectd_struct3._eftst_reserved__hibit\n#define eftst_token_          _tvdsectd_union1._tvdsectd_struct3._eftst_token_\n#define eftst_token__hibit    _tvdsectd_union1._tvdsectd_struct4._eftst_token__hibit\n#define eftst_error_          _tvdsectd_union1._tvdsectd_struct4._eftst_error_\n#define eftst_error__hibit    _tvdsectd_union1._tvdsectd_struct5._eftst_error__hibit\n#define eftst_abend_          _tvdsectd_union1._tvdsectd_struct5._eftst_abend_\n#define eftst_abend__hibit    _tvdsectd_union1._tvdsectd_struct6._eftst_abend__hibit\n#define eftst_reason_         _tvdsectd_union1._tvdsectd_struct6._eftst_reason_\n#define eftst_reason__hibit   _tvdsectd_union1._tvdsectd_struct7._eftst_reason__hibit\n#define eftst_ectparm         _tvdsectd_union1._tvdsectd_struct7._eftst_ectparm\n#define eftst_reserved        _tvdsectd_union1._tvdsectd_struct7._eftst_reserved\n#define eftst_token           _tvdsectd_union1._tvdsectd_struct7._eftst_token\n#define eftst_token1          _tvdsectd_union1._tvdsectd_struct8._eftst_token1\n#define eftst_token2          _tvdsectd_union1._tvdsectd_struct8._eftst_token2\n#define eftst_token3          _tvdsectd_union1._tvdsectd_struct8._eftst_token3\n#define eftst_token4          _tvdsectd_union1._tvdsectd_struct8._eftst_token4\n#define eftst_error           _tvdsectd_union1._tvdsectd_struct8._eftst_error\n#define eftst_abend           _tvdsectd_union1._tvdsectd_struct8._eftst_abend\n#define eftst_reason          _tvdsectd_union1._tvdsectd_struct8._eftst_reason\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UTILS": {"ttr": 7903, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*\n * THIS FILE CONTAINS SAMPLE CODE.  IBM PROVIDES THIS CODE ON AN\n * 'AS IS' BASIS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n */\n\n#ifndef _UTILS_H\n#define _UTILS_H\n\n#ifndef TRUE\n#define TRUE 1\n#endif\n\n#ifndef FALSE\n#define FALSE 0\n#endif\n\ntypedef char boolean;\n\n#ifndef min\n#define min(x, y) ( (x) < (y) ? (x) : (y) )\n#endif\n\n#ifndef max\n#define max(x, y) ( (x) > (y) ? (x) : (y) )\n#endif\n\nstruct Option {\n   int optionID;\n   char *optionName;\n   int optionMinAbbrev;\n   int optionNumArg;\n};\n\nboolean isOption( char *argument, Option *optionList, Option **opt );\n\n#endif /* _UTILS_H */\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "VERSINFO": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x124o\\x01\\x124o\\x085\\x00\\x05\\x00\\x05\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2012-12-11T00:00:00", "modifydate": "2012-12-11T08:35:08", "lines": 5, "newlines": 5, "modlines": 0, "user": "ESA"}, "text": "#ifndef INCLUDE_VERSINFO\n#define INCLUDE_VERSINFO\n#define ISIS_VERSION   \"1.1.0\"\n#define ISIS_VERSION_DATE   __DATE__\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WACCESS": {"ttr": 7955, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WACCESS\n#define INCLUDE_WACCESS\n#include \"mvsbase.hpp\"\n#include \"mchain.hpp\"\n#include \"wqfss.hpp\"\n#include \"wcgi.hpp\"\n\nclass maskSTRING:public STRING\n\u00e4\nprivate:\n\tsize_t l;\n   char   exact;\npublic:\n\tmaskSTRING(STRING&);\n   virtual \u00dfmaskSTRING();\n   int compare(STRING&);\n\u00fc;\n\nclass AccessableUri: public chainE\n\u00e4\nprivate:\n\tmaskSTRING * ref;\n   maskSTRING * uri;\npublic:\n\tAccessableUri(STRING&, STRING&);\n   \u00dfAccessableUri();\n   int allowed(STRING&, STRING&);\n\u00fc;\n\nclass Access:public mCHAIN\n\u00e4\nprivate:\n\tstatic char * GLOBAL_ACCESS_LIST;\n   static char * START_ACCESS_LIST;\n   static char * END_ACCESS_LIST;\n\tCHAINITER * iter;\n   CGI * \t\tcgi;\npublic:\n\tAccess(CGI *);\n   \u00dfAccess();\n   allowed(STRING&, STRING&);\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WCGI": {"ttr": 8173, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WCGI\n#define INCLUDE_WCGI\n\n#include \"mvsbase.hpp\"\n#include \"wqfss.hpp\"\n#include \"wqvar.hpp\"\n#include \"wsupl.hpp\"\n#include \"wuri.hpp\"\n#include \"wdigaut.hpp\"\n#include \"waccess.hpp\"\n#include \"qfssglbl.hpp\"\n\n#define sWWA( n ) makeSTRING( (char *)wwa-> n , sizeof( wwa -> n ) )\n#define ASCII_CRLF     \"\u00d6x0d\u00d6x0a\"\n#define EBCDIC_CRLF     \"\u00d6r\u00d6n\"\n\nconst char * W_YES      = \"YES\";\nconst char * W_NO       = \"NO\";\n#define MAX_ENVVARS       4096\n\n//       SPACE 1\n//TCPIP task status\n//       SPACE 1\n                               //\n#define tp_status_RESET 0      //    reset\n#define tp_status_INITAPI 1    //    initapi\n#define tp_status_SOCKET 2     //    socket\n#define tp_status_BIND 3       //    bind\n#define tp_status_LISTEN 4     //    listen\n#define tp_status_ACCEPT 5     //    accept\n#define tp_status_SEND 6       //    send\n#define tp_status_RECEIVE 7    //    receive\n#define tp_status_SHUTDOWN 8   //    shutdown\n#define tp_status_CLOSE 9      //    close\n#define tp_status_TERMAPI 10   //    termapi\n#define tp_status_SELECT 11    //    select\n#define tp_status_SENDCONF 13  //    send confirm\n#define tp_status_ALLOCATE 14  //    allocate\n#define tp_status_DEALLOC 15   //    deallocate\n#define tp_status_ERROR 128    //    error\nenum CGI_status\n\u00e4\n  CGI_reset     = 0,\n  CGI_gethead   = 1,\n  CGI_getbody    = 2,\n  CGI_genhead    = 3,\n  CGI_genbody    = 4,\n  CGI_puthead    = 5,\n  CGI_putbody    = 6,\n  CGI_incomplete_head = 7,\n  CGI_close      = 10,\n  CGI_error      = 255\n\u00fc;\n\nstatic char * stc_table\u00c45\u00dc\u00c420\u00dc;\nstatic int set_stc_table( char * n , int c)\n\u00e4\n  stc_table\u00c4(c /100) -1\u00dc\u00c4 c %100 \u00dc = n ;\n  return c;\n\u00fc\n#define STC( n , c )   \u00d6\nconst int n = set_stc_table( #n, c );\n  STC(OK, 200 )\n  STC(Created, 201)\n  STC(Accepted, 202)\n  STC(No_Content, 203)\n  STC(Moved_Permanently, 301)\n  STC(Moved_Temporarly, 302)\n  STC(Not_Modified, 304)\n  STC(Bad_Request, 400)\n  STC(Unauthorized, 401)\n  STC(Forbidden, 403)\n  STC(Not_Found, 404)\n  STC(Internal_Server_Error, 500)\n  STC(Not_Implemented, 501)\n  STC(Bad_Gateway, 502)\n  STC(Service_Unavailable, 503)\n#undef STC\n\nclass Access;\n\nclass CGI : public CallBacks , public mERROR\n\u00e4\n\nprotected:\n\n   CGI_status status;       // process status\n   int    trace_level;      // trace level\n   FILE * trace_file;       // trace file\n   char * c, * cw, *cww;    // work buffer pointers\n\n   char * buff;         // buffer\n   char * buffz;        // end of data\n   int    buffl;        // actual buffer length\n   char   eof;          // eof input flag\n   int    length;       // general length\n   int    rc;           // return code\n\n   char   nph_flag;     // no parse header falg\n   char   conv_flag;    // conv flag\n   char   isindex_flag; // query with ISINDEX\n   char   accept_flag;  // if set check accept type else accept everything\n   char   dsp_flag;     // dsp flag\n   pDSP   dsp;          // dataspace\n   pDSP   dspSave;      // save here DSP also\n   STRING dsp_list;     // list name in the dsp\n   STRING dsp_list_input; // input DSP list\n   STRING dummy;        // dummy var\n   QVARs * qvars;       // query variables\n   URI   * uri;         // Universal Resource Identifier\n   AUTH  * auth;        // Digest authorization\n   tm     http_date;    // date\n   tm     http_expires; // expires\n   tm     http_if_modified_since; // if modif\n   tm     http_last_modified;     // last modified\n   int    content_length;  // content length\n   int    header_length;   // header length\n   int    read_length;     // read length\n   int    remainder_length;// remainder\n   int    total_length;    // total length\n   char * qfss_var_pointer;\n   char * qfss_var_pointer_orig;\n   STRING eSTRING;        // environ STRING\n   Access * access;       // access object\npublic:\n   CGI(pWWA, void *, void *);\n   CGI()\u00e4\u00fc\n   virtual \u00dfCGI();\n\n// CGI interface calls\n\n   char *gets(char *);\n   int   get(char *,int );\n   int   getC();\n   int   peekC();\n   int   printf(char *, ... );\n   int   put(char *, int);\n   STRING& envvar(STRING);\n   STRING& envvar(int);\n   STRING   argv(int );\n   int     ErrorHTML(char *, int = OK);\n   int process();\n   int cacheFile(char *, char *, char *, char =1 );\n   int cacheObject(char *);\n   URI * getURI()\u00e4 return uri;\u00fc\n   int trace(int, char *);\n   int trace(int, char *, int, char *);\n   virtual int userAuthenticate()\u00e4return 1;\u00fc // if not SSL\nprivate:   int rcv();\n   char * ReasonPhrase(int );\n   int isOk()\u00e4 return (NOT iserror());\u00fc\n   int parse(char *);\n   int call(char *);\n   int genHeaders(int = 200);\n   int genOnlyHeaders(int );\n   int genData();\n   int genFromString(int, STRING,int = 1);\n   char * genHTMLprefix();\n   int sendHTML(char *);\n   int setOutputConvFlag();\n   char * convert(char *,int=0);//szm\n   int hex(unsigned char);\n   int process_POST();\n   int process_PUT();\n   int process_part();\n   int readFile(EXTENSION_ENTRY *);\n   int readLine(char *);\n   int readNBytes(char*,int);\n   int isBoundary(char *);\n   int copyDsp2File();\n   void setVar(int,char *,char *);\n   STRING genEnvars(URI_type = cgi_call);\n\n   friend class URI;\n   friend class SKELETON_HTML;\n   friend class Access;\n\u00fc;\n\n#define HTML_ERROR \"html_error\"\n\n\n#endif\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WCGIDB2": {"ttr": 8653, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WCGIDB2\n#define INCLUDE_WCGIDB2\n\n#include \"cvprc.hpp\"\n#include \"callbck.hpp\"\n\n#define PAR_AFPFILE      \"ISISDB_AFPFILE\"        // Content of AFP-Document\n#define PAR_PAGECOUNT    \"ISISDB_PAGECOUNT\"      // Number of pages\n#define PAR_IMM          \"ISISDB_IMM\"            // imm?\n#define PAR_IDXNAMES     \"ISISDB_IDXNAME\"        // Name of AFP-Indices\n#define PAR_IDXVALUES    \"ISISDB_IDXVALUE\"       // Value of AFP-Indices\n#define PAR_IDXCOUNT     \"ISISDB_IDXCOUNT\"       // Number of AFP-Indices\n#define PAR_DOCID        \"ISISDB_DOCID\"          // Document ID\n#define PAR_DOCIDCOUNT   \"ISISDB_DOCIDCOUNT\"     // Number of document\n\n#define PAR_GETDOC       \"GET_DOC\"               // Get content of AFP-Document\n#define PAR_GETPOSTDOC   \"GET_POSTDOC\"           // Get content of AFP-Document\n#define PAR_GETIDX       \"GET_IDX\"               // Get AFP-Indices\n#define PAR_GETIDXNAME   \"GET_IDXNAME\"           // Get AFP-Indices\n#define PAR_GETIDXVALUE  \"GET_IDXVALUE\"          // Get AFP-Indices\n#define PAR_GETDOCID     \"GET_DOCID\"             // Get ID of AFP-Document\n\n#define PAR_PUTDOC       \"PUT_DOC\"               // Put Documents+Indices into database including first and last\n#define PAR_PUTPOSTDOC   \"PUT_POSTDOC\"           // Put Documents+Indices into database excluding first and last\n\n #define DB_MAXNAME      255\n #define DB_TYP_LONG       0             // Field typ long\n #define DB_TYP_DOUBLE     1             // Field typ double\n #define DB_TYP_STRING     2             // Field typ ASCII string\n #define DB_TYP_MEM        3             // Field typ memory\n #define DB_MAXVARIABLES 256             // Max table vaiables\n\n typedef struct Field_rec \u00e4\n  struct Field_rec *next;           // next Field\n  char             name\u00c4DB_MAXNAME+1\u00dc; // field name\n  char             fldtyp;          // field typ\n  size_t           length;          // field length\n  void             *data;           // field data\n \u00fc DBField;\n\n typedef struct Table_rec \u00e4\n  struct Table_rec *next;              // next table row\n  DBField          *firstfield;          // first field\n \u00fc DBTable;\n\n#ifndef __SASC__\n\t#undef DLLENTRY\n\t#define DLLENTRY\n#endif\n\ntypedef int (DLLENTRY *tdbget)(char *proc,int parc, char **pars, DBTable **table);\ntypedef int (DLLENTRY *tdbput)(char *proc,int parc, char **pars, DBTable *table);\ntypedef int (DLLENTRY *tdbfreetable)(DBTable *);\ntypedef int (DLLENTRY *tdbopen)(char *names\u00c4\u00dc,char *vals\u00c4\u00dc,CallBack cb,unsigned long sect);\ntypedef int (DLLENTRY *tdbclose)();\n\nclass DBDLL : public DLL\n\u00e4\npublic:\n\t tdbget        dbget;\n\t tdbput        dbput;\n\t tdbfreetable  dbfreetable;\n\t tdbopen       dbopen;\n\t tdbclose      dbclose;\n\n\tint Ok()\u00e4return(DLL::Ok()/*&&ar_put*/);\u00fc\n\tDBDLL(char *name,unsigned long modhandle);\n\t\u00dfDBDLL();\n\u00fc;\n\nDBDLL::DBDLL(char *name,unsigned long modhandle)\n\t\t\t\t\t\t :DLL(name,modhandle)\n\u00e4\n\tdbget=(tdbget)QueryProcedure(\"DBGET\",0);\n\tdbput=(tdbput)QueryProcedure(\"DBPUT\",0);\n\tdbfreetable=(tdbfreetable)QueryProcedure(\"DBFREETABLE\",0);\n\tdbopen=(tdbopen)QueryProcedure(\"DBOPEN\",0);\n\tdbclose=(tdbclose)QueryProcedure(\"DBCLOSE\",0);\n\u00fc\nDBDLL::\u00dfDBDLL()\n\u00e4\n\u00fc\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WDIGAUT": {"ttr": 7971, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WDIGAUT\n#define INCLUDE_WDIGAUT\n#include \"md5.hpp\"\n#include \"wuri.hpp\"\n\n\nclass AUTH\n\u00e4\nprivate:\n  MD5_CTX md5_ctx;\n  char md5_str\u00c417\u00dc;\n  int auth;               // auth flag  0 , no basic auth\n                          //           -1 , requested bot not got\n                          //            1 , ok\n STRING authenticate;\n  STRING method;\n  STRING ipaddress;\n  STRING user;\n  STRING password;\n  STRING realm;\n  STRING opaque;\n  STRING nonce;\n  URI   * uri;\n  CGI   * cgi;\npublic:\n  AUTH(CGI *);\n  \u00dfAUTH();\n  int check();\n  char * genAuthentication();\n  int   checkAuthorization(char *);\n  char * genAuthenticationInfo()\u00e4 return(char *)0;\u00fc;\n  char * genAuthenticationResponse()\u00e4 return(char *)0;\u00fc;\n  char * getPassword()\u00e4return(auth>0?(char*)password:NULL);\u00fc\n  char * getUser()\u00e4return(auth>0?(char *)user:NULL);\u00fc\n\nprivate:\n  STRING md5(STRING,int);\n  STRING passwordG(STRING);\n  STRING C64(STRING);\n\n\u00fc;\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WLMENF1": {"ttr": 8683, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct wlmenf1 \u00e4\n  unsigned char  wlme1; /* Byte 1 */\n  unsigned char  wlme2; /* Byte 2 */\n  unsigned char  wlme3; /* Byte 3 */\n  unsigned char  wlme4; /* Byte 4 */\n  \u00fc;\n\n/* Values for field \"wlme4\" */\n#define wlmenf11 0x80000000 /* VARY WLM, POLICY= command        */\n#define wlmenf12 0x40000000 /* VARY WLM, POLICY= command        */\n#define wlmenf13 0x20000000 /* VARY WLM, POLICY= command        */\n#define wlmenf21 0x800000   /* VARY WLM, POLICY= command   @P1C */\n#define wlmenf22 0x400000   /* VARY WLM, POLICY= command   @P1C */\n#define wlmenf23 0x200000   /* VARY WLM, POLICY= command   @P1C */\n#define wlmenf31 0x80000    /* Workload Activity reporting      */\n#define wlmenf32 0x40000    /* Workload Activity reporting      */\n#define wlmenf33 0x20000    /* Workload Activity reporting      */\n#define wlmenf41 0x80       /* Install of new service           */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "WLMENF56": {"ttr": 8259, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct wlmenf56 \u00e4\n  unsigned char  wlmenf56_qual\u00c44\u00dc;         /* Qualifier code - see below                    */\n  unsigned char  wlmenf56_jobname\u00c48\u00dc;      /* Name of job that was reset. Blank, in case of */\n  unsigned char  wlmenf56_jobid\u00c48\u00dc;        /* JES job id of the job that was reset.         */\n  int            wlmenf56_entry_time;      /* Entry time in hundredths of a second since    */\n  unsigned char  wlmenf56_entry_date\u00c44\u00dc;   /* Entry date in the form 0cyydddF. For a job,   */\n  unsigned char  wlmenf56_operator\u00c48\u00dc;     /* Operator ID that reset the job or enclave, if */\n  unsigned char  wlmenf56_flags;           /* Indicators                                    */\n  unsigned char  wlmenf56_flags2;          /* Additional characteristics                    */\n  unsigned char  wlmenf56_version;         /* Version. Zero represents initial version.     */\n  unsigned char  wlmenf56_rsv;             /* Reserved for future use                       */\n  unsigned char  wlmenf56_oldsrv\u00c48\u00dc;       /* Service class name that was associated with   */\n  unsigned char  wlmenf56_newsrv\u00c48\u00dc;       /* Service class that was assigned to the job or */\n  short int      wlmenf56_oldpgn;          /* Performance group that was associated with    */\n  short int      wlmenf56_newpgn;          /* Performance group that was assigned to the    */\n  unsigned char  wlmenf56_stoken\u00c48\u00dc;       /* STOKEN of the address space in which the job  */\n  unsigned char  wlmenf56_enclavetoken\u00c48\u00dc; /* Enclave token. Zero, in case of job reset     */\n  unsigned char  wlmenf56_enclaveowner\u00c48\u00dc; /* Name of the address space that owns the       */\n  \u00fc;\n\n/* Values for field \"wlmenf56_flags\" */\n#define wlmenf56_srvclass           0x80       /* The job's service class was reset     */\n#define wlmenf56_perform            0x40       /* The job's performance group was reset */\n#define wlmenf56_quiesce            0x20       /* The job was quiesced                  */\n#define wlmenf56_resume             0x10       /* The job was resumed                   */\n#define wlmenf56_enclavesrvclass    0x08       /* The enclave service class was reset   */\n#define wlmenf56_enclavequiesce     0x04       /* The enclave was quiesced              */\n#define wlmenf56_enclaveresume      0x02       /* The enclave was resumed               */\n\n/* Values for field \"wlmenf56_flags2\" */\n#define wlmenf56_independentenclave 0x80       /* On = Original independent             */\n\n/* Values for field \"wlmenf56_enclaveowner\" */\n#define wlmenf56_currentversion     1          /* Supports enclave reset                */\n#define wlmenf56_qual_reset         0x80000000 /* A job was reset using the RESET       */\n#define wlmenf56_qual_enclavereset  0x40000000 /* An enclave was reset using            */\n#define wlmenf56_len                0x54\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "WLMENF57": {"ttr": 8387, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct wlmenf57 \u00e4\n  unsigned char  wlmenf57_qualifier\u00c44\u00dc;      /* IWMENF57.164: Qualifier                  */\n  unsigned char  wlmenf57_schenv\u00c416\u00dc;        /* IWMENF57.27: Name of the scheduling      */\n  unsigned char  wlmenf57_system_name\u00c48\u00dc;    /* IWMENF57.90: Name of the system on which */\n  unsigned char  wlmenf57_flag;              /* IWMENF57.87: Flags                       */\n  unsigned char  wlmenf57_reserved_flags\u00c43\u00dc; /* IWMENF57.102: Reserved flags             */\n  unsigned char  wlmenf57_reserved1\u00c48\u00dc;      /* IWMENF57.192: Reserved                   */\n  unsigned char  wlmenf57_reserved2\u00c48\u00dc;      /* IWMENF57.234: Reserved                   */\n  \u00fc;\n\n/* Values for field \"wlmenf57_flag\" */\n#define wlmenf57_schenv_available       0x80       /* IWMENF57.203: If on, indicates */\n\n/* Values for field \"wlmenf57_reserved2\" */\n#define wlmenf57_normal_schenv_change   0x\n#define wlmenf57_recovery_schenv_change 0x\n#define wlmenf57_len                    0x30\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "WLMENF61": {"ttr": 8111, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct wlmenf61 \u00e4\n  short int      enf61len;           /* IWMENF61.164: Parm list length              */\n  short int      enf61ver;           /* IWMENF61.27: Parm List Version              */\n  unsigned char  enf61qual\u00c44\u00dc;       /* IWMENF61.99: Qualifier                      */\n  int            enf61imagecapacity; /* IWMENF61.16: Potential CPU capacity of the  */\n  int            enf61ceccapacity;   /* IWMENF61.180: Potential CPU capacity of the */\n  int            enf61vmcapacity;    /* IWMENF61.234: Potential CPU capacity of the */\n  \u00fc;\n\n/* Values for field \"enf61vmcapacity\" */\n#define wlmenf61_capacity_change 0x\n#define wlmenf61_len             0x14\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "WQFSS": {"ttr": 8337, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WQFSS\n#define INCLUDE_WQFSS\n\n//\n// QFSSWWA interface\n\n\n#include <stdlib.h>\n#include <time.h>\n#include \"qfssglbl.hpp\"\n\n#ifdef ISIS_PF_HOST_SASC\n   #include <string.h>\n   #include <mem.h>\n  #else\n#endif\n\n\n// - trace level parm\n// - trace dsn\n// - global DSP pointer\n\n\n\ntypedef struct sDSP_LST\n  \u00e4\n  char    name\u00c464\u00dc;\n  int      _i0 , _i1, _i2, _i3;\n  int     size;\n  time_t  create;\n  time_t   lastmodif;\n  char    origin\u00c4128\u00dc;\n  \u00fc DSP_LST;\ntypedef DSP_LST * pDSP_LST;\ntypedef void *  pDSP;\n\n\n#ifndef ISIS_PF_HOST\n\t #define __asm\n  #undef CALLBACK\n  #define CALLBACK MvsCallBack\n#else\n  #if ISIS_PF_HOST_SASC\n    extern __asm CALLBACK(wwa *);\n  #else\n    extern \"OS\" CALLBACK(wwa *);\n  #endif\n#endif\n\n\n\n#ifndef   MaxBuffSize\n#define   MaxBuffSize  32760\n#endif\n#ifndef   MinBufferSize\n#define   MinBufferSize 4096\n#endif\n\n\n#define QfssReceiveN      \"RECEIVEN\"\n#define QfssSendN         \"SENDN   \"\n#define QfssMsg           \"MSG     \"\n#define QfssClose         \"CLOSE   \"\n#define QfssDspInput      \"DSPINP  \"\n#define QfssDspOutput     \"DSPOUT  \"\n#define QfssDspPut        \"DSPPUT  \"\n#define QfssDspGet        \"DSPGET  \"\n#define QfssDspInquire    \"DSPINQ  \"\n#define QfssDspSet        \"DSPSET  \"\n#define QfssDspCreate     \"DSPCREA \"\n#define QfssDspDest       \"DSPDEST \"\n#define QfssCallCgi       \"CALLCGI \"\n\n\nclass CallBacks\n\u00e4\npublic:\n   pWWA   wwa;\n   pDSP   cache;\n   pDSP   global;\n   pWWI   wwi;\n   pFTS   fts;\n   pCVT   qcvt;\n   pIOQE ioqe;\nprotected:\n   CallBacks(pWWA, void *, void *);\n   CallBacks()\u00e4\u00fc\n   virtual \u00dfCallBacks();\n\n   virtual int receiveN(char * , int, int );\n   virtual int sendN(char *, int );\n   virtual int cleanup();\n\n   int  DspInput(pDSP, const char *);\n   int  DspOutput(pDSP,const char *);\n   int  DspPut(pDSP, const char *, char *, int );\n   int  DspGet(pDSP, const char *, char *);\n   pDSP_LST DspInq(pDSP, const char *);\n   int  DspSet(pDSP,const char *, pDSP_LST);\n   pDSP DspCreate();\n   int  DspDest(pDSP);\n   int  CallCgi(char *,char *,char *,char *);\n\n   int    traceLevel();\n   char * traceDsn();\npublic:\n   virtual int msg(char * , int, char *);\n   virtual int msg(char * id, char * t );\n\n \u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WQVAR": {"ttr": 8455, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WQVAR\n#define INCLUDE_WQVAR\n\n#include \"mvsbase.hpp\"\n#include \"mchain.hpp\"\n\n\nclass QVARs \u00e4\nprivate:\n\tSORTEDmCHAIN * chain;\n\tCHAINITER    * iter;\npublic:\n\tQVARs();\n\t\u00dfQVARs();\n\tint set(char *,char *);\n\tchar *get(char *);\n\tSTRING translate(char *);\n\u00fc;\n\nclass QVAR:public chainE , public STRING\n\u00e4\npublic:\n\tQVAR(char *k, char *v):chainE(k), STRING(v)\u00e4\u00fc;\n\tvirtual \u00dfQVAR()\u00e4\u00fc\n\tSTRING & operator=(const STRING &);\n\u00fc\n\t;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WSSL": {"ttr": 7957, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef   INCLUDE_WSSL\n#define   INCLUDE_WSSL\n#include  \"gskssl.hpp\"\n#include  \"wcgi.hpp\"\n#include  \"qfssglbl.hpp\"\n#include  \"mchain.hpp\"\n\n#define mStr( n ,a ) _mStr(n, (unsigned char *)a ,sizeof(a) )\n\n#define MAX_USERID 8\n\n#define WWA_ERROR           \"WW10\"\n#define WWA_INFO            \"WW11\"\n#define WWA_CLIENT_CERT     \"WW12\"\n#define WWA_CLIENT_AUTH     \"WW13\"\n#define WWA_CLIENT_ERROR    \"WW14\"\n\n#define WSSL_INFO            9701\n#define WSSL_INFO_CERT       9702\n#define WSSL_ERROR_SOC_INIT  9703\n#define WSSL_ERROR_GSK       9704\n#define WSSL_ERROR_CERT_USER 9705\n#define WSSL_ERROR_CERTLIST  9706\n#define WSSL_CLIENT_AUTH_RACF 9707\n#define WSSL_CLIENT_AUTH_CERTIFICATE      9708\n#define WSSL_CLIENT_CERTIFICATE_UNDEFINED 9709\n#define WSSL_SOCKET_SELECT_TIMEOUT        9720\n#define WSSL_SOCKET_SELECT_ERROR          9721\nconst char * iCN = \"CN(\";\nconst char * iT  = \"T(\";\nconst char * iOU = \"OU(\";\nconst char * iO  = \"O(\";\nconst char * iLOC= \"L(\";\nconst char * iSP = \"SP(\";\nconst char * iC  = \"C\";\nconst char * GLOBAL_CERTLIST = \"<GlobalCertificateList>\";\n\nenum CLIENT_AUTH_TYPE \u00e4\n  CLIENT_AUTH_PASSTHRU     = 0,\n  CLIENT_AUTH_RACF_USERID     = 1,\n  CLIENT_AUTH_RACF_CERTIFICATE = 2,\n  CLIENT_AUTH_CERTLIST     = 3 \u00fc;\n\ntypedef struct _mE \u00e4const char *t;int n;\u00fc mE;\n\nconst  mE hsDefs\u00c4\u00dc = \u00e4\n     \u00e4\"GSK_AS_SERVER_WITH_CLIENT_AUTH\",int(GSK_AS_SERVER_WITH_CLIENT_AUTH)\u00fc,\n     \u00e4\"GSK_AS_SERVER\",int(GSK_AS_SERVER)\u00fc,\n     \u00e4NULL,-1\u00fc\n   \u00fc;\nconst  mE clientAuthList\u00c4\u00dc = \u00e4\n  \u00e4\"PASSTHRU\",int(CLIENT_AUTH_PASSTHRU)\u00fc,\n  \u00e4\"RACF_USERID\",int(CLIENT_AUTH_RACF_USERID)\u00fc,\n  \u00e4\"RACF_CERTIFICATE\",int(CLIENT_AUTH_RACF_CERTIFICATE)\u00fc,\n  \u00e4\"CERTLIST\",int(CLIENT_AUTH_CERTLIST)\u00fc,\n  \u00e4NULL,-1\u00fc\u00fc;\n\nclass certList :public chainE\n\u00e4\nprivate:\n  CGI    * cgi;\n  STRING sCN;\n  STRING sOU;\n  STRING sO;\n  STRING sLOC;\n  STRING sSP;\n  STRING sC;\n  STRING  user;\npublic:\n  certList();\n  certList(CGI *,char *,char *);\n  virtual \u00dfcertList();\n  char * check(gsk_cert_info *);\npublic:\n  static mCHAIN list;\nprivate:\n  void init();\n\u00fc;\n\nclass SslCGI:public CGI\n\u00e4\nprivate:\n  gsk_soc_init_data socInit;\n  gsk_soc_data *  pSocData;\n  CLIENT_AUTH_TYPE   clientAuth;\n  int     _rc;\n  int     msgSupressFlag;\n  char *   userid;\n  char *   password;\n  int      clientOk;\npublic:\n   SslCGI();\n   SslCGI(pWWA,void *,void *);\n   virtual \u00dfSslCGI();\n   sendN(char *,int);\n   int receiveN(char *,int,int);\n   int cleanup();\n   int userAuthenticate();\nprivate:\n   void init();\n   int initSsl();\n   int initSocket();\n   int gskCode(const char *,unsigned char *,size_t ,mE*);\n   char * gskDef(int);\n   char * _mStr(const char *,unsigned char *,size_t);\n   long  mLong(const char *t,void *v);\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WSUPL": {"ttr": 8179, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WSUPL\n#define INCLUDE_WSUPL\n#include \"merror.hpp\"\n#include \"mvsbase.hpp\"\nclass CGI;\nclass SKELETON_HTML:public mERROR\n\u00e4\nprivate:\n\tCGI * cgi;\n\tSTRING name;\n\tint    skeleton;\n\tchar * f;\n\tSTRING format;\npublic:\n\tSKELETON_HTML(CGI *,char *);\n\t\u00dfSKELETON_HTML();\n\tint next(char * ,int,char *\u00c4\u00dc);\n\u00fc;\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WURI": {"ttr": 8553, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_WURI\n#define INCLUDE_WURI\n\n#include \"os.hpp\"\n#include \"mvsbase.hpp\"\n#include \"misc.hpp\"\n#include \"defid.hpp\"\n#include <sys/types.h>\n#include <dirent.h>\n\ntypedef char * (*PARSER)(char *);\nclass CGI;\nclass SKELETON_HTML;\nclass URI;\n\nconst char * GLOBAL_EXTENSION_LIST = \"<GlobalExtensionList>\";\n#define      MAX_EXTENSION         128\n\ntypedef struct\n\u00e4\n  char * ext;\n  char * cont;\n  char * media;\n  char * pref;\n  PARSER pars;\n  int   conv;\n  int   input_type;\n\n\u00fc EXTENSION_ENTRY;\n\nenum INPUT_TYPE\n\u00e4\n  input_type_invalid = 0,\n  input_type_text   = 1,\n  input_type_afp    = 2,\n  input_type_binary = 3,\n  input_type_aline  = 4\n\u00fc;\nEXTENSION_ENTRY * searchExtensionEntry(char *);\n\nclass EXTENSION\n\u00e4\npublic:\n  STRING ext;\n  STRING contenttype;\n  STRING mediatype;\n  STRING prefix;\n  STRING contentmediatype;\n  PARSER parser;\n  int   convert;\n  int   inputtype;\n  int   text;\n  int   extension_entry_index;\npublic:\n  EXTENSION(char *);\n  \u00dfEXTENSION();\n  char * parse();\n  char * getExt()\u00e4return ext;\u00fc\n  char * getContentType()\u00e4return contenttype;\u00fc\n  char * getMediaType()\u00e4 return mediatype;\u00fc\n  char * getPrefix()\u00e4 return prefix;\u00fc\n  int   getConvert()\u00e4 return convert;\u00fc\n  int   getText()\u00e4 return text;\u00fc\n  char * getContentMediaType()\u00e4return contentmediatype;\u00fc\n  char * getProgram()\u00e4 return \"progarm\";\u00fc\n  PARSER getParser()\u00e4 return parser;\u00fc\n void   setConvert(int v)\u00e4 convert = v;\u00fc\n void   setASCII()\u00e4 convert = 1;\u00fc\n void   setASIS()\u00e4 convert = 0;\u00fc\n void   setExt(char * s);\n EXTENSION_ENTRY  * getExtensionEntry();\nfriend class URI;\n\u00fc;\n\nenum URI_type \u00e4\n    undef   = 0,\n    ddn     = 10,\n    ddn_dir =  11,\n    dsn     =  20,\n    dsn_dir =  21,\n    dsn_hlq =  22,\n    jes     =  30,\n    jes_dir =  31,\n    db2     =  40,\n    cgi_call = 50,\n    cgi_rexx = 51,\n    cgi_call_le  = 52,\n    cgi_call_sas = 53,\n    nph_call = 60,\n   qfss_call=  70,\n   java     =  80,\n    hfs   = 90,\n    hfs_dir =  91,\n   vsam     =  100,\n   vsam_dir =  101\n\u00fc;\n\nclass URI\n\u00e4\nprivate:\n  CGI * cgi;\n  STRING uri;\n  STRING style;\n  STRING name;\n  STRING member;\n  STRING style_name;\n STRING  vsam_ddname;\n  EXTENSION * ext;\n  URI_type uri_type;\n  SKELETON_HTML * skeleton_html;\n  FILE * file;\n        DIR* dir;\n        struct dirent* dirent;\n  struct DSNINFO * dsninfo;\n  int rc;\npublic:\n  URI(CGI *,char *);\n  \u00dfURI();\n  char * parse();\n  char * open();\n  int   next(char *);\n  char * getStyle()\u00e4return style;\u00fc\n  char * getName()\u00e4return name;\u00fc\n  char * getMember()\u00e4return member;\u00fc\n  char * getExtension()\u00e4return ext->getExt();\u00fc\n  EXTENSION * getEXTENSION()\u00e4 return ext;\u00fc\n  char * getMvsFileName()\u00e4 return name;\u00fc\n  URI_type getType()\u00e4 return uri_type;\u00fc\n  void    setType(URI_type u)\u00e4 uri_type = u;\u00fc\n STRING getMvsName(STRING);\n STRING getMvsName(STRING,STRING);\n FILE * getFile()\u00e4 return file;\u00fc\nfriend class EXTENSION;\n\u00fc;\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WURIEXT": {"ttr": 8517, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Ext(html,text,html,\u00d6x00,0,1,1)\nExt(htm,text,html,\u00d6x00,0,1,1)\nExt(txt,text,plain,\u00d6x00,0,1,1)\nExt(der,text,plain,\u00d6x00,0,0,3)\nExt(cpp,text,plain,\u00d6x00,0,1,1)\nExt(hpp,text,plain,\u00d6x00,0,1,1)\nExt(text,text,plain,\u00d6x00,0,1,1)\nExt(afp,application,afp,\u00d6x00,0,0,2)\nExt(fon,application,fon,X,0,0,2)\nExt(chs,application,chs,C,0,0,2)\nExt(cdp,application,cdp,T,0,0,2)\nExt(ovl,application,ovl,O,0,0,2)\nExt(pdf,application,pdf,P,0,0,2)\nExt(fdf,application,fdf,F,0,0,2)\nExt(psg,application,psg,S,0,0,2)\nExt(jpg,image,jpeg,\u00d6x00,0,0,3)\nExt(jpeg,image,jpeg,\u00d6x00,0,0,3)\nExt(gif,image,gif,\u00d6x00,0,0,3)\nExt(jcl,text,html,\u00d6x00,jclParser,1,1)\nExt(txt,multipart,form-data,\u00d6x00,0,0,0)\n//Ext(txt,application,x-www-form-urlencoded,\u00d6x00,0,0,0)\nExt(txt,application,x-www-form-urlencoded,\u00d6x00,0,1,4)\nExt(der,application,x-www-form-urlencoded,\u00d6x00,0,1,3)\nExt(class,program,class,\u00d6x00,0,0,3)\nExt(jar,program,jar,\u00d6x00,0,0,3)\nExt(cab,program,cab,\u00d6x00,0,0,3)\nExt(dependency,program,dependency,\u00d6x00,0,0,3)\nExt(certificate,program,dependency,\u00d6x00,0,0,3)\nExt(cacert,application,x-x509-ca-cert,\u00d6x00,0,0,3)\nExt(zip,program,dependency,\u00d6x00,0,0,3)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "WWA": {"ttr": 7983, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct wwa \u00e4\n  void          *wwa_save\u00c418\u00dc;            /* save in WWA                  */\n  void          *wwa_qcvt;                /* QFSS CVT                     */\n  void          *wwa_ioqe;                /* IOQE address                 */\n  void          *wwa_wwa;                 /* own address                  */\n  void          *wwa_callback;            /* callback address             */\n  void          *wwa_baseregs\u00c44\u00dc;         /* base regs                    */\n  void          *wwa_crab;                /* CRAB pointer                 */\n  void          *wwa_parmlist\u00c48\u00dc;         /* parmlist                     */\n  short int      wwa_cparml;              /* list length                  */\n  unsigned char  wwa_cparm\u00c4132\u00dc;          /* parms for C                  */\n  unsigned char  wwa_function\u00c48\u00dc;         /* function name                */\n  unsigned char  _filler1;                /* terminator                   */\n  unsigned char  _filler2;\n  void          *wwa_parms\u00c48\u00dc;            /* parameters                   */\n  unsigned char  wwa_html_path\u00c464\u00dc;       /* html path                    */\n  unsigned char  wwa_html_file\u00c464\u00dc;       /* html file                    */\n  unsigned char  wwa_server_name\u00c464\u00dc;     /* server name                  */\n  void          *wwa_server_port;         /* server port                  */\n  unsigned char  wwa_server_protocol\u00c464\u00dc; /* server protocol              */\n  unsigned char  wwa_server_software\u00c464\u00dc; /* server software              */\n  unsigned char  wwa_remote_addr\u00c416\u00dc;     /* remote addr                  */\n  unsigned char  wwa_remote_host\u00c432\u00dc;     /* remote host                  */\n  unsigned char  wwa_root\u00c464\u00dc;            /* path root                    */\n  unsigned char  wwa_tracedsn\u00c464\u00dc;        /* trace dsn                    */\n  void          *wwa_tracelevel;          /* trace level                  */\n  void          *wwa_atoe_a;              /* atoe address                 */\n  void          *wwa_etoa_a;              /* etoa address                 */\n  unsigned char  wwa_put_allowed\u00c44\u00dc;      /* put indicator                */\n  unsigned char  wwa_dir_allowed\u00c44\u00dc;      /* put indicator                */\n  void          *wwa_callsave\u00c4128\u00dc;       /* save foe QFSSWWC             */\n  unsigned char  wwa_work\u00c4128\u00dc;           /* work area                    */\n  void          *wwa_dsp_cache;           /* cache                        */\n  void          *wwa_dsp_local;           /* local dsp                    */\n  void          *wwa_dsp_global;          /* global DSP                   */\n  void          *__prof_sysa\u00c42\u00dc;          /* system profile start addr    */\n  void          *__prof_rcva\u00c42\u00dc;          /* receiver profile start addr  */\n  void          *__prof_liba\u00c42\u00dc;          /* library profile start addr   */\n  void          *__prof_browse;           /* browse pointer               */\n  unsigned char  __prof_dsn\u00c444\u00dc;          /* profile dataset name         */\n  unsigned char  __prof_mem\u00c48\u00dc;           /* profile member name          */\n  unsigned char  __prof_ddname\u00c48\u00dc;        /* profile dd name              */\n  unsigned char  __prof_typ\u00c44\u00dc;           /* profile type - option        */\n  void          *__prof_count;            /* lu count                     */\n  unsigned char  __prof_sys\u00c48\u00dc;           /* system profile               */\n  unsigned char  __prof_lib\u00c48\u00dc;           /* library profile              */\n  unsigned char  __prof_rcv\u00c48\u00dc;           /* application profile          */\n  void          *__prof_msga;             /* message pointer              */\n  void          *wwa_sdlr;                /* sdlr pointer                 */\n  void          *wwa_ftr;                 /* FTR pointer                  */\n  void          *wwa_fts;                 /* FTS pointer                  */\n  void          *wwa_socket;              /* IOQE socket number           */\n  void          *wwa_uparm;               /* perm UPARM pointer           */\n  void          *wwa_uparm_temp;          /* temp UPARMpointer            */\n  void          *wwa_replyf;              /* reply pointer                */\n  unsigned char  wwa_dsp_input\u00c464\u00dc;       /* input list                   */\n  unsigned char  wwa_dsp_output\u00c464\u00dc;      /* output list                  */\n  void          *wwa_xml;                 /* xml address                  */\n  void          *wwa_xml_maybe;           /* xml address                  */\n  unsigned char  wwa_rcv_status;          /* recv routine status          */\n  unsigned char  wwa_rcv_format;          /* input message format         */\n  unsigned char  _filler3\u00c42\u00dc;\n  void          *wwa_rcv_length_data\u00c42\u00dc;  /* address pair for receive     */\n  void          *wwa_snd_length_data\u00c42\u00dc;  /* address pair for $$SDLR send */\n  void          *wwa_counter;             /* input counter                */\n  unsigned char  wwa_requestjobname\u00c48\u00dc;   /* request jobname              */\n  unsigned char  wwa_requestjobid\u00c48\u00dc;     /* request jobid                */\n  unsigned char  wwa_msgid\u00c432\u00dc;           /* request messageid            */\n  void          *wwa_pipi\u00c48\u00dc;             /* call parm area               */\n  void          *wwa_pipi_addr\u00c42\u00dc;        /* routine addr                 */\n  void          *wwa_pipi_parmp;          /* parm addr                    */\n  void          *wwa_pipi_retcode;        /* retcode                      */\n  void          *wwa_pipi_rsncode;        /* rsncode                      */\n  void          *wwa_pipi_fdbkcode;       /* fdbkcode                     */\n  void          *wwa_replyexit\u00c47\u00dc;        /* reply exit parm list         */\n  unsigned char  wwa_replyarea;           /* reply exit arae              */\n  unsigned char  _filler4;\n  \u00fc;\n\n/* Values for field \"__prof_msga\" */\n#define __prof_length            0x7C    /* length of the local area          */\n\n/* Values for field \"wwa_rcv_status\" */\n#define wwa_rcv_status_first     0x00    /* first call                        */\n#define wwa_rcv_status_next_desc 0x01    /* next DESC record expected         */\n#define wwa_rcv_status_next_data 0x02    /* next DATA record expected         */\n#define wwa_rcv_status_eof       0x03    /* EOF file                          */\n#define wwa_rcv_status_invalid   0x04    /* invalid record                    */\n#define wwa_rcv_status_error     0x05    /* error status                      */\n#define wwa_rcv_status_fatal     0x06    /* fatal error                       */\n\n/* Values for field \"wwa_rcv_format\" */\n#define wwa_rcv_format_undefined 0x00    /* undefined                         */\n#define wwa_rcv_format_rdw       0x01    /* start with LENGTH and TYPE        */\n#define wwa_rcv_format_rdw_xml   0x02    /* start with LENGTH and TYPE, XML   */\n#define wwa_rcv_format_rdw_text  0x03    /* start with LENGTH and TYPE, TEXT  */\n#define wwa_rcv_format_rdw_ascii 0x04    /* start with LENGTH and TYPE, ASCII */\n#define wwa_rcv_format_xml       0x05    /* XML text                          */\n\n/* Values for field \"wwa_replyarea\" */\n#define wwa_length               0x1078C /* dsect length                      */\n#define _0                       0x00    /* INVALID                           */\n#define _1                       0x01    /* VALID                             */\n#define __reset                  0x00    /* RESET                             */\n#define __initapi                0x01    /* INITAPI                           */\n#define __socket                 0x02    /* SOCKET                            */\n#define __bind                   0x03    /* BIND                              */\n#define __listen                 0x04    /* LISTEN                            */\n#define __accept                 0x05    /* ACCEPT                            */\n#define __send                   0x06    /* SEND                              */\n#define __receive                0x07    /* RECEIVE                           */\n#define __shutdown               0x08    /* SHUTDOWN                          */\n#define __close                  0x09    /* CLOSE                             */\n#define __termapi                0x0A    /* TERMAPI                           */\n#define __select                 0x0B    /* SELECT                            */\n#define __sendconf               0x0D    /* SEND CONFIRM                      */\n#define __allocate               0x0E    /* ALLOCATE                          */\n#define __dealloc                0x0F    /* DEALLOCATE                        */\n#define r0                       0x00\n#define r1                       0x01\n#define r2                       0x02\n#define r3                       0x03\n#define r4                       0x04\n#define r5                       0x05\n#define r6                       0x06\n#define r7                       0x07\n#define r8                       0x08\n#define r9                       0x09\n#define r10                      0x0A\n#define r11                      0x0B\n#define r12                      0x0C\n#define r13                      0x0D\n#define r14                      0x0E\n#define r15                      0x0F\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "WWI": {"ttr": 8093, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct wwi \u00e4\n  int            wwisave\u00c418\u00dc;              /* SAVE AREA FOR WWI MACROS     */\n  unsigned char  wwipref\u00c48\u00dc;               /* TYPE OF REQUEST              */\n  void          *wwi_dsp;                  /* cache DSP pointer            */\n  void          *wwi_lista;                /* cache DSP pointer            */\n  struct \u00e4\n    unsigned char  _wwimsg__msg_msgid\u00c44\u00dc; /* message id */\n    \u00fc wwimsg;\n  void          *wwimsg__msg_insert\u00c416\u00dc;   /* message insert list          */\n  void          *wwimsg__msg_global;       /* global addr                  */\n  unsigned char  wwimsg__msg_hexsw;        /* hexa switch                  */\n  unsigned char  wwimsg__msg_wto;          /* wto switch                   */\n  unsigned char  wwimsg__msg_log;          /* log switch                   */\n  unsigned char  wwimsg__msg_asacc;        /* asa contol char              */\n  unsigned char  wwimsg__msg_trc;          /* set TRC                      */\n  short int      wwimsg__msg_desc;         /* descriptor code              */\n  short int      wwimsg__msg_routcde\u00c43\u00dc;   /* route code                   */\n  unsigned char  wwimsg__msg_pref;         /* control char prefix          */\n  unsigned char  wwimsg__msg_date\u00c49\u00dc;      /* date filed                   */\n  unsigned char  wwimsg__msg_time\u00c414\u00dc;     /* time stemp                   */\n  unsigned char  wwimsg__msg_extr\u00c4140\u00dc;    /* extract buffer               */\n  unsigned char  _filler1\u00c43\u00dc;\n  void          *wwi_prof__prof_sysa\u00c42\u00dc;   /* system profile start addr    */\n  void          *wwi_prof__prof_rcva\u00c42\u00dc;   /* receiver profile start addr  */\n  void          *wwi_prof__prof_liba\u00c42\u00dc;   /* library profile start addr   */\n  void          *wwi_prof__prof_browse;    /* browse pointer               */\n  unsigned char  wwi_prof__prof_dsn\u00c444\u00dc;   /* profile dataset name         */\n  unsigned char  wwi_prof__prof_mem\u00c48\u00dc;    /* profile member name          */\n  unsigned char  wwi_prof__prof_ddname\u00c48\u00dc; /* profile dd name              */\n  unsigned char  wwi_prof__prof_typ\u00c44\u00dc;    /* profile type - option        */\n  void          *wwi_prof__prof_count;     /* lu count                     */\n  unsigned char  wwi_prof__prof_sys\u00c48\u00dc;    /* system profile               */\n  unsigned char  wwi_prof__prof_lib\u00c48\u00dc;    /* library profile              */\n  unsigned char  wwi_prof__prof_rcv\u00c48\u00dc;    /* application profile          */\n  void          *wwi_prof__prof_msga;      /* message pointer              */\n  void          *wwi_uparm;                /* unit parameters              */\n  void          *wwi_ftr;                  /* FTR pointer                  */\n  void          *wwi_fts;                  /* FTs pointer                  */\n  void          *wwi_qcvt;                 /* QCVT address                 */\n  void          *wwi_ssl;                  /* SSL status                   */\n  void          *wwi_atoe_a;               /* ascii to ebcdic address or 0 */\n  void          *wwi_etoa_a;               /* ebcdic to ascii address or 0 */\n  unsigned char  wwi_atoe\u00c4256\u00dc;            /* ascii to ebcdic              */\n  unsigned char  wwi_etoa\u00c4256\u00dc;            /* ebcdic to ascii              */\n  unsigned char  wwi_put_allowed\u00c44\u00dc;       /* put flag                     */\n  unsigned char  wwi_dir_allowed\u00c44\u00dc;       /* put flag                     */\n  void          *wwi_dsp_global;           /* global DSP                   */\n  unsigned char  wwi_buff\u00c4256\u00dc;            /* buffer                       */\n  unsigned char  wwi_gsk_init_data\u00c464\u00dc;    /* gsk INIT data                */\n  void          *wwi_parmlist\u00c48\u00dc;          /* parm list                    */\n  void          *wwi_cbparms\u00c48\u00dc;           /* callback parms               */\n  void          *wwi_callsave\u00c418\u00dc;         /* save area                    */\n  unsigned char  wwi_function\u00c416\u00dc;         /* save area                    */\n  void          *wwi_callback;             /* callback function pointer    */\n  void          *wwi_pipi\u00c48\u00dc;\n  void          *wwi_pipi_addr\u00c42\u00dc;\n  void          *wwi_pipi_parmp;\n  void          *wwi_pipi_retcode;\n  void          *wwi_pipi_rsncode;\n  void          *wwi_pipi_fdbkcode;\n  void          *wwi_pipi_sub;\n  void          *wwi_pipi_rc;\n  void          *wwi_pipi_token;\n  void          *wwi_pipi_index;\n  unsigned char  wwi_work\u00c464\u00dc;             /* work area                    */\n  \u00fc;\n\n#define wwimsg__msg_msgid wwimsg._wwimsg__msg_msgid\n\n/* Values for field \"wwi_prof__prof_msga\" */\n#define wwi_prof__prof_length 0x7C\n\n/* Values for field \"wwi_work\" */\n#define wwilgth               0x65C /* LENGTH OF WWI CONTROL BLOCK */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "XML": {"ttr": 8575, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct xml \u00e4\n  int            xmlsave\u00c418\u00dc;             /* SAVE AREA                           */\n  unsigned char  xml_option\u00c48\u00dc;           /* TYPE OF REQUEST                     */\n  void          *xml_uparm;               /* uparm pointer                       */\n  void          *xml_length;              /* length                              */\n  void          *xml_data;                /* address                             */\n  void          *xml_send_length;         /* length received from XML            */\n  void          *xml_send_data;           /* data received from XML              */\n  void          *xml_crab;                /* CRAB pointer                        */\n  unsigned char  xml_systemid\u00c48\u00dc;         /* system ID                           */\n  void          *xml_parmlist\u00c48\u00dc;         /* parmlist                            */\n  short int      xml_cparml;              /* list length                         */\n  unsigned char  xml_cparm\u00c460\u00dc;           /* parms for C                         */\n  unsigned char  _filler1\u00c42\u00dc;\n  unsigned char  xml_call_option;         /* option i.e. callback point          */\n  unsigned char  xml_callback_option;     /* option i.e. callback point          */\n  unsigned char  xml_caller_status;       /* caller status                       */\n  unsigned char  _filler2\u00c45\u00dc;\n  void          *xml_callback_parms\u00c48\u00dc;   /* parameters                          */\n  void          *xml_callback_return;     /* parameters                          */\n  void          *xml_callback_save\u00c416\u00dc;   /* callback save registers             */\n  void          *xml_tracelevel;          /* trace level                         */\n  struct \u00e4\n    unsigned char  _xml_msg__msg_msgid\u00c44\u00dc; /* message id */\n    \u00fc xml_msg;\n  void          *xml_msg__msg_insert\u00c416\u00dc; /* message insert list                 */\n  void          *xml_msg__msg_global;     /* global addr                         */\n  unsigned char  xml_msg__msg_hexsw;      /* hexa switch                         */\n  unsigned char  xml_msg__msg_wto;        /* wto switch                          */\n  unsigned char  xml_msg__msg_log;        /* log switch                          */\n  unsigned char  xml_msg__msg_asacc;      /* asa contol char                     */\n  unsigned char  xml_msg__msg_trc;        /* set TRC                             */\n  short int      xml_msg__msg_desc;       /* descriptor code                     */\n  short int      xml_msg__msg_routcde\u00c43\u00dc; /* route code                          */\n  unsigned char  xml_msg__msg_pref;       /* control char prefix                 */\n  unsigned char  xml_msg__msg_date\u00c49\u00dc;    /* date filed                          */\n  unsigned char  xml_msg__msg_time\u00c414\u00dc;   /* time stemp                          */\n  unsigned char  xml_msg__msg_extr\u00c4140\u00dc;  /* extract buffer                      */\n  unsigned char  xml_work\u00c4128\u00dc;           /* work area                           */\n  unsigned char  xml_xmldef\u00c4128\u00dc;         /* default dataset name                */\n  unsigned char  _filler3\u00c43\u00dc;\n  void          *xml_cppsave\u00c418\u00dc;         /* CPP save area                       */\n  unsigned char  _filler4\u00c4128\u00dc;           /* work arae                           */\n  void          *xml_buffer\u00c42\u00dc;           /* buffer addres length for reply data */\n  \u00fc;\n\n#define xml_msg__msg_msgid xml_msg._xml_msg__msg_msgid\n\n/* Values for field \"xml_call_option\" */\n#define xml_call_option_init            0      /* init XML            */\n#define xml_call_option_reset           1      /* reset , restart XML */\n#define xml_call_option_call            2      /* call XML            */\n#define xml_call_option_error           3      /* error in $$PRXX     */\n\n/* Values for field \"xml_callback_option\" */\n#define xml_callback_option_readbytes   0      /* readBbytes          */\n#define xml_callback_option_s_proc      1      /* start proc          */\n#define xml_callback_option_e_proc      2      /* end proc            */\n#define xml_callback_option_se_proc     3      /* start proc element  */\n#define xml_callback_option_ee_proc     4      /* end proc element    */\n#define xml_callback_option_s_desc      5      /* start desc          */\n#define xml_callback_option_e_desc      6      /* end desc            */\n#define xml_callback_option_se_desc     7      /* start desc element  */\n#define xml_callback_option_ee_desc     8      /* end desc element    */\n#define xml_callback_option_s_data      9      /* start data          */\n#define xml_callback_option_e_data      10     /* end data            */\n#define xml_callback_option_se_data     11     /* start data element  */\n#define xml_callback_option_ee_data     12     /* end data element    */\n#define xml_callback_option_enddocument 13     /* endDocument         */\n#define xml_callback_option_fatal       14     /* Fatal               */\n#define xml_callback_option_message     15     /* Message             */\n\n/* Values for field \"xml_caller_status\" */\n#define xml_caller_status_init          0      /* caller init         */\n#define xml_caller_status_error         1      /* error in caller     */\n\n/* Values for field \"xml_buffer\" */\n#define xml_default_buffer              131072 /* 128Kbyte            */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "XXSTDIO": {"ttr": 7953, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef DEFINE_XXSTDIO\n#define DEFINE_XXSTDIO\n#include <stdio.h>\n\nISIS_EXT_C_START\nextern int fcloseNoInline(FILE *);\nextern FILE * fopenNoInline(const char *,const char *); //ZA040728\nextern int isVsam(const char *);\nextern int fileNum(int);\nISIS_EXT_C_END\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT888/CBT.V500.FILE888.PDS/HPP.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT888/CBT.V500.FILE888.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}