#pragma pack(1)

struct iezjscb ä
  unsigned char  _filler1Ä188Ü;
  int            jscrsv01;      /* -            RESERVED                                  */
  struct ä
    unsigned char  _jscrsv32;      /* -            RESERVED                           ICB459 */
    int            _jschpcea : 24; /* -          ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM     */
    ü jschpce;
  void          *jscbshr;       /* -            ADDRESS OF ASSEMBLY CHAIN (VSAM)   ICB434 */
  void          *jscbtcp;       /* -            ADDRESS OF TIOT CHAINING ELEMENT CHAIN    */
  void          *jscbpcc;       /* -            ADDRESS OF PRIVATE CATALOG CONTROL BLOCK  */
  void          *jscbtcbp;      /* -            ADDRESS OF INITIATOR'S TCB (VSAM)  ICB434 */
  void          *jscbijsc;      /* -            ADDRESS OF JSCB OF THE INITIATOR THAT     */
  void          *jscbdbtb;      /* -            ADDRESS OF THE DEB TABLE FOR THIS JOB     */
  unsigned char  jscbidÄ4Ü;     /* -          JOB SERIAL NUMBER (OS/VS1)                  */
  struct ä
    unsigned char  _jscrsv02;      /* -            RESERVED                             */
    int            _jscbdcba : 24; /* -          ADDRESS OF DCB FOR DATA SET CONTAINING */
    ü jscbdcb;
  char           jscbstep;      /* -          CURRENT STEP NUMBER.  THE FIRST STEP IS     */
  unsigned char  jscrsv03Ä3Ü;   /* -          RESERVED                                    */
  void          *jscbsecb;      /* -            ECB FOR COMMUNICATION BETWEEN    @ZMC1264 */
  int            jscrsv04  : 1, /* -  RESERVED                                            */
                 jscrsv05  : 1, /* -  RESERVED                                            */
                 jscblong  : 1, /* -        THE PARTITION CANNOT BE REDEFINED BECAUSE     */
                 jscrsv06  : 1, /* -  RESERVED                                            */
                 jscrsv07  : 1, /* -  RESERVED                                            */
                 jscrsv08  : 1, /* -  RESERVED                                            */
                 jscsiots  : 1, /* -        CHECKPOINT MUST SCAN SIOT          MDC018     */
                 jscbauth  : 1; /* -        THE STEP REPRESENTED BY THIS JSCB IS          */
  unsigned char  jscrsv10Ä3Ü;   /* -          RESERVED                           ICB351   */
  unsigned char  jscrsv17Ä3Ü;   /* -          Reserved                             @P2C   */
  int            jscbpass  : 1, /* -        WHEN THIS BIT IS SET TO ONE AND A             */
                 jscrsv11  : 1, /* -  RESERVED                                            */
                 jscrsv12  : 1, /* -  RESERVED                                            */
                 jscrsv13  : 1, /* -  RESERVED                                            */
                 jscrsv14  : 1, /* -  RESERVED                                            */
                 jscrsv15  : 1, /* -  RESERVED                                            */
                 jscrsv16  : 1, /* -  RESERVED                             @01C           */
                 jscbpmsg  : 1; /* -        A MESSAGE HAS BEEN ISSUED BECAUSE THE         */
  void          *jscbqmpi;      /* -            ADDRESS OF THE QUEUE MANAGER PARAMETER    */
  void          *jscbjesw;      /* -            ADDRESS OF THE JES WORKAREA      @YA01530 */
  struct ä
    int            _jscbiofg : 1, /* -        THE PREVIOUS WTP I/O OPERATION HAD AN       */
                   _jscbret  : 1, /* -        TEXT BREAKING INDICATOR, ADDITIONAL         */
                   _jscbbmo  : 1, /* -              Buffer Messages Only flag.  Set       */
                   _jscrsv19 : 1, /* -  RESERVED                                          */
                   _jscrsv20 : 1, /* -  RESERVED                                          */
                   _jscrsv21 : 1, /* -  RESERVED                                          */
                   _jscrsv22 : 1, /* -  RESERVED                                          */
                   _jscrsv23 : 1; /* -  RESERVED                                          */
    char           _jscbwtsp;     /* -          NUMBER OF THE LAST JOB STEP TO ISSUE WTP  */
    short int      _jscbpmg;      /* -            NUMBER OF WTP OPERATIONS ISSUED FOR THE */
    ü jscbwtp;
  void          *jscbcscb;      /* -            ADDRESS OF COMMAND SCHEDULING CONTROL     */
  struct ä
    unsigned char  _jscrsv24; /* -            RESERVED                           ICB351 */
    struct ä
      unsigned char  _jscbjctaÄ3Ü; /* -          SVA of JCT, use SWAREQ to convert    @P2C */
      ü jscjctp;
    ü jscbjct;
  void          *jscbpscb;      /* -            ADDRESS OF TSO PROTECTED STEP CONTROL     */
  struct ä
    short int      _jscbtjid; /* -            TSO TERMINAL JOB IDENTIFIER */
    ü jscbasid;
  int            jscbrv01  : 1, /* -  RESERVED                                            */
                 jscbadsp  : 1, /* -        AUTOMATIC DATA SET PROTECTION FOR THIS        */
                 jscbrv02  : 1, /* -  RESERVED                                            */
                 jscbrv03  : 1, /* -  RESERVED                                            */
                 jscbsjfy  : 1, /* -  Used by BB131                        @P4C           */
                 jscbsjfn  : 1, /* -  Used by BB131                        @P4C           */
                 jscbrv06  : 1, /* -  RESERVED                                            */
                 jscbrv07  : 1; /* -  RESERVED                                            */
  unsigned char  jscbrv08;      /* -            RESERVED                                  */
  int            jscbiecb;      /* -            ECB USED FOR COMMUNICATION BETWEEN        */
  unsigned char  jscbjrbaÄ8Ü;   /* -          JOB JOURNAL RELATIVE BYTE ADDRESS (RBA)     */
  void          *jscbaloc;      /* -            ADDRESS OF THE ALLOCATION WORK   @ZMC1264 */
  struct ä
    int            _jscbjnln  : 1, /* -        NOTHING SHOULD BE WRITTEN IN              */
                   _jscbjnlf  : 1, /* -        NO JOB JOURNAL                     MDC017 */
                   _jscbjnle  : 1, /* -        ERROR IN JOURNAL, DO NOT WRITE     ICB332 */
                              : 1,
                   _jscbjsbi  : 1, /* -        JOB HAS NOT ENTERED ALLOCATION FOR THE    */
                   _jscbjsba  : 1, /* -        JOB HAS ENTERED ALLOCATION         ICB332 */
                   _jscbjsbx  : 1, /* -        JOB HAS COMPLETED ALLOCATION       ICB332 */
                   _jscbjsbt  : 1; /* -        JOB HAS ENTERED TERMINATION        ICB332 */
    int            _jscbjnla : 24; /* -          INITIATOR JSCB ONLY - ADDRESS OF JSCB   */
    ü jscbjnl;
  void          *jscbjnlr;      /* -            POINTER TO JOB JOURNAL RPL         MDC023 */
  void          *jscbsmlr;      /* -            ADDRESS OF SYSTEM MESSAGE DATA            */
  struct ä
    unsigned char  _jscrsv31;      /* -            RESERVED                           ICB333 */
    int            _jscbsuba : 24; /* -          ADDRESS OF JES-SUBTL FOR THIS JOB           */
    ü jscbsub;
  short int      jscbsono;      /* -            THE NUMBER OF SYSOUT DATA SETS PLUS       */
  short int      jscrsv28;      /* -            RESERVED                                  */
  unsigned char  jscbfrbaÄ8Ü;   /* -          RELATIVE BYTE ADDRESS (RBA) OF THE FIRST    */
  void          *jscbssib;      /* -            ADDRESS OF THE SUBSYSTEM IDENTIFICATION   */
  void          *jscdsabq;      /* -            ADDRESS OF QDB FOR DSAB CHAIN      MDC007 */
  void          *jscbasw2;      /* -            POINTER TO THE ALLOCATION STAE WORK AREA  */
  struct ä
    unsigned char  _jscrsv55;   /* -          RESERVED                                  */
    unsigned char  _jscsctpÄ3Ü; /* -          SVA of SCT, use SWAREQ to convert    @P2C */
    ü jscsct;
  void          *jsctmcor;      /* -            ADDRESS OF TIOT MAIN STORAGE MANAGEMENT   */
  void          *jscbvata;      /* -            ADDRESS OF VAT USED DURING SYSTEM RESTART */
  short int      jscddnno;      /* -            COUNTER USED BY DYNAMIC ALLOCATION TO     */
  short int      jscbodno;      /* -            COUNTER USED BY DYNAMIC OUTPUT TO    @D1C */
  short int      jscddnum;      /* -            NUMBER OF DD ENTRIES CURRENTLY ALLOCATED  */
  unsigned char  jscrsv33;      /* -            RESERVED                           MDC019 */
  char           jscbswsp;      /* -          SWA SUBPOOL                        MDC015   */
  void          *jscbact;       /* -            POINTER TO ACTIVE JSCB             MDC014 */
  void          *jscbufpt;      /* -            ADDRESS OF ALLOCATION/UNALLOCATION        */
  void          *jscbaswa;      /* -            POINTER TO THE LAST ALLOCATION ESTAE WORK */
  struct ä
    void          *_jscbecb1; /* -            ADDR OF CANCEL ECB WHILE         @ZMC1510 */
    void          *_jscbecb2; /* -            ADDR OF WAIT FOR REGION ECB      @ZMC1510 */
    ü jscbpgmn;
  void          *jscdsnqp;      /* -            Pointer to the first DSENQ Table     @L5C */
  void          *jscbcscx;      /* -            ADDRESS OF CSCX EXTENSION TO CSCB    @L2C */
  int            jscamcpl;      /* -            ALLOCATION MESSAGE CELLPOOL ID   @YC19251 */
  ü;

#define jscrsv32 jschpce._jscrsv32
#define jschpcea jschpce._jschpcea
#define jscrsv02 jscbdcb._jscrsv02
#define jscbdcba jscbdcb._jscbdcba
#define jscbiofg jscbwtp._jscbiofg
#define jscbret jscbwtp._jscbret
#define jscbbmo jscbwtp._jscbbmo
#define jscrsv19 jscbwtp._jscrsv19
#define jscrsv20 jscbwtp._jscrsv20
#define jscrsv21 jscbwtp._jscrsv21
#define jscrsv22 jscbwtp._jscrsv22
#define jscrsv23 jscbwtp._jscrsv23
#define jscbwtsp jscbwtp._jscbwtsp
#define jscbpmg  jscbwtp._jscbpmg
#define jscrsv24 jscbjct._jscrsv24
#define jscbjcta jscbjct.jscjctp._jscbjcta
#define jscbtjid jscbasid._jscbtjid
#define jscbjnln jscbjnl._jscbjnln
#define jscbjnlf jscbjnl._jscbjnlf
#define jscbjnle jscbjnl._jscbjnle
#define jscbjsbi jscbjnl._jscbjsbi
#define jscbjsba jscbjnl._jscbjsba
#define jscbjsbx jscbjnl._jscbjsbx
#define jscbjsbt jscbjnl._jscbjsbt
#define jscbjnla jscbjnl._jscbjnla
#define jscrsv31 jscbsub._jscrsv31
#define jscbsuba jscbsub._jscbsuba
#define jscrsv55 jscsct._jscrsv55
#define jscsctp  jscsct._jscsctp
#define jscbecb1 jscbpgmn._jscbecb1
#define jscbecb2 jscbpgmn._jscbecb2

#pragma pack(reset)
