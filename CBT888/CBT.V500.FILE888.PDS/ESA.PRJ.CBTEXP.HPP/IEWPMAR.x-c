#pragma pack(packed)

struct pmar ä
  struct ä
    short int      _pmar_slen;      /* Section length.                  */
    unsigned char  _pmar_lvl;       /* PMAR format level                */
    unsigned char  _pmar_plvl;      /* Bind processor creating object   */
    struct ä
      unsigned char  _pmar_atr1; /* First attribute byte.  */
      unsigned char  _pmar_atr2; /* Second attribute byte. */
      struct ä
        unsigned char  _pmar_ftb1; /* Alternative name for flags byte */
        ü pmar_atr3;
      struct ä
        unsigned char  _pmar_ftb2; /* Alternative name for flags byte */
        ü pmar_atr4;
      ü pmar_atr;
    unsigned char  _pmar_atr5;      /* Fifth attribute byte        @L8A */
    unsigned char  _pmar_ac;        /* APF authorization code           */
    unsigned char  _pmar_storÄ4Ü;   /* Virtual storage required         */
    unsigned char  _pmar_epmÄ4Ü;    /* Main entry point offset          */
    unsigned char  _pmar_epaÄ4Ü;    /* This entry point offset          */
    struct ä
      unsigned char  _pmar_chlv;    /* Change level of member */
      unsigned char  _pmar_ssfb;    /* SSI flag byte          */
      unsigned char  _pmar_mserÄ2Ü; /* Member serial number   */
      ü pmar_ssi;
    unsigned char  _pmar_xattr1Ä2Ü; /* Extended Attributes         @L7A */
    unsigned char  _filler1Ä2Ü;     /* Reserved                    @L7A */
    ü pmar_entry;
  unsigned char  pmar_end; /* END OF BASIC SECTION */
  ü;

#define pmar_slen   pmar_entry._pmar_slen
#define pmar_lvl    pmar_entry._pmar_lvl
#define pmar_plvl   pmar_entry._pmar_plvl
#define pmar_atr1   pmar_entry.pmar_atr._pmar_atr1
#define pmar_atr2   pmar_entry.pmar_atr._pmar_atr2
#define pmar_ftb1   pmar_entry.pmar_atr.pmar_atr3._pmar_ftb1
#define pmar_ftb2   pmar_entry.pmar_atr.pmar_atr4._pmar_ftb2
#define pmar_atr5   pmar_entry._pmar_atr5
#define pmar_ac     pmar_entry._pmar_ac
#define pmar_stor   pmar_entry._pmar_stor
#define pmar_epm    pmar_entry._pmar_epm
#define pmar_epa    pmar_entry._pmar_epa
#define pmar_chlv   pmar_entry.pmar_ssi._pmar_chlv
#define pmar_ssfb   pmar_entry.pmar_ssi._pmar_ssfb
#define pmar_mser   pmar_entry.pmar_ssi._pmar_mser
#define pmar_xattr1 pmar_entry._pmar_xattr1

/* Values for field "pmar_lvl" */
#define pmar_pm1_val        0x01 /* level constant for PO1      @L2A */
#define pmar_pm2_val        0x02 /* level constant for PO2      @L2A */
#define pmar_pm3_val        0x03 /* level constant for PO3      @L3A */
#define pmar_pm4_val        0x04 /* level constant for PO4      @L7A */
#define pmar_pm5_val        0x05 /* level constant for PO5      @LAA */
#define pmar_lvl_val        0x05 /* level constant              @LAC */

/* Values for field "pmar_plvl" */
#define pmar_plvl_e_val     0x01 /* E-level constant                 */
#define pmar_plvl_f_val     0x02 /* F-level constant                 */
#define pmar_plvl_aos_val   0x03 /* AOS-level constant               */
#define pmar_plvl_xa_val    0x04 /* XA-level constant                */
#define pmar_plvl_b1_val    0x05 /* Binder version 1                 */
#define pmar_plvl_b2_val    0x06 /* Binder version 2            @L2A */
#define pmar_plvl_b3_val    0x07 /* Binder version 3            @L3A */
#define pmar_plvl_b4_val    0x08 /* Binder version 4            @L7A */
#define pmar_plvl_b5_val    0x09 /* Binder version 5            @L8A */

/* Values for field "pmar_atr1" */
#define pmar_rent           0x80 /* Reenterable                      */
#define pmar_reus           0x40 /* Reusable                         */
#define pmar_ovly           0x20 /* Overlay structure                */
#define pmar_test           0x10 /* Module to be tested - TESTRAN    */
#define pmar_load           0x08 /* Only loadable                    */
#define pmar_sctr           0x04 /* Scatter format                   */
#define pmar_exec           0x02 /* Executable                       */
#define pmar_1blk           0x01 /* Load module contains only one    */

/* Values for field "pmar_atr2" */
#define pmar_flvl           0x80 /* If on, the program cannot be     */
#define pmar_org0           0x40 /* Linkage editor assigned origin   */
#define pmar_nrld           0x10 /* Program contains no RLD items    */
#define pmar_nrep           0x08 /* Module cannot be reprocessed     */
#define pmar_tstn           0x04 /* Module contains TESTRAN symbol   */
#define pmar_refr           0x01 /* Refreshable program              */

/* Values for field "pmar_ftb1" */
#define pmar_big            0x40 /* This program requires 16M bytes  */
#define pmar_paga           0x20 /* Page alignment is required       */
#define pmar_xssi           0x10 /* SSI information present          */
#define pmar_xapf           0x08 /* APF information present          */
#define pmar_lfmt           0x04 /* PMARL follows PMAR.              */

/* Values for field "pmar_ftb2" */
#define pmar_altp           0x80 /* Alternate primary flag. If on    */
#define pmar_rmod           0x10 /* RMODE is 31.                     */
#define pmar_aamd           0x0C /* Alias entry point addressing     */
#define pmar_aamd_maskoff   0xF3 /* Mask for AMODE flags             */
#define pmar_mamd           0x03 /* Main entry point addressing      */

/* Values for field "pmar_atr5" */
#define pmar_rmod64         0x80 /* RMODE 64                    @L8A */

/* Values for field "pmar_xattr1" */
#define pmar_system_le      0x80 /* @L7A                             */
#define pmar_lightweight_le 0x40 /* @L7A                             */

#pragma pack(reset)
