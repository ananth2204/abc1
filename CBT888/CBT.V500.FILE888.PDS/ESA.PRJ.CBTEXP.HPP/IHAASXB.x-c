#pragma pack(packed)

struct asxb ä
  struct ä
    unsigned char  _asxbasxbÄ4Ü; /* -               ACRONYM IN EBCDIC -ASXB-            */
    void          *_asxbftcb;    /* -                 POINTER TO FIRST TCB ON TCB QUEUE */
    ü asxbegin;
  void          *asxbltcb;     /* -                 POINTER TO LAST TCB ON TCB QUEUE     */
  short int      asxbtcbs;     /* -                 NUMBER TCB'S IN THE MEMORY           */
  unsigned char  asxbflg1;     /* -                 Flags                           @LDA */
  unsigned char  asxbschd;     /* -                 SCHEDULER FLAG BYTE             @LAA */
  void          *asxbmpst;     /* -                 ADDRESS OF VTAM MEMORY PROCESS       */
  void          *asxblwa;      /* -                 ADDRESS OF LWA                MDC016 */
  void          *asxbvfvt;     /* -                 POINTER TO INTERNAL VIRTUAL     @L2A */
  void          *asxbsaf;      /* -                 ROUTER RRCB ADDRESS             @D1A */
  void          *asxbihsa;     /* -                 POINTER TO INTERRUPT HANDLERS SAVE   */
  int            asxbflsaÄ18Ü; /* -               SAVE AREA FOR ANY FIRST LEVEL BRANCH   */
  void          *asxbomcb;     /* -                 POINTER TO OBJECT ACCESS METHOD @01C */
  void          *asxbspsa;     /* -                 POINTER TO LOCAL WORK/SAVE AREA      */
  void          *asxbrsmd;     /* -                 POINTER TO LOCAL RSM DATA AREA       */
  void          *asxbrctd;     /* -                 POINTER TO LOCAL RCT DATA AREA       */
  void          *asxbdecb;     /* -                 DUMP TASK ECB                   @02C */
  void          *asxbousb;     /* -                 POINTER TO SYSTEM RESOURCES MANAGER  */
  void          *asxbcrwk;     /* -                 CHECKPOINT/RESTART WORKAREA POINTER. */
  unsigned char  asxbprgÄ16Ü;  /* -              SVC PURGE I/O PARAMETER LIST  MDC003    */
  unsigned char  asxbpswdÄ8Ü;  /* -               USER'S LOGON PASSWORD.  IF BLANK,      */
  void          *asxbsirb;     /* -                 ADDRESS OF SIRB FOR THIS ADDRESS     */
  void          *asxbetsk;     /* -                 ADDRESS OF ERROR TASK FOR THIS       */
  struct ä
    void          *_asxbfiqe; /* -                 POINTER TO FIRST IQE          MDC006 */
    void          *_asxbliqe; /* -                 POINTER TO LAST IQE           MDC007 */
    void          *_asxbfrqe; /* -                 POINTER TO FIRST RQE          MDC008 */
    void          *_asxblrqe; /* -                 POINTER TO LAST RQE           MDC009 */
    void          *_asxbfsrb; /* -                 ADDRESS OF FIRST SRB          MDC013 */
    void          *_asxblsrb; /* -                 ADDRESS OF LAST SRB           MDC014 */
    ü asxbaeq;
  struct ä
    unsigned char  _asxbuserÄ7Ü; /* -               USER ID FOR WHICH THE JOB OR SESSION   */
    unsigned char  _filler1;     /* -                 Last byte of ASXBUSR8. ASXBSECR @04A */
    ü asxbusr8;
  void          *asxbsenv;     /* -                 ADDRESS OF ACCESS CONTROL            */
  void          *asxbsfrs;     /* Address of SSI function request @03C                   */
  struct ä
    void          *_asxbnssa; /* NSSA POOL.                  @G38BPXH */
    int            _asxbnsct; /* COUNT USED TO SYNCHRONIZE THE        */
    ü asxbnsdw;
  struct ä
    unsigned char  _asxbcrb1; /* -                 CANCEL/RCT BYTE 1  (MDC314) @ZA05360 */
    unsigned char  _asxbcrb2; /* -                 CANCEL/RCT BYTE 2  (MDC317) @ZA05360 */
    unsigned char  _asxbcrb3; /* -                 CANCEL/RCT BYTE 3  (MDC318) @ZA05360 */
    unsigned char  _asxbcrb4; /* -                 CANCEL/RCT BYTE 4  (MDC319) @ZA05360 */
    ü asxbcasw;
  void          *asxbpt0e;     /* -                 POST EXIT QUEUE HEADER               */
  void          *asxbcapc;     /* -                 Count of task mode UCB capture  @L7A */
  void          *asxbjsvt;     /* -                 JES COMMUNICATION AREA POINTER. @D2A */
  void          *asxbdivw;     /* -                 ADDRESS OF THE DIV WORK/SAVE    @L4A */
  void          *asxbcapt;     /* -                 Pointer to IOS captured UCB     @L7A */
  void          *asxblinf;     /* -                 Latch information area          @L8A */
  void          *asxbpirl;     /* Pointer to queue of PIRLs.                             */
  void          *asxbitcb;     /* -                 Initial jobstep TCB address          */
  int            asxbr0fc;     /* -                 RESERVED                        @L9A */
  void          *asxbgrsp;     /* -                 Address of GRS control          @P4A */
  int            asxbr104;     /* -                 Reserved                        @P4A */
  double         asxbalec;     /* AuthorizedLE Anchor             @LBA                   */
  struct ä
    void          *_asxbfxrs; /* Range Start                     @H1A */
    void          *_asxbfxre; /* Range End                       @H1A */
    ü asxbifar;
  void          *asxbexta;     /* Local exits                     @LCA                   */
  void          *asxbaxrl;     /* AXR local area                                         */
  double         asxbend;      /* -                END OF ASXB                           */
  ü;

#define asxbasxb asxbegin._asxbasxb
#define asxbftcb asxbegin._asxbftcb
#define asxbfiqe asxbaeq._asxbfiqe
#define asxbliqe asxbaeq._asxbliqe
#define asxbfrqe asxbaeq._asxbfrqe
#define asxblrqe asxbaeq._asxblrqe
#define asxbfsrb asxbaeq._asxbfsrb
#define asxblsrb asxbaeq._asxblsrb
#define asxbuser asxbusr8._asxbuser
#define asxbnssa asxbnsdw._asxbnssa
#define asxbnsct asxbnsdw._asxbnsct
#define asxbcrb1 asxbcasw._asxbcrb1
#define asxbcrb2 asxbcasw._asxbcrb2
#define asxbcrb3 asxbcasw._asxbcrb3
#define asxbcrb4 asxbcasw._asxbcrb4
#define asxbfxrs asxbifar._asxbfxrs
#define asxbfxre asxbifar._asxbfxre

/* Values for field "asxbflg1" */
#define asxbhcrm 0x80 /* -             Health Check AS resmgr set      @LDA */

/* Values for field "asxbschd" */
#define asxbswup 0x80 /* -             INDICATES THAT SWA SHOULD BE WRITTEN */

/* Values for field "asxbcrb1" */
#define asxbpip  0x80 /* -             SET BY RCT TO INDICATE PURGE (SVC    */
#define asxbtfd  0x40 /* -             SET BY CANCEL TO INDICATE THAT ALL   */

#pragma pack(reset)
