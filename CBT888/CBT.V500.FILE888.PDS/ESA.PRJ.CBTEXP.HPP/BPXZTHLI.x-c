#pragma pack(packed)

struct thli ä
  unsigned char  thliidÄ4Ü;           /* EBCDIC ID - Thli                              */
  unsigned char  thlisp;              /* Subpool number of this Thli                   */
  int            thlilen : 24;        /* Length of this Thli                           */
  struct ä
    unsigned char  _thliflagb1;
    unsigned char  _thliflagb2;
    unsigned char  _thliflagb3;
    unsigned char  _filler1;
    ü thliflags;
  int            thlippsd;            /* Address of Ppsd                               */
  unsigned char  thlisigmaskÄ8Ü;      /* Signal mask. Primarliy set by sigprocmask().  */
  void          *thliprli;            /* -> Prli. Process related information          */
  void          *thliworkptr;         /* -> To user work area specified on             */
  int            thlicomecb;          /* User communication ECB                        */
  struct ä
    unsigned char  _thlicomflagsb1; /* reserved          */
    unsigned char  _thlicomflagsb2; /* reserved          */
    unsigned char  _thlicomflagsb3; /* reserved for user */
    unsigned char  _thlicomflagsb4;
    ü thlicomflags;
  unsigned char  thlikey;             /* PSW key of Thli control block. The key is in  */
  unsigned char  thliip_len;          /* Length in bytes of ThliIP                     */
  unsigned char  thliflags2;          /* Flag Byte                                     */
  unsigned char  thliexecparmnum;     /* Number of parms being passed in exec style    */
  struct ä
    unsigned int   _filler2 : 30;
    ü thlitimerecb;
  int            thliaspirbecb;       /* ECB posted when aio done                      */
  void          *thlijava;            /* JAVA thread control block address. *** DO NOT */
  unsigned char  thliip_Ä16Ü;         /* IP@ stored by app left justified              */
  struct ä
    unsigned char  _thlisecsÄ4Ü;  /* Seconds to wait for event     */
    unsigned char  _thlinanosÄ4Ü; /* Nanoseconds to wait for event */
    ü thlitimeout;
  short int      thliccsid;           /* Program character set Id for filesystem       */
  unsigned char  thliapplidlen;       /* Len of string in ThliAppid ignored if 0 or >8 */
  unsigned char  thlisrmflags;        /* SRM flags Ownership: SRM                      */
  unsigned char  thlishmdumpprio;     /* Dump priority assigned to shared memory       */
  unsigned char  _filler3Ä3Ü;         /* Reserved                                      */
  unsigned char  thliworkptr64Ä8Ü;    /* -> To user work area specified on             */
  struct ä
    unsigned char  _thliparenttknÄ4Ü; /* parents IARV64 user token */
    unsigned char  _thlichildtknÄ4Ü;  /* token assigned to child   */
    ü thliutokeninfo;
  int            thliretcode;         /* Failing retcode from CPR                      */
  int            thlirsncode;         /* Failing rsncode from CPR                      */
  unsigned char  thliapplidÄ8Ü;       /* Applid passed for ptsec, and __passwd after   */
  unsigned char  _filler4Ä4Ü;         /* Reserved                                      */
  int            thliep_functioncode;
  union ä
    struct ä
      struct ä
        unsigned char  _filler5Ä24Ü;
        ü thliextendedparmarea;
      ü thliextenededparms;
    struct ä
      unsigned char  _thliep_applidlen;
      unsigned char  _thliep_applidÄ8Ü;
      unsigned char  _filler6Ä15Ü;
      ü thliextendedapplparms;
    struct ä
      int            _thliep_gidnamelen;
      unsigned char  _thliep_gidnameÄ8Ü;
      int            _thliep_gidlen;
      int            _thliep_gid;
      int            _thliep_groupcount;
      ü thliextendedgidname;
    ü _thli_union1;
  unsigned char  _filler7Ä20Ü;        /* reserved                                      */
  unsigned char  thliend;             /* End of Thli                                   */
  ü;

#define thliflagb1        thliflags._thliflagb1
#define thliflagb2        thliflags._thliflagb2
#define thliflagb3        thliflags._thliflagb3
#define thlicomflagsb1    thlicomflags._thlicomflagsb1
#define thlicomflagsb2    thlicomflags._thlicomflagsb2
#define thlicomflagsb3    thlicomflags._thlicomflagsb3
#define thlicomflagsb4    thlicomflags._thlicomflagsb4
#define thlisecs          thlitimeout._thlisecs
#define thlinanos         thlitimeout._thlinanos
#define thliparenttkn     thliutokeninfo._thliparenttkn
#define thlichildtkn      thliutokeninfo._thlichildtkn
#define thliep_applidlen  _thli_union1.thliextendedapplparms._thliep_applidlen
#define thliep_applid     _thli_union1.thliextendedapplparms._thliep_applid
#define thliep_gidnamelen _thli_union1.thliextendedgidname._thliep_gidnamelen
#define thliep_gidname    _thli_union1.thliextendedgidname._thliep_gidname
#define thliep_gidlen     _thli_union1.thliextendedgidname._thliep_gidlen
#define thliep_gid        _thli_union1.thliextendedgidname._thliep_gid
#define thliep_groupcount _thli_union1.thliextendedgidname._thliep_groupcount

/* Values for field "thliflagb1" */
#define thlisigpending      0x80       /* Signal pending flag                           */
#define thlicanceldisabled  0x40       /* Cancel request type 0=enabled, 1=disabled     */
#define thlicancelpending   0x20       /* Cancel pending for thread                     */
#define thlicancelasync     0x10       /* Cancelation request state 0 = controlled, 1   */
#define thliiteratesir      0x08       /* Use back door signal dlv 0 = Sir can exit 1 = */
#define thlinosig           0x04       /* Suppress signal generation for this socket    */
#define thlitimeoutset      0x02       /* Kernel Time Out Service requested             */
#define thlitimerpopped     0x01       /* Kernel Time Out Service timer popped          */

/* Values for field "thliflagb2" */
#define thliptqtimeout      0x80       /* If on, invokers of the BPX1PTQ call will      */
#define thlifreezestop      0x40       /* Thread has been frozen via Status Stop        */
#define thlidefersignals    0x20       /* Defer signals for user                        */
#define thlipostanddefer    0x10       /* Post regardless of key defer delivery until   */
#define thlitcbexitperc     0x08       /* Set by application to allow abends in         */
#define thliirbnoretry      0x04       /* Set by NSSIR to indicate the calling IRB is   */
#define thlisigirbabend     0x02       /* Abend on sigkill regardless of state          */
#define thliuseworkptr64    0x01

/* Values for field "thliflagb3" */
#define thliforkacctg       0x80       /* Child accounting data based on setuid         */
#define thlipropauth        0x40       /* Propagate JSCBAUTH to child on fork           */
#define thliundubcalleronly 0x20       /* mvsprocclp should cleanup caller's            */

/* Values for field "thlicomecb" */
#define thlicomecbwait      0x80       /* ECB wait bit                                  */
#define thlicomecbpost      0x40       /* ECB post bit                                  */

/* Values for field "thlicomflagsb3" */
#define thlicomflagsu0      0x80       /* reserved for user                             */
#define thlicomflagsu1      0x40       /* reserved for user                             */
#define thlicomflagsu2      0x20       /* reserved for user                             */
#define thlicomflagsu3      0x10       /* reserved for user                             */
#define thlicomflagsu4      0x08       /* reserved for user                             */
#define thlicomflagsu5      0x04       /* reserved for user                             */
#define thlicomflagsu6      0x02       /* reserved for user                             */
#define thlicomflagsu7      0x01       /* reserved for user                             */

/* Values for field "thlicomflagsb4" */
#define thliwillfreezeme    0x08       /* LE will issue FreezeMe for this task          */
#define thlifrozen          0x04       /* BPX1PQG freeze request has been issued        */
#define thlisigposted       0x02       /* User posted due to signal                     */
#define thlisigwait         0x01       /* User wants ECB posted when a signal will be   */

/* Values for field "thliflags2" */
#define thlif2_setappl      0x80       /* Set RACROUTE APPL parm with JOBNAME           */
#define thlicvton           0x40       /* Activates auto conversion for this thread     */
#define thlicvtoff          0x20       /* Deactivates auto conversion for this          */

/* Values for field "thlitimerecb" */
#define thlitimerecbwait    0x80       /* ECB wait bit                                  */
#define thlitimerecbpost    0x40       /* ECB post bit                                  */

/* Values for field "thliaspirbecb" */
#define thliaspirbwait      0x80       /* Wait bit                                      */
#define thliaspirbpost      0x40       /* Post bit                                      */

/* Values for field "thlisrmflags" */
#define thlivcmoverride     0x80       /* This bit indicates that this unit of work     */

/* Values for field "thliend" */
#define thliep_applset      1
#define thliep_gidnameset   3
#define thli_id             0xE3C8D3C9 /* Control Block Acronym                         */
#define thli_len            172        /* Length of Thli                                */
#define thli_sp             230        /* Subpool for the Thli                          */

#pragma pack(reset)
