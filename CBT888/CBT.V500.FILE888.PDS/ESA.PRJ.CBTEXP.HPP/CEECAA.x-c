#pragma pack(packed)

struct ceecaa ä
  unsigned char  ceecaaflag0;           /* CAA Flags                           */
  unsigned char  _filler1;              /* Reserved                            */
  unsigned char  ceecaalangp;           /* PL/I compatibility flags            */
  unsigned char  _filler2Ä5Ü;           /* Reserved                            */
  void          *ceecaabos;             /* Start of current storage segment    */
  void          *ceecaaeos;             /* End of current storage segment      */
  unsigned char  _filler3Ä52Ü;          /* Reserved                            */
  int            ceecaatorc;            /* Thread level return code            */
  unsigned char  _filler4Ä44Ü;          /* Reserved                 @CM0419C   */
  void          *ceecaatovf;            /* Stack overflow routine   @CM0419A   */
  unsigned char  _filler5Ä168Ü;         /* Reserved                 @CM0419A   */
  void          *ceecaaattn;            /* Addr of LE/370 attention handler    */
  unsigned char  _filler6Ä56Ü;          /* Reserved                            */
  void          *ceecaahllexit;         /* Set by CEEBINT for user hook exit   */
  unsigned char  _filler7Ä56Ü;          /* Reserved                            */
  unsigned char  ceecaahookÄ12Ü;        /* Code to pass control                */
  void          *ceecaadima;            /* A(debugger entry)                   */
  struct ä
    unsigned char  _ceecaaallocÄ4Ü;   /* ALLOCATE descr. built               */
    unsigned char  _ceecaastateÄ4Ü;   /* New statement begins                */
    unsigned char  _ceecaaentryÄ4Ü;   /* Block entry                         */
    unsigned char  _ceecaaexitÄ4Ü;    /* Block exit                          */
    unsigned char  _ceecaamexitÄ4Ü;   /* Multiple block exit                 */
    struct ä
      unsigned char  _ceecaalabelÄ4Ü;   /* At a label constant */
      unsigned char  _ceecaabcallÄ4Ü;   /* Before CALL         */
      unsigned char  _ceecaaacallÄ4Ü;   /* After CALL          */
      unsigned char  _ceecaadoÄ4Ü;      /* DO block starting   */
      unsigned char  _ceecaaiftrueÄ4Ü;  /* True part of IF     */
      unsigned char  _ceecaaiffalseÄ4Ü; /* False part of IF    */
      unsigned char  _ceecaawhenÄ4Ü;    /* WHEN group starting */
      unsigned char  _ceecaaotherÄ4Ü;   /* OTHERWISE group     */
      ü ceecaapaths;
    unsigned char  _ceecaacgotoÄ4Ü;   /* GOTO hook for C                     */
    unsigned char  _ceecaarsvdh1Ä4Ü;  /* Reserved hook                       */
    unsigned char  _ceecaarsvdh2Ä4Ü;  /* Reserved hook                       */
    unsigned char  _ceecaamultevtÄ4Ü; /* Multiple Event Hook            @G3C */
    ü ceecaahooks;
  unsigned char  ceecaamevmaskÄ4Ü;      /* Multiple Event Hook Mask       @G3A */
  void          *ceecaacgene;           /* Reserved                            */
  void          *ceecaacrent;           /* C/370 writable static               */
  unsigned char  ceecaacfltinitÄ8Ü;     /* Used to covert fixed to float       */
  void          *ceecaacprms;           /* Parms passed to IBMLIIA             */
  struct ä
    unsigned char  _ceecaac_rtl_1;    /* C/370 RTL unique trace options @DJA */
    unsigned char  _ceecaac_rtl_2;    /* C/370 RTL unique trace options @DJA */
    unsigned char  _ceecaac_rtl_3;    /* C/370 RTL unique trace options @DJA */
    unsigned char  _ceecaac_comtrace; /* Common RTL trace options       @DJA */
    ü ceecaac_rtl;
  void          *ceecaacthd;
  void          *ceecaacurrfecb;
  void          *ceecaaedcv;            /* C/370 vector table                  */
  void          *ceecaacpcb;
  void          *ceecaacedb;            /* C/370 CEDB                          */
  unsigned char  _filler8Ä3Ü;
  unsigned char  ceecaaspcflag3;
  void          *ceecaacio;             /* Address oc cio                      */
  int            ceecaafdsetfd;         /* Used by FD_* macros                 */
  unsigned char  ceecaafcbmutexokÄ2Ü;
  unsigned char  _filler9Ä2Ü;
  int            ceecaatc16;
  int            ceecaatc17;
  void          *ceecaaedcov;           /* C/370 Open Libvec                   */
  int            ceecaactofsv;
  void          *ceecaatrtspace;        /* C/370 Open Libvec                   */
  unsigned char  _filler10Ä24Ü;
  struct ä
    void          *_ceecaa_tcasrv_userword;
    void          *_ceecaa_tcasrv_workarea;
    void          *_ceecaa_tcasrv_getmain;
    void          *_ceecaa_tcasrv_freemain;
    void          *_ceecaa_tcasrv_load;
    void          *_ceecaa_tcasrv_delete;
    void          *_ceecaa_tcasrv_exception;
    void          *_ceecaa_tcasrv_attention;
    void          *_ceecaa_tcasrv_message;
    ü ceecaa_tcasrv;
  unsigned char  _filler11Ä4Ü;          /* Reserved                            */
  void          *ceecaalws;             /* Addr of PL/I Language Working Space */
  void          *ceecaasavr;            /* Register save            @CM0419A   */
  unsigned char  _filler12Ä36Ü;         /* Reserved                       @P6C */
  unsigned char  ceecaasystm;           /* Underlying Operating System@MF0072A */
  unsigned char  ceecaahrdwr;           /* Underlying Hardware        @MF0072A */
  unsigned char  ceecaasbsys;           /* Underlying Subsystem       @MF0072A */
  unsigned char  ceecaaflag2;           /* @MF0072A                            */
  unsigned char  ceecaalevel;           /* LE/370 level identifier             */
  unsigned char  ceecaa_pm;             /* PROGRAM MASK               @NX0166C */
  unsigned char  ceecaa_invarÄ2Ü;       /* At same offset in 31 & 64 mode @G3C */
  void          *ceecaagetls;           /* ADDR OF LE/370 LIBRARY STACK MGR    */
  void          *ceecaacelv;            /* Addr of LE/370 LIBVEC               */
  void          *ceecaagets;            /* Addr of LE/370 get stack stg rtn    */
  void          *ceecaalbos;            /* Start of library stack stg seg      */
  void          *ceecaaleos;            /* End of library stack stg seg        */
  void          *ceecaalnab;            /* Next available byte of lib stg      */
  void          *ceecaadmc;             /* Addr of ESPIE Devil-May-Care rtn    */
  struct ä
    unsigned char  _ceecaacdÄ4Ü; /* Most recent CAASHAB abend code */
    ü ceecaaabcode;
  struct ä
    unsigned char  _ceecaarsÄ4Ü; /* Most recent CAASHAB reason code */
    ü ceecaarsncode;
  void          *ceecaaerr;             /* Addr of the current CIB             */
  void          *ceecaagetsx;           /* Addr of LE/370 stack stg extender   */
  void          *ceecaaddsa;            /* Addr of the dummy DSA               */
  int            ceecaasectsiz;         /* Vector Section Size                 */
  int            ceecaapartsum;         /* Vector Partial Sum Number           */
  int            ceecaassexpnt;         /* Log of Vector Section Size          */
  void          *ceecaaedb;             /* address of the EDB                  */
  void          *ceecaapcb;             /* address of the PCB                  */
  void          *ceecaaeyeptr;          /* addr of CAA eyecatcher              */
  void          *ceecaaptr;             /* addr of this CAA                    */
  void          *ceecaagets1;           /* DSA alloc - R13 not DSA addr        */
  void          *ceecaashab;            /* ABEND shunt routine address         */
  void          *ceecaaprgck;           /* pgm interrupt code for CAADMC       */
  unsigned char  ceecaaflag1;           /* CAA Flag 1                          */
  unsigned char  _filler13Ä3Ü;          /* reserved                            */
  int            ceecaaurc;             /* Thread level return code.           */
  void          *ceecaarsrv1Ä4Ü;
  void          *ceecaapicicb;          /* Addr of pre-init compatability cb   */
  void          *ceecaarsrv2;
  short int      ceecaagosmr;           /* Go Some More. used TRAV multiple    */
  short int      _filler14;             /* skip.                               */
  void          *ceecaaleov;            /* Addr of LE/OpenMVS LIBVEC           */
  int            ceecaa_sigsctr;        /* SIGSAFE Counter            @C54544  */
  unsigned char  ceecaa_sigsflgÄ4Ü;     /* SIGSAFE Flags              @C54544  */
  unsigned char  ceecaathdidÄ8Ü;        /* Posix thread id                     */
  void          *ceecaa_dcrent;         /* CRENT anchor for DCE                */
  void          *ceecaa_danchor;        /* DCE anchor per thread               */
  void          *ceecaa_ctoc;           /* TOC anchor for CRENT                */
  void          *ceecaarcb;             /* A(RCB)                              */
  void          *ceecaacicsrsn;         /* CICS reason code from member        */
  void          *ceecaamembr;           /* Addr of thread-level member list    */
  void          *ceecaa_signal_status;  /* Signal stat for terminating thd     */
  struct ä
    void          *_ceecaa_hcom_reg14; /* Saved Reg14 from HCOM   @CH0092A */
    ü ceecaa_hcom_reg7;
  void          *ceecaa_stackfloor;     /* Lowest usable addr in HP stack      */
  void          *ceecaahpgets;          /* HP stack extension rtn              */
  void          *ceecaaedchpxv;         /* C/C++ XPLINK libvec                 */
  void          *ceecaafor1;            /* Reserved for FORTRAN                */
  void          *ceecaafor2;            /* Reserved for FORTRAN                */
  void          *ceecaathreadheapid;    /* Thread heapid         @NX0093A      */
  int            ceecaa_sys_rtncode;    /* Sys (kernel) return code @CM1752    */
  int            ceecaa_sys_rsncode;    /* Sys (kernel) reason code @CM1752    */
  void          *ceecaagetfn;           /* Address of WSA swap routine         */
  unsigned char  ceecaa_ler4Ä8Ü;        /* Reserved for expansion LE 1.4       */
  void          *ceecaasigngptr;        /* Pointer to 'signam' external        */
  int            ceecaasigng;           /* value of sign of lgamma()           */
  void          *ceecaa_fordbg;         /* Ptr to AFHDBHIM -        @N80095A   */
  unsigned char  ceecaaab_status;       /* validity flags           KN80120    */
  unsigned char  ceecaa_stackdirection; /* Stack Direction                     */
  unsigned char  _filler15Ä2Ü;          /* RESERVED                 KN80120    */
  void          *ceecaaab_gr0;          /* Reg 0                    KN80120    */
  void          *ceecaaab_icd1;         /* SDWAICD1                 KN80120    */
  void          *ceecaaab_abcc;         /* SDWAABCC                 KN80120    */
  void          *ceecaaab_crc;          /* SDWACRC                  KN80120    */
  void          *ceecaaagts;            /* C compiler stk inc       KN00102    */
  unsigned char  ceecaa_ler5n1Ä4Ü;      /* reserved for expansion   KCG0088    */
  void          *ceecaaherp;            /* A(CEEHERP)               KCG0061    */
  void          *ceecaaustkbos;         /* Start of user stack seg  PQ04250    */
  void          *ceecaaustkeos;         /* End of user stack seg    PQ04250    */
  void          *ceecaauserrtn_;        /* A(UserRtn) for pthread     @01A     */
  unsigned char  ceecaaudhookÄ8Ü;       /* hook swapping xplink       @DBA     */
  void          *ceecaacel_hpxv_b;      /* Address of XPLink compat   @DCC     */
  void          *ceecaacel_hpxv_m;      /* Address of XPLink compat   @DCA     */
  void          *ceecaacel_hpxv_l;      /* Address of XPLink          @DCC     */
  void          *ceecaacel_hpxv_o;      /* Address of XPLink          @DDA     */
  void          *ceecaacel4vec3;        /* Address of Vec3 LibVec     @DHA     */
  void          *ceecaa_ceedllf;        /* Addr of newest CEEDLLF.  Not   @P6M */
	unsigned  char ceecaa_extensionÄ1024Ü; /* CEECAA extension */
  ü;

#define ceecaaalloc             ceecaahooks._ceecaaalloc
#define ceecaastate             ceecaahooks._ceecaastate
#define ceecaaentry             ceecaahooks._ceecaaentry
#define ceecaaexit              ceecaahooks._ceecaaexit
#define ceecaamexit             ceecaahooks._ceecaamexit
#define ceecaalabel             ceecaahooks.ceecaapaths._ceecaalabel
#define ceecaabcall             ceecaahooks.ceecaapaths._ceecaabcall
#define ceecaaacall             ceecaahooks.ceecaapaths._ceecaaacall
#define ceecaado                ceecaahooks.ceecaapaths._ceecaado
#define ceecaaiftrue            ceecaahooks.ceecaapaths._ceecaaiftrue
#define ceecaaiffalse           ceecaahooks.ceecaapaths._ceecaaiffalse
#define ceecaawhen              ceecaahooks.ceecaapaths._ceecaawhen
#define ceecaaother             ceecaahooks.ceecaapaths._ceecaaother
#define ceecaacgoto             ceecaahooks._ceecaacgoto
#define ceecaarsvdh1            ceecaahooks._ceecaarsvdh1
#define ceecaarsvdh2            ceecaahooks._ceecaarsvdh2
#define ceecaamultevt           ceecaahooks._ceecaamultevt
#define ceecaac_rtl_1           ceecaac_rtl._ceecaac_rtl_1
#define ceecaac_rtl_2           ceecaac_rtl._ceecaac_rtl_2
#define ceecaac_rtl_3           ceecaac_rtl._ceecaac_rtl_3
#define ceecaac_comtrace        ceecaac_rtl._ceecaac_comtrace
#define ceecaa_tcasrv_userword  ceecaa_tcasrv._ceecaa_tcasrv_userword
#define ceecaa_tcasrv_workarea  ceecaa_tcasrv._ceecaa_tcasrv_workarea
#define ceecaa_tcasrv_getmain   ceecaa_tcasrv._ceecaa_tcasrv_getmain
#define ceecaa_tcasrv_freemain  ceecaa_tcasrv._ceecaa_tcasrv_freemain
#define ceecaa_tcasrv_load      ceecaa_tcasrv._ceecaa_tcasrv_load
#define ceecaa_tcasrv_delete    ceecaa_tcasrv._ceecaa_tcasrv_delete
#define ceecaa_tcasrv_exception ceecaa_tcasrv._ceecaa_tcasrv_exception
#define ceecaa_tcasrv_attention ceecaa_tcasrv._ceecaa_tcasrv_attention
#define ceecaa_tcasrv_message   ceecaa_tcasrv._ceecaa_tcasrv_message
#define ceecaacd                ceecaaabcode._ceecaacd
#define ceecaars                ceecaarsncode._ceecaars
#define ceecaa_hcom_reg14       ceecaa_hcom_reg7._ceecaa_hcom_reg14

/* Values for field "ceecaaflag0" */
#define ceecaaxhdl                    0x02 /* Bypass exception handling           */

/* Values for field "_filler1" */
#define ceecaadbginit                 0x20 /* Debugger is initialized             */

/* Values for field "ceecaalangp" */
#define ceecaathfn                    0x08 /* If set, NO PL/I FINISH              */

/* Values for field "ceecaac_rtl_3" */
#define ceecaa_signals_l              0x40 /* Low-level signals              @DJA */
#define ceecaa_low_io                 0x20 /* Low-level I/O                  @DJA */
#define ceecaa_initterm_l             0x10 /* Low-level init/term            @DJA */
#define ceecaa_signals_h              0x04 /* High-level signals             @DJA */
#define ceecaa_high_io                0x02 /* High-level I/O                 @DJA */
#define ceecaa_initterm_h             0x01 /* High-level init/term           @DJA */

/* Values for field "ceecaac_comtrace" */
#define ceecaa_rtlxpli                0x20 /* RTL XPLINK trace               @DJA */
#define ceecaa_rtlcics                0x10 /* RTL CICS   trace               @DJA */
#define ceecaa_rtlalloc               0x08 /* RTL Alloc  trace               @DJA */
#define ceecaa_rtlcount               0x04 /* RTL Function counting          @DJA */
#define ceecaa_rtllocks               0x02 /* RTL or user locking            @DJA */
#define ceecaa_rtlfunc                0x01 /* RTL function entry/exit        @DJA */

/* Values for field "ceecaasystm" */
#define ceecaasyund                   0x00 /* undefined                @MF0072A   */
#define ceecaasyuns                   0x01 /* unsupported              @MF0072A   */
#define ceecaasyvm                    0x02 /* VM                       @MF0072A   */
#define ceecaasymvs                   0x03 /* MVS                      @MF0072A   */

/* Values for field "ceecaahrdwr" */
#define ceecaahwund                   0x00 /* undefined                @MF0072A   */
#define ceecaahwuns                   0x01 /* unsupported              @MF0072A   */
#define ceecaahw370                   0x02 /* System / 370 non-XA      @MF0072A   */
#define ceecaahwxa                    0x03 /* System / 370 XA          @MF0072A   */
#define ceecaahwesa                   0x04 /* System / 370 ESA         @MF0072A   */

/* Values for field "ceecaasbsys" */
#define ceecaassund                   0x00 /* undefined                @MF0072A   */
#define ceecaassuns                   0x01 /* unsupported              @MF0072A   */
#define ceecaassnon                   0x02 /* no subsystem             @MF0072A   */
#define ceecaasstso                   0x03 /* TSO                      @MF0072A   */
#define ceecaasscic                   0x05 /* CICS                     @MF0072A   */

/* Values for field "ceecaaflag2" */
#define ceecaabimodal                 0x80 /* Bimodal addressing         @MF0072A */
#define ceecaa_vector                 0x40 /* vector hardware available  @MF0072A */
#define ceecaatip                     0x20 /* Thread termination in progress      */
#define ceecaa_thread_initial         0x10 /* if on, indicates this is the IPT    */
#define ceecaa_trace_active           0x08 /* If on, library trace is active      */
#define ceecaa_altstk_active          0x04 /* If on, alt stack active    @KCG0034 */
#define ceecaa_enq_wait_interruptable 0x02 /* PL/I doing Exclusive   KN80230      */
#define ceecaa_usrstk_active          0x01 /* If on, context switching user stack */

/* Values for field "ceecaalevel" */
#define cel_level_identifier          0x15 /* @DKC                                */

/* Values for field "ceecaaflag1" */
#define ceecaasort                    0x80 /* Call to DFSORT is active            */
#define ceecaa_use_old_stk            0x40 /* use old stack               @P5A    */

/* Values for field "ceecaa_sigsflg" */
#define ceecaa_sigputback             0x80 /* Signal Putback                      */
#define ceecaa_sa_restart             0x40 /* SA_Restart processing needed        */
#define ceecaa_sigsafe                0x10 /* Indicates that synchronous          */
#define ceecaa_cancelsafe             0x08 /* Indicates that synchronous @CM0565A */
#define ceecaa_sigresynch             0x04 /* One or more synchronous signals     */
#define ceecaa_frz_unsafe             0x02 /* This thread is in an unsafe state   */
#define ceecaa_noappregs              0x01 /* User Application registers may      */
#define ceecaa_eintr_rsol             0x80 /* Secondary signal resolicit          */
#define ceecaa_eintr_putb             0x40 /* Secondary resolicited signal        */
#define ceecaa_eintr_rest             0x20 /* User catcher returned after         */
#define ceecaa_eintr_sigg             0x10 /* "Stray" signal interrupted          */

/* Values for field "ceecaaab_status" */
#define ceecaaab_gr0_valid            0x80 /* CEECAAAB_GR0 is valid    KN80120    */
#define ceecaaab_icd1_valid           0x40 /* CEECAAAB_ICD1 is valid   KN80120    */
#define ceecaaab_abcc_valid           0x20 /* CEECAAAB_ABCC is valid   KN80120    */
#define ceecaaab_crc_valid            0x10 /* CEECAAAB_CRC is valid    KN80120    */
#define ceecaaab_gr15_valid           0x08 /* CEECAAAB_GR15 is valid   KN80120    */

/* Values for field "ceecaa_stackdirection" */
#define ceecaastack_up                0x00 /* Up                                  */
#define ceecaastack_down              0x01 /* Down (XPLINK)                       */

/* Values for field "ceecaa_ceedllf" */
#define ceecelvgtun                   148  /* Offset to Get user nab service.     */

#pragma pack(reset)
