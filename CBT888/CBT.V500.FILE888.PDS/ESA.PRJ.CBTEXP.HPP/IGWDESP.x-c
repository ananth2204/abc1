#pragma pack(packed)

struct desp ä
  struct ä
    unsigned char  _desp_idÄ8Ü;  /* eyecatcher (IGWDES_P) */
    int            _desp_len;    /* length of buffer      */
    unsigned char  _desp_lev;    /* control block level   */
    unsigned char  _filler1Ä3Ü;  /* RESERVED              */
    ü desp_header;
  unsigned char  desp_func;                 /* function type (GET_ALL, GET,     */
  unsigned char  _filler2Ä3Ü;               /* RESERVED                         */
  void          *desp_member_counts_ptr;    /* pointer to optional output  @08A */
  struct ä
    unsigned char  _desp_flagsÄ2Ü;    /* DESP FLAG1                      */
    unsigned char  _desp_exit_scope;  /* EXIT SCOPE                      */
    unsigned char  _desp_concat;      /* concatenation number       @L2A */
    unsigned char  _desp_libtype;     /* function subtype (DCB, DEB)     */
    unsigned char  _desp_gettype;     /* function subtype (NAME_LIST or  */
    unsigned char  _desp_reltype;     /* function subtype (DE_LIST  @L2A */
    unsigned char  _desp_exit_option; /* EXIT option                     */
    unsigned char  _desp_option;      /* PUT REPLACE option              */
    unsigned char  _desp_subpool;     /* SUBPOOL identifier         @L2A */
    unsigned char  _desp_conn_intent; /* connect intent                  */
    unsigned char  _filler3;          /* RESERVED                        */
    ü desp_data;
  void          *desp_dcb_ptr;              /* DCB address                      */
  void          *desp_deb_ptr;              /* DEB address                      */
  void          *desp_conn_id_ptr;          /* connect identifier address       */
  void          *desp_areaptr_ptr;          /* address for buffer address @L2A  */
  void          *desp_area_ptr;             /* buffer address                   */
  int            desp_area2;                /* buffer length                    */
  void          *desp_de_list_ptr;          /* DE_LIST address            @L2A  */
  int            desp_de_list2;             /* DE_LIST entry count        @L2A  */
  int            desp_entry_gap;            /* entry gap size                   */
  void          *desp_mem_data_ptr;         /* MEM_DATA address                 */
  int            desp_mem_data2;            /* MEM_DATA entry count             */
  void          *desp_name_list_ptr;        /* name list address                */
  int            desp_name_list2;           /* input list number of entries     */
  void          *desp_name_ptr;             /* name address               @L2A  */
  union ä
    void          *_desp_pdsde_ptr; /* bldl directory entry address    */
    void          *_desp_smde_ptr;  /* input smde addr for GET    @L1A */
    ü _desp_union1;
  void          *desp_exit_dst_ptr;         /* DESERV exit screen table, DST    */
  void          *desp_exit_prev_dstptr_ptr; /* Address of pointer to previous   */
  ü;

#define desp_id          desp_header._desp_id
#define desp_len         desp_header._desp_len
#define desp_lev         desp_header._desp_lev
#define desp_flags       desp_data._desp_flags
#define desp_exit_scope  desp_data._desp_exit_scope
#define desp_concat      desp_data._desp_concat
#define desp_libtype     desp_data._desp_libtype
#define desp_gettype     desp_data._desp_gettype
#define desp_reltype     desp_data._desp_reltype
#define desp_exit_option desp_data._desp_exit_option
#define desp_option      desp_data._desp_option
#define desp_subpool     desp_data._desp_subpool
#define desp_conn_intent desp_data._desp_conn_intent
#define desp_pdsde_ptr   _desp_union1._desp_pdsde_ptr
#define desp_smde_ptr    _desp_union1._desp_smde_ptr

/* Values for field "desp_lev" */
#define desp_lev_iv                0x01  /* parm list level                    */

/* Values for field "desp_func" */
#define desp_func_close            0x11  /* close (igwcdcls)           @P4A    */
#define desp_func_defer_release    0x10  /* PROCESS DEFERRED REQUEST   @05A    */
#define desp_func_update           0x09  /* UPDATE request             @L2A    */
#define desp_func_rename           0x08  /* RENAME request             @L2A    */
#define desp_func_delete           0x07  /* DELETE request             @L2A    */
#define desp_func_exit             0x06  /* EXIT request                       */
#define desp_func_get_names        0x05  /* GET_NAMES request          @L2A    */
#define desp_func_put              0x04  /* PUT request                        */
#define desp_func_release          0x03  /* RELEASE request            @L2A    */
#define desp_func_get_all          0x02  /* GET_ALL request            @L2A    */
#define desp_func_get              0x01  /* GET request                        */
#define desp_func_omitted          0x00  /* NOT SPECIFIED              @L2A    */

/* Values for field "desp_flags" */
#define desp_bypass_lla            0x80  /* 0=USE LLA, 1=BYPASS LLA            */
#define desp_concat_flg            0x40  /* 0=CONCAT PARM NOT SPECIFIED,       */
#define desp_subpool_flg           0x20  /* 0=SUBPOOL PARM NOT SPECIFIED,      */
#define desp_c370lib               0x10  /* 0=C370LIB PARM NOT SPECIFIED, @L3A */
#define desp_concat_all            0x08  /* ONLY VALID IF DESP_CONCAT_FLG @L3A */
#define desp_hide                  0x04  /* 0=all names are visible      @L3A  */
#define desp_system_dcb            0x02  /* 0=SYSTEM DCB NOT SPECIFIED.  @L3A  */

/* Values for field "desp_exit_scope" */
#define desp_exit_scope_task       0x01  /* SETUP A TASK EXIT                  */
#define desp_exit_scope_global     0x00  /* SETUP A GLOBAL EXIT                */

/* Values for field "desp_libtype" */
#define desp_libtype_dcb           0x02  /* DCB was input                      */
#define desp_libtype_deb           0x01  /* DEB was input                      */
#define desp_libtype_omitted       0x00  /* NOT SPECIFIED                      */

/* Values for field "desp_gettype" */
#define desp_gettype_smde          0x03  /* GET input is SMDE          @L3A    */
#define desp_gettype_pdsde         0x02  /* GET input is PDSDE                 */
#define desp_gettype_name_list     0x01  /* GET input is name list             */
#define desp_gettype_omitted       0x00  /* NOT SPECIFIED                      */

/* Values for field "desp_reltype" */
#define desp_reltype_de_list       0x02  /* or RELTYPE                 @L2A    */
#define desp_reltype_conn_id       0x01  /* @L2A                               */
#define desp_reltype_omitted       0x00  /* NOT SPECIFIED              @L2A    */

/* Values for field "desp_exit_option" */
#define desp_exit_option_query     0x03  /* QUERY EXISTING EXIT                */
#define desp_exit_option_delete    0x02  /* DELETE EXISTING EXIT               */
#define desp_exit_option_replace   0x01  /* REPLACE EXISTING EXIT              */
#define desp_exit_option_noreplace 0x00  /* DO NOT REPLACE EXISTING EXIT       */

/* Values for field "desp_option" */
#define desp_option_replace        0x01  /* Replace alias or primary           */
#define desp_option_noreplace      0x00  /* Do not replace                     */

/* Values for field "desp_conn_intent" */
#define desp_conn_intent_input     0x03  /* connect for input                  */
#define desp_conn_intent_exec      0x02  /* connect for exec                   */
#define desp_conn_intent_hold      0x01  /* connect for hold                   */
#define desp_conn_intent_none      0x00  /* do not connect                     */

/* Values for field "desp_entry_gap" */
#define desp_entry_gap_max         0x800 /* maximum entry gap                  */

/* Values for field "desp_exit_prev_dstptr_ptr" */
#define desp_len_iv                0x68  /* parm list length                   */
#define desp_len_list              0x58  /* parm list length w/o header        */

#pragma pack(reset)
