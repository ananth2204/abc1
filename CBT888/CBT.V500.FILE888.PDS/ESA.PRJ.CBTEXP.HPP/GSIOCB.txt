#ifndef  INCLUDE_GSIOCB
#define  INCLUDE_GSIOCB
#if  ISIS_PF_HOST_SASC
struct __SIOCB  /* standard I/O control block */
ä
char _label Ä4Ü ;   /* the word "FILE" */
char *_buf;    /* current buffer start pointer */
char *_ptr;    /* next character pointer */
int _size;     /* size of buffer */
int _rcnt;     /* number of unread bytes */
int _wcnt;     /* number of unwritten bytes */
int _eoff;     /* offset of eof in buffer */
               /* (record length for keyed file) */
int _skoff;    /* offset of fseek destination */
               /* = -1 to indicate positioning lost */
char _file;    /* file number */
char _cflags;  /* capability flags */
char _props;   /* property flags */
char _state;   /* file state flags */
char _layout;  /* file layout flags */
char _ugbuf;   /* ungotten char buffer */
char _kstate;  /* state info for keyed files */
char _padding Ä1Ü ;    /* padding for unaligned execution */
char *_fnm;    /* pointer to original file name */
int _twcnt;    /* number of unwritten bytes to terminal */
void *_fattr;          /* file attributes structure */
__remote int (*_amclose)();  /* access method close routine */
union ä        /* overlay esoteric fields with delayed open fields */
   struct ä            /* fields for delayed-open files */
      char *_oname;    /* file name (for delayed open) */
      char *_otype;    /* file type (for delayed open) */
      char *_oamp;     /* access method parms (for delayed open) */
          ü _delayed;
   struct ä            /* fields for opened files */
      int _ercnt;      /* saved _rcnt after error */
      int _ewcnt;      /* saved _wcnt after error */
      union ä
         int _ugrcnt;     /* saved _rcnt after ungetc */
         char *_key;      /* pointer to current key */
            ü;
          ü _open;
       ü _misc;
ü;

typedef struct __SIOCB *SIOCBFILE;   /* shorthand */
#define _OLD_FOPEN_MAX 40       /* old max number of open files      */
#define FOPEN_MAX 256           /* new max number of open files      */

/**
*
* This header file defines private information used in the SAS/C I/O
* implementation.
*
**/


typedef                         /* open file structure definition    */
   struct ä
      char _flag1;              /* a byte of flags                   */
      char _flag2;              /* another byte of flags             */
      short _file;              /* file descriptor (= file number)   */
      char *_private;           /* reserved for the access method    */
      __remote int (**_oper)(); /* access method defined operations  */
      __remote int (*_close)(); /* access method close routine       */
      char *_fname;             /* file name for error messages      */
      __remote int (*_module)();/* what to unload when file is closed*/
   ü _OFILE;

struct __IOtype ä               /* structure def for I/O globals     */
   int _Gofn;                   /* next open file number (-FOPEN_MAX */
                                /* if 4.50 resident library)         */
   union ä                      /* overlap the old & new ways        */
      struct ä
         SIOCBFILE _Sofa Ä_OLD_FOPEN_MAXÜ ;
         _OFILE _Gofa Ä_OLD_FOPEN_MAXÜ ;
      ü _old;
      struct ä
         SIOCBFILE _Sofa ÄFOPEN_MAXÜ;/* std. I/O open file array     */
         _OFILE *_Gofa;         /* general open file array ptr       */
      ü _new;
   ü _u;
   __remote long (*_Urio Ä4Ü )();/* universal relative I/O functions */
   __remote long (*_Usio Ä3Ü )();/* universal standard I/O functions */
ü;

extern struct __IOtype *__io;   /* the global I/O table pointer      */
#endif
#endif
