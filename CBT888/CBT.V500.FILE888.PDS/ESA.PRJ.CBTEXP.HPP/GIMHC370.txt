#pragma pack(packed)
/****************************** MODULE HEADER ***********************/
/*                                                                  */
/* Module Name: GIMHC370                                            */
/*                                                                  */
/* SMP/E API Macro for C/370                                        */
/*                                                                  */
/* Licensed Materials - Property of IBM                             */
/* 5694-A01  5655-G44                                               */
/* Copyright IBM Corp. 1997, 2001                                   */
/********************************************************************/
/*                                                                  */
/* ---------------------------------------------------------------- */
/* FLAG REASON  RELEASE   DATE   ORG  DESCRIPTION                   */
/* ---- ------- ------- -------- ---  ----------------------------- */
/* $L0= SV1001A  1A.00  06/10/96 KAK: GIMAPI SUPPORT                */
/* $P1= PT20078  1A.00  08/15/96 KAK: CSI_ENTRY POINTER TYPE WRONG  */
/* $L1= SVV001B  1B.00  10/14/96 DMM: API VERSION SUPPORT           */
/*                                                                  */
/********************************************************************/
/*   CHANGE FLAG KEY: M§PNC                                         */
/*   WHERE:                                                         */
/*                                                                  */
/* M= MULTIPLE    P= DCRS = D,E,F,G    N= 0-9,A-Z     C= A = ADD    */
/*    FOR DELETE     RMPS = H,I,J,K    (USE '0' ONLY     C = CHANGE */
/*    FLAGS ONLY     LINE = L,M,N,O     WHEN ELEMENT     P = COPY   */
/*                   PTMS = P,Q,R,S     IS BEING         M = MOVE   */
/*                   APARS = 0-9        CREATED)         D = DELETE */
/********************************************************************/
#define LEN_ETYPE        12
#define LEN_MSG          256
typedef  struct QUERY_PARMS  /* Parameters for QUERY command */
ä
  char    *csi;                     /* PTR to global CSI dataset    */
  long    csilen;                   /* Length of data set name      */
  char    *zone;                    /* PTR to list of zones         */
  long    zonelen;                  /* Length of zone list          */
  char    *entrytype;               /* PTR to list of entries       */
  long    entrylen;                 /* Length of entry list         */
  char    *subentrytype;            /* PTR to list of subentries    */
  long    subentrylen;              /* Length of subentry list      */
  char    *filter;                  /* PTR to query filter          */
  long    filterlen;                /* Length of filter             */
ü QUERY_PARMS, * P_QUERY_PARMS;

typedef  struct ENTRY_LIST   /* List of entry types          */
ä
   struct ENTRY_LIST *next;  /* PTR to next item in linked   */
                                    /*  list                        */
   struct CSI_ENTRY  *entries;/* PTR to head of linked list  */
                                    /*  of CSI_ENTRY sturctures     */
                                    /*  listing the instances of    */
                                    /*  this entry type             */
  char              typeÄ12Ü;       /* Entry type                   */
ü ENTRY_LIST, * P_ENTRY_LIST;

typedef  struct CSI_ENTRY    /* Description of a specific    */
ä                                   /*  entry                       */
   struct CSI_ENTRY  *next;  /* PTR to next item in linked   */
                                    /*  list                        */
   struct SUBENTRY   *subentries;/* PTR to head of linked    */
                                    /*  list of SUBENTRY structures */
                                    /*  listing the subentry values */
                                    /*  for this entry              */
  char              entrynameÄ8Ü;   /* Name of entry                */
  char              zonenameÄ7Ü;    /* Zone where entry was retrieved*/
ü CSI_ENTRY, * P_CSI_ENTRY;         /*                          §P1C*/

typedef  struct SUBENTRY     /* Contains subentry data       */
ä
   struct SUBENTRY   *next;  /* PTR to next item in linked   */
                                    /*  list                        */
  void              *subentrydata;  /* PTR to head of linked list   */
                                    /*  of data values for this     */
                                    /*  subentry                    */
  char              typeÄ12Ü;       /* Subentry type                */
ü SUBENTRY, * P_SUBENTRY;

typedef  struct VER          /* Place holder for subentries  */
ä                                   /*  associated with ++VER       */
                                    /*  records of a SYSMOD         */
   struct VER        *next;  /* PTR to next item in linked   */
                                    /*  list                        */
   struct SUBENTRY   *verdata;/* PTR to head of linked list  */
                                    /*  of subentries associated    */
                                    /*  with a ++VER                */
  char              vernumÄ3Ü;      /* ++VER statement number       */
ü VER, * P_VER;

typedef  struct ITEM_LIST    /* Holds piece of subentry data */
ä
   struct ITEM_LIST  *next;  /* PTR to next item in linked   */
                                    /*  list                        */
  long              datalen;        /* Number of characters of real */
                                    /*  data                        */
  char              *data;          /* PTR to storage containing    */
                                    /*  data                        */
ü ITEM_LIST, * P_ITEM_LIST;

typedef  struct API_VERSION  /* output structure for     §L1A*/
ä                                   /*  the VERSION command     §L1A*/
  char apiverÄ2Ü;                   /* current SMP/E version    §L1A*/
  char apirelÄ2Ü;                   /* current SMP/E release    §L1A*/
  char apimodÄ2Ü;                   /* current SMP/E mod. level §L1A*/
  char apiptfÄ2Ü;                   /* current SMP/E PTF level  §L1A*/
ü API_VERSION, *P_API_VERSION;      /*                          §L1A*/
#pragma pack(reset)
