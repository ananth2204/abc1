#pragma pack(packed)

struct smf70hdr ä
  union ä
    unsigned char  _smf70hdcÄ36Ü; /* COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 */
    struct ä
      unsigned char  _smf70lenÄ2Ü; /* RECORD LENGTH                     */
      unsigned char  _smf70segÄ2Ü; /* SEGMENT DESCRIPTOR                */
      unsigned char  _smf70flg;    /* HEADER FLAG BYTE                  */
      unsigned char  _smf70rty;    /* RECORD TYPE                       */
      unsigned char  _smf70tmeÄ4Ü; /* TOD RECORD WRITTEN                */
      unsigned char  _smf70dteÄ4Ü; /* DATE RECORD WRITTEN               */
      unsigned char  _smf70sidÄ4Ü; /* SYSTEM ID FROM INSTALLATION       */
      unsigned char  _smf70ssiÄ4Ü; /* SUBSYSTEM ID (RMF)                */
      unsigned char  _smf70styÄ2Ü; /* SUBTYPE                           */
      unsigned char  _smf70trnÄ2Ü; /* NUMBER OF TRIPLETS IN THIS RECORD */
      unsigned char  _filler1Ä2Ü;  /* RESERVED                          */
      unsigned char  _smf70prsÄ4Ü; /* OFFSET TO RMF PRODUCT SECTION     */
      unsigned char  _smf70prlÄ2Ü; /* LENGTH OF RMF PRODUCT SECTION     */
      unsigned char  _smf70prnÄ2Ü; /* NUMBER OF RMF PRODUCT SECTIONS    */
      ü _smf70hdr_struct1;
    ü _smf70hdr_union1;
  union ä
    struct ä
      unsigned char  _smf70ccsÄ4Ü; /* Offset to CPU Control section           */
      unsigned char  _smf70cclÄ2Ü; /* Length of CPU Control section           */
      unsigned char  _smf70ccnÄ2Ü; /* Number of CPU Control sections          */
      unsigned char  _smf70cpsÄ4Ü; /* Offset to CPU Data section              */
      unsigned char  _smf70cplÄ2Ü; /* Length of CPU Data section              */
      unsigned char  _smf70cpnÄ2Ü; /* Number of CPU Data sections             */
      unsigned char  _smf70assÄ4Ü; /* Offset to ASID Data section             */
      unsigned char  _smf70aslÄ2Ü; /* Length of ASID Data section             */
      unsigned char  _smf70asnÄ2Ü; /* Number of ASID Data sections            */
      unsigned char  _smf70bcsÄ4Ü; /* Offset to PR/SM Partition data sections */
      unsigned char  _smf70bclÄ2Ü; /* Length of PR/SM Partition data section  */
      unsigned char  _smf70bcnÄ2Ü; /* Number of PR/SM Partition data sections */
      unsigned char  _smf70bvsÄ4Ü; /* Offset to PR/SM Processor data sections */
      unsigned char  _smf70bvlÄ2Ü; /* Length of PR/SM Processor data section  */
      unsigned char  _smf70bvnÄ2Ü; /* Number of PR/SM Processor data sections */
      ü smf70hdx;
    struct ä
      struct ä
        unsigned char  _smf7023sÄ4Ü; /* Offset to crypto coprocessor section       @K1C */
        unsigned char  _smf7023lÄ2Ü; /* Length of crypto coprocessor section       @K1C */
        unsigned char  _smf7023nÄ2Ü; /* Number of crypto coprocessor section       @K1C */
        unsigned char  _smf7024sÄ4Ü; /* Offset to crypto accelerator section       @K1C */
        unsigned char  _smf7024lÄ2Ü; /* Length of crypto accelerator section       @K1C */
        unsigned char  _smf7024nÄ2Ü; /* Number of crypto accelerator section       @K1C */
        unsigned char  _smf702csÄ4Ü; /* Offset to ICSF section                     @K1C */
        unsigned char  _smf702clÄ2Ü; /* Length of ICSF section                     @K1C */
        unsigned char  _smf702cnÄ2Ü; /* Number of ICSF section                     @K1C */
        ü smf702hx;
      unsigned char  _filler2Ä16Ü;
      ü _smf70hdr_struct2;
    ü _smf70hdr_union2;
  unsigned char  smf70cnsÄ4Ü; /* Offset to CPU-identification name section  @I1A */
  unsigned char  smf70cnlÄ2Ü; /* Length of CPU-identification name section  @I1A */
  unsigned char  smf70cnnÄ2Ü; /* Number of CPU-identification name sections @I1A */
  ü;

#define smf70hdc _smf70hdr_union1._smf70hdc
#define smf70len _smf70hdr_union1._smf70hdr_struct1._smf70len
#define smf70seg _smf70hdr_union1._smf70hdr_struct1._smf70seg
#define smf70flg _smf70hdr_union1._smf70hdr_struct1._smf70flg
#define smf70rty _smf70hdr_union1._smf70hdr_struct1._smf70rty
#define smf70tme _smf70hdr_union1._smf70hdr_struct1._smf70tme
#define smf70dte _smf70hdr_union1._smf70hdr_struct1._smf70dte
#define smf70sid _smf70hdr_union1._smf70hdr_struct1._smf70sid
#define smf70ssi _smf70hdr_union1._smf70hdr_struct1._smf70ssi
#define smf70sty _smf70hdr_union1._smf70hdr_struct1._smf70sty
#define smf70trn _smf70hdr_union1._smf70hdr_struct1._smf70trn
#define smf70prs _smf70hdr_union1._smf70hdr_struct1._smf70prs
#define smf70prl _smf70hdr_union1._smf70hdr_struct1._smf70prl
#define smf70prn _smf70hdr_union1._smf70hdr_struct1._smf70prn
#define smf70ccs _smf70hdr_union2.smf70hdx._smf70ccs
#define smf70ccl _smf70hdr_union2.smf70hdx._smf70ccl
#define smf70ccn _smf70hdr_union2.smf70hdx._smf70ccn
#define smf70cps _smf70hdr_union2.smf70hdx._smf70cps
#define smf70cpl _smf70hdr_union2.smf70hdx._smf70cpl
#define smf70cpn _smf70hdr_union2.smf70hdx._smf70cpn
#define smf70ass _smf70hdr_union2.smf70hdx._smf70ass
#define smf70asl _smf70hdr_union2.smf70hdx._smf70asl
#define smf70asn _smf70hdr_union2.smf70hdx._smf70asn
#define smf70bcs _smf70hdr_union2.smf70hdx._smf70bcs
#define smf70bcl _smf70hdr_union2.smf70hdx._smf70bcl
#define smf70bcn _smf70hdr_union2.smf70hdx._smf70bcn
#define smf70bvs _smf70hdr_union2.smf70hdx._smf70bvs
#define smf70bvl _smf70hdr_union2.smf70hdx._smf70bvl
#define smf70bvn _smf70hdr_union2.smf70hdx._smf70bvn
#define smf7023s _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7023s
#define smf7023l _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7023l
#define smf7023n _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7023n
#define smf7024s _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7024s
#define smf7024l _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7024l
#define smf7024n _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf7024n
#define smf702cs _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf702cs
#define smf702cl _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf702cl
#define smf702cn _smf70hdr_union2._smf70hdr_struct2.smf702hx._smf702cn

/* Values for field "smf70flg" */
#define smf70rrf 0x80 /* NEW RECORD FORMAT                              */
#define smf70sut 0x40 /* SUBTYPES USED                             @R0A */
#define smf70v4  0x10 /* MVS/ESA Version 4                         @A1A */
#define smf70esa 0x08 /* MVS/ESA VERSION                           @W1A */
#define smf70vxa 0x04 /* MVS/XA VERSION                            @R0A */
#define smf70os  0x02 /* OPERATING SYSTEM IS OS/VS2                     */
#define smf70bfy 0x01 /* System running in PR/SM mode              @J1C */

#pragma pack(reset)
