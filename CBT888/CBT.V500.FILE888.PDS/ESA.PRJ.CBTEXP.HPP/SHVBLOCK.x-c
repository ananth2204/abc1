#pragma pack(packed)

struct shvblock 채
  void          *shvnext; /* Chain pointer to next SHVBLOCK */
  int            shvuser; /* Used during "FETCH NEXT"       */
  struct 채
    unsigned char  _shvcode;  /* Function code - indicates type */
    unsigned char  _shvret;   /* Return codes                   */
    short int      _filler1;  /* Reserved (should be 0)         */
    체 shvcodes;
  int            shvbufl; /* Length of fetch value buffer   */
  void          *shvnama; /* Address of variable name       */
  int            shvnaml; /* Length of variable name        */
  void          *shvvala; /* Address of value buffer        */
  int            shvvall; /* Length of value buffer         */
  체;

#define shvcode  shvcodes._shvcode
#define shvret   shvcodes._shvret

/* Values for field "shvvall" */
#define shvblen  0x20       /* Length of SHVBLOCK              */
#define shvfetch 0xC6       /* Copy value of shared variable   */
#define shvstore 0xE2       /* Set variable from given value   */
#define shvdropv 0xC4       /* Drop variable                   */
#define shvsyfet 0x86       /* Symbolic name retrieve          */
#define shvsyset 0xA2       /* Symbolic name set               */
#define shvsydro 0x84       /* Symbolic name drop              */
#define shvnextv 0xD5       /* Fetch "next" variable           */
#define shvpriv  0xD7       /* Fetch private information       */
#define shvclean 0x00       /* Execution was OK                */
#define shvnewv  0x01       /* Variable did not exist          */
#define shvlvar  0x02       /* Last variable transferred ("N") */
#define shvtrunc 0x04       /* Truncation occurred for "Fetch" */
#define shvbadn  0x08       /* Invalid variable name           */
#define shvbadv  0x10       /* Invalid value specified         */
#define shvbadf  0x80       /* Invalid function code (SHVCODE) */
#define shvrcok  0x00       /* Entire Plist chain processed    */
#define shvrcinv 0xFFFFFFFF /* Invalid entry conditions        */
#define shvrcist 0xFFFFFFFE /* Insufficient storage available  */

#pragma pack(reset)
