#pragma pack(packed)

struct qfsscvt ä
  unsigned char  qfssnameÄ8Ü;                      /* system nane                                */
  unsigned char  qfssidÄ8Ü;                        /* id seq                                     */
  unsigned char  qcvtrelÄ8Ü;                       /* RELEASE                                    */
  unsigned char  _filler1Ä8Ü;
  void          *qnsccvt;                          /* own address                                */
  void          *qcvtlist;                         /* CVT list start addr                        */
  void          *qcvtioq;                          /* common IOQE list                           */
  unsigned char  qcvt_jobnameÄ8Ü;                  /* job name                                   */
  unsigned char  qcvt_jobidÄ8Ü;                    /* job id.                                    */
  unsigned char  qcvt_status_programÄ24Ü;          /* program status                             */
  unsigned char  qcvt_resource_priv;               /* priv/nonpriv                               */
  unsigned char  qcvt_resource_connfss;            /* connected                                  */
  unsigned char  qcvt_resource_ecbpost;            /* ECB posted                                 */
  unsigned char  qcvt_resource_order;              /* order                                      */
  unsigned char  qcvt_resource_disconnect;         /* disconnect                                 */
  unsigned char  qcvt_resource_stopfss;            /* stopfss                                    */
  unsigned char  qcvt_resource_wait;               /* in wait status                             */
  unsigned char  qcvt_resource_qnet;               /* qnet is running                            */
  unsigned char  qcvt_resource_stat;               /* stat is running                            */
  unsigned char  qcvt_resource_fss;                /* FSS support YES = ff NO = 0                */
  unsigned char  qcvt_resource_ssi;                /* SSI support  YES = ff NO = 0               */
  unsigned char  _filler2;
  unsigned char  qnvtloadl_qfssqntÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssqntaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssqntlgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssqntflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssmsgpÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssmsgpaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssmsgplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssmsgpflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsscmdpÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsscmdpaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsscmdplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsscmdpflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsscompÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsscompaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsscomplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsscompflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssinbdÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssinbdaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssinbdlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssinbdflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssioqÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssioqaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssioqlgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssioqflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssoqeÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssoqeaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssoqelgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssoqeflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssoutbÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssoutbaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssoutblgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssoutbflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssowÄ8Ü;              /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssowaddr;             /* + LINKAGE                                  */
  int            qnvtloadl_qfssowlgth;             /* + module length                            */
  unsigned char  qnvtloadl_qfssowflagÄ4Ü;          /* + trace flags                              */
  unsigned char  qnvtloadl_qfssdspÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssdspaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssdsplgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssdspflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssprocÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssprocaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssproclgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssprocflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssprofÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssprofaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssproflgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssprofflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssbsamÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssbsamaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssbsamlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssbsamflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssqsamÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssqsamaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssqsamlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssqsamflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssvsamÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssvsamaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssvsamlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssvsamflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssqueÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssqueaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssquelgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssqueflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssquewÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssquewaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssquewlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssquewflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssscnpÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssscnpaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssscnplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssscnpflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsssdlrÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsssdlraddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsssdlrlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsssdlrflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsstpÄ8Ü;              /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsstpaddr;             /* + LINKAGE                                  */
  int            qnvtloadl_qfsstplgth;             /* + module length                            */
  unsigned char  qnvtloadl_qfsstpflagÄ4Ü;          /* + trace flags                              */
  unsigned char  qnvtloadl_qfssapcÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssapcaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssapclgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssapcflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsstcpÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsstcpaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfsstcplgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfsstcpflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsst310Ä8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsst310addr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsst310lgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsst310flagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsstbpxÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsstbpxaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsstbpxlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsstbpxflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssfileÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssfileaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssfilelgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssfileflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssfsaÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssfsaaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssfsalgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssfsaflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsssjfÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsssjfaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfsssjflgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfsssjfflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssdrvpÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssdrvpaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssdrvplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssdrvpflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssafpcÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssafpcaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssafpclgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssafpcflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssafpdÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssafpdaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssafpdlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssafpdflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssafpeÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssafpeaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssafpelgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssafpeflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsspcntÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsspcntaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsspcntlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsspcntflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssarchÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssarchaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssarchlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssarchflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssdbgÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssdbgaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssdbglgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssdbgflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsslinkÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsslinkaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsslinklgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsslinkflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssbcbpÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssbcbpaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssbcbplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssbcbpflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssserpÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssserpaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssserplgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssserpflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsssynÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsssynaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfsssynlgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfsssynflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsslrecÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsslrecaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsslreclgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsslrecflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssstatÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssstataddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssstatlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssstatflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssstrqÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssstrqaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssstrqlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssstrqflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsschnÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsschnaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfsschnlgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfsschnflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfss__Ä8Ü;              /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfss__addr;             /* + LINKAGE                                  */
  int            qnvtloadl_qfss__lgth;             /* + module length                            */
  unsigned char  qnvtloadl_qfss__flagÄ4Ü;          /* + trace flags                              */
  unsigned char  qnvtloadl_qfsspipeÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsspipeaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsspipelgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsspipeflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssuprmÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssuprmaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssuprmlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssuprmflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsstagsÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsstagsaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsstagslgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsstagsflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssprxxÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssprxxaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssprxxlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssprxxflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_irxexecÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_irxexecaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_irxexeclgth;            /* + module length                            */
  unsigned char  qnvtloadl_irxexecflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_irxinitÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_irxinitaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_irxinitlgth;            /* + module length                            */
  unsigned char  qnvtloadl_irxinitflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_irxtermÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_irxtermaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_irxtermlgth;            /* + module length                            */
  unsigned char  qnvtloadl_irxtermflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_irxexcomÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_irxexcomaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_irxexcomlgth;           /* + module length                            */
  unsigned char  qnvtloadl_irxexcomflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssrexxÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssrexxaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssrexxlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssrexxflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssxmlÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssxmladdr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssxmllgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssxmlflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssfltrÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssfltraddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssfltrlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssfltrflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_pphsmemÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_pphsmemaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_pphsmemlgth;            /* + module length                            */
  unsigned char  qnvtloadl_pphsmemflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_ikjeff02Ä8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_ikjeff02addr;           /* + LINKAGE                                  */
  int            qnvtloadl_ikjeff02lgth;           /* + module length                            */
  unsigned char  qnvtloadl_ikjeff02flagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfsswwiÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsswwiaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfsswwilgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfsswwiflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsswwaÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsswwaaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfsswwalgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfsswwaflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfssprunÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssprunaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssprunlgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssprunflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssworkÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssworkaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssworklgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssworkflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssmqsÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssmqsaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_qfssmqslgth;            /* + module length                            */
  unsigned char  qnvtloadl_qfssmqsflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_csqbbackÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbbackaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_csqbbacklgth;           /* + module length                            */
  unsigned char  qnvtloadl_csqbbackflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_csqbcommÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbcommaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_csqbcommlgth;           /* + module length                            */
  unsigned char  qnvtloadl_csqbcommflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_csqbclosÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbclosaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_csqbcloslgth;           /* + module length                            */
  unsigned char  qnvtloadl_csqbclosflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_csqbconÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbconaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_csqbconlgth;            /* + module length                            */
  unsigned char  qnvtloadl_csqbconflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_csqbdiscÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbdiscaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_csqbdisclgth;           /* + module length                            */
  unsigned char  qnvtloadl_csqbdiscflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_csqbgetÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbgetaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_csqbgetlgth;            /* + module length                            */
  unsigned char  qnvtloadl_csqbgetflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_csqbinqÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbinqaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_csqbinqlgth;            /* + module length                            */
  unsigned char  qnvtloadl_csqbinqflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_csqbopenÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbopenaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_csqbopenlgth;           /* + module length                            */
  unsigned char  qnvtloadl_csqbopenflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_csqbputÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbputaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_csqbputlgth;            /* + module length                            */
  unsigned char  qnvtloadl_csqbputflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_csqbput1Ä8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbput1addr;           /* + LINKAGE                                  */
  int            qnvtloadl_csqbput1lgth;           /* + module length                            */
  unsigned char  qnvtloadl_csqbput1flagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_csqbsetÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_csqbsetaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_csqbsetlgth;            /* + module length                            */
  unsigned char  qnvtloadl_csqbsetflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qnvtloadl_qfsssapiÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfsssapiaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfsssapilgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfsssapiflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_qfssexciÄ8Ü;            /* + MODULE &MODULE                           */
  void          *qnvtloadl_qfssexciaddr;           /* + LINKAGE                                  */
  int            qnvtloadl_qfssexcilgth;           /* + module length                            */
  unsigned char  qnvtloadl_qfssexciflagÄ4Ü;        /* + trace flags                              */
  unsigned char  qnvtloadl_dfhxcisÄ8Ü;             /* + MODULE &MODULE                           */
  void          *qnvtloadl_dfhxcisaddr;            /* + LINKAGE                                  */
  int            qnvtloadl_dfhxcislgth;            /* + module length                            */
  unsigned char  qnvtloadl_dfhxcisflagÄ4Ü;         /* + trace flags                              */
  unsigned char  qcvtjesÄ4Ü;                       /* default JES name                           */
  unsigned char  qcvtqsysoutÄ4Ü;                   /* queue sysouts under USER                   */
  unsigned char  qcvtfssidcÄ4Ü;                    /* FSS id in char form                        */
  unsigned char  qcvtfssÄ4Ü;                       /* FSS id (second halfword zero)              */
  unsigned char  qcvtokenÄ4Ü;                      /* JES start token                            */
  unsigned char  qcvt_xmlÄ8Ü;                      /* XML option                                 */
  unsigned char  qcvt_xmldefÄ128Ü;                 /* XML default definition                     */
  struct ä
    void          *_filler3;  /* order routine */
    ü qcvtfsi_cdp;
  void          *_filler4;                         /* address of the order routine               */
  void          *_filler5;                         /* post routine                               */
  void          *_filler6;                         /* address of the post routine                */
  unsigned char  qnssnameÄ4Ü;                      /* system nane                                */
  void          *qnssvt;                           /* address of the SSVT                        */
  void          *qnscvt;                           /* address of the SSCVT                       */
  struct ä
    void          *_qnpclxct; /* LX count */
    ü qnpclxl;
  void          *qnpclx;                           /* LX value                                   */
  struct ä
    void          *_qnpcetct; /* ET count */
    ü qnpcetl;
  void          *qnpcettk;                         /* ET token                                   */
  void          *qnpcnum;                          /* PC number                                  */
  unsigned char  wlmsubsysÄ8Ü;                     /* WLM subsystem name                         */
  void          *wlmtkn;                           /* WLM connection token                       */
  unsigned char  applenvÄ32Ü;                      /* wlm AE                                     */
  unsigned char  wlmqtypeÄ8Ü;                      /* wlm queue type                             */
  unsigned char  wlmtype;                          /* wlm type flag                              */
  unsigned char  _filler7Ä3Ü;                      /* reserved                                   */
  unsigned char  wlmaest;                          /* ae status                                  */
  unsigned char  _filler8Ä3Ü;
  void          *wlm_queue_reserved;               /* wlm reserved                               */
  unsigned char  qcvtioq_typeÄ10Ü;                 /* +default MODE64                            */
  unsigned char  _filler9Ä6Ü;
  void          *qcvtioq_elength;                  /* +ioqe length in 4K                         */
  unsigned char  _filler10Ä4Ü;
  void          *qcvtioq_entries;                  /* +number of entries                         */
  void          *qcvtioq_global;                   /* +work area address                         */
  unsigned char  qcvtioq_dspprefÄ4Ü;               /* +DIV DSP PREF                              */
  unsigned char  qcvtioq_divddÄ8Ü;                 /* +DIV dd name                               */
  void          *pipesize;                         /* default 512K                               */
  int            pipewait;                         /* default 3 min                              */
  int            runaway;                          /* default 60 min                             */
  int            taskrun;                          /* default 60 min                             */
  int            dirdsp_size;                      /* directory DSP size                         */
  int            dirdsp_dsp;                       /* directory DSP dsp                          */
  void          *qcvtstrq;                         /* STREQ anchor                               */
  void          *qcvtstat;                         /* STAT anchor                                */
  int            qcvt_stat_wait;                   /* status update unit                         */
  unsigned char  qcvt_stat_statusfileÄ44Ü;         /* status cluster                             */
  int            qcvt_stat_statuskeep;             /* status keep value                          */
  unsigned char  qcvt_stat_onoffÄ3Ü;               /* stautus ON/OFF                             */
  unsigned char  qcvt_enablecafÄ3Ü;                /* enable CAF yes/no                          */
  unsigned char  _filler11Ä2Ü;
  unsigned char  qcvt_uniqueÄ8Ü;                   /* unique jobid                               */
  void          *qcvt_tiotÄ2Ü;                     /* tiot/JFCB list pointer                     */
  unsigned char  qndsnamÄ8Ü;                       /* DATA SPACE NAME                            */
  void          *qndsplimit;                       /* 512 mbyte default                          */
  unsigned char  qndstknÄ8Ü;                       /* data space token                           */
  void          *qndsalet;                         /* ALET for data space                        */
  void          *qndsorig;                         /* orig addr                                  */
  int            qndsblks;                         /* size of the data space in 4K 64MB          */
  void          *qndsmax;                          /* max dataspace addr                         */
  int            qndsincr;                         /* incr in data space (BCB size'              */
  void          *qndswwa;                          /* WWA cache DSP                              */
  void          *qcvt_unique_dsidÄ2Ü;              /* unique dsid                                */
  void          *qcvtecbp;                         /* stop/modify ECB address                    */
  void          *qcvtcibp;                         /* CIB block address                          */
  void          *qcvtperm;                         /* perm task table pointer                    */
  void          *qcvt_fsi_ordera;                  /* order parm list address                    */
  unsigned char  qcvt_stoporder;                   /* stop order flag for FSS                    */
  unsigned char  _filler12Ä3Ü;
  void          *qcvttcb_qnet;                     /* QNET task TCB addr                         */
  void          *qcvttcb_stat;                     /* STAT task TCB addr                         */
  void          *qcvtecb_dump;                     /* DUMP ecb                                   */
  void          *qcvtecb_fss;                      /* FSS ecb                                    */
  void          *qcvtecb_modify;                   /* stop/modify ECB                            */
  void          *qcvtecb_qnet;                     /* QNET task ecb                              */
  void          *qcvtecb_stat;                     /* STAT task ecb                              */
  void          *wlongw;                           /* 5 min wait before timer int                */
  void          *qcvtecbs;                         /* address FSS order ECB                      */
  void          *_filler13;                        /* addresss Modify ECB                        */
  void          *_filler14;                        /* address of QNET task ECB                   */
  void          *_filler15;                        /* address of STAT task ECB                   */
  void          *_filler16;                        /* address timer ECB                          */
  void          *_filler17Ä64Ü;                    /* address FSA subtask ECB                    */
  void          *qnmn_ecb_stop;                    /* stop ECB for QFSSQNET task                 */
  void          *qnmnecbp;                         /* addr of the stop/modify ECB                */
  void          *qnmnecbt;                         /* addr of the timer ECB                      */
  void          *qnmnecbl;                         /* addr of the select ECB                     */
  void          *qnmnecbm;                         /* addr of the MQS event ECB                  */
  void          *qnmnecbsapi;                      /* addr of SAPI ECB                           */
  void          *qnmnecbexci;                      /* addr of EXCI ECB                           */
  void          *qnmnecbdb2;                       /* addr of Db2  ECB                           */
  void          *qnmnecbe;                         /* addr of EOM ecb                            */
  void          *qnmnecbr;                         /* addr of RQS ecb                            */
  void          *qnmnecbi;                         /* addr of inbound tran ECB                   */
  void          *qnmnecbo;                         /* addr of outbound ECB                       */
  void          *qnmnecbsÄ128Ü;                    /* subtask stop ECB address list              */
  void          *qnmnioqe;                         /* IOQE block addr for main                   */
  void          *qnmnioqe_appc;                    /* IOQE block addr for APPC main              */
  void          *qnmnioqe_tcpip;                   /* IOQE block addr for TCPIP main             */
  void          *qnmnioqe_file;                    /* IOQE block addr for FILE main              */
  void          *qnmnioqe_mqs;                     /* IOQE block addr for MQS main               */
  void          *qnmnioqe_sapi;                    /* IOQE block addr for SAPI main              */
  void          *qnmnioqe_exci;                    /* IOQE block addr for EXCI main              */
  void          *qnmnioqe_db2;                     /* IOQE block addr for DB2  main              */
  void          *qnmnlast;                         /* last ECB in use                            */
  void          *qneomecb;                         /* EOM ecb                                    */
  void          *qnrqsecb;                         /* RQS ecb                                    */
  void          *qnselecb;                         /* select ECB                                 */
  unsigned char  _filler18Ä100Ü;                   /* for tcp/ip work                            */
  void          *qnmqsecb;                         /* MQS event ecb                              */
  void          *qnsapiecb;                        /* SAPI event ecb                             */
  void          *qnexciecb;                        /* exci event ecb                             */
  void          *qndb2ecb;                         /* db2 event ecb                              */
  void          *qnmntcbm;                         /* main TCB addr                              */
  void          *qnpmcode;                         /* start of the code                          */
  struct ä
    unsigned char  _qnmnstknÄ8Ü; /* address space token */
    void          *_qnmnascb;    /* ASCB addr           */
    void          *_qnmnaecb;    /* start ECB addr      */
    void          *_qnmnresvÄ2Ü; /* reserved            */
    ü qnmnoda;
  void          *qneomls;                          /* start of EOMlist                           */
  void          *qneomle;                          /* end of the EOM list                        */
  void          *qnrqsls;                          /* start add of RQS list                      */
  void          *qnrqssiz;                         /* size of an RQS                             */
  void          *qnrqsle;                          /* end of the RQS list                        */
  void          *qnrqslmax;                        /* max used address in the RQS list           */
  void          *qneomlÄ16Ü;                       /* end of memory ASID list                    */
  unsigned char  profddnmÄ8Ü;                      /* profile DD name                            */
  unsigned char  lockflagÄ4Ü;                      /* lock flag : YES/NO                         */
  unsigned char  systemÄ8Ü;                        /* system profile name                        */
  void          *__prof_sysaÄ2Ü;                   /* system profile start addr                  */
  void          *__prof_rcvaÄ2Ü;                   /* receiver profile start addr                */
  void          *__prof_libaÄ2Ü;                   /* library profile start addr                 */
  void          *__prof_browse;                    /* browse pointer                             */
  unsigned char  __prof_dsnÄ44Ü;                   /* profile dataset name                       */
  unsigned char  __prof_memÄ8Ü;                    /* profile member name                        */
  unsigned char  __prof_ddnameÄ8Ü;                 /* profile dd name                            */
  unsigned char  __prof_typÄ4Ü;                    /* profile type - option                      */
  void          *__prof_count;                     /* lu count                                   */
  unsigned char  __prof_sysÄ8Ü;                    /* system profile                             */
  unsigned char  __prof_libÄ8Ü;                    /* library profile                            */
  unsigned char  __prof_rcvÄ8Ü;                    /* application profile                        */
  void          *__prof_msga;                      /* message pointer                            */
  unsigned char  useridÄ8Ü;                        /* system default user id                     */
  unsigned char  jes2Ä4Ü;                          /* default jes name                           */
  void          *qcvt_debug_gtffid;                /* GTF trace fid                              */
  int            qcvt_debug_count;                 /* no debug                                   */
  int            qcvt_link_count;                  /* no link                                    */
  unsigned char  qfssfilterddÄ8Ü;                  /* filter DD                                  */
  void          *qfssfilter;                       /* filter block                               */
  unsigned char  qfssdebugddÄ8Ü;                   /* debug DD                                   */
  void          *qfssdebuglist;                    /* debug block                                */
  void          *qfsstrace_table;                  /* trace table size in elemnets               */
  void          *qfsstrace_entry;                  /* elemnent size                              */
  void          *qfsstrace_start;                  /* trace table start address                  */
  void          *qfsstrace_actual;                 /* trace table actual address                 */
  void          *qfsstrace_end;                    /* trace table end address                    */
  void          *qfsstrace_qsam;                   /* TRCONMSG file QSAM pointer                 */
  void          *qcvt_request_id;                  /* request id                                 */
  void          *qcvt_traceon_lock;                /* internal trace lock                        */
  unsigned char  qcvt_traceon_ddÄ8Ü;               /* trace on message                           */
  unsigned char  qcvt_traceon_majÄ8Ü;
  unsigned char  qcvt_traceon_minÄ8Ü;
  unsigned char  qnvtstÄ24Ü;                       /* vtam status                                */
  void          *qnvtacba;                         /* VTAM acb addr                              */
  struct ä
    unsigned char  _filler19;  /* ACB IDENTIFICATION              */
    unsigned char  _filler20;  /* ACB SUBTYPE             X04SVHS */
    short int      _filler21;  /* ACB LENGTH             X03004HS */
    ü vtamacb;
  void          *_filler22;                        /* AMB LIST POINTER                           */
  void          *_filler23;                        /* PTR TO VTAM EXTENSION  X03004HS            */
  unsigned char  _filler24;                        /* MACRF(1)                X04SVHS            */
  unsigned char  _filler25;                        /* MACRF(2)                X04SVHS            */
  unsigned char  _filler26;                        /* NO OF CONCURRENT        X04SVHS            */
  unsigned char  _filler27;                        /* NUMBER OF STRINGS       X04SVHS            */
  short int      _filler28;                        /* NUMBER OF DATA BUFFERS                     */
  short int      _filler29;                        /* NUMBER OF INDEX BUFFERS                    */
  unsigned char  _filler30;                        /* MACRF(3)                X04SVHS            */
  unsigned char  _filler31;                        /* MACRF(4)                X04SVHS            */
  short int      _filler32;                        /* JES BUFFER POOL/NUMBER  X04SVHS            */
  unsigned char  _filler33;                        /* RECFM=A                                    */
  unsigned char  _filler34;                        /* CONTROL CHARACTER TYPE                     */
  unsigned char  _filler35Ä2Ü;                     /* DSORG=ACB                                  */
  void          *_filler36;                        /* X04SVHS                                    */
  void          *_filler37;                        /* PASSWORD POINTER                           */
  void          *_filler38;                        /* EXIT LIST POINTER                          */
  unsigned char  _filler39;                        /* INDICATE VTAM            X03004            */
  unsigned char  _filler40Ä7Ü;                     /* PAD WITH ZEROS           X03004            */
  unsigned char  _filler41;                        /* OFLAGS                                     */
  unsigned char  _filler42;                        /* ERFLAGS                                    */
  unsigned char  _filler43;                        /* INFLGS(1)               X04SVHS            */
  unsigned char  _filler44;                        /* INFLGS(2)               X04SVHS            */
  void          *_filler45;                        /* OPENJ JFCB POINTER                         */
  void          *_filler46;                        /* BUFFER SPACE                               */
  short int      _filler47;                        /* BLOCK SIZE                                 */
  short int      _filler48;                        /* RECORD SIZE                                */
  void          *_filler49;                        /* USER WORKAREA POINTER                      */
  void          *_filler50;                        /* CONTROL BLOCK MANIPULATION                 */
  void          *_filler51;                        /* PTR TO APPL NAME         X03004            */
  unsigned char  _filler52Ä4Ü;                     /* SET RETURN CODE(VTAM)    X03004            */
  unsigned char  _filler53Ä2Ü;                     /* RETURN TO CALLER(VTAM)   X03004            */
  unsigned char  _filler54;                        /* ACBOPT1 FLAGS         @KFA @T1C            */
  unsigned char  _filler55;                        /* ACBOPT2 FLAGS              @R1C            */
  int            _filler56;                        /* RESERVED                 X03004            */
  void          *_filler57;                        /* NIB ADDRESS            @G69AKJP            */
  void          *_filler58;                        /* AMSI ADDRESS           @D5K4791            */
  void          *_filler59;                        /* RIVL ADDRESS           @D5K4791            */
  int            _filler60;                        /* USER FIELD             @D5K4791            */
  void          *_filler61;                        /* APPLVCTR ADDRESS           @L2A            */
  unsigned char  vapplid;                          /* applid length                              */
  unsigned char  _filler62Ä8Ü;                     /* application ID                             */
  unsigned char  qnvtlul;                          /* LU name length                             */
  unsigned char  qnvtlunmÄ8Ü;                      /* applid                                     */
  unsigned char  qnvtlgmdÄ8Ü;                      /* logmode name                               */
  unsigned char  _filler63Ä2Ü;
  int            allocwt;                          /* wait time for allocation in 1/100s         */
  int            alloctry;                         /* retry count for allocation                 */
  int            appctimeout;                      /* 1 min appc timeout                         */
  int            waitow;                           /* half minute                                */
  int            waitoc;                           /* max 10 minute wait for VTAM                */
  unsigned char  gapplidÄ8Ü;                       /* general application id                     */
  unsigned char  qcvt_printerparmsÄ44Ü;            /* default printerparms dataset               */
  int            qcvt_smfrec;                      /* SMF record number                          */
  unsigned char  qcvt_smfextÄ4Ü;                   /* SMF extension                              */
  void          *qnet_tcpip_global;                /* global area pointer                        */
  unsigned char  qnet_tcpip_tcpipÄ8Ü;              /* tcpip address space name                   */
  unsigned char  qnet_tcpip_versionÄ4Ü;            /* tcpip address space name                   */
  unsigned char  qnet_tcpip_stcnameÄ8Ü;            /* started task name                          */
  struct ä
    void          *_qnet_tcpip_clientid_domain; /* AF_INET */
    ü qnet_tcpip_clientid;
  unsigned char  qnet_tcpip_clientid_nameÄ8Ü;      /* address space id                           */
  unsigned char  qnet_tcpip_clientid_taskÄ8Ü;      /* task id                                    */
  unsigned char  qnet_tcpip_clientid_reservedÄ20Ü; /* reserved                                   */
  short int      _filler64;                        /* reserved                                   */
  short int      qnet_tcpip_port;                  /* port number                                */
  short int      qnet_tcpip_socket;                /* main server socket                         */
  short int      _filler65;                        /* reserved                                   */
  short int      qnet_tcpip_www_port;              /* port number                                */
  unsigned char  _filler66Ä2Ü;
  struct ä
    short int      _qnet_tcpip_name_family;      /* INET address family */
    short int      _qnet_tcpip_name_port;        /* port number         */
    void          *_qnet_tcpip_name_address;     /* IP address          */
    unsigned char  _qnet_tcpip_name_reservedÄ8Ü; /* reserved            */
    ü qnet_tcpip_name;
  short int      _filler67;                        /* max socket number                          */
  short int      qnet_tcpip_maxsoc;                /* max socket number                          */
  void          *qnet_tcpip_maxsno;                /* gotten max socket number                   */
  void          *qnet_tcpip_backlog;               /* backlog default                            */
  unsigned char  qnet_tcpip_hostaddrÄ16Ü;          /* host addr in EBCDIC                        */
  unsigned char  qnet_tcpip_hostnameÄ32Ü;          /* host name in EBCDIC                        */
  unsigned char  qnettp;                           /* TP flag                                    */
  unsigned char  _filler68Ä3Ü;
  void          *qnet_server_trace;                /* trace flag                                 */
  void          *qnet_server_cache;                /* cache flag                                 */
  void          *wloga;                            /* ADDRESS OF COPIED DCB (BELOW 16MB)         */
  void          *wlogad;                           /* ADDRESS OF DCB BLOCK TO COPY               */
  void          *routcde;
  unsigned char  qfsslrddÄ8Ü;                      /* lrec dd nmae                               */
  unsigned char  msgsuprÄ8Ü;                       /* supress id's                               */
  unsigned char  qcvtlogger_streamnameÄ26Ü;        /* logger logstream name                      */
  unsigned char  qcvtlogger_streamtokenÄ16Ü;       /* logger stream token                        */
  unsigned char  qncpkeyÄ8Ü;                       /* primary key                                */
  unsigned char  qncpskeyÄ8Ü;                      /* secondary key                              */
  unsigned char  qcvt_set_cmdÄ8Ü;                  /* set command                                */
  unsigned char  qcvtdebugÄ8Ü;                     /* module name                                */
  unsigned char  qcvtdebugsÄ8Ü;                    /* debug switch                               */
  unsigned char  qcvtlinksÄ8Ü;                     /* link switch                                */
  unsigned char  _filler69Ä2Ü;
  void          *qcvt_seta;                        /* command pointer                            */
  unsigned char  qcvt_perm;                        /* permanent task flag                        */
  unsigned char  _filler70Ä3Ü;                     /* not in use                                 */
  int            maxtask_max;                      /* maxtask max                                */
  int            maxtask_act;                      /* actual maxtask                             */
  void          *maxtask_act_qnt;                  /* actual maxtask for QNT                     */
  void          *maxtask_ecb;                      /* maxtask ECB                                */
  int            highwtm_q;                        /* high water mark for req queue              */
  int            lowwtm_q;                         /* low water mark for req queue               */
  unsigned char  qcvt_mqs_majorÄ8Ü;                /* MQ major  ENQ name                         */
  struct ä
    void          *_itiqecb; /* queue ecb */
    ü itiioqe;
  void          *itiqstr;                          /* start of queue                             */
  void          *itiqend;                          /* end of queue                               */
  void          *itiqlast;                         /* last entry                                 */
  void          *itiqa;                            /* actual entry                               */
  unsigned char  _filler71Ä256ÜÄ8Ü;
  struct ä
    void          *_itoqecb; /* queue ecb */
    ü itoioqe;
  void          *itoqstr;                          /* start of queue                             */
  void          *itoqend;                          /* end of queue                               */
  void          *itoqlast;                         /* last entry                                 */
  void          *itoqa;                            /* actual entry                               */
  unsigned char  _filler72Ä256ÜÄ8Ü;
  unsigned char  qcvt_fsaÄ64ÜÄ100Ü;                /* FSABLK's                                   */
  unsigned char  qcvtssibÄ36Ü;                     /* SSIB for connect                           */
  unsigned char  qcvtssobÄ28Ü;                     /* SSOB for CONNECT                           */
  struct ä
    struct ä
      void          *_filler73;
      ü _key0;
    ü qcvt_set;
  unsigned char  _filler74;
  unsigned char  _filler75Ä17Ü;
  short int      _filler76;
  unsigned char  _filler77;
  short int      _filler78;
  unsigned char  _filler79;
  void          *_filler80;
  void          *_filler81;
  void          *_filler82;
  void          *_filler83;
  struct ä
    struct ä
      void          *_filler84;
      ü _key1;
    ü _def1;
  struct ä
    struct ä
      void          *_filler85;
      ü _key2;
    ü qcvt_set_sub;
  unsigned char  _filler86;
  unsigned char  _filler87Ä17Ü;
  short int      _filler88;
  unsigned char  _filler89;
  short int      _filler90;
  unsigned char  _filler91;
  void          *_filler92;
  void          *_filler93;
  void          *_filler94;
  void          *_filler95;
  unsigned char  _filler96;
  unsigned char  values01001Ä3Ü;
  unsigned char  _filler97;
  unsigned char  values01002Ä2Ü;
  unsigned char  _filler98;
  struct ä
    struct ä
      void          *_filler99;
      ü _key3;
    ü _def3;
  unsigned char  _filler100;
  unsigned char  _filler101Ä17Ü;
  short int      _filler102;
  unsigned char  _filler103;
  short int      _filler104;
  unsigned char  _filler105;
  void          *_filler106;
  void          *_filler107;
  void          *_filler108;
  void          *_filler109;
  unsigned char  _filler110;
  unsigned char  values01011Ä3Ü;
  unsigned char  _filler111;
  unsigned char  values01012Ä2Ü;
  unsigned char  _filler112;
  struct ä
    struct ä
      void          *_filler113;
      ü _key4;
    ü _def4;
  unsigned char  _filler114;
  unsigned char  _filler115Ä17Ü;
  short int      _filler116;
  unsigned char  _filler117;
  short int      _filler118;
  unsigned char  _filler119;
  void          *_filler120;
  void          *_filler121;
  void          *_filler122;
  void          *_filler123;
  struct ä
    struct ä
      void          *_filler124;
      ü _key5;
    ü _def5;
  unsigned char  _filler125;
  unsigned char  _filler126Ä17Ü;
  short int      _filler127;
  unsigned char  _filler128;
  short int      _filler129;
  unsigned char  _filler130;
  void          *_filler131;
  void          *_filler132;
  void          *_filler133;
  void          *_filler134;
  struct ä
    struct ä
      void          *_filler135;
      ü _key6;
    ü _def6;
  unsigned char  _filler136;
  unsigned char  _filler137Ä17Ü;
  short int      _filler138;
  unsigned char  _filler139;
  short int      _filler140;
  unsigned char  _filler141;
  void          *_filler142;
  void          *_filler143;
  void          *_filler144;
  void          *_filler145;
  unsigned char  _filler146Ä8Ü;
  struct ä
    void          *_filler147;
    ü _key7;
  unsigned char  _filler148;
  unsigned char  _filler149Ä17Ü;
  short int      _filler150;
  unsigned char  _filler151;
  short int      _filler152;
  unsigned char  _filler153;
  void          *_filler154;
  void          *_filler155;
  void          *_filler156;
  void          *_filler157;
  struct ä
    struct ä
      void          *_filler158;
      ü _key8;
    ü _def8;
  unsigned char  _filler159;
  unsigned char  _filler160Ä17Ü;
  short int      _filler161;
  unsigned char  _filler162;
  short int      _filler163;
  unsigned char  _filler164;
  void          *_filler165;
  void          *_filler166;
  void          *_filler167;
  void          *_filler168;
  struct ä
    struct ä
      void          *_filler169;
      ü _key9;
    ü _def9;
  unsigned char  _filler170;
  unsigned char  _filler171Ä17Ü;
  short int      _filler172;
  unsigned char  _filler173;
  short int      _filler174;
  unsigned char  _filler175;
  void          *_filler176;
  void          *_filler177;
  void          *_filler178;
  void          *_filler179;
  struct ä
    struct ä
      void          *_filler180;
      ü _key10;
    ü _def10;
  unsigned char  _filler181;
  unsigned char  _filler182Ä17Ü;
  short int      _filler183;
  unsigned char  _filler184;
  short int      _filler185;
  unsigned char  _filler186;
  void          *_filler187;
  void          *_filler188;
  void          *_filler189;
  void          *_filler190;
  struct ä
    struct ä
      void          *_filler191;
      ü _key11;
    ü _def11;
  unsigned char  _filler192;
  unsigned char  _filler193Ä17Ü;
  short int      _filler194;
  unsigned char  _filler195;
  short int      _filler196;
  unsigned char  _filler197;
  void          *_filler198;
  void          *_filler199;
  void          *_filler200;
  void          *_filler201;
  struct ä
    struct ä
      void          *_filler202;
      ü _key12;
    ü _def12;
  unsigned char  _filler203;
  unsigned char  _filler204Ä17Ü;
  short int      _filler205;
  unsigned char  _filler206;
  short int      _filler207;
  unsigned char  _filler208;
  void          *_filler209;
  void          *_filler210;
  void          *_filler211;
  void          *_filler212;
  struct ä
    struct ä
      void          *_filler213;
      ü _key13;
    ü _def13;
  unsigned char  _filler214;
  unsigned char  _filler215Ä17Ü;
  short int      _filler216;
  unsigned char  _filler217;
  short int      _filler218;
  unsigned char  _filler219;
  void          *_filler220;
  void          *_filler221;
  void          *_filler222;
  void          *_filler223;
  struct ä
    struct ä
      void          *_filler224;
      ü _key14;
    ü _def14;
  unsigned char  _filler225;
  unsigned char  _filler226Ä17Ü;
  short int      _filler227;
  unsigned char  _filler228;
  short int      _filler229;
  unsigned char  _filler230;
  void          *_filler231;
  void          *_filler232;
  void          *_filler233;
  void          *_filler234;
  struct ä
    unsigned char  _filler235Ä4Ü;
    ü _def15;
  struct ä
    void          *_filler236;
    ü _key15;
  unsigned char  _filler237;
  unsigned char  _filler238Ä17Ü;
  short int      _filler239;
  unsigned char  _filler240;
  short int      _filler241;
  unsigned char  _filler242;
  void          *_filler243;
  void          *_filler244;
  void          *_filler245;
  void          *_filler246;
  struct ä
    unsigned char  _filler247Ä4Ü;
    ü _def16;
  struct ä
    void          *_filler248;
    ü _key16;
  unsigned char  _filler249;
  unsigned char  _filler250Ä17Ü;
  short int      _filler251;
  unsigned char  _filler252;
  short int      _filler253;
  unsigned char  _filler254;
  void          *_filler255;
  void          *_filler256;
  void          *_filler257;
  void          *_filler258;
  unsigned char  _filler259;
  unsigned char  values01141Ä4Ü;
  unsigned char  _filler260;
  unsigned char  values01142Ä3Ü;
  unsigned char  _filler261;
  unsigned char  _filler262Ä2Ü;
  struct ä
    unsigned char  _filler263Ä4Ü;
    ü _def17;
  struct ä
    void          *_filler264;
    ü _key17;
  unsigned char  _filler265;
  unsigned char  _filler266Ä17Ü;
  short int      _filler267;
  unsigned char  _filler268;
  short int      _filler269;
  unsigned char  _filler270;
  void          *_filler271;
  void          *_filler272;
  void          *_filler273;
  void          *_filler274;
  unsigned char  _filler275;
  unsigned char  values01151Ä3Ü;
  unsigned char  _filler276;
  unsigned char  values01152Ä2Ü;
  unsigned char  _filler277;
  unsigned char  values01153Ä3Ü;
  unsigned char  _filler278;
  unsigned char  values01154Ä4Ü;
  unsigned char  _filler279;
  unsigned char  values01155Ä8Ü;
  unsigned char  _filler280;
  unsigned char  values01156Ä8Ü;
  unsigned char  _filler281;
  unsigned char  values01157Ä7Ü;
  unsigned char  _filler282;
  unsigned char  _filler283;
  unsigned char  _filler284Ä8Ü;
  struct ä
    void          *_filler285;
    ü _key18;
  unsigned char  _filler286;
  unsigned char  _filler287Ä17Ü;
  short int      _filler288;
  unsigned char  _filler289;
  short int      _filler290;
  unsigned char  _filler291;
  void          *_filler292;
  void          *_filler293;
  void          *_filler294;
  void          *_filler295;
  unsigned char  _filler296;
  unsigned char  values01161Ä3Ü;
  unsigned char  _filler297;
  unsigned char  values01162Ä2Ü;
  unsigned char  _filler298;
  unsigned char  _filler299Ä8Ü;
  struct ä
    void          *_filler300;
    ü _key19;
  unsigned char  _filler301;
  unsigned char  _filler302Ä17Ü;
  short int      _filler303;
  unsigned char  _filler304;
  short int      _filler305;
  unsigned char  _filler306;
  void          *_filler307;
  void          *_filler308;
  void          *_filler309;
  void          *_filler310;
  struct ä
    struct ä
      void          *_filler311;
      ü _key20;
    ü _def20;
  unsigned char  _filler312;
  unsigned char  _filler313Ä17Ü;
  short int      _filler314;
  unsigned char  _filler315;
  short int      _filler316;
  unsigned char  _filler317;
  void          *_filler318;
  void          *_filler319;
  void          *_filler320;
  void          *_filler321;
  unsigned char  _filler322Ä44Ü;
  struct ä
    void          *_filler323;
    ü _key21;
  unsigned char  _filler324;
  unsigned char  _filler325Ä17Ü;
  short int      _filler326;
  unsigned char  _filler327;
  short int      _filler328;
  unsigned char  _filler329;
  void          *_filler330;
  void          *_filler331;
  void          *_filler332;
  void          *_filler333;
  struct ä
    struct ä
      void          *_filler334;
      ü _key22;
    ü _def22;
  unsigned char  _filler335;
  unsigned char  _filler336Ä17Ü;
  short int      _filler337;
  unsigned char  _filler338;
  short int      _filler339;
  unsigned char  _filler340;
  void          *_filler341;
  void          *_filler342;
  void          *_filler343;
  void          *_filler344;
  struct ä
    struct ä
      void          *_filler345;
      ü _key23;
    ü _def23;
  unsigned char  _filler346;
  unsigned char  _filler347Ä17Ü;
  short int      _filler348;
  unsigned char  _filler349;
  short int      _filler350;
  unsigned char  _filler351;
  void          *_filler352;
  void          *_filler353;
  void          *_filler354;
  void          *_filler355;
  struct ä
    struct ä
      void          *_filler356;
      ü _key24;
    ü _def24;
  unsigned char  _filler357;
  unsigned char  _filler358Ä17Ü;
  short int      _filler359;
  unsigned char  _filler360;
  short int      _filler361;
  unsigned char  _filler362;
  void          *_filler363;
  void          *_filler364;
  void          *_filler365;
  void          *_filler366;
  struct ä
    struct ä
      void          *_filler367;
      ü _key25;
    ü _def25;
  unsigned char  _filler368;
  unsigned char  _filler369Ä17Ü;
  short int      _filler370;
  unsigned char  _filler371;
  short int      _filler372;
  unsigned char  _filler373;
  void          *_filler374;
  void          *_filler375;
  void          *_filler376;
  void          *_filler377;
  struct ä
    struct ä
      void          *_filler378;
      ü _key26;
    ü _def26;
  unsigned char  _filler379;
  unsigned char  _filler380Ä17Ü;
  short int      _filler381;
  unsigned char  _filler382;
  short int      _filler383;
  unsigned char  _filler384;
  void          *_filler385;
  void          *_filler386;
  void          *_filler387;
  void          *_filler388;
  struct ä
    struct ä
      void          *_filler389;
      ü _key27;
    ü _def27;
  unsigned char  _filler390;
  unsigned char  _filler391Ä17Ü;
  short int      _filler392;
  unsigned char  _filler393;
  short int      _filler394;
  unsigned char  _filler395;
  void          *_filler396;
  void          *_filler397;
  void          *_filler398;
  void          *_filler399;
  struct ä
    struct ä
      void          *_filler400;
      ü _key28;
    ü _def28;
  unsigned char  _filler401;
  unsigned char  _filler402Ä17Ü;
  short int      _filler403;
  unsigned char  _filler404;
  short int      _filler405;
  unsigned char  _filler406;
  void          *_filler407;
  void          *_filler408;
  void          *_filler409;
  void          *_filler410;
  struct ä
    struct ä
      void          *_filler411;
      ü _key29;
    ü _def29;
  unsigned char  _filler412;
  unsigned char  _filler413Ä17Ü;
  short int      _filler414;
  unsigned char  _filler415;
  short int      _filler416;
  unsigned char  _filler417;
  void          *_filler418;
  void          *_filler419;
  void          *_filler420;
  void          *_filler421;
  struct ä
    struct ä
      void          *_filler422;
      ü _key30;
    ü _def30;
  unsigned char  _filler423;
  unsigned char  _filler424Ä17Ü;
  short int      _filler425;
  unsigned char  _filler426;
  short int      _filler427;
  unsigned char  _filler428;
  void          *_filler429;
  void          *_filler430;
  void          *_filler431;
  void          *_filler432;
  struct ä
    struct ä
      void          *_filler433;
      ü _key31;
    ü _def31;
  unsigned char  _filler434;
  unsigned char  _filler435Ä17Ü;
  short int      _filler436;
  unsigned char  _filler437;
  short int      _filler438;
  unsigned char  _filler439;
  void          *_filler440;
  void          *_filler441;
  void          *_filler442;
  void          *_filler443;
  struct ä
    struct ä
      void          *_filler444;
      ü _key32;
    ü _def32;
  unsigned char  _filler445;
  unsigned char  _filler446Ä17Ü;
  short int      _filler447;
  unsigned char  _filler448;
  short int      _filler449;
  unsigned char  _filler450;
  void          *_filler451;
  void          *_filler452;
  void          *_filler453;
  void          *_filler454;
  struct ä
    struct ä
      void          *_filler455;
      ü _key33;
    ü _def33;
  unsigned char  _filler456;
  unsigned char  _filler457Ä17Ü;
  short int      _filler458;
  unsigned char  _filler459;
  short int      _filler460;
  unsigned char  _filler461;
  void          *_filler462;
  void          *_filler463;
  void          *_filler464;
  void          *_filler465;
  struct ä
    struct ä
      void          *_filler466;
      ü _key34;
    ü _def34;
  unsigned char  _filler467;
  unsigned char  _filler468Ä17Ü;
  short int      _filler469;
  unsigned char  _filler470;
  short int      _filler471;
  unsigned char  _filler472;
  void          *_filler473;
  void          *_filler474;
  void          *_filler475;
  void          *_filler476;
  struct ä
    struct ä
      void          *_filler477;
      ü _key35;
    ü _def35;
  unsigned char  _filler478;
  unsigned char  _filler479Ä17Ü;
  short int      _filler480;
  unsigned char  _filler481;
  short int      _filler482;
  unsigned char  _filler483;
  void          *_filler484;
  void          *_filler485;
  void          *_filler486;
  void          *_filler487;
  struct ä
    struct ä
      void          *_filler488;
      ü _key36;
    ü _def36;
  unsigned char  _filler489;
  unsigned char  _filler490Ä17Ü;
  short int      _filler491;
  unsigned char  _filler492;
  short int      _filler493;
  unsigned char  _filler494;
  void          *_filler495;
  void          *_filler496;
  void          *_filler497;
  void          *_filler498;
  struct ä
    struct ä
      void          *_filler499;
      ü _key37;
    ü _def37;
  unsigned char  _filler500;
  unsigned char  _filler501Ä17Ü;
  short int      _filler502;
  unsigned char  _filler503;
  short int      _filler504;
  unsigned char  _filler505;
  void          *_filler506;
  void          *_filler507;
  void          *_filler508;
  void          *_filler509;
  struct ä
    struct ä
      void          *_filler510;
      ü _key38;
    ü _def38;
  unsigned char  _filler511;
  unsigned char  _filler512Ä17Ü;
  short int      _filler513;
  unsigned char  _filler514;
  short int      _filler515;
  unsigned char  _filler516;
  void          *_filler517;
  void          *_filler518;
  void          *_filler519;
  void          *_filler520;
  unsigned char  _filler521;
  unsigned char  values01361Ä2Ü;
  unsigned char  _filler522;
  unsigned char  values01362Ä3Ü;
  unsigned char  _filler523;
  struct ä
    unsigned char  _filler524Ä3Ü;
    unsigned char  _filler525;
    ü _def39;
  struct ä
    void          *_filler526;
    ü _key39;
  unsigned char  _filler527;
  unsigned char  _filler528Ä17Ü;
  short int      _filler529;
  unsigned char  _filler530;
  short int      _filler531;
  unsigned char  _filler532;
  void          *_filler533;
  void          *_filler534;
  void          *_filler535;
  void          *_filler536;
  unsigned char  _filler537Ä8Ü;
  struct ä
    void          *_filler538;
    ü _key40;
  unsigned char  _filler539;
  unsigned char  _filler540Ä17Ü;
  short int      _filler541;
  unsigned char  _filler542;
  short int      _filler543;
  unsigned char  _filler544;
  void          *_filler545;
  void          *_filler546;
  void          *_filler547;
  void          *_filler548;
  unsigned char  _filler549Ä32Ü;
  struct ä
    void          *_filler550;
    ü _key41;
  unsigned char  _filler551;
  unsigned char  _filler552Ä17Ü;
  short int      _filler553;
  unsigned char  _filler554;
  short int      _filler555;
  unsigned char  _filler556;
  void          *_filler557;
  void          *_filler558;
  void          *_filler559;
  void          *_filler560;
  unsigned char  _filler561;
  unsigned char  values01391Ä5Ü;
  unsigned char  _filler562;
  unsigned char  values01392Ä6Ü;
  unsigned char  _filler563;
  unsigned char  values01393Ä7Ü;
  unsigned char  _filler564;
  unsigned char  _filler565Ä2Ü;
  unsigned char  _filler566Ä8Ü;
  struct ä
    void          *_filler567;
    ü _key42;
  unsigned char  _filler568;
  unsigned char  _filler569Ä17Ü;
  short int      _filler570;
  unsigned char  _filler571;
  short int      _filler572;
  unsigned char  _filler573;
  void          *_filler574;
  void          *_filler575;
  void          *_filler576;
  void          *_filler577;
  struct ä
    struct ä
      void          *_filler578;
      ü _key43;
    ü _def43;
  unsigned char  _filler579;
  unsigned char  _filler580Ä17Ü;
  short int      _filler581;
  unsigned char  _filler582;
  short int      _filler583;
  unsigned char  _filler584;
  void          *_filler585;
  void          *_filler586;
  void          *_filler587;
  void          *_filler588;
  unsigned char  _filler589;
  unsigned char  values01411Ä6Ü;
  unsigned char  _filler590;
  unsigned char  values01412Ä3Ü;
  unsigned char  _filler591;
  unsigned char  _filler592Ä8Ü;
  struct ä
    void          *_filler593;
    ü _key44;
  unsigned char  _filler594;
  unsigned char  _filler595Ä17Ü;
  short int      _filler596;
  unsigned char  _filler597;
  short int      _filler598;
  unsigned char  _filler599;
  void          *_filler600;
  void          *_filler601;
  void          *_filler602;
  void          *_filler603;
  unsigned char  _filler604Ä8Ü;
  struct ä
    void          *_filler605;
    ü _key45;
  unsigned char  _filler606;
  unsigned char  _filler607Ä17Ü;
  short int      _filler608;
  unsigned char  _filler609;
  short int      _filler610;
  unsigned char  _filler611;
  void          *_filler612;
  void          *_filler613;
  void          *_filler614;
  void          *_filler615;
  struct ä
    struct ä
      void          *_filler616;
      ü _key46;
    ü _def46;
  unsigned char  _filler617;
  unsigned char  _filler618Ä17Ü;
  short int      _filler619;
  unsigned char  _filler620;
  short int      _filler621;
  unsigned char  _filler622;
  void          *_filler623;
  void          *_filler624;
  void          *_filler625;
  void          *_filler626;
  struct ä
    struct ä
      void          *_filler627;
      ü _key47;
    ü _def47;
  unsigned char  _filler628;
  unsigned char  _filler629Ä17Ü;
  short int      _filler630;
  unsigned char  _filler631;
  short int      _filler632;
  unsigned char  _filler633;
  void          *_filler634;
  void          *_filler635;
  void          *_filler636;
  void          *_filler637;
  struct ä
    struct ä
      void          *_filler638;
      ü _key48;
    ü _def48;
  unsigned char  _filler639;
  unsigned char  _filler640Ä17Ü;
  short int      _filler641;
  unsigned char  _filler642;
  short int      _filler643;
  unsigned char  _filler644;
  void          *_filler645;
  void          *_filler646;
  void          *_filler647;
  void          *_filler648;
  struct ä
    struct ä
      void          *_filler649;
      ü _key49;
    ü _def49;
  unsigned char  _filler650;
  unsigned char  _filler651Ä17Ü;
  short int      _filler652;
  unsigned char  _filler653;
  short int      _filler654;
  unsigned char  _filler655;
  void          *_filler656;
  void          *_filler657;
  void          *_filler658;
  void          *_filler659;
  struct ä
    struct ä
      void          *_filler660;
      ü _key50;
    ü _def50;
  unsigned char  _filler661;
  unsigned char  _filler662Ä17Ü;
  short int      _filler663;
  unsigned char  _filler664;
  short int      _filler665;
  unsigned char  _filler666;
  void          *_filler667;
  void          *_filler668;
  void          *_filler669;
  void          *_filler670;
  unsigned char  _filler671;
  unsigned char  values01481Ä2Ü;
  unsigned char  _filler672;
  unsigned char  values01482Ä3Ü;
  unsigned char  _filler673;
  struct ä
    unsigned char  _filler674Ä3Ü;
    unsigned char  _filler675;
    ü _def51;
  struct ä
    void          *_filler676;
    ü _key51;
  unsigned char  _filler677;
  unsigned char  _filler678Ä17Ü;
  short int      _filler679;
  unsigned char  _filler680;
  short int      _filler681;
  unsigned char  _filler682;
  void          *_filler683;
  void          *_filler684;
  void          *_filler685;
  void          *_filler686;
  unsigned char  _filler687;
  unsigned char  values01491Ä2Ü;
  unsigned char  _filler688;
  unsigned char  values01492Ä3Ü;
  unsigned char  _filler689;
  struct ä
    unsigned char  _filler690Ä3Ü;
    unsigned char  _filler691;
    ü _def52;
  struct ä
    void          *_filler692;
    ü _key52;
  unsigned char  _filler693;
  unsigned char  _filler694Ä17Ü;
  short int      _filler695;
  unsigned char  _filler696;
  short int      _filler697;
  unsigned char  _filler698;
  void          *_filler699;
  void          *_filler700;
  void          *_filler701;
  void          *_filler702;
  unsigned char  _filler703;
  unsigned char  values01501Ä2Ü;
  unsigned char  _filler704;
  unsigned char  values01502Ä3Ü;
  unsigned char  _filler705;
  unsigned char  values01503Ä5Ü;
  unsigned char  _filler706;
  unsigned char  _filler707Ä2Ü;
  unsigned char  _filler708Ä5Ü;
  unsigned char  _filler709Ä3Ü;
  struct ä
    void          *_filler710;
    ü _key53;
  unsigned char  _filler711;
  unsigned char  _filler712Ä17Ü;
  short int      _filler713;
  unsigned char  _filler714;
  short int      _filler715;
  unsigned char  _filler716;
  void          *_filler717;
  void          *_filler718;
  void          *_filler719;
  void          *_filler720;
  unsigned char  _filler721Ä128Ü;
  struct ä
    void          *_filler722;
    ü _key54;
  unsigned char  _filler723;
  unsigned char  _filler724Ä17Ü;
  short int      _filler725;
  unsigned char  _filler726;
  short int      _filler727;
  unsigned char  _filler728;
  void          *_filler729;
  void          *_filler730;
  void          *_filler731;
  void          *_filler732;
  unsigned char  _filler733Ä60Ü;
  struct ä
    void          *_filler734;
    ü _key55;
  unsigned char  _filler735;
  unsigned char  _filler736Ä17Ü;
  short int      _filler737;
  unsigned char  _filler738;
  short int      _filler739;
  unsigned char  _filler740;
  void          *_filler741;
  void          *_filler742;
  void          *_filler743;
  void          *_filler744;
  struct ä
    struct ä
      void          *_filler745;
      ü _key56;
    ü _def56;
  unsigned char  _filler746;
  unsigned char  _filler747Ä17Ü;
  short int      _filler748;
  unsigned char  _filler749;
  short int      _filler750;
  unsigned char  _filler751;
  void          *_filler752;
  void          *_filler753;
  void          *_filler754;
  void          *_filler755;
  unsigned char  _filler756Ä8Ü;
  struct ä
    void          *_filler757;
    ü _key57;
  unsigned char  _filler758;
  unsigned char  _filler759Ä17Ü;
  short int      _filler760;
  unsigned char  _filler761;
  short int      _filler762;
  unsigned char  _filler763;
  void          *_filler764;
  void          *_filler765;
  void          *_filler766;
  void          *_filler767;
  struct ä
    void          *_filler768;
    ü _def58;
  struct ä
    void          *_filler769;
    ü _key58;
  unsigned char  _filler770;
  unsigned char  _filler771Ä17Ü;
  short int      _filler772;
  unsigned char  _filler773;
  short int      _filler774;
  unsigned char  _filler775;
  void          *_filler776;
  void          *_filler777;
  void          *_filler778;
  void          *_filler779;
  unsigned char  _filler780Ä8Ü;
  struct ä
    void          *_filler781;
    ü _key59;
  unsigned char  _filler782;
  unsigned char  _filler783Ä17Ü;
  short int      _filler784;
  unsigned char  _filler785;
  short int      _filler786;
  unsigned char  _filler787;
  void          *_filler788;
  void          *_filler789;
  void          *_filler790;
  void          *_filler791;
  unsigned char  _filler792Ä60Ü;
  struct ä
    void          *_filler793;
    ü _key60;
  struct ä
    unsigned char  _tranpr1Ä8Ü; /* tran prog name      */
    unsigned char  _tranpr2Ä8Ü; /* tran prog name      */
    unsigned char  _tranpr3Ä8Ü; /* tcp/ip iq interface */
    unsigned char  _tranpr4Ä8Ü; /* WWA  prog name      */
    unsigned char  _tranpr5Ä8Ü; /* tran prog name      */
    unsigned char  _tranpr6Ä8Ü; /* tran prog name      */
    unsigned char  _tranpr7Ä8Ü; /* tran prog name      */
    unsigned char  _tranpr8Ä8Ü; /* called program      */
    ü qnintran;
  unsigned char  tranpr9Ä8Ü;                       /* last one                                   */
  unsigned char  tranpraÄ8Ü;                       /* SAPI                                       */
  unsigned char  tranprbÄ8Ü;                       /* EXCI                                       */
  unsigned char  tranprcÄ8Ü;                       /* DB2                                        */
  unsigned char  systemsÄ256Ü;                     /* system profile names                       */
  unsigned char  qnrqsÄ512ÜÄ143Ü;
  unsigned char  _filler794;
  unsigned char  qnet_tcpip_global_areaÄ8Ü;        /* global area                                */
  unsigned char  _filler795Ä32ÜÄ36Ü;               /* cache area                                 */
  struct ä
    void          *_filler796;  /* DCBE ADDRESS */
    ü wlog;
  unsigned char  _filler797Ä12Ü;                   /* FDAD, DVTBL                                */
  void          *_filler798;                       /* KEYLEN, DEVT, TRBAL                        */
  unsigned char  _filler799;                       /* BUFNO, NUMBER OF BUFFERS                   */
  int            _filler800 : 24;                  /* BUFCB, BUFFER POOL CONTROL BLOCK           */
  short int      _filler801;                       /* BUFL, BUFFER LENGTH                        */
  unsigned char  _filler802Ä2Ü;                    /* DSORG, DATA SET ORGANIZATION               */
  void          *_filler803;                       /* IOBAD FOR EXCP OR RESERVED                 */
  unsigned char  _filler804;                       /* BFTEK, BFALN, DCBE INDICATORS              */
  int            _filler805 : 24;                  /* EODAD (END OF DATA ROUTINE ADDRESS)        */
  unsigned char  _filler806;                       /* RECFM (RECORD FORMAT)                      */
  int            _filler807 : 24;                  /* EXLST (EXIT LIST ADDRESS)                  */
  unsigned char  _filler808Ä8Ü;                    /* DDNAME                                     */
  unsigned char  _filler809;                       /* OFLGS (OPEN FLAGS)                         */
  unsigned char  _filler810;                       /* IFLGS (IOS FLAGS)                          */
  unsigned char  _filler811Ä2Ü;                    /* MACR (MACRO FORMAT)                        */
  unsigned char  _filler812;                       /* OPTCD, OPTION CODES                        */
  int            _filler813 : 24;                  /* CHECK OR INTERNAL QSAM SYNCHRONIZING RTN.  */
  void          *_filler814;                       /* SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)    */
  short int      _filler815;                       /* INTERNAL ACCESS METHOD FLAGS               */
  short int      _filler816;                       /* BLKSIZE, BLOCK SIZE                        */
  int            _filler817;                       /* INTERNAL ACCESS METHOD FLAGS               */
  void          *_filler818;                       /* INTERNAL ACCESS METHOD USE                 */
  void          *_filler819;                       /* EOBAD                                      */
  void          *_filler820;                       /* RECAD                                      */
  short int      _filler821;                       /* QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF    */
  short int      _filler822;                       /* LRECL                                      */
  unsigned char  _filler823;                       /* EROPT, ERROR OPTION                        */
  int            _filler824 : 24;                  /* CNTRL                                      */
  short int      _filler825Ä2Ü;                    /* RESERVED AND PRECL                         */
  void          *_filler826;                       /* EOB, INTERNAL ACCESS METHOD FIELD          */
  void          *msgmdl;                           /* &PROJECT.MSGP module addr                  */
  void          *msgcsect;                         /* &PROJECT.MSGS message csect                */
  void          *msgwarea;                         /* work area address                          */
  void          *msgdcb;                           /* message dcb addr                           */
  void          *msgff02;                          /* IKJEFF02 addr                              */
  unsigned char  msgtimeÄ4Ü;                       /* time yes                                   */
  unsigned char  msgidÄ4Ü;                         /* message id                                 */
  void          *msgpages;                         /* no page size                               */
  void          *msglinec;                         /* line counter                               */
  void          *msgpagec;                         /* page counter                               */
  unsigned char  msgheadÄ80Ü;                      /* head msg id                                */
  void          *msgroutcd;                        /* ROUT CODE                                  */
  void          *wlogpc;                           /* page count                                 */
  void          *wloglc;                           /* line count                                 */
  unsigned char  wlogeÄ4Ü;                         /* 0  Alignment and identifier                */
  short int      _filler827;                       /* 4  Length of DCBE, minimum is 56           */
  unsigned char  _filler828Ä2Ü;                    /* 6  Reserved, should be zero                */
  void          *_filler829;                       /* 8  0 if not open, OPEN points to DCB       */
  unsigned char  _filler830Ä4Ü;                    /* C  Disk address of current member          */
  unsigned char  _filler831;                       /* 10  Flags set by system                    */
  unsigned char  _filler832;                       /* 11  Flags set by user                      */
  short int      _filler833;                       /* 12  Number of stripes if extended format   */
  unsigned char  _filler834;                       /* 14  Flags set by user                 @L3A */
  unsigned char  _filler835Ä3Ü;                    /* 15  Reserved                          @L3C */
  unsigned char  _filler836Ä4Ü;                    /* 18  Reserved                          @L2A */
  int            _filler837;                       /* 1C  Block size                        @L2A */
  unsigned char  _filler838Ä8Ü;                    /* 20  Reserved & number of blocks in ds @L2C */
  void          *_filler839;                       /* 28  End of data routine address or 0       */
  void          *_filler840;                       /* 2C  I/O error routine (synchronous) or 0   */
  unsigned char  _filler841Ä6Ü;                    /* 30  Reserved, should be zero               */
  unsigned char  _filler842Ä2Ü;                    /* 36  MULTACC and MULTSDN                    */
  unsigned char  qcvt_tiotlÄ1024ÜÄ10Ü;
  unsigned char  qcvt_dumponmessagesÄ60Ü;          /* dump on messages list                      */
  unsigned char  qcvt_traceon_messagesÄ60Ü;        /* dump on messages list                      */
  unsigned char  _filler843Ä4Ü;
  struct ä
    unsigned char  _filler844;  /* FORMAT NUMBER OF ETD         */
    unsigned char  _filler845;  /* RESERVED. MUST BE ZERO       */
    short int      _filler846;  /* NUMBER OF ENTRY DESCRIPTIONS */
    unsigned char  _qnpcqget;   /* INDEX FOR THIS ENTRY         */
    unsigned char  _filler847;  /* FLAG BYTE                    */
    short int      _filler848;  /* RESERVED                     */
    ü qnpcet;
  void          *_filler849;                       /* ZERO PADDING                               */
  void          *_filler850;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler851;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler852;                       /* ENTRY KEY MASK                             */
  void          *_filler853;                       /* PARAMETER 1                                */
  unsigned char  _filler854;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler855;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler856;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler857;                       /* ZERO PADDING                               */
  void          *_filler858;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler859;                       /* PARAMETER 2                                */
  unsigned char  _filler860;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler861Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qnpcqput;                         /* INDEX FOR THIS ENTRY                       */
  unsigned char  _filler862;                       /* FLAG BYTE                                  */
  short int      _filler863;                       /* RESERVED                                   */
  void          *_filler864;                       /* ZERO PADDING                               */
  void          *_filler865;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler866;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler867;                       /* ENTRY KEY MASK                             */
  void          *_filler868;                       /* PARAMETER 1                                */
  unsigned char  _filler869;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler870;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler871;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler872;                       /* ZERO PADDING                               */
  void          *_filler873;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler874;                       /* PARAMETER 2                                */
  unsigned char  _filler875;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler876Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qnpcqbclose;                      /* INDEX FOR THIS ENTRY                       */
  unsigned char  _filler877;                       /* FLAG BYTE                                  */
  short int      _filler878;                       /* RESERVED                                   */
  void          *_filler879;                       /* ZERO PADDING                               */
  void          *_filler880;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler881;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler882;                       /* ENTRY KEY MASK                             */
  void          *_filler883;                       /* PARAMETER 1                                */
  unsigned char  _filler884;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler885;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler886;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler887;                       /* ZERO PADDING                               */
  void          *_filler888;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler889;                       /* PARAMETER 2                                */
  unsigned char  _filler890;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler891Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qnpcbget;                         /* INDEX FOR THIS ENTRY                       */
  unsigned char  _filler892;                       /* FLAG BYTE                                  */
  short int      _filler893;                       /* RESERVED                                   */
  void          *_filler894;                       /* ZERO PADDING                               */
  void          *_filler895;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler896;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler897;                       /* ENTRY KEY MASK                             */
  void          *_filler898;                       /* PARAMETER 1                                */
  unsigned char  _filler899;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler900;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler901;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler902;                       /* ZERO PADDING                               */
  void          *_filler903;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler904;                       /* PARAMETER 2                                */
  unsigned char  _filler905;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler906Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qnpcbput;                         /* INDEX FOR THIS ENTRY                       */
  unsigned char  _filler907;                       /* FLAG BYTE                                  */
  short int      _filler908;                       /* RESERVED                                   */
  void          *_filler909;                       /* ZERO PADDING                               */
  void          *_filler910;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler911;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler912;                       /* ENTRY KEY MASK                             */
  void          *_filler913;                       /* PARAMETER 1                                */
  unsigned char  _filler914;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler915;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler916;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler917;                       /* ZERO PADDING                               */
  void          *_filler918;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler919;                       /* PARAMETER 2                                */
  unsigned char  _filler920;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler921Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qnpcbpoint;                       /* INDEX FOR THIS ENTRY                       */
  unsigned char  _filler922;                       /* FLAG BYTE                                  */
  short int      _filler923;                       /* RESERVED                                   */
  void          *_filler924;                       /* ZERO PADDING                               */
  void          *_filler925;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler926;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler927;                       /* ENTRY KEY MASK                             */
  void          *_filler928;                       /* PARAMETER 1                                */
  unsigned char  _filler929;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler930;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler931;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler932;                       /* ZERO PADDING                               */
  void          *_filler933;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler934;                       /* PARAMETER 2                                */
  unsigned char  _filler935;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler936Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qnpccheck;                        /* INDEX FOR THIS ENTRY                       */
  unsigned char  _filler937;                       /* FLAG BYTE                                  */
  short int      _filler938;                       /* RESERVED                                   */
  void          *_filler939;                       /* ZERO PADDING                               */
  void          *_filler940;                       /* ROUTINE ADDRESS                 @D2C       */
  short int      _filler941;                       /* AUTHORIZATION KEY MASK                     */
  short int      _filler942;                       /* ENTRY KEY MASK                             */
  void          *_filler943;                       /* PARAMETER 1                                */
  unsigned char  _filler944;                       /* ETD OPTIONS BYTE 1                         */
  unsigned char  _filler945;                       /* ENTRY KEY (HIGH ORDER 4 BITS)              */
  short int      _filler946;                       /* EXTENDED AUTHORIZATION INDEX               */
  void          *_filler947;                       /* ZERO PADDING                               */
  void          *_filler948;                       /* ASSOCIATED RECOVERY ROUTINE ADDRESS        */
  void          *_filler949;                       /* PARAMETER 2                                */
  unsigned char  _filler950;                       /* LPA FLAG BYTE 1                 @L2A       */
  unsigned char  _filler951Ä3Ü;                    /* RESERVED - MUST BE ZERO         @L2C       */
  unsigned char  qcvt_fsi_conÄ64Ü;                 /* connect/disconnect parm area               */
  unsigned char  qcvt_fsi_sendÄ36Ü;                /* send area                                  */
  ü;

#define qnpclxct                   qnpclxl._qnpclxct
#define qnpcetct                   qnpcetl._qnpcetct
#define qnmnstkn                   qnmnoda._qnmnstkn
#define qnmnascb                   qnmnoda._qnmnascb
#define qnmnaecb                   qnmnoda._qnmnaecb
#define qnmnresv                   qnmnoda._qnmnresv
#define qnet_tcpip_clientid_domain qnet_tcpip_clientid._qnet_tcpip_clientid_domain
#define qnet_tcpip_name_family     qnet_tcpip_name._qnet_tcpip_name_family
#define qnet_tcpip_name_port       qnet_tcpip_name._qnet_tcpip_name_port
#define qnet_tcpip_name_address    qnet_tcpip_name._qnet_tcpip_name_address
#define qnet_tcpip_name_reserved   qnet_tcpip_name._qnet_tcpip_name_reserved
#define itiqecb                    itiioqe._itiqecb
#define itoqecb                    itoioqe._itoqecb
#define tranpr1                    qnintran._tranpr1
#define tranpr2                    qnintran._tranpr2
#define tranpr3                    qnintran._tranpr3
#define tranpr4                    qnintran._tranpr4
#define tranpr5                    qnintran._tranpr5
#define tranpr6                    qnintran._tranpr6
#define tranpr7                    qnintran._tranpr7
#define tranpr8                    qnintran._tranpr8
#define qnpcqget                   qnpcet._qnpcqget

/* Values for field "qcvtioq" */
#define max_qcvtioq                 4096       /* max request queue entries */

/* Values for field "qnscvt" */
#define pcqget                      0          /* qget pc 0                 */
#define pcqput                      1          /* qput pc 1                 */
#define pcqbclose                   2          /* qbclose pc 2              */
#define pcbget                      3          /* bget pc 3                 */
#define pcbput                      4          /* bput pc 4                 */
#define pcbpoint                    5          /* bpoint pc 5               */
#define pccheck                     6          /* check pc 6                */

/* Values for field "wlmtype" */
#define wlmtype_qmgr                0x01       /* wlm queue manager         */
#define wlmtype_smgr                0x02       /* wlm server manager        */
#define wlmtype_wmgr                0x04       /* wlm work  manager         */

/* Values for field "wlmaest" */
#define wlmaest_reset               0x00       /* reset                     */
#define wlmaest_active              0x01       /* acive                     */
#define wlmaest_stopreq             0x02       /* stop requested            */
#define wlmaest_stop                0x03       /* stopping                  */

/* Values for field "__prof_msga" */
#define __prof_length               0x7C       /* length of the local area  */

/* Values for field "qnettp" */
#define qnettp_appc                 1          /* APPC flag                 */
#define qnettp_tcpip                2          /* TCPIP flag                */
#define qnettp_file                 4          /* FILE flag                 */
#define qnettp_mqs                  8          /* MQSeries flag             */
#define qnettp_sapi                 16         /* SAPI flag                 */
#define qnettp_exci                 32         /* EXCI flag                 */
#define qnettp_db2                  64         /* DB2 flag                  */
#define qnettp_jump_appc            0          /* APPC jump                 */
#define qnettp_jump_tcpip           4          /* TCPIP jump                */
#define qnettp_jump_file            8          /* FILE jump                 */
#define qnettp_jump_mqs             12         /* MQSeries jump             */
#define qnettp_jump_sapi            16         /* SAPI jump                 */
#define qnettp_jump_exci            20         /* EXCI jump                 */
#define qnettp_jump_db2             24         /* DB2 jump                  */

/* Values for field "_filler795" */
#define qnet_tcpip_cache_size       0x480      /* size                      */
#define qfssport                    80         /* QFSS port number          */
#define _routcde                    28         /* subsystem route code      */
#define _desc                       11         /* descriptor code           */
#define _qfsscvt                    0x00       /* CVT                       */
#define _qfssserp                   0x100      /* server program            */
#define _qfssbcbp                   0x200      /* BCB program               */
#define _qfssow                     0x300      /* OW program                */
#define _qfssssip                   0x500      /* SSI program               */
#define _qfsspc                     0x600      /* PC  program               */
#define _qfssinip                   0x700      /* init program              */
#define _qfss62p                    0x800      /* qfss62P program           */
#define _qfssmain                   0x1000     /* main program              */

/* Values for field "wloglc" */
#define wlogl                       0xE4       /* LENGTH OF WLOG DCB        */

/* Values for field "qcvt_tiotl" */
#define qcvt_tiot_dummy             0x01       /* dummy flag                */

/* Values for field "_filler951" */
#define etd0163                     7          /* NUMBER OF ENTRIES IN LIST */
#define qnpc_elength                0x28       /* entry length              */
#define program_invalid_transaction 0xAAAA0001
#define program_program_not_found   0xAAAA0002
#define program_racf_error          0xAAAA0003
#define user_racf_error             0xAAAA0005
#define program_error_occured       0xAAAA0006
#define program_qsam_error          0xAAAA0007
#define program_owcb_error          0xAAAA0008
#define program_prof_error          0xAAAA0009

/* Values for field "qcvt_fsi_send" */
#define qcvtsize                    0x194B8    /* CVT size                  */
#define _owid                       0x12FF7A   /* overwiew record id        */
#define _tptype                     0x110000   /* tp header record          */
#define _ohfrtype                   0x210001   /* file request header       */
#define _ohfstype                   0x210002   /* SEND data header          */
#define _ohsstype                   0x910002   /* SEND FSS data type        */
#define _ohdrtype                   0x210003   /* directory request header  */
#define _ohprtype                   0x210004   /* profile request header    */
#define _datatype                   0x300001   /* data record               */
#define _dasstype                   0x300002   /* send FSS data type        */
#define _otfrtype                   0x220001   /* file request trailer      */
#define _otfstype                   0x220002   /* file SEND trailer         */
#define _otsstype                   0x620002   /* file FSS trailer          */
#define _otdrtype                   0x220003   /* directory request trailer */
#define _otprtype                   0x220004   /* profile request trailer   */
#define _otaptype                   0x120000   /* tp trailer record         */
#define _maxtp                      254        /* max header record length  */
#define _maxappl                    1022       /* max appl record length    */
#define _applbyn                    0x00       /* binary data               */
#define _applbin                    0x00       /* binary data               */
#define _applsrc                    0x01       /* source program            */
#define _applafp                    0x02       /* AFPDS data                */
#define _appldir                    0x03       /* directory info            */
#define _applmsg                    0x04       /* message                   */
#define _applprof                   0x05       /* profile info              */
#define _applbinc                   0x06       /* BINARY WITH CRLF          */

#pragma pack(reset)
