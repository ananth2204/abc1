#pragma pack(packed)

struct asvt ä
  unsigned char  asvtprfxÄ472Ü; /* RESERVED FOR FUTURE EXPANSION   @L3C                   */
  struct ä
    void          *_asvtreua; /* ADDRESS OF ASVTREUS BITS        @L3A */
    void          *_asvtravl; /* ADDRESS OF FIRST AVAILABLE      @L3A */
    ü asvtbegn;
  int            asvtaav;       /* NUMBER OF FREE SLOTS ON THE     @L2A                   */
  int            asvtast;       /* NUMBER OF FREE SLOTS ON THE     @L2A                   */
  int            asvtanr;       /* NUMBER OF FREE SLOTS ON THE     @L2A                   */
  int            asvtstrt;      /* ORIGINAL SIZE OF START/SASI     @L2A                   */
  int            asvtnonr;      /* ORIGINAL SIZE OF NON-REUSABLE   @L2C                   */
  int            asvtmaxi;      /* -                 ORIGINAL MAX USERS COUNT AS     @L1A */
  unsigned char  _filler1Ä8Ü;   /* -               RESERVED. WAS ASVTRSHD/DSHD     @L3C   */
  unsigned char  asvtasvtÄ4Ü;   /* -               ACRONYM IN EBCDIC -ASVT-               */
  int            asvtmaxu;      /* -                 MAXIMUM NUMBER OF ADDRESS SPACES     */
  int            asvtmdsc;      /* -                 MAXUSER DEFICIT SLOT COUNT.     @P1A */
  void          *asvtfrst;      /* -                 ADDRESS OF FIRST AVAILABLE ASVT      */
  void          *asvtenty;      /* -                 ENTRY FOR EACH POSSIBLE ASID.        */
  ü;

#define asvtreua asvtbegn._asvtreua
#define asvtravl asvtbegn._asvtravl

/* Values for field "asvtfrst" */
#define asvtavai 0x80 /* -             BIT ONE IF ASID IS AVAILABLE AND */

/* Values for field "asvtenty" */
#define asvtaval 0x80 /* -             BIT ONE IF ASID IS AVAILABLE AND */

#pragma pack(reset)
