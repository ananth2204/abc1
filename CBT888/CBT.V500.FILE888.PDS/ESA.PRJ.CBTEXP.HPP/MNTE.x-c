#pragma pack(packed)

struct mnte ä
  struct ä
    int            _mntentfstype; /* File system type */
    ü mntentbodyv1v2;
  struct ä
    unsigned char  _mntentfsmode1; /* File system mount method - byte 1 */
    unsigned char  _mntentfsmode2; /* File system mount method - byte 2 */
    unsigned char  _mntentfsmode3; /* File system mount method - byte 3 */
    unsigned char  _mntentfsmode4; /* File system mount method - byte 4 */
    ü mntentfsmode;
  int            mntentfsdev;            /* st_dev value to be returned by        */
  int            mntentparentdev;        /* st_dev of the parent file system      */
  int            mntentrootino;          /* ino of the mount point                */
  unsigned char  mntentstatus;           /* Status of the file system             */
  unsigned char  mntentfsddnameÄ9Ü;      /* DDNAME specified on mount - null      */
  unsigned char  mntentfstnameÄ9Ü;       /* File system type name -               */
  union ä
    struct ä
      unsigned char  _mntentfsnam44Ä44Ü; /* File system name - as a 44 byte field */
      unsigned char  _filler1;
      ü _mnte_struct1;
    unsigned char  _mntentfsnameÄ45Ü; /* File system name - for PDSE/X, this */
    ü _mnte_union1;
  int            mntentpathlen;          /* length of mount point path name       */
  unsigned char  mntentmountpointÄ1024Ü; /* Name of directory where the file      */
  unsigned char  mntentjobnameÄ8Ü;       /* Job name of quiesce requestor    @D4C */
  int            mntentpid;              /* PID of quiesce requestor              */
  int            mntentparmoffset;       /* Offset of MntEntParm from MNTE        */
  short int      mntentparmlen;          /* Length of mount parameter             */
  unsigned char  mntentsysnameÄ8Ü;       /* Name of system to mount on       @DDA */
  unsigned char  mntentqsysnameÄ8Ü;      /* Name of queisce system name      @DDA */
  unsigned char  mntentfromsysÄ8Ü;       /* Filesystems to be moved from here@DDA */
  unsigned char  mntentres00Ä2Ü;         /* Alignment                        @DDA */
  struct ä
    unsigned char  _mntentrflags1; /* Request flags - byte 1           @DDA */
    unsigned char  _mntentrflags2; /* Request flags - byte 2           @DDA */
    unsigned char  _mntentrflags3; /* Request flags - byte 3           @DDA */
    unsigned char  _mntentrflags4; /* Request flags - byte 4           @DDA */
    ü mntentrflags;
  struct ä
    unsigned char  _mntentstatus2b1; /* Status of filesystem - byte 1 */
    unsigned char  _mntentstatus2b2; /* Status of filesystem - byte 2 */
    unsigned char  _mntentstatus2b3; /* Status of filesystem - byte 3 */
    unsigned char  _mntentstatus2b4; /* Status of filesystem - byte 4 */
    ü mntentstatus2;
  int            mntentsuccess;          /* Successful moves                 @DDA */
  int            mntentreadct;           /* Number of reads from filesys     @DEA */
  int            mntentwritect;          /* Number of writes done            @DEA */
  int            mntentdiribc;           /* Number of directory I/O blocks   @DEA */
  int            mntentreadibc;          /* Number of read I/O blocks        @DEA */
  int            mntentwriteibc;         /* Number of write I/O blocks       @DEA */
  unsigned char  mntentbytesreadÄ8Ü;     /* Number of bytes read             @DEA */
  unsigned char  mntentbyteswrittenÄ8Ü;  /* Number of bytes written          @DEA */
  unsigned char  mntentfiletagÄ4Ü;       /* File tag (see BPXYSTAT)          @DFC */
  int            mntentsyslistoffset;    /* Offset of system list            @DJA */
  short int      mntentsyslistlength;    /* Length of system list            @DJA */
  short int      mntentaggnamelength;    /* Length of Aggregate name         @DIA */
  int            mntentaggnameoffset;    /* Aggregate Name Offset or 0       @DIA */
  unsigned char  mntentroseclabelÄ8Ü;    /* Readonly seclabel                @DLA */
  ü;

#define mntentfstype    mntentbodyv1v2._mntentfstype
#define mntentfsmode1   mntentfsmode._mntentfsmode1
#define mntentfsmode2   mntentfsmode._mntentfsmode2
#define mntentfsmode3   mntentfsmode._mntentfsmode3
#define mntentfsmode4   mntentfsmode._mntentfsmode4
#define mntentfsnam44   _mnte_union1._mnte_struct1._mntentfsnam44
#define mntentfsname    _mnte_union1._mntentfsname
#define mntentrflags1   mntentrflags._mntentrflags1
#define mntentrflags2   mntentrflags._mntentrflags2
#define mntentrflags3   mntentrflags._mntentrflags3
#define mntentrflags4   mntentrflags._mntentrflags4
#define mntentstatus2b1 mntentstatus2._mntentstatus2b1
#define mntentstatus2b2 mntentstatus2._mntentstatus2b2
#define mntentstatus2b3 mntentstatus2._mntentstatus2b3
#define mntentstatus2b4 mntentstatus2._mntentstatus2b4

/* Values for field "mntentfstype" */
#define mntentfstypemvs     1     /* MVS Local File System                 */
#define mntentfstyperemote  2     /* Remote File System               @P2A */
#define mntentfstypepipe    3     /* Pipe file system                      */
#define mntentfstypesocket  4     /* Socket file system               @D3A */
#define mntentfstypexpfs    5     /* Cross System PFS (XPFS)          @DAA */
#define mntentfstypecsps    6     /* Char special streams             @DBA */
#define mntentfstypenfs     0x02  /* @P2C                                  */

/* Values for field "mntentfsmode3" */
#define mntentfssynchonly   0x01  /* File system SynchOnly specified  @DKA */

/* Values for field "mntentfsmode4" */
#define mntentsecacl        0x80  /* Acls supported by sec product    @DHA */
#define mntentfsaunmount    0x40  /* UnMount during recovery          @DGA */
#define mntentfsclient      0x20  /* File system is a client          @DDA */
#define mntentfsnoautomove  0x10  /* Automove allowed                 @DDA */
#define mntentfsmodenosec   0x08  /* No Security checks enforced      @DCA */
#define mntentfsmodeexport  0x04  /* File system exported by DFS      @D9A */
#define mntentfsmodenosuid  0x02  /* SetUID not permitted for              */
#define mntentfsmoderdonly  0x01  /* File system mounted read only         */
#define mntentfsmoderdwr    0x00  /* File system mounted read/write        */

/* Values for field "mntentstatus" */
#define mntentfileactive    0x00  /* File system is active       @D4C      */
#define mntentfiledead      0x01  /* File system is dead                   */
#define mntentfilereset     0x02  /* File system being reset               */
#define mntentfiledrain     0x04  /* File system being unmounted with      */
#define mntentfileforce     0x08  /* File system being unmounted with      */
#define mntentfileimmed     0x10  /* File system being unmounted with      */
#define mntentfilenorm      0x20  /* File system being unmounted with      */
#define mntentimmedtried    0x40  /* File system Umount immed failed       */
#define mntentquiesced      0x80  /* File system is quiesced               */
#define mntentmntinprogress 0x81  /* Mount in progress for                 */
#define mntentasynchmount   0x82  /* Asynchronous mount in progress        */

/* Values for field "mntentrflags4" */
#define mntentchange        0x01  /* Change f.s. server request       @P3A */
#define mntentnewauto       0x02  /* Change automove setting          @DDA */

/* Values for field "mntentstatus2b4" */
#define mntentunowned       0x01  /* File system unowned         @DDA      */
#define mntentinrecovery    0x02  /* File system in recovery     @DDA      */
#define mntentsuperquiesced 0x04  /* File system super quiesced  @DDA      */

/* Values for field "mntentroseclabel" */
#define mnte_length         0x4CC /* Length of this structure              */

#pragma pack(reset)
