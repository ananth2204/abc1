#pragma pack(packed)

struct prli ä
  unsigned char  prliidÄ4Ü;          /* EBCDIC ID                               */
  char           prlisp;             /* Subpool number of this Prli             */
  int            prlilen : 24;       /* Length of this Prli                     */
  int            prliprocessid;      /* Process ID. Used for fast getpid()      */
  unsigned char  prlicatchermaskÄ8Ü; /* Mask of signals that may be caught      */
  void          *prlioapb;           /* Oapb Addr of this process               */
  unsigned char  prliflag;           /* Flag byte                               */
  unsigned char  prlimagicnumberÄ2Ü; /* Magic Number Characters                 */
  unsigned char  _filler1;           /* Reserved                                */
  int            prlil16jrc;         /* Return code area for L16J FastCGI @P1M  */
  void          *prliruid;           /* Real Uid addr                           */
  void          *prlieuid;           /* Effective Uid addr                      */
  void          *prlirgid;           /* Real Gid addr                           */
  void          *prliegid;           /* Effective gid                           */
  void          *prliprocgrpid;      /* Process Group ID addr                   */
  void          *prliparentpid;      /* Parent Process ID addr                  */
  void          *prlithreadtasksmax; /* SC_THREAD_TASK_MAX_NP value addr   @D5A */
  void          *prlithreadsmax;     /* SC_THREADS_MAX_NP value address    @D5A */
  void          *prlichildmax;       /* SC_CHILD_MAX value addr            @D5A */
  void          *prliopenmax;        /* SC_OPEN_MAX value address          @D5A */
  void          *prlimmapmemmax;     /* SC_MMAP_MEM_MAX value address      @D5A */
  unsigned char  prliend;            /* End of Prli                             */
  ü;

/* Values for field "prliflag" */
#define prlif1med         0x80       /* Process is medium weight local @01A              */
#define prlif1dissig      0x40       /* Disable signal delivery        @D4A              */
#define prlisysconfok     0x20       /* SC_ fields valid. Note, that                     */
#define prlif1termt       0x10       /* Terminate threads               @02A             */

/* Values for field "prliend" */
#define prli_id           0xD7D9D3C9 /* Control Block Acronym                            */
#define prli_sp           230        /* Subpool for the Prli                             */
#define prli_len          0x4C
#define sighup_           1          /* Hangup detected on controlling terminal          */
#define sigint_           2          /* Interactive attention                            */
#define sigabrt_          3          /* Abnormal termination                             */
#define sigill_           4          /* Detection of an incorrect hardware instruction   */
#define sigpoll_          5          /* Pollable event                                   */
#define sigurg_           6          /* High bandwidth data is available at a socket     */
#define sigfpe_           8          /* Erroneous arithmetic operation, such as division */
#define sigkill_          9          /* Termination (cannot be caught or ignored)        */
#define sigbus_           10         /* Bus error                                        */
#define sigsegv_          11         /* Detection of an incorrect memory reference       */
#define sigsys_           12         /* Bad System Call                                  */
#define sigpipe_          13         /* Write on a pipe with no readers                  */
#define sigalrm_          14         /* Timeout                                          */
#define sigterm_          15         /* Termination                                      */
#define sigusr1_          16         /* Reserved as application-defined signal 1         */
#define sigusr2_          17         /* Reserved as application-defined signal 2         */
#define sigabnd_          18         /* Abend                                            */
#define sigquit_          24         /* Interactive termination                          */
#define sigtrap_          26         /* Trap used by the ptrace call                     */
#define sigxcpu_          29         /* CPU time limit exceeded                          */
#define sigxfsz_          30         /* File size limit exceeded                         */
#define sigvtalrm_        31         /* Virtual timer expired                            */
#define sigprof_          32         /* Profiling timer expired                          */
#define sigdanger_        33         /* Shutdown Imminent                           @D9A */
#define sigdce_           38         /* Reserved for exclusive use by DCE                */
#define signull_          0          /* Null - no signal sent                            */
#define sigchld_          20         /* Child process terminated or stopped              */
#define sigio_            23         /* Completion of input or output                    */
#define sigioer_          27         /* Input or Output Error                            */
#define sigwinch_         28         /* Change size of window                            */
#define sigdump_          39         /* Take a SYSMDUMP                             @D8A */
#define sigstop_          7          /* Stop (cannot be caught or ignored)               */
#define sigttin_          21         /* Read from a control terminal attempted by a      */
#define sigttou_          22         /* Write from a control terminal attempted by a     */
#define sigtstp_          25         /* Interactive stop                                 */
#define sigthstop_        34         /* Thread stop (cannot be caught or blocked or      */
#define sigcont_          19         /* Continue if stopped                              */
#define sigthcont_        35         /* Thread continue (cannot be caught or blocked or  */
#define sig_dfl_          0          /* Default signal action                            */
#define sig_ign_          1          /* Ignore signal action                             */
#define sa_flags_dft_     0x00       /* Default sa_flags                                 */
#define sa_nocldstop_     0x80000000 /* No SIGCHLD when children stop                    */
#define sa_old_style_     0x40000000 /* Old style signal() function                      */
#define sa_onstack_       0x20000000 /* Deliver on alternate stack     @D5A              */
#define sa_resethand_     0x10000000 /* Reset action on delivery       @D5A              */
#define sa_restart_       0x8000000  /* Restart interruptible funcs    @D5A              */
#define sa_siginfo_       0x4000000  /* Pass siginfo to catcher        @D5A              */
#define sa_nocldwait_     0x2000000  /* Don't create zombie on exit    @D5A              */
#define sa_nodefer_       0x1000000  /* Don't block signal on delivery @D5A              */
#define sa_ignore_        0x01       /* Act as though sa_handler contained               */
#define sig_block_        0          /* Block signals set on in New_signal_mask          */
#define sig_unblock_      1          /* Unblock signals set on in New_signal_mask        */
#define sig_setmask_      2          /* Set signal mask to New_signal_mask               */
#define sig_flags_dft_    0x00       /* Default options                 @D5A             */
#define sig_ptracebypass_ 0x8000     /* Bypass ptrace processing        @D5A             */
#define sig_kernsicode_   0x4000     /* OpenMVS kernel set si_code      @D5A             */
#define sig_applsicode_   0x2000     /* Application set si_code         @D5A             */
#define sig_conscancel_   0x1000     /* Console (MODIFY) cancel thread  @D7A             */
#define ill_illopc_       11         /* Illegal opcode                        @D5A       */
#define ill_illopn_       12         /* Illegal operand                       @D5A       */
#define ill_illadr_       13         /* Illegal addressing mode               @D5A       */
#define ill_illtrp_       14         /* Illegal trap                          @D5A       */
#define ill_prvopc_       15         /* Privileged opcode                     @D5A       */
#define ill_prvreg_       16         /* Privileged register                   @D5A       */
#define ill_coproc_       17         /* Coprocessor error                     @D5A       */
#define ill_badstk_       18         /* Internal stack error                  @D5A       */
#define ill_execute_      19         /* Execute exception                     @D6A       */
#define ill_illspec_      20         /* Specification exception               @D6A       */
#define fpe_intdiv_       31         /* Integer divide by zero                @D5A       */
#define fpe_intovf_       32         /* Integer overflow                      @D5A       */
#define fpe_fltdiv_       33         /* Floating point divide by zero         @D5A       */
#define fpe_fltovf_       34         /* Floating point overflow               @D5A       */
#define fpe_fltund_       35         /* Floating point underflow              @D5A       */
#define fpe_fltres_       36         /* Floating point inexact result         @D5A       */
#define fpe_fltinv_       37         /* Invalid floating point operation      @D5A       */
#define fpe_fltsub_       38         /* Subscript out of range                @D5A       */
#define fpe_fltsig_       39         /* Floating point significance exception @D6A       */
#define fpe_decdata_      40         /* Decimal data exception                @D6A       */
#define fpe_decdiv_       41         /* Decimal divide by zero                @D6A       */
#define fpe_decovf_       42         /* Decimal overflow                      @D6A       */
#define fpe_unkwn_        43         /* Undetermined exception                @D6A       */
#define segv_maperr_      51         /* Address not mapped to object          @D5A       */
#define segv_accerr_      52         /* Invalid permissions for mapped object @D5A       */
#define segv_protect_     53         /* Invalid key access                    @D6A       */
#define segv_address_     54         /* Invalid address                       @D6A       */
#define bus_adraln_       71         /* Invalid address alignment             @D5A       */
#define bus_adrerr_       72         /* Non-existent physical address         @D5A       */
#define bus_objerr_       73         /* Object specific hardware error        @D5A       */
#define trap_brkpt_       91         /* Process breakpoint                    @D5A       */
#define trap_trace_       92         /* Process trace trap                    @D5A       */
#define cld_exited_       101        /* Child has exited                      @D5A       */
#define cld_killed_       102        /* Child was killed                      @D5A       */
#define cld_dumped_       103        /* Child was terminated abnormally       @D5A       */
#define cld_trapped_      104        /* Traced child has trapped              @D5A       */
#define cld_stopped_      105        /* Child has stopped                     @D5A       */
#define cld_continued_    106        /* Stopped child was continued           @D5A       */
#define poll_in_          111        /* Data input available                  @D5A       */
#define poll_out_         112        /* Output buffers available              @D5A       */
#define poll_msg_         113        /* Input message available               @D5A       */
#define poll_err_         114        /* I/O error                             @D5A       */
#define poll_pri_         115        /* High priority input available         @D5A       */
#define poll_hup_         116        /* Device disconnected                   @D5A       */
#define abnd_real_        170        /* Abend Real                            @P5A       */
#define si_asyncio_       175        /* Completion of an asynchronous I/O     @P6A       */
#define si_queue_         176        /* Signal sent by sigqueue()             @P6A       */
#define sig_no_timeout    0x7FFFFFFF /* @P6A                                             */

#pragma pack(reset)
