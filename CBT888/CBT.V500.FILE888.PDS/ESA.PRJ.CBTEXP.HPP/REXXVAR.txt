#ifndef INCLUDE_REXXVAR
#define INCLUDE_REXXVAR
#include "shvblock.hpp"

ISIS_EXT_ASM typedef int IRXEXCOM(const char * ,void *,void *,shvblock *,void *,int *);
ISIS_EXT_ASM typedef int IKJCT441(const int *,char * *,int *,char * *,int *,void *,int *,int *,int *);
class REXXVAR
	ä
	IRXEXCOM * irxexcom;
	IKJCT441 * ikjct441;
	shvblock shv;
	size_t   bufflength;
	int rc;
	void * envaddr;
	void * token;
	char * to ;
	int    etc;
	int    next;
	bool   debug;
	public:
		REXXVAR(bool d = false,size_t max =32760)
			ä
			irxexcom=(IRXEXCOM  *)::fetch("IRXEXCOM");
			ikjct441=(IKJCT441 * )::fetch("IKJCT441");
			token =  0;
			debug = d;
			memset(&shv,0,sizeof(shv));
			bufflength = max;
			rc = 0;
			envaddr = NULL;
			etc = -1;
			next = 0;
			to = new charÄbufflengthÜ;
			ü
		ßREXXVAR()
			ä
			if (to)
				delete ÄÜ to;
			to = NULL;
			ü
		char * fetch(const char * name);
		size_t set(const char *n,long v)
		ä
			return(set(n,int(v)));
		ü
		size_t set(const char *n,unsigned int v)
		ä
			return(set(n,int(v)));
		ü
		size_t set(const char *n,int v)
		ä
			char wÄ128Ü;
			sprintf(w,"%d",v);
		 return(set(n,w));
		ü

		size_t set(const char *n,double v)
		ä
			char wÄ128Ü;
			sprintf(w,"%#10.4f",v);
		 return(set(n,w));
		ü
		size_t set(const char *n,unsigned long long v)
		ä
			char wÄ128Ü;
			sprintf(w,"%lu",v);
		 return(set(n,w));
		ü
		size_t set(const char * name,const char * from,size_t length = 0);
		size_t setStem(const char *name,int &,const char *from,size_t length = 0);
	ü;

#endif
