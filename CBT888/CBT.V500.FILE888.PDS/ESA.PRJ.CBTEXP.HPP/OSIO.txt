#ifndef _OSIO
#define _OSIO
/***
* The following definition was generated by the DSECT2C utility from
* the expansion of the MVS/XA DFP Release 2.0 DCBD macro.
*
* Note that the compiler option BITFIELD(1) is required for successful
* compilation.
***/


#if !defined(_XL2)
#define _XL2
typedef struct
  {
  char BF : 16;
  } XL2;
#endif

#if !defined(_AL2)
#define _AL2
typedef struct
  {
  char BF : 16;
  } AL2;
#endif

#if !defined(_BL2)
#define _BL2
typedef struct
  {
  char BF : 16;
  } BL2;
#endif

#if !defined(_FL3)
#define _FL3
typedef struct
  {
  char BF : 24;
  } FL3;
#endif

#if !defined(_XL4)
#define _XL4
typedef struct
  {
  char BF : 32;
  } XL4;
#endif

#if !defined(_CL12)
#define _CL12
typedef char CL12(|12|);
#endif

#if !defined(_AL3)
#define _AL3
typedef struct
  {
  char BF : 24;
  } AL3;
#endif

#if !defined(_CL8)
#define _CL8
typedef char CL8(|8|);
#endif

#if !defined(_CL4)
#define _CL4
typedef char CL4(|4|);
#endif


typedef struct IHADCB
  {
  union
    {
    struct
      {
#define DCBBIT0 128
#define DCBBIT1 64
#define DCBBIT2 32
#define DCBBIT3 16
#define DCBBIT4 8
#define DCBBIT5 4
#define DCBBIT6 2
#define DCBBIT7 1
      CL4 dcbrelad;
      signed char dcbkeycn;
      CL8 dcbfdad;
      } _s0;
    struct
      {
      char _f0(|12|);
      void *dcbdvtbl(|0|);
      char _f1;
      AL3 dcbdvtba;
      signed char _f2;
      char _f3;
#define DCBDV311 0x21
#define DCBDV301 0x22
#define DCBDV303 0x23
#define DCBDV302 0x24
#define DCBDV321 0x25
#define DCBD1305 0x26
#define DCBDV305 0x27
#define DCBDV314 0x28
#define DCBDV330 0x29
#define DCBDV340 0x2A
#define DCBDV350 0x2B
#define DCBDV375 0x2C
#define DCBDV331 0x2D
#define DCBDV380 0x2E
      short dcbtrbal;
      } _s1;
    struct
      {
      CL12 _f4;
      int dcbblkct;
      char dcbtrtch;
#define DCBMTE 0x23
#define DCBMTT 0x3B
#define DCBMTC 0x13
#define DCBMTET 0x2B
      char _f5;
#define DCBDVMT 0x81
#define DCBDVMT3 0x83
#define DCBDVMT4 0x80
      char dcbden;
#define DCBMTDN0 0x03
#define DCBMTDN1 0x43
#define DCBMTDN2 0x83
#define DCBMTDN3 0xC3
#define DCBMTDN4 0xD3
      char _f6;
      } _s2;
    struct
      {
      char _f7(|8|);
      void *dcblctbl;
      XL4 _f8;
      char dcbcode;
#define DCBPTCDN 0x80
#define DCBPTCDI 0x40
#define DCBPTCDF 0x20
#define DCBPTCDB 0x10
#define DCBPTCDC 0x08
#define DCBPTCDA 0x04
#define DCBPTCDT 0x02
      char _f9;
#define DCBDVPTP 0x50
      char _f10;
      char dcbptflg;
#define DCBPTIC 16
#define DCBPTECT 8
#define DCBPTECR 4
#define DCBPTUCT 2
#define DCBPTERR 1
      } _s3;
    struct
      {
      char _f11(|16|);
      char dcbprtsp;
#define DCBPRSP0 0x01
#define DCBPRSP1 0x09
#define DCBPRSP2 0x11
#define DCBPRSP3 0x19
      char _f12;
#define DCBDVPR1 0x48
#define DCBDVPR2 0x4A
#define DCBDVPR3 0x49
#define DCBDVPR4 0x4B
#define DCBDVPRT 0x4D
#define DCBDVPR5 0x4E
      char dcbprtov;
#define DCBPRC9 0x20
#define DCBPRC12 0x10
      char dcbprbyt;
#define DCBTRCID 3
      char _f13;
      } _s4;
    struct
      {
      char _f14(|16|);
      char dcbmode(|0|);
      char dcbstack;
#define DCBMODEC 128
#define DCBMODEE 64
#define DCBMODEO 32
#define DCBMODER 16
#define DCBSTCK2 2
#define DCBSTCK1 1
      char _f15;
#define DCBDVCR0 0x41
#define DCBDVCP0 0x42
#define DCBDVCRP 0x43
#define DCBDVCR1 0x44
#define DCBDVCPR 0x45
#define DCBDVCR2 0x46
#define DCBDVCP1 0x4C
      char _f16;
      char dcbfunc;
#define DCBFNCBI 128
#define DCBFNCBR 64
#define DCBFNCBP 32
#define DCBFNCBW 16
#define DCBFNCBD 8
#define DCBFNCBX 4
#define DCBFNCBT 2
      } _s5;
    struct
      {
      void *dcbwtoid(|0|);
      char _f17;
      AL3 dcbwtoia;
      } _s6;
    struct
      {
      char _f18(|4|);
      void *dcberrcn(|0|);
      char _f19;
      AL3 dcberrca;
      } _s7;
    struct
      {
      char _f20(|4|);
      char dcblnnum;
      char dcblfmat;
      char dcborflg;
#define DCBEOPFG 128
      char _f21;
      void *dcbdsply(|0|);
      CL4 dcbfrid(|0|);
      char _f22;
      AL3 dcbdspla;
      void *dcbrescn(|0|);
      void *dcbrdlne(|0|);
      void *dcbfrtba(|0|);
      char _f23;
      AL3 dcbresca(|0|);
      AL3 dcbrdlna;
      char dcborbyt;
#define DCBORSYN 128
#define DCBOREOF 64
#define DCBORBFP 32
      char _f24;
#define DCBDVOR5 0x5A
#define DCBDVOR7 0x5B
#define DCBDVOR8 0x5C
#define DCBDVOR9 0x57
      char dcbeib;
#define DCBORNRM 64
#define DCBORREJ 32
#define DCBORERR 16
#define DCBORECK 8
#define DCBORWLR 4
#define DCBORHPR 2
#define DCBORDCK 1
      char _f25;
      } _s8;
    CL8 dcbssid;
    struct
      {
      void *_f26(|0|);
      void *dcbqsmex;
      void *dcbssad(|0|);
      void *dcbimg(|0|);
      char _f27;
      AL3 dcbssada;
      void *dcbimage(|0|);
      char dcbmrfg;
#define DCBMRBCT 192
      AL3 dcbimaga;
      void *dcbecblt(|0|);
      void *dcbhdr(|0|);
      char dcbmrind;
#define DCBMRDCT 224
#define DCBMRSCU 16
#define DCBMRPLO 8
#define DCBMRPLS 4
#define DCBMRERP 2
#define DCBMRERS 1
      AL3 dcbecbla;
      char dcbmrflg;
#define DCBMRSCC 128
#define DCBMRDBG 64
#define DCBMRDRU 32
#define DCBMRDR 16
#define DCBMRPCC 12
#define DCBMRDWT 2
#define DCBMRUE 1
      char _f28;
#define DCBDVMR 0x5D
#define DCBDVORS 0x5F
#define DCBDVMRS 0x56
#define DCBDVDRI 0x59
      char dcbappin;
      char _f29;
      } _s9;
    struct
      {
      char _f30(|16|);
      int dcbrelb(|0|);
      unsigned char dcbkeyle;
      char dcbdevt(|0|);
#define DCBDVTRM 0x4F
      FL3 dcbrel;
      void *dcbbufcb(|0|);
      unsigned char dcbbufno;
      AL3 dcbbufca;
      short dcbbufl;
      BL2 dcbdsorg(|0|);
      char dcbdsrg1;
#define DCBDSGIS 128
#define DCBDSGPS 64
#define DCBDSGDA 32
#define DCBDSGCX 16
#define DCBDSGPO 2
#define DCBDSGU 1
      char dcbdsrg2;
#define DCBDSGGS 128
#define DCBDSGTX 64
#define DCBDSGTQ 32
#define DCBACBM 8
#define DCBDSGTR 4
      void *dcbiobad(|0|);
      void *dcbicqe(|0|);
      void *dcbodeb(|0|);
      signed char dcblnp(|0|);
      char dcbqslm;
#define DCB1DVDS 128
#define DCBUPDCM 64
#define DCBUPDBT 48
#define DCBUPDT 32
#define DCBNUPD 48
#define DCBSVDEB 16
      AL3 dcbiobaa(|0|);
      AL3 dcbicqea(|0|);
      AL3 dcbodeba;
      } _s10;
    struct
      {
      char _f31(|28|);
      void *dcbsvcxl(|0|);
      char _f32;
      AL3 dcbsvcxa;
      void *dcbeodad(|0|);
      char dcbhiarc(|0|);
      char dcbbftek(|0|);
      char dcbbfaln;
#define DCBH1 128
#define DCBBFT 112
#define DCBBFTA 96
#define DCBBFTR 32
#define DCBBFTS 64
#define DCBBFTKR 32
#define DCBBFTE 16
#define DCBBFTKD 8
#define DCBBFTK 8
#define DCBBXLRI 104
#define DCBH0 4
#define DCBBFA 3
#define DCBBFAD 2
#define DCBBFAF1 1
#define DCBBFAF2 3
      AL3 dcbeoda;
      void *dcbexlst(|0|);
      char dcbrecfm;
#define DCBRECLA 224
#define DCBRECD 32
#define DCBRECL 192
#define DCBRECF 128
#define DCBRECV 64
#define DCBRECU 192
#define DCBRECTO 32
#define DCBRECBR 16
#define DCBRECSB 8
#define DCBRECCC 6
#define DCBRECCA 4
#define DCBRECCM 2
#define DCBRECC 0x00
#define DCBRECKL 1
      AL3 dcbexlsa;
      } _s11;
    };
  union
    {
    struct
      {
      CL8 dcbddnam;
      char dcboflgs;
#define DCBOFLWR 128
#define DCBOFIOD 128
#define DCBOFLRB 64
#define DCBOFEOV 32
#define DCBOFOPN 16
#define DCBOFPPC 8
#define DCBOFTM 4
#define DCBOFUEX 2
#define DCBOFIOF 1
      char dcbiflg;
#define DCBIBEC 192
#define DCBIFNEP 0x00
#define DCBEX 64
#define DCBIFPEC 192
#define DCBIBPCT 48
#define DCBIFC9 32
#define DCBIFC12 16
#define DCBIBIOE 12
#define DCBIFER 0x00
#define DCBIFNE1 4
#define DCBIFTIM 4
#define DCBIFNE2 8
#define DCBIFNE3 12
      BL2 dcbmacr(|0|);
      char dcbmacr1;
#define DCBMRECP 128
#define DCBMRFE 64
#define DCBMRGET 64
#define DCBMRPTQ 64
#define DCBMRAPG 32
#define DCBMRRD 32
#define DCBMRWRQ 32
#define DCBMRCI 16
#define DCBMRMVG 16
#define DCBMRRDK 16
#define DCBMRLCG 8
#define DCBMRRDI 8
#define DCBMRABC 4
#define DCBMRPT1 4
#define DCBMRSBG 4
#define DCBMRDBF 4
#define DCBPGFXA 2
#define DCBMRCRL 2
#define DCBMRCHK 2
#define DCBMRRDX 2
#define DCBMRDMG 1
#define DCBMRCK 1
      char dcbmacr2;
#define DCBMRSTL 128
#define DCBMRPUT 64
#define DCBMRGTQ 64
#define DCBMRWRT 32
#define DCBMRRDQ 32
#define DCBMRMVP 16
#define DCBMRWRK 16
#define DCBMR5WD 8
#define DCBMRLDM 8
#define DCBMRLCP 8
#define DCBMRIDW 8
#define DCBMR4WD 4
#define DCBMRPT2 4
#define DCBMRTMD 4
#define DCBMRUIP 4
#define DCBMR3WD 2
#define DCBMRCTL 2
#define DCBMRSTK 2
#define DCBMRAWR 2
#define DCBMR1WD 1
#define DCBMRSWA 1
#define DCBMRDMD 1
#define DCBMRSTI 1
#define DCBLNGXE 52
      } _s12;
    struct
      {
      AL2 dcbtiot;
      BL2 dcbmacrf(|0|);
      char dcbmacf1;
      char dcbmacf2;
      void *dcbdebad(|0|);
      char dcbiflgs;
#define DCBIFEC 192
#define DCBIFPCT 48
#define DCBIFIOE 12
#define DCBIFLDT 2
      AL3 dcbdeba;
      } _s13;
    struct
      {
      char _f33(|8|);
      void *dcbread(|0|);
      void *dcbwrite(|0|);
      char dcboflg;
      AL3 dcbreada(|0|);
      AL3 dcbwrita;
      } _s14;
    struct
      {
      char _f34(|8|);
      void *dcbget(|0|);
      void *dcbput(|0|);
      char dcboflg1;
      AL3 dcbgeta(|0|);
      AL3 dcbputa;
      } _s15;
    };
  void *dcbgerr(|0|);
  void *dcbperr(|0|);
  void *dcbcheck(|0|);
  char dcboptcd;
#define DCBOPTW 128
#define DCBOPTU 64
#define DCBOPTC 32
#define DCBOPTH 16
#define DCBOPTO 16
#define DCBBCKPT 16
#define DCBOPTQ 8
#define DCBOPTZ 4
#define DCBSRCHD 4
#define DCBOPTT 2
#define DCBOPTJ 1
  AL3 dcbgerra(|0|);
  AL3 dcbperra(|0|);
  AL3 dcbchcka;
  void *dcbsynad(|0|);
  signed char dcbiobl;
  AL3 dcbsyna;
  char dcbflag1(|0|);
  char dcbcind1;
#define DCBCNTOV 128
#define DCBSTQCK 128
#define DCBSTFLS 64
#define DCBCNSRD 64
#define DCBCNEVB 32
#define DCBCNEVA 16
#define DCBCNCI 8
#define DCBCNBRM 4
#define DCBCNEXB 1
  char dcbcind2;
#define DCBCNSTO 128
#define DCBCNWR0 64
#define DCBCNCLO 32
#define DCBCNIOE 16
#define DCBCNBFP 8
#define DCBCNCHS 4
#define DCBCNFEO 2
#define DCBCNQSM 1
  short dcbblksi;
  char dcbwcpo;
  signed char dcbwcpl;
  char dcboffsr;
  char dcboffsw;
  union
    {
    void *dcbioba;
    struct
      {
      void *dcbcicb(|0|);
      char _f35;
      AL3 dcbcicba;
      } _s16;
    };
  union
    {
    struct
      {
      char _f36(|8|);
      short dcbdirct(|0|);
      char dcbqsws(|0|);
#define DCBPOPEN 4
      char dcbusasi;
#define DCBBLBP 64
#define DCBQADFS 56
#define DCBQADF1 32
#define DCBQADF2 16
#define DCBQADF3 8
#define DCB3525A 2
#define DCBQSTRU 1
      unsigned char dcbbufof(|0|);
      signed char dcbdircq;
      } _s17;
    struct
      {
      void *dcbeobr(|0|);
      unsigned char dcbncp;
      AL3 dcbeobra;
      void *dcbeobw;
      short _f37;
      short dcblrecl;
      void *dcbcntrl(|0|);
      void *dcbnote(|0|);
      void *dcbpoint;
#define DCBLNGBS 88
#define DCBLNGPO 88
      } _s18;
    struct
      {
      void *dcblccw(|0|);
      void *dcbeobad;
      void *dcbcccw(|0|);
      void *dcbrecad(|0|);
      char dcbrecbt;
#define DCBRCREL 240
#define DCBRCTRU 128
#define DCBRCFGT 64
      AL3 dcbreca;
      char _f38;
      signed char _f39;
      short _f40;
      void *_f41(|0|);
      char dcberopt;
#define DCBERACC 128
#define DCBERSKP 64
#define DCBERABE 32
#define DCBERBAM 1
      AL3 dcbxlrec(|0|);
      AL3 _f42;
      XL2 _f43;
      short dcbprecl;
      void *dcbeob;
#define DCBLNGQS 96
#define DCBLNGPS 96
      } _s19;
    };
    struct {                    /* extra fields for C support      */
      char *_;                  /* reserved                        */
      char *_ri_info;           /* record interface information    */
      char *_bs_info;           /* BSAM interface information      */
      char *_USER;              /* for user use                    */
    } _extension;
  } DCB_t;




#define DCBAPPIN                        _s9.dcbappin
#define DCBBFALN                        _s11.dcbbfaln
#define DCBBFTEK                        _s11.dcbbftek(|0|)
#define DCBBLKCT                        _s2.dcbblkct
#define DCBBLKSI                        dcbblksi
#define DCBBUFCA                        _s10.dcbbufca
#define DCBBUFCB                        _s10.dcbbufcb(|0|)
#define DCBBUFL                         _s10.dcbbufl
#define DCBBUFNO                        _s10.dcbbufno
#define DCBBUFOF                        _s17.dcbbufof(|0|)
#define DCBCCCW                         _s19.dcbcccw(|0|)
#define DCBCHCKA                        dcbchcka
#define DCBCHECK                        dcbcheck(|0|)
#define DCBCICB                         _s16.dcbcicb(|0|)
#define DCBCICBA                        _s16.dcbcicba
#define DCBCIND1                        dcbcind1
#define DCBCIND2                        dcbcind2
#define DCBCNTRL                        _s18.dcbcntrl(|0|)
#define DCBCODE                         _s3.dcbcode
#define DCBDDNAM                        _s12.dcbddnam
#define DCBDEBA                         _s13.dcbdeba
#define DCBDEBAD                        _s13.dcbdebad(|0|)
#define DCBDEN                          _s2.dcbden
#define DCBDEVT                         _s10.dcbdevt(|0|)
#define DCBDIRCQ                        _s17.dcbdircq
#define DCBDIRCT                        _s17.dcbdirct(|0|)
#define DCBDSORG                        _s10.dcbdsorg(|0|)
#define DCBDSPLA                        _s8.dcbdspla
#define DCBDSPLY                        _s8.dcbdsply(|0|)
#define DCBDSRG1                        _s10.dcbdsrg1
#define DCBDSRG2                        _s10.dcbdsrg2
#define DCBDVTBA                        _s1.dcbdvtba
#define DCBDVTBL                        _s1.dcbdvtbl(|0|)
#define DCBECBLA                        _s9.dcbecbla
#define DCBECBLT                        _s9.dcbecblt(|0|)
#define DCBEIB                          _s8.dcbeib
#define DCBEOB                          _s19.dcbeob
#define DCBEOBAD                        _s19.dcbeobad
#define DCBEOBR                         _s18.dcbeobr(|0|)
#define DCBEOBRA                        _s18.dcbeobra
#define DCBEOBW                         _s18.dcbeobw
#define DCBEODA                         _s11.dcbeoda
#define DCBEODAD                        _s11.dcbeodad(|0|)
#define DCBEROPT                        _s19.dcberopt
#define DCBERRCA                        _s7.dcberrca
#define DCBERRCN                        _s7.dcberrcn(|0|)
#define DCBEXLSA                        _s11.dcbexlsa
#define DCBEXLST                        _s11.dcbexlst(|0|)
#define DCBFDAD                         _s0.dcbfdad
#define DCBFLAG1                        dcbflag1(|0|)
#define DCBFRID                         _s8.dcbfrid(|0|)
#define DCBFRTBA                        _s8.dcbfrtba(|0|)
#define DCBFUNC                         _s5.dcbfunc
#define DCBGERR                         dcbgerr(|0|)
#define DCBGERRA                        dcbgerra(|0|)
#define DCBGET                          _s15.dcbget(|0|)
#define DCBGETA                         _s15.dcbgeta(|0|)
#define DCBHDR                          _s9.dcbhdr(|0|)
#define DCBHIARC                        _s11.dcbhiarc(|0|)
#define DCBICQE                         _s10.dcbicqe(|0|)
#define DCBICQEA                        _s10.dcbicqea(|0|)
#define DCBIFLG                         _s12.dcbiflg
#define DCBIFLGS                        _s13.dcbiflgs
#define DCBIMAGA                        _s9.dcbimaga
#define DCBIMAGE                        _s9.dcbimage(|0|)
#define DCBIMG                          _s9.dcbimg(|0|)
#define DCBIOBA                         dcbioba
#define DCBIOBAA                        _s10.dcbiobaa(|0|)
#define DCBIOBAD                        _s10.dcbiobad(|0|)
#define DCBIOBL                         dcbiobl
#define DCBKEYCN                        _s0.dcbkeycn
#define DCBKEYLE                        _s10.dcbkeyle
#define DCBLCCW                         _s19.dcblccw(|0|)
#define DCBLCTBL                        _s3.dcblctbl
#define DCBLFMAT                        _s8.dcblfmat
#define DCBLNNUM                        _s8.dcblnnum
#define DCBLNP                          _s10.dcblnp(|0|)
#define DCBLRECL                        _s18.dcblrecl
#define DCBMACF1                        _s13.dcbmacf1
#define DCBMACF2                        _s13.dcbmacf2
#define DCBMACR                         _s12.dcbmacr(|0|)
#define DCBMACRF                        _s13.dcbmacrf(|0|)
#define DCBMACR1                        _s12.dcbmacr1
#define DCBMACR2                        _s12.dcbmacr2
#define DCBMODE                         _s5.dcbmode(|0|)
#define DCBMRFG                         _s9.dcbmrfg
#define DCBMRFLG                        _s9.dcbmrflg
#define DCBMRIND                        _s9.dcbmrind
#define DCBNCP                          _s18.dcbncp
#define DCBNOTE                         _s18.dcbnote(|0|)
#define DCBODEB                         _s10.dcbodeb(|0|)
#define DCBODEBA                        _s10.dcbodeba
#define DCBOFFSR                        dcboffsr
#define DCBOFFSW                        dcboffsw
#define DCBOFLG                         _s14.dcboflg
#define DCBOFLGS                        _s12.dcboflgs
#define DCBOFLG1                        _s15.dcboflg1
#define DCBOPTCD                        dcboptcd
#define DCBORBYT                        _s8.dcborbyt
#define DCBORFLG                        _s8.dcborflg
#define DCBPERR                         dcbperr(|0|)
#define DCBPERRA                        dcbperra(|0|)
#define DCBPOINT                        _s18.dcbpoint
#define DCBPRBYT                        _s4.dcbprbyt
#define DCBPRECL                        _s19.dcbprecl
#define DCBPRTOV                        _s4.dcbprtov
#define DCBPRTSP                        _s4.dcbprtsp
#define DCBPTFLG                        _s3.dcbptflg
#define DCBPUT                          _s15.dcbput(|0|)
#define DCBPUTA                         _s15.dcbputa
#define DCBQSLM                         _s10.dcbqslm
#define DCBQSMEX                        _s9.dcbqsmex
#define DCBQSWS                         _s17.dcbqsws(|0|)
#define DCBRDLNA                        _s8.dcbrdlna
#define DCBRDLNE                        _s8.dcbrdlne(|0|)
#define DCBREAD                         _s14.dcbread(|0|)
#define DCBREADA                        _s14.dcbreada(|0|)
#define DCBRECA                         _s19.dcbreca
#define DCBRECAD                        _s19.dcbrecad(|0|)
#define DCBRECBT                        _s19.dcbrecbt
#define DCBRECFM                        _s11.dcbrecfm
#define DCBREL                          _s10.dcbrel
#define DCBRELAD                        _s0.dcbrelad
#define DCBRELB                         _s10.dcbrelb(|0|)
#define DCBRESCA                        _s8.dcbresca(|0|)
#define DCBRESCN                        _s8.dcbrescn(|0|)
#define DCBSSAD                         _s9.dcbssad(|0|)
#define DCBSSADA                        _s9.dcbssada
#define DCBSSID                         dcbssid
#define DCBSTACK                        _s5.dcbstack
#define DCBSVCXA                        _s11.dcbsvcxa
#define DCBSVCXL                        _s11.dcbsvcxl(|0|)
#define DCBSYNA                         dcbsyna
#define DCBSYNAD                        dcbsynad(|0|)
#define DCBTIOT                         _s13.dcbtiot
#define DCBTRBAL                        _s1.dcbtrbal
#define DCBTRTCH                        _s2.dcbtrtch
#define DCBUSASI                        _s17.dcbusasi
#define DCBWCPL                         dcbwcpl
#define DCBWCPO                         dcbwcpo
#define DCBWRITA                        _s14.dcbwrita
#define DCBWRITE                        _s14.dcbwrite(|0|)
#define DCBWTOIA                        _s6.dcbwtoia
#define DCBWTOID                        _s6.dcbwtoid(|0|)
#define DCBXLREC                        _s19.dcbxlrec(|0|)


#define DCBUSER                         _extension._USER

#define DCBLRC_X ((short) 0x8000) /* DCBLRECL value for LRECL=X      */

typedef unsigned DECB_t Ý5¨ ;     /* DECB definition                 */

typedef struct {                  /* exit list entry definition      */
   enum {INACTIVE, INHDR, OUTHDR, INTLR, OUTTLR, OPEN, EOV, JFCB,
         USER_TOTAL=10, BLK_COUNT, DEFER_INTLR, DEFER_NONSTD_INTLR,
         FCB=16, ABEND, JFCBE=21, TAPE_MOUNT=23, SECURITY=24,
         LAST=128, SYNAD=256} exit_code;    /* exit type             */
   union {
      __remote int (*exit_addr)();          /* exit function address */
      void *area_addr;            /* pseudo-exit (e.g., JFCB) address*/
   };
} exit_t;

typedef struct {                  /* record-oriented file position   */
   unsigned _blkaddr;             /* block address (TTRz or blkno)   */
   unsigned _recno;               /* record number within block      */
} ospos_t;

               /* argument values for osflush */

#define QUIESCE 0                 /* quiesce I/O, no input flush     */
#define SYNCH 1                   /* purge I/O and synchronize file  */
#define PURGE 1
#define CONCAT 2                  /* unlike concatenation in progress*/
#define REPOS 3                   /* purge I/O for repositioning, do */
                                  /* not issue TCLOSE                */

#ifdef __cplusplus
extern "C" {
#endif


extern DCB_t *osbdcb(exit_t Ý¨ );
extern int osbopen(DCB_t *, const char *);
extern int osbopenj(DCB_t *,  const char *);
extern void osbclose(DCB_t *, const char *, int);
extern void ostclose(DCB_t *, const char *);
extern int osfind(DCB_t *, const char *);
extern int osfindc(DCB_t *, unsigned);
extern int osbldl(DCB_t *, void *);
extern int osstow(DCB_t *, const void *, char);
extern void osread(DECB_t, DCB_t *, void *, int);
extern void oswrite(DECB_t, DCB_t *, const void *, int);
extern int oscheck(DECB_t);
extern unsigned osnote(DCB_t *);
extern void ospoint(DCB_t *, unsigned);
extern DCB_t *osdcb(const char *, const char *, exit_t Ý¨ ,char **);
extern int osopen(DCB_t *, const char *, int);
extern int osopenj(DCB_t *, const char *, int);
extern int osclose(DCB_t *, const char *);
extern int osget(DCB_t *, void **, int *);
extern int osput(DCB_t *, const void *, int);
extern int osflush(DCB_t *, int);
extern int ostell(DCB_t *, ospos_t *);
extern int osseek(DCB_t *, ospos_t);
#ifdef __cplusplus

}
#endif
#endif
