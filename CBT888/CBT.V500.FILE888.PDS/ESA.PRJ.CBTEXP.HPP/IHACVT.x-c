#pragma pack(packed)

struct cvt ä
  void          *cvttcbp;      /* -  Address of PSATNEW.                   @PTC          */
  void          *cvt0ef00;     /* - ADDRESS OF ROUTINE TO SCHEDULE                       */
  void          *cvtlink;      /* -  ADDRESS OF DCB FOR SYS1.LINKLIB DATA SET.           */
  void          *cvtauscb;     /* - ADDRESS OF ASSIGN/UNASSIGN SERVICE    @H1A           */
  void          *cvtbuf;       /* -        ADDRESS OF THE BUFFER OF THE RESIDENT         */
  void          *cvtxapg;      /* -  ADDRESS OF I/O SUPERVISOR APPENDAGE VECTOR          */
  void          *cvt0vl00;     /* - ADDRESS OF ENTRY POINT OF THE TASK                   */
  void          *cvtpcnvt;     /* - ADDRESS OF ENTRY POINT OF THE ROUTINE                */
  void          *cvtprltv;     /* - ADDRESS OF ENTRY POINT OF THE ROUTINE                */
  void          *cvtllcb;      /* -  ADDRESS OF THE LLCB.                  @P1M          */
  void          *cvtlltrm;     /* - ADDRESS OF LLA'S MEMORY TERNIMATION   @P1M           */
  void          *cvtxtler;     /* - ADDRESS OF ERROR RECOVERY PROCEDURE (ERP)            */
  void          *cvtsysad;     /* -        UCB ADDRESS FOR THE SYSTEM RESIDENCE          */
  void          *cvtbterm;     /* - ADDRESS OF ENTRY POINT OF THE ABTERM                 */
  int            cvtdate;      /* -        CURRENT DATE IN PACKED DECIMAL                */
  void          *cvtmslt;      /* -  ADDRESS OF THE MASTER COMMON AREA IN                */
  void          *cvtzdtab;     /* - ADDRESS OF I/O DEVICE                                */
  void          *cvtxitp;      /* -  ADDRESS OF ERROR INTERPRETER ROUTINE                */
  void          *cvt0ef01;     /* ENTRY POINT IN STAGE II EXIT EFFECTOR @02C             */
  struct ä
    short int      _cvtvss;  /* VECTOR SECTION SIZE                   @D5A */
    short int      _cvtvpsm; /* VECTOR PARTIAL SUM NUMBER             @D5A */
    ü cvtvprm;
  short int      cvtexit;      /* -           AN SVC 3 INSTRUCTION.  EXIT TO        @PBA */
  short int      cvtbret;      /* -           A BR 14 INSTRUCTION.  RETURN TO       @PBA */
  void          *cvtsvdcb;     /* - ADDRESS OF THE DCB FOR THE SYS1.SVCLIB               */
  void          *cvttpc;       /* -   ADDRESS OF THE TIMER SUPERVISOR WORK AREA          */
  struct ä
    unsigned char  _cvtflgc0; /* -   Flags                                 @0IA */
    unsigned char  _cvtflgc1; /* -   Flags                                 @0IA */
    short int      _cvticpid; /* -   IPL'ED CPU PHYSICAL ID            @ZA51978 */
    ü cvtflgcs;
  unsigned char  cvtcvtÄ4Ü;    /* -   CVT ACRONYM IN EBCDIC (EYE-CATCHER)   @PCA         */
  void          *cvtcucb;      /* -  ADDRESS OF THE UNIT CONTOL MODULE (UCM)             */
  void          *cvtqte00;     /* - ADDRESS OF THE TIMER ENQUEUE ROUTINE FOR             */
  void          *cvtqtd00;     /* - ADDRESS OF THE TIMER DEQUEUE ROUTINE FOR             */
  void          *cvtstb;       /* -   ADDRESS OF THE I/O DEVICE             @LDC         */
  unsigned char  cvtdcb;       /* -     OPERATING SYSTEM FOR                  @LGC       */
  int            cvtdcba : 24; /* - ADDRESS OF THE DCB FOR THE SYS1.LOGREC               */
  int            cvtsv76m;     /* -        SVC 76 MESSAGE COUNT FIELD (OS/VS2)           */
  void          *cvtixavl;     /* - ADDRESS OF THE I/O SUPERVISOR'S FREELIST             */
  void          *cvtnucb;      /* -        RESERVED                (MDCXXX)  @YA19285    */
  void          *cvtfbosv;     /* - ADDRESS OF PROGRAM FETCH ROUTINE  @G860P46           */
  void          *cvt0ds;       /* -   ADDRESS OF ENTRY POINT OF THE DISPATCHER           */
  void          *cvtecvt;      /* -  POINTER TO THE EXTENDED CVT           @LJC          */
  void          *cvtdairx;     /* -        ADDRESS OF THE 31- BIT ENTRY          @L4A    */
  void          *cvtmser;      /* -  ADDRESS OF DATA AREA OF MASTER SCHEDULER            */
  void          *cvt0pt01;     /* - ADDRESS OF BRANCH ENTRY POINT OF POST                */
  void          *cvttvt;       /* -        ADDRESS OF TSO VECTOR TABLE       @ZA65725    */
  int            cvt040id;     /* -        IFB040I WTO MESSAGE ID.               @09C    */
  unsigned char  cvtmz00Ä4Ü;   /* - HIGHEST ADDRESS IN VIRTUAL STORAGE FOR               */
  void          *cvt1ef00;     /* -        ADDRESS OF ROUTINE WHICH CREATES IRB'S        */
  void          *cvtqocr;      /* -        GRAPHICS INTERFACE TASK (GFX) FIELD.          */
  void          *cvtqmwr;      /* -  ADDRESS OF THE ALLOCATION COMMUNICATION             */
  short int      cvtsnctr;     /* -        SERIAL NUMBER COUNTER FOR ASSIGNING SERIAL    */
  unsigned char  cvtopta;      /* -     OPTION INDICATORS                     @LBC       */
  unsigned char  cvtoptb;      /* -     MISCELLANEOUS FLAGS                   @LBC       */
  void          *cvtqcdsr;     /* - CDE SEARCH ROUTINE ADDRESS  (OS/VS2)                 */
  void          *cvtqlpaq;     /* - ADDRESS OF POINTER TO MOST RECENT ENTRY              */
  void          *cvtenfct;     /* EVENT NOTIFICATION CONTROL TABLE                       */
  void          *cvtsmca;      /* -        ADDRESS OF THE SYSTEM MANAGEMENT CONTROL      */
  void          *cvtabend;     /* -  ADDRESS OF SECONDARY CVT FOR ABEND IN EOT           */
  void          *cvtuser;      /* -        A WORD AVAILABLE TO THE USER                  */
  void          *cvtmdlds;     /* -        RESERVED FOR MODEL-DEPENDENT SUPPORT          */
  short int      cvtqabst;     /* -           AN SVC 13 (ABEND) INVOCATION (OS/VS2) @PDA */
  short int      cvtlnksc;     /* -           AN SVC  6 (LINK) INVOCATION           @PDA */
  void          *cvttsce;      /* -        ADDRESS OF THE FIRST TIME SLICE CONTROL       */
  void          *cvtpatch;     /* - ADDRESS OF A 200-BYTE FE PATCH AREA                  */
  void          *cvtrms;       /* -   RECOVERY MANAGEMENT SUPPORT (RMS)                  */
  void          *cvtspdme;     /* -        SERVICE PROCESSOR DAMAGE MONITOR  @ZA57793    */
  void          *cvt0scr1;     /* - ADDRESS OF THE SECTOR CALCULATION ROUTINE            */
  struct ä
    unsigned char  _cvtgtfst;     /* -      GTF FLAG BYTES                      ICB312 */
    int            _cvtgtfa : 24; /* -ADDRESS OF MAIN MONITOR CALL ROUTING             */
    ü cvtgtf;
  struct ä
    unsigned char  _cvttcmfg;      /* -       TCAM FLAGS            */
    int            _cvtaqavb : 24; /* -      SAME AS CVTAQAVT ABOVE */
    ü cvtaqavt;
  unsigned char  cvtrs0f4Ä4Ü;  /* RESERVED                              @LFC             */
  void          *cvtsaf;       /* -        ADDRESS OF ROUTER VECTOR TABLE.       @L5A    */
  void          *cvtext1;      /* - ADDRESS OF OS - OS/VS COMMON EXTENSION               */
  void          *cvtcbsp;      /* -        ADDRESS OF ACCESS METHOD CONTROL BLOCK        */
  struct ä
    unsigned char  _filler1;       /* -     RESERVED - FIRST BYTE OF CVTPURG      @LFC  */
    int            _cvtpurga : 24; /* -      ADDRESS OF SUBSYSTEM PURGE ROUTINE  ICB330 */
    ü cvtpurg;
  unsigned char  cvtamffÄ4Ü;   /* -     RESERVED FOR ACCESS METHOD FLAGS    ICB436       */
  void          *cvtqmsg;      /* - ADDRESS OF INFORMATION TO BE      @G860P46           */
  struct ä
    unsigned char  _cvtdmsrf;      /* -     OPEN/CLOSE/EOV FLAG BYTE.  SETTING BOTH    */
    int            _cvtdmsra : 24; /* -      ADDRESS OF THE OPEN/CLOSE/EOV SUPERVISORY */
    ü cvtdmsr;
  void          *cvtsfr;       /* - ADDRESS OF SETFRR ROUTINE         @G383P9A           */
  void          *cvtgxl;       /* - ADDRESS OF CONTENTS SUPERVISION   @G860P46           */
  void          *cvtreal;      /* -        ADDRESS OF THE VIRTUAL STORAGE    @G860P46    */
  void          *cvtptrv;      /* -  ADDRESS OF PAGING SUPERVISOR GENERAL  @L1C          */
  void          *cvtihvp;      /* - POINTER TO IHV$COMM. INITIALIZED TO   @06C           */
  void          *cvtjesct;     /* - ADDRESS OF JOB ENTRY SUBSYSTEM (JES)                 */
  unsigned char  cvtrs12cÄ4Ü;  /* -     RESERVED                              @LFC       */
  int            cvttz;        /* -        DIFFERENCE BETWEEN LOCAL TIME AND     @LBC    */
  void          *cvtmchpr;     /* -        ADDRESS OF MACHINE CHECK PARAMETER LIST       */
  void          *cvteorm;      /* -        POTENTIAL REAL HIGH STORAGE ADDRESS.  @LBC    */
  void          *cvtptrv3;     /* - ADDRESS OF PAGING SUPERVISOR ROUTINE  @L1A           */
  void          *cvtlkrm;      /* ADDRESS OF CML LOCK RESOURCE      @G860P46             */
  struct ä
    unsigned char  _filler2;      /* -     RESERVED - FIRST BYTE OF CVTAPF       @LFC */
    int            _cvtapfa : 24; /* ADDRESS OF BRANCH ENTRY POINT IN                 */
    ü cvtapf;
  struct ä
    unsigned char  _filler3;       /* -     RESERVED - FIRST BYTE OF CVTEXT2      @LFC */
    int            _cvtext2a : 24; /* SAME AS CVTEXT2 ABOVE               ICB330       */
    ü cvtext2;
  struct ä
    unsigned char  _filler4;       /* -     RESERVED - FIRST BYTE OF CVTHJES      @LFC */
    int            _cvthjesa : 24; /* -      ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM   */
    ü cvthjes;
  struct ä
    unsigned char  _cvtrstcp;    /* -     LOGICAL CPU ADDRESS OF TARGET OF  @ZA84941 */
    unsigned char  _cvtrstrs;    /* -     RESTART REASON.                   @ZA84941 */
    unsigned char  _filler5Ä2Ü;  /* -     RESERVED FOR RESTART FLIH         @ZA84941 */
    ü cvtrstw2;
  unsigned char  cvtsnameÄ8Ü;  /* SYSTEM NAME FOR CURRENT SYSTEM.                        */
  void          *cvtgetl;      /* -        ADDRESS OF IKJGETL, TSO GET LINE ROUTINE      */
  void          *cvtlpdsr;     /* - ADDRESS OF LINK PACK AREA (LPA) DIRECTORY            */
  void          *cvtpvtp;      /* -  ADDRESS OF PAGE VECTOR TABLE                        */
  struct ä
    unsigned char  _cvtdirst;      /* -       FLAG BYTE                         @ZA65734 */
    int            _cvtlpdir : 24; /* -      ADDRESS OF LINK PACK AREA (LPA) DIRECTORY   */
    ü cvtlpdia;
  void          *cvtrbcb;      /* -        ADDRESS OF THE RECORD BUFFER'S        @LEC    */
  unsigned char  cvtrs170Ä4Ü;  /* -     RESERVED                              @LFC       */
  struct ä
    unsigned char  _cvtsylk;      /* -       SUPERVISOR LOCK.  ONLY ENABLED TASKS MAY  */
    int            _cvtslid : 24; /* -      SAME AS CVTSLIDA ABOVE            @ZA65734 */
    ü cvtslida;
  struct ä
    unsigned char  _cvtflag1; /* -     FLAG BYTE                             @0CC */
    unsigned char  _cvtflag2; /* -     FLAG BYTE                             @0CA */
    unsigned char  _cvtflag3; /* -     FLAG BYTE                             @0CA */
    unsigned char  _cvtflag4; /* -     FLAG BYTE                             @0CA */
    ü cvtflags;
  void          *cvtrt03;      /* - ADDRESS OF SRB TIMING             @G383P9A           */
  unsigned char  cvtrs180Ä8Ü;  /* - RESERVED                              @LOC           */
  void          *cvtexsnr;     /* - ADDRESS OF EXCESSIVE SPIN NOTIFICATION               */
  unsigned char  cvtexsnl;     /* -     SERIALIZATION BYTE FOR EXCESSIVE SPIN            */
  unsigned char  cvtspvlk;     /* -      NUMBER OF TASKS WHICH HAVE TERMINATED           */
  unsigned char  cvtctlfg;     /* -     SYSTEM CONTROL FLAGS                  @LBC       */
  char           cvtapg;       /* -      DISPATCHING PRIORITY OF AUTOMATIC PRIORITY      */
  unsigned char  cvttraceÄ2Ü;  /* -          RESERVED             @(DCR670)    @G860P46  */
  unsigned char  cvttrac2Ä2Ü;  /* -          RESERVED             @(DCR670)    @G860P46  */
  void          *cvtrscn;      /* - ADDRESS OF ROUTINE TO SCAN TCB TREE                  */
  void          *cvttas;       /* -        ADDRESS OF ROUTINE TO TRANSFER ADDRESS        */
  void          *cvttrcrm;     /* -        ADDRESS POINTER OF THE SYSTEM     @G860P46    */
  void          *cvtshrvm;     /* -        LOWEST ADDRESS OF SHARED VIRTUAL STORAGE      */
  void          *cvt0vl01;     /* - ENTRY POINT ADDRESS OF VALIDITY CHECK                */
  void          *cvtppgmx;     /* -  ADDRESS POINTER FOR MVS/370-XA.   @G860P46          */
  unsigned char  cvtgrsst;     /* -     GRS status. SERIALIZATION: None.      @0DA       */
  unsigned char  cvtrs1adÄ3Ü;  /* -     Reserved                              @0DC       */
  void          *cvtgvt;       /* -      ADDRESS OF THE GRS VECTOR TABLE   @G383P9A      */
  void          *cvtascrf;     /* -        CREATED ASCB QUEUE HEADER                     */
  void          *cvtascrl;     /* -        CREATED ASCB QUEUE TRAILER                    */
  void          *cvtputl;      /* -        ADDRESS OF IKJPUTL, TSO PUT LINE ROUTINE      */
  void          *cvtsrbrt;     /* - DISPATCHER RETURN ADDRESS FOR SRB ROUTINES           */
  void          *cvtolt0a;     /* - BRANCH ENTRY TO OLTEP MEMORY TERMINATION             */
  void          *cvtsmfex;     /* - BRANCH ENTRY TO SYSTEM MANAGEMENT                    */
  void          *cvtcspie;     /* -        ENTRY POINT ADDRESS OF THE SUPERVISOR         */
  void          *cvtptgt;      /* -        ADDRESS OF IKJPTGT, TSO PUTGET ROUTINE        */
  unsigned char  cvtsigpt;     /* -     SIGP TIMEOUT VALUE.                   @07A       */
  unsigned char  cvtspdmc;     /* -     SERVICE PROCESSOR DAMAGE MACHINE  @ZA57793       */
  unsigned char  cvtdssac;     /* -     DYNAMIC SUPPORT SYSTEM (DSS) ACTIVATED           */
  unsigned char  cvtrs1d7;     /* -     RESERVED                              @LFC       */
  void          *cvtstck;      /* -        ADDRESS OF IKJSTCK, TSO STACK ROUTINE         */
  short int      cvtmaxmp;     /* -        MAXIMUM PHYSICAL CPU ADDRESS      @G860P46    */
  unsigned char  cvtbsm2Ä2Ü;   /* -     RETURN VIA REG 2, BSM 0,2.            @L4A       */
  void          *cvtscan;      /* -        ADDRESS OF IKJSCAN, TSO SCAN ROUTINE          */
  void          *cvtauthl;     /* -        POINTER TO AUTHORIZED LIBRARY TABLE.  @LWC    */
  void          *cvtbldcp;     /* - BRANCH ENTRY TO BUILD POOL          MDC003           */
  void          *cvtgetcl;     /* - BRANCH ENTRY TO GET CELL            MDC004           */
  void          *cvtfrecl;     /* - BRANCH ENTRY TO FREE CELL           MDC005           */
  void          *cvtdelcp;     /* - BRANCH ENTRY TO DELETE POOL         MDC006           */
  void          *cvtcrmn;      /* - BRANCH ENTRY TO SVC 120 (GETMAIN/FREEMAIN            */
  void          *cvtcras;      /* - POINTER DEFINED ADDRESS OF BRANCH  @G860PVB          */
  void          *cvtqsas;      /* - POINTER DEFINED ADDRESS OF        @G860PVB           */
  void          *cvtfras;      /* - POINTER DEFINED ENTRY TO TASK      @G860PVB          */
  void          *cvts1ee;      /* - BRANCH ENTRY TO STAGE 1 EXIT EFFECTOR                */
  void          *cvtpars;      /* -        ADDRESS OF IKJPARS, TSO PARSE ROUTINE         */
  void          *cvtquis;      /* - BRANCH ENTRY TO QUIESCE             MDC013           */
  void          *cvtstxu;      /* -        BRANCH ENTRY TO ATTENTION EXIT EPILOGUE       */
  void          *cvtopte;      /* - BRANCH ENTRY ADDRESS TO SYSEVENT    MDC015           */
  void          *cvtsdrm;      /* -        BRANCH ENTRY ADDRESS OF THE RESOURCE          */
  void          *cvtcsrt;      /* - POINTER TO CALLABLE SERVICE REQUEST   @D9C           */
  void          *cvtaqtop;     /* - POINTER TO THE ALLOCATION QUEUE   @G860P46           */
  void          *cvtvvmdi;     /* -        CONSTANT USED BY PAGED LINK PACK AREA         */
  void          *cvtasvt;      /* -        POINTER TO ADDRESS SPACE VECTOR TABLE         */
  void          *cvtgda;       /* -        POINTER TO GLOBAL DATA AREA (GDA) IN SQA      */
  void          *cvtascbh;     /* - POINTER TO HIGHEST PRIORITY ADDRESS SPACE            */
  void          *cvtascbl;     /* - POINTER TO LOWEST PRIORITY ASCB ON THE               */
  void          *cvtrtmct;     /* -        POINTER TO RECOVERY/TERMINATION CONTROL       */
  void          *cvtsv60;      /* - BRANCH ENTRY ADDRESS FOR              @D8C           */
  void          *cvtsdmp;      /* - ADDRESS OF SVC DUMP BRANCH        @G860P46           */
  void          *cvtscbp;      /* - ADDRESS OF SCB PURGE RESOURCE     @G860P46           */
  unsigned char  cvtsdbfÄ4Ü;   /* - ADDRESS OF 4K SQA BUFFER USED BY SVC                 */
  void          *cvtrtms;      /* -        ADDRESS OF SERVICABILITY LEVEL INDICATOR      */
  void          *cvttpios;     /* -        ADDRESS OF THE TELEPROCESSING I/O             */
  void          *cvtsic;       /* -        BRANCH ADDRESS OF THE ROUTINE TO SCHEDULE     */
  void          *cvtopctp;     /* - ADDRESS OF SYSTEM RESOURCES MANAGER (SRM)            */
  void          *cvtexpro;     /* - ADDRESS OF EXIT PROLOGUE/TYPE 1 EXIT                 */
  void          *cvtgsmq;      /* -  ADDRESS OF GLOBAL SERVICE MANAGER QUEUE             */
  void          *cvtlsmq;      /* -  ADDRESS OF LOCAL SERVICE MANAGER QUEUE              */
  unsigned char  cvtrs26cÄ4Ü;  /* -  RESERVED.                             @LZC          */
  void          *cvtvwait;     /* - ADDRESS OF WAIT ROUTINE             MDC048           */
  void          *cvtparrl;     /* - ADDRESS OF PARTIALLY LOADED       @G860P46           */
  void          *cvtapft;      /* -        ADDRESS OF AUTHORIZED PROGRAM FACILITY        */
  void          *cvtqcs01;     /* - BRANCH ENTRY ADDRESS TO PROGRAM MANAGER              */
  int            cvtfqcb;      /* -        FORMERLY USED BY ENQ/DEQ.         @G383P9A    */
  int            cvtlqcb;      /* -        FORMERLY USED BY ENQ/DEQ.         @G383P9A    */
  void          *cvtrenq;      /* - RESOURCE MANAGER ADDRESS FOR ENQ  @G860P46           */
  void          *cvtrspie;     /* -  RESOURCE MANAGER FOR              @G860P46          */
  void          *cvtlkrma;     /* - RESOURCE MANAGER ADDRESS FOR LOCK @G860P46           */
  void          *cvtcsd;       /* -        VIRTUAL ADDRESS OF COMMON SYSTEM DATA AREA    */
  void          *cvtdqiqe;     /* - RESOURCE MANAGER FOR EXIT         @G860P46           */
  void          *cvtrpost;     /* - RESOURCE MANAGER FOR POST.        @G860P46           */
  void          *cvt062r1;     /* - BRANCH ENTRY TO DETACH              MDC060           */
  void          *cvtveac0;     /* - ASCBCHAP BRANCH ENTRY               MDC061           */
  void          *cvtglmn;      /* - GLOBAL BRANCH ENTRY ADDRESS FOR                      */
  void          *cvtspsa;      /* - POINTER TO GLOBAL WORK/SAVE AREA VECTOR              */
  void          *cvtwsal;      /* - ADDRESS OF TABLE OF LENGTHS OF LOCAL                 */
  void          *cvtwsag;      /* - ADDRESS OF TABLE OF LENGTHS OF GLOBAL                */
  void          *cvtwsac;      /* - ADDRESS OF TABLE OF LENGTHS OF CPU                   */
  void          *cvtrecrq;     /* - ADDRESS OF THE RECORDING REQUEST  @G860P46           */
  void          *cvtasmvt;     /* -    POINTER TO AUXILIARY STORAGE MANAGEMENT           */
  void          *cvtiobp;      /* - ADDRESS OF THE BLOCK PROCESSOR CVT                   */
  void          *cvtspost;     /* - POST RESOURCE MANAGER TERMINATION ROUTINE            */
  struct ä
    short int      _cvtrstci;    /* -        CPU ID OF THE CPU HOLDING THE     @ZA84941 */
    unsigned char  _cvtrstriÄ2Ü; /* -     IDENTIFIER OF OWNING ROUTINE      @ZA84941    */
    ü cvtrstwd;
  void          *cvtfetch;     /* - ADDRESS OF ENTRY POINT FOR BASIC  @G860P46           */
  void          *cvt044r2;     /* - ADDRESS OF IGC044R2 IN CHAP SERVICE                  */
  void          *cvtperfm;     /* -        ADDRESS OF THE PERFORMANCE WORK AREA.         */
  void          *cvtdair;      /* -        ADDRESS OF IKJDAIR, TSO DYNAMIC               */
  void          *cvtehdef;     /* -        ADDRESS OF IKJEHDEF, TSO DEFAULT  @G860P46    */
  void          *cvtehcir;     /* -        ADDRESS OF IKJEHCIR, TSO CATALOG  @G860P46    */
  void          *cvtssap;      /* -        ADDRESS OF SYSTEM SAVE AREA       @ZA65734    */
  void          *cvtaidvt;     /* -        POINTER TO APPENDAGE ID VECTOR TABLE          */
  void          *cvtipcds;     /* - BRANCH ENTRY FOR DIRECT SIGNAL                       */
  void          *cvtipcri;     /* - BRANCH ENTRY FOR REMOTE IMMEDIATE                    */
  void          *cvtipcrp;     /* - BRANCH ENTRY FOR REMOTE PENDABLE                     */
  void          *cvtpccat;     /* -        POINTER TO PHYSICAL CCA VECTOR TABLE          */
  void          *cvtlccat;     /* -        POINTER TO LOGICAL CCA VECTOR TABLE           */
  void          *cvtxsft;      /* - ADDRESS OF SYSTEM FUNCTION TABLE  @G383P9A           */
  void          *cvtxstks;     /* - ADDRESS OF PCLINK STACK           @G383P9A           */
  void          *cvtxstkn;     /* - ADDRESS OF PCLINK STACK (SAVE=NO) @G383P9A           */
  void          *cvtxunss;     /* - ADDRESS OF PCLINK UNSTACK         @G383P9A           */
  void          *cvtpwi;       /* -        ADDRESS OF THE WINDOW INTERCEPT ROUTINE       */
  void          *cvtpvbp;      /* -        ADDRESS OF THE VIRTUAL BLOCK PROCESSOR        */
  void          *cvtmfctl;     /* -        POINTER TO MEASUREMENT FACILITY CONTROL       */
  void          *cvtmfrtr;     /* -  IF MEASUREMENT FACILITY IS ACTIVE,                  */
  void          *cvtvpsib;     /* - BRANCH ENTRY TO PAGE SERVICES     @G860PVB           */
  void          *cvtvsi;       /* - POINTER DEFINED, BRANCH ENTRY     @G860P46           */
  void          *cvtexcl;      /* - ADDRESS POINTER TO THE EXCP           @D3A           */
  void          *cvtxunsn;     /* - ADDRESS OF PCLINK UNSTACK         @G383P9A           */
  void          *cvtisnbr;     /* - ENTRY POINT ADDRESS OF DISABLED       @LLA           */
  void          *cvtxextr;     /* - ADDRESS OF PCLINK EXTRACT ROUTINE                    */
  void          *cvtmsfrm;     /* - ADDRESS OF THE PROCESSOR          @G860P46           */
  void          *cvtscpin;     /* -        ADDRESS OF SCPINFO DATA           @G871A9A    */
  void          *cvtwsma;      /* ADDRESS OF WAIT STATE MESSAGE AREA    @LLC             */
  void          *cvtrmbr;      /* - ADDRESS OF REGMAIN BRANCH ENTRY.    MDC123           */
  void          *cvtlfrm;      /* - LIST FORMAT FREEMAIN BRANCH ENTRY   MDC124           */
  void          *cvtgmbr;      /* - LIST FORMAT GETMAIN BRANCH ENTRY    MDC125           */
  void          *cvt0tc0a;     /* -        ADDRESS OF TASK CLOSE MODULE        MDC128    */
  int            cvtrlstg;     /* -        SIZE OF ACTUAL REAL STORAGE ONLINE  @0GC      */
  void          *cvtspfrr;     /* - 'SUPER FRR' ADDRESS (ADDRESS OF   @G860P46           */
  unsigned char  cvtrs360Ä4Ü;  /* - RESERVED.                             @LZC           */
  void          *cvtsvt;       /* - ADDRESS POINTER FOR FETCH                            */
  void          *cvtirecm;     /* -        ADDRESS OF INITIATOR RESOURCE       MDC158    */
  void          *cvtdarcm;     /* -        ADDRESS OF DEVICE ALLOCATION        MDC159    */
  void          *cvt0pt02;     /* - ADDRESS OF POST ENTRY POINT         MDC160           */
  unsigned char  cvtrs374Ä4Ü;  /* RESERVED                              @LOC             */
  void          *cvtwtcb;      /* -  ADDRESS OF WAIT STATE TCB.          MDC164          */
  void          *cvtvacr;      /* -        ACR/VARY CPU CHANNEL RECOVERY       MDC178    */
  void          *cvtrecon;     /* -        VARY CPU SHUTDOWN ROUTINE         @G860PVB    */
  void          *cvtgtfr8;     /* - GENERALIZED TRACE FACILITY (GTF)    MDC180           */
  void          *cvtvstop;     /* - ADDRESS OF VARY CPU STOP CPU        MDC169           */
  void          *cvtvpsa;      /* -        ADDRESS OF COPY OF SYSGEN'ED PSA -  MDC170    */
  void          *cvtrmptt;     /* -        ADDRESS OF ISTRAMA1, THE VTAM     @Z30AP9A    */
  void          *cvtrmpmt;     /* -        ADDRESS OF ISTRAMA2, THE VTAM     @Z30AP9A    */
  void          *cvtexp1;      /* - ADDRESS OF EXIT PROLOGUE WHICH      MDC173           */
  void          *cvtcsdrl;     /* -        REAL ADDRESS OF COMMON SYSTEM DATA  MDC174    */
  void          *cvtssrb;      /* - STATUS STOP SRB ENTRY.              MDC175           */
  unsigned char  cvtrs3a4Ä4Ü;  /* -     RESERVED                              @LFC       */
  void          *cvtqv1;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC181           */
  void          *cvtqv2;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC182           */
  void          *cvtqv3;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC183           */
  void          *cvtgsda;      /* - ADDRESS OF GLOBAL SYSTEM DUPLEX       @L7C           */
  void          *cvtadv;       /* - ADDRESS OF ADDRESS VERIFICATION     MDC186           */
  void          *cvttpio;      /* -   ADDRESS OF VTAM TPIO (SVC 124)      MDC193         */
  unsigned char  cvtrs3c0Ä4Ü;  /* -     RESERVED                              @LFC       */
  void          *cvtevent;     /* - BRANCH ENTRY ADDRESS TO EVENTS    @G860P46           */
  void          *cvtsscr;      /* -        ADDRESS OF STORAGE SYSTEM         @Z30LP9A    */
  void          *cvtcbbr;      /* - BRANCH ENTRY ADDRESS TO           @Z30EN9A           */
  void          *cvteff02;     /* -        ADDRESS OF IKJEFF02, TSO MESSAGE  @ZM30972    */
  void          *cvtlsch;      /* - ADDRESS OF LOCAL SCHEDULE.        @G50EP9A           */
  void          *cvtcdeq;      /* -        ADDRESS OF PROGRAM MANAGER        @G50EP9A    */
  void          *cvthsm;       /* -        POINTER TO HIERARCHICAL STORAGE   @ZA27771    */
  void          *cvtrac;       /* -        ADDRESS OF ACCESS CONTROL CVT.    @Z40RP9A    */
  void          *cvtcgk;       /* -  ADDRESS OF ROUTINE USED TO CHANGE @G860P46          */
  void          *cvtsrm;       /* - ADDRESS OF ENTRY TABLE FOR SRM,   @G50IP9A           */
  void          *cvt0pt0e;     /* - ENTRY POINT TO IDENTIFY POST EXIT @Z40EP9A           */
  void          *cvt0pt03;     /* - POST REINVOCATION ENTRY POINT     @Z40EP9A           */
  void          *cvttcasp;     /* -        POINTER TO THE TSO/VTAM TERMINAL  @Z40DQ9A    */
  void          *cvtcttvt;     /* -        CTT VT                                @PVC    */
  void          *cvtjterm;     /* - POINTER DEFINED ADDRESS OF        @G860PVB           */
  void          *cvtrsume;     /* - ADDRESS OF RESUME FUNCTION.       @G383P9A           */
  void          *cvttctl;      /* - ADDRESS OF TRANSFER CONTROL       @Z40FP9A           */
  void          *cvtrmt;       /* -        ADDRESS OF RESOURCE MANAGER           @LGC    */
  void          *cvtt6svc;     /* - ENTRY POINT ADDRESS FOR TYPE 6    @Z40FP9A           */
  void          *cvtsusp;      /* - ADDRESS OF SUSPEND ROUTINE.       @Z40FP9A           */
  void          *cvtihasu;     /* - ADDRESS OF BIT STRING.  (MDC355)  @Z404P9A           */
  void          *cvtsfv;       /* - ADDRESS OF SETFRR ROUTINE ABOVE 16M   @N3A           */
  void          *cvtidevn;     /* - ADDRESS OF DEVICE NUMBER CONVERSION   @LGC           */
  void          *cvtsmf83;     /* -        ADDRESS OF BRANCH ENTRY TO        @G741P9A    */
  void          *cvtsmfsp;     /* - ADDRESS OF SMF SUSPEND HANDLER.   @G860P46           */
  void          *cvtmsfcb;     /* -        ADDRESS OF MAINTENANCE AND        @G871A9A    */
  void          *cvthid;       /* -  ADDRESS OF SCP HOST ID. @(DCR819) @G860P46          */
  void          *cvtpsxm;      /* - ADDRESS OF CROSS MEMORY PAGE      @G860PVB           */
  void          *cvtucbsc;     /* - ADDRESS OF UCB SCAN               @G860P46           */
  void          *cvttpur;      /* -        DDR QUEUE OF TAPE UNIT-RECORD         @L2A    */
  void          *cvtdpur;      /* -        DDR QUEUE OF DASD SWAP REQUESTS.      @L2A    */
  void          *cvttrpos;     /* -        DDR QUEUE OF TAPES TO BE              @L2A    */
  void          *cvtrestx;     /* - VIRTUAL ADDRESS OF TEXT TO BE         @L2A           */
  short int      cvtxcpct;     /* -      MAXIMUM EXCP COUNT PER ADDRESS        @L2A      */
  short int      cvtcall;      /* -           A BASSM 14,15 INSTRUCTION.  POINTER   @PDA */
  void          *cvtvfind;     /* - THE POINTER TO VIRTUAL FETCH BUILD    @L8A           */
  void          *cvtvfget;     /* - THE POINTER TO VIRTUAL FETCH GET      @L8A           */
  void          *cvtvfmem;     /* RESERVED. THIS FIELD IS NO LONGER    @MLC              */
  void          *cvtvfcb;      /* -        THE POINTER TO VIRTUAL FETCH INTERNAL @L8A    */
  void          *cvtpgser;     /* - POINTER DEFINED ADDRESS OF ENTRY   @G860P46          */
  void          *cvttski;      /* - POINTER DEFINED ADDRESS OF TASK   @G860PVB           */
  void          *cvtcpgub;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */
  void          *cvtcpgup;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */
  void          *cvtcpgtc;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */
  void          *cvtcpfre;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */
  void          *cvtslist;     /* - POINTER DEFINED ADDRESS OF VSM    @G860PVB           */
  void          *cvtsregn;     /* - POINTER DEFINED ADDRESS OF VSM    @G860PVB           */
  void          *cvtsloc;      /* - POINTER DEFINED ADDRESS OF VSM     @G860PVB          */
  void          *cvtcpbdb;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */
  void          *cvtcpdlb;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */
  void          *cvtdoffs;     /* -        STARTING REAL ADDRESS OF DAT-OFF  @G860PVB    */
  void          *cvtdoffe;     /* -        ENDING REAL ADDRESS OF DAT-OFF    @G860PVB    */
  void          *cvtrcep;      /* - ADDRESS OF THE RSM CONTROL AND    @G860PVB           */
  void          *cvtcpgus;     /* - ADDRESS OF CPOOL GET              @G860P46           */
  void          *cvtgrrgn;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */
  void          *cvtgvrgn;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */
  unsigned char  cvtionlv;     /* -     DEFAULT VALUE OF                  @G860P46       */
  unsigned char  cvtrs4a1Ä3Ü;  /* -     RESERVED                              @LFC       */
  unsigned char  cvtrczrtÄ2Ü;  /* -       SET REGISTER 15 TO ZERO.          @G860PVB     */
  unsigned char  _filler6Ä2Ü;  /* -   RETURN VIA A BSM.                 @G860PVB         */
  unsigned char  cvtfuncÄ4Ü;   /* -     Reserved for solution/offering use.   @M6A       */
  void          *cvtsmext;     /* - ADDRESS OF STORAGE MAP EXTENSION. @G860PVB           */
  void          *cvtnucmp;     /* -        ADDRESS OF NUCLEUS MAP.           @G860PVB    */
  unsigned char  cvtxafl;      /* -     FLAG BYTE FOR MVS/XA PROCESSING.  @G860P46       */
  unsigned char  cvtrs4b5Ä3Ü;  /* -     RESERVED                              @LFC       */
  void          *cvtvtam;      /* -        ADDRESS OF VTAM COMMAND PROCESSOR @G860P46    */
  void          *cvtspip;      /* -        ADDRESS OF RTM INTERFACE TO       @ZA65734    */
  struct ä
    void          *_cvtdfa; /* - ADDRESS OF DFP ID TABLE, MAPPED BY    @P8A */
    ü cvtckras;
  void          *cvtnvt0;      /* - ADDRESS OF DATA IN DAT-ON NUCLEUS @G860P46           */
  void          *cvtcsomf;     /* -        OWNER OF CHANNEL MEASUREMENT      @G860P46    */
  void          *cvtcsoal;     /* -        OWNER OF ADDRESS LIMIT FACILITY.  @G860P46    */
  void          *cvtichpt;     /* -        ADDRESS OF THE INSTALLED CHANNEL  @G860P46    */
  void          *cvtcsocr;     /* -        CHANNEL SUBSYSTEM OWNER - CHANNEL @G860P46    */
  void          *cvtcsocs;     /* -        CHANNEL SUBSYSTEM OWNER - CHANNEL @G860P46    */
  void          *cvtllta;      /* -        LINK LIST TABLE ADDRESS.          @G860P46    */
  void          *cvtdcqa;      /* -   ADDRESS OF DEVICE CLASS QUEUE         @LDC         */
  void          *cvtucba;      /* -   ADDRESS OF THE FIRST UCB IN THE       @LDC         */
  void          *cvtvestu;     /* - ADDRESS OF THE ENTRY POINT OF THE @G860P46           */
  void          *cvtnuclu;     /* - ADDRESS TO SUPPORT THE NUCLEUS    @G860P46           */
  struct ä
    unsigned char  _cvtoslv0; /* BYTE 0 OF CVTOSLVL                    @LRC */
    unsigned char  _cvtoslv1; /* BYTE 1 OF CVTOSLVL                    @MBC */
    unsigned char  _cvtoslv2; /* BYTE 2 OF CVTOSLVL                    @PTC */
    unsigned char  _cvtoslv3; /* BYTE 3 OF CVTOSLVL                    @N5C */
    unsigned char  _cvtoslv4; /* BYTE 4 OF CVTOSLVL                    @H5C */
    unsigned char  _cvtoslv5; /* BYTE 5 OF CVTOSLVL                    @N2C */
    unsigned char  _cvtoslv6; /* BYTE 6 OF CVTOSLVL                    @LGA */
    unsigned char  _cvtoslv7; /* BYTE 7 OF CVTOSLVL                    @LGA */
    unsigned char  _cvtoslv8; /* BYTE 8 OF CVTOSLVL                    @0MC */
    unsigned char  _cvtoslv9; /* BYTE 9 OF CVTOSLVL                    @LGA */
    unsigned char  _cvtoslva; /* BYTE 10 OF CVTOSLVL                   @LGA */
    unsigned char  _cvtoslvb; /* BYTE 11 OF CVTOSLVL                   @LGA */
    unsigned char  _cvtoslvc; /* BYTE 12 OF CVTOSLVL                   @LGA */
    unsigned char  _cvtoslvd; /* BYTE 13 OF CVTOSLVL                   @LGA */
    unsigned char  _cvtoslve; /* BYTE 14 OF CVTOSLVL                   @LGA */
    unsigned char  _cvtoslvf; /* BYTE 15 OF CVTOSLVL                   @LGA */
    ü cvtoslvl;
  ü;

#define cvtvss   cvtvprm._cvtvss
#define cvtvpsm  cvtvprm._cvtvpsm
#define cvtflgc0 cvtflgcs._cvtflgc0
#define cvtflgc1 cvtflgcs._cvtflgc1
#define cvticpid cvtflgcs._cvticpid
#define cvtgtfst cvtgtf._cvtgtfst
#define cvtgtfa  cvtgtf._cvtgtfa
#define cvttcmfg cvtaqavt._cvttcmfg
#define cvtaqavb cvtaqavt._cvtaqavb
#define cvtpurga cvtpurg._cvtpurga
#define cvtdmsrf cvtdmsr._cvtdmsrf
#define cvtdmsra cvtdmsr._cvtdmsra
#define cvtapfa  cvtapf._cvtapfa
#define cvtext2a cvtext2._cvtext2a
#define cvthjesa cvthjes._cvthjesa
#define cvtrstcp cvtrstw2._cvtrstcp
#define cvtrstrs cvtrstw2._cvtrstrs
#define cvtdirst cvtlpdia._cvtdirst
#define cvtlpdir cvtlpdia._cvtlpdir
#define cvtsylk  cvtslida._cvtsylk
#define cvtslid  cvtslida._cvtslid
#define cvtflag1 cvtflags._cvtflag1
#define cvtflag2 cvtflags._cvtflag2
#define cvtflag3 cvtflags._cvtflag3
#define cvtflag4 cvtflags._cvtflag4
#define cvtrstci cvtrstwd._cvtrstci
#define cvtrstri cvtrstwd._cvtrstri
#define cvtdfa   cvtckras._cvtdfa
#define cvtoslv0 cvtoslvl._cvtoslv0
#define cvtoslv1 cvtoslvl._cvtoslv1
#define cvtoslv2 cvtoslvl._cvtoslv2
#define cvtoslv3 cvtoslvl._cvtoslv3
#define cvtoslv4 cvtoslvl._cvtoslv4
#define cvtoslv5 cvtoslvl._cvtoslv5
#define cvtoslv6 cvtoslvl._cvtoslv6
#define cvtoslv7 cvtoslvl._cvtoslv7
#define cvtoslv8 cvtoslvl._cvtoslv8
#define cvtoslv9 cvtoslvl._cvtoslv9
#define cvtoslva cvtoslvl._cvtoslva
#define cvtoslvb cvtoslvl._cvtoslvb
#define cvtoslvc cvtoslvl._cvtoslvc
#define cvtoslvd cvtoslvl._cvtoslvd
#define cvtoslve cvtoslvl._cvtoslve
#define cvtoslvf cvtoslvl._cvtoslvf

/* Values for field "cvtflgc0" */
#define cvtmulnf        0x80 /* -   For users of IFAUSAGE, REQUEST=FUNCTIONxxx     */

/* Values for field "cvtdcb" */
#define cvtmvse         0x80 /* -       S/370-XA MODE EXECUTION           @G860PVB */
#define cvt1sss         0x40 /* -       OPTION 1 (PCP) SSS. ALSO, LANGUAGE    @H3C */
#define cvt2sps         0x20 /* -       OPTION 2 (MFT) SPS, OS/VS1, VSE       @PHC */
#define cvt4ms1         0x10 /* -       OPTION 4 (MVT) MS1, OS/VS2                 */
#define cvtosext        0x08 /* -       INDICATOR THAT THE CVTOSLVL AREA IS   @LGA */
#define cvt4mps         0x04 /* -       MODEL 65 MULTIPROCESSING                   */
#define cvt6dat         0x02 /* -       DYNAMIC ADDRESS TRANSLATION BY CPU         */
#define cvtmvs2         0x01 /* -       MULTIPLE MEMORY OPTION OF OS/VS2 IS        */
#define cvt8aos2        0x12 /* - OS/VS2 SYSTEM                                    */

/* Values for field "cvtopta" */
#define cvtcch          0x80 /* -       CHANNEL CHECK HANDLER (CCH) OPTION PRESENT */
#define cvtapr          0x40 /* -       ALTERNATE PATH RETRY (APR) OPTION PRESENT  */
#define cvtddr          0x20 /* -       DYNAMIC DEVICE RECONFIGURATION (DDR)       */
#define cvtnip          0x10 /* -       NIP IS EXECUTING                           */
#define cvt121tr        0x04 /* - DO NOT TRANSLATE EXCP V=R.        @ZA45816       */
#define cvtascii        0x02 /* -       ASCII TAPE PROCESSING IS GENERATED IN      */
#define cvtxpfp         0x01 /* -       CPU HAS EXTENDED PRECISION FLOATING POINT  */

/* Values for field "cvtoptb" */
#define cvtprot         0x80 /* -       CPU HAS STORE PROTECTION FEATURE (OS/VS1)  */
#define cvtctims        0x40 /* -       IF ON, HARDWARE HAS THE CLOCK COMPARATOR   */
#define cvttod          0x20 /* -       CPU HAS TIME-OF-DAY CLOCK FEATURE          */
#define cvtnlog         0x10 /* -       SYS1.LOGREC IS UNAVAILABLE FOR ERROR       */
#define cvtapthr        0x08 /* -       NIP SETS THIS BIT TO 1 WHEN DEVICE TESTING */
#define cvtfp           0x04 /* -       CPU HAS FETCH PROTECTION FEATURE (OS/VS1)  */
#define cvtvs1a         0x02 /* -       VS1 ASSIST IS AVAILABLE FOR USE (OS/VS1)   */
#define cvtvs1b         0x01 /* -       VS1 ASSIST SUBSET IS AVAILABLE FOR USE     */

/* Values for field "cvtgtfst" */
#define cvtgtfav        0x80 /* -       IF ZERO, GTF NOT ACTIVE.  IF ONE, GTF      */
#define cvtspd          0x40 /* -       SERVICE PROCESSOR DAMAGE.         @ZA57793 */
#define cvtwspr         0x20 /* -       WAITING FOR SERVICE PROCESSOR     @ZA57793 */
#define cvtusr          0x04 /* -       TRACE=USR SPECIFIED.  USER-REQUESTED TRACE */
#define cvtrnio         0x02 /* -       GTF IS ACTIVE AND TRACING RNIO EVENTS      */

/* Values for field "cvttcmfg" */
#define cvttcrdy        0x80 /* -       TCAM IS READY TO ACCEPT USERS              */
#define cvtldev         0x40 /* -       LOCAL DEVICE ATTACHED TO TCAM              */
#define cvtnwtcm        0x20 /* -       MULTIPLE TCAM FEATURE ACTIVE.         @D1A */

/* Values for field "cvtdmsrf" */
#define cvtsdump        0x80 /* -       SET BY COREZAP.  WILL CAUSE AN SDUMP TO BE */
#define cvtudump        0x40 /* -       SET BY COREZAP.  WILL CAUSE AN ABEND DUMP  */

/* Values for field "cvtdirst" */
#define cvtdicom        0x80 /* -       LPA DIRECTORY HAS BEEN INITIALIZED BY NIP  */

/* Values for field "cvtsylk" */
#define cvtsylks        0xFF /* -       SET LOCK BYTE                              */
#define cvtsylkr        0x00 /* -       RESET LOCK BYTE                            */

/* Values for field "cvtflag1" */
#define cvtrsmwd        0x80 /* -       IF ONE REAL STORAGE MANAGER WINDOW    @L1A */
#define cvtsvprc        0x40 /* -       SERVICE PROCESSOR ARCHITECTURE        @H3C */
#define cvtcuse         0x20 /* -       CUSE. SET BY NIP                      @03A */
#define cvtmvpg         0x10 /* -       IF ONE, MOVEPAGE CAPABILITY IS        @LIA */
#define cvtover         0x08 /* -       SUBPOOL OVERRIDE IS SUPPORTED.        @LRA */
#define cvtcstr         0x04 /* -       IF ONE, CSTRING FACILITY IS PRESENT   @DCA */
#define cvtsubsp        0x02 /* -       IF ONE, SUBSPACE FACILITY IS PRESENT  @LVA */
#define cvtkpar         0x01 /* -       RESERVED FOR USE BY RTM ONLY.         @M2A */

/* Values for field "cvtflag2" */
#define cvtcmpsc        0x80 /* -       IF ONE, INDICATES PRESENCE OF MVS     @0CA */
#define cvtcmpsh        0x40 /* -       IF ONE, INDICATES PRESENCE OF CMPSC   @0CA */
#define cvtsopf         0x20 /* -       IF ONE, INDICATES PRESENCE OF THE     @M9A */
#define cvtbfph         0x10 /* -       If one, indicates presence of              */
#define cvtper2         0x08 /* -       If one, indicates presence of              */
#define cvtiqd          0x04 /* -       If one, indicates that Internal       @MRC */
#define cvtalr          0x02 /* -       If one, indicates ASN and LX Reuse    @MXA */

/* Values for field "cvtflag3" */
#define cvtesame        0x80 /* -                                                  */
#define cvtzarch        0x80 /* -       If one, indicates presence of              */

/* Values for field "cvtflag4" */
#define cvtp001i        0x80 /* If one, indicates that P001 support                */
#define cvtp001a        0x40 /* If one, indicates that the system is               */
#define cvtznalc        0x20 /* zNALC                                 @0JA         */

/* Values for field "cvtctlfg" */
#define cvtdstat        0x10 /* -       DEVSTAT OPTION IN EFFECT.  DEVICE ADDRESS  */
#define cvtdrmod        0x08 /* -       Set on when DRMODE=YES was specified. @MZA */
#define cvtnomp         0x04 /* -       MULTIPROCESSING CODE IS NOT IN THE SYSTEM. */
#define cvtgtrce        0x02 /* -       GENERALIZED TRACE FACILITY (GTF) HAS       */
#define cvtsdtrc        0x01 /* -       SVC DUMP HAS SUPPRESSED SUPERVISOR TRACE.  */

/* Values for field "cvtgrsst" */
#define cvte51gn        0x80 /* -       When on, global resource contention        */
#define cvte51ln        0x40 /* -       When on, local resource contention         */

/* Values for field "cvtmfrtr" */
#define cvtmfact        0x80 /* -       IF ONE, I/O SUPERVISOR AND TIMER SECOND    */

/* Values for field "cvtgsda" */
#define cvtgsdab        0x80 /* -       IF HIGH-ORDER BIT IS ONE, THERE IS  MDC185 */

/* Values for field "cvtfunc" */
#define cvtsoln         0x80 /* -       If high order bit is on, this is not  @M6A */

/* Values for field "cvtxafl" */
#define cvtcsrim        0x80 /* -       EXPLICIT LOAD PROCESSING REQUIRED @G860PVB */

/* Values for field "cvtoslv0" */
#define cvth3310        0x80 /* HBB3310 FUNCTIONS ARE PRESENT         @DBA         */
#define cvtesa          0x80 /* ESA/370 IS SUPPORTED                  @LQA         */
#define cvtxax          0x80 /* ESA/370 IS SUPPORTED (XAX - OLD NAME) @LQC         */
#define cvth4420        0x40 /* HBB4420 FUNCTIONS ARE PRESENT.        @LPA         */
#define cvtj3313        0x20 /* JBB3313 FUNCTIONS ARE PRESENT         @LHA         */
#define cvtj3311        0x10 /* JBB3311 FUNCTIONS ARE PRESENT         @DBA         */
#define cvthiper        0x10 /* HIPERSPACES ARE SUPPORTED             @DAA         */
#define cvth4410        0x08 /* HBB4410 FUNCTIONS ARE PRESENT.        @LKA         */
#define cvtlkr          0x08 /* SPIN LOCK RESTRUCTURE INDICATOR.      @LJA         */
#define cvtucbsv        0x08 /* UCB SERVICES INSTALLED.               @LMA         */
#define cvtcads         0x04 /* SCOPE=COMMON DATA SPACES SUPPORTED    @04A         */
#define cvtcrptl        0x02 /* ENCRYPTION ASYMMETRIC FEATURE IS      @05A         */
#define cvtj4422        0x01 /* JBB4422 FUNCTIONS ARE PRESENT         @LTA         */

/* Values for field "cvtoslv1" */
#define cvth4430        0x80 /* HBB4430 FUNCTIONS ARE PRESENT         @LQA         */
#define cvtdyapf        0x80 /* DYNAMIC APF, THROUGH CSVAPF, PRESENT  @LQA         */
#define cvtwlm          0x40 /* WORKLOAD MANAGER IS INSTALLED         @LYA         */
#define cvth5510        0x20 /* HBB5510 FUNCTIONS ARE PRESENT         @M1A         */
#define cvtdynex        0x20 /* CSVDYNEX FOR DYNAMIC EXITS IS PRESENT @LXA         */
#define cvth5520        0x10 /* HBB5520 FUNCTIONS ARE PRESENT         @M3A         */
#define cvtenclv        0x10 /* ENCLAVES FUNCTION IS PRESENT          @M4A         */
#define cvtj5522        0x08 /* JBB5522 FUNCTIONS ARE PRESENT         @M8A         */
#define cvth5530        0x04 /* HBB6603 FUNCTIONS ARE PRESENT         @MBA         */
#define cvth6603        0x04 /* HBB6603 FUNCTIONS ARE PRESENT         @MDA         */
#define cvtos390_010300 0x04 /* OS/390 R3                             @MEA         */
#define cvtos390_r3     0x04 /* OS/390 R3                             @MEA         */
#define cvtdynl         0x04 /* Dynamic LNKLST, via CSVDYNL, is present            */
#define cvth6601        0x02 /* OS/390 release 1                      @M9A         */
#define cvtos390        0x02 /* OS/390 release 1                      @M9A         */
#define cvtos390_010100 0x02 /* OS/390 R1                             @MEA         */
#define cvtos390_r1     0x02 /* OS/390 R1                             @MEA         */
#define cvtprded        0x02 /* Product enable/disable (IFAEDxxx)     @M9A         */
#define cvtj6602        0x01 /* OS/390 release 2                      @MAA         */
#define cvtos390_010200 0x01 /* OS/390 R2                             @MEA         */
#define cvtos390_r2     0x01 /* OS/390 R2                             @MEA         */
#define cvtparmc        0x01 /* Logical Parmlib Service is available               */

/* Values for field "cvtoslv2" */
#define cvtos390_010400 0x80 /* OS/390 R4                             @MEA         */
#define cvtos390_020400 0x80 /* OS/390 R4                             @PPA         */
#define cvtos390_r4     0x80 /* OS/390 R4                             @MEA         */
#define cvtj6604        0x80 /* OS/390 R4                             @MEA         */
#define cvtdylpa        0x80 /* Dynamic LPA (CSVDYLPA) available      @MEA         */
#define cvtrtls         0x80 /* Runtime Library Services (CSVRTLS)    @MEA         */
#define cvtos390_020500 0x40 /* OS/390 R5                             @MFA         */
#define cvtos390_r5     0x40 /* OS/390 R5                             @MFA         */
#define cvth6605        0x40 /* OS/390 R5                             @MFA         */
#define cvtos390_020600 0x20 /* OS/390 R6                             @MGA         */
#define cvtos390_r6     0x20 /* OS/390 R6                             @MGA         */
#define cvth6606        0x20 /* OS/390 R6                             @MGA         */
#define cvtbfp          0x10 /* Binary Floating Point support         @MGA         */
#define cvtos390_020700 0x08 /* OS/390 R7                             @MHA         */
#define cvtos390_r7     0x08 /* OS/390 R7                             @MHA         */
#define cvtj6607        0x08 /* OS/390 R7                             @MHA         */
#define cvtos390_020800 0x04 /* OS/390 R8                             @MIA         */
#define cvtos390_r8     0x04 /* OS/390 R8                             @MIA         */
#define cvth6608        0x04 /* OS/390 R8                             @MIA         */
#define cvtos390_020900 0x02 /* OS/390 R9                             @MJA         */
#define cvtos390_r9     0x02 /* OS/390 R9                             @MJA         */
#define cvtj6609        0x02 /* OS/390 R9                             @MJA         */
#define cvth6609        0x02 /* OS/390 R9                             @MJA         */
#define cvtos390_021000 0x01 /* OS/390 R10                            @PUC         */
#define cvtos390_r10    0x01 /* OS/390 R10                            @MLA         */
#define cvth7703        0x01 /* OS/390 R10                            @MLA         */

/* Values for field "cvtoslv3" */
#define cvtpause        0x80 /* Pause/Release services are present    @MKA         */
#define cvtpaus2        0x40 /* IEAVAPE2 and related services, and    @N5A         */
#define cvtzos          0x20 /* z/OS V1R1                             @MMA         */
#define cvtzos_010100   0x20 /* z/OS V1R1                             @MMA         */
#define cvtzos_v1r1     0x20 /* z/OS V1R1                             @MMA         */
#define cvtj7713        0x20 /* JBB7713                               @MMA         */
#define cvtlparc        0x20 /* LPAR Clustering is present.           @PWA         */
#define cvtzos_010200   0x10 /* z/OS V1R2                             @MQA         */
#define cvtzos_v1r2     0x10 /* z/OS V1R2                             @MQA         */
#define cvth7705        0x10 /* HBB7705                               @MQA         */
#define cvtv64          0x10 /* 64-bit virtual services are present.  @MQA         */
#define cvtzos_010300   0x08 /* z/OS V1R3                             @MSA         */
#define cvtzos_v1r3     0x08 /* z/OS V1R3                             @MSA         */
#define cvth7706        0x08 /* HBB7706                               @MSA         */
#define cvtzos_010400   0x04 /* z/OS V1R4                             @MUA         */
#define cvtzos_v1r4     0x04 /* z/OS V1R4                             @MUA         */
#define cvth7707        0x04 /* HBB7707                               @MUA         */
#define cvtzos_010500   0x02 /* z/OS V1R5                             @MVA         */
#define cvtzos_v1r5     0x02 /* z/OS V1R5                             @MVA         */
#define cvth7708        0x02 /* HBB7708                               @MVA         */
#define cvtzos_010600   0x01 /* z/OS V1R6                             @MWA         */
#define cvtzos_v1r6     0x01 /* z/OS V1R6                             @MWA         */
#define cvth7709        0x01 /* HBB7709                               @MWA         */

/* Values for field "cvtoslv4" */
#define cvtcsrsi        0x80 /* CSRSI service is available            @0EA         */
#define cvtunics        0x40 /* Unicode callable services available   @MLA         */
#define cvtcsrun        0x20 /* CSRUNIC callable service available    @MLA         */
#define cvtilm          0x10 /* IBM License Manager functions are     @PYM         */
#define cvtalrs         0x08 /* ASN-and-LX-Reuse architecture is      @MXA         */
#define cvtziip         0x02 /* zIIP support is present               @H5A         */
#define cvtsup          0x02 /* zIIP support is present               @H5A         */
#define cvtifar         0x01 /* IFA routine is present                @H4A         */

/* Values for field "cvtoslv5" */
#define cvtzose         0x80 /* z/OS.e                                @MTA         */
#define cvtzosas        0x80 /* z/OS.e                                @MTA         */
#define cvtpuma         0x80 /* z/OS.e                                @MTA         */
#define cvtzos_010700   0x40 /* z/OS V1R7                             @Q3C         */
#define cvtzos_v1r7     0x40 /* z/OS V1R7                             @Q3C         */
#define cvth7720        0x40 /* HBB7720                               @MYA         */
#define cvtzos_010800   0x20 /* z/OS V1R8                             @N2A         */
#define cvtzos_v1r8     0x20 /* z/OS V1R8                             @N2A         */
#define cvth7730        0x20 /* HBB7730                               @N2A         */

/* Values for field "cvtoslv8" */
#define cvtpaus4        0x40 /* Pause with checkpoint-OK              @0MA         */

#pragma pack(reset)
