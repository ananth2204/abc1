#ifndef INCLUDE_STRSERVICE
#define INCLUDE_STRSERVICE
#define _XOPEN_SOURCE_EXTENDED 1
#include <sys/socket.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include "rexxvar.hpp"
#include "ibmdebug.hpp"
#include "iggcsi00.hpp"
#include "subtask.hpp"
#include <sys/types.h>
#include <sys/time.h>
#include <sys/msg.h>
#include <netinet/in.h>
#include "qfss70mu/symbp.hpp"

typedef struct symbp SYMBP;


class StrData;
typedef StrData * reply;
ISIS_EXT_ASM typedef int BPXWDYN(const char *);
ISIS_EXT_ASM typedef int SDSF(void  *);

ISIS_EXT_ASM typedef int IKJTSOEV(int * resv,
								  int * rc,
								  int * abend,
								  int * reason,
								  int * cppl);

ISIS_EXT_ASM typedef int IKJEFTSI(int * ect,
								  int * resv,
								  char * token,
								  int * rc,
								  int * abend,
								  int * reason);
ISIS_EXT_ASM typedef int IKJEFTSR(int * flag,
								  char * cmd,
								  int * length,
								  int * rc,
								  int * abend,
								  int * reason,
								  int * program_parm,
								  char * cppl,
								  char * token);
ISIS_EXT_ASM typedef int IKJEFTST(int * ect,
								  int * resv,
								  char * token,
								  int * rc,
								  int * abend,
								  int * reson);
extern "C"
ä
	typedef int ASASYMBM(char *,int,char *,int *,char *,char *,int *);
ü;

struct sockaddr_un ä
	unsigned char  sun_len;
	unsigned char  sun_family;
	char  sun_pathÄ108Ü;        /* pathname */
ü;

class tcpipClient
ä
protected:
	int socket;
	bool connected;
	short port;
	sockaddr_in   sockaddr;
	sockaddr_un   sockaddrUnix;
	fd_set				readSockets;
	fd_set				writeSockets;
	fd_set			  exceptionSockets;
public:
	static     timeval         timeout;
	static     int             connwait;
	static     char            URLÄ255Ü;
	tcpipClient(short );
	virtual ßtcpipClient();
	int send(char *,size_t);
	int receive(char *,size_t);
private:
	int  diag(char *);

ü;

class CmdService
ä
protected:

	char       buffÄ32768*8Ü;
	char *     service;
	int        ok;
	int        imax;
	int        rc;
	int        abend;
	int        reason;
	reply		   print;
	static     BPXWDYN  * dyn;
	REXXVAR  * rexx;
	//int        printf(const char *, ...);

public:
	static bool debug;
	CmdService(char * s,reply p = NULL):service(s),print(p)
	ä
		//debug = _isis_pf_mi_debug;
		imax  = ok = rc = abend = reason = 0;
		rexx  = new REXXVAR();
	ü
	virtual ßCmdService()
	ä
		if (rexx)
			delete rexx;
		rexx = NULL;
	ü;
	virtual int  cmd(char * ) = 0;
	virtual void diag(const char *);
	virtual int  backFromRexx();
ü;
class TsoCmdService: public CmdService
ä
private:

	IKJEFTSI * tsi;
	IKJEFTSR * tsr;
	IKJEFTST * tst;
	IKJTSOEV * tso;

	int				 flag;
	int        etc;
	int        resv;
	int        length;
	int        program_parm;
	int        cpplTso;
	char       cpplÄ16Ü;
	char       tokenÄ16Ü;
public:
	TsoCmdService(reply=NULL);
	ßTsoCmdService();
	int cmd(char *);
ü;

class UssCmdService:public CmdService
ä
private:
	FILE * replyFile;
public:
	UssCmdService(reply=NULL);
	ßUssCmdService();
	int cmd(char *);
	char * next(char * = NULL);
ü;

class JesCmdService:public CmdService
ä
private:
public:
	JesCmdService(reply=NULL);
	ßJesCmdService();
	int cmd(char *);

ü;


class DsnCmdService:public CmdService
ä
private:
	IGGCSI00 * csi;
	char *     cwork;
	ASASYMBM *   asasymbm;
	SYMBP symbp;
	CSIRetInfo   retinfo_st;
	CSISelFields selfields_st;
	CSIWorkData* csirwork_pst;
	CSIEntryData *p;
public:
	DsnCmdService(reply=NULL);
	ßDsnCmdService();
	int cmd(char *,char * =NULL);
	int cmd(char * a)
	ä
		return(cmd(a,NULL));
	ü
ü;

class OperCmdService:public CmdService , public tcpipClient
ä
private:
public:
	OperCmdService(reply=NULL);
	ßOperCmdService();
	int cmd(char *);
ü;

class SdsfCmdService: public CmdService
ä
private:
	SDSF * sdsf;
	FILE * file;
	programArguments arg;
public:
	SdsfCmdService(reply=NULL);
	ßSdsfCmdService();
	int cmd(char *);
ü;

class MxServerCmdService:public CmdService , public tcpipClient
ä
private:
public:
	MxServerCmdService(reply=NULL);
	ßMxServerCmdService();
	int cmd(char *);
ü;


class RexxServerCmdService:public CmdService, public tcpipClient
ä
private:
public:
	RexxServerCmdService(reply=NULL);
	ßRexxServerCmdService();
	int cmd(char *);
ü;


#endif
