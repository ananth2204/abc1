#pragma pack(packed)

struct pgthj ä
  unsigned char  pgthjidÄ4Ü;        /* "gthj"                        */
  unsigned char  pgthjlimitj;       /* A, S, X                       */
  int            pgthjoffj : 24;    /* Offset of next PgthJ          */
  unsigned char  pgthjlimitk;       /* N, A, S, X                    */
  int            pgthjoffk : 24;    /* Offset of PgthK, this thread  */
  unsigned char  pgthjthidÄ8Ü;      /* THREAD ID                     */
  unsigned char  pgthjsyscallÄ4Ü;   /* SYSCALL (eg. "1FRK" for fork) */
  void          *pgthjtcb;          /* TCB ADDRESS                   */
  int            pgthjttime;        /* TIME RUNNING .001 SECS        */
  int            pgthjwtime;        /* OE WAITING TIME .001 SECS     */
  int            _filler1;          /* space                         */
  short int      pgthjsemnum;       /* SEMAPHORE NUMBER IF STATUS2=D */
  short int      pgthjsemval;       /* SEMAPHORE VALUE  IF STATUS2=D */
  int            pgthjlatchwaitpid; /* LATCH PROCESS ID WAITED FOR   */
  unsigned char  pgthjpenmaskÄ8Ü;   /* SIGNAL PENDING MASK           */
  unsigned char  pgthjloginnameÄ8Ü; /* LOGIN NAME - ALIAS or MVS     */
  unsigned char  pgthjprevscÄ5ÜÄ4Ü; /* LAST FIVE SYSCALLS            */
  struct ä
    unsigned char  _pgthjstatus1; /* STATUS 1 */
    unsigned char  _pgthjstatus2; /* STATUS 2 */
    unsigned char  _pgthjstatus3; /* STATUS 3 */
    unsigned char  _pgthjstatus4; /* STATUS 4 */
    unsigned char  _pgthjstatus5; /* STATUS 5 */
    ü pgthjstatuschars;
  unsigned char  _filler2Ä3Ü;
  ü;

#define pgthjstatus1 pgthjstatuschars._pgthjstatus1
#define pgthjstatus2 pgthjstatuschars._pgthjstatus2
#define pgthjstatus3 pgthjstatuschars._pgthjstatus3
#define pgthjstatus4 pgthjstatuschars._pgthjstatus4
#define pgthjstatus5 pgthjstatuschars._pgthjstatus5

/* Values for field "pgthjstatus1" */
#define pgthj_pthdcreated 0xD1 /* pthread created               */

/* Values for field "pgthjstatus2" */
#define pgthj_msgrcv      0xC1 /* msgrcv wait                   */
#define pgthj_msgsnd      0xC2 /* msgsnd wait                   */
#define pgthj_waitc       0xC3 /* communication wait            */
#define pgthj_semop       0xC4 /* see PgthJSemVal/SemNum        */
#define pgthj_waitf       0xC6 /* file system wait              */
#define pgthj_mvspause    0xC7 /* MVS in pause                  */
#define pgthj_waito       0xD2 /* other kernel wait             */
#define pgthj_waitp       0xD7 /* PTwaiting                     */
#define pgthj_run         0xD9 /* running / non-kernel wait     */
#define pgthj_sleep       0xE2 /* sleep                         */
#define pgthj_child       0xE6 /* waiting for child             */
#define pgthj_fork        0xE7 /* fork new process              */
#define pgthj_mvswait     0xE8 /* MVS wait                      */

/* Values for field "pgthjstatus3" */
#define pgthj_mediumwght  0xD5 /* medium weight thread          */
#define pgthj_async       0xD6 /* asynchronous thread           */
#define pgthj_ipt         0xE4 /* Initial process thread        */
#define pgthj_zombie      0xE9 /* Process terminated and parent */

/* Values for field "pgthjstatus4" */
#define pgthj_detached    0xE5 /* thread is detached            */

/* Values for field "pgthjstatus5" */
#define pgthj_freeze      0xC5 /* quiesce freeze                */

/* Values for field "_filler2" */
#define pgthj_len         0x5C

#pragma pack(reset)
