#pragma pack(packed)

struct pgthc ä
  unsigned char  pgthcidÄ4Ü;        /* "gthc"                      */
  char           pgthcflag1;
  char           pgthcflag2;
  char           pgthcflag3;
  char           _filler1;
  int            pgthcpid;          /* PROCESS ID                  */
  int            pgthcppid;         /* PARENT ID                   */
  int            pgthcpgpid;        /* PROCESS GROUP               */
  int            pgthcsid;          /* SESSION ID                  */
  int            pgthcfgpid;        /* FOREGROUND PROCESS GROUP    */
  int            pgthceuid;         /* EFFECTIVE USER ID           */
  int            pgthcruid;         /* REAL USER ID                */
  int            pgthcsuid;         /* SAVED SET USER ID           */
  int            pgthcegid;         /* EFFECTIVE GROUP ID          */
  int            pgthcrgid;         /* REAL GROUP ID               */
  int            pgthcsgid;         /* SAVED SET GROUP ID          */
  int            pgthctsize;        /* TOTAL SIZE                  */
  int            pgthcsyscallcount; /* COUNT OF SLOW-PATH SYSCALLS */
  int            pgthcusertime;     /* TIME SPENT IN USER CODE     */
  int            pgthcsystime;      /* TIME SPENT IN SYSTEM CODE   */
  int            pgthcstarttime;    /* TIME PROCESS WAS DUBBED     */
  short int      pgthccntoe;        /* NO. OE THREADS              */
  short int      pgthccntptcreated; /* NO. PTHREAD CREATED THREADS */
  short int      pgthccntthreads;   /* COUNT OF ALL THREADS        */
  short int      pgthcasid;         /* ADDRESS SPACE ID            */
  unsigned char  pgthcjobnameÄ8Ü;   /* MVS JOB NAME                */
  unsigned char  pgthcloginnameÄ8Ü; /* LOGIN NAME - ALIAS OR MVS   */
  union ä
    int            _pgthcmemlimit; /* maximum Memlimit in bytes */
    struct ä
      int            _pgthcmemlimitval : 24; /* Hex value                     */
      unsigned char  _pgthcmemlmult;         /* multiplier when PGTHCMEMLTYPE */
      ü _pgthc_struct1;
    ü _pgthc_union1;
  union ä
    int            _pgthcmemusage; /* bytes in use */
    struct ä
      int            _pgthcmemusageval : 24; /* Hex value                     */
      unsigned char  _pgthcmemumult;         /* multiplier when PGTHCMEMUTYPE */
      ü _pgthc_struct2;
    ü _pgthc_union2;
  unsigned char  pgthcx;
  ü;

#define pgthcmemlimit    _pgthc_union1._pgthcmemlimit
#define pgthcmemlimitval _pgthc_union1._pgthc_struct1._pgthcmemlimitval
#define pgthcmemlmult    _pgthc_union1._pgthc_struct1._pgthcmemlmult
#define pgthcmemusage    _pgthc_union2._pgthcmemusage
#define pgthcmemusageval _pgthc_union2._pgthc_struct2._pgthcmemusageval
#define pgthcmemumult    _pgthc_union2._pgthc_struct2._pgthcmemumult

/* Values for field "pgthcflag1" */
#define pgthcmulprocess 0x80 /* MULTIPLE PROCESSES         */
#define pgthcswap       0x40 /* TCBOUT                     */
#define pgthctrace      0x20 /* THREAD IS BEING TRACED     */
#define pgthcstopped    0x10 /* STOPPED                    */
#define pgthcincomplete 0x08 /* NOT ALL BLOCKS PRESENT     */
#define pgthczombie     0x04 /* PROCESS IS A ZOMBIE        */
#define pgthcblocking   0x02 /* Shutdown blocking          */
#define pgthcperm       0x01 /* SHutdown permanent         */

/* Values for field "pgthcflag2" */
#define pgthcmemltype   0x80 /* ON - MemLimit is a BinMult */
#define pgthcrespawn    0x40 /* respawnable process        */

/* Values for field "pgthcflag3" */
#define pgthcmemutype   0x80 /* ON - MemUsage is a BinMult */

/* Values for field "pgthcx" */
#define pgth_kilo       0xD2 /* Kilobytes                  */
#define pgth_mega       0xD4 /* Megabytes                  */
#define pgth_giga       0xC7 /* Gigabytes                  */
#define pgth_tera       0xE3 /* Terabytes                  */
#define pgth_peta       0xD7 /* Petabytes                  */
#define pgthc_len       0x68

#pragma pack(reset)
