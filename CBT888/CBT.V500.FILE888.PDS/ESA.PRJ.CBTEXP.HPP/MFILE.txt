#ifndef INCLUDE_MFILE
#define INCLUDE_MFILE

#include "mvsbase.hpp"
#include "mchain.hpp"
#include <fcntl.h>

typedef char * CHARP;

class MemoryFile;

class MemoryFileSystem : public SORTEDmCHAIN
ä
private:
	CHAINITER  * iter;
public:
	static int unitsize;
	static int numberofunits;
	MemoryFileSystem();
	virtual ßMemoryFileSystem();
	MemoryFile * add(const char *, int);
	int          del(char *);
ü;


class MemoryFile: public chainE
ä
private:
	enum STATUS ä Sreset , Sopen , Sclose, Serror ü;
	char * * memory;
	int  flags;
	int  lastpos;
	int  newpos;
	int  seekpending;
	int  pos;
	int  units;
	STATUS   status;
public:
	MemoryFile(char *,int);
	ßMemoryFile();
	int  close();
	long lseek(long,int);
	int  open(int);
	int  read(char * , unsigned);
	int  write(const char *,unsigned);
	int  changepos(int);
	int  o2i(int ,int&);
	int  i2o(int , int);
ü;

int 	MFS_close(int );
int 	MFS_creat(const char *);
long    MFS_lseek(int,long,int);
int     MFS_open(const char *,int);
int     MFS_read(int, void *,unsigned);
int     MFS_write(int,const void *,unsigned);
int     MFS_remove(char *);



 #endif
