#pragma pack(packed)

struct smf30prf ä
  int            smf30srv;     /* D OUXBJBS +        TOTAL SERVICE UNITS     @G742PJW */
  int            smf30csu;     /* D OUXBCPU          CPU SERVICE UNITS       @G742PJW */
  int            smf30srb;     /* D OUXBSRB          SRB SERVICE UNITS       @G742PJW */
  int            smf30io;      /* D OUXBIOC          I/O SERVICE UNITS       @G742PJW */
  int            smf30mso;     /* D OUXBMSO          MSO SERVICE UNITS       @G742PJW */
  int            smf30tat;     /* D OUXBJBT +        TRANSACTION ACTIVE TIME IN 1024- */
  int            smf30sus;     /* D                  Copy of RmctAdjC when this SMF   */
  int            smf30res;     /* D OUXBJBR          TRANSACTION RESIDENCY TIME IN    */
  int            smf30trs;     /* D OUXBTRC          NUMBER OF TRANSACTIONS  @G742PJW */
  unsigned char  smf30wlmÄ8Ü;  /* Workload Name               @L1A                    */
  unsigned char  smf30scnÄ8Ü;  /* Service Class Name          @L1A                    */
  unsigned char  smf30grnÄ8Ü;  /* Resource Group Name         @L1A                    */
  unsigned char  smf30rcnÄ8Ü;  /* Reporting Class Name        @L1A                    */
  int            smf30eta;     /* D RQSVETIM         Independent Enclave Transaction  */
  int            smf30esu;     /* D RQSVECPU         Independent Enclave CPU          */
  int            smf30etc;     /* D RQSVETRC         Independent Enclave Transaction  */
  unsigned char  smf30pflÄ16Ü; /* D RQSVSCHEDENV  JCL SCHEDENV value          @LEA    */
  int            smf30jqt;     /* D RQSVJCLCONVERSIONTIME JCL conversion time for     */
  int            smf30rqt;     /* D RqsvSysOrResAffTime Resource and/or system        */
  int            smf30hqt;     /* D RqsvIneligibleTime Hold time not due to system    */
  int            smf30sqt;     /* D RqsvQueueTime    Time that job was eligible for   */
  unsigned char  smf30pf1;     /* Performance section flags   @LEA                    */
  unsigned char  smf30pf2;     /* Performance section flags                           */
  unsigned char  smf30rs4;     /* Reserved                    @0GC                    */
  unsigned char  smf30zep;     /* ZEP                         @0GA                    */
  unsigned char  smf30jpnÄ8Ü;  /* IWMCLSFY SUBCOLN Subsystem collection name          */
  int            smf30msc;     /* MSO SDC, scaled by 10000    @0CA                    */
  short int      smf30cpc;     /* CPU SDC, scaled by 10       @0CA                    */
  short int      smf30loc;     /* IOC SDC, scaled by 10       @0CA                    */
  short int      smf30src;     /* SRB SDC, scaled by 10       @0CA                    */
  short int      smf30znf;     /* zAAP Normalization Factor                           */
  short int      smf30snf;     /* zIIP Normalization Factor                           */
  ü;

/* Values for field "smf30pf1" */
#define smf30pfj 0x80 /* D RqsvResetBeforeInitiation Reset before     */
#define smf30pfr 0x40 /* D RqsvResetAfterInitiation  Reset after      */
#define smf30pff 0x20 /* D RqsvOperatorForcedInitiation               */
#define smf30rtr 0x10 /* D RqsvJobReincarnated                        */
#define smf30msi 0x08 /* D RqsvRSDIncomplete                          */
#define smf30wmi 0x04 /* Job is executing in a workload               */
#define smf30ccp 0x02 /* RasdCProtCpu      Service class assigned was */
#define smf30csp 0x01 /* RasdCProtStg      Service class served was   */

/* Values for field "smf30pf2" */
#define smf30asp 0x80 /* RasdASProtStg     Address space was          */
#define smf30sme 0x40 /* RasdTrxnMgmtExempt Address space cannot be   */
#define smf30cpr 0x20 /* RasdCpuProtected  Address space is currently */
#define smf30spr 0x10 /* RasdStgProtected  Address space is currently */
#define smf30pin 0x08 /* The following fields contain                 */

#pragma pack(reset)
