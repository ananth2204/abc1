#ifndef _TSOVSM
#define _TSOVSM
#include "filevsm.hpp"
#include "mvsbase.hpp"

int SystemCommand(char * command);
char * SystemUserId(void);

int    KSDS_Open(FileBlock * fb,int );
int    KSDS_Close(FileBlock * fb);
int    KSDS_Read(FileBlock * fb);
int    KSDS_Rewrite(FileBlock * fb);
int    KSDS_Delete(FileBlock * fb);
int    KSDS_Write(FileBlock * fb, int );
int    KSDS_Write(FileBlock * fb );
int    KSDS_Flush(FileBlock * fb);
int    KSDS_Startbr(FileBlock * fb);
int    KSDS_Readnext(FileBlock * fb);
int    KSDS_Endbr(FileBlock * fb);
int    KSDS_Unlock(FileBlock * fb) ;
int    KSDS_Clearerr(FileBlock * fb);

FILE * SpoolOpen(STRING&,int);
int    SpoolClose(FILE *);
int    SpoolPut(FILE *,char * ,int);

int    Enq(char *,int );
int    Deq(char *,int );
int    Sync();
char * LoadM(char *);

#if 0
int  TerminalDISPLAY(PanelBlock * pb,TerminalBlock * tb);
void TerminalCLEAR(void);
void TerminalINQ(TerminalBlock * tb);
void TerminalMessage(char *);
void putSnap(char *);
#endif


  /*--------------------------------------------------------------+
  | EXIT routine call                                             |
  |                                                               |
  |                                                               |
  +--------------------------------------------------------------*/

class EXIT ä
private:
  STRING program;
  unsigned ecb;
  void *   subtcb;
  void *   plistÄ1Ü;
  struct
  ä
    short len;
    char  textÄ128Ü;
  ü parm ;
  int   rc;
public:
  EXIT(char * prog, char * par);
  int retcode()äreturn rc;ü
  ßEXIT()äü
ü;

#endif
