#pragma pack(packed)

struct mct ä
  unsigned char  mctmctÄ4Ü;                   /* -         ACRONYM IN EDCDIC -MCT-                   */
  void          *mccms100;                    /* -      SQA SHORTAGE MESSAGE ADDRESS                 */
  void          *mccms101;                    /* -      CRITICAL SQA SHORTAGE MESSAGE ADDRESS        */
  void          *mccms102;                    /* -      SQA SHORTAGE RELIEVED MESSAGE ADDRESS        */
  int            _filler1;                    /* reserved                     @LHIAUXC               */
  int            _filler2;                    /* reserved                     @LHIAUXC               */
  int            _filler3;                    /* reserved                     @LHIAUXC               */
  int            _filler4;                    /* reserved                     @LHIAUXC               */
  int            _filler5;                    /* reserved                     @LHISTOC               */
  int            _filler6;                    /* reserved                     @LHISTOC               */
  int            _filler7;                    /* reserved                     @LHISTOC               */
  int            _filler8;                    /* reserved                     @LHISTOC               */
  void          *mccms500;                    /* -      SWAP IN FAIL USER MSG ADDR   @ZA31942        */
  void          *mccms501;                    /* -      SWAP IN MESSAGE              @ZA31942        */
  short int      mccplus;                     /* -             AVAILABLE FRAME QUEUE DELTA FOR       */
  short int      _filler9;                    /* RESERVED                     @LCMPTM                */
  short int      _filler10;                   /* -              Reserved                    @LHIAUXC */
  short int      mccsiprt;                    /* -          TIME BETWEEN PG-RATE CALC   @G741PSS     */
  short int      mccdfrpc;                    /* -              DOUBLE FRAME REPLENISH INCREMENT     */
  short int      mccdfrec;                    /* -              DOUBLE FRAME RELEASE VALUE  @G860PSS */
  short int      mccspcpt;                    /* The System Paging Cost Percentage                   */
  short int      mccapcpt;                    /* Address Space Paging Cost Percentage                */
  int            mccdump;                     /* DUMPSRV OUCB ADDRESS            @P8C                */
  short int      mccicspl;                    /* Length of IRAICSP.ICSP      @WLMPGMY                */
  short int      mccrqsvl;                    /* Length of IRARQSRV.RQSV     @WLMPGMY                */
  short int      mcce39pl;                    /* Length of IRAE39P.E39P      @WLMPGMY                */
  short int      mccrsdl;                     /* Length of IRARSD.RSD        @WLMPGMY                */
  short int      mccoucbl;                    /* Length of IRAOUCB.OUCB      @WLMPGMY                */
  short int      mccr5;                       /* @L6C                                                */
  short int      mccfxbpr;                    /* Fixed Below High Percentage                         */
  short int      _filler11;                   /* Reserved                     @LCMPTM                */
  short int      _filler12;                   /* Reserved                    @LHIAUXC                */
  unsigned char  mctvirtshortagelevel;        /* -   Virtual storage shortage level                  */
  unsigned char  mctasmfl;                    /* -              Auxilliary Storage Flags    @ME13233 */
  int            mctaveragevirtincrease;      /* -   Average virtual storage increase                */
  int            mctslotsallocated;           /* -     Number of allocated slots at the              */
  short int      mccasmt1;                    /* -             FIRST AUX SHORTAGE THRESHOLD          */
  short int      mccasmt2;                    /* -             SECOND AUX SHORTAGE THRESHOLD         */
  struct ä
    unsigned char  _mcvsiflg; /* -              STORAGE ISOLATION FLAGS     @G741PSS */
    char           _mcclipt;  /* -           Large increase percentage thereshold    */
    char           _mccaspct; /* -           % OF AUX STORAGE TO RECOMMEND   @L1C    */
    char           _mccrspct; /* -           % OF REAL STORAGE TO RECOMMEND  @L1C    */
    ü mccend;
  int            mcvstgpt;                    /* TIME OF PREVIOUS STGTEST CALL   @L1C                */
  short int      mcvsipl;                     /* -              CMN LOW PAGE IN RATE SPEC   @G741PSS */
  short int      mcvsiph;                     /* -              CMN HIGH PAGE IN RATE SPEC  @G741PSS */
  int            mcvsibp;                     /* -              BASE PAGE IN CNT FOR CMN    @G741PSS */
  int            mcvsibt;                     /* -              Base TOD value for page-in rate      */
  short int      mcvsipr;                     /* -              CMN RECENT PAGE-IN RATE     @G741PSS */
  short int      _filler13;                   /* -              Reserved                    @LHIAUXC */
  short int      mcvstcri;                    /* -              HIGHEST SYSTEM UIC          @Z40BPCH */
  short int      mcvfrcnt;                    /* -              SAVED AVAILABLE EXPANDED STORAGE     */
  int            mcvavqc;                     /* -              COUNT OF AVQLOWS            @Z40BPCH */
  int            mcvnwsmb;                    /* policy interval base for rcenwsf                    */
  int            mcvwsmb;                     /* policy interval base for rcewsdne                   */
  unsigned char  mccbelowpercentage;          /* @PYN0937                                            */
  unsigned char  mccabovepercentage;          /* @PYN0937                                            */
  unsigned char  _filler14;                   /* -              Reserved                    @LLSENHC */
  unsigned char  mctafqcount;                 /* Number of RM1 Cycles we have an                     */
  int            mcveswb;                     /* policy interval base for rceeswrt                   */
  short int      mccbelowshortagethreshold;   /* @PYN0937                                            */
  short int      mccaboveshortagethreshold;   /* @PYN0937                                            */
  short int      mcvbelowshortagesamples;     /* Shortage samples RM2 intvl  @PYN0937                */
  short int      mcvbelowshortagesampleslm;   /* Shortage samples 1 minute   @PYN0937                */
  short int      mcvaboveshortagesamples;     /* Shortage samples RM2 intvl  @PYN0937                */
  short int      mcvaboveshortagesampleslm;   /* Shortage samples 1 minute   @PYN0937                */
  unsigned char  mctsflgs;                    /* -              FLAGS MODIFIED UNDER SALLOC LOCK     */
  unsigned char  mctoflgs;                    /* -              FLAGS MODIFIED UNDER SRM LOCK        */
  unsigned char  mctoflg1;                    /* -              MORE FLAGS - SRM LOCK       @G742PBP */
  unsigned char  mctcflgs;                    /* -              FLAGS TURNED ON UNDER SALLOC LOCK    */
  void          *mccms103;                    /* -      SQA EXPANDED MSG ADDR       @PDD0101         */
  int            mcvtminq;                    /* -               TIME PR1 LAST RAN IN QUEUE @G860PAM */
  short int      mccfxuic;                    /* -              FIXED FRAME SHORTAGE UIC THRESHOLD   */
  short int      mcvchuic;                    /* -               HIGHEST UIC FOR CURRENTLY ALLOCATED */
  short int      mcvpvtri;                    /* -               HIGHEST PVT AREA UIC       @ZA42038 */
  short int      mcvhuice;                    /* UIC of oldest frame in expanded                     */
  short int      mcclswup;                    /* -               TSO LOGICAL SWAP WORKING SET        */
  short int      mcvdfpgc;                    /* -               DEFERRED PAGE REQUEST CT   @ZA64868 */
  int            mcvoldeo;                    /* -               Value of RCEAECOK, with amount      */
  short int      mccnclim;                    /* -               UIC LIMIT FOR NON-SWAPPABLES AND    */
  short int      mccncdel;                    /* -               DELTA IN NON-SWAPPABLE AND COMMON   */
  short int      mccncmax;                    /* -              MAXIMUM INTERVAL BETWEEN UPDATES     */
  short int      mccswlim;                    /* -              UIC LIMIT FOR SWAPPABLES BEFORE      */
  short int      mccswdel;                    /* -              DELTA IN SWAPPABLES UIC FOR          */
  short int      mccswmax;                    /* -              MAXIMUM INTERVAL BETWEEN UPDATES     */
  int            mcvsmxct;                    /* -              SWAPPABLE MAXIMUM COUNT    @G860PAM  */
  int            mcvinc;                      /* PR1 INTERVAL COUNT FOR SWAPPABLES                   */
  int            mcvcurct;                    /* PR1 INTERVAL COUNT FOR COMMON AND                   */
  int            mcvmaxct;                    /* NON-SWAPPABLE AND COMMON MAXIMUM                    */
  short int      mccsiwdl;                    /* -               TWSS DELTA % DECREASE      @ZM49741 */
  short int      mccsiwdi;                    /* -               TWSS DELTA % INCREASE      @ZM49741 */
  int            mccsieth;                    /* -            EXEC TIME THRESHOLD FOR PG RATE        */
  int            mcvmigb;                     /* BASE MIGRATION COUNT        @YA62416                */
  int            mccr19;                      /* @L6C                                                */
  int            mccr20;                      /* @L6C                                                */
  int            _filler15;                   /* Reserved                     @LCMPTM                */
  void          *mccms104;                    /* -      SQA NO LONGER EXPANDED MSG  @PDD0101         */
  struct ä
    short int      _mccafclo; /* Available frame queue low threshold              */
    short int      _mccafcok; /* -             Available frame queue OK threshold */
    ü mccavqth;
  int            mccuicth;                    /* -               MIN TIME BEFORE UIC UPDT   @G38APSS */
  int            mccfxtm1;                    /* -          FIXED FRAME SHORTAGE TIME THRESHOLD      */
  int            mccfxtm2;                    /* -          FIXED FRAME SHORTAGE TIME THRESHOLD      */
  int            mcvcsacv;                    /* -               PREVIOUS GDACSACV VALUE    @G860PJC */
  short int      mccdeffx;                    /* -               DEFER FIX THRESHOLD                 */
  short int      mccfxtpr;                    /* -  (OPT PARM)  % All of real storage threshold @LTC */
  short int      mccfxepr;                    /* -  (OPT PARM)  % Below 16M line storage thresold    */
  short int      mctafcincrease;              /* AFC increase to drive steal @OA14318                */
  short int      mccmedup;                    /* -              MEDIAN FIXED FRAME CNT ADJ UP   @L3A */
  short int      mccmeddn;                    /* -              MEDIAN FIXED FRAME CNT ADJ DOWN @L3A */
  short int      mccspint;                    /* -            TIME FOR DISABLED SPIN          @L3A   */
  short int      mccr24;                      /* -              reserved (MCCFFCMP)         @LLAPAGC */
  int            mccmaxfx;                    /* -              All of real shortage threshold count */
  int            mccrelcr;                    /* -              All of real critical shortage        */
  int            mccb16cr;                    /* -              Below the line critical shortage     */
  int            mccrelok;                    /* -              All of real OK threshold        @LTC */
  int            mccb16ok;                    /* -              Below the line OK threshold     @LTC */
  int            mcvsbfxc;                    /* -              FIX CNT ACCUMULATOR             @L3A */
  short int      mcvsbfxa;                    /* -              AVE FIX % BELOW 16MEG           @L3A */
  short int      mcvsbltf;                    /* -              LONG TERM FIX %                 @L3A */
  short int      mcvmedfc;                    /* -              MEDIAN FIX FRAME COUNT -             */
  short int      mcvasmct;                    /* -              Samples taken for verification       */
  int            mcvcapws;                    /* -              CAP WORKAREA - WORKING SET SIZE      */
  short int      mccms6l;                     /* MS6 INTERVAL LOWER LIMIT        @H2A                */
  short int      mcvswupd;                    /* -              SWAP COUNT UPDATE COUNTER       @H4C */
  int            mcvoldel;                    /* -               Value of RCEAECLO, with amount      */
  int            mcvmgage;                    /* EXTENDED STORE MIGRATION AGE    @H5C                */
  int            mcvpr9tg;                    /* PR9 TARGET FOR TRIM AND BUILDING                    */
  int            mcvpr5ou;                    /* OUCBPTR FOR PR5 WHEN REAL THRESHOLDS                */
  int            mcvmgtme;                    /* WAITING-FOR-MIGRATOR TIME STAMP @H5A                */
  int            mcvwraps;                    /* SAVED VALUE OF RCEWRAPS         @H5A                */
  int            mcvmgcnt;                    /* SRM MIGRATION TIME COUNTER      @H5A                */
  int            mcvsecws;                    /* NUMBER OF SECONDARY WORKING SET                     */
  double         mctstmacreatetime;           /* Time when the STMA was created                      */
  int            mctrsv03;                    /* reserved - was MCVDEFSE     @WLMP128                */
  int            mccdefam;                    /* MULTIPLIER OF AFCOK THRESHOLD TO                    */
  int            mccmgtex;                    /* MIGRATOR TIME EXCEEDED THRESHOLD                    */
  int            mccswpet;                    /* EFRAMES RESERVED FOR PAGEOUTS BY                    */
  short int      mccetght;                    /* EXTENDED STORE LOW THRESHOLD MULT.                  */
  short int      mccaeclo;                    /* -            AVAIL EXTENDED FRAME QUEUE LO          */
  short int      mccaecok;                    /* -            AVAIL EXTENDED FRAME QUEUE OK          */
  short int      mccesbmp;                    /* -              SWAP TO EXTENDED WORKING SET         */
  short int      mccppsbf;                    /* PAGABLE PAGE PER SEGMENT BUFFER @H5A                */
  unsigned char  mctrsv04;                    /* reserved - was MCCMINTR     @WLMP128                */
  unsigned char  mccsigtr;                    /* MIN AMOUNT OF FRAMES AN A.S. CAN                    */
  short int      mccswupt;                    /* SWAP COUNTER UPDATE THRESHOLD   @H4A                */
  char           mccb2ghi;                    /* High threshold for % of time running                */
  char           mccfsidi;                    /* TWSS % INCREASE FOR FWA USERS   @L7A                */
  char           mcces0lo;                    /* Low threshold for percent of time                   */
  char           mcces0hi;                    /* High threshold for percent of time                  */
  short int      mcves0ct;                    /* MCTESTO0 SAMPLE COUNTER         @H4A                */
  short int      mcvessct;                    /* EXTENDED STORE THRESHOLDS SAMPLE                    */
  short int      mccessth;                    /* EXTENDED STORE THRESHOLDS SAMPLE                    */
  int            mcvaecmn;                    /* MINIMUM RCEAEC SAMPLED          @H4A                */
  unsigned char  mcteflgs;                    /* EXTENDED STORE BITS             @H5A                */
  unsigned char  mcteflg1;                    /* FLAGS MODIFIED UNDER SRM LOCK   @P2A                */
  short int      mccmxris;                    /* -            Maximum amount by which real           */
  void          *mccms700;                    /* -       VECTOR WAIT MESSAGE ADDRESS     @D1A        */
  int            mctsdumpinit;                /* SDump reserved space, which gets                    */
  int            mcvreldl;                    /* SDump reserved space, which is                      */
  int            mcvmsgpt;                    /* Pointer to message stack        @LTC                */
  int            mcvdomqp;                    /* Pointer to the DOM queue        @LTC                */
  int            mccuicmx;                    /* UIC value to determine if stealing                  */
  int            mcvfpt;                      /* Fixed and DREF shortage threshold                   */
  int            mccdrfcr;                    /* Fixed and DREF critical shortage                    */
  int            mccdrfok;                    /* Fixed and DREF OK threshold.    @LTA                */
  int            mcvtwss;                     /* TARGET WSS FOR COMMON           @D9C                */
  int            mcvsiwl;                     /* CMN LOW WSS SPECIFICATION       @D9C                */
  int            mcvsiwh;                     /* CMN HIGH WSS SPECIFICATION      @D9C                */
  int            mcvfmct;                     /* CMN EFFECTIVE FRAME COUNT       @D9C                */
  int            mccr23;                      /* @L6C                                                */
  int            _filler16;                   /* reserved                    @LHIAUXC                */
  int            mccmaxsw;                    /* Target maximum number of frames to                  */
  int            mcvavqlt;                    /* TIME (RRPATOD) OF LAST LEVEL1                       */
  int            mcctosec;                    /* TWO SECOND VALUE TO FORCE                           */
  short int      mccstgt;                     /* -            STGTEST TIME INTERVAL (1 SEC)   @L1A   */
  short int      mccfxbco;                    /* -             CUT-OFF AMOUNT OF FIXED BELOW         */
  int            mcvbytct;                    /* PREVIOUS BYTE COUNT OF RESERVE                      */
  int            mcvblkct;                    /* PREVIOUS BLOCK COUNT OF RESERVE                     */
  int            mcvswpas;                    /* Address of user picked for MS2 in                   */
  int            mcvoldcl;                    /* The "base" low central storage                      */
  int            mcvoldco;                    /* The "base" OK central storage                       */
  int            mcvptlmt;                    /* Processor threshold raising limit                   */
  int            mcvlsd;                      /* Number of logical swap discretionary                */
  int            mcvmindf;                    /* This is the minimum error between                   */
  int            mcvpgins;                    /* Page-ins rate count used for                        */
  int            mcvavail;                    /* The number of Central and Expanded                  */
  int            mcvuic1;                     /* total number of UIC bucket 1 frames                 */
  int            mcvuic2;                     /* total number of UIC bucket 2 frames                 */
  int            mcvuic3;                     /* total number of UIC bucket 3 frames                 */
  int            mcvuic4;                     /* total number of UIC bucket 4 frames                 */
  int            mcvuic1s;                    /* total number of UIC bucket 1 frames                 */
  int            mcvuic2s;                    /* total number of UIC bucket 2 frames                 */
  int            mcvuic3s;                    /* total number of UIC bucket 3 frames                 */
  int            mcvuic4s;                    /* total number of UIC bucket 4 frames                 */
  int            mcvuic1c;                    /* number of UIC bucket 1 frames in the                */
  int            mcvuic2c;                    /* number of UIC bucket 2 frames in the                */
  int            mcvuic3c;                    /* number of UIC bucket 3 frames in the                */
  int            mcvuic4c;                    /* number of UIC bucket 4 frames in the                */
  short int      mctrstorflcanceltime;        /* Maximum time for redrive of                         */
  short int      mcccbbt;                     /* Central/Below 16 meg Balance                        */
  int            mcveuic1;                    /* expanded storage UIC bucket 1   @L8C                */
  int            mcveuic2;                    /* expanded storage UIC bucket 2   @L8C                */
  int            mcveuic3;                    /* expanded storage UIC bucket 3   @L8C                */
  int            mcveuic4;                    /* expanded storage UIC bucket 4   @L8C                */
  int            mcvexwsd;                    /* Count of discretionary expanded                     */
  int            mcveuicc;                    /* Count of invocations of pr1 to                      */
  int            mcvmxeuc;                    /* Number of pr1 invocations before                    */
  int            mcvcmpib;                    /* Base value for common pages paged in                */
  short int      mcvcubd1;                    /* UIC bucket delimiter.  Used to                      */
  short int      mcvcubd2;                    /* UIC bucket delimiter.  Used to                      */
  short int      mcvcubd3;                    /* UIC bucket delimiter.  Used to                      */
  short int      mcvcs0ct;                    /* central stor to 0 sample count  @L8A                */
  short int      mcvcssct;                    /* Central  STORE THRESHOLDS SAMPLE                    */
  short int      mcvshuic;                    /* High UIC for shared frames      @LAC                */
  int            mcvafcmn;                    /* MINIMUM RCEAFC SAMPLED          @L8A                */
  int            mcvstwss;                    /* Protective processor storage                        */
  int            mcvsauxb;                    /* Base for RceSgAux               @LAA                */
  int            mcvsuic1;                    /* Shared area central UIC bucket  @LAA                */
  int            mcvsuic2;                    /* Shared area central UIC bucket  @LAA                */
  int            mcvsuic3;                    /* Shared area central UIC bucket  @LAA                */
  int            mcvsuic4;                    /* Shared area central UIC bucket  @LAA                */
  int            mcvseuc1;                    /* Shared area expanded UIC bucket @LAA                */
  int            mcvseuc2;                    /* Shared area expanded UIC bucket @LAA                */
  int            mcvseuc3;                    /* Shared area expanded UIC bucket @LAA                */
  int            mcvseuc4;                    /* Shared area expanded UIC bucket @LAA                */
  int            _filler17;                   /* reserved                    @xxxxxxx                */
  int            _filler18;                   /* reserved                    @xxxxxxx                */
  short int      mccuicup;                    /* Interval (in seconds) at which UIC                  */
  short int      mccconbt;                    /* UIC value, below which frames may                   */
  void          *mccemdit;                    /* Maximum disabled time for STEAL and                 */
  int            mccmaxbt;                    /* Between 16M and 2G pageable                         */
  int            mccb2gcr;                    /* Between 16M and 2G pageable                         */
  int            mccb2gok;                    /* Between 16M and 2G pageable                         */
  short int      mccqdrsv;                    /* Percentage of quad frame groups to                  */
  short int      _filler19;                   /* reserved                    @LCMPTMC                */
  int            mcvoldqf;                    /* Number of quad frame groups on the                  */
  unsigned char  mctshmf;                     /* Monitoring flag             @WLMP64V                */
  unsigned char  mcttargetincreased;          /* Target increase flags       @ME04110                */
  short int      mcttrimuic;                  /* UIC where trimming starts   @ME04110                */
  short int      mctprestealsampleslow;       /* PreSteal samples low        @ME04110                */
  short int      mctprestealsamplestotal;     /* PreSteal samples altogether @ME04110                */
  int            mctprestolenmn;              /* Minimum RCENumberOfPreStolenFrames                  */
  int            mctprestolenlow;             /* PreSteal low target         @WLMP128                */
  int            mctprestolenok;              /* PreSteal OK target          @WLMP128                */
  short int      mctprestealsampletime;       /* count RM2 intervals         @WLMP128                */
  short int      mctprestealsampletarget;     /* 10th of a percent           @WLMP128                */
  int            mctuicdistperc1;             /* Bucket 1 with   6.472%      @WLMP128                */
  int            mctuicdistperc2;             /* Bucket 2 with   4.535%      @WLMP128                */
  int            mctuicdistperc3;             /* Bucket 3 with  24.470%      @WLMP128                */
  int            mctuicdistperc4;             /* Bucket 4 with  64.523%      @WLMP128                */
  int            _filler20;                   /* Reserved                    @LHIAUXC                */
  short int      mctira205itarget;            /* Percentage at which target the                      */
  short int      mctminsystemuic;             /* Minimum System UIC          @WLMP128                */
  short int      mctcursystemuic;             /* Current System UIC          @WLMP128                */
  short int      mctmaxsystemuic;             /* Maximum System UIC          @WLMP128                */
  int            mctswapsize;                 /* Maximum working set size SRM will                   */
  short int      mctrealswapcanceltime;       /* Maximum time for redrive of                         */
  unsigned char  mctfixedstorageshortagetype; /* Contains the shortage type, which                   */
  unsigned char  mctstoragetargetadjustment;  /* RM2 cycle count, used for storage                   */
  int            mctbelowafqmn;               /* Minimum RCEPBAFC plus RCENBAFCC                     */
  int            mctaboveafqmn;               /* Minimum RCEPAAFC plus RCENAAFCC                     */
  int            mctwtor1ecb;                 /* ECB for WTOR Processor 1    @LHIAUXC                */
  int            mctwtor2ecb;                 /* ECB for WTOR Processor 2    @LHIAUXA                */
  void          *mctfsaa;                     /* Pointer to FSAA             @LHISTOA                */
  void          *mctasaa;                     /* Pointer to ASAA             @LHIAUXA                */
  struct ä
    unsigned char  _mctwtor1flags;    /* WTOR processing flags       @LHIAUXA */
    unsigned char  _mctwtor2flags;    /* WTOR processing flags       @LHIAUXA */
    unsigned char  _mctwtor3flagsÄ2Ü; /* reserved                    @LHIAUXA */
    ü mctwtorflags;
  char           mctrelieveperc;              /* Relieve percentage          @LHIAUXA                */
  char           mctapplperc;                 /* Application perc.           @LHIAUXA                */
  short int      _filler21;                   /* reserved                    @LHIAUXA                */
  char           mctwarningb16perc;           /* below 16M percentage        @LHISTOA                */
  char           mctwarningb2gperc;           /* between 16M and 2G          @LHISTOA                */
  char           mctwarningtotperc;           /* all real                    @LHISTOA                */
  char           mctwarningdrfperc;           /* all real and DREF           @LHISTOA                */
  int            mctwarningb16;               /* below 16M                   @LHISTOA                */
  int            mctwarningb2g;               /* between 16M and 2G          @LHISTOA                */
  int            mctwarningtot;               /* all real                    @LHISTOA                */
  int            mctwarningdrf;               /* all real and DREF           @LHISTOA                */
  short int      _filler22;                   /* Reserved                    @ME13233                */
  unsigned char  mctfixedshortagelevel;       /* -  Fixed storage shortage level                     */
  unsigned char  mctfixedfl;                  /* -              Fixed Storage Flags         @ME13233 */
  int            mctaveragefixedincrease;     /* Average fixed storage increase                      */
  int            mctframesfixed;              /* Number of fixed frames at the last                  */
  double         mctira405iissuetime;         /* When the last IRA405I message got                   */
  double         mctfxsapplwarningtime;       /* When we entered the appl. warning                   */
  double         mctfxsshortagetime;          /* When we entered the normal shortage                 */
  double         mctcritfxsshortagetime;      /* When we entered the critical                        */
  double         mctira205iissuetime;         /* When the last IRA205I message got                   */
  double         mctauxapplwarningtime;       /* When we entered the appl. warning                   */
  double         mctauxshortagetime;          /* When we entered the normal shortage                 */
  double         mctcritauxshortagetime;      /* When we entered the critical                        */
  double         mctafqshortagetime;          /* When we saw the last time a AFQ                     */
  double         mctend;                      /* -                END OF MCT                         */
  ü;

#define mcvsiflg      mccend._mcvsiflg
#define mcclipt       mccend._mcclipt
#define mccaspct      mccend._mccaspct
#define mccrspct      mccend._mccrspct
#define mccafclo      mccavqth._mccafclo
#define mccafcok      mccavqth._mccafcok
#define mctwtor1flags mctwtorflags._mctwtor1flags
#define mctwtor2flags mctwtorflags._mctwtor2flags
#define mctwtor3flags mctwtorflags._mctwtor3flags

/* Values for field "mctasmfl" */
#define mctvirtculpritprocessingneeded    0x80  /* - Virtual storage culprit                           */

/* Values for field "mcvsiflg" */
#define mcvsipg                           0x80  /* -              ADS STG ISOLATION IN EFFECT @G741PSS */
#define mcvsicm                           0x40  /* -              CMN STG ISOLATION IN EFFECT @G741PSS */
#define mcvsiws                           0x20  /* -              COMMON STORAGE PROTECTED BY WORKING  */
#define mcvsipi                           0x10  /* -              COMMON STORAGE PROTECTED BY PAGE IN  */

/* Values for field "mctsflgs" */
#define mctsqa1                           0x80  /* -              SQA FIRST LEVEL SHORTAGE             */
#define mctsqa2                           0x40  /* -              SQA SECOND LEVEL SHORTAGE            */
#define mctavq1                           0x20  /* -              AVQ BELOW LIMIT                      */
#define mctasmw                           0x10  /* -              ASM Warning level           @LLSENHA */
#define mctafqenf55issued                 0x08  /* -       ENF 55 AFQ shortage issued  @LLSENHA        */

/* Values for field "mctoflgs" */
#define mctasm1                           0x80  /* -              ASM FIRST LEVEL SHORTAGE             */
#define mctasm2                           0x40  /* -              ASM SECOND LEVEL SHORTAGE            */
#define mctasma                           0x20  /* -              ASM Appl Warning            @LHIAUXC */
#define mctams2                           0x10  /* -              Obsolete use MCTASM2        @LHIAUXC */
#define mctsms1                           0x08  /* -              SQA FIRST LEVEL MESSAGE              */
#define mctsms2                           0x04  /* -              SQA SECOND LEVEL MESSAGE             */
#define mctfx1                            0x02  /* -              FIX PG 1ST LEVEL MSG        @Z40BPCH */
#define mctfx2                            0x01  /* -              FIX PG 2ND LEVEL MSG        @Z40BPCH */

/* Values for field "mctoflg1" */
#define mctndisp                          0x40  /* Set nsw address spaces non                          */
#define mctwtor                           0x20  /* Present a WTOR, when the system is                  */
#define mctsqae                           0x10  /* -              SQA EXPANDED MESSAGE        @PDD0101 */
#define mctfxmpl                          0x08  /* -              REDUCE MPL TO RELIEVE SHORTAGE  @L3A */
#define mctwtorauto                       0x04  /* Present 20 messages instead of 5                    */
#define mctlgavq                          0x02  /* -              LOGICAL AVQLOW LEVEL 1          @L3A */
#define mctscbt                           0x01  /* -              STOLE COMMON BELOW THRES    @ZA58069 */

/* Values for field "mctcflgs" */
#define mctshort                          0x80  /* -              A shortage exists               @LTC */
#define mctrlsht                          0x40  /* -              All of real pageable storage         */
#define mctb16sh                          0x20  /* -              Below the 16 meg line pageable       */
#define mctdrsht                          0x10  /* -              All of real and DREF pageable        */
#define mctpvti                           0x08  /* -              PVT FIELDS INITIALIZED          @LTC */
#define mctrsvb5                          0x04  /* -              reserved                    @ME04110 */
#define mctrsvb6                          0x02  /* -              reserved                    @ME04110 */
#define mctb2gsh                          0x01  /* -              Between 16M and 2G pageable          */

/* Values for field "mcteflgs" */
#define mctmigcn                          0x80  /* MIGCNSTR SYSEVENT ISSUED        @H5A                */
#define mctovrmx                          0x40  /* AT LEAST ONE STOR ISOL ADDR SP OVER                 */
#define mctovrsi                          0x20  /* OVERRIDE STOR ISOL IN MIGRATION @H5A                */
#define mctesna                           0x10  /* EXTENDED STORE NOT AVAILABLE    @H5A                */
#define mctesto0                          0x08  /* THE AMOUNT OF AVAILABLE EXTENDED                    */
#define mctrsvb7                          0x04  /* Reserved                    @LLAPAGC                */
#define mcteuics                          0x02  /* PR1 HAS BEEN SCHEDULED TO BUILD                     */
#define mctmigtu                          0x01  /* MIGCNSTR tried to unprotect storage                 */

/* Values for field "mcteflg1" */
#define mctredriverequest                 0x80  /* Redrive a REALSWAP, TRANSWAP                        */
#define mctrsvb1                          0x40  /* reserved                    @WLMP128                */
#define mctpend                           0x20  /* -              REALSWAP or TRANSWAP                 */
#define mctrsvb2                          0x10  /* -              reserved                    @WLMP128 */
#define mctstoragemonitoring              0x08  /* -   Storage monitoring flag     @ME13233            */
#define mctstoragemonitoringareaallocated 0x04  /* - Storage monitoring                                */
#define mctdumpactive                     0x01  /* -        MCVRELDL value lowered, because            */

/* Values for field "mctshmf" */
#define mctshm1                           0x80  /* -              - First level msg issued    @WLMP64V */
#define mctshm2                           0x40  /* -              - Second level msg issued   @WLMP64V */
#define mctcom1                           0x20  /* -              - First level msg issued    @LCOM64A */
#define mctcom2                           0x10  /* -              - Second level msg issued   @LCOM64A */
#define mctlrg1                           0x08  /* -              - First level msg issued    @LLAPAGC */
#define mctlrg2                           0x04  /* -              - Second level msg issued   @LLAPAGC */

/* Values for field "mcttargetincreased" */
#define mctafqincreased                   0x80  /* - The AFQ targets where just                        */
#define mctbelowafqincreased              0x40  /* - The AFQ below targets where                       */
#define mctaboveafqincreased              0x20  /* - The AFQ above targets where                       */
#define mctprestealincreased              0x10  /* - The PreSteal targets where                        */
#define mctdrivestoragetargetadjustment   0x01  /* - Force target recalculation                        */

/* Values for field "mctwtor1flags" */
#define mctwtor1masteractive              0x80  /* WTOR active indicator       @LHIAUXC                */
#define mctwtor1start                     0x40  /* Start Request from IRASTFXS @LHIAUXC                */
#define mctwtor1stop                      0x20  /* Stop Request from IRASTFXS  @LHIAUXC                */
#define mctwtor1delay                     0x01  /* Delay the next WTOR         @ME13212                */

/* Values for field "mctwtor2flags" */
#define mctwtor2masteractive              0x80  /* WTOR active indicator       @LHIAUXA                */
#define mctwtor2start                     0x40  /* Start Request from IRASTFXS @LHIAUXA                */
#define mctwtor2stop                      0x20  /* Stop Request from IRASTFXS  @LHIAUXA                */
#define mctwtor2delay                     0x01  /* Delay the next WTOR         @ME13212                */

/* Values for field "mctfixedfl" */
#define mctfixedculpritprocessingneeded   0x80  /* - Fixed storage culprit                             */

/* Values for field "mctend" */
#define mctlen                            0x388 /* -        LENGTH OF MCT                              */

#pragma pack(reset)
