#pragma pack(packed)

struct smf70ctl ä
  unsigned char  smf70modÄ2Ü;  /* CPU processor family                       @I2C */
  unsigned char  smf70ver;     /* CPU version number                              */
  unsigned char  smf70bnp;     /* Number of physical processors assigned for      */
  unsigned char  smf70inb;     /* PR/SM indicator bits                            */
  unsigned char  smf70stf;     /* Control section flags                      @I2C */
  unsigned char  smf70gtsÄ2Ü;  /* PR/SM - Dispatch interval                       */
  unsigned char  smf70mdlÄ16Ü; /* EBCDIC CPC model identifier.                    */
  unsigned char  smf70dsaÄ2Ü;  /* Number of Diagnose samples                 @I3A */
  unsigned char  smf70ifaÄ2Ü;  /* zAAPs (IFAs) online at the end of the           */
  unsigned char  smf70cpaÄ4Ü;  /* Physical CPU adjustment factor (will be         */
  unsigned char  smf70wlaÄ4Ü;  /* Millions of service units available to MVS      */
  unsigned char  smf70lacÄ4Ü;  /* Long-term average CPU service in millions       */
  unsigned char  smf70hofÄ8Ü;  /* Hypervisor date/time offset in STCK format      */
  unsigned char  smf70hwmÄ16Ü; /* EBCDIC CPC physical model identifier. Valid     */
  unsigned char  smf70supÄ2Ü;  /* zIIPs online at end of the interval    @OA13499 */
  unsigned char  smf70gjtÄ8Ü;  /* Time in STCK format when the partition          */
  unsigned char  smf70pomÄ4Ü;  /* EBCDIC plant code that identifies the plant     */
  unsigned char  smf70cscÄ16Ü; /* EBCDIC sequence code of the configuration.      */
  unsigned char  smf70hhf;     /* Additional flags                       @OA24074 */
  unsigned char  smf70cr;      /* ZEP field 0                            @OA29310 */
  int            smf70pmi;     /* Accumulated number of blocked dispatchable      */
  int            smf70pmu;     /* Number of blocked dispatchable units being      */
  int            smf70pmw;     /* Accumulated number of address spaces and        */
  int            smf70pmp;     /* Maximum number of address spaces and enclaves   */
  short int      smf70pmt;     /* 1/1000s of the CPU capacity for promote         */
  short int      smf70pml;     /* Swapped-in starvation threshold. When an        */
  unsigned char  smf70mpcÄ16Ü; /* When non-zero, EBCDIC model permanent           */
  unsigned char  smf70mtcÄ16Ü; /* When non-zero, EBCDIC model temporary           */
  int            smf70mcr;     /* Model capacity rating. When non-zero,           */
  int            smf70mpr;     /* Model permanent capacity rating. When           */
  int            smf70mtr;     /* Model temporary capacity rating. When           */
  int            smf70zep;     /* ZEP field 1                            @OA25078 */
  unsigned char  smf70zerÄ8Ü;  /* ZEP field 2                            @OA25078 */
  unsigned char  smf70zeeÄ8Ü;  /* ZEP field 3                            @OA25078 */
  unsigned char  smf70zecÄ8Ü;  /* ZEP field 4                            @OA25078 */
  int            smf70nrm;     /* Normalization factor for zIIP. Multiply         */
  int            smf70gau;     /* Long-term average of CPU service in millions    */
  unsigned char  smf70zeiÄ8Ü;  /* ZEP field 5                            @OA29310 */
  int            smf70ncr;     /* Nominal model-capacity rating.                  */
  int            smf70npr;     /* Nominal permanent model-capacity rating.        */
  int            smf70ntr;     /* Nominal temporary model-capacity rating.        */
  unsigned char  smf70cai;     /* Capacity-adjustment indication. When zero, the  */
  unsigned char  smf70ccr;     /* Capacity-change reason.                         */
  unsigned char  _filler1Ä2Ü;  /* Reserved                               @OA29530 */
  ü;

/* Values for field "smf70inb" */
#define smf70dif 0x80 /* PR/SM - Diagnose X'204' failure                 */
#define smf70npc 0x40 /* PR/SM - Number of phys procrs has changed       */
#define smf70tsc 0x20 /* PR/SM - Dispatch interval value changed         */
#define smf70phy 0x10 /* PR/SM - An additional partition is presented    */
#define smf70dge 0x08 /* PR/SM - Diagnose X'204' extended data is        */

/* Values for field "smf70stf" */
#define smf70sts 0x80 /* Store-system-information facility          @I2A */
#define smf70adc 0x40 /* Physical CPU adjustment factor changed @WA46477 */
#define smf70wuc 0x20 /* Service units available to MVS image            */
#define smf70rcu 0x10 /* SMF70LAC is provided for systems running        */
#define smf70hwv 0x08 /* SMF70MDL is the model-capacity identifier       */
#define smf70ptc 0x04 /* CP promote slices (OPT parameter BLWLTRPCT)     */
#define smf70plc 0x02 /* Swapped-in starvation threshold                 */
#define smf70gav 0x01 /* SMF70GAU is valid                          @34A */

/* Values for field "smf70hhf" */
#define smf70hhs 0x80 /* HiperDispatch supported                @OA24074 */
#define smf70hha 0x40 /* HiperDispatch is active                @OA24074 */
#define smf70hhc 0x20 /* HiperDispatch status changed during             */

#pragma pack(reset)
