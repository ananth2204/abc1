#pragma pack(packed)

struct qw0063 ä
  unsigned char  qw0063ot;    /* PARSER OPTIONS AND HOST LANGUAGE        */
  unsigned char  qw0063hl;    /* HOST LANGUAGE SECOND FIELD              */
  unsigned char  qw0063llÄ2Ü; /* LL - LENGTH OF FOLLOWING FIELD + 2      */
  unsigned char  qw0063st;    /* %U SQL STATEMENT REQUESTED TO BE PARSED */
  ü;

/* Values for field "qw0063ot" */
#define qw0063oq 0x80 /* OPTION - APOST(0) OR QUOTE(1)          */
#define qw0063od 0x40 /* OPTION - PERIOD(0) OR COMMA(1)         */
#define qw0063or 0x20 /* OPTION - APOSTSQL(0) OR QUOTESQL(1)    */
#define qw0063om 0x10 /* OPTION - MIXED=NO (0) OR MIXED=YES (1) */
#define qw0063oh 0x07 /* OPTION - HOST LANGUAGE BIT MASK        */
#define qw0063oa 1    /* OPTION - HOST ASSEMBLER LANGUAGE       */
#define qw0063oc 2    /* OPTION - HOST COBOL                    */
#define qw0063op 3    /* OPTION - HOST PL/I                     */
#define qw0063os 4    /* OPTION - DYNAMIC SQL                   */
#define qw0063of 5    /* OPTION - HOST FORTRAN                  */
#define qw0063o2 6    /* OPTION - HOST COB2                     */
#define qw006307 7    /* LOOK AT FIELD QW0063HL TO DETERMINE    */

/* Values for field "qw0063hl" */
#define qw0063hb 'B'  /* OPTION - HOST ASSEMBLER                */
#define qw0063hc 'C'  /* OPTION - HOST COBOL                    */
#define qw0063hd 'D'  /* OPTION - HOST C                        */
#define qw0063hf 'F'  /* OPTION - HOST FORTRAN                  */
#define qw0063hp 'P'  /* OPTION - HOST PL/I                     */
#define qw0063h2 '2'  /* OPTION - HOST COBOL II                 */
#define qw0063h3 '3'  /* OPTION - HOST IBM COBOL                */
#define qw0063h4 '4'  /* OPTION - HOST C++                      */

#pragma pack(reset)
