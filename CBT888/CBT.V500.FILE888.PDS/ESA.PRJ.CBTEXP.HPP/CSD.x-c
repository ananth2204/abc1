#pragma pack(packed)

struct csd ä
  unsigned char  csdcsdÄ4Ü;                           /* -    CONTROL BLOCK ACRONYM IN EBCDIC                   */
  struct ä
    unsigned char  _csdcpujsÄ2Ü; /* -      Bit mask of CPUs available for Affinity      */
    short int      _filler1;     /* -         Reserved: (was CSDCHAD)              @L9C */
    ü csdcpujw;
  struct ä
    struct ä
      unsigned char  _csdcpualÄ2Ü; /* -      Bit mask of CPUs currently alive. */
      ü csdsaff;
    short int      _csdcpuol; /* -         Number of CPUs currently alive. This */
    ü csdcpuow;
  struct ä
    unsigned char  _csdscfl1; /* -      FIRST BYTE OF CSDSCWRD  */
    unsigned char  _csdscfl2; /* -      SECOND BYTE OF CSDSCWRD */
    unsigned char  _csdscfl3; /* -      THIRD BYTE OF CSDSCWRD  */
    unsigned char  _csdscfl4; /* -      FOURTH BYTE OF CSDSCWRD */
    ü csdscwrd;
  int            _filler2;                            /* Was CSDAXPOW, CSDAXPAL, CSDAXPOL     @L9C              */
  unsigned char  csdmf1cpÄ2Ü;                         /* -      BIT MASK OF CPUS VARIED ON OR OFFLINE.          */
  unsigned char  csdacr;                              /* -      VALUE OF X'FF' MEANS ACR IS IN PROGRESS         */
  unsigned char  csdflags;                            /* -      FLAG BYTE                                       */
  double         csd_cpu_alive;                       /* CPU alive data on double word boundary                 */
  double         csd_cpus_going_on_or_off_mask;       /* mask of CPUs varied on or off                          */
  double         csd_cpus_manipulated_by_wlm;         /* Mask of CPUs manipulated by WLM.                       */
  double         csd_cpus_varied_offline_by_operator; /* Mask of CPU varied offline                             */
  double         csd_cpus_taken_offline_by_acr;       /* Mask of CPU varied offline by                          */
  struct ä
    double         _csd_bylpar_cp_mask; /* @HBA */
    ü csd_cp_mask;
  struct ä
    struct ä
      double         _csd_bylpar_ifa_mask; /* @HBA */
      ü csd_bylpar_zaap_mask;
    ü csd_ifa_mask;
  struct ä
    struct ä
      struct ä
        double         _csd_sup_mask;
        ü csd_bylpar_sup_mask;
      ü csd_bylpar_ziip_mask;
    ü csd_ziip_mask;
  unsigned char  csdrv04cÄ16Ü;                        /* Reserved space on Dword Bdy          @HAC              */
  unsigned char  _filler3Ä2Ü;                         /* -      Reserved: was CSDCPWLM               @L9C       */
  short int      csdddrct;                            /* -         DDR DEVICE ALLOCATION INTERFACE COUNT        */
  int            csdgdcc;                             /* -         COUNT OF USABLE CLOCK COMPARATORS            */
  int            csdgdint;                            /* -         COUNT OF USABLE CPU TIMERS CURRENTLY IN      */
  int            csdgdtod;                            /* -         COUNT OF CPUS THAT HAVE ACCESS TO A GOOD     */
  int            csdtcnt;                             /* -         COUNT OF TAPE ALLOCATIONS IN PROGRESS        */
  int            csducnt;                             /* -         COUNT OF UNIT RECORD ALLOCATIONS IN          */
  struct ä
    struct ä
      unsigned char  _filler4Ä2Ü;   /* -      CPU 0 */
      unsigned char  _filler5Ä2Ü;   /* -      CPU 1 */
      unsigned char  _filler6Ä2Ü;   /* -      CPU 2 */
      unsigned char  _filler7Ä2Ü;   /* -      CPU 3 */
      unsigned char  _filler8Ä2Ü;   /* -      CPU 4 */
      unsigned char  _filler9Ä2Ü;   /* -      CPU 5 */
      unsigned char  _filler10Ä2Ü;  /* -      CPU 6 */
      unsigned char  _filler11Ä2Ü;  /* -      CPU 7 */
      unsigned char  _filler12Ä2Ü;  /* -      CPU 8 */
      unsigned char  _filler13Ä2Ü;  /* -      CPU 9 */
      unsigned char  _filler14Ä2Ü;  /* -      CPU A */
      unsigned char  _filler15Ä2Ü;  /* -      CPU B */
      unsigned char  _filler16Ä2Ü;  /* -      CPU C */
      unsigned char  _filler17Ä2Ü;  /* -      CPU D */
      unsigned char  _filler18Ä2Ü;  /* -      CPU E */
      unsigned char  _filler19Ä2Ü;  /* -      CPU F */
      ü csdmask0;
    ü csdmask;
  unsigned char  csdiosid;                            /* RESERVED -- DO NOT REUSE             @L6C              */
  unsigned char  csdicpus;                            /* -      The number of initial (LPAR-defined)            */
  struct ä
    unsigned char  _csdi_bylpar_ifas; /* -                                      @HBA */
    ü csdiifas;
  struct ä
    unsigned char  _csdi_bylpar_sups; /* -                                      @HBA */
    ü csdisups;
  struct ä
    unsigned char  _csdcpuvfÄ2Ü;  /* -      BIT MASK OF CPUS WITH ONLINE VECTORS @H2A */
    unsigned char  _filler20Ä2Ü;  /* -      TWO BYTES TO MAKE CSDCPUVF A FULL    @D1C */
    ü csdcpuvw;
  void          *csdcmt;                              /* -            ADDRESS OF THE CONFIGURATION MANAGEMENT   */
  void          *csdesat;                             /* -            ADDRESS OF THE EXCESSIVE SPIN        @L1A */
  void          *csdtmpes;                            /* -            ADDRESS OF THE EXCESSIVE SPIN        @D3C */
  void          *csdrcfv;                             /* -            ADDRESS OF THE RECONFIGURATION VECTOR     */
  unsigned char  csdcpsidÄ16Ü;                        /* TABLE OF SIDE ID FOR EACH CPU IN     @L4A              */
  int            _filler21;                           /* Reserved: was  CSDCPACW              @L9C              */
  void          *csdlwvct;                            /* -            ADDRESS OF THE LOADWAIT VECTOR TABLE @H4A */
  struct ä
    unsigned char  _csdcryptÄ2Ü; /* -    BIT MASK OF ONLINE CRYPTO FACILITIES.@H7A */
    unsigned char  _csdcrinsÄ2Ü; /* -    BIT MASK OF INSTALLED CRYPTO FACILITIES.  */
    ü csdcrwrd;
  int            csd_number_online_cpus;              /* 32-bit count of alive CPUs. This                       */
  void          *csdumvcl;                            /* -            ADDRESS OF THE IEEUMVCL ENTRY POINT  @H5A */
  void          *csdustck;                            /* -            ADDRESS OF THE IEEUSTCK ENTRY POINT  @H5A */
  void          *csd_esta;                            /* -            ADDRESS OF THE ISN$ESTA ENTRY POINT  @H5A */
  void          *csd_frr;                             /* -            ADDRESS OF THE ISN$FRR  ENTRY POINT  @H5A */
  void          *csdscpin;                            /* -            ADDRESS OF THE ISN$SCPI ENTRY POINT  @H6A */
  short int      csdmaxmp;                            /* Maximum CPU address in configuration @L9A              */
  unsigned char  _filler22Ä2Ü;                        /* -     RESERVED.                            @L9C        */
  struct ä
    int            _csdexcnt; /* COUNT OF ACTIVE USERS OF GLOBAL SPIN-LOOP */
    int            _csdexsec; /* EXPIRATION TIME (DOWN TO SECONDS) FOR     */
    ü csdexcds;
  void          *csdglex;                             /* -            ADDRESS OF THE MACRO PROCESSOR (BLWGLEX)  */
  unsigned char  csdplpn;                             /* PRSM LOGICAL PARTITION NUMBER        @H8A              */
  unsigned char  csdexsfl;                            /* FLAG BYTE FOR EXCESSIVE SPIN         @P4A              */
  unsigned char  _filler23Ä2Ü;                        /* RESERVED                             @05A              */
  void          *csdrcpt;                             /* Address to the LCCA,LCCX and PCCA                      */
  struct ä
    struct ä
      int            _csd_number_online_bylpar_ifas; /* zAAPs online                    @HBA */
      ü csd_number_online_bylpar_zaaps;
    ü csd_number_online_ifas;
  struct ä
    int            _csd_number_online_bylpar_standard_cps; /* Regular CPs online      @HBA */
    ü csd_number_online_standard_cps;
  struct ä
    struct ä
      struct ä
        int            _csd_number_online_sups; /* @HAA */
        ü csd_number_online_bylpar_sups;
      ü csd_number_online_bylpar_ziips;
    ü csd_number_online_ziips;
  unsigned char  csddiagÄ88Ü;                         /* -    RESERVED.                            @HBA         */
  unsigned char  _filler24Ä40Ü;                       /* -    RESERVED.                            @HBC         */
  double         csdend;                              /* End of CSD control block             @L9C              */
  ü;

#define csdcpujs                              csdcpujw._csdcpujs
#define csdcpual                              csdcpuow.csdsaff._csdcpual
#define csdcpuol                              csdcpuow._csdcpuol
#define csdscfl1                              csdscwrd._csdscfl1
#define csdscfl2                              csdscwrd._csdscfl2
#define csdscfl3                              csdscwrd._csdscfl3
#define csdscfl4                              csdscwrd._csdscfl4
#define csd_bylpar_cp_mask                    csd_cp_mask._csd_bylpar_cp_mask
#define csd_bylpar_ifa_mask                   csd_ifa_mask.csd_bylpar_zaap_mask._csd_bylpar_ifa_mask
#define csd_sup_mask                          csd_ziip_mask.csd_bylpar_ziip_mask.csd_bylpar_sup_mask._csd_sup_mask
#define csdi_bylpar_ifas                      csdiifas._csdi_bylpar_ifas
#define csdi_bylpar_sups                      csdisups._csdi_bylpar_sups
#define csdcpuvf                              csdcpuvw._csdcpuvf
#define csdcrypt                              csdcrwrd._csdcrypt
#define csdcrins                              csdcrwrd._csdcrins
#define csdexcnt                              csdexcds._csdexcnt
#define csdexsec                              csdexcds._csdexsec
#define csd_number_online_bylpar_ifas         csd_number_online_ifas.csd_number_online_bylpar_zaaps._csd_number_online_bylpar_ifas
#define csd_number_online_bylpar_standard_cps csd_number_online_standard_cps._csd_number_online_bylpar_standard_cps
#define csd_number_online_sups                csd_number_online_ziips.csd_number_online_bylpar_ziips.csd_number_online_bylpar_sups._csd_number_online_sups

/* Values for field "csdscfl1" */
#define csdrv042                 0x80  /* -  RESERVED                                        */
#define csdsysnd                 0x40  /* -        SYSTEM-WIDE NON-DISPATCHABILITY BIT.      */
#define csdrv001                 0x20  /* -  RESERVED                                        */
#define csdrv002                 0x10  /* -  RESERVED                                        */
#define csdrv003                 0x08  /* -  RESERVED                                        */
#define csdrv004                 0x04  /* -  RESERVED                                        */
#define csdrv005                 0x02  /* -  RESERVED                                        */
#define csdrv006                 0x01  /* -  RESERVED                                        */

/* Values for field "csdscfl2" */
#define csdrv007                 0x80  /* -  RESERVED                                        */
#define csdrv008                 0x40  /* -  RESERVED                                        */
#define csdrv009                 0x20  /* -  RESERVED                                        */
#define csdrv010                 0x10  /* -  RESERVED                                        */
#define csdrv011                 0x08  /* -  RESERVED                                        */
#define csdrv012                 0x04  /* -  RESERVED                                        */
#define csdrv013                 0x02  /* -  RESERVED                                        */
#define csdrv014                 0x01  /* -  RESERVED                                        */

/* Values for field "csdscfl3" */
#define csdrv015                 0x80  /* -  RESERVED                                        */
#define csdrv016                 0x40  /* -  RESERVED                                        */
#define csdrv017                 0x20  /* -  RESERVED                                        */
#define csdrv018                 0x10  /* -  RESERVED                                        */
#define csdrv019                 0x08  /* -  RESERVED                                        */
#define csdrv020                 0x04  /* -  RESERVED                                        */
#define csdrv021                 0x02  /* -  RESERVED                                        */
#define csdrv022                 0x01  /* -  RESERVED                                        */

/* Values for field "csdscfl4" */
#define csdrv023                 0x80  /* -  RESERVED                                        */
#define csdrv024                 0x40  /* -  RESERVED                                        */
#define csdrv025                 0x20  /* -  RESERVED                                        */
#define csdrv026                 0x10  /* -  RESERVED                                        */
#define csdrv027                 0x08  /* -  RESERVED                                        */
#define csdrv028                 0x04  /* -  RESERVED                                        */
#define csdrv029                 0x02  /* -  RESERVED                                        */
#define csdrv030                 0x01  /* -  RESERVED                                        */

/* Values for field "csdflags" */
#define csdmp                    0x80  /* -        RESERVED - DO NOT USE                @L7C */
#define csdstchk                 0x40  /* -        STORAGE CHECK INDICATOR - SET BY RSM      */
#define csdcpudn                 0x20  /* -  GLOBAL BIT INDICATING CPU INITIALIZATION        */
#define csdndpar                 0x10  /* -  RUNNING IN NON-DEDICATED PARTITION.  @P7A       */
#define csdprcpu                 0x08  /* -  Preserve CPU status                  @07A       */
#define csdrv036                 0x04  /* -  RESERVED                                        */
#define csdrv037                 0x02  /* -  RESERVED                                        */
#define csdrv038                 0x01  /* -  RESERVED                                        */

/* Values for field "csdend" */
#define csdlen                   0x190 /* Length of CSD control block          @L9C          */
#define csd_max_crypto_address   15    /* Maximum supported Crypto address     @L9A          */
#define csd_max_affinity_address 15    /* Max CPU supporting affinity        @L9A            */

#pragma pack(reset)
