#pragma pack(packed)

struct tr ä
  void          *tr_stckÄ2Ü;                 /* stck area                             */
  unsigned char  tr_flag_exit;               /* entry/exit flag                       */
  unsigned char  tr_flag_xplink;             /* xplink flag                           */
  unsigned char  tr_flag_errno;              /* errno flag                            */
  unsigned char  tr_flag_args;               /* args flag                             */
  unsigned char  tr_flag_multi;              /* multi flag                            */
  unsigned char  tr_flag_head;               /* head flag                             */
  unsigned char  tr_flag_backtrace;          /* BACKTRACE flag                        */
  unsigned char  tr_flag_intern;             /* internal call flag                    */
  unsigned char  tr_flag_skip;               /* skip flag                             */
  unsigned char  tr_flag_format;             /* TR format flag                        */
  unsigned char  tr_flag_res2;               /* reserved                              */
  unsigned char  tr_flag_res3;               /* reserved                              */
  void          *tr_next;                    /* next trace block                      */
  void          *tr_tcb;                     /* actual tcb address                    */
  void          *tr_thdidÄ2Ü;                /* thread id                             */
  void          *tr_filter;                  /* filter address                        */
  void          *tr_caller_ll;               /* caller LL address                     */
  void          *tr_caller_addr;             /* caller address                        */
  void          *tr_caller_offset;           /* caller offset                         */
  unsigned char  tr_callerÄ32Ü;              /* caller name                           */
  unsigned char  tr_calledÄ32Ü;              /* called name                           */
  unsigned char  tr_epnameÄ8Ü;               /* EPname                                */
  void          *tr_dsa;                     /* DSA address                           */
  void          *tr_errno;                   /* errno value                           */
  void          *tr_errno2;                  /* errno2 value                          */
  void          *tr_return;                  /* return value                          */
  void          *tr_r1;                      /* r1 value                              */
  void          *tr_r2;                      /* r2 value                              */
  void          *tr_r3;                      /* r3 value                              */
  void          *tr_r15;                     /* r15 value                             */
  void          *tr_argsÄ3Ü;                 /* arglist                               */
  unsigned char  tr_arg0Ä128Ü;               /* arg1                                  */
  unsigned char  tr_arg1Ä128Ü;               /* arg2                                  */
  unsigned char  tr_arg2Ä128Ü;               /* arg3                                  */
  unsigned char  tr_pathÄ128Ü;               /* path name                             */
  struct ä
    void          *_filler1;  /* USER EXIT ROUTINE ADDRESS */
    ü tr_espie_l;
  void          *_filler2;                   /* USER PARAMETER LIST ADDRESS           */
  unsigned char  _filler3Ä2Ü;                /* INTERRUPTION MASK                     */
  unsigned char  _filler4Ä2Ü;
  void          *_filler5;                   /* RESERVED                              */
  void          *tr_espie_token;             /* ESPIE token                           */
  unsigned char  _filler6Ä4Ü;
  double         _filler7Ä8Ü;                /* work area                             */
  union ä
    unsigned char  _tr_buffÄ256Ü; /* buffer */
    struct ä
      short int      _tr_buff_rdwÄ2Ü;     /* rdw       */
      unsigned char  _filler8;
      unsigned char  _tr_buff_callerÄ32Ü; /* caller    */
      unsigned char  _tr_buff_idÄ3Ü;      /* id        */
      unsigned char  _tr_buff_calledÄ32Ü; /* called    */
      unsigned char  _tr_buff_pad1;
      unsigned char  _tr_buff_tcbÄ12Ü;    /* TCB       */
      unsigned char  _filler9;
      unsigned char  _tr_buff_tidÄ20Ü;    /* Thread ID */
      unsigned char  _filler10;
      unsigned char  _filler11Ä149Ü;
      ü _tr_struct1;
    struct ä
      unsigned char  _filler12Ä5Ü;
      unsigned char  _tr_buff_returnÄ5Ü;
      unsigned char  _tr_buff_return_valueÄ21Ü;
      unsigned char  _tr_buff_errnoÄ6Ü;
      unsigned char  _tr_buff_errno_valueÄ21Ü;
      unsigned char  _tr_buff_errno2Ä7Ü;
      unsigned char  _tr_buff_errno2_valueÄ21Ü;
      unsigned char  _filler13Ä170Ü;
      ü _tr_struct2;
    struct ä
      unsigned char  _filler14Ä5Ü;
      unsigned char  _tr_buff_offÄ4Ü;
      unsigned char  _tr_buff_dump_hexÄ8ÜÄ9Ü;
      unsigned char  _tr_buff_dump_charÄ32Ü;
      unsigned char  _filler15Ä143Ü;
      ü _tr_struct3;
    struct ä
      unsigned char  _filler16Ä5Ü;
      unsigned char  _tr_buff_argsÄ5Ü;        /* arg   */
      unsigned char  _filler17Ä21Ü;           /* value */
      unsigned char  _tr_buff_args_dumpÄ105Ü; /* dump  */
      unsigned char  _filler18Ä120Ü;
      ü _tr_struct4;
    struct ä
      unsigned char  _filler19Ä5Ü;
      unsigned char  _tr_buff_caller_addrÄ12Ü;   /* caller addr */
      unsigned char  _filler20;
      unsigned char  _tr_buff_caller_offsetÄ12Ü; /* caller addr */
      unsigned char  _filler21Ä5Ü;
      unsigned char  _tr_buff_caller_moduleÄ64Ü;
      unsigned char  _filler22Ä157Ü;
      ü _tr_struct5;
    ü _tr_union1;
  void          *tr_buffa;                   /* pointer to buff                       */
  void          *tr_bufflen;                 /* actual buffer length                  */
  void          *tr_retval;                  /* return value                          */
  void          *tr_retcode;                 /* return code                           */
  void          *tr_rsncode;                 /* reson code                            */
  void          *tr_fdbkcodeÄ3Ü;             /* feadback code                         */
  void          *tr_plistÄ24Ü;               /* parm list                             */
  void          *tr_dsa_prev;                /* prev DSA                              */
  void          *tr_dsa_format;              /* actual DSA format                     */
  unsigned char  _filler23;                  /* PELLAST flag byte.        X02113      */
  unsigned char  _filler24;                  /* PELMILEN - RNAME length.              */
  unsigned char  _filler25;
  unsigned char  _filler26;                  /* PELRET - return code byte.            */
  void          *_filler27;                  /* QNAME ADDRESS                         */
  void          *_filler28;                  /* RNAME ADDRESS                         */
  struct ä
    short int      _filler29;  /* LENGTH   */
    short int      _filler30;  /* FID CODE */
    ü tr_gtf;
  void          *_filler31;                  /* DATA ADDRESS                          */
  unsigned char  _filler32Ä8Ü;               /* DATA64 AREA ADDRESS    @P3C           */
  unsigned char  _filler33Ä4Ü;
  unsigned char  tr_csvquery_xversion;       /* ++ INPUT XVERSION                     */
  unsigned char  tr_csvquery_xflags1;        /* ++ FIELD_LABEL                        */
  unsigned char  tr_csvquery_xflags2;        /* ++ FIELD_LABEL                        */
  unsigned char  tr_csvquery_xflags3;        /* ++ FIELD_LABEL                        */
  unsigned char  tr_csvquery_xinepnameÄ8Ü;   /* ++                                    */
  void          *tr_csvquery_xinaddr;        /* ++                                    */
  int            tr_csvquery_xoutlength;     /* ++                                    */
  void          *tr_csvquery_xoutepa;        /* ++                                    */
  unsigned char  tr_csvquery_xoutepnmÄ8Ü;    /* ++                                    */
  unsigned char  tr_csvquery_xoutmjnmÄ8Ü;    /* ++                                    */
  unsigned char  tr_csvquery_xoutsp;         /* ++                                    */
  unsigned char  tr_csvquery_xoutattr1;      /* ++                                    */
  unsigned char  tr_csvquery_xoutattr2;      /* ++                                    */
  unsigned char  tr_csvquery_xoutattr3;      /* ++                                    */
  unsigned char  tr_csvquery_xoutvalidÄ4Ü;   /* ++                                    */
  void          *tr_csvquery_xoutloadpt;     /* ++                                    */
  struct ä
    void          *_filler34;  /* DE OR EPLOC ADDRESS          @G860PXB */
    ü tr_filter_attachl;
  void          *_filler35;                  /* DCB ADDRESS                  @G860PXB */
  void          *_filler36;                  /* NEW FORMAT + ECB ADDR        @G860PXB */
  void          *_filler37;                  /* GSPL OR GSPV                 @G860PXB */
  void          *_filler38;                  /* SHSPV OR SHSPL               @G860PXB */
  void          *_filler39;                  /* EXIT ROUTINE ADDRESS         @G860PXB */
  short int      _filler40;                  /* DPMOD VALUE                  @G860PXB */
  unsigned char  _filler41;                  /* LPMOD VALUE                  @G860PXB */
  unsigned char  _filler42;                  /* STATUS BYTE                  @G860PXB */
  void          *_filler43Ä2Ü;               /* EP NAME SPACE                @G860PXB */
  void          *_filler44;                  /* ADDRESS OF JSCB              @G860PXB */
  void          *_filler45;                  /* (E)STAI PARM LIST            @G860PXB */
  void          *_filler46;                  /* EXIT ADDRESS                 @G860PXB */
  void          *_filler47;                  /* TASKLIB                      @G860PXB */
  unsigned char  _filler48;                  /* FLAG BYTE                    @G860PXB */
  unsigned char  _filler49;                  /* TASK ID                      @G860PXB */
  short int      _filler50;                  /* PARM LIST LENGTH             @G860PXB */
  void          *_filler51;                  /* SUBPOOL LIST ADDRESS/VALUE   @G860PXB */
  unsigned char  _filler52;                  /* SET FLAGS                    @G860PXB */
  unsigned char  _filler53;                  /* SET UP FORMAT NUMBER         @G860PXB */
  unsigned char  _filler54Ä10Ü;              /* RESERVED BYTES FOR FUTURE    @G860PXB */
  unsigned char  _filler55Ä4Ü;
  void          *tr_filter_ecb;              /* ECB                                   */
  void          *tr_filter_tcb;              /* TCB addr                              */
  void          *tr_saveÄ18Ü;                /* temp save are                         */
  union ä
    struct ä
      unsigned char  _tr_ieatdump_xplistnameÄ4Ü; /* ++ CONSTANT  XPLISTNAME */
      unsigned char  _tr_ieatdump_xword1Ä4Ü;     /* ++ FIELD_LABEL  XWORD1  */
      ü tr_ieatdump;
    struct ä
      unsigned char  _filler56Ä4Ü;
      unsigned char  _tr_ieatdump_xplistlenÄ2Ü; /* ++ INPUT  XPLISTLEN   */
      unsigned char  _tr_ieatdump_xversion;     /* ++ INPUT XVERSION     */
      unsigned char  _tr_ieatdump_xrsv0001;     /* ++ RESERVED  XRSV0001 */
      ü _tr_struct6;
    ü _tr_union2;
  unsigned char  tr_ieatdump_xsdata1;        /* ++ FIELD_LABEL                        */
  unsigned char  tr_ieatdump_xsdata2;        /* ++ FIELD_LABEL                        */
  unsigned char  tr_ieatdump_xflags1;        /* ++ FIELD_LABEL                        */
  unsigned char  tr_ieatdump_xrsv0002;       /* ++ RESERVED  XRSV0002                 */
  unsigned char  tr_ieatdump_xdsp_stokenÄ8Ü; /* ++   XDSP_STOKEN                      */
  void          *tr_ieatdump_xdsp_origin;    /* ++   XDSP_ORIGIN                      */
  void          *tr_ieatdump_xdsp_records_;  /* ++   XDSP_RECORDS@                    */
  unsigned char  tr_ieatdump_xddnameÄ8Ü;     /* ++   XDDNAME                          */
  union ä
    void          *_tr_ieatdump_xdsnad;    /* ++   XDSNAD   */
    void          *_tr_ieatdump_xdsn_addr; /* ++  ADDR XDSN */
    ü _tr_union3;
  int            tr_ieatdump_xdsn_alet;      /* ++  ALET XDSN                         */
  union ä
    void          *_tr_ieatdump_xhdrad;    /* ++   XHDRAD   */
    void          *_tr_ieatdump_xhdr_addr; /* ++  ADDR XHDR */
    ü _tr_union4;
  int            tr_ieatdump_xhdr_alet;      /* ++  ALET XHDR                         */
  union ä
    void          *_tr_ieatdump_xidxad;    /* ++   XIDXAD   */
    void          *_tr_ieatdump_xidx_addr; /* ++  ADDR XIDX */
    ü _tr_union5;
  int            tr_ieatdump_xidx_alet;      /* ++  ALET XIDX                         */
  union ä
    void          *_tr_ieatdump_xsymrecad;    /* ++   XSYMRECAD   */
    void          *_tr_ieatdump_xsymrec_addr; /* ++  ADDR XSYMREC */
    ü _tr_union6;
  int            tr_ieatdump_xsymrec_alet;   /* ++  ALET XSYMREC                      */
  union ä
    void          *_tr_ieatdump_xintokenad;    /* ++   XINTOKENAD   */
    void          *_tr_ieatdump_xintoken_addr; /* ++  ADDR XINTOKEN */
    ü _tr_union7;
  int            tr_ieatdump_xintoken_alet;  /* ++  ALET XINTOKEN                     */
  union ä
    void          *_tr_ieatdump_xremotead;    /* ++   XREMOTEAD   */
    void          *_tr_ieatdump_xremote_addr; /* ++  ADDR XREMOTE */
    ü _tr_union8;
  int            tr_ieatdump_xremote_alet;   /* ++  ALET XREMOTE                      */
  union ä
    void          *_tr_ieatdump_xprobdescad;    /* ++   XPROBDESCAD   */
    void          *_tr_ieatdump_xprobdesc_addr; /* ++  ADDR XPROBDESC */
    ü _tr_union9;
  int            tr_ieatdump_xprobdesc_alet; /* ++  ALET XPROBDESC                    */
  union ä
    void          *_tr_ieatdump_xlistad;    /* ++   XLISTAD   */
    void          *_tr_ieatdump_xlist_addr; /* ++  ADDR XLIST */
    ü _tr_union10;
  int            tr_ieatdump_xlist_alet;     /* ++  ALET XLIST                        */
  union ä
    void          *_tr_ieatdump_xsubplstad;    /* ++   XSUBPLSTAD   */
    void          *_tr_ieatdump_xsubplst_addr; /* ++  ADDR XSUBPLST */
    ü _tr_union11;
  int            tr_ieatdump_xsubplst_alet;  /* ++  ALET XSUBPLST                     */
  union ä
    void          *_tr_ieatdump_xdsplistad;    /* ++   XDSPLISTAD   */
    void          *_tr_ieatdump_xdsplist_addr; /* ++  ADDR XDSPLIST */
    ü _tr_union12;
  int            tr_ieatdump_xdsplist_alet;  /* ++  ALET XDSPLIST                     */
  union ä
    void          *_tr_ieatdump_xecbad;    /* ++   XECBAD   */
    void          *_tr_ieatdump_xecb_addr; /* ++  ADDR XECB */
    ü _tr_union13;
  int            tr_ieatdump_xecb_alet;      /* ++  ALET XECB                         */
  void          *tr_ceetest_parmsÄ3Ü;
  unsigned char  tr_ceetest_cmdÄ16Ü;
  void          *tr_ceetest_fcÄ3Ü;
  unsigned char  tr_ceetest_dsaÄ128Ü;
  unsigned char  tr_tiÄ74Ü;                  /* work TI area                          */
  unsigned char  _filler57Ä2Ü;
  struct ä
    void          *_filler58;  /* USER EXIT ROUTINE ADDRESS */
    ü tr_espie_save;
  void          *_filler59;                  /* USER PARAMETER LIST ADDRESS           */
  unsigned char  _filler60Ä2Ü;               /* INTERRUPTION MASK                     */
  unsigned char  _filler61Ä2Ü;
  void          *_filler62;                  /* RESERVED                              */
  unsigned char  _filler63Ä2312Ü;            /* round to 2k                           */
  ü;

#define tr_buff                    _tr_union1._tr_buff
#define tr_buff_rdw                _tr_union1._tr_struct1._tr_buff_rdw
#define tr_buff_caller             _tr_union1._tr_struct1._tr_buff_caller
#define tr_buff_id                 _tr_union1._tr_struct1._tr_buff_id
#define tr_buff_called             _tr_union1._tr_struct1._tr_buff_called
#define tr_buff_pad1               _tr_union1._tr_struct1._tr_buff_pad1
#define tr_buff_tcb                _tr_union1._tr_struct1._tr_buff_tcb
#define tr_buff_tid                _tr_union1._tr_struct1._tr_buff_tid
#define tr_buff_return             _tr_union1._tr_struct2._tr_buff_return
#define tr_buff_return_value       _tr_union1._tr_struct2._tr_buff_return_value
#define tr_buff_errno              _tr_union1._tr_struct2._tr_buff_errno
#define tr_buff_errno_value        _tr_union1._tr_struct2._tr_buff_errno_value
#define tr_buff_errno2             _tr_union1._tr_struct2._tr_buff_errno2
#define tr_buff_errno2_value       _tr_union1._tr_struct2._tr_buff_errno2_value
#define tr_buff_off                _tr_union1._tr_struct3._tr_buff_off
#define tr_buff_dump_hex           _tr_union1._tr_struct3._tr_buff_dump_hex
#define tr_buff_dump_char          _tr_union1._tr_struct3._tr_buff_dump_char
#define tr_buff_args               _tr_union1._tr_struct4._tr_buff_args
#define tr_buff_args_dump          _tr_union1._tr_struct4._tr_buff_args_dump
#define tr_buff_caller_addr        _tr_union1._tr_struct5._tr_buff_caller_addr
#define tr_buff_caller_offset      _tr_union1._tr_struct5._tr_buff_caller_offset
#define tr_buff_caller_module      _tr_union1._tr_struct5._tr_buff_caller_module
#define tr_ieatdump_xplistname     _tr_union2.tr_ieatdump._tr_ieatdump_xplistname
#define tr_ieatdump_xword1         _tr_union2.tr_ieatdump._tr_ieatdump_xword1
#define tr_ieatdump_xplistlen      _tr_union2._tr_struct6._tr_ieatdump_xplistlen
#define tr_ieatdump_xversion       _tr_union2._tr_struct6._tr_ieatdump_xversion
#define tr_ieatdump_xrsv0001       _tr_union2._tr_struct6._tr_ieatdump_xrsv0001
#define tr_ieatdump_xdsnad         _tr_union3._tr_ieatdump_xdsnad
#define tr_ieatdump_xdsn_addr      _tr_union3._tr_ieatdump_xdsn_addr
#define tr_ieatdump_xhdrad         _tr_union4._tr_ieatdump_xhdrad
#define tr_ieatdump_xhdr_addr      _tr_union4._tr_ieatdump_xhdr_addr
#define tr_ieatdump_xidxad         _tr_union5._tr_ieatdump_xidxad
#define tr_ieatdump_xidx_addr      _tr_union5._tr_ieatdump_xidx_addr
#define tr_ieatdump_xsymrecad      _tr_union6._tr_ieatdump_xsymrecad
#define tr_ieatdump_xsymrec_addr   _tr_union6._tr_ieatdump_xsymrec_addr
#define tr_ieatdump_xintokenad     _tr_union7._tr_ieatdump_xintokenad
#define tr_ieatdump_xintoken_addr  _tr_union7._tr_ieatdump_xintoken_addr
#define tr_ieatdump_xremotead      _tr_union8._tr_ieatdump_xremotead
#define tr_ieatdump_xremote_addr   _tr_union8._tr_ieatdump_xremote_addr
#define tr_ieatdump_xprobdescad    _tr_union9._tr_ieatdump_xprobdescad
#define tr_ieatdump_xprobdesc_addr _tr_union9._tr_ieatdump_xprobdesc_addr
#define tr_ieatdump_xlistad        _tr_union10._tr_ieatdump_xlistad
#define tr_ieatdump_xlist_addr     _tr_union10._tr_ieatdump_xlist_addr
#define tr_ieatdump_xsubplstad     _tr_union11._tr_ieatdump_xsubplstad
#define tr_ieatdump_xsubplst_addr  _tr_union11._tr_ieatdump_xsubplst_addr
#define tr_ieatdump_xdsplistad     _tr_union12._tr_ieatdump_xdsplistad
#define tr_ieatdump_xdsplist_addr  _tr_union12._tr_ieatdump_xdsplist_addr
#define tr_ieatdump_xecbad         _tr_union13._tr_ieatdump_xecbad
#define tr_ieatdump_xecb_addr      _tr_union13._tr_ieatdump_xecb_addr

/* Values for field "tr_flag_format" */
#define tr_flag_format_full             0     /* full length        */
#define tr_flag_format_short            1     /* short              */

/* Values for field "tr_args" */
#define tr_gtf_length_short             0xA8

/* Values for field "tr_arg2" */
#define tr_gtf_length                   0x228
#define tr_gtf_length_full              0x228

/* Values for field "tr_gtf" */
#define ihlmdma1                        0xFFF /* 4095               */
#define iggsp169                        0xFFE /* 4094                         Y02014 */
#define iggsp451                        0xFFD /* 4093                         Y02014 */
#define iggsp251                        0xFFC /* 4092                         Y02014 */
#define iggsp145                        0xFFB /* 4091                         Y02014 */
#define iggsp239                        0xFFA /* 4090                         Y02014 */
#define iggsp235                        0xFF9 /* 4089                         Y02014 */
#define iggsp119                        0xFF8 /* 4088                         Y02014 */
#define iggsp215                        0xFF7 /* 4087                         Y02014 */
#define iggsp112                        0xFF6 /* 4086                         Y02014 */
#define idaam01                         0xFF5 /* 4085               */
#define iggsp008                        0xFF4 /* 4084                         Y02014 */
#define iggsp002                        0xFF3 /* 4083                         Y02014 */
#define istlneid                        0xFF2 /* 4082                       @Y30AI3O */
#define istcleid                        0xFF1 /* 4081                       @Y30AI3O */
#define istrpeid                        0xFF0 /* 4080                       @Y30AI3O */
#define isttpeid                        0xFEF /* 4079                       @Y30AI3O */
#define istvieid                        0xFE1 /* 4065   VTAM INTERNAL TRACE @G35AGWC */
#define isttheid                        0xFE2 /* 4066   VTAM INTERNAL TRACE @ZA70345 */
#define isttreid                        0xFE3 /* 4067   VTAM INTERNAL TRACE @ZA70345 */
#define isttdeid                        0xFE4 /* 4068   VTAM INTERNAL TRACE @ZA70345 */
#define imdgpd50                        0xFE0 /* 4064                       @G81OP1C */
#define imdgpd49                        0xFDF /* 4063                       @G81OP1C */
#define imdgpd48                        0xFDE /* 4062                       @G81OP1C */
#define imdgpd47                        0xFDD /* 4061                       @G81OP1C */
#define imdgpd46                        0xFDC /* 4060                       @G81OP1C */
#define imdgpd45                        0xFDB /* 4059                       @G81OP1C */
#define imdgpd44                        0xFDA /* 4058                       @G81OP1C */
#define imdgpd43                        0xFD9 /* 4057                       @G81OP1C */
#define imdgpd42                        0xFD8 /* 4056                       @G81OP1C */
#define imdgpd41                        0xFD7 /* 4055                       @G81OP1C */
#define imdgpd40                        0xFD6 /* 4054                       @G81OP1C */
#define imdgpd39                        0xFD5 /* 4053                       @G81OP1C */
#define imdgpd38                        0xFD4 /* 4052                       @G81OP1C */
#define imdgpd37                        0xFD3 /* 4051                       @G81OP1C */
#define imdgpd36                        0xFD2 /* 4050                       @G81OP1C */
#define imdgpd35                        0xFD1 /* 4049                       @G81OP1C */
#define imdgpd34                        0xFD0 /* 4048                       @G81OP1C */
#define imdgpd33                        0xFCF /* 4047                       @G81OP1C */
#define imdgpd32                        0xFCE /* 4046                       @G81OP1C */
#define imdgpd31                        0xFCD /* 4045                       @G81OP1C */
#define imdgpd30                        0xFCC /* 4044                       @G81OP1C */
#define imdgpd29                        0xFCB /* 4043                       @G81OP1C */
#define imdgpd28                        0xFCA /* 4042                       @G81OP1C */
#define imdgpd27                        0xFC9 /* 4041                       @G81OP1C */
#define imdgpd26                        0xFC8 /* 4040                       @G81OP1C */
#define imdgpd25                        0xFC7 /* 4039                       @G81OP1C */
#define imdgpd24                        0xFC6 /* 4038                       @G81OP1C */
#define imdgpd23                        0xFC5 /* 4037                       @G81OP1C */
#define imdgpd22                        0xFC4 /* 4036                       @G81OP1C */
#define imdgpd21                        0xFC3 /* 4035                       @G81OP1C */
#define imdgpd20                        0xFC2 /* 4034                       @G81OP1C */
#define imdgpd19                        0xFC1 /* 4033                       @G81OP1C */
#define imdgpd18                        0xFC0 /* 4032                       @G81OP1C */
#define imdgpd17                        0xFBF /* 4031                       @G81OP1C */
#define imdgpd16                        0xFBE /* 4030                       @G81OP1C */
#define imdgpd15                        0xFBD /* 4029                       @G81OP1C */
#define imdgpd14                        0xFBC /* 4028                       @G81OP1C */
#define imdgpd13                        0xFBB /* 4027                       @G81OP1C */
#define imdgpd12                        0xFBA /* 4026                       @G81OP1C */
#define imdgpd11                        0xFB9 /* 4025                       @G81OP1C */
#define imdgpd10                        0xFB8 /* 4024                       @G81OP1C */
#define imdgpd09                        0xFB7 /* 4023                       @G81OP1C */
#define imdgpd08                        0xFB6 /* 4022                       @G81OP1C */
#define imdgpd07                        0xFB5 /* 4021                       @G81OP1C */
#define imdgpd06                        0xFB4 /* 4020                       @G81OP1C */
#define imdgpd05                        0xFB3 /* 4019                       @G81OP1C */
#define imdgpd04                        0xFB2 /* 4018                       @G81OP1C */
#define imdgpd03                        0xFB1 /* 4017                       @G81OP1C */
#define imdgpd02                        0xFB0 /* 4016                       @G81OP1C */
#define imdgpd01                        0xFAF /* 4015                       @G81OP1C */
#define imdgpd00                        0xFAC /* 4012 NetSpool                  @P2A */
#define imdnfs01                        0xFAB /* 4011 NFS                       @L1A */
#define imdtcam9                        0xFA9 /* 4009 TCAM                      @P1A */
#define imdtcam8                        0xFA8 /* 4008 TCAM                      @P1A */
#define imdtcam7                        0xFA7 /* 4007 TCAM                      @P1A */
#define imdtcam6                        0xFA6 /* 4006 TCAM                      @P1A */
#define imdtcam5                        0xFA5 /* 4005 TCAM                      @P1A */
#define imdtcam4                        0xFA4 /* 4004 TCAM                      @P1A */
#define imdtcam3                        0xFA3 /* 4003 TCAM                      @P1A */
#define imdtcam2                        0xFA2 /* 4002 TCAM                      @P1A */
#define imdtcam1                        0xFA1 /* 4001 TCAM                      @P1A */
#define imdtcam0                        0xFA0 /* 4000 TCAM                      @P1A */
#define imdcics                         0xF6C /* 3948 CICS                      @P1A */
#define imdvsm                          0xF65 /* 3941 VIRTUAL STORAGE MANAGER   @P1A */
#define imddb2vt                        0xF5F /* 3935 DB2/VSAM TRANSPARENCY     @P1A */
#define imdfsitd                        0xF5D /* 3933 FSI TRACE                 @P1A */
#define imdfsitc                        0xF5C /* 3932 FSI TRACE                 @P1A */
#define imdfsitb                        0xF5B /* 3931 FSI TRACE                 @P1A */
#define imdfsita                        0xF5A /* 3930 FSI TRACE                 @P1A */
#define imdfsit9                        0xF59 /* 3929 FSI TRACE                 @P1A */
#define imdfsit8                        0xF58 /* 3928 FSI TRACE                 @P1A */
#define imdfsit7                        0xF57 /* 3927 FSI TRACE                 @P1A */
#define imdfsit6                        0xF56 /* 3926 FSI TRACE                 @P1A */
#define imdfsit5                        0xF55 /* 3925 FSI TRACE                 @P1A */
#define imdfsit4                        0xF54 /* 3924 FSI TRACE                 @P1A */
#define imdosic                         0xF53 /* 3923 OPEN SYSTEMS INTERCONN    @P1A */
#define imdlanrw                        0xF3F /* LANRES                         @P2A */
#define imdlanrv                        0xF3E /* LANRES                         @P2A */
#define imdlanru                        0xF3D /* LANRES                         @P2A */
#define imdlanrt                        0xF3C /* LANRES                         @P2A */
#define imdlanrs                        0xF3B /* LANRES                         @P2A */
#define imdlanrr                        0xF3A /* LANRES                         @P2A */
#define imdlanrq                        0xF39 /* LANRES                         @P2A */
#define imdlanrp                        0xF38 /* LANRES                         @P2A */
#define imdlanro                        0xF37 /* LANRES                         @P2A */
#define imdlanrn                        0xF36 /* LANRES                         @P2A */
#define imdlanrm                        0xF35 /* LANRES                         @P2A */
#define imdlanrl                        0xF34 /* LANRES                         @P2A */
#define imdlanrk                        0xF33 /* LANRES                         @P2A */
#define imdlanrj                        0xF32 /* LANRES                         @P2A */
#define imdlanri                        0xF31 /* LANRES                         @P2A */
#define imdlanrh                        0xF30 /* LANRES                         @P2A */
#define imdlanrg                        0xF2F /* LANRES                         @P2A */
#define imdlanrf                        0xF2E /* LANRES                         @P2A */
#define imdlanre                        0xF2D /* LANRES                         @P2A */
#define imdlanrd                        0xF2C /* LANRES                         @P2A */
#define imdlanrc                        0xF2B /* LANRES                         @P2A */
#define imdlanrb                        0xF2A /* LANRES                         @P2A */
#define imdlanra                        0xF29 /* LANRES                         @P2A */
#define imdlanr9                        0xF28 /* LANRES                         @P2A */
#define imdlanr8                        0xF27 /* LANRES                         @P2A */
#define imdlanr7                        0xF26 /* LANRES                         @P2A */
#define imdlanr6                        0xF25 /* LANRES                         @P2A */
#define imdlanr5                        0xF24 /* LANRES                         @P2A */
#define imdlanr4                        0xF23 /* LANRES                         @P2A */
#define imdlanr3                        0xF22 /* LANRES                         @P2A */
#define imdlanr2                        0xF21 /* LANRES                         @P2A */
#define imdlanr1                        0xF20 /* LANRES                         @P2A */
#define iefdb400a                       0xF1F /* DYNALLOC                       @P3A */
#define iefdb400b                       0xF1E /* DYNALLOC                       @P3A */
#define iefdb400c                       0xF1D /* DYNALLOC                       @P3A */

/* Values for field "tr_csvquery_xflags1" */
#define tr_csvquery_keyused_outlength   0x80
#define tr_csvquery_keyused_outepa      0x40
#define tr_csvquery_keyused_outepnm     0x20
#define tr_csvquery_keyused_outmjnm     0x10
#define tr_csvquery_keyused_outsp       0x08
#define tr_csvquery_keyused_outpdata    0x04
#define tr_csvquery_keyused_outpid      0x02
#define tr_csvquery_keyused_outeptkn    0x01

/* Values for field "tr_csvquery_xflags2" */
#define tr_csvquery_keyused_outattr1    0x80
#define tr_csvquery_keyused_outattr2    0x40
#define tr_csvquery_keyused_outattr3    0x20
#define tr_csvquery_keyused_outvalid    0x10
#define tr_csvquery_xsearch_jpalpa      0x08
#define tr_csvquery_xsearch_jpa         0x04
#define tr_csvquery_xsearch_lpa         0x02
#define tr_csvquery_keyused_outloadpt   0x01

/* Values for field "tr_csvquery_xflags3" */
#define tr_csvquery_xsearchminor_yes    0x80
#define tr_csvquery_keyused_outxtlst    0x40
#define tr_csvquery_keyused_outdiag     0x20
#define tr_csvquery_keyused_outrtid     0x10
#define tr_csvquery_keyused_outepa64    0x08
#define tr_csvquery_keyused_inaddr64    0x04
#define tr_csvquery_keyused_outloadpt64 0x02
#define tr_csvquery_keyused_outlength64 0x01

/* Values for field "tr_ieatdump_xsdata1" */
#define tr_ieatdump_xsdata_defs         0x80
#define tr_ieatdump_xsdata_allnuc       0x40
#define tr_ieatdump_xsdata_csa          0x20
#define tr_ieatdump_xsdata_grsq         0x10
#define tr_ieatdump_xsdata_lpa          0x08
#define tr_ieatdump_xsdata_lsqa         0x04
#define tr_ieatdump_xsdata_nuc          0x02
#define tr_ieatdump_xsdata_rgn          0x01

/* Values for field "tr_ieatdump_xsdata2" */
#define tr_ieatdump_xsdata_sqa          0x80
#define tr_ieatdump_xsdata_sum          0x40
#define tr_ieatdump_xsdata_swa          0x20
#define tr_ieatdump_xsdata_trt          0x10
#define tr_ieatdump_xsdata_psa          0x08

/* Values for field "tr_ieatdump_xflags1" */
#define tr_ieatdump_keyused_ddname      0x40

/* Values for field "tr_ieatdump_xecb_addr" */
#define tr_ieatdumpl                    0x7C  /* ++ LENGTH OF PLIST */

#pragma pack(reset)
