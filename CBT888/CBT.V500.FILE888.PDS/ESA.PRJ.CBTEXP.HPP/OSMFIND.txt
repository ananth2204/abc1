#ifndef _OSMFIND
#define _OSMFIND
#include "os.hpp"
#include "mchain.hpp"
#include "filetype.hpp"

#include <string.h>
#include <stdio.h>
#define NEWRC 10000      /* this is the return-code after new */
#define DDNAMES DDNAMIBM

//szm20050825 ddname reallocation and free code moved here from XFILE
int ddDynAlloc(char * dsn,char * member,char * ddn,char * togen);

//ISIS_EXT_ASM int DDNAMES(char * , char * ,int ,char * = 0); szm
  ISIS_EXT_C int osmfind(struct DSNINFO * dsninfo,
                         const char * pattern);
  ISIS_EXT_C  int osmnext(struct DSNINFO * dsninfo);
  ISIS_EXT_C  void osmquit(struct DSNINFO * dsninfo);
  FILE *   tmpFile(char * ); //szm20060908 tmpFile in mu
	int osmfindo(struct DSNINFO * dsninfo,
               const char * pattern);
  int osmnexto(struct DSNINFO * dsninfo);

  //contains one partitioned dataset.
  //the smc member contains a sorted chain of DataSMember types

  FILE_TYPE getFileTypeLocal(const char * n);

  class DataSMember;

  class DataSName : public chainE
  ä
  private:
    FILE_TYPE    file_type;       // type flag
    DSNINFO dsninfo;
  public:
    SORTEDmCHAIN* smc;
		DataSName()äsmc =NULL;ü
    DataSName(char *, FILE_TYPE);
    ßDataSName();
    int isQsam()ä return ( file_type |= FILE_VSAM ) ; ü//szm20070329 everything not VSAM is QSAM
    void FetchDSNINFO(DSNINFO* dsni)
    ä
      char maskÄsizeof(dsni->mmask)+1Ü;          //dsni->mmask save
      strcpy(mask,dsni->mmask);   //save it
			void * sfilep = dsni->filepointer;  //szm
      memcpy(dsni,&dsninfo,sizeof(DSNINFO));
      dsni->filepointer = sfilep;          //szm

      strcpy(dsni->mmask,mask);   //save it back
    ü
    void UpdateDSNINFO(DSNINFO* dsni,int rc)
    ä
      memcpy(&dsninfo,dsni,sizeof(DSNINFO));
      //dsninfo._Ä0Ü = this;
      //dsninfo._Ä1Ü = NULL;
      //dsninfo._Ä2Ü = (void*)rc;
      dsninfo.ptdatasname = this; //ZA030926
      dsninfo.ptdatasmember = NULL;
      dsninfo.rc = (void*)rc;
    ü
    int getRC()
    ä
      //return (int)dsninfo._Ä2Ü;
      return (int)dsninfo.rc; //ZA030926
    ü
  ü;

//contains a chain of partitioned datasets of Type DataSName
//DSNINF is derived from DSNINFO
//Changes to DSNINFO: the first 2 pointers  are used for osmnext
//chopped off after mmask
//ZA030926 taken out, DSNINFO used instead

  class DataSNames:public SORTEDmCHAIN
  ä
  private:
   CHAINITER * iter;
  public:
   DataSNames();
   ßDataSNames();
   DataSName * get(char *);
  ü;

  //contains one member in a dataset
  class DataSMember : public chainE
  ä
  private:
    DSNINFO dsninfo;
  public:
    DataSMember(DSNINFO* dsni,DataSName* dsnameg);
    ßDataSMember() äü
    void FetchDSNINFO(DSNINFO* dsni)
    ä
      char maskÄ9Ü;          //dsni->mmask save
      strcpy(mask,dsni->mmask);   //save it
			void * sfilep = dsni->filepointer;  //szm
      memcpy(dsni,&dsninfo,sizeof(DSNINFO));
      dsni->filepointer = sfilep;          //szm
      strcpy(dsni->mmask,mask);   //save it back
    ü
  ü;

#endif
// end of osmfind
