#pragma pack(packed)

struct fts ä
  void          *ftspstart;                     /* profile entry length               */
  unsigned char  fts_ssaÄ8Ü;                    /* system alias name                  */
  unsigned char  fts_driver_nameÄ8Ü;            /* driver name                        */
  unsigned char  fts_lockÄ4Ü;                   /* lock indicator                     */
  unsigned char  fts_descÄ80Ü;                  /* description                        */
  unsigned char  fts_flag;                      /* system type                        */
  unsigned char  fts_systemÄ8Ü;                 /* system type see above              */
  unsigned char  fts_tp_flag;                   /* tp flag                            */
  unsigned char  fts_tp_errorÄ8Ü;               /* tp error action                    */
  unsigned char  fts_tp_codeconvÄ8Ü;            /* tp codeciaction                    */
  unsigned char  _filler1Ä2Ü;
  unsigned char  fts_appc_lunameÄ8Ü;            /* luname                             */
  unsigned char  fts_appc_logmodeÄ8Ü;           /* logmode name                       */
  unsigned char  fts_appc_proclÄ2Ü;             /* appc processname length            */
  unsigned char  fts_appc_procÄ8Ü;              /* appc processname                   */
  unsigned char  fts_appc_parsessÄ4Ü;           /* single session (yes/no)            */
  unsigned char  fts_appc_maxsessÄ4Ü;           /* max number of session              */
  unsigned char  fts_appc_locsessÄ4Ü;           /* min contention winner local        */
  unsigned char  fts_appc_prtsessÄ4Ü;           /* min contention winner partner      */
  unsigned char  fts_appc_traceÄ4Ü;             /* trace flag                         */
  unsigned char  fts_appc_resÄ12Ü;              /* r e s e r v e d                    */
  unsigned char  fts_appc_gapplidÄ8Ü;           /* generic applid                     */
  unsigned char  _filler2Ä2Ü;
  unsigned char  fts_tcpip_nameÄ32Ü;            /* host name                          */
  int            fts_tcpip_port;                /* port name                          */
  int            fts_tcpip_ownport;             /* own port name                      */
  int            fts_tcpip_maxmsg;              /* max msg size                       */
  int            fts_tcpip_default_replyport;   /* default reply port                 */
  unsigned char  fts_tcpip_resÄ12Ü;             /* r e s e r v e d                    */
  unsigned char  fts_local_resÄ12Ü;             /* r e s e r v e d                    */
  unsigned char  fts_driver_typeÄ16Ü;           /* driver type                        */
  unsigned char  fts_driver_deviceÄ8Ü;          /* driver device name                 */
  unsigned char  fts_driver_traceÄ4Ü;           /* trace value                        */
  int            fts_driver_bwait;              /* wait time in 1/100 sec             */
  unsigned char  fts_driver_waitÄ8Ü;            /* wait time                          */
  int            fts_default_pagesize;          /* default pagesize                   */
  unsigned char  fts_default_pdeflibÄ8Ü;        /* pagedef library profile            */
  unsigned char  fts_default_fdeflibÄ8Ü;        /* formdef library profile            */
  unsigned char  fts_default_pseglibÄ8Ü;        /* pseglib library profile            */
  unsigned char  fts_default_fontlibÄ8Ü;        /* fontlib library profile            */
  unsigned char  fts_default_ovlylibÄ8Ü;        /* overlib library profile            */
  unsigned char  fts_default_idfdlibÄ8Ü;        /* idfdlib library profile            */
  unsigned char  fts_default_idftlibÄ8Ü;        /* idftlib library profile            */
  unsigned char  fts_default_idfalibÄ8Ü;        /* idfalib library profile            */
  unsigned char  fts_default_idfilibÄ8Ü;        /* idfilib library profile            */
  unsigned char  fts_default_copiesÄ8Ü;         /* default copy count                 */
  unsigned char  fts_default_processÄ8Ü;        /* default print process option       */
  unsigned char  fts_default_sendresourceÄ8Ü;   /* sendresource default option        */
  unsigned char  fts_default_hpfsÄ8Ü;           /* hpfs file system                   */
  unsigned char  fts_default_temporaryÄ8Ü;      /* temporary file store               */
  unsigned char  fts_default_queueÄ16Ü;         /* queue name                         */
  unsigned char  fts_default_bannerÄ3Ü;         /* banner page                        */
  unsigned char  _filler3;
  int            fts_default_jobnumber;         /* actual job number                  */
  unsigned char  fts_default_controlÄ8Ü;        /* first control or not               */
  unsigned char  fts_default_countÄ8Ü;          /* count set/clear                    */
  int            fts_default_listsize;          /* default listsize                   */
  unsigned char  fts_default_pagedefÄ8Ü;        /* pagedef value or default           */
  unsigned char  fts_default_formdefÄ8Ü;        /* formdef value or default           */
  unsigned char  fts_default_charsÄ32Ü;         /* character set 4*8 byte             */
  unsigned char  fts_default_prmodeÄ4Ü;         /* prmode                             */
  unsigned char  fts_receive_profileÄ8Ü;        /* default receive profile            */
  unsigned char  fts_send_dataÄ8Ü;              /* send data profile name             */
  unsigned char  fts_send_xdataÄ8Ü;             /* data extension                     */
  unsigned char  fts_send_resourceÄ8Ü;          /* send resource profile name         */
  unsigned char  fts_send_xresourceÄ8Ü;         /* resource extension                 */
  unsigned char  fts_send_controlÄ8Ü;           /* send control profile               */
  unsigned char  fts_send_xcontrolÄ8Ü;          /* control extension                  */
  unsigned char  fts_send_xpdfÄ8Ü;              /* pdef extension                     */
  unsigned char  fts_send_xfdfÄ8Ü;              /* fdef extension                     */
  unsigned char  fts_send_xpsgÄ8Ü;              /* pdef extension                     */
  unsigned char  fts_send_xovlÄ8Ü;              /* ovly extension                     */
  unsigned char  fts_send_xdfdÄ8Ü;              /* idfd extension                     */
  unsigned char  fts_send_xdftÄ8Ü;              /* idft extension                     */
  unsigned char  fts_send_xdfaÄ8Ü;              /* idfa extension                     */
  unsigned char  fts_send_xdfiÄ8Ü;              /* idfi extension                     */
  unsigned char  fts_send_xfntÄ8Ü;              /* font extension                     */
  unsigned char  fts_send_xcdpÄ8Ü;              /* code page extension                */
  unsigned char  fts_send_xchsÄ8Ü;              /* character set extension            */
  unsigned char  fts_send_errorÄ8Ü;             /* send error action                  */
  union ä
    struct ä
      struct ä
        unsigned char  _fts_status;
        ü fts_send_;
      unsigned char  _filler4Ä7Ü;
      ü _fts_struct1;
    unsigned char  _fts_status_jnlprofÄ8Ü; /* profile */
    ü _fts_union1;
  unsigned char  fts_status_jnlmemÄ32Ü;         /* member                             */
  unsigned char  fts_status_jnlextÄ8Ü;          /* extension                          */
  unsigned char  fts_status_outprofÄ8Ü;         /* profile                            */
  unsigned char  fts_status_outextÄ8Ü;          /* extension                          */
  unsigned char  fts_status_logprofÄ8Ü;         /* profile                            */
  unsigned char  fts_status_logextÄ8Ü;          /* extension                          */
  int            fts_status_update;             /* update count                       */
  unsigned char  fts_status_outputÄ8Ü;          /* output profile                     */
  unsigned char  fts_status_joblogÄ8Ü;          /* receive back joblog always/onerror */
  unsigned char  fts_server_html_pathÄ64Ü;      /* html path                          */
  unsigned char  fts_server_html_fileÄ64Ü;      /* html file                          */
  unsigned char  fts_server_server_nameÄ64Ü;    /* server name                        */
  unsigned char  fts_server_server_protÄ64Ü;    /* server name                        */
  unsigned char  fts_server_rootÄ64Ü;           /* root dir                           */
  unsigned char  fts_server_tracedsnÄ64Ü;       /* trace dsn                          */
  unsigned char  fts_server_put_allowedÄ4Ü;     /* put allowed on server              */
  unsigned char  fts_server_dir_allowedÄ4Ü;     /* dir request allowed on server      */
  unsigned char  fts_server_surrogateÄ8Ü;       /* surrogate user id                  */
  unsigned char  fts_server_usesslÄ4Ü;          /* ssl option                         */
  unsigned char  fts_server_basicauthÄ4Ü;       /* basicauth option                   */
  unsigned char  fts_server_cgiformÄ4Ü;         /* CGI default form                   */
  unsigned char  fts_server_cgioptionsÄ64Ü;     /* CGI call options                   */
  unsigned char  fts_ssl_sec_typeÄ8Ü;           /* sec types                          */
  unsigned char  fts_ssl_keyringÄ64Ü;           /* keyring name                       */
  unsigned char  fts_ssl_keyring_pwÄ20Ü;        /* keyring pw                         */
  unsigned char  fts_ssl_keyring_stashÄ64Ü;     /* stash file name                    */
  void          *fts_ssl_v2_session_timeout;    /* sslv2 timeout                      */
  void          *fts_ssl_v3_session_timeout;    /* sslv3 timeout                      */
  unsigned char  fts_ssl_ldap_serverÄ64Ü;       /* ldap server                        */
  void          *fts_ssl_ldap_port;             /* ldap port                          */
  unsigned char  fts_ssl_ldap_userÄ64Ü;         /* ldap user name                     */
  unsigned char  fts_ssl_ldap_passwordÄ20Ü;     /* ldap password                      */
  void          *fts_ssl_ldap_ca;               /* ca root                            */
  void          *fts_ssl_auth_type;             /* auth type                          */
  unsigned char  fts_ssl_handshake_typeÄ32Ü;    /* handshake type                     */
  unsigned char  fts_ssl_dnameÄ64Ü;             /* distinguish name                   */
  unsigned char  fts_ssl_cipher_specÄ12Ü;       /* v2 cipher                          */
  unsigned char  fts_ssl_v3cipher_specÄ12Ü;     /* v3 cipher                          */
  unsigned char  fts_ssl_client_useridÄ16Ü;     /* client user from                   */
  unsigned char  fts_ssl_client_authÄ16Ü;       /* client user auth method            */
  unsigned char  fts_file_translateÄ64Ü;        /* translate table                    */
  unsigned char  fts_file_translate_tableÄ256Ü;
  unsigned char  fts_file_globalÄ8Ü;            /* global dd name                     */
  unsigned char  fts_mqs_nameÄ8Ü;               /* mqs connection name                */
  unsigned char  fts_mqs_qmanagerÄ48Ü;          /* queue manager name                 */
  unsigned char  fts_mqs_qnameÄ48Ü;             /* queue name                         */
  int            fts_mqs_maxmsg;                /* max message length                 */
  unsigned char  fts_sapi_nameÄ8Ü;              /* sapi name                          */
  unsigned char  fts_sapi_selectÄ256Ü;          /* SAPI SELECT                        */
  unsigned char  fts_exci_nameÄ8Ü;              /* exci name                          */
  unsigned char  fts_exci_systemÄ8Ü;            /* system                             */
  unsigned char  fts_exci_programÄ8Ü;           /* progarm                            */
  unsigned char  fts_exci_transidÄ8Ü;           /* transid                            */
  unsigned char  fts_exci_useridÄ8Ü;            /* userid                             */
  unsigned char  fts_exci_applidÄ8Ü;            /* applid                             */
  unsigned char  fts_db2_nameÄ8Ü;               /* db2 name                           */
  unsigned char  fts_db2_subsystemÄ4Ü;          /* subsystem name                     */
  unsigned char  fts_db2_planÄ8Ü;               /* plan name                          */
  unsigned char  fts_db2_tableÄ16Ü;             /* table name                         */
  void          *fts_mqs_waitwarning;           /* wait warning                       */
  unsigned char  fts_mqs_objectqmgrÄ48Ü;        /* OBJECT Q MGR                       */
  unsigned char  fts_mqs_formatÄ8Ü;             /* message format STREAM/RECORD       */
  void          *fts_mqs_msg_expired;           /* message expire after               */
  void          *fts_mqs_msg_rep_expired;       /* reply message expire after         */
  unsigned char  fts_mqs_adddescÄ3Ü;            /* adddesc                            */
  unsigned char  fts_mqs_persistentÄ3Ü;         /* adddesc                            */
  unsigned char  fts_resÄ32Ü;                   /* reserved                           */
  unsigned char  _filler5Ä2Ü;
  int            fts_driver_address;            /* driver address                     */
  unsigned char  fts_arm_nameÄ16Ü;              /* arm element name                   */
  unsigned char  fts_arm_typeÄ16Ü;              /* arm element type                   */
  ü;

#define fts_status         _fts_union1._fts_struct1.fts_send_._fts_status
#define fts_status_jnlprof _fts_union1._fts_status_jnlprof

/* Values for field "fts_flag" */
#define fts_flag_os2      1   /* os/2       */
#define fts_flag_vm       2   /* vm         */
#define fts_flag_vse      3   /* vse        */
#define fts_flag_mvscics  4   /* mvs/cics   */
#define fts_flag_mvsstc   5   /* mvs/stc    */
#define fts_flag_rs6000   6   /* rs6000     */
#define fts_flag_oms      7   /* oms flag   */

/* Values for field "fts_tp_flag" */
#define fts_tp_flag_appc  1   /* appc flag  */
#define fts_tp_flag_tcpip 2   /* tcpip flag */
#define fts_tp_flag_file  4   /* file flag  */
#define fts_tp_flag_mqs   8   /* mqs flag   */
#define fts_tp_flag_sapi  16  /* sapi flag  */
#define fts_tp_flag_exci  32  /* EXCI flag  */
#define fts_tp_flag_db2   64  /* DB2  flag  */

#pragma pack(reset)
