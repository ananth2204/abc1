#pragma pack(packed)

struct ceemch ä
  unsigned char  ceemcheyecÄ4Ü;     /* Eye catcher                           */
  short int      ceemchsize;        /* Size of area                          */
  short int      ceemchlevel;       /* Version of MACRO generation           */
  struct ä
    int            _ceemchgprÄ16Ü; /* Each reg, 0-15           @G3C */
    ü ceemchreg;
  unsigned char  ceemchpswÄ8Ü;      /* PSW at time of interrupt @G3C         */
  struct ä
    short int      _ceemchilc; /* Instruction length code */
    struct ä
      unsigned char  _ceemchic1; /* Part 1 */
      unsigned char  _ceemchic2; /* Part 2 */
      ü ceemchic;
    ü ceemchinti;
  void          *ceemchpft;         /* Page fault address       @G3C         */
  union ä
    double         _ceemchfltÄ4Ü; /* Basic Floating point registers */
    struct ä
      double         _ceemchflt_0; /* FP reg 0 */
      double         _ceemchflt_2; /* FP reg 2 */
      double         _ceemchflt_4; /* FP reg 4 */
      double         _ceemchflt_6; /* FP reg 6 */
      ü _ceemch_struct1;
    ü _ceemch_union1;
  unsigned char  ceemchrsv1Ä48Ü;    /* Reserved.                        @D2C */
  union ä
    unsigned char  _ceemchzero1Ä16Ü; /* Area to be cleared in new MCHs   @D3C */
    struct ä
      unsigned char  _filler1Ä11Ü;  /* (reserved)                       @D3A */
      unsigned char  _ceemchflags;  /* MCH flags                        @D3A */
      unsigned char  _filler2Ä4Ü;   /* (reserved)                       @D3A */
      ü _ceemch_struct2;
    ü _ceemch_union2;
  void          *ceemchmch_ext;     /* Ptr to language MCH extension    @P1C */
  unsigned char  ceemchmch_beaÄ4Ü;  /* LE copy of SDWA_BEA              @D4A */
  unsigned char  ceemchmch_rsvÄ16Ü; /* Reserved                         @D4C */
  union ä
    struct ä
      double         _ceemchafpÄ13Ü; /* Additional floating point registers */
      double         _ceemchflt_1;
      ü _ceemch_struct3;
    struct ä
      double         _ceemch_flt_1;     /* FP reg 1                           @D3A */
      double         _ceemch_flt_3;     /* FP reg 3                           @D3A */
      double         _ceemch_flt_5;     /* FP reg 5                           @D3A */
      double         _ceemch_flt_7;     /* FP reg 7                           @D3A */
      double         _ceemch_flt_8;     /* FP reg 8                           @D3A */
      double         _ceemch_flt_9;     /* FP reg 9                           @D3A */
      double         _ceemch_flt_10;    /* FP reg 10                          @D3A */
      double         _ceemch_flt_11;    /* FP reg 11                          @D3A */
      double         _ceemch_flt_12;    /* FP reg 12                          @D3A */
      double         _ceemch_flt_13;    /* FP reg 13                          @D3A */
      double         _ceemch_flt_14;    /* FP reg 14                          @D3A */
      double         _ceemch_flt_15;    /* FP reg 15                          @D3A */
      struct ä
        unsigned char  _filler3;       /* First byte                        @D3A */
        unsigned char  _filler4;       /* Second byte                       @D3A */
        unsigned char  _ceemchfpc_dxc; /* Data Exception code (Third byte)  @D3A */
        unsigned char  _filler5;       /* Fourth Byte                       @D3A */
        ü ceemch_fpc;
      unsigned char  _ceemch_afp_flags; /* AFP FLAGS                          @D3A */
      unsigned char  _filler6Ä11Ü;      /* (reserved bytes)                   @D3A */
      ü _ceemch_struct4;
    ü _ceemch_union3;
  union ä
    struct ä
      int            _ceemchgpr_hÄ16Ü; /* Individual Hi-reg 0 thru 15        @D3A */
      ü ceemchreg_h;
    struct ä
      double         _ceemchflt_3;
      double         _ceemchflt_5;
      double         _ceemchflt_7;
      double         _ceemchflt_8;
      double         _ceemchflt_9;
      double         _ceemchflt_10;
      double         _ceemchflt_11;
      double         _ceemchflt_12;
      ü _ceemch_struct5;
    ü _ceemch_union4;
  union ä
    struct ä
      double         _ceemchflt_13;
      double         _ceemchflt_14;
      double         _ceemchflt_15;
      double         _ceemchfpc;
      int            _ceemchafp_flags;
      unsigned char  _filler7Ä92Ü;
      ü _ceemch_struct6;
    unsigned char  _filler8Ä128Ü;  /* (reserved)                        @D3A */
    ü _ceemch_union5;
  ü;

#define ceemchgpr        ceemchreg._ceemchgpr
#define ceemchilc        ceemchinti._ceemchilc
#define ceemchic1        ceemchinti.ceemchic._ceemchic1
#define ceemchic2        ceemchinti.ceemchic._ceemchic2
#define ceemchflt        _ceemch_union1._ceemchflt
#define ceemchflt_0      _ceemch_union1._ceemch_struct1._ceemchflt_0
#define ceemchflt_2      _ceemch_union1._ceemch_struct1._ceemchflt_2
#define ceemchflt_4      _ceemch_union1._ceemch_struct1._ceemchflt_4
#define ceemchflt_6      _ceemch_union1._ceemch_struct1._ceemchflt_6
#define ceemchzero1      _ceemch_union2._ceemchzero1
#define ceemchflags      _ceemch_union2._ceemch_struct2._ceemchflags
#define ceemchafp        _ceemch_union3._ceemch_struct3._ceemchafp
#define ceemchflt_1      _ceemch_union3._ceemch_struct3._ceemchflt_1
#define ceemch_flt_1     _ceemch_union3._ceemch_struct4._ceemch_flt_1
#define ceemch_flt_3     _ceemch_union3._ceemch_struct4._ceemch_flt_3
#define ceemch_flt_5     _ceemch_union3._ceemch_struct4._ceemch_flt_5
#define ceemch_flt_7     _ceemch_union3._ceemch_struct4._ceemch_flt_7
#define ceemch_flt_8     _ceemch_union3._ceemch_struct4._ceemch_flt_8
#define ceemch_flt_9     _ceemch_union3._ceemch_struct4._ceemch_flt_9
#define ceemch_flt_10    _ceemch_union3._ceemch_struct4._ceemch_flt_10
#define ceemch_flt_11    _ceemch_union3._ceemch_struct4._ceemch_flt_11
#define ceemch_flt_12    _ceemch_union3._ceemch_struct4._ceemch_flt_12
#define ceemch_flt_13    _ceemch_union3._ceemch_struct4._ceemch_flt_13
#define ceemch_flt_14    _ceemch_union3._ceemch_struct4._ceemch_flt_14
#define ceemch_flt_15    _ceemch_union3._ceemch_struct4._ceemch_flt_15
#define ceemchfpc_dxc    _ceemch_union3._ceemch_struct4.ceemch_fpc._ceemchfpc_dxc
#define ceemch_afp_flags _ceemch_union3._ceemch_struct4._ceemch_afp_flags
#define ceemchgpr_h      _ceemch_union4.ceemchreg_h._ceemchgpr_h
#define ceemchflt_3      _ceemch_union4._ceemch_struct5._ceemchflt_3
#define ceemchflt_5      _ceemch_union4._ceemch_struct5._ceemchflt_5
#define ceemchflt_7      _ceemch_union4._ceemch_struct5._ceemchflt_7
#define ceemchflt_8      _ceemch_union4._ceemch_struct5._ceemchflt_8
#define ceemchflt_9      _ceemch_union4._ceemch_struct5._ceemchflt_9
#define ceemchflt_10     _ceemch_union4._ceemch_struct5._ceemchflt_10
#define ceemchflt_11     _ceemch_union4._ceemch_struct5._ceemchflt_11
#define ceemchflt_12     _ceemch_union4._ceemch_struct5._ceemchflt_12
#define ceemchflt_13     _ceemch_union5._ceemch_struct6._ceemchflt_13
#define ceemchflt_14     _ceemch_union5._ceemch_struct6._ceemchflt_14
#define ceemchflt_15     _ceemch_union5._ceemch_struct6._ceemchflt_15
#define ceemchfpc        _ceemch_union5._ceemch_struct6._ceemchfpc
#define ceemchafp_flags  _ceemch_union5._ceemch_struct6._ceemchafp_flags

/* Values for field "ceemchflags" */
#define ceemchhr_valid  0x40 /* High regs valid in REG_H field   @D3A */

/* Values for field "_filler3" */
#define ceemchfpc_imi   0x80 /* IEEE Invalid Operation mask      @D3A */
#define ceemchfpc_imz   0x40 /* IEEE Divide by Zero mask         @D3A */
#define ceemchfpc_imo   0x20 /* IEEE Overflow mask               @D3A */
#define ceemchfpc_imu   0x10 /* IEEE Underflow mask              @D3A */
#define ceemchfpc_imx   0x08 /* IEEE Inexact mask                @D3A */
#define ceemchfpc_rs0   0x07 /* (reserved bits in byte 0)        @D3A */

/* Values for field "_filler4" */
#define ceemchfpc_sfi   0x80 /* IEEE Invalid Operation flag      @D3A */
#define ceemchfpc_sfz   0x40 /* IEEE Divide by Zero flag         @D3A */
#define ceemchfpc_sfo   0x20 /* IEEE Overflow flag               @D3A */
#define ceemchfpc_sfu   0x10 /* IEEE Underflow flag              @D3A */
#define ceemchfpc_sfx   0x08 /* IEEE Inexact flag                @D3A */
#define ceemchfpc_rs1   0x07 /* (reserved bits in byte 1)        @D3A */

/* Values for field "_filler5" */
#define ceemchfpc_rs3   0xFC /* (reserved bits in byte 3)        @D3A */
#define ceemchfpc_rm    0x03 /* Rounding Mode                    @D3A */

/* Values for field "ceemch_afp_flags" */
#define ceemchafp_saved 0x80 /* AFP registers 1,3,5,7,8-15 valid @D3A */

#pragma pack(reset)
