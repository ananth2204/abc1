#pragma pack(packed)

struct dach ä
  unsigned char  dachidÄ4Ü;   /* Control block ID                           */
  unsigned char  dachvers;    /* Version number                             */
  unsigned char  dachdevcÄ2Ü; /* Device category                            */
  unsigned char  dachtypeÄ4Ü; /* Type of change that occurred to the device */
  unsigned char  _filler1;    /* reserved                                   */
  union ä
    struct ä
      unsigned char  _dach_io_fields;
      unsigned char  _filler2Ä31Ü;
      ü _dach_struct1;
    struct ä
      unsigned char  _dach_iora_fields;
      unsigned char  _filler3Ä31Ü;
      ü _dach_struct2;
    struct ä
      unsigned char  _dach_ccdr_fields;
      unsigned char  _filler4Ä31Ü;
      ü _dach_struct3;
    struct ä
      struct ä
        unsigned char  _dach_ccdr_dateÄ4Ü; /* Date */
        unsigned char  _dach_ccdr_timeÄ4Ü; /* Time */
        ü dach_ccdr_timestp;
      short int      _dach_ccdr_devn;    /* Device number undergoing a CDR change         */
      unsigned char  _dach_ccdr_dtypÄ4Ü; /* Device type from UCBTYP                       */
      short int      _dach_ccdr_cdrlen;  /* Length of CDR record                          */
      void          *_dach_ccdr_cdradr;  /* Address of CDR record                         */
      unsigned char  _dach_ccdr_chpid;   /* Channel path that the CDR record was obtained */
      unsigned char  _filler5Ä11Ü;
      ü _dach_struct4;
    struct ä
      unsigned char  _dach_pav_fields;
      unsigned char  _filler6Ä31Ü;
      ü _dach_struct5;
    struct ä
      unsigned char  _dach_st_fields;
      unsigned char  _filler7Ä31Ü;
      ü _dach_struct6;
    struct ä
      unsigned char  _dach_naloc_fields;
      unsigned char  _filler8Ä31Ü;
      ü _dach_struct7;
    struct ä
      void          *_dachnalocucb; /* UCB for device in use */
      unsigned char  _filler9Ä28Ü;
      ü dach_naloc;
    struct ä
      unsigned char  _dach_tran_fields;
      unsigned char  _filler10Ä31Ü;
      ü _dach_struct8;
    unsigned char  _dachqualdÄ32Ü; /* Qualifier dependent area */
    struct ä
      short int      _dach_io_devn;    /* Device number undergoing a subchannel change */
      unsigned char  _dach_io_dtypÄ4Ü; /* Device type from UCBTYP                      */
      unsigned char  _dach_io_ssid;    /* Subchannel set of the device number          */
      unsigned char  _filler11Ä25Ü;
      ü _dach_struct9;
    struct ä
      short int      _dach_iora_devn;    /* Device number becomming accessible       */
      unsigned char  _dach_iora_dtypÄ4Ü; /* Device type from UCBTYP                  */
      unsigned char  _dach_iora_chpd;    /* CHPID established.                       */
      unsigned char  _dach_iora_flags;
      unsigned char  _dach_iora_ssid;    /* Subchannel set ID associated with the IO */
      unsigned char  _filler12Ä23Ü;      /* Reserved                                 */
      ü _dach_struct10;
    struct ä
      short int      _dach_pav_devn;      /* Device number of PAV-base device             */
      struct ä
        unsigned int   _filler13 : 9;  /* Reserved */
        ü dach_pav_flgs;
      short int      _dach_pav_cnt;       /* Count of PAVs, including base                */
      unsigned char  _dach_pav_ssidbase;  /* Subchannel set ID associated with the        */
      unsigned char  _filler14;           /* Reserved                                     */
      unsigned char  _dach_pav_toknÄ4Ü;   /* PAV token after change                       */
      struct ä
        int            _dach_pav_devicebusydtime; /* Device busy delay time           */
        int            _dach_pav_cubusydtime;     /* CU busy delay time               */
        int            _dach_pav_dportbusydtime;  /* Destination port busy delay time */
        ü dach_pav_schibdata;
      short int      _dach_pav_devnalias; /* Device number of PAV-Alias device if this is */
      short int      _dach_pavbasembi;    /* MBI for base device                          */
      short int      _dach_pavaliasmbi;   /* MBI for alias device                         */
      unsigned char  _dach_pav_ssidalias; /* Subchannel set of the alias device number    */
      unsigned char  _filler15;           /* Reserved                                     */
      ü _dach_struct11;
    struct ä
      unsigned char  _dach_sw_switchnumberÄ4Ü; /* Switch device number updated */
      unsigned char  _dach_sw_portnumberÄ2Ü;   /* Port Address on Switch       */
      unsigned char  _filler16Ä26Ü;
      ü _dach_struct12;
    struct ä
      short int      _dach_tran_cu;   /* Control unit number undergoing transition */
      unsigned char  _dach_tran_mode; /* Target transition mode                    */
      unsigned char  _filler17Ä29Ü;   /* Reserved                                  */
      ü _dach_struct13;
    ü _dach_union1;
  struct ä
    unsigned char  _dachucbc;  /* Device class from UCBTYP field (Byte 3 of */
    unsigned char  _filler18;  /* Reserved.                                 */
    short int      _dachqn;    /* DACH qualifier number field               */
    ü dachqc;
  unsigned char  dachresÄ16Ü; /* reserved                                   */
  unsigned char  dachend;     /* End of DACH parameter list                 */
  ü;

#define dach_io_fields           _dach_union1._dach_struct1._dach_io_fields
#define dach_iora_fields         _dach_union1._dach_struct2._dach_iora_fields
#define dach_ccdr_fields         _dach_union1._dach_struct3._dach_ccdr_fields
#define dach_ccdr_date           _dach_union1._dach_struct4.dach_ccdr_timestp._dach_ccdr_date
#define dach_ccdr_time           _dach_union1._dach_struct4.dach_ccdr_timestp._dach_ccdr_time
#define dach_ccdr_devn           _dach_union1._dach_struct4._dach_ccdr_devn
#define dach_ccdr_dtyp           _dach_union1._dach_struct4._dach_ccdr_dtyp
#define dach_ccdr_cdrlen         _dach_union1._dach_struct4._dach_ccdr_cdrlen
#define dach_ccdr_cdradr         _dach_union1._dach_struct4._dach_ccdr_cdradr
#define dach_ccdr_chpid          _dach_union1._dach_struct4._dach_ccdr_chpid
#define dach_pav_fields          _dach_union1._dach_struct5._dach_pav_fields
#define dach_st_fields           _dach_union1._dach_struct6._dach_st_fields
#define dach_naloc_fields        _dach_union1._dach_struct7._dach_naloc_fields
#define dachnalocucb             _dach_union1.dach_naloc._dachnalocucb
#define dach_tran_fields         _dach_union1._dach_struct8._dach_tran_fields
#define dachquald                _dach_union1._dachquald
#define dach_io_devn             _dach_union1._dach_struct9._dach_io_devn
#define dach_io_dtyp             _dach_union1._dach_struct9._dach_io_dtyp
#define dach_io_ssid             _dach_union1._dach_struct9._dach_io_ssid
#define dach_iora_devn           _dach_union1._dach_struct10._dach_iora_devn
#define dach_iora_dtyp           _dach_union1._dach_struct10._dach_iora_dtyp
#define dach_iora_chpd           _dach_union1._dach_struct10._dach_iora_chpd
#define dach_iora_flags          _dach_union1._dach_struct10._dach_iora_flags
#define dach_iora_ssid           _dach_union1._dach_struct10._dach_iora_ssid
#define dach_pav_devn            _dach_union1._dach_struct11._dach_pav_devn
#define dach_pav_cnt             _dach_union1._dach_struct11._dach_pav_cnt
#define dach_pav_ssidbase        _dach_union1._dach_struct11._dach_pav_ssidbase
#define dach_pav_tokn            _dach_union1._dach_struct11._dach_pav_tokn
#define dach_pav_devicebusydtime _dach_union1._dach_struct11.dach_pav_schibdata._dach_pav_devicebusydtime
#define dach_pav_cubusydtime     _dach_union1._dach_struct11.dach_pav_schibdata._dach_pav_cubusydtime
#define dach_pav_dportbusydtime  _dach_union1._dach_struct11.dach_pav_schibdata._dach_pav_dportbusydtime
#define dach_pav_devnalias       _dach_union1._dach_struct11._dach_pav_devnalias
#define dach_pavbasembi          _dach_union1._dach_struct11._dach_pavbasembi
#define dach_pavaliasmbi         _dach_union1._dach_struct11._dach_pavaliasmbi
#define dach_pav_ssidalias       _dach_union1._dach_struct11._dach_pav_ssidalias
#define dach_sw_switchnumber     _dach_union1._dach_struct12._dach_sw_switchnumber
#define dach_sw_portnumber       _dach_union1._dach_struct12._dach_sw_portnumber
#define dach_tran_cu             _dach_union1._dach_struct13._dach_tran_cu
#define dach_tran_mode           _dach_union1._dach_struct13._dach_tran_mode
#define dachucbc                 dachqc._dachucbc
#define dachqn                   dachqc._dachqn

/* Values for field "dach_ccdr_chpid" */
#define dach_ccdr_fields_len     0x15

/* Values for field "dachnalocucb" */
#define dach_naloc_fields_len    0x20

/* Values for field "dach_io_ssid" */
#define dach_io_fields_len       0x07

/* Values for field "dach_iora_flags" */
#define dach_iora_onli           0x80       /* On if device was online                       */
#define dach_iora_vary_dev       0x40       /* On if IOS issued a VARY command in order      */

/* Values for field "_filler12" */
#define dachdach                 0xC4C1C3C8 /* DACH control block ID                         */
#define dachverc                 1          /* DACH version number                           */
#define dachdtio                 0xC9D6     /* Device undergoing subchannel change is an I/O */
#define dachdtcu                 0xC3E4     /* Device category is Control Unit               */
#define dach_hyperpav_transition 1          /* PAVMode change processing is requested        */
#define dach_basepav_transition  2          /* PAVMode change processing is requested        */
#define dach_iora_fields_len     0x20

/* Values for field "dach_pav_flgs" */
#define dach_pavbind             0x80       /* Alias is bound to base                        */
#define dach_pavunbind           0x40       /* Alias is unbound from base                    */
#define dach_pavunbindall        0x20       /* All aliases are unbound from base             */
#define dach_pavschibdatavalid   0x10       /* Schib data is valid                           */
#define dach_pav_basembivalid    0x08       /* The MBI for the base device is valid          */
#define dach_pav_aliasmbivalid   0x04       /* The MBI for the alias device is valid         */
#define dach_pav_dbt_valid       0x02       /* The device busy time for the alias device     */

/* Values for field "_filler15" */
#define dach_pav_fields_len      0x20

/* Values for field "dach_sw_portnumber" */
#define dach_st_fields_len       0x06

/* Values for field "_filler17" */
#define dachio                   0x01       /* Qualifier value for ENF signal/listener when  */
#define dachiora                 0x02       /* Qualifier value for ENF signal/listener when  */
#define dachccdr                 0x03       /* Qualifier value for ENF signal/listener when  */
#define dachpav                  0x04       /* Qualifier value for ENF signal/listener when  */
#define dachqapi                 0x05       /* Qualifier value for ENF signal/listener when  */
#define dachstc                  0x06       /* Qualifier value for ENF signal/listener when  */
#define dachnac                  0x07       /* Qualifier value for ENF signal/listener when  */
#define dachtran                 0x08       /* Qualifier value for ENF signal/listener when  */
#define dachio_as                0x1001     /* Qualifier value for ENF signal/listener when  */
#define dachiora_as              0x1002     /* Qualifier value for ENF signal/listener when  */
#define dachpav_as               0x1004     /* Qualifier value for ENF signal/listener when  */
#define dachipi                  0xC9D7C940 /* Installed parameters initialized              */
#define dachipm                  0xC9D7D440 /* Installed parameters modified                 */
#define dachlpe                  0xD3D7C540 /* Logical path established type.                */
#define dachacdr                 0xC1C3C4D9 /* Change CDR is an add CDR record               */
#define dachdcdr                 0xC4C3C4D9 /* Change CDR is a delete CDR record             */
#define dachpavs                 0xD7C1E5E2 /* Change in the set of PAV-alias devices        */
#define dachapi                  0xC1D7C940 /* Change in the Adjunct Processor Info          */
#define dachswtb                 0xE2E6E3C2 /* Change in the Port State                      */
#define dachnaloc                0xD5C1D3C3 /* Offline device in use                         */
#define dachtypetran             0xE3D9C1D5 /* Transition                                    */
#define dach_tran_fields_len     0x20

/* Values for field "dachend" */
#define dach_len                 0x40

#pragma pack(reset)
