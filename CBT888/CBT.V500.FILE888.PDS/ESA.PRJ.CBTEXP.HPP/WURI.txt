#ifndef INCLUDE_WURI
#define INCLUDE_WURI

#include "os.hpp"
#include "mvsbase.hpp"
#include "misc.hpp"
#include "defid.hpp"
#include <sys/types.h>
#include <dirent.h>

typedef char * (*PARSER)(char *);
class CGI;
class SKELETON_HTML;
class URI;

const char * GLOBAL_EXTENSION_LIST = "<GlobalExtensionList>";
#define      MAX_EXTENSION         128

typedef struct
ä
  char * ext;
  char * cont;
  char * media;
  char * pref;
  PARSER pars;
  int   conv;
  int   input_type;

ü EXTENSION_ENTRY;

enum INPUT_TYPE
ä
  input_type_invalid = 0,
  input_type_text   = 1,
  input_type_afp    = 2,
  input_type_binary = 3,
  input_type_aline  = 4
ü;
EXTENSION_ENTRY * searchExtensionEntry(char *);

class EXTENSION
ä
public:
  STRING ext;
  STRING contenttype;
  STRING mediatype;
  STRING prefix;
  STRING contentmediatype;
  PARSER parser;
  int   convert;
  int   inputtype;
  int   text;
  int   extension_entry_index;
public:
  EXTENSION(char *);
  ßEXTENSION();
  char * parse();
  char * getExt()äreturn ext;ü
  char * getContentType()äreturn contenttype;ü
  char * getMediaType()ä return mediatype;ü
  char * getPrefix()ä return prefix;ü
  int   getConvert()ä return convert;ü
  int   getText()ä return text;ü
  char * getContentMediaType()äreturn contentmediatype;ü
  char * getProgram()ä return "progarm";ü
  PARSER getParser()ä return parser;ü
 void   setConvert(int v)ä convert = v;ü
 void   setASCII()ä convert = 1;ü
 void   setASIS()ä convert = 0;ü
 void   setExt(char * s);
 EXTENSION_ENTRY  * getExtensionEntry();
friend class URI;
ü;

enum URI_type ä
    undef   = 0,
    ddn     = 10,
    ddn_dir =  11,
    dsn     =  20,
    dsn_dir =  21,
    dsn_hlq =  22,
    jes     =  30,
    jes_dir =  31,
    db2     =  40,
    cgi_call = 50,
    cgi_rexx = 51,
    cgi_call_le  = 52,
    cgi_call_sas = 53,
    nph_call = 60,
   qfss_call=  70,
   java     =  80,
    hfs   = 90,
    hfs_dir =  91,
   vsam     =  100,
   vsam_dir =  101
ü;

class URI
ä
private:
  CGI * cgi;
  STRING uri;
  STRING style;
  STRING name;
  STRING member;
  STRING style_name;
 STRING  vsam_ddname;
  EXTENSION * ext;
  URI_type uri_type;
  SKELETON_HTML * skeleton_html;
  FILE * file;
        DIR* dir;
        struct dirent* dirent;
  struct DSNINFO * dsninfo;
  int rc;
public:
  URI(CGI *,char *);
  ßURI();
  char * parse();
  char * open();
  int   next(char *);
  char * getStyle()äreturn style;ü
  char * getName()äreturn name;ü
  char * getMember()äreturn member;ü
  char * getExtension()äreturn ext->getExt();ü
  EXTENSION * getEXTENSION()ä return ext;ü
  char * getMvsFileName()ä return name;ü
  URI_type getType()ä return uri_type;ü
  void    setType(URI_type u)ä uri_type = u;ü
 STRING getMvsName(STRING);
 STRING getMvsName(STRING,STRING);
 FILE * getFile()ä return file;ü
friend class EXTENSION;
ü;
#endif
