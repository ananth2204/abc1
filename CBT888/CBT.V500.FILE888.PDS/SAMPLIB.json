{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "ESA", "INMTNODE": "JES2P390", "INMTUID": "ESA", "INMFTIME": "20130207124421000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 484556, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 1, "INMDSNAM": "ESA.PRJ.CBTEXP.SAMPLIB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 484556, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 484556, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"ESA.PRJ.CBTEXP.SAMPLIB": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"APAPARM": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x13\\x01\\x9f\\x01\\x13\\x01\\x9f\\x19\\x01\\x00G\\x00G\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-01-19T00:00:00", "modifydate": "2013-01-19T19:01:17", "lines": 71, "newlines": 71, "modlines": 0, "user": "ESA"}, "text": " PROFILE 01 INPUT=SFILE01\n SECTION S01\n SECTION S02 Sequence=NAME\n             OmitESD=Y\n             OmitNUC=N\n             OmitPLPA=N\n SECTION S03 Sequence=NAME\n SECTION S04\n SECTION S05 Intervals=45\n SECTION S06 Intervals=45\n SECTION S07\n SECTION S08\n SECTION C01 Levels=9\n             Sequence=VALUE\n             DPAGroup=Y\n             ShowDB2=Y\n             Minimum=0.00\n             MLD=Y\n             Datamg=Y\n             ShowIMS=Y\n SECTION C02 Levels=9\n             Sequence=VALUE\n             Minimum=0.00\n             MLD=Y\n SECTION C03 Levels=9\n             Sequence=VALUE\n             Minimum=0.00\n             SliceSize=64\n SECTION C04 Intervals=45\n SECTION C05 Levels=9\n             Sequence=VALUE\n             DPAGroup=Y\n             ShowDB2=Y\n             ShowInact=Y\n             MLD=Y\n             Datamg=Y\n             ShowIMS=Y\n SECTION C06 Levels=9\n             MLD=Y\n SECTION C07\n SECTION C08 Levels=9\n             MLD=Y\n SECTION C09 Levels=2\n SECTION D01 Levels=9\n             Minimum=0.00\n SECTION D02 Levels=9\n             Minimum=0.00\n SECTION D03 Levels=9\n             Minimum=0.00\n SECTION D04\n SECTION D05\n SECTION D07\n SECTION D08 Levels=9\n             MLD=Y\n SECTION W01 Levels=9\n             Sequence=VALUE\n             DPAGroup=Y\n             ShowDB2=Y\n             ShowInact=Y\n             MLD=Y\n             Datamg=Y\n             ShowIMS=Y\n SECTION W02 Levels=9\n             MLD=Y\n SECTION W03 Levels=9\n             MLD=Y\n SECTION G01\n SECTION G02 Levels=9\n SECTION G03 Levels=9\n PRINT DDNAME=REPORT1 LANG=ENU\n CONVERT DDNAME=PDF1 Format=PDF LANG=ENU\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CALLAPA": {"ttr": 49, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\r\\x00%\\x01\\x13\\x02\\x8f\\x01\\x13\\x02\\x8f\\x17'\\x00(\\x00(\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@\"", "ispf": {"version": "01.13", "flags": 0, "createdate": "2013-01-28T00:00:00", "modifydate": "2013-01-28T17:27:25", "lines": 40, "newlines": 40, "modlines": 0, "user": "ESA"}, "text": "/* REXX */\n/*\nparse upper arg user id jobname\n\" alloc fi(cazctl) da('sys9.maint.ispslib(apaparm)') shr reuse  \"\ndsn=\"APA.V710.\"||user||\".\"||id||\".\"||jobname||\".SF\"\nrc1 = LISTDSI(\"'\"dsn\"'\")\nif rc <> 0 | rc1 <> 0 then\ndo\n  say \"rc1:\" rc1 \"rc:\" rc1\nend\n\"alloc fi(SFILE01) DA('\"dsn\"') SHR REUSE\"\n\"alloc fi(PDF1) DA('esa.PDF') sHR REUSE\"\n\"alloc fi(REPORT1) dummy sHR REUSE\"\n\"alloc fi(SYSPRINT) dummy sHR REUSE\"\n\"alloc fi(CAZLOG) dummy sHR REUSE\"\naddress TSO \"call *(cazprint)\"\n\"free fi(CAZCTL)\"\n\"free fi(SFILE01)\"\n\"free fi(PDF1)\"\n\"free fi(SYSPRINT)\"\n\"free fi(CAZLOG)\"\nexit\n*/\nparse upper arg user id jobname apa pdf custlib\n\n\" alloc fi(cazctl) da('\"custlib\"(apaparm)') shr reuse  \"\ndsn=apa||\".\"||user||\".\"||id||\".\"||jobname||\".SF\"\n\n\"alloc fi(SFILE01) DA('\"dsn\"') SHR REUSE\"\n\"alloc fi(PDF1) DA(\"pdf\") sHR REUSE\"\n\"alloc fi(REPORT1) dummy sHR REUSE\"\n\"alloc fi(SYSPRINT) dummy sHR REUSE\"\n\"alloc fi(CAZLOG) dummy sHR REUSE\"\naddress TSO \"call *(cazprint)\"\n\"free fi(CAZCTL)\"\n\"free fi(SFILE01)\"\n\"free fi(PDF1)\"\n\"free fi(SYSPRINT)\"\n\"free fi(CAZLOG)\"\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CHANGEAL": {"ttr": 13, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00I\\x01\\x123\\x1f\\x01\\x125/\\x17Q\\x00\\x16\\x00\\x1d\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2012-11-26T00:00:00", "modifydate": "2012-12-17T17:51:49", "lines": 22, "newlines": 29, "modlines": 0, "user": "ESA"}, "text": "//CHANEALL JOB ,ESA,\n//             CLASS=A,MSGLEVEL=(1,1),MSGCLASS=X,NOTIFY=ESA\n//WORDCHAN EXEC PGM=IKJEFT01,REGION=0M\n//SYSPROC  DD   DSN=ESA.PRJ.CBTEXP.SAMPLIB,DISP=SHR\n//SYSTSPRT DD   SYSOUT=X\n//ISPPROF  DD   DSN=&ISPPROF,UNIT=VIO,\n// SPACE=(TRK,(1,1,1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)\n//ISPLOG   DD   DSN=&ISPLOG,UNIT=VIO,\n// SPACE=(TRK,(1,1)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)\n//ISPPLIB  DD   DSN=ISP.SISPPENU,DISP=SHR\n//ISPSLIB  DD   DSN=ISP.SISPSLIB,DISP=SHR\n//ISPTLIB  DD   DSN=ISP.SISPTENU,DISP=SHR\n//ISPMLIB  DD   DSN=ISP.SISPMENU,DISP=SHR\n//SYSTSIN  DD   *\n PROFILE PREFIX(ESA)\n ISPSTART CMD( -\n  %CHANGEXX -\n  ESA.PRJ.CBTEXP.SAMPLIB -\n  * -\n  CBTEXP         -\n  CBTEXP         )\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHANGEXX": {"ttr": 15, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x123\\x1f\\x01\\x125/\\x17Q\\x00W\\x00W\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-11-26T00:00:00", "modifydate": "2012-12-17T17:51:49", "lines": 87, "newlines": 87, "modlines": 0, "user": "ESA"}, "text": "/* REXX       */\n\n/*********************************************************************/\n/*                                                                   */\n/*                                                                   */\n/*   (C) COPYRIGHT ISIS GES.M.B.H                                    */\n/*                                                                   */\n/*                                                                   */\n/*   PROCEDURENAME.......: CHANGEXX                                  */\n/*                                                                   */\n/*   FUNCTION ...........: executes a general change of an item      */\n/*                         in all members of the passed PDS DS       */\n/*                                                                   */\n/*   NOTES ..............:  1. The base mode is address ISPEXEC      */\n/*                                                                   */\n/*   CHANGES.............:  1. 97.04.10 member name selection        */\n/*                                                                   */\n/*                                                                   */\n/*                                                                   */\n/*                                                                   */\n/*************************************************** ISIS 1996.08 ****/\n   cstar  = '*'\n\n   ADDRESS ISPEXEC\n\n   parse arg dsn memmask from to .                       /*m:97.04.10.*/\n   dsn = translate(dsn)\n   memmask = translate(memmask)                          /*n:97.04.10.*/\n\n   \"LMINIT  DATAID(EDITDSN) DATASET('\"dsn\"') ENQ(SHR)\"\n   if rc > 0 ,\n   then do\n      say \"RC=\"rc\", was returned from LMINIT of dataset \"dsn\n      exit 12\n        end\n\n   \"VPUT (from) PROFILE\"\n   \"VPUT (to  ) PROFILE\"\n\n   /* start of changes to get the prefix string           n:97.04.10.*/\n   pos_star     = pos(cstar,memmask)\n   if pos_star > 1 ,\n   then memmask_pref = substr(memmask,1,pos_star-1)\n   else do\n      if pos_star = 1 ,\n      then memmask_pref = ''\n      else memmask_pref = memmask\n        end\n   /* end   of changes to get the prefix string           n:97.04.10.*/\n\n   \"LMOPEN  DATAID(\"EDITDSN\")\"\n   if rc > 0 ,\n   then do\n      say \"RC=\"rc\", was returned from LMOPEN of dataset \"dsn\n      exit 12\n        end\n   \"LMMLIST DATAID(\"EDITDSN\") MEMBER(EDITMEM)\"\n   do while (rc \u00ac= 8)\n      if rc > 0 ,\n      then do\n         say \"RC=\"rc\", was returned from LMMLIST dataset \"dsn  ,\n             \"(\"editmem\")\"\n         exit 12\n           end\n      /* start of changes to include member selection     n:97.04.10.*/\n      if pos_star > 1  ,\n      then editmem_pref = substr(editmem,1,pos_star-1)\n      else do\n         if pos_star = 1\n         then editmem_pref = ''\n         else editmem_pref = editmem\n           end\n      if editmem_pref = memmask_pref ,\n      then \"EDIT DATAID(\"EDITDSN\") MEMBER(\"EDITMEM\") MACRO(MCHANGE)\"\n      /* end   of changes to include member selection     n:97.04.10.*/\n      if rc > 0 ,\n      then do\n         say \"RC=\"rc\", was returned from editing dataset \"dsn  ,\n             \"(\"editmem\")\"\n         exit 12\n           end\n      \"LMMLIST DATAID(\"EDITDSN\") MEMBER(EDITMEM)\"\n   end\n   \"LMCLOSE DATAID(\"EDITDSN\")\"\n\n   return 0\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ICHDSM00": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x002\\x01\\x12\\x17\\x1f\\x01\\x13\\x00\\x9f\\tB\\x00\\x13\\x00\\t\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2012-06-19T00:00:00", "modifydate": "2013-01-09T09:42:32", "lines": 19, "newlines": 9, "modlines": 0, "user": "ESA"}, "text": "/* rexxx */\n/*\nPlease insert ICHDSM00 into the IKJTSOxx autorized command name list\n      and \"PARMLIB UPDATE(xx)\nPlease insert ICHDSM00 into the IKJTSOxx autorized command name list\n      and \"PARMLIB UPDATE(xx)\nPlease insert ICHDSM00 into the IKJTSOxx autorized command name list\n      and \"PARMLIB UPDATE(xx)\n*/\nparse arg user\nsysin_dsn  =\"'\"||user||\".MVSEXP.SYSIN'\"\nsysut2_dsn =\"'\"||user||\".MVSEXP.SYSUT2'\"\naddress tso\n\"alloc fi(sysin) da(\"sysin_dsn\") shr reuse\"\n\"alloc fi(sysut2) da(\"sysut2_dsn\") shr reuse\"\n\"alloc fi(sysprint) dummy\"\n\"ichdsm00\"\n\"logoff\"\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INSTALL": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x08\\x00I\\x01\\x123\\x0f\\x01\\x125/\\x17Q\\x00!\\x00'\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@\"", "ispf": {"version": "01.08", "flags": 0, "createdate": "2012-11-25T00:00:00", "modifydate": "2012-12-17T17:51:49", "lines": 33, "newlines": 39, "modlines": 0, "user": "ESA"}, "text": "//INSTALL JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//**************************************************************\n//* TSO BATCH PROC\n//**************************************************************\n//TSOBATCH EXEC PGM=IKJEFT1B,DYNAMNBR=200\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSTSIN  DD *\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(ADATA)')\n RESTORE DSN('MVSHSM.V1R1M0.ADATA')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(ASM)')\n RESTORE DSN('MVSHSM.V1R1M0.ASM')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(COMPLIST)')\n RESTORE DSN('MVSHSM.V1R1M0.COMPLIST')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(CPP)')\n RESTORE DSN('MVSHSM.V1R1M0.CPP')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(HPP)')\n RESTORE DSN('MVSHSM.V1R1M0.HPP')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(JOBS)')\n RESTORE DSN('MVSHSM.V1R1M0.JOBS')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(LOADLIB)')\n RESTORE DSN('MVSHSM.V1R1M0.LOADLIB')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(OBJECT)')\n RESTORE DSN('MVSHSM.V1R1M0.OBJECT')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(CNTL)')\n RESTORE DSN('MVSHSM.V1R1M0.CNTL')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(PROC)')\n RESTORE DSN('MVSHSM.V1R1M0.PROC')\n RECEIVE INDATASET('ESA.PRJ.CBTEXP.XMIT(SAMPLIB)')\n RESTORE DSN('MVSHSM.V1R1M0.SAMPLIB')\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IODFGEN": {"ttr": 21, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00G\\x01\\x12\\x15o\\x01\\x13\\x00\\x8f\\x18Q\\x006\\x003\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2012-06-04T00:00:00", "modifydate": "2013-01-08T18:51:47", "lines": 54, "newlines": 51, "modlines": 0, "user": "ESA"}, "text": "//IODFGEN JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//*\n//*  HTML, PERL/CGI scripts written by Mark Naughton in November 2005.\n//*\n//*   Any questions, contact me at: mark@blue-shantung.co.uk\n//*  CBT tape 736\n//*\n//*\n//*********************************************************************\n//** Produce IOCP decks from HCD for WEBIODF\n//** ---------------------------------------\n//**\n//** Change IODF parameters in step at the bottom of this job!\n//**\n//**\n//*********************************************************************\n//WEBIODF  PROC IODF='',IPARM='' DECK=NULLFILE\n//GO       EXEC PGM=CBDMGHCP,REGION=0M,PARM=&IPARM\n//HCDIODFS DD   DSN=&IODF,DISP=SHR\n//HCDDECK  DD   PATH='&DECK',\n//         PATHOPTS=(OWRONLY,OCREAT,OEXCL),\n//         PATHMODE=(SIRWXU,SIRWXG,SIRWXO),\n//         RECFM=FB,LRECL=80,BLKSIZE=6080\n//HCDMLOG  DD   SYSOUT=*,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=6650)\n//SYSPRINT DD   DSN=&&IOCPOUT,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=6650),\n//         SPACE=(CYL,(30,2)),DISP=(NEW,PASS,DELETE),UNIT=SYSALLDA\n//SYSIN    DD   DSN=&&TEMP,DISP=(NEW,DELETE),SPACE=(CYL,(1,1)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6080),UNIT=SYSALLDA\n//*-------------------------------------------------------------------\n//*        PRINT IOCP REPORT ONLY IF ERROR OCCURRED\n//*-------------------------------------------------------------------\n//PRINT    EXEC PGM=IEBGENER,COND=(0,EQ,GO)\n//SYSUT1   DD DSN=&&IOCPOUT,DISP=(OLD,DELETE)\n//SYSUT2   DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSPRINT DD DUMMY\n//*------------------------------------------------------------------\n//*        OTHERWISE CLEAN UP FOR NEXT STEPS\n//*------------------------------------------------------------------\n//CLEANUP  EXEC PGM=IEFBR14,COND=(0,NE,GO)\n//SYSUT1   DD DSN=&&IOCPOUT,DISP=(OLD,DELETE)\n//         PEND\n//*********************************************************************\n//*********************************************************************\n//CIOCP EXEC PROC=WEBIODF,\n//        IPARM='(IOCDS,,PZ9,D,SA)',\n//      IODF='SYS1.IODFA4',\n//      DECK='/u/mvsexp/server_root/cgi-bin/iodf/iodfxx'\n//GO.HCDCNTL DD *\nIODFA4\n/*\n******************************** Bottom of Data ********************************\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LINKLOAD": {"ttr": 23, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00I\\x01\\x12'\\x0f\\x01\\x125/\\x17Q\\x00\\x17\\x00\\x16\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2012-09-26T00:00:00", "modifydate": "2012-12-17T17:51:49", "lines": 23, "newlines": 22, "modlines": 0, "user": "ESA"}, "text": "//ESALINK JOB ,ESA,NOTIFY=ESA,\n//    CLASS=A,MSGCLASS=A,MSGLEVEL=(1,1)\n//LKED  EXEC PGM=HEWLH096,\n//      PARM='LET,NCAL,RENT,REUS,DYNAM=DLL,LIST,MAP',\n//         REGION=0M\n//SYSPRINT DD  SYSOUT=A\n//SYSTERM  DD  SYSOUT=A\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=HOSTEXP.V1R0M0.LOADLIB,DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(32000,(30,30))\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD *\n INCLUDE -IMPORTS,-ATTR,/u/esa/run620/aaaaaaaa.mi/MVSSAMP\n ALIAS   REXXDSI\n ALIAS   REXXENFS\n ALIAS   REXXGIM\n ALIAS   REXXJCL\n ALIAS   REXXLIST\n ALIAS   REXXRACF\n ALIAS   REXXRAC1\n ALIAS   REXXRMF2\n ALIAS   REXXSMF\n NAME    MVSSAMP(R)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGRSTRM": {"ttr": 25, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00X\\x01\\x13\\x01_\\x01\\x13\\x01o\\tA\\x00\\x18\\x00\\x18\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2013-01-15T00:00:00", "modifydate": "2013-01-16T09:41:58", "lines": 24, "newlines": 24, "modlines": 0, "user": "ESA"}, "text": "//LOGRSTRM JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//STEP1 EXEC PGM=IXCMIAPU\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n DATA TYPE(LOGR) REPORT(YES)\n DELETE LOGSTREAM NAME(SYSPLEX.LOGREC.ALLRECS)\n DELETE STRUCTURE NAME(LOGRECSTRUCTURE)\n//STEP1 EXEC PGM=IXCMIAPU\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n      DATA TYPE(LOGR) REPORT(YES)\n      DEFINE STRUCTURE NAME(LOGRECSTRUCTURE)\n              LOGSNUM(1)\n              AVGBUFSIZE(4068)\n              MAXBUFSIZE(4068)\n      DEFINE LOGSTREAM NAME(SYSPLEX.LOGREC.ALLRECS)\n             STRUCTNAME(LOGRECSTRUCTURE)\n                 STG_DATACLAS(LOGR4K) STG_STORCLAS(LOGR4K)\n                 AUTODELETE(YES) RETPD(1)\n                 LS_STORCLAS(LOGR4K)\n                 LS_DATACLAS(LOGR4K) STG_DUPLEX(NO)\n                 LS_SIZE(1024) HLQ(RRSLOGS)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MCHANGE": {"ttr": 27, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x123/\\x01\\x125/\\x17Q\\x00\\x08\\x00\\x08\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-11-27T00:00:00", "modifydate": "2012-12-17T17:51:49", "lines": 8, "newlines": 8, "modlines": 0, "user": "ESA"}, "text": "ISREDIT MACRO PROCESS\nISPEXEC VGET FROM\nISPEXEC VGET TO\nISREDIT CHANGE &FROM &TO  ALL\nISREDIT SAVE\nISREDIT END\nRETURN\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MOUNT": {"ttr": 63, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x13\\x03/\\x01\\x13\\x03/\\x10P\\x00\\x04\\x00\\x04\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-02-01T00:00:00", "modifydate": "2013-02-01T10:50:45", "lines": 4, "newlines": 4, "modlines": 0, "user": "ESA"}, "text": "MOUNT FILESYSTEM('MVSEXP.V1R1M0.ZFS')\n MOUNTPOINT('/u/mvsexp')\n TYPE(ZFS)\n MODE(RDWR)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MVSEXP": {"ttr": 29, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x124\\x8f\\x01\\x125/\\x17Q\\x00u\\x00u\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-12-13T00:00:00", "modifydate": "2012-12-17T17:51:49", "lines": 117, "newlines": 117, "modlines": 0, "user": "ESA"}, "text": "//MVSEXP JOB ,IBMUSER,MSGCLASS=X\n//IMWPROC PROC LEPARM='ENVAR(\"_CEE_ENVFILE=/u/mvsexp/httpd.envvars\")',\n//  ICSPARM='  -p 8080 -r /u/mvsexp/httpd.conf'\n//*********************************************************************\n//*\n//* LEPARM  ==> LE runtime opts\n//* LEPARM='ENVAR(\"_CEE_ENVFILE=/u/mvsexp/httpd.envvars\")'\n//*\n//* ICSPARM ==> HTTP Server parameters\n//* # Standalone HTTPD\n//* ICSPARM='-p 8080 -r /u/mvsexp2/httpd.conf'\n//* # WLM Queue Manager\n//* ICSPARM='-SN WEBSN1 -p 8080 -r /u/mvsexp/httpd.conf'\n//* # WLM ApplEnv Queue Server\n//* ICSPARM='-SN WEBSN1 -AE WEBHTML'\n//*\n//*  HTTP Server Parameters:\n//*   -SN                         # WLM - subsystem name\n//*   -AE                         # WLM - Application Envirnonment\n//*\n//*   -fscp      nnn              # File system codepage - EBCDIC\n//*   -netcp     nnn              # net code page        - ASCII\n//*\n//*   -gc_only                    # clean cache & exit (garbage collect)\n//*\n//*   -normalmode\n//*   -p         nnnn             # use port nnn (default 80)\n//*   -sslmode\n//*   -sslport   nnnn             # use port nnn (default 443)\n//*   -nosec                      # no security\n//*\n//*   -nosmf                      # no smf processing on\n//*   -smf                        # smf processing on\n//*\n//*   -r         /u/mvsexp/httpd.conf # use rule file xxxx\n//*   -restart\n//*   -v                          # trace to stderr\n//*   -vv                         # trace all to stderr\n//*   -vc                         # cache trace to stderr\n//*\n//*   -version                    # show version and exit\n//*\n//*\n//*   xxxxxxx                     # ServerRoot xxxxxxx; Pass /*\n//*\n//**************************************************************\n//*\n//*  The following LE runtime options are set as defaults within\n//*  the main \"C\" module for the HTTP OS/390 Webserver.\n//*\n//*      POSIX(ON),ALL31(ON)\n//*      ENVAR(\"_CEE_ENVFILE=/u/mvsexp/httpd.envvars\")\n//*      ANYHEAP(4M,1M,ANY,FREE)\n//*      BELOWHEAP(400K,50K,FREE)\n//*      HEAP(4M,1M,ANY,KEEP,4K,4K)\n//*      LIBS(1K,1K,FREE)\n//*      STACK(200K,16K,ANY,FREE)\n//*      HEAPP(ON)\n//*      STORAGE(NONE,NONE,NONE,8192)\n//*      TERMTHDACT(UADUMP)\n//*      TRAP(ON)\n//*      ABTERMENC(ABEND)\n//*\n//*  To verify the LE runtime options add the following line to\n//*  the LEPARM symbolic definition for this proc.\n//*\n//*     RPTOPTS(ON)\n//*\n//*  The runopts report will be printed when the Webserver\n//*  terminates.\n//*-----------------------------------------------------\n//*\n//*  If extensive research is required to solve a problem the\n//*  IBM customer service representative may ask that the\n//*  problem be recreated and a SYSMDUMP furnished.\n//*  If that is the case the, value of the RECOVERY\n//*  configuration directive MUST be set to NONE.\n//*  The SYSMDUMP DD statement listed below must be uncommented\n//*  and completed.\n//*  The filler <hlq>  MUST be replaced with a valid high-level\n//*  qualifier in the  DSNAME parameter.  This high-level\n//*  qualifier must be valid in the customer environment.\n//*  The recommended values for the SYSMDUMP DD statement\n//*   have been provided.\n//*  All values are changeable to fit the environment of the\n//*  customer with the EXCEPTION of the DCB parameter.  The\n//*  DCB parameter values are required for use with the IPCS\n//*  dump reading tool and MUST NOT change.\n//*\n//*  The DCB parameter MUST have the following values:\n//*          DCB=(LRECL=4160,BLKSIZE=24960,RECFM=FBS),\n//*\n//*  NOTE - The SYSMDUMP DD statement may be uncommented and\n//*         completed at setup time.\n//*\n//*\n//*********************************************************************\n//WEBSRV   EXEC PGM=IMWHTTPD,REGION=0K,TIME=NOLIMIT,\n//   PARM=('&LEPARM/&ICSPARM')\n//*STEPLIB  DD DSN=SYS1.LINKLIB,DISP=SHR\n//*********************************************************************\n//SYSIN    DD DUMMY\n//OUTDSC   OUTPUT DEST=HOLD\n//SYSPRINT DD SYSOUT=*,OUTPUT=(*.OUTDSC)\n//SYSERR   DD SYSOUT=*,OUTPUT=(*.OUTDSC)\n//STDOUT   DD SYSOUT=*,OUTPUT=(*.OUTDSC)\n//STDERR   DD SYSOUT=*,OUTPUT=(*.OUTDSC)\n//SYSOUT   DD SYSOUT=*,OUTPUT=(*.OUTDSC)\n//CEEDUMP  DD SYSOUT=*,OUTPUT=(*.OUTDSC)\n//*SYSMDUMP DD DSNAME=&HLQ..WEBMDUMP.D&LYYMMDD..T&LHHMMSS,\n//*         UNIT=SYSDA,\n//*         SPACE=(CYL,(100,50)),\n//*         DCB=(LRECL=4160,BLKSIZE=24960,RECFM=FBS),\n//*         DISP=(NEW,DELETE,CATLG)\n// PEND\n//WEBSRV EXEC IMWPROC\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MXISERV": {"ttr": 31, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x15\\x01\\x13\\x00\\x7f\\x01\\x13\\x00\\x8f\\x17\\x04\\x00\\n\\x00\\n\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2013-01-07T00:00:00", "modifydate": "2013-01-08T17:04:15", "lines": 10, "newlines": 10, "modlines": 0, "user": "ESA"}, "text": "//MXISERV   JOB ,IBMUSER,\n//       MSGCLASS=Z,MSGLEVEL=(1,1)\n//MXISERVE  PROC MEMBER=00\n//MXISERVE  EXEC PGM=MXISERV,REGION=0M,TIME=1440\n//SYSIN    DD DISP=SHR,DSN=SYS9.PARMLIB(MXISRV&MEMBER)\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTCPD  DD DISP=SHR,DSN=SYSPLEX.TCPIP.TCPPARMS(TCPDAT&SYSCLONE)\n// PEND\n//MXISERVE EXEC MXISERVE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NAVIJOB": {"ttr": 61, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00W\\x01\\x12\\x15o\\x01\\x13\\x03\\x1f\\x11F\\x00\\xee\\x00\\xf0\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2012-06-04T00:00:00", "modifydate": "2013-01-31T11:46:57", "lines": 238, "newlines": 240, "modlines": 0, "user": "ESA"}, "text": "//NAVIJOB JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//ACBJBAOB PROC CLIST1='SYS1.DGTCLIB',\n//*------------------------------------------------------------------*/\n//* CLIST1 SHOULD BE THE FILE #1 FROM THE INSTALLATION TAPE          */\n//* NOTE THAT THIS IS A FB CLIST LIBRARY; IF YOUR INSTALLATION       */\n//* USES VB CLIST LIBRARIES, YOU MUST CONVERT THEM YOURSELF          */\n//*------------------------------------------------------------------*/\n//             PLIB1='SYS1.DGTPLIB',\n//*------------------------------------------------------------------*/\n//* PLIB1 SHOULD BE THE FILE #3 FROM THE INSTALLATION TAPE           */\n//*------------------------------------------------------------------*/\n//             LOAD1='SYS1.DGTLLIB',\n//*------------------------------------------------------------------*/\n//* LOAD1 SHOULD BE THE FILE #5 FROM THE INSTALLATION TAPE           */\n//*------------------------------------------------------------------*/\n//             MLIB1='SYS1.DGTMLIB',\n//*------------------------------------------------------------------*/\n//* MLIB1 SHOULD BE THE FILE #6 FROM THE INSTALLATION TAPE           */\n//*------------------------------------------------------------------*/\n//             TABL2='ESA.MAINT.ISPTLIB'\n//*------------------------------------------------------------------*/\n//* TABL2 IS THE DATA SET FOR SAVING ISMF TABLES; YOU SHOULD         */\n//* ALLOCATE THIS DATA SET WITH THE SAME DCB PARAMETERS AS THE       */\n//* ISMF DGTTLIB DATA SET; TABLE CAN BE LARGE - ALLOCATE A LARGE     */\n//* DATA SET.  Be sure you change 'userid' to YOUR userid.           */\n//*------------------------------------------------------------------*/\n//********************************************************************/\n//*$MAC(ACBJBAOB) COMP(5695DF123): BATCH  - CALLED PROC              */\n//*                                                                  */\n//* PROPRIETARY V3 STATEMENT                                         */\n//* LICENSED MATERIALS - PROPERTY OF IBM                             */\n//* 5647-A01                                                         */\n//* (C) COPYRIGHT 1995, 2000  IBM CORP.                              */\n//* END PROPRIETARY V3 STATEMENT                                     */\n//*                                                                  */\n//* CHANGE ACTIVITY:                                                 */\n//*                                                                  */\n//*$K0=NAVIQUEST,HACS110,95/08/04,SNJADR: INITIAL VERSION        @K0A*/\n//*$K1=KNQ0003,HACS110,95/08/04,SNJTCS: COMMENT CORRECTION       @K1C*/\n//*02/29/96  TCS - HACS110:  REMOVED SEQUENCE NUMBERS        @WA18945*/\n//*$L0=NAVIQUEST,HACS120,96/06/18,SNJTCS: RELEASE 2 CHANGES      @L0A*/\n//*$L1=KN20035,HACS120,96/07/12,SNJTCS: TYPO CORRECTED           @L0A*/\n//*10/14/96  CCY - HDZ11C0: Ship as SPE                      @WA22861*/\n//*06/13/97  CCY - HDZ11D0: Change IBMUSER to 'userid'       @WA27246*/\n//*$T1=NQ5,HDZ11E0,061997,SNJTCS: ISP V3R5M0 Datasets deleted    @T1A*/\n//*08/27/98  TCS - HDZ11D0: BLKSIZE=0  fix                   @WA34895*/\n//*11/23/98  TCS - HDZ11E0: Add missing comma                @WA36007*/\n//*01/21/99  TCS - HDZ11E0: Changing UNIT from 3380 to SYSDA @WA36897*/\n//*                                                                  */\n//********************************************************************/\n//********************************************************************/\n//* PROC STEP STEP1 - INVOKES IKJEFT01                               */\n//********************************************************************/\n//STEP1    EXEC PGM=IKJEFT01,DYNAMNBR=50,REGION=(6144K),TIME=(300)\n//*------------------------------------------------------------------*/\n//STEPLIB  DD DSN=&LOAD1,DISP=SHR\n//*------------------------------------------------------------------*/\n//* IN ISPPLIB, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST PANELS     */\n//*------------------------------------------------------------------*/\n//ISPPLIB  DD DSN=&PLIB1,DISP=SHR,BLKSIZE=0\n//         DD DSN=ISP.SISPPENU,DISP=SHR            /* ISPF PANELS    */\n//*        DD DSN=SYS1.DGTPLIB,DISP=SHR            /* ISMF PANELS    */\n//*------------------------------------------------------------------*/\n//* IN ISPMLIB, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST MESSAGES   */\n//*------------------------------------------------------------------*/\n//ISPMLIB  DD DSN=&MLIB1,DISP=SHR,BLKSIZE=0\n//         DD DSN=ISP.SISPMENU,DISP=SHR            /* ISPF MESSAGES  */\n//*        DD DSN=SYS1.DGTMLIB,DISP=SHR            /* ISMF MESSAGES  */\n//*------------------------------------------------------------------*/\n//* IN ISPSLIB, INCLUDE THE ISPF, PDF AND ISMF SKELETONS             */\n//*------------------------------------------------------------------*/\n//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR,           /* ISPF SKELETONS */\n//          BLKSIZE=0\n//         DD DSN=SYS1.DGTSLIB,DISP=SHR            /* ISMF SKELETONS */\n//*------------------------------------------------------------------*/\n//* IN ISPTLIB, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST TABLES     */\n//*------------------------------------------------------------------*/\n//ISPTLIB  DD DSN=&&TEMP,DISP=NEW,UNIT=SYSDA,BLKSIZE=0,\n//            SPACE=(TRK,(1,1,1)),DCB=(ISP.SISPTENU)\n//         DD DSN=&TABL2,DISP=SHR\n//         DD DSN=ISP.SISPTENU,DISP=SHR            /* ISPF TABLES    */\n//         DD DSN=SYS1.DGTTLIB,DISP=SHR            /* ISMF TABLES    */\n//*------------------------------------------------------------------*/\n//* IN SYSPROC, INCLUDE THE ISPF, PDF, ISMF AND NAVIQUEST CLISTS     */\n//*------------------------------------------------------------------*/\n//SYSPROC  DD DSN=&CLIST1,DISP=SHR,BLKSIZE=0\n//         DD DSN=ISP.SISPCLIB,DISP=SHR            /* ISPF CLISTS    */\n//*        DD DSN=SYS1.DGTCLIB,DISP=SHR            /* ISMF CLISTS    */\n//*------------------------------------------------------------------*/\n//ISPTABL  DD DSN=&TABL2,DISP=SHR,BLKSIZE=0\n//SYSPRINT DD SYSOUT=(,)\n//SYSUDUMP DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=(,),OUTLIM=20000\n//ISPLOG   DD SYSOUT=(,),DCB=(LRECL=125,BLKSIZE=129,RECFM=VA)\n//ISPPROF  DD DSN=&&PROF,DISP=(NEW,DELETE,DELETE),\n//         DCB=(ISP.SISPTENU),SPACE=(TRK,(1,1,1)),UNIT=SYSDA\n//         PEND\n//DCOLLECT EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//OUTFILE  DD   DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n DCOLLECT -\n          OUTFILE(OUTFILE) -\n          SMSDATA(ACTIVE) -\n          VOLUMES(*)\n//REPBC   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(BC),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=BC\n//REPAG   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(AG),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=AG\n//REPAI   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(AI),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=AI\n//REPCN   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(CN),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=CN\n//REPDC   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(DC),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=DC\n//REPDR   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(DR),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=DR\n//REPLB   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(LB),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=LB\n//REPMC   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(MC),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=MC\n//REPSC   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(SC),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=SC\n//REPSG   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(SG),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=SG\n//REPVL   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(VL),DISP=SHR\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR8 )  +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nRECORD=VL\n//GENREP   EXEC  ACBJBAOB,PLIB1=SYS1.DGTPLIB\n//DCOLIN  DD  DSN=SYSPLEX.DFSMS.DCOLLECT,DISP=SHR\n//ISPFILE DD  DSN=SYSPLEX.DFSMS.REPORTS(LISTA),DISP=OLD\n//SYSTSIN  DD *\nPROFILE PREFIX(IBMUSER)\nISPSTART CMD(ACBQBAR7) +\nBATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)\n/*\n//SYSIN DD  *\nDSN\nSTORCLAS\nDATACLAS\nSG\nMC\nVOLSER\nALLOCSP\nBLKUNUSED\nREBLOCK\nUSED%\nTOTALS\nEXTNUM\nPAGELENGTH=99999\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRINTDS": {"ttr": 35, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x13\\x02_\\x01\\x13\\x02_\\x10T\\x00\\x01\\x00\\x01\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-01-25T00:00:00", "modifydate": "2013-01-25T10:54:23", "lines": 1, "newlines": 1, "modlines": 0, "user": "ESA"}, "text": " PRINT INFILE(LIST) DUMP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACFCDT": {"ttr": 37, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x11\\x01\\x126\\x1f\\x01\\x13\\x00\\x8f\\x16F\\x00<\\x00\\x0e\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2012-12-26T00:00:00", "modifydate": "2013-01-08T16:46:11", "lines": 60, "newlines": 14, "modlines": 0, "user": "ESA"}, "text": "//RACFCDT  JOB ,&SYSUID,CLASS=A,\n//         MSGCLASS=X,NOTIFY=&SYSUID,REGION=0M\n//CLSTVL1 EXEC PGM=IKJEFT01,DYNAMNBR=55,REGION=512K\n//SYSEXEC DD  DISP=SHR,DSN=SYS1.SBPXEXEC\n//SYSHELP  DD  DISP=SHR,DSN=SYS1.HELP\n//SYSTSPRT DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DUMMY\n//SYSTSIN  DD  *\n  SETROPTS RACLIST(CDT) REFRESH\n  RDEFINE CDT MVSEXP UACC(NONE)          -\n  CDTINFO(                               -\n  CASE(ASIS)                             -\n  DEFAULTRC(004)                         -\n  DEFAULTUACC(NONE)                      -\n  FIRST(ALPHA)                           -\n  GENLIST(DISALLOWED)                    -\n  GENERIC(ALLOWED)                       -\n  KEYQUALIFIERS(0000000000)              -\n  MACPROCESSING (NORMAL)                 -\n  MAXLENGTH(128)                         -\n  OPERATIONS(NO)                         -\n  OTHER(ALPHA NATIONAL NUMERIC SPECIAL)  -\n  POSIT(0000000527)                      -\n  PROFILESALLOWED(YES)                   -\n  RACLIST(REQUIRED)                      -\n  SECLABELSREQUIRED(NO)                  -\n  SIGNAL(NO))\n  SETROPTS RACLIST(CDT) REFRESH\n  SETROPTS GENERIC(MVSEXP)  RACLIST(MVSEXP)\n  RDEFINE MVSEXP (foldersTree.conf.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.conf) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.diag.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.diag) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.perf.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.perf) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.srch.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.srch) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.jcl.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.jcl) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.jes.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.jes) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.unix.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.unix) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.mqs) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.mqs.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.books) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.books.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.mvsexp) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.mvsexp.*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.Look*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.Check*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.SQL*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree.Oper*) UACC(READ)\n  RDEFINE MVSEXP (foldersTree) UACC(READ)\n  RDEFINE MVSEXP (Customize) UACC(READ)\n  PERMIT Customize CLASS(MVSEXP) ID(ESA RACF) ACCESS(UPDATE)\n  SETROPTS RACLIST(MVSEXP) REFRESH\n  RLIST MVSEXP *    all\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RUNDA1": {"ttr": 39, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x13\\x01\\x7f\\x01\\x13\\x01\\x7f\\x14P\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-01-17T00:00:00", "modifydate": "2013-01-17T14:50:13", "lines": 11, "newlines": 11, "modlines": 0, "user": "ESA"}, "text": "/* REXX */\n/*\nchange here to the name of the libary for the \"IDIDA\" module\n*/\nparse upper arg id history listdsn\n\"alloc fi(IDIHIST) DA('\"history\"') SHR REUSE\"\n\"alloc fi(SYSPRINT) DA('\"listdsn\"') shr reuse\"\naddress TSO \"call 'idi.v710.sidilpa1(idida)' 'FAULTID(\"id\")'\"\n\"free  fi(IDIHIST)\"\n\"free  fi(SYSPRINT) \"\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAMPAFP": {"ttr": 59, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x13\\x03\\x1f\\x01\\x13\\x03\\x1f\\x113\\x00\\x08\\x00\\t\\x00\\x03\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2013-01-31T00:00:00", "modifydate": "2013-01-31T11:33:48", "lines": 8, "newlines": 9, "modlines": 3, "user": "ESA"}, "text": "//SAMPAFP JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//ICEGENER EXEC PGM=ICEGENER\n//SYSUT1   DD   DISP=SHR,DSN=ESA.PRJ.CBTEXP.OUT(SAMPAFP),DCB=RECFM=VBM\n//SYSUT2   DD   SYSOUT=*\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPPDF": {"ttr": 53, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x13\\x03\\x1f\\x01\\x13\\x03\\x1f\\x111\\x00\\t\\x00\\t\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-01-31T00:00:00", "modifydate": "2013-01-31T11:31:44", "lines": 9, "newlines": 9, "modlines": 0, "user": "ESA"}, "text": "//SAMPPDF JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//PDF      OUTPUT FORMS=PDF\n//ICEGENER EXEC PGM=ICEGENER\n//SYSUT1   DD   DISP=SHR,DSN=ESA.PRJ.CBTEXP.OUT(SAMPPDF)\n//SYSUT2   DD   SYSOUT=*,OUTPUT=*.PDF\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SHOWWLM": {"ttr": 41, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\"\\x00)\\x01\\x05#\\x7f\\x01\\x13\\x00\\x9f\\x08U\\x08\\xc8\\x06\\x94\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.34", "flags": 0, "createdate": "2005-08-25T00:00:00", "modifydate": "2013-01-09T08:55:29", "lines": 2248, "newlines": 1684, "modlines": 0, "user": "ESA"}, "text": "/* REXX */\n/*----------------------------------------------------*/\n/* SHOWWLM - Report WLM Infos from Policy             */\n/* V22  11/2009                                       */\n/*----------------------------------------------------*/\n/*                                                    */\n/*                                                    */\n/* Create a report of WLM Definitions from            */\n/* the saved PO data set                              */\n/*                                                    */\n/* Copyright YCOS Yves Colliard Software GmbH 2000-09 */\n/* eMail: ycos\u00a7ycos.de                                */\n/*                                                    */\n/* WSCON Installation and Usage                       */\n/* see www.ycos.de/ispfgui.htm                        */\n/*                                                    */\n/*                                                    */\n/*----------------------------------------------------*/\n/*                                                    */\n/* Freeware - use at your own risk                    */\n/*          - distribute but do not remove copyright  */\n/*                                                    */\n/*----------------------------------------------------*/\n/*                                                    */\n/* V22  11/2009                                       */\n/*      Check Input Data exist - PO - 80              */\n/*                                                    */\n/* V21  07/2009                                       */\n/*      New LRECL Size 32756 - not compatible|        */\n/*      Correct Sysother multiple policies            */\n/*      Show Sched Env. and Resources                 */\n/*      Enhanced Resource Group Display               */\n/*      Beispiel WLM Batch - siehe unten              */\n/*                                                    */\n/* V20  11/2008                                       */\n/*      Support 2 parameters input                    */\n/*         WLM Input and Output                       */\n/*      Create member statistics                      */\n/*      Put Information about Resource Group Type     */\n/*        S = Service Units                           */\n/*        C = number of CPUs                          */\n/*        % = percent of LPAR                         */\n/*                                                    */\n/* V19  05/2006                                       */\n/*      Create a new Member WLMCOMP for Compare       */\n/*         Policies                                   */\n/*      Display Changes of Policy                     */\n/*      Correct Hyperlink with no text                */\n/*                                                    */\n/* V18  08/2005                                       */\n/*      Accept one Parm - INPUT Dataset               */\n/*      Show Application Environment                  */\n/*      Check LRECL 4096 at least for Output          */\n/*      Change Seq of Data in HTML - Class Rules      */\n/*      Change showing HTML on PC                     */\n/*        new Parm show_pc - Default Yes|             */\n/*                                                    */\n/* V17  01/2005                                       */\n/*      Show Classification Group Description         */\n/*      Show Workloads                                */\n/*      Show Note Pad                                 */\n/*      Show Options                                  */\n/*      Show Release info                             */\n/*      Change title                                  */\n/*      Create an hyperlink to WLM Main               */\n/*      Permit Override for member                    */\n/*        Parm over_mem - Default YES|                */\n/*      Permit Split of member                        */\n/*        Parm splt_mem - Default YES|                */\n/*      Support of automatic download to PC           */\n/*        Attention: it uses WSCON|                   */\n/*           SEE COMMENT AT THE END FOR INSTALLATION| */\n/*        Attention: give directory name see OUTPC    */\n/*      Support of automatic show on PC               */\n/*        Attention: it uses WSCON|                   */\n/*        Attention: give directory where to find     */\n/*                   IEXPLORE see explore_pgm         */\n/*      Comments                                      */\n/* V16  01/2005                                       */\n/*      Show Resource Groups                          */\n/*      Split Policy Display if many in use (override)*/\n/*      Delete HTML files in USS before write         */\n/* V15  07/2004                                       */\n/*      Create HTML files in USS Path                 */\n/*                                                    */\n/*----------------------------------------------------*/\naddress ispexec\nADDRESS \"ISPEXEC\" \"CONTROL ERRORS RETURN\"\n/* V20 up to 2 parms */\ninwlm=\"\"\nouttyp=\"\"\nif ARG()>0 then do\n  parse upper arg inwlm outtyp .\nend\n/* */\n/*------------------------------------------*/\n/* V17 */\n/* WLM Output Data Set - Override condition */\n/* over_mem                                 */\nover_mem=\"N\"  /* if OUTTYP member exist, do not override - say policy */\nover_mem=\"Y\"  /* if OUTTYP member exist, override it                  */\n/* */\n/*------------------------------------------*/\n/* V17 */\n/* WLM Output Data Set - Split condition    */\n/* splt_mem                                 */\nsplt_mem=\"N\"  /* DO NOT split the member                              */\nsplt_mem=\"Y\"  /* Automatically split the member                       */\n              /* Also used for automatic download of the data         */\n              /*      see OUTPC|                                      */\n/* */\n/*------------------------------------------*/\n/* V18 */\n/* WLM Output Data Set - Show HTML on PC    */\n/* show_pc                                  */\nshow_pc =\"Y\"  /* Automatically Show HTML on PC                        */\n              /* Also need OUTPC|                                     */\nshow_pc =\"N\"  /* DO NOT Show HTML on PC                               */\n/* */\n/*------------------------------------------*/\n/* WLM Input Data Set                       */\n/*    WLM Saves As PDS                      */\n/* inwlm                                    */\n/* V18 - can be given as parm               */\nif inwlm=\"\" then do\n  INWLM=\"WLM.INPUT\"\nend\n/* */\n/*------------------------------------------*/\n/* WLM Output Data Set                      */\n/* outtyp                                   */\n/* define with at least lrecl 32756 / 32760 */\n/*                      recfm VB            */\n/*               PO for best usage          */\n/* outtyp=\"\"                 -> SAY                            */\n/* outtyp=\"aaaa.bbbb\"        -> Output in Data Set with prefix */\n/* outtyp=\"aaaa.bbbb(mmm)\"   -> Output in Member with prefix   */\n/* outtyp=\"'aaaa.bbbb(mmm)'\" -> Output in Member wo prefix     */\n/* outtyp                                   */\n/* V20 - can be given as parm               */\nif outtyp=\"\" then do\n  OUTTYP=\"A.B\"\n  OUTTYP=\"'USER.YCOS.DATA(WLMOUT)'\"\n  OUTTYP=\"YCOS.WLMOUT(BEISPIEL)\"\nend\n/* */\n/* */\n/*------------------------------------------*/\n/* WLM USS - OMVS - Output Directory        */\n/* outuss                                   */\n/* if blank no USS Data Set                 */\nOUTUSS=\"/u/mvsexp/server_root/pub/\"\n/* */\n/*---------------------------------------------*/\n/* WLM PC - Output Directory                   */\n/* outpc                                       */\n/* if blank no Output on PC                    */\n/* if given then WSCON MUST BE ACTIVE|         */\n/*    PLEASE CHECK IT|                         */\n/* if given then splt_mem MUST ALSO BE ACTIVE| */\n/*    PLEASE CHECK IT| splt=\"YES\"              */\nOUTPC=\"C:\u00d6WLM\u00d6\"\nOUTPC=\"\"\n/* */\n/* */\n/* V17 */\nparse source . . wlmycos .\n/* V18 */\nSL = 2\nvers=\"V??\"\nvdat=\"??/????\"\ndo forever\n   SL = SL + 1\n   if Left(SourceLine(SL),2) <> \"/*\" then leave\n   if Substr(SourceLine(SL),4,1)=\"V\" then do\n      parse value SourceLine(SL) with \"/*\" vers vdat \"*/\"\n      vers=strip(vers)\n      vdat=strip(vdat)\n      leave\n   end\nend\nwlmycos=wlmycos vers vdat\n/* */\n/* v22 */\ninwlm=strip(inwlm)\nif listdsi(inwlm) <> 0 then do\n   say \"Error with dataset:\" inwlm\n   say sysmsglvl1\n   say sysmsglvl2\n   exit\nend\n/* */\nif syslrecl<>80 then do\n  say \"Error dataset:\" inwlm \"LRECL not 80 :\"syslrecl\n  exit\nend\n/* */\nif sysdsorg<>\"PO\" then do\n   say \"Error dataset:\" inwlm \"not a PO| DSORG=\"sysdsorg\n  exit\nend\n/* */\ncall wlm_pol\n/* */\n/* Number of Sevice Class per Importance */\nanz_sc.0=2\nanz_sc.1=0\nanz_sc.2=0\nanz_sc.3=0\nanz_sc.4=0\nanz_sc.5=0\nanz_sc.6=0\nanz_sc.7=1\nnam_sc.0.1=left(\"SYSTEM\",8)\n/* v13 */\npol_sc.0.1=left(\" \",8)\ncpu_sc.0.1=\"   \"\nimp_sc.0.1=\"   \"\nper_sc.0.1=\"   \"\ngoa_sc.0.1=left(\" \",17)\ndur_sc.0.1=right(\" \",6)\ncls_sc.0.1=0\n/* v16 */\nrg_sc.0.1=right(\" \",8)\nrgmin_sc.0.1=right(\" \",7) /* V20 */\nrgmax_sc.0.1=right(\" \",7) /* V20 */\nnam_sc.0.2=left(\"SYSSTC\",8)\n/* v13 */\npol_sc.0.2=left(\" \",8)\ncpu_sc.0.2=\"   \"\nimp_sc.0.2=\"   \"\nper_sc.0.2=\"   \"\ngoa_sc.0.2=left(\" \",17)\ndur_sc.0.2=right(\" \",6)\ncls_sc.0.2=0\n/* v16 */\nrg_sc.0.2=right(\" \",8)\nrgmin_sc.0.2=right(\" \",7) /* V20 */\nrgmax_sc.0.2=right(\" \",7) /* V20 */\nnam_sc.7.1=left(\"SYSOTHER\",8)\n/* v13 */\npol_sc.7.1=left(\" \",8)\ncpu_sc.7.1=\"   \"\nimp_sc.7.1=\"   \"\nper_sc.7.1=\"   \"\ngoa_sc.7.1=left(\" \",17)\ndur_sc.7.1=right(\" \",6)\ncls_sc.7.1=0\n/* v16 */\nrg_sc.7.1=right(\" \",8)\nrgmin_sc.7.1=right(\" \",7) /* V20 */\nrgmax_sc.7.1=right(\" \",7) /* V20 */\n/* */\nanz_out=1\nanz_htm=0\ncls_ht.0.1=0\n/* v19 */\nanz_cmp=1\n/* */\n/* Saved WLM Data Set */\n  \"LIBDEF ISPTLIB DATASET ID(\"inwlm\")\"\n/* */\n/* */\n/* SDCTAB: Service Definition Table + coefficients */\n  \"TBOPEN SDCTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SDCTAB\" rc\n       say \"Please do not run WLM Application at the same\"\n       say \"       time as SHOWWLM|\"\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SDCTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SDCTAB\" rc\n       \"TBCLOSE SDCTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SDCTAB\"                 /* first & only entry              */\n\n  sd_desc=sddesc                  /* SD Description                  */\n  sd_cpu =sdccpu                  /* SD SU CPU                       */\n  sd_srb =sdcsrb                  /* SD SU SRB                       */\n  sd_ioc =sdcioc                  /* SD SU IOC                       */\n  sd_mso =sdcmso                  /* SD SU MSO                       */\n\n \"TBCLOSE SDCTAB\"\n\n/* */\n  out.anz_out=\"$$$$$$$$ WLMPOL.txt $$$$$$$$\"\n  anz_out=anz_out+1\n/* */\n  cmp.anz_cmp=\"$$$$$$$$ WLMCOMP.txt $$$$$$$$\"\n  anz_cmp=anz_cmp+1\n/* */\n/* SPTAB: Service Policy Table */\n  \"TBOPEN SPTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SPTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SPTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SPTAB\" rc\n       \"TBCLOSE SPTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SPTAB\"\n\n  anzpol=0\n  do while rc=0\n     /* search & find a Service Policy */\n     /* v13 */\n     anzpol=anzpol+1\n     /* v16 */\n     spn=strip(SPNAME)\n     policy.anzpol=spn     /* name of policy */\n     polnum.spn=anzpol     /* number of policy */\n     pol_sc.spn=0          /* number of service classes in policy */\n     wlmpol.anzpol=\"Service Policy=\"SPNAME,\n       \"Desc=\"SPDESC \"Updated by:\"SPWHOU \"at:\"SPDATU SPTIMU\n/*     \"SPSEL=\"SPSEL \"SPMISC=\"SPMISC */\n     \"TBSKIP SPTAB\"\n  end\n\n \"TBCLOSE SPTAB\"\n/* */\n/* */\n/* */\n/* v16 */\n/* ATTRTAB: Resource Group Attribute Table */\n  \"TBOPEN ATTRTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem ATTRTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP ATTRTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem ATTRTAB\" rc\n       \"TBCLOSE ATTRTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP ATTRTAB\"                /* first                           */\n\n  do while rc=0\n     if ATSPNAM=\"\" then do\n        ATSPNAM=\"YYVESDEFY\"       /* set an incredible default name  */\n     end\n     atspnam=strip(atspnam)\n     atrgnam=strip(atrgnam)\n     attype=strip(attype)    /* V20 */\n     select\n     when attype=\"SVC\" then attype=\"S\"\n     when attype=\"PSP\" then attype=\"C\"\n     when attype=\"PER\" then attype=\"%\"\n     otherwise              attype=\"?\"\n     end\n     if strip(atmin)=\"\" then do\n       rgmin.atrgnam.atspnam=right(strip(atmin),7)\n     end\n     else do\n       rgmin.atrgnam.atspnam=right(strip(atmin),6)\"\"attype\n     end\n     if strip(atmax)=\"\" then do\n       rgmax.atrgnam.atspnam=right(strip(atmax),7)\n     end\n     else do\n       rgmax.atrgnam.atspnam=right(strip(atmax),6)\"\"attype\n     end\n     \"TBSKIP ATTRTAB\"\n  end\n\n \"TBCLOSE ATTRTAB\"\n/* */\n/* */\n/* SGTAB: Service Class Goal Table */\n  \"TBOPEN SGTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SGTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SGTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SGTAB\" rc\n       \"TBCLOSE SGTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SGTAB\"\n\n  do while rc=0\n     per=0\n     do loop=1 to 8\n        if value(\"T\"loop)=\"\" then do   /* not disc */\n           if value(\"V\"loop)=\"\" then do   /* not velo */\n              if value(\"C\"loop)=\"\" then do   /* not res% */\n                 if value(\"S\"loop)=\"\" then do   /* not a period */\n                    leave\n                 end\n                 else do\n                    per=per+1\n                    goal.per=\"Avg\",\n                      value(\"H\"loop)\":\"value(\"M\"loop)\":\"value(\"S\"loop)\n                    imp.per=value(\"I\"loop)\n                    dur.per=value(\"L\"loop)\n                 end\n              end\n              else do\n                 per=per+1\n                 goal.per=value(\"C\"loop)\"%\",\n                      value(\"H\"loop)\":\"value(\"M\"loop)\":\"value(\"S\"loop)\n                 imp.per=value(\"I\"loop)\n                 dur.per=value(\"L\"loop)\n              end\n           end\n           else do\n              per=per+1\n              goal.per=\"Velocity \"value(\"V\"loop)\n              imp.per=value(\"I\"loop)\n              dur.per=value(\"L\"loop)\n           end\n        end\n        else do\n           per=per+1\n           goal.per=\"Discretionary\"\n           imp.per=\" \"\n           dur.per=\" \"\n        end\n     end\n     do loop=1 to per\n        if imp.loop=\" \" then\n           importance=6\n        else\n           importance=imp.loop\n        anz_sc.importance=anz_sc.importance+1 /* # of sc in Imp */\n        cnt=anz_sc.importance\n        nam_sc.importance.cnt=left(sgscnam,8)\n        imp_sc.importance.cnt=right(imp.loop,2)\" \"\n        if per>1 then\n           per_sc.importance.cnt=format(loop,2,0)\" \"\n        else\n           per_sc.importance.cnt=\"   \"\n        goa_sc.importance.cnt=left(goal.loop,16)\n        dur_sc.importance.cnt=right(dur.loop,7)\n        /* v13 */\n        if sgcpucrt = \"YES\" then do\n          cpu_sc.importance.cnt=left(sgcpucrt,3)\n        end\n        else do\n          cpu_sc.importance.cnt=\"   \"\n        end\n        pol_sc.importance.cnt=left(sgspnam,8)\n        /* v16 */\n        sgsp=strip(sgspnam)\n        if sgsp<>\"\" then do\n           pol_num=polnum.sgsp\n           pol_nam=policy.pol_num\n           pol_sc.pol_nam=pol_sc.pol_nam+1\n           polx=pol_sc.pol_nam\n           pol_over_sc.pol_nam.polx=strip(sgscnam)\n           /* Comment Start\n           say \"Pol\" sgsp pol_num pol_nam sgscnam pol_sc.pol_nam\n              Comment End */\n        end\n        cls_sc.importance.cnt=0  /* # of class Rules for this SC */\n        /* v16 */\n        if sgrgnam = \"\" then do\n          rg_sc.importance.cnt=\"        \"\n          rgmin_sc.importance.cnt=\"       \" /* V20 */\n          rgmax_sc.importance.cnt=\"       \" /* V20 */\n        end\n        else do\n          rg_sc.importance.cnt=left(sgrgnam,8)\n          pol=strip(sgspnam)\n          if pol=\"\" then do\n             pol=\"YYVESDEFY\"       /* set an incredible default name */\n          end\n          rg=strip(sgrgnam)\n          if rgmin.rg.pol=rgmin.rg\".\"pol then do\n             pol=\"YYVESDEFY\"       /* set an incredible default name */\n          end\n          rgmin_sc.importance.cnt=rgmin.rg.pol\n          rgmax_sc.importance.cnt=rgmax.rg.pol\n        end\n     end\n     \"TBSKIP SGTAB\"\n  end\n\n \"TBCLOSE SGTAB\"\n/* */\n/* SSTAB: Subsystem, Default Service Class Table */\n  \"TBOPEN SSTTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SSTTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SSTTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SSTTAB\" rc\n       \"TBCLOSE SSTTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SSTTAB\"\n\n  do while rc=0\n     fnd=\"N\"\n     /* search & find a Default Service Class */\n     do importance=1 to 6\n        do cnt=1 to anz_sc.importance\n          if nam_sc.importance.cnt=SSTSC then do\n             cls_sc.importance.cnt=cls_sc.importance.cnt+1\n             num=cls_sc.importance.cnt  /* # class rules / SC */\n             cls_sc.importance.cnt.num=\"Def \"SSTNAME\n             cls_ht.importance.cnt.num=\"Def \"SSTNAME\n             /* V14 Default Report Class */\n             cls_rc.importance.cnt.num=SSTRC\n             cls_rc.SSTNAME=SSTRC /* default RC for this Subsys */\n             /* V13 stor crit and trans/reg */\n             cls_cr.importance.cnt.num=\"   \"\n             cls_tr.importance.cnt.num=\"   \"\n             fnd=\"Y\"\n          end\n        end\n     end\n     /* Default for STC->SYSSTC, all others->SYSOTHER */\n     if fnd=\"N\" then do\n        if SSTNAME=\"STC\" then do\n           importance=0\n           cnt=2\n        end\n        else do\n           importance=7\n           cnt=1\n        end\n        cls_sc.importance.cnt=cls_sc.importance.cnt+1\n        num=cls_sc.importance.cnt\n        cls_sc.importance.cnt.num=\"Def \"SSTNAME\n        cls_ht.importance.cnt.num=\"Def \"SSTNAME\n        /* V14 Default Report Class */\n        cls_rc.SSTNAME=SSTRC /* default RC for this Subsys */\n        /* V13 stor crit and trans/reg */\n        cls_cr.importance.cnt.num=\"   \"\n        cls_tr.importance.cnt.num=\"   \"\n     end\n     \"TBSKIP SSTTAB\"\n  end\n\n \"TBCLOSE SSTTAB\"\n/* */\n/* */\n/* V17 */\n/* GRTAB: Classification Groups Description Table */\n  \"TBOPEN GRTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem GRTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP GRTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem GRTAB\" rc\n       \"TBCLOSE GRTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP GRTAB\"\n\n\n  do while rc=0\n     grn=strip(grname)\n     grt=strip(grtype)\n     gr.grn.grt=\"<BR>\"strip(grdesc)\"<BR>\"\n     gr.grn.grt=gr.grn.grt'<FONT FACE=\"Courier\" SIZE=3 COLOR=\"#000000\">'\n     gr.grn.grt=gr.grn.grt\"\"strip(grwhou)\" - \"strip(grdatu)'</FONT>'\n     \"TBSKIP GRTAB\"\n  end\n\n \"TBCLOSE GRTAB\"\n/* */\n/* */\n/* GMTAB: Class Groups Table */\n  \"TBOPEN GMTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem GMTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP GMTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem GMTAB\" rc\n       \"TBCLOSE GMTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP GMTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Classification Groups\",\"WLMGROUP\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=htab(500)\n\n  do while rc=0\n     /* search & find a Service Class */\n     if symbol(\"gm.\"gmgroup)=\"VAR\" then do\n        gm.gmgroup=gm.gmgroup\";\"strip(gmname)\n        gmdesc.gmgroup=gmdesc.gmgroup\";\"strip(gmdesc)\n     end\n     else do\n        gm.gmgroup=strip(gmname)\n        gmdesc.gmgroup=strip(gmdesc)\n        anz_htm=anz_htm+1\n        htm.anz_htm=hsp1(gmgroup \"-\" gmg.gmgroup,\"N\")\n     end\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(20,strip(gmname),\"A\"),\n                 hsp(80,strip(gmdesc),\"E\")\n     \"TBSKIP GMTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE GMTAB\"\n/* */\n\n/* */\n/* */\n/* CRTAB: Class Rules Table */\n  \"TBOPEN CRTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem CRTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP CRTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem CRTAB\" rc\n       \"TBCLOSE CRTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP CRTAB\"\n\n  do while rc=0\n     /* search & find a Service Class */\n     do importance=0 to 6\n        do cnt=1 to anz_sc.importance\n          if CRSC=\"\" then do\n             if cls_sc.importance.cnt.1=\"Def \"CRSST then do\n                call work_sc\n             end\n          end\n          else do\n             if nam_sc.importance.cnt=CRSC then do\n                call work_sc\n             end\n          end\n        end\n     end\n     \"TBSKIP CRTAB\"\n  end\n\n \"TBCLOSE CRTAB\"\n/* */\n/* V17 */\n/* Correct the Classification Groups */\n do j=1 to anz_htm\n    if pos(\" - GMG.\",htm.j)>0 then do\n       parse var htm.j left_part \" - GMG.\" gr_name \"<\" right_part\n       grt=GMG.gr_name\n       htm.j = left_part \"-\" GMG.gr_name\"\"gr.gr_name.grt\"<\"right_part\n    end\n end\n\n/* */\n/* */\n/* SCTAB: Service Class Table */\n  \"TBOPEN SCTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SCTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SCTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SCTAB\" rc\n       \"TBCLOSE SCTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SCTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Service Classes\",\"WLMCLASS\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=htab(750)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp4(\"Service Classes\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=hsp(10,\"SYSTEM\",\"A\",\"N\"),\n              hsp(65,\"WLM intern Service Class\"),\n              hsp(10,\"none\"),\n              hsp(15,\"none\",\"E\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=hsp(10,\"SYSSTC\",\"A\",\"N\"),\n              hsp(65,\"WLM intern Service Class\"),\n              hsp(10,\"none\"),\n              hsp(15,\"none\",\"E\")\n  do while rc=0\n     /* save Service Class Workload Infos */\n     scwkl.SCNAME=SCWL\n     scdes.SCNAME=SCDESC\n     anz_htm=anz_htm+1\n     /* v13 */\n     htm.anz_htm=hsp(10,strip(SCNAME),\"A\",\"N\"),\n                 hsp(65,strip(SCDESC)),\n                 hsp(10,strip(SCWHOU)),\n                 hsp(15,strip(SCDATU),\"E\")\n     \"TBSKIP SCTAB\"\n  end\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=hsp(10,\"SYSOTHER\",\"A\",\"N\"),\n              hsp(65,\"WLM intern Service Class\"),\n              hsp(10,\"none\"),\n              hsp(15,\"none\",\"E\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE SCTAB\"\n/* */\n\n/* */\n/* */\n/* RCTAB: Report Class Table */\n  \"TBOPEN RCTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem RCTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP RCTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem RCTAB\" rc\n       \"TBCLOSE RCTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP RCTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Report Classes\",\"WLMREPCL\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=htab(750)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp4(\"Report Classes\")\n  do while rc=0\n     /* save Report Class Workload Infos */\n     anz_htm=anz_htm+1\n     /* v13 */\n     htm.anz_htm=hsp(10,strip(RCNAME),\"A\",\"N\"),\n                 hsp(65,strip(RCDESC)),\n                 hsp(10,strip(SCWHOU)),\n                 hsp(15,strip(SCDATU),\"E\")\n     \"TBSKIP RCTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE RCTAB\"\n/* */\n\n/* */\n/* */\n/* v16 */\n/* RGTAB: Resource Group Table */\n  \"TBOPEN RGTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem RGTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP RGTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem RGTAB\" rc\n       \"TBCLOSE RGTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP RGTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Resource Groups\",\"WLMRESGR\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=htab(750)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp6(\"Resource Groups - with Min/Max\")\n  do while rc=0\n     /* save Resource Group Infos */\n     pol=\"YYVESDEFY\"       /* set an incredible default name */\n     rgn=strip(RGNAME)\n     min=rgmin.rgn.pol\n     if rgmin.rgn.pol=\"RGMIN.\"rng\".\"pol then do\n       min=\"?\"\n     end\n     max=rgmax.rgn.pol\n     if rgmax.rgn.pol=\"RGMAX.\"rng\".\"pol then do\n       max=\"?\"\n     end\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(10,strip(RGNAME),\"A\",\"N\"),\n                 hsp(45,strip(RGDESC)),\n                 hsp(10,min),\n                 hsp(10,max),\n                 hsp(10,strip(RGWHOU)),\n                 hsp(15,strip(RGDATU),\"E\")\n     \"TBSKIP RGTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE RGTAB\"\n/* */\n/* */\n/* */\n/* v17 */\n/* WLTAB: Workload Table */\n  \"TBOPEN WLTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem WLTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP WLTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem WLTAB\" rc\n       \"TBCLOSE WLTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP WLTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Workloads\",\"WLMWORKL\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=htab(750)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp4(\"Workloads\")\n  do while rc=0\n     /* save Workloads Infos */\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(10,strip(WLNAME),\"A\",\"N\"),\n                 hsp(65,strip(WLDESC)),\n                 hsp(10,strip(WLWHOU)),\n                 hsp(15,strip(WLDATU),\"E\")\n     \"TBSKIP WLTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp(10,\"SYSTEM\",\"A\",\"N\"),\n              hsp(65,\"WLM intern Workload\"),\n              hsp(10,\"\"),\n              hsp(15,\"\",\"E\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE WLTAB\"\n/* */\n/* */\n/* v17 */\n/* PADTAB: Notepad Table */\n  \"TBOPEN PADTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem PADTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP PADTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem PADTAB\" rc\n       \"TBCLOSE PADTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP PADTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Note Pad\",\"WLMNOTEP\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=htab(800)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp2(\"Note Pad\")\n  do while rc=0\n     /* save Note Pad Infos */\n     anz_htm=anz_htm+1\n     PADTXT=saveblank(PADTXT)\n     htm.anz_htm=hsp(5,right(\"000\"strip(PADNUM),3),\"A\",\"N\"),\n                 hsp(95,PADTXT,\"E\")\n     \"TBSKIP PADTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE PADTAB\"\n/* */\n/* v18 */\n/* AETAB: Application Environmen Table */\n  \"TBOPEN AETAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem AETAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP AETAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem AETAB\" rc\n       \"TBCLOSE AETAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP AETAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Application Environment\",\"WLMAE\")\n  anz_htm=anz_htm+1\n  /* v13 */\n  htm.anz_htm=htab(800)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp6(\"Application Environment\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp(25,\"Name\",\"A\",\"N\"),\n              hsp(25,\"Description\"),\n              hsp(5,\"Subs\"),\n              hsp(10,\"Procedure\"),\n              hsp(25,\"Start Parameter\"),\n              hsp(10,\"Limit\",\"E\")\n  do while rc=0\n     /* save AE Infos */\n     anz_htm=anz_htm+1\n     aeso=left(c2x(aeso),1)\n     select\n     when aeso=0 then do\n       aeso=\"No\"\n     end\n     when aeso=4 then do\n       aeso=\"1/Plex\"\n     end\n     when aeso=8 then do\n       aeso=\"1/Syst\"\n     end\n     otherwise\n       aeso=\"Unkn\"\n     end\n     htm.anz_htm=hsp(25,strip(AEENV),\"A\",\"N\"),\n                 hsp(25,strip(AEDES)),\n                 hsp(5,strip(AESBT)),\n                 hsp(10,strip(AEPROC)),\n                 hsp(25,strip(AESP)),\n                 hsp(10,AESO,\"E\")\n     \"TBSKIP AETAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE AETAB\"\n/* */\n\n/* */\n/* v21 */\n/* RTAB: Resource Table */\n  \"TBOPEN RTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem RTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP RTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem RTAB\" rc\n       \"TBCLOSE RTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP RTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Resource\",\"WLMRES\")\n  anz_htm=anz_htm+1\n  /* */\n  htm.anz_htm=htab(800)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp2(\"Resource\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp(25,\"Name\",\"A\",\"N\"),\n              hsp(75,\"Description\",\"E\")\n  anz_res=0\n  do while rc=0\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(25,strip(RNAME),\"A\",\"N\"),\n                 hsp(75,strip(RDES),\"E\")\n     anz_res=anz_res+1\n     rname.anz_res=rdes\n     rname.rname=anz_res\n     \"TBSKIP RTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE RTAB\"\n/* */\n/* v21 */\n/* SETAB: Scheduling Environment Table */\n  \"TBOPEN SETAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SETAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SETAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SETAB\" rc\n       \"TBCLOSE SETAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SETAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Scheduling Environment\",\"WLMSE\")\n  anz_htm=anz_htm+1\n  /* */\n  htm.anz_htm=htab(800)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp2(\"Scheduling Environment\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp(25,\"Name\",\"A\",\"N\"),\n              hsp(75,\"Description\",\"E\")\n  anz_se=0\n  do while rc=0\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(25,strip(SENAME),\"A\",\"N\"),\n                 hsp(75,strip(SEDES),\"E\")\n     anz_se=anz_se+1\n     sename.anz_se=sedes\n     sename.sename=anz_se\n     \"TBSKIP SETAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE SETAB\"\n/* */\n/* */\n/* v21 */\n/* SRTAB: Scheduling Environment - Resource Table */\n  \"TBOPEN SRTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem SRTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP SRTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem SRTAB\" rc\n       \"TBCLOSE SRTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP SRTAB\"\n\n  anz_htm=anz_htm+1\n  htm.anz_htm=htit(\"Resource - Sched. Env.\",\"WLMRSE\")\n  anz_htm=anz_htm+1\n  /* */\n  htm.anz_htm=htab(800)\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp4(\"Resource - Sched. Env.\")\n  anz_htm=anz_htm+1\n  htm.anz_htm=hsp(25,\"Name\",\"A\",\"N\"),\n              hsp(10,\"State\"),\n              hsp(25,\"Sched Env.\"),\n              hsp(40,\"Description\",\"E\")\n  do while rc=0\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(25,href(strip(SRNAME),\"WLMRES\"),\"A\"),\n                 hsp(10,strip(SRSTATE)),\n                 hsp(25,href(strip(SRSENAM),\"WLMSE\")),\n                 hsp(40,strip(SRDES),\"E\")\n     \"TBSKIP SRTAB\"\n  end\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"</TABLE>\"\n\n \"TBCLOSE SRTAB\"\n/* */\n/* ------------------------------------------------- */\n/* */\n/* Output the data */\n/* */\nanz_htm=anz_htm+1\nhtm.anz_htm=htit(\"WLM Policy\",\"WLMMAIN\")\n/* v13 */\nanz_htm=anz_htm+1\nhtm.anz_htm='<FONT FACE=\"Courier\" SIZE=3 COLOR=\"#000000\"><P>'\n/* v19 */\nif userid()<>\"YVES\" then do\n  poln=fillhtm(poln,8)\n  sdfn=fillhtm(sdfn,8)\n  polu=fillhtm(polu,7)\n  sdfu=fillhtm(sdfu,7)\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"<BR>\"fillhtm(\"Service Policy\",18)\"=\"poln,\n         \"activated:\"polt \"By:\"polu\" From:\"pols,\n              \"<BR>Service Definition=\"sdfn\" installed:\"sdft,\n         \"By:\"sdfu\" From:\"sdfs\"<BR>\"\nend\n/* v13 */\n/* v16 */\n/* Loop over all Policies */\ndo l1=1 to anzpol\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"<P>\"wlmpol.l1\"</P>\"\n  if out.anz_out<>\"OUT.\"anz_out then do /* v21 */\n    anz_out=anz_out+1  /* v21 */\n  end\n  out.anz_out=wlmpol.l1\n  anz_out=anz_out+1\n/* */\nanz_htm=anz_htm+1\n/* v16 */\nhtm.anz_htm=htab(1250)\n/* */\n/* */\nanz_htm=anz_htm+1\n/* v16 */\n/* v18 */\nhtm.anz_htm=hspb(4,\"Workload\",\"A\"),\n      hspb(4,\"Policy\"),\n      hspb(4,\"SerClass\"),\n      hspb(2,\"CPU\"),\n      hspb(4,\"RepClass\"),\n      hspb(2,\"Imp\"),\n      hspb(2,\"Per\"),\n      hspb(16,\"Goal\"),\n      hspb(6,\"Durat.\"),\n      hspb(42,\"Classification Rules/Groups\"),\n      hspb(2,\"STO\"),\n      hspb(2,\"Reg\"),\n      hspb(4,\"ResGroup\"),\n      hspb(3,\"Min\"),\n      hspb(3,\"Max\",\"E\")\n/* */\nout.anz_out=\"Workload\",\n      \"Policy  \",\n      \"SerClass\",\n      \"CPU\",\n      \"RepClass\",\n      \"Imp\",\n      \"Per\",\n      left(\"Goal\",16),\n  \" Durat. STO Reg ResGroup     Min     Max Classification Rules/Groups\"\n    /* v16 */\n/* v21 */\nif cmp.anz_cmp<>\"CMP.\"anz_cmp then do\n  anz_cmp=anz_cmp+1\nend\n/* v21 */\ncmp.anz_cmp=\":: Policy  \"wlmpol.l1\nanz_cmp=anz_cmp+1\n/* v19 */\ncmp.anz_cmp=\"## Workload\",\n      \"Policy  \",\n      \"SerClass\",\n      \"CPU\",\n      \"RepClass\",\n      \"Imp\",\n      \"Per\",\n      left(\"Goal\",16),\n  \" Durat. STO Reg ResGroup     Min     Max Classification Rules/Groups\"\n    /* v19 */\n\nscwkl.system=\"SYSTEM\"\ndo importance=0 to 7\n   do cnt=1 to anz_sc.importance\n     sc=strip(nam_sc.importance.cnt)\n     if sc=\"SYSTEM\" then\n        sc=\"SYSTEM\"\n     if sc=\"SYSSTC\" then\n        sc=\"SYSTEM\"\n     if sc=\"SYSOTHER\" then\n        sc=\"SYSTEM\"\n     /* v16 */\n     pol_rpt=strip(pol_sc.importance.cnt)\n     keep_sc=\"Y\"\n     if pol_rpt=policy.l1 then do  /* same policy */\n        nop\n     end\n     else do\n        if pol_rpt=\"\" then do /* no policy - no override */\n           pol_cu=policy.l1\n           do l2=1 to pol_sc.pol_cu\n              if pol_over_sc.pol_cu.l2=nam_sc.importance.cnt then do\n                 keep_sc=\"N\"\n                 leave l2\n              end\n           end\n        end\n        else do\n           keep_sc=\"N\"\n        end\n     end\n     if keep_sc=\"Y\" then do  /* only if info has to be kept */\n     /* V13 */\n     out1=left(scwkl.sc,8),\n         pol_sc.importance.cnt,\n         nam_sc.importance.cnt,\n         cpu_sc.importance.cnt\n     /* v19 */\n     kout1 = out1\n     out2=imp_sc.importance.cnt,\n         per_sc.importance.cnt,\n         goa_sc.importance.cnt,\n         dur_sc.importance.cnt\n     /* v19 */\n     kout2 = out2\n     /* v16 */\n     out3=rg_sc.importance.cnt,\n         rgmin_sc.importance.cnt,\n         rgmax_sc.importance.cnt\n     /* v19 */\n     kout3 = out3\n     /* v16 */\n     if rg_sc.importance.cnt=\"\" then do\n        rgh=\"\"\n        rgmin=\"\"\n        rgmax=\"\"\n     end\n     else do\n        rgh=href(rg_sc.importance.cnt,\"WLMRESGR\")\n        rgmin=rgmin_sc.importance.cnt\n        rgmax=rgmax_sc.importance.cnt\n     end\n     hcl_sc=\"\"\n     hcl_rc=\"\"\n     hcl_cr=\"\"\n     hcl_tr=\"\"\n     if cls_sc.importance.cnt=0 then do\n        anz_out=anz_out+1\n        /* v16 */\n        out.anz_out=out1 left(\"\",8) out2 left(\"\",7),\n              out3 \"No Class Rules\"\n        /* v19 */\n        anz_cmp=anz_cmp+1\n        cmp.anz_cmp=\"01\" out.anz_out\n        hcl_sc=\"No Class Rules\"\n     end\n     else do num=1 to cls_sc.importance.cnt\n        anz_out=anz_out+1\n        if cls_rc.importance.cnt.num=\"CLS_RC.\"importance\".\"cnt\".\"num,\n          then do\n           cls_rc.importance.cnt.num=\"\"\n           cls_rht=\"\"\n        end\n        else do\n           cls_rht=href(cls_rc.importance.cnt.num,\"WLMREPCL\")\n        end\n        out.anz_out=out1 left(cls_rc.importance.cnt.num,8) out2,\n                    cls_cr.importance.cnt.num,\n                    cls_tr.importance.cnt.num,\n                    out3,\n                    cls_sc.importance.cnt.num\n        /* v19 */\n        anz_cmp=anz_cmp+1\n        cmp.anz_cmp=right(\"0\"strip(num),2),\n                   kout1 left(cls_rc.importance.cnt.num,8) kout2,\n                    cls_cr.importance.cnt.num,\n                    cls_tr.importance.cnt.num,\n                   kout3,\n                    cls_sc.importance.cnt.num\n        /* last entry */\n        if num=cls_sc.importance.cnt then do\n           hcl_sc=hcl_sc\"\"cls_ht.importance.cnt.num\n           hcl_rc=hcl_rc\"\"cls_rht\n           hcl_cr=hcl_cr\"\"cls_cr.importance.cnt.num\n           hcl_tr=hcl_tr\"\"cls_tr.importance.cnt.num\n        end\n        else do\n           hcl_sc=hcl_sc\"\"cls_ht.importance.cnt.num\"<BR>\"\n           hcl_rc=hcl_rc\"\"cls_rht\"<BR>\"\n           hcl_cr=hcl_cr\"\"cls_cr.importance.cnt.num\"<BR>\"\n           hcl_tr=hcl_tr\"\"cls_tr.importance.cnt.num\"<BR>\"\n        end\n        out1=left(\" \",30)\n        out2=left(\" \",32)\n        /* v16 */\n        out3=left(\" \",24)\n     end\n     /* v16 */\n     anz_htm=anz_htm+1\n     /* V17 */\n     htm.anz_htm=hsp(4,href(scwkl.sc,\"WLMWORKL\"),\"A\")\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(4,pol_sc.importance.cnt)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(4,href(nam_sc.importance.cnt,\"WLMCLASS\"))\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(2,cpu_sc.importance.cnt)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(4,hcl_rc)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(2,imp_sc.importance.cnt)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(2,per_sc.importance.cnt)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(16,goa_sc.importance.cnt)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(6,dur_sc.importance.cnt)\n/* V18 */\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(42,hcl_sc)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(2,hcl_cr)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(2,hcl_tr)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(4,rgh)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(3,rgmin)\n     anz_htm=anz_htm+1\n     htm.anz_htm=hsp(3,rgmax,\"E\")\n   end /* only if info has to be kept - if keep_sc=\"Y\" */\n   end /* do cnt=1 to anz_sc.importance */\nend\nanz_htm=anz_htm+1\nhtm.anz_htm=\"</TABLE>\"\n/* */\nend  /* end of DO L1 Policy */\n/* END of Loop over all Policies */\n/* */\nanz_htm=anz_htm+1\nhtm.anz_htm='<BR><FONT FACE=\"Courier\" SIZE=3 COLOR=\"#000000\">'\nanz_htm=anz_htm+1\nhtm.anz_htm=\"<P>Service Coefficients - CPU=\"strip(sd_cpu),\n\"SRB=\"strip(sd_srb) \"IOC=\"strip(sd_ioc),\n\"MSO=\"strip(sd_mso)\"</P><BR>\"\n/* */\n/* */\n/* v17 */\n/* OPTTAB: Option Table */\n  /* */\n  opt1=\"I/O priority management\"\n  opt2=\"Dynamic alias management\"\n  opt3=\"Unknown\"\n  opt4=\"Unknown\"\n  opt5=\"Unknown\"\n  /* */\n  \"TBOPEN OPTTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem OPTTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBTOP OPTTAB\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBTOP Problem OPTTAB\" rc\n       \"TBCLOSE OPTTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  \"TBSKIP OPTTAB\"\n\n  if rc=0 then do\n     /* save Option Infos */\n     if left(option1,1)=\"Y\" then do\n        anz_htm=anz_htm+1\n        htm.anz_htm=\"<P>\"opt1\" = YES</P>\"\n     end\n     else do\n        if left(option1,1)=\"N\" then do\n           anz_htm=anz_htm+1\n           htm.anz_htm=\"<P>\"opt1\" = NO</P>\"\n        end\n     end\n     if left(option2,1)=\"Y\" then do\n        anz_htm=anz_htm+1\n        htm.anz_htm=\"<P>\"opt2\" = YES</P>\"\n     end\n     else do\n        if left(option2,1)=\"N\" then do\n           anz_htm=anz_htm+1\n           htm.anz_htm=\"<P>\"opt2\" = NO</P>\"\n        end\n     end\n     if left(option3,1)=\"Y\" then do\n        anz_htm=anz_htm+1\n        htm.anz_htm=\"<P>\"opt3\" = YES</P>\"\n     end\n     else do\n        if left(option3,1)=\"N\" then do\n           anz_htm=anz_htm+1\n           htm.anz_htm=\"<P>\"opt3\" = NO</P>\"\n        end\n     end\n     if left(option4,1)=\"Y\" then do\n        anz_htm=anz_htm+1\n        htm.anz_htm=\"<P>\"opt4\" = YES</P>\"\n     end\n     else do\n        if left(option4,1)=\"N\" then do\n           anz_htm=anz_htm+1\n           htm.anz_htm=\"<P>\"opt4\" = NO</P>\"\n        end\n     end\n     if left(option5,1)=\"Y\" then do\n        anz_htm=anz_htm+1\n        htm.anz_htm=\"<P>\"opt5\" = YES</P>\"\n     end\n     else do\n        if left(option5,1)=\"N\" then do\n           anz_htm=anz_htm+1\n           htm.anz_htm=\"<P>\"opt5\" = NO</P>\"\n        end\n     end\n  end\n\n \"TBCLOSE OPTTAB\"\n/* */\n/* */\n/* v17 */\n/* RELTAB: Release Table */\n  /* */\n  \"TBOPEN RELTAB NOWRITE SHARE\"\n  If rc <> 0 Then               /* Return codes                     */\n    Do                          /*  8 - Table does not exist        */\n       say \"TBOPEN Problem RELTAB\" rc\n       exit\n    End                         /* 12 - Table in use; enq failed    */\n                                /* 16 - Input library not allocated */\n                                /* 20 - Severe error                */\n\n\n  \"TBQUERY RELTAB NAMES(nnam)\"\n  If rc <> 0 Then                 /* Return codes                    */\n    Do                            /* 12 - Table is not open          */\n       say \"TBQUERY Problem RELTAB\" rc\n       \"TBCLOSE RELTAB\"\n       exit\n    End                           /* 20 - Severe error               */\n\n  parse var nnam \"(\" nnam \")\"\n  anz_htm=anz_htm+1\n  htm.anz_htm=\"<P>\"\n  sep=\"\"\n  do until nnam=\"\"\n    parse var nnam n1 nnam\n    htm.anz_htm=htm.anz_htm\"\"sep\"\"strip(n1)\n    sep=\" -&nbsp;\"\n  end\n  htm.anz_htm=htm.anz_htm\"</P></FONT>\"\n\n \"TBCLOSE RELTAB\"\n/* */\n\nif outtyp<>\"\" then\n   call check_ds\nif outtyp=\"\" then do i=1 to anz_out\n   say out.i\nend\n\n  say \"End of YCOS Procedure -\" wlmycos\n\n  \"LIBDEF ISPTLIB\"\n\nexit\n\n/* */\n/* */\n/* */\n/* */\nwork_sc:\n cls_sc.importance.cnt=cls_sc.importance.cnt+1\n num=cls_sc.importance.cnt\n addit=\"\"\n if CRQTPOS<>\"\" then do\n    addit=\"(\"strip(CRQTPOS)\")\"\n end\n if CRGEN=1 then do\n    cls_sc.importance.cnt.num=CRSST CRQT\"=\"CRQTNAM\"\"addit\n    if right(strip(CRQT),1)=\"G\" then do\n       cls_ht.importance.cnt.num=CRSST,\n          CRQT\"=\"href(CRQTNAM\"\"addit,\"WLMGROUP\")\n    end\n    else do\n       cls_ht.importance.cnt.num=CRSST CRQT\"=\"CRQTNAM\"\"addit\n    end\n    levi1=importance\n    levc1=cnt\n    levn1=num\n end\n else do\n    cls_sc.importance.cnt.num= ,\n    cls_sc.levi1.levc1.levn1 \"and\" ,\n    CRQT\"=\"CRQTNAM\"\"addit\n    if right(strip(CRQT),1)=\"G\" then do\n       cls_ht.importance.cnt.num= ,\n       cls_ht.levi1.levc1.levn1 \"and\" ,\n       CRQT\"=\"href(CRQTNAM\"\"addit,\"WLMGROUP\")\n    end\n    else do\n       cls_ht.importance.cnt.num= ,\n       cls_ht.levi1.levc1.levn1 \"and\" ,\n       CRSST CRQT\"=\"CRQTNAM\"\"addit\n    end\n end\n if right(strip(CRQT),1)=\"G\" then do\n    gmg.CRQTNAM=CRQT\n    cls_sc.importance.cnt.num= ,\n    cls_sc.importance.cnt.num \"G=(\"gm.CRQTNAM\")\"\n/*   for future use: desc \"GD=(\"gmdesc.CRQTNAM\")\" */\n end\n /* V12 report Class */\n /* V14 Default Report Class */\n if crrc=\"\" then do\n    thesc=nam_sc.importance.cnt\n    thesc=crsst\n    cls_rc.importance.cnt.num=cls_rc.thesc\n end\n else do\n    cls_rc.importance.cnt.num=crrc\n end\n /* V13 stor crit and trans/reg */\n if crstcrt = \"YES\" then do\n   cls_cr.importance.cnt.num=left(crstcrt,3)\n end\n else do\n   cls_cr.importance.cnt.num=\"   \"\n end\n if crmrttg = \"REGION\" then do\n   cls_tr.importance.cnt.num=left(crmrttg,3)\n end\n else do\n   cls_tr.importance.cnt.num=\"   \"\n end\n return\n/* */\n/* */\n/* */\n/* */\ncheck_ds:\n outtyp=strip(outtyp)\n if listdsi(outtyp) <> 0 then do\n    say \"Error with dataset:\" outtyp\n    say sysmsglvl1\n    say sysmsglvl2\n    outtyp=\"\"\n    return\n end\n /* V18 */ /* v21 */\n if syslrecl<32756 then do\n   say \"Error dataset:\" outtyp \"LRECL too small=\"syslrecl,\n     \"- 32756 needed\"\n   outtyp=\"\"\n   return\n end\n  /* */\n if pos(\"(\",outtyp)>0 then do\n    if sysdsorg<>\"PO\" then do\n       say \"Error dataset:\" outtyp \"not a PO| DSORG=\"sysdsorg\n       outtyp=\"\"\n       return\n    end\n    /* V17 */\n    if over_mem=\"N\" then do\n      err1 = SYSDSN(outtyp)\n      if err1 <> \"MEMBER NOT FOUND\" then do\n         if err1=\"OK\" then\n            say \"Member already exists|\"\n         else\n            say \"Error:\" err1\n         outtyp=\"\"\n         return\n      end\n    end\n end\n else\n    if sysdsorg<>\"PS\" then do\n       say \"Error dataset:\" outtyp \"not a PS| DSORG=\"sysdsorg\n       outtyp=\"\"\n       return\n    end\n xx=MSG(\"OFF\")\n address tso \"free fi(YWLM)\"\n xx=MSG(xx)\n address tso \"alloc fi(YWLM) da(\"outtyp\") SHR\"\n if rc>0 then do\n    say \"Error Alloc FI(YWLM) DA(\"outtyp\") SHR\"\n    outtyp=\"\"\n    return\n end\n address mvs \"execio \"anz_out\" diskw ywlm (stem out.\"\n address mvs \"execio \"anz_cmp\" diskw ywlm (stem cmp.\"\n address mvs \"execio \"anz_htm\" diskw ywlm (stem htm. finis\"\n/* v20 create stats for member */\n if sysdsorg=\"PO\" then do\n   mcds=left(outtyp,pos(\"(\",outtyp)-1)\n   if left(mcds,1)=\"'\" then do\n     mcds=mcds\"'\"\n   end\n   parse var outtyp \"(\" mcmem \")\"\n   mcrec=anz_out+anz_cmp+anz_htm\n   call cre_stats\n/* */\n/* v17 if split member wanted */\n if sysdsorg=\"PO\" & splt_mem=\"Y\" then do\n    call mem_split\n end\n/* */\n address tso \"free fi(YWLM)\"\n/* */\n/* v15 if outuss not blank - create uss html */\n if outuss<>\"\" then do\n    call create_uss\n end\nreturn\n/* */\n/* v20 create stats    */\ncre_stats:\n  \"LMINIT\"   \"DATAID(MCLMID)\",\n             \"DATASET(&MCDS)\"\n  \"LMMSTATS\" \"DATAID(&MCLMID)\",\n             \"MEMBER(&MCMEM)\",\n             \"USER(\"userid()\")\",\n             \"INITSIZE(&mcrec)\",\n             \"CURSIZE(&mcrec)\",\n             \"CREATED(\"date(\"O\")\")\",\n             \"MODDATE(\"date(\"O\")\")\",\n             \"MODTIME(\"left(time(),5)\")\"\n  \"LMFREE\"   \"DATAID(&MCLMID)\"\nreturn\n/* */\n/* v17 split member    */\nmem_split:\nxx=MSG(\"OFF\")\naddress tso \"free fi(YWLMS)\"\nxx=MSG(xx)\ndsn=left(outtyp,pos(\"(\",outtyp))\nif left(outtyp,1)=\"'\" then do\n  nopref=\"'\"\nend\nelse do\n  nopref=\"\"\nend\n/* V20 */\nmcrec=0\naddress mvs \"execio 1 diskr ywlm (stem inp.\"\nop_out=\"N\"\ndo while rc=0\n  if left(inp.1,8)=\"$$$$$$$$\" then do\n    if op_out=\"Y\" then do\n      address mvs \"execio 0 diskw ywlms (finis\"\n      xx=MSG(\"OFF\")\n      address tso \"free fi(YWLMS)\"\n      xx=MSG(xx)\n      /* V20 */\n      parse var memb \"(\" mcmem \")\"\n      call cre_stats\n      if OUTPC<>\"\" then do\n        call xfer_file\n      end\n    end\n    /* V20 */\n    mcrec=0\n    parse var inp.1 \"$$$$$$$$\" memb \".\" suff \"$\"\n    memb=dsn\"\"strip(memb)\")\"nopref\n    op_out=\"Y\"\n    address tso \"alloc fi(YWLMS) da(\"memb\") SHR\"\n    if rc>0 then do\n       say \"Error Alloc FI(YWLMS) DA(\"memb\") SHR\"\n       return\n    end\n  end\n  else do\n    /* V20 */\n    mcrec=mcrec+1\n    address mvs \"execio 1 diskw ywlms (stem inp.\"\n  end\n  address mvs \"execio 1 diskr ywlm (stem inp.\"\nend\nif op_out=\"Y\" then do\n  address mvs \"execio 0 diskw ywlms (finis\"\n  xx=MSG(\"OFF\")\n  address tso \"free fi(YWLMS)\"\n  xx=MSG(xx)\n  /* V20 */\n  parse var memb \"(\" mcmem \")\"\n  call cre_stats\n  if OUTPC<>\"\" then do\n    call xfer_file\n  end\nend\naddress mvs \"execio 0 diskw ywlm (finis\"\n/* show automaticaly output on PC */\nif OUTPC<>\"\" & show_pc=\"Y\" then do\n  call show_file\nend\nreturn\n/* */\n/* v17 show file using WSCON| */\nshow_file:\n/* REXX */\n/* v18 change show tech */\nwww='CMD /C \"'strip(Outpc)'WLMMAIN.HTM\"'\n\"SELECT WSCMDV(WWW) INVIS\"\nreturn\n/* */\n/* v17 transfer files using WSCON| */\nxfer_file:\nparse var memb \"(\" cm \")\"\nwsname=strip(OUTPC)\"\"strip(cm)\".\"strip(suff)\n\"VPUT (memb wsname)\"\n\"FILEXFER HOST(memb) WS(wsname) TO(WS) TEXT\"\nif rc<>0 then do\n  say \"Error during file transfer\" memb \"to\" wsname\". Error\" rc\nend\nreturn\n/* */\n/* v15 create uss html */\ncreate_uss:\nanz_uss=0\ndo i=1 to anz_htm\n  if left(htm.i,8)=\"$$$$$$$$\" then do\n    if anz_uss>0 then do\n      call write_uss\n    end\n    parse var htm.i \"$$$$$$$$\" usfile \"$$$$$$$$\"\n    usfile=outuss\"\"strip(usfile)\n    anz_uss=0\n  end\n  else do\n    anz_uss=anz_uss+1\n    uss.anz_uss=htm.i\n end\nend\nif anz_uss>0 then do\n  call write_uss\nend\nreturn\n/* */\n/* v15 write uss html */\nwrite_uss:\nxx=MSG(\"OFF\")\naddress tso \"free fi(YUSSWLM)\"\nxx=MSG(\"ON\")\n/* v16 delete first */\naddress tso \"ALLOC FI(YUSSWLM) PATH('\"usfile\"')\",\n   \"PATHOPTS(OWRONLY,OCREAT)\",\n   \"PATHDISP(DELETE,DELETE)\",\n   \"PATHMODE(SIRWXU)\",\n   \"FILEDATA(TEXT) LRECL(4096)\"\n if rc>0 then do\n    say \"Error Delete FI(YUSSWLM) PATH('\"usfile\"')\"\n    return\n end\nxx=MSG(\"OFF\")\naddress tso \"free fi(YUSSWLM)\"\nxx=MSG(\"ON\")\naddress tso \"ALLOC FI(YUSSWLM) PATH('\"usfile\"')\",\n   \"PATHOPTS(OWRONLY,OCREAT)\",\n   \"PATHDISP(KEEP,KEEP)\",\n   \"PATHMODE(SIRWXU)\",\n   \"FILEDATA(TEXT) LRECL(4096)\"\n if rc>0 then do\n    say \"Error Alloc FI(YUSSWLM) PATH('\"usfile\"')\"\n    return\n end\naddress mvs \"execio \"anz_uss\" diskw yusswlm (stem uss. finis\"\nxx=MSG(\"OFF\")\naddress tso \"free fi(YUSSWLM)\"\nxx=MSG(\"ON\")\nreturn\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhref: procedure\n/* Create a reference to...               */\n/* Parm1: label                           */\n/*        if empty do not create a ref    */\n/* Parm2: name of file                    */\n/* example:                               */\n/* href(rg_sc.importance.cnt,\"WLMRESGR\")  */\n/* V19 */\nif arg(1)=\"\" then do\n  return \"&nbsp;\"\nend\nreturn '<A HREF=\"'arg(2)'.htm#'strip(arg(1))'\">'strip(arg(1))'</A>'\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhsp: procedure\n/* Create a table entry                   */\n/* Parm1: table size in percent to total  */\n/* Parm2: Text                            */\n/* Parm3: A - <TR> in front     1. Line   */\n/*        E - </TR> at the end  last line */\n/*        all other default     between   */\n/* Parm4: N - hname for Parm2             */\n/* example:                               */\n/* htm.anz_htm=hsp(10,\"SYSTEM\",\"A\",\"N\"),            */\n/*             hsp(65,\"WLM intern Service Class\"),  */\n/*             hsp(10,\"none\"),                      */\n/*             hsp(15,\"none\",\"E\")                   */\nplua=\"\"\nplue=\"\"\nif arg()>2 then do\n   if arg(3)=\"A\" then\n      plua=\"<TR>\"\n   else\n   if arg(3)=\"E\" then\n      plue=\"</TR>\"\n   else do\n      plua=\"<TR>\"\n      plue=\"</TR>\"\n   end\nend\ndata=strip(arg(2))\nif data=\"\" then\n   data=\"&nbsp;\"\nhtmsp1=plua'<TD WIDTH=\"'strip(arg(1))'%\" VALIGN=\"TOP\" HEIGHT=18>'\nhtmsp1=htmsp1'<FONT FACE=\"Courier\" SIZE=3 COLOR=\"#000000\"><P>'\nif arg()=4 then do\n   if arg(4)=\"N\" then do\n      htmsp1=htmsp1\"\"hname(arg(2))\n   end\nend\nreturn htmsp1\"\"data'</FONT></TD>'plue\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhspb: procedure  /* same HSP + BackGround + Bold */\n/* Create a table see HSP                 */\nplua=\"\"\nplue=\"\"\nif arg()>2 then do\n   if arg(3)=\"A\" then\n      plua=\"<TR>\"\n   else\n   if arg(3)=\"E\" then\n      plue=\"</TR>\"\n   else do\n      plua=\"<TR>\"\n      plue=\"</TR>\"\n   end\nend\ndata=strip(arg(2))\nif data=\"\" then\n   data=\"&nbsp;\"\nhtmsp1=plua'<TD WIDTH=\"'strip(arg(1))'%\" VALIGN=\"TOP\"'\nhtmsp1=htmsp1' BGCOLOR=\"#c0c0c0\" HEIGHT=18>'\nhtmsp1=htmsp1'<FONT FACE=\"Courier\" SIZE=3 COLOR=\"#000000\"><P>'\nif arg()=4 then do\n   if arg(4)=\"N\" then do\n      htmsp1=htmsp1\"\"hname(arg(2))\n   end\nend\nreturn htmsp1'<B>'data'</B></FONT></TD>'plue\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhtab: procedure\n/* Create a table                         */\n/* Parm1: table size                      */\n/* example:                               */\n/* htm.anz_htm=htab(500)                  */\nt1= '<TABLE BORDER=1 CELLSPACING=1 CELLPADDING=2 WIDTH='strip(arg(1))'>'\nreturn t1\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhsp1: procedure\n/* Create a 2 column span table entry     */\n/* Parm1: data                            */\n/* Parm2: N - create a named entry        */\n/* example:                               */\n/* htm.anz_htm=hsp1(gmgroup \"-\" gmg.gmgroup,\"N\")  */\nname=\"\"\nif arg()=2 then do\n   if arg(2)=\"N\" then do\n      parse value arg(1) with thedata \" -\" .\n      name='<A NAME=\"'thedata'\"></A>'\n   end\nend\nt1= '<TR><TD VALIGN=\"TOP\" COLSPAN=2 BGCOLOR=\"#c0c0c0\" HEIGHT=18>'\nt1= t1'<FONT FACE=\"Courier\" SIZE=5 COLOR=\"#000000\"><P>'\nt1= t1\"\"name'<B>'arg(1)'</B></P></TR>'\nreturn t1\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhsp2: procedure\n/* Create a 2 column span table entry     */\n/* Parm1: data                            */\n/* Parm2: N - create a named entry        */\n/* example:                               */\n/* htm.anz_htm=hsp4(\"Service Classes\")    */\nname=\"\"\nif arg()=2 then do\n   if arg(2)=\"N\" then do\n      parse value arg(1) with thedata \" -\" .\n      name='<A NAME=\"'thedata'\"></A>'\n   end\nend\nt1= '<TR><TD VALIGN=\"TOP\" COLSPAN=2 BGCOLOR=\"#c0c0c0\" HEIGHT=18>'\nt1= t1'<FONT FACE=\"Courier\" SIZE=5 COLOR=\"#000000\"><P>'\nt1= t1\"\"name'<B>'arg(1)'</B></P></TR>'\nreturn t1\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhsp4: procedure\n/* Create a 4 column span table entry     */\n/* Parm1: data                            */\n/* Parm2: N - create a named entry        */\n/* example:                               */\n/* htm.anz_htm=hsp4(\"Service Classes\")    */\nname=\"\"\nif arg()=2 then do\n   if arg(2)=\"N\" then do\n      parse value arg(1) with thedata \" -\" .\n      name='<A NAME=\"'thedata'\"></A>'\n   end\nend\nt1= '<TR><TD VALIGN=\"TOP\" COLSPAN=4 BGCOLOR=\"#c0c0c0\" HEIGHT=18>'\nt1= t1'<FONT FACE=\"Courier\" SIZE=5 COLOR=\"#000000\"><P>'\nt1= t1\"\"name'<B>'arg(1)'</B></P></TR>'\nreturn t1\n/* */\n/*--------------------------------------------------------------*/\n/* */\n/* V18 */\nhsp6: procedure\n/* Create a 6 column span table entry     */\n/* Parm1: data                            */\n/* Parm2: N - create a named entry        */\n/* example:                               */\n/* htm.anz_htm=hsp6(\"Application Environment\") */\nname=\"\"\nif arg()=2 then do\n   if arg(2)=\"N\" then do\n      parse value arg(1) with thedata \" -\" .\n      name='<A NAME=\"'thedata'\"></A>'\n   end\nend\nt1= '<TR><TD VALIGN=\"TOP\" COLSPAN=6 BGCOLOR=\"#c0c0c0\" HEIGHT=18>'\nt1= t1'<FONT FACE=\"Courier\" SIZE=5 COLOR=\"#000000\"><P>'\nt1= t1\"\"name'<B>'arg(1)'</B></P></TR>'\nreturn t1\n/* */\n/*--------------------------------------------------------------*/\n/* */\n/* V17 */\nhtit:\n/* Create the title lines of any member   */\n/* Parm1: data                            */\n/* Parm2: name of the file                */\n/* example:                               */\n/* htm.anz_htm=htit(\"Classification Groups\",\"WLMGROUP\") */\nhtm.anz_htm=\"$$$$$$$$\" strip(arg(2))\".htm $$$$$$$$\"\nanz_htm=anz_htm+1\nhtm.anz_htm=\"<HTML>\"\nanz_htm=anz_htm+1\nhtm.anz_htm='<META name=\"author\" content=\"YCOS Yves Colliard Software\">'\nanz_htm=anz_htm+1\nhtm.anz_htm='<META name=\"copyright\" content=\"'vdat' YCOS GmbH\">'\nanz_htm=anz_htm+1\nhtm.anz_htm='<META name=\"info\" content=\"'sd_desc '-' arg(1),\n      '- File' strip(arg(2))'.htm\">'\nanz_htm=anz_htm+1\nt1= '<TITLE>'arg(1) '-' sd_desc'</TITLE>'\nt1= t1'<P><FONT FACE=\"Courier\" SIZE=5 COLOR=\"#000000\">'\nt1= t1'<B>'arg(1) '-' sd_desc'<BR>'copies('=',length(arg(1))+2)\nt1= t1' analysed 'date('N')' by YCOS Procedure' wlmycos'</B></P>'\nt1= t1'</FONT><FONT FACE=\"Courier\" SIZE=3 COLOR=\"#000000\"><P>'\nt1= t1'<A HREF=WLMAE.htm>Appl. Env.</A> - '\nt1= t1'<A HREF=WLMSE.htm>Sched. Env.</A> - '\nt1= t1'<A HREF=WLMRES.htm>Resource</A> - '\nt1= t1'<A HREF=WLMRSE.htm>Res-SE</A> - '\nt1= t1'<A HREF=WLMNOTEP.htm>Note Pad</A> - '\nt1= t1'<A HREF=WLMMAIN.htm>WLM Main</A></FONT></P>'\nreturn t1\n/* */\n/*--------------------------------------------------------------*/\n/* */\nhname: procedure\n/* Create a named entry                   */\n/* Parm1: name in table                   */\n/* example:                               */\n/* htmsp1=htmsp1\"\"hname(arg(2))           */\nreturn '<A NAME=\"'strip(arg(1))'\"></A>'\n/* */\n/*--------------------------------------------------------------*/\n/* */\n/* V17 */\nsaveblank: procedure\np1=arg(1)\nstart=1\ndo while pos(\"  \",p1,start)>0\n  wo=pos(\"  \",p1,start)\n  if wo=1 then\n    t1=\"\"\n  else\n    t1=left(p1,wo-1)\n  p1=t1'&nbsp; 'substr(p1,wo+2)\n  start=wo+6\nend\nreturn p1\n/* */\n/* v19 */\nwlm_pol:\ncvt = c2d(storage(d2x(16       ),4))\nrmct= c2d(storage(d2x(cvt + 604),4)) /* 25C   */\nwmct= c2d(storage(d2x(rmct+  32),4)) /*  20   */\npoln=     storage(d2x(wmct+ 448),8)  /* 1C0   */\npolt= c2x(storage(d2x(wmct+ 456),8)) /*       */\npolt= left(StckCony(polt),17)\npolu=     storage(d2x(wmct+ 464),8)  /*       */\npols=     storage(d2x(wmct+ 472),8)  /*       */\n/* say poln polt polu pols */\nsdfn=     storage(d2x(wmct+ 480),8)  /*       */\nsdft= c2x(storage(d2x(wmct+ 488),8)) /*       */\nsdft= left(StckCony(sdft),17)\nsdfu=     storage(d2x(wmct+ 496),8)  /*       */\nsdfs=     storage(d2x(wmct+ 504),8)  /*       */\n/* say sdfn sdft sdfu sdfs */\nreturn\n/* v19 */\nSTCKCONY: Procedure\nodig=digits()\nNumeric  Digits 20              /* increase significant digits to 20 */\nSecs     = X2D(SubStr(arg(1),1,13))     /* Ignore last 1.5 bytes     */\nmsec     = right(\"0000000\"secs//1000000,6) /* micro secs   */\ntimes    = secs%1000000\nsec      = times//60                       /* seconds      */\ntimem    = times%60\nmin      = timem//60                       /* minutes      */\ntimeh    = timem%60\nhours    = timeh//24                       /* hours        */\ntimed    = (timeh%24)+date(\"B\",\"19000101\",\"S\") /* days since 1900 */\nNumeric  Digits odig           /* restore default significant digits */\nReturn   date(\"E\",timed,\"B\")\" \"y(Hours)\":\"y(Min)\":\"y(sec)\".\"msec\ny:\nreturn right(\"0\"arg(1),2)\nreturn\n/* v19 */\nfillhtm: procedure\nt1=strip(arg(1))\nl2=arg(2)\nl1=length(t1)\nif l1=l2 then return arg(1)\ndo i=l1 to l2-1\n  t1=t1\"&nbsp;\"\nend\nreturn t1\n/* */\n/* Used Tables:                                       */\n/* SDCTAB   - Service Definition + Coefficients       */\n/* SPTAB    - Service Policy                          */\n/* ATTRTAB  - Resource Group Attribute                */\n/* SGTAB    - Service Class Goal Table                */\n/* SSTAB    - Subsystem, Default Service Class        */\n/* GMTAB    - Classification Groups                   */\n/* CRTAB    - Classification Rules                    */\n/* SCTAB    - Service Class                           */\n/* RCTAB    - Report Class                            */\n/* RGTAB    - Resource Group                          */\n/* V17                                                */\n/* GRTAB    - Classification Groups Description       */\n/* WLTAB    - Workload                                */\n/* PADTAB   - Notepad                                 */\n/* OPTTAB   - Options                                 */\n/* RELTAB   - Release                                 */\n/* V18                                                */\n/* AETAB    - Application Environment                 */\n/* V21                                                */\n/* RTAB     - Resource                                */\n/* SETAB    - Scheduling Environment                  */\n/* SRTAB    - Resource-Scheduling Environment         */\n/*                                                    */\n/* NOT YET Used Tables:                               */\n/* ADATAB   - ?                                       */\n/* AXTTAB   - ?                                       */\n/* EDATAB   - ?                                       */\n/* EXTTAB   - ?                                       */\n/* RDATAB   - ?                                       */\n/* RXTTAB   - ?                                       */\n/* RDXTAB   - ?                                       */\n/* SEXTAB   - ?                                       */\n/*                                                    */\n/*----------------------------------------------------*/\n/*                                                    */\n/* WSCON Installation and Usage                       */\n/* see www.ycos.de/ispfgui.htm                        */\n/* - WORKSTATION Installation                         */\n/* Download ISP.SISPGUI(ISPGUINX) to PC Binary        */\n/* Call the downloaded file and follow instructions   */\n/* Check your IP address of your PC - ipconfig        */\n/* - ISPF Configuration                               */\n/* Call the WSCON Command under ISPF                  */\n/*   Set without GUI display |                        */\n/*   set IP Protocol                                  */\n/*   insert your PC IP Address                        */\n/*   save using PF3                                   */\n/* - to work with WSCON                               */\n/*   1. Call WSA on your Workstation (Option IP Ena)  */\n/*   2. Call WSCON under ISPF + ENTER                 */\n/*   3. Accept the communication on your workstation  */\n/*                                                    */\n/*-------------------------------------------------------------*/\n/* Sample for Batch Job running SHOWWLM                        */\n/* ------------------------------------                        */\n/*//WLM      EXEC PGM=IKJEFT01                                 */\n/*-->               customize                                  */\n/*//SYSPROC  DD DSN=your.YCOS.CLIST,DISP=SHR                   */\n/*//SYSTSPRT DD SYSOUT=*                                       */\n/*//ISPTABL  DD DSN=&TLIB,SPACE=(TRK,(1,1,5)),LRECL=80,        */\n/*//         RECFM=FB,DISP=(NEW,PASS)                          */\n/*//ISPSLIB  DD DSN=&SLIB,SPACE=(TRK,(1,1,5)),LRECL=80,        */\n/*//         RECFM=FB,DISP=(NEW,PASS)                          */\n/*//ISPPROF  DD DSN=&PLIB,SPACE=(TRK,(1,1,5)),LRECL=80,        */\n/*//         RECFM=FB,DISP=(NEW,PASS)                          */\n/*-->               customize                                  */\n/*//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR  LOOK AT YOUR SITE|  */\n/*//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR  LOOK AT YOUR SITE|  */\n/*//ISPTLIB  DD DSN=ISP.SISPTENU,DISP=SHR  LOOK AT YOUR SITE|  */\n/*//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR  LOOK AT YOUR SITE|  */\n/*//ISPLIST  DD DUMMY                                          */\n/*//ISPLOG   DD DUMMY                                          */\n/*-->               customize                                  */\n/*                  yourpref - set a prefix for ds             */\n/*                  MY.INPUT.POLICY - name of input WLM PO     */\n/*                  YCOS.WLMOUT - your output dataset          */\n/*                  put dsname in quote in case of no prefix   */\n/*//SYSTSIN  DD  *                                             */\n/* PROFILE PREFIX(yourpref)                                    */\n/* ISPSTART CMD(%SHOWWLM MY.INPUT.POLICY YCOS.WLMOUT(WLMPOL))  */\n/*-------------------------------------------------------------*/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SHOWWLMJ": {"ttr": 43, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x10\\x01\\x082/\\x01\\x13\\x00\\x7f\\x16\\x15\\x00\\x1c\\x00\\x11\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2008-11-17T00:00:00", "modifydate": "2013-01-07T16:15:10", "lines": 28, "newlines": 17, "modlines": 0, "user": "ESA"}, "text": "//SHOWWLMJ JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//**************************************************************************\n//*\n//* Before run this job change in the SHOWWLM\n//* OUTUSS=\"/u/mvsexp/server_root/pub/\"\n//*\n//*\n//*\n//**************************************************************************\n//SYSEXEC  DD  DSN=ESA.PRJ.CBTEXP.SAMPLIB,DISP=SHR\n//SYSTSPRT DD  SYSOUT=*\n//ISPTABL  DD DSN=&TLIB,SPACE=(TRK,(1,1,5)),LRECL=80,\n//         RECFM=FB,DISP=(NEW,PASS)\n//ISPSLIB  DD DSN=&SLIB,SPACE=(TRK,(1,1,5)),LRECL=80,\n//         RECFM=FB,DISP=(NEW,PASS)\n//ISPPROF  DD DSN=&PLIB,SPACE=(TRK,(1,1,5)),LRECL=80,\n//         RECFM=FB,DISP=(NEW,PASS)\n//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR\n//ISPTLIB  DD DSN=ISP.SISPTENU,DISP=SHR\n//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR\n//ISPLIST  DD DUMMY\n//ISPLOG   DD DUMMY\n//SYSTSIN  DD  *\n PROFILE NOPREFIX\n ISPSTART CMD(%SHOWWLM ESA.PRJ.CBTEXP.WLMDEF  ESA.PRJ.CBTEXP.OUT(WLMPOL))\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMFLOGS": {"ttr": 45, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x13\\x00\\x8f\\x01\\x13\\x00\\x8f\\x17\\t\\x00\\x16\\x00\\x16\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-01-08T00:00:00", "modifydate": "2013-01-08T17:09:36", "lines": 22, "newlines": 22, "modlines": 0, "user": "ESA"}, "text": "//SMFLOGS  JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//STEP1 EXEC PGM=IXCMIAPU\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n DATA TYPE(LOGR) REPORT(YES)\n DELETE LOGSTREAM NAME(IFASMF.DEFAULT)\n//STEP1 EXEC PGM=IXCMIAPU\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DATA TYPE(LOGR) REPORT(YES)\n  DEFINE LOGSTREAM NAME(IFASMF.DEFAULT)\n         STRUCTNAME(IFASMF)\n         STG_DATACLAS(LOGR4K) STG_STORCLAS(LOGR4K)\n         LOWOFFLOAD(30)\n         HIGHOFFLOAD(70)\n         AUTODELETE(YES) RETPD(1)\n         LS_STORCLAS(LOGR4K)\n         LS_DATACLAS(LOGR) STG_DUPLEX(NO)\n         LS_SIZE(512) HLQ(RRSLOGS)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XMIT": {"ttr": 69, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00)\\x01\\x123\\x0f\\x01\\x13\\x03_\\t9\\x00<\\x00\\x11\\x00\\x00\\xc5\\xe2\\xc1@@@@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2012-11-25T00:00:00", "modifydate": "2013-02-04T09:39:29", "lines": 60, "newlines": 17, "modlines": 0, "user": "ESA"}, "text": "//XMIT     JOB ,&SYSUID,NOTIFY=&SYSUID,\n//    CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//    REGION=0M\n//ROOT     EXEC PGM=ADRDSSU,REGION=0M\n//SYSPRINT  DD SYSOUT=*\n//TAPE      DD DISP=OLD,DSN=ESA.PRJ.CBTEXP.ZFSDUMP\n//SYSIN     DD *\n  DUMP    DATASET(  -\n          INCLUDE(ZFS.MVSEXP))-\n          TOL(ENQF) -\n          COMPRESS  -\n          CONCURRENT -\n          OUTDD(TAPE)\n//**************************************************************\n//* TSO BATCH PROC\n//**************************************************************\n//TSOBATCH EXEC PGM=IKJEFT1B,DYNAMNBR=200,COND=(4,LT)\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//ADATA    DD DSN=ESA.PRJ.CBTEXP.XMIT(ADATA),DISP=SHR\n//ASM      DD DSN=ESA.PRJ.CBTEXP.XMIT(ASM),DISP=SHR\n//COMPLIST DD DSN=ESA.PRJ.CBTEXP.XMIT(COMPLIST),DISP=SHR\n//CPP      DD DSN=ESA.PRJ.CBTEXP.XMIT(CPP),DISP=SHR\n//HPP      DD DSN=ESA.PRJ.CBTEXP.XMIT(HPP),DISP=SHR\n//JOBS     DD DSN=ESA.PRJ.CBTEXP.XMIT(JOBS),DISP=SHR\n//LOADLIB  DD DSN=ESA.PRJ.CBTEXP.XMIT(LOADLIB),DISP=SHR\n//OBJECT   DD DSN=ESA.PRJ.CBTEXP.XMIT(OBJECT),DISP=SHR\n//PROC     DD DSN=ESA.PRJ.CBTEXP.XMIT(PROC),DISP=SHR\n//SAMPLIB  DD DSN=ESA.PRJ.CBTEXP.XMIT(SAMPLIB),DISP=SHR\n//OUT      DD DSN=ESA.PRJ.CBTEXP.XMIT(OUT),DISP=SHR\n//WLMDEF   DD DSN=ESA.PRJ.CBTEXP.XMIT(WLMDEF),DISP=SHR\n//ZFSDUMP  DD DSN=ESA.PRJ.CBTEXP.XMIT(ZFSDUMP),DISP=SHR\n//SYSIN    DD DUMMY\n//SYSTSIN  DD *\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.ADATA')     -\n OUTFILE(ADATA)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.ASM')       -\n OUTFILE(ASM)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.COMPLIST') -\n OUTFILE(COMPLIST)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.CPP')       -\n OUTFILE(CPP)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.HPP')       -\n OUTFILE(HPP)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.JOBS')      -\n OUTFILE(JOBS)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.LOADLIB')   -\n OUTFILE(LOADLIB)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.OBJECT')    -\n OUTFILE(OBJECT)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.PROC')      -\n OUTFILE(PROC)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.OUT') -\n OUTFILE(OUT)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.WLMDEF') -\n OUTFILE(WLMDEF)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.SAMPLIB') -\n OUTFILE(SAMPLIB)\n XMIT JES2P390.ESA DATASET('ESA.PRJ.CBTEXP.ZFSDUMP') -\n OUTFILE(ZFSDUMP)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT888/CBT.V500.FILE888.PDS/SAMPLIB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT888/CBT.V500.FILE888.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}