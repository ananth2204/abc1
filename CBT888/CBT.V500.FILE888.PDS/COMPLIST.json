{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "ESA", "INMTNODE": "JES2P390", "INMTUID": "ESA", "INMFTIME": "20130207124344000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 6368460, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 133, "INMBLKSZ": 32718, "INMRECFM": "FBA", "INMDIR": 1, "INMDSNAM": "ESA.PRJ.CBTEXP.COMPLIST", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 6368460, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 6368460, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"ESA.PRJ.CBTEXP.COMPLIST": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32718, "DS1LRECL": 133, "DS1RECFM": "FBA", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"ASMIF": {"ttr": 831, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK62835)   Page    1\n-                                                                                            HLASM R6.0  2013/01/07 10.56\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2013/01/07 10.56\n0ASMIF     SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00001FD4  00000001   06\n ASMIF     LD 00000005 00000000           00000004   06\n BPX1ATM   ER 00000006                    00000001\n BPX1SEL   ER 00000007                    00000001\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                               1          COPY $$SYSTEM\n                                                2=* 04/01/04 ARM SUPPORT\n                                                3=* 20/04/04 VERSION NAME TO 609\n                                                4=* 10/07/04 SAPI MODIFICATION\n                                                5=* 23/07/04 EXCI MODIFICATION\n                                                6=* 23/07/04 DB2\n                                                7=* 19/01/05 WLM\n                                                8=* 15/02/05 MS\n                                                9=* 30/09/05 VERSION NAME TO 620\n                                               10=* 12/12/05 WEB CONTROL\n                                               11=* 27/93/09 VERSION NAME TO 700\n                                               12=         GBLC &SYSTEM\n                                               13=         GBLA &SYSTEMC\n                                               14=         GBLC &PROJECT\n                                               15=         GBLC &VERSION\n                                               16=         GBLC &VERSION_SHORT\n                                               17=         GBLC &MSGPREF\n                                               18=         GBLC &CVTYPE\n                                               19=         GBLC &PRODUCT\n                                               20=         GBLB &MQS\n                                               21=         GBLB &SAPI\n                                               22=         GBLB &EXCI\n                                               23=         GBLB &DB2\n                                               24=         GBLB &TLIB\n                                               25=         GBLB &HTTP\n                                               26=         GBLB &ARM\n                                               27=         GBLB &WLM\n                                               28=         GBLB &WLMAE\n                                               29=         GBLB &MS\n                                               30=         AIF   (&SYSTEMC GT 1).NO\n                                               31=&SYSTEMC SETA &SYSTEMC+1\n                                               32=&MSGPREF SETC 'QSF'\n                                               33=         AIF  ('&SYSTEM' NE '').SYSOK\n                                               34=&SYSTEM  SETC 'MVS/ESA'\n                                               35=.SYSOK   ANOP\n                                               36=&PROJECT SETC 'QFSS'\n                                               37=&VERSION SETC 'V7R0M0'\n                                               38=&VERSION_SHORT SETC 'V700'\n                                               39=&CVTYPE  SETC 'TCBUSER'\n                                               40=&PRODUCT SETC 'PAPYRUS HOST'\n                                               41=&MQS     SETB  1\n                                               42=&SAPI    SETB  1\n                                               43=&EXCI    SETB  1\n                                               44=&DB2     SETB  0\n                                               45=&TLIB    SETB  0\n                                               46=&HTTP    SETB  1\n                                               47=&ARM     SETB  1\n                                               48=&WLM     SETB  1\n                                               49=&WLMAE   SETB  1\n                                               50=&MS      SETB  1\n                                               51=&SYSCVTR SETC  ''\n ** ASMA254I *** MNOTE ***                     52      0,*******************************************\n ** ASMA254I *** MNOTE ***                     53      0,*\n                                               54=         MNOTE 0,'* &SYSTEM                                  '\n ** ASMA254I *** MNOTE ***                       +     0,* MVS/ESA\n1                                                                                                               Page    4\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                              55=         MNOTE 0,'* &PROJECT                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* QFSS\n                                               56=         MNOTE 0,'* &VERSION                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* V7R0M0\n                                               57=         MNOTE 0,'* &MSGPREF                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* QSF\n                                               58=         MNOTE 0,'* &CVTYPE                                  '\n ** ASMA254I *** MNOTE ***                       +     0,* TCBUSER\n                                               59=         MNOTE 0,'* &PRODUCT                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* PAPYRUS HOST\n                                               60=         MNOTE 0,'* MQS = &MQS                               '\n ** ASMA254I *** MNOTE ***                       +     0,* MQS = 1\n                                               61=         MNOTE 0,'* HTTP = &HTTP                             '\n ** ASMA254I *** MNOTE ***                       +     0,* HTTP = 1\n                                               62=         MNOTE 0,'* ARM = &ARM                               '\n ** ASMA254I *** MNOTE ***                       +     0,* ARM = 1\n                                               63=         MNOTE 0,'* SAPI = &SAPI                             '\n ** ASMA254I *** MNOTE ***                       +     0,* SAPI = 1\n                                               64=         MNOTE 0,'* EXCI = &EXCI                             '\n ** ASMA254I *** MNOTE ***                       +     0,* EXCI = 1\n                                               65=         MNOTE 0,'* DB2 = &DB2                               '\n ** ASMA254I *** MNOTE ***                       +     0,* DB2 = 0\n                                               66=         MNOTE 0,'* WLM = &WLM                               '\n ** ASMA254I *** MNOTE ***                       +     0,* WLM = 1\n                                               67=         MNOTE 0,'* WLMAE = &WLMAE                           '\n ** ASMA254I *** MNOTE ***                       +     0,* WLMAE = 1\n                                               68=         MNOTE 0,'* MS = &MS                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* MS = 1\n ** ASMA254I *** MNOTE ***                     69      0,******************************************\n                                               70=.NO      ANOP\n                                               71 ASMIF    $$ASMIF TYPE=PROGRAM\n1          asmif asm interfcae module                                                                           Page    5\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                              73+         PUSH PRINT                                                     01-$$ASMIF\n                                               74+         PRINT OFF                                                      01-$$ASMIF\n                                              390+         PRINT OFF                                                      01-$$ASMIF\n                                              391+         PRINT NOGEN                                                    01-$$ASMIF\n                                             3609+         POP  PRINT                                                     01-$$ASMIF\n                                             3610+* 16/11/06 RMODE warning from binder\n 00000000                00000000 00001FD4   3611+ASMIF    CSECT                                                          01-$$ASMIF\n                                             3612+ASMIF    AMODE 31                                                       01-$$ASMIF\n                                             3613+ASMIF    RMODE ANY                                                      01-$$ASMIF\n                                             3614+* 16/11/06 RMODE warning from binder\n                                             3615+***********************************************************************\n                                             3616+*                                                                     *\n                                             3617+* asmif                                                               *\n                                             3618+*                                                                     *\n                                             3619+* function:                                                           *\n                                             3620+*  asm     interfcae routines                                         *\n                                             3621+*  called from the c++ mvsif module                                   *\n                                             3622+* processing:                                                         *\n                                             3623+*  the function code defines the  functions to execute                *\n                                             3624+*                                                                     *\n                                             3625+*                                                                     *\n                                             3626+* register assignment :                                               *\n                                             3627+*                                                                     *\n                                             3628+*                                                                     *\n                                             3629+*                                                                     *\n                                             3630+* the routine is getting the control in problem state,  user key      *\n                                             3631+*                                                                     *\n                                             3632+* the module is reentrant                                             *\n                                             3633+*                                                                     *\n                                             3634+* amode(31) , rmode(any)                                              *\n                                             3635+*                                                                     *\n                                             3636+***********************************************************************\n0                        00000A00            3638+MAX_ECBS  EQU   128*20             max ecb                              01-$$ASMIF\n                         00000FF0            3639+MAX_ASM_BUFFER  EQU 4080           page - prefix size                   01-$$ASMIF\n                         00000400            3640+MAX_ASM_SOCKETS EQU 1024           max sockets                          01-$$ASMIF\n                         00000400            3641+MAX_ASM_MUTEX   EQU 1024           max mutex                            01-$$ASMIF\n                         0000001C            3642+VRL_LEN         EQU   28           VRL len                              01-$$ASMIF\n                                             3643+*        iarvrl   ,                VRL map\n                                             3645+*                                                                    */\n                                             3646+* %PLXVRL0:;\n                                             3647+* /*******************************************************************/\n                                             3648+* /*                                                                 */\n                                             3649+* /*            VRL  -  IARVSERV Virtual Range List Entry            */\n                                             3650+* /*                                03/28/94                         */\n                                             3651+* /*                                                                 */\n                                             3652+* /*******************************************************************/\n                                             3653+* %GOTO PLXVRL1; /*\n 00000000                00000000 0000001C   3654+VRL      DSECT ,             Maps the IARVSERV range list (VRL) entry   02-IARVRL\n 00000000                                    3655+VRLSVSA  DS    A             Starting virtual storage address of the    02-IARVRL\n                                             3656+*                            source data to be made shared.  This\n                                             3657+*                            field is ignored for the UNSHARE request.\n                                             3658+*\n 00000004                                    3659+VRLSSTKN DS    0XL8          STOKEN of the space in which the source    02-IARVRL\n                                             3660+*                            data resides.  If ALET is used rather\n1          asmif asm interfcae module                                                                           Page    6\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            3661+*                            than STOKEN, then the first 4 bytes must\n                                             3662+*                            be zero.  This field is ignored for the\n                                             3663+*                            UNSHARE request.\n                                             3664+*                            Note: an STOKEN may be specified for data\n                                             3665+*                            space storage only.\n                                             3666+*\n 00000004                                    3667+VRLSSTK1 DS    XL4           First word of source STOKEN.  When this    02-IARVRL\n                                             3668+*                            word is zero, VRLSALET contains an ALET\n                                             3669+*\n 00000008                                    3670+VRLSALET DS    F             ALET which corresponds to the space in     02-IARVRL\n                                             3671+*                            which the source data resides.  This\n                                             3672+*                            field is ignored for the UNSHARE request.\n                                             3673+*\n 0000000C                                    3674+VRLNUMPG DS    A             Number of pages in the SOURCE and/or       02-IARVRL\n                                             3675+*                            TARGET area.  This field is required for\n                                             3676+*                            both the SHARE and the UNSHARE requests.\n                                             3677+*\n 00000010                                    3678+VRLTVSA  DS    A             Starting virtual storage address of the    02-IARVRL\n                                             3679+*                            target data to be made shared or\n                                             3680+*                            unshared.  This field is required for\n                                             3681+*                            both the SHARE and the UNSHARE requests.\n                                             3682+*\n 00000014                                    3683+VRLTSTKN DS    0XL8          STOKEN of the space in which the target    02-IARVRL\n                                             3684+*                            data resides.  If ALET is used rather\n                                             3685+*                            than STOKEN, then the first 4 bytes must\n                                             3686+*                            be zero.  This field is required for both\n                                             3687+*                            the SHARE and the UNSHARE requests.\n                                             3688+*                            Note: an STOKEN may be specified for data\n                                             3689+*                            space storage only.\n                                             3690+*\n 00000014                                    3691+VRLTSTK1 DS    XL4           First word of target STOKEN.  When this    02-IARVRL\n                                             3692+*                            word is zero, VRLSALET contains an ALET\n                                             3693+*\n 00000018                                    3694+VRLTALET DS    F             ALET which corresponds to the space in     02-IARVRL\n                                             3695+*                            which the target data resides.  This\n                                             3696+*                            field is required for both the SHARE and\n                                             3697+*                            the UNSHARE requests.\n                                             3698+*\n 0000001C                                    3699+VRLEND   DS    0F            End of IARVSERV range list (VRL) entry     02-IARVRL\n                                             3700+*                            mapping\n                                             3701+*\n                         0000001C            3702+VRLLEN   EQU   VRLEND-VRL    Length of a VRL                            02-IARVRL\n 00000000                00000000 000000B8   3703+FRRAREA  DSECT                                                          01-$$ASMIF\n 00000000 0000000000000000                   3704+FRRSAVE  DC    18A(0)                                                   01-$$ASMIF\n 00000048                                    3707+FRRSDUMPX_L DS 0F                           SDUMP PARAMETER LIST        02-SDUMPX\n 00000048 02                                 3708+         DC    AL1(2)                       FLAG BYTE                   02-SDUMPX\n 00000049 A1                                 3709+         DC    AL1(161)                     FLAG BYTE                   02-SDUMPX\n 0000004A 00                                 3710+         DC    AL1(0)                       FLAG BYTE                   02-SDUMPX\n 0000004B 00                                 3711+         DC    AL1(0)                       FLAG BYTE                   02-SDUMPX\n 0000004C 00000000                           3712+         DC    A(0)                         ADDRESS OF DCB              02-SDUMPX\n 00000050 00000000                           3713+         DC    A(0)                         ADDRESS OF STORAGE LIST     02-SDUMPX\n 00000054 00000000                           3714+         DC    A(0)                         ADDRESS OF USER DATA        02-SDUMPX\n 00000058 00000000                           3715+         DC    A(0)                         ADDRESS OF ECB/SRB     @L4C 02-SDUMPX\n 0000005C 0000                               3716+         DC    AL2(0)                       CURRENT ASID                02-SDUMPX\n 0000005E 0000                               3717+         DC    AL2(0)                       OTHER ASID                  02-SDUMPX\n1          asmif asm interfcae module                                                                           Page    7\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000060 00000000                           3718+         DC    A(0)                         ADDRESS OF ASID LIST        02-SDUMPX\n 00000064 00000000                           3719+         DC    A(0)           ADDRESS OF SUMLIST/SUMLSTA LIST  @G383P1U 02-SDUMPX\n 00000068 00000000                           3720+         DC    A(0)                      RESERVED              @G33VPHD 02-SDUMPX\n 0000006C 00000000                           3721+         DC    A(0)                      RESERVED              @G33VPHD 02-SDUMPX\n 00000070 00                                 3722+         DC    AL1(0)                    FLAG BYTE             @G383P1U 02-SDUMPX\n 00000071 C0                                 3723+         DC    AL1(192)                  CONTROL FLAG BYTE     @G860P31 02-SDUMPX\n 00000072 00                                 3724+         DC    AL1(0)                    TYPE FLAG BYTE        @G383P1U 02-SDUMPX\n 00000073 01                                 3725+         DC    AL1(1)                    VERSION                   @T1P 02-SDUMPX\n 00000074 00                                 3726+         DC    AL1(0)                    EXIT FLAG BYTE        @G383P1U 02-SDUMPX\n 00000075 00                                 3727+         DC    AL1(0)                    EXIT FLAG BYTE            @LEC 02-SDUMPX\n 00000076 00                                 3728+         DC    AL1(0)                    SDATA OPTIONS             @T1P 02-SDUMPX\n 00000077 00                                 3729+         DC    AL1(0)                    RESERVED SDATA OPTIONS    @T1P 02-SDUMPX\n 00000078 00000000                           3730+         DC    A(0)                      ADDRESS OF SUBPLST    @G860P31 02-SDUMPX\n 0000007C 00000000                           3731+         DC    A(0)                      ADDRESS OF KEYLIST    @G860P31 02-SDUMPX\n 00000080 00000000                           3732+         DC    A(0)                      RESERVED                  @T1P 02-SDUMPX\n 00000084 00000000                           3733+         DC    A(0)                      ALET OF DCB PARAMETER     @L3A 02-SDUMPX\n 00000088 00000000                           3734+         DC    A(0)                      ALET OF STORAGE PARAM     @L3A 02-SDUMPX\n 0000008C 00000000                           3735+         DC    A(0)                      ALET OF HDR PARAMETER     @L3A 02-SDUMPX\n 00000090 00000000                           3736+         DC    A(0)                      ALET OF ASIDLST PARAM     @L3A 02-SDUMPX\n 00000094 00000000                           3737+         DC    A(0)                      ALET OF SUMLIST PARAM     @L3A 02-SDUMPX\n 00000098 00000000                           3738+         DC    A(0)                      ALET OF SUBPLST PARAM     @L3A 02-SDUMPX\n 0000009C 00000000                           3739+         DC    A(0)                      ALET OF KEYLIST PARAM     @L3A 02-SDUMPX\n 000000A0 00000000                           3740+         DC    A(0)                      No LIST64/LISTD           @LFC 02-SDUMPX\n 000000A4 00000000                           3741+         DC    A(0)                      No ALET for LISTD/LIST64  @LFC 02-SDUMPX\n 000000A8 00000000                           3742+         DC    A(0)                      No SUMLSTL or SUMLIST64   @LFC 02-SDUMPX\n 000000AC 00000000                           3743+         DC    A(0)                      ALET SUMLSTL or SUMLIST64 @L5A 02-SDUMPX\n 000000B0 0000000000000000                   3744+         DC    2A(0)                     RESERVED                  @T1P 02-SDUMPX\n                         000000B8            3745+FRRAREA_L   EQU *-FRRAREA                                               01-$$ASMIF\n000000000                00000000 00000978   3747+ASMDSECT DSECT                                                          01-$$ASMIF\n 00000000 0000000000000000                   3748+ASM_SAVE DC    18A(0)              save in asm                          01-$$ASMIF\n 00000048 00000000                           3749+ASM_MVS      DC A(0)               mvs object pointer                   01-$$ASMIF\n 0000004C 0000000000000000                   3750+ASM_BASEREGS DC 4A(0)              base regs                            01-$$ASMIF\n 0000005C 00000000                           3751+ASM_CRAB     DC A(0)               crab pointer                         01-$$ASMIF\n 00000060 00000000                           3752+ASM_RC       DC F'0'               function return                      01-$$ASMIF\n 00000064 00000000                           3753+ASM_REASON   DC F'0'               function reason code                 01-$$ASMIF\n 00000068 00000000                           3754+ASM_IEANTCR  DC A(0)               ieantcr address                      01-$$ASMIF\n 0000006C 00000000                           3755+ASM_IEANTRT  DC A(0)               ieantrt address                      01-$$ASMIF\n 00000070 00000000                           3756+ASM_IEANTDL  DC A(0)               ieantdl address                      01-$$ASMIF\n 00000074 0000000000000000                   3757+ASM_TIMX     DC  16A(0)            timer exit area                      01-$$ASMIF\n 000000B4 00000000                           3758+ASM_TIMER_ECBP  DC A(0)            timer ecb pointer                    01-$$ASMIF\n 000000B8 00000000                           3759+ASM_EVENT0_ECBP DC A(0)            event0 ecb                           01-$$ASMIF\n 000000BC 00000000                           3760+ASM_EVENT1_ECBP DC A(0)            event1 ecb                           01-$$ASMIF\n 000000C0 00000000                           3761+ASM_EVENT2_ECBP DC A(0)            event2 ecb                           01-$$ASMIF\n 000000C4 00000000                           3762+ASM_EVENT3_ECBP DC A(0)            event3 ecb                           01-$$ASMIF\n 000000C8 00000000                           3763+ASM_TIMER_ECB  DC A(0)             timer ecb                            01-$$ASMIF\n 000000CC 00                                 3764+ASM_FUNCTION_CODE DC AL1(0)        function code                        01-$$ASMIF\n 000000CD 00                                 3765+ASM_KEY      DC AL1(0)             psw key save                         01-$$ASMIF\n                                             3766+* 19/11/08 SRB callback\n 000000CE 00                                 3767+ASM_SRB_MODE DC AL1(0)             srb mode flag                        01-$$ASMIF\n 000000CF 00                                     +\n 000000D0 0000000000000000                   3768+ASM_SRB_SAVE DC 16A(0)             srb register save area               01-$$ASMIF\n 00000110 00000000                           3769+ASM_SRB_RETURN DC F'0'             srb return address                   01-$$ASMIF\n                                             3770+* 19/11/08 SRB callback\n 00000114                                    3771+             DC 0F'0'              align it                             01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page    8\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000114 0000000000000000                   3772+ASM_PARMS    DC 8A(0)              parameters                           01-$$ASMIF\n-\n 00000134 0000000000000000                   3774+ASM_CALLLIST DC 8A(0)              call parameters                      01-$$ASMIF\n 00000154 4040404040404040                   3775+ASM_WORK     DC CL128' '           work area                            01-$$ASMIF\n 000001D4 4040404040404040                   3776+ASM_JOBNAME  DC CL8' '             jobname                              01-$$ASMIF\n 000001DC 4040404040404040                   3777+ASM_PROGRAMNAME DC CL8' '          actual programname                   01-$$ASMIF\n 000001E4 00000000                           3778+ASM_WORKECBS DC A(0)               start of work ecb pool               01-$$ASMIF\n 000001E8 00000000                           3779+ASM_WORKECBP DC A(0)               work ecb pointer                     01-$$ASMIF\n 000001EC 00000000                           3780+ASM_WORKECBE DC A(0)               work ecb end address                 01-$$ASMIF\n                                             3781+*ms_iarvservl iarvserv mf=(l,asm_iarv)  iarvserv list form\n                                             3783+*                  MACDATE -12/04/00-<0>\n                                             3784+              PUSH  PRINT                                               02-IARVSERV\n                                             3785+                  PRINT ON                                              02-IARVSERV\n                         000001F0            3786+ASM_IARVSERVL EQU ASM_IARV        ++ IARVSERV NAME                      02-IARVSERV\n 000001F0                                    3787+ASM_IARV DS    0D                 ++ IARVSERV PARM LIST                 02-IARVSERV\n 000001F0                                    3788+ASM_IARV_XVERSION DS XL1          ++ INPUT XVERSION                     02-IARVSERV\n 000001F1                                    3789+ASM_IARV_XSERVICE DS XL1          ++  XSERVICE                          02-IARVSERV\n                         00000001            3790+ASM_IARV_SHARE EQU 1              ++ XSERVICE.SHARE KEYWORD             02-IARVSERV\n                         00000002            3791+ASM_IARV_UNSHARE EQU 2            ++ XSERVICE.UNSHARE KEYWORD           02-IARVSERV\n                         00000003            3792+ASM_IARV_CHANGEACCESS EQU 3       ++ XSERVICE.CHANGEACCESS KEYWORD      02-IARVSERV\n                         00000004            3793+ASM_IARV_SHARESEG EQU 4           ++ XSERVICE.SHARESEG KEYWORD          02-IARVSERV\n 000001F2                                    3794+ASM_IARV_XFLAGS1 DS BL.8          ++ FIELD_LABEL                        02-IARVSERV\n                         00000080            3795+ASM_IARV_TARGET_VIEW_RO EQU B'10000000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.READONLY KEYWORD\n                         00000040            3796+ASM_IARV_TARGET_VIEW_SW EQU B'01000000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.SHAREDWRITE KEYWORD\n                         00000020            3797+ASM_IARV_TARGET_VIEW_UW EQU B'00100000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.UNIQUEWRITE KEYWORD\n                         00000010            3798+ASM_IARV_TARGET_VIEW_TW EQU B'00010000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.TARGETWRITE KEYWORD\n                         00000008            3799+ASM_IARV_TARGET_VIEW_LS EQU B'00001000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.LIKESOURCE KEYWORD\n                         00000004            3800+ASM_IARV_TARGET_VIEW_NA EQU B'00000100'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.HIDDEN KEYWORD\n                         00000002            3801+ASM_IARV_COPYNOW EQU B'00000010'  ++ KEYUSED.COPYNOW KEYWORD            02-IARVSERV\n                         00000001            3802+ASM_IARV_RETAIN_YES EQU B'00000001'                                    X02-IARVSERV\n                                                 +                                  ++ XRETAIN.YES KEYWORD\n 000001F3                                    3803+ASM_IARV_XFLAGS2 DS BL.8          ++ FIELD_LABEL                        02-IARVSERV\n                         00000080            3804+ASM_IARV_XPARTIALPAGE_YES EQU B'10000000'                              X02-IARVSERV\n                                                 +                                  ++ XPARTIALPAGE.YES KEYWORD\n 000001F4                                    3805+ASM_IARV_XNUMRANGE DS F           ++   XNUMRANGE                        02-IARVSERV\n 000001F8                                    3806+ASM_IARV_XRANGLIST DS A           ++   XRANGLIST                        02-IARVSERV\n                         0000000C            3807+ASM_IARVL EQU  *-ASM_IARV         ++ LENGTH OF PLIST                    02-IARVSERV\n0                                            3809+         POP   PRINT                                                    02-IARVSERV\n                                             3810+*                                            IARVSERV-0\n0                                            3812+*ms_aleservl  aleserv  mf=l             aleserv  list form\n                                             3814+*              MACDATE = 06/13/1996                                @D1A\n 000001FC                                    3815+ASM_ALESERVL DS 0F                  .ALESERV PC PARAMETER LIST          02-ALESERV\n 000001FC 00                                 3816+         DC    XL1'00'              .SERVICE TYPE CODE                  02-ALESERV\n 000001FD 00                                 3817+         DC    XL1'00'              .OPTIONS FLAG BYTE                  02-ALESERV\n 000001FE 0000                               3818+         DC    AL2(0)               .RESERVED                           02-ALESERV\n1          asmif asm interfcae module                                                                           Page    9\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000200 00000000                           3819+         DC    A(0)                 .ALET                               02-ALESERV\n 00000204 0000000000000000                   3820+         DC    XL8'0'               .STOKEN (SPACE TOKEN)               02-ALESERV\n                                             3821+*ms_enql     enq (0,0,e,0,step),mf=l   list enq\n                                             3824+*         MACRO-DATE = 06/24/03                                    @05C\n 0000020C                                    3825+         DS    0F                      ESTABLISH A FULLWORD BOUNDARY    02-ENQ\n                         0000020C            3826+ASM_ENQL EQU   *                                                 X02113 02-ENQ\n 0000020C C0                                 3827+         DC    AL1(192)                PELLAST flag byte.        X02113 02-ENQ\n 0000020D 00                                 3828+         DC    AL1(0)                  PELMILEN - RNAME length.         02-ENQ\n 0000020E 00                                 3829+         DC    BL1'00000000'                                            02-ENQ\n                                             3830+*                                      PELFLAG - flag byte 2.\n 0000020F 00                                 3831+         DC    AL1(0)                  PELRET - return code byte.       02-ENQ\n 00000210 00000000                           3832+         DC    A(0)                    QNAME ADDRESS                    02-ENQ\n 00000214 00000000                           3833+         DC    A(0)                    RNAME ADDRESS                    02-ENQ\n 00000218 0000000000000000                   3834+ASM_OPTION   DC 4A(0)              option fields                        01-$$ASMIF\n 00000228 0000000000000000                   3835+ASM_SLEEP    DC D'0'               double word for timer                01-$$ASMIF\n 00000230 0000000000000000                   3836+ASM_IARVRL   DC (VRL_LEN)X'00'     iarvrl area                          01-$$ASMIF\n 0000024C 00000000                           3837+ASM_IARVRLA  DC A(0)               iarvrl area address                  01-$$ASMIF\n                                             3838+*ms_extract_l extract mf=l         extract list form\n 00000250                                    3840+         DS    0F                                                       02-EXTRACT\n 00000250 00000000                           3841+ASM_EXTRACT_L DC A(0)                            LIST ADDRESS           02-EXTRACT\n 00000254 00000000                           3842+         DC    A(0)                              TCB ADDRESS            02-EXTRACT\n 00000258 00000000                           3843+         DC A(0)                                                        02-EXTRACT\n                                             3844+*ms_post_l    post ascb=0,ecbkey=yes,mf=l list form\n                                             3846+*        MACDATE  07/02/90                                     @YA32157\n 0000025C 00000000                           3848+ASM_POST_L DC  A(0)                   . 1ST WORD - ECB ADDRESS          02-POST\n 00000260 00000000                           3849+         DC    A(0)                   . 2ND WORD - ASCB ADDRESS         02-POST\n 00000264 00000000                           3850+         DC    A(0)                   . 3RD WORD - ERRET ADDRESS        02-POST\n 00000268 00000000                           3851+         DC    A(0)                   . 4TH WORD - BYTE0,ECBKEY@ZA15373 02-POST\n 0000026C 00000000                           3852+ASM_COMPTR   DC A(0)               comm area pointer                    01-$$ASMIF\n 00000270 00000000                           3853+ASM_COMTOKEN DC A(0)               comm token                           01-$$ASMIF\n 00000274 00000000                           3854+ASM_COMECBPT DC A(0)               stop/modify ecb pointer              01-$$ASMIF\n 00000278                                    3857+ASM_WTOL DS    0F                                                       02-WTO\n 00000278 0072                               3858+         DC    AL2(114)                 TEXT LENGTH            @YA17152 02-WTO\n 0000027A 8010                               3859+         DC    B'1000000000010000'      MCSFLAGS                        02-WTO\n 0000027C F0F1F2F3F4F5F6F7                   3860+         DC    C'012345678901234567890123456789012345678901234567890123X02-WTO\n 00000284 F8F9F0F1F2F3F4F5                       +               45678901234567890123456789012345678901234567890123456789X\n 0000028C F6F7F8F9F0F1F2F3                       +               '                        MESSAGE TEXT               @L6C\n 000002EA 01                                 3861+         DC    AL1(1)                   VERSION LEVEL              @PJC 02-WTO\n 000002EB 00                                 3862+         DC    B'00000000'              MISCELLANEOUS FLAGS        @L2A 02-WTO\n 000002EC 00                                 3863+         DC    AL1(0)                   REPLY LENGTH               @L2A 02-WTO\n 000002ED 00                                 3864+         DC    AL1(0)                   RESERVED                   @PJA 02-WTO\n 000002EE 0000                               3865+         DC    B'0000000000000000'      EXTENDED MCS FLAGS         @L2A 02-WTO\n 000002F0 0000                               3866+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 000002F2 00000000                           3867+         DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 02-WTO\n 000002F6 00000000                           3868+         DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 02-WTO\n 000002FA 00000000                           3869+         DC    AL4(0)                   CONNECT ID                 @01C 02-WTO\n 000002FE 0400                               3870+         DC    B'0000010000000000'      DESCRIPTOR CODES           @L2A 02-WTO\n 00000300 0000                               3871+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 00000302 0000080000000000                   3872+         DC    XL16'00000800000000000000000000000000'                  X02-WTO\n 0000030A 0000000000000000                       +                                        EXTENDED ROUTING CODES     @L2A\n 00000312 0000                               3873+         DC    B'0000000000000000'      MESSAGE TYPE               @L2A 02-WTO\n 00000314 0000                               3874+         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 02-WTO\n 00000316 4040404040404040                   3875+         DC    CL8'        '            JOB ID                     @L2A 02-WTO\n 0000031E 4040404040404040                   3876+         DC    CL8'        '            JOB NAME                   @L2A 02-WTO\n 00000326 4040404040404040                   3877+         DC    CL8'        '            RETRIEVAL KEY              @L2A 02-WTO\n1          asmif asm interfcae module                                                                           Page   10\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000032E 00000000                           3878+         DC    AL4(0)                   TOKEN FOR DOM              @P1C 02-WTO\n 00000332 00000000                           3879+         DC    AL4(0)                   CONSOLE ID                 @P1C 02-WTO\n 00000336 4040404040404040                   3880+         DC    CL8'        '            SYSTEM NAME                @L2A 02-WTO\n 0000033E 00000000                           3881+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n 00000342 00000000                           3882+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n                         0000006E            3883+ASM_WTOL_TEXT_LENGTH EQU 110       text length                          01-$$ASMIF\n 00000346 0000                                   +\n 00000348 0000000000000000                   3884+ASM_BPX1    DC  32A(0)             BPX1 parm list                       01-$$ASMIF\n 000003C8 00000000                           3885+ASM_BPX1_RETVAL  DC F'0'           return value                         01-$$ASMIF\n 000003CC 00000000                           3886+ASM_BPX1_RETCODE DC F'0'           return code                          01-$$ASMIF\n 000003D0 00000000                           3887+ASM_BPX1_RSNCODE DC F'0'           reason code                          01-$$ASMIF\n 000003D4 00000000                           3888+ASM_BPX1_LIST_LENGTH_R DC A(0)     list length read                     01-$$ASMIF\n 000003D8 00000000                           3889+ASM_BPX1_LIST_LENGTH_W DC A(0)     list length write                    01-$$ASMIF\n 000003DC 00000000                           3890+ASM_BPX1_LIST_LENGTH_E DC A(0)     list length exception                01-$$ASMIF\n 000003E0 00000000                           3891+ASM_BPX1_NUMFDS      DC A(0)       number of FD's                       01-$$ASMIF\n 000003E4 00000000                           3892+ASM_BPX1_TIMEOUT     DC A(0)       timeout pointer                      01-$$ASMIF\n 000003E8 00000000                           3893+ASM_BPX1_OPTION      DC A(0)       option value                         01-$$ASMIF\n 000003EC 00000000                               +\n 000003F0 0000000000000000                   3894+ASM_STCK    DC D'0'                stck area                            01-$$ASMIF\n                                             3895+*           ieatdump mf=(l,asm_ieatdump)\n                                             3897+*                  MACDATE -03/03/06-<1>\n                                             3898+              PUSH  PRINT                                               02-IEATDUMP\n                                             3899+                  PRINT ON                                              02-IEATDUMP\n                         000003F8            3900+M00M0018 EQU   ASM_IEATDUMP       ++ IEATDUMP NAME                      02-IEATDUMP\n 000003F8                                    3901+ASM_IEATDUMP DS 0D                ++ IEATDUMP PARM LIST                 02-IEATDUMP\n 000003F8                                    3902+ASM_IEATDUMP_XPLISTNAME DS CL4    ++ CONSTANT  XPLISTNAME               02-IEATDUMP\n 000003FC                                    3903+ASM_IEATDUMP_XWORD1 DS CL4        ++ FIELD_LABEL  XWORD1                02-IEATDUMP\n 00000400                                    3904+ASM_IEATDUMP_XSDATA1 DS BL.8      ++ FIELD_LABEL                        02-IEATDUMP\n                         00000080            3905+ASM_IEATDUMP_XSDATA_DEFS EQU B'10000000'                               X02-IEATDUMP\n                                                 +                                  ++ XSDATA.DEFS KEYWORD\n                         00000040            3906+ASM_IEATDUMP_XSDATA_ALLNUC EQU B'01000000'                             X02-IEATDUMP\n                                                 +                                  ++ XSDATA.ALLNUC KEYWORD\n                         00000020            3907+ASM_IEATDUMP_XSDATA_CSA EQU B'00100000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.CSA KEYWORD\n                         00000010            3908+ASM_IEATDUMP_XSDATA_GRSQ EQU B'00010000'                               X02-IEATDUMP\n                                                 +                                  ++ XSDATA.GRSQ KEYWORD\n                         00000008            3909+ASM_IEATDUMP_XSDATA_LPA EQU B'00001000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.LPA KEYWORD\n                         00000004            3910+ASM_IEATDUMP_XSDATA_LSQA EQU B'00000100'                               X02-IEATDUMP\n                                                 +                                  ++ XSDATA.LSQA KEYWORD\n                         00000002            3911+ASM_IEATDUMP_XSDATA_NUC EQU B'00000010'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.NUC KEYWORD\n                         00000001            3912+ASM_IEATDUMP_XSDATA_RGN EQU B'00000001'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.RGN KEYWORD\n 00000401                                    3913+ASM_IEATDUMP_XSDATA2 DS BL.8      ++ FIELD_LABEL                        02-IEATDUMP\n                         00000080            3914+ASM_IEATDUMP_XSDATA_SQA EQU B'10000000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.SQA KEYWORD\n                         00000040            3915+ASM_IEATDUMP_XSDATA_SUM EQU B'01000000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.SUM KEYWORD\n                         00000020            3916+ASM_IEATDUMP_XSDATA_SWA EQU B'00100000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.SWA KEYWORD\n                         00000010            3917+ASM_IEATDUMP_XSDATA_TRT EQU B'00010000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.TRT KEYWORD\n                         00000008            3918+ASM_IEATDUMP_XSDATA_PSA EQU B'00001000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.PSA KEYWORD\n1          asmif asm interfcae module                                                                           Page   11\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000402                                    3919+ASM_IEATDUMP_XFLAGS1 DS BL.8      ++ FIELD_LABEL                        02-IEATDUMP\n                         00000040            3920+ASM_IEATDUMP_KEYUSED_DDNAME EQU B'01000000'                            X02-IEATDUMP\n                                                 +                                  ++ KEYUSED.DDNAME KEYWORD\n 00000403                                    3921+ASM_IEATDUMP_XRSV0002 DS CL1      ++ RESERVED  XRSV0002                 02-IEATDUMP\n 00000404                                    3922+ASM_IEATDUMP_XDSP_STOKEN DS CL8   ++   XDSP_STOKEN                      02-IEATDUMP\n 0000040C                                    3923+ASM_IEATDUMP_XDSP_ORIGIN DS A     ++   XDSP_ORIGIN                      02-IEATDUMP\n 00000410                                    3924+ASM_IEATDUMP_XDSP_RECORDS@ DS A   ++   XDSP_RECORDS@                    02-IEATDUMP\n 00000414                                    3925+ASM_IEATDUMP_XDDNAME DS CL8       ++   XDDNAME                          02-IEATDUMP\n 0000041C                                    3926+ASM_IEATDUMP_XDSNAD DS A          ++   XDSNAD                           02-IEATDUMP\n 00000420                                    3927+ASM_IEATDUMP_XDSN_ALET DS F       ++  ALET XDSN                         02-IEATDUMP\n 00000424                                    3928+ASM_IEATDUMP_XHDRAD DS A          ++   XHDRAD                           02-IEATDUMP\n 00000428                                    3929+ASM_IEATDUMP_XHDR_ALET DS F       ++  ALET XHDR                         02-IEATDUMP\n 0000042C                                    3930+ASM_IEATDUMP_XIDXAD DS A          ++   XIDXAD                           02-IEATDUMP\n 00000430                                    3931+ASM_IEATDUMP_XIDX_ALET DS F       ++  ALET XIDX                         02-IEATDUMP\n 00000434                                    3932+ASM_IEATDUMP_XSYMRECAD DS A       ++   XSYMRECAD                        02-IEATDUMP\n 00000438                                    3933+ASM_IEATDUMP_XSYMREC_ALET DS F    ++  ALET XSYMREC                      02-IEATDUMP\n 0000043C                                    3934+ASM_IEATDUMP_XINTOKENAD DS A      ++   XINTOKENAD                       02-IEATDUMP\n 00000440                                    3935+ASM_IEATDUMP_XINTOKEN_ALET DS F   ++  ALET XINTOKEN                     02-IEATDUMP\n 00000444                                    3936+ASM_IEATDUMP_XREMOTEAD DS A       ++   XREMOTEAD                        02-IEATDUMP\n 00000448                                    3937+ASM_IEATDUMP_XREMOTE_ALET DS F    ++  ALET XREMOTE                      02-IEATDUMP\n 0000044C                                    3938+ASM_IEATDUMP_XPROBDESCAD DS A     ++   XPROBDESCAD                      02-IEATDUMP\n 00000450                                    3939+ASM_IEATDUMP_XPROBDESC_ALET DS F  ++  ALET XPROBDESC                    02-IEATDUMP\n 00000454                                    3940+ASM_IEATDUMP_XLISTAD DS A         ++   XLISTAD                          02-IEATDUMP\n 00000458                                    3941+ASM_IEATDUMP_XLIST_ALET DS F      ++  ALET XLIST                        02-IEATDUMP\n 0000045C                                    3942+ASM_IEATDUMP_XSUBPLSTAD DS A      ++   XSUBPLSTAD                       02-IEATDUMP\n 00000460                                    3943+ASM_IEATDUMP_XSUBPLST_ALET DS F   ++  ALET XSUBPLST                     02-IEATDUMP\n 00000464                                    3944+ASM_IEATDUMP_XDSPLISTAD DS A      ++   XDSPLISTAD                       02-IEATDUMP\n 00000468                                    3945+ASM_IEATDUMP_XDSPLIST_ALET DS F   ++  ALET XDSPLIST                     02-IEATDUMP\n 0000046C                                    3946+ASM_IEATDUMP_XECBAD DS A          ++   XECBAD                           02-IEATDUMP\n 00000470                                    3947+ASM_IEATDUMP_XECB_ALET DS F       ++  ALET XECB                         02-IEATDUMP\n                         00000474            3948+ASM_IEATDUMP_PL_END EQU *         ++ END OF BASE PLIST                  02-IEATDUMP\n 00000474                00000474 000003FC   3949+         ORG   ASM_IEATDUMP+4                                           02-IEATDUMP\n 000003FC                                    3950+ASM_IEATDUMP_XPLISTLEN DS XL2     ++ INPUT  XPLISTLEN                   02-IEATDUMP\n 000003FE                                    3951+ASM_IEATDUMP_XVERSION DS XL1      ++ INPUT XVERSION                     02-IEATDUMP\n 000003FF                                    3952+ASM_IEATDUMP_XRSV0001 DS CL01     ++ RESERVED  XRSV0001                 02-IEATDUMP\n 00000400                00000400 0000041C   3953+         ORG   ASM_IEATDUMP+36                                          02-IEATDUMP\n 0000041C                                    3954+ASM_IEATDUMP_XDSN_ADDR DS A       ++  ADDR XDSN                         02-IEATDUMP\n 00000420                00000420 00000424   3955+         ORG   ASM_IEATDUMP+44                                          02-IEATDUMP\n 00000424                                    3956+ASM_IEATDUMP_XHDR_ADDR DS A       ++  ADDR XHDR                         02-IEATDUMP\n 00000428                00000428 0000042C   3957+         ORG   ASM_IEATDUMP+52                                          02-IEATDUMP\n 0000042C                                    3958+ASM_IEATDUMP_XIDX_ADDR DS A       ++  ADDR XIDX                         02-IEATDUMP\n 00000430                00000430 00000434   3959+         ORG   ASM_IEATDUMP+60                                          02-IEATDUMP\n 00000434                                    3960+ASM_IEATDUMP_XSYMREC_ADDR DS A    ++  ADDR XSYMREC                      02-IEATDUMP\n 00000438                00000438 0000043C   3961+         ORG   ASM_IEATDUMP+68                                          02-IEATDUMP\n 0000043C                                    3962+ASM_IEATDUMP_XINTOKEN_ADDR DS A   ++  ADDR XINTOKEN                     02-IEATDUMP\n 00000440                00000440 00000444   3963+         ORG   ASM_IEATDUMP+76                                          02-IEATDUMP\n 00000444                                    3964+ASM_IEATDUMP_XREMOTE_ADDR DS A    ++  ADDR XREMOTE                      02-IEATDUMP\n 00000448                00000448 0000044C   3965+         ORG   ASM_IEATDUMP+84                                          02-IEATDUMP\n 0000044C                                    3966+ASM_IEATDUMP_XPROBDESC_ADDR DS A  ++  ADDR XPROBDESC                    02-IEATDUMP\n 00000450                00000450 00000454   3967+         ORG   ASM_IEATDUMP+92                                          02-IEATDUMP\n 00000454                                    3968+ASM_IEATDUMP_XLIST_ADDR DS A      ++  ADDR XLIST                        02-IEATDUMP\n 00000458                00000458 0000045C   3969+         ORG   ASM_IEATDUMP+100                                         02-IEATDUMP\n 0000045C                                    3970+ASM_IEATDUMP_XSUBPLST_ADDR DS A   ++  ADDR XSUBPLST                     02-IEATDUMP\n 00000460                00000460 00000464   3971+         ORG   ASM_IEATDUMP+108                                         02-IEATDUMP\n 00000464                                    3972+ASM_IEATDUMP_XDSPLIST_ADDR DS A   ++  ADDR XDSPLIST                     02-IEATDUMP\n1          asmif asm interfcae module                                                                           Page   12\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000468                00000468 0000046C   3973+         ORG   ASM_IEATDUMP+116                                         02-IEATDUMP\n 0000046C                                    3974+ASM_IEATDUMP_XECB_ADDR DS A       ++  ADDR XECB                         02-IEATDUMP\n 00000470                00000470 00000474   3975+         ORG   ASM_IEATDUMP_PL_END RESET LOCATION COUNTER               02-IEATDUMP\n                         0000007C            3976+ASM_IEATDUMPL EQU *-ASM_IEATDUMP  ++ LENGTH OF PLIST                    02-IEATDUMP\n0                                            3978+         POP   PRINT                                                    02-IEATDUMP\n                                             3979+*                                            IEATDUMP-1\n000000474 00                                 3981+ASM_TDUMP_NAME DC    AL1(0)        name length                          01-$$ASMIF\n 00000475 4040404040404040                   3982+               DC    CL100' '      name                                 01-$$ASMIF\n 000004D9 00                                 3983+ASM_TDUMP_DESC DC    AL1(0)        desc length                          01-$$ASMIF\n 000004DA 4040404040404040                   3984+               DC    CL100' '      desc                                 01-$$ASMIF\n                                             3985+* 18/11/05 LOGGER support\n 0000053E 4040404040404040                   3986+ASM_STREAMNAME       DC CL26' '    stream name                          01-$$ASMIF\n 00000558 0000000000000000                   3987+ASM_STREAMTOKEN      DC XL16'00'   stream token                         01-$$ASMIF\n 00000568 00000000                           3988+ASM_LOGGER_LENGTH    DC A(0)                                            01-$$ASMIF\n 0000056C 00000000                           3989+ASM_LOGGER_BUFFER    DC A(0)      logger buffer pointer                 01-$$ASMIF\n 00000570 00000000                           3990+ASM_LOGGER_BUFFLEN   DC A(0)      buffer length                         01-$$ASMIF\n 00000574 00000000                           3991+ASM_LOGGER_BUFFER_OFFSET DC A(0)  actual buffer offset                  01-$$ASMIF\n 00000578 00000000                           3992+ASM_LOGGER_BROWSE_TOKEN  DC  A(0) browse token                          01-$$ASMIF\n 0000057C 00000000                           3993+ASM_LOGGER_DIRECTION     DC  A(0) browse direction 2-3                  01-$$ASMIF\n                                             3994+*       ixgconn  mf=(l,asm_ixgconn)\n                                             3996+*                   MACDATE -09/11/24-<2>\n                                             3997+              PUSH  PRINT                                               02-IXGCONN\n                                             3998+                   PRINT ON                                             02-IXGCONN\n                         00000580            3999+M00M0019 EQU   ASM_IXGCONN        ++ IXGCONN NAME                       02-IXGCONN\n 00000580                                    4000+ASM_IXGCONN DS 0D                 ++ IXGCONN PARM LIST                  02-IXGCONN\n 00000580                                    4001+ASM_IXGCONN_XPLISTPTR DS A        ++ INPUT                              02-IXGCONN\n 00000584                                    4002+ASM_IXGCONN_XVERSION DS XL1       ++ INPUT XVERSION                     02-IXGCONN\n 00000585                                    4003+ASM_IXGCONN_XIXGFLAGS DS BL.8     ++ FIELD_LABEL                        02-IXGCONN\n                         00000080            4004+ASM_IXGCONN_XREQUEST_CONNECT EQU B'10000000'                           X02-IXGCONN\n                                                 +                                  ++ XREQUEST.CONNECT KEYWORD\n                         00000040            4005+ASM_IXGCONN_XAUTH_READ EQU B'01000000'                                 X02-IXGCONN\n                                                 +                                  ++ XAUTH.READ KEYWORD\n                         00000020            4006+ASM_IXGCONN_XAUTH_WRITE EQU B'00100000'                                X02-IXGCONN\n                                                 +                                  ++ XAUTH.WRITE KEYWORD\n                         00000010            4007+ASM_IXGCONN_XIMPORTCONNECT_YES EQU B'00010000'                         X02-IXGCONN\n                                                 +                                  ++ XIMPORTCONNECT.YES KEYWORD\n                         00000008            4008+ASM_IXGCONN_XRMEVENTS_LBWRITE EQU B'00001000'                          X02-IXGCONN\n                                                 +                                  ++ XRMEVENTS.LBWRITE KEYWORD\n                         00000004            4009+ASM_IXGCONN_XRMEVENTS_LBDELETE EQU B'00000100'                         X02-IXGCONN\n                                                 +                                  ++ XRMEVENTS.LBDELETE KEYWORD\n 00000586                                    4010+ASM_IXGCONN_XKEYUSEDFLAGS DS BL.8 ++ FIELD_LABEL                        02-IXGCONN\n                         00000080            4011+ASM_IXGCONN_KEYUSED_USERDATA EQU B'10000000'                           X02-IXGCONN\n                                                 +                                  ++ KEYUSED.USERDATA KEYWORD\n                         00000040            4012+ASM_IXGCONN_KEYUSED_AVGBUFSIZE EQU B'01000000'                         X02-IXGCONN\n                                                 +                                  ++ KEYUSED.AVGBUFSIZE KEYWORD\n                         00000020            4013+ASM_IXGCONN_KEYUSED_MAXBUFSIZE EQU B'00100000'                         X02-IXGCONN\n                                                 +                                  ++ KEYUSED.MAXBUFSIZE KEYWORD\n                         00000010            4014+ASM_IXGCONN_KEYUSED_ELEMENTSIZE EQU B'00010000'                        X02-IXGCONN\n                                                 +                                  ++ KEYUSED.ELEMENTSIZE KEYWORD\n                         00000008            4015+ASM_IXGCONN_KEYUSED_STRUCTNAME EQU B'00001000'                         X02-IXGCONN\n                                                 +                                  ++ KEYUSED.STRUCTNAME KEYWORD\n                         00000004            4016+ASM_IXGCONN_KEYUSED_COMPLETEEXIT EQU B'00000100'                       X02-IXGCONN\n                                                 +                                  ++ KEYUSED.COMPLETEEXIT KEYWORD\n1          asmif asm interfcae module                                                                           Page   13\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000002            4017+ASM_IXGCONN_KEYUSED_RMNAME EQU B'00000010'                             X02-IXGCONN\n                                                 +                                  ++ KEYUSED.RMNAME KEYWORD\n                         00000001            4018+ASM_IXGCONN_KEYUSED_LSVERSION EQU B'00000001'                          X02-IXGCONN\n                                                 +                                  ++ KEYUSED.LSVERSION KEYWORD\n 00000587                                    4019+ASM_IXGCONN_XFORMATLVL DS XL1     ++ CONSTANT                           02-IXGCONN\n 00000588                                    4020+ASM_IXGCONN_XANSAREA DS A         ++                                    02-IXGCONN\n 0000058C                                    4021+ASM_IXGCONN_XCOMPLETEEXIT DS A    ++                                    02-IXGCONN\n 00000590                                    4022+ASM_IXGCONN_XRMNAME DS CL8        ++                                    02-IXGCONN\n 00000598                                    4023+ASM_IXGCONN_XRMEXIT DS A          ++                                    02-IXGCONN\n 0000059C                                    4024+ASM_IXGCONN_XRMDATA DS CL8        ++                                    02-IXGCONN\n 000005A4                                    4025+ASM_IXGCONN_XLSVERSION DS BL.64   ++                                    02-IXGCONN\n 000005AC                                    4026+ASM_IXGCONN_XIXGFLAGS2 DS BL.8    ++ FIELD_LABEL                        02-IXGCONN\n                         00000080            4027+ASM_IXGCONN_KEYUSED_DIAG EQU B'10000000'                               X02-IXGCONN\n                                                 +                                  ++ KEYUSED.DIAG KEYWORD\n                         00000040            4028+ASM_IXGCONN_XDIAG_NO_DIAG EQU B'01000000'                              X02-IXGCONN\n                                                 +                                  ++ XDIAG.NO_DIAG KEYWORD\n                         00000020            4029+ASM_IXGCONN_XDIAG_YES EQU B'00100000'                                  X02-IXGCONN\n                                                 +                                  ++ XDIAG.YES KEYWORD\n 000005AD                                    4030+ASM_IXGCONN_XRSV0002 DS CL3       ++ RESERVED                           02-IXGCONN\n 000005B0                                    4031+ASM_IXGCONN_XANSLEN DS F          ++                                    02-IXGCONN\n 000005B4                                    4032+ASM_IXGCONN_XSTRUCTNAME DS CL16   ++                                    02-IXGCONN\n 000005C4                                    4033+ASM_IXGCONN_XAVGBUFSIZE DS F      ++                                    02-IXGCONN\n 000005C8                                    4034+ASM_IXGCONN_XMAXBUFSIZE DS F      ++                                    02-IXGCONN\n 000005CC                                    4035+ASM_IXGCONN_XELEMENTSIZE DS F     ++                                    02-IXGCONN\n 000005D0                                    4036+ASM_IXGCONN_XUSERDATA DS CL64     ++                                    02-IXGCONN\n 00000610                                    4037+ASM_IXGCONN_XSTREAMNAME DS CL26   ++                                    02-IXGCONN\n 0000062A                                    4038+ASM_IXGCONN_XSTREAMTOKEN DS CL16  ++                                    02-IXGCONN\n                         000000BA            4039+ASM_IXGCONNL EQU *-ASM_IXGCONN    ++ LENGTH OF PLIST                    02-IXGCONN\n0                                            4041+         POP   PRINT                                                    02-IXGCONN\n                                             4042+*                                            IXGCONN-2\n0                                            4044+*       ixgwrite mf=(l,asm_ixgwrite)\n                                             4046+*                     MACDATE -09/11/24-<2>\n                                             4047+              PUSH  PRINT                                               02-IXGWRITE\n                                             4048+                     PRINT ON                                           02-IXGWRITE\n                         00000640            4049+M00M0020 EQU   ASM_IXGWRITE       ++ IXGWRITE NAME                      02-IXGWRITE\n 00000640                                    4050+ASM_IXGWRITE DS 0D                ++ IXGWRITE PARM LIST                 02-IXGWRITE\n 00000640                                    4051+ASM_IXGWRITE_XVERSION DS XL1      ++ INPUT XVERSION                     02-IXGWRITE\n 00000641                                    4052+ASM_IXGWRITE_XIXGFLAGS DS BL.8    ++ FIELD_LABEL                        02-IXGWRITE\n                         00000080            4053+ASM_IXGWRITE_XMODE_SYNC EQU B'10000000'                                X02-IXGWRITE\n                                                 +                                  ++ XMODE.SYNC KEYWORD\n                         00000040            4054+ASM_IXGWRITE_KEYUSED_BUFFKEY EQU B'01000000'                           X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.BUFFKEY KEYWORD\n                         00000020            4055+ASM_IXGWRITE_KEYUSED_TIMESTAMP EQU B'00100000'                         X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.TIMESTAMP KEYWORD\n                         00000010            4056+ASM_IXGWRITE_XMODE_SYNCEXIT EQU B'00010000'                            X02-IXGWRITE\n                                                 +                                  ++ XMODE.SYNCEXIT KEYWORD\n                         00000008            4057+ASM_IXGWRITE_XMODE_ASYNCNORESPONSE EQU B'00001000'                     X02-IXGWRITE\n                                                 +                                  ++ XMODE.ASYNCNORESPONSE KEYWORD\n                         00000004            4058+ASM_IXGWRITE_KEYUSED_RETBLOCKID EQU B'00000100'                        X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.RETBLOCKID KEYWORD\n                         00000002            4059+ASM_IXGWRITE_MACUSED_IXGIMPRT EQU B'00000010'                          X02-IXGWRITE\n                                                 +                                  ++ MACUSED.IXGIMPRT KEYWORD\n1          asmif asm interfcae module                                                                           Page   14\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000001            4060+ASM_IXGWRITE_KEYUSED_BUFFER64 EQU B'00000001'                          X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.BUFFER64 KEYWORD\n 00000642                                    4061+ASM_IXGWRITE_XRSV0001 DS CL2      ++ RESERVED                           02-IXGWRITE\n 00000644                                    4062+ASM_IXGWRITE_XPLISTPTR DS A       ++ INPUT                              02-IXGWRITE\n 00000648                                    4063+ASM_IXGWRITE_XRSNCODE DS F        ++                                    02-IXGWRITE\n 0000064C                                    4064+ASM_IXGWRITE_XBUFFER_ADDR DS A    ++  ADDR                              02-IXGWRITE\n 00000650                                    4065+ASM_IXGWRITE_XBLOCKLEN DS F       ++                                    02-IXGWRITE\n 00000654                                    4066+ASM_IXGWRITE_XBUFFALET DS F       ++                                    02-IXGWRITE\n 00000658                                    4067+ASM_IXGWRITE_XBUFFKEY DS F        ++                                    02-IXGWRITE\n 0000065C                                    4068+ASM_IXGWRITE_XECB_ADDR DS A       ++  ADDR                              02-IXGWRITE\n 00000660                                    4069+ASM_IXGWRITE_XANSAREA DS A        ++                                    02-IXGWRITE\n 00000664                                    4070+ASM_IXGWRITE_XANSLEN DS F         ++                                    02-IXGWRITE\n 00000668                                    4071+ASM_IXGWRITE_XRETBLOCKID_ADDR DS A                                     X02-IXGWRITE\n                                                 +                                  ++  ADDR\n 0000066C                                    4072+ASM_IXGWRITE_XTIMESTAMP_ADDR DS A ++  ADDR                              02-IXGWRITE\n 00000670                                    4073+ASM_IXGWRITE_XSTREAMTOKEN DS CL16 ++                                    02-IXGWRITE\n                         00000680            4074+ASM_IXGWRITE_PL_END EQU *         ++ END OF BASE PLIST                  02-IXGWRITE\n                         00000040            4075+ASM_IXGWRITEL EQU *-ASM_IXGWRITE  ++ LENGTH OF PLIST                    02-IXGWRITE\n0                                            4077+         POP   PRINT                                                    02-IXGWRITE\n                                             4078+*                                            IXGWRITE-2\n0                                            4080+*       ixgbrwse mf=(l,asm_ixgbrwse)\n                                             4082+*                     MACDATE -09/11/24-<3>\n                                             4083+              PUSH  PRINT                                               02-IXGBRWSE\n                                             4084+                     PRINT ON                                           02-IXGBRWSE\n                         00000680            4085+M00M0021 EQU   ASM_IXGBRWSE       ++ IXGBRWSE NAME                      02-IXGBRWSE\n 00000680                                    4086+ASM_IXGBRWSE DS 0D                ++ IXGBRWSE PARM LIST                 02-IXGBRWSE\n 00000680                                    4087+ASM_IXGBRWSE_XVERSION DS XL1      ++ INPUT XVERSION                     02-IXGBRWSE\n 00000681                                    4088+ASM_IXGBRWSE_XREQUEST DS XL1      ++  XREQUEST                          02-IXGBRWSE\n                         00000001            4089+ASM_IXGBRWSE_XREQUEST_START EQU 1 ++ XREQUEST.START KEYWORD             02-IXGBRWSE\n                         00000002            4090+ASM_IXGBRWSE_XREQUEST_READCURSOR EQU 2                                 X02-IXGBRWSE\n                                                 +                                  ++ XREQUEST.READCURSOR KEYWORD\n                         00000003            4091+ASM_IXGBRWSE_XREQUEST_READBLOCK EQU 3                                  X02-IXGBRWSE\n                                                 +                                  ++ XREQUEST.READBLOCK KEYWORD\n                         00000004            4092+ASM_IXGBRWSE_XREQUEST_RESET EQU 4 ++ XREQUEST.RESET KEYWORD             02-IXGBRWSE\n                         00000005            4093+ASM_IXGBRWSE_XREQUEST_END EQU 5   ++ XREQUEST.END KEYWORD               02-IXGBRWSE\n 00000682                                    4094+ASM_IXGBRWSE_XIXGFLAGS DS BL.16   ++ FIELD_LABEL                        02-IXGBRWSE\n                         00008000            4095+ASM_IXGBRWSE_XDIRECTION_YOUNGTOOLD EQU B'1000000000000000'             X02-IXGBRWSE\n                                                 +                                   ++ XDIRECTION.YOUNGTOOLD KEYWORD\n                         00004000            4096+ASM_IXGBRWSE_XMODE_SYNC EQU B'0100000000000000'                        X02-IXGBRWSE\n                                                 +                                   ++ XMODE.SYNC KEYWORD\n                         00002000            4097+ASM_IXGBRWSE_XGMT_YES EQU B'0010000000000000'                          X02-IXGBRWSE\n                                                 +                                   ++ XGMT.YES KEYWORD\n                         00001000            4098+ASM_IXGBRWSE_KEYUSED_STARTBLOCKID EQU B'0001000000000000'              X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.STARTBLOCKID KEYWORD\n                         00000800            4099+ASM_IXGBRWSE_KEYUSED_OLDEST EQU B'0000100000000000'                    X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.OLDEST KEYWORD\n                         00000400            4100+ASM_IXGBRWSE_KEYUSED_YOUNGEST EQU B'0000010000000000'                  X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.YOUNGEST KEYWORD\n                         00000200            4101+ASM_IXGBRWSE_KEYUSED_SEARCH EQU B'0000001000000000'                    X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.SEARCH KEYWORD\n                         00000100            4102+ASM_IXGBRWSE_KEYUSED_BUFFKEY EQU B'0000000100000000'                   X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.BUFFKEY KEYWORD\n1          asmif asm interfcae module                                                                           Page   15\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000080            4103+ASM_IXGBRWSE_XPOSITION_YOUNGEST EQU B'0000000010000000'                X02-IXGBRWSE\n                                                 +                                   ++ XPOSITION.YOUNGEST KEYWORD\n                         00000040            4104+ASM_IXGBRWSE_XMODE_SYNCEXIT EQU B'0000000001000000'                    X02-IXGBRWSE\n                                                 +                                   ++ XMODE.SYNCEXIT KEYWORD\n                         00000020            4105+ASM_IXGBRWSE_XVIEW_ACTIVE EQU B'0000000000100000'                      X02-IXGBRWSE\n                                                 +                                   ++ XVIEW.ACTIVE KEYWORD\n                         00000010            4106+ASM_IXGBRWSE_XVIEW_ALL EQU B'0000000000010000'                         X02-IXGBRWSE\n                                                 +                                   ++ XVIEW.ALL KEYWORD\n                         00000008            4107+ASM_IXGBRWSE_KEYUSED_VIEW EQU B'0000000000001000'                      X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.VIEW KEYWORD\n                         00000004            4108+ASM_IXGBRWSE_KEYUSED_MULTIBLOCK EQU B'0000000000000100'                X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.MULTIBLOCK KEYWORD\n                         00000002            4109+ASM_IXGBRWSE_XMULTIBLOCK_YES EQU B'0000000000000010'                   X02-IXGBRWSE\n                                                 +                                   ++ XMULTIBLOCK.YES KEYWORD\n                         00000001            4110+ASM_IXGBRWSE_KEYUSED_BUFFER64 EQU B'0000000000000001'                  X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.BUFFER64 KEYWORD\n 00000684                                    4111+ASM_IXGBRWSE_XPLISTPTR DS A       ++ INPUT                              02-IXGBRWSE\n 00000688                                    4112+ASM_IXGBRWSE_XBUFFER_ADDR DS A    ++  ADDR                              02-IXGBRWSE\n 0000068C                                    4113+ASM_IXGBRWSE_XBUFFKEY DS F        ++                                    02-IXGBRWSE\n 00000690                                    4114+ASM_IXGBRWSE_XBUFFLEN DS F        ++                                    02-IXGBRWSE\n 00000694                                    4115+ASM_IXGBRWSE_XBUFFALET DS F       ++                                    02-IXGBRWSE\n 00000698                                    4116+ASM_IXGBRWSE_XBLKSIZE_ADDR DS A   ++  ADDR                              02-IXGBRWSE\n 0000069C                                    4117+ASM_IXGBRWSE_XECB_ADDR DS A       ++  ADDR                              02-IXGBRWSE\n 000006A0                                    4118+ASM_IXGBRWSE_XANSAREA DS A        ++                                    02-IXGBRWSE\n 000006A4                                    4119+ASM_IXGBRWSE_XANSLEN DS F         ++                                    02-IXGBRWSE\n 000006A8                                    4120+ASM_IXGBRWSE_XSTREAMTOKEN DS CL16 ++                                    02-IXGBRWSE\n 000006B8                                    4121+ASM_IXGBRWSE_XBROWSETOKEN_ADDR DS A                                    X02-IXGBRWSE\n                                                 +                                  ++  ADDR\n 000006BC                                    4122+ASM_IXGBRWSE_XSEARCH DS BL.64     ++                                    02-IXGBRWSE\n 000006C4                                    4123+ASM_IXGBRWSE_XRETBLOCKID_ADDR DS A                                     X02-IXGBRWSE\n                                                 +                                  ++  ADDR\n 000006C8                                    4124+ASM_IXGBRWSE_XSTARTBLOCKID DS CL8 ++                                    02-IXGBRWSE\n 000006D0                                    4125+ASM_IXGBRWSE_XTIMESTAMP_ADDR DS A ++  ADDR                              02-IXGBRWSE\n 000006D4                                    4126+ASM_IXGBRWSE_XBLOCKID DS CL8      ++                                    02-IXGBRWSE\n                         000006DC            4127+ASM_IXGBRWSE_PL_END EQU *         ++ END OF BASE PLIST                  02-IXGBRWSE\n                         0000005C            4128+ASM_IXGBRWSEL EQU *-ASM_IXGBRWSE  ++ LENGTH OF PLIST                    02-IXGBRWSE\n0                                            4130+         POP   PRINT                                                    02-IXGBRWSE\n                                             4131+*                                            IXGBRWSE-3\n0                                            4133+* 16/07/10 LOGGER browse TIME search\n 000006DC 0000000000000000                   4134+ASM_LOGGER_CONVVAL DC 16X'00'                                           01-$$ASMIF\n 000006EC 0000000000000000                   4135+ASM_LOGGER_STCK    DC 16X'00'                                           01-$$ASMIF\n                                             4136+*sm_logger_convtod convtod mf=l\n                                             4138+*        MACDATE  05/30/98                                         @L1C\n 000006FC                                    4140+ASM_LOGGER_CONVTOD DS 0F                                                02-CONVTOD\n 000006FC                                    4141+         DS    XL32                                                     02-CONVTOD\n                                             4142+* 16/07/10 LOGGER browse TIME search\n                                             4143+* 19/11/08 SRB callback\n                                             4144+*       IEAMSCHD MF=(L,ASM_IEAMSCHD)\n                                             4146+*                   MACDATE -12/15/09-<2>\n                                             4147+              PUSH  PRINT                                               02-IEAMSCHD\n                                             4148+                   PRINT ON                                             02-IEAMSCHD\n                         00000720            4149+M00M0024 EQU   ASM_IEAMSCHD       ++ IEAMSCHD NAME                      02-IEAMSCHD\n 00000720                                    4150+ASM_IEAMSCHD DS 0D                ++ IEAMSCHD PARM LIST                 02-IEAMSCHD\n1          asmif asm interfcae module                                                                           Page   16\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000720                                    4151+ASM_IEAMSCHD_XVERSION DS XL1      ++ INPUT XVERSION                     02-IEAMSCHD\n 00000721                                    4152+ASM_IEAMSCHD_XFLAG1 DS BL.8       ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000008            4153+ASM_IEAMSCHD_XENV_STOKEN EQU B'00001000'                               X02-IEAMSCHD\n                                                 +                                  ++ XENV.STOKEN KEYWORD\n                         00000004            4154+ASM_IEAMSCHD_XENV_FULLXM EQU B'00000100'                               X02-IEAMSCHD\n                                                 +                                  ++ XENV.FULLXM KEYWORD\n                         00000002            4155+ASM_IEAMSCHD_XENV_PRIMARY EQU B'00000010'                              X02-IEAMSCHD\n                                                 +                                  ++ XENV.PRIMARY KEYWORD\n                         00000001            4156+ASM_IEAMSCHD_XENV_HOME EQU B'00000001'                                 X02-IEAMSCHD\n                                                 +                                  ++ XENV.HOME KEYWORD\n 00000722                                    4157+ASM_IEAMSCHD_XFLAG2 DS BL.8       ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000020            4158+ASM_IEAMSCHD_KEYUSED_DUALPOOLTOKEN EQU B'00100000'                     X02-IEAMSCHD\n                                                 +                                  ++ KEYUSED.DUALPOOLTOKEN KEYWORD\n                         00000010            4159+ASM_IEAMSCHD_XSYNCH_YES EQU B'00010000'                                X02-IEAMSCHD\n                                                 +                                  ++ XSYNCH.YES KEYWORD\n                         00000008            4160+ASM_IEAMSCHD_KEYUSED_KEYVALUE EQU B'00001000'                          X02-IEAMSCHD\n                                                 +                                  ++ KEYUSED.KEYVALUE KEYWORD\n                         00000004            4161+ASM_IEAMSCHD_XLLOCK_YES EQU B'00000100'                                X02-IEAMSCHD\n                                                 +                                  ++ XLLOCK.YES KEYWORD\n                         00000002            4162+ASM_IEAMSCHD_XFEATURE_CPMASK EQU B'00000010'                           X02-IEAMSCHD\n                                                 +                                  ++ XFEATURE.CPMASK KEYWORD\n                         00000001            4163+ASM_IEAMSCHD_XFEATURE_CRYPTO EQU B'00000001'                           X02-IEAMSCHD\n                                                 +                                  ++ XFEATURE.CRYPTO KEYWORD\n 00000723                                    4164+ASM_IEAMSCHD_XFLAG3 DS BL.8       ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000020            4165+ASM_IEAMSCHD_XPRIORITY_CLIENT EQU B'00100000'                          X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.CLIENT KEYWORD\n                         00000010            4166+ASM_IEAMSCHD_XPRIORITY_ENCLAVE EQU B'00010000'                         X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.ENCLAVE KEYWORD\n                         00000008            4167+ASM_IEAMSCHD_XPRIORITY_PREEMPT EQU B'00001000'                         X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.PREEMPT KEYWORD\n                         00000004            4168+ASM_IEAMSCHD_XPRIORITY_CURRENT EQU B'00000100'                         X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.CURRENT KEYWORD\n                         00000002            4169+ASM_IEAMSCHD_XPRIORITY_GLOBAL EQU B'00000010'                          X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.GLOBAL KEYWORD\n                         00000001            4170+ASM_IEAMSCHD_XPRIORITY_LOCAL EQU B'00000001'                           X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.LOCAL KEYWORD\n 00000724                                    4171+ASM_IEAMSCHD_XEPADDR DS A         ++                                    02-IEAMSCHD\n 00000728                                    4172+ASM_IEAMSCHD_XTARGETSTOKEN DS BL.64                                    X02-IEAMSCHD\n                                                 +                                  ++\n 00000730                                    4173+ASM_IEAMSCHD_XENCLAVETOKEN DS CL8 ++                                    02-IEAMSCHD\n 00000738                                    4174+ASM_IEAMSCHD_XMINORPRIORITY DS BL.8                                    X02-IEAMSCHD\n                                                 +                                  ++\n 00000739                                    4175+ASM_IEAMSCHD_XKEYVALUE DS BL.8    ++                                    02-IEAMSCHD\n 0000073A                                    4176+ASM_IEAMSCHD_XCPUMASK DS BL.16    ++                                    02-IEAMSCHD\n 0000073C                                    4177+ASM_IEAMSCHD_XPARM DS F           ++                                    02-IEAMSCHD\n 00000740                                    4178+ASM_IEAMSCHD_XFRRADDR DS A        ++                                    02-IEAMSCHD\n 00000744                                    4179+ASM_IEAMSCHD_XRMTRADDR DS A       ++                                    02-IEAMSCHD\n 00000748                                    4180+ASM_IEAMSCHD_XPURGESTOKEN DS BL.64                                     X02-IEAMSCHD\n                                                 +                                  ++\n 00000750                                    4181+ASM_IEAMSCHD_XPTCBADDR DS A       ++                                    02-IEAMSCHD\n 00000754                                    4182+ASM_IEAMSCHD_XCLIENTSTOKEN DS BL.64                                    X02-IEAMSCHD\n                                                 +                                  ++\n                         0000075C            4183+ASM_IEAMSCHD_PL_END EQU *         ++ END OF BASE PLIST                  02-IEAMSCHD\n 0000075C                0000075C 00000740   4184+         ORG   ASM_IEAMSCHD+32                                          02-IEAMSCHD\n 00000740                                    4185+ASM_IEAMSCHD_XRSV0001 DS CL3      ++ RESERVED                           02-IEAMSCHD\n1          asmif asm interfcae module                                                                           Page   17\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000743                                    4186+ASM_IEAMSCHD_XFRRFLAG DS BL.8     ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000001            4187+ASM_IEAMSCHD_XSDWALOC31_YES EQU B'00000001'                            X02-IEAMSCHD\n                                                 +                                  ++ XSDWALOC31.YES KEYWORD\n 00000744                00000744 0000075C   4188+         ORG   ASM_IEAMSCHD_PL_END RESET LOCATION COUNTER               02-IEAMSCHD\n                         0000003C            4189+ASM_IEAMSCHDL EQU *-ASM_IEAMSCHD  ++ LENGTH OF PLIST                    02-IEAMSCHD\n0                                            4191+         POP   PRINT                                                    02-IEAMSCHD\n                                             4192+*                                            IEAMSCHD-2\n00000075C 00000000                           4194+ASM_IEAMSCHD_COMP DC F'0'        IEAMSCHD comp                          01-$$ASMIF\n 00000760 00000000                           4195+ASM_IEAMSCHD_CODE DC F'0'        IEAMSCHD code                          01-$$ASMIF\n 00000764 00000000                           4196+ASM_IEAMSCHD_RSN  DC F'0'        IEAMSCHD reason                        01-$$ASMIF\n                                             4197+* 19/11/08 SRB callback\n 00000768 0000000000000000                   4198+ASM_ANSAREA DC          XL(ANSAA_LEN)'00'                               01-$$ASMIF\n                                             4199+* 18/11/05 LOGGER support\n                                             4200+* 21/11/05 VTOC access\n 00000790                                    4201+ASM_VTOC   DC   0D'0'              vtoc access                          01-$$ASMIF\n 00000790 00000000                           4202+ASM_VTOC_DCB    DC A(0)            DCB address below the line           01-$$ASMIF\n 00000794 4040404040404040                   4203+ASM_VTOC_DDNAME DC CL8' '          DDNAME                               01-$$ASMIF\n 0000079C 4040404040404040                   4204+ASM_VTOC_FILTER DC CL44' '         name filter                          01-$$ASMIF\n                                             4205+*SM_VTOC_OPENLIST OPEN (0,INPUT),MF=L list form for open\n 000007C8                                    4207+ASM_VTOC_OPENLIST DC 0F'0'                       ALIGN LIST TO FULLWORD 02-OPEN\n 000007C8 80                                 4208+         DC    AL1(128)                     OPTION BYTE                 02-OPEN\n 000007C9 000000                             4209+         DC    AL3(0)                       DCB ADDRESS                 02-OPEN\n 000007CC 0000000000000000                   4210+ASM_VTOC_FCL     DC       XL(FCLHDLEN+FCLDSNEL)'00'                     01-$$ASMIF\n 000007E4 0000000000000000                   4211+ASM_VTOC_BFL     DC       XL(BFLHLN+BFLELN)'00'                         01-$$ASMIF\n                                             4212+*SM_VTOC_CVAFFILT CVAFFILT MF=L,BRANCH=NO,FLTAREA=KEEP\n 000007F8                                    4214+         CNOP  0,4                                                      02-CVAFFILT\n                         000007F8            4215+ASM_VTOC_CVAFFILT EQU *                                                 02-CVAFFILT\n 000007F8 C3E5D7D3                           4216+         DC    CL4'CVPL'                EBCDIC 'CVPL'                   02-CVAFFILT\n 000007FC 0044                               4217+         DC    AL2(ICV26E-ASM_VTOC_CVAFFILT)                           X02-CVAFFILT\n                                                 +                                        LENGTH OF CVPL\n 000007FE 0E                                 4218+         DC    XL1'0E'                  FUNCTION CODE                   02-CVAFFILT\n 000007FF 00                                 4219+         DC    XL1'00'                  STATUS INFORMATION              02-CVAFFILT\n 00000800 00                                 4220+         DC    B'00000000'              FIRST FLAG BYTE                 02-CVAFFILT\n 00000801 00                                 4221+         DC    B'00000000'              SECOND FLAG BYTE                02-CVAFFILT\n 00000802 80                                 4222+         DC    B'10000000'              THIRD FLAG BYTE                 02-CVAFFILT\n 00000803 00                                 4223+         DC    B'00000000'              Fourth Flag Byte           @LVC 02-CVAFFILT\n 00000804 00000000                           4224+         DC    A(0)                     UCB ADDRESS                     02-CVAFFILT\n 00000808 00000000                           4225+         DC    A(0)                     FILTER CRITERIA LIST ADDRESS    02-CVAFFILT\n 0000080C 00000000                           4226+         DC    A(0)                     BUFFER LIST ADDRESS             02-CVAFFILT\n 00000810 00000000                           4227+         DC    A(0)                     INDEX VIR'S BUFFER LIST ADDRESS 02-CVAFFILT\n 00000814 00000000                           4228+         DC    A(0)                     MAP VIR'S BUFFER LIST ADDRESS   02-CVAFFILT\n 00000818 00000000                           4229+         DC    A(0)                     I/O AREA ADDRESS                02-CVAFFILT\n 0000081C 00000000                           4230+         DC    A(0)                     DEB ADDRESS                     02-CVAFFILT\n 00000820 00000000                           4231+         DC    A(0)                     ARGUMENT ADDRESS                02-CVAFFILT\n 00000824 00000000                           4232+         DC    A(0)                     SPACE PARAMETER LIST ADDRESS    02-CVAFFILT\n 00000828 00000000                           4233+         DC    A(0)                     EXTENT TABLE ADDRESS            02-CVAFFILT\n 0000082C 00000000                           4234+         DC    A(0)                     NEW VRF VIXM BUFFER LIST ADDR   02-CVAFFILT\n 00000830 00000000                           4235+         DC    A(0)                     VRF DATA ADDRESS                02-CVAFFILT\n 00000834 00000000                           4236+         DC    A(0)                     COUNT AREA ADDRESS              02-CVAFFILT\n 00000838 00000000                           4237+         DC    A(0)                     FILTER SAVE AREA ADDRESS        02-CVAFFILT\n                         0000083C            4238+ICV26E   EQU   *                        END OF CVPL                     02-CVAFFILT\n 0000083C 0000000000000000                   4239+ASM_VTOC_BUFFER  DC       XL(F1DSCB_SIZE)'00'                           01-$$ASMIF\n                                             4240+* 04/03/10 OBTAIN DSCB\n1          asmif asm interfcae module                                                                           Page   18\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000008C8 0000000000000000                   4241+ASM_CAMLST DC    4A(0)                                                  01-$$ASMIF\n                                             4242+* 04/03/10 OBTAIN DSCB\n                                             4243+* 21/11/05 VTOC access\n                                             4244+* 06/03/12 TESTAUTH DIAGNOSE extension\n 000008D8 00000000                           4245+ASM_TESTAUTH DC A(0)                                                    01-$$ASMIF\n 000008DC 00000000                           4246+ASM_DIAGNOSE_FLAG DC A(0)                                               01-$$ASMIF\n 000008E0 00000000                           4247+ASM_DIAGNOSE_ADDR DC A(0)                                               01-$$ASMIF\n                         00000FFF            4248+ASM_DIAGNOSE_LENGTH EQU 4095                                            01-$$ASMIF\n                         00000001            4249+ASM_DIAGNOSE_FIX    EQU 1                                               01-$$ASMIF\n                         00000002            4250+ASM_DIAGNOSE_DONTSWAP EQU 2                                             01-$$ASMIF\n                         00000004            4251+ASM_DIAGNOSE_KEEP   EQU   4                                             01-$$ASMIF\n                         00000007            4252+ASM_DIAGNOSE_ALL    EQU   7                                             01-$$ASMIF\n 000008E4 00000000                           4253+ASM_VSMLIST_ASCBADDR DC A(0)       address of the ascb                  01-$$ASMIF\n 000008E8 0000                               4254+ASM_VSMLIST_MYASCBID DC H'0'       my own ASCB id                       01-$$ASMIF\n 000008EA 0000                                   +\n 000008EC 00000000                           4255+ASM_VSMLIST_MYASCB DC F'0'         address of my ASCB                   01-$$ASMIF\n 000008F0 00000000                           4256+ASM_VSMLIST_MYTCB DC F'0'          my own TCB addr                      01-$$ASMIF\n 000008F4 00000000                           4257+ASM_VSMLIST_STORAGE DC A(0)        SRB work area address                01-$$ASMIF\n0                                            4259+*\n                                             4260+* eq symbols for the branch table\n                                             4261+*\n                                             4263+* 29/11/07 struct asm include\n0                        00000000            4265+SYM_CLEANUP   EQU 1-1         + symb equ                                02-$$\n                         00000001            4266+SYM_GETTOKEN  EQU 2-1         + symb equ                                02-$$\n                         00000002            4267+SYM_CREATETOKEN EQU 3-1       + symb equ                                02-$$\n                         00000003            4268+SYM_DELETETOKEN EQU 4-1       + symb equ                                02-$$\n                         00000004            4269+SYM_ALLOCATEPAGES EQU 5-1     + symb equ                                02-$$\n                         00000005            4270+SYM_FREEPAGES EQU 6-1         + symb equ                                02-$$\n                         00000006            4271+SYM_ENQ       EQU 7-1         + symb equ                                02-$$\n                         00000007            4272+SYM_DEQ       EQU 8-1         + symb equ                                02-$$\n                         00000008            4273+SYM_SLEEP     EQU 9-1         + symb equ                                02-$$\n                         00000009            4274+SYM_GETECB    EQU 10-1        + symb equ                                02-$$\n                         0000000A            4275+SYM_WAIT      EQU 11-1        + symb equ                                02-$$\n                         0000000B            4276+SYM_POST      EQU 12-1        + symb equ                                02-$$\n                         0000000C            4277+SYM_RESET     EQU 13-1        + symb equ                                02-$$\n                         0000000D            4278+SYM_SELECT    EQU 14-1        + symb equ                                02-$$\n                         0000000E            4279+SYM_CONNECTSHMEM EQU 15-1     + symb equ                                02-$$\n                         0000000F            4280+SYM_DISCONNECTSHMEM EQU 16-1  + symb equ                                02-$$\n                         00000010            4281+SYM_OPER      EQU 17-1        + symb equ                                02-$$\n                         00000011            4282+SYM_WTO       EQU 18-1        + symb equ                                02-$$\n                         00000012            4283+SYM_MALLOC    EQU 19-1        + symb equ                                02-$$\n                         00000013            4284+SYM_FREE      EQU 20-1        + symb equ                                02-$$\n                         00000014            4285+SYM_SVC       EQU 21-1        + symb equ                                02-$$\n                         00000015            4286+SYM_ATTACHMVS EQU 22-1        + symb equ                                02-$$\n                         00000016            4287+SYM_CLOCK     EQU 23-1        + symb equ                                02-$$\n                         00000017            4288+SYM_TIMEUSED  EQU 24-1        + symb equ                                02-$$\n                         00000018            4289+SYM_TDUMP     EQU 25-1        + symb equ                                02-$$\n                         00000019            4290+SYM_LOGGER    EQU 26-1        + symb equ                                02-$$\n                         0000001A            4291+SYM_VTOC      EQU 27-1        + symb equ                                02-$$\n                         0000001B            4292+SYM_SRB       EQU 28-1        + symb equ                                02-$$\n                         0000001C            4293+SYM_WLM       EQU 29-1        + symb equ                                02-$$\n                         0000001D            4294+SYM_OBTAIN    EQU 30-1        + symb equ                                02-$$\n                         0000001E            4295+SYM_TESTAUTH  EQU 31-1        + symb equ                                02-$$\n1          asmif asm interfcae module                                                                           Page   19\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        0000001F            4296+SYM_DIAGNOSE  EQU 32-1        + symb equ                                02-$$\n                         00000020            4297+SYM_VSMLIST   EQU 33-1        + symb equ                                02-$$\n 000008F8 0000000000000000                   4298+ASM_MUTEX_VECTOR  DC (MAX_ASM_MUTEX/32)A(0)                             01-$$ASMIF\n                         00000978            4299+ASM_LENGTH   EQU *-ASMDSECT        dsect length                         01-$$ASMIF\n                                             4300+*        cregs\n                         00000000            4302+R0       EQU   0                                                        02-CREGS\n                         00000001            4303+R1       EQU   1                                                        02-CREGS\n                         00000002            4304+R2       EQU   2                                                        02-CREGS\n                         00000003            4305+R3       EQU   3                                                        02-CREGS\n                         00000004            4306+R4       EQU   4                                                        02-CREGS\n                         00000005            4307+R5       EQU   5                                                        02-CREGS\n                         00000006            4308+R6       EQU   6                                                        02-CREGS\n                         00000007            4309+R7       EQU   7                                                        02-CREGS\n                         00000008            4310+R8       EQU   8                                                        02-CREGS\n                         00000009            4311+R9       EQU   9                                                        02-CREGS\n                         0000000A            4312+R10      EQU   10                                                       02-CREGS\n                         0000000B            4313+R11      EQU   11                                                       02-CREGS\n                         0000000C            4314+R12      EQU   12                                                       02-CREGS\n                         0000000D            4315+R13      EQU   13                                                       02-CREGS\n                         0000000D            4316+RDSA     EQU   R13                DSA POINTER                           02-CREGS\n                         0000000E            4317+R14      EQU   14                                                       02-CREGS\n                         0000000F            4318+R15      EQU   15                                                       02-CREGS\n                         00000000            4319+FR0      EQU   0                                                        02-CREGS\n                         00000002            4320+FR2      EQU   2                                                        02-CREGS\n                         00000004            4321+FR4      EQU   4                                                        02-CREGS\n                         00000006            4322+FR6      EQU   6                                                        02-CREGS\n                     R:0 00000000            4323+         USING PSA,R0              base on psa                          01-$$ASMIF\n-\n-                                            4325+* SRB work area in sp 245 address passed in parm\n000000000                00000000 00002080   4327+SRBWORK  DSECT                                                          01-$$ASMIF\n 00000000                                    4328+SRBWORK_SAVESYS DS 18F              secondary save in the SRB           01-$$ASMIF\n 00000048 00000000                           4329+SRBWORK_ECB DC A(0)     SRB complete srbwork_ecb                        01-$$ASMIF\n 00000050                                    4330+SRBWORK_STOKEN DS D                 stoken value                        01-$$ASMIF\n 00000058                                    4331+SRBWORK_ALET   DS A                 alet value                          01-$$ASMIF\n                                             4332+*rbworK_LALESERV ALESERV MF=L       list form\n                                             4334+*              MACDATE = 06/13/1996                                @D1A\n 0000005C                                    4335+SRBWORK_LALESERV DS 0F              .ALESERV PC PARAMETER LIST          02-ALESERV\n 0000005C 00                                 4336+         DC    XL1'00'              .SERVICE TYPE CODE                  02-ALESERV\n 0000005D 00                                 4337+         DC    XL1'00'              .OPTIONS FLAG BYTE                  02-ALESERV\n 0000005E 0000                               4338+         DC    AL2(0)               .RESERVED                           02-ALESERV\n 00000060 00000000                           4339+         DC    A(0)                 .ALET                               02-ALESERV\n 00000064 0000000000000000                   4340+         DC    XL8'0'               .STOKEN (SPACE TOKEN)               02-ALESERV\n 0000006C                                    4341+SRBWORK_RETCODE DS F                return code from aleserv            01-$$ASMIF\n 00000070                                    4342+SRBWORK_MYASCB DS F                 my own ASCB addr                    01-$$ASMIF\n 00000074 00000000                           4343+SRBWORK_REPLY_ADDRESS DC A(0)                                           01-$$ASMIF\n 00000078 00000000                           4344+SRBWORK_REPLY_LENGTH  DC A(0)                                           01-$$ASMIF\n 0000007C 00000000                               +\n 00000080                                    4345+                DC     0D'0'                                            01-$$ASMIF\n 00000080 0000000000000000                   4346+SRBWORK_VSMLIST_REPLY  DC 8192X'00'                                     01-$$ASMIF\n                         00002000            4347+SRBWORK_VSMLIST_REPLY_LENGTH EQU *-SRBWORK_VSMLIST_REPLY                01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   20\n   Active Usings: PSA,R0\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00002080            4348+SRBWORKL EQU   *-SRBWORK           length of the work area              01-$$ASMIF\n000000000                00000000 00000000   4350+DDDUMM       DSECT                                                      01-$$ASMIF\n000000000                00000000 00001000   4352+ASM_BUFFER   DSECT                 SOCKET dynamic dsect                 01-$$ASMIF\n 00000000 00000000                           4353+ASM_BUFFER_SOCKET    DC A(0)       socket number                        01-$$ASMIF\n 00000004 00000000                           4354+ASM_BUFFER_OFFSET    DC A(0)       offset in the buffer                 01-$$ASMIF\n 00000008 00000000                           4355+ASM_BUFFER_REMAINDER DC A(0)       remainder length                     01-$$ASMIF\n 0000000C 00000000                           4356+ASM_BUFFER_          DC A(0)       buffer received length               01-$$ASMIF\n 00000010 0000000000000000                   4357+ASM_BUFFER_BUFFER    DC (MAX_ASM_BUFFER)X'00'                           01-$$ASMIF\n                         00001000            4358+ASM_BUFFER_LENGTH    EQU *-ASM_BUFFER                                   01-$$ASMIF\n0                        00001000            4360+PAGE_SIZE    EQU 4096              page size                            01-$$ASMIF\n                                             4361+*        BPXYSEL  ,\n                                             4363+** BPXYSEL: Select Options\n                                             4364+**  Used By: SEL\n 00000000                00000000 00000004   4365+SEL                  DSECT ,                                            02-BPXYSEL\n 00000000                                    4366+SELBEGIN             DS    0F                                           02-BPXYSEL\n                                             4367+*\n 00000000                                    4368+SELBITS              DS    0XL4    Flag Bits.8F FF FF FF Reserved       02-BPXYSEL\n 00000000                                    4369+SELPOLLFLAGS         DS    XL2     Select flags / Poll (r)events @D3A   02-BPXYSEL\n                                             4370+*-----------------------------------------------------\n                                             4371+* Select flags\n                                             4372+*-----------------------------------------------------\n 00000002                00000002 00000000   4373+SELFLAGS             ORG   SELPOLLFLAGS                                 02-BPXYSEL\n 00000000                                    4374+                     DS    XL1                                   @D3A   02-BPXYSEL\n                                             4375+*                    EQU   X'80'   Never use this bit\n                         00000040            4376+SELREAD              EQU   X'40'   Descriptor ready for read.           02-BPXYSEL\n                         00000020            4377+SELWRITE             EQU   X'20'   Descriptor ready for write.          02-BPXYSEL\n                         00000010            4378+SELXCEPT             EQU   X'10'   Descriptor ready for exception.      02-BPXYSEL\n 00000001                                    4379+                     DS    XL1     Available byte                @D3A   02-BPXYSEL\n0                                            4381+*-----------------------------------------------------\n                                             4382+* Poll Events/Returned Events\n                                             4383+*-----------------------------------------------------\n 00000002                00000002 00000000   4384+SELPOLLEVENTS        ORG   SELPOLLFLAGS                                 02-BPXYSEL\n 00000000                                    4385+                     DS    XL2     Mapped by PollEvents(BPXYPOLL) @D3A  02-BPXYSEL\n 00000002                00000002 00000000   4386+SELPOLLREVENTS       ORG   SELPOLLFLAGS                                 02-BPXYSEL\n 00000000                                    4387+                     DS    XL2     Mapped by PollRevents(BPXYPOLL) @D3A 02-BPXYSEL\n                                             4388+*\n 00000002                                    4389+                     DS    XL1     Available byte                @D3A   02-BPXYSEL\n 00000003                                    4390+                     DS    XL1     Reserved for internal use     @D3A   02-BPXYSEL\n                                             4391+*\n                                             4392+*   Constants\n                                             4393+*\n                         00000004            4394+SEL#LENGTH           EQU   *-SEL   Length of SEL                        02-BPXYSEL\n                         00000001            4395+SEL#QUERY            EQU   1       Query function                       02-BPXYSEL\n                         00000002            4396+SEL#CANCEL           EQU   2       Cancel function                      02-BPXYSEL\n                         00000003            4397+SEL#BATSELQ          EQU   3       Batch-Select Query function          02-BPXYSEL\n                         00000004            4398+SEL#BATSELC          EQU   4       Batch-Select Cancel function         02-BPXYSEL\n                         00000005            4399+SEL#POLLQUERY        EQU   5       Poll Query function           @D3A   02-BPXYSEL\n                         00000006            4400+SEL#BATPOLLQ         EQU   6       Batch-Poll Query function     @D3A   02-BPXYSEL\n                         00000007            4401+SEL#BATPOLLC         EQU   7       Batch-Poll Cancel function    @D3A   02-BPXYSEL\n                         00000008            4402+SEL#POLLCANCEL       EQU   8       Poll Cancel function          @D3A   02-BPXYSEL\n                         00000000            4403+SEL#BITSBACKWARD     EQU   0       Bit Backward Order by word @P1A      02-BPXYSEL\n1          asmif asm interfcae module                                                                           Page   21\n   Active Usings: PSA,R0\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000001            4404+SEL#BITSFORWARD      EQU   1       Bit Forward Order by word  @P1A      02-BPXYSEL\n                         00000003            4405+SEL#TYPES            EQU   3       3 TYPES (Read Write Except) @D2A     02-BPXYSEL\n                         00000040            4406+SEL#RBIT             EQU   64      Read bit position in byte   @D2A     02-BPXYSEL\n                         00000020            4407+SEL#WBIT             EQU   32      Write bit position in byte  @D2A     02-BPXYSEL\n                         00000010            4408+SEL#XBIT             EQU   16      Xcept bit position in byte  @D2A     02-BPXYSEL\n                                             4409+** BPXYSEL End\n-\n                                             4411+***      USING CRAB,R12            base on crab\n                     R:7 00000000            4412+         USING ASMDSECT,R7         base on asm                          01-$$ASMIF\n                                             4413+* 19/11/08 SRB callback\n 00000000                00000000 00001FD4   4414+ASMIF    CSECT                                                          01-$$ASMIF\n 00000000 1801                               4415+         LR    R0,R1               save r1                              01-$$ASMIF\n 00000002 5810 1000               00000000   4416+         L     R1,0(,R1)           back asm base                        01-$$ASMIF\n 00000006 4110 1000               00000000   4417+         LA    R1,0(,R1)           off high order byte                  01-$$ASMIF\n 0000000A 1211                               4418+         LTR   R1,R1               test it                              01-$$ASMIF\n 0000000C A784 000F               0000002A   4419+         JZ    ASMIF_PROLOG        if not created yet                   01-$$ASMIF\n 00000010 9501 10CE      000000CE            4420+         CLI   ASM_SRB_MODE-ASM_SAVE(R1),1 SRB mode                     01-$$ASMIF\n 00000014 A774 000B               0000002A   4421+         JNE   ASMIF_PROLOG        if not created yet                   01-$$ASMIF\n 00000018 50E0 D00C               0000000C   4422+         ST    R14,12(,R13)        return address save                  01-$$ASMIF\n 0000001C 902C D01C               0000001C   4423+         STM   R2,R12,28(R13)      registers                            01-$$ASMIF\n 00000020 58E0 1110               00000110   4424+         L     R14,ASM_SRB_RETURN-ASM_SAVE(,R1)                         01-$$ASMIF\n 00000024 50D0 1004               00000004   4425+         ST    R13,4(,R1)          backchain LE DSA                     01-$$ASMIF\n 00000028 07FE                               4426+         BR    R14                                                      01-$$ASMIF\n 0000002A 1810                               4427+ASMIF_PROLOG LR R1,R0                                                   01-$$ASMIF\n 0000002C 90EC D00C               0000000C   4428+         STM   R14,12,12(R13)      save all in higher save              01-$$ASMIF\n 00000030 C0B0 0000 0DF4          00001C18   4429+         LARL  R11,DATAASMIF       base on data                         01-$$ASMIF\n                     R:B 00001C18            4430+         USING (DATAASMIF,DATAASMIFEND),R11 assign base                 01-$$ASMIF\n 00000036 5870 1000               00000000   4431+         L     R7,0(,R1)           back asm base                        01-$$ASMIF\n 0000003A 4170 7000               00000000   4432+         LA    R7,0(,R7)           off high order byte                  01-$$ASMIF\n 0000003E 1277                               4433+         LTR   R7,R7               test it                              01-$$ASMIF\n 00000040 A784 0014               00000068   4436+         BRC   8,ASMIF_INIT  (BZ)                                       03-\n                                             4437+* 10/01/12 cleanup register\n 00000044 1B88                               4438+         SR    R8,R8                                                    01-$$ASMIF\n 00000046 4380 70CC               000000CC   4439+         IC    R8,ASM_FUNCTION_CODE                                     01-$$ASMIF\n 0000004A C0E5 0000 0088          0000015A   4440+         BRASL R14,ASMIF_PROCESS   call process                         01-$$ASMIF\n 00000050 1288                               4441+         LTR   R8,R8                                                    01-$$ASMIF\n 00000052 A774 0007               00000060   4444+         BRC   7,ASMIF_RETURN_NOCLEANUP  (BNZ)                          03-\n 00000056 58E0 D00C               0000000C   4445+         L     R14,12(,R13)                                             01-$$ASMIF\n 0000005A 982C D01C               0000001C   4446+         LM    R2,R12,28(R13)     back regs                             01-$$ASMIF\n 0000005E 051E                               4447+         BALR  R1,R14                                                   01-$$ASMIF\n 00000060                                    4448+ASMIF_RETURN_NOCLEANUP DS 0H                                            01-$$ASMIF\n                                             4449+* 10/01/12 cleanup register\n 00000060 18D7                               4450+         LR    R13,R7              save area adress                     01-$$ASMIF\n 00000062 A7F4 0075               0000014C   4453+         BRC   15,ASMIF_EXIT  (B)                                       03-\n 00000068                                    4454+         LTORG                                                          01-$$ASMIF\n 00000068                                    4455+ASMIF_INIT DS 0H                                                        01-$$ASMIF\n                                             4456+*        storage obtain,length=asm_length,checkzero=yes\n 00000068 5800 B030               00001C48   4459+         L      0,=A(ASM_LENGTH)             .STORAGE LENGTH       @P9C 02-STORAGE\n 0000006C 58F0 B034               00001C4C   4460+         L      15,=AL1(B'00001000',(0*16),(0),B'00000010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00000070 58E0 0010               00000010   4461+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000074 58EE 0304               00000304   4462+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000078 58EE 00A0               000000A0   4463+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n1          asmif asm interfcae module                                                                           Page   22\n   Active Usings: PSA,R0  ASMDSECT,R7  DATAASMIF(X'FFF'),R11\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000007C B218 E000      00000000            4464+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000080 1871                               4465+         LR    R7,R1               set addr                             01-$$ASMIF\n 00000082 1801                               4466+         LR    R0,R1               same in 0                            01-$$ASMIF\n 00000084 A7FE 0014               00000014   4467+         CHI   R15,X'14'           already cleared                      01-$$ASMIF\n 00000088 A784 0005               00000092   4468+         JE    ASMIF_CLEARED       jump if cleared                      01-$$ASMIF\n 0000008C 5810 B030               00001C48   4469+         L     R1,=A(ASM_LENGTH)   length here                          01-$$ASMIF\n 00000090 0E0E                               4470+         MVCL  R0,R14              clear storage                        01-$$ASMIF\n 00000092                                    4471+ASMIF_CLEARED DS 0H                                                     01-$$ASMIF\n 00000092 5070 D008               00000008   4472+         ST    R7,8(,R13)          chain new save                       01-$$ASMIF\n 00000096 50C0 705C               0000005C   4473+         ST    R12,ASM_CRAB        save crab                            01-$$ASMIF\n 0000009A 50D0 7004               00000004   4474+         ST    R13,4(,R7)          save higher save area                01-$$ASMIF\n 0000009E 41D0 7000               00000000   4475+         LA    R13,ASM_SAVE        get temp save                        01-$$ASMIF\n                                             4476+         DROP  R7                  drop asm base                        01-$$ASMIF\n                     R:D 00000000            4477+         USING ASM_SAVE,R13        base on asm area                     01-$$ASMIF\n 000000A2 D217 D074 B3A4 00000074 00001FBC   4478+         MVC   ASM_TIMX(MDL_TIMXL),MDL_TIMX copy timer exit             01-$$ASMIF\n 000000A8 D20B D20C B108 0000020C 00001D20   4479+         MVC   ASM_ENQL(MDL_ENQLL),MDL_ENQL copy enq list               01-$$ASMIF\n 000000AE 0700                               4482+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000B0 A7F5 0006               000000BC   4483+         BRAS  15,LOAD2_0039      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000B4                                    4484+LD2_0039    DS 0H                                                       02-LOAD\n 000000B4 C9C5C1D5E3C3D940                   4485+LE2_0039    DC CL8'IEANTCR'       ENTRY POINT NAME                      02-LOAD\n 000000BC                                    4486+LOAD2_0039    DS 0H                                                     02-LOAD\n 000000BC 4100 F000               00000000   4487+         LA    0,LE2_0039-LD2_0039(,15)         ADDR OF PARAMETER       02-LOAD\n 000000C0 1B11                               4488+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000C2 0A08                               4489+         SVC   8                                                        02-LOAD\n 000000C4 5000 D068               00000068   4490+         ST    R0,ASM_IEANTCR      save address                         01-$$ASMIF\n 000000C8                                    4493+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000C8 A7F5 0006               000000D4   4494+         BRAS  15,LOAD2_0041      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000CC                                    4495+LD2_0041    DS 0H                                                       02-LOAD\n 000000CC C9C5C1D5E3D9E340                   4496+LE2_0041    DC CL8'IEANTRT'       ENTRY POINT NAME                      02-LOAD\n 000000D4                                    4497+LOAD2_0041    DS 0H                                                     02-LOAD\n 000000D4 4100 F000               00000000   4498+         LA    0,LE2_0041-LD2_0041(,15)         ADDR OF PARAMETER       02-LOAD\n 000000D8 1B11                               4499+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000DA 0A08                               4500+         SVC   8                                                        02-LOAD\n 000000DC 5000 D06C               0000006C   4501+         ST    R0,ASM_IEANTRT      save address                         01-$$ASMIF\n 000000E0                                    4504+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000E0 A7F5 0006               000000EC   4505+         BRAS  15,LOAD2_0043      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000E4                                    4506+LD2_0043    DS 0H                                                       02-LOAD\n 000000E4 C9C5C1D5E3C4D340                   4507+LE2_0043    DC CL8'IEANTDL'       ENTRY POINT NAME                      02-LOAD\n 000000EC                                    4508+LOAD2_0043    DS 0H                                                     02-LOAD\n 000000EC 4100 F000               00000000   4509+         LA    0,LE2_0043-LD2_0043(,15)         ADDR OF PARAMETER       02-LOAD\n 000000F0 1B11                               4510+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000F2 0A08                               4511+         SVC   8                                                        02-LOAD\n 000000F4 5000 D070               00000070   4512+         ST    R0,ASM_IEANTDL      save address                         01-$$ASMIF\n 000000F8 5820 021C               0000021C   4513+         L     R2,PSATOLD          tcb address                          01-$$ASMIF\n                     R:2 00000020            4514+         USING TCB,R2              get tcb addr                         01-$$ASMIF\n 000000FC 58E0 200C               0000002C   4515+         L     R14,TCBTIO          get tiot add                         01-$$ASMIF\n                     R:E 00000468            4516+         USING TIOT1,R14           base on tiot1                        01-$$ASMIF\n 00000100 D207 D1D4 E000 000001D4 00000468   4517+         MVC   ASM_JOBNAME,TIOCNJOB copy jobname                        01-$$ASMIF\n 00000106 D207 D1DC B020 000001DC 00001C38   4518+         MVC   ASM_PROGRAMNAME,=CL8' ' init it                          01-$$ASMIF\n                                             4519+* 06/03/12 TESTAUTH DIAGNOSE extension\n 0000010C D203 D8D8 B038 000008D8 00001C50   4520+         MVC   ASM_TESTAUTH,=F'-1' init TESTAUTH                        01-$$ASMIF\n 00000112 C0E5 0000 084D          000011AC   4521+         BRASL R14,TESTAUTH_INTERN  call TESTAUTH                       01-$$ASMIF\n                                             4522+* 06/03/12 TESTAUTH DIAGNOSE extension\n 00000118 58E0 2000               00000020   4523+         L     R14,TCBRBP          get highest rb pointer               01-$$ASMIF\n                                             4524+         DROP  R14                 drop reg                             01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   23\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  RBBASIC,R14\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                    R:E 00000040            4525+         USING RBBASIC,R14         base on rb                           01-$$ASMIF\n 0000011C 91C0 E00A      0000004A            4526+ASMIF_RBLOOP TM RBSTAB1,B'11000000' check rb type                       01-$$ASMIF\n 00000120 A784 000D               0000013A   4529+         BRC   8,ASMIF_PRB  (BZ)                                        03-\n 00000124 9180 E00B      0000004B            4530+ASMIF_RBNEXT TM RBSTAB2,RBTCBNXT   test link tcb pointer                01-$$ASMIF\n 00000128 A714 0011               0000014A   4533+         BRC   1,ASMIF_PRBOK  (BO)                                      03-\n 0000012C 58E0 E01C               0000005C   4534+         L     R14,RBLINK          get rb link                          01-$$ASMIF\n 00000130 12EE                               4535+         LTR   R14,R14             test it                              01-$$ASMIF\n 00000132 A774 FFF5               0000011C   4538+         BRC   7,ASMIF_RBLOOP  (BNZ)                                    03-\n 00000136 A7F4 000A               0000014A   4541+         BRC   15,ASMIF_PRBOK  (B)                                      03-\n 0000013A 58F0 E00C               0000004C   4542+ASMIF_PRB L    R15,RBCDE           get cde addr                         01-$$ASMIF\n 0000013E 12FF                               4543+         LTR   R15,R15             test it                              01-$$ASMIF\n 00000140 A784 FFF2               00000124   4546+         BRC   8,ASMIF_RBNEXT  (BZ)                                     03-\n                     R:F 00000000            4547+         USING CDENTRY,R15         base on cde                          01-$$ASMIF\n 00000144 D207 D1DC F008 000001DC 00000008   4548+         MVC   ASM_PROGRAMNAME,CDNAME move program name                 01-$$ASMIF\n                                             4549+         DROP  R14,R15             drop temp regs                       01-$$ASMIF\n 0000014A                                    4550+ASMIF_PRBOK DS 0H                                                       01-$$ASMIF\n 0000014A 18F7                               4551+         LR    R15,R7              back asm address                     01-$$ASMIF\n 0000014C                                    4552+ASMIF_EXIT DS   0H                 back from here                       01-$$ASMIF\n 0000014C 58D0 D004               00000004   4553+         L     R13,4(,R13)         higher save address                  01-$$ASMIF\n 00000150 58E0 D00C               0000000C   4554+         L     R14,12(,R13)                                             01-$$ASMIF\n 00000154 982C D01C               0000001C   4555+         LM    R2,R12,28(R13)     back regs                             01-$$ASMIF\n 00000158 051E                               4556+         BALR  R1,R14                                                   01-$$ASMIF\n                                             4557+         DROP  R13                                                      01-$$ASMIF\n 0000015A B240 00E0                          4558+ASMIF_PROCESS BAKR     R14,0       all in stack                         01-$$ASMIF\n                     R:7 00000000            4559+         USING ASMDSECT,R7         base on asm                          01-$$ASMIF\n 0000015E 5070 D008               00000008   4560+         ST    R7,8(,R13)          chain new save                       01-$$ASMIF\n 00000162 50C0 705C               0000005C   4561+         ST    R12,ASM_CRAB        save crab                            01-$$ASMIF\n 00000166 50D0 7004               00000004   4562+         ST    R13,4(,R7)          save higher save area                01-$$ASMIF\n 0000016A 41D0 7000               00000000   4563+         LA    R13,ASM_SAVE        get temp save                        01-$$ASMIF\n 0000016E D707 7060 7060 00000060 00000060   4564+         XC    ASM_RC(8),ASM_RC    clear rc                             01-$$ASMIF\n                                             4565+         DROP  R7                drop asm base                          01-$$ASMIF\n                     R:D 00000000            4566+         USING ASM_SAVE,R13      base on asm area                       01-$$ASMIF\n                                             4568+* 29/11/07 struct asm include\n000000174 E3F0 D0CC 0090          000000CC   4570+         LLGC  R15,ASM_FUNCTION_CODE                                   X02-$$\n                                                 +                                 + get code\n 0000017A 89F0 0002               00000002   4571+         SLL   R15,2             + by four                              02-$$\n 0000017E 5AF0 B03C               00001C54   4572+         A     R15,=A(BR0055)    + table addrerss                       02-$$\n 00000182 07FF                               4573+         BR    R15               + jump into table                      02-$$\n 00000184                                    4574+BR0055    DS 0F                                                         02-$$\n 00000184 A7F4 0B6C               0000185C   4575+         J     CLEANUP           +if &I*4 branch to &CASE(&I)           02-$$\n 00000188 A7F4 0049               0000021A   4576+         J     GETTOKEN          +if &I*4 branch to &CASE(&I)           02-$$\n 0000018C A7F4 006A               00000260   4577+         J     CREATETOKEN       +if &I*4 branch to &CASE(&I)           02-$$\n 00000190 A7F4 008D               000002AA   4578+         J     DELETETOKEN       +if &I*4 branch to &CASE(&I)           02-$$\n 00000194 A7F4 00BA               00000308   4579+         J     ALLOCATEPAGES     +if &I*4 branch to &CASE(&I)           02-$$\n 00000198 A7F4 00CE               00000334   4580+         J     FREEPAGES         +if &I*4 branch to &CASE(&I)           02-$$\n 0000019C A7F4 00E1               0000035E   4581+         J     ENQ               +if &I*4 branch to &CASE(&I)           02-$$\n 000001A0 A7F4 010E               000003BC   4582+         J     DEQ               +if &I*4 branch to &CASE(&I)           02-$$\n 000001A4 A7F4 06D0               00000F44   4583+         J     SLEEP             +if &I*4 branch to &CASE(&I)           02-$$\n 000001A8 A7F4 06E8               00000F78   4584+         J     GETECB            +if &I*4 branch to &CASE(&I)           02-$$\n 000001AC A7F4 071E               00000FE8   4585+         J     WAIT              +if &I*4 branch to &CASE(&I)           02-$$\n 000001B0 A7F4 07CC               00001148   4586+         J     POST              +if &I*4 branch to &CASE(&I)           02-$$\n 000001B4 A7F4 07F4               0000119C   4587+         J     RESET             +if &I*4 branch to &CASE(&I)           02-$$\n 000001B8 A7F4 0A05               000015C2   4588+         J     SELECT            +if &I*4 branch to &CASE(&I)           02-$$\n 000001BC A7F4 0A66               00001688   4589+         J     CONNECTSHMEM      +if &I*4 branch to &CASE(&I)           02-$$\n1          asmif asm interfcae module                                                                           Page   24\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000001C0 A7F4 0AEE               0000179C   4590+         J     DISCONNECTSHMEM   +if &I*4 branch to &CASE(&I)           02-$$\n 000001C4 A7F4 0BEE               000019A0   4591+         J     OPER              +if &I*4 branch to &CASE(&I)           02-$$\n 000001C8 A7F4 0C6B               00001A9E   4592+         J     WTO               +if &I*4 branch to &CASE(&I)           02-$$\n 000001CC A7F4 0C83               00001AD2   4593+         J     MALLOC            +if &I*4 branch to &CASE(&I)           02-$$\n 000001D0 A7F4 0CB3               00001B36   4594+         J     FREESTOR          +if &I*4 branch to &CASE(&I)           02-$$\n 000001D4 A7F4 0118               00000404   4595+         J     SVC               +if &I*4 branch to &CASE(&I)           02-$$\n 000001D8 A7F4 011E               00000414   4596+         J     ATTACHMVS         +if &I*4 branch to &CASE(&I)           02-$$\n 000001DC A7F4 0147               0000046A   4597+         J     CLOCK             +if &I*4 branch to &CASE(&I)           02-$$\n 000001E0 A7F4 014B               00000476   4598+         J     TIMEUSED          +if &I*4 branch to &CASE(&I)           02-$$\n 000001E4 A7F4 0162               000004A8   4599+         J     TDUMP             +if &I*4 branch to &CASE(&I)           02-$$\n 000001E8 A7F4 020C               00000600   4600+         J     LOGGER            +if &I*4 branch to &CASE(&I)           02-$$\n 000001EC A7F4 055C               00000CA4   4601+         J     VTOC              +if &I*4 branch to &CASE(&I)           02-$$\n 000001F0 A7F4 066E               00000ECC   4602+         J     SRB_              +if &I*4 branch to &CASE(&I)           02-$$\n 000001F4 A7F4 066D               00000ECE   4603+         J     WLM               +if &I*4 branch to &CASE(&I)           02-$$\n 000001F8 A7F4 066C               00000ED0   4604+         J     OBTAIN            +if &I*4 branch to &CASE(&I)           02-$$\n 000001FC A7F4 07DA               000011B0   4605+         J     TESTAUTH          +if &I*4 branch to &CASE(&I)           02-$$\n 00000200 A7F4 07EA               000011D4   4606+         J     DIAGNOSE          +if &I*4 branch to &CASE(&I)           02-$$\n 00000204 A7F4 086F               000012E2   4607+         J     VSMLIST           +if &I*4 branch to &CASE(&I)           02-$$\n 00000208 D203 D060 B040 00000060 00001C58   4608+         MVC   ASM_RC,=A(128)      get code                             01-$$ASMIF\n 0000020E 0000                                   +\n 00000210 00000000                           4609+         DC    A(0)                                                     01-$$ASMIF\n 00000214 0101                               4610+         PR    ,                   return back                          01-$$ASMIF\n                     R:D 00000000            4611+         USING ASM_SAVE,R13      base on asm area                       01-$$ASMIF\n                                             4612+*---------------------------------------------------------------------*\n                                             4613+* gettoken - ask for the name/token pair                              *\n                                             4614+* +0     name pointer                                                 *\n                                             4615+* +4     retrieved token address                                      *\n                                             4616+* back : r15 = ieantrt return code                                    *\n                                             4617+*---------------------------------------------------------------------*\n 00000216 B240 00E0                          4618+GETTOKEN_CALLED BAKR R14,0                                              01-$$ASMIF\n 0000021A                                    4619+GETTOKEN DS    0H                                                       01-$$ASMIF\n 0000021A 9823 D114               00000114   4620+         LM    R2,R3,ASM_PARMS     name/token pointers                  01-$$ASMIF\n 0000021E 1812                               4621+         LR    R1,R2               same in r1                           01-$$ASMIF\n 00000220 C0E5 0000 0CD1          00001BC2   4622+         BRASL R14,COPYSTR         copy it                              01-$$ASMIF\n 00000226 4120 D154               00000154   4623+         LA    R2,ASM_WORK         addr in work                         01-$$ASMIF\n                                             4624+* 17/11/11 GetToken in SYSTEM_LEVEL\n 0000022A D203 D218 B044 00000218 00001C5C   4625+         MVC   ASM_OPTION,=A(IEANT_SYSTEM_LEVEL)                        01-$$ASMIF\n                                             4626+*        MVC   ASM_OPTION,=A(IEANT_HOME_LEVEL)\n                                             4627+* 17/11/11 GetToken in SYSTEM_LEVEL\n 00000230 58F0 D06C               0000006C   4628+         L     R15,ASM_IEANTRT     get retrieve addr                    01-$$ASMIF\n                                             4629+*        call  (15),(asm_option,(r2),(r3),asm_rc),   call              X\n                                                 +               MF=(E,ASM_CALLLIST),                                    X\n                                                 +               ID=0001\n 00000234                                    4632+         DS    0H                                                       02-CALL\n 00000234 4110 D134               00000134   4637+         LA    1,ASM_CALLLIST                    LOAD PARAMETER REG 1   04-IHBINNRR\n 00000238 4100 D218               00000218   4638+         LA    0,ASM_OPTION       PICKUP  PARAMETER                     03-IHBOPLTX\n 0000023C 5000 1000               00000000   4639+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000240 5020 1004               00000004   4640+         ST    (R2),4(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000244 5030 1008               00000008   4641+         ST    (R3),8(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000248 4100 D060               00000060   4642+         LA    0,ASM_RC           PICKUP  PARAMETER                     03-IHBOPLTX\n 0000024C 5000 100C               0000000C   4643+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000250 05EF                               4644+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000252 4700                               4645+         DC    X'4700'                           NOP INSTRUCTION WITH   02-CALL\n 00000254 0001                               4646+         DC    AL2(0001)                         ID IN LAST TWO BYTES   02-CALL\n 00000256 90F0 D060               00000060   4647+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   25\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000025A 0101                               4648+         PR    ,                   return back                          01-$$ASMIF\n                                             4649+*---------------------------------------------------------------------*\n                                             4650+* createtoken - create a system level name/token pair                 *\n                                             4651+* +0     name pointer                                                 *\n                                             4652+* +4     retrieved token address                                      *\n                                             4653+* back : r15 = ieantcr return code                                    *\n                                             4654+*---------------------------------------------------------------------*\n 0000025C B240 00E0                          4655+CREATETOKEN_CALLED BAKR R14,0                                           01-$$ASMIF\n 00000260                                    4656+CREATETOKEN DS 0H                                                       01-$$ASMIF\n                                             4657+* 21/04/08 name/token service in user/problem state\n                                             4658+***      MVC   ASM_OPTION(8),=A(IEANT_SYSTEM_LEVEL,IEANT_NOPERSIST)\n 00000260 D207 D218 B028 00000218 00001C40   4659+         MVC   ASM_OPTION(8),=A(IEANT_HOME_LEVEL,IEANT_NOPERSIST)       01-$$ASMIF\n 00000266 58F0 D068               00000068   4660+         L     R15,ASM_IEANTCR     create address                       01-$$ASMIF\n 0000026A 9823 D114               00000114   4661+         LM    R2,R3,ASM_PARMS     nam/token pointers                   01-$$ASMIF\n 0000026E 1812                               4662+         LR    R1,R2               same in r1                           01-$$ASMIF\n 00000270 C0E5 0000 0CA9          00001BC2   4663+         BRASL R14,COPYSTR         copy it                              01-$$ASMIF\n 00000276 4120 D154               00000154   4664+         LA    R2,ASM_WORK         addr in work                         01-$$ASMIF\n                                             4665+*        call  (15),(asm_option,(r2),(r3),asm_option+4,asm_rc),        X\n                                                 +               MF=(E,ASM_CALLLIST),                                    X\n                                                 +               ID=0002\n 0000027A                                    4668+         DS    0H                                                       02-CALL\n 0000027A 4110 D134               00000134   4673+         LA    1,ASM_CALLLIST                    LOAD PARAMETER REG 1   04-IHBINNRR\n 0000027E 4100 D218               00000218   4674+         LA    0,ASM_OPTION       PICKUP  PARAMETER                     03-IHBOPLTX\n 00000282 5000 1000               00000000   4675+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000286 5020 1004               00000004   4676+         ST    (R2),4(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000028A 5030 1008               00000008   4677+         ST    (R3),8(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000028E 4100 D21C               0000021C   4678+         LA    0,ASM_OPTION+4     PICKUP  PARAMETER                     03-IHBOPLTX\n 00000292 5000 100C               0000000C   4679+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000296 4100 D060               00000060   4680+         LA    0,ASM_RC           PICKUP  PARAMETER                     03-IHBOPLTX\n 0000029A 5000 1010               00000010   4681+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000029E 05EF                               4682+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000002A0 4700                               4683+         DC    X'4700'                           NOP INSTRUCTION WITH   02-CALL\n 000002A2 0002                               4684+         DC    AL2(0002)                         ID IN LAST TWO BYTES   02-CALL\n 000002A4 90F0 D060               00000060   4685+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n 000002A8 0101                               4686+         PR    ,                   return back                          01-$$ASMIF\n                                             4687+*---------------------------------------------------------------------*\n                                             4688+* deletetoken - delete a system level name/token pair                 *\n                                             4689+* +0     name pointer                                                 *\n                                             4690+* back : r15 = ieantdl return code                                    *\n                                             4691+*---------------------------------------------------------------------*\n 000002AA                                    4692+DELETETOKEN DS 0H                                                       01-$$ASMIF\n                                             4693+*        modeset mode=sup        supervisor state\n                                             4695+* MACDATE Y-3 81030                                                @D1A\n 000002AA 0700                               4697+         CNOP  0,4                                                      02-MODESET\n 000002AC A715 0004               000002B4   4698+         BRAS  1,*+8                                                    02-MODESET\n 000002B0 0000000C                           4699+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 000002B4 5810 1000               00000000   4700+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000002B8 0A6B                               4701+         SVC   107                                                      02-MODESET\n 000002BA D203 D218 B048 00000218 00001C60   4702+         MVC   ASM_OPTION,=A(IEANT_HOME_LEVEL)                          01-$$ASMIF\n 000002C0 58F0 D070               00000070   4703+         L     R15,ASM_IEANTDL     delete address                       01-$$ASMIF\n                                             4704+*        $$setkey key=zero,save=asm_key key key=zero and save it\n                                             4705+***      $$SETKEY KEY=ZERO,SAVE=ASM_KEY key key=zero and save it\n 000002C4 5820 D114               00000114   4706+         L     R2,ASM_PARMS        name pointer                         01-$$ASMIF\n 000002C8 1812                               4707+         LR    R1,R2               same in r1                           01-$$ASMIF\n 000002CA C0E5 0000 0C7C          00001BC2   4708+         BRASL R14,COPYSTR         copy it                              01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   26\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000002D0 4120 D154               00000154   4709+         LA    R2,ASM_WORK         addr in work                         01-$$ASMIF\n                                             4710+*        call  (15),(asm_option,(r2),asm_rc), call                     X\n                                                 +               MF=(E,ASM_CALLLIST),                                    X\n                                                 +               ID=0003\n 000002D4                                    4713+         DS    0H                                                       02-CALL\n 000002D4 4110 D134               00000134   4718+         LA    1,ASM_CALLLIST                    LOAD PARAMETER REG 1   04-IHBINNRR\n 000002D8 4100 D218               00000218   4719+         LA    0,ASM_OPTION       PICKUP  PARAMETER                     03-IHBOPLTX\n 000002DC 5000 1000               00000000   4720+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000002E0 5020 1004               00000004   4721+         ST    (R2),4(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 000002E4 4100 D060               00000060   4722+         LA    0,ASM_RC           PICKUP  PARAMETER                     03-IHBOPLTX\n 000002E8 5000 1008               00000008   4723+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000002EC 05EF                               4724+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000002EE 4700                               4725+         DC    X'4700'                           NOP INSTRUCTION WITH   02-CALL\n 000002F0 0003                               4726+         DC    AL2(0003)                         ID IN LAST TWO BYTES   02-CALL\n 000002F2 90F0 D060               00000060   4727+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n                                             4728+*        $$setkey back,save=asm_key key key=zero and save it\n                                             4729+***      $$SETKEY BACK,SAVE=ASM_KEY key key=zero and save it\n                                             4730+*        modeset mode=prob       supervisor state\n                                             4732+* MACDATE Y-3 81030                                                @D1A\n 000002F6 0700                               4734+         CNOP  0,4                                                      02-MODESET\n 000002F8 A715 0004               00000300   4735+         BRAS  1,*+8                                                    02-MODESET\n 000002FC 00000004                           4736+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00000300 5810 1000               00000000   4737+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00000304 0A6B                               4738+         SVC   107                                                      02-MODESET\n 00000306 0101                               4739+         PR    ,                   return back                          01-$$ASMIF\n                                             4740+* 21/04/08 name/token service in user/problem state\n                                             4741+*---------------------------------------------------------------------*\n                                             4742+* allocatepages - allocate pages on page bndry for shmem serv         *\n                                             4743+* +0     size required                                                *\n                                             4744+* back : r15 = storage return code                                    *\n                                             4745+*---------------------------------------------------------------------*\n 00000308                                    4746+ALLOCATEPAGES DS    0H                                                  01-$$ASMIF\n 00000308 9823 D114               00000114   4747+         LM    R2,R3,ASM_PARMS     requested size and address           01-$$ASMIF\n 0000030C 5A20 B04C               00001C64   4748+         A     R2,=A(PAGE_SIZE-1)  add page size                        01-$$ASMIF\n 00000310 5420 B050               00001C68   4749+         N     R2,=X'0FFFF000'     and round                            01-$$ASMIF\n                                             4750+*        storage obtain,                                               X\n                                                 +               LENGTH=(R2),                                            X\n                                                 +               ADDR=0(,R3),                                            X\n                                                 +               BNDRY=PAGE,                                             X\n                                                 +               LOC=(ANY,ANY)\n 00000314 1802                               4753+         LR     0,R2                         .STORAGE LENGTH            02-STORAGE\n 00000316 58F0 B054               00001C6C   4754+         L      15,=AL1(B'00000000',(0*16),(0),B'01110110')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 0000031A 58E0 0010               00000010   4755+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 0000031E 58EE 0304               00000304   4756+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000322 58EE 00A0               000000A0   4757+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00000326 B218 E000      00000000            4758+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 0000032A 5010 3000               00000000   4759+         ST     1,0(,R3)                     .SAVE ADDR OF STORAGE      02-STORAGE\n 0000032E 50F0 D060               00000060   4760+         ST    R15,ASM_RC          save return/reason                   01-$$ASMIF\n 00000332 0101                               4761+         PR    ,                   return back                          01-$$ASMIF\n                                             4762+*---------------------------------------------------------------------*\n                                             4763+* freepages - free pages on page bndry for shmem serv                 *\n                                             4764+* +0     size  to free                                                *\n                                             4765+* +4     address                                                      *\n                                             4766+* back : r15 = ieantcr return code                                    *\n1          asmif asm interfcae module                                                                           Page   27\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            4767+*---------------------------------------------------------------------*\n 00000334                                    4768+FREEPAGES DS   0H                                                       01-$$ASMIF\n 00000334 9823 D114               00000114   4769+         LM    R2,R3,ASM_PARMS     requested size and address           01-$$ASMIF\n 00000338 5A20 B04C               00001C64   4770+         A     R2,=A(PAGE_SIZE-1)  add page size                        01-$$ASMIF\n 0000033C 5420 B050               00001C68   4771+         N     R2,=X'0FFFF000'     and round                            01-$$ASMIF\n                                             4772+*        storage release,                                              X\n                                                 +               LENGTH=(R2),                                            X\n                                                 +               ADDR=(R3)\n 00000340 1802                               4775+         LR     0,R2                         .STORAGE LENGTH            02-STORAGE\n 00000342 1813                               4776+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 00000344 A7F8 0003               00000003   4777+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 00000348 58E0 0010               00000010   4778+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 0000034C 58EE 0304               00000304   4779+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000350 58EE 00CC               000000CC   4780+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00000354 B218 E000      00000000            4781+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000358 50F0 D060               00000060   4782+         ST    R15,ASM_RC          save return/reason                   01-$$ASMIF\n 0000035C 0101                               4783+         PR    ,                   return back                          01-$$ASMIF\n                                             4784+*---------------------------------------------------------------------*\n                                             4785+* enq -  enq exclusive for reource                                    *\n                                             4786+* +0     major name                                                   *\n                                             4787+* +4     minor name                                                   *\n                                             4788+* +8     minor name length                                            *\n                                             4789+* +c     max wait in milli sec                                        *\n                                             4790+* back : r15 = ieantcr return code                                    *\n                                             4791+*---------------------------------------------------------------------*\n 0000035E                                    4792+ENQ      DS    0H                                                       01-$$ASMIF\n 0000035E 9825 D114               00000114   4793+         LM    R2,R5,ASM_PARMS    requested size and address            01-$$ASMIF\n 00000362                                    4794+         DS    0H                                                       01-$$ASMIF\n 00000362                                    4795+ENQ_UNCOND DS 0H                                                        01-$$ASMIF\n                                             4796+*        enq   ((r2),(r3),e,(r4),systems),ret=none,                    X\n                                                 +               MF=(E,ASM_ENQL)\n                                             4799+*         MACRO-DATE = 06/24/03                                    @05C\n 00000362                                    4800+         DS    0H                                                  @04A 02-ENQ\n 00000362 4110 D20C               0000020C   4803+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 03-IHBSETR\n 00000366 4240 1001               00000001   4804+         STC   R4,1(0,1)                                                02-ENQ\n 0000036A 9430 1002      00000002            4805+         NI    2(1),48                   SET OPTIONS SPECIFIED @ZA00466 02-ENQ\n 0000036E 9648 1002      00000002            4806+         OI    2(1),72                   FOR THIS ELEMENT      @ZA00466 02-ENQ\n 00000372 18E1                               4807+         LR    14,1                      PRESERVE REG 1            @L4C 02-ENQ\n 00000374 9180 E000      00000000            4808+         TM    0(14),128                 IS IT END OF LIST     @ZA00466 02-ENQ\n 00000378 A714 0008               00000388   4809+         JO    *+16                      YES, GET OUT OF LOOP      @PDA 02-ENQ\n 0000037C 41EE 000C               0000000C   4810+         LA    14,12(14)                 INDEX TO NEXT ENTRY   @ZA00466 02-ENQ\n 00000380 94F8 E002      00000002            4811+         NI    2(14),248                 SET RET AND SMC IN ALL@ZA53727 02-ENQ\n 00000384 A7F4 FFF8               00000374   4812+         J     *-16                      STAY IN LOOP              @PDA 02-ENQ\n 00000388 5020 1004               00000004   4813+         ST    R2,4(0,1)                 STORE QNAME ADDRESS            02-ENQ\n 0000038C 5030 1008               00000008   4814+         ST    R3,8(0,1)                 STORE RNAME ADDRESS            02-ENQ\n 00000390 0A38                               4815+         SVC   56                                                       02-ENQ\n 00000392 12FF                               4816+         LTR   R15,R15           test rc                                01-$$ASMIF\n 00000394 A784 0008               000003A4   4819+         BRC   8,ENQ_00  (BZ)                                           03-\n 00000398 BFFF F000               00000000   4820+         ICM   R15,15,0(R15)     get code                               01-$$ASMIF\n 0000039C 54F0 B058               00001C70   4821+         N     R15,=X'000000FF'  get it proper                          01-$$ASMIF\n 000003A0 A7F4 000B               000003B6   4824+         BRC   15,ENQ_XX  (B)                                           03-\n 000003A4 1BFF                               4825+ENQ_00   SR    R15,R15           clear reg                              01-$$ASMIF\n 000003A6 A7F4 0008               000003B6   4828+         BRC   15,ENQ_XX  (B)                                           03-\n 000003AA 41F0 0008               00000008   4829+ENQ_08   LA    R15,8             get code                               01-$$ASMIF\n 000003AE A7F4 0004               000003B6   4832+         BRC   15,ENQ_XX  (B)                                           03-\n1          asmif asm interfcae module                                                                           Page   28\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000003B2 58F0 B038               00001C50   4833+ENQ_FF   L     R15,=F'-1'        get code                               01-$$ASMIF\n 000003B6 50F0 D060               00000060   4834+ENQ_XX   ST    R15,ASM_RC       back code                               01-$$ASMIF\n 000003BA 0101                               4835+         PR    ,                   branch back                          01-$$ASMIF\n                                             4836+*---------------------------------------------------------------------*\n                                             4837+* deq -  deq resource                                                 *\n                                             4838+* +0     major name                                                   *\n                                             4839+* +4     minor name                                                   *\n                                             4840+* +8     minor name length                                            *\n                                             4841+* back : r15 = ieantcr return code                                    *\n                                             4842+*---------------------------------------------------------------------*\n 000003BC 9824 D114               00000114   4843+DEQ      LM    R2,R4,ASM_PARMS     get parms                            01-$$ASMIF\n                                             4844+*        deq   ((r2),(r3),(r4),systems),ret=none,                      X\n                                                 +               MF=(E,ASM_ENQL)     deq resoure\n                                             4846+*        MACRO-DATE = 10/06/2004                                   @P2C\n 000003C0                                    4849+         DS    0H                                                  @04A 03-ENQ\n 000003C0 4110 D20C               0000020C   4852+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 04-IHBSETR\n 000003C4 4240 1001               00000001   4853+         STC   R4,1(0,1)                                                03-ENQ\n 000003C8 94B0 1002      00000002            4854+         NI    2(1),176                  SET OPTIONS SPECIFIED @ZA00466 03-ENQ\n 000003CC 9648 1002      00000002            4855+         OI    2(1),72                   FOR THIS ELEMENT      @ZA00466 03-ENQ\n 000003D0 18E1                               4856+         LR    14,1                      PRESERVE REG 1            @L4C 03-ENQ\n 000003D2 9180 E000      00000000            4857+         TM    0(14),128                 IS IT END OF LIST     @ZA00466 03-ENQ\n 000003D6 A714 0008               000003E6   4858+         JO    *+16                      YES, GET OUT OF LOOP      @PDA 03-ENQ\n 000003DA 41EE 000C               0000000C   4859+         LA    14,12(14)                 INDEX TO NEXT ENTRY   @ZA00466 03-ENQ\n 000003DE 94F8 E002      00000002            4860+         NI    2(14),248                 SET RET AND SMC IN ALL@ZA53727 03-ENQ\n 000003E2 A7F4 FFF8               000003D2   4861+         J     *-16                      STAY IN LOOP              @PDA 03-ENQ\n 000003E6 5020 1004               00000004   4862+         ST    R2,4(0,1)                 STORE QNAME ADDRESS            03-ENQ\n 000003EA 5030 1008               00000008   4863+         ST    R3,8(0,1)                 STORE RNAME ADDRESS            03-ENQ\n 000003EE 0A30                               4864+         SVC   48                                                  SDS1 02-DEQ\n 000003F0 12FF                               4865+         LTR   R15,R15           test rc                                01-$$ASMIF\n 000003F2 A784 0006               000003FE   4868+         BRC   8,DEQ_XX  (BZ)                                           03-\n 000003F6 BFFF F000               00000000   4869+         ICM   R15,15,0(R15)     get code                               01-$$ASMIF\n 000003FA 54F0 B058               00001C70   4870+         N     R15,=X'000000FF'  get it proper                          01-$$ASMIF\n 000003FE 50F0 D060               00000060   4871+DEQ_XX   ST    R15,ASM_RC        save code                              01-$$ASMIF\n 00000402 0101                               4872+         PR    ,                   return back                          01-$$ASMIF\n                                             4873+*---------------------------------------------------------------------*\n                                             4874+* SVC -  SVC call                                                     *\n                                             4875+* +0     SVC number                                                   *\n                                             4876+* +4     parm list                                                    *\n                                             4877+* back : r15 = ieantcr return code                                    *\n                                             4878+*---------------------------------------------------------------------*\n 00000404 9801 D114               00000114   4879+SVC      LM    R0,R1,ASM_PARMS     get parms                            01-$$ASMIF\n 00000408 1820                               4880+         LR    R2,R0              get SVC                               01-$$ASMIF\n 0000040A 4420 B26E               00001E86   4881+         EX    R2,SVC_EXE         exec SVC                              01-$$ASMIF\n 0000040E 50F0 D060               00000060   4882+SVC_XX   ST    R15,ASM_RC        save code                              01-$$ASMIF\n 00000412 0101                               4883+         PR    ,                 return back                            01-$$ASMIF\n                                             4884+*---------------------------------------------------------------------*\n                                             4885+* attachmvs - ATTACH an MVS subtask as processs                       *\n                                             4886+* +0     program name length                                          *\n                                             4887+* +4     program name                                                 *\n                                             4888+* +8     parm length                                                  *\n                                             4889+* +12    parm                                                         *\n                                             4890+* back : r15 = ieantcr return code                                    *\n                                             4891+*---------------------------------------------------------------------*\n 00000414 9825 D114               00000114   4892+ATTACHMVS LM   R2,R5,ASM_PARMS     get parms                            01-$$ASMIF\n                                             4893+*        call  bpx1atm,                                                X\n1          asmif asm interfcae module                                                                           Page   29\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +               ((R2),                                                  X\n                                                 +               (R3),                                                   X\n                                                 +               (R4),                                                   X\n                                                 +               (R5),                                                   X\n                                                 +               =A(0),                                                  X\n                                                 +               =A(0),                                                  X\n                                                 +               ASM_BPX1_RETVAL,                                        X\n                                                 +               ASM_BPX1_RETCODE,                                       X\n                                                 +               ASM_BPX1_RSNCODE),                                      X\n                                                 +               VL,MF=(E,ASM_BPX1)\n 00000418                                    4896+         DS    0H                                                       02-CALL\n 00000418 4110 D348               00000348   4901+         LA    1,ASM_BPX1                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000041C 18E2                               4902+         LR    14,(R2)                           PICK UP PARAMETER      03-IHBOPLTX\n 0000041E 18F3                               4903+         LR    15,(R3)                           PICK UP PARAMETER      03-IHBOPLTX\n 00000420 1804                               4904+         LR    0,(R4)                            PICK UP PARAMETER      03-IHBOPLTX\n 00000422 90E0 1000               00000000   4905+         STM   14,0,0(1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000426 18E5                               4906+         LR    14,(R5)                           PICK UP PARAMETER      03-IHBOPLTX\n 00000428 41F0 B05C               00001C74   4907+         LA    15,=A(0)           PICKUP PARAMETER                      03-IHBOPLTX\n 0000042C 4100 B05C               00001C74   4908+         LA    0,=A(0)            PICKUP PARAMETER                      03-IHBOPLTX\n 00000430 90E0 100C               0000000C   4909+         STM   14,0,12(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000434 41E0 D3C8               000003C8   4910+         LA    14,ASM_BPX1_RETVAL PICKUP PARAMETER                      03-IHBOPLTX\n 00000438 41F0 D3CC               000003CC   4911+         LA    15,ASM_BPX1_RETCODE                                     X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 0000043C 4100 D3D0               000003D0   4912+         LA    0,ASM_BPX1_RSNCODE PICKUP PARAMETER                      03-IHBOPLTX\n 00000440 90E0 1018               00000018   4913+         STM   14,0,24(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000444 9680 1020      00000020            4914+         OI    32(1),X'80'                SET LAST WORD BIT ON @G860P40 03-IHBOPLTX\n 00000448                                    4915+         CNOP  0,4                                                      02-CALL\n 00000448 A7F5 0004               00000450   4916+         BRAS  15,*+8                            BRANCH AROUND VCON     02-CALL\n 0000044C 00000000                           4917+         DC    V(BPX1ATM)                        ENTRY POINT ADDRESS    02-CALL\n 00000450 58FF 0000               00000000   4918+         L     15,0(15,0)                        LOAD 15 WITH ENTRY ADR 02-CALL\n 00000454 05EF                               4919+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000456 58F0 D3CC               000003CC   4920+         L     R15,ASM_BPX1_RETCODE get reason                          01-$$ASMIF\n 0000045A 50F0 D064               00000064   4921+         ST    R15,ASM_REASON    save it                                01-$$ASMIF\n 0000045E 58F0 D3C8               000003C8   4922+         L     R15,ASM_BPX1_RETVAL  get code                            01-$$ASMIF\n 00000462 50F0 D060               00000060   4923+         ST    R15,ASM_RC        save it                                01-$$ASMIF\n 00000466 0101                               4924+         PR    ,                 return back                            01-$$ASMIF\n 00000468 0101                               4925+         PR    ,                 return back                            01-$$ASMIF\n                                             4926+*---------------------------------------------------------------------*\n                                             4927+* clock - ask for STCK                                                *\n                                             4928+* +0     stck reply addres                                            *\n                                             4929+*---------------------------------------------------------------------*\n 0000046A 5820 D114               00000114   4930+CLOCK    L     R2,ASM_PARMS       get parms                             01-$$ASMIF\n 0000046E B205 2000      00000000            4931+         STCK  0(R2)              get clock                             01-$$ASMIF\n 00000472 1BFF                               4932+         SR    R15,R15                                                  01-$$ASMIF\n 00000474 0101                               4933+         PR    ,                                                        01-$$ASMIF\n                                             4934+*---------------------------------------------------------------------*\n                                             4935+* timeused return the used CPU time in long long MIC                  *\n                                             4936+* +0     timeused reply address                                       *\n                                             4937+*---------------------------------------------------------------------*\n 00000476 5820 D114               00000114   4938+TIMEUSED L     R2,ASM_PARMS       get parms                             01-$$ASMIF\n                                             4939+*        timeused storadr=(r2),cpu=TOD,LINKAGE=SYSTEM\n                                             4941+*        MACDATE 04/06/2005                                        @L3C\n 0000047A 58E0 0010               00000010   4943+         L     14,16(0,0)         CVT ADDRESS                      @L1A 02-TIMEUSED\n 0000047E 58EE 0304               00000304   4944+         L     14,772(14,0)       SFT ADDRESS                      @L1A 02-TIMEUSED\n 00000482 58EE 00F4               000000F4   4945+         L     14,244(14,0)       LX/EX FOR SERVICE ROUTINE        @L1A 02-TIMEUSED\n1          asmif asm interfcae module                                                                           Page   30\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000486 4100 0000               00000000   4946+         LA    0,0                SET TIMING FLAG TO CPU/TOD       @D1A 02-TIMEUSED\n 0000048A B218 E000      00000000            4947+         PC    0(14)              PC TO TIMEUSED SERVICE ROUTINE   @L1A 02-TIMEUSED\n 0000048E 12FF                               4948+         LTR   15,15              CHECK THE RETURN CODE            @L1A 02-TIMEUSED\n 00000490 A774 0004               00000498   4949+         JNZ   *+8                BAD RETURN CODE SO SKIP STORE    @L1A 02-TIMEUSED\n 00000494 9001 2000               00000000   4950+         STM   0,1,0(R2)          AREA FOR RETURN OF TIME VALUE    @L1A 02-TIMEUSED\n 00000498 9801 2000               00000000   4951+         LM   R0,R1,0(R2)          get tod                              01-$$ASMIF\n 0000049C 8C00 000C               0000000C   4952+         SRDL R0,12                proper pos                           01-$$ASMIF\n 000004A0 9001 2000               00000000   4953+         STM  R0,R1,0(R2)          back in MIC                          01-$$ASMIF\n 000004A4 1BFF                               4954+         SR    R15,R15                                                  01-$$ASMIF\n 000004A6 0101                               4955+         PR    ,                                                        01-$$ASMIF\n                                             4956+*---------------------------------------------------------------------*\n                                             4957+* issue an IEATDUMP                                                   *\n                                             4958+* +0     name pattern                                                 *\n                                             4959+* +4     dump title\n                                             4960+* +8     DDNAME flag\n                                             4961+*---------------------------------------------------------------------*\n 000004A8 D232 D474 B276 00000474 00001E8E   4962+TDUMP    MVC   ASM_TDUMP_NAME(L'TDUMP_DEF_NAMEL+1),TDUMP_DEF_NAME       01-$$ASMIF\n 000004AE D20D D4D9 B2A9 000004D9 00001EC1   4963+         MVC   ASM_TDUMP_DESC(L'TDUMP_DEF_DESCL+1),TDUMP_DEF_DESC       01-$$ASMIF\n 000004B4 5810 D114               00000114   4964+         L     R1,ASM_PARMS       get parms                             01-$$ASMIF\n 000004B8 1211                               4965+         LTR   R1,R1              test                                  01-$$ASMIF\n 000004BA A784 0015               000004E4   4966+         JZ    TDUMP_NAME_OK      if o.k.                               01-$$ASMIF\n 000004BE 4130 D474               00000474   4967+         LA    R3,ASM_TDUMP_NAME  target                                01-$$ASMIF\n 000004C2 C0E5 0000 0B97          00001BF0   4968+         BRASL R14,STRLEN         length                                01-$$ASMIF\n 000004C8 12FF                               4969+         LTR   R15,R15            test length                           01-$$ASMIF\n 000004CA A7D4 000D               000004E4   4970+         JNP   TDUMP_NAME_OK      if default                            01-$$ASMIF\n 000004CE A7FE 0064               00000064   4971+         CHI   R15,100            o.k ?                                 01-$$ASMIF\n 000004D2 A744 0004               000004DA   4972+         JL    TDUMP_NAME         jump if o.k                           01-$$ASMIF\n 000004D6 A7F8 0064               00000064   4973+         LHI   R15,100            set def                               01-$$ASMIF\n 000004DA 42F0 D474               00000474   4974+TDUMP_NAME STC R15,ASM_TDUMP_NAME store                                 01-$$ASMIF\n 000004DE 06F0                               4975+         BCTR  R15,0              decr                                  01-$$ASMIF\n 000004E0 44F0 B270               00001E88   4976+         EX    R15,TDUMP_COPY     copy                                  01-$$ASMIF\n 000004E4                                    4977+TDUMP_NAME_OK DS 0H                                                     01-$$ASMIF\n 000004E4 5810 D118               00000118   4978+         L     R1,ASM_PARMS+4     get parms                             01-$$ASMIF\n 000004E8 1211                               4979+         LTR   R1,R1              test length                           01-$$ASMIF\n 000004EA A784 0015               00000514   4980+         JZ    TDUMP_DESC_OK      if ok                                 01-$$ASMIF\n 000004EE 4130 D4D9               000004D9   4981+         LA    R3,ASM_TDUMP_DESC  target                                01-$$ASMIF\n 000004F2 C0E5 0000 0B7F          00001BF0   4982+         BRASL R14,STRLEN         length                                01-$$ASMIF\n 000004F8 12FF                               4983+         LTR   R15,R15            test length                           01-$$ASMIF\n 000004FA A7D4 000D               00000514   4984+         JNP   TDUMP_DESC_OK      if default                            01-$$ASMIF\n 000004FE A7FE 0064               00000064   4985+         CHI   R15,100            o.k ?                                 01-$$ASMIF\n 00000502 A744 0004               0000050A   4986+         JL    TDUMP_DESC         jump if o.k                           01-$$ASMIF\n 00000506 A7F8 0064               00000064   4987+         LHI   R15,100            set def                               01-$$ASMIF\n 0000050A 42F0 D4D9               000004D9   4988+TDUMP_DESC STC R15,ASM_TDUMP_DESC store                                 01-$$ASMIF\n 0000050E 06F0                               4989+         BCTR  R15,0              decr                                  01-$$ASMIF\n 00000510 44F0 B270               00001E88   4990+         EX    R15,TDUMP_COPY     copy                                  01-$$ASMIF\n                                             4991+* 19/12/11 IEATDUMP with DDNAME\n 00000514                                    4992+TDUMP_DESC_OK DS 0H                                                     01-$$ASMIF\n 00000514 D503 D11C B194 0000011C 00001DAC   5004+                CLC             ASM_PARMS+8,ZERO                        04-ASMMPOPI\n 0000051A A784 0038               0000058A   5005+           BRC          8,#@LB1                                         03-ASMMIFPR\n                                             5007+*        IEATDUMP DDNAME=ASM_TDUMP_NAME+1,                             X\n                                                 +               HDR=ASM_TDUMP_DESC,                                     X\n                                                 +               MF=(E,ASM_IEATDUMP,COMPLETE)\n                                             5009+*                  MACDATE -03/03/06-<1>\n 0000051E                                    5010+M00M0118 DS    0H                             IEATDUMP-1                02-IEATDUMP\n                                             5011+              PUSH  PRINT                                               02-IEATDUMP\n1          asmif asm interfcae module                                                                           Page   31\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            5012+                  PRINT ON                                              02-IEATDUMP\n 0000051E 4110 D3F8               000003F8   5013+         LA    1,ASM_IEATDUMP     ++ LOCATE ARG PARMS                   02-IEATDUMP\n 00000522 D77B 1000 1000 00000000 00000000   5014+         XC    0(124,1),0(1)      ++ INITIALIZE                         02-IEATDUMP\n 00000528 D203 1000 B060 00000000 00001C78   5015+         MVC   0(4,1),=CL4'TDMP'  ++ CL4 CONSTANT                       02-IEATDUMP\n 0000052E 9680 1008      00000008            5016+         OI    8(1),B'10000000'   ++ INPUT BL1                          02-IEATDUMP\n 00000532 9640 100A      0000000A            5017+         OI    10(1),B'01000000'  ++ INPUT BL1                          02-IEATDUMP\n 00000536 D207 101C D475 0000001C 00000475   5018+         MVC   28(8,1),ASM_TDUMP_NAME+1 ++ INPUT XDDNAME                02-IEATDUMP\n 0000053C D203 1034 B064 00000034 00001C7C   5019+         MVC   52(4,1),=AL4(0)    ++ INPUT XIDXAD                       02-IEATDUMP\n 00000542 D203 103C B064 0000003C 00001C7C   5020+         MVC   60(4,1),=AL4(0)    ++ INPUT XSYMRECAD                    02-IEATDUMP\n 00000548 D203 1044 B064 00000044 00001C7C   5021+         MVC   68(4,1),=AL4(0)    ++ INPUT XINTOKENAD                   02-IEATDUMP\n 0000054E D203 104C B064 0000004C 00001C7C   5022+         MVC   76(4,1),=AL4(0)    ++ INPUT XREMOTEAD                    02-IEATDUMP\n 00000554 D203 1054 B064 00000054 00001C7C   5023+         MVC   84(4,1),=AL4(0)    ++ INPUT XPROBDESCAD                  02-IEATDUMP\n 0000055A D203 105C B064 0000005C 00001C7C   5024+         MVC   92(4,1),=AL4(0)    ++ INPUT XLISTAD                      02-IEATDUMP\n 00000560 D203 1064 B064 00000064 00001C7C   5025+         MVC   100(4,1),=AL4(0)   ++ INPUT XSUBPLSTAD                   02-IEATDUMP\n 00000566 D203 106C B064 0000006C 00001C7C   5026+         MVC   108(4,1),=AL4(0)   ++ INPUT XDSPLISTAD                   02-IEATDUMP\n 0000056C D203 1074 B064 00000074 00001C7C   5027+         MVC   116(4,1),=AL4(0)   ++ INPUT XECBAD                       02-IEATDUMP\n 00000572 D201 1004 B0EC 00000004 00001D04   5028+         MVC   4(2,1),=AL2(124)   ++ INPUT XPLISTLEN XL2                02-IEATDUMP\n 00000578 9201 1006      00000006            5029+         MVI   6(1),1             ++ INPUT XVERSION XL1                 02-IEATDUMP\n 0000057C 41E0 D4D9               000004D9   5030+         LA    14,ASM_TDUMP_DESC  ++ INPUT XHDR                         02-IEATDUMP\n 00000580 50E0 102C               0000002C   5031+         ST    14,44(,1)          ++ INPUT XHDR                         02-IEATDUMP\n 00000584 0A33                               5032+         SVC 51      Invoke Transaction dump via SVC                    02-IEATDUMP\n 00000586                                    5033+AMGE0118 DS    0H                 ++ BYPASS INVOCATION                  02-IEATDUMP\n                                             5034+         POP   PRINT                                                    02-IEATDUMP\n                                             5035+*                                            IEATDUMP-1\n000000586 A7F4 0035               000005F0   5042+         BRC   15,#@LB3                                                 02-\n 0000058A                                    5043+#@LB1    DC    0H                                                       02-\n                                             5045+* 05/10/07 STORE IEATDUMP REASON CODE\n                                             5046+*        IEATDUMP dsn=ASM_TDUMP_NAME,                                  X\n                                                 +               HDR=ASM_TDUMP_DESC,                                     X\n                                                 +               MF=(E,ASM_IEATDUMP,COMPLETE)\n                                             5048+*                  MACDATE -03/03/06-<1>\n 0000058A                                    5049+M00M0122 DS    0H                             IEATDUMP-1                02-IEATDUMP\n                                             5050+              PUSH  PRINT                                               02-IEATDUMP\n                                             5051+                  PRINT ON                                              02-IEATDUMP\n 0000058A 4110 D3F8               000003F8   5052+         LA    1,ASM_IEATDUMP     ++ LOCATE ARG PARMS                   02-IEATDUMP\n 0000058E D77B 1000 1000 00000000 00000000   5053+         XC    0(124,1),0(1)      ++ INITIALIZE                         02-IEATDUMP\n 00000594 D203 1000 B060 00000000 00001C78   5054+         MVC   0(4,1),=CL4'TDMP'  ++ CL4 CONSTANT                       02-IEATDUMP\n 0000059A 9680 1008      00000008            5055+         OI    8(1),B'10000000'   ++ INPUT BL1                          02-IEATDUMP\n 0000059E D203 1034 B064 00000034 00001C7C   5056+         MVC   52(4,1),=AL4(0)    ++ INPUT XIDXAD                       02-IEATDUMP\n 000005A4 D203 103C B064 0000003C 00001C7C   5057+         MVC   60(4,1),=AL4(0)    ++ INPUT XSYMRECAD                    02-IEATDUMP\n 000005AA D203 1044 B064 00000044 00001C7C   5058+         MVC   68(4,1),=AL4(0)    ++ INPUT XINTOKENAD                   02-IEATDUMP\n 000005B0 D203 104C B064 0000004C 00001C7C   5059+         MVC   76(4,1),=AL4(0)    ++ INPUT XREMOTEAD                    02-IEATDUMP\n 000005B6 D203 1054 B064 00000054 00001C7C   5060+         MVC   84(4,1),=AL4(0)    ++ INPUT XPROBDESCAD                  02-IEATDUMP\n 000005BC D203 105C B064 0000005C 00001C7C   5061+         MVC   92(4,1),=AL4(0)    ++ INPUT XLISTAD                      02-IEATDUMP\n 000005C2 D203 1064 B064 00000064 00001C7C   5062+         MVC   100(4,1),=AL4(0)   ++ INPUT XSUBPLSTAD                   02-IEATDUMP\n 000005C8 D203 106C B064 0000006C 00001C7C   5063+         MVC   108(4,1),=AL4(0)   ++ INPUT XDSPLISTAD                   02-IEATDUMP\n 000005CE D203 1074 B064 00000074 00001C7C   5064+         MVC   116(4,1),=AL4(0)   ++ INPUT XECBAD                       02-IEATDUMP\n 000005D4 D201 1004 B0EC 00000004 00001D04   5065+         MVC   4(2,1),=AL2(124)   ++ INPUT XPLISTLEN XL2                02-IEATDUMP\n 000005DA 9201 1006      00000006            5066+         MVI   6(1),1             ++ INPUT XVERSION XL1                 02-IEATDUMP\n 000005DE 41E0 D474               00000474   5067+         LA    14,ASM_TDUMP_NAME  ++ INPUT XDSN                         02-IEATDUMP\n 000005E2 50E0 1024               00000024   5068+         ST    14,36(,1)          ++ INPUT XDSN                         02-IEATDUMP\n 000005E6 41E0 D4D9               000004D9   5069+         LA    14,ASM_TDUMP_DESC  ++ INPUT XHDR                         02-IEATDUMP\n 000005EA 50E0 102C               0000002C   5070+         ST    14,44(,1)          ++ INPUT XHDR                         02-IEATDUMP\n 000005EE 0A33                               5071+         SVC 51      Invoke Transaction dump via SVC                    02-IEATDUMP\n1          asmif asm interfcae module                                                                           Page   32\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000005F0                                    5072+AMGE0122 DS    0H                 ++ BYPASS INVOCATION                  02-IEATDUMP\n                                             5073+         POP   PRINT                                                    02-IEATDUMP\n                                             5074+*                                            IEATDUMP-1\n0000005F0                                    5081+#@LB3    DC    0H                                                       02-\n                                             5083+* 19/12/11 IEATDUMP with DDNAME\n 000005F0 50F0 D060               00000060   5084+         ST    R15,ASM_RC                                               01-$$ASMIF\n 000005F4 5000 D064               00000064   5085+         ST    R0,ASM_REASON                                            01-$$ASMIF\n 000005F8 12FF                               5086+         LTR   R15,R15                                                  01-$$ASMIF\n 000005FA A784 0002               000005FE   5089+         BRC   8,TDUMP_NODUMP  (BZ)                                     03-\n 000005FE                                    5090+TDUMP_NODUMP DS 0H                                                      01-$$ASMIF\n                                             5091+* 05/10/07 store IEATDUMP reason code\n 000005FE 0101                               5092+         PR    ,                 return back                            01-$$ASMIF\n                                             5093+* 18/11/05 LOGGER support\n                                             5094+* 13/01/06 browse logger\n                                             5095+*---------------------------------------------------------------------*\n                                             5096+* LOGGER support                                                      *\n                                             5097+* +0 0 connect to logger stream                                       *\n                                             5098+*   -1 discoonect                                                     *\n                                             5099+*    1 log a request                                                  *\n                                             5100+*    2 read logger from oldtoyoung                                    *\n                                             5101+*    3 read log from youngtoold (parm+8 contain addr , length)        *\n                                             5102+*    a stream to log                                                  *\n                                             5103+* +4 stream or logger name address                                    *\n                                             5104+* +8 length of the stream                                             *\n                                             5105+* +c time stemp field pointer                                         *\n                                             5106+*    +0 binary time value in .01 sec                                  *\n                                             5107+*    +4 DATE in YYYYDDD    char format                                *\n                                             5108+*---------------------------------------------------------------------*\n 00000600 9824 D114               00000114   5109+LOGGER   LM    R2,R4,ASM_PARMS     get parms                            01-$$ASMIF\n 00000604 5850 D124               00000124   5110+         L     R5,ASM_PARMS+16     get time                             01-$$ASMIF\n 00000608 1BFF                               5111+         SR    R15,R15             clear return                         01-$$ASMIF\n 0000060A 1222                               5112+         LTR   R2,R2               test code                            01-$$ASMIF\n 0000060C A744 004E               000006A8   5113+         JM    LOGGER_DISCO        disconnect                           01-$$ASMIF\n 00000610 A724 007C               00000708   5114+         JP    LOGGER_LOG          log                                  01-$$ASMIF\n 00000614 1244                               5115+         LTR   R4,R4               test length                          01-$$ASMIF\n 00000616 A7D4 033D               00000C90   5116+         JNP   LOGGER_08           return if not o.k.                   01-$$ASMIF\n 0000061A D219 D53E B114 0000053E 00001D2C   5117+         MVC   ASM_STREAMNAME,BLANKS init stream name                   01-$$ASMIF\n 00000620 A74E 001A               0000001A   5118+         CHI   R4,L'ASM_STREAMNAME TEST LENGTH                          01-$$ASMIF\n 00000624 A744 0004               0000062C   5119+         JL    *+8                  jump if ok.k                        01-$$ASMIF\n 00000628 A748 001A               0000001A   5120+         LHI   R4,L'ASM_STREAMNAME GET LENGTH                           01-$$ASMIF\n 0000062C A74A FFFF               FFFFFFFF   5121+         AHI   R4,-1               decr it                              01-$$ASMIF\n 00000630 4440 B360               00001F78   5122+         EX    R4,LOGGER_SETSTREAM set stream                           01-$$ASMIF\n 00000634 D519 D53E B114 0000053E 00001D2C   5123+         CLC   ASM_STREAMNAME,BLANKS active                             01-$$ASMIF\n 0000063A A784 032B               00000C90   5124+         JE    LOGGER_08           if no stream name                    01-$$ASMIF\n 0000063E D70F D558 D558 00000558 00000558   5125+         XC    ASM_STREAMTOKEN,ASM_STREAMTOKEN                          01-$$ASMIF\n                                             5126+*        ixgconn request=connect,                                      X\n                                                 +               STREAMNAME=ASM_STREAMNAME,                              X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               AUTH=WRITE,                                             X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               MF=(E,ASM_IXGCONN)\n                                             5128+*                   MACDATE -09/11/24-<2>\n1          asmif asm interfcae module                                                                           Page   33\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000644                                    5129+M00M0128 DS    0H                             IXGCONN-2                 02-IXGCONN\n                                             5130+              PUSH  PRINT                                               02-IXGCONN\n                                             5131+                   PRINT ON                                             02-IXGCONN\n 00000644 4110 D580               00000580   5132+         LA    1,ASM_IXGCONN      ++ LOCATE ARG PARMS                   02-IXGCONN\n 00000648 D7B9 1000 1000 00000000 00000000   5133+         XC    0(186,1),0(1)      ++ INITIALIZE                         02-IXGCONN\n 0000064E 9201 1004      00000004            5134+         MVI   4(1),1             ++ INPUT XVERSION XL1                 02-IXGCONN\n 00000652 96A8 1005      00000005            5135+         OI    5(1),B'10101000'   ++ INPUT BL1                          02-IXGCONN\n 00000656 9202 1007      00000007            5136+         MVI   7(1),2             ++ XL1 CONSTANT                       02-IXGCONN\n 0000065A 41E0 D768               00000768   5137+         LA    14,ASM_ANSAREA     ++ OUTPUT XANSAREA                    02-IXGCONN\n 0000065E 50E0 1008               00000008   5138+         ST    14,8(,1)           ++ OUTPUT XANSAREA                    02-IXGCONN\n 00000662 9640 102C      0000002C            5139+         OI    44(1),B'01000000'  ++ INPUT BL1                          02-IXGCONN\n 00000666 D203 1030 B068 00000030 00001C80   5140+         MVC   48(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGCONN\n 0000066C D219 1090 D53E 00000090 0000053E   5141+         MVC   144(26,1),ASM_STREAMNAME ++ INPUT XSTREAMNAME            02-IXGCONN\n 00000672 5010 1000               00000000   5142+         ST    1,0(,1)            ++ STORE ADDR OF PARM LIST            02-IXGCONN\n 00000676 4110 1000               00000000   5143+         LA    1,0(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGCONN\n 0000067A 58F0 0010               00000010   5144+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGCONN\n 0000067E 58FF 008C               0000008C   5145+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGCONN\n 00000682 58FF 0120               00000120   5146+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGCONN\n 00000686 58FF 007C               0000007C   5147+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGCONN\n 0000068A 4100 0007               00000007   5148+         LA    0,7                  EX OF CONNECT/DISCONNECT SERVICE    02-IXGCONN\n 0000068E 05EF                               5149+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGCONN\n 00000690 5810 1000               00000000   5150+         L     1,0(,1)            ++ RESTORE ADDR OF PARM LIST          02-IXGCONN\n 00000694 D20F D558 10AA 00000558 000000AA   5151+         MVC   ASM_STREAMTOKEN(16),170(1) ++ XSTREAMTOKEN CL16          02-IXGCONN\n 0000069A 50F0 D060               00000060   5152+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGCONN\n                                             5153+         POP   PRINT                                                    02-IXGCONN\n                                             5154+*                                            IXGCONN-2\n00000069E 12FF                               5156+         LTR   R15,R15             test code                            01-$$ASMIF\n 000006A0 A774 02F8               00000C90   5157+         JNZ   LOGGER_ERROR                                             01-$$ASMIF\n                                             5158+*        stimer wait,bintvl=logger_onesec wait a sec\n                                             5159+***      STIMER WAIT,BINTVL=LOGGER_ONESEC wait a sec\n 000006A4 A7F4 02FA               00000C98   5160+         J     LOGGER_00           jump out                             01-$$ASMIF\n 000006A8                                    5161+LOGGER_DISCO DS 0H                                                      01-$$ASMIF\n 000006A8 D40F D558 D558 00000558 00000558   5162+         NC    ASM_STREAMTOKEN,ASM_STREAMTOKEN                          01-$$ASMIF\n 000006AE A784 02F6               00000C9A   5163+         JZ    LOGGER_XX           jump if no                           01-$$ASMIF\n                                             5164+*        ixgconn request=disconnect,                                   X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               MF=(E,ASM_IXGCONN)\n                                             5166+*                   MACDATE -09/11/24-<2>\n 000006B2                                    5167+M00M0129 DS    0H                             IXGCONN-2                 02-IXGCONN\n                                             5168+              PUSH  PRINT                                               02-IXGCONN\n                                             5169+                   PRINT ON                                             02-IXGCONN\n 000006B2 4110 D580               00000580   5170+         LA    1,ASM_IXGCONN      ++ LOCATE ARG PARMS                   02-IXGCONN\n 000006B6 D7B9 1000 1000 00000000 00000000   5171+         XC    0(186,1),0(1)      ++ INITIALIZE                         02-IXGCONN\n 000006BC 9201 1004      00000004            5172+         MVI   4(1),1             ++ INPUT XVERSION XL1                 02-IXGCONN\n 000006C0 9202 1007      00000007            5173+         MVI   7(1),2             ++ XL1 CONSTANT                       02-IXGCONN\n 000006C4 41E0 D768               00000768   5174+         LA    14,ASM_ANSAREA     ++ OUTPUT XANSAREA                    02-IXGCONN\n 000006C8 50E0 1008               00000008   5175+         ST    14,8(,1)           ++ OUTPUT XANSAREA                    02-IXGCONN\n 000006CC D203 1030 B068 00000030 00001C80   5176+         MVC   48(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGCONN\n 000006D2 D20F 10AA D558 000000AA 00000558   5177+         MVC   170(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN          02-IXGCONN\n 000006D8 5010 1000               00000000   5178+         ST    1,0(,1)            ++ STORE ADDR OF PARM LIST            02-IXGCONN\n 000006DC 4110 1000               00000000   5179+         LA    1,0(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGCONN\n1          asmif asm interfcae module                                                                           Page   34\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000006E0 58F0 0010               00000010   5180+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGCONN\n 000006E4 58FF 008C               0000008C   5181+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGCONN\n 000006E8 58FF 0120               00000120   5182+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGCONN\n 000006EC 58FF 007C               0000007C   5183+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGCONN\n 000006F0 4100 0007               00000007   5184+         LA    0,7                  EX OF CONNECT/DISCONNECT SERVICE    02-IXGCONN\n 000006F4 05EF                               5185+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGCONN\n 000006F6 5810 1000               00000000   5186+         L     1,0(,1)            ++ RESTORE ADDR OF PARM LIST          02-IXGCONN\n 000006FA 50F0 D060               00000060   5187+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGCONN\n                                             5188+         POP   PRINT                                                    02-IXGCONN\n                                             5189+*                                            IXGCONN-2\n0000006FE 12FF                               5191+         LTR   R15,R15             test code                            01-$$ASMIF\n 00000700 A774 02C8               00000C90   5192+         JNZ   LOGGER_ERROR        jump out                             01-$$ASMIF\n 00000704 A7F4 02CA               00000C98   5193+         J     LOGGER_00           jump back                            01-$$ASMIF\n 00000708                                    5194+LOGGER_LOG DS 0H                                                        01-$$ASMIF\n 00000708 D40F D558 D558 00000558 00000558   5195+         NC    ASM_STREAMTOKEN,ASM_STREAMTOKEN                          01-$$ASMIF\n 0000070E A784 02C6               00000C9A   5196+         JZ    LOGGER_XX           return if not                        01-$$ASMIF\n 00000712 A72E 0001               00000001   5197+         CHI   R2,1                check if log                         01-$$ASMIF\n 00000716 A724 0031               00000778   5198+         JH    LOGGER_BROWSE       jump if browse                       01-$$ASMIF\n 0000071A 1244                               5199+         LTR   R4,R4               test length                          01-$$ASMIF\n 0000071C A7D4 02BA               00000C90   5200+         JNP   LOGGER_08           jump if not positive                 01-$$ASMIF\n 00000720 1233                               5201+         LTR   R3,R3               test data                            01-$$ASMIF\n 00000722 A784 02B7               00000C90   5202+         JZ    LOGGER_08           jump if not data                     01-$$ASMIF\n 00000726 5040 D568               00000568   5203+         ST    R4,ASM_LOGGER_LENGTH save length                         01-$$ASMIF\n                                             5204+*        ixgwrite buffer=(r3),                                         X\n                                                 +               BLOCKLEN=ASM_LOGGER_LENGTH,                             X\n                                                 +               MODE=ASYNCNORESPONSE,                                   X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               MF=(E,ASM_IXGWRITE)\n                                             5206+*                     MACDATE -09/11/24-<2>\n 0000072A                                    5207+M00M0130 DS    0H                             IXGWRITE-2                02-IXGWRITE\n                                             5208+              PUSH  PRINT                                               02-IXGWRITE\n                                             5209+                     PRINT ON                                           02-IXGWRITE\n 0000072A 4110 D640               00000640   5210+         LA    1,ASM_IXGWRITE     ++ LOCATE ARG PARMS                   02-IXGWRITE\n 0000072E D73F 1000 1000 00000000 00000000   5211+         XC    0(64,1),0(1)       ++ INITIALIZE                         02-IXGWRITE\n 00000734 9608 1001      00000001            5212+         OI    1(1),B'00001000'   ++ INPUT BL1                          02-IXGWRITE\n 00000738 5030 100C               0000000C   5213+         ST    R3,12(,1)          ++ INPUT XBUFFER                      02-IXGWRITE\n 0000073C D203 1010 D568 00000010 00000568   5214+         MVC   16(4,1),ASM_LOGGER_LENGTH ++ INPUT XBLOCKLEN             02-IXGWRITE\n 00000742 41E0 D768               00000768   5215+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGWRITE\n 00000746 50E0 1020               00000020   5216+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGWRITE\n 0000074A D203 1024 B068 00000024 00001C80   5217+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGWRITE\n 00000750 D20F 1030 D558 00000030 00000558   5218+         MVC   48(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGWRITE\n 00000756 5010 1004               00000004   5219+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGWRITE\n 0000075A 4110 1004               00000004   5220+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGWRITE\n 0000075E 58F0 0010               00000010   5221+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGWRITE\n 00000762 58FF 008C               0000008C   5222+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGWRITE\n 00000766 58FF 0120               00000120   5223+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGWRITE\n 0000076A 58FF 007C               0000007C   5224+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGWRITE\n 0000076E 4100 0002               00000002   5225+         LA    0,2                  EX OF WRITE SERVICE                 02-IXGWRITE\n 00000772 05EF                               5226+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGWRITE\n                                             5227+         POP   PRINT                                                    02-IXGWRITE\n                                             5228+*                                            IXGWRITE-2\n1          asmif asm interfcae module                                                                           Page   35\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000774 A7F4 0293               00000C9A   5230+         J     LOGGER_XX           jump if ok                           01-$$ASMIF\n                                             5231+* 13/01/06 Logger Browse\n 00000778                                    5232+LOGGER_BROWSE DS  0H                                                    01-$$ASMIF\n 00000778 1233                               5233+         LTR  R3,R3                test addr pointer                    01-$$ASMIF\n 0000077A A784 028B               00000C90   5234+         JZ    LOGGER_08           jump if zero                         01-$$ASMIF\n 0000077E 1244                               5235+         LTR   R4,R4               test length addr                     01-$$ASMIF\n 00000780 A784 0288               00000C90   5236+         JZ    LOGGER_08           jump if zero                         01-$$ASMIF\n 00000784 D703 3000 3000 00000000 00000000   5237+         XC    0(4,R3),0(R3)       no addr                              01-$$ASMIF\n 0000078A D703 4000 4000 00000000 00000000   5238+         XC    0(4,R4),0(R4)       no length                            01-$$ASMIF\n 00000790 D503 D56C B194 0000056C 00001DAC   5239+         CLC   ASM_LOGGER_BUFFER,ZERO check buff                        01-$$ASMIF\n 00000796 A774 017D               00000A90   5240+         JNZ   LOGGER_BROWSE_STARTED jump if alaredy got                01-$$ASMIF\n 0000079A D203 D570 B368 00000570 00001F80   5241+         MVC   ASM_LOGGER_BUFFLEN,LOGGER_MAX_BUFFER                     01-$$ASMIF\n 000007A0 5840 D570               00000570   5242+         L     R4,ASM_LOGGER_BUFFLEN get length                         01-$$ASMIF\n                                             5243+*        storage obtain,length=(r4)\n 000007A4 1804                               5246+         LR     0,R4                         .STORAGE LENGTH            02-STORAGE\n 000007A6 58F0 B06C               00001C84   5247+         L      15,=AL1(B'00000000',(0*16),(0),B'00000010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 000007AA 58E0 0010               00000010   5248+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000007AE 58EE 0304               00000304   5249+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 000007B2 58EE 00A0               000000A0   5250+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 000007B6 B218 E000      00000000            5251+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 000007BA 12FF                               5252+         LTR   R15,R15             test return                          01-$$ASMIF\n 000007BC A774 026A               00000C90   5253+         JNZ   LOGGER_08           if no storage                        01-$$ASMIF\n 000007C0 5010 D56C               0000056C   5254+         ST    R1,ASM_LOGGER_BUFFER save buffer address                 01-$$ASMIF\n 000007C4 D203 D574 B05C 00000574 00001C74   5255+         MVC   ASM_LOGGER_BUFFER_OFFSET,=A(0)                           01-$$ASMIF\n 000007CA A72E 0002               00000002   5256+         CHI   R2,2                oldest requested                     01-$$ASMIF\n 000007CE A774 0065               00000898   5257+         JNE   LOGGER_BROWSE_START_YOUNGEST start youngest              01-$$ASMIF\n 000007D2 D503 B194 D120 00001DAC 00000120   5258+         CLC   ZERO,ASM_PARMS+12   active                               01-$$ASMIF\n 000007D8 A774 0031               0000083A   5259+         JNE   LOGGER_BROWSE_START_OLDEST_ALL jump if not               01-$$ASMIF\n                                             5260+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               OLDEST,                                                 X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ACTIVE,                                            X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5262+*                     MACDATE -09/11/24-<3>\n 000007DC                                    5263+M00M0133 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5264+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5265+                     PRINT ON                                           02-IXGBRWSE\n 000007DC 4110 D680               00000680   5266+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 000007E0 D75B 1000 1000 00000000 00000000   5267+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 000007E6 9201 1001      00000001            5268+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 000007EA D601 1002 B0EE 00000002 00001D06   5269+         OC    2(2,1),=BL2'0100100000101000' ++ INPUT BL2               02-IXGBRWSE\n 000007F0 41E0 D768               00000768   5270+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 000007F4 50E0 1020               00000020   5271+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 000007F8 D203 1024 B068 00000024 00001C80   5272+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 000007FE D20F 1028 D558 00000028 00000558   5273+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000804 41E0 D578               00000578   5274+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000808 50E0 1038               00000038   5275+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 0000080C 5010 1004               00000004   5276+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n1          asmif asm interfcae module                                                                           Page   36\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000810 4110 1004               00000004   5277+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000814 58F0 0010               00000010   5278+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000818 58FF 008C               0000008C   5279+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 0000081C 58FF 0120               00000120   5280+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000820 58FF 007C               0000007C   5281+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000824 4100 0005               00000005   5282+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000828 05EF                               5283+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 0000082A 5810 1000               00000000   5284+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 0000082E 50F0 D060               00000060   5285+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000832 5000 D064               00000064   5286+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5287+         POP   PRINT                                                    02-IXGBRWSE\n                                             5288+*                                            IXGBRWSE-3\n000000836 A7F4 0126               00000A82   5290+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n 0000083A                                    5291+LOGGER_BROWSE_START_OLDEST_ALL DS 0H                                    01-$$ASMIF\n                                             5292+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               OLDEST,                                                 X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ALL,                                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5294+*                     MACDATE -09/11/24-<3>\n 0000083A                                    5295+M00M0134 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5296+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5297+                     PRINT ON                                           02-IXGBRWSE\n 0000083A 4110 D680               00000680   5298+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 0000083E D75B 1000 1000 00000000 00000000   5299+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000844 9201 1001      00000001            5300+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000848 D601 1002 B0F0 00000002 00001D08   5301+         OC    2(2,1),=BL2'0100100000011000' ++ INPUT BL2               02-IXGBRWSE\n 0000084E 41E0 D768               00000768   5302+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000852 50E0 1020               00000020   5303+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000856 D203 1024 B068 00000024 00001C80   5304+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 0000085C D20F 1028 D558 00000028 00000558   5305+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000862 41E0 D578               00000578   5306+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000866 50E0 1038               00000038   5307+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 0000086A 5010 1004               00000004   5308+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 0000086E 4110 1004               00000004   5309+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000872 58F0 0010               00000010   5310+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000876 58FF 008C               0000008C   5311+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 0000087A 58FF 0120               00000120   5312+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 0000087E 58FF 007C               0000007C   5313+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000882 4100 0005               00000005   5314+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000886 05EF                               5315+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000888 5810 1000               00000000   5316+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 0000088C 50F0 D060               00000060   5317+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000890 5000 D064               00000064   5318+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5319+         POP   PRINT                                                    02-IXGBRWSE\n                                             5320+*                                            IXGBRWSE-3\n000000894 A7F4 00F7               00000A82   5322+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   37\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000898                                    5323+LOGGER_BROWSE_START_YOUNGEST DS 0H                                      01-$$ASMIF\n 00000898 A72E 0003               00000003   5324+         CHI   R2,3                oldest requested                     01-$$ASMIF\n 0000089C A774 0065               00000966   5325+         JNE   LOGGER_BROWSE_START_SEARCH   start search                01-$$ASMIF\n 000008A0 D503 B194 D120 00001DAC 00000120   5326+         CLC   ZERO,ASM_PARMS+12   active                               01-$$ASMIF\n 000008A6 A774 0031               00000908   5327+         JNE   LOGGER_BROWSE_START_YOUNGEST_ALL jump if not             01-$$ASMIF\n                                             5328+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               YOUNGEST,                                               X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ACTIVE,                                            X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5330+*                     MACDATE -09/11/24-<3>\n 000008AA                                    5331+M00M0135 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5332+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5333+                     PRINT ON                                           02-IXGBRWSE\n 000008AA 4110 D680               00000680   5334+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 000008AE D75B 1000 1000 00000000 00000000   5335+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 000008B4 9201 1001      00000001            5336+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 000008B8 D601 1002 B0F2 00000002 00001D0A   5337+         OC    2(2,1),=BL2'0100010000101000' ++ INPUT BL2               02-IXGBRWSE\n 000008BE 41E0 D768               00000768   5338+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 000008C2 50E0 1020               00000020   5339+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 000008C6 D203 1024 B068 00000024 00001C80   5340+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 000008CC D20F 1028 D558 00000028 00000558   5341+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 000008D2 41E0 D578               00000578   5342+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 000008D6 50E0 1038               00000038   5343+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 000008DA 5010 1004               00000004   5344+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 000008DE 4110 1004               00000004   5345+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 000008E2 58F0 0010               00000010   5346+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 000008E6 58FF 008C               0000008C   5347+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 000008EA 58FF 0120               00000120   5348+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 000008EE 58FF 007C               0000007C   5349+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 000008F2 4100 0005               00000005   5350+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 000008F6 05EF                               5351+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 000008F8 5810 1000               00000000   5352+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 000008FC 50F0 D060               00000060   5353+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000900 5000 D064               00000064   5354+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5355+         POP   PRINT                                                    02-IXGBRWSE\n                                             5356+*                                            IXGBRWSE-3\n000000904 A7F4 00BF               00000A82   5358+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n 00000908                                    5359+LOGGER_BROWSE_START_YOUNGEST_ALL  DS 0H                                 01-$$ASMIF\n                                             5360+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               YOUNGEST,                                               X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ALL,                                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n1          asmif asm interfcae module                                                                           Page   38\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5362+*                     MACDATE -09/11/24-<3>\n 00000908                                    5363+M00M0136 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5364+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5365+                     PRINT ON                                           02-IXGBRWSE\n 00000908 4110 D680               00000680   5366+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 0000090C D75B 1000 1000 00000000 00000000   5367+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000912 9201 1001      00000001            5368+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000916 D601 1002 B0F4 00000002 00001D0C   5369+         OC    2(2,1),=BL2'0100010000011000' ++ INPUT BL2               02-IXGBRWSE\n 0000091C 41E0 D768               00000768   5370+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000920 50E0 1020               00000020   5371+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000924 D203 1024 B068 00000024 00001C80   5372+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 0000092A D20F 1028 D558 00000028 00000558   5373+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000930 41E0 D578               00000578   5374+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000934 50E0 1038               00000038   5375+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000938 5010 1004               00000004   5376+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 0000093C 4110 1004               00000004   5377+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000940 58F0 0010               00000010   5378+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000944 58FF 008C               0000008C   5379+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000948 58FF 0120               00000120   5380+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 0000094C 58FF 007C               0000007C   5381+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000950 4100 0005               00000005   5382+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000954 05EF                               5383+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000956 5810 1000               00000000   5384+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 0000095A 50F0 D060               00000060   5385+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 0000095E 5000 D064               00000064   5386+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5387+         POP   PRINT                                                    02-IXGBRWSE\n                                             5388+*                                            IXGBRWSE-3\n000000962 A7F4 0090               00000A82   5390+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n                                             5391+* 16/07/10 LOGGER browse TIME search\n 00000966                                    5392+LOGGER_BROWSE_START_SEARCH DS 0H                                        01-$$ASMIF\n 00000966 A728 0002               00000002   5393+         LHI   R2,2                oldest requested                     01-$$ASMIF\n 0000096A 1255                               5394+         LTR  R5,R5                                                     01-$$ASMIF\n 0000096C A784 FF06               00000778   5395+         JZ   LOGGER_BROWSE                                             01-$$ASMIF\n 00000970 D700 D6DC D6DC 000006DC 000006DC   5396+         XC    ASM_LOGGER_CONVVAL,ASM_LOGGER_CONVVAL                    01-$$ASMIF\n 00000976 D203 D6DC 5000 000006DC 00000000   5397+         MVC   ASM_LOGGER_CONVVAL(4),0(R5)                              01-$$ASMIF\n 0000097C F248 D6E4 5004 000006E4 00000004   5398+         PACK  ASM_LOGGER_CONVVAL+8(5),4(9,R5)                          01-$$ASMIF\n 00000982 D700 D6E8 D6E8 000006E8 000006E8   5399+         XC    ASM_LOGGER_CONVVAL+12,ASM_LOGGER_CONVVAL+12              01-$$ASMIF\n                                             5400+*        convtod TIMETYPE=bin,datetype=yyyyddd,todval=asm_logger_stck, X\n                                                 +               CONVVAL=ASM_LOGGER_CONVVAL,MF=(E,ASM_LOGGER_CONVTOD)\n                                             5402+*        MACDATE  05/30/98                                         @L1C\n 00000988 5110 D6FC               000006FC   5404+         LAE   1,ASM_LOGGER_CONVTOD    PARAMETER LIST ADDRESS           02-CONVTOD\n 0000098C D71F 1000 1000 00000000 00000000   5405+         XC    0(32,1),0(1)            CLEAR PARAMETER LIST             02-CONVTOD\n 00000992 9200 1002      00000002            5406+         MVI   2(1),0                  SET DATETYPE FLAGS IN PARM LIST  02-CONVTOD\n 00000996 9201 1003      00000003            5407+         MVI   3(1),1                  SET TIMETYPE FLAGS IN PARM LIST  02-CONVTOD\n 0000099A 51E0 D6DC               000006DC   5408+         LAE   14,ASM_LOGGER_CONVVAL   ADDRESS OF CONVVAL               02-CONVTOD\n 0000099E D20F 1008 E000 00000008 00000000   5409+         MVC   8(16,1),0(14)           SET CONVVAL IN PARM LIST    @P1C 02-CONVTOD\n 000009A4 58E0 0010               00000010   5410+         L     14,16(0,0)              CVT ADDRESS                      02-CONVTOD\n 000009A8 58EE 0304               00000304   5411+         L     14,772(14,0)            SFT ADDRESS                      02-CONVTOD\n 000009AC 58EE 0160               00000160   5412+         L     14,352(14,0)            LX/EX FOR SERVICE ROUTINE        02-CONVTOD\n 000009B0 B218 E000      00000000            5413+         PC    0(14)                                                    02-CONVTOD\n 000009B4 51E0 D6EC               000006EC   5414+         LAE   14,ASM_LOGGER_STCK      ADDRESS OF TODVAL                02-CONVTOD\n 000009B8 D207 E000 1018 00000000 00000018   5415+         MVC   0(8,14),24(1)           MOVE OUTPUT FROM PARM LIST       02-CONVTOD\n1          asmif asm interfcae module                                                                           Page   39\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            5416+*                                      TO TODVAL AREA\n                                             5417+**       CLC   ZERO,ASM_PARMS+12   active\n                                             5418+**       JNE   LOGGER_BROWSE_START_SEARCH_ALL  jump if not\n                                             5419+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ACTIVE,                                            X\n                                                 +               SEARCH=ASM_LOGGER_STCK,                                 X\n                                                 +               GMT=NO,                                                 X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5421+*                     MACDATE -09/11/24-<3>\n 000009BE                                    5422+M00M0139 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5423+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5424+                     PRINT ON                                           02-IXGBRWSE\n 000009BE 4110 D680               00000680   5425+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 000009C2 D75B 1000 1000 00000000 00000000   5426+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 000009C8 9201 1001      00000001            5427+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 000009CC D601 1002 B0F6 00000002 00001D0E   5428+         OC    2(2,1),=BL2'0100001000101000' ++ INPUT BL2               02-IXGBRWSE\n 000009D2 41E0 D768               00000768   5429+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 000009D6 50E0 1020               00000020   5430+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 000009DA D203 1024 B068 00000024 00001C80   5431+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 000009E0 D20F 1028 D558 00000028 00000558   5432+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 000009E6 41E0 D578               00000578   5433+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 000009EA 50E0 1038               00000038   5434+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 000009EE D207 103C D6EC 0000003C 000006EC   5435+         MVC   60(8,1),ASM_LOGGER_STCK ++ INPUT XSEARCH                 02-IXGBRWSE\n 000009F4 5010 1004               00000004   5436+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 000009F8 4110 1004               00000004   5437+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 000009FC 58F0 0010               00000010   5438+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000A00 58FF 008C               0000008C   5439+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000A04 58FF 0120               00000120   5440+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000A08 58FF 007C               0000007C   5441+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000A0C 4100 0005               00000005   5442+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000A10 05EF                               5443+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000A12 5810 1000               00000000   5444+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000A16 50F0 D060               00000060   5445+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000A1A 5000 D064               00000064   5446+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5447+         POP   PRINT                                                    02-IXGBRWSE\n                                             5448+*                                            IXGBRWSE-3\n000000A1E A7F4 0032               00000A82   5450+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n 00000A22                                    5451+LOGGER_BROWSE_START_SEARCH_ALL  DS 0H                                   01-$$ASMIF\n                                             5452+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ALL,                                               X\n                                                 +               SEARCH=ASM_LOGGER_STCK,                                 X\n                                                 +               GMT=NO,                                                 X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n1          asmif asm interfcae module                                                                           Page   40\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5454+*                     MACDATE -09/11/24-<3>\n 00000A22                                    5455+M00M0140 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5456+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5457+                     PRINT ON                                           02-IXGBRWSE\n 00000A22 4110 D680               00000680   5458+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000A26 D75B 1000 1000 00000000 00000000   5459+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000A2C 9201 1001      00000001            5460+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000A30 D601 1002 B0F8 00000002 00001D10   5461+         OC    2(2,1),=BL2'0100001000011000' ++ INPUT BL2               02-IXGBRWSE\n 00000A36 41E0 D768               00000768   5462+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000A3A 50E0 1020               00000020   5463+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000A3E D203 1024 B068 00000024 00001C80   5464+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000A44 D20F 1028 D558 00000028 00000558   5465+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000A4A 41E0 D578               00000578   5466+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000A4E 50E0 1038               00000038   5467+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000A52 D207 103C D6EC 0000003C 000006EC   5468+         MVC   60(8,1),ASM_LOGGER_STCK ++ INPUT XSEARCH                 02-IXGBRWSE\n 00000A58 5010 1004               00000004   5469+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000A5C 4110 1004               00000004   5470+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000A60 58F0 0010               00000010   5471+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000A64 58FF 008C               0000008C   5472+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000A68 58FF 0120               00000120   5473+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000A6C 58FF 007C               0000007C   5474+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000A70 4100 0005               00000005   5475+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000A74 05EF                               5476+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000A76 5810 1000               00000000   5477+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000A7A 50F0 D060               00000060   5478+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000A7E 5000 D064               00000064   5479+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5480+         POP   PRINT                                                    02-IXGBRWSE\n                                             5481+*                                            IXGBRWSE-3\n0                                            5483+* 16/07/10 LOGGER browse TIME search\n 00000A82                                    5484+LOGGER_BROWSE_START_CHECK DS 0H                                         01-$$ASMIF\n 00000A82 A7FE 0004               00000004   5485+         CHI   R15,4               maybe o                              01-$$ASMIF\n 00000A86 A724 0105               00000C90   5486+         JH    LOGGER_ERROR        error                                01-$$ASMIF\n 00000A8A 1BFF                               5487+         SR    R15,R15             clear reg                            01-$$ASMIF\n 00000A8C 5020 D57C               0000057C   5488+         ST    R2,ASM_LOGGER_DIRECTION savedirection                    01-$$ASMIF\n 00000A90                                    5489+LOGGER_BROWSE_STARTED DS 0H                                             01-$$ASMIF\n 00000A90 D503 D574 B194 00000574 00001DAC   5490+         CLC   ASM_LOGGER_BUFFER_OFFSET,ZERO  check offset              01-$$ASMIF\n 00000A96 A774 00D1               00000C38   5491+         JNE   LOGGER_READCURSOR_INBLOCK jump if in the block           01-$$ASMIF\n 00000A9A D203 D574 B070 00000574 00001C88   5492+         MVC   ASM_LOGGER_BUFFER_OFFSET,=A(8) init offset               01-$$ASMIF\n 00000AA0 BF3F D56C               0000056C   5493+         ICM   R3,15,ASM_LOGGER_BUFFER   get buffer addr                01-$$ASMIF\n 00000AA4 9502 D57F      0000057F            5494+         CLI   ASM_LOGGER_DIRECTION+3,2  oldtoyoung requested           01-$$ASMIF\n 00000AA8 A774 003B               00000B1E   5495+         JNE   LOGGER_READCURSOR_YOUNGEST start youngest                01-$$ASMIF\n                                             5496+*        IXGBRWSE REQUEST=READCURSOR,                                  X\n                                                 +               DIRECTION=OLDTOYOUNG,                                   X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               BUFFER=(R3),                                            X\n                                                 +               BUFFLEN=ASM_LOGGER_BUFFLEN,                             X\n                                                 +               MULTIBLOCK=YES,                                         X\n                                                 +               RETBLOCKINFO=YES,                                       X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               RETCODE=ASM_RC,                                         X\n1          asmif asm interfcae module                                                                           Page   41\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5498+*                     MACDATE -09/11/24-<3>\n 00000AAC                                    5499+M00M0141 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5500+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5501+                     PRINT ON                                           02-IXGBRWSE\n 00000AAC 4110 D680               00000680   5502+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000AB0 D777 1000 1000 00000000 00000000   5503+         XC    0(120,1),0(1)      ++ INITIALIZE                         02-IXGBRWSE\n 00000AB6 9202 1000      00000000            5504+         MVI   0(1),2             ++ INPUT XVERSION XL1                 02-IXGBRWSE\n 00000ABA 9202 1001      00000001            5505+         MVI   1(1),2             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000ABE D601 1002 B0FA 00000002 00001D12   5506+         OC    2(2,1),=BL2'0100000000000110' ++ INPUT BL2               02-IXGBRWSE\n 00000AC4 5030 1008               00000008   5507+         ST    R3,8(,1)           ++ INPUT XBUFFER                      02-IXGBRWSE\n 00000AC8 D203 1010 D570 00000010 00000570   5508+         MVC   16(4,1),ASM_LOGGER_BUFFLEN ++ INPUT XBUFFLEN             02-IXGBRWSE\n 00000ACE 41E0 D768               00000768   5509+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000AD2 50E0 1020               00000020   5510+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000AD6 D203 1024 B068 00000024 00001C80   5511+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000ADC D20F 1028 D558 00000028 00000558   5512+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000AE2 41E0 D578               00000578   5513+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000AE6 50E0 1038               00000038   5514+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000AEA D603 1064 B074 00000064 00001C8C   5515+         OC    100(4,1),=BL4'00011000000000000000000000000000' ++ INPUTX02-IXGBRWSE\n                                                 +                BL4\n 00000AF0 5010 1004               00000004   5516+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000AF4 4110 1004               00000004   5517+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000AF8 58F0 0010               00000010   5518+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000AFC 58FF 008C               0000008C   5519+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000B00 58FF 0120               00000120   5520+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000B04 58FF 007C               0000007C   5521+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000B08 4100 0005               00000005   5522+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000B0C 05EF                               5523+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000B0E 5810 1000               00000000   5524+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000B12 50F0 D060               00000060   5525+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000B16 5000 D064               00000064   5526+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5527+         POP   PRINT                                                    02-IXGBRWSE\n                                             5528+*                                            IXGBRWSE-3\n000000B1A A7F4 0039               00000B8C   5530+         J     LOGGER_READCURSOR_CHECK check start                      01-$$ASMIF\n 00000B1E                                    5531+LOGGER_READCURSOR_YOUNGEST DS 0H                                        01-$$ASMIF\n                                             5532+*        IXGBRWSE REQUEST=READCURSOR,                                  X\n                                                 +               DIRECTION=YOUNGTOOLD,                                   X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               BUFFER=(R3),                                            X\n                                                 +               BUFFLEN=ASM_LOGGER_BUFFLEN,                             X\n                                                 +               MULTIBLOCK=YES,                                         X\n                                                 +               RETBLOCKINFO=YES,                                       X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5534+*                     MACDATE -09/11/24-<3>\n 00000B1E                                    5535+M00M0142 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n1          asmif asm interfcae module                                                                           Page   42\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            5536+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5537+                     PRINT ON                                           02-IXGBRWSE\n 00000B1E 4110 D680               00000680   5538+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000B22 D777 1000 1000 00000000 00000000   5539+         XC    0(120,1),0(1)      ++ INITIALIZE                         02-IXGBRWSE\n 00000B28 9202 1000      00000000            5540+         MVI   0(1),2             ++ INPUT XVERSION XL1                 02-IXGBRWSE\n 00000B2C 9202 1001      00000001            5541+         MVI   1(1),2             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000B30 D601 1002 B0FC 00000002 00001D14   5542+         OC    2(2,1),=BL2'1100000000000110' ++ INPUT BL2               02-IXGBRWSE\n 00000B36 5030 1008               00000008   5543+         ST    R3,8(,1)           ++ INPUT XBUFFER                      02-IXGBRWSE\n 00000B3A D203 1010 D570 00000010 00000570   5544+         MVC   16(4,1),ASM_LOGGER_BUFFLEN ++ INPUT XBUFFLEN             02-IXGBRWSE\n 00000B40 41E0 D768               00000768   5545+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000B44 50E0 1020               00000020   5546+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000B48 D203 1024 B068 00000024 00001C80   5547+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000B4E D20F 1028 D558 00000028 00000558   5548+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000B54 41E0 D578               00000578   5549+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000B58 50E0 1038               00000038   5550+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000B5C D603 1064 B074 00000064 00001C8C   5551+         OC    100(4,1),=BL4'00011000000000000000000000000000' ++ INPUTX02-IXGBRWSE\n                                                 +                BL4\n 00000B62 5010 1004               00000004   5552+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000B66 4110 1004               00000004   5553+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000B6A 58F0 0010               00000010   5554+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000B6E 58FF 008C               0000008C   5555+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000B72 58FF 0120               00000120   5556+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000B76 58FF 007C               0000007C   5557+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000B7A 4100 0005               00000005   5558+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000B7E 05EF                               5559+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000B80 5810 1000               00000000   5560+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000B84 50F0 D060               00000060   5561+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000B88 5000 D064               00000064   5562+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5563+         POP   PRINT                                                    02-IXGBRWSE\n                                             5564+*                                            IXGBRWSE-3\n000000B8C                                    5566+LOGGER_READCURSOR_CHECK DS 0H                                           01-$$ASMIF\n 00000B8C A7FE 0008               00000008   5567+         CHI   R15,8               maybe o                              01-$$ASMIF\n 00000B90 A744 0054               00000C38   5568+         JL    LOGGER_READCURSOR_OK if acceptable                       01-$$ASMIF\n 00000B94 A724 007E               00000C90   5569+         JH    LOGGER_ERROR        error                                01-$$ASMIF\n 00000B98 A70E 0848               00000848   5570+         CHI   R0,X'0848'          check r0                             01-$$ASMIF\n 00000B9C A774 007A               00000C90   5571+         JNE   LOGGER_ERROR        if not, error                        01-$$ASMIF\n 00000BA0                                    5572+LOGGER_READCURSOR_NOMORE DS 0H                                          01-$$ASMIF\n 00000BA0 BF3F D56C               0000056C   5573+         ICM   R3,15,ASM_LOGGER_BUFFER get buffer address               01-$$ASMIF\n 00000BA4 A784 0013               00000BCA   5574+         JZ    LOGGER_READCURSOR_END_NOFREE                             01-$$ASMIF\n 00000BA8 5840 D570               00000570   5575+         L     R4,ASM_LOGGER_BUFFLEN get length                         01-$$ASMIF\n                                             5576+*        storage release,addr=(r3),length=(r4)\n 00000BAC 1804                               5579+         LR     0,R4                         .STORAGE LENGTH            02-STORAGE\n 00000BAE 1813                               5580+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 00000BB0 A7F8 0003               00000003   5581+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 00000BB4 58E0 0010               00000010   5582+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000BB8 58EE 0304               00000304   5583+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000BBC 58EE 00CC               000000CC   5584+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00000BC0 B218 E000      00000000            5585+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000BC4 D703 D56C D56C 0000056C 0000056C   5586+         XC    ASM_LOGGER_BUFFER,ASM_LOGGER_BUFFER clear                01-$$ASMIF\n 00000BCA                                    5587+LOGGER_READCURSOR_END_NOFREE DS 0H                                      01-$$ASMIF\n                                             5588+*        IXGBRWSE REQUEST=END,                                         X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               RETCODE=ASM_RC,                                         X\n1          asmif asm interfcae module                                                                           Page   43\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5590+*                     MACDATE -09/11/24-<3>\n 00000BCA                                    5591+M00M0145 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5592+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5593+                     PRINT ON                                           02-IXGBRWSE\n 00000BCA 4110 D680               00000680   5594+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000BCE D75B 1000 1000 00000000 00000000   5595+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000BD4 9205 1001      00000001            5596+         MVI   1(1),5             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000BD8 D601 1002 B0FE 00000002 00001D16   5597+         OC    2(2,1),=BL2'0100000000000000' ++ INPUT BL2               02-IXGBRWSE\n 00000BDE 41E0 D768               00000768   5598+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000BE2 50E0 1020               00000020   5599+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000BE6 D203 1024 B068 00000024 00001C80   5600+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000BEC D20F 1028 D558 00000028 00000558   5601+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000BF2 41E0 D578               00000578   5602+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000BF6 50E0 1038               00000038   5603+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000BFA 5010 1004               00000004   5604+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000BFE 4110 1004               00000004   5605+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000C02 58F0 0010               00000010   5606+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000C06 58FF 008C               0000008C   5607+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000C0A 58FF 0120               00000120   5608+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000C0E 58FF 007C               0000007C   5609+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000C12 4100 0005               00000005   5610+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000C16 05EF                               5611+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000C18 5810 1000               00000000   5612+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000C1C 50F0 D060               00000060   5613+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000C20 5000 D064               00000064   5614+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5615+         POP   PRINT                                                    02-IXGBRWSE\n                                             5616+*                                            IXGBRWSE-3\n000000C24 A7FE 0004               00000004   5618+        CHI    R15,4               test code                            01-$$ASMIF\n 00000C28 A724 0034               00000C90   5619+        JH     LOGGER_ERROR        jump if in error                     01-$$ASMIF\n 00000C2C 41F0 0004               00000004   5620+        LA     R15,4               set code                             01-$$ASMIF\n 00000C30 50F0 D060               00000060   5621+        ST     R15,ASM_RC          set code                             01-$$ASMIF\n 00000C34 A7F4 0033               00000C9A   5622+        J      LOGGER_XX           jump back                            01-$$ASMIF\n 00000C38                                    5623+LOGGER_READCURSOR_OK      DS 0H                                         01-$$ASMIF\n 00000C38                                    5624+LOGGER_READCURSOR_INBLOCK DS 0H                                         01-$$ASMIF\n 00000C38 5840 D574               00000574   5625+        L      R4,ASM_LOGGER_BUFFER_OFFSET get offset                   01-$$ASMIF\n 00000C3C BF3F D56C               0000056C   5626+        ICM    R3,15,ASM_LOGGER_BUFFER block address                    01-$$ASMIF\n 00000C40 A784 0028               00000C90   5627+        JZ     LOGGER_08           if no addr                           01-$$ASMIF\n                     R:3 00000000            5628+        USING  IXGBRMHD,R3         base on header                       01-$$ASMIF\n 00000C44 4143 4000               00000000   5629+        LA     R4,0(R3,R4)         actual block address                 01-$$ASMIF\n                     R:4 00000000            5630+        USING  IXGBRMLT,R4         base on log block                    01-$$ASMIF\n 00000C48 D203 D574 400C 00000574 0000000C   5631+        MVC    ASM_LOGGER_BUFFER_OFFSET,IXGBRMLT_NEXTOFFSET next off    01-$$ASMIF\n 00000C4E 9180 4003      00000003            5632+        TM     IXGBRMLT_FLAGS,IXGBRMLT_DATARETURNED data returned       01-$$ASMIF\n 00000C52 A714 0004               00000C5A   5633+        JO     LOGGER_READCURSOR_DATA   no more data                    01-$$ASMIF\n                                             5634+***LOOP*J      LOGGER_READCURSOR_INBLOCK try it\n 00000C56 A7F4 FFA5               00000BA0   5635+        J      LOGGER_READCURSOR_NOMORE  it                             01-$$ASMIF\n 00000C5A                                    5636+LOGGER_READCURSOR_DATA DS 0H                                            01-$$ASMIF\n 00000C5A 9140 4003      00000003            5637+        TM     IXGBRMLT_FLAGS,IXGBRMLT_RETBLOCKINFO info returned       01-$$ASMIF\n 00000C5E A784 0006               00000C6A   5638+        JZ     LOGGER_READCURSOR_NOINFO                                 01-$$ASMIF\n 00000C62 4150 402C               0000002C   5639+        LA     R5,IXGBRMLT_RETINFOEND  start of data                    01-$$ASMIF\n 00000C66 A7F4 0004               00000C6E   5640+        J      LOGGER_READCURSOR_DO jump to nextoffset                  01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   44\n   Active Usings: PSA,R0  TCB,R2  IXGBRMHD,R3  IXGBRMLT,R4  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000C6A                                    5641+LOGGER_READCURSOR_NOINFO DS 0H                                          01-$$ASMIF\n 00000C6A 4150 4010               00000010   5642+        LA     R5,IXGBRMLT_COMMONEND adress of the block                01-$$ASMIF\n 00000C6E                                    5643+LOGGER_READCURSOR_DO DS 0H                                              01-$$ASMIF\n 00000C6E D503 D574 3004 00000574 00000004   5644+       CLC     ASM_LOGGER_BUFFER_OFFSET,IXGBRMHD_LASTBRMLTOFFSET        01-$$ASMIF\n 00000C74 A774 0002               00000C78   5645+       JNE     LOGGER_READCURSOR_NOTLAST                                01-$$ASMIF\n                                             5646+***    MVC     IXGBRMLT_NEXTOFFSET,ZERO\n 00000C78                                    5647+LOGGER_READCURSOR_NOTLAST DS 0H                                         01-$$ASMIF\n 00000C78 5860 400C               0000000C   5648+        L      R6,IXGBRMLT_NEXTOFFSET length of block                   01-$$ASMIF\n 00000C7C 1A63                               5649+        AR     R6,R3               next addr                            01-$$ASMIF\n 00000C7E 1B65                               5650+        SR     R6,R5               length of block                      01-$$ASMIF\n 00000C80 9812 D118               00000118   5651+        LM     R1,R2,ASM_PARMS+4   get addr buff                        01-$$ASMIF\n 00000C84 5051 0000               00000000   5652+        ST     R5,0(R1)            save addr                            01-$$ASMIF\n 00000C88 5062 0000               00000000   5653+        ST     R6,0(R2)            save length                          01-$$ASMIF\n 00000C8C A7F4 0006               00000C98   5654+        J     LOGGER_00           jump out                              01-$$ASMIF\n 00000C90                                    5655+LOGGER_ERROR DS 0H                                                      01-$$ASMIF\n                                             5656+*       DC     A(0)\n 00000C90 41F0 0008               00000008   5657+LOGGER_08 LA   R15,8               get code                             01-$$ASMIF\n 00000C94 A7F4 0003               00000C9A   5658+         J     LOGGER_XX           jump out                             01-$$ASMIF\n 00000C98 1BFF                               5659+LOGGER_00 SR   R15,R15             set code                             01-$$ASMIF\n 00000C9A                                    5660+LOGGER_XX DS 0H                                                         01-$$ASMIF\n 00000C9A 50F0 D060               00000060   5661+         ST    R15,ASM_RC       back code                               01-$$ASMIF\n 00000C9E 5000 D064               00000064   5662+         ST    R0,ASM_REASON    back reason                             01-$$ASMIF\n 00000CA2 0101                               5663+         PR     ,                                                       01-$$ASMIF\n                                             5664+         DROP  R3,R4               drop regs                            01-$$ASMIF\n                                             5665+* 21/11/05 VTOC access\n                                             5666+*---------------------------------------------------------------------*\n                                             5667+* VTOC access                                                         *\n                                             5668+* +0 request type                                                     *\n                                             5669+*    0 connect , open                                                 *\n                                             5670+*    1 next , gives back the next entry                               *\n                                             5671+* +4 address of the DDNAME allocated to the volume                    *\n                                             5672+* +8 address of the dataset mask to retrieve  , +0 length (1 byte)    *\n                                             5673+* +c address of are to return the DSCB                                *\n                                             5674+* return : 0 DSCB returned , and more exist                           *\n                                             5675+*          4 last DSCB returned, no more                              *\n                                             5676+*          8 no DSCB found                                            *\n                                             5677+*         12 error occured                                            *\n                                             5678+*---------------------------------------------------------------------*\n                     R:6 00000000            5679+         USING IHADCB,R6           base on DCB                          01-$$ASMIF\n                     R:5 00000000            5680+         USING IEFJFCBN,R5         base on JFCB                         01-$$ASMIF\n                   D 7CC 00000000 000007CC   5681+         USING FCL_MAP,ASM_VTOC_FCL  base on FCL                        01-$$ASMIF\n                   D 7E4 00000000 000007E4   5682+         USING BFL_MAP,ASM_VTOC_BFL  base on bfl                        01-$$ASMIF\n                   D 7F8 00000000 000007F8   5683+         USING CVAFFILT_MAP,ASM_VTOC_CVAFFILT base on CVAFFILT          01-$$ASMIF\n 00000CA4 9825 D114               00000114   5684+VTOC     LM    R2,R5,ASM_PARMS     get parms                            01-$$ASMIF\n 00000CA8 D703 D064 D064 00000064 00000064   5685+         XC    ASM_REASON,ASM_REASON  clear resaon                      01-$$ASMIF\n 00000CAE 1222                               5686+         LTR   R2,R2               test request                         01-$$ASMIF\n 00000CB0 A724 00AB               00000E06   5687+         JP    VTOC_NEXT           if next request                      01-$$ASMIF\n 00000CB4 A744 00B0               00000E14   5688+         JM    VTOC_GOT_LAST       if the last entry                    01-$$ASMIF\n 00000CB8 4100 0001               00000001   5689+         LA    R0,1                first parm                           01-$$ASMIF\n 00000CBC 1233                               5690+         LTR   R3,R3               test DDNAME addr                     01-$$ASMIF\n 00000CBE A784 00F7               00000EAC   5691+         JZ    VTOC_ERR_PARM       jump if no DDNAME                    01-$$ASMIF\n 00000CC2 4100 0002               00000002   5692+         LA    R0,2                second parm                          01-$$ASMIF\n 00000CC6 1244                               5693+         LTR   R4,R4               test name                            01-$$ASMIF\n 00000CC8 A784 00F2               00000EAC   5694+         JZ    VTOC_ERR_PARM       jump if invalid                      01-$$ASMIF\n 00000CCC 4100 0003               00000003   5695+         LA    R0,3                third parm                           01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   45\n   Active Usings: PSA,R0  TCB,R2  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000CD0 1255                               5696+         LTR   R5,R5               test DSCB return address             01-$$ASMIF\n 00000CD2 A784 00ED               00000EAC   5697+         JZ    VTOC_ERR_PARM       jump if invalid                      01-$$ASMIF\n 00000CD6 D207 D794 3000 00000794 00000000   5698+         MVC   ASM_VTOC_DDNAME,0(3) copy DDNAME                         01-$$ASMIF\n 00000CDC D22B D79C 4000 0000079C 00000000   5699+         MVC   ASM_VTOC_FILTER,0(R4) copy filter                        01-$$ASMIF\n                                             5700+*        storgae obtain,LENGTH=VTOC_MODEL_DCB_LENGTH+184,LOC=BELOW\n 00000CE2 5800 B078               00001C90   5703+         L      0,=A(VTOC_MODEL_DCB_LENGTH+184)                        X02-STORAGE\n                                                 +                                             .STORAGE LENGTH       @P9C\n 00000CE6 58F0 B07C               00001C94   5704+         L      15,=AL1(B'00000000',(0*16),(0),B'00010010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00000CEA 58E0 0010               00000010   5705+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000CEE 58EE 0304               00000304   5706+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000CF2 58EE 00A0               000000A0   5707+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00000CF6 B218 E000      00000000            5708+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000CFA 5010 D790               00000790   5709+         ST    R1,ASM_VTOC_DCB     save                                 01-$$ASMIF\n 00000CFE 1261                               5710+         LTR   R6,R1               test storage                         01-$$ASMIF\n 00000D00 A784 00CD               00000E9A   5711+         JZ    VTOC_ERR_STORAGE    if no storage                        01-$$ASMIF\n 00000D04 A728 0057               00000057   5712+         LHI   R2,VTOC_MODEL_DCB_LENGTH-1 get length                    01-$$ASMIF\n 00000D08 4420 B2B8               00001ED0   5713+         EX    R2,VTOC_COPY_DCB    copy dcb                             01-$$ASMIF\n 00000D0C D207 6028 D794 00000028 00000794   5714+         MVC   DCBDDNAM,ASM_VTOC_DDNAME copy DDNAME                     01-$$ASMIF\n 00000D12 4150 6058               00000058   5715+         LA    R5,VTOC_MODEL_DCB_LENGTH(,R6) after DCB                  01-$$ASMIF\n 00000D16 9680 D7C8      000007C8            5716+         OI    ASM_VTOC_OPENLIST,X'80' indicate end of list             01-$$ASMIF\n 00000D1A 4140 6108               00000108   5717+         LA    R4,(VTOC_MODEL_DCB_LENGTH+176)(,R6) open list            01-$$ASMIF\n 00000D1E 4110 4004               00000004   5718+         LA    R1,4(,R4)           exit list addr                       01-$$ASMIF\n 00000D22 BE17 6025               00000025   5719+         STCM  R1,7,DCBEXLSA       save exit list addr                  01-$$ASMIF\n 00000D26 5051 0000               00000000   5720+         ST    R5,0(R1)            save exit addr                       01-$$ASMIF\n 00000D2A 9287 1000      00000000            5721+         MVI   0(R1),X'87'         indicate JFCB exit                   01-$$ASMIF\n 00000D2E 9280 4000      00000000            5722+         MVI   0(R4),X'80'         open list                            01-$$ASMIF\n                                             5723+*        rdjfcb ((r6)),mf=(e,(r4))\n 00000D32 1814                               5727+         LR    1,R4                              LOAD PARAMETER REG 1   04-IHBINNRA\n 00000D34 43E1 0000               00000000   5728+         IC    14,0(1,0)                    SAVE OPTION BYTE            03-OPEN\n 00000D38 5061 0000               00000000   5729+         ST    R6,0(1,0)                    STORE INTO LIST        @L1C 03-OPEN\n 00000D3C 42E1 0000               00000000   5730+         STC   14,0(1,0)                    RESTORE OPTION BYTE         03-OPEN\n 00000D40 0A40                               5731+         SVC   64                                ISSUE RDJFCB SVC       02-RDJFCB\n 00000D42 12FF                               5732+         LTR   R15,R15             test code                            01-$$ASMIF\n 00000D44 A774 00A3               00000E8A   5733+         JNZ   VTOC_ERR_RDJFCB     jump if RDJFCB error                 01-$$ASMIF\n 00000D48 9204 5000      00000000            5734+         MVI   JFCBDSNM,X'04'      init first byte                      01-$$ASMIF\n 00000D4C D22A 5001 5000 00000001 00000000   5735+         MVC   JFCBDSNM+1(43),JFCBDSNM copy rest                        01-$$ASMIF\n                                             5736+*        open  ((r6),input),mf=(e,(r4)),type=j\n 00000D52 1814                               5739+         LR    1,R4                              LOAD PARAMETER REG 1   03-IHBINNRA\n 00000D54 94F0 1000      00000000            5740+         NI    0(1),X'F0'                   CLEAR OPTION 1 BITS    @L1C 02-OPEN\n 00000D58 43E1 0000               00000000   5741+         IC    14,0(1,0)                    SAVE OPTION BYTE            02-OPEN\n 00000D5C 5061 0000               00000000   5742+         ST    R6,0(1,0)                    STORE INTO LIST        @L1C 02-OPEN\n 00000D60 42E1 0000               00000000   5743+         STC   14,0(1,0)                    RESTORE OPTION BYTE         02-OPEN\n 00000D64 0A16                               5744+         SVC   22                           ISSUE OPENJ SVC             02-OPEN\n 00000D66 9110 6030      00000030            5745+         TM    DCBOFLGS,DCBOFOPN   test open flag                       01-$$ASMIF\n 00000D6A A784 0094               00000E92   5746+         JZ    VTOC_ERR_OPEN       jump if open error                   01-$$ASMIF\n 00000D6E D243 D7F8 B318 000007F8 00001F30   5747+         MVC   ASM_VTOC_CVAFFILT(VTOC_MODEL_CVAFFL),VTOC_MODEL_CVAFFILT 01-$$ASMIF\n 00000D74 D717 D7CC D7CC 000007CC 000007CC   5748+         XC    ASM_VTOC_FCL(FCLHDLEN+FCLDSNEL),ASM_VTOC_FCL   init fcl  01-$$ASMIF\n 00000D7A D203 D7CC B080 00000000 00001C98   5749+         MVC   FCLID,=CL4'FCL'       set fcl id                         01-$$ASMIF\n 00000D80 D201 D7D0 B100 00000004 00001D18   5750+         MVC   FCLCOUNT,=H'1'        set number of fcl elements         01-$$ASMIF\n 00000D86 4120 D7DC               00000010   5751+         LA    R2,FCLHDEND           r2 addr of fcl elemnent            01-$$ASMIF\n                     R:2 00000000            5752+         USING FCLDSN,R2             establish addressability           01-$$ASMIF\n 00000D8A D200 2001 D79C 00000001 0000079C   5753+         MVC   FCLDSNLG,ASM_VTOC_FILTER set length                      01-$$ASMIF\n 00000D90 4110 D79D               0000079D   5754+         LA    R1,ASM_VTOC_FILTER+1  filter address                     01-$$ASMIF\n 00000D94 5010 2004               00000004   5755+         ST    R1,FCLDSNA            set addr(dsn pattern)              01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   46\n   Active Usings: PSA,R0  FCLDSN,R2  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000D98 D200 2001 D79C 00000001 0000079C   5756+         MVC   FCLDSNLG,ASM_VTOC_FILTER set length                      01-$$ASMIF\n                                             5757+         DROP  R2                                                       01-$$ASMIF\n 00000D9E D713 D7E4 D7E4 000007E4 000007E4   5758+         XC    ASM_VTOC_BFL(BFLHLN+BFLELN),ASM_VTOC_BFL clear           01-$$ASMIF\n 00000DA4 9201 D7E4      00000000            5759+         MVI   BFLHNOE,1             one buffe                          01-$$ASMIF\n 00000DA8 9604 D7E5      00000001            5760+         OI    BFLHFL,BFLHDSCB       identify as dscb bufr elemnt       01-$$ASMIF\n 00000DAC 4120 D7EC               000007EC   5761+         LA    R2,ASM_VTOC_BFL+BFLHLN first buffer                      01-$$ASMIF\n                     R:2 00000000            5762+         USING BFLE,R2               establish addressability           01-$$ASMIF\n 00000DB0 9640 2000      00000000            5763+         OI    BFLEFL,BFLECHR        request cchhr on return            01-$$ASMIF\n 00000DB4 928C 2002      00000002            5764+         MVI   BFLELTH,F1DSCB_SIZE   set bufr lngth to full dscb        01-$$ASMIF\n 00000DB8 4110 D83C               0000083C   5765+         LA    R1,ASM_VTOC_BUFFER    get buffer address                 01-$$ASMIF\n 00000DBC 5010 2008               00000008   5766+         ST    R1,BFLEBUF            set addr(dscb buffer)              01-$$ASMIF\n                                             5767+         DROP  R2                                                       01-$$ASMIF\n 00000DC0 1B11                               5768+         SR    R1,R1               clear r1                             01-$$ASMIF\n 00000DC2 BF17 602D               0000002D   5769+         ICM   R1,7,DCBDEBA        get deb addr                         01-$$ASMIF\n 00000DC6 5010 D81C               00000024   5770+         ST    R1,CVDEB            save in CVAF parm list               01-$$ASMIF\n                                             5771+*        cvaffilt access=read,                                         X\n                                                 +               FCL=ASM_VTOC_FCL,                                       X\n                                                 +               BUFLIST=ASM_VTOC_BFL,                                   X\n                                                 +               MF=(E,ASM_VTOC_CVAFFILT)\n 00000DCA 4110 D7F8               000007F8   5774+         LA    1,ASM_VTOC_CVAFFILT               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000DCE 920E 1006      00000006            5775+         MVI   6(1),X'0E'               SET FUNCTION CODE               02-CVAFFILT\n 00000DD2 41F0 D7CC               000007CC   5776+         LA    15,ASM_VTOC_FCL          GET FCL ADDRESS AND             02-CVAFFILT\n 00000DD6 50F0 1010               00000010   5777+         ST    15,16(,1)                STORE FCL PTR IN PARM LIST      02-CVAFFILT\n 00000DDA 41F0 D7E4               000007E4   5778+         LA    15,ASM_VTOC_BFL          GET BUFLIST ADDRESS AND         02-CVAFFILT\n 00000DDE 50F0 1014               00000014   5779+         ST    15,20(,1)                STORE BUFLIST PTR IN PARM LIST  02-CVAFFILT\n 00000DE2 0A8B                               5780+         SVC   139                                                      02-CVAFFILT\n 00000DE4 12FF                               5781+VTOC_CHECK  LTR R15,R15            test return                          01-$$ASMIF\n 00000DE6 A784 0017               00000E14   5782+         JZ    VTOC_GOT_LAST       jump if the last one                 01-$$ASMIF\n 00000DEA A7FE 0004               00000004   5783+         CHI   R15,4               check if rc4                         01-$$ASMIF\n 00000DEE A774 005A               00000EA2   5784+         JNE   VTOC_CVAFFILT_ERR   jump if filter error                 01-$$ASMIF\n 00000DF2 9501 D7FF      00000007            5785+         CLI   CVSTAT,STAT001      nothing found                        01-$$ASMIF\n 00000DF6 A784 0063               00000EBC   5786+         JE    VTOC_08             jump if it is                        01-$$ASMIF\n 00000DFA 9540 D7FF      00000007            5787+         CLI   CVSTAT,STAT064      more                                 01-$$ASMIF\n 00000DFE A774 0052               00000EA2   5788+         JNE   VTOC_CVAFFILT_ERR   jump if any other error              01-$$ASMIF\n 00000E02 A7F4 0039               00000E74   5789+         J     VTOC_COPY_DSCB      jump to copy DSCB                    01-$$ASMIF\n 00000E06                                    5790+VTOC_NEXT      DS                  0H                                   01-$$ASMIF\n                                             5791+*        cvaffilt access=resume,                                       X\n                                                 +               MF=(E,ASM_VTOC_CVAFFILT)\n 00000E06 4110 D7F8               000007F8   5794+         LA    1,ASM_VTOC_CVAFFILT               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000E0A 920F 1006      00000006            5795+         MVI   6(1),X'0F'               SET FUNCTION CODE               02-CVAFFILT\n 00000E0E 0A8B                               5796+         SVC   139                                                      02-CVAFFILT\n 00000E10 A7F4 FFEA               00000DE4   5797+         J     VTOC_CHECK          jump to check                        01-$$ASMIF\n 00000E14                                    5798+VTOC_GOT_LAST DS 0H                                                     01-$$ASMIF\n 00000E14 D403 D790 D790 00000790 00000790   5799+         NC    ASM_VTOC_DCB,ASM_VTOC_DCB already closed                 01-$$ASMIF\n 00000E1A A784 0055               00000EC4   5800+         JZ    VTOC_00             jump if so                           01-$$ASMIF\n                                             5801+*        cvaffilt accESS=RLSE,fcl=0,BUFLIST=0,FLTAREA=NOKEEP,          X\n                                                 +               MF=(E,ASM_VTOC_CVAFFILT)\n 00000E1E 4110 D7F8               000007F8   5804+         LA    1,ASM_VTOC_CVAFFILT               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000E22 9210 1006      00000006            5805+         MVI   6(1),X'10'               SET FUNCTION CODE               02-CVAFFILT\n 00000E26 947F 100A      0000000A            5806+         NI    10(1),B'01111111'        RESET CVAF FLAGS OFF            02-CVAFFILT\n 00000E2A 41F0 0000               00000000   5807+         LA    15,0                     GET FCL ADDRESS AND             02-CVAFFILT\n 00000E2E 50F0 1010               00000010   5808+         ST    15,16(,1)                STORE FCL PTR IN PARM LIST      02-CVAFFILT\n 00000E32 41F0 0000               00000000   5809+         LA    15,0                     GET BUFLIST ADDRESS AND         02-CVAFFILT\n 00000E36 50F0 1014               00000014   5810+         ST    15,20(,1)                STORE BUFLIST PTR IN PARM LIST  02-CVAFFILT\n 00000E3A 0A8B                               5811+         SVC   139                                                      02-CVAFFILT\n1          asmif asm interfcae module                                                                           Page   47\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            5812+*        close ((r6)),mf=(e,asm_vtoc_openlist),mode=31\n 00000E3C 4110 D7C8               000007C8   5815+         LA    1,ASM_VTOC_OPENLIST               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000E40 5061 0004               00000004   5816+         ST    R6,4(1,0)                    STORE DCB ADDR IN LIST @L1C 02-CLOSE\n 00000E44 1801                               5817+         LR    0,1                                                 @L1A 02-CLOSE\n 00000E46 1B11                               5818+         SR    1,1                                                 @L1A 02-CLOSE\n 00000E48 0A14                               5819+         SVC   20                                ISSUE CLOSE SVC        02-CLOSE\n                                             5820+*        storage release,addr=asm_vtoc_dcb,                            X\n                                                 +               LENGTH=VTOC_MODEL_DCB_LENGTH+184\n 00000E4A 5800 B078               00001C90   5823+         L      0,=A(VTOC_MODEL_DCB_LENGTH+184)                        X02-STORAGE\n                                                 +                                             .STORAGE LENGTH       @P9C\n 00000E4E 5810 D790               00000790   5824+         L      1,ASM_VTOC_DCB               .ADDRESS OF STORAGE        02-STORAGE\n 00000E52 A7F8 0003               00000003   5825+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 00000E56 58E0 0010               00000010   5826+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000E5A 58EE 0304               00000304   5827+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000E5E 58EE 00CC               000000CC   5828+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00000E62 B218 E000      00000000            5829+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000E66 D703 D790 D790 00000790 00000790   5830+         XC    ASM_VTOC_DCB,ASM_VTOC_DCB release DCB arae               01-$$ASMIF\n 00000E6C 41F0 0004               00000004   5831+         LA    R15,4               get return code                      01-$$ASMIF\n 00000E70 A7F4 0003               00000E76   5832+         J     VTOC_COPY_DSCB+2    jump to copy                         01-$$ASMIF\n 00000E74 1BFF                               5833+VTOC_COPY_DSCB SR R15,R15          clear rc                             01-$$ASMIF\n 00000E76 BF0F D120               00000120   5834+         ICM   R0,15,ASM_PARMS+12  target address                       01-$$ASMIF\n 00000E7A A718 008C               0000008C   5835+         LHI   R1,F1DSCB_SIZE      get DSCB size                        01-$$ASMIF\n 00000E7E 4120 D83C               0000083C   5836+         LA    R2,ASM_VTOC_BUFFER  from address                         01-$$ASMIF\n 00000E82 1831                               5837+         LR    R3,R1               same length                          01-$$ASMIF\n 00000E84 0E02                               5838+         MVCL  R0,R2               copy DSCB                            01-$$ASMIF\n 00000E86 A7F4 0020               00000EC6   5839+         J     VTOC_XX             jump out                             01-$$ASMIF\n 00000E8A 9206 D066      00000066            5840+VTOC_ERR_RDJFCB    MVI ASM_REASON+2,6 JFCB error                        01-$$ASMIF\n 00000E8E A7F4 0013               00000EB4   5841+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000E92 9205 D066      00000066            5842+VTOC_ERR_OPEN    MVI ASM_REASON+2,5 open error                          01-$$ASMIF\n 00000E96 A7F4 000F               00000EB4   5843+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000E9A 9204 D066      00000066            5844+VTOC_ERR_STORAGE MVI ASM_REASON+2,4 no storage                          01-$$ASMIF\n 00000E9E A7F4 000B               00000EB4   5845+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000EA2                                    5846+VTOC_CVAFFILT_ERR DS 0H                                                 01-$$ASMIF\n 00000EA2 D200 D067 D7FF 00000067 00000007   5847+         MVC   ASM_REASON+3(1),CVSTAT copy status code                  01-$$ASMIF\n 00000EA8 A7F4 0006               00000EB4   5848+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000EAC 4200 D066               00000066   5849+VTOC_ERR_PARM STC R0,ASM_REASON+2 set reason                            01-$$ASMIF\n 00000EB0 A7F4 0002               00000EB4   5850+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000EB4 41F0 000C               0000000C   5851+VTOC_12  LA    R15,12              get code                             01-$$ASMIF\n 00000EB8 A7F4 0007               00000EC6   5852+         J     VTOC_XX             jump out                             01-$$ASMIF\n 00000EBC 41F0 0008               00000008   5853+VTOC_08  LA    R15,8               get code                             01-$$ASMIF\n 00000EC0 A7F4 0003               00000EC6   5854+         J     VTOC_XX             jump out                             01-$$ASMIF\n 00000EC4 1BFF                               5855+VTOC_00  SR    R15,R15             get code                             01-$$ASMIF\n 00000EC6                                    5856+VTOC_XX  DS    0H                  return back                          01-$$ASMIF\n 00000EC6 50F0 D060               00000060   5857+         ST    R15,ASM_RC          back code                            01-$$ASMIF\n 00000ECA 0101                               5858+         PR    ,                   return back                          01-$$ASMIF\n                                             5859+* 19/11/08 SRB callback\n                                             5860+*---------------------------------------------------------------------*\n                                             5861+* SRB call                                                            *\n                                             5862+* call an SRB routine and from the SRB call back a C function         *\n                                             5863+* +0 function addres to call                                          *\n                                             5864+* +4 paramter area address                                            *\n                                             5865+*                                                                     *\n                                             5866+*---------------------------------------------------------------------*\n 00000ECC                                    5867+SRB_     DS   0H                                                        01-$$ASMIF\n 00000ECC 0101                               5868+         PR    ,                                                        01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   48\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            5869+* 24/11/08 WLM enclave\n                                             5870+*---------------------------------------------------------------------*\n                                             5871+* WLM service create/delete enclave                                   *\n                                             5872+* +0     SUBSYSTEM name                                               *\n                                             5873+* back : r15 = return code                                            *\n                                             5874+*----------------- ---------------------------------------------------*\n 00000ECE 0101                               5875+WLM      PR    ,                                                        01-$$ASMIF\n                                             5876+* 24/11/08 WLM enclave\n                                             5877+* 04/03/10 OBTAIN DSCB\n                                             5878+*---------------------------------------------------------------------*\n                                             5879+* OBTAIN routine                                                      *\n                                             5880+* +0 dataset name                                                     *\n                                             5881+* +4 volser                                                           *\n                                             5882+* +8 F1DSCB area                                                      *\n                                             5883+*---------------------------------------------------------------------*\n000000ED0                                    5885+OBTAIN   DS    0H                                                       01-$$ASMIF\n 00000ED0 9812 D114               00000114   5886+         LM    R1,R2,ASM_PARMS                                          01-$$ASMIF\n 00000ED4 A7F8 FFFF               FFFFFFFF   5887+         LHI   R15,-1                                                   01-$$ASMIF\n 00000ED8 BF1F D114               00000114   5888+         ICM   R1,15,ASM_PARMS                                          01-$$ASMIF\n 00000EDC A784 002F               00000F3A   5889+         JZ    OBTAIN_XX                                                01-$$ASMIF\n 00000EE0 9540 1000      00000000            5901+                CLI             0(R1),C' '                              04-ASMMPOPI\n 00000EE4 A744 0019               00000F16   5902+           BRC          4,#@LB4                                         03-ASMMIFPR\n 00000EE8 D62B 1000 B114 00000000 00001D2C   5904+         OC    0(44,R1),BLANKS                                          01-$$ASMIF\n 00000EEE BF1F D118               00000118   5905+         ICM   R1,15,ASM_PARMS+4                                        01-$$ASMIF\n 00000EF2 A784 0024               00000F3A   5906+         JZ    OBTAIN_XX                                                01-$$ASMIF\n 00000EF6 D605 1000 B114 00000000 00001D2C   5907+         OC    0(6,R1),BLANKS                                           01-$$ASMIF\n 00000EFC D20F D8C8 B384 000008C8 00001F9C   5908+         MVC   ASM_CAMLST(CAMLST_L),CAMLST copy camlst                  01-$$ASMIF\n 00000F02 D20B D8CC D114 000008CC 00000114   5909+         MVC   ASM_CAMLST+4(12),ASM_PARMS                               01-$$ASMIF\n                                             5910+* 16/08/11 OBTAIN EADSCB=OK for EAV volumes\n                                             5911+*        OBTAIN asm_camlst,EADSCB=OK ISSUE OBTAIN\n 00000F08 4110 D8C8               000008C8   5914+         LA    1,ASM_CAMLST                      LOAD PARAMETER REG 1   03-IHBINNRA\n 00000F0C 9608 1002      00000002            5915+         OI    2(1),B'00001000'     Set Obtain option flags on     @LVA 02-OBTAIN\n 00000F10 0A1B                               5916+         SVC   27                   Issue OBTAIN SVC               @LVC 02-OBTAIN\n                                             5917+* 16/08/11 OBTAIN EADSCB=OK for EAV volumes\n 00000F12 A7F4 0014               00000F3A   5923+         BRC   15,#@LB6                                                 02-\n 00000F16                                    5924+#@LB4    DC    0H                                                       02-\n                                             5926+* 10/09/12 CAMLST SEEK for OBTAIN\n 00000F16 BF1F D118               00000118   5927+         ICM   R1,15,ASM_PARMS+4                                        01-$$ASMIF\n 00000F1A A784 0010               00000F3A   5928+         JZ    OBTAIN_XX                                                01-$$ASMIF\n 00000F1E D605 1000 B114 00000000 00001D2C   5929+         OC    0(6,R1),BLANKS                                           01-$$ASMIF\n 00000F24 D20F D8C8 B394 000008C8 00001FAC   5930+         MVC   ASM_CAMLST(CAMLST_L),CAMLST_SEEK copy camlst             01-$$ASMIF\n 00000F2A D20B D8CC D114 000008CC 00000114   5931+         MVC   ASM_CAMLST+4(12),ASM_PARMS                               01-$$ASMIF\n                                             5932+* 16/08/11 OBTAIN EADSCB=OK for EAV volumes\n                                             5933+*        OBTAIN asm_camlst,EADSCB=OK ISSUE OBTAIN\n 00000F30 4110 D8C8               000008C8   5936+         LA    1,ASM_CAMLST                      LOAD PARAMETER REG 1   03-IHBINNRA\n 00000F34 9608 1002      00000002            5937+         OI    2(1),B'00001000'     Set Obtain option flags on     @LVA 02-OBTAIN\n 00000F38 0A1B                               5938+         SVC   27                   Issue OBTAIN SVC               @LVC 02-OBTAIN\n 00000F3A                                    5944+#@LB6    DC    0H                                                       02-\n                                             5946+* 10/09/12 CAMLST SEEK for OBTAIN\n 00000F3A                                    5947+OBTAIN_XX DS 0H                                                         01-$$ASMIF\n 00000F3A 50F0 D060               00000060   5948+         ST    R15,ASM_RC          back code                            01-$$ASMIF\n 00000F3E 0101                               5949+         PR    ,                                                        01-$$ASMIF\n0                                            5951+* 04/03/10 OBTAIN DSCB\n1          asmif asm interfcae module                                                                           Page   49\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            5952+*---------------------------------------------------------------------*\n                                             5953+* sleep  wait for n ms                                                *\n                                             5954+* +0     wait time in ms                                              *\n                                             5955+* back : r15 = ieantcr return code                                    *\n                                             5956+*---------------------------------------------------------------------*\n 00000F40 B240 00E0                          5957+SLEEP_INTERN BAKR R14,0          all in linkage stack                   01-$$ASMIF\n 00000F44 5810 D114               00000114   5958+SLEEP    L     R1,ASM_PARMS      get in msec                            01-$$ASMIF\n 00000F48 1211                               5959+         LTR   R1,R1             test it                                01-$$ASMIF\n 00000F4A A784 000F               00000F68   5962+         BRC   8,SLEEP_00  (BZ)                                         03-\n 00000F4E A7D4 0010               00000F6E   5965+         BRC   13,SLEEP_08  (BNP)                                       03-\n 00000F52 C0E5 0000 062B          00001BA8   5966+         BRASL R14,MILLSEC       call mill sec conv                     01-$$ASMIF\n                                             5967+*        stimer wait,micvl=asm_sleep     wait here\n                                             5970+*        MACDATE = 08/19/88                                        @L1C\n 00000F58 4110 D228               00000228   5971+         LA    1,ASM_SLEEP                        LOAD ADDR TIME VALUE  02-STIMER\n 00000F5C 1BFF                               5972+         SR    15,15                              INDICATE NO EXIT      02-STIMER\n 00000F5E 4100 00A1               000000A1   5973+         LA    0,161(0,0)                        LOAD FLAG BYTE         02-STIMER\n 00000F62 8900 0018               00000018   5974+         SLL   0,24(0)                           SHIFT TO HI-ORDER BYTE 02-STIMER\n 00000F66 0A2F                               5975+         SVC   47                                ISSUE STIMER SVC       02-STIMER\n 00000F68 1BFF                               5976+SLEEP_00 SR    R15,R15           clear return                           01-$$ASMIF\n 00000F6A A7F4 0004               00000F72   5979+         BRC   15,SLEEP_XX  (B)                                         03-\n 00000F6E 41F0 0008               00000008   5980+SLEEP_08 LA    R15,8             get code                               01-$$ASMIF\n 00000F72 50F0 D060               00000060   5981+SLEEP_XX ST    R15,ASM_RC        set rc                                 01-$$ASMIF\n 00000F76 0101                               5982+         PR    ,                 return back                            01-$$ASMIF\n                                             5983+*---------------------------------------------------------------------*\n                                             5984+* getecb get a work ecb address                                       *\n                                             5985+* back : r15 = ieantcr return code                                    *\n                                             5986+*---------------------------------------------------------------------*\n 00000F78 5820 D114               00000114   5987+GETECB   L     R2,ASM_PARMS      get in msec                            01-$$ASMIF\n 00000F7C 5830 D1E8               000001E8   5988+         L     R3,ASM_WORKECBP   get pointer                            01-$$ASMIF\n 00000F80 D503 2000 B194 00000000 00001DAC   5989+         CLC   0(4,R2),ZERO      init or free                           01-$$ASMIF\n 00000F86 A774 001A               00000FBA   5992+         BRC   7,GETECB_FREE  (BNE)                                     03-\n 00000F8A 5830 D1E4               000001E4   5993+         L     R3,ASM_WORKECBS   get start                              01-$$ASMIF\n 00000F8E                                    5994+GETECB_FIND_LOOP DS 0H                                                  01-$$ASMIF\n 00000F8E D503 3000 B194 00000000 00001DAC   5995+         CLC   0(4,R3),ZERO      empty                                  01-$$ASMIF\n 00000F94 A784 000A               00000FA8   5998+         BRC   8,GETECB_FIND  (BE)                                      03-\n 00000F98 4130 3014               00000014   5999+         LA    R3,20(,R3)        inr addr                               01-$$ASMIF\n 00000F9C 5930 D1EC               000001EC   6000+         C     R3,ASM_WORKECBE   check imit                             01-$$ASMIF\n 00000FA0 A7B4 001F               00000FDE   6003+         BRC   11,GETECB_08  (BNL)                                      03-\n 00000FA4 A7F4 FFF5               00000F8E   6006+         BRC   15,GETECB_FIND_LOOP  (B)                                 03-\n 00000FA8                                    6007+GETECB_FIND DS 0H                                                       01-$$ASMIF\n 00000FA8 D203 3000 B038 00000000 00001C50   6008+         MVC   0(4,R3),=F'-1'    reserved flag                          01-$$ASMIF\n 00000FAE 4130 3004               00000004   6009+         LA    R3,4(,R3)         proper start                           01-$$ASMIF\n 00000FB2 5032 0000               00000000   6010+         ST    R3,0(R2)          store it                               01-$$ASMIF\n 00000FB6 A7F4 0011               00000FD8   6013+         BRC   15,GETECB_00  (B)                                        03-\n 00000FBA 5830 2000               00000000   6014+GETECB_FREE L  R3,0(,R2)         get addr                               01-$$ASMIF\n 00000FBE 4B30 B102               00001D1A   6015+         SH    R3,=Y(4)          decr it                                01-$$ASMIF\n 00000FC2 5930 D1E4               000001E4   6016+         C     R3,ASM_WORKECBS   if lower                               01-$$ASMIF\n 00000FC6 A744 000C               00000FDE   6019+         BRC   4,GETECB_08  (BL)                                        03-\n 00000FCA 5930 D1EC               000001EC   6020+         C     R3,ASM_WORKECBE   if lower                               01-$$ASMIF\n 00000FCE A724 0008               00000FDE   6023+         BRC   2,GETECB_08  (BH)                                        03-\n 00000FD2 D713 3000 3000 00000000 00000000   6024+         XC    0(20,R3),0(R3)    clean slot                             01-$$ASMIF\n 00000FD8 1BFF                               6025+GETECB_00 SR   R15,R15           clear reg                              01-$$ASMIF\n 00000FDA A7F4 0004               00000FE2   6028+         BRC   15,GETECB_XX  (B)                                        03-\n 00000FDE 41F0 0008               00000008   6029+GETECB_08 LA   R15,8             get code                               01-$$ASMIF\n 00000FE2 50F0 D060               00000060   6030+GETECB_XX ST   R15,ASM_RC        save rc                                01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   50\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000FE6 0101                               6031+         PR    ,                 return back                            01-$$ASMIF\n                                             6032+*---------------------------------------------------------------------*\n                                             6033+* wait for an event or give up after n ms                             *\n                                             6034+* +0     wait time in ms                                              *\n                                             6035+* +4     ecb pointer's                                                *\n                                             6036+* back : r15 = ieantcr return code                                    *\n                                             6037+*---------------------------------------------------------------------*\n 00000FE8 5820 D114               00000114   6038+WAIT     L     R2,ASM_PARMS      get parms                              01-$$ASMIF\n 00000FEC 1222                               6039+         LTR   R2,R2             test time                              01-$$ASMIF\n 00000FEE A784 000A               00001002   6042+         BRC   8,WAIT_TIME_VALID  (BZ)                                  03-\n 00000FF2 A744 0006               00000FFE   6045+         BRC   4,WAIT_TIME_INVALID  (BM)                                03-\n 00000FF6 5920 B378               00001F90   6046+         C     R2,ADAY           check it                               01-$$ASMIF\n 00000FFA A744 0004               00001002   6049+         BRC   4,WAIT_TIME_VALID  (BL)                                  03-\n 00000FFE                                    6050+WAIT_TIME_INVALID DS 0H                                                 01-$$ASMIF\n 00000FFE 5820 B378               00001F90   6051+         L     R2,ADAY           get it                                 01-$$ASMIF\n 00001002                                    6052+WAIT_TIME_VALID DS 0H                                                   01-$$ASMIF\n 00001002 5020 D114               00000114   6053+         ST    R2,ASM_PARMS      save time value                        01-$$ASMIF\n 00001006 4120 D118               00000118   6054+         LA    R2,ASM_PARMS+4    next ECB                               01-$$ASMIF\n 0000100A 4130 D0B4               000000B4   6055+         LA    R3,ASM_EVENT0_ECBP-4 next pointer                        01-$$ASMIF\n 0000100E 4140 0004               00000004   6056+         LA    R4,4              max count                              01-$$ASMIF\n 00001012 4150 D134               00000134   6057+         LA    R5,ASM_CALLLIST   temp addr                              01-$$ASMIF\n 00001016 D71F D134 D134 00000134 00000134   6058+         XC    ASM_CALLLIST(32),ASM_CALLLIST                            01-$$ASMIF\n 0000101C D503 2000 B194 00000000 00001DAC   6059+WAIT_ECBP_LOOP CLC 0(4,R2),ZERO  end of list                            01-$$ASMIF\n 00001022 A784 0026               0000106E   6062+         BRC   8,WAIT_ECBP_LOOP_END  (BE)                               03-\n 00001026 4130 3004               00000004   6063+         LA    R3,4(,R3)         next ECBP                              01-$$ASMIF\n 0000102A 5812 0000               00000000   6064+         L     R1,0(R2)          get ECB addr                           01-$$ASMIF\n 0000102E 9140 1000      00000000            6065+         TM    0(R1),X'40'       is it posted                           01-$$ASMIF\n 00001032 A714 005D               000010EC   6068+         BRC   1,WAIT_COMPLETED  (BO)                                   03-\n                                             6069+*26/04/04\n 00001036 D403 1000 B084 00000000 00001C9C   6070+         NC    0(4,R1),=X'7FFFFFFF' off wait flag                       01-$$ASMIF\n 0000103C 5010 3000               00000000   6071+         ST    R1,0(,R3)          store in the list                     01-$$ASMIF\n                                             6072+*25/08/04\n                                             6073+*        enq   (wait_maj,0(r3),e,4,step),mf=(e,asm_enql)\n                                             6076+*         MACRO-DATE = 06/24/03                                    @05C\n 00001040                                    6077+         DS    0H                                                  @04A 02-ENQ\n 00001040 4110 D20C               0000020C   6080+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 03-IHBSETR\n 00001044 9204 1001      00000001            6081+         MVI   1(1),4                  PELMILEN - RNAME length.         02-ENQ\n 00001048 9437 1002      00000002            6082+         NI    2(1),55                   SET OPTIONS SPECIFIED @ZA00466 02-ENQ\n 0000104C 41E0 B37C               00001F94   6083+         LA    14,WAIT_MAJ               GET QNAME ADDRESS              02-ENQ\n 00001050 50E0 1004               00000004   6084+         ST    14,4(0,1)                 STORE QNAME ADDRESS            02-ENQ\n 00001054 41E3 0000               00000000   6085+         LA    14,0(R3)                  GET RNAME ADDRESS              02-ENQ\n 00001058 50E0 1008               00000008   6086+         ST    14,8(0,1)                 STORE RNAME ADDRESS            02-ENQ\n 0000105C 0A38                               6087+         SVC   56                                                       02-ENQ\n 0000105E 5030 5000               00000000   6088+         ST    R3,0(,R5)         save it                                01-$$ASMIF\n 00001062 4150 5004               00000004   6089+         LA    R5,4(,R5)         next                                   01-$$ASMIF\n                                             6090+*25/08/04\n 00001066 4120 2004               00000004   6091+         LA    R2,4(,R2)         next ECBP                              01-$$ASMIF\n 0000106A A746 FFD9               0000101C   6093+         BRCT  R4,WAIT_ECBP_LOOP  ($$ASMIF)                             02-\n 0000106E                                    6094+WAIT_ECBP_LOOP_END DS 0H                                                01-$$ASMIF\n 0000106E 9680 3000      00000000            6095+         OI    0(R3),X'80'       high order on                          01-$$ASMIF\n 00001072 4140 D0C8               000000C8   6096+         LA    R4,ASM_TIMER_ECB  get timer ecb                          01-$$ASMIF\n 00001076 5040 D0B4               000000B4   6097+         ST    R4,ASM_TIMER_ECBP set it                                 01-$$ASMIF\n 0000107A D703 D0C8 D0C8 000000C8 000000C8   6098+         XC    ASM_TIMER_ECB,ASM_TIMER_ECB cear ecb                     01-$$ASMIF\n 00001080 4150 D074               00000074   6099+         LA    R5,ASM_TIMX       get timx addr                          01-$$ASMIF\n 00001084 5810 D114               00000114   6100+         L     R1,ASM_PARMS      time here                              01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   51\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001088 C0E5 0000 0590          00001BA8   6101+         BRASL R14,MILLSEC       call millsec routine                   01-$$ASMIF\n                                             6102+*        stimer real,(r5),micvl=asm_sleep get address\n                                             6105+*        MACDATE = 08/19/88                                        @L1C\n 0000108E 4110 D228               00000228   6106+         LA    1,ASM_SLEEP                        LOAD ADDR TIME VALUE  02-STIMER\n 00001092 18F5                               6107+         LR    15,R5                              LOAD EXIT ADDRESS     02-STIMER\n 00001094 4100 00A3               000000A3   6108+         LA    0,163(0,0)                        LOAD FLAG BYTE         02-STIMER\n 00001098 8900 0018               00000018   6109+         SLL   0,24(0)                           SHIFT TO HI-ORDER BYTE 02-STIMER\n 0000109C 0A2F                               6110+         SVC   47                                ISSUE STIMER SVC       02-STIMER\n                                             6111+*        wait  ecblist=asm_timer_ecbp,linkage=system\n                                             6113+*        MACDATE  10/20/88                                         @01C\n 0000109E 4100 0001               00000001   6115+         LA    0,1(0,0)                    COUNT OMITTED,1 USED    @L1C 02-WAIT\n 000010A2 4110 D0B4               000000B4   6117+         LA    1,ASM_TIMER_ECBP                  LOAD PARAMETER REG 1   03-IHBINNRA\n 000010A6 1311                               6118+         LCR   1,1                         INDICATE ECBLIST USED        02-WAIT\n 000010A8 58E0 0010               00000010   6119+         L     14,16(0,0)                  CVT ADDRESS             @L1A 02-WAIT\n 000010AC 58E0 E304               00000304   6120+         L     14,772(,14)                 SYSTEM FUNCTION TABLE   @L1A 02-WAIT\n 000010B0 58E0 E0A8               000000A8   6121+         L     14,168(,14)                 GET LX/EX FROM SFT      @L1A 02-WAIT\n 000010B4 B218 E000      00000000            6122+         PC    0(14)                       PC TO WAIT SERVICE RTNE @L1A 02-WAIT\n                                             6123+*        ttimer cancel           cancel timer\n                                             6125+*        MACDATE  02/26/90                                         @P1C\n 000010B8 4110 0001               00000001   6126+         LA    1,1(0,0)                     LOAD 1 TO SET FLAG BYTE     02-TTIMER\n 000010BC 0A2E                               6127+         SVC   46                           ISSUE TTIMER                02-TTIMER\n                                             6128+*25/08/04\n 000010BE 41F0 D0B8               000000B8   6129+         LA    R15,ASM_EVENT0_ECBP get ecb pointer                      01-$$ASMIF\n 000010C2 41E0 0004               00000004   6130+         LA    R14,4             max ecb                                01-$$ASMIF\n 000010C6 BF1F F000               00000000   6131+WAIT_POSTED_LOOP ICM R1,15,0(R15) get next                              01-$$ASMIF\n 000010CA 4110 1000               00000000   6132+         LA    R1,0(,R1)         get rid of high order                  01-$$ASMIF\n 000010CE 1211                               6133+         LTR   R1,R1             test it                                01-$$ASMIF\n 000010D0 A784 000A               000010E4   6136+         BRC   8,WAIT_POSTED_TIME  (BZ)                                 03-\n 000010D4 9140 1000      00000000            6137+         TM    0(R1),X'40'       is it posted                           01-$$ASMIF\n 000010D8 A714 000A               000010EC   6140+         BRC   1,WAIT_COMPLETED  (BO)                                   03-\n 000010DC 41F0 F004               00000004   6141+         LA    R15,4(,R15)       next ecbp                              01-$$ASMIF\n 000010E0 A7E6 FFF3               000010C6   6143+         BRCT  R14,WAIT_POSTED_LOOP  ($$ASMIF)                          02-\n 000010E4                                    6144+WAIT_POSTED_TIME DS 0H                                                  01-$$ASMIF\n 000010E4 9140 D0C8      000000C8            6145+         TM    ASM_TIMER_ECB,X'40' timer occured                        01-$$ASMIF\n 000010E8 A714 000D               00001102   6148+         BRC   1,WAIT_08  (BO)                                          03-\n 000010EC                                    6149+WAIT_COMPLETED DS 0H                                                    01-$$ASMIF\n 000010EC 1211                               6150+         LTR   R1,R1             test r1                                01-$$ASMIF\n 000010EE A784 0005               000010F8   6153+         BRC   8,WAIT_00  (BZ)                                          03-\n 000010F2 D403 1000 B088 00000000 00001CA0   6154+         NC    0(4,R1),=X'3FFFFFFF' clear wait and post flags           01-$$ASMIF\n 000010F8 1BFF                               6155+WAIT_00  SR    R15,R15           clear code                             01-$$ASMIF\n 000010FA BFFF 1000               00000000   6156+         ICM   R15,15,0(R1)      get code                               01-$$ASMIF\n 000010FE A7F4 0004               00001106   6159+         BRC   15,WAIT_XX  (B)                                          03-\n 00001102 58F0 B038               00001C50   6160+WAIT_08  L     R15,=F'-1'        get code                               01-$$ASMIF\n 00001106 50F0 D060               00000060   6161+WAIT_XX  ST    R15,ASM_RC        back code                              01-$$ASMIF\n                                             6162+*25/08/04\n 0000110A 4150 D134               00000134   6163+         LA    R5,ASM_CALLLIST    get ecb pointer                       01-$$ASMIF\n 0000110E 4140 0004               00000004   6164+         LA    R4,4              max ecb                                01-$$ASMIF\n 00001112 BF3F 5000               00000000   6165+WAIT_DEQ_LOOP ICM R3,15,0(R5) get next                                  01-$$ASMIF\n 00001116 A784 0018               00001146   6168+         BRC   8,WAIT_DEQ_DONE  (BZ)                                    03-\n 0000111A D403 3000 B084 00000000 00001C9C   6169+         NC    0(4,R3),=X'7FFFFFFF' off high bit                        01-$$ASMIF\n                                             6170+*        deq   (wait_maj,0(r3),4,step),mf=(e,asm_enql)\n                                             6172+*        MACRO-DATE = 10/06/2004                                   @P2C\n 00001120                                    6175+         DS    0H                                                  @04A 03-ENQ\n 00001120 4110 D20C               0000020C   6178+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 04-IHBSETR\n 00001124 9204 1001      00000001            6179+         MVI   1(1),4                  PELMILEN - RNAME length.         03-ENQ\n1          asmif asm interfcae module                                                                           Page   52\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001128 94B7 1002      00000002            6180+         NI    2(1),183                  SET OPTIONS SPECIFIED @ZA00466 03-ENQ\n 0000112C 41E0 B37C               00001F94   6181+         LA    14,WAIT_MAJ               GET QNAME ADDRESS              03-ENQ\n 00001130 50E0 1004               00000004   6182+         ST    14,4(0,1)                 STORE QNAME ADDRESS            03-ENQ\n 00001134 41E3 0000               00000000   6183+         LA    14,0(R3)                  GET RNAME ADDRESS              03-ENQ\n 00001138 50E0 1008               00000008   6184+         ST    14,8(0,1)                 STORE RNAME ADDRESS            03-ENQ\n 0000113C 0A30                               6185+         SVC   48                                                  SDS1 02-DEQ\n 0000113E 4150 5004               00000004   6186+         LA    R5,4(,R5)       next ecbp                                01-$$ASMIF\n 00001142 A746 FFE8               00001112   6188+         BRCT  R4,WAIT_DEQ_LOOP  ($$ASMIF)                              02-\n 00001146                                    6189+WAIT_DEQ_DONE DS 0H                                                     01-$$ASMIF\n                                             6190+*        LR    R15,R5            back rc\n 00001146 0101                               6191+         PR    ,                 return back                            01-$$ASMIF\n                                             6192+*        DROP  R2\n                                             6193+*---------------------------------------------------------------------*\n                                             6194+* post for an event                                                   *\n                                             6195+* +0     ECB pointer                                                  *\n                                             6196+* +4     post code                                                    *\n                                             6197+* back : r15 = returrn code                                           *\n                                             6198+*---------------------------------------------------------------------*\n                     R:4 00000000            6199+         USING EVENT_TOKEN,R4    base on even token                     01-$$ASMIF\n 00001148 9845 D114               00000114   6200+POST     LM    R4,R5,ASM_PARMS   get parms                              01-$$ASMIF\n 0000114C 5864 0000               00000000   6201+         L     R6,0(R4)            get ecb                              01-$$ASMIF\n 00001150 1266                               6202+         LTR   R6,R6               test ECB                             01-$$ASMIF\n 00001152 A744 0016               0000117E   6205+         BRC   4,POSTBR_X  (BM)                                         03-\n 00001156 5460 B088               00001CA0   6206+         N     R6,=X'3FFFFFFF'     off wait post bit                    01-$$ASMIF\n 0000115A 5810 B08C               00001CA4   6207+         L     R1,=X'40000000'     get posted                           01-$$ASMIF\n 0000115E 1615                               6208+         OR    R1,R5               get code                             01-$$ASMIF\n 00001160 BA61 4000               00000000   6209+         CS    R6,R1,0(R4)         check it                             01-$$ASMIF\n 00001164 A784 0011               00001186   6212+         BRC   8,POSTED_X  (BZ)                                         03-\n 00001168 1266                               6213+         LTR   R6,R6               test wait bit                        01-$$ASMIF\n 0000116A A744 000A               0000117E   6216+         BRC   4,POSTBR_X  (BM)                                         03-\n 0000116E 5460 B08C               00001CA4   6217+         N     R6,=X'40000000'     test if already posted               01-$$ASMIF\n 00001172 A784 0006               0000117E   6220+         BRC   8,POSTBR_X  (BZ)                                         03-\n 00001176 BE57 4001               00000001   6221+         STCM  R5,7,1(R4)          set new code                         01-$$ASMIF\n 0000117A A7F4 0006               00001186   6224+         BRC   15,POSTED_X  (B)                                         03-\n 0000117E                                    6225+POSTBR_X DS 0H                                                          01-$$ASMIF\n                                             6226+*        post  (r4),(r5)           issue POST\n                                             6228+*        MACDATE  07/02/90                                     @YA32157\n 0000117E 1805                               6230+         LR    0,R5                   . SET POST CODE              @D1A 02-POST\n 00001180 4110 4000               00000000   6231+         LA    1,0(0,R4)              . LOAD ECB, CLEAR HI BYTE    @D1A 02-POST\n 00001184 0A02                               6232+         SVC   2                      . ISSUE THE POST SVC         @D1A 02-POST\n 00001186 D203 D060 B194 00000060 00001DAC   6233+POSTED_X MVC   ASM_RC,ZERO         clear rc                             01-$$ASMIF\n 0000118C A7F4 0005               00001196   6236+         BRC   15,POST_XX  (B)                                          03-\n 00001190 D203 D060 B070 00000060 00001C88   6237+POSTERR_X MVC  ASM_RC,=A(8)        set code                             01-$$ASMIF\n 00001196 58F0 D060               00000060   6238+POST_XX  L     R15,ASM_RC          get code                             01-$$ASMIF\n 0000119A 0101                               6239+         PR    ,                   return                               01-$$ASMIF\n                                             6240+         DROP  R4                                                       01-$$ASMIF\n                                             6241+*---------------------------------------------------------------------*\n                                             6242+* reset reset event  ecb                                              *\n                                             6243+* +0     event token pointer                                          *\n                                             6244+* back : r15 = returrn code                                           *\n                                             6245+*---------------------------------------------------------------------*\n                     R:4 00000000            6246+         USING EVENT_TOKEN,R4    base on even token                     01-$$ASMIF\n 0000119C 9845 D114               00000114   6247+RESET    LM    R4,R5,ASM_PARMS   get parms                              01-$$ASMIF\n 000011A0 5830 4008               00000008   6248+         L     R3,EVENT_TOKEN_ECBP   get ecb pointer                    01-$$ASMIF\n                                             6249+****     xc    0(4,r3),0(r3)      leave as it is\n1          asmif asm interfcae module                                                                           Page   53\n   Active Usings: PSA,R0  EVENT_TOKEN,R4  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000011A4 1BFF                               6250+         SR    R15,R15            clear ret                             01-$$ASMIF\n 000011A6 58F0 D060               00000060   6251+         L     R15,ASM_RC          get code                             01-$$ASMIF\n 000011AA 0101                               6252+         PR    ,                   return                               01-$$ASMIF\n                                             6253+         DROP  R4                                                       01-$$ASMIF\n                                             6254+* 06/03/12 TESTAUTH DIAGNOSE extension\n                                             6255+*---------------------------------------------------------------------*\n                                             6256+* TESTAUTH test if APF authorized                                     *\n                                             6257+* back : r15 = returrn code                                           *\n                                             6258+*---------------------------------------------------------------------*\n 000011AC B240 00E0                          6259+TESTAUTH_INTERN BAKR R14,0                                              01-$$ASMIF\n 000011B0                                    6260+TESTAUTH  DS  0H                                                        01-$$ASMIF\n 000011B0 BFFF D8D8               000008D8   6272+                ICM R15,15,ASM_TESTAUTH                                 04-ASMMPOPI\n 000011B4 A7B4 000D               000011CE   6273+           BRC          11,#@LB7                                        03-ASMMIFPR\n                                             6275+*         testauth fctn=1\n 000011B8 4110 0001               00000001   6277+         LA    1,1(0,0)       SPECIFY FUNCTION CODE              YM1995 02-TESTAUTH\n 000011BC 4100 0FFF               00000FFF   6278+         LA    0,X'FFF'       NO AUTH CODE SPECIFIED --        @G860PXB 02-TESTAUTH\n 000011C0 8900 0014               00000014   6279+         SLL   0,20             REG 0 NEGATIVE                 @G860PXB 02-TESTAUTH\n 000011C4 0A77                               6280+         SVC   119                                                      02-TESTAUTH\n 000011C6 50F0 D8D8               000008D8   6281+          ST  R15,ASM_TESTAUTH                                          01-$$ASMIF\n 000011CA A7F4 0004               000011D2   6287+         BRC   15,#@LB9                                                 02-\n 000011CE                                    6288+#@LB7    DC    0H                                                       02-\n 000011CE BFFF D8D8               000008D8   6290+          ICM  R15,15,ASM_TESTAUTH                                      01-$$ASMIF\n 000011D2                                    6296+#@LB9    DC    0H                                                       02-\n 000011D2 0101                               6298+          PR   ,                                                        01-$$ASMIF\n                                             6299+* 06/03/12 TESTAUTH DIAGNOSE extension\n                                             6300+*---------------------------------------------------------------------*\n                                             6301+* DIAGNOSE test if APF authorized                                     *\n                                             6302+* +0     diag x'0204' code                                            *\n                                             6303+* +4     reply area address\n                                             6304+* back : r15 = returrn code                                           *\n                                             6305+*---------------------------------------------------------------------*\n 000011D4 9823 D114               00000114   6306+DIAGNOSE LM    R2,R3,ASM_PARMS     get parms                            01-$$ASMIF\n 000011D8                                    6315+DIAGNOSE_LEAVE DC 0H                                                    03-ASMMDOPR\n 000011D8                                    6316+#@LB11                 DC  0H                                           03-ASMMDOPR\n 000011D8 BFFF D8D8               000008D8   6329+                ICM R15,15,ASM_TESTAUTH                                 04-ASMMPOPI\n 000011DC A774 0082               000012E0   6330+           BRC          7,#@LB12                                        03-ASMMIFPR\n                                             6332+*        modeset mode=sup,key=zero supervisor state\n                                             6334+* MACDATE Y-3 81030                                                @D1A\n 000011E0                                    6336+         CNOP  0,4                                                      02-MODESET\n 000011E0 A715 0004               000011E8   6337+         BRAS  1,*+8                                                    02-MODESET\n 000011E4 0000003C                           6338+         DC    B'00000000000000000000000000111100'                      02-MODESET\n 000011E8 5810 1000               00000000   6339+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000011EC 0A6B                               6340+         SVC   107                                                      02-MODESET\n 000011EE D403 D8DC B090 000008DC 00001CA8   6352+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_FIX)  04-ASMMPOPI\n 000011F4 A774 002B               0000124A   6353+           BRC          7,#@LB14                                        03-ASMMIFPR\n 000011F8 BF4F D8E0               000008E0   6366+                ICM R4,15,ASM_DIAGNOSE_ADDR                             04-ASMMPOPI\n 000011FC A774 0016               00001228   6367+           BRC          7,#@LB16                                        03-ASMMIFPR\n                                             6369+*        storage obtain,length=asm_diagnose_length,bndry=page\n 00001200 5800 B094               00001CAC   6372+         L      0,=A(ASM_DIAGNOSE_LENGTH)    .STORAGE LENGTH       @P9C 02-STORAGE\n 00001204 58F0 B098               00001CB0   6373+         L      15,=AL1(B'00000000',(0*16),(0),B'00000110')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00001208 58E0 0010               00000010   6374+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 0000120C 58EE 0304               00000304   6375+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001210 58EE 00A0               000000A0   6376+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00001214 B218 E000      00000000            6377+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n1          asmif asm interfcae module                                                                           Page   54\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001218 12FF                               6389+                LTR             R15,R15                                 04-ASMMPOPI\n 0000121A A784 0004               00001222   6390+           BRC          8,#@LB18                                        03-ASMMIFPR\n 0000121E A7F4 0061               000012E0   6395+         BRC   15,#@LB10                                                02-\n 00001222                                    6402+#@LB18   DC    0H                                                       02-\n 00001222 5010 D8E0               000008E0   6404+  ST  R1,ASM_DIAGNOSE_ADDR                                              01-$$ASMIF\n 00001226 1841                               6405+  LR  R4,R1                                                             01-$$ASMIF\n 00001228                                    6411+#@LB16   DC    0H                                                       02-\n                                             6413+* PGSER R,FIX,A=(R4),EA=4095(,R4),ECB=0\n 00001228 1F00                               6416+         SLR   0,0              NO ECB --- FORCE REG 0 TO EQUAL ZERO    02-PGSER\n 0000122A 1814                               6417+         LR    1,(R4)           LOAD POINTER TO START OF VIRTUAL       X02-PGSER\n                                                 +                                  ADDRESS RANGE INTO PARAMETER REG\n 0000122C A516 7FFF               00007FFF   6418+         NILH  1,X'7FFF'        FORCE BIT0 TO ZERO                 @L5A 02-PGSER\n 00001230 41F0 4FFF               00000FFF   6419+         LA    15,4095(,R4)     LOAD END ADDRESS                        02-PGSER\n 00001234 41E0 010C               0000010C   6420+         LA    14,X'0100'+B'00001100'(0,0)                             X02-PGSER\n                                                 +                                   SET FUNCTION CODE AND OPTION FLAGS\n 00001238 0A8A                               6421+         SVC   138              INVOKE PAGE SERVICE PROCESSOR SVC       02-PGSER\n 0000123A 12FF                               6433+                LTR             R15,R15                                 04-ASMMPOPI\n 0000123C A784 0004               00001244   6434+           BRC          8,#@LB20                                        03-ASMMIFPR\n 00001240 A7F4 0050               000012E0   6439+         BRC   15,#@LB10                                                02-\n 00001244                                    6446+#@LB20   DC    0H                                                       02-\n 00001244 D603 D8DC B090 000008DC 00001CA8   6448+  OC  ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_FIX)                            01-$$ASMIF\n 0000124A                                    6454+#@LB14   DC    0H                                                       02-\n 0000124A D403 D8DC B09C 000008DC 00001CB4   6467+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_DONTSX04-ASMMPOPI\n                                                 +               WAP)\n 00001250 A774 000D               0000126A   6468+           BRC          7,#@LB22                                        03-ASMMIFPR\n                                             6470+* sysevent dontswap\n 00001254 4100 0029               00000029   6472+         LA    0,41(0,0)               SYSEVENT CODE                    02-SYSEVENT\n 00001258 0A5F                               6473+         SVC   95                      SYSTEM RESOURCES MANAGER SVC     02-SYSEVENT\n 0000125A 12FF                               6485+                LTR             R15,R15                                 04-ASMMPOPI\n 0000125C A784 0004               00001264   6486+           BRC          8,#@LB24                                        03-ASMMIFPR\n 00001260 A7F4 0040               000012E0   6491+         BRC   15,#@LB10                                                02-\n 00001264                                    6498+#@LB24   DC    0H                                                       02-\n 00001264 D603 D8DC B09C 000008DC 00001CB4   6500+  OC  ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_DONTSWAP)                       01-$$ASMIF\n 0000126A                                    6506+#@LB22   DC    0H                                                       02-\n 0000126A 1832                               6508+  LR  R3,R2                                                             01-$$ASMIF\n 0000126C B120 4000               00000000   6509+  LRA R2,0(,R4)                                                         01-$$ASMIF\n                                             6511+**********************************************************************\n                                             6512+*  Licensed Materials - Property of IBM\n                                             6513+*  This product contains \"Restricted Materials of IBM\"\n                                             6514+*  5735-FAL (C) Copyright IBM Corp. 1991.\n                                             6515+*  5655-HAL (C) Copyright IBM Corp. 1991, 1994.\n                                             6516+*  All rights reserved.\n                                             6517+*  US Government Users Restricted Rights -\n                                             6518+*  Use, duplication or disclosure restricted by GSA ADP Schedule\n                                             6519+*  Contract with IBM Corp.\n                                             6520+*  See IBM Copyright Instructions.\n                                             6521+**********************************************************************\n 00001270 83230204                           6522+         DC    0H'0',X'83',AL.4(R2,R3),Y(X'0204')                       02-DIAG\n 00001274 5800 D118               00000118   6523+  L    R0,ASM_PARMS+4                                                   01-$$ASMIF\n 00001278 A718 0FFF               00000FFF   6524+  LHI  R1,4095                                                          01-$$ASMIF\n 0000127C 1851                               6525+  LR  R5,R1                                                             01-$$ASMIF\n 0000127E 1824                               6526+  LR   R2,R4                                                            01-$$ASMIF\n 00001280 0E04                               6527+  MVCL R0,R4                                                            01-$$ASMIF\n 00001282 D403 D8DC B0A0 000008DC 00001CB8   6539+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_KEEP) 04-ASMMPOPI\n 00001288 A774 0024               000012D0   6540+           BRC          7,#@LB26                                        03-ASMMIFPR\n1          asmif asm interfcae module                                                                           Page   55\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            6542+* SYSEVENT OKSWAP\n 0000128C 4100 002A               0000002A   6544+         LA    0,42(0,0)               SYSEVENT CODE                    02-SYSEVENT\n 00001290 0A5F                               6545+         SVC   95                      SYSTEM RESOURCES MANAGER SVC     02-SYSEVENT\n 00001292 D403 D8DC B0A4 000008DC 00001CBC   6546+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_DONTSWAP)     01-$$ASMIF\n                                             6547+* PGSER R,FREE,A=(R4),EA=4095(,R4),ECB=0\n 00001298 1F00                               6550+         SLR   0,0              NO ECB --- FORCE REG 0 TO EQUAL ZERO    02-PGSER\n 0000129A 1814                               6551+         LR    1,(R4)           LOAD POINTER TO START OF VIRTUAL       X02-PGSER\n                                                 +                                  ADDRESS RANGE INTO PARAMETER REG\n 0000129C A516 7FFF               00007FFF   6552+         NILH  1,X'7FFF'        FORCE BIT0 TO ZERO                 @L5A 02-PGSER\n 000012A0 41F0 4FFF               00000FFF   6553+         LA    15,4095(,R4)     LOAD END ADDRESS                        02-PGSER\n 000012A4 41E0 0200               00000200   6554+         LA    14,X'0200'+B'00000000'(0,0)                             X02-PGSER\n                                                 +                                   SET FUNCTION CODE AND OPTION FLAGS\n 000012A8 0A8A                               6555+         SVC   138              INVOKE PAGE SERVICE PROCESSOR SVC       02-PGSER\n 000012AA D403 D8DC B0A8 000008DC 00001CC0   6556+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_FIX)          01-$$ASMIF\n                                             6557+*        storage release,length=asm_diagnose_length,addr=(r2)\n 000012B0 5800 B094               00001CAC   6560+         L      0,=A(ASM_DIAGNOSE_LENGTH)    .STORAGE LENGTH       @P9C 02-STORAGE\n 000012B4 1812                               6561+         LR     1,R2                         .ADDRESS OF STORAGE        02-STORAGE\n 000012B6 A7F8 0003               00000003   6562+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 000012BA 58E0 0010               00000010   6563+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000012BE 58EE 0304               00000304   6564+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 000012C2 58EE 00CC               000000CC   6565+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 000012C6 B218 E000      00000000            6566+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 000012CA D703 D8E0 D8E0 000008E0 000008E0   6567+  XC    ASM_DIAGNOSE_ADDR,ASM_DIAGNOSE_ADDR                             01-$$ASMIF\n 000012D0                                    6573+#@LB26   DC    0H                                                       02-\n                                             6575+* modeset mode=prob,key=nzero\n                                             6577+* MACDATE Y-3 81030                                                @D1A\n 000012D0                                    6579+         CNOP  0,4                                                      02-MODESET\n 000012D0 A715 0004               000012D8   6580+         BRAS  1,*+8                                                    02-MODESET\n 000012D4 00000024                           6581+         DC    B'00000000000000000000000000100100'                      02-MODESET\n 000012D8 5810 1000               00000000   6582+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000012DC 0A6B                               6583+         SVC   107                                                      02-MODESET\n 000012DE 1BFF                               6584+  SR   R15,R15                                                          01-$$ASMIF\n 000012E0                                    6590+#@LB12   DC    0H                                                       02-\n 000012E0                                    6597+#@LB10                DC                    0H                          03-ASMMPOPI\n 000012E0 0101                               6600+ PR ,                                                                   01-$$ASMIF\n                                             6601+***********************************************************************\n                                             6602+* VSMLIST                                                             *\n                                             6603+*  function : the routine  builds an SRB and schedules it             *\n                                             6604+*             issue a VSMLIST commandinthe traget address space       *\n                                             6605+*             XM communication                                        *\n                                             6606+* parms :                                                             *\n                                             6607+* +0 target ascb address                                              *\n                                             6608+* +4 reply area                                                       *\n                                             6609+* +8 reply area  length                                               *\n                                             6610+***********************************************************************\n 000012E2 5820 D114               00000114   6611+VSMLIST  L     R2,ASM_PARMS       gett parms                            01-$$ASMIF\n 000012E6 5020 D8E4               000008E4   6612+         ST    R2,ASM_VSMLIST_ASCBADDR save ASCB addr                   01-$$ASMIF\n 000012EA 5810 0010               00000010   6613+         L     R1,X'10'            get cvt addr                         01-$$ASMIF\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 1685 in ESA.PRJ.CBTEXP.ASM($$ASMIF) on volume: USERL1\n 000012EE 5811 0000               00000000   6614+         L     R1,CVTTCBP-CVT(R1)  get TCB list addr                    01-$$ASMIF\n 000012F2 D203 D8F0 1004 000008F0 00000004   6615+         MVC   ASM_VSMLIST_MYTCB,4(R1) save the TCB addr                01-$$ASMIF\n 000012F8 5811 000C               0000000C   6616+         L     R1,12(R1)           get my ASCB addr                     01-$$ASMIF\n 000012FC 5010 D8EC               000008EC   6617+         ST    R1,ASM_VSMLIST_MYASCB save ascb addr                     01-$$ASMIF\n 00001300 D201 D8E8 1024 000008E8 00000024   6618+         MVC   ASM_VSMLIST_MYASCBID,ASCBASID-ASCB(R1)                   01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   56\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001306                                    6627+#@LB29                 DC  0H                                           03-ASMMDOPR\n                                             6629+*        MODESET MODE=SUP,KEY=ZERO  into key0 sup state\n                                             6631+* MACDATE Y-3 81030                                                @D1A\n 00001306 0700                               6633+         CNOP  0,4                                                      02-MODESET\n 00001308 A715 0004               00001310   6634+         BRAS  1,*+8                                                    02-MODESET\n 0000130C 0000003C                           6635+         DC    B'00000000000000000000000000111100'                      02-MODESET\n 00001310 5810 1000               00000000   6636+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001314 0A6B                               6637+         SVC   107                                                      02-MODESET\n                                             6638+*        GETMAIN RU,LV=SRBSIZE+SRBWORKL,SP=245 from SQA\n 00001316                                    6641+         DS    0H                                                  @P5C 02-GETMAIN\n 00001316                                    6642+IHB0408C DS     0H                                                      02-GETMAIN\n 00001316 5800 B0AC               00001CC4   6643+         L     0,=A(SRBSIZE+SRBWORKL)                                  X02-GETMAIN\n                                                 +                                  LOAD LENGTH\n 0000131A 58F0 B0B0               00001CC8   6644+         L     15,=AL1(B'00000000',(0),(245),B'00000010')              X02-GETMAIN\n                                                 +                                                 LOAD GETMAIN PARMS\n 0000131E 1B11                               6645+         SR    1,1                     ZERO RESERVED REG 1              02-GETMAIN\n 00001320 0A78                               6646+         SVC   120                     ISSUE GETMAIN SVC                02-GETMAIN\n 00001322 5010 D8F4               000008F4   6647+         ST    R1,ASM_VSMLIST_STORAGE                                   01-$$ASMIF\n 00001326 1891                               6648+         LR    R9,R1               base on SRB area                     01-$$ASMIF\n                     R:9 00000000            6649+         USING SRBSECT,R9          assign base                          01-$$ASMIF\n 00001328 4180 902C               0000002C   6650+         LA    R8,SRBSIZE(,R9)     base on srb work area                01-$$ASMIF\n                     R:8 00000000            6651+         USING SRBWORK,R8          assign base on srb work area         01-$$ASMIF\n 0000132C D72B 9000 9000 00000000 00000000   6652+         XC    SRBSECT(SRBSIZE),SRBSECT clear area                      01-$$ASMIF\n 00001332 D203 9000 B0B4 00000000 00001CCC   6653+         MVC   SRBID,=CL4'SRB'     set id                               01-$$ASMIF\n 00001338 D203 9008 D8E4 00000008 000008E4   6654+         MVC   SRBASCB,ASM_VSMLIST_ASCBADDR  save ascb addr             01-$$ASMIF\n 0000133E D201 900E D8E8 0000000E 000008E8   6655+         MVC   SRBPASID,ASM_VSMLIST_MYASCBID set my ascb id             01-$$ASMIF\n 00001344 D203 9010 D8F0 00000010 000008F0   6656+         MVC   SRBPTCB,ASM_VSMLIST_MYTCB set TCB addr for PURGEDQ       01-$$ASMIF\n 0000134A C020 0000 0077          00001438   6657+         LARL  R2,XMSRB            get SRB addr                         01-$$ASMIF\n 00001350 0B20                               6658+         BSM   R2,0                set mode                             01-$$ASMIF\n 00001352 5020 9014               00000014   6659+         ST    R2,SRBEP            move entry                           01-$$ASMIF\n 00001356 C020 0000 0135          000015C0   6660+         LARL  R2,XMFRR            get FRR addr                         01-$$ASMIF\n 0000135C 0B20                               6661+         BSM   R2,0                set mode                             01-$$ASMIF\n 0000135E 5020 9018               00000018   6662+         ST    R2,SRBRMTR          set it resoure manager               01-$$ASMIF\n 00001362 5020 9028               00000028   6663+         ST    R2,SRBFRRA           and FRR                             01-$$ASMIF\n 00001366 5080 901C               0000001C   6664+         ST    R8,SRBPARM          same as work area                    01-$$ASMIF\n 0000136A D207 8074 D118 00000074 00000118   6665+         MVC   SRBWORK_REPLY_ADDRESS(8),ASM_PARMS+4 set addr/length     01-$$ASMIF\n                                             6666+*        ALESERV EXTRACTH,STOKEN=srbwork_stoken,                       X\n                                                 +               MF=(E,SRBWORK_LALESERV)\n                                             6668+*              MACDATE = 06/13/1996                                @D1A\n 00001370                                    6669+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 00001370 5110 805C               0000005C   6670+         LAE   1,SRBWORK_LALESERV   .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 00001374 9206 1000      00000000            6671+         MVI   0(1),X'06'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001378 9200 1001      00000001            6672+         MVI   1(1),0               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 0000137C 58E0 0010               00000010   6673+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001380 58EE 0304               00000304   6674+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 00001384 58EE 00C4               000000C4   6675+         L     14,196(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 00001388 B218 E000      00000000            6676+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 0000138C 51E0 8050               00000050   6677+         LAE   14,SRBWORK_STOKEN    .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 00001390 D207 E000 1008 00000000 00000008   6678+         MVC   0(8,14),8(1)         .STORE STOKEN FROM THE PARM LIST    02-ALESERV\n 00001396 12FF                               6690+                LTR             R15,R15                                 04-ASMMPOPI\n 00001398 A784 0004               000013A0   6691+           BRC          8,#@LB30                                        03-ASMMIFPR\n 0000139C A7F4 0038               0000140C   6696+         BRC   15,#@LB28                                                02-\n 000013A0                                    6703+#@LB30   DC    0H                                                       02-\n 000013A0 D703 8048 8048 00000048 00000048   6705+         XC    SRBWORK_ECB,SRBWORK_ECB clear srbwork_ecb                01-$$ASMIF\n 000013A6 D203 8070 D8EC 00000070 000008EC   6706+         MVC   SRBWORK_MYASCB,ASM_VSMLIST_MYASCB move ascb addr         01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   57\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            6707+*        SETLOCK TEST,TYPE=LOCAL,BRANCH=(HELD,VSMLIST_LOCK)\n                                             6712+*        MACDATE = 04/03/2008                                      @LGC\n 000013AC 9101 02FB      000002FB            6713+         TM    PSACLHS-PSA+3(0),1           IS LOCAL/CML HELD?     @L8C 02-SETLOCK\n 000013B0 A784 0007               000013BE   6714+         JZ    IHA0424B             BRANCH ON NOTHELD              @P6C 02-SETLOCK\n 000013B4 D503 02EC 04A8 000002EC 000004A8   6715+         CLC   PSALOCAL-PSA(4,0),PSAFZERO-PSA(0) IS LOCAL LOCK @ZMP0008 02-SETLOCK\n                                             6716+*                                                HELD?\n 000013BA A784 000E               000013D6   6717+         JE    VSMLIST_LOCK         BRANCH ON HELD                 @P6C 02-SETLOCK\n 000013BE                                    6718+IHA0424B DC    0H'0'                                           @G387PXR 02-SETLOCK\n                                             6719+*        SETLOCK OBTAIN,TYPE=LOCAL,REGS=USE,MODE=UNCOND\n                                             6724+*        MACDATE = 04/03/2008                                      @LGC\n 000013BE 18FB                               6725+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 000013C0 180C                               6726+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 000013C2 181D                               6727+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 000013C4 58E0 02FC               000002FC   6728+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n 000013C8 58DE 0248               00000248   6729+         L     13,576+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 000013CC 05ED                               6730+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 000013CE 18BF                               6731+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 000013D0 18FD                               6732+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 000013D2 18C0                               6733+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 000013D4 18D1                               6734+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n 000013D6                                    6735+VSMLIST_LOCK    DS 0H                                                   01-$$ASMIF\n                                             6736+*        SCHEDULE SRB=(R9),SCOPE=GLOBAL schedule the SRB\n                                             6740+*        MACDATE = 01/15/93                                        @D2C\n 000013D6                                    6741+         DS    0H                                                       02-SCHEDULE\n 000013D6 1819                               6742+         LR    1,R9                    .COPY SRB ADDRESS                02-SCHEDULE\n 000013D8 58F0 0B3C               00000B3C   6743+         L     15,X'B3C'(0,0)          .LOAD REG 15 WITH ADDRESS OF    X02-SCHEDULE\n                                                 +                                       .SCHEDULE ROUTINE\n 000013DC 050F                               6744+         BALR  0,15                    .LINK TO SCHEDULE ROUTINE   @L3C 02-SCHEDULE\n                                             6745+*        SETLOCK RELEASE,TYPE=LOCAL,REGS=USE\n                                             6750+*        MACDATE = 04/03/2008                                      @LGC\n 000013DE 18FB                               6751+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 000013E0 180C                               6752+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 000013E2 181D                               6753+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 000013E4 58E0 02FC               000002FC   6754+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n 000013E8 58DE 0254               00000254   6755+         L     13,588+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 000013EC 05ED                               6756+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 000013EE 18BF                               6757+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 000013F0 18FD                               6758+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 000013F2 18C0                               6759+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 000013F4 18D1                               6760+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n                                             6761+*        WAIT  ECB=srbwork_ecb wait for SRB completion\n                                             6763+*        MACDATE  10/20/88                                         @01C\n 000013F6 4100 0001               00000001   6765+         LA    0,1(0,0)                    COUNT OMITTED,1 USED    @L1C 02-WAIT\n 000013FA 4110 8048               00000048   6767+         LA    1,SRBWORK_ECB                     LOAD PARAMETER REG 1   03-IHBINNRA\n 000013FE 0A01                               6768+         SVC   1                           LINK TO WAIT ROUTINE    @L1C 02-WAIT\n 00001400 D203 D060 806C 00000060 0000006C   6769+         MVC   ASM_RC,SRBWORK_RETCODE                                   01-$$ASMIF\n 00001406 D203 D064 8078 00000064 00000078   6770+         MVC   ASM_REASON,SRBWORK_REPLY_ADDRESS+4                       01-$$ASMIF\n 0000140C                                    6776+#@LB28                DC                    0H                          03-ASMMPOPI\n 0000140C BF9F D8F4               000008F4   6790+                ICM R9,15,ASM_VSMLIST_STORAGE                           04-ASMMPOPI\n 00001410 A784 000B               00001426   6791+           BRC          8,#@LB32                                        03-ASMMIFPR\n                                             6793+*        FREEMAIN RU,A=(R9),LV=SRBSIZE+SRBWORKL,SP=245 free the SRB\n 00001414                                    6796+         DS    0H                                                  @P2A 02-FREEMAIN\n 00001414 5800 B0AC               00001CC4   6797+         L     0,=A(SRBSIZE+SRBWORKL)            LOAD LENGTH       @P2A 02-FREEMAIN\n 00001418 1819                               6798+         LR    1,R9                              LOAD AREA ADDRESS      02-FREEMAIN\n1          asmif asm interfcae module                                                                           Page   58\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000141A 58F0 B0B8               00001CD0   6799+         L     15,=AL1(B'00000000',(0),(245),B'00000011')              X02-FREEMAIN\n                                                 +                                                 LOAD PARAMETERS\n 0000141E 0A78                               6800+         SVC   120                               ISSUE FREEMAIN SVC     02-FREEMAIN\n 00001420 D703 D8F4 D8F4 000008F4 000008F4   6801+         XC     ASM_VSMLIST_STORAGE,ASM_VSMLIST_STORAGE                 01-$$ASMIF\n 00001426                                    6807+#@LB32   DC    0H                                                       02-\n                                             6809+*        MODESET MODE=PROB,KEY=NZERO back to user key problem state\n                                             6811+* MACDATE Y-3 81030                                                @D1A\n 00001426 0700                               6813+         CNOP  0,4                                                      02-MODESET\n 00001428 A715 0004               00001430   6814+         BRAS  1,*+8                                                    02-MODESET\n 0000142C 00000024                           6815+         DC    B'00000000000000000000000000100100'                      02-MODESET\n 00001430 5810 1000               00000000   6816+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001434 0A6B                               6817+         SVC   107                                                      02-MODESET\n 00001436 0101                               6818+         PR ,                                                           01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   59\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0\n-\n0                                            6821+* at entry the SRB routine is in supervisor state , primary ASC\n                                             6822+* the regsisters area :\n                                             6823+* r0 address of the SRB\n                                             6824+* r1 same as SRB parm\n                                             6825+* r14 return address\n                                             6826+* r15 entry address\n0                    R:C 00000000            6828+         USING ASCB,R12                                                 01-$$ASMIF\n 00001438 C0B0 0000 03F0          00001C18   6829+XMSRB    LARL  R11,DATAASMIF       base on data                         01-$$ASMIF\n 0000143E 189E                               6830+         LR    R9,R14              save the return addr                 01-$$ASMIF\n 00001440 1881                               6831+         LR    R8,R1               base on the work area                01-$$ASMIF\n                     R:8 00000000            6832+         USING SRBWORK,R8          assign on parm area                  01-$$ASMIF\n 00001442 58C0 0224               00000224   6833+         L     R12,PSAAOLD                                              01-$$ASMIF\n 00001446 41D0 8000               00000000   6834+         LA    R13,SRBWORK_SAVESYS                                      01-$$ASMIF\n 0000144A                                    6843+VSMLOOP  DC    0H                                                       03-ASMMDOPR\n 0000144A                                    6844+#@LB35                 DC  0H                                           03-ASMMDOPR\n                                             6846+*        ALESERV ADD,STOKEN=SRBWORK_STOKEN,                            X\n                                                 +               ALET=SRBWORK_ALET,CHKEAX=NO,ACCESS=PUBLIC,              X\n                                                 +               AL=PASN,                                                X\n                                                 +               MF=(E,SRBWORK_LALESERV)\n                                             6848+*              MACDATE = 06/13/1996                                @D1A\n 0000144A                                    6849+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 0000144A 5110 805C               0000005C   6850+         LAE   1,SRBWORK_LALESERV   .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 0000144E 9201 1000      00000000            6851+         MVI   0(1),X'01'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001452 9206 1001      00000001            6852+         MVI   1(1),6               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 00001456 51E0 8050               00000050   6853+         LAE   14,SRBWORK_STOKEN    .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 0000145A D207 1008 E000 00000008 00000000   6854+         MVC   8(8,1),0(14)         .STORE STOKEN INTO THE PARM LIST    02-ALESERV\n 00001460 58E0 0010               00000010   6855+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001464 58EE 0304               00000304   6856+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 00001468 58EE 00BC               000000BC   6857+         L     14,188(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 0000146C B218 E000      00000000            6858+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 00001470 51E0 8058               00000058   6859+         LAE   14,SRBWORK_ALET      .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 00001474 D203 E000 1004 00000000 00000004   6860+         MVC   0(4,14),4(1)         .STORE ALET FROM THE PARM LIST      02-ALESERV\n 0000147A 12FF                               6872+                LTR             R15,R15                                 04-ASMMPOPI\n 0000147C A784 0004               00001484   6873+           BRC          8,#@LB36                                        03-ASMMIFPR\n 00001480 A7F4 0053               00001526   6878+         BRC   15,#@LB34                                                02-\n 00001484                                    6885+#@LB36   DC    0H                                                       02-\n 00001484 D703 8080 8080 00000080 00000080   6887+         XC   SRBWORK_VSMLIST_REPLY(4),SRBWORK_VSMLIST_REPLY            01-$$ASMIF\n                                             6892+*        MACDATE = 04/03/2008                                      @LGC\n 0000148A 9101 02FB      000002FB            6893+         TM    PSACLHS-PSA+3(0),1           IS LOCAL/CML HELD?     @L8C 02-SETLOCK\n 0000148E A784 0007               0000149C   6894+         JZ    IHA0482B             BRANCH ON NOTHELD              @P6C 02-SETLOCK\n 00001492 D503 02EC 04A8 000002EC 000004A8   6895+         CLC   PSALOCAL-PSA(4,0),PSAFZERO-PSA(0) IS LOCAL LOCK @ZMP0008 02-SETLOCK\n                                             6896+*                                                HELD?\n 00001498 A784 000E               000014B4   6897+         JE    XMSRB_LOCKHELD       BRANCH ON HELD                 @P6C 02-SETLOCK\n 0000149C                                    6898+IHA0482B DC    0H'0'                                           @G387PXR 02-SETLOCK\n                                             6903+*        MACDATE = 04/03/2008                                      @LGC\n 0000149C 18FB                               6904+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 0000149E 180C                               6905+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 000014A0 181D                               6906+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 000014A2 58E0 02FC               000002FC   6907+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   60\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASCB,R12  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000014A6 58DE 0248               00000248   6908+         L     13,576+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 000014AA 05ED                               6909+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 000014AC 18BF                               6910+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 000014AE 18FD                               6911+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 000014B0 18C0                               6912+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 000014B2 18D1                               6913+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n 000014B4                                    6914+XMSRB_LOCKHELD  DS 0H                                                   01-$$ASMIF\n 000014B4 A7F8 0004               00000004   6915+         LHI  R15,4                                                     01-$$ASMIF\n 000014B8 9867 8074               00000074   6916+         LM   R6,R7,SRBWORK_REPLY_ADDRESS                               01-$$ASMIF\n 000014BC 58C0 C07C               0000007C   6917+        L   R12,ASCBRCTP                                                01-$$ASMIF\n                                             6918+        DROP R12                                                        01-$$ASMIF\n 000014C0 A7F4 002B               00001516   6927+                 BRC           15,#@LB39                                03-ASMMDOPR\n 000014C4                                    6929+#@LB40               DC 0H                                              03-ASMMDOPR\n                                             6939+*        VSMLIST SP=PVT,tcb=((r12),all),space=free,                    X\n                                                 +               LOC=31,LINKAGE=BRANCH,                                  X\n                                                 +               PVTSP=ALL,                                              X\n                                                 +               WKAREA=(SRBWORK_VSMLIST_REPLY,                          X\n                                                 +               SRBWORK_VSMLIST_REPLY_LENGTH)\n 000014C4 4110 8080               00000080   6942+         LA  1,SRBWORK_VSMLIST_REPLY                                   X02-VSMLIST\n                                                 +                                    ADDRESS OF WORK AREA\n 000014C8 58F0 B0BC               00001CD4   6943+         L   15,=A(SRBWORK_VSMLIST_REPLY_LENGTH)                        02-VSMLIST\n 000014CC 50F0 100C               0000000C   6944+         ST  15,12(,1)              LENGTH OF WORK AREA                 02-VSMLIST\n 000014D0 58F0 B0C0               00001CD8   6945+         L   15,=F'50446336'                                            02-VSMLIST\n 000014D4 50F0 1010               00000010   6946+         ST  15,16(,1)              CONTROL INFORMATION                 02-VSMLIST\n 000014D8 50C0 1014               00000014   6947+         ST  R12,20(,1)             TCB ADDRESS                         02-VSMLIST\n 000014DC 1FFF                               6948+         SLR 15,15                                                      02-VSMLIST\n 000014DE 50F0 1018               00000018   6949+         ST  15,24(,1)              SUBPOOL LIST ADDRESS                02-VSMLIST\n 000014E2 50F0 101C               0000001C   6950+         ST  15,28(,1)              RESERVED FIELD                      02-VSMLIST\n 000014E6 58F0 0010               00000010   6951+         L   15,16(,0)              OBTAIN CVT ADDRESS                  02-VSMLIST\n 000014EA 58F0 F474               00000474   6952+         L   15,1140(,15)           VSMLIST ENTRY ADDRESS               02-VSMLIST\n 000014EE 0CEF                               6953+         BASSM 14,15                BRANCH TO VSMLIST ROUTINE           02-VSMLIST\n 000014F0 A7FE 0004               00000004   6965+                CHI             R15,4                                   04-ASMMPOPI\n 000014F4 A724 000F               00001512   6966+           BRC          2,#@LB43                                        03-ASMMIFPR\n 000014F8 B219 0200      00000200            6968+        SAC 512                                                         01-$$ASMIF\n                                             6970+*        THE VALUE OF SYSSTATE IS NOW SET TO ASCENV=AR AMODE64=NO ARCHLX02-SYSSTATE\n                                                 +               VL=2 OSREL=00000000\n 000014FC 9801 8084               00000084   6971+         LM    R0,R1,SRBWORK_VSMLIST_REPLY+4                            01-$$ASMIF\n 00001500 9A00 B194               00001DAC   6972+         LAM   R0,R0,ZERO                                               01-$$ASMIF\n 00001504 9A66 8058               00000058   6973+         LAM   R6,R6,SRBWORK_ALET                                       01-$$ASMIF\n 00001508 0E60                               6974+         MVCL  R6,R0                                                    01-$$ASMIF\n                                             6976+*        THE VALUE OF SYSSTATE IS NOW SET TO ASCENV=P AMODE64=NO ARCHLVX02-SYSSTATE\n                                                 +               L=2 OSREL=00000000\n 0000150A B219 0000      00000000            6977+         SAC 0                                                          01-$$ASMIF\n 0000150E A7F4 0004               00001516   6983+         BRC   15,#@LB45                                                02-\n 00001512                                    6984+#@LB43   DC    0H                                                       02-\n 00001512 A7F4 000A               00001526   6989+         BRC   15,#@LB34                                                02-\n 00001516                                    6996+#@LB45   DC    0H                                                       02-\n 00001516                                    7003+#@LB39          DC              0H                                      03-ASMMPOPI\n 00001516 A7FE 0004               00000004   7004+                CHI             R15,4                                   03-ASMMPOPI\n 0000151A A784 FFD5               000014C4   7005+                BRC             8,#@LB40                                03-ASMMPOPI\n 0000151E 50F0 806C               0000006C   7008+         ST     R15,SRBWORK_RETCODE                                     01-$$ASMIF\n 00001522 9067 8074               00000074   7009+    STM   R6,R7,SRBWORK_REPLY_ADDRESS                                   01-$$ASMIF\n 00001526                                    7015+#@LB34                DC                    0H                          03-ASMMPOPI\n                                             7018+*        SETLOCK RELEASE,TYPE=LOCAL,REGS=USE\n                                             7023+*        MACDATE = 04/03/2008                                      @LGC\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   61\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001526 18FB                               7024+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 00001528 180C                               7025+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 0000152A 181D                               7026+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 0000152C 58E0 02FC               000002FC   7027+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n 00001530 58DE 0254               00000254   7028+         L     13,588+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 00001534 05ED                               7029+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 00001536 18BF                               7030+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 00001538 18FD                               7031+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 0000153A 18C0                               7032+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 0000153C 18D1                               7033+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n                                             7034+*        ALESERV delete,alet=srbwork_alet,                             X\n                                                 +               CHKEAX=NO,                                              X\n                                                 +               MF=(E,SRBWORK_LALESERV)\n                                             7036+*              MACDATE = 06/13/1996                                @D1A\n 0000153E                                    7037+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 0000153E 5110 805C               0000005C   7038+         LAE   1,SRBWORK_LALESERV   .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 00001542 9203 1000      00000000            7039+         MVI   0(1),X'03'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001546 9204 1001      00000001            7040+         MVI   1(1),4               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 0000154A 51E0 8058               00000058   7041+         LAE   14,SRBWORK_ALET      .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 0000154E D203 1004 E000 00000004 00000000   7042+         MVC   4(4,1),0(14)         .STORE ALET INTO THE PARM LIST      02-ALESERV\n 00001554 58E0 0010               00000010   7043+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001558 58EE 0304               00000304   7044+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 0000155C 58EE 00C0               000000C0   7045+         L     14,192(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 00001560 B218 E000      00000000            7046+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 00001564 12FF                               7058+                LTR             R15,R15                                 04-ASMMPOPI\n 00001566 A784 0005               00001570   7059+           BRC          8,#@LB46                                        03-ASMMIFPR\n 0000156A 0000                                   +\n 0000156C 00000000                           7061+          DC A(0)                                                       01-$$ASMIF\n 00001570                                    7067+#@LB46   DC    0H                                                       02-\n 00001570 4110 8048               00000048   7069+            LA    R1,SRBWORK_ECB      get srbwork_ecb addr              01-$$ASMIF\n 00001574 5820 8048               00000048   7070+            L     R2,SRBWORK_ECB      get srbwork_ecb contents          01-$$ASMIF\n 00001578 58F0 B08C               00001CA4   7071+            L     R15,=X'40000000'    get post code                     01-$$ASMIF\n 0000157C 1222                               7083+                LTR             R2,R2                                   04-ASMMPOPI\n 0000157E A744 000A               00001592   7084+           BRC          4,#@LB48                                        03-ASMMIFPR\n 00001582 A7F4 0002               00001586   7094+                 BRC           15,#@LB51                                03-ASMMDOPR\n 00001586                                    7096+#@LB52               DC 0H                                              03-ASMMDOPR\n 00001586                                    7111+#@LB51          DC              0H                                      03-ASMMPOPI\n 00001586 BA2F 8048               00000048   7112+                CS R2,R15,SRBWORK_ECB                                   03-ASMMPOPI\n 0000158A A774 FFFE               00001586   7113+                BRC             7,#@LB52                                03-ASMMPOPI\n 0000158E A7F4 0017               000015BC   7121+         BRC   15,#@LB55                                                02-\n 00001592                                    7122+#@LB48   DC    0H                                                       02-\n 00001592 18AF                               7124+         LR     R10,R15            get post code                        01-$$ASMIF\n 00001594 1B00                               7125+         SR    R0,R0               CLEAR srbwork_ecb KEY REG            01-$$ASMIF\n 00001596 BFA8 B106               00001D1E   7126+         ICM   R10,8,=X'80'        indicate XM post                     01-$$ASMIF\n 0000159A 5870 B0C4               00001CDC   7127+         L     R7,=X'80000000'     indicate XMPOST                      01-$$ASMIF\n 0000159E 58C0 B0C4               00001CDC   7128+         L     R12,=X'80000000'    indicate XM post                     01-$$ASMIF\n 000015A2 41B0 8048               00000048   7129+         LA    R11,SRBWORK_ECB     get the srbwork_ecb addr             01-$$ASMIF\n 000015A6 16B7                               7130+         OR    R11,R7                                                   01-$$ASMIF\n 000015A8 58D0 8070               00000070   7131+         L     R13,SRBWORK_MYASCB  address of the ascb                  01-$$ASMIF\n 000015AC 58F0 0010               00000010   7132+         L     R15,CVTPTR          get cvt addr                         01-$$ASMIF\n ** ASMA309W Operand CVTPTR resolved to a displacement with no base register\n ** ASMA435I Record 1835 in ESA.PRJ.CBTEXP.ASM($$ASMIF) on volume: USERL1\n 000015B0 58F0 F098               00000098   7133+         L     R15,CVT0PT01-CVT(,R15) get post addr                     01-$$ASMIF\n 000015B4 05EF                               7134+         BALR  R14,R15                                                  01-$$ASMIF\n 000015B6 C0B0 0000 0331          00001C18   7135+         LARL  R11,DATAASMIF       base on data                         01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   62\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000015BC                                    7141+#@LB55   DC    0H                                                       02-\n 000015BC 07F9                               7143+         BR    R9                  branch back to the control program   01-$$ASMIF\n                                             7144+*\n                                             7145+* SRB FRR error routine\n                                             7146+*\n 000015BE 0000                                   +\n 000015C0                                    7147+XMFRR    DC    0D'0'                                                    01-$$ASMIF\n 000015C0 07FE                               7148+         BR    R14                back to the control program           01-$$ASMIF\n                                             7149+*---------------------------------------------------------------------*\n                                             7150+* bselect   determines the number of ready file descriptors           *\n                                             7151+* int        select(int nfds, fd_set *readfds, fd_set *writefds,      *\n                                             7152+*            fd_set *exceptfds, const struct timeval *timeout);       *\n                                             7153+* back : r15 = return code        0                                   *\n                                             7154+*---------------------------------------------------------------------*\n0000015C2                                    7156+SELECT  DS    0H                 CALL TO CHECK                          01-$$ASMIF\n 000015C2 9826 D114               00000114   7157+         LM    R2,R6,ASM_PARMS     get parms                            01-$$ASMIF\n 000015C6 5020 D3E0               000003E0   7158+         ST    R2,ASM_BPX1_NUMFDS  store num of FDs                     01-$$ASMIF\n 000015CA 1802                               7159+         LR    R0,R2               number of fd's                       01-$$ASMIF\n 000015CC 8800 0003               00000003   7160+         SRL   R0,3                divide by 8                          01-$$ASMIF\n 000015D0 5000 D3D4               000003D4   7161+         ST    R0,ASM_BPX1_LIST_LENGTH_R store into list                01-$$ASMIF\n 000015D4 5000 D3D8               000003D8   7162+         ST    R0,ASM_BPX1_LIST_LENGTH_W store into list                01-$$ASMIF\n 000015D8 5000 D3DC               000003DC   7163+         ST    R0,ASM_BPX1_LIST_LENGTH_E store into list                01-$$ASMIF\n 000015DC 1233                               7164+         LTR   R3,R3               test first addr                      01-$$ASMIF\n 000015DE A774 0007               000015EC   7167+         BRC   7,*+14  (BNZ)                                            03-\n 000015E2 4130 B194               00001DAC   7168+         LA    R3,ZERO             get zero addr                        01-$$ASMIF\n 000015E6 D703 D3D4 D3D4 000003D4 000003D4   7169+         XC    ASM_BPX1_LIST_LENGTH_R,ASM_BPX1_LIST_LENGTH_R no r       01-$$ASMIF\n 000015EC 1244                               7170+         LTR   R4,R4               test first addr                      01-$$ASMIF\n 000015EE A774 0007               000015FC   7173+         BRC   7,*+14  (BNZ)                                            03-\n 000015F2 4140 B194               00001DAC   7174+         LA    R4,ZERO             get zero addr                        01-$$ASMIF\n 000015F6 D703 D3D8 D3DC 000003D8 000003DC   7175+         XC    ASM_BPX1_LIST_LENGTH_W,ASM_BPX1_LIST_LENGTH_E no w       01-$$ASMIF\n 000015FC 1255                               7176+         LTR   R5,R5               test first addr                      01-$$ASMIF\n 000015FE A774 0007               0000160C   7179+         BRC   7,*+14  (BNZ)                                            03-\n 00001602 4150 B194               00001DAC   7180+         LA    R5,ZERO             get zero addr                        01-$$ASMIF\n 00001606 D703 D3DC D3DC 000003DC 000003DC   7181+         XC    ASM_BPX1_LIST_LENGTH_E,ASM_BPX1_LIST_LENGTH_E no e       01-$$ASMIF\n 0000160C 5060 D3E4               000003E4   7182+         ST    R6,ASM_BPX1_TIMEOUT set timeout                          01-$$ASMIF\n 00001610 D203 D3E8 B0C8 000003E8 00001CE0   7183+         MVC   ASM_BPX1_OPTION,=A(SEL#BITSBACKWARD) copy option         01-$$ASMIF\n 00001616 D70B D3C8 D3C8 000003C8 000003C8   7184+         XC    ASM_BPX1_RETVAL(12),ASM_BPX1_RETVAL clear return         01-$$ASMIF\n                                             7185+*        call  bpx1sel,                                                X\n                                                 +               (ASM_BPX1_NUMFDS,                                       X\n                                                 +               ASM_BPX1_LIST_LENGTH_R,                                 X\n                                                 +               (R3),                                                   X\n                                                 +               ASM_BPX1_LIST_LENGTH_W,                                 X\n                                                 +               (R4),                                                   X\n                                                 +               ASM_BPX1_LIST_LENGTH_E,                                 X\n                                                 +               (R5),                                                   X\n                                                 +               ASM_BPX1_TIMEOUT,                                       X\n                                                 +               =A(0),                                                  X\n                                                 +               ASM_BPX1_OPTION,                                        X\n                                                 +               ASM_BPX1_RETVAL,                                        X\n                                                 +               ASM_BPX1_RETCODE,                                       X\n                                                 +               ASM_BPX1_RSNCODE),                                      X\n                                                 +               VL,MF=(E,ASM_BPX1)\n 0000161C                                    7188+         DS    0H                                                       02-CALL\n 0000161C 4110 D348               00000348   7193+         LA    1,ASM_BPX1                        LOAD PARAMETER REG 1   04-IHBINNRR\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   63\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001620 41E0 D3E0               000003E0   7194+         LA    14,ASM_BPX1_NUMFDS PICKUP PARAMETER                      03-IHBOPLTX\n 00001624 41F0 D3D4               000003D4   7195+         LA    15,ASM_BPX1_LIST_LENGTH_R                               X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001628 1803                               7196+         LR    0,(R3)                            PICK UP PARAMETER      03-IHBOPLTX\n 0000162A 90E0 1000               00000000   7197+         STM   14,0,0(1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000162E 41E0 D3D8               000003D8   7198+         LA    14,ASM_BPX1_LIST_LENGTH_W                               X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001632 18F4                               7199+         LR    15,(R4)                           PICK UP PARAMETER      03-IHBOPLTX\n 00001634 4100 D3DC               000003DC   7200+         LA    0,ASM_BPX1_LIST_LENGTH_E                                X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001638 90E0 100C               0000000C   7201+         STM   14,0,12(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000163C 18E5                               7202+         LR    14,(R5)                           PICK UP PARAMETER      03-IHBOPLTX\n 0000163E 41F0 D3E4               000003E4   7203+         LA    15,ASM_BPX1_TIMEOUT                                     X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001642 4100 B05C               00001C74   7204+         LA    0,=A(0)            PICKUP PARAMETER                      03-IHBOPLTX\n 00001646 90E0 1018               00000018   7205+         STM   14,0,24(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000164A 41E0 D3E8               000003E8   7206+         LA    14,ASM_BPX1_OPTION PICKUP PARAMETER                      03-IHBOPLTX\n 0000164E 41F0 D3C8               000003C8   7207+         LA    15,ASM_BPX1_RETVAL PICKUP PARAMETER                      03-IHBOPLTX\n 00001652 4100 D3CC               000003CC   7208+         LA    0,ASM_BPX1_RETCODE PICKUP PARAMETER                      03-IHBOPLTX\n 00001656 90E0 1024               00000024   7209+         STM   14,0,36(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000165A 41E0 D3D0               000003D0   7210+         LA    14,ASM_BPX1_RSNCODE                                     X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 0000165E 50E0 1030               00000030   7211+         ST    14,48(0,1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 00001662 9680 1030      00000030            7212+         OI    48(1),X'80'                SET LAST WORD BIT ON @G860P40 03-IHBOPLTX\n 00001666 0700                               7213+         CNOP  0,4                                                      02-CALL\n 00001668 A7F5 0004               00001670   7214+         BRAS  15,*+8                            BRANCH AROUND VCON     02-CALL\n 0000166C 00000000                           7215+         DC    V(BPX1SEL)                        ENTRY POINT ADDRESS    02-CALL\n 00001670 58FF 0000               00000000   7216+         L     15,0(15,0)                        LOAD 15 WITH ENTRY ADR 02-CALL\n 00001674 05EF                               7217+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00001676 58F0 D3CC               000003CC   7218+         L     R15,ASM_BPX1_RETCODE get reason                          01-$$ASMIF\n 0000167A 50F0 D064               00000064   7219+         ST    R15,ASM_REASON    save it                                01-$$ASMIF\n 0000167E 58F0 D3C8               000003C8   7220+         L     R15,ASM_BPX1_RETVAL  get code                            01-$$ASMIF\n 00001682 50F0 D060               00000060   7221+         ST    R15,ASM_RC        save it                                01-$$ASMIF\n 00001686 0101                               7222+         PR    ,                 return back                            01-$$ASMIF\n0                                            7224+*---------------------------------------------------------------------*\n                                             7225+* connectshmem connect a target to a share group                      *\n                                             7226+* +0     shmem token pointer                                          *\n                                             7227+* +4     area address                                                 *\n                                             7228+* back : r15 = ieantcr return code                                    *\n                                             7229+*---------------------------------------------------------------------*\n                     R:2 00000000            7230+         USING SHMEM_TOKEN,R2    base on shmem token                    01-$$ASMIF\n                     R:4 00000000            7231+         USING  VRL,R4           base on iarvrl                         01-$$ASMIF\n 00001688                                    7232+CONNECTSHMEM DS 0H                                                      01-$$ASMIF\n                                             7233+*        modeset mode=sup        supervisor state\n                                             7235+* MACDATE Y-3 81030                                                @D1A\n 00001688                                    7237+         CNOP  0,4                                                      02-MODESET\n 00001688 A715 0004               00001690   7238+         BRAS  1,*+8                                                    02-MODESET\n 0000168C 0000000C                           7239+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 00001690 5810 1000               00000000   7240+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001694 0A6B                               7241+         SVC   107                                                      02-MODESET\n                                             7242+*        $$setkey key=zero,save=asm_key key key=zero\n                                             7244+* 29/11/07 struct asm include\n 00001696                                    7245+         DS     0H                                                      02-$$SETKEY\n 00001696 B20B 0000                          7246+         IPK    ,                  + get actual key in r2               02-$$SETKEY\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   64\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11\n   ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0** ASMA254I *** MNOTE ***                   7247+     0, KEY in R2                                                       02-$$SETKEY\n 0000169A 4220 D0CD               000000CD   7248+         STC    R2,ASM_KEY         + save key                           02-$$SETKEY\n 0000169E 4110 0000               00000000   7249+         LA     R1,X'00'(0,0)     + get value                           02-$$SETKEY\n                                             7251+* MACDATE Y-3 81030                                                @D1A\n 000016A2 B20A 1000      00000000            7253+         SPKA  0(R1)               SET PSW KEY                     @D1A 03-MODESET\n 000016A6 9823 D114               00000114   7254+         LM    R2,R3,ASM_PARMS   get parms                              01-$$ASMIF\n 000016AA 4140 D230               00000230   7255+         LA    R4,ASM_IARVRL     base on iarvrl area                    01-$$ASMIF\n 000016AE D71B 4000 4000 00000000 00000000   7256+         XC    0(VRLLEN,R4),0(R4) clear iarvrl dsect                    01-$$ASMIF\n 000016B4 D203 4000 2004 00000000 00000004   7257+         MVC   VRLSVSA,SHMEM_TOKEN_ADDR copy sourece addr               01-$$ASMIF\n 000016BA 5850 2000               00000000   7258+         L     R5,SHMEM_TOKEN_ASCB get ascb                             01-$$ASMIF\n                     R:5 00000000            7259+         USING ASCB,R5           base on ascb                           01-$$ASMIF\n 000016BE 5850 5150               00000150   7260+         L     R5,ASCBASSB       get assb addr                          01-$$ASMIF\n                     R:5 00000000            7261+         USING ASSB,R5           base on assb                           01-$$ASMIF\n                                             7262+*        aleserv add,stoken=assbstkn,alet=vrlsstkn+4,chkeax=no,        X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7264+*              MACDATE = 06/13/1996                                @D1A\n 000016C2                                    7265+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000016C2 5110 D1FC               000001FC   7266+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 000016C6 9201 1000      00000000            7267+         MVI   0(1),X'01'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 000016CA 9204 1001      00000001            7268+         MVI   1(1),4               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 000016CE 51E0 5030               00000030   7269+         LAE   14,ASSBSTKN          .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 000016D2 D207 1008 E000 00000008 00000000   7270+         MVC   8(8,1),0(14)         .STORE STOKEN INTO THE PARM LIST    02-ALESERV\n 000016D8 58E0 0010               00000010   7271+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 000016DC 58EE 0304               00000304   7272+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 000016E0 58EE 00BC               000000BC   7273+         L     14,188(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 000016E4 B218 E000      00000000            7274+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 000016E8 51E0 4008               00000008   7275+         LAE   14,VRLSSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 000016EC D203 E000 1004 00000000 00000004   7276+         MVC   0(4,14),4(1)         .STORE ALET FROM THE PARM LIST      02-ALESERV\n 000016F2 5800 2008               00000008   7277+         L     R0,SHMEM_TOKEN_LGTH get length                           01-$$ASMIF\n 000016F6 5A00 B04C               00001C64   7278+         A     R0,=A(PAGE_SIZE-1)  add page size                        01-$$ASMIF\n 000016FA 5400 B050               00001C68   7279+         N     R0,=X'0FFFF000'     and round                            01-$$ASMIF\n 000016FE 8800 000C               0000000C   7280+         SRL   R0,12             in pages                               01-$$ASMIF\n 00001702 5000 400C               0000000C   7281+         ST    R0,VRLNUMPG       number of pages                        01-$$ASMIF\n 00001706 5850 0224               00000224   7282+         L     R5,PSAAOLD        get target ascb                        01-$$ASMIF\n                     R:5 00000000            7283+         USING ASCB,R5           base on ascb                           01-$$ASMIF\n 0000170A 5850 5150               00000150   7284+         L     R5,ASCBASSB       get assb addr                          01-$$ASMIF\n                     R:5 00000000            7285+         USING ASSB,R5           base on assb                           01-$$ASMIF\n                                             7286+*        aleserv add,stoken=assbstkn,alet=vrltstkn+4,chkeax=no,        X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7288+*              MACDATE = 06/13/1996                                @D1A\n 0000170E                                    7289+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 0000170E 5110 D1FC               000001FC   7290+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 00001712 9201 1000      00000000            7291+         MVI   0(1),X'01'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001716 9204 1001      00000001            7292+         MVI   1(1),4               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 0000171A 51E0 5030               00000030   7293+         LAE   14,ASSBSTKN          .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 0000171E D207 1008 E000 00000008 00000000   7294+         MVC   8(8,1),0(14)         .STORE STOKEN INTO THE PARM LIST    02-ALESERV\n 00001724 58E0 0010               00000010   7295+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001728 58EE 0304               00000304   7296+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 0000172C 58EE 00BC               000000BC   7297+         L     14,188(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 00001730 B218 E000      00000000            7298+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 00001734 51E0 4018               00000018   7299+         LAE   14,VRLTSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 00001738 D203 E000 1004 00000000 00000004   7300+         MVC   0(4,14),4(1)         .STORE ALET FROM THE PARM LIST      02-ALESERV\n 0000173E 5030 4010               00000010   7301+         ST    R3,VRLTVSA        copy taget address                     01-$$ASMIF\n 00001742 5040 D24C               0000024C   7302+         ST    R4,ASM_IARVRLA    set addr                               01-$$ASMIF\n 00001746 4140 D24C               0000024C   7303+         LA    R4,ASM_IARVRLA    set pointer to it                      01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   65\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  ASSB,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11\n   ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            7304+*        iarvserv share,ranglist=(r4),                                 X\n                                                 +               TARGET_VIEW=SHAREDWRITE,                                X\n                                                 +               MF=(E,ASM_IARVSERVL)\n                                             7306+*                  MACDATE -12/04/00-<0>\n 0000174A                                    7307+M00M0603 DS    0H                             IARVSERV-0                02-IARVSERV\n                                             7308+              PUSH  PRINT                                               02-IARVSERV\n                                             7309+                  PRINT ON                                              02-IARVSERV\n 0000174A 4110 D1F0               000001F0   7310+         LA    1,ASM_IARVSERVL    ++ LOCATE ARG PARMS                   02-IARVSERV\n 0000174E D70B 1000 1000 00000000 00000000   7311+         XC    0(12,1),0(1)       ++ INITIALIZE                         02-IARVSERV\n 00001754 9201 1001      00000001            7312+         MVI   1(1),1             ++ INPUT XSERVICE                     02-IARVSERV\n 00001758 9640 1002      00000002            7313+         OI    2(1),B'01000000'   ++ INPUT BL1                          02-IARVSERV\n 0000175C D203 1004 B0CC 00000004 00001CE4   7314+         MVC   4(4,1),=FL4'1'     ++ INPUT XNUMRANGE                    02-IARVSERV\n 00001762 D203 1008 4000 00000008 00000000   7315+         MVC   8(4,1),0(R4)       ++ INPUT XRANGLIST                    02-IARVSERV\n 00001768 58E0 0010               00000010   7316+         L     14,16(0,0)        GET CVT ADDRESS                        02-IARVSERV\n 0000176C 58EE 0304               00000304   7317+         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      02-IARVSERV\n 00001770 58EE 00D0               000000D0   7318+         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          02-IARVSERV\n 00001774 41F0 000C               0000000C   7319+         LA    15,12             EX OFFSET FOR IARVSERV ASSIGN          02-IARVSERV\n 00001778 16EF                               7320+         OR    14,15             GENERATE LX/EX COMBINATION             02-IARVSERV\n 0000177A B218 E000      00000000            7321+         PC    0(14)             PC TO IARVSERV SERVICE                 02-IARVSERV\n                                             7322+         POP   PRINT                                                    02-IARVSERV\n                                             7323+*                                            IARVSERV-0\n00000177E 90F0 D060               00000060   7325+         STM   R15,R0,ASM_RC     save return/reason code                01-$$ASMIF\n                                             7326+*        $$setkey back,save=asm_key back to user\n                                             7328+* 29/11/07 struct asm include\n 00001782                                    7329+         DS     0H                                                      02-$$SETKEY\n 00001782 1B22                               7330+         SR      R2,R2             + clear reg                          02-$$SETKEY\n 00001784 4320 D0CD               000000CD   7331+         IC      R2,ASM_KEY        + back key                           02-$$SETKEY\n                                             7333+* MACDATE Y-3 81030                                                @D1A\n 00001788 B20A 2000      00000000            7335+         SPKA  0((R2))             SET PSW KEY                     @D1A 03-MODESET\n                                             7336+*        modeset mode=prob       supervisor state\n                                             7338+* MACDATE Y-3 81030                                                @D1A\n 0000178C                                    7340+         CNOP  0,4                                                      02-MODESET\n 0000178C A715 0004               00001794   7341+         BRAS  1,*+8                                                    02-MODESET\n 00001790 00000004                           7342+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001794 5810 1000               00000000   7343+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001798 0A6B                               7344+         SVC   107                                                      02-MODESET\n 0000179A 0101                               7345+         PR                                                             01-$$ASMIF\n                                             7346+         DROP  R4,R5             drop work regs                         01-$$ASMIF\n                                             7347+*---------------------------------------------------------------------*\n                                             7348+* disconnectshmem disconnect from a shared group                      *\n                                             7349+* +0     shmem token pointer                                          *\n                                             7350+* +4     area address                                                 *\n                                             7351+* back : r15 = ieantcr return code                                    *\n                                             7352+*---------------------------------------------------------------------*\n                     R:2 00000000            7353+         USING SHMEM_TOKEN,R2    base on shmem token                    01-$$ASMIF\n                     R:4 00000000            7354+         USING  VRL,R4           base on iarvrl                         01-$$ASMIF\n 0000179C 9823 D114               00000114   7355+DISCONNECTSHMEM LM R2,R3,ASM_PARMS get parms                            01-$$ASMIF\n 000017A0 4140 D24C               0000024C   7356+         LA    R4,ASM_IARVRLA    set pointer to it                      01-$$ASMIF\n                                             7357+*        modeset mode=sup        supervisor state\n                                             7359+* MACDATE Y-3 81030                                                @D1A\n 000017A4                                    7361+         CNOP  0,4                                                      02-MODESET\n 000017A4 A715 0004               000017AC   7362+         BRAS  1,*+8                                                    02-MODESET\n 000017A8 0000000C                           7363+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 000017AC 5810 1000               00000000   7364+         L     1,0(0,1)                                          YM1995 02-MODESET\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   66\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000017B0 0A6B                               7365+         SVC   107                                                      02-MODESET\n                                             7366+*        $$setkey key=zero,save=asm_key key key=zero\n                                             7368+* 29/11/07 struct asm include\n 000017B2                                    7369+         DS     0H                                                      02-$$SETKEY\n 000017B2 B20B 0000                          7370+         IPK    ,                  + get actual key in r2               02-$$SETKEY\n ** ASMA254I *** MNOTE ***                   7371+     0, KEY in R2                                                       02-$$SETKEY\n 000017B6 4220 D0CD               000000CD   7372+         STC    R2,ASM_KEY         + save key                           02-$$SETKEY\n 000017BA 4110 0000               00000000   7373+         LA     R1,X'00'(0,0)     + get value                           02-$$SETKEY\n                                             7375+* MACDATE Y-3 81030                                                @D1A\n 000017BE B20A 1000      00000000            7377+         SPKA  0(R1)               SET PSW KEY                     @D1A 03-MODESET\n                                             7378+*        aleserv delete,alet=vrlsstkn+4,                               X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7380+*              MACDATE = 06/13/1996                                @D1A\n 000017C2                                    7381+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000017C2 5110 D1FC               000001FC   7382+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 000017C6 9203 1000      00000000            7383+         MVI   0(1),X'03'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 000017CA 9200 1001      00000001            7384+         MVI   1(1),0               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 000017CE 51E0 4008               00000008   7385+         LAE   14,VRLSSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 000017D2 D203 1004 E000 00000004 00000000   7386+         MVC   4(4,1),0(14)         .STORE ALET INTO THE PARM LIST      02-ALESERV\n 000017D8 58E0 0010               00000010   7387+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 000017DC 58EE 0304               00000304   7388+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 000017E0 58EE 00C0               000000C0   7389+         L     14,192(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 000017E4 B218 E000      00000000            7390+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n                                             7391+*        aleserv delete,alet=vrltstkn+4,                               X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7393+*              MACDATE = 06/13/1996                                @D1A\n 000017E8                                    7394+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000017E8 5110 D1FC               000001FC   7395+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 000017EC 9203 1000      00000000            7396+         MVI   0(1),X'03'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 000017F0 9200 1001      00000001            7397+         MVI   1(1),0               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 000017F4 51E0 4018               00000018   7398+         LAE   14,VRLTSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 000017F8 D203 1004 E000 00000004 00000000   7399+         MVC   4(4,1),0(14)         .STORE ALET INTO THE PARM LIST      02-ALESERV\n 000017FE 58E0 0010               00000010   7400+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001802 58EE 0304               00000304   7401+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 00001806 58EE 00C0               000000C0   7402+         L     14,192(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 0000180A B218 E000      00000000            7403+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n                                             7404+*        iarvserv unshare,ranglist=(r4),                               X\n                                                 +               RETAIN=NO,                                              X\n                                                 +               MF=(E,ASM_IARVSERVL)\n                                             7406+*                  MACDATE -12/04/00-<0>\n 0000180E                                    7407+M00M0616 DS    0H                             IARVSERV-0                02-IARVSERV\n                                             7408+              PUSH  PRINT                                               02-IARVSERV\n                                             7409+                  PRINT ON                                              02-IARVSERV\n 0000180E 4110 D1F0               000001F0   7410+         LA    1,ASM_IARVSERVL    ++ LOCATE ARG PARMS                   02-IARVSERV\n 00001812 D70B 1000 1000 00000000 00000000   7411+         XC    0(12,1),0(1)       ++ INITIALIZE                         02-IARVSERV\n 00001818 9202 1001      00000001            7412+         MVI   1(1),2             ++ INPUT XSERVICE                     02-IARVSERV\n 0000181C D203 1004 B0CC 00000004 00001CE4   7413+         MVC   4(4,1),=FL4'1'     ++ INPUT XNUMRANGE                    02-IARVSERV\n 00001822 D203 1008 4000 00000008 00000000   7414+         MVC   8(4,1),0(R4)       ++ INPUT XRANGLIST                    02-IARVSERV\n 00001828 58E0 0010               00000010   7415+         L     14,16(0,0)        GET CVT ADDRESS                        02-IARVSERV\n 0000182C 58EE 0304               00000304   7416+         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      02-IARVSERV\n 00001830 58EE 00D0               000000D0   7417+         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          02-IARVSERV\n 00001834 41F0 000C               0000000C   7418+         LA    15,12             EX OFFSET FOR IARVSERV ASSIGN          02-IARVSERV\n 00001838 16EF                               7419+         OR    14,15             GENERATE LX/EX COMBINATION             02-IARVSERV\n 0000183A B218 E000      00000000            7420+         PC    0(14)             PC TO IARVSERV SERVICE                 02-IARVSERV\n                                             7421+         POP   PRINT                                                    02-IARVSERV\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   67\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            7422+*                                            IARVSERV-0\n00000183E 90F0 D060               00000060   7424+         STM   R15,R0,ASM_RC     save return/reason code                01-$$ASMIF\n                                             7425+*        $$setkey back,save=asm_key back to user\n                                             7427+* 29/11/07 struct asm include\n 00001842                                    7428+         DS     0H                                                      02-$$SETKEY\n 00001842 1B22                               7429+         SR      R2,R2             + clear reg                          02-$$SETKEY\n 00001844 4320 D0CD               000000CD   7430+         IC      R2,ASM_KEY        + back key                           02-$$SETKEY\n                                             7432+* MACDATE Y-3 81030                                                @D1A\n 00001848 B20A 2000      00000000            7434+         SPKA  0((R2))             SET PSW KEY                     @D1A 03-MODESET\n                                             7435+*        modeset mode=prob       supervisor state\n                                             7437+* MACDATE Y-3 81030                                                @D1A\n 0000184C                                    7439+         CNOP  0,4                                                      02-MODESET\n 0000184C A715 0004               00001854   7440+         BRAS  1,*+8                                                    02-MODESET\n 00001850 00000004                           7441+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001854 5810 1000               00000000   7442+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001858 0A6B                               7443+         SVC   107                                                      02-MODESET\n 0000185A 0101                               7444+         PR                                                             01-$$ASMIF\n                                             7445+         DROP R4                                                        01-$$ASMIF\n                                             7446+*---------------------------------------------------------------------*\n                                             7447+* cleanup free asm area , delete modules                              *\n                                             7448+* back : r15 = ieantcr return code                                    *\n                                             7449+*---------------------------------------------------------------------*\n 0000185C                                    7450+CLEANUP  DS    0H                                                       01-$$ASMIF\n 0000185C D503 D068 B194 00000068 00001DAC   7451+         CLC   ASM_IEANTCR,ZERO    is there ieantcr                     01-$$ASMIF\n 00001862 A784 0009               00001874   7454+         BRC   8,CLEANUP_NOCR  (BE)                                     03-\n 00001866 A705 0006               00001872   7457+         BRAS  0,*+12  (DELETE)                                         03-\n 0000186A C9C5C1D5E3C3D940                   7458+         DC    CL8'IEANTCR'                      EP SYMBOL              02-DELETE\n 00001872 0A09                               7459+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 00001874                                    7460+CLEANUP_NOCR DS 0H                                                      01-$$ASMIF\n 00001874 D503 D06C B194 0000006C 00001DAC   7461+         CLC   ASM_IEANTRT,ZERO    is there ieantcr                     01-$$ASMIF\n 0000187A A784 0009               0000188C   7464+         BRC   8,CLEANUP_NORT  (BE)                                     03-\n 0000187E A705 0006               0000188A   7467+         BRAS  0,*+12  (DELETE)                                         03-\n 00001882 C9C5C1D5E3D9E340                   7468+         DC    CL8'IEANTRT'                      EP SYMBOL              02-DELETE\n 0000188A 0A09                               7469+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 0000188C                                    7470+CLEANUP_NORT DS 0H                                                      01-$$ASMIF\n 0000188C D503 D070 B194 00000070 00001DAC   7471+         CLC   ASM_IEANTDL,ZERO    is there ieantcr                     01-$$ASMIF\n 00001892 A784 0009               000018A4   7474+         BRC   8,CLEANUP_NODL  (BE)                                     03-\n 00001896 A705 0006               000018A2   7477+         BRAS  0,*+12  (DELETE)                                         03-\n 0000189A C9C5C1D5E3C4D340                   7478+         DC    CL8'IEANTDL'                      EP SYMBOL              02-DELETE\n 000018A2 0A09                               7479+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 000018A4                                    7480+CLEANUP_NODL DS 0H                                                      01-$$ASMIF\n 000018A4                                    7481+CLEANUP_NOTCPIP DS 0H                                                   01-$$ASMIF\n 000018A4 1B33                               7482+         SR    R3,R3              clear reg                             01-$$ASMIF\n 000018A6 BF3F D1E4               000001E4   7483+         ICM   R3,15,ASM_WORKECBS get start                             01-$$ASMIF\n 000018AA A784 002C               00001902   7486+         BRC   8,CLEANUP_NOCSA  (BZ)                                    03-\n                                             7487+*        modeset mode=sup        supervisor state\n                                             7489+* MACDATE Y-3 81030                                                @D1A\n 000018AE 0700                               7491+         CNOP  0,4                                                      02-MODESET\n 000018B0 A715 0004               000018B8   7492+         BRAS  1,*+8                                                    02-MODESET\n 000018B4 0000000C                           7493+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 000018B8 5810 1000               00000000   7494+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000018BC 0A6B                               7495+         SVC   107                                                      02-MODESET\n                                             7496+*        $$setkey key=zero,save=asm_key key key=zero and save it\n                                             7498+* 29/11/07 struct asm include\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   68\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000018BE                                    7499+         DS     0H                                                      02-$$SETKEY\n 000018BE B20B 0000                          7500+         IPK    ,                  + get actual key in r2               02-$$SETKEY\n ** ASMA254I *** MNOTE ***                   7501+     0, KEY in R2                                                       02-$$SETKEY\n 000018C2 4220 D0CD               000000CD   7502+         STC    R2,ASM_KEY         + save key                           02-$$SETKEY\n 000018C6 4110 0000               00000000   7503+         LA     R1,X'00'(0,0)     + get value                           02-$$SETKEY\n                                             7505+* MACDATE Y-3 81030                                                @D1A\n 000018CA B20A 1000      00000000            7507+         SPKA  0(R1)               SET PSW KEY                     @D1A 03-MODESET\n                                             7508+*        storage release,length=max_ecbs,addr=(r3),key=8,sp=231\n 000018CE 5800 B0D0               00001CE8   7511+         L      0,=A(MAX_ECBS)               .STORAGE LENGTH       @P9C 02-STORAGE\n 000018D2 1813                               7512+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 000018D4 58F0 B0D4               00001CEC   7513+         L      15,=AL1(B'00000000',(8*16),(231),B'00000011')          X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 000018D8 58E0 0010               00000010   7514+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000018DC 58EE 0304               00000304   7515+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 000018E0 58EE 00CC               000000CC   7516+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 000018E4 B218 E000      00000000            7517+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n                                             7518+*        $$setkey back,save=asm_key key key=zero and save it\n                                             7520+* 29/11/07 struct asm include\n 000018E8                                    7521+         DS     0H                                                      02-$$SETKEY\n 000018E8 1B22                               7522+         SR      R2,R2             + clear reg                          02-$$SETKEY\n 000018EA 4320 D0CD               000000CD   7523+         IC      R2,ASM_KEY        + back key                           02-$$SETKEY\n                                             7525+* MACDATE Y-3 81030                                                @D1A\n 000018EE B20A 2000      00000000            7527+         SPKA  0((R2))             SET PSW KEY                     @D1A 03-MODESET\n                                             7528+*        modeset mode=prob       supervisor state\n                                             7530+* MACDATE Y-3 81030                                                @D1A\n 000018F2 0700                               7532+         CNOP  0,4                                                      02-MODESET\n 000018F4 A715 0004               000018FC   7533+         BRAS  1,*+8                                                    02-MODESET\n 000018F8 00000004                           7534+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 000018FC 5810 1000               00000000   7535+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001900 0A6B                               7536+         SVC   107                                                      02-MODESET\n 00001902                                    7537+CLEANUP_NOCSA DS 0H                                                     01-$$ASMIF\n 00001902 D403 D8DC B0A0 000008DC 00001CB8   7553+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_KEEP) 04-ASMMPOPI\n 00001908 A7E4 003D               00001982   7554+                BRC             14,#@LB56                               04-ASMMPOPI\n 0000190C D503 D8D8 B194 000008D8 00001DAC   7555+                CLC             ASM_TESTAUTH,ZERO                       04-ASMMPOPI\n 00001912 A774 0038               00001982   7556+           BRC          7,#@LB56                                        03-ASMMIFPR\n                                             7558+* modeset mode=sup,key=zero\n                                             7560+* MACDATE Y-3 81030                                                @D1A\n 00001916 0700                               7562+         CNOP  0,4                                                      02-MODESET\n 00001918 A715 0004               00001920   7563+         BRAS  1,*+8                                                    02-MODESET\n 0000191C 0000003C                           7564+         DC    B'00000000000000000000000000111100'                      02-MODESET\n 00001920 5810 1000               00000000   7565+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001924 0A6B                               7566+         SVC   107                                                      02-MODESET\n                                             7567+* SYSEVENT OKSWAP\n 00001926 4100 002A               0000002A   7569+         LA    0,42(0,0)               SYSEVENT CODE                    02-SYSEVENT\n 0000192A 0A5F                               7570+         SVC   95                      SYSTEM RESOURCES MANAGER SVC     02-SYSEVENT\n 0000192C D403 D8DC B0A4 000008DC 00001CBC   7571+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_DONTSWAP)     01-$$ASMIF\n 00001932 BF4F D8E0               000008E0   7583+                ICM R4,15,ASM_DIAGNOSE_ADDR                             04-ASMMPOPI\n 00001936 A784 001E               00001972   7584+           BRC          8,#@LB58                                        03-ASMMIFPR\n                                             7586+* PGSER R,FREE,A=(R4),EA=4095(,R4),ECB=0\n 0000193A 1F00                               7589+         SLR   0,0              NO ECB --- FORCE REG 0 TO EQUAL ZERO    02-PGSER\n 0000193C 1814                               7590+         LR    1,(R4)           LOAD POINTER TO START OF VIRTUAL       X02-PGSER\n                                                 +                                  ADDRESS RANGE INTO PARAMETER REG\n 0000193E A516 7FFF               00007FFF   7591+         NILH  1,X'7FFF'        FORCE BIT0 TO ZERO                 @L5A 02-PGSER\n 00001942 41F0 4FFF               00000FFF   7592+         LA    15,4095(,R4)     LOAD END ADDRESS                        02-PGSER\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   69\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001946 41E0 0200               00000200   7593+         LA    14,X'0200'+B'00000000'(0,0)                             X02-PGSER\n                                                 +                                   SET FUNCTION CODE AND OPTION FLAGS\n 0000194A 0A8A                               7594+         SVC   138              INVOKE PAGE SERVICE PROCESSOR SVC       02-PGSER\n 0000194C D403 D8DC B0A8 000008DC 00001CC0   7595+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_FIX)          01-$$ASMIF\n                                             7596+*        storage release,length=asm_diagnose_length,addr=(r2)\n 00001952 5800 B094               00001CAC   7599+         L      0,=A(ASM_DIAGNOSE_LENGTH)    .STORAGE LENGTH       @P9C 02-STORAGE\n 00001956 1812                               7600+         LR     1,R2                         .ADDRESS OF STORAGE        02-STORAGE\n 00001958 A7F8 0003               00000003   7601+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 0000195C 58E0 0010               00000010   7602+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001960 58EE 0304               00000304   7603+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001964 58EE 00CC               000000CC   7604+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00001968 B218 E000      00000000            7605+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 0000196C D703 D8E0 D8E0 000008E0 000008E0   7606+  XC    ASM_DIAGNOSE_ADDR,ASM_DIAGNOSE_ADDR                             01-$$ASMIF\n 00001972                                    7612+#@LB58   DC    0H                                                       02-\n                                             7614+* modeset mode=prob,key=nzero\n                                             7616+* MACDATE Y-3 81030                                                @D1A\n 00001972 0700                               7618+         CNOP  0,4                                                      02-MODESET\n 00001974 A715 0004               0000197C   7619+         BRAS  1,*+8                                                    02-MODESET\n 00001978 00000024                           7620+         DC    B'00000000000000000000000000100100'                      02-MODESET\n 0000197C 5810 1000               00000000   7621+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001980 0A6B                               7622+         SVC   107                                                      02-MODESET\n 00001982                                    7628+#@LB56   DC    0H                                                       02-\n                                             7630+*        storage release,length=asm_length,addr=(r7) release\n 00001982 5800 B030               00001C48   7633+         L      0,=A(ASM_LENGTH)             .STORAGE LENGTH       @P9C 02-STORAGE\n 00001986 1817                               7634+         LR     1,R7                         .ADDRESS OF STORAGE        02-STORAGE\n 00001988 A7F8 0003               00000003   7635+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 0000198C 58E0 0010               00000010   7636+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001990 58EE 0304               00000304   7637+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001994 58EE 00CC               000000CC   7638+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00001998 B218 E000      00000000            7639+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 0000199C 1BFF                               7640+         SR     R15,R15           clear all                             01-$$ASMIF\n 0000199E 0101                               7641+         PR                                                             01-$$ASMIF\n                                             7642+*---------------------------------------------------------------------*\n                                             7643+* oper operator communication                                         *\n                                             7644+* +0     area pointer                                                 *\n                                             7645+* +4     area length                                                  *\n                                             7646+* back : r15 = return code        0 start/modify command              *\n                                             7647+*                                 4 stop command                      *\n                                             7648+*---------------------------------------------------------------------*\n                     R:4 00000000            7649+         USING COMLIST,R4        base on comlist                        01-$$ASMIF\n                     R:5 00000000            7650+         USING CIBNEXT,R5        base on cib                            01-$$ASMIF\n 000019A0                                    7651+OPER     DS    0H                                                       01-$$ASMIF\n 000019A0 D503 D26C B194 0000026C 00001DAC   7652+         CLC   ASM_COMPTR,ZERO   already init                           01-$$ASMIF\n 000019A6 A774 0024               000019EE   7655+         BRC   7,OPER_COMMAND  (BNE)                                    03-\n 000019AA 4120 D250               00000250   7656+         LA    R2,ASM_EXTRACT_L  get list form address                  01-$$ASMIF\n 000019AE 4130 D26C               0000026C   7657+         LA    R3,ASM_COMPTR     comand pointer                         01-$$ASMIF\n                                             7658+*        extract (r3),'S',mf=(e,(r2)),fields=comm extract comm\n 000019B2 1812                               7661+         LR    1,R2                              LOAD PARAMETER REG 1   03-IHBINNRA\n 000019B4 5031 0000               00000000   7662+         ST    R3,0(1,0)                         STORE LIST ADDRESS     02-EXTRACT\n 000019B8 1BEE                               7663+         SR    14,14                             INDICATE ISSUING TASK  02-EXTRACT\n 000019BA 50E1 0004               00000004   7664+         ST    14,4(1,0)                         TCB TO BE USED         02-EXTRACT\n 000019BE 9201 1008      00000008            7665+         MVI   8(1),1                            MOVE IN FIELDS BYTE    02-EXTRACT\n 000019C2 9200 1009      00000009            7666+         MVI   9(1),0        .         MOVE IN FIELD BYTE 2       20021 02-EXTRACT\n 000019C6 0A28                               7667+         SVC   40                                ISSUE EXTRACT SVC      02-EXTRACT\n 000019C8 1B44                               7668+         SR    R4,R4             clear r4                               01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   70\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  COMLIST,R4  CIBNEXT,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9\n   DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'\n   CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000019CA BF4F D26C               0000026C   7669+         ICM   R4,15,ASM_COMPTR get com ptr                             01-$$ASMIF\n 000019CE A784 0039               00001A40   7672+         BRC   8,OPER_RET_08  (BZ)                                      03-\n 000019D2 5850 4004               00000004   7673+         L     R5,COMCIBPT       get cib pointer                        01-$$ASMIF\n 000019D6 C0E5 0000 003A          00001A4A   7674+         BRASL R14,OPER_CIB      process data                           01-$$ASMIF\n                                             7675+*        qedit origin=comcibpt,cibctr=9  prepare for comand\n 000019DC 4110 0009               00000009   7677+         LA    1,9                   OBTAIN POSITIVE PARAMETER @YA00842 02-QEDIT\n 000019E0 1111                               7678+         LNR   1,1       -          NEGATE OBTAINED PARAMETER           02-QEDIT\n 000019E2 4100 4004               00000004   7679+         LA    0,COMCIBPT            OBTAIN POSITIVE PARAMETER @YA00842 02-QEDIT\n 000019E6 1100                               7680+         LNR   0,0       -          NEGATE OBTAINED PARAMETER           02-QEDIT\n 000019E8 0A22                               7681+         SVC   34 -                 INVOKE COMMAND SCHEDULER            02-QEDIT\n 000019EA A7F4 0024               00001A32   7684+         BRC   15,OPER_RET_00  (B)                                      03-\n 000019EE                                    7685+OPER_COMMAND DS 0H                                                      01-$$ASMIF\n 000019EE 1B44                               7686+         SR    R4,R4             clear r4                               01-$$ASMIF\n 000019F0 BF4F D26C               0000026C   7687+         ICM   R4,15,ASM_COMPTR get com ptr                             01-$$ASMIF\n 000019F4 1B55                               7688+         SR    R5,R5             clear it                               01-$$ASMIF\n 000019F6 BF5F 4004               00000004   7689+         ICM   R5,15,COMCIBPT       get cib pointer                     01-$$ASMIF\n 000019FA A784 0006               00001A06   7692+         BRC   8,OPER_COMMAND_WAIT  (BZ)                                03-\n 000019FE 9540 5004      00000004            7693+         CLI   CIBVERB,CIBSTOP   stop commad                            01-$$ASMIF\n 00001A02 A784 001B               00001A38   7696+         BRC   8,OPER_RET_04  (BE)                                      03-\n 00001A06                                    7697+OPER_COMMAND_WAIT DS 0H                                                 01-$$ASMIF\n 00001A06 5820 4000               00000000   7698+         L     R2,COMECBPT       get ecb pointer                        01-$$ASMIF\n 00001A0A 9140 2000      00000000            7699+         TM    0(R2),X'40'       if posted                              01-$$ASMIF\n 00001A0E A714 0007               00001A1C   7702+         BRC   1,OPER_COMMAND_PROCESS  (BO)                             03-\n                                             7703+*        wait ecb=(r2)           issue wait\n                                             7705+*        MACDATE  10/20/88                                         @01C\n 00001A12 4100 0001               00000001   7707+         LA    0,1(0,0)                    COUNT OMITTED,1 USED    @L1C 02-WAIT\n 00001A16 4110 2000               00000000   7708+         LA    1,0(0,R2)                   CLEAR HIGH BIT/BYTE     @L1C 02-WAIT\n 00001A1A 0A01                               7709+         SVC   1                           LINK TO WAIT ROUTINE    @L1C 02-WAIT\n 00001A1C                                    7710+OPER_COMMAND_PROCESS DS  0H                                             01-$$ASMIF\n 00001A1C 5850 4004               00000004   7711+         L     R5,COMCIBPT       get cib pointer                        01-$$ASMIF\n 00001A20 9540 5004      00000004            7712+         CLI   CIBVERB,CIBSTOP   stop commad                            01-$$ASMIF\n 00001A24 A784 000A               00001A38   7715+         BRC   8,OPER_RET_04  (BE)                                      03-\n 00001A28 C0E5 0000 0011          00001A4A   7716+         BRASL R14,OPER_CIB      process it                             01-$$ASMIF\n 00001A2E A7F4 000B               00001A44   7719+         BRC   15,OPER_RET_XX  (B)                                      03-\n 00001A32 1BFF                               7720+OPER_RET_00 SR R15,R15           clear reg                              01-$$ASMIF\n 00001A34 A7F4 0008               00001A44   7723+         BRC   15,OPER_RET_XX  (B)                                      03-\n 00001A38 41F0 0004               00000004   7724+OPER_RET_04 LA R15,4             get code                               01-$$ASMIF\n 00001A3C A7F4 0004               00001A44   7727+         BRC   15,OPER_RET_XX  (B)                                      03-\n 00001A40 41F0 0008               00000008   7728+OPER_RET_08 LA R15,8             get code                               01-$$ASMIF\n 00001A44                                    7729+OPER_RET_XX DS 0H                branch back                            01-$$ASMIF\n 00001A44 90F0 D060               00000060   7730+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n 00001A48 0101                               7731+         PR    ,                 back                                   01-$$ASMIF\n 00001A4A B240 00E0                          7732+OPER_CIB BAKR  R14,0             all in stack                           01-$$ASMIF\n 00001A4E 1BFF                               7733+         SR    R15,R15           clear ret                              01-$$ASMIF\n 00001A50 1255                               7734+OPER_CIB_DO LTR   R5,R5             test cib                            01-$$ASMIF\n 00001A52 A784 0025               00001A9C   7737+         BRC   8,OPER_CIB_RET  (BZ)                                     03-\n 00001A56 41F0 0004               00000004   7738+         LA    R15,4             get code                               01-$$ASMIF\n 00001A5A 9540 5004      00000004            7739+         CLI   CIBVERB,CIBSTOP   modify commad                          01-$$ASMIF\n 00001A5E A784 001F               00001A9C   7742+         BRC   8,OPER_CIB_RET  (BE)                                     03-\n 00001A62 9544 5004      00000004            7743+         CLI   CIBVERB,CIBMODFY  modify commad                          01-$$ASMIF\n 00001A66 A774 0012               00001A8A   7746+         BRC   7,OPER_CIB_FREE  (BNE)                                   03-\n 00001A6A 9823 D114               00000114   7747+         LM    R2,R3,ASM_PARMS   get data length                        01-$$ASMIF\n 00001A6E 1222                               7748+         LTR   R2,R2             test addr                              01-$$ASMIF\n 00001A70 A784 000D               00001A8A   7751+         BRC   8,OPER_CIB_FREE  (BZ)                                    03-\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   71\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  COMLIST,R4  CIBNEXT,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9\n   DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'\n   CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001A74 41E0 5010               00000010   7752+         LA    R14,CIBDATA       get data                               01-$$ASMIF\n 00001A78 48F0 500E               0000000E   7753+         LH    R15,CIBDATLN      get length                             01-$$ASMIF\n 00001A7C 193F                               7754+         CR    R3,R15            check length                           01-$$ASMIF\n 00001A7E A744 0003               00001A84   7757+         BRC   4,*+6  (BL)                                              03-\n 00001A82 183F                               7758+         LR    R3,R15            set data length                        01-$$ASMIF\n 00001A84 0E2E                               7759+         MVCL  R2,R14            copy text                              01-$$ASMIF\n 00001A86 9200 2000      00000000            7760+         MVI   0(R2),X'00'       keep hapy c++                          01-$$ASMIF\n 00001A8A                                    7761+OPER_CIB_FREE DS 0H                                                     01-$$ASMIF\n                                             7762+*        qedit origin=comcibpt,block=(r5) prepare for comand\n 00001A8A 1115                               7764+         LNR   1,R5        -         OBTAIN NEGATIVE PARAMETER          02-QEDIT\n 00001A8C 4100 4004               00000004   7765+         LA    0,COMCIBPT            OBTAIN POSITIVE PARAMETER @YA00842 02-QEDIT\n 00001A90 0A22                               7766+         SVC   34 -                 INVOKE COMMAND SCHEDULER            02-QEDIT\n 00001A92 BF5F 5000               00000000   7767+         ICM   R5,15,0(R5)     next                                     01-$$ASMIF\n 00001A96 A774 FFDD               00001A50   7770+         BRC   7,OPER_CIB_DO  (BNZ)                                     03-\n 00001A9A 1BFF                               7771+         SR    R15,R15           now ok                                 01-$$ASMIF\n 00001A9C 0101                               7772+OPER_CIB_RET PR ,                back                                   01-$$ASMIF\n                                             7773+         DROP  R4                drop it                                01-$$ASMIF\n                                             7774+         DROP  R5                drop cib                               01-$$ASMIF\n                                             7775+*---------------------------------------------------------------------*\n                                             7776+* wto  operator communication                                         *\n                                             7777+* +0     area pointer                                                 *\n                                             7778+* +4     area length                                                  *\n                                             7779+* +8     descriptor code                                              *\n                                             7780+* back : r15 = return code        0                                   *\n                                             7781+*---------------------------------------------------------------------*\n 00001A9E                                    7782+WTO      DS    0H                                                       01-$$ASMIF\n 00001A9E D2CD D278 B1A0 00000278 00001DB8   7783+         MVC   ASM_WTOL(MDL_WTOL_L),MDL_WTOL copy wtol                  01-$$ASMIF\n 00001AA4 9824 D114               00000114   7784+         LM    R2,R4,ASM_PARMS     get parms                            01-$$ASMIF\n 00001AA8 1BFF                               7785+         SR    R15,R15             get code                             01-$$ASMIF\n 00001AAA 58E0 B0D8               00001CF0   7786+         L     R14,=X'00010000'    code                                 01-$$ASMIF\n 00001AAE 8CE0 4000               00000000   7787+         SRDL  R14,0(R4)           shit it                              01-$$ASMIF\n 00001AB2 40E0 D302               00000302   7788+         STH   R14,ASM_WTOL+138  higher part                            01-$$ASMIF\n 00001AB6 50F0 D304               00000304   7789+         ST    R15,ASM_WTOL+140  lower part                             01-$$ASMIF\n 00001ABA 4140 D27C               0000027C   7790+         LA    R4,ASM_WTOL+4       to addr                              01-$$ASMIF\n 00001ABE 4150 006E               0000006E   7791+         LA    R5,ASM_WTOL_TEXT_LENGTH max text length                  01-$$ASMIF\n 00001AC2 BF38 B114               00001D2C   7792+         ICM   R3,8,BLANKS         get pad                              01-$$ASMIF\n 00001AC6 0E42                               7793+         MVCL  R4,R2               copy text                            01-$$ASMIF\n                                             7794+*        wto   mf=(e,asm_wtol)     issue wto\n 00001AC8 4110 D278               00000278   7799+         LA    1,ASM_WTOL                        LOAD PARAMETER REG 1   03-IHBINNRR\n 00001ACC 0A23                               7800+         SVC   35                       ISSUE SVC 35               @L6A 02-WTO\n 00001ACE 1BFF                               7801+         SR    R15,R15             test return                          01-$$ASMIF\n 00001AD0 0101                               7802+         PR    ,                   branch back                          01-$$ASMIF\n                                             7803+*---------------------------------------------------------------------*\n                                             7804+* malloc allocate the storage under the jstcb                         *\n                                             7805+* +0     area length                                                  *\n                                             7806+* +4     rely addr                                                    *\n                                             7807+* back : r15 = return code        0                                   *\n                                             7808+*---------------------------------------------------------------------*\n 00001AD2                                    7809+MALLOC   DS    0H                                                       01-$$ASMIF\n                                             7810+*        modeset mode=sup        supervisor state\n                                             7812+* MACDATE Y-3 81030                                                @D1A\n 00001AD2 0700                               7814+         CNOP  0,4                                                      02-MODESET\n 00001AD4 A715 0004               00001ADC   7815+         BRAS  1,*+8                                                    02-MODESET\n 00001AD8 0000000C                           7816+         DC    B'00000000000000000000000000001100'                      02-MODESET\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   72\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001ADC 5810 1000               00000000   7817+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001AE0 0A6B                               7818+         SVC   107                                                      02-MODESET\n                     R:2 00000020            7819+         USING   TCB,R2          base on tcb                            01-$$ASMIF\n 00001AE2 5820 021C               0000021C   7820+         L     R2,PSATOLD        get tcb                                01-$$ASMIF\n 00001AE6 5820 207C               0000009C   7821+         L     R2,TCBJSTCB       get jstcb addr                         01-$$ASMIF\n 00001AEA 9834 D114               00000114   7822+         LM    R3,R4,ASM_PARMS   get size reply                         01-$$ASMIF\n 00001AEE 4130 3008               00000008   7823+         LA    R3,8(,R3)         add head                               01-$$ASMIF\n                                             7824+*        storage obtain,tcbaddr=(r2),length=(r3)\n 00001AF2 1803                               7827+         LR     0,R3                         .STORAGE LENGTH            02-STORAGE\n 00001AF4 B24E 0002                          7828+         SAR    0,R2                         .TCB ADDRESS         @D4A  02-STORAGE\n 00001AF8 58F0 B0DC               00001CF4   7829+         L      15,=AL1(B'00000100',(0*16),(0),B'00000010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00001AFC 58E0 0010               00000010   7830+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001B00 58EE 0304               00000304   7831+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001B04 58EE 00A0               000000A0   7832+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00001B08 B218 E000      00000000            7833+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00001B0C 5031 0000               00000000   7834+         ST    R3,0(R1)          save length                            01-$$ASMIF\n 00001B10 D203 1004 B0E0 00000004 00001CF8   7835+         MVC   4(4,R1),=C'stor'  add id                                 01-$$ASMIF\n 00001B16 4110 1008               00000008   7836+         LA    R1,8(,R1)         proper addr                            01-$$ASMIF\n 00001B1A 5010 4000               00000000   7837+         ST    R1,0(,R4)         set back                               01-$$ASMIF\n 00001B1E 185F                               7838+         LR    R5,R15            save rc                                01-$$ASMIF\n                                             7839+*        modeset mode=prob       supervisor state\n                                             7841+* MACDATE Y-3 81030                                                @D1A\n 00001B20                                    7843+         CNOP  0,4                                                      02-MODESET\n 00001B20 A715 0004               00001B28   7844+         BRAS  1,*+8                                                    02-MODESET\n 00001B24 00000004                           7845+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001B28 5810 1000               00000000   7846+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001B2C 0A6B                               7847+         SVC   107                                                      02-MODESET\n 00001B2E 18F5                               7848+         LR    R15,R5            save rc                                01-$$ASMIF\n 00001B30 50F0 D060               00000060   7849+         ST    R15,ASM_RC        set result                             01-$$ASMIF\n 00001B34 0101                               7850+         PR    ,                 return back                            01-$$ASMIF\n                                             7851+*---------------------------------------------------------------------*\n                                             7852+* free   free allocated storage under the jstcb                       *\n                                             7853+* +0     area address                                                 *\n                                             7854+* back : r15 = return code        0                                   *\n                                             7855+*---------------------------------------------------------------------*\n 00001B36                                    7856+FREESTOR DS    0H                                                       01-$$ASMIF\n                                             7857+*        modeset mode=sup        supervisor state\n                                             7859+* MACDATE Y-3 81030                                                @D1A\n 00001B36 0700                               7861+         CNOP  0,4                                                      02-MODESET\n 00001B38 A715 0004               00001B40   7862+         BRAS  1,*+8                                                    02-MODESET\n 00001B3C 0000000C                           7863+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 00001B40 5810 1000               00000000   7864+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001B44 0A6B                               7865+         SVC   107                                                      02-MODESET\n                     R:2 00000020            7866+         USING   TCB,R2          base on tcb                            01-$$ASMIF\n 00001B46 5820 021C               0000021C   7867+         L     R2,PSATOLD        get tcb                                01-$$ASMIF\n 00001B4A 5820 207C               0000009C   7868+         L     R2,TCBJSTCB       get jstcb addr                         01-$$ASMIF\n 00001B4E 5830 D114               00000114   7869+         L     R3,ASM_PARMS      get addr                               01-$$ASMIF\n 00001B52 1BFF                               7870+         SR    R15,R15           clear ret                              01-$$ASMIF\n 00001B54 1233                               7871+         LTR   R3,R3             test it                                01-$$ASMIF\n 00001B56 A7D4 0019               00001B88   7874+         BRC   13,FREESTOR_OUT  (BNP)                                   03-\n 00001B5A 4B30 B104               00001D1C   7875+         SH    R3,=Y(8)          proper addr                            01-$$ASMIF\n 00001B5E 5840 3000               00000000   7876+         L     R4,0(,R3)         get length                             01-$$ASMIF\n 00001B62 D503 3004 B0E0 00000004 00001CF8   7877+         CLC   4(4,R3),=C'stor'  check it                               01-$$ASMIF\n 00001B68 A774 0010               00001B88   7880+         BRC   7,FREESTOR_OUT  (BNE)                                    03-\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   73\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            7881+*        storage release,tcbaddr=(r2),addr=(r3),length=(r4)\n 00001B6C 1804                               7884+         LR     0,R4                         .STORAGE LENGTH            02-STORAGE\n 00001B6E B24E 0002                          7885+         SAR    0,R2                         .TCB ADDRESS         @D4A  02-STORAGE\n 00001B72 1813                               7886+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 00001B74 58F0 B0E4               00001CFC   7887+         L      15,=AL1(B'00000100',(0*16),(0),B'00000011')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00001B78 58E0 0010               00000010   7888+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001B7C 58EE 0304               00000304   7889+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001B80 58EE 00CC               000000CC   7890+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00001B84 B218 E000      00000000            7891+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00001B88 185F                               7892+FREESTOR_OUT LR R5,R15           save rc                                01-$$ASMIF\n                                             7893+*        modeset mode=prob       supervisor state\n                                             7895+* MACDATE Y-3 81030                                                @D1A\n 00001B8A 0700                               7897+         CNOP  0,4                                                      02-MODESET\n 00001B8C A715 0004               00001B94   7898+         BRAS  1,*+8                                                    02-MODESET\n 00001B90 00000004                           7899+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001B94 5810 1000               00000000   7900+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001B98 0A6B                               7901+         SVC   107                                                      02-MODESET\n 00001B9A 18F5                               7902+         LR    R15,R5            save rc                                01-$$ASMIF\n 00001B9C 50F0 D060               00000060   7903+         ST    R15,ASM_RC        set result                             01-$$ASMIF\n 00001BA0 0101                               7904+FREESTOR_RET PR ,                return back                            01-$$ASMIF\n 00001BA2 0000                                   +\n 00001BA4 00000000                           7905+FREESTOR_ABEND DC A(0)           abend here                             01-$$ASMIF\n                                             7906+*---------------------------------------------------------------------*\n                                             7907+* millsec  convert microsec to millsec and store                      *\n                                             7908+*---------------------------------------------------------------------*\n 00001BA8 B240 00E0                          7909+MILLSEC  BAKR   R14,0            save in stack                          01-$$ASMIF\n 00001BAC 1B22                               7910+         SR    R2,R2             clear r0                               01-$$ASMIF\n 00001BAE 1831                               7911+         LR    R3,R1             get it                                 01-$$ASMIF\n 00001BB0 5C20 B0E8               00001D00   7912+         M     R2,=A(1000)       in micro sec                           01-$$ASMIF\n 00001BB4 4130 3001               00000001   7913+         LA    R3,1(,R3)         add one ( no zero time )               01-$$ASMIF\n 00001BB8 8D20 000C               0000000C   7914+         SLDL  R2,12             into mic form                          01-$$ASMIF\n 00001BBC 9023 D228               00000228   7915+         STM   R2,R3,ASM_SLEEP   save it                                01-$$ASMIF\n 00001BC0 0101                               7916+         PR    ,                 return back                            01-$$ASMIF\n                                             7917+*---------------------------------------------------------------------*\n                                             7918+* copystr  - copy string routine                                      *\n                                             7919+*---------------------------------------------------------------------*\n 00001BC2 B240 00E0                          7920+COPYSTR  BAKR  R14,0               all in satck                         01-$$ASMIF\n 00001BC6 D27F D154 B114 00000154 00001D2C   7921+         MVC   ASM_WORK,BLANKS     blank out                            01-$$ASMIF\n 00001BCC 4120 D154               00000154   7922+         LA    R2,ASM_WORK         output addr                          01-$$ASMIF\n 00001BD0 4130 0040               00000040   7923+         LA    R3,64               max length                           01-$$ASMIF\n 00001BD4 9500 1000      00000000            7924+COPYSTR_LOOP CLI 0(R1),0           end of string                        01-$$ASMIF\n 00001BD8 A784 000B               00001BEE   7927+         BRC   8,COPYSTR_00  (BE)                                       03-\n 00001BDC D200 2000 1000 00000000 00000000   7928+         MVC   0(1,R2),0(R1)       copy a byte                          01-$$ASMIF\n 00001BE2 4110 1001               00000001   7929+         LA    R1,1(,R1)           incr from                            01-$$ASMIF\n 00001BE6 4120 2001               00000001   7930+         LA    R2,1(,R2)           incr to                              01-$$ASMIF\n 00001BEA A736 FFF5               00001BD4   7932+         BRCT  R3,COPYSTR_LOOP  ($$ASMIF)                               02-\n 00001BEE 0101                               7933+COPYSTR_00 PR ,                    back                                 01-$$ASMIF\n                                             7934+*---------------------------------------------------------------------*\n                                             7935+* strlen  - he length of the null term string                         *\n                                             7936+*---------------------------------------------------------------------*\n 00001BF0 B240 00E0                          7937+STRLEN   BAKR  R14,0              all in satck                          01-$$ASMIF\n 00001BF4 4120 0100               00000100   7938+         LA    R2,256             max length                            01-$$ASMIF\n 00001BF8 9500 1000      00000000            7939+STRLEN_LOOP CLI 0(R1),0           string term                           01-$$ASMIF\n 00001BFC A784 0006               00001C08   7942+         BRC   8,STRLEN_BREAK  (BE)                                     03-\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   74\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001C00 4110 1001               00000001   7943+         LA    R1,1(,R1)          next char                             01-$$ASMIF\n 00001C04 A726 FFFA               00001BF8   7945+         BRCT  R2,STRLEN_LOOP  ($$ASMIF)                                02-\n 00001C08 41F0 0100               00000100   7946+STRLEN_BREAK LA R15,256           here also                             01-$$ASMIF\n 00001C0C B249 0011                          7947+         EREG  R1,R1             back from stack                        01-$$ASMIF\n 00001C10 1BF2                               7948+         SR    R15,R2            get length                             01-$$ASMIF\n 00001C12 0101                               7949+         PR    .                 back to caller                         01-$$ASMIF\n1         data areas                                                                                            Page   75\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            7951+*---------------------------------------------------------------------*\n                                             7952+* DATA area                                                           *\n                                             7953+*---------------------------------------------------------------------*\n                                             7954+*        $$DBASE\n 00001C14 00000000                               +\n 00001C18                                    7956+DATAASMIF      DC  0D'0'                                                02-$$DBASE\n 00001C18 001DE2D9C37AC1E2                   7957+         DC    AL2(START0751-*),C'SRC:ASMIF '                           02-$$DBASE\n 00001C24 40F0F161F0F761F1                   7958+         DC    C' 01/07/13 '                                            02-$$DBASE\n 00001C2E E5F7D9F0D4F0                       7959+         DC    C'V7R0M0'                                                02-$$DBASE\n 00001C34 00                                 7960+         DC    X'00'                                                    02-$$DBASE\n                         00001C35            7961+START0751    EQU *                                                      02-$$DBASE\n 00001C35 000000                                 +\n 00001C38                                    7962+         DC    0D'0'                                                    02-$$DBASE\n 00001C38                00001C38 00001FD4   7963+$$BASE         LOCTR                                                    02-$$DBASE\n 00001C38                                    7964+               LTORG                                                    02-$$DBASE\n 00001C38 4040404040404040                   7965                =CL8' '\n 00001C40 0000000200000000                   7966                =A(IEANT_HOME_LEVEL,IEANT_NOPERSIST)\n 00001C48 00000978                           7967                =A(ASM_LENGTH)\n 00001C4C 08000002                           7968                =AL1(B'00001000',(0*16),(0),B'00000010')\n 00001C50 FFFFFFFF                           7969                =F'-1'\n 00001C54 00000184                           7970                =A(BR0055)\n 00001C58 00000080                           7971                =A(128)\n 00001C5C 00000004                           7972                =A(IEANT_SYSTEM_LEVEL)\n 00001C60 00000002                           7973                =A(IEANT_HOME_LEVEL)\n 00001C64 00000FFF                           7974                =A(PAGE_SIZE-1)\n 00001C68 0FFFF000                           7975                =X'0FFFF000'\n 00001C6C 00000076                           7976                =AL1(B'00000000',(0*16),(0),B'01110110')\n 00001C70 000000FF                           7977                =X'000000FF'\n 00001C74 00000000                           7978                =A(0)\n 00001C78 E3C4D4D7                           7979                =CL4'TDMP'\n 00001C7C 00000000                           7980                =AL4(0)\n 00001C80 00000028                           7981                =A(L'ASM_ANSAREA)\n 00001C84 00000002                           7982                =AL1(B'00000000',(0*16),(0),B'00000010')\n 00001C88 00000008                           7983                =A(8)\n 00001C8C 18000000                           7984                =BL4'00011000000000000000000000000000'\n 00001C90 00000110                           7985                =A(VTOC_MODEL_DCB_LENGTH+184)\n 00001C94 00000012                           7986                =AL1(B'00000000',(0*16),(0),B'00010010')\n 00001C98 C6C3D340                           7987                =CL4'FCL'\n 00001C9C 7FFFFFFF                           7988                =X'7FFFFFFF'\n 00001CA0 3FFFFFFF                           7989                =X'3FFFFFFF'\n 00001CA4 40000000                           7990                =X'40000000'\n 00001CA8 00000001                           7991                =A(ASM_DIAGNOSE_FIX)\n 00001CAC 00000FFF                           7992                =A(ASM_DIAGNOSE_LENGTH)\n 00001CB0 00000006                           7993                =AL1(B'00000000',(0*16),(0),B'00000110')\n 00001CB4 00000002                           7994                =A(ASM_DIAGNOSE_DONTSWAP)\n 00001CB8 00000004                           7995                =A(ASM_DIAGNOSE_KEEP)\n 00001CBC 00000005                           7996                =A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_DONTSWAP)\n 00001CC0 00000006                           7997                =A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_FIX)\n 00001CC4 000020AC                           7998                =A(SRBSIZE+SRBWORKL)\n 00001CC8 0000F502                           7999                =AL1(B'00000000',(0),(245),B'00000010')\n 00001CCC E2D9C240                           8000                =CL4'SRB'\n 00001CD0 0000F503                           8001                =AL1(B'00000000',(0),(245),B'00000011')\n 00001CD4 00002000                           8002                =A(SRBWORK_VSMLIST_REPLY_LENGTH)\n 00001CD8 0301C000                           8003                =F'50446336'\n 00001CDC 80000000                           8004                =X'80000000'\n1         data areas                                                                                            Page   76\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001CE0 00000000                           8005                =A(SEL#BITSBACKWARD)\n 00001CE4 00000001                           8006                =FL4'1'\n 00001CE8 00000A00                           8007                =A(MAX_ECBS)\n 00001CEC 0080E703                           8008                =AL1(B'00000000',(8*16),(231),B'00000011')\n 00001CF0 00010000                           8009                =X'00010000'\n 00001CF4 04000002                           8010                =AL1(B'00000100',(0*16),(0),B'00000010')\n 00001CF8 A2A39699                           8011                =C'stor'\n 00001CFC 04000003                           8012                =AL1(B'00000100',(0*16),(0),B'00000011')\n 00001D00 000003E8                           8013                =A(1000)\n 00001D04 007C                               8014                =AL2(124)\n 00001D06 4828                               8015                =BL2'0100100000101000'\n 00001D08 4818                               8016                =BL2'0100100000011000'\n 00001D0A 4428                               8017                =BL2'0100010000101000'\n 00001D0C 4418                               8018                =BL2'0100010000011000'\n 00001D0E 4228                               8019                =BL2'0100001000101000'\n 00001D10 4218                               8020                =BL2'0100001000011000'\n 00001D12 4006                               8021                =BL2'0100000000000110'\n 00001D14 C006                               8022                =BL2'1100000000000110'\n 00001D16 4000                               8023                =BL2'0100000000000000'\n 00001D18 0001                               8024                =H'1'\n 00001D1A 0004                               8025                =Y(4)\n 00001D1C 0008                               8026                =Y(8)\n 00001D1E 80                                 8027                =X'80'\n                         00002C17            8028+DATAASMIFEND   EQU DATAASMIF+4095                                       02-$$DBASE\n 00001D20                                    8029+         LTORG                                                          01-$$ASMIF\n                                             8030+*dl_enql     enq (0,0,e,0,step),mf=l   list enq\n                                             8033+*         MACRO-DATE = 06/24/03                                    @05C\n 00001D20                                    8034+         DS    0F                      ESTABLISH A FULLWORD BOUNDARY    02-ENQ\n                         00001D20            8035+MDL_ENQL EQU   *                                                 X02113 02-ENQ\n 00001D20 C0                                 8036+         DC    AL1(192)                PELLAST flag byte.        X02113 02-ENQ\n 00001D21 00                                 8037+         DC    AL1(0)                  PELMILEN - RNAME length.         02-ENQ\n 00001D22 00                                 8038+         DC    BL1'00000000'                                            02-ENQ\n                                             8039+*                                      PELFLAG - flag byte 2.\n 00001D23 00                                 8040+         DC    AL1(0)                  PELRET - return code byte.       02-ENQ\n 00001D24 00000000                           8041+         DC    A(0)                    QNAME ADDRESS                    02-ENQ\n 00001D28 00000000                           8042+         DC    A(0)                    RNAME ADDRESS                    02-ENQ\n                         0000000C            8043+MDL_ENQLL EQU *-MDL_ENQL            enq length                          01-$$ASMIF\n-\n 00001D2C 4040404040404040                   8045+BLANKS   DC    CL128' '            long blank                           01-$$ASMIF\n 00001DAC 00000000                           8046+ZERO     DC    A(0)                zero                                 01-$$ASMIF\n 00001DB0 0000000000000000                   8047+NULLS    DC    XL8'00'                                                  01-$$ASMIF\n                         00000008            8048+KEY8     EQU   8                   key 8 user key                       01-$$ASMIF\n 00001DB8                                    8049+         LTORG                                                          01-$$ASMIF\n                                             8050+*dl_wtol wto  '01234567890123456789012345678901234567890123456789012345X\n                                                 +               678901234567890123456789012345678901234567890123456789',X\n                                                 +               ROUTCDE=(21),DESC=(6),MF=L\n 00001DB8                                    8053+MDL_WTOL DS    0F                                                       02-WTO\n 00001DB8 0072                               8054+         DC    AL2(114)                 TEXT LENGTH            @YA17152 02-WTO\n 00001DBA 8010                               8055+         DC    B'1000000000010000'      MCSFLAGS                        02-WTO\n 00001DBC F0F1F2F3F4F5F6F7                   8056+         DC    C'012345678901234567890123456789012345678901234567890123X02-WTO\n 00001DC4 F8F9F0F1F2F3F4F5                       +               45678901234567890123456789012345678901234567890123456789X\n 00001DCC F6F7F8F9F0F1F2F3                       +               '                        MESSAGE TEXT               @L6C\n 00001E2A 01                                 8057+         DC    AL1(1)                   VERSION LEVEL              @PJC 02-WTO\n1         data areas                                                                                            Page   77\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001E2B 00                                 8058+         DC    B'00000000'              MISCELLANEOUS FLAGS        @L2A 02-WTO\n 00001E2C 00                                 8059+         DC    AL1(0)                   REPLY LENGTH               @L2A 02-WTO\n 00001E2D 00                                 8060+         DC    AL1(0)                   RESERVED                   @PJA 02-WTO\n 00001E2E 0000                               8061+         DC    B'0000000000000000'      EXTENDED MCS FLAGS         @L2A 02-WTO\n 00001E30 0000                               8062+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 00001E32 00000000                           8063+         DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 02-WTO\n 00001E36 00000000                           8064+         DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 02-WTO\n 00001E3A 00000000                           8065+         DC    AL4(0)                   CONNECT ID                 @01C 02-WTO\n 00001E3E 0400                               8066+         DC    B'0000010000000000'      DESCRIPTOR CODES           @L2A 02-WTO\n 00001E40 0000                               8067+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 00001E42 0000080000000000                   8068+         DC    XL16'00000800000000000000000000000000'                  X02-WTO\n 00001E4A 0000000000000000                       +                                        EXTENDED ROUTING CODES     @L2A\n 00001E52 0000                               8069+         DC    B'0000000000000000'      MESSAGE TYPE               @L2A 02-WTO\n 00001E54 0000                               8070+         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 02-WTO\n 00001E56 4040404040404040                   8071+         DC    CL8'        '            JOB ID                     @L2A 02-WTO\n 00001E5E 4040404040404040                   8072+         DC    CL8'        '            JOB NAME                   @L2A 02-WTO\n 00001E66 4040404040404040                   8073+         DC    CL8'        '            RETRIEVAL KEY              @L2A 02-WTO\n 00001E6E 00000000                           8074+         DC    AL4(0)                   TOKEN FOR DOM              @P1C 02-WTO\n 00001E72 00000000                           8075+         DC    AL4(0)                   CONSOLE ID                 @P1C 02-WTO\n 00001E76 4040404040404040                   8076+         DC    CL8'        '            SYSTEM NAME                @L2A 02-WTO\n 00001E7E 00000000                           8077+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n 00001E82 00000000                           8078+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n                         000000CE            8079+MDL_WTOL_L EQU *-MDL_WTOL           text length                         01-$$ASMIF\n 00001E86 0A00                               8080+SVC_EXE  SVC   *-*               exec only                              01-$$ASMIF\n 00001E88 D200 3001 1000 00000001 00000000   8081+TDUMP_COPY MVC 1(*-*,R3),0(R1)    copy text                             01-$$ASMIF\n 00001E8E 32                                 8082+TDUMP_DEF_NAME   DC AL1(L'TDUMP_DEF_NAMEL)                              01-$$ASMIF\n 00001E8F C9E2C9E24BE3C4E4                   8083+TDUMP_DEF_NAMEL  DC C'ISIS.TDUMP.D&&YYMMDD..T&&HHMMSS..&&SYSNAME..&&JOBX01-$$ASMIF\n 00001E97 D4D74BC450E8E8D4                       +               NAME.'\n 00001EC1 0D                                 8084+TDUMP_DEF_DESC   DC AL1(L'TDUMP_DEF_DESCL)                              01-$$ASMIF\n 00001EC2 C9E2C9E240848586                   8085+TDUMP_DEF_DESCL  DC C'ISIS default '                                    01-$$ASMIF\n 00001ECF 00                                     +\n 00001ED0 D200 6000 B2C0 00000000 00001ED8   8086+VTOC_COPY_DCB MVC 0(*-*,R6),VTOC_MODEL_DCB copy model DCB               01-$$ASMIF\n                                             8087+*TOC_MODEL_DCB DCB DSORG=PS,MACRF=(R)\n                                             8091+*,***  IHB061  DDNAME NOT SPECIFIED                                     03-IHBERMAC\n0                                            8093+*                       DATA CONTROL BLOCK\n                                             8094+*\n 00001ED6 0000                                   +\n 00001ED8                                    8095+VTOC_MODEL_DCB DC 0F'0'       ORIGIN ON WORD BOUNDARY                   02-DCB\n                                             8096+*                       DIRECT ACCESS DEVICE INTERFACE\n 00001ED8 0000000000000000                   8097+         DC    BL16'0'        FDAD, DVTBL                               02-DCB\n 00001EE8 00000000                           8098+         DC    A(0)           KEYLEN, DEVT, TRBAL                       02-DCB\n                                             8099+*                       COMMON ACCESS METHOD INTERFACE\n 00001EEC 00                                 8100+         DC    AL1(0)         BUFNO, NUMBER OF BUFFERS                  02-DCB\n 00001EED 000001                             8101+         DC    AL3(1)         BUFCB, BUFFER POOL CONTROL BLOCK          02-DCB\n 00001EF0 0000                               8102+         DC    AL2(0)         BUFL, BUFFER LENGTH                       02-DCB\n 00001EF2 4000                               8103+         DC    BL2'0100000000000000' DSORG, DATA SET ORGANIZATION       02-DCB\n 00001EF4 00000001                           8104+         DC    A(1)           IOBAD FOR EXCP OR RESERVED                02-DCB\n                                             8105+*                       FOUNDATION EXTENSION\n 00001EF8 00                                 8106+         DC    BL1'00000000'  BFTEK, BFALN, DCBE INDICATORS             02-DCB\n 00001EF9 000001                             8107+         DC    AL3(1)         EODAD (END OF DATA ROUTINE ADDRESS)       02-DCB\n 00001EFC 00                                 8108+         DC    BL1'00000000'  RECFM (RECORD FORMAT)                     02-DCB\n 00001EFD 000000                             8109+         DC    AL3(0)         EXLST (EXIT LIST ADDRESS)                 02-DCB\n                                             8110+*                       FOUNDATION BLOCK\n 00001F00 F040404040404040                   8111+         DC    CL8'0'         DDNAME                                    02-DCB\n1         data areas                                                                                            Page   78\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001F08 02                                 8112+         DC    BL1'00000010'  OFLGS (OPEN FLAGS)                        02-DCB\n 00001F09 00                                 8113+         DC    BL1'00000000'  IFLGS (IOS FLAGS)                         02-DCB\n 00001F0A 2000                               8114+         DC    BL2'0010000000000000' MACR (MACRO FORMAT)                02-DCB\n                                             8115+*                       BSAM-BPAM-QSAM INTERFACE\n 00001F0C 00                                 8116+         DC    BL1'00000000'  OPTCD, OPTION CODES                       02-DCB\n 00001F0D 000001                             8117+         DC    AL3(1)         CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. 02-DCB\n 00001F10 00000001                           8118+         DC    A(1)           SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   02-DCB\n 00001F14 0000                               8119+         DC    H'0'           INTERNAL ACCESS METHOD FLAGS              02-DCB\n 00001F16 0000                               8120+         DC    AL2(0)         BLKSIZE, BLOCK SIZE                       02-DCB\n 00001F18 00000000                           8121+         DC    F'0'           INTERNAL ACCESS METHOD FLAGS              02-DCB\n 00001F1C 00000001                           8122+         DC    A(1)           INTERNAL ACCESS METHOD USE                02-DCB\n                                             8123+*                         BSAM-BPAM INTERFACE\n 00001F20 00                                 8124+         DC    AL1(0)         NCP, MAX NUM OF OUTSTANDING READ/WRITES   02-DCB\n 00001F21 000001                             8125+         DC    AL3(1)         EOBR, INTERNAL ACCESS METHOD USE          02-DCB\n 00001F24 00000001                           8126+         DC    A(1)           EOBW, INTERNAL ACCESS METHOD USE          02-DCB\n 00001F28 0000                               8127+         DC    AL1(0,0)       FLAGS AND EITHER DIRCT OR BUFOFF          02-DCB\n 00001F2A 0000                               8128+         DC    AL2(0)         LRECL                                     02-DCB\n 00001F2C 00000001                           8129+         DC    A(1)           CNTRL, NOTE, POINT                        02-DCB\n0                        00000058            8131+VTOC_MODEL_DCB_LENGTH EQU *-VTOC_MODEL_DCB                              01-$$ASMIF\n                                             8132+*TOC_MODEL_CVAFFILT CVAFFILT MF=L,FLTAREA=KEEP\n 00001F30                                    8134+         CNOP  0,4                                                      02-CVAFFILT\n                         00001F30            8135+VTOC_MODEL_CVAFFILT EQU *                                               02-CVAFFILT\n 00001F30 C3E5D7D3                           8136+         DC    CL4'CVPL'                EBCDIC 'CVPL'                   02-CVAFFILT\n 00001F34 0044                               8137+         DC    AL2(ICV759E-VTOC_MODEL_CVAFFILT)                        X02-CVAFFILT\n                                                 +                                        LENGTH OF CVPL\n 00001F36 0E                                 8138+         DC    XL1'0E'                  FUNCTION CODE                   02-CVAFFILT\n 00001F37 00                                 8139+         DC    XL1'00'                  STATUS INFORMATION              02-CVAFFILT\n 00001F38 00                                 8140+         DC    B'00000000'              FIRST FLAG BYTE                 02-CVAFFILT\n 00001F39 00                                 8141+         DC    B'00000000'              SECOND FLAG BYTE                02-CVAFFILT\n 00001F3A 80                                 8142+         DC    B'10000000'              THIRD FLAG BYTE                 02-CVAFFILT\n 00001F3B 00                                 8143+         DC    B'00000000'              Fourth Flag Byte           @LVC 02-CVAFFILT\n 00001F3C 00000000                           8144+         DC    A(0)                     UCB ADDRESS                     02-CVAFFILT\n 00001F40 00000000                           8145+         DC    A(0)                     FILTER CRITERIA LIST ADDRESS    02-CVAFFILT\n 00001F44 00000000                           8146+         DC    A(0)                     BUFFER LIST ADDRESS             02-CVAFFILT\n 00001F48 00000000                           8147+         DC    A(0)                     INDEX VIR'S BUFFER LIST ADDRESS 02-CVAFFILT\n 00001F4C 00000000                           8148+         DC    A(0)                     MAP VIR'S BUFFER LIST ADDRESS   02-CVAFFILT\n 00001F50 00000000                           8149+         DC    A(0)                     I/O AREA ADDRESS                02-CVAFFILT\n 00001F54 00000000                           8150+         DC    A(0)                     DEB ADDRESS                     02-CVAFFILT\n 00001F58 00000000                           8151+         DC    A(0)                     ARGUMENT ADDRESS                02-CVAFFILT\n 00001F5C 00000000                           8152+         DC    A(0)                     SPACE PARAMETER LIST ADDRESS    02-CVAFFILT\n 00001F60 00000000                           8153+         DC    A(0)                     EXTENT TABLE ADDRESS            02-CVAFFILT\n 00001F64 00000000                           8154+         DC    A(0)                     NEW VRF VIXM BUFFER LIST ADDR   02-CVAFFILT\n 00001F68 00000000                           8155+         DC    A(0)                     VRF DATA ADDRESS                02-CVAFFILT\n 00001F6C 00000000                           8156+         DC    A(0)                     COUNT AREA ADDRESS              02-CVAFFILT\n 00001F70 00000000                           8157+         DC    A(0)                     FILTER SAVE AREA ADDRESS        02-CVAFFILT\n                         00001F74            8158+ICV759E  EQU   *                        END OF CVPL                     02-CVAFFILT\n                         00000044            8159+VTOC_MODEL_CVAFFL EQU *-VTOC_MODEL_CVAFFILT                             01-$$ASMIF\n 00001F74 00000064                           8160+LOGGER_ONESEC      DC A(100*1)            one sec                       01-$$ASMIF\n 00001F78 D200 D53E 3000 0000053E 00000000   8161+LOGGER_SETSTREAM   MVC ASM_STREAMNAME(*-*),0(R3) copy straem            01-$$ASMIF\n                                             8162+*OGGER_MAX_BUFFER  DC  A(1024*128) max logger buffer\n 00001F7E 0000                                   +\n 00001F80 00800000                           8163+LOGGER_MAX_BUFFER  DC  A(1024*1024*8) max logger buffer                 01-$$ASMIF\n 00001F84 00                                 8164+WLM_CONNTKN_KEY  DC X'00'         connection token key                  01-$$ASMIF\n 00001F85 E6D3D46DC5D5C3D3                   8165+WLM_ENCLAVE_TOKENNAME DC C'WLM_ENCLAVE'                                 01-$$ASMIF\n1         data areas                                                                                            Page   79\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000001F90 05265C00                           8166+ADAY     DC    A(24*60*60*1000)  a day in milli sec                     01-$$ASMIF\n 00001F94 E6C1C9E3D4C1D1D6                   8167+WAIT_MAJ DC    CL8'WAITMAJOR'    ENQ/DEQ MAJOR NAME                     01-$$ASMIF\n                                             8168+* 04/03/10 OBTAIN DSCB\n                                             8169+*AMLST   CAMLST SEARCH,0,0,0\n 00001F9C                                    8171+CAMLST   DS    0F                                ALIGN ON FULL WORD     02-CAMLST\n 00001F9C C1                                 8172+         DC    AL1(193)                          THREE BYTES OF FLAGS   02-CAMLST\n 00001F9D 00                                 8173+         DC    AL1(0)                            INDICATING THE FUNC-   02-CAMLST\n 00001F9E 00                                 8174+         DC    AL1(0)                            TION TO BE PERFORMED   02-CAMLST\n 00001F9F 00                                 8175+         DC    AL1(0)                            NO OPTION THREE        02-CAMLST\n 00001FA0 00000000                           8176+         DC    A(0)                              PARAMETER TWO          02-CAMLST\n 00001FA4 00000000                           8177+         DC    A(0)                              PARAMETER THREE        02-CAMLST\n 00001FA8 00000000                           8178+         DC    A(0)                              PARAMETER FOUR         02-CAMLST\n                         00000010            8179+CAMLST_L EQU    *-CAMLST                                                01-$$ASMIF\n                                             8180+* 04/03/10 OBTAIN DSCB\n                                             8181+* 10/09/12 CAMLST SEEK for OBTAIN\n                                             8182+*amlst_seek CAMLST SEEK,0,0,0\n 00001FAC                                    8184+CAMLST_SEEK DS 0F                                ALIGN ON FULL WORD     02-CAMLST\n 00001FAC C0                                 8185+         DC    AL1(192)                          THREE BYTES OF FLAGS   02-CAMLST\n 00001FAD 80                                 8186+         DC    AL1(128)                          INDICATING THE FUNC-   02-CAMLST\n 00001FAE 00                                 8187+         DC    AL1(0)                            TION TO BE PERFORMED   02-CAMLST\n 00001FAF 00                                 8188+         DC    AL1(0)                            NO OPTION THREE        02-CAMLST\n 00001FB0 00000000                           8189+         DC    A(0)                              PARAMETER TWO          02-CAMLST\n 00001FB4 00000000                           8190+         DC    A(0)                              PARAMETER THREE        02-CAMLST\n 00001FB8 00000000                           8191+         DC    A(0)                              PARAMETER FOUR         02-CAMLST\n                         00000010            8192+CAMLST_SEEK_L EQU *-CAMLST_SEEK                                         01-$$ASMIF\n                                             8193+* 10/09/12 CAMLST SEEK for OBTAIN\n-                                            8196+* timer exit modell\n0                                            8198+         PUSH USING                                                     01-$$ASMIF\n                                             8199+         DROP R13                                                       01-$$ASMIF\n 00001FBC 05F0                               8200+MDL_TIMX BALR R15,0               timer exit area                       01-$$ASMIF\n                     R:F 00000076            8201+         USING ASM_TIMX+2,R15     temp base  base                       01-$$ASMIF\n 00001FBE 90EC D00C               0000000C   8202+         STM   R14,R12,12(R13)     save regs                            01-$$ASMIF\n 00001FC2 4120 F052               000000C8   8203+         LA    R2,ASM_TIMER_ECB   get ecb addr                          01-$$ASMIF\n                                             8205+*        MACDATE  07/02/90                                     @YA32157\n 00001FC6 1B00                               8207+         SR    0,0                    . SET POST CODE              @D1A 02-POST\n 00001FC8 4110 2000               00000000   8208+         LA    1,0(0,R2)              . LOAD ECB, CLEAR HI BYTE    @D1A 02-POST\n 00001FCC 0A02                               8209+         SVC   2                      . ISSUE THE POST SVC         @D1A 02-POST\n 00001FCE 98EC D00C               0000000C   8210+         LM    R14,R12,12(R13)     save regs                            01-$$ASMIF\n 00001FD2 0B0E                               8211+         BSM   0,R14                 return back                        01-$$ASMIF\n                                             8212+         DROP  R15                                                      01-$$ASMIF\n                         00000018            8213+MDL_TIMXL EQU *-MDL_TIMX   routine length                               01-$$ASMIF\n                                             8214+         POP   USING                                                    01-$$ASMIF\n1          refrenced dsects                                                                                     Page   80\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                            8217+* 29/11/07 struct asm include\n                                             8218+         PUSH PRINT                                                     02-$$GLOBAL\n                                             8219+         PRINT ON                                                       02-$$GLOBAL\n0                                            8221+* SYSTEM CONTROL BLOCKS\n0                                            8223+         PRINT    OFF,NOGEN                                             02-$$GLOBAL\n                                             8420+         PRINT OFF                                                      03-CVT\n                                             9729+         PRINT OFF                                                      03-IHASCVT\n                                             9987+         PRINT OFF                                                 @D6A 03-IHAASCB\n                                            10743+         PRINT OFF                                                 @L3A 03-IHAASXB\n                                            11011+         PRINT OFF                                                      03-IHAASSB\n                                            12153+         PRINT OFF                                                      03-IHAECVT\n                                            15404+         PRINT OFF                                                 @H1A 03-IHAASVT\n                                            15570+         PRINT OFF                                                      03-IHAPSA\n                                            17085+         PRINT OFF                                                @L1A  04-IHARB\n                                            17219+         PRINT ON                                                  @L1A 05-IKJRB\n                                            17323+         PRINT OFF                                                @L1A  05-IKJRB\n                                            24349+         PRINT OFF                                                      03-IAZJSAB\n                                            27571+                PRINT ON                                                03-IWMQCXIT\n                                            27736+         PRINT OFF                                                      03-IKJTCB\n                                            28697+         PRINT OFF                                                      03-IHASTCB\n                                            34476+         PRINT OFF                                                      03-IEZDEB\n                                            36981+         PRINT OFF                                                      03-IEFJFCBN\n                                            39803+         PRINT OFF                                                      03-IAZCHK\n                                            39987+         PRINT OFF                                                      03-IAZJSPA\n                                            40181+         PRINT OFF                                                      03-IAZIDX\n                                            40350+         PRINT OFF                                                      03-IAZFSIP\n                                            41318+         PRINT OFF                                                      03-IAZRESPA\n                                            41382+         PRINT OFF                                                      03-IAZFSCT\n                                            41424+         PRINT OFF                                                      03-IAZFSVT\n                                            41540+         PRINT OFF                                                 @H2A 03-IHASVT\n                                            47414+         PRINT   GEN                                                    02-$$GLOBAL\n                                            52457+         PRINT NOGEN                                                    03-ASMAXITP\n                                            54551+         PRINT ON,GEN                                                   02-$$GLOBAL\n 00000000                00000000 00000004  54552+IOCC     DSECT                                                          02-$$GLOBAL\n 00000000 00000000                          54553+IOCC_DUMMY DC A(0)                                                      02-$$GLOBAL\n                                            54554+*        BPXYIOCC\n                                            54556+** BPXYIOCC: Ioctl Command Constant Definitions\n                                            54557+**  Used By: Ioctl syscalls\n                                            54558+*   Ioctl command constants - Range 1-255 reserved for OpenMVS\n                                            54559+*  Authorized/Tcpip CMD values\n                         00001388           54560+IOCC#TCI             EQU   5000 Cmd for Tcpip Initialization            03-BPXYIOCC\n                         00001389           54561+IOCC#TCC             EQU   5001 Cmd for Complete Tcpip Initialization   03-BPXYIOCC\n                         0000138A           54562+IOCC#TCS             EQU   5002 Cmd for Tcpip Path Sever                03-BPXYIOCC\n                         0000138B           54563+IOCC#TCR             EQU   5003 Cmd for Tcpip Reply/Post call           03-BPXYIOCC\n                         0000138C           54564+IOCC#TCG             EQU   5004 Cmd for Tcpip SiGnal call         @p3a  03-BPXYIOCC\n                         0000138E           54565+IOCC#TCCE            EQU   5006 Cmd for Tcpip End Registration    @D5A  03-BPXYIOCC\n                         0000138F           54566+SIOCMSDELRT          EQU   5007 Cmd for Delete Route                    03-BPXYIOCC\n                                            54567+*                                         (Pre-Router wrap)       @D5A\n                         00001390           54568+SIOCMSADDRT          EQU   5008 Cmd for Add Route                       03-BPXYIOCC\n                                            54569+*                                         (Pre-Router wrap)       @D5A\n                         00001391           54570+SIOCMSSIFADDR        EQU   5009 Cmd for Set Interface address           03-BPXYIOCC\n                                            54571+*                                         (Pre-Router wrap)       @D5A\n                         00001392           54572+SIOCMSSIFFLAGS       EQU   5010 Cmd for Set Interface Flags             03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   81\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           54573+*                                         (Pre-Router wrap)       @D5A\n                         00001393           54574+SIOCMSSIFDSTADDR     EQU   5011 Cmd for Set point-to-point interface    03-BPXYIOCC\n                                            54575+*                                 address (Pre-Router wrap)       @D5A\n                         00001394           54576+SIOCMSSIFBRDADDR     EQU   5012 Cmd for Set Broadcast address           03-BPXYIOCC\n                                            54577+*                                         (Pre-Router wrap)       @D5A\n                         00001395           54578+SIOCMSSIFNETMASK     EQU   5013 Cmd for Set interface network           03-BPXYIOCC\n                                            54579+*                                 mask for an Internet address\n                                            54580+*                                         (Pre-Router wrap)       @D5A\n                         00001396           54581+SIOCMSSIFMETRIC      EQU   5014 Cmd for Set Interface routing metric    03-BPXYIOCC\n                                            54582+*                                         (Pre-Router wrap)       @D5A\n                         00001397           54583+SIOCMSRBRTTABLE      EQU   5015 Cmd for Set Routing table required      03-BPXYIOCC\n                                            54584+*                                         required request\n                                            54585+*                                         (Pre-Router wrap)       @D5A\n                         00001398           54586+SIOMSMETRIC1RT       EQU   5016 Cmd for Set metric1                     03-BPXYIOCC\n                                            54587+*                                         (Pre-Router wrap)       @D5A\n                         00001399           54588+SIOCMSICMPREDIRECT   EQU   5017 Cmd for Propagating ICMP redirects      03-BPXYIOCC\n                                            54589+*                                         (Pre-Router wrap)       @D5A\n                         8008139A           54590+SIOCSETTKN           EQU   X'8008139A' 5018 Set Tcp/Ip master Tkn @P6A  03-BPXYIOCC\n                                            54591+*\n                         8044F604           54592+SIOCMSADDRT6         EQU   X'8044F604'     Add IPV6 Route         @DDA  03-BPXYIOCC\n                                            54593+*\n                         8044F605           54594+SIOCMSDELRT6         EQU   X'8044F605'     Delete IPV6 Route      @DDA  03-BPXYIOCC\n                                            54595+*\n                         C014F606           54596+SIOCGRT6TABLE        EQU   X'C014F606' Get IPV6 Network Routing         03-BPXYIOCC\n                                            54597+*                                         Table                   @DDA\n                         C018F606           54598+SIOCGRT6TABLE64      EQU   X'C018F606' Get IPV6 Network Routing         03-BPXYIOCC\n                                            54599+*                                         Table  64-BIT           @PFC\n                         8000F607           54600+SIOCMSRBRT6TABLE     EQU   X'8000F607' Rebuild IPV6 Route Tables  @DDA  03-BPXYIOCC\n                                            54601+*\n                         C014F608           54602+SIOCGHOMEIF6         EQU   X'C014F608'  Get IPV6 Home Interface         03-BPXYIOCC\n                                            54603+*                                         Configuration           @PBC\n                         C018F608           54604+SIOCGHOMEIF664       EQU   X'C018F608'  Get IPV6 Home Interface         03-BPXYIOCC\n                                            54605+*                                         Configuration 64-Bit    @PFC\n                         8000F609           54606+SIOCMSRBHOMEIF6      EQU   X'8000F609' Rebuild IPV6 Home Interface@PBC  03-BPXYIOCC\n                                            54607+*\n                         8044F60A           54608+SIOCMSCHGRT6METRIC   EQU   X'8044F60A' Change IPV6 route's metric @PDA  03-BPXYIOCC\n                                            54609+*\n                         8008F60B           54610+SIOCMSMODHOMEIF6     EQU   X'8008F60B' Modify IPV6 Home Interface @DHA  03-BPXYIOCC\n                                            54611+*\n                         8058F60C           54612+SIOCMSADDRT6V2       EQU   X'8058F60C' Add IPV6 route version 2   @PGA  03-BPXYIOCC\n                                            54613+*\n                         8058F60D           54614+SIOCMSDELRT6V2       EQU   X'8058F60D' Del IPV6 route version 2   @PGA  03-BPXYIOCC\n                                            54615+*\n                         8058F60E           54616+SIOCMSCHGRT6METRICV2 EQU   X'8058F60E' Change IPV6 route's metric @PGA  03-BPXYIOCC\n                                            54617+*\n                                            54618+* Connection type and security credentials on TCPIP sockets.      @DRA\n                                            54619+*   Refer to: Comm Svr: IP Programmer's Guide and References.     @DRA\n                         C000F612           54620+SIOCGPARTNERINFO     EQU   X'C000F612'  Get Info                  @DRA  03-BPXYIOCC\n                         8004F613           54621+SIOCSPARTNERINFO     EQU   X'8004F613'  Set Optimization          @DRA  03-BPXYIOCC\n                                            54622+*  Ioctl Command Constants - terminal control\n                         4008A368           54623+TIOCGWINSZ           EQU   X'4008A368'  get window size           @D3A  03-BPXYIOCC\n                         8008A367           54624+TIOCSWINSZ           EQU   X'8008A367'  set window size           @D3A  03-BPXYIOCC\n                         8001A364           54625+TIOCNOTIFY           EQU   X'8001A364'  notify master by packet   @P7A  03-BPXYIOCC\n                                            54626+*  Constants for argument when TIOCNOTIFY is specified            @P7A\n                         00000001           54627+IOCC#PWBEGIN         EQU   1            Begin secure data         @P7A  03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   82\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000002           54628+IOCC#PWEND           EQU   2            End   secure data         @P7A  03-BPXYIOCC\n                                            54629+*\n                                            54630+* Ioctl command constants - for Router query                      @D5A\n                         C008C980           54631+SIOCGRTTABLE         EQU   X'C008C980'  Gets Network Routing Tab  @D5A  03-BPXYIOCC\n                         C00CC980           54632+SIOCGRTTABLE64       EQU   X'C00CC980'  Get NRT for 64-Bit C Pgm  @PCA  03-BPXYIOCC\n                                            54633+*\n                         8008C981           54634+SIOCSETRTTD          EQU   X'8008C981'  Set Socket to be attached to    03-BPXYIOCC\n                                            54635+*                                         1 TD                    @D5A\n                                            54636+*\n                         8008C983           54637+SIOCMSMODHOMEIF      EQU   X'8008C983'  Modify Home Interface     @DHA  03-BPXYIOCC\n                                            54638+*\n                         8016C984           54639+SIOCMSMODHOMEIFV2    EQU   X'8016C984'  Modify Home Interface V2  @PIA  03-BPXYIOCC\n                                            54640+*\n                         8054C985           54641+SIOCMSADDRTV2        EQU   X'8054C985'  Cmd for Add Route V2      @PIA  03-BPXYIOCC\n                                            54642+*\n                         8054C986           54643+SIOCMSDELRTV2        EQU   X'8054C986'  Cmd for Delete Route V2   @PIA  03-BPXYIOCC\n                                            54644+*\n                         8054C987           54645+SIOMSMETRIC1RTV2     EQU   X'8054C987'  Cmd for Set Metric1 V2    @PIA  03-BPXYIOCC\n                                            54646+*\n                         8004A77E           54647+FIONBIO              EQU   X'8004A77E'  set/reset nonblock I/O          03-BPXYIOCC\n                         4004A77F           54648+FIONREAD             EQU   X'4004A77F'  get number of readable bytes    03-BPXYIOCC\n                                            54649+*                                     available\n                         4004A78A           54650+FIONWRITE            EQU   X'4004A78A'  get number of writeable bytes   03-BPXYIOCC\n                                            54651+*                                     available                   @DIA\n                         8004A77D           54652+FIOASYNC             EQU   X'8004A77D'  set/clear async I/O       @D5A  03-BPXYIOCC\n                         8004A77C           54653+FIOSETOWN            EQU   X'8004A77C'  set owner                 @D5A  03-BPXYIOCC\n                         4004A77B           54654+FIOGETOWN            EQU   X'4004A77B'  get owner                 @D5A  03-BPXYIOCC\n                         4010E401           54655+SECIGET              EQU   X'4010E401'  get security information        03-BPXYIOCC\n                         4028E403           54656+SECIGET_T            EQU   X'4028E403'  Get peer task security    @DIA  03-BPXYIOCC\n                         8004E404           54657+SIOCTIEDESTHRD       EQU   X'8004E404'  Tie descriptor to thread  @DIA  03-BPXYIOCC\n                         C012A78B           54658+SIOCSECENVR          EQU   X'C012A78B'  SET/GET Client Security   @DLA  03-BPXYIOCC\n                                            54659+*                                        Environment              @DLA\n                         8030A70A           54660+SIOCADDRT            EQU   X'8030A70A'  IBM use only, Add routing       03-BPXYIOCC\n                                            54661+*                                     table entry\n                         4004A707           54662+SIOCATMARK           EQU   X'4004A707'  Is current location pointing    03-BPXYIOCC\n                                            54663+*                                     to out-of-band data?\n                         8004A708           54664+SIOCSPGRP            EQU   X'8004A708'  Set process group          @DDA 03-BPXYIOCC\n                         4004A709           54665+SIOCGPGRP            EQU   X'4004A709'  Get process group          @DDA 03-BPXYIOCC\n                         8030A70B           54666+SIOCDELRT            EQU   X'8030A70B'  IBM use only, Delete routing    03-BPXYIOCC\n                                            54667+*                                     table entry\n                         8030A70C           54668+SIOMETRIC1RT         EQU   X'8030A70C'  IBM use only, Set metric1 @D5A  03-BPXYIOCC\n                         8020A70C           54669+SIOCSIFADDR          EQU   X'8020A70C'  Set Network interface addr@D5A  03-BPXYIOCC\n                         C020A70D           54670+SIOCGIFADDR          EQU   X'C020A70D'  Get Network interface address   03-BPXYIOCC\n                         C020A712           54671+SIOCGIFBRDADDR       EQU   X'C020A712'  Get Network interface           03-BPXYIOCC\n                                            54672+*                                     Broadcast Address\n                         8020A713           54673+SIOCSIFBRDADDR       EQU   X'8020A713'  Sets Network interface          03-BPXYIOCC\n                                            54674+*                                     Broadcast Address           @D5A\n                         C008A714           54675+SIOCGIFCONF          EQU   X'C008A714'  Get Network interface Config    03-BPXYIOCC\n                         C00CA714           54676+SIOCGIFCONF64        EQU   X'C00CA714'    for 64-Bit C Pgms             03-BPXYIOCC\n                         C018A722           54677+SIOCGIFCONF6         EQU   X'C018A722'  Get IPv6 Network IfConf  @DJA   03-BPXYIOCC\n                                            54678+*\n                         C020A726           54679+SIOCGIFMTU           EQU   X'C020A726'  Get MTU Size             @DQA   03-BPXYIOCC\n                                            54680+*\n                         C020A70F           54681+SIOCGIFDSTADDR       EQU   X'C020A70F'  Get Network interface           03-BPXYIOCC\n                                            54682+*                                     Destination Address\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   83\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        C020A711           54683+SIOCGIFFLAGS         EQU   X'C020A711'  Get Network interface Flags     03-BPXYIOCC\n                         C020A717           54684+SIOCGIFMETRIC        EQU   X'C020A717'  IBM use only, Gets Network      03-BPXYIOCC\n                                            54685+*                                     Interface Routing Metric\n                         C020A715           54686+SIOCGIFNETMASK       EQU   X'C020A715'  Get Network interface           03-BPXYIOCC\n                                            54687+*                                     Network Mask\n                         8020A716           54688+SIOCSIFNETMASK       EQU   X'8020A716'  Set Network interface           03-BPXYIOCC\n                                            54689+*                                     Network Mask                @D5A\n                         8020A70E           54690+SIOCSIFDSTADDR       EQU   X'8020A70E'  IBM use only, Sets Network      03-BPXYIOCC\n                                            54691+*                                     Interface Destination Address\n                         8020A710           54692+SIOCSIFFLAGS         EQU   X'8020A710'  IBM use only, Sets Network      03-BPXYIOCC\n                                            54693+*                                     Interface Flags\n                         8020A718           54694+SIOCSIFMETRIC        EQU   X'8020A718'  IBM use only, Sets Network      03-BPXYIOCC\n                                            54695+*                                     Interface Routing Metric\n                         8024A71E           54696+SIOCSARP             EQU   X'8024A71E'  IBM use only, Sets ARP          03-BPXYIOCC\n                                            54697+*                                     Entry                      @D5A\n                         C024A71F           54698+SIOCGARP             EQU   X'C024A71F'  IBM use only, Gets ARP          03-BPXYIOCC\n                                            54699+*                                     Entry                      @D5A\n                         8024A720           54700+SIOCDARP             EQU   X'8024A720'  IBM use only, Deletes ARP       03-BPXYIOCC\n                                            54701+*                                     Entry                      @D5A\n                         8004A700           54702+SIOCSHIWAT           EQU   X'8004A700'  Set High Water Mark             03-BPXYIOCC\n                                            54703+*                                         (Not Supported)        @D5A\n                         4004A701           54704+SIOCGHIWAT           EQU   X'4004A701'  Get High Water Mark             03-BPXYIOCC\n                                            54705+*                                         (Not Supported)        @D5A\n                         8004A702           54706+SIOCSLOWAT           EQU   X'8004A702'  Set Low Water Mark              03-BPXYIOCC\n                                            54707+*                                         (Not Supported)        @D5A\n                         4004A703           54708+SIOCGLOWAT           EQU   X'4004A703'  Get Low Water Mark              03-BPXYIOCC\n                                            54709+*                                         (Not Supported)        @D5A\n                         0000E402           54710+FIOFCTLNBIO          EQU   X'0000E402'  change blocking/nonblocking     03-BPXYIOCC\n                                            54711+*               STREAMS\n                         4004E21A           54712+IOCC#ILINK           EQU   X'4004E21A'  I_LINK                   @D9A   03-BPXYIOCC\n                                            54713+*               DFS ACLs\n                         2000C100           54714+IOCC#EDITACL         EQU   X'2000C100'  Edit ACL                 @P5A   03-BPXYIOCC\n                                            54715+*               RACF ACLs\n                         0000D301           54716+SETFACL              EQU   X'0000D301'  SET FILE ACL             @DBA   03-BPXYIOCC\n                         0000D301           54717+IOCC#SETFACL         EQU   X'0000D301'  SET FILE ACL             @DCA   03-BPXYIOCC\n                         0000D302           54718+GETFACL              EQU   X'0000D302'  GET FILE ACL             @DBA   03-BPXYIOCC\n                         0000D302           54719+IOCC#GETFACL         EQU   X'0000D302'  GET FILE ACL             @DCA   03-BPXYIOCC\n                                            54720+*\n                                            54721+*   Get Port of Entry for Multilevel Security                      @DDA\n                                            54722+*   Get Port of Entry Attributes for a Socket Resource             @DDA\n                         4000D305           54723+SIOCGSOCKPOEATTRS    EQU   X'4000D305'                           @DDA   03-BPXYIOCC\n                                            54724+*   Get Port of Entry Attributes for a non-Socket Resource         @DGA\n                         4000D306           54725+SIOCGFDPOEATTRS      EQU   X'4000D306'                           @DDA   03-BPXYIOCC\n                                            54726+*   Get Multilevel Security info for a Socket Resource           @DKA\n                         4000D307           54727+SIOCGSOCKMLSINFO     EQU   X'4000D307'                           @DKA   03-BPXYIOCC\n                                            54728+*  Constants for argument when FIONBIO is specified\n                         00000000           54729+IOCC#BLOCK           EQU   X'00000000'  Allow blocking to occur         03-BPXYIOCC\n                         00000001           54730+IOCC#NONBLOCK        EQU   X'00000001'  Do not allow blocking to occur  03-BPXYIOCC\n                                            54731+*  Constants for argument when SIOCTIEDESTHRD is specified         @DIA\n                         00000001           54732+SIOC#TIESD           EQU   X'00000001'  Tie descriptor to thread   @DIA 03-BPXYIOCC\n                         00000000           54733+SIOC#UNTIESD         EQU   X'00000000'  UnTie descriptor from thrd @DIA 03-BPXYIOCC\n                                            54734+*  Constants for argument when SIOCSECENVR is specified            @DLA\n                         00000001           54735+SIOC#SETENVR         EQU   X'00000001'  SET Security Environment   @DLA 03-BPXYIOCC\n                         00000002           54736+SIOC#GETENVR         EQU   X'00000002'  GET Security Envrionment   @DLA 03-BPXYIOCC\n                                            54737+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   84\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           54738+***********************************************************************\n                                            54739+*                                                                     *\n                                            54740+*                        I P v 6                                 @DDA *\n                                            54741+*                                                                     *\n                                            54742+***********************************************************************\n                                            54743+*        IPv6 Ioctls\n                         4000F601           54744+SIOCGIFVERSION       EQU   X'4000F601'  Get Interface Ver   Out         03-BPXYIOCC\n                         C000F602           54745+SIOCGSRCIPADDR       EQU   X'C000F602'  Get Source Addr   InOut         03-BPXYIOCC\n                         4000F603           54746+SIOCGIFNAMEINDEX     EQU   X'4000F603'  Get If Name/Index   Out         03-BPXYIOCC\n                                            54747+***********************************************************************\n                                            54748+*                                                                     *\n                                            54749+* Get and Set ip_msfilter                                             *\n                                            54750+*                                                                     *\n                                            54751+****************************************************************** @DMA\n                                            54752+* Get and Set ip_msfilter (IPv4 only)                              @DMA\n                         C000A724           54753+SIOCGIPMSFILTER      EQU   X'C000A724'                             @DMA 03-BPXYIOCC\n                         8000A725           54754+SIOCSIPMSFILTER      EQU   X'8000A725'                             @DMA 03-BPXYIOCC\n                                            54755+***********************************************************************\n                                            54756+*                                                                     *\n                                            54757+* Get and Set group_filter                                            *\n                                            54758+*                                                                     *\n                                            54759+****************************************************************** @DMA\n                                            54760+* Get and Set group_filter (IPv6 or IPv4)                          @DMA\n                         C000F610           54761+SIOCGMSFILTER        EQU   X'C000F610'                             @DMA 03-BPXYIOCC\n                         8000F611           54762+SIOCSMSFILTER        EQU   X'8000F611'                             @DMA 03-BPXYIOCC\n                                            54763+***********************************************************************\n                                            54764+* Packet mode or Extended Packet mode data record control data.   @D7C*\n                                            54765+*                                                                     *\n                                            54766+* Returned on master read when no control information is pending.     *\n                                            54767+* In packet mode one byte is returned.  In extended packet mode, four *\n                                            54768+* bytes are returned.  Data follows the control data.                 *\n                                            54769+***********************************************************************\n                         00000000           54770+TIOC_DATA            EQU   X'00'        Data packet                @D3A 03-BPXYIOCC\n                                            54771+***********************************************************************\n                                            54772+* Packet mode control byte - returned on master read()            @D7C*\n                                            54773+*                                                                     *\n                                            54774+* A single control byte is returned in packet mode.  In extended      *\n                                            54775+* packet mode, four bytes are returned, with the non-extended bits    *\n                                            54776+* in the fourth byte.  The equates below can be used against the      *\n                                            54777+* fourth byte (with TM, OI and NI) or against all four bytes (with    *\n                                            54778+* OC, NC, etc.).                                                      *\n                                            54779+***********************************************************************\n                         00000001           54780+TIOCPKT_FLUSHREAD    EQU   X'01'        Input was flushed          @D3A 03-BPXYIOCC\n                         00000002           54781+TIOCPKT_FLUSHWRITE   EQU   X'02'        Output was flushed         @D3A 03-BPXYIOCC\n                         00000004           54782+TIOCPKT_STOP         EQU   X'04'        Stop output                @D3A 03-BPXYIOCC\n                         00000008           54783+TIOCPKT_START        EQU   X'08'        Start output               @D3A 03-BPXYIOCC\n                         00000010           54784+TIOCPKT_NOSTOP       EQU   X'10'        STOP/START not standard    @D3A 03-BPXYIOCC\n                         00000020           54785+TIOCPKT_DOSTOP       EQU   X'20'        STOP/START standard        @D3A 03-BPXYIOCC\n                                            54786+***********************************************************************\n                                            54787+* Extended Packet mode control byte - returned on master read()   @D7C*\n                                            54788+***********************************************************************\n                         00000100           54789+TIOCXPKT_PASSTHRU    EQU   X'00000100'  3270 Passthrough mode     @D7C  03-BPXYIOCC\n                         00000200           54790+TIOCXPKT_NOPASSTHRU  EQU   X'00000200'  Not 3270 Passthrough mode @D7C  03-BPXYIOCC\n                         00000400           54791+TIOCXPKT_ECHO        EQU   X'00000400'  ECHO set on               @D7A  03-BPXYIOCC\n                         00000800           54792+TIOCXPKT_NOECHO      EQU   X'00000800'  ECHO set off              @D7A  03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   85\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00001000           54793+TIOCXPKT_CHCP        EQU   X'00001000'  Code page change          @D7A  03-BPXYIOCC\n                         00002000           54794+TIOCXPKT_PWBEGIN     EQU   X'00002000'  Begin secure data         @P7A  03-BPXYIOCC\n                         00004000           54795+TIOCXPKT_PWEND       EQU   X'00004000'  End   secure data         @P7A  03-BPXYIOCC\n                                            54796+**********************************************************************\n                                            54797+* Get Pathname                                                    @DOA\n                         00000011           54798+IOCC#GETPATHNAME     EQU   17           Absolute name             @DOA  03-BPXYIOCC\n                         00000013           54799+IOCC#GETPATHNAMEREL  EQU   19           Relative name             @DOA  03-BPXYIOCC\n                                            54800+**********************************************************************\n                                            54801+* UPDTOFTE                                                        @D8C\n                                            54802+**********************************************************************\n                         00000014           54803+IOCC#UPDTOFTE        EQU   20         UPDATE OFTE CMD             @D8A  03-BPXYIOCC\n                                            54804+*                                                                 @DDA\n 00000000                00000000 0000000C  54805+IOCUOFTE             DSECT ,          ARGUMENT BUFFER             @DDA  03-BPXYIOCC\n                                            54806+*                                                                 @DDA\n 00000000                                   54807+IOCUOCMD             DS     F         SUBCMD                      @D8A  03-BPXYIOCC\n                         00000001           54808+IOCUO#READ           EQU    1           READ                      @D8A  03-BPXYIOCC\n                         00000002           54809+IOCUO#WRITE          EQU    2           WRITE                     @D8A  03-BPXYIOCC\n                         00000003           54810+IOCUO#CS             EQU    3           COMPARE & SWAP            @D8A  03-BPXYIOCC\n 00000004                                   54811+IOCUOVALUEBUFF       DS     0F        VALUE TO/FROM STATE AREA    @D8A  03-BPXYIOCC\n 00000004                                   54812+IOCUOVOFFSET         DS     F            OFFSET  (>=0)            @D8A  03-BPXYIOCC\n 00000008                                   54813+IOCUOVLEN            DS     F            LENGTH  (>0)             @D8A  03-BPXYIOCC\n 0000000C                                   54814+IOCUOVDATA           DS     0C           DATA                     @D8A  03-BPXYIOCC\n                                            54815+*                                                                 @DDA\n 00000000                00000000 00000008  54816+IOCUOCSBUFF          DSECT ,          COMPARE VALUE FOR CS SUBCMD @DDA  03-BPXYIOCC\n                                            54817+*                                                                 @DDA\n 00000000                                   54818+IOCUOCSOFFSET        DS     CL4          OFFSET (BYTE BDY)        @D8A  03-BPXYIOCC\n 00000004                                   54819+IOCUOCSLEN           DS     CL4          LENGTH (BYTE BDY)        @D8A  03-BPXYIOCC\n 00000008                                   54820+IOCUOCSDATA          DS     0C           DATA                     @D8A  03-BPXYIOCC\n                                            54821+*\n                         00000015           54822+IOCC#REGFILEINT      EQU   21         REGISTER FILE INTR          @DAA  03-BPXYIOCC\n                         00000016           54823+IOCC#FASTPATH        EQU   22         Set FastPath Ops            @P9A  03-BPXYIOCC\n                                            54824+*\n                         00000017           54825+IOCC#DEVCONSOLE      EQU   23         /dev/console behavior       @DEA  03-BPXYIOCC\n                         00000001           54826+IOCC#DEVCONSUPPRESS  EQU   1          /dev/console - set suppress @DEA  03-BPXYIOCC\n                         00000000           54827+IOCC#DEVCONUNSUPPRS  EQU   0          /dev/console -   unsuppress @DEA  03-BPXYIOCC\n                                            54828+*\n                         0000001B           54829+IOCC#DEVFD           EQU   27         /dev/fd behavior            @DFA  03-BPXYIOCC\n                                            54830+*                     LFS/Cinet Level Ioctls                      @DDA\n                         00000018           54831+IOCC#GETSTACKS       EQU   24         Get Stack Names             @DDA  03-BPXYIOCC\n                         00000019           54832+IOCC#DIRIOCTL        EQU   25         Directed Ioctl              @DDA  03-BPXYIOCC\n                         0000001A           54833+IOCC#GRTRSELECT      EQU   26         Get PreRtr Select           @DDA  03-BPXYIOCC\n                                            54834+*\n                                            54835+***********************************************************************\n                                            54836+*                                                                 @DDA*\n                                            54837+*   Iocc#GetStacks -                                                  *\n                                            54838+*      Get the names of the stacks that are attached to a socket.     *\n                                            54839+*                                                                     *\n                                            54840+***********************************************************************\n                                            54841+*\n 00000000                00000000 00000018  54842+IOCSTACKINFO         DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   54843+IOCSTACKINFOHEADER   DS    CL8                                          03-BPXYIOCC\n 00000008                00000008 00000000  54844+                     ORG   IOCSTACKINFOHEADER                           03-BPXYIOCC\n 00000000                                   54845+IOCSTACKINFOFLAGS    DS    X             Flags                          03-BPXYIOCC\n                         00000080           54846+IOCSTACKCINET        EQU   X'80'         Cinet socket                   03-BPXYIOCC\n 00000001                                   54847+                     DS    CL3                                          03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   86\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000004                                   54848+IOCSTACKENTRIES      DS    F             Number of Names returned       03-BPXYIOCC\n 00000008                00000008 00000008  54849+                     ORG                                                03-BPXYIOCC\n 00000008                                   54850+IOCSTACKNAMES        DS    CL16          Array of stack names           03-BPXYIOCC\n                                            54851+***********************************************************************\n                                            54852+*   Array of IOCSTACKNAMES                                            *\n                                            54853+***********************************************************************\n                                            54854+*\n 00000000                00000000 00000010  54855+IOCSTACKNAMESD       DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   54856+IOCSTACKNAME         DS    CL8           Stack name                     03-BPXYIOCC\n 00000008                                   54857+IOCSTACKTDINDEX      DS    X             Cinet Stack TdIndex            03-BPXYIOCC\n 00000009                                   54858+IOCSTACKFLAGS        DS    X             Flags                          03-BPXYIOCC\n                         00000080           54859+IOCSTACK_ACTIVE          EQU  X'80'      Active                         03-BPXYIOCC\n                         00000040           54860+IOCSTACK_IPV6_SUPPORT    EQU  X'40'      IPv6 is supported              03-BPXYIOCC\n                         00000020           54861+IOCSTACK_IPV6_INTERFACES EQU  X'20'      IPv6 Home Interfaces           03-BPXYIOCC\n                         00000010           54862+IOCSTACK_IPV4_INTERFACES EQU  X'10'      IPv4 Home Interfaces           03-BPXYIOCC\n 0000000A                                   54863+                     DS    CL6                                          03-BPXYIOCC\n                                            54864+***********************************************************************\n                                            54865+*                                                                 @DDA*\n                                            54866+*   Iocc#DirIoctl  - Directed Ioctl                                   *\n                                            54867+*      Passes the imbedded ioctl to the specified stack.              *\n                                            54868+*                                                                     *\n                                            54869+***********************************************************************\n                                            54870+*\n 00000000                00000000 00000011  54871+IOCDIRIOCTL          DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   54872+IOCDIRHDR            DS    CL16                                         03-BPXYIOCC\n 00000010                00000010 00000000  54873+                     ORG   IOCDIRHDR                                    03-BPXYIOCC\n 00000000                                   54874+IOCDIRNAME           DS    CL8    Target Stack Name                     03-BPXYIOCC\n 00000008                                   54875+IOCDIRCMD            DS    XL4    Imbedded ioctl Command                03-BPXYIOCC\n 0000000C                                   54876+IOCDIRARGLEN         DS    F      Imbedded ioctl Argument Length        03-BPXYIOCC\n 00000010                00000010 00000010  54877+                     ORG                                                03-BPXYIOCC\n 00000010                                   54878+IOCDIRARG            DS    C      Imbedded ioctl Argument               03-BPXYIOCC\n                                            54879+***********************************************************************\n                                            54880+*                                                                 @DDA*\n                                            54881+*   Iocc#GRtrSelect - Get Cinet PreRouter's selected stack for each   *\n                                            54882+*          of an array of specified destination IP addresses.         *\n                                            54883+*                                                                     *\n                                            54884+***********************************************************************\n                                            54885+*\n 00000000                00000000 00000018  54886+IOCRTRSELECT         DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   54887+IOCRTRIPADDR         DS    CL16     Input IP Address                    03-BPXYIOCC\n 00000010                                   54888+IOCRTRSTACK          DS    CL8      Output Selected Stack Name          03-BPXYIOCC\n 00000018                00000018 00000010  54889+                     ORG   IOCRTRSTACK                                  03-BPXYIOCC\n 00000010                                   54890+IOCRTRERRTEST        DS    CL1      Error if = 0                        03-BPXYIOCC\n 00000011                                   54891+                     DS    CL1                                          03-BPXYIOCC\n 00000012                                   54892+IOCRTRERRNO          DS    XL2      Error RC (Errno)                    03-BPXYIOCC\n 00000014                                   54893+IOCRTRRSN            DS    XL4      Error Rsn (ErrnoJr)                 03-BPXYIOCC\n 00000018                00000018 00000018  54894+                     ORG                                                03-BPXYIOCC\n                         00000000           54895+IOCRTRERROR          EQU   X'00'  IocRtrErrTest value to test for error 03-BPXYIOCC\n                                            54896+***********************************************************************\n                                            54897+*                                                                 @DDA*\n                                            54898+*   SiocGIfNameIndex - Get Interface Name/Index Table                 *\n                                            54899+*                                                                     *\n                                            54900+***********************************************************************\n                                            54901+*\n 00000000                00000000 00000018  54902+IF_NAMEINDEXENTRY    DSECT ,                                      @DDA  03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   87\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000000                                   54903+IF_NIINDEX           DS    F         Interface Index                    03-BPXYIOCC\n 00000004                00000004 00000000  54904+                     ORG   IF_NIINDEX                                   03-BPXYIOCC\n 00000000                                   54905+IF_NITDINDEX         DS    H         CInet Td Index                     03-BPXYIOCC\n 00000002                                   54906+IF_NIIFINDEX         DS    H         Stack Interface Index              03-BPXYIOCC\n 00000004                00000004 00000004  54907+                     ORG                                                03-BPXYIOCC\n 00000004                                   54908+IF_NINAME            DS    CL16      Interface Name, blank padded       03-BPXYIOCC\n 00000014                                   54909+IF_NIEXT             DS    CL4                                          03-BPXYIOCC\n 00000018                00000018 00000014  54910+                     ORG   IF_NIEXT                                     03-BPXYIOCC\n 00000014                                   54911+IF_NINAMETERM        DS    CL1       Null for C for Name len=16         03-BPXYIOCC\n 00000015                                   54912+IF_NIFLAGS           DS    X         Name Index Flags             @PKA  03-BPXYIOCC\n                         00000080           54913+IF_NIOSM             EQU   X'80'     1 = OSM Interface            @PKA  03-BPXYIOCC\n 00000016                                   54914+                     DS    CL2       Reserved                     @PKC  03-BPXYIOCC\n 00000018                00000018 00000018  54915+                     ORG                                                03-BPXYIOCC\n                         00000018           54916+IF_NAMEINDEXENTRYL   EQU   *-IF_NAMEINDEXENTRY                    @DDA  03-BPXYIOCC\n 00000000                00000000 00000020  54917+IF_NAMEINDEX         DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   54918+IF_NIHEADER          DS    2F                                           03-BPXYIOCC\n 00000008                00000008 00000000  54919+                     ORG   IF_NIHEADER                                  03-BPXYIOCC\n 00000000                                   54920+IF_NITOTALIF         DS    F      Total Active Interfaces on System     03-BPXYIOCC\n 00000004                                   54921+IF_NIENTRIES         DS    F      Number of entries returned            03-BPXYIOCC\n 00000008                00000008 00000008  54922+                     ORG                                                03-BPXYIOCC\n 00000008                                   54923+IF_NITABLE           DS    CL(IF_NAMEINDEXENTRYL)                       03-BPXYIOCC\n                                            54924+***********************************************************************\n                                            54925+*                                                                @DDA *\n                                            54926+*   SiocGSockPoeAttrs - Socket Port of Entry Attributes               *\n                                            54927+*                                                                     *\n                                            54928+***********************************************************************\n                                            54929+*\n 00000000                00000000 00000060  54930+IOCPOEATTR           DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   54931+IOCPOEPEERIPADDR     DS    CL16          Peer IP Address                03-BPXYIOCC\n 00000010                00000010 00000000  54932+                     ORG   IOCPOEPEERIPADDR                             03-BPXYIOCC\n 00000000                                   54933+IOCPOEPEERIPV6PREFIX DS    CL12                                         03-BPXYIOCC\n 0000000C                                   54934+IOCPOEPEERIPV4ADDR   DS    F                                            03-BPXYIOCC\n 00000010                00000010 00000010  54935+                     ORG                                                03-BPXYIOCC\n 00000010                                   54936+IOCPOETERMID         DS    CL8           TERMINAL Profile Name          03-BPXYIOCC\n 00000018                                   54937+IOCPOELABEL          DS    CL8           Security Label                 03-BPXYIOCC\n 00000020                                   54938+IOCPOEPROFILE        DS    CL64          SERVAUTH Resource Name         03-BPXYIOCC\n                                            54939+***********************************************************************\n                                            54940+*                                                                @DKA *\n                                            54941+*   SiocGSockMLSINFO  - Socket Multilevel Security Information        *\n                                            54942+*     IocPoeProfile returns full resource name                        *\n                                            54943+*     IocMlsProfile returns actual profile name in use                *\n                                            54944+*                                                                     *\n                                            54945+***********************************************************************\n                                            54946+*\n 00000000                00000000 00000080  54947+IOCMLSINFO           DSECT ,                                      @DKA  03-BPXYIOCC\n 00000000                                   54948+IOCMLSMVSNAME        DS    CL8           MVS System Name          @DKA  03-BPXYIOCC\n 00000008                                   54949+IOCMLSSTKNAME        DS    CL8           Stack Job Name           @DKA  03-BPXYIOCC\n 00000010                                   54950+IOCMLSNAZNAME        DS    CL8           NetAccess Zone Name      @DKA  03-BPXYIOCC\n 00000018                                   54951+IOCMLSUSRNAME        DS    CL8           Caller UserID            @DKA  03-BPXYIOCC\n 00000020                                   54952+IOCMLSUSRLBL         DS    CL8           Caller Security Label    @DKA  03-BPXYIOCC\n 00000028                                   54953+IOCMLSSTKLBL         DS    CL8           Stack  Security Label    @DKA  03-BPXYIOCC\n 00000030                                   54954+IOCMLSNAZLBL         DS    CL8           Zone   Security Label    @DKA  03-BPXYIOCC\n 00000038                                   54955+IOCMLSCONLBL         DS    CL8           Connct Security Label    @DKA  03-BPXYIOCC\n 00000040                                   54956+IOCMLSPROFILE        DS    CL64          SERVAUTH Profile Name    @DKA  03-BPXYIOCC\n                                            54957+*---------------------------------------------------------------------*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   88\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           54958+*     Multicast Source Filter Structures from RFC 3678                *\n                                            54959+*                                                                     *\n                                            54960+*   *** These require the inclusion of BPXYSOCK ***                   *\n                                            54961+*----------------------------------------------------------------- @DMA\n                                            54962+*                                                                  @DMA\n                                            54963+***********************************************************************\n                                            54964+* SIOCGRTTABLE - Obtain route information. Returns information for    *\n                                            54965+*                IPv4 routes from the TCP/IP stack's main route table.*\n                                            54966+*                                                                     *\n                                            54967+*                The Route entry structures returned can either be    *\n                                            54968+*                Version 1, Version 2, or Version 3 structures.       *\n                                            54969+*                  Version 1                                          *\n                                            54970+*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an IP    *\n                                            54971+*                      address                                        *\n                                            54972+*                  Version 2                                          *\n                                            54973+*                    - IOCN_RTMSGTYPE structure is the same size      *\n                                            54974+*                      as Version 1                                   *\n                                            54975+*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an       *\n                                            54976+*                      interface index.                               *\n                                            54977+*                  Version 3                                          *\n                                            54978+*                    - IOCN_RTMSGTYPE structure is larger than the    *\n                                            54979+*                      Version 1 or 2 size                            *\n                                            54980+*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an       *\n                                            54981+*                      interface index                                *\n                                            54982+*                    - New MTU field added                            *\n                                            54983+*                The RTEV3 macro variable controls whether the        *\n                                            54984+*                Version 3 Route entry structure is generated by      *\n                                            54985+*                this macro.  By default, the macro generates the     *\n                                            54986+*                Version 3 Route entry structure.                     *\n                                            54987+*                                                                     *\n                                            54988+*                When requesting Version 2 or Version 3 output in a   *\n                                            54989+*                CINET environment, invoking applications must either *\n                                            54990+*                have stack affinity or use the IOCC#DIRIOCTL to      *\n                                            54991+*                invoke this ioctl.  Otherwise, the output from the   *\n                                            54992+*                first stack will be in the requested version format  *\n                                            54993+*                but, the output from subsequent stacks will be in    *\n                                            54994+*                Version 1 format.                                    *\n                                            54995+*                                                                     *\n                                            54996+* Input     - Input to the ioctl is a buffer length and a buffer      *\n                                            54997+*             address.  By default, Version 1 Route entry structures  *\n                                            54998+*             are returned.                                           *\n                                            54999+*                                                                     *\n                                            55000+*             To obtain Version 2 or 3 Route entry output, an         *\n                                            55001+*             IOCN_RTMSGHDRTYPE structure must be setup at the        *\n                                            55002+*             beginning of the output buffer, before invoking the     *\n                                            55003+*             ioctl.  The following fields must be set:               *\n                                            55004+*               - IOCN_RTMSGHDRVER set to Version 2 or 3              *\n                                            55005+*               - IOCN_RTMSGHDREYEID set to the correct eyecatcher    *\n                                            55006+*                 value.                                              *\n                                            55007+*                                                                     *\n                                            55008+*                                                                     *\n                                            55009+* Output    - Return_value = 0                                        *\n                                            55010+*                  - IOCN_RTMSGHDRTYPE structure returned with        *\n                                            55011+*                    field IOCN_RTMSGHDRNUMENT set to the number      *\n                                            55012+*                    of Route entry structures returned.  In the      *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   89\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55013+*                    output buffer, the header is followed by the     *\n                                            55014+*                    Route entry structures.                          *\n                                            55015+*                  - The IOCN_RTMSGHDRVER and IOCN_RTMSGHDRSUBVER     *\n                                            55016+*                    fields indicate whether Version 1, 2, or 3       *\n                                            55017+*                    of the Route entry structures was returned.      *\n                                            55018+*                  - IOCN_RTMSGHDRNUMENT - number of either Version   *\n                                            55019+*                    1, 2, or 3 Route entry structures returned.      *\n                                            55020+*           - Return_value = -1                                       *\n                                            55021+*                  - Return_code = EBADMSG                            *\n                                            55022+*                    This means that the output buffer is not large   *\n                                            55023+*                    enough for one IOCN_RTMSGHDRTYPE structure       *\n                                            55024+*                    and one Route entry structure.                   *\n                                            55025+*                  - Return_code = ERANGE                             *\n                                            55026+*                    This means that the output buffer is not large   *\n                                            55027+*                    enough for all the Route entry structures which  *\n                                            55028+*                    can be returned. In this case, only the          *\n                                            55029+*                    IOCN_RTMSGHDRTYPE structure will be returned.    *\n                                            55030+*                    Field IOCN_RTMSGHDRNUMENT in this header will    *\n                                            55031+*                    contain the number of Route entry structures     *\n                                            55032+*                    which can be returned.  Field IOCN_RTMSGHDRVER   *\n                                            55033+*                    will indicate which version of the Route entry   *\n                                            55034+*                    structures will be returned.                     *\n                                            55035+*                                                                @PIA *\n                                            55036+***********************************************************************\n                                            55037+*                                                                @PIA\n                                            55038+* Header structure - IOCN_RTMSGHDRTYPE                           @PIA\n                                            55039+*                                                                @PIA\n 00000000                00000000 00000048  55040+IOCN_RTMSGHDRTYPE    DSECT ,      Route header                   @PIA   03-BPXYIOCC\n                                            55041+*\n 00000000                                   55042+IOCN_RTMSGHDRLEN     DS     H     Length of header               @PIA   03-BPXYIOCC\n 00000002                                   55043+IOCN_RTMSGHDRVER     DS     FL1   Version of Route entry structures     03-BPXYIOCC\n                                            55044+*                                 returned                       @PIA\n 00000003                                   55045+                     DS     CL1   Reserved                       @PIA   03-BPXYIOCC\n 00000004                                   55046+IOCN_RTMSGHDREYEID   DS     CL4   Eye catcher 'Rmsg'             @PIA   03-BPXYIOCC\n                         D994A287           55047+IOCN_RTMSGHDREYEC    EQU    C'Rmsg'  Eye catcher constant        @PIA   03-BPXYIOCC\n 00000008                                   55048+IOCN_RTMSGHDRSUBVER  DS     FL1   Version of Route entry structures     03-BPXYIOCC\n                                            55049+*                                 returned                       @PIA\n 00000009                                   55050+                     DS     CL3   Reserved                       @PIA   03-BPXYIOCC\n 0000000C                                   55051+IOCN_RTMSGHDRIOCTLNUM  DS   F     Set to x'10' to indicate the          03-BPXYIOCC\n                                            55052+*                                 SIOCGRTTABLE ioctl             @PIA\n 00000010                                   55053+IOCN_RTMSGHDRNUMENT  DS     F     Output - number of Route entries      03-BPXYIOCC\n                                            55054+*                                 returned                       @PIA\n 00000014                                   55055+                     DS     CL52  Reserved                       @PIA   03-BPXYIOCC\n                         00000048           55056+IOCN_RTMSGHDR#LEN    EQU    *-IOCN_RTMSGHDRTYPE  Length of header@PIA   03-BPXYIOCC\n                                            55057+*\n                                            55058+* Version constants for fields IOCN_RTMSGHDRVER  and\n                                            55059+* IOCN_RTMSGHDRSUBVER                                            @PIA\n                                            55060+*\n                         00000001           55061+IOCN_RTMSGTYPEV1     EQU    1       Version 1                    @PIA   03-BPXYIOCC\n                         00000002           55062+IOCN_RTMSGTYPEV2     EQU    2       Version 2                    @PIA   03-BPXYIOCC\n                         00000003           55063+IOCN_RTMSGTYPEV3     EQU    3       Version 3                    @PIA   03-BPXYIOCC\n                                            55064+*                                                                @PIA\n                                            55065+* Version 1 and Version 2 Route entry structure - IOCN_RTMSGTYPE @PIA\n                                            55066+*                                                                @PIA\n 00000000                00000000 00000030  55067+IOCN_RTMSGTYPE       DSECT ,      Route entry structure          @PIA   03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   90\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55068+*\n 00000000                                   55069+IOCN_IPADDRRTMSGDEST DS     CL4   Destination IP address         @PIA   03-BPXYIOCC\n 00000004                                   55070+IOCN_IPADDRRTMSGMASK DS     CL4   Subnet mask                    @PIA   03-BPXYIOCC\n 00000008                                   55071+IOCN_IPADDRRTMSGGATE DS     CL4   Gateway IP address             @PIA   03-BPXYIOCC\n 0000000C                                   55072+IOCN_IPADDRRTMSGHOMEIF  DS  F     Version 1 = IP address         @PIA   03-BPXYIOCC\n                                            55073+*                                 Other versions = interface\n                                            55074+*                                 index                          @PIA\n 00000010                                   55075+IOCN_RTMSGMETRICTYPE DS     F     Metric type is always 1, meaning      03-BPXYIOCC\n                                            55076+*                                 metric value is in hop counts  @PIA\n 00000014                                   55077+IOCN_RTMSGMETRIC     DS     F     Metric value in hop counts     @PIA   03-BPXYIOCC\n 00000018                                   55078+                     DS     CL3   Reserved                       @PIA   03-BPXYIOCC\n 0000001B                                   55079+IOCN_RTATTRRTMSG     DS     XL1   Route flags                    @PIA   03-BPXYIOCC\n                         00000080           55080+IOCN_BRTATTRLOOPBACK EQU    X'80'   1 = Loopback interface       @PIA   03-BPXYIOCC\n                         00000040           55081+IOCN_BRTATTRLOCAL    EQU    X'40'   1 = Local/Home IP address    @PIA   03-BPXYIOCC\n                         00000010           55082+IOCN_BRTATTRDYNBUILT EQU    X'10'   1 = Dynamically built, e.g.         03-BPXYIOCC\n                                            55083+*                                       by ICMP redirect         @PIA\n                         00000004           55084+IOCN_BRTATTRHOST     EQU    X'04'   1 = Host route, 0 = Network         03-BPXYIOCC\n                                            55085+*                                   route                        @PIA\n                         00000002           55086+IOCN_BRTATTRGATEWAY  EQU    X'02'   1 = Gateway                  @PIA   03-BPXYIOCC\n                         00000001           55087+IOCN_BRTATTRRTUP     EQU    X'01'   1 = Route is active, 0 = Route      03-BPXYIOCC\n                                            55088+*                                   is inactive                  @PIA\n 0000001C                                   55089+IOCN_RTMSGRTETYPE    DS     XL1   Route type                     @PIA   03-BPXYIOCC\n                         00000001           55090+IOCN_RTOTHER         EQU    1       Other (default, direct)      @PIA   03-BPXYIOCC\n                         00000002           55091+IOCN_RTLOCAL         EQU    2       Static (configured)          @PIA   03-BPXYIOCC\n                         00000004           55092+IOCN_RTICMP          EQU    4       ICMP                         @PIA   03-BPXYIOCC\n                         00000008           55093+IOCN_RTRIP           EQU    8       RIP                          @PIA   03-BPXYIOCC\n                         0000000D           55094+IOCN_RTOSPF          EQU    13      OSPF                         @PIA   03-BPXYIOCC\n                         00000082           55095+IOCN_RTREPSTAT       EQU    130     Replaceable static           @PIA   03-BPXYIOCC\n 0000001D                                   55096+                     DS     CL3   Reserved                       @PIA   03-BPXYIOCC\n                         00000020           55097+IOCN_RTMSGV1#LEN     EQU    *-IOCN_RTMSGTYPE V1 Route entry len  @PIA   03-BPXYIOCC\n                         00000020           55098+IOCN_RTMSGV2#LEN     EQU    *-IOCN_RTMSGTYPE V2 Route entry len  @PIA   03-BPXYIOCC\n                                            55099+*                                                                @PIA\n                                            55100+* Version 3 Route entry structure - additional field             @PIA\n                                            55101+*                                                                @PIA\n 00000020                                   55102+IOCN_RTMSGMTU        DS     H     Route's MTU value              @PIA   03-BPXYIOCC\n 00000022                                   55103+                     DS     H     Reserved                       @PIA   03-BPXYIOCC\n 00000024                                   55104+                     DS     F     Reserved                       @PIA   03-BPXYIOCC\n 00000028                                   55105+                     DS     F     Reserved                       @PIA   03-BPXYIOCC\n 0000002C                                   55106+                     DS     F     Reserved                       @PIA   03-BPXYIOCC\n                         00000030           55107+IOCN_RTMSGV3#LEN     EQU    *-IOCN_RTMSGTYPE  V3 Route entry len @PIA   03-BPXYIOCC\n                                            55108+*\n                                            55109+***********************************************************************\n                                            55110+* IOCN_IFREQ                                                      @DQA*\n                                            55111+*  Mapping that defines the network interface block that is used      *\n                                            55112+*  on ioctls that transfer network interface information              *\n                                            55113+*                                                                     *\n                                            55114+*  This is equivalent to the C ifreq structure from in.h              *\n                                            55115+*  This is the ASM version of the PL/X IOCN_IfType from BPXZIOCN.     *\n                                            55116+*                                                                     *\n                                            55117+***********************************************************************\n                                            55118+*\n 00000000                00000000 00000020  55119+IOCN_IFREQ DSECT         Mapping for network interface information      03-BPXYIOCC\n 00000000                                   55120+IOCN_IFTYPE   DS 0F      Structure Name from BPXZIOCN.                  03-BPXYIOCC\n 00000000                                   55121+IOCN_IFNAME   DS CL16     Interface name.                               03-BPXYIOCC\n 00000010                                   55122+IOCN_IFUNION  DS 0CL16    Union of fields:                              03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   91\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000010                00000010 00000010  55123+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55124+IOCN_SADDRIF     DS CL16  The address of the interface                  03-BPXYIOCC\n 00000020                00000020 00000010  55125+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55126+IOCN_SADDRIFDEST DS CL16  Destination address in a point to point link  03-BPXYIOCC\n 00000020                00000020 00000010  55127+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55128+IOCN_SADDRIFBROADCAST DS CL16 Address for Broadcasting                  03-BPXYIOCC\n 00000020                00000020 00000010  55129+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55130+IOCN_IFMETRIC    DS F     Interface metric                              03-BPXYIOCC\n 00000014                00000014 00000010  55131+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55132+IOCN_PIFDATA     DS A     Pointer to an area set by TCPIP               03-BPXYIOCC\n 00000014                00000014 00000010  55133+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55134+IOCN_MTUSIZE     DS F     MTU size.  Used with SIOCGIFMTU.              03-BPXYIOCC\n 00000014                00000014 00000010  55135+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55136+IOCN_IFATTRIF    DS 0BL2  Flag area.                                    03-BPXYIOCC\n                                            55137+*\n 00000010                                   55138+IOCN_IFATTRBYTE1    DS 0CL1                                             03-BPXYIOCC\n                         00000020           55139+IOCN_BIFATTRSNAP        EQU X'20'                                       03-BPXYIOCC\n                         00000010           55140+IOCN_BIFATTRTOKBRIDGE   EQU X'10'                                       03-BPXYIOCC\n                         00000004           55141+IOCN_BIFATTRCHECKSUM    EQU X'04'                                       03-BPXYIOCC\n                         00000002           55142+IOCN_BIFATTRALLMULTI    EQU X'02'                                       03-BPXYIOCC\n                         00000001           55143+IOCN_BIFATTRALLPACKSUPT EQU X'01'                                       03-BPXYIOCC\n 00000010                00000010 00000011  55144+         ORG   IOCN_IFATTRBYTE1+1                                       03-BPXYIOCC\n 00000011                                   55145+IOCN_IFATTRBYTE2    DS 0CL1                                             03-BPXYIOCC\n                         00000080           55146+IOCN_BIFATTRARPNOTSUPT  EQU X'80'                                       03-BPXYIOCC\n                         00000040           55147+IOCN_BIFATTRRESALLOC    EQU X'40'                                       03-BPXYIOCC\n                         00000020           55148+IOCN_BIFATTRNOTRAILER   EQU X'20'                                       03-BPXYIOCC\n                         00000010           55149+IOCN_BIFATTRPTTOPT      EQU X'10'                                       03-BPXYIOCC\n                         00000008           55150+IOCN_BIFATTRLOOPBACK    EQU X'08'                                       03-BPXYIOCC\n                         00000004           55151+IOCN_BIFATTRDEBUG       EQU X'04'                                       03-BPXYIOCC\n                         00000002           55152+IOCN_BIFATTRBROADCAST   EQU X'02'                                       03-BPXYIOCC\n                         00000001           55153+IOCN_BIFATTRUP          EQU X'01'                                       03-BPXYIOCC\n                                            55154+*\n 00000011                00000011 00000020  55155+         ORG   IOCN_IFUNION+16                                          03-BPXYIOCC\n 00000020                                   55156+IOCN_IFEND       DS   0C  End of structure                              03-BPXYIOCC\n                         00000020           55157+IOCN_IFREQ_LEN   EQU *-IOCN_IFREQ Length of Structure                   03-BPXYIOCC\n                         00000010           55158+IOCN_#IFNAMESIZE EQU 16   Size of the name field                        03-BPXYIOCC\n                                            55159+*\n                                            55160+** BPXYIOCC End\n-\n                                            55162+* SMF RECORDS\n 00000000                00000000 0000019C  55163+SMF14    DSECT                                                          02-$$GLOBAL\n                                            55164+*        IFASMFR 14\n                                            55166+*%IFABGN1: ;\n                                            55167+* /*                                                                 */\n                                            55168+* /* METHOD OF ACCESS                                                */\n                                            55169+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            55170+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            55171+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            55172+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            55173+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            55174+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            55175+* /*                                             A DIAGNOSTIC.       */\n                                            55176+* /*                                                                 */\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   92\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55177+* /*                                                                 */\n                                            55178+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            55179+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            55180+* /*         RECORDS AS FOLLOWS:                                     */\n                                            55181+* /*                                                                 */\n                                            55182+* /*             MACRO        RECORDS                                */\n                                            55183+* /*            ********      *******                                */\n                                            55184+* /*            IFASMFR1      07-19                                  */\n                                            55185+* /*            IFASMFR2      20-27                                  */\n                                            55186+* /*            IFASMFR3      28-36                                  */\n                                            55187+* /*            IFASMFR4      37-46                                  */\n                                            55188+* /*            IFASMFR5      47-54                                  */\n                                            55189+* /*            IFASMFR6      55-69                                  */\n                                            55190+* /*            IFASMFR9      80-84                              @07C*/\n                                            55191+* /*            IFASMFRA      85-103                             @07C*/\n                                            55192+* /*            IFASMFRB      104-113                                */\n                                            55193+* /*            IFASMFRC      114-123                                */\n                                            55194+* /*            IFASMFRD      124-127                                */\n                                            55195+*%GOTO IFABGN2;   /*\n                                            55196+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            55197+*  REQUIRED FORMAT IS\n                                            55198+*\n                                            55199+*        IFASMFR  &RECTYPE\n                                            55200+*\n                                            55201+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            55202+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   93\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55206+*\n                                            55207+* THIS RECORD WRITTEN WHEN A USER'S DATA SET IS CLOSED OR PROCESSED\n                                            55208+* BY EOV. LENGTH IS VARIABLE, MINIMUM OF 292 BYTES.               @02C\n                                            55209+* RECORD TYPE: 14-DATA SET OPENED FOR INPUT/RDBACK\n                                            55210+*              15-DATA SET OPENED FOR OUTPUT/INOUT/OUTIN/UPDAT\n                                            55211+*\n 00000000                                   55212+         DS    0F        ALIGN TO FULL WORD BOUNDARY                    05-IFGSMF14\n                         00000000           55213+SMF14HDR EQU   *         HEADER SEGMENT FOR RECORD TYPE 14/15           05-IFGSMF14\n 00000000                                   55214+SMF14LEN DS    BL2'0'    RECORD LENGTH                                  05-IFGSMF14\n 00000002                                   55215+SMF14SEG DS    BL2'0'    SEGMENT DESCRIPTOR                             05-IFGSMF14\n 00000004                                   55216+SMF14FLG DS    BL1'0'    HEADER FLAG BYTE                               05-IFGSMF14\n 00000005                                   55217+SMF14RTY DS    BL1'0'    RECORD TYPE 14                                 05-IFGSMF14\n 00000006                                   55218+SMF14TME DS    BL4'0'    TIME OF DAY OF EOV OR CLOSE, USING TIME        05-IFGSMF14\n                                            55219+*                        MACRO W/ BIN INTVL(HUNDREDTHS OF A SECOND)\n 0000000A                                   55220+SMF14DTE DS    PL4'0000' DATE OF EOV OR CLOSE,PACKED DECIMAL (00YYDDDF) 05-IFGSMF14\n 0000000E                                   55221+SMF14SID DS    CL4' '    SYSTEM ID                                      05-IFGSMF14\n 00000012                                   55222+SMF14JBN DS    CL8' '    JOB NAME                                       05-IFGSMF14\n 0000001A                                   55223+SMF14RST DS    BL4'0'    READER START TIME                              05-IFGSMF14\n 0000001E                                   55224+SMF14RSD DS    PL4'0000' READER START DATE, PK/DEC FORM: 00YYDDDF       05-IFGSMF14\n 00000022                                   55225+SMF14UID DS    CL8' '    USERID                                         05-IFGSMF14\n 0000002A                                   55226+SMF14RIN DS    BL2'0'    RECORD INDICATORS:                             05-IFGSMF14\n                         00000080           55227+SMF14RV0 EQU   128       RESERVED                                       05-IFGSMF14\n                         00000040           55228+SMF14EOV EQU   64        RECORD WRITTEN BY EOV                          05-IFGSMF14\n                         00000020           55229+SMF14DAD EQU   32        DASD DEVICE                                    05-IFGSMF14\n                         00000010           55230+SMF14TDS EQU   16        TEMPORARY DATA SET                             05-IFGSMF14\n                         00000008           55231+SMF14DDA EQU   8         DCBDSORG = DA                                  05-IFGSMF14\n                         00000004           55232+SMF14IS  EQU   4         DCBDSORG = IS                                  05-IFGSMF14\n                         00000002           55233+SMF14JIS EQU   2         JFCDSORG = IS                                  05-IFGSMF14\n                         00000001           55234+SMF14VIO EQU   1         VIO DATA SET ACCESS                            05-IFGSMF14\n                         00000080           55235+SMF14IPD EQU   X'80'     PDSE DATA SET                                  05-IFGSMF14\n                         00000040           55236+SMF14TRC EQU   X'40'     QSAM TRUNC MACRO HAS BEEN ISSUED FOR A PDSE    05-IFGSMF14\n                         00000020           55237+SMF14NSG EQU   X'20'     NULL SEGMENT ENCOUNTERED IN DATA SET           05-IFGSMF14\n                         00000010           55238+SMF14STR EQU   X'10'     EXTENDED FORMAT SEQUENTIAL DATA SET      @P1C  05-IFGSMF14\n                         00000008           55239+SMF14HBT EQU   X'08'     HIPERBATCH SECTION PRESENT               @L1A  05-IFGSMF14\n                         00000004           55240+SMF14XSG EQU   X'04'     EXTENDED INFORMATION SEGMENT PRESENT     @L1A  05-IFGSMF14\n                         00000002           55241+SMF14TCL EQU   X'02'     TASK TERMINATION CLOSED DCB              @0CC  05-IFGSMF14\n                         00000001           55242+SMF14ABD EQU   X'01'     TASK IS ABENDING                         @0CA  05-IFGSMF14\n 0000002C                                   55243+SMF14SDC DS    BL1'0'    SIZE OF DCB/DEB SEGMENT                        05-IFGSMF14\n 0000002D                                   55244+SMF14NUC DS    BL1'0'    NO. UCB SEGMENTS                               05-IFGSMF14\n 0000002E                                   55245+SMF14SUC DS    BL1'0'    SIZE OF EACH UCB SEGMENT                       05-IFGSMF14\n 0000002F                                   55246+SMF14SET DS    BL1'0'    SIZE OF ISAM EXTENSION SEGMENT                 05-IFGSMF14\n 00000030                                   55247+SMF14OPE DS    BL4'0'    TIME OF OPEN USING TIME BIN INTV.              05-IFGSMF14\n                         00000034           55248+SMFTIOT  EQU   *         TIOT SEGMENT (FROM DD ENTRY)                   05-IFGSMF14\n 00000034                                   55249+SMFTIOE1 DS    BL1'0'    TIOELNGH                                       05-IFGSMF14\n 00000035                                   55250+SMFTIOE2 DS    BL1'0'    TIOESSTA                                       05-IFGSMF14\n 00000036                                   55251+SMFTIOE3 DS    BL1'0'    TIOEWTCT                                       05-IFGSMF14\n 00000037                                   55252+SMFTIOE4 DS    BL1'0'    TIOELINK                                       05-IFGSMF14\n 00000038                                   55253+SMFTIOE5 DS    CL8' '    TIOEDDNM                                       05-IFGSMF14\n 00000040                                   55254+SMFTIOE6 DS    BL3'0'    TIOEJFCB                                       05-IFGSMF14\n 00000043                                   55255+SMFTIOE7 DS    BL1'0'    TIOESTTC                                       05-IFGSMF14\n                                            55256+*\n 00000044                                   55257+SMFJFCB1 DS    XL176'0'  JFCB SEGMENT (ENTIRE JFCB)                     05-IFGSMF14\n                                            55258+*\n                         000000F4           55259+SMFDCBDE EQU   *         DCB/DEB SEGMENT (TAPE AND DASD)                05-IFGSMF14\n 000000F4                                   55260+SMFDCBOR DS    BL2'0'    DCBDSORG                                       05-IFGSMF14\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   94\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000F6                                   55261+SMFDCBRF DS    BL1'0'    DCBRECFM                                       05-IFGSMF14\n 000000F7                                   55262+SMFDCBMF DS    BL2'0'    DCBMACRF                                       05-IFGSMF14\n 000000F9                                   55263+SMFDCBFL DS    BL1'0'    DCBOFLGS                                       05-IFGSMF14\n 000000FA                                   55264+SMFDCBOP DS    BL1'0'    DCBOPTCD                                       05-IFGSMF14\n 000000FB                                   55265+SMF14RV2 DS    BL1'0'    RESERVED                                       05-IFGSMF14\n 000000FC                                   55266+SMFDEBFL DS    BL1'0'    DEBOFLGS                                       05-IFGSMF14\n 000000FD                                   55267+SMFDEBOP DS    BL1'0'    DEBOPATB                                       05-IFGSMF14\n 000000FE                                   55268+SMFDEBVL DS    BL2'0'    DEBVOLSQ                                       05-IFGSMF14\n                         00000100           55269+SMFTDDEX EQU   *         TAPE DCB/DEB EXTENSION                         05-IFGSMF14\n 00000100                                   55270+SMFDCBBL DS    BL4'0'    DCBBLKCT                                       05-IFGSMF14\n 00000104                                   55271+SMFDSSNO DS    BL6'0'    DATA SET SERIAL NUMBER                         05-IFGSMF14\n 0000010A                                   55272+SMF14RV3 DS    BL1'0'    RESERVED                                  @L7A 05-IFGSMF14\n 0000010B                                   55273+SMF14TDA DS    BL1'0'    Tape data set authorization flags         @L7A 05-IFGSMF14\n                         00000080           55274+SMF148WN EQU   X'80'     RACF RC8 chg'd to RC0 (TAPEAUTHRC8=WARN)  @L7A 05-IFGSMF14\n 0000010C                                   55275+SMF14OPD DS    PL4'0000' DATE OF OPEN, PACKED DECIMAL (00YYDDF)    @02M 05-IFGSMF14\n 00000110                00000110 00000100  55276+         ORG   SMFTDDEX  DASD DCB/DEB EXTENSION                    @LDA 05-IFGSMF14\n 00000100                                   55277+SMF14NTU DS    BL4'0'    If SMF14STR=0, relative track & record    @P1C 05-IFGSMF14\n                                            55278+*                        addr of last user block in basic or large @P1C\n                                            55279+*                        format sequential data set. TTR0 if       @P1C\n                                            55280+*                        SMF14LGE=0, TTTR if SMF14LGE=1. If        @P1C\n                                            55281+*                        SMF14STR=1, then TTTT(NUMBER OF TRACKS    @P1C\n                                            55282+*                        ACCUMULATED ACROSS ALL VOLUMES of         @P1C\n                                            55283+*                        extended format data set.)                @P1A\n 00000104                                   55284+SMF14NTR DS    BL4'0'    NUMBER OF TRACKS RELEASED BY DADSM RELSE RTN   05-IFGSMF14\n 00000108                                   55285+SMF14NER DS    BL1'0'    NUMBER OF EXTENTS RELEASED                     05-IFGSMF14\n 00000109                                   55286+SMF14EDI DS    BL1'0'    EDI flag byte                             @L5A 05-IFGSMF14\n                         00000080           55287+SMF14EXT EQU   X'80'     Data set name found in EDI exclusion table@L5A 05-IFGSMF14\n                         00000040           55288+SMF14OPO EQU   X'40'     Data set being opened for output but is   @L5A 05-IFGSMF14\n                                            55289+*                        currently opened for output               @L5A\n                         00000020           55290+SMF14INO EQU   X'20'     Data set being opened for input but is    @L5A 05-IFGSMF14\n                                            55291+*                        currently opened for output               @L5A\n                         00000010           55292+SMF14EPS EQU   X'10'     Application requested EDI processing be   @L5A 05-IFGSMF14\n                                            55293+*                        bypassed\n 0000010A                                   55294+SMF14FG1 DS    BL1'0'    Flag byte                                 @L6A 05-IFGSMF14\n                         00000080           55295+SMF14LGE EQU   X'80'     Large format sequential data set.         @P1C 05-IFGSMF14\n                                            55296+*                         SMF14NTU is in TTTR format.              @P1C\n                         00000040           55297+SMF14EXCPBAM EQU  X'40'  EAV BAM DETECTED ONE OR MORE EXCP OR      @LCA 05-IFGSMF14\n                                            55298+*                         XDAP ISSUANCES-DEB2XEXCP FLAG IS ON      @LCA\n 0000010B                                   55299+SMF14RV4 DS    BL1'0'    RESERVED                                  @L6C 05-IFGSMF14\n 0000010C                                   55300+         DS    PL4'0000' SAME AS SMF14OPD. MUST STAY AT SAME       @02A 05-IFGSMF14\n                                            55301+*                        RELATIVE POSITION FROM BEGINNING OF       @02A\n                                            55302+*                        DCB/DEB EXTENSION FOR BOTH TAPE AND DASD  @02A\n                         00000110           55303+SMF14UCB EQU   *         UCB SEGMENT(ONE FOR EACH UCB FOR THE DATA SET) 05-IFGSMF14\n 00000110                                   55304+SMFUCBDV DS    0BL2'0'   UCBCHAN  DEVICE NUMBER                         05-IFGSMF14\n 00000110                                   55305+SMFUCBCH DS    BL1'0'    UCBCHA                                         05-IFGSMF14\n 00000111                                   55306+SMFUCBUA DS    BL1'0'    UCBUA                                          05-IFGSMF14\n 00000112                                   55307+SMFSRTEV DS    BL6'0'    SRTEVOLI                                       05-IFGSMF14\n 00000118                                   55308+SMFUCBTY DS    BL4'0'    UCBTYP                                         05-IFGSMF14\n 0000011C                                   55309+SMFSRTES DS    BL1'0'    SRTESTAB                                       05-IFGSMF14\n 0000011D                                   55310+SMF14NEX DS    BL1'0'    NUMBER EXTENTS                                 05-IFGSMF14\n 0000011E                                   55311+SMF14RV5 DS    BL2'0'    RESERVED                                       05-IFGSMF14\n 00000120                                   55312+SMFEXCP  DS    BL4'0'    EXCP COUNT SO FAR IN STEP. FOR PDSE DATA SETS  05-IFGSMF14\n                                            55313+*                        THE NUMBER OF 4K BLOCKS THAT WERE READ OR\n                                            55314+*                        WRITTEN. FOR COMPRESSED FORMAT DATA SETS THE\n                                            55315+*                        NUMBER OF PHYSICAL BLOCKS(SEE SMF14CIS FOR\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   95\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55316+*                        THE PHYSICAL BLOCK SIZE) THAT WERE READ OR\n                                            55317+*                        WRITTEN.\n                         00000124           55318+SMFTAPEX EQU   *         SMF TAPE EXTENSION                             05-IFGSMF14\n                                            55319+*        THIS SECTION DESCRIBES THE UCB TAPE EXTENSION SEGMENT\n 00000124                                   55320+SMFSRTEF DS    BL2'0'    SRTEFSCT                                       05-IFGSMF14\n 00000126                                   55321+SMFSRTEQ DS    BL2'0'    SRTEFSEQ                                       05-IFGSMF14\n 00000128                00000128 00000124  55322+         ORG   SMFTAPEX                                                 05-IFGSMF14\n                                            55323+*        THIS SECTION DESCRIBES THE UCB DASD EXTENSION SEGMENT\n 00000124                                   55324+SMF14NTA DS    BL4'0'    NUMBER TRACKS ALLOCATED                        05-IFGSMF14\n                         00000128           55325+SMF14UCE EQU   *         UCB SEGMENT END                                05-IFGSMF14\n                                            55326+*        THIS SECTION DESCRIBES THE DASD INFO ACQUIRED FROM\n                                            55327+*        HIPERSPACE CACHING VIA THE DATA LOOKASIDE FACILITY (DLF)\n                         00000128           55328+SMFHBTCH EQU   *         HIPERBATCH INFORMATION                         05-IFGSMF14\n 00000128                                   55329+SMFIOREQ DS    BL4'0'    NUMBER OF IO REQUESTS ISSUED                   05-IFGSMF14\n 0000012C                                   55330+SMFCHITS DS    BL4'0'    NUMBER OF CACHE HITS                           05-IFGSMF14\n 00000130                                   55331+SMFNMWTS DS    BL4'0'    NUMBER OF WAITS                                05-IFGSMF14\n 00000134                                   55332+SMFPHIOS DS    BL4'0'    NUMBER OF PHYSICAL IO REQUESTS                 05-IFGSMF14\n 00000138                                   55333+SMFCIOS  DS    BL4'0'    NUMBER OF CACHED IO REQUESTS                   05-IFGSMF14\n                         0000013C           55334+SMFHBEND EQU   *         END OF HIPERBATCH INFORMATION                  05-IFGSMF14\n                                            55335+*\n 0000013C                0000013C 00000110  55336+         ORG   SMF14UCB                                                 05-IFGSMF14\n                         00000110           55337+SMFISAMX EQU   *         ISAM EXTENSION SEG.(FOR DCBDSORG = IS)         05-IFGSMF14\n 00000110                                   55338+SMF14RV6 DS    BL2'0'    RESERVED                                       05-IFGSMF14\n 00000112                                   55339+SMFDCBMA DS    BL1'0'    DCBMAC                                         05-IFGSMF14\n 00000113                                   55340+SMFDCBNL DS    BL1'0'    DCBNLEV                                        05-IFGSMF14\n 00000114                                   55341+SMFDCBR3 DS    BL4'0'    DCBRORG3                                       05-IFGSMF14\n 00000118                                   55342+SMFDCBNR DS    BL4'0'    DCBNREC                                        05-IFGSMF14\n 0000011C                                   55343+SMFDCBR2 DS    BL2'0'    DCBRORG2                                       05-IFGSMF14\n 0000011E                                   55344+SMFDCBNO DS    BL2'0'    DCBNOREC                                       05-IFGSMF14\n 00000120                                   55345+SMFDCBR1 DS    BL2'0'    DCBRORG1                                       05-IFGSMF14\n 00000122                                   55346+SMF14RV7 DS    BL1'0'    RESERVED                                       05-IFGSMF14\n 00000123                                   55347+SMFDEBNI DS    BL1'0'    DEBNIEE                                        05-IFGSMF14\n 00000124                                   55348+SMFDEBNP DS    BL1'0'    DEBNPEE                                        05-IFGSMF14\n 00000125                                   55349+SMFDEBNO DS    BL1'0'    DEBNOEE                                        05-IFGSMF14\n 00000126                                   55350+SMFNCYLS DS    BL2'0'    # CYL'S IN INDEPENDENT INDEX AREA              05-IFGSMF14\n 00000128                                   55351+SMFNPCYL DS    BL2'0'    NUMBER OF CYL'S IN PRIME AREA                  05-IFGSMF14\n 0000012A                                   55352+SMFNOCYL DS    BL2'0'    NUMBER OF CYL'S IN INDEPENDENT OVFL AREA       05-IFGSMF14\n 0000012C                0000012C 00000110  55353+         ORG   SMFISAMX                                            @05A 05-IFGSMF14\n                                            55354+*\n                                            55355+*        THIS SECTION DESCRIBES THE EXTENDED INFORMATION SEGMENT.  @L1A\n                                            55356+*        THE EXTENDED INFORMATION SEGMENT CONTAINS A HALFWORD      @L1A\n                                            55357+*        SEGMENT LENGTH FIELD WHICH IS THE LENGTH OF ALL SECTIONS  @L1A\n                                            55358+*        THAT ARE CONTAINED IN IT. EACH SECTION CONTAINS A         @L1A\n                                            55359+*        HALFWORD SECTION LENGTH FIELD, A SECTION TYPE CODE,       @L1A\n                                            55360+*        AND THEN VARIABLE LENGTH INFORMATION DEPENDING UPON       @L1A\n                                            55361+*        THE SECTION TYPE.                                         @05C\n                                            55362+*\n                         00000110           55363+SMF14XIS EQU   *         EXTENDED INFORMATION SEGMENT              @L1A 05-IFGSMF14\n 00000110                                   55364+SMF14SXS DS    HL2'0'    SIZE OF EXTENDED INFO SEGMENT(ALL SECTIONS@L1A 05-IFGSMF14\n                                            55365+*                        INCLUDING THIS LENGTH FIELD)              @L1A\n                                            55366+*\n                                            55367+*        EACH SECTION WITHIN THE EXTENDED INFORMATION SEGMENT      @L1A\n                                            55368+*        BEGINS WITH THE FOLLOWING FOUR BYTES.                     @L1A\n                                            55369+*\n                         00000112           55370+SMF14XIC EQU   *         EXTENDED INFO SECTION CONTROL DATA        @L1A 05-IFGSMF14\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   96\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000112                                   55371+SMF14ESL DS    HL2'0'    LENGTH OF SECTION IN EXTENDED INFORMATION @L1A 05-IFGSMF14\n                                            55372+*                        SEGMENT(INCLUDING THESE FOUR BYTES)       @L1A\n 00000114                                   55373+         DS    HL1'0'    RESERVED                                  @L1A 05-IFGSMF14\n 00000115                                   55374+SMF14STY DS    HL1'0'    SECTION TYPE                              @L1A 05-IFGSMF14\n                         00000001           55375+SMF14XDS EQU   1         COMPRESSED FORMAT D/S TYPE CODE IS 1      @02C 05-IFGSMF14\n                         00000002           55376+SMF14SMS EQU   2         SMS CLASS INFORMATION TYPE CODE IS 2      @03A 05-IFGSMF14\n                         00000003           55377+SMF14STP EQU   3         STEP INFORMATION TYPE CODE IS 3           @L2A 05-IFGSMF14\n                         00000004           55378+SMF14AV4 EQU   4         ANSI VERSION 4 CCSID TYPE CODE IS 4       @L3A 05-IFGSMF14\n                         00000005           55379+SMF14ADC EQU   5         ADDTIONAL DATA SET CHARACTERISTICS TYPE   @L4A 05-IFGSMF14\n                                            55380+*                         CODE IS 5                                @L4A\n                         00000006           55381+SMF14PDSE EQU  6         PDSE STATISTICS TYPE CODE IS 6            @L8A 05-IFGSMF14\n                         00000007           55382+SMF14KEKL EQU  7         KEK LABEL DATA FOR TAPE ENCRYPTION        @L9A 05-IFGSMF14\n                         00000116           55383+SMF14COM EQU   *         COMMON CONTINUATION OF SECTION IN         @L1A 05-IFGSMF14\n                                            55384+*                        EXTENDED INFORMATION SEGMENT.             @L1A\n                                            55385+*\n                                            55386+*        THIS DESCRIBES THE COMPRESSED FORMAT DATA SET SECTION OF  @02C\n                                            55387+*        EXTENDED INFORMATION SEGMENT. THE COMPRESSED FORMAT DATA  @02C\n                                            55388+*        SET SECTION HAS A TYPE CODE OF 1. IT CONTAINS INFORMATION @02C\n                                            55389+*        CONCERNING COMPRESSED FORMAT DATA SETS.                   @02C\n                                            55390+*\n                         00000116           55391+SMF14CSB EQU   *         COMPRESSED FORMAT DATA SET SECTION        @02C 05-IFGSMF14\n 00000116                                   55392+SMF14XF1 DS    BL1'0'    EXTENDED SEGMENT INDICATOR FLAG BYTE 1    @L1A 05-IFGSMF14\n                         00000080           55393+SMF14LBD EQU   X'80'     COMPRESSED FORMAT DATA SET SIZE VALUES    @02C 05-IFGSMF14\n                                            55394+*                        (SMF14CDS AND SMF14UDS) ARE INVALID       @L1A\n                         00000040           55395+SMF14CRJ EQU   X'40'     COMPRESSION OF THIS DATA SET HAS BEEN     @L1A 05-IFGSMF14\n                                            55396+*                        REJECTED                                  @L1A\n                                            55397+*        BITS  2-7       RESERVED                                  @L1A\n 00000117                                   55398+SMF14XF2 DS    BL1'0'    EXTENDED SEGMENT INDICATOR FLAG BYTE 2    @L1A 05-IFGSMF14\n                                            55399+*        BITS  0-7       RESERVED                                  @L1A\n 00000118                                   55400+SMF14CDL DS    BL8'0'    NUMBER OF BYTES OF COMPRESSED DATA READ   @L1A 05-IFGSMF14\n                                            55401+*                        OR WRITTEN SINCE THIS OPEN                @L1A\n 00000120                                   55402+SMF14UDL DS    BL8'0'    NUMBER OF BYTES OF DATA READ OR WRITTEN   @L1A 05-IFGSMF14\n                                            55403+*                        SINCE THIS OPEN(DATA LENGTH PRIOR TO      @L1A\n                                            55404+*                        COMPRESSION)                              @L1A\n 00000128                                   55405+SMF14CDS DS    BL8'0'    COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C 05-IFGSMF14\n                                            55406+*                        POINT-NUMBER OF COMPRESSED USER DATA BYTES@L1A\n 00000130                                   55407+SMF14UDS DS    BL8'0'    COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C 05-IFGSMF14\n                                            55408+*                        POINT-NUMBER OF UNCOMPRESSED USER DATA    @L1A\n                                            55409+*                        BYTES                                     @L1A\n 00000138                                   55410+SMF14CIS DS    BL4'0'    PHYSICAL BLOCK SIZE OF COMPRESSED FORMAT  @02C 05-IFGSMF14\n                                            55411+*                        DATA SET                                  @L1A\n 0000013C                                   55412+SMF14TKL DS    HL2'0'    DICTIONARY TOKEN LENGTH(NOT INCLUDING     @L1A 05-IFGSMF14\n                                            55413+*                        THIS LENGTH FIELD)                        @L1A\n                         00000024           55414+SMF14T36 EQU   36        CURRENTLY TOKEN LENGTH IS 36 ONLY         @L1A 05-IFGSMF14\n 0000013E                                   55415+SMF14TKN DS    BL36'0'   DICTIONARY TOKEN FOR COMPRESSED FORMAT    @02C 05-IFGSMF14\n                                            55416+*                        DATA SET                                  @L1A\n                         00000162           55417+SMF14CSE EQU   *         END OF COMPRESSED FORMAT DATA SET SECTION @02C 05-IFGSMF14\n 00000162                00000162 00000116  55418+         ORG   SMF14COM                                            @L3A 05-IFGSMF14\n                                            55419+*                                                                  @03A\n                                            55420+*              THIS DESCRIBES THE SMS CLASS INFORMATION SECTION OF @03A\n                                            55421+*              THE EXTENDED INFORMATION SEGMENT. THE SMS CLASS     @03A\n                                            55422+*              INFORMATION HAS A TYPE CODE OF 2. IT CONTAINS THE   @03A\n                                            55423+*              FIELDS USED TO STORE THE DATA, STORAGE, AND         @03A\n                                            55424+*              MANAGEMENT CLASS RETURNED FROM THE CASF CALL.       @03A\n                                            55425+*                                                                  @03A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   97\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000116           55426+SMF14SCI EQU   *         SMS CLASS INFORMATION SECTION             @03A 05-IFGSMF14\n 00000116                                   55427+SMF14MCN DS    CL8' '    SMS MANAGEMENT CLASS NAME                 @03A 05-IFGSMF14\n 0000011E                                   55428+SMF14DCN DS    CL8' '    SMS DATA CLASS NAME                       @03A 05-IFGSMF14\n 00000126                                   55429+SMF14SCN DS    CL8' '    SMS STORAGE CLASS NAME                    @03A 05-IFGSMF14\n                         0000012E           55430+SMF14SCE EQU   *                                                   @03A 05-IFGSMF14\n 0000012E                0000012E 00000116  55431+         ORG   SMF14COM                                            @L3A 05-IFGSMF14\n                                            55432+*                                                                  @L2A\n                                            55433+*              THIS DESCRIBES THE STEP INFORMATION SECTION OF THE  @L2A\n                                            55434+*              EXTENDED INFORMATION SEGMENT. THE JOB INFORMATION   @L2A\n                                            55435+*              HAS A TYPE CODE OF 3. IT CONTAINS THE STEP NAME     @L2A\n                                            55436+*              AND ACTIVE PROGRAM NAME OF THE JOB.                 @L2A\n                                            55437+*                                                                  @L2A\n                         00000116           55438+SMF14SPI EQU   *         STEP INFORMATION SECTION                  @L2A 05-IFGSMF14\n 00000116                                   55439+SMF14SPN DS    CL8' '    STEP NAME                                 @L2A 05-IFGSMF14\n 0000011E                                   55440+SMF14PGN DS    CL8' '    ACTIVE PROGRAM NAME                       @L2A 05-IFGSMF14\n                         00000126           55441+SMF14SPE EQU   *         END OF STEP INFORMATION SECTION           @L2A 05-IFGSMF14\n 00000126                00000126 00000116  55442+         ORG   SMF14COM                                            @L3A 05-IFGSMF14\n                                            55443+*                                                                  @L3A\n                                            55444+*              THIS DESCRIBES THE ANSI VERSION 4 CCSID INFORMATION @L3A\n                                            55445+*              SECTION OF THE EXTENDED INFORMATION SEGMENT.        @L3A\n                                            55446+*              THE CCSID INFORMATION  HAS A TYPE OF 4. IT CONTAINS @L3A\n                                            55447+*              THE CCSID BEING USED BY THE APPLICATION, THE        @L3A\n                                            55448+*              CCSID BEING USED TO PROCESS THE VERSION 4 TAPE      @L3A\n                                            55449+*              AND THE CCSID SPECIFIED IN THE TAPE LABELS IF       @L3A\n                                            55450+*              THIS IS EITHER AN IBM VERSION 4 TAPE BEING READ OR  @L3A\n                                            55451+*              AN IBM VERSION 4 TAPE BEING WRITTEN TO WITH         @L3A\n                                            55452+*              DISP=MOD SPECIFIED. THERE ARE ALSO FLAGS DEFINED    @L3A\n                                            55453+*              TO INDICATE WHETHER THE SOURCE OR TARGET CCSID      @L3A\n                                            55454+*              WERE DEFAULTED AND WHETHER THE CCSID SPECIFIED ON   @L3A\n                                            55455+*              THE DD STATEMENT WAS IGNORED.                       @L3A\n                         00000116           55456+SMF14A4I EQU   *         ANSI VERSION 4 CCSID INFORMATION SECTION  @L3A 05-IFGSMF14\n 00000116                                   55457+SMF14CFG DS    BL1'0'    CCSID FLAGS                               @L3A 05-IFGSMF14\n                         00000080           55458+SMF14IBM EQU   X'80'     IBM VERSION 4 CREATED TAPE                @L3A 05-IFGSMF14\n                         00000040           55459+SMF14OUT EQU   X'40'     OPENED FOR OUTPUT NOT DISP=MOD            @L3A 05-IFGSMF14\n                         00000020           55460+SMF14MOD EQU   X'20'     OPENED FOR OUTPUT DISP=MOD                @L3A 05-IFGSMF14\n                         00000010           55461+SMF14UDF EQU   X'10'     USR CCSID DEFAULTED                       @L3A 05-IFGSMF14\n                         00000008           55462+SMF14TDF EQU   X'08'     TAPE CCSID DEFAULTED                      @L3A 05-IFGSMF14\n                         00000004           55463+SMF14IGN EQU   X'04'     TAPE CCSID WAS IGNORED                    @L3A 05-IFGSMF14\n 00000117                                   55464+SMF14USR DS    BL4'0'    CCSID BEING USED BY APPLICATION(SPECIFIED @L3A 05-IFGSMF14\n                                            55465+*                          ON JOB/EXEC STATEMENT OR DEFAULTED)     @L3A\n 0000011B                                   55466+SMF14TPE DS    BL4'0'    CCSID BEING USED TO PROCESS TAPE(SPECIFIED@L3A 05-IFGSMF14\n                                            55467+*                          ON DD STATEMENT OR IN TAPE LABEL)       @L3A\n 0000011F                                   55468+SMF14LBL DS    BL4'0'    CCSID SPECIFIED IN THE TAPE LABELS OF AN  @L3A 05-IFGSMF14\n                                            55469+*                          EXISTING TAPE                           @L3A\n                         00000123           55470+SMF14A4E EQU   *         END OF ANSI V4 CCSID INFORMATION SECTION  @L3A 05-IFGSMF14\n 00000123                00000123 00000116  55471+         ORG   SMF14COM                                            @L4A 05-IFGSMF14\n                                            55472+*                                                                  @L4A\n                                            55473+*              THIS DESCRIBES THE ADDITIONAL DATA SET              @L4A\n                                            55474+*              CHARACTERISTICS SECTION OF THE EXTENDED INFORMATION @L4A\n                                            55475+*              SEGMENT. THIS SECTION HAS A TYPE OF 5. IT CONTAINS  @L4A\n                                            55476+*              ADDITIONAL DATA SET CHARACTERISTICS INFORMATION.    @L4A\n                                            55477+*              CURRENTLY THE ONLY ADDITIONAL INFORMATION IT HAS    @L4A\n                                            55478+*              IS THE BLOCK SIZE IF IT IS A LARGE BLKSIZE VALUE    @L4A\n                                            55479+*              OR IF EXCP IS BEING USED AND THE BLKSIZE WAS        @L4A\n                                            55480+*              SPECIFIED IN THE DCBE.                              @L4A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   98\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55481+*                                                                  @L4A\n                         00000116           55482+SMF14ADI EQU   *         ADDITIONAL D/S CHARACTERISTICS SECTION    @L4A 05-IFGSMF14\n 00000116                                   55483+SMF14BFG DS    0BL2'0'   ADC FLAGS(DEFINES INFORMATION PRESENT)    @LEC 05-IFGSMF14\n 00000116                                   55484+SMF14BFG0 DS BL1'0'      ADC FLAGS BYTE 1                          @LEA 05-IFGSMF14\n                         00000080           55485+SMF14BLK EQU   X'80'     BLOCK SIZE PRESENT                        @L4A 05-IFGSMF14\n                         00000040           55486+SMF14FLGP EQU  X'40'     FLAG FIELD PRESENT                        @L9A 05-IFGSMF14\n                                            55487+*        BIT   2-7       RESERVED                                  @LEC\n 00000117                                   55488+SMF14BFG1 DS BL1'0'      ADC FLAGS BYTE 2                          @LEA 05-IFGSMF14\n                                            55489+*        BIT   8-15      RESERVED                                  @LEA\n 00000118                                   55490+SMF14LBS DS    BL8'0'    BLOCK SIZE VALUE                          @L4A 05-IFGSMF14\n 00000120                                   55491+SMF14FLGS DS   0BL2'0'   FLAGS                                     @LAC 05-IFGSMF14\n 00000120                                   55492+SMF14FLG1 DS   BL1'0'    FLAG BYTE 1                               @LAA 05-IFGSMF14\n                         00000080           55493+SMF14UPF EQU   X'80'     BSAM USER PGFIX OPTION FLAG(DEB2XUPF)     @L9A 05-IFGSMF14\n                         00000040           55494+SMF14EADSCB EQU X'40'    DCBEEADSCBOK FLAG(ON - DCBEADSCB=OK       @LAA 05-IFGSMF14\n                                            55495+*                          SPECIFIED. OFF - DCBEADSCB=OK NOT       @LAA\n                                            55496+*                          SPECIFIED OR NO DCBE)                   @LAA\n                         00000020           55497+SMF14EX31 EQU  X'20'     DCBE SPECIFIED LOC=ANY                    @MXA 05-IFGSMF14\n                         00000010           55498+SMF14XTIO EQU  X'10'     DD ALLOCATED WITH XTIOT                   @MXA 05-IFGSMF14\n                                            55499+*        BIT   4-7       RESERVED                                  @LAC\n 00000121                                   55500+SMF14FLG2 DS   BL1'0'    FLAG BYTE 2                               @LAA 05-IFGSMF14\n                                            55501+*        BIT   0-7       RESERVED                                  @LAA\n 00000122                                   55502+         DS    BL10'0'   RESERVED                                  @L9C 05-IFGSMF14\n                         0000012C           55503+SMF14ADE EQU   *         END OF ADC SECTION                        @L4A 05-IFGSMF14\n 0000012C                0000012C 00000116  55504+         ORG   SMF14COM                                            @L8A 05-IFGSMF14\n                                            55505+*                                                                  @L8A\n                                            55506+*              THIS DESCRIBES THE ADDITIONAL DATA SET              @L8A\n                                            55507+*              CHARACTERISTICS SECTION OF THE EXTENDED INFORMATION @L8A\n                                            55508+*              SEGMENT. THIS SECTION HAS A TYPE OF 6. IT CONTAINS  @L8A\n                                            55509+*              STATISTICAL INFORMATION ABOUT A PDSE.               @L8A\n                                            55510+*                                                                  @L8A\n                         00000116           55511+SMF14PSI EQU   *         PDSE STATISTIC SECTION                    @L8A 05-IFGSMF14\n 00000116                                   55512+SMF14DRD DS    BL4'0'    DIRECTORY READ REQUEST COUNT              @L8A 05-IFGSMF14\n 0000011A                                   55513+SMF14DRDH DS   BL4'0'    DIRECTORY READ HIT COUNT                  @L8A 05-IFGSMF14\n 0000011E                                   55514+SMF14MRD DS    BL4'0'    MEMBER READ REQUEST COUNT                 @L8A 05-IFGSMF14\n 00000122                                   55515+SMF14MRDH DS   BL4'0'    MEMBER READ HIT COUNT                     @L8A 05-IFGSMF14\n 00000126                                   55516+SMF14MCE DS    BL4'0'    MEMBER CACHE ELIGIBLE                     @L8A 05-IFGSMF14\n 0000012A                                   55517+SMF14MST DS    BL4'0'    MEMBER CACHE STOLEN                       @L8A 05-IFGSMF14\n 0000012E                                   55518+SMF14MNC DS    BL4'0'    MEMBER CACHE ELIGIBLE BUT NOT CACHED      @L8A 05-IFGSMF14\n 00000132                                   55519+SMF14MCF DS    BL4'0'    MEMBER CACHE ELIGIBLE BUT CACHE FULL      @L8A 05-IFGSMF14\n                         00000136           55520+SMF14PSE EQU   *         END OF PDSE SECTION                       @L8A 05-IFGSMF14\n 00000136                00000136 00000116  55521+         ORG   SMF14COM                                            @L9A 05-IFGSMF14\n                                            55522+*                                                                  @L9A\n                                            55523+*              THIS DESCRIBES THE KEK LABELS AND ENCODING          @L9A\n                                            55524+*              MECHANISMS FOR A TAPE DATA ENCRYPTED DATA SET.      @L9A\n                                            55525+*              THIS SECTION HAS A TYPE OF 7.                       @L9A\n                                            55526+*                                                                  @L9A\n                         00000116           55527+SMF14ENC EQU   *         TAPE ENCRYPTION DATA SECTION              @L9A 05-IFGSMF14\n 00000116                                   55528+SMF14KL1 DS    CL64' '   KEY LABEL 1                               @L9A 05-IFGSMF14\n 00000156                                   55529+SMF14CD1 DS    CL1' '    ENCODING MECHANISM FOR KEY LABEL 1        @L9A 05-IFGSMF14\n 00000157                                   55530+SMF14KL2 DS    CL64' '   KEY LABEL 2                               @L9A 05-IFGSMF14\n 00000197                                   55531+SMF14CD2 DS    CL1' '    ENCODING MECHANISM FOR KEY LABEL 2        @L9A 05-IFGSMF14\n 00000198                                   55532+SMF14KET DS    BL4'0'    KEY EXCHANGE TIME IN HUNDREDTHS SECONDS.  @0BA 05-IFGSMF14\n                                            55533+*                        THE KEY EXCHANGE (ENCRYPTION OVERHEAD)    @0BA\n                                            55534+*                        TIME IS ONLY APPLICABLE FOR THE SMF 15    @0BA\n                                            55535+*                        OUTPUT RECORD AND ONLY FOR NON-PARALLEL   @0BA\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   99\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55536+*                        OPEN PROCESSING WRITING FILE SEQUENCE 1   @0BA\n                                            55537+*                        FROM LOADPOINT. OTHERWISE THIS VALUE IS   @0BA\n                                            55538+*                        SET TO ZERO.                              @0BA\n                         0000019C           55539+SMF14ENE EQU   *         END OF TAPE ENCRYPTION SECTION            @L9A 05-IFGSMF14\n                                            55540+* Remove Inline Declares                                         99@01D\n                                            55541+*        IFASMFR 30\n                                            55543+*%IFABGN1: ;\n                                            55544+* /*                                                                 */\n                                            55545+* /* METHOD OF ACCESS                                                */\n                                            55546+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            55547+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            55548+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            55549+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            55550+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            55551+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            55552+* /*                                             A DIAGNOSTIC.       */\n                                            55553+* /*                                                                 */\n                                            55554+* /*                                                                 */\n                                            55555+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            55556+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            55557+* /*         RECORDS AS FOLLOWS:                                     */\n                                            55558+* /*                                                                 */\n                                            55559+* /*             MACRO        RECORDS                                */\n                                            55560+* /*            ********      *******                                */\n                                            55561+* /*            IFASMFR1      07-19                                  */\n                                            55562+* /*            IFASMFR2      20-27                                  */\n                                            55563+* /*            IFASMFR3      28-36                                  */\n                                            55564+* /*            IFASMFR4      37-46                                  */\n                                            55565+* /*            IFASMFR5      47-54                                  */\n                                            55566+* /*            IFASMFR6      55-69                                  */\n                                            55567+* /*            IFASMFR9      80-84                              @07C*/\n                                            55568+* /*            IFASMFRA      85-103                             @07C*/\n                                            55569+* /*            IFASMFRB      104-113                                */\n                                            55570+* /*            IFASMFRC      114-123                                */\n                                            55571+* /*            IFASMFRD      124-127                                */\n                                            55572+*%GOTO IFABGN2;   /*\n                                            55573+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            55574+*  REQUIRED FORMAT IS\n                                            55575+*\n                                            55576+*        IFASMFR  &RECTYPE\n                                            55577+*\n                                            55578+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            55579+*\n                                            55581+*  PROPRIETARY STATEMENT:                                             *\n                                            55582+*  **PROPRIETARY_STATEMENT*********************************************\n                                            55583+*                                                                     *\n                                            55584+*                                                                     *\n                                            55585+*   LICENSED MATERIALS - PROPERTY OF IBM                              *\n                                            55586+*   5694-A01 COPYRIGHT IBM CORP. 1977, 2010                           *\n                                            55587+*                                                                     *\n                                            55588+*   STATUS= HBB7770                                                   *\n                                            55589+*                                                                     *\n                                            55590+*  **END_OF_PROPRIETARY_STATEMENT**************************************\n                                            55591+*                                                                     *\n                                            55592+***************************************************************@G742PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  100\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55593+*                                                              @G742PJW\n                                            55594+*        THIS RECORD IS WRITTEN AT NORMAL OR ABNORMAL          @G742PJW\n                                            55595+*        TERMINATION OF THE FOLLOWING:                         @G742PJW\n                                            55596+*            A BATCH JOB STEP                                  @G742PJW\n                                            55597+*            A BATCH JOB                                       @G742PJW\n                                            55598+*            A TSO SESSION                                     @G742PJW\n                                            55599+*            A STARTED TASK                                    @G742PJW\n                                            55600+*                                                              @G742PJW\n                                            55601+*            THE EXPIRATION OF THE ACCOUNTING INTERVAL FOR ANY @G742PJW\n                                            55602+*            OF THE ABOVE WORK CLASSES.                        @G742PJW\n                                            55603+*                                                              @G742PJW\n                                            55604+*        THE RECORD LENGTH IS VARIABLE. MINIMUM OF XXX.        @G742PJW\n                                            55605+*                                                              @G742PJW\n                                            55606+***********************************************************************\n 00000000                00000000 000000B0  55607+SMFRCD30 DSECT                                                 @G742PJW 04-IFASMFR3\n                                            55608+*                                                              @G742PJW\n                                            55609+*        SMF RECORD HEADER SEGMENT                             @G742PJW\n                                            55610+*                                                              @G742PJW\n 00000000                                   55611+         DS    0D                                              @G742PJW 04-IFASMFR3\n 00000000                                   55612+SMF30RPS DS    0CL176' '               FIXED LENGTH HEADER         @LFC 04-IFASMFR3\n 00000000                                   55613+SMF30RHD DS    0CL24' '                RECORD HEADER SECTION       @02C 04-IFASMFR3\n 00000000                                   55614+SMF30LEN DS    BL2'0'                  RECORD LENGTH           @G742PJW 04-IFASMFR3\n 00000002                                   55615+SMF30SEG DS    BL2'0'                  SEGMENT DESCRIPTOR      @G742PJW 04-IFASMFR3\n 00000004 00                                55616+SMF30FLG DC    BL1'0'                  HEADER FLAG BYTE -      @G742PJW 04-IFASMFR3\n                                            55617+*                                      SYSTEM INDICATOR\n                                            55618+*                                      BIT 0 - SUBSYSTEM IDENTIFICATION\n                                            55619+*                                              FOLLOWS SYSTEM\n                                            55620+*                                              IDENTIFICATION\n                                            55621+*                                      BIT 1 - SUBTYPES USED       @D7A\n                                            55622+*                                      BIT 2   RESERVED            @DOC\n                                            55623+*                                      BIT 3-6 VERSION INDICATORS  @D2C\n                                            55624+*                                                                 3@D2D\n                                            55625+*                                      BIT 7 - RESERVED            @D2C\n                                            55626+*                                      See 'Standard SMF Record    @D2C\n                                            55627+*                                      Header' for details.        @D2C\n 00000005 00                                55628+SMF30RTY DC    BL1'0'                  RECORD TYPE 30          @G742PJW 04-IFASMFR3\n 00000006 40404040                          55629+SMF30TME DC    CL4' '                  TIME RECORD WAS MOVED            04-IFASMFR3\n                                            55630+*                                      TO SMF BUFFER, IN HUNDREDTHS\n                                            55631+*                                      OF A SECOND.            @VS49840\n 0000000A 0000000C                          55632+SMF30DTE DC    PL4'0000'               DATE THAT THE RECORD             04-IFASMFR3\n                                            55633+*                                      WAS MOVED TO THE SMF BUFFER,\n                                            55634+*                                      IN THE FORM OcyydddF(WHERE\n                                            55635+*                                      F IS THE SIGN). FOR A TSO\n                                            55636+*                                      SESSION, THE DATE IS THE LOGOFF\n                                            55637+*                                      DATE.                   @G742PJW\n 0000000E 40404040                          55638+SMF30SID DC    CL4' '                  SYSTEM IDENTIFICATION   @G742PJW 04-IFASMFR3\n 00000012 F0404040                          55639+SMF30WID DC    CL4'0'     OUCBSUBN     SUBSYSTEM IDENTIFIER    @G743PJW 04-IFASMFR3\n 00000016 0001                              55640+SMF30STP DC    BL2'01'                 RECORD SUBTYPE          @G860P27 04-IFASMFR3\n                                            55641+*\n                                            55642+*        SELF DEFINING SECTION                                 @G742PJW\n                                            55643+*\n 00000018                                   55644+SMF30SDS DS    0CL152' '              SELF DEFINING SECTION        @LFC 04-IFASMFR3\n 00000018                                   55645+SMF30SOF DS    F                      OFFSET TO SUBSYSTEM SEGTION       04-IFASMFR3\n                                            55646+*                                     FROM START OF RECORD, INCLUDING\n                                            55647+*                                     THE RDW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  101\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55648+*                                                              @VS49902\n 0000001C 0000                              55649+SMF30SLN DC    BL2'0'                 LENGTH OF SUBSYSTEM SECTION       04-IFASMFR3\n                                            55650+*                                                              @G742PJW\n 0000001E 0000                              55651+SMF30SON DC    BL2'0'                 NUMBER OF SUBSYSTEM SECTIONS      04-IFASMFR3\n                                            55652+*                                                              @G742PJW\n 00000020                                   55653+SMF30IOF DS    F                      OFFSET TO IDENTIFICATION          04-IFASMFR3\n                                            55654+*                                     SECTION FROM START OF RECORD,\n                                            55655+*                                     INCLUDING THE RDW        @VS49902\n 00000024 0000                              55656+SMF30ILN DC    BL2'0'                 LENGTH OF IDENTIFICATION          04-IFASMFR3\n                                            55657+*                                     SECTION                  @G742PJW\n 00000026 0000                              55658+SMF30ION DC    BL2'0'                 NUMBER OF IDENTIFICATION          04-IFASMFR3\n                                            55659+*                                     SECTIONS                 @G742PJW\n 00000028                                   55660+SMF30UOF DS    F                      OFFSET TO I/O ACTIVITY SECTION    04-IFASMFR3\n                                            55661+*                                     FROM START OF RECORD, INCLUDING\n                                            55662+*                                     THE RDW                  @VS49902\n 0000002C 0000                              55663+SMF30ULN DC    BL2'0'                 LENGTH OF I/O ACTIVITY SECTION    04-IFASMFR3\n                                            55664+*                                                              @G742PJW\n 0000002E 0000                              55665+SMF30UON DC    BL2'0'                 NUMBER OF I/O ACTIVITY SECTIONS   04-IFASMFR3\n                                            55666+*                                                              @G742PJW\n 00000030                                   55667+SMF30TOF DS    F                      OFFSET TO COMPLETION SECTION      04-IFASMFR3\n                                            55668+*                                     FROM START OF RECORD, INCLUDING\n                                            55669+*                                     THE RDW                  @VS49902\n 00000034 0000                              55670+SMF30TLN DC    BL2'0'                 LENGTH OF COMPLETION SECTION      04-IFASMFR3\n                                            55671+*                                                              @VS49902\n 00000036 0000                              55672+SMF30TON DC    BL2'0'                 NUMBER OF COMPLETION SECTIONS     04-IFASMFR3\n                                            55673+*                                                              @G742PJW\n 00000038                                   55674+SMF30COF DS    F                      OFFSET TO PROCESSOR SECTION       04-IFASMFR3\n                                            55675+*                                     FROM START OF RECORD, INCLUDING\n                                            55676+*                                     THE RDW                  @VS49902\n 0000003C 0000                              55677+SMF30CLN DC    BL2'0'                 LENGTH OF PROCESSOR SECTION       04-IFASMFR3\n                                            55678+*                                                              @G742PJW\n 0000003E 0000                              55679+SMF30CON DC    BL2'0'                 NUMBER OF PROCESSOR SECTIONS      04-IFASMFR3\n                                            55680+*                                                              @G742PJW\n 00000040                                   55681+SMF30AOF DS    F                      OFFSET TO ACCOUNTING SECTION      04-IFASMFR3\n                                            55682+*                                     FROM START OF RECORD, INCLUDING\n                                            55683+*                                     THE RDW                  @VS49902\n 00000044 0000                              55684+SMF30ALN DC    BL2'0'                 LENGTH OF ACCOUNTING SECTION      04-IFASMFR3\n                                            55685+*                                                              @G742PJW\n 00000046 0000                              55686+SMF30AON DC    BL2'0'                 NUMBER OF ACCOUNTING SECTIONS     04-IFASMFR3\n                                            55687+*                                                              @G742PJW\n 00000048                                   55688+SMF30ROF DS    F                      OFFSET TO STORAGE SECTION         04-IFASMFR3\n                                            55689+*                                     FROM START OF RECORD, INCLUDING\n                                            55690+*                                     THE RDW                  @VS49902\n 0000004C 0000                              55691+SMF30RLN DC    BL2'0'                 LENGTH OF STORAGE SECTION         04-IFASMFR3\n                                            55692+*                                                              @G742PJW\n 0000004E 0000                              55693+SMF30RON DC    BL2'0'                 NUMBER OF STORAGE SECTIONS        04-IFASMFR3\n                                            55694+*                                                              @G742PJW\n 00000050                                   55695+SMF30POF DS    F                      OFFSET TO PERFORMANCE SECTION     04-IFASMFR3\n                                            55696+*                                     FROM START OF RECORD, INCLUDING\n                                            55697+*                                     THE RDW                  @VS49902\n 00000054 0000                              55698+SMF30PLN DC    BL2'0'                 LENGTH OF PERFORMANCE SECTIONS    04-IFASMFR3\n                                            55699+*                                                              @G742PJW\n 00000056 0000                              55700+SMF30PON DC    BL2'0'                 NUMBER OF PERFORMANCE SECTIONS    04-IFASMFR3\n                                            55701+*                                                              @G742PJW\n 00000058                                   55702+SMF30OOF DS    F                      OFFSET TO OPERATOR SECTION        04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  102\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55703+*                                     FROM START OF RECORD, INCLUDING\n                                            55704+*                                     THE RDW                  @VS49902\n 0000005C 0000                              55705+SMF30OLN DC    BL2'0'                 LENGTH OF OPERATOR SECTION        04-IFASMFR3\n                                            55706+*                                                              @G742PJW\n 0000005E 0000                              55707+SMF30OON DC    BL2'0'                 NUMBER OF OPERATOR SECTIONS       04-IFASMFR3\n                                            55708+*                                                              @G742PJW\n 00000060                                   55709+SMF30EOF DS    F                      OFFSET TO EXCP SECTION            04-IFASMFR3\n                                            55710+*                                     FROM START OF RECORD, INCLUDING\n                                            55711+*                                     THE RDW                  @VS49902\n 00000064 0000                              55712+SMF30ELN DC    BL2'0'                 LENGTH OF EXCP SECTIONS IN THIS   04-IFASMFR3\n                                            55713+*                                     RECORD                   @VS49902\n 00000066 0000                              55714+SMF30EON DC    BL2'0'                 NUMBER OF EXCP SECTIONS IN THIS   04-IFASMFR3\n                                            55715+*                                     RECORD                   @VS49902\n 00000068 0000                              55716+SMF30EOR DC    XL2'0'                 NUMBER OF EXCP SEGMENTS IN        04-IFASMFR3\n                                            55717+*                                     SUBSEQUENT RECORDS. WHEN THIS\n                                            55718+*                                     NUMBER EXCEEDS TWO BYTES, IT IS\n                                            55719+*                                     INVALID. SEE SMF30EOS FOR THE\n                                            55720+*                                     CORRECT VALUE.               @01C\n 0000006A 0000                              55721+SMF30RVD DC    BL2'0'                 RESERVED                     @01C 04-IFASMFR3\n 0000006C 00000000                          55722+SMF30EOS DC    BL4'0'                 NUMBER OF EXCP SECTIONS           04-IFASMFR3\n                                            55723+*                                     IN SUBSEQUENT RECORDS        @01C\n 00000070 00000000                          55724+SMF30DRO DC    BL4'0'                 Offset of APPC/MVS                04-IFASMFR3\n                                            55725+*                                     Resource Section from start of\n                                            55726+*                                     record, including the RDW    @04C\n 00000074 0000                              55727+SMF30DRL DC    BL2'0'                 Length of APPC/MVS                04-IFASMFR3\n                                            55728+*                                     Resource Section             @04A\n 00000076 0000                              55729+SMF30DRN DC    BL2'0'                 Number of APPC/MVS                04-IFASMFR3\n                                            55730+*                                     Resource Sections in this record.\n                                            55731+*                                     The number should be 0 or 1. @04A\n                                            55732+*                                                                 2@DPD\n 00000078 00000000                          55733+SMF30ARO DC    BL4'0'                 Offset of APPC/MVS Cumulative     04-IFASMFR3\n                                            55734+*                                     Resource Section from start of\n                                            55735+*                                     record, including the RDW    @LMA\n 0000007C 0000                              55736+SMF30ARL DC    BL2'0'                 Length of APPC/MVS Cumulative     04-IFASMFR3\n                                            55737+*                                     Resource Section             @LMA\n 0000007E 0000                              55738+SMF30ARN DC    BL2'0'                 Number of APPC/MVS Cumulative     04-IFASMFR3\n                                            55739+*                                     Resource Sections in this record.\n                                            55740+*                                     The number should be 0 or 1. @LMA\n 00000080 00000000                          55741+SMF30OPO DC    BL4'0'                 Offset of OpenMVS Process         04-IFASMFR3\n                                            55742+*                                     Sections                     @0OC\n 00000084 0000                              55743+SMF30OPL DC    BL2'0'                 Length of OpenMVS Process         04-IFASMFR3\n                                            55744+*                                     Section                      @0OC\n 00000086 0000                              55745+SMF30OPN DC    BL2'0'                 Number of OpenMVS Process         04-IFASMFR3\n                                            55746+*                                     Sections in This Record      @0OC\n 00000088 00000000                          55747+SMF30OPM DC    BL4'0'                 Number of OpenMVS Process         04-IFASMFR3\n                                            55748+*                                     Sections in Subsequent Records\n                                            55749+*                                                                  @0OC\n 0000008C 00000000                          55750+SMF30UDO DC    F'0'                   Offset of Usage Sections     @06A 04-IFASMFR3\n 00000090 0000                              55751+SMF30UDL DC    XL2'0'                 Length of Usage Section      @06A 04-IFASMFR3\n 00000092 0000                              55752+SMF30UDN DC    XL2'0'                 Number of Usage Sections in  @06C 04-IFASMFR3\n                                            55753+*                                     This Record                  @06A\n 00000094 00000000                          55754+SMF30UDS DC    F'0'                   Number of Usage Sections in  @06C 04-IFASMFR3\n                                            55755+*                                     Subsequent Records           @06A\n 00000098 00000000                          55756+SMF30RMO DC    BL4'0'                 Offset of first ARM Section       04-IFASMFR3\n                                            55757+*                                     from beginning of record\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  103\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55758+*                                     (including the RDW)          @L3A\n 0000009C 0000                              55759+SMF30RML DC    BL2'0'                 Length of each ARM Section        04-IFASMFR3\n                                            55760+*                                     on the record                @L3A\n 0000009E 0000                              55761+SMF30RMN DC    BL2'0'                 Number of ARM sections on         04-IFASMFR3\n                                            55762+*                                     this record                  @L3A\n 000000A0 00000000                          55763+SMF30RMS DC    BL4'0'                 Number of ARM sections on         04-IFASMFR3\n                                            55764+*                                     subsequent records           @L3A\n 000000A4 00000000                          55765+SMF30MOF DC    BL4'0'                 Offset to MultiSystem Enclave     04-IFASMFR3\n                                            55766+*                                     Remote System Data section.  @LFA\n 000000A8 0000                              55767+SMF30MLN DC    BL2'0'                 Length of MultiSystem Enclave     04-IFASMFR3\n                                            55768+*                                     Remote System Data section   @LFA\n 000000AA 0000                              55769+SMF30MNO DC    BL2'0'                 Number of MultiSystem Enclave     04-IFASMFR3\n                                            55770+*                                     Remote System Data sections\n                                            55771+*                                     in this record.              @LFA\n 000000AC 00000000                          55772+SMF30MOS DC    BL4'0'                 Number of MultiSystem Enclave     04-IFASMFR3\n                                            55773+*                                     Remote System Data sections\n                                            55774+*                                     in subsequent records.       @LFA\n                                            55775+*\n                                            55776+*        PRODUCT OR SUBSYSTEM SECTION                          @G742PJW\n                                            55777+*\n 00000000                00000000 00000026  55778+SMF30PSS DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              55779+SMF30TYP DC    BL2'0'            SUB TYPE IDENTIFICATION FOR            04-IFASMFR3\n                                            55780+*                                  TYPE 30                     @G742PJW\n                                            55781+*                                  1 = JOB START               @G742PJW\n                                            55782+*                                  2 = INTERVAL RECORD         @G742PJW\n                                            55783+*                                  3 = STEP TERMINATION DELTA\n                                            55784+*                                  PRODUCED ONLY WHEN INTERVAL\n                                            55785+*                                  ACCOUNTING IS SPECIFIED. THE DATA\n                                            55786+*                                  REPRESENTS ACTIVITY SINCE THE LAST\n                                            55787+*                                  INTERVAL WAS WRITTEN.       @G742PJW\n                                            55788+*                                  4 = STEP TOTAL              @G744PJW\n                                            55789+*                                  5 = JOB TERMINATION         @G742PJW\n                                            55790+*                                  6 = SYSTEM ADDRESS SPACE    @G742PJW\n 00000002 F040                              55791+SMF30RS1 DC    CL2'0'            RESERVED                      @G744PJW 04-IFASMFR3\n 00000004 F040                              55792+SMF30RVN DC    CL2'0'            RECORD VERSION NUMBER C'05'       @D2C 04-IFASMFR3\n                                            55793+*                                VALUE          MEANING\n                                            55794+*\n                                            55795+*                                  5            MVS/SP VERSION 5\n                                            55796+*                                  4            MVS/SP VERSION 4\n                                            55797+*                                  3            MVS/SP VERSION 3\n                                            55798+*                                  2            MVS/SP VERSION 2\n                                            55799+*                                  1            VS2\n 00000006 F040404040404040                  55800+SMF30PNM DC    CL8'0'            SUBSYTEM OR PRODUCT NAME- SMF @G742PJW 04-IFASMFR3\n 0000000E 4040404040404040                  55801+SMF30OSL DC    CL8' '            MVS PRODUCT LEVEL                 @DOA 04-IFASMFR3\n 00000016 4040404040404040                  55802+SMF30SYN DC    CL8' '            Current System Name Value         @L3A 04-IFASMFR3\n                                            55803+*                                (from SYSNAME Parmlib Option)     @L3A\n 0000001E 4040404040404040                  55804+SMF30SYP DC    CL8' '            Sysplex name                      @05A 04-IFASMFR3\n                                            55805+*\n                                            55806+*        JOB / SESSION IDENTIFICATION                          @G742PJW\n                                            55807+*\n 00000000                00000000 000000BA  55808+SMF30ID  DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 4040404040404040                  55809+SMF30JBN DC    CL8' '      JMRJOB      JOB OR SESSION NAME. THE JOB     04-IFASMFR3\n                                            55810+*                                      NAME AND THE TIME AND DATE THAT\n                                            55811+*                                      THE READER RECOGNIZED THE JOB\n                                            55812+*                                      CARD FOR THIS JOB CONSTITUTE\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  104\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55813+*                                      THE JOB LOG IDENTIFICATION.\n                                            55814+*                                                              @G742PJW\n 00000008 4040404040404040                  55815+SMF30PGM DC    CL8' '      SCTPGMNM    PROGRAM NAME (TAKEN FROM PGM=    04-IFASMFR3\n                                            55816+*                                      PARAMETER ON EXEC CARD.) IF\n                                            55817+*                                      A BACKWARD REFERENCE WAS USED\n                                            55818+*                                      (SCTTYPE EQUALS X'80') THEN\n                                            55819+*                                      THIS FIELD CONTAINS PGM=*.DD.\n                                            55820+*                                                              @G742PJW\n 00000010 4040404040404040                  55821+SMF30STM DC    CL8' '      SCTSNAME    STEP NAME (TAKEN FROM NAME ON    04-IFASMFR3\n                                            55822+*                                      EXEC CARD)              @G742PJW\n 00000018 4040404040404040                  55823+SMF30UIF DC    CL8' '      JMRUSEID    User identification (taken       04-IFASMFR3\n                                            55824+*                                      from common exit parameter\n                                            55825+*                                      area, not from USER= parameter\n                                            55826+*                                      on the job statement)       @0FC\n 00000020 4040404040404040                  55827+SMF30JNM DC    CL8' '      SSIB        JES JOB IDENTIFIER      @G742PJW 04-IFASMFR3\n 00000028 0000                              55828+SMF30STN DC    BL2'0'      SCTSNUMB    STEP NUMBER (FIRST STEP = 1,     04-IFASMFR3\n                                            55829+*                                      ETC.)                       @LQC\n 0000002A F0                                55830+SMF30CLS DC    CL1'0'      JCTJCSMF    JOB CLASS. ZERO FOR TSO SESSION  04-IFASMFR3\n                                            55831+*                                      OR STARTED TASKS        @G742PJW\n 0000002B 00                                55832+SMF30JF1 DC    BL1'0'                  Job / Session ID section flag    04-IFASMFR3\n                                            55833+*                                                                  @PBC\n                         00000080           55834+SMF30PGF EQU  X'80'                    SMF30PGN is invalid         @PBA 04-IFASMFR3\n 0000002C 0000                              55835+SMF30PGN DC    BL2'0'      OUCBNPG     Job performance group number     04-IFASMFR3\n                                            55836+*                                      - Valid only if workload    @L2A\n                                            55837+*                                        management compatibility  @L2A\n                                            55838+*                                        mode in effect.           @L2A\n                                            55839+*                                      - Zero if workload          @L2A\n                                            55840+*                                        management goal mode in   @L2A\n                                            55841+*                                        effect when the Type 30   @L2A\n                                            55842+*                                        is generated.             @L2A\n                                            55843+*                                                              @G742PJW\n 0000002E 0000                              55844+SMF30JPT DC    BL2'0'      JCTJPRTY    JES INPUT PRIORITY. IF NO VALUE  04-IFASMFR3\n                                            55845+*                                      IS SPECIFIED FOR THE PRTY\n                                            55846+*                                      PARAMETER ON THE JOB CARD, THIS\n                                            55847+*                                      FIELD CONTAINS:\n                                            55848+*                                        * FOR JES3, THE DEFAULT\n                                            55849+*                                          PRIORITY SPECIFIED ON THE\n                                            55850+*                                          JES3 STANDARDS\n                                            55851+*                                          INITIALIZATION CARD\n                                            55852+*                                        * FOR JES2, A ZERO\n                                            55853+*                            NOTE: THAT JES2 DOES NOT USE THE PRIORITY\n                                            55854+*                                  VALUE REPORTED IN THE FIELD. (THE\n                                            55855+*                                  JES2 JOB SELECTION PRIORITY IS\n                                            55856+*                                  REQUESTED VIA THE JES2 PRIORITY\n                                            55857+*                                  CONTROL STATEMENT.)\n 00000030 00000000                          55858+SMF30AST DC    F'0'        TCTAST      DEVICE ALLOCATION START TIME     04-IFASMFR3\n                                            55859+*                                      IN HUNDREDTHS OF A SECOND\n                                            55860+*                                                              @G742PJW\n 00000034 00000000                          55861+SMF30PPS DC    F'0'        TCTPPST     PROBLEM PROGRAM START TIME       04-IFASMFR3\n                                            55862+*                                      IN HUNDREDTHS OF A SECOND\n                                            55863+*                                                              @G742PJW\n 00000038 00000000                          55864+SMF30SIT DC    F'0'        JCTJMRSS    TIME, IN HUNDREDTHS OF A SECOND  04-IFASMFR3\n                                            55865+*                                      INITIATOR SELECTED THIS STEP\n                                            55866+*                                      OR JOB                  @G742PJW\n 0000003C 0000000C                          55867+SMF30STD DC    PL4'0000'   JCTSSD      DATE INITIATOR SELECTED THIS     04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  105\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55868+*                                      STEP, IN THE FORM OcyydddF\n                                            55869+*                                      WHERE F IS THE SIGN     @G742PJW\n 00000040 00000000                          55870+SMF30RST DC    F'0'        JMRENTRY    TIME, IN HUNDREDTHS OF A SECOND  04-IFASMFR3\n                                            55871+*                                      READER RECOGNIZED THE JOB CARD\n                                            55872+*                                      FOR THIS JOB            @G742PJW\n 00000044 0000000C                          55873+SMF30RSD DC    PL4'0000'   JMREDATE    DATE READER RECOGNIZED THE JOB   04-IFASMFR3\n                                            55874+*                                      CARD FOR THIS JOB, IN THE FORM\n                                            55875+*                                      OcyydddF (WHERE F IS THE SIGN).\n                                            55876+*                                                              @G744PJW\n 00000048                                   55877+SMF30RDE DC    0CL8'0'                 READER END TIME/DATE    @G744PJW 04-IFASMFR3\n                                            55878+*\n 00000048 00000000                          55879+SMF30RET DC    F'0'                    TIME, IN HUNDREDTHS OF A SECOND, 04-IFASMFR3\n                                            55880+*                                      READER RECOGNIZED THE END OF THE\n                                            55881+*                                      JOB OR STARTED TASK (READER STOP\n                                            55882+*                                      TIME). FOR TSO THIS IS THE LOGON\n                                            55883+*                                      ENQUEUE TIME.\n 0000004C 0000000C                          55884+SMF30RED DC    PL4'0000'               DATE READER RECOGNIZED THE END   04-IFASMFR3\n                                            55885+*                                      OF THE BATCH JOB OR STARTED TASK\n                                            55886+*                                      (READER STOP DATE), IN THE FORM\n                                            55887+*                                      OcyydddF (WHERE F IS THE SIGN).\n                                            55888+*                                      FOR TSO IT IS THE LOGON ENQUEUE\n                                            55889+*                                      DATE.                   @G742PJW\n 00000050 4040404040404040                  55890+SMF30USR DC    CL20' '     ACTPRGNM    PROGRAMMERS NAME        @G742PJW 04-IFASMFR3\n 00000064 4040404040404040                  55891+SMF30GRP DC    CL8' '      ACEEGRPN    RACF GROUP ID. 0=RACF NOT ACTIVE 04-IFASMFR3\n                                            55892+*                                                              @G742PJW\n 0000006C 4040404040404040                  55893+SMF30RUD DC    CL8' '      ACEEUSRI    RACF USER ID. 0=RACF NOT ACTIVE  04-IFASMFR3\n                                            55894+*                                                              @G742PJW\n 00000074 4040404040404040                  55895+SMF30TID DC    CL8' '      ACEETRMF    RACF TERMINAL ID. THE FIELD IS   04-IFASMFR3\n                                            55896+*                                      ZERO IF RACF IS NOT ACTIVE OR\n                                            55897+*                                      THE USER IS NOT A TERMINAL USER.\n                                            55898+*                                                              @G724PJW\n 0000007C 4040404040404040                  55899+SMF30TSN DC    CL8' '      TSBTRMID    TERMINAL SYMBOLIC NAME      @DCA 04-IFASMFR3\n 00000084 4040404040404040                  55900+SMF30PSN DC    CL8' '      SCTSCLPC    THE NAME OF THE STEP THAT        04-IFASMFR3\n                                            55901+*                                      INVOKED THE PROCEDURE. THIS\n                                            55902+*                                      FIELD WILL BE BLANKS WHEN STEP\n                                            55903+*                                      IS NOT PART OF AN EXPANDED\n                                            55904+*                                      PROCEDURE.                  @08A\n 0000008C 4040404040404040                  55905+SMF30CL8 DC    CL8' '      LCTCLASS    8-CHARACTER JOB CLASS.  BLANK    04-IFASMFR3\n                                            55906+*                             OR       FOR TSO SESSION OR STARTED TASKS\n                                            55907+*                          JCTJCSMF    IF JES3 JOB CLASS SPECIFIED THEN\n                                            55908+*                                      OBTAINED FROM LCTCLASS, ELSE\n                                            55909+*                                      OBTAINED FROM JCTJCSMF.     @0LA\n 00000094 4040404040404040                  55910+SMF30ISS DC    CL8' '      TCTISS      Interval Start Time for          04-IFASMFR3\n                                            55911+*                                      Subtype 2 and 3 Records\n                                            55912+*                                      (STCK Format)               @DVA\n 0000009C 4040404040404040                  55913+SMF30IET DC    CL8' '      SMCXINTE    Interval End Time for            04-IFASMFR3\n                                            55914+*                                      Subtype 2, 3 and 6\n                                            55915+*                                      records. (STCK Format)      @LRA\n 000000A4 00000000                          55916+SMF30SSN DC    F'0'        SCTSSNUM    Sub-Step Number             @LQA 04-IFASMFR3\n 000000A8 4040404040404040                  55917+SMF30EXN DC    CL16' '                 OpenMVS Exec'ed program     @L5A 04-IFASMFR3\n                                            55918+*                                      name                        @L5A\n 000000B8 0000                              55919+SMF30ASI DC    H'0'        ASCBASID    Address space identifier    @PHA 04-IFASMFR3\n                                            55920+*\n                                            55921+*        I/O ACTIVITY SEGMENT                                  @G742PJW\n                                            55922+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  106\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000000                00000000 0000004C  55923+SMF30URA DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 00000000                          55924+SMF30INP DC    F'0'        SCTSMF      NUMBER OF CARD IMAGE RECORDS IN  04-IFASMFR3\n                                            55925+*                                      DD DATE AND DD * DATA SETS\n                                            55926+*                                      READ BY THE READER FOR THE MAP.\n                                            55927+*                                      THIS FIELD IS NOT SET FOR\n                                            55928+*                                      SUBTYPES 2 OR 3.        @G724PJW\n 00000004 00000000                          55929+SMF30TEP DC    F'0'   D    ASCBIOSC    Total blocks transferred         04-IFASMFR3\n                                            55930+*                                      (Accumulated EXCP counts -\n                                            55931+*                                       valid up to 'FFFFFFFE'x,\n                                            55932+*                                       zero and invalid when\n                                            55933+*                                       SMF30TEF is set)           @0EC\n 00000008 00000000                          55934+SMF30TPT DC    F'0'   D    TCTLOUT     NUMBER OF TPUTS FOR A TSO        04-IFASMFR3\n                                            55935+*                                      SESSION. IF A BATCH JOB OR\n                                            55936+*                                      STARTED TASK SUCCESSFULLY\n                                            55937+*                                      PROCESSES TPUTs, THIS FIELD\n                                            55938+*                                      MIGHT BE NON-ZERO FOR BATCH JOBS\n                                            55939+*                                      OR STARTED TASKS.       @G724PJW\n 0000000C 00000000                          55940+SMF30TGT DC    F'0'   D    TCTLIN      NUMBER OF TGETS FOR A TSO        04-IFASMFR3\n                                            55941+*                                      SESSION.                @G742PJW\n 00000010 40                                55942+SMF30RDR DC    CL1' '      JMRRDR      READER DEVICE CLASS     @G742PJW 04-IFASMFR3\n                                            55943+*\n                                            55944+*                                      0-FOR TSO SESSIONS OR STARTED\n                                            55945+*                                        TASKS\n                                            55946+*\n 00000011 40                                55947+SMF30RDT DC    CL1' '      JMRRDR      READER DEVICE TYPE      @G742PJW 04-IFASMFR3\n                                            55948+*\n                                            55949+*                                      0-FOR TSO SESSIONS OR STARTED\n                                            55950+*                                        TASKS\n                                            55951+*\n 00000012 00000000                          55952+SMF30TCN DC    BL4'0'      ASCBDCTI    TOTAL DEVICE CONNECT TIME FOR    04-IFASMFR3\n                                            55953+*                                      THIS ADDRESS SPACE. FOR A DIV\n                                            55954+*                                      OBJECT, THIS FIELD CONTAINS\n                                            55955+*                                      TOTAL DEVICE CONNECT TIME FOR\n                                            55956+*                                      READS, WRITES AND RE-READS.\n                                            55957+*                                                              @G860P27\n 00000016 00                                55958+SMF30DCF DC    BL1'0'                   DEVICE CONNECT FLAGS   @ZMC2889 04-IFASMFR3\n                         00000080           55959+SMF30MFL EQU   X'80'                    DEVICE CONNECT TIME MAY BE      04-IFASMFR3\n                                            55960+*                                       INCORRECT              @G860P27\n                                            55961+*\n                                            55962+*                                       IF THIS FLAG IS SET, SRM\n                                            55963+*                                       DISABLED THE CHANNEL\n                                            55964+*                                       MEASUREMENT WHILE THE JOB WAS\n                                            55965+*                                       RUNNING. IF CHANNEL\n                                            55966+*                                       MEASUREMENT IS DISABLED, DEVICE\n                                            55967+*                                       CONNECT TIME IS NOT RECORDED.\n                                            55968+*                                       THUS, IF THIS BIT IS SET,\n                                            55969+*                                       SMF30TCN AND SMF30DCT REFLECT\n                                            55970+*                                       LESS THAN THE ACTUAL TOTAL\n                                            55971+*                                       CONNECT TIME.\n                         00000040           55972+SMF30IIN EQU   X'40'                    The following fields contain    04-IFASMFR3\n                                            55973+*                                       incomplete data: (SRM could\n                                            55974+*                                       not deliver deltas or values\n                                            55975+*                                       for this interval)\n                                            55976+*                                       SMF30AIC  SMF30EIC\n                                            55977+*                                       SMF30AID  SMF30EID\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  107\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           55978+*                                       SMF30AIW  SMF30EIW\n                                            55979+*                                       SMF30AIS  SMF30EIS         @PBA\n                         00000020           55980+SMF30TEF EQU   X'20'                    SMF30TEP invalid when set  @0EA 04-IFASMFR3\n 00000017 F04040                            55981+SMF30RS2 DC    CL3'0'                   RESERVED               @ZMC2889 04-IFASMFR3\n 0000001A 0000                              55982+SMF30RSB DC    H'0'                     RESERVED FOR BOUNDARY      @D9A 04-IFASMFR3\n                                            55983+*                                        ALIGNMENT                 @D9A\n 0000001C 00000000                          55984+SMF30TRR DC    F'0'        ASSBASRR-   TOTAL ADDRESS SPACE RE-READ @D9A 04-IFASMFR3\n                                            55985+*                           TCTRRCT    COUNT.                      @D9A\n 00000020 00000000                          55986+SMF30AIC DC    F'0'                    DASD I/O connect time for        04-IFASMFR3\n                                            55987+*                                      address space plus dependent\n                                            55988+*                                      enclaves\n                                            55989+*                                      in 128-microsecond units    @DWA\n 00000024 00000000                          55990+SMF30AID DC    F'0'                    DASD I/O disconnect time for     04-IFASMFR3\n                                            55991+*                                      address space plus dependent\n                                            55992+*                                      enclaves\n                                            55993+*                                      in 128-microsecond units    @DWA\n 00000028 00000000                          55994+SMF30AIW DC    F'0'                    DASD I/O pending plus control    04-IFASMFR3\n                                            55995+*                                      unit queue time for\n                                            55996+*                                      address space plus dependent\n                                            55997+*                                      enclaves\n                                            55998+*                                      in 128-microsecond units    @DWA\n 0000002C 00000000                          55999+SMF30AIS DC    F'0'                    DASD I/O start subchannel count  04-IFASMFR3\n                                            56000+*                                      for address space plus dependent\n                                            56001+*                                      enclaves\n 00000030 00000000                          56002+SMF30EIC DC    F'0'                    DASD I/O connect time for        04-IFASMFR3\n                                            56003+*                                      independent enclaves\n                                            56004+*                                      owned by the address space\n                                            56005+*                                      in 128-microsecond units    @DWA\n 00000034 00000000                          56006+SMF30EID DC    F'0'                    DASD I/O disconnect time for     04-IFASMFR3\n                                            56007+*                                      independent enclaves\n                                            56008+*                                      owned by the address space\n                                            56009+*                                      in 128-microsecond units    @DWA\n 00000038 00000000                          56010+SMF30EIW DC    F'0'                    DASD I/O pending plus control    04-IFASMFR3\n                                            56011+*                                      unit queue time for\n                                            56012+*                                      independent enclaves\n                                            56013+*                                      owned by the address space\n                                            56014+*                                      in 128-microsecond units    @DWA\n 0000003C 00000000                          56015+SMF30EIS DC    F'0'                    DASD I/O start subchannel count  04-IFASMFR3\n                                            56016+*                                      for independent enclaves\n                                            56017+*                                                                  @DWA\n 00000040 0000000000000000                  56018+SMF30TEX DC    D'0'   D    ASCBIOSX    Total blocks transferred         04-IFASMFR3\n                                            56019+*                                      - Accumulated EXCP counts -\n                                            56020+*                                      This is the 8-byte equivalent\n                                            56021+*                                      of SMF30TEP. This field remains\n                                            56022+*                                      valid after SMF30TEP is\n                                            56023+*                                      invalid                     @0FA\n 00000048 00000000                          56024+SMF30DAS DC    F'0'                    Number of DDs which had their    04-IFASMFR3\n                                            56025+*                                      DD Accounting information\n                                            56026+*                                      suppressed                  @LXA\n                                            56027+*\n                                            56028+*        COMPLETION SEGMENT                                    @G742PJW\n                                            56029+*\n 00000000                00000000 00000008  56030+SMF30CMP DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              56031+SMF30SCC DC    BL2'0'      TCTCMPC     STEP COMPLETION CODE    @G742PJW 04-IFASMFR3\n                                            56032+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  108\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56033+*                                      WHERE X'Occc' INDICATES SYSTEM\n                                            56034+*                                      ABEND IN THE JOB STEP WHERE ccc\n                                            56035+*                                      IS THE SYSTEM ABEND CODE. (SEE\n                                            56036+*                                      SYSTEM CODES).\n                                            56037+*\n                                            56038+*                                      WHERE X'8ccc' INDICATES USER\n                                            56039+*                                      ABEND IN THE JOB STEP WHERE ccc\n                                            56040+*                                      IS THE USER ABEND CODE.\n                                            56041+*\n                                            56042+*                                      WHERE 'nnnn' INDICATES NORMAL\n                                            56043+*                                      COMPLETION WHERE nnnn IS THE\n                                            56044+*                                      CONTENTS OF THE TWO LOW-ORDER\n                                            56045+*                                      BYTES IN REGISTER 15 AT\n                                            56046+*                                      TERMINATION.\n                                            56047+*\n                                            56048+*                                      X'0000' INDICATES EITHER:\n                                            56049+*\n                                            56050+*                                      1. THE JOB STEP WAS FLUSHED\n                                            56051+*                                         (NOT PROCESSED) BECAUSE OF AN\n                                            56052+*                                         ERROR DURING ALLOCATION OR IN\n                                            56053+*                                         A PRECEDING JOB STEP, OR\n                                            56054+*\n                                            56055+*                                      2. NORMAL COMPLETION CODE WITH\n                                            56056+*                                         A RETURN CODE OF 0.\n                                            56057+*\n                         00000080           56058+SMF30UAB EQU   X'80'                   BIT0 - USER ABEND          @PEA  04-IFASMFR3\n 00000002 0000                              56059+SMF30STI DC    2BL1'0'                 STEP TERMINATION INDICATOR       04-IFASMFR3\n                                            56060+*                                                              @G742PJW\n                         00000080           56061+SMF30RS3 EQU   X'80'                   BIT0 - RESERVED            @PEC  04-IFASMFR3\n                         00000040           56062+SMF30UJV EQU   X'40'       JCTJMRCL    BIT1 - CANCELLED BY EXIT IEFUJV  04-IFASMFR3\n                                            56063+*                                                              @G742PJW\n                         00000020           56064+SMF30UJI EQU   X'20'                   BIT2 - CANCELLED BY EXIT IEFUJI  04-IFASMFR3\n                                            56065+*                                                              @G742PJW\n                         00000010           56066+SMF30USI EQU   X'10'                   BIT3 - CANCELLED BY EXIT IEFUSI  04-IFASMFR3\n                                            56067+*                                                              @G742PJW\n                         00000008           56068+SMF30TRT EQU   X'08'                   BIT4 -CANCELLED BY EXIT IEFACTRT 04-IFASMFR3\n                                            56069+*                                                              @G742PJW\n                         00000004           56070+SMF30SRS EQU   X'04'                   BIT5 - STEP IS TO BE RESTARTED   04-IFASMFR3\n                                            56071+*                                                              @G742PJW\n                         00000002           56072+SMF30ABD EQU   X'02'       TCBFA       BIT6 - IF ZERO, NORMAL           04-IFASMFR3\n                                            56073+*                                             COMPLETION. IF 1, ABEND.\n                                            56074+*                                             IF STEP COMPLETION CODE\n                                            56075+*                                             EQUALS 0322 OR 0522,\n                                            56076+*                                             IEFUTL CAUSED ABEND. IF\n                                            56077+*                                             STEP COMPLETION CODE\n                                            56078+*                                             EQUALS 0722, IEFUSO\n                                            56079+*                                             CAUSED ABEND.\n                         00000001           56080+SMF30FLH EQU   X'01'       TCTHWM      BIT7 - IF 0, NORMAL COMPLETION.  04-IFASMFR3\n                                            56081+*                                             IF 1, STEP WAS FLUSHED.\n                                            56082+*                                                              @G742PJW\n                         00000080           56083+SMF30EXF EQU   X'80'       TCTIEX      BIT0 - EXCP COUNTS MIGHT BE      04-IFASMFR3\n                                            56084+*                                             INCORRECT BECAUSE THE\n                                            56085+*                                             RECORD DID NOT INCLUDE\n                                            56086+*                                             ALL THE DD STATEMENTS.\n                                            56087+*                                                              @G742PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  109\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000040           56088+SMF30ISK EQU   X'40'       TCTISK      BIT1 - PREVIOUS INTERVAL RECORD  04-IFASMFR3\n                                            56089+*                                             WAS NOT WRITTEN BECAUSE\n                                            56090+*                                             AN ERROR OCCURED. THE\n                                            56091+*                                             CUMULATIVE COUNT MIGHT BE\n                                            56092+*                                             INCORRECT BECAUSE THE\n                                            56093+*                                             COUNTERS WERE CLEARED.\n                                            56094+*                                                              @G742PJW\n                         00000020           56095+SMF30NEX EQU   X'20'                   BIT2 - EXCP SECTIONS NOT MERGED  04-IFASMFR3\n                                            56096+*                                                              @ZA44071\n                         00000010           56097+SMF30SYE EQU   X'10'                   BIT3 - STEP ENDED WITH POST      04-IFASMFR3\n                                            56098+*                                        EXECUTION ERROR           @0MA\n                         00000008           56099+SMF30ERE EQU   X'08'                   BIT4 - STEP ENDED DUE TO OpenMVS 04-IFASMFR3\n                                            56100+*                                             EXEC() FUNCTION REQUEST\n                                            56101+*                                                                  @0OC\n                         00000004           56102+SMF30CDE EQU   X'04'                   BIT5 - JOB abnormally ended @0NA 04-IFASMFR3\n                                            56103+*                                      because of COND= condition  @0NA\n                                            56104+*                                      on the JOB card. This flag  @0NA\n                                            56105+*                                      will be set on in the       @0NA\n                                            56106+*                                      subtype 5 job termination   @0NA\n                                            56107+*                                      record only.                @0NA\n                                            56108+*                                                                  @0NA\n                                            56109+*                                      BITS 6-7 RESERVED           @0NC\n 00000004 00000000                          56110+SMF30ARC DC    F'0'         TCBARC     ABEND REASON CODE       @G860P27 04-IFASMFR3\n                                            56111+*\n                                            56112+*        CPU ACCOUNTING SEGMENT                                @G742PJW\n                                            56113+*\n 00000000                00000000 000000A8  56114+SMF30CAS DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              56115+SMF30PTY DC   BL2'0'       SCTSDP      ADDRESS SPACE DISPATCHING        04-IFASMFR3\n                                            56116+*                                      PRIORITY (TAKEN FROM DPRTY=\n                                            56117+*                                      PARAMETER ON EXEC CARD OR THE\n                                            56118+*                                      APG VALUE IN CVTAPG).   @G742PJW\n                                            56119+*                                      - Valid only if workload    @L2A\n                                            56120+*                                        management compatibility  @L2A\n                                            56121+*                                        mode in effect.           @L2A\n                                            56122+*                                      - Zero if workload          @L2A\n                                            56123+*                                        management goal mode in   @L2A\n                                            56124+*                                        effect when the Type 30   @L2A\n                                            56125+*                                        is generated.             @L2A\n 00000002 0000                              56126+SMF30RV3 DC   BL2'0'                   RESERVED                @G744PJW 04-IFASMFR3\n 00000004                00000004 00000002  56127+         ORG SMF30RV3                                                   04-IFASMFR3\n 00000002 0000                              56128+SMF30TFL DC   2BL1'0'                  TIMER FLAGS-ALIAS           @0KA 04-IFASMFR3\n                         00000080           56129+SMF30TFO EQU  X'80'                    BIT 0 - TIMER FLAGS ARE USED@0KA 04-IFASMFR3\n                         00000040           56130+SMF30CTF EQU  X'40'                    BIT 1 - SMF30CPT INVALID    @0KA 04-IFASMFR3\n                         00000020           56131+SMF30CSF EQU  X'20'                    BIT 2 - SMF30CPS INVALID    @0KA 04-IFASMFR3\n                         00000010           56132+SMF30VUF EQU  X'10'                    BIT 3 - SMF30JVU INVALID    @0KA 04-IFASMFR3\n                         00000008           56133+SMF30VAF EQU  X'08'                    BIT 4 - SMF30JVA INVALID    @0KA 04-IFASMFR3\n                         00000004           56134+SMF30ISF EQU  X'04'                    BIT 5 - SMF30ISB INVALID    @0KA 04-IFASMFR3\n                         00000002           56135+SMF30ICF EQU  X'02'                    BIT 6 - SMF30ICU INVALID    @0KA 04-IFASMFR3\n                         00000001           56136+SMF30IVF EQU  X'01'                    BIT 7 - SMF30IVU INVALID    @0KA 04-IFASMFR3\n                         00000080           56137+SMF30IAF EQU  X'80'                    BIT 0 - SMF30IVA INVALID    @0KA 04-IFASMFR3\n                         00000040           56138+SMF30IIF EQU  X'40'                    BIT 1 - SMF30IIP INVALID    @0KA 04-IFASMFR3\n                         00000020           56139+SMF30HPF EQU  X'20'                    BIT 2 - SMF30HPT INVALID    @0KA 04-IFASMFR3\n                         00000010           56140+SMF30RCF EQU  X'10'                    BIT 3 - SMF30RCT INVALID    @0KA 04-IFASMFR3\n                         00000008           56141+SMF30ASF EQU  X'08'                    BIT 4 - SMF30ASR INVALID    @L7A 04-IFASMFR3\n                         00000004           56142+SMF30ENF EQU  X'04'                    BIT 5 - SMF30ENC INVALID    @L7A 04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  110\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000002           56143+SMF30DEF EQU  X'02'                    BIT 6 - SMF30DET INVALID    @DWA 04-IFASMFR3\n                         00000001           56144+SMF30CIN EQU  X'01'                    BIT 7 - SMF30CEP INVALID    @PBA 04-IFASMFR3\n 00000004 00000000                          56145+SMF30CPT DC   F'0'   D    ASCBEJST OR  STEP CPU TIME UNDER TCB @G744PJW 04-IFASMFR3\n                                            56146+*                        (ACTJTIME     IN HUNDREDTHS OF A      @G744PJW\n                                            56147+*                         + ASSBASST   SECOND (INCLUDING ENCLAVE   @L7C\n                                            56148+*                         + RQSVECPT   TIME).  THIS TIME WAS       @L7A\n                                            56149+*                                      FORMERLY RECORDED IN RECORD\n                                            56150+*                                      TYPES 4,5,34 AND 35.\n                                            56151+*                                      Note that time on an IFA\n                                            56152+*                                      is not included.\n                                            56153+*                         - TCTEJST)                           @G744PJW\n                                            56154+*                                      SMF30CPT only includes the\n                                            56155+*                                      consumption of standard CPs, not\n                                            56156+*                                      those of zAAPs and/or zIIPs\n 00000008 00000000                          56157+SMF30CPS DC   F'0'   D    ASCBSRBT OR  STEP CPU TIME UNDER SRB @G744PJW 04-IFASMFR3\n                                            56158+*                        (SCTSRBT      IN HUNDREDTHS OF A      @G744PJW\n                                            56159+*                                      SECOND\n                                            56160+*                         - TCTSRBT)                           @G744PJW\n 0000000C 00000000                          56161+SMF30ICU DC   F'0'   D    ASCBEJST +   INITIATOR CPU TIME UNDER TCB     04-IFASMFR3\n                                            56162+*                         TCTITCB      IN HUNDREDTHS OF A SECOND\n                                            56163+*                                                             @G744P2W\n                                            56164+*                                      NOTE: This is the total working\n                                            56165+*                                      CPU time for the initiator under\n                                            56166+*                                      the TCB. The values in the\n                                            56167+*                                      following fields are included in\n                                            56168+*                                      the value in SMF30ICU:\n                                            56169+*                                      SMF30ICU_Step_Term (which is the\n                                            56170+*                                      time spent in termination of the\n                                            56171+*                                      previous step) and\n                                            56172+*                                      SMF30ICU_Step_Init (which is the\n                                            56173+*                                      time spent in initialization of\n                                            56174+*                                      the current step).         @PLC\n 00000010 00000000                          56175+SMF30ISB DC   F'0'   D    ASCBSRBT +   INITIATOR CPU TIME UNDER SRB     04-IFASMFR3\n                                            56176+*                         TCTISRB      IN HUNDREDTHS OF A      @G744PJW\n                                            56177+*                                      SECOND\n                                            56178+*                                      NOTE: This is the total working\n                                            56179+*                                      CPU time for the initiator under\n                                            56180+*                                      any SRB. The values in the\n                                            56181+*                                      following fields are included in\n                                            56182+*                                      the value in SMF30SBU:\n                                            56183+*                                      SMF30ISB_Step_Term (which is the\n                                            56184+*                                      time spent in termination of the\n                                            56185+*                                      previous step) and\n                                            56186+*                                      SMF30ISB_Step_Init (which is the\n                                            56187+*                                      time spent in initialization of\n                                            56188+*                                      the current step).          @PLC\n 00000014 00000000                          56189+SMF30JVU DC   F'0'   D    ASCBEVST OR  STEP VECTOR USAGE TIME      @H4A 04-IFASMFR3\n                                            56190+*                        (SCTTVFUT     IN HUNDREDTHS OF A SECOND   @H4A\n                                            56191+*                         -TCTEVFUT)                               @H4A\n 00000018 00000000                          56192+SMF30IVU DC   F'0'   D    ASCBEVST +   INITIATOR VECTOR USAGE TIME      04-IFASMFR3\n                                            56193+*                         TCTIVFUT     IN HUNDREDTHS OF A SECOND   @H4A\n 0000001C 00000000                          56194+SMF30JVA DC   F'0'   D    ASCBVFAT OR  STEP VECTOR AFFINITY TIME   @D6A 04-IFASMFR3\n                                            56195+*                        (SCTTVFAT     IN HUNDREDTHS OF A SECOND   @D6A\n                                            56196+*                         -TCTEVFAT)                               @D6A\n 00000020 00000000                          56197+SMF30IVA DC   F'0'   D    ASCBVFAT +   INITIATOR VECTOR AFFINITY TIME   04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  111\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56198+*                         TCTIVFAT     IN HUNDREDTHS OF A SECOND   @D6A\n 00000024 00000000                          56199+SMF30IST DC    F'0'                    INTERVAL START TIME, IN          04-IFASMFR3\n                                            56200+*                                      HUNDREDTHS OF A SECOND, FOR\n                                            56201+*                                      SUBTYPE 2 AND 3 RECORDS     @L4A\n 00000028 0000000C                          56202+SMF30IDT DC    PL4'0000'               INTERVAL START DATE FOR     @L4A 04-IFASMFR3\n                                            56203+*                                      TYPE 30 SUBTYPE 2 AND 3\n                                            56204+*                                      RECORDS. IN THE FORM\n                                            56205+*                                      OcyydddF (where F is the sign)\n 0000002C 00000000                          56206+SMF30IIP DC   F'0'   D    ASSBIIPT     AMOUNT OF PROCESSOR TIME USED TO 04-IFASMFR3\n                                            56207+*                         - TCTEIIP    PROCESS I/O INTERRUPTS IN\n                                            56208+*                                      HUNDREDTHS OF A SECOND      @LBA\n 00000030 00000000                          56209+SMF30RCT DC   F'0'   D    TCBTTIME     AMOUNT OF PROCESSOR TIME USED BY 04-IFASMFR3\n                                            56210+*                         - TCTERCT    REGION CONTROL TASK (RCT)\n                                            56211+*                                      IN HUNDREDTHS OF A SECOND   @LBA\n 00000034 00000000                          56212+SMF30HPT DC   F'0'   D    ASSBHST      PROCESSOR TIME CONSUMED FOR THE  04-IFASMFR3\n                                            56213+*                         - TCTEHPT    STEP, IN HUNDREDTHS OF A SECOND,\n                                            56214+*                                      TO SUPPORT REQUESTS FOR DATA TO\n                                            56215+*                                      BE TRANSFERRED BETWEEN A\n                                            56216+*                                      HIPERSPACE AND AN ADDRESS SPACE,\n                                            56217+*                                      WHEN THE HIPERSPACE IS BACKED\n                                            56218+*                                      BY EXPANDED STORAGE. IT MAY VARY\n                                            56219+*                                      DEPENDING ON THE AVAILABILITY\n                                            56220+*                                      OF EXPANDED STORAGE.        @LBA\n 00000038 00000000                          56221+SMF30CSC DC   F'0'   D    ASSBFSC      INTEGRATED CRYPTOGRAPHIC SERVICE 04-IFASMFR3\n                                            56222+*                         - TCTANSC    FACILITY (ICSF) SERVICE\n                                            56223+*                                      COUNT                       @TEA\n 0000003C 00000000                          56224+SMF30DMI DC   F'0'   D    ASSBTPMT     Number of pages moved with ADMF  04-IFASMFR3\n                                            56225+*                         - TCTADMFW   WRITE operation             @03A\n 00000040 00000000                          56226+SMF30DMO DC   F'0'   D    ASSBTPMA     Number of pages moved with ADMF  04-IFASMFR3\n                                            56227+*                         - TCTADMFR   READ operation              @03A\n 00000044 00000000                          56228+SMF30ASR DC   F'0'   D    ASSBASST     Additional CPU time, in          04-IFASMFR3\n                                            56229+*                                      hundredths of a second,\n                                            56230+*                                      accumulated by the Preemptable\n                                            56231+*                                      SRB's and Client SRB's for this\n                                            56232+*                                      job.  This value is also\n                                            56233+*                                      contained within the value in\n                                            56234+*                                      SMF30CPT.                   @L7A\n 00000048 00000000                          56235+SMF30ENC DC   F'0'   D    RQSVECPT     Independent                      04-IFASMFR3\n                                            56236+*                                      enclave CPU time for the step\n                                            56237+*                                      (or job) in hundredths of a\n                                            56238+*                                      second.  This value is also\n                                            56239+*                                      contained within the value in\n                                            56240+*                                      SMF30CPT.\n                                            56241+*                                      Note that time on zAAP and zIIP\n                                            56242+*                                      is not included.            @H5C\n 0000004C 00000000                          56243+SMF30DET DC   F'0'   D    RQSVDET      Dependent                        04-IFASMFR3\n                                            56244+*                                      enclave CPU time for the step\n                                            56245+*                                      (or job) in hundredths of a\n                                            56246+*                                      second.  This value is also\n                                            56247+*                                      contained within the value in\n                                            56248+*                                      SMF30CPT.\n                                            56249+*                                      Note that time on zAAP and zIIP\n                                            56250+*                                      is not included.            @H5C\n                                            56251+*\n 00000050 00000000                          56252+SMF30CEP DC   F'0'        RqsvCPUtimeConsumedWhileENQpromoted           04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  112\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56253+*                                      CPU time consumed for an A/S\n                                            56254+*                                      or Job while enqueue promoted.\n                                            56255+*                                      1.024 milliseconds unit\n                                            56256+*                                      Unlike SMF30CEPI, this field\n                                            56257+*                                      is \"cumulative\" even for\n                                            56258+*                                      interval records.\n                                            56259+*                                                                  @PAC\n 00000054 00                                56260+SMF30TF2 DC   1BL1'0'                  More failure flags. Each flag   X04-IFASMFR3\n                                                 +                                       name is of the form xxxx_F and  X\n                                                 +                                       indicates that field xxxx is    X\n                                                 +                                       not valid.                  @H6C\n                         00000080           56261+SMF30_TIME_ON_IFA_F                EQU X'80'                       @H5A 04-IFASMFR3\n                         00000040           56262+SMF30_ENCLAVE_TIME_ON_IFA_F        EQU X'40'                       @H5A 04-IFASMFR3\n                         00000020           56263+SMF30_DEP_ENCLAVE_TIME_ON_IFA_F    EQU X'20'                       @H5A 04-IFASMFR3\n                         00000010           56264+SMF30_TIME_IFA_ON_CP_F             EQU X'10'                       @H5A 04-IFASMFR3\n                         00000008           56265+SMF30_ENCLAVE_TIME_IFA_ON_CP_F     EQU X'08'                       @H5A 04-IFASMFR3\n                         00000004           56266+SMF30_DEP_ENCLAVE_TIME_IFA_ON_CP_F EQU X'04'                       @H5A 04-IFASMFR3\n                         00000002           56267+SMF30_CEPI_F                       EQU X'02' Failure in SMF30CEPI  @PAA 04-IFASMFR3\n                         00000001           56268+SMF30CRP_F                         EQU X'01' Failure in SMF30CRP   @LJA 04-IFASMFR3\n 00000055 00                                56269+SMF30T32 DC   1BL1'0'                  More failure flags. Each flag   X04-IFASMFR3\n                                                 +                                       name is of the form xxxx_F and  X\n                                                 +                                       indicates that field xxxx is    X\n                                                 +                                       not valid.                  @H6A\n                         00000080           56270+SMF30_TIME_ON_zIIP_F               EQU X'80'                       @H6A 04-IFASMFR3\n                         00000080           56271+SMF30_TIME_ON_SUP_F                EQU X'80'                       @H6A 04-IFASMFR3\n                         00000040           56272+SMF30_ENCLAVE_TIME_ON_zIIP_F       EQU X'40'                       @H6A 04-IFASMFR3\n                         00000040           56273+SMF30_ENCLAVE_TIME_ON_SUP_F        EQU X'40'                       @H6A 04-IFASMFR3\n                         00000020           56274+SMF30_DEPENC_TIME_ON_zIIP_F        EQU X'20'                       @H6A 04-IFASMFR3\n                         00000020           56275+SMF30_DEPENC_TIME_ON_SUP_F         EQU X'20'                       @H6A 04-IFASMFR3\n                         00000010           56276+SMF30_TIME_zIIP_ON_CP_F            EQU X'10'                       @H6A 04-IFASMFR3\n                         00000010           56277+SMF30_TIME_SUP_ON_CP_F             EQU X'10'                       @H6A 04-IFASMFR3\n                         00000008           56278+SMF30_ENCLAVE_TIME_zIIP_ON_CP_F    EQU X'08'                       @H6A 04-IFASMFR3\n                         00000008           56279+SMF30_ENCLAVE_TIME_SUP_ON_CP_F     EQU X'08'                       @H6A 04-IFASMFR3\n                         00000004           56280+SMF30_DEPENC_TIME_zIIP_ON_CP_F EQU X'04'                           @H6A 04-IFASMFR3\n                         00000004           56281+SMF30_DEPENC_TIME_SUP_ON_CP_F EQU X'04'                            @H6A 04-IFASMFR3\n 00000056 00                                56282+SMF30T33 DC   1BL1'0'                  More failure flags. Each flag   X04-IFASMFR3\n                                                 +                                       name is of the form xxxx_F and  X\n                                                 +                                       indicates that field xxxx is    X\n                                                 +                                       not valid.                  @H6A\n                         00000080           56283+SMF30_ENCLAVE_TIME_ON_zIIP_N_F     EQU X'80'                       @H6A 04-IFASMFR3\n                         00000080           56284+SMF30_ENCLAVE_TIME_ON_SUP_N_F      EQU X'80'                       @H6A 04-IFASMFR3\n                         00000040           56285+SMF30_DEPENC_TIME_ON_zIIP_N_F      EQU X'40'                       @H6A 04-IFASMFR3\n                         00000040           56286+SMF30_DEPENC_TIME_ON_SUP_N_F       EQU X'40'                       @H6A 04-IFASMFR3\n                         00000020           56287+SMF30_ENCLAVE_TIME_zIIP_QUAL_F     EQU X'20'                       @H6A 04-IFASMFR3\n                         00000020           56288+SMF30_ENCLAVE_TIME_SUP_QUAL_F      EQU X'20'                       @H6A 04-IFASMFR3\n                         00000010           56289+SMF30_DEPENC_TIME_zIIP_QUAL_F      EQU X'10'                       @H6A 04-IFASMFR3\n                         00000010           56290+SMF30_DEPENC_TIME_SUP_QUAL_F       EQU X'10'                       @H6A 04-IFASMFR3\n 00000057 00                                56291+         DC   1BL1'0'                  Reserved                    @H6C 04-IFASMFR3\n 00000058 00000000                          56292+SMF30_TIME_ON_IFA DC F'0'  ASSB_Time_On_IFA Time spent on IFA          X04-IFASMFR3\n                                                 +                                       In hundredths of a second       X\n                                                 +                                       (including enclave time)    @H5A\n 0000005C 00000000                          56293+SMF30_ENCLAVE_TIME_ON_IFA DC F'0'      Rqsv_Enclave_Time_On_IFA        X04-IFASMFR3\n                                                 +                                       Enclave time spent on IFA       X\n                                                 +                                       In hundredths of a second   @H5A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  113\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000060 00000000                          56294+SMF30_DEP_ENCLAVE_TIME_ON_IFA DC F'0'  Rqsv_Dep_Enclave_Time_On_IFA    X04-IFASMFR3\n                                                 +                                       Dependent enclave time spent on X\n                                                 +                                       IFA. In hundredths of a second\n 00000064 00000000                          56295+SMF30_TIME_IFA_ON_CP DC F'0' ASSB_Time_IFA_ON_CP IFA CPU time spent on X04-IFASMFR3\n                                                 +                                       CP. In hundredths of a second   X\n                                                 +                                       (including enclave time)    @H5A\n 00000068 00000000                          56296+SMF30_ENCLAVE_TIME_IFA_ON_CP DC F'0'   Rqsv_Enclave_Time_IFA_ON_CP     X04-IFASMFR3\n                                                 +                                       IFA Enclave time spent on CP.   X\n                                                 +                                       In hundredths of a second   @H5A\n 0000006C 00000000                          56297+SMF30_DEP_ENCLAVE_TIME_IFA_ON_CP DC F'0'                               X04-IFASMFR3\n                                                 +                                       Rqsv_Dep_Enclave_Time_IFA_ON_CP X\n                                                 +                                       IFA Dependent enclave time spentX\n                                                 +                                       on CP.                          X\n                                                 +                                       In hundredths of a second   @H5A\n 00000070 00000000                          56298+SMF30CEPI DC  F'0'        RqsvCPUtimeConsumedWhileENQpromoted           04-IFASMFR3\n                                            56299+*                                      CPU time consumed for an A/S\n                                            56300+*                                      or Job while enqueue promoted.\n                                            56301+*                                      1.024 milliseconds unit\n                                            56302+*                                      Unlike SMF30CEP,\n                                            56303+*                                      for interval records, this field\n                                            56304+*                                      contains only the time consumed\n                                            56305+*                                      during the interval itself.\n                                            56306+*                                                                  @PAA\n 00000074                                   56307+SMF30_TIME_ON_zIIP DC 0F'0' ASSB_Time_On_zIIP Time spent on zIIP       X04-IFASMFR3\n                                                 +                                       In hundredths of a second       X\n                                                 +                                       (including enclave time)    @H6A\n 00000074 00000000                          56308+SMF30_TIME_ON_SUP DC F'0'                                               04-IFASMFR3\n 00000078                                   56309+SMF30_ENCLAVE_TIME_ON_zIIP DC 0F'0'    Rqsv_Enclave_Time_On_SUP        X04-IFASMFR3\n                                                 +                                       Enclave time spent on zIIP      X\n                                                 +                                       In hundredths of a second   @H6A\n 00000078 00000000                          56310+SMF30_ENCLAVE_TIME_ON_SUP DC F'0'                                       04-IFASMFR3\n 0000007C                                   56311+SMF30_DEPENC_TIME_ON_zIIP DC 0F'0'     Rqsv_DEPENC_Time_On_SUP         X04-IFASMFR3\n                                                 +                                       Dependent enclave time spent on X\n                                                 +                                       zIIP. In hundredths of a second\n 0000007C 00000000                          56312+SMF30_DEPENC_TIME_ON_SUP DC F'0'                                        04-IFASMFR3\n 00000080                                   56313+SMF30_TIME_zIIP_ON_CP DC 0F'0' ASSB_Time_zIIP_ON_CP zIIP CPU time spentX04-IFASMFR3\n                                                 +                                    on CP. When zAAPzIIP=YES is in     X\n                                                 +                                    effect, zAAP-eligible work is      X\n                                                 +                                    included in zIIP CPU time spent    X\n                                                 +                                    on CP.                             X\n                                                 +                                    In hundredths of a second          X\n                                                 +                                       (including enclave time)    @H6A\n 00000080 00000000                          56314+SMF30_TIME_SUP_ON_CP DC F'0'                                            04-IFASMFR3\n 00000084                                   56315+SMF30_ENCLAVE_TIME_zIIP_ON_CP DC 0F'0' Rqsv_Enclave_Time_SUP_ON_CP     X04-IFASMFR3\n                                                 +                                       zIIP Enclave time spent on CP.  X\n                                                 +                                       When zAAPzIIP=YES is in         X\n                                                 +                                       effect, zAAP-eligible work is   X\n                                                 +                                       included in zIIP enclave time   X\n                                                 +                                       spent on CP.                    X\n                                                 +                                       In hundredths of a second   @H6A\n 00000084 00000000                          56316+SMF30_ENCLAVE_TIME_SUP_ON_CP DC F'0'                                    04-IFASMFR3\n 00000088                                   56317+SMF30_DEPENC_TIME_zIIP_ON_CP DC 0F'0' Rqsv_DEPENC_Time_SUP_ON_CP       X04-IFASMFR3\n                                                 +                                      zIIP Dependent enclave time spentX\n                                                 +                                      on CP. When zAAPzIIP=YES is in   X\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  114\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +                                      effect, zAAP-eligible work is    X\n                                                 +                                      included in zIIP Dependent       X\n                                                 +                                      enclave time spent on CP.        X\n                                                 +                                      In hundredths of a second    @H6A\n 00000088 00000000                          56318+SMF30_DEPENC_TIME_SUP_ON_CP DC F'0'                                     04-IFASMFR3\n 0000008C                                   56319+SMF30_ENCLAVE_TIME_zIIP_QUAL DC 0F'0'  Rqsv_Enclave_TIME_SUP_QUAL      X04-IFASMFR3\n                                                 +                                       Normalized                      X\n                                                 +                                       Enclave time spent on zIIP      X\n                                                 +                                       In hundredths of a second   @H6A\n 0000008C 00000000                          56320+SMF30_ENCLAVE_TIME_SUP_QUAL DC F'0'                                     04-IFASMFR3\n 00000090                                   56321+SMF30_DEPENC_TIME_zIIP_QUAL DC 0F'0'   Rqsv_DepEnc_TIME_SUP_QUAL       X04-IFASMFR3\n                                                 +                                       Normalized                      X\n                                                 +                                       Dependent enclave time spent on X\n                                                 +                                       zIIP. In hundredths of a second\n 00000090 00000000                          56322+SMF30_DEPENC_TIME_SUP_QUAL DC F'0'                                      04-IFASMFR3\n 00000094 00000000                          56323+SMF30CRP DC   F'0'         RqsvCPUtimeConsumedWhileCRMpromoted          04-IFASMFR3\n                                            56324+*                                      CPU time consumed for an address\n                                            56325+*                                      space or job while promoted due\n                                            56326+*                                      to chronic resource contention\n                                            56327+*                                      (in 1024 millisecond units). For\n                                            56328+*                                      interval records, this field\n                                            56329+*                                      contains only the time consumed\n                                            56330+*                                      during the interval itself. @LJA\n 00000098 00000000                          56331+SMF30ICU_Step_Term  DC F'0'            CPU TCB time spent by the        04-IFASMFR3\n                                            56332+*                                      Initiator during job step\n                                            56333+*                                      termination processing. This\n                                            56334+*                                      is the step termination portion\n                                            56335+*                                      of SMF30ICU which is reported\n                                            56336+*                                      in the next step end record\n                                            56337+*                                                                  @LTA\n 0000009C 00000000                          56338+SMF30ICU_Step_Init  DC F'0'            CPU TCB time spent by the        04-IFASMFR3\n                                            56339+*                                      Initiator during job step\n                                            56340+*                                      initialization processing. This\n                                            56341+*                                      is the step initialization\n                                            56342+*                                      portion of SMF30ICU for this\n                                            56343+*                                      step end record.            @LTA\n 000000A0 00000000                          56344+SMF30ISB_Step_Term  DC F'0'            CPU SRB time spent by the        04-IFASMFR3\n                                            56345+*                                      Initiator during job step\n                                            56346+*                                      termination processing. This\n                                            56347+*                                      is the step termination portion\n                                            56348+*                                      of SMF30ISB which is reported\n                                            56349+*                                      in the next step end record\n                                            56350+*                                                                  @LTA\n 000000A4 00000000                          56351+SMF30ISB_Step_Init  DC F'0'            CPU SRB time spent by the        04-IFASMFR3\n                                            56352+*                                      Initiator during job step\n                                            56353+*                                      initialization processing. This\n                                            56354+*                                      is the step initialization\n                                            56355+*                                      portion of SMF30ISB for this\n                                            56356+*                                      step end record.            @LTA\n                                            56357+*        EXCP SECTION                                          @G742PJW\n                                            56358+*\n                                            56359+*\n                                            56360+*        FOR EACH DEVICE ASSIGNED TO EACH DATA SET THERE IS A 30 BYTE\n                                            56361+*        ENTRY HAVING THE FOLLOWING FORMAT:                    @G860P27\n                                            56362+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  115\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000000                00000000 0000001E  56363+SMF30EXP DSECT ,                       Dataset Access Information  @LYC 04-IFASMFR3\n                                            56364+*                                                                  @LYA\n                                            56365+*     Note: Virtual I/O Devices are identified by the following:   @LYA\n                                            56366+*           Device Class 0                                         @LYA\n                                            56367+*           Unit Type 0                                            @LYA\n                                            56368+*           Device Number x'7FFF'                                  @LYA\n                                            56369+*\n 00000000                                   56370+SMF30KEY DS    0CL12' '                SECTION KEY             @G742PJW 04-IFASMFR3\n 00000000 00                                56371+SMF30DEV DC    BL1'0'      UCBTBYT3    DEVICE CLASS            @G742PJW 04-IFASMFR3\n 00000001 00                                56372+SMF30UTP DC    BL1'0'      UCBTBYT3    UNIT TYPE               @G742PJW 04-IFASMFR3\n 00000002 0000                              56373+SMF30CUA DC    BL2'0'      UCBCHAN     Device number               @LYC 04-IFASMFR3\n                                            56374+*                                                                 1@LYD\n 00000004 4040404040404040                  56375+SMF30DDN DC    CL8' '      TIOEDDNM    DD NAME USED TO ACCESS THE DATA  04-IFASMFR3\n                                            56376+*                                      SET                     @G742PJW\n 0000000C 00000000                          56377+SMF30BLK DC    F'0'  D     TCTDCTR     COUNT OF BLOCKS ISSUED FOR THE   04-IFASMFR3\n                                            56378+*                                      DEVICE AGAINST THE DATA SET\n                                            56379+*                                                              @G742PJW\n 00000010 0000                              56380+SMF30BSZ DC    BL2'0'      TCTBLKSZ    LARGEST BLOCKSIZE OF THE DATA    04-IFASMFR3\n                                            56381+*                                      SET                     @G742PJW\n                         00000080           56382+SMF30CBS EQU   X'80'                   INDICATES CHANGED BLOCKSIZE FOR  04-IFASMFR3\n                                            56383+*                                      THE DATASET. POST PROCESSORS\n                                            56384+*                                      SHOULD USE THIS FIELD TO AVOID\n                                            56385+*                                      THE POSSIBILITY OF NEGATIVE\n                                            56386+*                                      NUMBERS.                @G742PJW\n 00000012 00000000                          56387+SMF30DCT DC    BL4'0'                  DEVICE CONNECT TIME FOR THIS     04-IFASMFR3\n                                            56388+*                                      DATA SET (IN 128 MICRO-SECOND\n                                            56389+*                                      UNITS). FOR DIV OBJECT, DEVICE\n                                            56390+*                                      CONNECT TIME IS NOT COLLECTED\n                                            56391+*                                      BY SMF, HOWEVER, THIS FIELD MAY\n                                            56392+*                                      NOT ALWAYS BE 0. FOR EXAMPLE,\n                                            56393+*                                      IF A USER IS USING A DIV DATA\n                                            56394+*                                      SET AND CALLS A VSAM UTILITY TO\n                                            56395+*                                      PROCESS IT USING THE SAME DD\n                                            56396+*                                      STATEMENT, THIS WILL RESULT IN\n                                            56397+*                                      DEVICE CONNECT TIME BEING\n                                            56398+*                                      CHARGED BY VSAM TO THE DIV\n                                            56399+*                                      OBJECT.\n 00000016                                   56400+SMF30XBS DS    XL8'0'      TCTXBLKS    BLOCKSIZE >32K              @LGA 04-IFASMFR3\n                                            56401+*\n                                            56402+*\n                                            56403+*        ACCOUNTING SECTION                                    @G742PJW\n                                            56404+*\n                                            56405+*\n                                            56406+*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE\n                                            56407+*        FIELD (1 BYTE,BINARY), FOLLOWED BY THE FIELD(EBCDIC).AN\n                                            56408+*        OMITTED FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.\n                                            56409+*                                                              @G742PJW\n                                            56410+*\n 00000000                00000000 00000001  56411+SMF30ACS DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 00                                56412+SMF30ACL DC    BL1'0'                  LENGTH OF ACCOUNTING SECTION,    04-IFASMFR3\n                                            56413+*                                      EXCLUDING THIS FIELD    @G742PJW\n 00000001                                   56414+SMF30ACT DS    0C                      JOB OR STEP ACCOUNTING FIELD     04-IFASMFR3\n                                            56415+*                                                              @G742PJW\n                                            56416+*\n                                            56417+*        STORAGE AND PAGING SECTION                            @G742PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  116\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56418+*\n 00000000                00000000 000000E8  56419+SMF30SAP DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              56420+SMF30RSV DC    BL2'0'                  RESERVED - NOTE THAT SMF30RGN,   04-IFASMFR3\n                                            56421+*                                      FORMERLY A TWO-BYTE FIELD AT\n                                            56422+*                                      THIS OFFSET, HAS BEEN INCREASED\n                                            56423+*                                      TO 4 BYTES AND MOVED TO THE END\n                                            56424+*                                      OF THE STORAGE AND PAGING\n                                            56425+*                                      SECTION.                    @PVC\n 00000002 00                                56426+SMF30SFL DC    BL1'0'                  STORAGE FLAGS. IF STORAGE WAS    04-IFASMFR3\n                                            56427+*                                      NOT ALLOCATED (JOB STEP WAS\n                                            56428+*                                      FLUSHED), THESE FIELDS EQUAL\n                                            56429+*                                      ZERO.                   @G742PJW\n                         00000080           56430+SMF30VQR EQU   X'80'  EAADDRBT BIT     V=R IS SPECIFIED. THIS BIT HAS   04-IFASMFR3\n                                            56431+*                                      NO MEANING FOR SUBTYPE 5 RECORDS\n                                            56432+*                                                              @G742PJW\n                         00000040           56433+SMF30UCL EQU   X'40'  IEFUSI-REGION    IEFUSI CHANGED REGION LIMIT      04-IFASMFR3\n                                            56434+*                                      VALUES FOR THE EXTENDED PRIVATE\n                                            56435+*                                      AREA                    @G860P27\n                         00000020           56436+SMF30UCM EQU   X'20'  IEFUSI-MEMLIMIT  IEFUSI CHANGED MEMLIMIT          04-IFASMFR3\n                                            56437+*                                      VALUE                       @LHA\n                         00000010           56438+SMF30SIN EQU   X'10'                   The following fields contain     04-IFASMFR3\n                                            56439+*                                      incomplete data: (SRM could\n                                            56440+*                                      not deliver deltas or values\n                                            56441+*                                      for this interval)\n                                            56442+*                                      SMF30ERS  SMF30KIE  SMF30POA\n                                            56443+*                                      SMF30BIA  SMF30KOA  SMF30POE\n                                            56444+*                                      SMF30BIE  SMF30KOE  SMF30PSC\n                                            56445+*                                      SMF30BOA  SMF30LPI  SMF30PSF\n                                            56446+*                                      SMF30BOE  SMF30NSW  SMF30PSO\n                                            56447+*                                      SMF30CPI  SMF30PAI  SMF30PST\n                                            56448+*                                      SMF30CPM  SMF30PEI  SMF30VPI\n                                            56449+*                                      SMF30HPI  SMF30PIA  SMF30VPO\n                                            56450+*                                      SMF30HPO  SMF30PIE  SMF30VPR\n                                            56451+*                                      SMF30KIA                   @PBA\n                         00000008           56452+SMF30NHU EQU   X'08'  SCTNHUSI         When on, indicates that the      04-IFASMFR3\n                                            56453+*                                      NOHONORIEFUSIREGION (no honor\n                                            56454+*                                      IEFUSI region settings) was set\n                                            56455+*                                      in the Program Properties Table\n                                            56456+*                                      (PPT).  Region and MEMLIMIT\n                                            56457+*                                      values and limits set or\n                                            56458+*                                      affected by the IEFUSI exit\n                                            56459+*                                      are not honored when this\n                                            56460+*                                      bit is on.                  @PFA\n 00000003 00                                56461+SMF30SPK DC    BL1'0' TCBPKF           STORAGE PROTECT KEY, IN THE FORM 04-IFASMFR3\n                                            56462+*                                      xxxx0000 WHERE xxxx IS THE KEY\n                                            56463+*                                                              @G742PJW\n 00000004 0000                              56464+SMF30PRV DC    BL2'0' TCTHWM/1024      LARGEST AMOUNT OF STORAGE USED   04-IFASMFR3\n                                            56465+*                                      FROM BOTTOM OF USERS PRIVATE\n                                            56466+*                                      AREA, IN 1 K UNITS. THIS STORAGE\n                                            56467+*                                      AREA INCLUDES SUBPOOLS 0-127,\n                                            56468+*                                      251 AND 252. IF ADDRSPC=REAL IS\n                                            56469+*                                      SPECIFIED, THIS FIELD EQUALS THE\n                                            56470+*                                      AMOUNT OF CONTIGUOUS REAL\n                                            56471+*                                      STORAGE THAT WAS USED.  @G860P27\n 00000006 0000                              56472+SMF30SYS DC    BL2'0'  TCTLWM          LARGEST AMOUNT OF STORAGE USED   04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  117\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56473+*                                      FROM TOP OF PRIVATE AREA, IN 1\n                                            56474+*                                      K UNITS. THIS STORAGE AREA\n                                            56475+*                                      INCLUDES THE LSQA AND SWA\n                                            56476+*                                      (SUBPOOLS 229,230,236,237 AND\n                                            56477+*                                      253-255). IF ADDRSPC=REAL IS\n                                            56478+*                                      SPECIFIED, THIS FIELD EQUALS THE\n                                            56479+*                                      AMOUNT OF STORAGE USED THAT WAS\n                                            56480+*                                      NOT FROM CONTIGUOUS REAL STORAGE\n                                            56481+*                                      RESERVED FOR THE PROGRAM.\n                                            56482+*                                                              @G86OP27\n 00000008                                   56483+SMF30PGI DS    F'0' D OUXBPIN +        NUMBER OF PAGES THAT WERE PAGED  04-IFASMFR3\n                                            56484+*                     OUCBPIN          IN FROM AUXILIARY STORAGE\n                                            56485+*                                                              @G742PJW\n 0000000C                0000000C 00000008  56486+         ORG   SMF30PGI                RESET LOCATION COUNTER      @LLA 04-IFASMFR3\n 00000008                                   56487+SMF30PIA DS    F'0' D OUXBPIN +        NUMBER OF PAGE-INS ALIAS    @LLA 04-IFASMFR3\n                                            56488+*                     OUCBPIN\n 0000000C                                   56489+SMF30PGO DS    F'0' D OUXBPOUT +       NUMBER OF PAGES THAT WERE PAGED  04-IFASMFR3\n                                            56490+*                     OUCBPOUT         OUT TO AUXILIARY STORAGE\n                                            56491+*                                                              @G742PJW\n 00000010                00000010 0000000C  56492+         ORG   SMF30PGO                RESET LOCATION COUNTER      @LLA 04-IFASMFR3\n 0000000C                                   56493+SMF30POA DS    F'0' D OUXBPOUT +       NUMBER OF PAGE-OUTS ALIAS   @LLA 04-IFASMFR3\n                                            56494+*                     OUCBPOUT\n 00000010                                   56495+SMF30CPM DS    F'0' D OUXB             NUMBER OF ATTEMPTS TO READ DATA  04-IFASMFR3\n                                            56496+*                                      FROM AN EXPANDED STORAGE ONLY\n                                            56497+*                                      HIPERSPACE THAT WERE NOT\n                                            56498+*                                      SATISFIED BECAUSE THE DATA HAS\n                                            56499+*                                      BEEN DELETED.               @DFC\n 00000014                                   56500+SMF30NSW DS    F'0' D OUXBSWCT         NUMBER OF ADDRESS SPACE SWAP     04-IFASMFR3\n                                            56501+*                                      SEQUENCE. (A SWAP SEQUENCE\n                                            56502+*                                      CONSISTS OF AN ADDRESS SPACE\n                                            56503+*                                      SWAP-OUT AND SWAP-IN. LOGICAL\n                                            56504+*                                      SWAP-OUT AND SWAP-IN ARE NOT\n                                            56505+*                                      INCLUDED.)              @G742PJW\n 00000018                                   56506+SMF30PSI DS    F'0' D OUXBSPIN +       NUMBER OF PAGES SWAPPED IN. THIS 04-IFASMFR3\n                                            56507+*                     OUCBSPIN         FIELD INCLUDES: (LSQA, FIXED\n                                            56508+*                                      PAGES, AND PAGES THAT THE REAL\n                                            56509+*                                      STORAGE MANAGER DETERMINED TO BE\n                                            56510+*                                      ACTIVE WHEN THE ADDRESS SPACE\n                                            56511+*                                      WAS SWAPPING IN. IT DOES NOT\n                                            56512+*                                      INCLUDE PAGE RECLAIMS OR PAGES\n                                            56513+*                                      FOUND IN STORAGE DURING THE\n                                            56514+*                                      SWAP-IN PROCESS (SUCH AS PAGES\n                                            56515+*                                      BROUGHT IN VIA SRB'S) STARTED\n                                            56516+*                                      AFTER COMPLETION OF SWAP-IN\n                                            56517+*                                      STAGE 1 PROCESSING).    @G742PJW\n 0000001C                                   56518+SMF30PSO DS    F'0' D OUXBSPOT +       NUMBER OF PAGES SWAPPED OUT.     04-IFASMFR3\n                                            56519+*                     OUCBSPOT         THIS FIELD INCLUDES: LSQA,\n                                            56520+*                                      PRIVATE AREA FIXED PAGES, AND\n                                            56521+*                                      PRIVATE AREA NON-FIXED CHANGED\n                                            56522+*                                      PAGES.                  @G742PJW\n 00000020                                   56523+SMF30VPI DS    F'0' D OUXBVAMI +       NUMBER OF VIO PAGE INS FOR THIS  04-IFASMFR3\n                                            56524+*                     OUCBVAMI         STEP. THIS FIELD INCLUDES PAGE-\n                                            56525+*                                      IN RESULTING FROM PAGE FAULTS OR\n                                            56526+*                                      SPECIFIC PAGE REQUESTS ON A VIO\n                                            56527+*                                      WINDOW. IT DOES NOT INCLUDE VIO\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  118\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56528+*                                      SWAP-IN OR PAGE-INS FOR THE\n                                            56529+*                                      COMMON AREA.            @G742PJW\n 00000024                                   56530+SMF30VPO DS    F'0' D OUXBVAMO +       NUMBER OF VIO PAGE OUTS FOR THIS 04-IFASMFR3\n                                            56531+*                     OUCBVAMO         STEP. THIS FIELD INCLUDES PAGE-\n                                            56532+*                                      OUTS RESULTING FROM SPECIFIC\n                                            56533+*                                      PAGE REQUESTS ON A VIO WINDOW AS\n                                            56534+*                                      WELL AS THOSE PAGES STOLEN BY\n                                            56535+*                                      THE PAGING SUPERVISOR THROUGH\n                                            56536+*                                      INFREQUENT USE. IT DOES NOT\n                                            56537+*                                      INCLUDE VIO SWAP-OUTS OR PAGE-\n                                            56538+*                                      OUTS FOR THE COMMON AREA.\n                                            56539+*                                                              @G742PJW\n 00000028                                   56540+SMF30VPR DS    F'0' D OUXBVAMR +       NUMBER OF VIO RECLAIMS  @G742PJW 04-IFASMFR3\n                                            56541+*                     OUCBVAMR                                 @G742PJW\n 0000002C                                   56542+SMF30CPI DS    F'0' D OUXBCAPI +       NUMBER OF COMMON AREA PAGE-INS   04-IFASMFR3\n                                            56543+*                     OUCBCAPI         (LPA + CSA)             @G742PJW\n 00000030                                   56544+SMF30HPI DS    F'0' D OUXBHSPI         NUMBER OF HIPERSPACE PAGE-INS    04-IFASMFR3\n                                            56545+*                                      FROM AUXILIARY TO PROCESSOR\n                                            56546+*                                      STORAGE.                    @LBC\n 00000034                                   56547+SMF30LPI DS    F'0' D OUXBLPAI         NUMBER OF LPA PAGE-INS  @G742PJW 04-IFASMFR3\n                                            56548+*\n 00000038                                   56549+SMF30HPO DS    F'0' D OUXBHSPO         NUMBER OF HIPERSPACE PAGE-OUTS   04-IFASMFR3\n                                            56550+*                                      FROM PROCESSOR TO AUXILIARY\n                                            56551+*                                      STORAGE.                    @LBC\n 0000003C                                   56552+SMF30PST DS    F'0' D OUXBSTCT +       NUMBER OF PAGES STOLEN FROM      04-IFASMFR3\n                                            56553+*                     OUCBSTCT         THIS ADDRESS SPACE      @G742PJW\n 00000040                                   56554+SMF30PSC DS    D'0' D OUCBPSS          NUMBER OF CPU PAGE SECONDS FOR   04-IFASMFR3\n                                            56555+*                                      THIS ADDRESS SPACE, IN PAGE\n                                            56556+*                                      MILLISECOND UNITS       @G742PJW\n 00000048                                   56557+SMF30RGB DS    F'0'   TCTRGNB        PRIVATE AREA SIZE IN BYTES, BELOW  04-IFASMFR3\n                                            56558+*                                    16 MEGABYTES                  @PVC\n 0000004C                                   56559+SMF30ERG DS    F'0'   TCTERGNB       PRIVATE AREA SIZE IN BYTES, ABOVE  04-IFASMFR3\n                                            56560+*                                    16 MEGABYTES                  @PVC\n 00000050                                   56561+SMF30ARB DS    F'0'   TCTHWM         MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            56562+*                                    ALLOCATED FROM THE LSQA AND SWA\n                                            56563+*                                    SUBPOOLS BELOW 16 MEGABYTES\n                                            56564+*                                                              @G860P27\n 00000054                                   56565+SMF30EAR DS    F'0'   TCTEHWM        MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            56566+*                                    ALLOCATED FROM THE LSQA AND SWA\n                                            56567+*                                    SUBPOOLS ABOVE 16 MEGABYTES\n                                            56568+*                                                              @G860P27\n 00000058                                   56569+SMF30URB DS    F'0'   TCTLWM         MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            56570+*                                    ALLOCATED FROM THE USER SUBPOOLS\n                                            56571+*                                    BELOW 16 MEGABYTES        @G860P27\n 0000005C                                   56572+SMF30EUR DS    F'0'   TCTELWM        MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            56573+*                                    ALLOCATED FROM THE USER SUBPOOLS\n                                            56574+*                                    ABOVE 16 MEGABYTES        @G860P27\n 00000060 00000000                          56575+SMF30RGN DC    BL4'0' TCTRSZ*2       REGION SIZE ESTABLISHED, IN 1K     04-IFASMFR3\n                                            56576+*                                    UNITS TAKEN FROM THE REGION=\n                                            56577+*                                    PARAMETER IN THE JCL, AND ROUNDED\n                                            56578+*                                    UP TO A 4K BOUNDARY. IF ADDRSPC=\n                                            56579+*                                    REAL IS SPECIFIED, THIS FIELD\n                                            56580+*                                    EQUALS THE AMOUNT OF CONTIGUOUS\n                                            56581+*                                    REAL STORAGE RESERVED FOR THE\n                                            56582+*                                    PROGRAM. IF THE REGION REQUESTED\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  119\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56583+*                                    WAS GREATER THAN 16 MEGABYTES, THE\n                                            56584+*                                    REGION ESTABLISHED RESIDES ABOVE\n                                            56585+*                                    16 MEGABYTES, AND THIS FIELD WILL\n                                            56586+*                                    CONTAIN A MINIMUM VALUE OF 32\n                                            56587+*                                    MEGABYTES.                    @PVM\n 00000064                                   56588+SMF30DSV DS    F'0'   RAXDSHWM       AMOUNT OF USER KEY DATA SPACE      04-IFASMFR3\n                                            56589+*                                    STORAGE (HIGH WATER MARK) USED\n                                            56590+*                                    DURING THE STEP/JOB (IN MEGABYTES)\n                                            56591+*                                                                  @P5C\n 00000068                                   56592+SMF30PIE DS    F'0'                  NUMBER OF UNBLOCKED PAGES THAT     04-IFASMFR3\n                                            56593+*                                    WERE PAGED IN FROM EXPANDED\n                                            56594+*                                    STORAGE.                      @LLA\n 0000006C                                   56595+SMF30POE DS    F'0'                  NUMBER OF UNBLOCKED PAGES THAT     04-IFASMFR3\n                                            56596+*                                    WERE PAGED OUT TO EXPANDED STORAGE\n                                            56597+*                                                                  @LLA\n 00000070                                   56598+SMF30BIA DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            56599+*                                    PAGED IN FROM FROM AUXILIARY\n                                            56600+*                                    STORAGE                       @LLA\n 00000074                                   56601+SMF30BOA DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            56602+*                                    PAGED OUT TO AUXILIARY STORAGE\n                                            56603+*                                                                  @LLA\n 00000078                                   56604+SMF30BIE DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            56605+*                                    PAGED IN FROM EXPANDED STORAGE\n                                            56606+*                                                                  @LLA\n 0000007C                                   56607+SMF30BOE DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            56608+*                                    PAGED OUT TO EXPANDED STORAGE.\n                                            56609+*                                                                  @LLA\n 00000080                                   56610+SMF30KIA DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            56611+*                                    IN FROM AUXILIARY STORAGE.    @LLA\n 00000084                                   56612+SMF30KOA DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            56613+*                                    OUT TO AUXILIARY STORAGE      @LLA\n 00000088                                   56614+SMF30KIE DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            56615+*                                    IN FROM EXPANDED STORAGE      @LLA\n 0000008C                                   56616+SMF30KOE DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            56617+*                                    OUT TO EXPANDED STORAGE       @LLA\n 00000090                                   56618+SMF30PSF DS    D'0'                  Number of CPU page seconds for the 04-IFASMFR3\n                                            56619+*                                    shared central storage frames in\n                                            56620+*                                    use by this address space, in page\n                                            56621+*                                    millisecond units             @L8A\n 00000098                                   56622+SMF30PAI DS    F'0'                  Number of shared pages that were   04-IFASMFR3\n                                            56623+*                                    paged in from auxiliary storage in\n                                            56624+*                                    this address space            @L8A\n 0000009C                                   56625+SMF30PEI DS    F'0'                  Number of shared pages that were   04-IFASMFR3\n                                            56626+*                                    paged in from expanded storage in\n                                            56627+*                                    this address space            @L8A\n 000000A0                                   56628+SMF30ERS DS    CL8' '                Expanded storage page residency    04-IFASMFR3\n                                            56629+*                                    time in page-milliseconds     @DWA\n                                            56630+*\n 000000A8                                   56631+SMF30MEM DS    CL8'0'                MEMLIMIT value in 1MB units as     04-IFASMFR3\n                                            56632+*                                    determined at step initialization\n                                            56633+*                                    time, after IEFUSI processing.\n                                            56634+*                                    An increase in the system default\n                                            56635+*                                    memlimit value is not reflected\n                                            56636+*                                    here.                         @0AC\n                                            56637+*                                    This field's maximum value is\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  120\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56638+*                                    '00000FFFFFFFF000'x which is\n                                            56639+*                                    equivalent to MEMLIMIT having\n                                            56640+*                                    no limit.                     @PKA\n 000000B0                                   56641+SMF30MES DS    CL1'0'                MEMLIMIT source               @0AA 04-IFASMFR3\n 000000B1                                   56642+         DS    CL7'0'                Reserved                      @LNC 04-IFASMFR3\n 000000B8                                   56643+SMF30HVR DS    D'0' RAXHVGPAGESINREAL  High water mark for the          04-IFASMFR3\n                                            56644+*                                    number of real storage frames used\n                                            56645+*                                    to back 64-bit private storage\n                                            56646+*                                                                  @PJC\n 000000C0                                   56647+SMF30HVA DS    D'0' RAXHVGAUXSLOTS   High water mark for the            04-IFASMFR3\n                                            56648+*                                    number of auxiliary storage slots\n                                            56649+*                                    used to back 64-bit private\n                                            56650+*                                    storage                       @PJC\n 000000C8                                   56651+SMF30HVO DS    D'0' RAXLVABYTES      Amount of 64-bit private storage   04-IFASMFR3\n                                            56652+*                                    in bytes obtained by this step/job\n                                            56653+*                                    This includes guarded virtual\n                                            56654+*                                    storage                       @PIC\n 000000D0                                   56655+SMF30HVH DS    D'0' RAXLVGBYTES      High water mark for the number of  04-IFASMFR3\n                                            56656+*                                    usable bytes of 64-bit private\n                                            56657+*                                    obtained by this step/job. This\n                                            56658+*                                    does not include guarded virtual\n                                            56659+*                                    storage                       @LNA\n 000000D8                                   56660+SMF30HSO DS    D'0' RAXLVSHRBYTES    Amount of 64-bit shared storage in 04-IFASMFR3\n                                            56661+*                                    bytes this step/job has\n                                            56662+*                                    addressability or access to   @LNA\n 000000E0                                   56663+SMF30HSH DS    D'0' RAXLVSHRGBYTES   High water mark for the number of  04-IFASMFR3\n                                            56664+*                                    bytes of 64-bit shared\n                                            56665+*                                    this step/job has access to   @LNA\n                                            56666+*        PERFORMANCE SECTION                                   @G742PJW\n                                            56667+*\n 00000000                00000000 000000D2  56668+SMF30PRF DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000                                   56669+SMF30SRV DS    F'0' D OUXBJBS +        TOTAL SERVICE UNITS     @G742PJW 04-IFASMFR3\n                                            56670+*                     OUXBTRS                                  @G742PJW\n                                            56671+*                                      This field grows to 'FFFFFFFF'x\n                                            56672+*                                      and then wraps back to zero and\n                                            56673+*                                      continues growing. Once wrapping\n                                            56674+*                                      occurs, SMF30SRV_INV will be set\n                                            56675+*                                      to on. SMF30SRV_L is the 8 byte\n                                            56676+*                                      equivalent of this field.   @LOA\n 00000004                                   56677+SMF30CSU DS    F'0' D OUXBCPU          CPU SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            56678+*                                      This field grows to 'FFFFFFFF'x\n                                            56679+*                                      and then wraps back to zero and\n                                            56680+*                                      continues growing. Once wrapping\n                                            56681+*                                      occurs, SMF30CSU_INV will be set\n                                            56682+*                                      to on. SMF30CSU_L is the 8 byte\n                                            56683+*                                      equivalent of this field.   @LOA\n 00000008                                   56684+SMF30SRB DS    F'0' D OUXBSRB          SRB SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            56685+*                                      This field grows to 'FFFFFFFF'x\n                                            56686+*                                      and then wraps back to zero and\n                                            56687+*                                      continues growing. Once wrapping\n                                            56688+*                                      occurs, SMF30SRB_INV will be set\n                                            56689+*                                      to on. SMF30SRB_L is the 8 byte\n                                            56690+*                                      equivalent of this field.   @LOA\n 0000000C                                   56691+SMF30IO  DS    F'0' D OUXBIOC          I/O SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            56692+*                                      This field grows to 'FFFFFFFF'x\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  121\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56693+*                                      and then wraps back to zero and\n                                            56694+*                                      continues growing. Once wrapping\n                                            56695+*                                      occurs, SMF30IO_INV will be set\n                                            56696+*                                      to on. SMF30IO_L is the 8 byte\n                                            56697+*                                      equivalent of this field.   @LOA\n 00000010                                   56698+SMF30MSO DS    F'0' D OUXBMSO          MSO SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            56699+*                                      This field grows to 'FFFFFFFF'x\n                                            56700+*                                      and then wraps back to zero and\n                                            56701+*                                      continues growing. Once wrapping\n                                            56702+*                                      occurs, SMF30MSO_INV will be set\n                                            56703+*                                      to on. SMF30MSO_L is the 8 byte\n                                            56704+*                                      equivalent of this field.   @LOA\n 00000014                                   56705+SMF30TAT DS    F'0' D OUXBJBT +        TRANSACTION ACTIVE TIME IN 1024- 04-IFASMFR3\n                                            56706+*                     OUXBTRT          MICROSECOND UNITS       @G742PJW\n 00000018                                   56707+SMF30SUS DS    F'0' D                  Copy of RmctAdjC when this SMF   04-IFASMFR3\n                                            56708+*                                      record was produced,\n                                            56709+*                                      number of sixteenths of one\n                                            56710+*                                      CPU microsecond per\n                                            56711+*                                      CPU service unit            @DWA\n                                            56712+*                                                              @G742PJW\n                                            56713+*                                      Note: The value in this field\n                                            56714+*                                            will change when a\n                                            56715+*                                            processor capacity change\n                                            56716+*                                            occurs                @LVA\n 0000001C                                   56717+SMF30RES DS    F'0' D OUXBJBR          TRANSACTION RESIDENCY TIME IN    04-IFASMFR3\n                                            56718+*                                      1024 MICRO-SECOND UNITS. THAT\n                                            56719+*                                      IS THE AMOUNT OF TIME THE\n                                            56720+*                                      TRANSACTION WAS IN REAL STORAGE.\n                                            56721+*                                                              @G742PJW\n 00000020                                   56722+SMF30TRS DS    F'0' D OUXBTRC          NUMBER OF TRANSACTIONS  @G742PJW 04-IFASMFR3\n 00000024                                   56723+SMF30WLM DS    CL8' '                  Workload Name               @L1A 04-IFASMFR3\n                                            56724+*                                      - Blanks if the system is\n                                            56725+*                                        operating in workload\n                                            56726+*                                        management compatibility mode.\n 0000002C                                   56727+SMF30SCN DS    CL8' '                  Service Class Name          @L1A 04-IFASMFR3\n                                            56728+*                                      - Blanks if the system is\n                                            56729+*                                        operating in workload\n                                            56730+*                                        management compatibility mode.\n 00000034                                   56731+SMF30GRN DS    CL8' '                  Resource Group Name         @L1A 04-IFASMFR3\n                                            56732+*                                      - Blanks if the system is\n                                            56733+*                                        operating in workload\n                                            56734+*                                        management compatibility mode.\n 0000003C                                   56735+SMF30RCN DS    CL8' '                  Reporting Class Name        @L1A 04-IFASMFR3\n                                            56736+*                                      - Blanks if the system is\n                                            56737+*                                        operating in workload\n                                            56738+*                                        management compatibility mode.\n 00000044                                   56739+SMF30ETA DS    F'0' D RQSVETIM         Independent Enclave Transaction  04-IFASMFR3\n                                            56740+*                                      Active time                 @P6C\n 00000048                                   56741+SMF30ESU DS    F'0' D RQSVECPU         Independent Enclave CPU          04-IFASMFR3\n                                            56742+*                                      Service Units               @P6C\n                                            56743+*                                      This field grows to 'FFFFFFFF'x\n                                            56744+*                                      and then wraps back to zero and\n                                            56745+*                                      continues growing. Once wrapping\n                                            56746+*                                      occurs, SMF30ESU_INV will be set\n                                            56747+*                                      to on. SMF30ESU_L is the 8 byte\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  122\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56748+*                                      equivalent of this field.   @LOA\n 0000004C                                   56749+SMF30ETC DS    F'0' D RQSVETRC         Independent Enclave Transaction  04-IFASMFR3\n                                            56750+*                                      Count                       @P6C\n 00000050                                   56751+SMF30PFL DS    CL16' ' D RQSVSCHEDENV  JCL SCHEDENV value          @LEA 04-IFASMFR3\n 00000060                                   56752+SMF30JQT DS    F'0' D RQSVJCLCONVERSIONTIME JCL conversion time for     04-IFASMFR3\n                                            56753+*                                           batch jobs, 0 for other\n                                            56754+*                                           types of work.\n                                            56755+*                                           1.024 millisecond units\n                                            56756+*                                                                  @LEA\n 00000064                                   56757+SMF30RQT DS    F'0' D RqsvSysOrResAffTime Resource and/or system        04-IFASMFR3\n                                            56758+*                                         affinity hold time for batch\n                                            56759+*                                         jobs, 0 for other types of\n                                            56760+*                                         work.\n                                            56761+*                                         1.024 millisecond units  @LEA\n 00000068                                   56762+SMF30HQT DS    F'0' D RqsvIneligibleTime Hold time not due to system    04-IFASMFR3\n                                            56763+*                                        affinity, resource affinity,\n                                            56764+*                                        TYPRUN=HOLD or TYPRUN=JCLHOLD\n                                            56765+*                                        for batch jobs, 0 for other\n                                            56766+*                                        types of work.\n                                            56767+*                                        1.024 millisecond units   @LEA\n 0000006C                                   56768+SMF30SQT DS    F'0' D RqsvQueueTime    Time that job was eligible for   04-IFASMFR3\n                                            56769+*                                      execution: not held, waiting for\n                                            56770+*                                      for an initiator. Valid for all\n                                            56771+*                                      types or work.\n                                            56772+*                                      1.024 millisecond units     @LEA\n 00000070                                   56773+SMF30PF1 DS    BL1'0'                  Performance section flags   @LEA 04-IFASMFR3\n                         00000080           56774+SMF30PFJ EQU   X'80' D RqsvResetBeforeInitiation Reset before           04-IFASMFR3\n                                            56775+*                                                initiation        @LEA\n                         00000040           56776+SMF30PFR EQU   X'40' D RqsvResetAfterInitiation  Reset after            04-IFASMFR3\n                                            56777+*                                                initiation        @LEA\n                         00000020           56778+SMF30PFF EQU   X'20' D RqsvOperatorForcedInitiation                     04-IFASMFR3\n                                            56779+*                                      Operation requested immediate\n                                            56780+*                                      initiation                  @LEA\n                         00000010           56781+SMF30RTR EQU   X'10' D RqsvJobReincarnated                              04-IFASMFR3\n                                            56782+*                                      Job has been restarted      @LEA\n                         00000008           56783+SMF30MSI EQU   X'08' D RqsvRSDIncomplete                                04-IFASMFR3\n                                            56784+*                                      Remote System Data is       @LFA\n                                            56785+*                                      incomplete.                 @LFA\n                         00000004           56786+SMF30WMI EQU   X'04'                   Job is executing in a workload   04-IFASMFR3\n                                            56787+*                                      manager batch initiator     @P7A\n                         00000002           56788+SMF30CCP EQU   X'02' RasdCProtCpu      Service class assigned was       04-IFASMFR3\n                                            56789+*                                      designated CPU-critical @WLMPGMC\n                         00000001           56790+SMF30CSP EQU   X'01' RasdCProtStg      Service class served was         04-IFASMFR3\n                                            56791+*                                      designated stg-critical @WLMPGMS\n 00000071                                   56792+SMF30PF2 DS    BL1'0'                  Performance section flags        04-IFASMFR3\n                                            56793+*                                                              @WLMPGMC\n                         00000080           56794+SMF30ASP EQU   X'80' RasdASProtStg     Address space was                04-IFASMFR3\n                                            56795+*                                      designated stg-critical @WLMPGMS\n                         00000040           56796+SMF30SME EQU   X'40' RasdTrxnMgmtExempt Address space cannot be         04-IFASMFR3\n                                            56797+*                                      managed to trxn goals   @WLMPGMT\n                         00000020           56798+SMF30CPR EQU   X'20' RasdCpuProtected  Address space is currently       04-IFASMFR3\n                                            56799+*                                      CPU-protected           @WLMPGMC\n                         00000010           56800+SMF30SPR EQU   X'10' RasdStgProtected  Address space is currently       04-IFASMFR3\n                                            56801+*                                      stg-protected           @WLMPGMS\n                         00000008           56802+SMF30PIN EQU   X'08'                   The following fields contain     04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  123\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56803+*                                      incomplete data: (SRM could\n                                            56804+*                                      not deliver deltas or values\n                                            56805+*                                      for this interval)\n                                            56806+*                                      SMF30CSU   SMF30MSO  SMF30SPR\n                                            56807+*                                      SMF30ESU   SMF30PFL  SMF30SQT\n                                            56808+*                                      SMF30ETA   SMF30PFR  SMF30SRB\n                                            56809+*                                      SMF30ETC   SMF30RCN  SMF30SRV\n                                            56810+*                                      SMF30GRN   SMF30RES  SMF30SUS\n                                            56811+*                                      SMF30HQT   SMF30RQT  SMF30TAT\n                                            56812+*                                      SMF30IO    SMF30RTR  SMF30TRS\n                                            56813+*                                      SMF30JPN   SMF30SCN  SMF30WLM\n                                            56814+*                                      SMF30JQT   SMF30SME\n                                            56815+*                                      SMF30SRV_L SMF30CSU_L\n                                            56816+*                                      SMF30SRB_L SMF30IO_L\n                                            56817+*                                      SMF30MSO_L SMF30ESU_L       @LOC\n 00000072 00                                56818+SMF30INV DC    BL1'0'                  Flag byte                   @LOC 04-IFASMFR3\n                         00000080           56819+SMF30SRV_INV  EQU X'80'                Bit 0 When on, indicates that    04-IFASMFR3\n                                            56820+*                                            the value in SMF30SRV\n                                            56821+*                                            has grown past its 4\n                                            56822+*                                            byte maximum value\n                                            56823+*                                            capacity of 'FFFFFFFF'x\n                                            56824+*                                            and has wrapped back to\n                                            56825+*                                            zero.  SMF30SRV_L is the\n                                            56826+*                                            8 byte equivalent of\n                                            56827+*                                            SMF30SRV.             @LOA\n                         00000040           56828+SMF30CSU_INV  EQU X'40'                Bit 1 When on, indicates that    04-IFASMFR3\n                                            56829+*                                            the value in SMF30CSU\n                                            56830+*                                            has grown past its 4\n                                            56831+*                                            byte maximum value\n                                            56832+*                                            capacity of 'FFFFFFFF'x\n                                            56833+*                                            and has wrapped back to\n                                            56834+*                                            zero.  SMF30CSU_L is the\n                                            56835+*                                            8 byte equivalent of\n                                            56836+*                                            SMF30CSU.             @LOA\n                         00000020           56837+SMF30SRB_INV  EQU X'20'                Bit 2 When on, indicates that    04-IFASMFR3\n                                            56838+*                                            the value in SMF30SRB\n                                            56839+*                                            has grown past its 4\n                                            56840+*                                            byte maximum value\n                                            56841+*                                            capacity of 'FFFFFFFF'x\n                                            56842+*                                            and has wrapped back to\n                                            56843+*                                            zero.  SMF30SRB_L is the\n                                            56844+*                                            8 byte equivalent of\n                                            56845+*                                            SMF30SRB.             @LOA\n                         00000010           56846+SMF30IO_INV   EQU X'10'                Bit 3 When on, indicates that    04-IFASMFR3\n                                            56847+*                                            the value in SMF30IO has\n                                            56848+*                                            grown past its 4 byte\n                                            56849+*                                            maximum value capacity\n                                            56850+*                                            of 'FFFFFFFF'x and has\n                                            56851+*                                            wrapped back to zero.\n                                            56852+*                                            SMF30IO_L is the 8 byte\n                                            56853+*                                            equivalent of\n                                            56854+*                                            SMF30IO.             @LOA\n                         00000008           56855+SMF30MSO_INV  EQU X'08'                Bit 4 When on, indicates that    04-IFASMFR3\n                                            56856+*                                            the value in SMF30MSO\n                                            56857+*                                            has grown past its 4\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  124\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56858+*                                            byte maximum value\n                                            56859+*                                            capacity of 'FFFFFFFF'x\n                                            56860+*                                            and has wrapped back to\n                                            56861+*                                            zero.  SMF30MSO_L is the\n                                            56862+*                                            8 byte equivalent of\n                                            56863+*                                            SMF30MSO.             @LOA\n                         00000004           56864+SMF30ESU_INV  EQU X'04'                Bit 5 When on, indicates that    04-IFASMFR3\n                                            56865+*                                            the value in SMF30ESU\n                                            56866+*                                            has grown past its 4\n                                            56867+*                                            byte maximum value\n                                            56868+*                                            capacity of 'FFFFFFFF'x\n                                            56869+*                                            and has wrapped back to\n                                            56870+*                                            zero.  SMF30ESU_L is the\n                                            56871+*                                            8 byte equivalent of\n                                            56872+*                                            SMF30ESU.             @LOA\n 00000073 00                                56873+SMF30ZEP DC    X'00'                   Contains information associated  04-IFASMFR3\n                                            56874+*                                      with a potential future\n                                            56875+*                                      function, no further details\n                                            56876+*                                      are available at this time  @0HC\n 00000074 4040404040404040                  56877+SMF30JPN DC    CL8' ' IWMCLSFY SUBCOLN Subsystem collection name        04-IFASMFR3\n                                            56878+*                                      for address space       @WLMPGMY\n 0000007C 00000000                          56879+SMF30MSC DC    F'0'                    MSO SDC, scaled by 10000    @0CA 04-IFASMFR3\n 00000080 0000                              56880+SMF30CPC DC    H'0'                    CPU SDC, scaled by 10       @0CA 04-IFASMFR3\n 00000082 0000                              56881+SMF30LOC DC    H'0'                    IOC SDC, scaled by 10       @0CA 04-IFASMFR3\n 00000084 0000                              56882+SMF30SRC DC    H'0'                    SRB SDC, scaled by 10       @0CA 04-IFASMFR3\n 00000086 0000                              56883+SMF30ZNF DC    H'0'                    zAAP Normalization Factor        04-IFASMFR3\n                                            56884+*                                      for IFA service time. Used to\n                                            56885+*                                      convert between real IFA times\n                                            56886+*                                      and normalized IFA times,\n                                            56887+*                                      that is, the equivalent time\n                                            56888+*                                      on a standard CP. Multiply\n                                            56889+*                                      SMF30_TIME_ON_IFA by this value\n                                            56890+*                                      and divide by 256 to calculate\n                                            56891+*                                      the normalized IFA time.    @0DA\n 00000088 0000                              56892+SMF30SNF DC    H'0'                    zIIP Normalization Factor        04-IFASMFR3\n                                            56893+*                                      for zIIP service time. Used to\n                                            56894+*                                      convert between real zIIP times\n                                            56895+*                                      and normalized zIIP times,\n                                            56896+*                                      that is, the equivalent time\n                                            56897+*                                      on a standard CP. Multiply\n                                            56898+*                                      SMF30_TIME_ON_zIIP by this value\n                                            56899+*                                      and divide by 256 to calculate\n                                            56900+*                                      the normalized zIIP time.   @H6A\n 0000008A 404040404040                      56901+SMF30RS6   DC  CL6' '                  Reserved for alignment of        04-IFASMFR3\n                                            56902+*                                      SMF30SRV_L                  @LOA\n 00000090                                   56903+SMF30SRV_L DS  D'0'   RQSVSRVL         TOTAL SERVICE UNITS              04-IFASMFR3\n                                            56904+*                                      This is the 8 byte equivalent of\n                                            56905+*                                      SMF30SRV. Its value continues\n                                            56906+*                                      to grow after SMF30SRV_INV\n                                            56907+*                                      is set.                     @LOA\n 00000098                                   56908+SMF30CSU_L DS  D'0'   RQSVCPUL         CPU SERVICE UNITS                04-IFASMFR3\n                                            56909+*                                      This is the 8 byte equivalent of\n                                            56910+*                                      SMF30CSU. Its value continues\n                                            56911+*                                      to grow after SMF30CSU_INV\n                                            56912+*                                      is set.                     @LOA\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  125\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000A0                                   56913+SMF30SRB_L DS  D'0'   RQSVSRBL         SRB SERVICE UNITS                04-IFASMFR3\n                                            56914+*                                      This is the 8 byte equivalent of\n                                            56915+*                                      SMF30SRB. Its value continues\n                                            56916+*                                      to grow after SMF30SRB_INV\n                                            56917+*                                      is set.                     @LOA\n 000000A8                                   56918+SMF30IO_L  DS  D'0'   RQSVIOCL         I/O SERVICE UNITS                04-IFASMFR3\n                                            56919+*                                      This is the 8 byte equivalent of\n                                            56920+*                                      SMF30IO. Its value continues\n                                            56921+*                                      to grow after SMF30IO_INV\n                                            56922+*                                      is set.                     @LOA\n 000000B0                                   56923+SMF30MSO_L DS  D'0'   RQSVMSOL         MSO SERVICE UNITS                04-IFASMFR3\n                                            56924+*                                      This is the 8 byte equivalent of\n                                            56925+*                                      SMF30MSO. Its value continues\n                                            56926+*                                      to grow after SMF30MSO_INV\n                                            56927+*                                      is set.                     @LOA\n 000000B8                                   56928+SMF30ESU_L DS  D'0'   RQSVECPL         MSO SERVICE UNITS                04-IFASMFR3\n                                            56929+*                                      This is the 8 byte equivalent of\n                                            56930+*                                      SMF30ESU. Its value continues\n                                            56931+*                                      to grow after SMF30ESU_INV\n                                            56932+*                                      is set.                     @LOA\n 000000C0 F0                                56933+SMF30ACB DC    CL1'0'                  Contains information associated  04-IFASMFR3\n                                            56934+*                                      with a potential future\n                                            56935+*                                      function, no further details are\n                                            56936+*                                      available at this time      @LPA\n                         00000080           56937+SMF30LGA EQU  X'80'                    Contains information associated  04-IFASMFR3\n                                            56938+*                                      with a potential future\n                                            56939+*                                      function, no further details are\n                                            56940+*                                      available at this time      @LPA\n                         00000040           56941+SMF30P1A EQU  X'40'                    Contains information associated  04-IFASMFR3\n                                            56942+*                                      with a potential future\n                                            56943+*                                      function, no further details are\n                                            56944+*                                      available at this time      @LWA\n 000000C1 F0                                56945+SMF30CR  DC    CL1'0'                  Contains information associated  04-IFASMFR3\n                                            56946+*                                      with a potential future\n                                            56947+*                                      function, no further details are\n                                            56948+*                                      available at this time      @LPA\n 000000C2                                   56949+SMF30_Capacity_Change_Cnt     DS H The number of processor capacity     04-IFASMFR3\n                                            56950+*                                  changes that occurred since the\n                                            56951+*                                  previous interval or event\n                                            56952+*                                  interval.  This number will be\n                                            56953+*                                  greater than 1 when the number of\n                                            56954+*                                  processor capacity changes exceeded\n                                            56955+*                                  the number  specified in the\n                                            56956+*                                  MAXEVENTINTRECS parmlib option  @LVA\n 000000C4                                   56957+SMF30_RCTPCPUA_Actual         DS F Physical CPU adjustment factor       04-IFASMFR3\n                                            56958+*                                  (i.e. adjustment factor for\n                                            56959+*                                  converting CPU time to equivalent\n                                            56960+*                                  service, in basic-mode with\n                                            56961+*                                  all processors online). Based on\n                                            56962+*                                  Model Capacity Rating.          @LVA\n 000000C8                                   56963+SMF30_RCTPCPUA_Nominal        DS F Physical CPU adjustment factor       04-IFASMFR3\n                                            56964+*                                  (i.e. adjustment factor for\n                                            56965+*                                  converting CPU time to equivalent\n                                            56966+*                                  service in basic-mode with all\n                                            56967+*                                  processors online).  Based on\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  126\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           56968+*                                  Nominal Model Capacity Rating.  @LVA\n 000000CC                                   56969+SMF30_RCTPCPUA_scaling_factor DS F scaling factor for                   04-IFASMFR3\n                                            56970+*                                  SMF30_RCTPCPUA_actual and\n                                            56971+*                                  SMF30_RCTPCPUA_nominal.         @LVA\n 000000D0                                   56972+SMF30_Capacity_Adjustment_Ind DS XL1  When zero, the indication         04-IFASMFR3\n                                            56973+*                                  is not reported. When in the range\n                                            56974+*                                  1-99, some amount of reduction is\n                                            56975+*                                  indicated. When 100, the machine is\n                                            56976+*                                  operating at normal capacity.\n                                            56977+*                                  Primary CPUs and all secondary-type\n                                            56978+*                                  CPUs are similarly affected.    @LVA\n 000000D1                                   56979+SMF30_Capacity_Change_Rsn     DS XL1 Indicates the reason which is      04-IFASMFR3\n                                            56980+*                                  associated with the present\n                                            56981+*                                  value contained in\n                                            56982+*                                  SMF30_Capacity_Adjustment_Ind.  The\n                                            56983+*                                  bit values of this field correspond\n                                            56984+*                                  to those described in\n                                            56985+*                                  RMCTZ_Capacity_Adjustment_Indication\n                                            56986+*                                  of the IRARMCTZ mapping macro (see\n                                            56987+*                                  Data Areas).                    @PMC\n 000000D2                                   56988+SMF30_Capacity_Flags          DS 0CL1 Processor capacity flags     @LVA 04-IFASMFR3\n                         00000080           56989+SMF30_Event_Driven_Intvl_Rec EQU X'80' When on, indicates that the      04-IFASMFR3\n                                            56990+*                                  current interval record was\n                                            56991+*                                  generated as a result of an\n                                            56992+*                                  event, rather than as a result\n                                            56993+*                                  of standard interval expiration\n                                            56994+*                                  based on time.                  @LVA\n                         00000040           56995+SMF30_RQSVSUS_Err            EQU X'40' When on, indicates that an       04-IFASMFR3\n                                            56996+*                                  error occurred while collecting\n                                            56997+*                                  the data for SMF30SUS following a\n                                            56998+*                                  change in processor capacity. If\n                                            56999+*                                  this bit is found to be on when the\n                                            57000+*                                  record is being written, an\n                                            57001+*                                  additional attempt to collect the\n                                            57002+*                                  data from SRM is made. If that\n                                            57003+*                                  attempt is successful, the data is\n                                            57004+*                                  filled in at that time and the\n                                            57005+*                                  SMF30PIN error bit will be off. @LVA\n                         00000020           57006+SMF30_Capacity_Data_err      EQU X'20'  When on, indicates that an      04-IFASMFR3\n                                            57007+*                                  error occurred while collecting\n                                            57008+*                                  the processor capacity data,\n                                            57009+*                                  therefore the following fields\n                                            57010+*                                  are unreliable:\n                                            57011+*                                  SMF30_RCTPCPUA_Actual\n                                            57012+*                                  SMF30_RCTPCPUA_Nominal\n                                            57013+*                                  SMF30_RCTPCPUA_scaling_factor\n                                            57014+*                                  SMF30_Capacity_Adjustment_Ind\n                                            57015+*                                  SMF30_Capacity_Change_Rsn       @LVA\n                         00000010           57016+SMF30_PCD_Rsvd_Exists         EQU X'10' This bit is set in records      04-IFASMFR3\n                                            57017+*                                  generated on systems running\n                                            57018+*                                  z/OS 1.7 through z/OS 1.9. It will\n                                            57019+*                                  remain off in records generated at\n                                            57020+*                                  systems running z/OS 1.10 and\n                                            57021+*                                  above.                          @POA\n                                            57022+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  127\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57023+*\n                                            57024+*\n                                            57025+*        OPERATOR SECTION\n                                            57026+*\n                                            57027+*  COUNTS ARE INCREASED BY ONE WHEN THE MOUNTED VOLUME IS VERIFIED.\n                                            57028+*  IF AN INCORRECT VOLUME IS MOUNTED, THE COUNT IN NOT INCREASED\n                                            57029+*  EVEN THOUGH ANOTHER MOUNT MESSAGE IS ISSUED.\n                                            57030+*\n                                            57031+*\n 00000000                00000000 00000018  57032+SMF30OPS DSECT ,                       OPERATOR SECTION        @G744PJW 04-IFASMFR3\n 00000000                                   57033+SMF30PDM DS    F'0'   TCTPDASD         NUMBER OF NON-SPECIFIC DASD      04-IFASMFR3\n                                            57034+*                                      MOUNTS                  @G744PJW\n 00000004                                   57035+SMF30PRD DS    F'0'   TCTRDASD         NUMBER OF SPECIFIC DASD MOUNTS   04-IFASMFR3\n                                            57036+*                                                              @G742PJW\n 00000008                                   57037+SMF30PTM DS    F'0'   TCTPTAPE         NUMBER OF NON-SPECIFIC TAPE      04-IFASMFR3\n                                            57038+*                                      MOUNTS                  @G742PJW\n 0000000C                                   57039+SMF30TPR DS    F'0'   TCTRTAPE         NUMBER OF SPECIFIC TAPE MOUNTS   04-IFASMFR3\n                                            57040+*                                                              @G742PJW\n 00000010                                   57041+SMF30MTM DS    F'0'   TCTPMSS          NUMBER OF NON-SPECIFIC MSS       04-IFASMFR3\n                                            57042+*                                      MOUNTS. AS OF MVS/SP4.1, THIS\n                                            57043+*                                      FIELD IS NO LONGER VALID. THE\n                                            57044+*                                      DATA WILL ALWAYS BE ZEROS.\n                                            57045+*                                                              @G742PJW\n 00000014                                   57046+SMF30MSR DS    F'0'   TCTRMSS          NUMBER OF SPECIFIC MSS MOUNTS.   04-IFASMFR3\n                                            57047+*                                      AS OF MVS/SP4.1, THIS\n                                            57048+*                                      FIELD IS NO LONGER VALID. THE\n                                            57049+*                                      DATA WILL ALWAYS BE ZEROS.\n                                            57050+*                                                              @G742PJW\n                                            57051+*                                                                23@DPD\n                                            57052+*\n                                            57053+*        APPC/MVS Cumulative Resource Section                      @LMA\n                                            57054+*\n 00000000                00000000 00000028  57055+SMF30AR  DSECT ,                       APPC/MVS Cumulative Resource     04-IFASMFR3\n                                            57056+*                                      Section                     @LMA\n 00000000                                   57057+SMF30CN  DS    F'0'                    TOTAL NUMBER OF CONVERSATIONS    04-IFASMFR3\n                                            57058+*                                      ASSOCIATED WITH THE TRANSACTION\n                                            57059+*                                      PROGRAM (TP) ID, BOTH CURRENTLY\n                                            57060+*                                      ACTIVE AND DEALLOCATED.     @LMA\n 00000004                                   57061+SMF30CNA DS    F'0'                    TOTAL NUMBER OF CONVERSATIONS    04-IFASMFR3\n                                            57062+*                                      ALLOCATED.                  @LMA\n 00000008                                   57063+SMF30SEN DS    F'0'                    TOTAL NUMBER OF TIMES THE TP     04-IFASMFR3\n                                            57064+*                                      ISSUED A SEND VERB.         @LMA\n 0000000C                                   57065+SMF30DAT DS    CL8' '                  TOTAL AMOUNT OF DATA SENT BY     04-IFASMFR3\n                                            57066+*                                      THE TP.                     @LMA\n 00000014                                   57067+SMF30REC DS    F'0'                    TOTAL NUMBER OF TIMES THE TP     04-IFASMFR3\n                                            57068+*                                      ISSUED A RECIEVE VERB.      @LMA\n 00000018                                   57069+SMF30DAR DS    CL8' '                  TOTAL AMOUNT FO DATA RECIEVED    04-IFASMFR3\n                                            57070+*                                      BY THE TP.                  @LMA\n 00000020                                   57071+SMF30TAC DS    F'0'                    TOTAL NUMBER OF ACTIVE      @DPA 04-IFASMFR3\n                                            57072+*                                        CONVERSATIONS.            @DPA\n 00000024                                   57073+SMF30ATR DS    F'0'                    NUMBER OF APPC/MVS TRANSACTIONS  04-IFASMFR3\n                                            57074+*                                      SCHEDULED BY THE APPC/MVS\n                                            57075+*                                      TRANSACTION SCHEDULER(ASCH) @DPA\n                                            57076+*\n                                            57077+*        APPC/MVS Resource Section                                 @04A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  128\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57078+*\n 00000000                00000000 00000028  57079+SMF30DR  DSECT ,                       APPC/MVS Resource Section   @04A 04-IFASMFR3\n 00000000                                   57080+SMF30DC  DS    F'0'                    Number of conversations          04-IFASMFR3\n                                            57081+*                                      associated with the transaction\n                                            57082+*                                      program (TP) ID, both currently\n                                            57083+*                                      active and deallocated.     @04A\n 00000004                                   57084+SMF30DCA DS    F'0'                    Number of all                    04-IFASMFR3\n                                            57085+*                                      conversations allocated.    @04A\n 00000008                                   57086+SMF30DSC DS    F'0'                    Number of times the              04-IFASMFR3\n                                            57087+*                                      transaction program (TP) issued\n                                            57088+*                                      Send call.  Note: Due to the\n                                            57089+*                                      possibilty of an interval or\n                                            57090+*                                      step ending in the middle of a\n                                            57091+*                                      SEND call, this field may\n                                            57092+*                                      contain zero while SMF30DDS\n                                            57093+*                                      contains a non-zero value.  @04A\n 0000000C                                   57094+SMF30DDS DS    CL8' '                  Amount of data sent by the       04-IFASMFR3\n                                            57095+*                                      transaction program (TP).   @04A\n 00000014                                   57096+SMF30DRC DS    F'0'                    Number of times the              04-IFASMFR3\n                                            57097+*                                      transaction program (TP) issued\n                                            57098+*                                      a Receive call.  Note: Due to\n                                            57099+*                                      the possibilty of an interval or\n                                            57100+*                                      step ending in the middle of a\n                                            57101+*                                      RECEIVE call, this field may\n                                            57102+*                                      contain zero while SMF30DDR\n                                            57103+*                                      contains a non-zero value.  @04A\n 00000018                                   57104+SMF30DDR DS    CL8' '                  Amount of data received          04-IFASMFR3\n                                            57105+*                                      by the transaction program (TP).\n                                            57106+*                                                                  @04A\n 00000020                                   57107+SMF30DAC DS    F'0'                    Number of active                 04-IFASMFR3\n                                            57108+*                                      conversations.              @04A\n 00000024                                   57109+SMF30DTR DS    F'0'                    Number of APPC/MVS               04-IFASMFR3\n                                            57110+*                                      transactions programs scheduled\n                                            57111+*                                      by the APPC/MVS transaction\n                                            57112+*                                      scheduler (ASCH).           @04A\n                                            57113+*\n                                            57114+*        OpenMVS Process Section                                   @0OC\n                                            57115+*\n 00000000                00000000 00000060  57116+SMF30OP  DSECT ,                       OpenMVS Process Section     @0OC 04-IFASMFR3\n 00000000                                   57117+SMF30OPI DS    F'0'                    Process ID                  @LUA 04-IFASMFR3\n 00000004                                   57118+SMF30OPG DS    F'0'                    Process Group ID            @LUA 04-IFASMFR3\n 00000008                                   57119+SMF30OUI DS    F'0'                    Process User ID             @LUA 04-IFASMFR3\n 0000000C                                   57120+SMF30OUG DS    F'0'                    Process User Group ID       @LUA 04-IFASMFR3\n 00000010                                   57121+SMF30OSI DS    F'0'                    Process Session ID          @LUA 04-IFASMFR3\n 00000014                                   57122+SMF30OSC DS    F'0'                    Total CPU time accumulated by    04-IFASMFR3\n                                            57123+*                                      the syscalls Requested by the\n                                            57124+*                                      process (hundreths of a\n                                            57125+*                                      second)                     @PCC\n 00000018                                   57126+SMF30OST DS    F'0'                    Number of OpenMVS Syscalls       04-IFASMFR3\n                                            57127+*                                      Requested by the process    @PCC\n 0000001C                                   57128+SMF30ODR DS    F'0'                    Number of directory I/O blocks   04-IFASMFR3\n                                            57129+*                                      read by the process         @D1C\n 00000020                                   57130+SMF30OFR DS    F'0'                    Number of I/O blocks read        04-IFASMFR3\n                                            57131+*                                      for Standard files by the\n                                            57132+*                                      process                     @D1C\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  129\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000024                                   57133+SMF30OFW DS    F'0'                    Number of I/O blocks written     04-IFASMFR3\n                                            57134+*                                      for Standard files by the\n                                            57135+*                                      process                     @D1C\n 00000028                                   57136+SMF30OPR DS    F'0'                    Number of I/O blocks read        04-IFASMFR3\n                                            57137+*                                      for Pipe files by the\n                                            57138+*                                      process                     @D1C\n 0000002C                                   57139+SMF30OPW DS    F'0'                    Number of I/O blocks written     04-IFASMFR3\n                                            57140+*                                      for Pipe files by the\n                                            57141+*                                      process                     @D1C\n 00000030                                   57142+SMF30OSR DS    F'0'                    Number of I/O blocks read        04-IFASMFR3\n                                            57143+*                                      for Special files by the\n                                            57144+*                                      process                     @D1C\n 00000034                                   57145+SMF30OSW DS    F'0'                    Number of I/O blocks written     04-IFASMFR3\n                                            57146+*                                      for Special files by the\n                                            57147+*                                      process                     @D1C\n 00000038                                   57148+SMF30OLL DS    F'0'                    Number of path name Look calls   04-IFASMFR3\n                                            57149+*                                      to the logical file system  @LUA\n 0000003C                                   57150+SMF30OLP DS    F'0'                    Number of path name Look calls   04-IFASMFR3\n                                            57151+*                                      to the physical file system @LUA\n 00000040                                   57152+SMF30OGL DS    F'0'                    Number of path name Generation   04-IFASMFR3\n                                            57153+*                                      calls to the logical file system\n                                            57154+*                                                                  @LUA\n 00000044                                   57155+SMF30OGP DS    F'0'                    Number of path name Generation   04-IFASMFR3\n                                            57156+*                                      calls to the physical file\n                                            57157+*                                      system                      @LUA\n 00000048                                   57158+SMF30OPP DS    F'0'           OpenMVS parent process ID number     @L5A 04-IFASMFR3\n 0000004C                                   57159+SMF30OKR DS    F'0'           Number of I/O blocks read for Remote      04-IFASMFR3\n                                            57160+*                             socket by the process                @L5A\n 00000050                                   57161+SMF30OKW DS    F'0'           Number of I/O blocks written for          04-IFASMFR3\n                                            57162+*                             Remote socket by the process         @L3A\n 00000054                                   57163+SMF30OMS DS    F'0'           Number of bytes that message queues       04-IFASMFR3\n                                            57164+*                             sent                                 @L9A\n 00000058                                   57165+SMF30OMR DS    F'0'           Number of bytes that message queues       04-IFASMFR3\n                                            57166+*                             received                             @L9A\n 0000005C                                   57167+SMF30OSY DS    F'0'           Number of sync() function calls      @LCA 04-IFASMFR3\n                                            57168+*\n                                            57169+* Usage Data Section                                               @06A\n                                            57170+*\n 00000000                00000000 0000004C  57171+SMF30UD  DSECT                Usage Data Section                   @06A 04-IFASMFR3\n 00000000                                   57172+SMF30UPO DS    CL16           Product Owner or Vendor Name         @06A 04-IFASMFR3\n                                            57173+*                             (obtained from PRODOWNER option of   @06A\n                                            57174+*                             IFAUSAGE macro)                      @06A\n 00000010                                   57175+SMF30UPN DS    CL16           Product Name                         @06A 04-IFASMFR3\n                                            57176+*                             (obtained from PRODNAME option of    @06A\n                                            57177+*                             IFAUSAGE macro)                      @06A\n 00000020                                   57178+SMF30UPV DS    CL8            Product Version                      @06A 04-IFASMFR3\n                                            57179+*                             (obtained from PRODVERS option of    @06A\n                                            57180+*                             IFAUSAGE macro)                      @06A\n 00000028                                   57181+SMF30UPQ DS    CL8            Product Qualifer                     @06A 04-IFASMFR3\n                                            57182+*                             (obtained from PRODQUAL option of    @06A\n                                            57183+*                             IFAUSAGE macro)                      @06A\n 00000030                                   57184+SMF30UPI DS    CL8            Product ID Value                     @06A 04-IFASMFR3\n                                            57185+*                             (obtained from PRODID option of      @06A\n                                            57186+*                             IFAUSAGE macro)                      @06A\n 00000038                                   57187+SMF30UCT DS    F              Product CPU Time (.01 Seconds)       @06A 04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  130\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000003C                                   57188+SMF30UCS DS    F              Product SRB Time (.01 Seconds)       @06A 04-IFASMFR3\n 00000040                                   57189+SMF30URD DS    CL8            Product 'Specific' Resource Data     @06A 04-IFASMFR3\n 00000048                                   57190+SMF30UDF DS    XL1            Data format of value in SMF30URD     @06A 04-IFASMFR3\n                                            57191+*                                      '0' - No Value              @06A\n                                            57192+*                                      '1' - CPU Time (STCK)       @06A\n                                            57193+*                                      '2' - Binary                @06A\n                                            57194+*                                      '3' - Long Floating Point   @06A\n 00000049                                   57195+SMF30UFG DS    XL1            Usage Entry Flags                    @06A 04-IFASMFR3\n                         00000080           57196+SMF30UUN EQU   X'80'          UNAUTHORIZED REGISTER Requested      @06A 04-IFASMFR3\n 0000004A                                   57197+         DS    XL2            Reserved                             @06A 04-IFASMFR3\n                                            57198+*\n                                            57199+*        ARM Element Section                                       @L3A\n                                            57200+*\n 00000000                00000000 0000004D  57201+SMF30RM  DSECT ,                       ARM Section                 @L3A 04-IFASMFR3\n 00000000                                   57202+SMF30RNM DS    CL16           Element Name                         @L3A 04-IFASMFR3\n 00000010                                   57203+SMF30RTP DS    CL8            Element Type                         @L3A 04-IFASMFR3\n 00000018                                   57204+SMF30RRG DS    CL16           Restart Group for Element            @L3A 04-IFASMFR3\n 00000028                                   57205+SMF30RSN DS    CL8            The system name for the system on    @L3A 04-IFASMFR3\n                                            57206+*                             which the element was initially      @L3A\n                                            57207+*                             started, blank, for the initial      @L3A\n                                            57208+*                             start.  The current system name is   @L3A\n                                            57209+*                             in the SMF30SYN field.               @L3A\n 00000030                                   57210+SMF30RGT DS    F -            Time (local) Element requested       @L3A 04-IFASMFR3\n                                            57211+*                             REGISTER Function, in hundredths of  @L3A\n                                            57212+*                             a second                             @L3A\n 00000034                                   57213+SMF30RGD DS    P -            Date Element requested REGISTER      @L3A 04-IFASMFR3\n                                            57214+*                             Function, in the form 0cyydddF       @L3A\n                                            57215+*                             (where 'F' is the sign)              @L3A\n 00000038                                   57216+SMF30RWT DS    F -            Time (local) Element requested       @L3A 04-IFASMFR3\n                                            57217+*                             WAITPRED function, in hundredths of  @L3A\n                                            57218+*                             a second                             @L3A\n                                            57219+*                             Note that this is the time that      @L3A\n                                            57220+*                             the function was requested, not      @L3A\n                                            57221+*                             satisfied.                           @L3A\n                                            57222+*                             0, if the element has not            @L3A\n                                            57223+*                             requested the function.              @L3A\n 0000003C                                   57224+SMF30RWD DS    P -            Date Element requested WAITPRED      @L3A 04-IFASMFR3\n                                            57225+*                             function, in the following format:   @L3A\n                                            57226+*                             0cyydddF (where 'F' is the sign)     @L3A\n                                            57227+*                             0, if the element has not            @L3A\n                                            57228+*                             requested the function.              @L3A\n 00000040                                   57229+SMF30RYT DS    F -            Time (local) Element was READY,      @L3A 04-IFASMFR3\n                                            57230+*                             in hundredths of a second            @L3A\n                                            57231+*                             0, if the element is not yet READY   @L3A\n 00000044                                   57232+SMF30RYD DS    P -            Date Element was READY, in the       @L3A 04-IFASMFR3\n                                            57233+*                             following format:  0cyydddF (where   @L3A\n                                            57234+*                             'F' is the sign)                     @L3A\n                                            57235+*                             0, if the element is not yet READY   @L3A\n 00000048                                   57236+SMF30RTT DS    F -            Time (local) Element was             @L3A 04-IFASMFR3\n                                            57237+*                             DEREGISTERED, in hundredths of a     @L3A\n                                            57238+*                             second                               @L3A\n                                            57239+*                             0, if the element is not yet         @L3A\n                                            57240+*                             DEREGISTERED or ended abnormally.    @L3A\n 0000004C                                   57241+SMF30RTD DS    P -            Date Element was DEREGISTERED, in    @L3A 04-IFASMFR3\n                                            57242+*                             the following format:  0cyydddF      @L3A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  131\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57243+*                             (where 'F' is the sign)              @L3A\n                                            57244+*                             0, if the element is not yet         @L3A\n                                            57245+*                             DEREGISTERED or ended abnormally.    @L3A\n                                            57246+*                                                                  @LFA\n                                            57247+*  Multisystem enclave Remote system data section.                 @LFA\n                                            57248+*                                                                  @LFA\n 00000000                00000000 00000014  57249+SMF30MSE DSECT ,              MultiSystem Enclave Remote System    @LFA 04-IFASMFR3\n                                            57250+*                             Data section.                        @LFA\n 00000000                                   57251+SMF30MKY DS    0CL12' '       Unique system key.                   @LFA 04-IFASMFR3\n 00000000                                   57252+SMF30MRS DS    CL8            System name.                         @LFA 04-IFASMFR3\n 00000008 00000000                          57253+SMF30MRA DC    F'0'           Adjustment factor for CPU rate.      @LFA 04-IFASMFR3\n                                            57254+*                             (Number of sixteenths of one CPU     @LFA\n                                            57255+*                             microsecond per CPU service unit)    @LFA\n 0000000C 00000000                          57256+SMF30MRD DC    F'0'           CPU Time used by dependent enclaves  @LFA 04-IFASMFR3\n                                            57257+*                             that executed on named system        @LFA\n                                            57258+*                             (in hundredths of a second).         @LFA\n 00000010 00000000                          57259+SMF30MRI DC    F'0'           CPU Time used by independent         @LFA 04-IFASMFR3\n                                            57260+*                             enclaves that executed on named      @LFA\n                                            57261+*                             system                               @LFA\n                                            57262+*                             (in hundredths of a second).         @LFA\n                                            57263+*\n                                            57264+* End of Type 30 Mapping ....                                      @LUA\n                                            57265+*\n                                            57266+*        IGWSMF SMF42_01=YES,SMF42_02=YES,SMF42_03=YES,SMF42_04=YES,   X\n                                                 +               SMF42_05=YES,SMF42_06=YES,SMF42_09=YES,SMF42_0A=YES,    X\n                                                 +               SMF42_0B=YES,SMF42_0F=YES,SMF42_0G=YES,SMF42_0H=YES,    X\n                                                 +               SMF42_0I=YES,SMF42_0J=YES,SMF42_0K=YES,SMF42_0L=YES,    X\n                                                 +               SMF42_0M=YES,SMF42_0N=YES,SMF42_0P=YES,SMF42_0Q=YES,    X\n                                                 +               DSECT=YES\n                                            57268+* %IGWSMF_1:;\n                                            57269+*/* START OF SPECIFICATIONS *******************************************\n                                            57270+*   $MAC(IGWSMF) COMP(DF104):                                         *\n                                            57271+*01* MACRO NAME: IGWSMF                                               *\n                                            57272+*01* DESCRIPTIVE NAME: SMF Record Type 42 Definition                  *\n                                            57273+*                                                                     *\n                                            57274+*                                                                     *\n                                            57275+*PROPRIETARY V3 STATEMENT                                             *\n                                            57276+*LICENSED MATERIALS - PROPERTY OF IBM                                 *\n                                            57277+*\"RESTRICTED MATERIALS OF IBM\"                                        *\n                                            57278+*5695-DF1                                                             *\n                                            57279+*COPYRIGHT 1989, 2008 IBM CORP.                                       *\n                                            57280+*END PROPRIETARY V3 STATEMENT                                         *\n                                            57281+*                                                                     *\n                                            57282+*    FUNCTION: Map the following SMF record type 42 subtypes:         *\n                                            57283+*                                                                     *\n                                            57284+*                                                                     *\n                                            57285+*      Subtype 1 - BMF totals section for analysis of overall BMF     *\n                                            57286+*                  performance.  One storage class summary section    *\n                                            57287+*                  for each storage class.                            *\n                                            57288+*                                                                     *\n                                            57289+*      Subtype 2 - One section for each cache control unit (3990-3)   *\n                                            57290+*                  having at least one SMS managed device attached.   *\n                                            57291+*                  One section for each SMS managed volume attached   *\n                                            57292+*                  to a 3990-3 control unit.                          *\n                                            57293+*                                                                     *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  132\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57294+*      Subtype 3 - For SMS Operational Services event audit records   *\n                                            57295+*                  written each time the SMS configuration changes    *\n                                            57296+*                  when 1) operator issues VARY SMS, or 2) ISMF       *\n                                            57297+*                  'ACTIVATE' or activate via SETSMS, or 3) ENF       *\n                                            57298+*                  event occurred after VARY of SMS managed volume.   *\n                                            57299+*                                                                     *\n                                            57300+*      Subtype 4 - A subtype 4 record will be written for    @OY66824 *\n                                            57301+*                  System Data Mover session statistics for a@OY66824 *\n                                            57302+*                  Concurrent Copy session or for an Extended@OY66824 *\n                                            57303+*                  Sequential Data Set when interfacing with @OY66824 *\n                                            57304+*                  the backup program.                       @OY66824 *\n                                            57305+*                                                                     *\n                                            57306+*      Subtype 5 - Storage Class Response Time Section.          @L1A *\n                                            57307+*                  Contains I/O statistics by storage class.     @L1A *\n                                            57308+*                                                                     *\n                                            57309+*      Subtype 6 - Data Set by Job section.                      @L1A *\n                                            57310+*                  Contains I/O statistics by data set.          @L1A *\n                                            57311+*                  If recorded at end of SMF interval, one       @L1A *\n                                            57312+*                  record contains data for all open data sets   @L1A *\n                                            57313+*                  in an address space.                          @L1A *\n                                            57314+*                  If recorded during Close, one record contains @L1A *\n                                            57315+*                  data for all concatenated data sets.          @L1A *\n                                            57316+*                                                                     *\n                                            57317+*                    ______________________________________      @L1A *\n                                            57318+*                   | SMF42 header                         |     @L1A *\n                                            57319+*                   |______________________________________      @L1A *\n                                            57320+*                   | SMF42 subtype 6 header section       |     @L1A *\n                                            57321+*                   |______________________________________      @L1A *\n                                            57322+*                   | SMF42 product section                |     @L1A *\n                                            57323+*                   |______________________________________      @L1A *\n                                            57324+*                   | SMF42 subtype 6 job header section   |     @L1A *\n                                            57325+*                   |______________________________________      @L1A *\n                                            57326+*                   | SMF42 subtype 6 DS #1 header section |     @L1A *\n                                            57327+*                   |______________________________________      @L1A *\n                                            57328+*                   | SMF42 subtype 6 DS #1 I/O stats      |     @L1A *\n                                            57329+*                   |______________________________________      @L1A *\n                                            57330+*                   | SMF42 subtype 6 DS #2 header section |     @L1A *\n                                            57331+*                   |______________________________________      @L1A *\n                                            57332+*                   | SMF42 subtype 6 DS #2 I/O stats      |     @L1A *\n                                            57333+*                   |______________________________________      @L1A *\n                                            57334+*                                                                     *\n                                            57335+*      Subtype  7 - Used by NFS                                  @10A *\n                                            57336+*                                                                     *\n                                            57337+*      Subtype  8 - Used by NFS                                  @10A *\n                                            57338+*                                                                     *\n                                            57339+*      Subtype  9 - A subtype 9 record will be written for       @P1C *\n                                            57340+*                   B37,D37 or E37 abends to document            @P1A *\n                                            57341+*                   information such as jobname, data set name,  @P1A *\n                                            57342+*                   volume serial number, number of extents      @P1A *\n                                            57343+*                   on the volume, secondary allocation amount   @P1A *\n                                            57344+*                   etc.                                         @P1A *\n                                            57345+*                                                                     *\n                                            57346+*      Subtype 10 - A subtype 10 record will be written at the   @23A *\n                                            57347+*                   time of volume selection failure because of  @23A *\n                                            57348+*                   insufficient space when allocate a data set. @23A *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  133\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57349+*                                                                     *\n                                            57350+*      Subtype 11 - A subtype 11 record will be written for      @07A *\n                                            57351+*                   System Data Mover session statistics for     @07A *\n                                            57352+*                   Extended Remote Copy (XRC) sessions when     @07A *\n                                            57353+*                   the global SMF interval expires.             @07A *\n                                            57354+*                                                                     *\n                                            57355+*      Subtype 12 - Available                                    @10A *\n                                            57356+*                                                                     *\n                                            57357+*      Subtype 13 - Available                                    @10A *\n                                            57358+*                                                                     *\n                                            57359+*      Subtype 14 - Available                                    @10A *\n                                            57360+*                                                                     *\n                                            57361+*      Subtype 15 - Storage class MSR summary                    @10A *\n                                            57362+*                   Below Bar and Above Bar (64 bit addressing)  @64A *\n                                            57363+*                                                                     *\n                                            57364+*      Subtype 16 - Data set MSR summary                         @10A *\n                                            57365+*                   Below Bar and Above Bar (64 bit addressing)  @64A *\n                                            57366+*                                                                     *\n                                            57367+*      Subtype 17 - Coupling facility lock structure summary     @10A *\n                                            57368+*                                                                     *\n                                            57369+*      Subtype 18 - Coupling facility cache partition summary    @10A *\n                                            57370+*                                                                     *\n                                            57371+*      Subtype 19 - Local Buffer Manager LRU Activity summary    @11A *\n                                            57372+*                   Below Bar and Above Bar (64 bit addressing)  @64A *\n                                            57373+*                                                                     *\n                                            57374+*      Subtype 20 - STOW Initialize (deletes all members in a    @L2A *\n                                            57375+*                     PDSE)                                      @L2A *\n                                            57376+*                                                                     *\n                                            57377+*      Subtype 21 - Member deletion                              @L2A *\n                                            57378+*                                                                     *\n                                            57379+*      Subtype 22 - DFSMSrmm Audit Information                   @MZA *\n                                            57380+*                                                                     *\n                                            57381+*      Subtype 23 - DFSMSrmm Security Information                @MZA *\n                                            57382+*                                                                     *\n                                            57383+*      Subtype 24 - Member Add or Replace                        @26A *\n                                            57384+*                                                                     *\n                                            57385+*      Subtype 25 - Member Rename                                @26A *\n                                            57386+*                                                                     *\n                                            57387+*    NOTES:                                                           *\n                                            57388+*                                                                     *\n                                            57389+*      DEPENDENCIES:                                                  *\n                                            57390+*      RESTRICTIONS: None                                             *\n                                            57391+*                                                                     *\n                                            57392+*    MACRO:                                                           *\n                                            57393+*                                                                     *\n                                            57394+*      PROCESSOR: PLX                                                 *\n                                            57395+*      DISTRIBUTION LIBRARY: PLSMACS                                  *\n                                            57396+*      ATTRIBUTES:                                                    *\n                                            57397+*                                                                     *\n                                            57398+*        This macro produces a PLAS structure which describes the     *\n                                            57399+*        format of the SMF record type 42.                            *\n                                            57400+*                                                                     *\n                                            57401+*    EXIT NORMAL:                                                     *\n                                            57402+*                                                                     *\n                                            57403+*      RETURN CODE: 0                                                 *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  134\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57404+*      No errors detected                                             *\n                                            57405+*                                                                     *\n                                            57406+*    EXIT ERRORS:                                                     *\n                                            57407+*                                                                     *\n                                            57408+*        No errors will be detected by this macro.                    *\n                                            57409+*                                                                     *\n                                            57410+*    EXTERNAL REFERENCES:                                             *\n                                            57411+*                                                                     *\n                                            57412+*      MACROS:                                                        *\n                                            57413+*        None                                                         *\n                                            57414+*                                                                     *\n                                            57415+***********************************************************************\n                                            57416+*                                                                     *\n                                            57417+*    CHANGE ACTIVITY:                                                 *\n                                            57418+*                                                                     *\n                                            57419+***********************************************************************\n                                            57420+*                                                                     *\n                                            57421+*   $L0=EVNTAUD,HDP3320,871124,STLRLF: SMF Event Audit Records        *\n                                            57422+*   $01=OY36584,HDP3320,901008,SJDAB: Make product sect. end word bdy *\n                                            57423+*   $02=OY48288,HDP3330,911022,SJPLMW: Change header to only include  *\n                                            57424+*                      the subtype triplets for the selected subtype  *\n                                            57425+*                      to be written with the SMF record. Fields in   *\n                                            57426+*                      subtype 1 were changed from EBCDIC 8 byte      *\n                                            57427+*                      fields to binary 4 byte fields. New fields     *\n                                            57428+*                      were added to subtype 3.                       *\n                                            57429+*   $L1=DCME,JDZ1110,920121,SJPLMW: Dynamic Cache Mgmt support        *\n                                            57430+*   $03=OY62455,JDZ1110,930517,SJPLMM: Macro not shipped w/110        *\n                                            57431+*   $04=OY66824,JDZ1110,930915,TUCKAD: Add subtype 4                  *\n                                            57432+*   $RT=I/O DELAY,HDZ11B0,931130,SJPLJB: I/O delay statistics         *\n                                            57433+*   $RT=IODELAY,HDZ11B0,931015,SJPLJB:  I/O Delay Statistics     @RTA *\n                                            57434+*   Duplicate symbol name                                     @OW00573*\n                                            57435+*   Stratis support                                           @OW00159*\n                                            57436+*   $07=OW08476,JDZ1110,940929,TUCKAD: Add Subtype 11             @07A*\n                                            57437+*   Changed 1Cl0008 to 1CL0008.                               @OW09203*\n                                            57438+*   $DM=RLS CMM,HDZ11C0,950106,      : Add Subtypes 15,16,17,18   @10A*\n                                            57439+*   $10=OW21970,HDZ11C0,08/06/96,SJPLMKD: Update sub-type 15,16,  @10A*\n                                            57440+*   17,18 to add thread stats and new locking fields.             @10A*\n                                            57441+*   $08=OW16041,HDZ11C0,10/04/95,SJPLRMS: Add bit in Subtype 2 to @08A*\n                                            57442+*   indicate the statistics are for D/T3990-6 enhanced mode.      @08A*\n                                            57443+*   $09=OW16125,HDZ11C0,10/04/95,SJPLRMS: Add GMT offset in sub-  @09A*\n                                            57444+*   type 6 to allow correct calculation of local time.            @09A*\n                                            57445+*   $P1=SMST42,HDZ11D0.103096,SJPLJAL: Add Subtype 9              @P1A*\n                                            57446+*   $P1=OW20866,HDZ11C0,06/06/96,SJPLJAB: Add Volume statistics   @P1A*\n                                            57447+*   to the Subtype 5 record and additional data set flags to the  @P1A*\n                                            57448+*   Subtype 6 record.                                             @P1A*\n                                            57449+*   $11=OW22419,HDZ11C0,10/03/96,SJPLMKD: Add sub-type 19 and     @11A*\n                                            57450+*                                         modify sub-type 18.     @11A*\n                                            57451+*   $P2=K140182,HDZ11D0,12/31/96,SJPLJAL: Remove fld: S42SGNME    @P2A*\n                                            57452+*   $12=OW26451,HDZ11D0,970418,SJPLMV: add two new fields to      @12A*\n                                            57453+*   subtype 6, maximum I/O response and service time by dataset   @12A*\n                                            57454+*   $13=OW30233,HDZ11D0,971103,SJPLGEC: CORRECT ASSEMBLY ERRORS   @13A*\n                                            57455+*   $14=OW28921,HDZ11C0,971210,TUCGEM: Add Planned outage         @14A*\n                                            57456+*   $15=OW32781,HDZ11D0,980414,SJPLGEC: Dup S42DSN label for      @15A*\n                                            57457+*                                       record type 6 and 9       @16A*\n                                            57458+*   $16=OW33202,HDZ11D0,980508,SJPLMKD: Dup S42SRH label for      @16A*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  135\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57459+*                                       record type 1             @16A*\n                                            57460+*   $17=OW35542,HDZ11D0,981020,SJPLJAL: MACRO CONTROL STATEMENT   @17A*\n                                            57461+*                                       INCORRECTLY COMMENTED OUT @17A*\n                                            57462+*   $18=OW38073,HDZ11E0,990309,SJPLRAV: BMF cache metrics         @18A*\n                                            57463+*   $19=OW34238,HDZ11E0,981203,SJPLMV:  Fibre Channel Support     @19A*\n                                            57464+*   $21=OW39785,HDZ11E0,990528,SJPLDLM: Update MMF for CDATA      @21A*\n                                            57465+*   $20=OW41407,HDZ11C0,990819,TUCRNC: Four digit device numbers  @20A*\n                                            57466+*   $23=AUTOMAT,HDZ11G0,000321,SJPLELA: Add Subtype 10 for record @23A*\n                                            57467+*       the info in allocation process when volume selection fails@23A*\n                                            57468+*   $L2=HDZ11G0,HDZ11G0,001214,SJPLREB: Subtype 20 for stow initialize\n                                            57469+*       and subtype 21 for member deletion.                       @L2A*\n                                            57470+*   $24=K170387,HDZ11G0,010213,SJPLELA: Add unit for space qnty   @24A*\n                                            57471+*   $22=OW48124,HDZ11C0,010209,TUCDRB: Remove assembler comment   @22A*\n                                            57472+*   $P5=K170794,HDZ11G0,010910,SHPLMKD: Add SMF support for >4k   @P5A*\n                                            57473+*                                       Correct Display Cache     @P5A*\n                                            57474+*                                       Sphere counts.            @P5A*\n                                            57475+*   $24=OW53524,HDZ11G0,020311,sjplreb: correct interface parms   @24A*\n                                            57476+*   $J1=OW54007,HDZ11F0,020321,SJPLJRC: Add UCB data in subtype 3 @J1A*\n                                            57477+*                                       sysroute of OW53933       @J1A*\n                                            57478+*   $64=OA12211,HDZ11K0,041005,SJPLPJS: Add above bar stats for   @64A*\n                                            57479+*                                       SMF42-19 records          @64A*\n                                            57480+*   $L3=MLS,HDZ1A10,060222,JCLee:       Add MLS support           @L3A*\n                                            57481+*   $MZ=V1R10  ,HDZ1A10,070502,MZAH   : DFSMSrmm subtypes         @MZA*\n                                            57482+*   $65=HDZ1A10,070823,TUCRAT: Add SDM EAV SMF42-4 records        @65A*\n                                            57483+*   $25=HDZ1A10,071031,JASONCL: Remove * after S42VSMSF           @25A*\n                                            57484+*   $P6=HDZ1A10,080130,BPOOJA : Correct Spelling errors           @P6A*\n                                            57485+*   $P7=K1A2300,HDZ1A10,080222,JASONCL: MLS support in detail part@P7A*\n                                            57486+*   $26=OA25205,HDZ1A10,07/08/2008,sjplreb:                       @26A\n                                            57487+*      1. Add a new section to subtype 20 and 21 to report racf userid\n                                            57488+*      2. New subtype 24 for add/replace of a pds/pdse member\n                                            57489+*      3. New subtype 25 for rename of a pds/pdse member\n                                            57490+*   $27=OA25688,HDZ1A10,080530,SJPLMV: Flash Memory ehancement    @27A\n                                            57491+*   $28=OA31648,HDZ1190,02/16/2010,TTao: lcdlatch contention cnt  @28A\n                                            57492+* END OF SPECIFICATIONS **********************************************/\n                                            57493+* %GOTO IGWSMF_2;                         /*\n                                            57494+*\n                                            57495+*\n                                            57496+*\n                                            57497+*\n                                            57498+*   -----------------------------------------------------------------\n                                            57499+*     Header for SMF record type 42\n                                            57500+*   -----------------------------------------------------------------\n                                            57501+*\n                                            57502+*\n 00000000                00000000 00000024  57503+SMF42    DSECT ,                                                        03-IGWSMF\n 00000000                                   57504+SMF42BAS DS    0D        SMF42BAS is the basing expr.                   03-IGWSMF\n 00000000                                   57505+SMF42RCL DS    1FL2      Record Length                                  03-IGWSMF\n 00000002                                   57506+SMF42SGD DS    1FL2      Segment Descriptor (RDW) -- 0 if record is    X03-IGWSMF\n                                                 +                         not spanned\n 00000004                                   57507+SMF42FLG DS    0BL1      System indicator flags                         03-IGWSMF\n                         00000080           57508+SMF42FSI EQU   X'80'     When set=subsystem id follows system id        03-IGWSMF\n                         00000040           57509+SMF42FSU EQU   X'40'     When set = subtypes are used                   03-IGWSMF\n                         00000004           57510+SMF42FXA EQU   X'04'     When set = MVS/XA (SMF enters)                 03-IGWSMF\n                         00000002           57511+SMF42FS2 EQU   X'02'     When set = VS2 (SMF enters)                    03-IGWSMF\n                         00000001           57512+SMF42FS1 EQU   X'01'     When set = VS1 (SMF enters)                    03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  136\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000004                00000004 00000005  57513+         ORG   SMF42FLG+X'00000001'                                     03-IGWSMF\n 00000005                                   57514+SMF42RTY DS    1FL1      Record type: 42 (X'2A')                        03-IGWSMF\n 00000006                                   57515+SMF42TME DS    1FL4                                                     03-IGWSMF\n 0000000A                                   57516+SMF42DTE DS    1CL0004   Record written date (by SMF)                   03-IGWSMF\n 0000000E                                   57517+SMF42SID DS    1CL0004   System identification (by SMF)                 03-IGWSMF\n 00000012                                   57518+SMF42SSI DS    1CL0004   Subsystem Id                                   03-IGWSMF\n 00000016                                   57519+SMF42STY DS    1FL2      Record subtype                                 03-IGWSMF\n 00000018                                   57520+SMF42NT  DS    1FL2      Number of triplets (optional)                  03-IGWSMF\n 0000001A                                   57521+         DS    1FL2      Reserved (optional)                            03-IGWSMF\n                                            57522+*\n                                            57523+*   -----------------------------------------------------------------\n                                            57524+*    Product section triplet\n                                            57525+*   -----------------------------------------------------------------\n                                            57526+*\n                                            57527+*\n 0000001C                                   57528+SMF42OPS DS    1FL4      Offset to product section                      03-IGWSMF\n 00000020                                   57529+SMF42LPS DS    1FL2      Length of product section                      03-IGWSMF\n 00000022                                   57530+SMF42NPS DS    1FL2      Number of product sections                     03-IGWSMF\n                                            57531+*\n                                            57532+*   -----------------------------------------------------------------\n                                            57533+*    Header must end on word boundary\n                                            57534+*   -----------------------------------------------------------------\n                                            57535+*\n                                            57536+*\n 00000024                                   57537+SMF42END DS    0C        1st data section triplet                       03-IGWSMF\n                         00000024           57538+SMF42_LEN EQU  *-SMF42                                                  03-IGWSMF\n                                            57539+*\n                                            57540+*   -----------------------------------------------------------------\n                                            57541+*    SMF42 subtype header sections.\n                                            57542+*\n                                            57543+*    Only include the subtype triplet(s) for the selected subtype.\n                                            57544+*   -----------------------------------------------------------------\n                                            57545+*\n                                            57546+*\n                                            57547+*\n                                            57548+*\n                                            57549+*   -----------------------------------------------------------------\n                                            57550+*    SMF42 subtype 1 header section (BMF Statistics)\n                                            57551+*   -----------------------------------------------------------------\n                                            57552+*\n                                            57553+*\n 00000000                00000000 00000010  57554+SMF42S1  DSECT ,                                                        03-IGWSMF\n 00000000                                   57555+SMF42BMO DS    1FL4      Offset to BMF totals section                   03-IGWSMF\n 00000004                                   57556+SMF42BML DS    1FL2      Length of BMF totals section                   03-IGWSMF\n 00000006                                   57557+SMF42BMN DS    1FL2      Number of BMF totals sections                  03-IGWSMF\n 00000008                                   57558+SMF42SCO DS    1FL4      Offset to storage class summary section        03-IGWSMF\n 0000000C                                   57559+SMF42SCL DS    1FL2      Length of storage class summary section        03-IGWSMF\n 0000000E                                   57560+SMF42SCN DS    1FL2      Number of storage class summary sections       03-IGWSMF\n                         00000010           57561+SMF42L1  EQU   16        Length of subtype 1 header section             03-IGWSMF\n                         00000010           57562+SMF42S1_LEN EQU *-SMF42S1                                               03-IGWSMF\n                                            57563+*\n                                            57564+*\n                                            57565+*\n                                            57566+*\n                                            57567+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  137\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57568+*   -----------------------------------------------------------------\n                                            57569+*    SMF42 subtype 2 header section (Cache summary)\n                                            57570+*   -----------------------------------------------------------------\n                                            57571+*\n                                            57572+*\n 00000000                00000000 00000010  57573+SMF42S2  DSECT ,                                                        03-IGWSMF\n 00000000                                   57574+SMF42CUO DS    1FL4      Offset to control unit cache section           03-IGWSMF\n 00000004                                   57575+SMF42CUL DS    1FL2      Length of control unit cache section           03-IGWSMF\n 00000006                                   57576+SMF42CUN DS    1FL2      Number of control unit cache sections          03-IGWSMF\n 00000008                                   57577+SMF42VLO DS    1FL4      Offset to volume section                       03-IGWSMF\n 0000000C                                   57578+SMF42VLL DS    1FL2      Length of volume section                       03-IGWSMF\n 0000000E                                   57579+SMF42VLN DS    1FL2      Number of volume sections                      03-IGWSMF\n                         00000010           57580+SMF42L2  EQU   16        Length of subtype 2 header section             03-IGWSMF\n                         00000010           57581+SMF42S2_LEN EQU *-SMF42S2                                               03-IGWSMF\n                                            57582+*\n                                            57583+*\n                                            57584+*\n                                            57585+*\n                                            57586+*\n                                            57587+*   -----------------------------------------------------------------\n                                            57588+*    SMF42 subtype 3 header section (Config. audit)\n                                            57589+*   -----------------------------------------------------------------\n                                            57590+*\n                                            57591+*\n 00000000                00000000 00000008  57592+SMF42S3  DSECT ,                                                        03-IGWSMF\n 00000000                                   57593+SMF42EAO DS    1FL4      Offset to event audit section                  03-IGWSMF\n 00000004                                   57594+SMF42EAL DS    1FL2      Length of event audit section                  03-IGWSMF\n 00000006                                   57595+SMF42EAN DS    1FL2      Number of event audit sections                 03-IGWSMF\n                         00000008           57596+SMF42L3  EQU   8         Length of subtype 3 header section             03-IGWSMF\n                         00000008           57597+SMF42S3_LEN EQU *-SMF42S3                                               03-IGWSMF\n                                            57598+*\n                                            57599+*\n                                            57600+*\n                                            57601+*\n                                            57602+*\n                                            57603+*   -----------------------------------------------------------------\n                                            57604+*    SMF42 subtype 4 header section (System Data Mover statistics)\n                                            57605+*                   (Concurrent Copy Session (CC) statistics or\n                                            57606+*                   Extended Physical Data Set (EXT)         @OY66824\n                                            57607+*                   statistics)                              @OY66824\n                                            57608+*   -----------------------------------------------------------------\n                                            57609+*\n                                            57610+*\n 00000000                00000000 00000018  57611+SMF42S4 DSECT ,                                              @OY66824   03-IGWSMF\n 00000000                                   57612+SMF42CCO DS    1FL4      Offset to CC statistics             @OY66824   03-IGWSMF\n 00000004                                   57613+SMF42CCL DS    1FL2      Length of CC statistics             @OY66824   03-IGWSMF\n 00000006                                   57614+SMF42CCN DS    1FL2      Number of CC sessions               @OY66824   03-IGWSMF\n 00000008                                   57615+SMF42EXO DS    1FL4      Offset to EXT statistics            @OY66824   03-IGWSMF\n 0000000C                                   57616+SMF42EXL DS    1FL2      Length of EXT statistics            @OY66824   03-IGWSMF\n 0000000E                                   57617+SMF42EXN DS    1FL2      Number of EXT sessions              @OY66824   03-IGWSMF\n 00000010                                   57618+SMF42VCO DS    1FL4      Offset to VCC statistics                @65a   03-IGWSMF\n 00000014                                   57619+SMF42VCL DS    1FL2      Length of VCC statistics                @65a   03-IGWSMF\n 00000016                                   57620+SMF42VCN DS    1FL2      Number of VCC sessions                  @65a   03-IGWSMF\n                         00000018           57621+SMF42L4  EQU *-SMF42S4   Length of subtype 4 header section      @65C   03-IGWSMF\n                         00000018           57622+SMF42S4_LEN EQU *-SMF42S4                                    @OY66824   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  138\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57623+*\n                                            57624+*\n                                            57625+*\n                                            57626+*\n                                            57627+*\n                                            57628+*   -----------------------------------------------------------------\n                                            57629+*    SMF42 subtype 5 header section\n                                            57630+*     (Storage class response time statistics)\n                                            57631+*   -----------------------------------------------------------------\n                                            57632+*\n                                            57633+*\n 00000000                00000000 00000010  57634+SMF42S5  DSECT ,                                                        03-IGWSMF\n 00000000                                   57635+SMF42SRO DS    1FL4      Offset to storage class response time section  03-IGWSMF\n 00000004                                   57636+SMF42SRL DS    1FL2      Length of storage class response time section  03-IGWSMF\n 00000006                                   57637+SMF42SRN DS    1FL2      Number of storage class response time         X03-IGWSMF\n                                                 +                         sections\n 00000008                                   57638+SMF42VHO DS    1FL4      Offset to volume header section          @P1A  03-IGWSMF\n 0000000C                                   57639+SMF42VHL DS    1FL2      Length of volume header section          @P1A  03-IGWSMF\n 0000000E                                   57640+SMF42VHN DS    1FL2      Number of volume header sections (=1)    @P1A  03-IGWSMF\n                         00000010           57641+SMF42L5  EQU   *-SMF42S5 Length of subtype 5 header section       @P1C  03-IGWSMF\n                         00000010           57642+SMF42S5_LEN EQU *-SMF42S5                                               03-IGWSMF\n                                            57643+*\n                                            57644+*\n                                            57645+*\n                                            57646+*\n                                            57647+*\n                                            57648+*   -----------------------------------------------------------------\n                                            57649+*    SMF42 subtype 6 header section\n                                            57650+*     (job/dataset statistics)\n                                            57651+*   -----------------------------------------------------------------\n                                            57652+*\n                                            57653+*\n 00000000                00000000 00000008  57654+SMF42S6  DSECT ,                                                        03-IGWSMF\n 00000000                                   57655+SMF42JHO DS    1FL4      Offset to job header section                   03-IGWSMF\n 00000004                                   57656+SMF42JHL DS    1FL2      Length of job header section                   03-IGWSMF\n 00000006                                   57657+SMF42JHN DS    1FL2      Number of job header sections                  03-IGWSMF\n                         00000008           57658+SMF42L6  EQU   8         Length of subtype 6 header section             03-IGWSMF\n                         00000024           57659+SMF42LN  EQU   36        Length of beginning SMF42 header section       03-IGWSMF\n                         00000008           57660+SMF42S6_LEN EQU *-SMF42S6                                               03-IGWSMF\n                                            57661+*\n                                            57662+*\n                                            57663+*\n                                            57664+*\n                                            57665+*  ------------------------------------------------------------- @P1A\n                                            57666+*    SMF42 subtype 9 header section (B37/D37/E37 abend)          @P1A\n                                            57667+*  ------------------------------------------------------------- @P1A\n                                            57668+*\n 00000000                00000000 00000010  57669+SMF42S9  DSECT ,                                                 @P1A   03-IGWSMF\n 00000000                                   57670+SMF42ABO DS    1FL4      Offset to X37 abend section             @P1A   03-IGWSMF\n 00000004                                   57671+SMF42ABL DS    1FL2      Length of X37 abend section             @P1A   03-IGWSMF\n 00000006                                   57672+SMF42ABN DS    1FL2      Number of X37 abend sections (always 1) @P1A   03-IGWSMF\n 00000008                                   57673+SMF42SMO DS    1FL4      Offset to SMS data section              @P1A   03-IGWSMF\n 0000000C                                   57674+SMF42SML DS    1FL2      Length of SMS data section              @P1A   03-IGWSMF\n 0000000E                                   57675+SMF42SMN DS    1FL2      Number of SMS data sections (always 1)  @P1A   03-IGWSMF\n                         00000010           57676+SMF42L9  EQU   16        Length of subtype 9 header section      @P1A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  139\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000010           57677+SMF42S9_LEN EQU *-SMF42S9                                               03-IGWSMF\n                                            57678+*\n                                            57679+*\n                                            57680+*\n                                            57681+*\n                                            57682+*   -----------------------------------------------------------------\n                                            57683+*    SMF42 subtype 10 header section                             @23A\n                                            57684+*    (Volume selection failure data)                             @23A\n                                            57685+*   -----------------------------------------------------------------\n                                            57686+*\n                                            57687+*\n 00000000                00000000 00000008  57688+SMF42SA  DSECT ,                                                 @23A   03-IGWSMF\n 00000000                                   57689+SMF42VSF DS    1FL4      Offset to Volume Selection Failure data @23A   03-IGWSMF\n 00000004                                   57690+SMF42VSL DS    1FL2      Length of Volume Selection Failure data @23A   03-IGWSMF\n 00000006                                   57691+SMF42VSN DS    1FL2      Number of Volume Selection Failure data @23A   03-IGWSMF\n                         00000008           57692+SMF42LA  EQU   8         Length of subtype 10 header section     @23A   03-IGWSMF\n                         00000008           57693+SMF42SA_LEN EQU *-SMF42SA                                        @23A   03-IGWSMF\n                                            57694+*\n                                            57695+*\n                                            57696+*\n                                            57697+*   -----------------------------------------------------------------\n                                            57698+*    SMF42 subtype 11 header section (Extended Remote Copy (XRC)\n                                            57699+*                                     Session Statistics)        @07A\n                                            57700+*   -----------------------------------------------------------------\n                                            57701+*\n                                            57702+*\n 00000000                00000000 00000008  57703+SMF42SB DSECT ,                                                  @07A   03-IGWSMF\n 00000000                                   57704+SMF42XRO DS    1FL4      Offset to XRC statistics                @07A   03-IGWSMF\n 00000004                                   57705+SMF42XRL DS    1FL2      Length of XRC statistics                @07A   03-IGWSMF\n 00000006                                   57706+SMF42XRN DS    1FL2      Number of XRC sessions                  @07A   03-IGWSMF\n                         00000008           57707+SMF42LB  EQU   8         Length of subtype 11 header section     @07A   03-IGWSMF\n                         00000008           57708+SMF42SB_LEN EQU *-SMF42SB                                        @07A   03-IGWSMF\n                                            57709+*\n                                            57710+*\n                                            57711+*\n                                            57712+* /*-----------------------------------------------------------------*/\n                                            57713+* /* SMF42 subtype 15 header section                                 */\n                                            57714+* /*  (Storage class response time summary)                          */\n                                            57715+* /*-----------------------------------------------------------------*/\n                                            57716+*\n                                            57717+*\n 00000000                00000000 00000020  57718+SMF42SF DSECT ,                                                         03-IGWSMF\n 00000000                                   57719+SMF42FC1 DS   1FL4                 Offset to SYSPLEX wide SC            03-IGWSMF\n                                            57720+*                                  summary data section           @10A\n 00000004                                   57721+SMF42FC2 DS   1FL2                 Length of SYSPLEX wide SC            03-IGWSMF\n                                            57722+*                                  summary data section           @10A\n 00000006                                   57723+SMF42FC3 DS   1FL2                 Number of SYSPLEX wide SC            03-IGWSMF\n                                            57724+*                                  summary data sections          @10A\n 00000008                                   57725+SMF42FC4 DS   1FL4                 Offset to SC/CF/SYS                  03-IGWSMF\n                                            57726+*                                  summary section                @10A\n 0000000C                                   57727+SMF42FC5 DS   1FL2                 Length of SC/CF/SYS                  03-IGWSMF\n                                            57728+*                                  summary section                @10A\n 0000000E                                   57729+SMF42FC6 DS   1FL2                 Number of SC/CF/SYS                  03-IGWSMF\n                                            57730+*                                  summary sections               @10A\n                                            57731+* /*-----------------------------------------------------------------*/\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  140\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57732+*                                                                 @64A\n                                            57733+* The following are above bar buffer variables                    @64A\n                                            57734+*                                                                 @64A\n                                            57735+* /*-----------------------------------------------------------------*/\n                                            57736+*                                                                 @64A\n 00000010                                   57737+SMF2AFC1 DS   1FL4                 Offset to SYSPLEX wide SC      @64A  03-IGWSMF\n                                            57738+*                                  summary data section above bar @64A\n 00000014                                   57739+SMF2AFC2 DS   1FL2                 Length of SYSPLEX wide SC      @64A  03-IGWSMF\n                                            57740+*                                  summary data section above bar @64A\n 00000016                                   57741+SMF2AFC3 DS   1FL2                 Number of SYSPLEX wide SC      @64A  03-IGWSMF\n                                            57742+*                                  summary data sections abve bar @64A\n 00000018                                   57743+SMF2AFC4 DS   1FL4                 Offset to SC/CF/SYS            @64A  03-IGWSMF\n                                            57744+*                                  summary section  above bar     @64A\n 0000001C                                   57745+SMF2AFC5 DS   1FL2                 Length of SC/CF/SYS            @64A  03-IGWSMF\n                                            57746+*                                  summary section  above bar     @64A\n 0000001E                                   57747+SMF2AFC6 DS   1FL2                 Number of SC/CF/SYS            @64A  03-IGWSMF\n                                            57748+*                                  summary sections above bar     @64A\n                                            57749+*                                                                 @64A\n                                            57750+* DECLARE\n                         00000020           57751+SMF42LF EQU *-SMF42SF              Length of subtype 15 header          03-IGWSMF\n                                            57752+*                                          section                @10A\n                                            57753+*\n                                            57754+*\n                                            57755+*\n                                            57756+* /*-----------------------------------------------------------------*/\n                                            57757+* /* SMF42 subtype 16 header section                                 */\n                                            57758+* /*  (Dataset response time summary)                                */\n                                            57759+* /*-----------------------------------------------------------------*/\n                                            57760+*\n 00000000                00000000 00000020  57761+SMF42SG DSECT ,                                                         03-IGWSMF\n 00000000                                   57762+SMF42GD1 DS    1FL4                Offset to SYSPLEX wide data set      03-IGWSMF\n                                            57763+*                                  summary data section          @10A\n 00000004                                   57764+SMF42GD2 DS    1FL2                Length of SYSPLEX wide data set      03-IGWSMF\n                                            57765+*                                  summary data section          @10A\n 00000006                                   57766+SMF42GD3 DS    1FL2                Number of SYSPLEX wide data set      03-IGWSMF\n                                            57767+*                                  summary data sections         @10A\n 00000008                                   57768+SMF42GD4 DS    1FL4                Offset to data set/CF/SYS            03-IGWSMF\n                                            57769+*                                  summary section               @10A\n 0000000C                                   57770+SMF42GD5 DS    1FL2                Length of data set/CF/SYS            03-IGWSMF\n                                            57771+*                                  summary section               @10A\n 0000000E                                   57772+SMF42GD6 DS    1FL2                Number of data set/CF/SYS            03-IGWSMF\n                                            57773+*                                  summary sections              @10A\n                                            57774+* /*-----------------------------------------------------------------*/\n                                            57775+*                                                                 @64A\n                                            57776+* The following are above bar buffer variables                    @64A\n                                            57777+*                                                                 @64A\n                                            57778+* /*-----------------------------------------------------------------*/\n                                            57779+*                                                                 @64A\n 00000010                                   57780+SMF2AGD1 DS    1FL4                Offset to SYSPLEX wide data    @64A  03-IGWSMF\n                                            57781+*                                  set summary data section       @64A\n 00000014                                   57782+SMF2AGD2 DS    1FL2                Length of SYSPLEX wide data    @64A  03-IGWSMF\n                                            57783+*                                  set summary data section       @64A\n 00000016                                   57784+SMF2AGD3 DS    1FL2                Number of SYSPLEX wide data    @64A  03-IGWSMF\n                                            57785+*                                  set summary data sections      @64A\n 00000018                                   57786+SMF2AGD4 DS    1FL4                Offset to data set/CF/SYS      @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  141\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57787+*                                  summary section                @64A\n 0000001C                                   57788+SMF2AGD5 DS    1FL2                Length of data set/CF/SYS      @64A  03-IGWSMF\n                                            57789+*                                  summary section                @64A\n 0000001E                                   57790+SMF2AGD6 DS    1FL2                Number of data set/CF/SYS      @64A  03-IGWSMF\n                                            57791+*                                  summary sections               @64A\n                         00000020           57792+SMF42LG EQU *-SMF42SG              Length of subtype 16 header          03-IGWSMF\n                                            57793+*                                  section\n                                            57794+*\n                                            57795+*\n                                            57796+*\n                                            57797+* /*-----------------------------------------------------------------*/\n                                            57798+* /* SMF42 subtype 17 header section                                 */\n                                            57799+* /*  (Lock structure activity summary)                              */\n                                            57800+* /*-----------------------------------------------------------------*/\n                                            57801+*\n 00000000                00000000 00000010  57802+SMF42SH DSECT ,                                                         03-IGWSMF\n 00000000                                   57803+SMF42HL1 DS    1FL4                Offset to MVS SYS lock structure     03-IGWSMF\n                                            57804+*                                  activity totals section\n 00000004                                   57805+SMF42HL2 DS    1FL2                Length of MVS SYS lock structure     03-IGWSMF\n                                            57806+*                                  activity totals section\n 00000006                                   57807+SMF42HL3 DS    1FL2                Number of MVS SYS lock structure     03-IGWSMF\n                                            57808+*                                  activity totals sections\n 00000008                                   57809+SMF42HL4 DS    1FL4                Offset to lock structure             03-IGWSMF\n                                            57810+*                                  summary section\n 0000000C                                   57811+SMF42HL5 DS    1FL2                Length of lock structure             03-IGWSMF\n                                            57812+*                                  summary section\n 0000000E                                   57813+SMF42HL6 DS    1FL2                Number of lock structure             03-IGWSMF\n                                            57814+*                                  summary sections\n                         00000010           57815+SMF42LH EQU *-SMF42SH              Length of subtype 9 header           03-IGWSMF\n                                            57816+*                                          section\n                                            57817+*\n                                            57818+*\n                                            57819+*\n                                            57820+* /*-----------------------------------------------------------------*/\n                                            57821+* /* SMF42 subtype 18 header section                                 */\n                                            57822+* /*  (Coupling Facility Cache Partition summary)                    */\n                                            57823+* /*-----------------------------------------------------------------*/\n                                            57824+*\n 00000000                00000000 00000018  57825+SMF42SI DSECT ,                                                         03-IGWSMF\n 00000000                                   57826+SMF42IM1 DS    1FL4                Offset to CF cache partition         03-IGWSMF\n                                            57827+*                                  activity totals section\n 00000004                                   57828+SMF42IM2 DS    1FL2                Length of CF cache partition         03-IGWSMF\n                                            57829+*                                  activity totals section\n 00000006                                   57830+SMF42IM3 DS    1FL2                Number of CF cache partition         03-IGWSMF\n                                            57831+*                                  activity totals sections\n 00000008                                   57832+SMF42IM4 DS    1FL4                Offset to single cache partition     03-IGWSMF\n                                            57833+*                                  summary section\n 0000000C                                   57834+SMF42IM5 DS    1FL2                Length of single CF cache            03-IGWSMF\n                                            57835+*                                  partition summary section\n 0000000E                                   57836+SMF42IM6 DS    1FL2                Number of single CF cache            03-IGWSMF\n                                            57837+*                                  partition summary sections\n 00000010                                   57838+SMF42IM7 DS    1FL4                Offset to directory/element    @11A  03-IGWSMF\n                                            57839+*                                  ratio data summary section     @11A\n 00000014                                   57840+SMF42IM8 DS    1FL2                Length of directory/element    @11A  03-IGWSMF\n                                            57841+*                                  data summary section           @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  142\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000016                                   57842+SMF42IM9 DS    1FL2                Number of directory/element    @11A  03-IGWSMF\n                                            57843+*                                  ratio sections                 @11A\n                         00000018           57844+SMF42LI EQU *-SMF42SI              Length of subtype 18 header          03-IGWSMF\n                                            57845+*                                  section\n                                            57846+*\n                                            57847+*\n                                            57848+*\n                                            57849+* --------------------------------------------------------------- @11A\n                                            57850+*    SMF42 subtype 19 header section                              @11A\n                                            57851+*     (Buffer Manager LRU activity)  (AB) = Above bar addressing  @11A\n                                            57852+* --------------------------------------------------------------- @11A\n                                            57853+*\n 00000000                00000000 00000020  57854+SMF42SJ DSECT ,                                                   @11A  03-IGWSMF\n 00000000                                   57855+SMF42JN1 DS    1FL4                Offset to Buffer Manager LRU   @11A  03-IGWSMF\n                                            57856+*                                  activity total section         @11A\n 00000004                                   57857+SMF42JN2 DS    1FL2                Length of Buffer Manager LRU   @11A  03-IGWSMF\n                                            57858+*                                  activity total section         @11A\n 00000006                                   57859+SMF42JN3 DS    1FL2                Number of Buffer Manager LRU   @11A  03-IGWSMF\n                                            57860+*                                  activity total sections.       @11A\n 00000008                                   57861+SMF42JN4 DS    1FL4                Offset to Buffer Manager LRU   @11A  03-IGWSMF\n                                            57862+*                                  activity section               @11A\n 0000000C                                   57863+SMF42JN5 DS    1FL2                Length of Buffer Manager LRU   @11A  03-IGWSMF\n                                            57864+*                                  activity section               @11A\n 0000000E                                   57865+SMF42JN6 DS    1FL2                Number of Buffer Manager LRU   @11A  03-IGWSMF\n                                            57866+*                                  activity sections.             @11A\n                                            57867+*                                                                 @64A\n                                            57868+* --------------------------------------------------------------- @64A\n                                            57869+*                                                                 @64A\n                                            57870+* The following are above bar buffer variables                    @64A\n                                            57871+*                                                                 @64A\n                                            57872+* --------------------------------------------------------------- @64A\n                                            57873+*                                                                 @64A\n 00000010                                   57874+SMF2AJN1 DS    1FL4                Offset to Buffer Manager LRU   @64A  03-IGWSMF\n                                            57875+*                                  activity total section         @64A\n 00000014                                   57876+SMF2AJN2 DS    1FL2                Length of Buffer Manager LRU   @64A  03-IGWSMF\n                                            57877+*                                  activity total section         @64A\n 00000016                                   57878+SMF2AJN3 DS    1FL2                Number of Buffer Manager LRU   @64A  03-IGWSMF\n                                            57879+*                                  activity total sections        @64A\n 00000018                                   57880+SMF2AJN4 DS    1FL4                Offset to Buffer Manager LRU   @64A  03-IGWSMF\n                                            57881+*                                  activity section               @64A\n 0000001C                                   57882+SMF2AJN5 DS    1FL2                Length of Buffer Manager LRU   @64A  03-IGWSMF\n                                            57883+*                                  activity section               @64A\n 0000001E                                   57884+SMF2AJN6 DS    1FL2                Number of Buffer Manager LRU   @64A  03-IGWSMF\n                                            57885+*                                  activity sections              @64A\n                         00000020           57886+SMF42LJ EQU *-SMF42SJ              Length of subtype 19 header    @11A  03-IGWSMF\n                                            57887+*                                  section                        @11A\n                                            57888+*\n                         00000020           57889+SMF42LEN EQU *-SMF42                Length of beginning SMF42           03-IGWSMF\n                                            57890+*                                   header section\n                                            57891+*\n                                            57892+*\n                                            57893+*\n                                            57894+* --------------------------------------------------------------- @L2A\n                                            57895+*    SMF42 subtype 20 header section                              @L2A\n                                            57896+*     (STOW Initialize)                                           @L2A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  143\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           57897+* --------------------------------------------------------------- @L2A\n                                            57898+*\n 00000000                00000000 00000010  57899+SMF42SK DSECT ,                                                   @L2A  03-IGWSMF\n 00000000                                   57900+SMF42KN1 DS    1FL4                Offset to STOW Initialize      @L2A  03-IGWSMF\n                                            57901+*                                   section                       @L2A\n 00000004                                   57902+SMF42KN2 DS    1FL2                Length of STOW Initialize      @L2A  03-IGWSMF\n                                            57903+*                                   section                       @L2A\n 00000006                                   57904+SMF42KN3 DS    1FL2                Number of STOW Initialize      @L2A  03-IGWSMF\n                                            57905+*                                   sections                      @L2A\n 00000008                                   57906+SMF42KN4 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            57907+*                                   section                       @26A\n 0000000C                                   57908+SMF42KN5 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            57909+*                                   section                       @26A\n 0000000E                                   57910+SMF42KN6 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            57911+*                                   sections                      @26A\n                         00000010           57912+SMF42LK EQU *-SMF42SK              Length of subtype 20 header    @L2A  03-IGWSMF\n                                            57913+*                                   section                       @L2A\n                                            57914+*\n                                            57915+* --------------------------------------------------------------- @L2A\n                                            57916+*    SMF42 subtype 21 header section                              @L2A\n                                            57917+*     (Member Deletion)                                           @L2A\n                                            57918+* --------------------------------------------------------------- @L2A\n 00000000                00000000 00000018  57919+SMF42SL DSECT ,                                                   @L2A  03-IGWSMF\n 00000000                                   57920+SMF42LN1 DS    1FL4                Offset to Member Delete        @L2A  03-IGWSMF\n                                            57921+*                                   header section                @L2A\n 00000004                                   57922+SMF42LN2 DS    1FL2                Length of Member delete        @L2A  03-IGWSMF\n                                            57923+*                                   header section                @L2A\n 00000006                                   57924+SMF42LN3 DS    1FL2                Number of Member delete        @L2A  03-IGWSMF\n                                            57925+*                                   header sections               @L2A\n 00000008                                   57926+SMF42LN4 DS    1FL4                Offset to Deleted alias names  @L2A  03-IGWSMF\n                                            57927+*                                   section                       @L2A\n 0000000C                                   57928+SMF42LN5 DS    1FL2                Length of Deleted alias names  @L2A  03-IGWSMF\n                                            57929+*                                   section                       @L2A\n 0000000E                                   57930+SMF42LN6 DS    1FL2                Number of Deleted alias names  @L2A  03-IGWSMF\n                                            57931+*                                   sections                      @L2A\n 00000010                                   57932+SMF42LN7 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            57933+*                                   section                       @26A\n 00000014                                   57934+SMF42LN8 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            57935+*                                   section                       @26A\n 00000016                                   57936+SMF42LN9 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            57937+*                                   sections                      @26A\n                         00000018           57938+SMF42LL EQU *-SMF42SL              Length of subtype 21 header    @L2A  03-IGWSMF\n                                            57939+*                                  section                        @L2A\n                                            57940+*\n                                            57941+* --------------------------------------------------------------- @MZA\n                                            57942+*    SMF42 subtype 22 header section                              @MZA\n                                            57943+*     (DFSMSrmm Audit Information)                                @MZA\n                                            57944+* --------------------------------------------------------------- @MZA\n                                            57945+*                                                                 @MZA\n 00000000                00000000 00000010  57946+SMF42SM DSECT ,                                                   @MZA  03-IGWSMF\n 00000000                                   57947+SMF4222AUD DS    1FL4    Offset to audit section                  @MZA  03-IGWSMF\n 00000004                                   57948+SMF4222LAD DS    1FL2    Length of audit section                  @MZA  03-IGWSMF\n 00000006                                   57949+SMF4222NAD DS    1FL2    Number of audit sections                 @MZA  03-IGWSMF\n 00000008                                   57950+SMF4222REC DS    1FL4    Offset to record section                 @MZA  03-IGWSMF\n 0000000C                                   57951+SMF4222LRC DS    1FL2    Length of record section                 @MZA  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  144\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000000E                                   57952+SMF4222NRC DS    1FL2    Number of record sections                @MZA  03-IGWSMF\n 00000010                                   57953+SMF4222END DS    0C      End of audit section                     @MZA  03-IGWSMF\n                         00000010           57954+SMF4222LEN EQU *-SMF42SM Length of subtype 22 header section      @MZA  03-IGWSMF\n                                            57955+*                                                                 @MZA\n                                            57956+*                                                                 @MZA\n                                            57957+* --------------------------------------------------------------- @MZA\n                                            57958+*    SMF42 subtype 23 header section                              @MZA\n                                            57959+*     (DFSMSrmm Security Information)                             @MZA\n                                            57960+* --------------------------------------------------------------- @MZA\n                                            57961+*                                                                 @MZA\n 00000000                00000000 00000008  57962+SMF42SN DSECT ,                                                   @MZA  03-IGWSMF\n 00000000                                   57963+SMF4223SEC DS    1FL4    Offset to security section               @MZA  03-IGWSMF\n 00000004                                   57964+SMF4223LSC DS    1FL2    Length of security section               @MZA  03-IGWSMF\n 00000006                                   57965+SMF4223NSC DS    1FL2    Number of security sections              @MZA  03-IGWSMF\n 00000008                                   57966+SMF4223END DS    0C      End of security section                  @MZA  03-IGWSMF\n                         00000008           57967+SMF4223LEN EQU *-SMF42SN Length of subtype 23 header section      @MZA  03-IGWSMF\n                                            57968+*                                                                 @MZA\n                                            57969+* --------------------------------------------------------------- @26A\n                                            57970+*    SMF42 subtype 24 header section                              @26A\n                                            57971+*     (Member Add or Replace)                                     @26A\n                                            57972+* --------------------------------------------------------------- @26A\n 00000000                00000000 00000018  57973+SMF42SP DSECT ,                                                   @26A  03-IGWSMF\n 00000000                                   57974+SMF42PN1 DS    1FL4                Offset to Member add/replace   @26A  03-IGWSMF\n                                            57975+*                                   header section                @26A\n 00000004                                   57976+SMF42PN2 DS    1FL2                Length of Member add/replace   @26A  03-IGWSMF\n                                            57977+*                                   header section                @26A\n 00000006                                   57978+SMF42PN3 DS    1FL2                Number of Member add/replace   @26A  03-IGWSMF\n                                            57979+*                                   header sections               @26A\n 00000008                                   57980+SMF42PN4 DS    1FL4                Offset to alias names          @26A  03-IGWSMF\n                                            57981+*                                   section                       @26A\n 0000000C                                   57982+SMF42PN5 DS    1FL2                Length of alias names          @26A  03-IGWSMF\n                                            57983+*                                   section                       @26A\n 0000000E                                   57984+SMF42PN6 DS    1FL2                Number of alias names          @26A  03-IGWSMF\n                                            57985+*                                   sections                      @26A\n 00000010                                   57986+SMF42PN7 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            57987+*                                   section                       @26A\n 00000014                                   57988+SMF42PN8 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            57989+*                                   section                       @26A\n 00000016                                   57990+SMF42PN9 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            57991+*                                   sections                      @26A\n                         00000018           57992+SMF42PL EQU *-SMF42SP              Length of subtype 24 header    @26A  03-IGWSMF\n                                            57993+*                                  section                        @26A\n                                            57994+* --------------------------------------------------------------- @26A\n                                            57995+*    SMF42 subtype 25 header section                              @26A\n                                            57996+*     (Member Rename)                                             @26A\n                                            57997+* --------------------------------------------------------------- @26A\n 00000000                00000000 00000018  57998+SMF42SQ DSECT ,                                                   @26A  03-IGWSMF\n 00000000                                   57999+SMF42QN1 DS    1FL4                Offset to Member rename        @26A  03-IGWSMF\n                                            58000+*                                   header section                @26A\n 00000004                                   58001+SMF42QN2 DS    1FL2                Length of Member rename        @26A  03-IGWSMF\n                                            58002+*                                   header section                @26A\n 00000006                                   58003+SMF42QN3 DS    1FL2                Number of Member rename        @26A  03-IGWSMF\n                                            58004+*                                   header sections               @26A\n 00000008                                   58005+SMF42QN4 DS    1FL4                Offset to old member name      @26A  03-IGWSMF\n                                            58006+*                                   section                       @26A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  145\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000000C                                   58007+SMF42QN5 DS    1FL2                Length of old member name      @26A  03-IGWSMF\n                                            58008+*                                   section                       @26A\n 0000000E                                   58009+SMF42QN6 DS    1FL2                Number of old member name      @26A  03-IGWSMF\n                                            58010+*                                   sections                      @26A\n 00000010                                   58011+SMF42QN7 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            58012+*                                   section                       @26A\n 00000014                                   58013+SMF42QN8 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            58014+*                                   section                       @26A\n 00000016                                   58015+SMF42QN9 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            58016+*                                   sections                      @26A\n                         00000018           58017+SMF42QL EQU *-SMF42SQ              Length of subtype 25 header    @26A  03-IGWSMF\n                                            58018+*                                  section                        @26A\n                                            58019+*                                                                 @MZA\n                                            58020+*   -----------------------------------------------------------------\n                                            58021+*     Product Section\n                                            58022+*   -----------------------------------------------------------------\n                                            58023+*\n                                            58024+*\n 00000000                00000000 00000028  58025+SMF42PRD DSECT ,                                                        03-IGWSMF\n 00000000                                   58026+SMF42PDL DS    1CL0008   Product Level                                  03-IGWSMF\n 00000008                                   58027+SMF42PDN DS    1CL0010   Product Name                                   03-IGWSMF\n 00000012                                   58028+SMF42PSV DS    X         Subtype version number                  @P1A   03-IGWSMF\n 00000013                                   58029+         DS    1CL0001   Reserved                                @P1C   03-IGWSMF\n 00000014                                   58030+SMF42PTS DS    1CL0008   Interval Start or Open TOD                     03-IGWSMF\n 0000001C                                   58031+SMF42PTE DS    1CL0008   Interval End or Close TOD                      03-IGWSMF\n 00000024                                   58032+         DS    1CL0004   Reserved                                       03-IGWSMF\n                                            58033+*\n                                            58034+*   -----------------------------------------------------------------\n                                            58035+*    Product section must end on word boundary\n                                            58036+*   -----------------------------------------------------------------\n                                            58037+*\n                                            58038+*\n                         00000028           58039+SMF42PLN EQU   40        Length of Product Section                      03-IGWSMF\n                         00000001           58040+SMF42PVR EQU   1         Product Section Version                 @P1A   03-IGWSMF\n                         00000028           58041+SMF42PRD_LEN EQU *-SMF42PRD                                             03-IGWSMF\n                                            58042+*\n                                            58043+*\n                                            58044+*\n                                            58045+*\n                                            58046+*   -----------------------------------------------------------------\n                                            58047+*     Start of Buffer Management Facility Section\n                                            58048+*   -----------------------------------------------------------------\n                                            58049+*\n                                            58050+*\n                                            58051+*\n                                            58052+*   -----------------------------------------------------------------\n                                            58053+*    SMF type 42 subtype 1 (Buffer Manager Statistics, part 1)\n                                            58054+*   -----------------------------------------------------------------\n                                            58055+*\n                                            58056+*\n 00000000                00000000 00000024  58057+SMF4201A DSECT ,                                                        03-IGWSMF\n 00000000                                   58058+SMF42BMF DS    0CL0036   Description of BMF totals section              03-IGWSMF\n 00000000                                   58059+SMF42TNA DS    1FL4      Total number of storage classes                03-IGWSMF\n 00000004                                   58060+SMF42TMT DS    1FL4      Interval length (total time of measurement    X03-IGWSMF\n                                                 +                         period)\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  146\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000008                                   58061+SMF42TRT DS    1FL4      Total number of member data page reads         03-IGWSMF\n 0000000C                                   58062+SMF42TRH DS    1FL4      Total number of member data page read hits    X03-IGWSMF\n                                                 +                         (found in BMF)\n 00000010                                   58063+SMF42TDT DS    1FL4      Total number of directory data page reads      03-IGWSMF\n 00000014                                   58064+SMF42TDH DS    1FL4      Total number of directory data page read hits X03-IGWSMF\n                                                 +                         (found in BMF)\n 00000018                                   58065+SMF42BUF DS    1FL4      Total number of active BMF 4K buffers   @18A   03-IGWSMF\n 0000001C                                   58066+SMF42BMX DS    1FL4      High water mark of BMF buffers          @18A   03-IGWSMF\n 00000020                                   58067+SMF42LRU DS    1FL2      BMF LRU interval time                   @18A   03-IGWSMF\n 00000022                                   58068+SMF42UIC DS    1FL2      BMF LRU cycles before buffer cast out   @18A   03-IGWSMF\n                         00000024           58069+SMF4201A_LEN EQU *-SMF4201A                                             03-IGWSMF\n                                            58070+*\n                                            58071+*   -----------------------------------------------------------------\n                                            58072+*    SMF type 42 subtype 1 (Buffer Manager Statistics, part 2)\n                                            58073+*   -----------------------------------------------------------------\n                                            58074+*\n                                            58075+*\n 00000000                00000000 00000030  58076+SMF4201B DSECT ,                                                        03-IGWSMF\n 00000000                                   58077+SMF42SC  DS    0CL0048   Description of Stor Class Sum section @OW00573 03-IGWSMF\n 00000000                                   58078+SMF42PNA DS    0CL0032   Storage class name                             03-IGWSMF\n 00000000                                   58079+SMF42PNL DS    1FL2      Storage class name length                      03-IGWSMF\n 00000002                                   58080+SMF42PNN DS    1CL0030   Storage class name                             03-IGWSMF\n 00000020                                   58081+SMF42SRT DS    1FL4      Total number of member data page reads         03-IGWSMF\n 00000024                                   58082+SMF42SRH DS    1FL4      Total number of member data page read hits    X03-IGWSMF\n                                                 +                         (found in BMF)\n 00000028                                   58083+SMF42SDT DS    1FL4      Total number of directory data page reads      03-IGWSMF\n 0000002C                                   58084+SMF42SDH DS    1FL4      Total number of directory data page read hits X03-IGWSMF\n                                                 +                         (found in BMF)\n                         00000030           58085+SMF4201B_LEN EQU *-SMF4201B                                             03-IGWSMF\n                                            58086+*\n                                            58087+*\n                                            58088+*\n                                            58089+*\n                                            58090+*\n                                            58091+*   -----------------------------------------------------------------\n                                            58092+*     Start of Control Unit Cache Summary Section\n                                            58093+*   -----------------------------------------------------------------\n                                            58094+*\n                                            58095+*\n                                            58096+*\n                                            58097+*   -----------------------------------------------------------------\n                                            58098+*    SMF type 42 subtype 2 (Control Unit Cache Summary, part 1)\n                                            58099+*   -----------------------------------------------------------------\n                                            58100+*\n                                            58101+*\n 00000000                00000000 00000058  58102+SMF4202A DSECT ,                                                        03-IGWSMF\n 00000000                                   58103+SMF42CUC DS    0CL0088   Description of control unit cache section      03-IGWSMF\n 00000000                                   58104+SMF42HWS DS    0CL0032   Description of hardware status section         03-IGWSMF\n 00000000                                   58105+SMF42SCS DS    1BL1      Storage director caching status. Format as    X03-IGWSMF\n                                                 +                         follows: 000xxxxx = Caching is active         X\n                                                 +                         001xxxxx = Caching is pending active 010xxxxx X\n                                                 +                         = Internal subsystem error. Caching has       X\n                                                 +                         terminated 100xxxxx = Caching deactivated due X\n                                                 +                         to explicit host request 110xxxxx = Pending   X\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  147\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +                         off in process. Command to deactivate cache   X\n                                                 +                         received, destage still in progress 111xxxxx  X\n                                                 +                         = Pending off destage failed xxx1xxxx =       X\n                                                 +                         Subsystem storage disabled for maintenance\n                                            58106+*                        xxxxXXxx = Reserved xxxxxx1x = IML device not X\n                                                 +                         available xxxxxxx1 = Non-retentive data is    X\n                                                 +                         deactivated\n 00000001                                   58107+SMF42NCS DS    1BL1      Subsystem non-volatile storage status. Format X03-IGWSMF\n                                                 +                         as follows: 00xxxxxx = Non-volatile cache is  X\n                                                 +                         active 01xxxxxx = Internal subsystem error.   X\n                                                 +                         Non-volatile cache availability terminated    X\n                                                 +                         10xxxxxx = Non-volatile cache has been        X\n                                                 +                         deactivated due to explicit host system       X\n                                                 +                         request 11xxxxxx = Pending non-volatile       X\n                                                 +                         unavailable has been received, destage still  X\n                                                 +                         in progress xxXxxXXX = Reserved xxx1xxxx =    X\n                                                 +                         Non-volatile storage disabled for maintenance\n                                            58108+*                        xxxx1xxx = Non-volatile storage disabled due  X\n                                                 +                         to error\n 00000002                                   58109+SMF42CID DS    1FL2      Subsystem identifier                           03-IGWSMF\n 00000004                                   58110+SMF42CSS DS    1FL4      Configured subsystem storage capacity. F'-1'  X03-IGWSMF\n                                                 +                         = undetermined\n 00000008                                   58111+SMF42SSA DS    1FL4      Subsystem storage available for allocation as X03-IGWSMF\n                                                 +                         cache space\n 0000000C                                   58112+SMF42SAP DS    1FL4      Subsystem storage allocated for pinned data    03-IGWSMF\n 00000010                                   58113+SMF42SSU DS    1FL4      Subsystem storage unavailable due to          X03-IGWSMF\n                                                 +                         subsystem failures\n 00000014                                   58114+SMF42NSZ DS    1FL4      Configured non-volatile cache capacity. F'-1' X03-IGWSMF\n                                                 +                         = undetermined\n 00000018                                   58115+SMF42SPR DS    1FL4      Non-volatile cache allocated for pinned data   03-IGWSMF\n 0000001C                                   58116+SMF42SSF DS    1BL1      Subsystem Flags                         @08A   03-IGWSMF\n                         00000080           58117+SMF42ENH EQU   X'80'     Subsystem is D/T3990-6 enhanced mode    @08A   03-IGWSMF\n 0000001D                                   58118+         DS    1CL0003   Reserved                                @08C   03-IGWSMF\n 00000020                                   58119+SMF42SWS DS    0CL0056   Description of software status section         03-IGWSMF\n                                            58120+*\n                                            58121+*      ***************************************************************\n                                            58122+*      *                                                             *\n                                            58123+*      * Statistics gathered from LAST update period                 *\n                                            58124+*      *                                                             *\n                                            58125+*      ***************************************************************\n                                            58126+*\n                                            58127+*\n 00000020                                   58128+SMF42LCT DS    1FL4      I/O count for subsystem                        03-IGWSMF\n 00000024                                   58129+SMF42LFW DS    1FL4      Fast write wait count                          03-IGWSMF\n 00000028                                   58130+SMF42LRH DS    1FL4      Cache normal read hit percent                  03-IGWSMF\n 0000002C                                   58131+SMF42LWM DS    1FL4      Fast write waits per minute                    03-IGWSMF\n 00000030                                   58132+SMF42LTS DS    0CL0008   Time stamp                                     03-IGWSMF\n 00000030                                   58133+SMF42LYY DS    1FL2      Year                                           03-IGWSMF\n 00000032                                   58134+SMF42LDD DS    1FL2      Day                                            03-IGWSMF\n 00000034                                   58135+SMF42LTM DS    1FL4      Time: HH:MM:SS:TH (1 byte ea.)                 03-IGWSMF\n                                            58136+*\n                                            58137+*      ***************************************************************\n                                            58138+*      *                                                             *\n                                            58139+*      * Statistics gathered from CURRENT update period              *\n                                            58140+*      *                                                             *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  148\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           58141+*      ***************************************************************\n                                            58142+*\n                                            58143+*\n 00000038                                   58144+SMF42CCT DS    1FL4      I/O count for subsystem                        03-IGWSMF\n 0000003C                                   58145+SMF42CFW DS    1FL4      Fast write wait count                          03-IGWSMF\n 00000040                                   58146+SMF42CRH DS    1FL4      Cache normal read hit percent                  03-IGWSMF\n 00000044                                   58147+SMF42CWM DS    1FL4      Fast write waits per minute                    03-IGWSMF\n 00000048                                   58148+SMF42CTS DS    0CL0008   Time stamp                                     03-IGWSMF\n 00000048                                   58149+SMF42CYY DS    1FL2      Year                                           03-IGWSMF\n 0000004A                                   58150+SMF42CDD DS    1FL2      Day                                            03-IGWSMF\n 0000004C                                   58151+SMF42CTM DS    1FL4      Time: HH:MM:SS:TH (1 byte ea.)                 03-IGWSMF\n                                            58152+*\n                                            58153+*      ***************************************************************\n                                            58154+*      *                                                             *\n                                            58155+*      * Statistical averages                                        *\n                                            58156+*      *                                                             *\n                                            58157+*      ***************************************************************\n                                            58158+*\n                                            58159+*\n 00000050                                   58160+SMF42AHR DS    1FL2      Average hit ratio                              03-IGWSMF\n 00000052                                   58161+SMF42AFW DS    1FL2      Average fast write waits per minute            03-IGWSMF\n 00000054                                   58162+         DS    1CL0004   Reserved                                       03-IGWSMF\n                         00000058           58163+SMF4202A_LEN EQU *-SMF4202A                                             03-IGWSMF\n                                            58164+*\n                                            58165+*   -----------------------------------------------------------------\n                                            58166+*     Second part of Control Unit Cache Summary Section\n                                            58167+*   -----------------------------------------------------------------\n                                            58168+*\n                                            58169+*\n                                            58170+*\n                                            58171+*   -----------------------------------------------------------------\n                                            58172+*    SMF type 42 subtype 2 (Control Unit Cache Summary, part 2)\n                                            58173+*   -----------------------------------------------------------------\n                                            58174+*\n                                            58175+*\n 00000000                00000000 00000010  58176+SMF4202B DSECT ,                                                        03-IGWSMF\n 00000000                                   58177+SMF42VLS DS    0CL0016   Description of volume status section           03-IGWSMF\n 00000000                                   58178+SMF42VOL DS    1CL0006   Volume serial number                           03-IGWSMF\n 00000006                                   58179+         DS    1CL0002   Reserved                                       03-IGWSMF\n 00000008                                   58180+SMF42DEV DS    1FL4      Device number                                  03-IGWSMF\n 0000000C                                   58181+SMF42VST DS    0BL2      Device status flags                            03-IGWSMF\n 0000000C                                   58182+SMF42DB1 DS    1BL1      Device status flags, byte 1. Format as        X03-IGWSMF\n                                                 +                         follows: Bits 0-1 = Device Cache Status       X\n                                                 +                         00xxxxxx = Caching activated 01xxxxxx =       X\n                                                 +                         Unused 10xxxxxx = Deactivate pending by       X\n                                                 +                         explicit host request. Transfer of modified   X\n                                                 +                         data to DASD failed 11xxxxxx = Caching        X\n                                                 +                         deactivated unavailable Bits 2-3 = Fast write X\n                                                 +                         status xx00xxxx = Fast write activated        X\n                                                 +                         xx01xxxx = Unused xx10xxxx = Fast write       X\n                                                 +                         deactivate pending, transfer of data to DASD\n                                            58183+*                        failed xx11xxxx = Fast write deactivated Bits X\n                                                 +                         4-7 = Duplex pair flags xxxx1xxx = Primary of X\n                                                 +                         duplex pair xxxxx1xx = Secondary of duplex    X\n                                                 +                         pair xxxxxx00 = Duplex pair available         X\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  149\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +                         xxxxxx01 = Duplex pair pending (copy to       X\n                                                 +                         establish duplex pair in progress or failed)  X\n                                                 +                         xxxxxx10 = Failed duplex by command xxxxxx11  X\n                                                 +                         = Failed duplex by subsystem\n 0000000D                                   58184+SMF42DB2 DS    1BL1      Device status flags, byte 2. Format as        X03-IGWSMF\n                                                 +                         follows: 1xxxxxxx = Device is 'failed' of     X\n                                                 +                         failed duplex x1xxxxxx = Device has pinned    X\n                                                 +                         data xxXXXXXX = Channel connect address for   X\n                                                 +                         other device in duplex pair\n 0000000E                                   58185+         DS    1CL0002   Reserved                                       03-IGWSMF\n                         00000010           58186+SMF4202B_LEN EQU *-SMF4202B                                             03-IGWSMF\n                                            58187+*\n                                            58188+*\n                                            58189+*\n                                            58190+*\n                                            58191+*\n                                            58192+*   -----------------------------------------------------------------\n                                            58193+*     Start of Event Audit Section (Operational Services)\n                                            58194+*   -----------------------------------------------------------------\n                                            58195+*\n                                            58196+*\n                                            58197+*\n                                            58198+*   -----------------------------------------------------------------\n                                            58199+*    SMF type 42 subtype 3 (Event Audit Section)\n                                            58200+*   -----------------------------------------------------------------\n                                            58201+*\n                                            58202+*\n 00000000                00000000 000000C0  58203+SMF4203A DSECT ,                                                        03-IGWSMF\n 00000000                                   58204+SMF42EAS DS    0CL0192   Description of event audit section             03-IGWSMF\n 00000000                                   58205+SMF42EAC DS    1CL0008   Action which caused record to be created:     X03-IGWSMF\n                                                 +                         ACTIVATE, ENF, VARY SMS, or SAVEACDS\n 00000008                                   58206+SMF42ERC DS    1FL4      Return code from resulting event               03-IGWSMF\n 0000000C                                   58207+SMF42ERS DS    1FL4      Reason code from resulting event               03-IGWSMF\n                                            58208+*\n                                            58209+*      ***************************************************************\n                                            58210+*      *                                                             *\n                                            58211+*      * Fields filled in for ENF event                              *\n                                            58212+*      *                                                             *\n                                            58213+*      ***************************************************************\n                                            58214+*\n                                            58215+*\n 00000010                                   58216+SMF42EUA DS    1AL4      UCB address for device                         03-IGWSMF\n 00000014                                   58217+SMF42EVO DS    1CL0006   Volser for device                              03-IGWSMF\n 0000001A                                   58218+SMF42ESA DS    1FL1      UCBSTAT field                           @J1A   03-IGWSMF\n 0000001B                                   58219+         DS    1CL0001   Reserved                                @J1C   03-IGWSMF\n 0000001C                                   58220+SMF42EOS DS    1FL1      Old MVS volume status                          03-IGWSMF\n 0000001D                                   58221+SMF42ENS DS    1FL1      New MVS volume status                          03-IGWSMF\n 0000001E                                   58222+SMF42EFL DS    1FL2      UCBSFLS field                           @J1C   03-IGWSMF\n                                            58223+*\n                                            58224+*      ***************************************************************\n                                            58225+*      *                                                             *\n                                            58226+*      * Fields filled in for VARY SMS command                       *\n                                            58227+*      *                                                             *\n                                            58228+*      ***************************************************************\n                                            58229+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  150\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           58230+*\n 00000020                                   58231+SMF42ETY DS    1CL0008   Type of VARY request: STORGRP, LIBRARY,       X03-IGWSMF\n                                                 +                         DRIVE, or VOLUME\n 00000028                                   58232+SMF42ERN DS    0CL0032   VARY request name                              03-IGWSMF\n 00000028                                   58233+SMF42ENL DS    1FL2      Name length                                    03-IGWSMF\n 0000002A                                   58234+SMF42ENM DS    1CL0030   STORGRP name or LIBRARY name or DRIVE name     03-IGWSMF\n 00000048                                   58235+SMF42EVL DS    1CL0006   Volume serial                                  03-IGWSMF\n 0000004E                                   58236+         DS    1CL0002   Reserved                                       03-IGWSMF\n 00000050                                   58237+SMF42ESY DS    1CL0008   System name or '(ALL)'                         03-IGWSMF\n 00000058                                   58238+SMF42EST DS    1CL0012   Resulting status: ENABLE or ENABLE,NEW or     X03-IGWSMF\n                                                 +                         QUIESCE or QUIESCE,NEW or DISABLE or          X\n                                                 +                         DISABLE,NEW or ONLINE or OFFLINE\n 00000064                                   58239+         DS    1CL0004   Reserved                                       03-IGWSMF\n                                            58240+*\n                                            58241+*      ***************************************************************\n                                            58242+*      *                                                             *\n                                            58243+*      * Fields filled in for ACTIVATE command                       *\n                                            58244+*      *                                                             *\n                                            58245+*      ***************************************************************\n                                            58246+*\n                                            58247+*\n 00000068                                   58248+SMF42ESD DS    1CL0044   Source control data set name                   03-IGWSMF\n 00000094                                   58249+SMF42EAD DS    1CL0044   Active control data set name                   03-IGWSMF\n                         000000C0           58250+SMF4203A_LEN EQU *-SMF4203A                                             03-IGWSMF\n                                            58251+*\n                                            58252+*\n                                            58253+*\n                                            58254+*\n                                            58255+*\n                                            58256+*\n                                            58257+*   -----------------------------------------------------------------\n                                            58258+*     Start of System Data Mover Session Statistics            @OY66824\n                                            58259+*   -----------------------------------------------------------------\n                                            58260+*\n                                            58261+*\n                                            58262+*   -----------------------------------------------------------------\n                                            58263+*    SMF type 42 subtype 4 (Concurrent Copy Session Statistics)@OY66824\n                                            58264+*   -----------------------------------------------------------------\n                                            58265+*\n                                            58266+*\n 00000000                00000000 00000040  58267+SMF4204C DSECT  ,        Concurrent Copy SDM Session Statistics@OY66824 03-IGWSMF\n 00000000                                   58268+S42CCID  DS    1FL4      Logical Session ID                    @OY66824 03-IGWSMF\n 00000004                                   58269+S42CCRQS DS    1CL0002   Request type, 'CC ' = Concurrent copy @OY66824 03-IGWSMF\n 00000006                                   58270+S42CCTS  DS    1CL0001   Termination status,                   @OY66824 03-IGWSMF\n                                            58271+*                        'N' = normal, 'A' = abnormal          @OY66824\n 00000007                                   58272+         DS    1CL0001   Reserved                              @OY66824 03-IGWSMF\n 00000008                                   58273+S42CCJNM DS    1CL0008   Invoking Jobname                      @OY66824 03-IGWSMF\n 00000010                                   58274+S42CCJNO DS    1CL0008   Invoking Job number                   @OY66824 03-IGWSMF\n 00000018                                   58275+S42CCSST DS    1CL0008   Session start TOD                     @OY66824 03-IGWSMF\n 00000020                                   58276+S42CCEIT DS    1CL0008   Initialization end TOD                @OY66824 03-IGWSMF\n 00000028                                   58277+S42CCSET DS    1CL0008   Session end TOD                       @OY66824 03-IGWSMF\n 00000030                                   58278+S42CCSSO DS    1FL4      Offset to first SSID header           @OY66824 03-IGWSMF\n 00000034                                   58279+S42CCSSN DS    1FL2      Number of SSIDs  for the session      @OY66824 03-IGWSMF\n 00000036                                   58280+S42CCSSL DS    1FL2      Length of  SSID header                @OY66824 03-IGWSMF\n 00000038                                   58281+         DS    1CL008    Reserved                              @OY66824 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  151\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000040           58282+SMF4204C_LEN EQU *-SMF4204C                                    @OY66824 03-IGWSMF\n                                            58283+*\n                                            58284+*   -----------------------------------------------------------------\n                                            58285+*    CC SSID Header Section (SMF42 subtype 4)                  @OY66824\n                                            58286+*   -----------------------------------------------------------------\n                                            58287+*\n                                            58288+*\n 00000000                00000000 00000018  58289+S42CSIDH DSECT ,                                               @OY66824 03-IGWSMF\n 00000000                                   58290+S42CSNXT DS    1FL4      Offset to next SSID header            @OY66824 03-IGWSMF\n                                            58291+*                        (0 if last SSID)                      @OY66824\n 00000004                                   58292+S42CSID  DS    1FL2      SSID                                  @OY66824 03-IGWSMF\n 00000006                                   58293+S42CSIDP DS    1FL1      Controller session ID                 @OY66824 03-IGWSMF\n 00000007                                   58294+         DS    1CL0001   Reserved                              @OY66824 03-IGWSMF\n 00000008                                   58295+S42CSMSF DS    1FL4      Maximum track threshold reached in    @OY66824 03-IGWSMF\n                                            58296+*                        storage control buffers               @OY66824\n 0000000C                                   58297+S42CSVLO DS    1FL4      Offset to first volume                @OY66824 03-IGWSMF\n 00000010                                   58298+S42CSVLN DS    1FL2      Number of volumes                     @OY66824 03-IGWSMF\n 00000012                                   58299+S42CSVLL DS    1FL2      Length of volume section              @OY66824 03-IGWSMF\n 00000014                                   58300+         DS    1CL004    Reserved                              @OY66824 03-IGWSMF\n                         00000018           58301+S42CSIDH_LEN EQU *-S42CSIDH                                    @OY66824 03-IGWSMF\n                                            58302+*\n                                            58303+*   -----------------------------------------------------------------\n                                            58304+*    CC Volume section (SMF42 subtype 4)                       @OY66824\n                                            58305+*   -----------------------------------------------------------------\n                                            58306+*\n                                            58307+*\n 00000000                00000000 00000024  58308+S42CVL   DSECT ,                                               @OY66824 03-IGWSMF\n 00000000                                   58309+S42CVLNX DS    1FL4      Offset to next volume (0 if last      @OY66824 03-IGWSMF\n                                            58310+*                        volume)                               @OY66824\n 00000004                                   58311+S42CVLSR DS    1CL0006   Volume Serial                         @OY66824 03-IGWSMF\n 0000000A                                   58312+         DS    1CL0002   Reserved                              @OY66824 03-IGWSMF\n 0000000C                                   58313+S42CVLDV DS    1CL0001   Device type  (UCBTBYT4)               @OY66824 03-IGWSMF\n 0000000D                                   58314+S42CVLUA DS    1CL0003   Unit address (UCBNAME)                @OY66824 03-IGWSMF\n 00000010                                   58315+S42CVLTK DS    1FL4      Number of tracks to be processed on   @OY66824 03-IGWSMF\n                                            58316+*                        vol                                   @OY66824\n 00000014                                   58317+S42CVLRD DS    1FL4      Number of tracks read directly from   @OY66824 03-IGWSMF\n                                            58318+*                        DASD                                  @OY66824\n 00000018                                   58319+S42CVLRS DS    1FL4      Number of tracks read from the        @OY66824 03-IGWSMF\n                                            58320+*                        storage control buffers               @OY66824\n 0000001C                                   58321+S42CVLEP DS    1FL4      Number of EXCPs                       @OY66824 03-IGWSMF\n 00000020                                   58322+S42CVLUX DS    1CL0004   Unit address (UCBNAME) extended           @20C 03-IGWSMF\n                         00000024           58323+S42CVL_LEN EQU *-S42CVL                                        @OY66824 03-IGWSMF\n                                            58324+*\n                                            58325+*\n                                            58326+*   -----------------------------------------------------------------\n                                            58327+*    SMF type 42 subtype 4 (Extended Sequential Data Set       @OY66824\n                                            58328+*                           session statistics)                @OY66824\n                                            58329+*   -----------------------------------------------------------------\n                                            58330+*\n                                            58331+*\n 00000000                00000000 00000048  58332+SMF4204E DSECT  ,        Extended Sequential Data Set SMD      @OY66824 03-IGWSMF\n                                            58333+*                        Session Statistics                    @OY66824\n 00000000                                   58334+S42EXID  DS    1FL4      Logical Session ID                    @OY66824 03-IGWSMF\n 00000004                                   58335+S42EXRQS DS    1CL0003   Request type, 'EXT' = Extended        @OY66824 03-IGWSMF\n                                            58336+*                        Sequential Data Set                   @OY66824\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  152\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000007                                   58337+         DS    1CL0001   Reserved                              @OY66824 03-IGWSMF\n 00000008                                   58338+S42EXJNM DS    1CL0008   Invoking Jobname                      @OY66824 03-IGWSMF\n 00000010                                   58339+S42EXJNO DS    1CL0008   Invoking Job number                   @OY66824 03-IGWSMF\n 00000018                                   58340+S42EXSTM DS    1CL0008   Session start TOD                     @OY66824 03-IGWSMF\n 00000020                                   58341+S42EXETM DS    1CL0008   Session end TOD                       @OW09203 03-IGWSMF\n 00000028                                   58342+S42EXTS  DS    1CL0001   Termination status,                   @OY66824 03-IGWSMF\n                                            58343+*                        'N' = normal, 'A' = abnormal          @OY66824\n 00000029                                   58344+         DS    1CL0003   Reserved                              @OY66824 03-IGWSMF\n 0000002C                                   58345+S42EVLRT DS    1FL8      Number of tracks read                 @OY66824 03-IGWSMF\n 00000034                                   58346+S42EVLWT DS    1FL8      Number of tracks written              @OY66824 03-IGWSMF\n 0000003C                                   58347+         DS    1CL00012  Reserved                              @OY66824 03-IGWSMF\n                         00000048           58348+SMF4204E_LEN EQU *-SMF4204E                                    @OY66824 03-IGWSMF\n                                            58349+*\n                                            58350+*   -----------------------------------------------------------------\n                                            58351+*  SMF type 42 subtype 4 (EAV Concurrent Copy Session Statistics)  @65A\n                                            58352+*   -----------------------------------------------------------------\n                                            58353+*\n                                            58354+*\n 00000000                00000000 00000058  58355+SMF4204V DSECT  ,        Virtual Concurrent Copy SDM Session Stats @65A 03-IGWSMF\n 00000000                                   58356+S42VCID  DS    1FL4      VCC Logical Session ID                    @65A 03-IGWSMF\n 00000004                                   58357+S42VCRQS DS    1CL0003   Request type, 'VCC' =                     @65A 03-IGWSMF\n                                            58358+*                                      Virtual Concurrent copy     @65A\n 00000007                                   58359+S42VCTS  DS    1CL0001   Termination status,                       @65A 03-IGWSMF\n                                            58360+*                        'N' = normal, 'A' = abnormal              @65A\n 00000008                                   58361+S42VCJNM DS    1CL0008   Invoking Jobname                          @65A 03-IGWSMF\n 00000010                                   58362+S42VCJNO DS    1CL0008   Invoking Job number                       @65A 03-IGWSMF\n 00000018                                   58363+S42VCSST DS    1CL0008   Session start TOD                         @65A 03-IGWSMF\n 00000020                                   58364+S42VCEIT DS    1CL0008   Initialization end TOD                    @65A 03-IGWSMF\n 00000028                                   58365+S42VCSET DS    1CL0008   Session end TOD                           @65A 03-IGWSMF\n 00000030                                   58366+S42VCCTK DS    1FL8      Total number of tracks processed using cc @65A 03-IGWSMF\n 00000038                                   58367+S42VCVTK DS    1FL8     Total number of tracks processed using vcc @65A 03-IGWSMF\n 00000040                                   58368+S42VCDSP DS    1FL8     Total number of tracks stored in dataspace @65A 03-IGWSMF\n 00000048                                   58369+S42VCSSO DS    1FL4      Offset to first SSID header               @65A 03-IGWSMF\n 0000004C                                   58370+S42VCSSN DS    1FL2      Number of SSIDs  for the session          @65A 03-IGWSMF\n 0000004E                                   58371+S42VCSSL DS    1FL2      Length of  SSID header                    @65A 03-IGWSMF\n 00000050                                   58372+         DS    1CL008    Reserved                                  @65A 03-IGWSMF\n                         00000058           58373+SMF4204V_LEN EQU *-SMF4204V                                        @65A 03-IGWSMF\n                                            58374+*\n                                            58375+*   -----------------------------------------------------------------\n                                            58376+*    CC SSID Header Section (SMF42 subtype 4)                      @65A\n                                            58377+*   -----------------------------------------------------------------\n                                            58378+*\n                                            58379+*\n 00000000                00000000 00000020  58380+S42VSIDH DSECT ,                                                   @65A 03-IGWSMF\n 00000000                                   58381+S42VSNXT DS    1FL4      Offset to next SSID header                @65A 03-IGWSMF\n                                            58382+*                        (0 if last SSID)                          @65A\n 00000004                                   58383+S42VSID  DS    1FL2      SSID                                      @65A 03-IGWSMF\n 00000006                                   58384+S42VSIDP DS    1FL1      Controller session ID                     @65A 03-IGWSMF\n 00000007                                   58385+         DS    1CL0001   Reserved                                  @65A 03-IGWSMF\n 00000008                                   58386+S42VSMSF DS    1FL4      Maximum track threshold reached in        @65A 03-IGWSMF\n                                            58387+*                        storage control buffers                   @65A\n 0000000C                                   58388+         DS    1CL0008   Reserved                                  @25C 03-IGWSMF\n 00000014                                   58389+S42VSVLO DS    1FL4      Offset to first volume                    @65A 03-IGWSMF\n 00000018                                   58390+S42VSVLN DS    1FL2      Number of volumes                         @65A 03-IGWSMF\n 0000001A                                   58391+S42VSVLL DS    1FL2      Length of volume section                  @65A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  153\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000001C                                   58392+         DS    1CL004    Reserved                                  @65A 03-IGWSMF\n                         00000020           58393+S42VSIDH_LEN EQU *-S42VSIDH                                        @65A 03-IGWSMF\n                                            58394+*\n                                            58395+*   -----------------------------------------------------------------\n                                            58396+*   EAV CC Volume section (SMF42 subtype 4)                        @65A\n                                            58397+*   -----------------------------------------------------------------\n                                            58398+*\n                                            58399+*\n 00000000                00000000 0000002C  58400+S42VVL   DSECT ,                                                   @65A 03-IGWSMF\n 00000000                                   58401+S42VVLNX DS    1FL4      Offset to next volume (0 if last          @65A 03-IGWSMF\n                                            58402+*                        volume)                                   @65A\n 00000004                                   58403+S42VVLSR DS    1CL0006   Volume Serial                             @65A 03-IGWSMF\n 0000000A                                   58404+         DS    1CL0002   Reserved                                  @65A 03-IGWSMF\n 0000000C                                   58405+S42VVLDV DS    1CL0001   Device type  (UCBTBYT4)                   @65A 03-IGWSMF\n 0000000D                                   58406+S42VVLUA DS    1CL0003   Unit address (UCBNAME)                    @65A 03-IGWSMF\n 00000010                                   58407+S42VVCTK DS    1FL4      Number of tracks processed on volume      @65A 03-IGWSMF\n                                            58408+*                        using CC                                  @65A\n 00000014                                   58409+S42VVVTK DS    1FL4      Number of tracks to be processed on       @65A 03-IGWSMF\n                                            58410+*                        volume using vcc                          @65A\n 00000018                                   58411+S42VVVRD DS    1FL4      Number of tracks processed on volume      @65A 03-IGWSMF\n                                            58412+*                        using vcc                                 @65A\n 0000001C                                   58413+S42VVLRD DS    1FL4      Number of tracks read directly from       @65A 03-IGWSMF\n                                            58414+*                        DASD                                      @65A\n 00000020                                   58415+S42VVLRS DS    1FL4      Number of tracks read from the            @65A 03-IGWSMF\n                                            58416+*                        storage control buffers                   @65A\n 00000024                                   58417+S42VVLEP DS    1FL4      Number of EXCPs                           @65A 03-IGWSMF\n 00000028                                   58418+S42VVLUX DS    1CL0004   Unit address (UCBNAME) extended           @65A 03-IGWSMF\n                         0000002C           58419+S42VVL_LEN EQU *-S42VVL                                            @65A 03-IGWSMF\n                                            58420+*\n                                            58421+*\n                                            58422+*\n                                            58423+*\n                                            58424+*\n                                            58425+*   -----------------------------------------------------------------\n                                            58426+*    Storage Class Response Time Section (SMF42 subtype 5)\n                                            58427+*   -----------------------------------------------------------------\n                                            58428+*\n                                            58429+*\n 00000000                00000000 00000060  58430+SMF4205A DSECT ,                                                        03-IGWSMF\n 00000000                                   58431+S42SCNAM DS    0CL0032   Storage class name                             03-IGWSMF\n 00000000                                   58432+S42SCRNL DS    1FL2      Storage class name length                      03-IGWSMF\n 00000002                                   58433+S42SCRNN DS    1CL0030   Storage class name                             03-IGWSMF\n 00000020                                   58434+S42SCIO  DS    0CL0064   Description of I/O Stats              @27C     03-IGWSMF\n 00000020                                   58435+S42SCIOR DS    1FL4      Response time                                  03-IGWSMF\n 00000024                                   58436+S42SCIOC DS    1FL4      Avg I/O connect time                           03-IGWSMF\n 00000028                                   58437+S42SCIOP DS    1FL4      Avg I/O pending time                           03-IGWSMF\n 0000002C                                   58438+S42SCIOD DS    1FL4      Avg I/O disconnect time                        03-IGWSMF\n 00000030                                   58439+S42SCIOQ DS    1FL4      Avg cntl unit queue time                       03-IGWSMF\n 00000034                                   58440+S42SCION DS    1FL4      Total number of I/Os                           03-IGWSMF\n                                            58441+*\n                                            58442+*      ***************************************************************\n                                            58443+*      *                                                             *\n                                            58444+*      * 3990 Control unit cache statistics\n                                            58445+*      *                                                             *\n                                            58446+*      ***************************************************************\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  154\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           58447+*\n                                            58448+*\n 00000038                                   58449+S42SCCND DS    1FL4      No. of cache candidates                        03-IGWSMF\n 0000003C                                   58450+S42SCHIT DS    1FL4      No. of cache hits                              03-IGWSMF\n 00000040                                   58451+S42SCWCN DS    1FL4      No. of write candidates                        03-IGWSMF\n 00000044                                   58452+S42SCWHI DS    1FL4      No. of write hits                              03-IGWSMF\n 00000048                                   58453+S42SCSEQ DS    1FL4      No. of sequential I/Os            @OW00573     03-IGWSMF\n 0000004C                                   58454+S42SCRLC DS    1FL4      No. of RLC I/O's                  @OW00573     03-IGWSMF\n 00000050                                   58455+S42SCICL DS    1FL4      No. of ILC I/O's                  @OW00573     03-IGWSMF\n 00000054                                   58456+S42SCDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n                                            58457+*\n                                            58458+*      ***************************************************************\n                                            58459+*      *                                                             *\n                                            58460+*      * THESE ARE AN EXTENSION OF THE I/O STATISTICS            @27A*\n                                            58461+*      *                                                             *\n                                            58462+*      ***************************************************************\n                                            58463+*\n                                            58464+*\n 00000058                                   58465+S42SCIO_EXT  DS 0CL8     DESCRIPTION OF I/O STATS - EXTENSION  @27A     03-IGWSMF\n 00000058                                   58466+S42SCRDD DS    1FL4      AVG READ DISCONNECT                   @27A     03-IGWSMF\n 0000005C                                   58467+S42SCRDT DS    1FL4      TOTAL NUMBER OF READ I/OS             @27A     03-IGWSMF\n                         00000060           58468+SMF4205A_LEN EQU *-SMF4205A                                             03-IGWSMF\n                                            58469+*   -----------------------------------------------------------@P1A\n                                            58470+*    Volume Statistics Header section (SMF Subtype 5)          @P1A\n                                            58471+*      Note that offsets to component sections are zero        @P1A\n                                            58472+*      if there are no statistics for the component            @P1A\n                                            58473+*   -----------------------------------------------------------@P1A\n                                            58474+*                                                              @P1A\n 00000000                00000000 00000030  58475+SMF4205B DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   58476+S42VTNXT DS    1FL4      Offset to next volume                 @P1A     03-IGWSMF\n 00000004                                   58477+S42VTSER DS    CL6       Volume serial                         @P1A     03-IGWSMF\n 0000000A                                   58478+S42VTADR DS    1FL2      Device address                        @P1A     03-IGWSMF\n 0000000C                                   58479+S42VTFL1 DS    1FL1      Flags                                 @P1A     03-IGWSMF\n                         00000080           58480+S42VTONL EQU   X'80'     Device online                         @P1A     03-IGWSMF\n                         00000040           58481+S42VTSMS EQU   X'40'     SMS volume                            @P1A     03-IGWSMF\n 0000000D                                   58482+         DS    CL7       Reserved                              @P1A     03-IGWSMF\n 00000014                                   58483+S42VTUNC DS    1FL4      I/O count, unknown data set           @P1A     03-IGWSMF\n 00000018                                   58484+S42VTVDO DS    1FL4      Offset to VTOC Data component section @P1A     03-IGWSMF\n 0000001C                                   58485+S42VTVDL DS    1FL2      Length of VTOC Data component section @P1A     03-IGWSMF\n 0000001E                                   58486+         DS    1FL2      Reserved                              @P1A     03-IGWSMF\n 00000020                                   58487+S42VTVXO DS    1FL4      Offset to VTOC Index section          @P1A     03-IGWSMF\n 00000024                                   58488+S42VTVXL DS    1FL2      Length of VTOC Index section          @P1A     03-IGWSMF\n 00000026                                   58489+         DS    1FL2      Reserved                              @P1A     03-IGWSMF\n 00000028                                   58490+S42VTVVO DS    1FL4      Offset to VVDS section                @P1A     03-IGWSMF\n 0000002C                                   58491+S42VTVVL DS    1FL2      Length of VVDS section                @P1A     03-IGWSMF\n 0000002E                                   58492+         DS    1FL2      Reserved                              @P1A     03-IGWSMF\n                         00000030           58493+SMF4205B_LEN EQU *-SMF4205B                                    @P1A     03-IGWSMF\n                                            58494+*   -----------------------------------------------------------@P1A\n                                            58495+*    VTOC data component (Subtype 5)                           @P1A\n                                            58496+*   -----------------------------------------------------------@P1A\n                                            58497+*                                                              @P1A\n 00000000                00000000 00000040  58498+SMF4205C DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   58499+S42VDIOR DS    1FL4      Response time                         @P1A     03-IGWSMF\n 00000004                                   58500+S42VDIOC DS    1FL4      Avg I/O connect time                  @P1A     03-IGWSMF\n 00000008                                   58501+S42VDIOP DS    1FL4      Avg I/O pending time                  @P1A     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  155\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000000C                                   58502+S42VDIOD DS    1FL4      Avg I/O disconnect time               @P1A     03-IGWSMF\n 00000010                                   58503+S42VDIOQ DS    1FL4      Avg cntl unit queue time              @P1A     03-IGWSMF\n 00000014                                   58504+S42VDION DS    1FL4      Total number of I/Os                  @P1A     03-IGWSMF\n 00000018                                   58505+S42VDCND DS    1FL4      No. of cache candidates               @P1A     03-IGWSMF\n 0000001C                                   58506+S42VDHIT DS    1FL4      No. of cache hits                     @P1A     03-IGWSMF\n 00000020                                   58507+S42VDWCN DS    1FL4      No. of write candidates               @P1A     03-IGWSMF\n 00000024                                   58508+S42VDWHI DS    1FL4      No. of write hits                     @P1A     03-IGWSMF\n 00000028                                   58509+S42VDSEQ DS    1FL4      No. of sequential I/Os                @P1A     03-IGWSMF\n 0000002C                                   58510+S42VDRLC DS    1FL4      No. of RLC I/O's                      @P1A     03-IGWSMF\n 00000030                                   58511+S42VDICL DS    1FL4      No. of ICL I/O's                      @P1A     03-IGWSMF\n 00000034                                   58512+S42VDDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n 00000038                                   58513+S42VDIO_EXT  DS 0CL8     Description of VVD I/O Stats - Ext    @27A     03-IGWSMF\n 00000038                                   58514+S42VDRDD DS    1FL4      Avg read disconnect                   @27A     03-IGWSMF\n 0000003C                                   58515+S42VDRDT DS    1FL4      Total number of read I/Os             @27A     03-IGWSMF\n                                            58516+*                                                              @P1A\n                                            58517+*                                                              @P1A\n                         00000040           58518+SMF4205C_LEN EQU *-SMF4205C                                    @P1A     03-IGWSMF\n                                            58519+*   -----------------------------------------------------------@P1A\n                                            58520+*    VTOC index component (Subtype 5)                          @P1A\n                                            58521+*   -----------------------------------------------------------@P1A\n                                            58522+*                                                              @P1A\n 00000000                00000000 00000040  58523+SMF4205D DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   58524+S42VXIOR DS    1FL4      Response time                         @P1A     03-IGWSMF\n 00000004                                   58525+S42VXIOC DS    1FL4      Avg I/O connect time                  @P1A     03-IGWSMF\n 00000008                                   58526+S42VXIOP DS    1FL4      Avg I/O pending time                  @P1A     03-IGWSMF\n 0000000C                                   58527+S42VXIOD DS    1FL4      Avg I/O disconnect time               @P1A     03-IGWSMF\n 00000010                                   58528+S42VXIOQ DS    1FL4      Avg cntl unit queue time              @P1A     03-IGWSMF\n 00000014                                   58529+S42VXION DS    1FL4      Total number of I/Os                  @P1A     03-IGWSMF\n 00000018                                   58530+S42VXCND DS    1FL4      No. of cache candidates               @P1A     03-IGWSMF\n 0000001C                                   58531+S42VXHIT DS    1FL4      No. of cache hits                     @P1A     03-IGWSMF\n 00000020                                   58532+S42VXWCN DS    1FL4      No. of write candidates               @P1A     03-IGWSMF\n 00000024                                   58533+S42VXWHI DS    1FL4      No. of write hits                     @P1A     03-IGWSMF\n 00000028                                   58534+S42VXSEQ DS    1FL4      No. of sequential I/Os                @P1A     03-IGWSMF\n 0000002C                                   58535+S42VXRLC DS    1FL4      No. of RLC I/O's                      @P1A     03-IGWSMF\n 00000030                                   58536+S42VXICL DS    1FL4      No. of ICL I/O's                      @P1A     03-IGWSMF\n 00000034                                   58537+S42VXDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n 00000038                                   58538+S42VXIO_EXT  DS 0CL8     Description of VVX I/O Stats - Ext    @27A     03-IGWSMF\n 00000038                                   58539+S42VXRDD DS    1FL4      Avg read disconnect                   @27A     03-IGWSMF\n 0000003C                                   58540+S42VXRDT DS    1FL4      Total number of read I/Os             @27A     03-IGWSMF\n                                            58541+*                                                              @P1A\n                                            58542+*                                                              @P1A\n                         00000040           58543+SMF4205D_LEN EQU *-SMF4205D                                    @P1A     03-IGWSMF\n                                            58544+*   -----------------------------------------------------------@P1A\n                                            58545+*    VVDS component (Subtype 5)                                @P1A\n                                            58546+*   -----------------------------------------------------------@P1A\n                                            58547+*                                                              @P1A\n 00000000                00000000 00000040  58548+SMF4205E DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   58549+S42VVIOR DS    1FL4      Response time                         @P1A     03-IGWSMF\n 00000004                                   58550+S42VVIOC DS    1FL4      Avg I/O connect time                  @P1A     03-IGWSMF\n 00000008                                   58551+S42VVIOP DS    1FL4      Avg I/O pending time                  @P1A     03-IGWSMF\n 0000000C                                   58552+S42VVIOD DS    1FL4      Avg I/O disconnect time               @P1A     03-IGWSMF\n 00000010                                   58553+S42VVIOQ DS    1FL4      Avg cntl unit queue time              @P1A     03-IGWSMF\n 00000014                                   58554+S42VVION DS    1FL4      Total number of I/Os                  @P1A     03-IGWSMF\n 00000018                                   58555+S42VVCND DS    1FL4      No. of cache candidates               @P1A     03-IGWSMF\n 0000001C                                   58556+S42VVHIT DS    1FL4      No. of cache hits                     @P1A     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  156\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000020                                   58557+S42VVWCN DS    1FL4      No. of write candidates               @P1A     03-IGWSMF\n 00000024                                   58558+S42VVWHI DS    1FL4      No. of write hits                     @P1A     03-IGWSMF\n 00000028                                   58559+S42VVSEQ DS    1FL4      No. of sequential I/Os                @P1A     03-IGWSMF\n 0000002C                                   58560+S42VVRLC DS    1FL4      No. of RLC I/O's                      @P1A     03-IGWSMF\n 00000030                                   58561+S42VVICL DS    1FL4      No. of ICL I/O's                      @P1A     03-IGWSMF\n 00000034                                   58562+S42VVDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n 00000038                                   58563+S42VVIO_EXT  DS 0CL8     Description of VVS I/O Stats - Ext    @27A     03-IGWSMF\n 00000038                                   58564+S42VVRDD DS    1FL4      Avg read disconnect                   @27A     03-IGWSMF\n 0000003C                                   58565+S42VVRDT DS    1FL4      Total number of read I/Os             @27A     03-IGWSMF\n                                            58566+*                                                              @P1A\n                                            58567+*                                                              @P1A\n                         00000040           58568+SMF4205E_LEN EQU *-SMF4205E                                    @P1A     03-IGWSMF\n                                            58569+*\n                                            58570+*\n                                            58571+*\n                                            58572+*\n                                            58573+*\n                                            58574+*   -----------------------------------------------------------------\n                                            58575+*    Job section - Data set statistics (SMF42 subtype 6)\n                                            58576+*   -----------------------------------------------------------------\n                                            58577+*\n                                            58578+*\n 00000000                00000000 00000040  58579+SMF4206A DSECT ,                                                        03-IGWSMF\n 00000000                                   58580+S42JDJNM DS    1CL0008   Job name                                       03-IGWSMF\n 00000008                                   58581+S42JDRST DS    1FL4      Time, in hundreds of a second, reader         X03-IGWSMF\n                                                 +                         recognized the JOB card for this job\n 0000000C                                   58582+S42JDRSD DS    1CL0004   Date reader recognized the JOB card for this  X03-IGWSMF\n                                                 +                         job, in the form 0cyydddF, where F is the     X\n                                                 +                         sign\n 00000010                                   58583+S42JDUID DS    1CL0008   User identification (taken from common exit   X03-IGWSMF\n                                                 +                         parameter area)\n 00000018                                   58584+S42JDDSO DS    1FL4      Offset to first data set hdr                   03-IGWSMF\n 0000001C                                   58585+S42JDDSL DS    1FL2      Length of DS header sec                        03-IGWSMF\n 0000001E                                   58586+S42JDCOD DS    1FL1      0=Close, 1=Interval record                     03-IGWSMF\n 0000001F                                   58587+         DS    1CL0001   Reserved                                       03-IGWSMF\n 00000020                                   58588+S42JDPGN DS    1FL2      Job performance group number                   03-IGWSMF\n 00000022                                   58589+S42JDIOL DS    1FL2      Length of Data Set I/O section                 03-IGWSMF\n 00000024                                   58590+S42JDAML DS    1FL2      Length of AM section               @OW00573    03-IGWSMF\n 00000026                                   58591+         DS    1CL0002   Reserved                               @09A    03-IGWSMF\n 00000028                                   58592+S42JDGMO DS    1FL4      GMT Offset represented in 1.048576 sec @09A    03-IGWSMF\n 0000002C                                   58593+S42JDWSC DS    1CL8      Workload Manager Service Class name    @P1A    03-IGWSMF\n 00000034                                   58594+S42JDWLD DS    1CL8      Workload Manager Workload name         @P1A    03-IGWSMF\n 0000003C                                   58595+         DS    1CL0004   Reserved                               @09A    03-IGWSMF\n                         00000040           58596+SMF4206A_LEN EQU *-SMF4206A                                             03-IGWSMF\n                                            58597+*\n                                            58598+*   -----------------------------------------------------------------\n                                            58599+*    Data set header section (SMF42 subtype 6)\n                                            58600+*   -----------------------------------------------------------------\n                                            58601+*\n                                            58602+*\n 00000000                00000000 00000058  58603+S42DSH   DSECT ,                                                        03-IGWSMF\n 00000000                                   58604+S42DSNXT DS    1FL4      Offset to next DS header                       03-IGWSMF\n 00000004                                   58605+S42DSN   DS    1CL0044   Data set name                                  03-IGWSMF\n 00000030                                   58606+S42DSTYP DS    1CL0001   Reserved                                       03-IGWSMF\n 00000031                                   58607+S42DSCOD DS    0BL1      Entry descriptor flags                         03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  157\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000080           58608+S42FIRST EQU   X'80'     1st DS entry since Open                        03-IGWSMF\n 00000031                00000031 00000032  58609+         ORG   S42DSCOD+X'00000001'                                     03-IGWSMF\n 00000032                                   58610+S42DSFL1 DS    X         Data set descriptor flags               @P1A   03-IGWSMF\n                         00000080           58611+S42DSVBU EQU   X'80'     VSAM buffer flags          @            @P1A   03-IGWSMF\n                         000000C0           58612+S42DSGSR EQU   X'C0'       GSR                                   @P1A   03-IGWSMF\n                         00000080           58613+S42DSLSR EQU   X'80'       LSR                                   @P1A   03-IGWSMF\n                         00000040           58614+S42DSRLS EQU   X'40'       RLS                                   @P1A   03-IGWSMF\n                         00000000           58615+S42DSNSR EQU   X'00'       NSR                                   @P1A   03-IGWSMF\n                         00000010           58616+S42DSEXC EQU   X'10'     Open for EXCP processing                @P1A   03-IGWSMF\n                         00000008           58617+S42DSFXD EQU   X'08'     Non-VSAM fixed length records           @P1A   03-IGWSMF\n                         00000004           58618+S42DSPL  EQU   X'04'     Program library                         @P1A   03-IGWSMF\n                         00000002           58619+S42DSEF  EQU   X'02'     Extended format                         @P1A   03-IGWSMF\n                         00000001           58620+S42DSEFC EQU   X'01'     Compressed format                       @P1A   03-IGWSMF\n 00000033                                   58621+         DS    X         Reserved                                @P1C   03-IGWSMF\n 00000034                                   58622+S42DSIOO DS    1FL4      Offset to I/O section                          03-IGWSMF\n 00000038                                   58623+S42DSAMO DS    1FL4      Offset to AM  section               @OW00159   03-IGWSMF\n 0000003C                                   58624+S42DSVOL DS    1CL0006   VOLSER                              @OW00159   03-IGWSMF\n 00000042                                   58625+S42DSDEV DS    1CL0002   Device number                       @OW00159   03-IGWSMF\n 00000044                                   58626+S42DSSC  DS    1CL0008   Storage class name                  @OW00159   03-IGWSMF\n 0000004C                                   58627+S42DSBSZ DS    1FL4      block size                          @OW00159   03-IGWSMF\n 00000050                                   58628+S42DSTRP DS    H         Number of stripes                       @P1A   03-IGWSMF\n 00000052                                   58629+         DS    CL6       Reserved                                @P1A   03-IGWSMF\n                         00000058           58630+S42DSH_LEN EQU *-S42DSH                                                 03-IGWSMF\n                                            58631+*\n                                            58632+*   -----------------------------------------------------------------\n                                            58633+*    Data set I/O statistics (SMF42 subtype 6)\n                                            58634+*\n                                            58635+*    I/O response/service time components are recorded\n                                            58636+*    in multiples of 128 micro-seconds.\n                                            58637+*    The length of these statistics must be identical\n                                            58638+*    with the length of DSSBSTAT in the DSSB.\n                                            58639+*   -----------------------------------------------------------------\n                                            58640+*\n                                            58641+*\n 00000000                00000000 00000048  58642+S42DSIO  DSECT ,                                                        03-IGWSMF\n 00000000                                   58643+S42DSIOR DS    1FL4      Response time                                  03-IGWSMF\n 00000004                                   58644+S42DSIOC DS    1FL4      Avg I/O connect time                           03-IGWSMF\n 00000008                                   58645+S42DSIOP DS    1FL4      Avg I/O pending time                           03-IGWSMF\n 0000000C                                   58646+S42DSIOD DS    1FL4      Avg I/O disconnect time                        03-IGWSMF\n 00000010                                   58647+S42DSIOQ DS    1FL4      Avg cntl unit queue time                       03-IGWSMF\n 00000014                                   58648+S42DSION DS    1FL4      Total number of I/Os                           03-IGWSMF\n                                            58649+*\n                                            58650+*      ***************************************************************\n                                            58651+*      *                                                             *\n                                            58652+*      * 3990 Control unit cache statistics\n                                            58653+*      *                                                             *\n                                            58654+*      ***************************************************************\n                                            58655+*\n                                            58656+*\n 00000018                                   58657+S42DSCND DS    1FL4      No. of cache candidates                        03-IGWSMF\n 0000001C                                   58658+S42DSHTS DS    1FL4      No. of cache hits                              03-IGWSMF\n 00000020                                   58659+S42DSWCN DS    1FL4      No. of write candidates                        03-IGWSMF\n 00000024                                   58660+S42DSWHI DS    1FL4      No. of write hits                              03-IGWSMF\n 00000028                                   58661+S42DSSEQ DS    1FL4      No. of sequential I/Os            @OW00573     03-IGWSMF\n 0000002C                                   58662+S42DSRLC DS    1FL4      No. of RLC I/O's                  @OW00573     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  158\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000030                                   58663+S42DSICL DS    1FL4      No. of ILC I/O's                  @OW00573     03-IGWSMF\n 00000034                                   58664+S42DSDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n                                            58665+*\n                                            58666+*  Following two fields are not part of DSSSBSTAT\n                                            58667+*\n 00000038                                   58668+S42DSMAX DS    0D                                                 @12A  03-IGWSMF\n 00000038                                   58669+S42DSMXR DS    1FL4      maximum dataset I/O response time        @12A  03-IGWSMF\n 0000003C                                   58670+S42DSMXS DS    1FL4      maximum dataset service time             @12A  03-IGWSMF\n                                            58671+*\n                                            58672+*      ***************************************************************\n                                            58673+*      *                                                             *\n                                            58674+*      * EXTENSION OF DATA SET I/O STATISTICS                    @27A*\n                                            58675+*      *                                                             *\n                                            58676+*      ***************************************************************\n                                            58677+*\n                                            58678+*\n 00000040                                   58679+S42DSIO_EXT  DS 0CL8     DESCRIPTION OF I/O STATS - EXT          @27A   03-IGWSMF\n 00000040                                   58680+S42DSRDD DS    1FL4      AVG READ DISCONNECT                     @27A   03-IGWSMF\n 00000044                                   58681+S42DSRDT DS    1FL4      TOTAL NUMBER OF READ I/OS               @27A   03-IGWSMF\n                         00000048           58682+S42DSIO_LEN EQU *-S42DSIO                                               03-IGWSMF\n                                            58683+*\n                                            58684+*      *                                                             *\n                                            58685+*      *                                                             *\n                                            58686+*\n 00000000                00000000 00000030  58687+S42DSAM  DSECT ,                                              @OW00159  03-IGWSMF\n 00000000                                   58688+S42AMSRB DS    1FL4                Sequential read no. of blocks  @RTA  03-IGWSMF\n 00000004                                   58689+S42AMSRR DS    1FL4                Sequential read I/O delay      @RTA  03-IGWSMF\n 00000008                                   58690+S42AMSWB DS    1FL4                Sequential write no. of blocks @RTA  03-IGWSMF\n 0000000C                                   58691+S42AMSWR DS    1FL4                Sequential write I/O delay     @RTA  03-IGWSMF\n 00000010                                   58692+S42AMDRB DS    1FL4                Direct read no. of blocks      @RTA  03-IGWSMF\n 00000014                                   58693+S42AMDRR DS    1FL4                Direct read I/O total delay    @RTA  03-IGWSMF\n 00000018                                   58694+S42AMDWB DS    1FL4                Direct write no. of blocks     @RTA  03-IGWSMF\n 0000001C                                   58695+S42AMDWR DS    1FL4                Direct write total I/O delay   @RTA  03-IGWSMF\n 00000020                                   58696+S42AMZRB DS    1FL4                No. of directory reads         @RTA  03-IGWSMF\n 00000024                                   58697+S42AMZRR DS    1FL4                Directory read I/O delay       @RTA  03-IGWSMF\n 00000028                                   58698+S42AMZWB DS    1FL4                No. of directory writes        @RTA  03-IGWSMF\n 0000002C                                   58699+S42AMZWR DS    1FL4                Directory write I/O delay      @RTA  03-IGWSMF\n                         00000030           58700+S42DSAM_LEN EQU *-S42DSAM                                         @RTA  03-IGWSMF\n                                            58701+*\n                                            58702+*\n                                            58703+*\n                                            58704+*\n                                            58705+*   -------------------------------------------------------------- @P1A\n                                            58706+*     SMF type 42 subtype 9 (X37 ABEND record, part 1)             @P1A\n                                            58707+*   -------------------------------------------------------------- @P1A\n                                            58708+*\n                                            58709+*\n 00000000                00000000 0000006C  58710+SMF4209A DSECT ,                                                   @P1A 03-IGWSMF\n 00000000                                   58711+SMF09X37 DS    0CL0102             Descripton of X37 ABEND section @P1A 03-IGWSMF\n 00000000                                   58712+S42ASYID DS    1CL0004             System ID                       @P1A 03-IGWSMF\n 00000004                                   58713+S42JOBN  DS    1CL0008             Job name                        @P1A 03-IGWSMF\n 0000000C                                   58714+S42RDST  DS    1BL0004             Reader start time               @P1A 03-IGWSMF\n 00000010                                   58715+S42RDSD  DS    1PL0004             Reader start date(packed)       @P1A 03-IGWSMF\n 00000014                                   58716+S42AAUID DS    1CL0008             User identification             @P1A 03-IGWSMF\n 0000001C                                   58717+S42ASTPN DS    1BL0001             Step number                     @P1A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  159\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000001D                                   58718+S42FLAGS DS    1BL0001             Flags                           @P1A 03-IGWSMF\n                         00000080           58719+S42B37   EQU   X'80'               1... .... B37 Abend             @P1A 03-IGWSMF\n                         00000040           58720+S42D37   EQU   X'40'               .1.. .... D37 Abend             @P1A 03-IGWSMF\n                         00000020           58721+S42E37   EQU   X'20'               ..1. .... E37 Abend             @P1A 03-IGWSMF\n 0000001E                                   58722+         DS    1CL0004             Reserved                        @P1A 03-IGWSMF\n 00000022                                   58723+S42DSORG DS    1BL0002             Data set organization           @P1A 03-IGWSMF\n 00000024                                   58724+S42ADISP DS    1BL0001             Disp                            @P1A 03-IGWSMF\n 00000025                                   58725+S42DSNME DS    1CL0044             Data set name                   @15C 03-IGWSMF\n 00000051                                   58726+S42VOLSR DS    1CL0006             Volser of current volume        @P1A 03-IGWSMF\n 00000057                                   58727+S42UCBTP DS    1BL0004             UCB type field of current vol   @P1A 03-IGWSMF\n 0000005B                                   58728+S42NEXT  DS    1FL1                Number of extents for data set  @P1A 03-IGWSMF\n                                            58729+*                                    on current volume             @P1A\n 0000005C                                   58730+S42TNTRK DS    1FL4                Total tracks allocated for      @P1A 03-IGWSMF\n                                            58731+*                                    data set on current volume    @P1A\n 00000060                                   58732+S42ASSAT DS    1BL0004             Secondary allocation amount     @P1A 03-IGWSMF\n 00000064                                   58733+S42ADRLH DS    1BL0003             Average data block length if    @P1A 03-IGWSMF\n                                            58734+*                                    specified                     @P1A\n 00000067                                   58735+         DS    1CL0005             Reserved                        @P1A 03-IGWSMF\n                         0000006C           58736+SMF4209A_LEN EQU *-SMF4209A        Length of subtype 9 part 1      @P1A 03-IGWSMF\n                                            58737+*                                                                  @P1A\n                                            58738+*  --------------------------------------------------------------  @P1A\n                                            58739+*    SMF type 42 subtype 9 (X37 ABEND record, part 2 SMS info)     @P1A\n                                            58740+*  --------------------------------------------------------------  @P1A\n                                            58741+*                                                                  @P1A\n 00000000                00000000 0000005A  58742+SMF4209B DSECT ,                                                   @P1A 03-IGWSMF\n 00000000                                   58743+S4209SMS DS    0CL0120             Description of SMS section      @P1A 03-IGWSMF\n                                            58744+*                                                                1 @P2D\n 00000000                                   58745+S42MCNME DS    1CL0030             Management class name           @P1A 03-IGWSMF\n 0000001E                                   58746+S42SCNME DS    1CL0030             Storage class name              @P1A 03-IGWSMF\n 0000003C                                   58747+S42DCNME DS    1CL0030             Data class name                 @P1A 03-IGWSMF\n                         0000005A           58748+SMF4209B_LEN EQU *-SMF4209B                                        @13C 03-IGWSMF\n                                            58749+*                                                                  @P1A\n                                            58750+*                                                                  @P1A\n                                            58751+*\n                                            58752+*\n                                            58753+*   -----------------------------------------------------------------\n                                            58754+*     Volume Selection Failure Record (VTOC/Data Set Services)     @23A\n                                            58755+*   -----------------------------------------------------------------\n                                            58756+*\n                                            58757+*\n                                            58758+*\n                                            58759+*   -----------------------------------------------------------------\n                                            58760+*    SMF type 42 subtype 10 (Volume Selection Section)             @23A\n                                            58761+*   -----------------------------------------------------------------\n                                            58762+*\n                                            58763+*\n 00000000                00000000 00000292  58764+SMF420AA  DSECT ,                                                  @23A 03-IGWSMF\n 00000000                                   58765+SMF42VSS  DS   0CL0658   Description of Volume selection section   @24C 03-IGWSMF\n 00000000                                   58766+SMF42JBN  DS   1CL0008   JOBNAME                                   @23A 03-IGWSMF\n 00000008                                   58767+SMF42PGN  DS   1CL0008   Program name                              @23A 03-IGWSMF\n 00000010                                   58768+SMF42STN  DS   1CL0008   Step name                                 @23A 03-IGWSMF\n 00000018                                   58769+SMF42DDN  DS   1CL0008   DD name                                   @23A 03-IGWSMF\n 00000020                                   58770+SMF42DSN  DS   1CL0044   Data Set name                             @23A 03-IGWSMF\n 0000004C                                   58771+SMF42SPQ  DS   0CL0006   Space Quantity attribute                  @24A 03-IGWSMF\n 0000004C                                   58772+SMF42RSP  DS   1FL4      Requested space quantity                  @23A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  160\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000050                                   58773+SMF42UNT  DS   1CL0002   Unit of Requested space quantity          @24A 03-IGWSMF\n 00000052                                   58774+SMF42VDC  DS   0CL0032   Data Class                                @23A 03-IGWSMF\n 00000052                                   58775+SMF42DCL  DS   1FL2      Length of DC                              @23A 03-IGWSMF\n 00000054                                   58776+SMF42DCN  DS   1CL0030   Data Class name                           @23A 03-IGWSMF\n 00000072                                   58777+SMF42VMC  DS   0CL0032   Management Class                          @23A 03-IGWSMF\n 00000072                                   58778+SMF42MCL  DS   1FL2      Length of MC                              @23A 03-IGWSMF\n 00000074                                   58779+SMF42MCN  DS   1CL0030   Management Class name                     @23A 03-IGWSMF\n 00000092                                   58780+SMF42VSC  DS   0CL0032   Storage Class                             @23A 03-IGWSMF\n 00000092                                   58781+SMF42SLN  DS   1FL2      Length of SC                              @23A 03-IGWSMF\n 00000094                                   58782+SMF42SNM  DS   1CL0030   storage class name                        @23A 03-IGWSMF\n 000000B2                                   58783+SMF42SGS  DS   CL0480    List of Storage groups 15 entries*32bytes @23A 03-IGWSMF\n                         00000292           58784+SMF420AA_LEN EQU *-SMF420AA                                        @23A 03-IGWSMF\n                                            58785+*                                                                  @23A\n                                            58786+*                                                                  @23A\n                                            58787+*\n                                            58788+*\n                                            58789+*   -----------------------------------------------------------------\n                                            58790+*     Start of Extended Remote Copy (XRC) Session Statistics       @07A\n                                            58791+*   -----------------------------------------------------------------\n                                            58792+*\n                                            58793+*\n                                            58794+*   -----------------------------------------------------------------\n                                            58795+*    SMF type 42 subtype 11 (Extended Remote Copy (XRC)            @07A\n                                            58796+*                            Session Statistics)                   @07A\n                                            58797+*   -----------------------------------------------------------------\n                                            58798+*\n                                            58799+*\n 00000000                00000000 00000020  58800+SMF420BA DSECT  ,        XRC Session Statistics                    @07A 03-IGWSMF\n 00000000                                   58801+S42XRID  DS    1CL0008   Logical Session ID                        @07A 03-IGWSMF\n 00000008                                   58802+S42XRTYP DS    1CL0008   Session type                              @07A 03-IGWSMF\n 00000010                                   58803+S42XRSSO DS    1FL4      Offset to first SSID data section         @07A 03-IGWSMF\n 00000014                                   58804+S42XRSSN DS    1FL2      Number of SSIDs  for the session          @07A 03-IGWSMF\n 00000016                                   58805+S42XRSSL DS    1FL2      Length of  SSID data section              @07A 03-IGWSMF\n 00000018                                   58806+S42XRVLO DS    1FL4      Offset to first volume data SECTION       @14A 03-IGWSMF\n 0000001C                                   58807+S42XRVLN DS    1FL2      Number of volume data SECTIONS            @14A 03-IGWSMF\n 0000001E                                   58808+S42XRVLL DS    1FL2      Length of volume data                     @14C 03-IGWSMF\n                         00000020           58809+SMF420BA_LEN EQU *-SMF420BA                                        @07A 03-IGWSMF\n                                            58810+*\n                                            58811+*   -----------------------------------------------------------------\n                                            58812+*   XRC SSID Data Section (SMF42 subtype 11)                       @07A\n                                            58813+*   -----------------------------------------------------------------\n                                            58814+*\n                                            58815+*\n 00000000                00000000 0000002C  58816+S42XRSSD DSECT ,                                                   @07A 03-IGWSMF\n 00000000                                   58817+S42XRSNX DS    1FL4      Offset to next SSID data section          @07A 03-IGWSMF\n                                            58818+*                        (0 if last SSID)                          @07A\n 00000004                                   58819+S42XRSID DS    1FL2      SSID                                      @07A 03-IGWSMF\n 00000006                                   58820+S42XRIDP DS    1FL1      Controller session ID                     @07A 03-IGWSMF\n 00000007                                   58821+         DS    1CL0001   Reserved                                  @07A 03-IGWSMF\n 00000008                                   58822+S42XRVSH DS    1FL4      Number of volumes being shadowed               03-IGWSMF\n                                            58823+*                        for this SSID. Includes utility devices   @14C\n 0000000C                                   58824+S42XRTPR DS    1FL4      Total number of primary data mover        @07A 03-IGWSMF\n                                            58825+*                        reads                                     @07A\n 00000010                                   58826+S42XRNWD DS    1FL4      Number of primary data mover reads        @07A 03-IGWSMF\n                                            58827+*                        with data                                 @07A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  161\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000014                                   58828+S42XRNND DS    1FL4      Number of primary data mover reads        @07A 03-IGWSMF\n                                            58829+*                        with no data                              @07A\n 00000018                                   58830+S42XRNLR DS    1FL4      Number of primary data mover reads        @07A 03-IGWSMF\n                                            58831+*                        left to be read                           @07A\n 0000001C                                   58832+S42XRNFW DS    1FL4      Number of format writes                   @07A 03-IGWSMF\n 00000020                                   58833+S42XRNUW DS    1FL4      Number of update writes                   @07A 03-IGWSMF\n 00000024                                   58834+S42XRARS DS    1FL4      Average record size                       @07A 03-IGWSMF\n 00000028                                   58835+         DS    1CL004    Reserved                                  @07A 03-IGWSMF\n                         0000002C           58836+S42XRSSD_LEN EQU *-S42XRSSD                                        @07A 03-IGWSMF\n                                            58837+*                                                                  @14A\n                                            58838+*   ----------------------------------------------------------------\n                                            58839+*   XRC Volume Data Section (SMF42 subtype 11)\n                                            58840+*   Information on XRC primary and secondary volumes.              @14A\n                                            58841+*   -----------------------------------------------------------------\n                                            58842+*                                                                  @14A\n                                            58843+*                                                                  @14A\n 00000000                00000000 00000034  58844+S42XRVLD DSECT ,                                                   @14A 03-IGWSMF\n 00000000                                   58845+S42XRVLX DS    1FL4      Offset to next volume data section,            03-IGWSMF\n                                            58846+*                        (0 if last volume)                        @14A\n 00000004                                   58847+S42XRVLV DS    1CL0006   Volser                                    @14A 03-IGWSMF\n 0000000A                                   58848+S42XRVAV DS    1CL0006   Other volser in pair                      @14A 03-IGWSMF\n 00000010                                   58849+S42XRVPS DS    1CL0001   'P' if primary volume                          03-IGWSMF\n                                            58850+*                        'S' if secondary volume                   @14A\n                                            58851+*                        'U' if utility volume                     @14A\n 00000011                                   58852+         DS    1CL0001   Reserved                                  @22A 03-IGWSMF\n 00000012                                   58853+S42XRVSS DS    1FL2      SSID associated with volume               @14A 03-IGWSMF\n 00000014                                   58854+S42XRVPR DS    1FL4      Total number data mover reads if               03-IGWSMF\n                                            58855+*                        primary. Total number data mover\n                                            58856+*                        writes if secondary.                      @14A\n 00000018                                   58857+S42XRVWD DS    1FL4      Number of data mover reads with                03-IGWSMF\n                                            58858+*                        data if primary.  Always 0 for\n                                            58859+*                        secondary.                                @14A\n 0000001C                                   58860+S42XRVND DS    1FL4      Number of primary data mover                   03-IGWSMF\n                                            58861+*                        reads with no data.  Always 0 for\n                                            58862+*                        secondary.                                @14A\n 00000020                                   58863+S42XRVFW DS    1FL4      Number of format writes                   @14A 03-IGWSMF\n 00000024                                   58864+S42XRVUW DS    1FL4      Number of update writes                   @14A 03-IGWSMF\n 00000028                                   58865+S42XRVRS DS    1FL4      Average record size                       @14A 03-IGWSMF\n 0000002C                                   58866+S42XRVRW DS    1FL4      Number of read tracks if primary.              03-IGWSMF\n                                            58867+*                        Number of write tracks if SECONDARY       @14A\n 00000030                                   58868+         DS    1CL0004   Reserved                                  @14A 03-IGWSMF\n                         00000034           58869+S42XRVLD_LEN EQU *-S42XRVLD                                        @14A 03-IGWSMF\n                                            58870+*\n                                            58871+*\n                                            58872+*   -----------------------------------------------------------------\n                                            58873+*    STORAGE CLASS MGR SUMMARY (SMF42 SUBTYPE 15)\n                                            58874+*   -----------------------------------------------------------------\n 00000000                00000000 00000518  58875+SMF420FA DSECT ,                                                 @10A   03-IGWSMF\n 00000000                                   58876+SMF42FA1 DS   0CL1280                SYSPLEX WIDE SUMMARY        @10A   03-IGWSMF\n 00000000                                   58877+SMF42FAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            58878+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            58879+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   58880+SMF42F00 DS   CL12                   INDICATES IF DFSMS GREATER  @P5A   03-IGWSMF\n                                            58881+*                                    THAN 4K CF CACHING IS ACTIVE@P5A\n                                            58882+*                                    VALUES ARE GT4KACTIVE OR    @P5A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  162\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           58883+*                                    GT4KNOTACT                  @P5A\n 00000010                                   58884+SMF42FAB DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            58885+*                                    NAME                        @10A\n 00000012                                   58886+SMF42FAC DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            58887+*\n 00000030                                   58888+SMF42F01 DS   1FL2                   CACHESETNAME LENGTH         @10A   03-IGWSMF\n 00000032                                   58889+SMF42FAD DS   CL30                   CACHESET NAME               @10A   03-IGWSMF\n                                            58890+*\n 00000050                                   58891+SMF42FAE DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            58892+*                                    PROCESSED                   @10A\n 00000054                                   58893+SMF42FAF DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            58894+*                                    LOCK REQUESTS               @10A\n 00000058                                   58895+SMF42FAG DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            58896+*                                    LOCK REQUESTS               @10A\n 0000005C                                   58897+SMF42F02 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 0000005E                                   58898+SMF42F12 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n 00000060                                   58899+SMF42FAH DS   CL16                   RESERVED                    @10A   03-IGWSMF\n                                            58900+*                                                                @10A\n 00000070                                   58901+SMF42FA2 DS   0CL336                 DIRECT ACCESS SECTION       @10A   03-IGWSMF\n                                            58902+*\n 00000070                                   58903+SMF42FA3 DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            58904+*                                    SECTION                     @10A\n 00000070                                   58905+SMF42FCA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            58906+*                                    NUMBER                      @10A\n 00000074                                   58907+SMF42FCB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            58908+*                                                                @10A\n 00000078                                   58909+SMF42FCC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            58910+*                                    NRI - NO READ INTEGRITY\n                                            58911+*                                                                @10A\n 0000007C                                   58912+SMF42FCD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            58913+*                                    CONSISTENT READS   @10A\n                                            58914+*\n 00000080                                   58915+SMF42FCE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            58916+*                                                                @10A\n 00000084                                   58917+SMF42FCF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            58918+*                                                                @10A\n 00000088                                   58919+SMF42FCG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            58920+*                                                                @10A\n 0000008C                                   58921+SMF42FCH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            58922+*                                                                @10A\n                                            58923+*\n 00000090                                   58924+SMF42FCI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            58925+*                                                                @10A\n 00000094                                   58926+SMF42FCJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            58927+*                                                                @10A\n 00000098                                   58928+SMF42FCK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            58929+*                                                                @10A\n 0000009C                                   58930+SMF42FCL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            58931+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            58932+*\n 000000A0                                   58933+SMF42FCM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            58934+*                                                                @10A\n 000000A4                                   58935+SMF42FCN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000000A8                                   58936+SMF42FCO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000000AC                                   58937+SMF42FCP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  163\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000B0                                   58938+SMF42FCQ DS   2F                     NUMBER OF BYTES XFERED INTO THE    03-IGWSMF\n                                            58939+*                                    DFSMS CACHE STRUCTURE       @10A\n 000000B8                                   58940+SMF42FCR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            58941+*                                    TO DASD.                    @10A\n 000000BC                                   58942+SMF42FCS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            58943+*                                    TO DASD.                    @10A\n 000000C0                                   58944+SMF42FCT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            58945+*                                    DASD FOR THE READ   REQUESTS @10A\n                                            58946+*                                                                @10A\n 000000C8                                   58947+SMF42FCU DS   2F                     NUMBER OF                          03-IGWSMF\n                                            58948+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            58949+*                                                                @10A\n 000000D0                                   58950+SMF42FCV DS   CL16                   RESERVED                           03-IGWSMF\n                                            58951+*                                                                @10A\n 000000E0                                   58952+SMF42FCW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            58953+*                                    REQUESTS IN THIS\n                                            58954+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            58955+*                                    IN milli-seconds)           @21A\n                                            58956+*\n 000000E8                                   58957+SMF42FCX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            58958+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            58959+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            58960+*                                                                @10A\n 000000EC                                   58961+SMF42FCY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            58962+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            58963+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            58964+*                                    TRANSFERRED/4K)             @10A\n 000000F0                                   58965+SMF42FCZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000000F8                                   58966+SMF42FC7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           58967+SMF42FA3_LEN  EQU *-SMF42FA3                                            03-IGWSMF\n                                            58968+*\n 00000118                                   58969+SMF42FA4 DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            58970+*                                    SECTION                     @10A\n 00000118                                   58971+SMF42FDA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            58972+*                                    NUMBER                      @10A\n 0000011C                                   58973+SMF42FDB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            58974+*                                                                @10A\n 00000120                                   58975+SMF42FDC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            58976+*                                    NRI - NO READ INTEGRITY\n                                            58977+*                                                                @10A\n 00000124                                   58978+SMF42FDD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            58979+*                                    CONSISTENT READS   @10A\n                                            58980+*\n 00000128                                   58981+SMF42FDE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            58982+*                                                                @10A\n 0000012C                                   58983+SMF42FDF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            58984+*                                                                @10A\n 00000130                                   58985+SMF42FDG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            58986+*                                                                @10A\n 00000134                                   58987+SMF42FDH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            58988+*                                                                @10A\n                                            58989+*\n 00000138                                   58990+SMF42FDI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            58991+*                                                                @10A\n 0000013C                                   58992+SMF42FDJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  164\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           58993+*                                                                @10A\n 00000140                                   58994+SMF42FDK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            58995+*                                                                @10A\n 00000144                                   58996+SMF42FDL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            58997+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            58998+*\n 00000148                                   58999+SMF42FDM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59000+*                                                                @10A\n 0000014C                                   59001+SMF42FDN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000150                                   59002+SMF42FDO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000154                                   59003+SMF42FDP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000158                                   59004+SMF42FDQ DS   2F                     NUMBER OF BYTES XFERED INTO THE    03-IGWSMF\n                                            59005+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59006+*                                                                @10A\n 00000160                                   59007+SMF42FDR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59008+*                                    TO DASD.                    @10A\n 00000164                                   59009+SMF42FDS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59010+*                                    TO DASD.                    @10A\n 00000168                                   59011+SMF42FDT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59012+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59013+*                                                                @10A\n 00000170                                   59014+SMF42FDU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59015+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59016+*                                                                @10A\n 00000178                                   59017+SMF42FDV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59018+*                                                                @10A\n 00000188                                   59019+SMF42FDW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59020+*                                    REQUESTS IN THIS\n                                            59021+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59022+*                                    IN milli-seconds)           @21A\n                                            59023+*\n 00000190                                   59024+SMF42FDX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59025+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59026+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59027+*                                                                @10A\n 00000194                                   59028+SMF42FDY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59029+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59030+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59031+*                                    TRANSFERRED/4K)             @10A\n 00000198                                   59032+SMF42FDZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000001A0                                   59033+SMF42FD7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59034+SMF42FA4_LEN  EQU *-SMF42FA4                                            03-IGWSMF\n                                            59035+*\n 000001C0                                   59036+SMF42FA5 DS   0CL672                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            59037+*                                                                @10A\n 000001C0                                   59038+SMF42FA6 DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            59039+*                                                                @10A\n 000001C0                                   59040+SMF42FEA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59041+*                                    NUMBER                      @10A\n 000001C4                                   59042+SMF42FEB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59043+*                                                                @10A\n 000001C8                                   59044+SMF42FEC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59045+*                                    NRI - NO READ INTEGRITY\n                                            59046+*                                                                @10A\n 000001CC                                   59047+SMF42FED DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  165\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59048+*                                    CONSISTENT READS   @10A\n                                            59049+*\n 000001D0                                   59050+SMF42FEE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59051+*                                                                @10A\n 000001D4                                   59052+SMF42FEF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59053+*                                                                @10A\n 000001D8                                   59054+SMF42FEG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59055+*                                                                @10A\n 000001DC                                   59056+SMF42FEH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59057+*                                                                @10A\n                                            59058+*\n 000001E0                                   59059+SMF42FEI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59060+*                                                                @10A\n 000001E4                                   59061+SMF42FEJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59062+*                                                                @10A\n 000001E8                                   59063+SMF42FEK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59064+*                                                                @10A\n 000001EC                                   59065+SMF42FEL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59066+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59067+*\n 000001F0                                   59068+SMF42FEM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59069+*                                                                @10A\n 000001F4                                   59070+SMF42FEN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000001F8                                   59071+SMF42FEO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000001FC                                   59072+SMF42FEP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000200                                   59073+SMF42FEQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59074+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59075+*                                                                @10A\n 00000208                                   59076+SMF42FER DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59077+*                                    TO DASD.                    @10A\n 0000020C                                   59078+SMF42FES DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59079+*                                    TO DASD.                    @10A\n 00000210                                   59080+SMF42FET DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59081+*                                    DASD FOR THE READ   REQUESTS @10A\n                                            59082+*                                                                @10A\n 00000218                                   59083+SMF42FEU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59084+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59085+*                                                                @10A\n 00000220                                   59086+SMF42FEV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59087+*                                                                @10A\n 00000230                                   59088+SMF42FEW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59089+*                                    REQUESTS IN THIS\n                                            59090+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59091+*                                    IN milli-seconds)           @21A\n                                            59092+*\n 00000238                                   59093+SMF42FEX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59094+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59095+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59096+*                                                                @10A\n 0000023C                                   59097+SMF42FEY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59098+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59099+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59100+*                                    TRANSFERRED/4K)             @10A\n 00000240                                   59101+SMF42FEZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000248                                   59102+SMF42FE7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  166\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        000000A8           59103+SMF42FA6_LEN  EQU *-SMF42FA6                                            03-IGWSMF\n                                            59104+*\n 00000268                                   59105+SMF42FA7 DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            59106+*                                    SECTION                     @10A\n 00000268                                   59107+SMF42FFA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59108+*                                    NUMBER                      @10A\n 0000026C                                   59109+SMF42FFB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59110+*                                                                @10A\n 00000270                                   59111+SMF42FFC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59112+*                                    NRI - NO READ INTEGRITY\n                                            59113+*                                                                @10A\n 00000274                                   59114+SMF42FFD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59115+*                                    CONSISTENT READS   @10A\n                                            59116+*\n 00000278                                   59117+SMF42FFE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59118+*                                                                @10A\n 0000027C                                   59119+SMF42FFF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59120+*                                                                @10A\n 00000280                                   59121+SMF42FFG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59122+*                                                                @10A\n 00000284                                   59123+SMF42FFH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59124+*                                                                @10A\n                                            59125+*\n 00000288                                   59126+SMF42FFI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59127+*                                                                @10A\n 0000028C                                   59128+SMF42FFJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59129+*                                                                @10A\n 00000290                                   59130+SMF42FFK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59131+*                                                                @10A\n 00000294                                   59132+SMF42FFL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59133+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59134+*\n 00000298                                   59135+SMF42FFM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59136+*                                                                @10A\n 0000029C                                   59137+SMF42FFN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000002A0                                   59138+SMF42FFO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000002A4                                   59139+SMF42FFP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002A8                                   59140+SMF42FFQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59141+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59142+*                                                                @10A\n 000002B0                                   59143+SMF42FFR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59144+*                                    TO DASD.                    @10A\n 000002B4                                   59145+SMF42FFS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59146+*                                    TO DASD.                    @10A\n 000002B8                                   59147+SMF42FFT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59148+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59149+*                                                                @10A\n 000002C0                                   59150+SMF42FFU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59151+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59152+*                                                                @10A\n 000002C8                                   59153+SMF42FFV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59154+*                                                                @10A\n 000002D8                                   59155+SMF42FFW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59156+*                                    REQUESTS IN THIS\n                                            59157+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  167\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59158+*                                    IN milli-seconds)           @21A\n                                            59159+*\n 000002E0                                   59160+SMF42FFX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59161+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59162+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59163+*                                                                @10A\n 000002E4                                   59164+SMF42FFY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59165+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59166+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59167+*                                    TRANSFERRED/4K)             @10A\n 000002E8                                   59168+SMF42FFZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000002F0                                   59169+SMF42FF7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59170+SMF42FA7_LEN  EQU *-SMF42FA7                                            03-IGWSMF\n                                            59171+*\n 00000310                                   59172+SMF42FA8 DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            59173+*                                    SECTION                     @10A\n 00000310                                   59174+SMF42FGA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59175+*                                    NUMBER                      @10A\n 00000314                                   59176+SMF42FGB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59177+*                                                                @10A\n 00000318                                   59178+SMF42FGC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59179+*                                    NRI - NO READ INTEGRITY\n                                            59180+*                                                                @10A\n 0000031C                                   59181+SMF42FGD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59182+*                                    CONSISTENT READS   @10A\n                                            59183+*\n 00000320                                   59184+SMF42FGE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59185+*                                                                @10A\n 00000324                                   59186+SMF42FGF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59187+*                                                                @10A\n 00000328                                   59188+SMF42FGG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59189+*                                                                @10A\n 0000032C                                   59190+SMF42FGH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59191+*                                                                @10A\n                                            59192+*\n 00000330                                   59193+SMF42FGI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59194+*                                                                @10A\n 00000334                                   59195+SMF42FGJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59196+*                                                                @10A\n 00000338                                   59197+SMF42FGK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59198+*                                                                @10A\n 0000033C                                   59199+SMF42FGL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59200+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59201+*\n 00000340                                   59202+SMF42FGM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59203+*                                                                @10A\n 00000344                                   59204+SMF42FGN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000348                                   59205+SMF42FGO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000034C                                   59206+SMF42FGP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000350                                   59207+SMF42FGQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59208+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59209+*                                                                @10A\n 00000358                                   59210+SMF42FGR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59211+*                                    TO DASD.                    @10A\n 0000035C                                   59212+SMF42FGS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  168\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59213+*                                    TO DASD.                    @10A\n 00000360                                   59214+SMF42FGT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59215+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59216+*                                                                @10A\n 00000368                                   59217+SMF42FGU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59218+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59219+*                                                                @10A\n 00000370                                   59220+SMF42FGV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59221+*                                                                @10A\n 00000380                                   59222+SMF42FGW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59223+*                                    REQUESTS IN THIS\n                                            59224+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59225+*                                    IN milli-seconds)           @21A\n                                            59226+*\n 00000388                                   59227+SMF42FGX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59228+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59229+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59230+*                                                                @10A\n 0000038C                                   59231+SMF42FGY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59232+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59233+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59234+*                                    TRANSFERRED/4K)             @10A\n 00000390                                   59235+SMF42FGZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000398                                   59236+SMF42FG7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59237+SMF42FA8_LEN  EQU *-SMF42FA8                                            03-IGWSMF\n                                            59238+*\n 000003B8                                   59239+SMF42FA9 DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            59240+*                                    SECTION                     @10A\n 000003B8                                   59241+SMF42FHA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59242+*                                    NUMBER                      @10A\n 000003BC                                   59243+SMF42FHB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59244+*                                                                @10A\n 000003C0                                   59245+SMF42FHC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59246+*                                    NRI - NO READ INTEGRITY\n                                            59247+*                                                                @10A\n 000003C4                                   59248+SMF42FHD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59249+*                                    CONSISTENT READS   @10A\n                                            59250+*\n 000003C8                                   59251+SMF42FHE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59252+*                                                                @10A\n 000003CC                                   59253+SMF42FHF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59254+*                                                                @10A\n 000003D0                                   59255+SMF42FHG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59256+*                                                                @10A\n 000003D4                                   59257+SMF42FHH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59258+*                                                                @10A\n                                            59259+*\n 000003D8                                   59260+SMF42FHI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59261+*                                                                @10A\n 000003DC                                   59262+SMF42FHJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59263+*                                                                @10A\n 000003E0                                   59264+SMF42FHK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59265+*                                                                @10A\n 000003E4                                   59266+SMF42FHL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59267+*                                    THE SYSPLEX CACHE MANAGER   @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  169\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59268+*\n 000003E8                                   59269+SMF42FHM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59270+*                                                                @10A\n 000003EC                                   59271+SMF42FHN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000003F0                                   59272+SMF42FHO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000003F4                                   59273+SMF42FHP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000003F8                                   59274+SMF42FHQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59275+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59276+*                                                                @10A\n 00000400                                   59277+SMF42FHR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59278+*                                    TO DASD.                    @10A\n 00000404                                   59279+SMF42FHS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59280+*                                    TO DASD.                    @10A\n 00000408                                   59281+SMF42FHT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59282+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59283+*                                                                @10A\n 00000410                                   59284+SMF42FHU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59285+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59286+*                                                                @10A\n 00000418                                   59287+SMF42FHV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59288+*                                                                @10A\n 00000428                                   59289+SMF42FHW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59290+*                                    REQUESTS IN THIS\n                                            59291+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59292+*                                    IN milli-seconds)           @21A\n                                            59293+*\n 00000430                                   59294+SMF42FHX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59295+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59296+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59297+*                                                                @10A\n 00000434                                   59298+SMF42FHY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59299+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59300+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59301+*                                    TRANSFERRED/4K)             @10A\n 00000438                                   59302+SMF42FHZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000440                                   59303+SMF42FH7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59304+SMF42FA9_LEN  EQU *-SMF42FA9                                            03-IGWSMF\n                         000002A0           59305+SMF42FA5_LEN  EQU *-SMF42FA5                                            03-IGWSMF\n                                            59306+*\n 00000460                                   59307+SMF42FX1 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000460                                   59308+SMF42FOA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59309+*                                    REQUESTS                    @10A\n                                            59310+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000464                                   59311+SMF42FOB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59312+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            59313+*                                    CONTENTION                  @10A\n 00000468                                   59314+SMF42FOC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59315+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            59316+*                                    CONTENTION                  @10A\n 0000046C                                   59317+SMF42FOD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59318+*                                    RELEASE REQUESTS            @10A\n 00000470                                   59319+SMF42FOE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            59320+*                                    LOCK REQUESTS               @10A\n 00000474                                   59321+SMF42FOF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            59322+*                                    RELEASE LOCK REQUESTS       @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  170\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000478                                   59323+SMF42FOG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000480                                   59324+SMF42FOH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59325+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59326+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000484                                   59327+SMF42FOI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59328+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59329+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000488                                   59330+SMF42FOJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59331+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59332+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000048C                                   59333+SMF42FOK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59334+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            59335+*                                    LOCK REQUESTS               @10A\n 00000490                                   59336+SMF42FOL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59337+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59338+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000494                                   59339+SMF42FOM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59340+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59341+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000498                                   59342+SMF42FON DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59343+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59344+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000049C                                   59345+SMF42FOO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59346+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            59347+*                                    LOCK REQUESTS               @10A\n 000004A0                                   59348+SMF42FOP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59349+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            59350+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004A4                                   59351+SMF42FOQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59352+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            59353+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004A8                                   59354+SMF42FOR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59355+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            59356+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004AC                                   59357+SMF42FOS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59358+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            59359+*                                    LOCK REQUESTS               @10A\n 000004B0                                   59360+SMF42FOT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            59361+*                                    LOCK REQUESTS               @10A\n                                            59362+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004B4                                   59363+SMF42FOU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            59364+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004B8                                   59365+SMF42FOV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            59366+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004BC                                   59367+SMF42FOW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            59368+*                                    RELEASE LOCK REQUESTS       @10A\n 000004C0                                   59369+SMF42FOX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            59370+*                                                                @10A\n                                            59371+*                                                                @10A\n                         00000080           59372+SMF42FX1_LEN  EQU *-SMF42FX1                                     @10A   03-IGWSMF\n                                            59373+*                                                                @10A\n 000004E0                                   59374+SMF42FX2 DS   0CL32                  THREAD LEVEL STATISTICS     @10A   03-IGWSMF\n 000004E0                                   59375+SMF42FPR DS   2F                     TOTAL TIME ALL THREAD       @64C   03-IGWSMF\n                                            59376+*                                    REQUESTS                    @10A\n 000004E8                                   59377+SMF42FPS DS   1FL4                   TOTAL NUMBER OF ALL THREAD  @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  171\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59378+*                                    REQUESTS                    @10A\n 000004EC                                   59379+SMF42FPT DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n 000004F0                                   59380+SMF42FPU DS   1FL4                   AVERAGE RESPONSE TIME FOR   @10A   03-IGWSMF\n                                            59381+*                                    ALL OF THE THREAD REQUESTS  @10A\n                                            59382+*                                    IN THE INTERVAL             @10A\n                                            59383+*                                    (TOTAL TIME/NUMBER OF       @10A\n                                            59384+*                                     THREAD REQUESTS)           @10A\n 000004F4                                   59385+SMF42FPV DS   1FL4                   NORMALIZED RESPONSE TIME    @10A   03-IGWSMF\n                                            59386+*                                    FOR ALL OF THE THREAD       @10A\n                                            59387+*                                    REQUESTS IN THE INTERVAL    @10A\n                                            59388+*                                    (TOTAL TIME/NUMBER OF BYTES @10A\n                                            59389+*                                     TRANSFERRED/4K)            @10A\n 000004F8                                   59390+SMF42FPW DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            59391+*                                                                @10A\n                         00000020           59392+SMF42FX2_LEN  EQU *-SMF42FX2                                     @10A   03-IGWSMF\n 00000500                                   59393+SMF42FAI DS   CL16                   Lock Structure name         @L3C   03-IGWSMF\n 00000510                                   59394+SMF42FAJ DS   CL8                    Lock Set                    @L3A   03-IGWSMF\n                         00000518           59395+SMF420FA_LEN  EQU *-SMF420FA                                     @10A   03-IGWSMF\n                                            59396+*                                                                @10A\n 00000000                00000000 00000548  59397+SMF420FB DSECT ,                                                        03-IGWSMF\n 00000000                                   59398+SMF42F1A DS   0CL1328                SC/SYS/CF CLASS SUMMARY            03-IGWSMF\n                                            59399+*                                    SECTION                     @10A\n 00000000                                   59400+SMF42FBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            59401+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            59402+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   59403+SMF42F03 DS   CL12                   INDICATES IF DFSMS GREATER  @P5A   03-IGWSMF\n                                            59404+*                                    THAN 4K CF CACHING IS ACTIVE@P5A\n                                            59405+*                                    VALUES ARE GT4KACTIVE OR    @P5A\n                                            59406+*                                    GT4KNOTACT                  @P5A\n 00000010                                   59407+SMF42FBB DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            59408+*                                    NAME                        @10A\n 00000012                                   59409+SMF42FBC DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            59410+*\n 00000030                                   59411+SMF42F04 DS   1FL2                   CACHESETNAMELENGTH                 03-IGWSMF\n 00000032                                   59412+SMF42FBD DS   CL30                   CACHESETNAME                @10A   03-IGWSMF\n                                            59413+*\n 00000050                                   59414+SMF42FBE DS   CL8                    MVS SYSTEM NAME             @10A   03-IGWSMF\n 00000058                                   59415+SMF42F05 DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            59416+*\n 00000060                                   59417+SMF42FBF DS   CL2                    RESERVED                    @10A   03-IGWSMF\n 00000062                                   59418+SMF42FBG DS   CL30                   DFP CACHE STRUCTURE  NAME   @10A   03-IGWSMF\n 00000080                                   59419+SMF42FBH DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            59420+*                                    PROCESSED (not used)        @21A\n 00000084                                   59421+SMF42FBI DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            59422+*                                    LOCK REQUESTS (not used)    @21A\n 00000088                                   59423+SMF42FBJ DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            59424+*                                    LOCK REQUESTS (not used)    @21A\n 0000008C                                   59425+SMF42FB2 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 0000008E                                   59426+SMF42FB3 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n 00000090                                   59427+SMF42FBL DS   CL16                   RESERVED                    @10A   03-IGWSMF\n                                            59428+*\n 000000A0                                   59429+SMF42F1B DS   0CL336                 DIRECT ACCESS SUMMARY SECTION      03-IGWSMF\n                                            59430+*                                                                @10A\n 000000A0                                   59431+SMF42F1C DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            59432+*                                    SECTION                     @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  172\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000A0                                   59433+SMF42FIA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59434+*                                    NUMBER                      @10A\n 000000A4                                   59435+SMF42FIB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59436+*                                                                @10A\n 000000A8                                   59437+SMF42FIC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59438+*                                    NRI - NO READ INTEGRITY\n                                            59439+*                                                                @10A\n 000000AC                                   59440+SMF42FID DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59441+*                                    CONSISTENT READS   @10A\n                                            59442+*\n 000000B0                                   59443+SMF42FIE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59444+*                                                                @10A\n 000000B4                                   59445+SMF42FIF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59446+*                                                                @10A\n 000000B8                                   59447+SMF42FIG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59448+*                                                                @10A\n 000000BC                                   59449+SMF42FIH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59450+*                                                                @10A\n                                            59451+*\n 000000C0                                   59452+SMF42FII DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59453+*                                                                @10A\n 000000C4                                   59454+SMF42FIJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59455+*                                                                @10A\n 000000C8                                   59456+SMF42FIK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59457+*                                                                @10A\n 000000CC                                   59458+SMF42FIL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59459+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59460+*\n 000000D0                                   59461+SMF42FIM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59462+*                                                                @10A\n 000000D4                                   59463+SMF42FIN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000000D8                                   59464+SMF42FIO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000000DC                                   59465+SMF42FIP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000000E0                                   59466+SMF42FIQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59467+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59468+*                                                                @10A\n 000000E8                                   59469+SMF42FIR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59470+*                                    TO DASD.                    @10A\n 000000EC                                   59471+SMF42FIS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59472+*                                    TO DASD.                    @10A\n 000000F0                                   59473+SMF42FIT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59474+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59475+*                                                                @10A\n 000000F8                                   59476+SMF42FIU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59477+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59478+*                                                                @10A\n 00000100                                   59479+SMF42FIV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59480+*                                                                @10A\n 00000110                                   59481+SMF42FIW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59482+*                                    REQUESTS IN THIS\n                                            59483+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59484+*                                    IN milli-seconds)           @21A\n                                            59485+*\n 00000118                                   59486+SMF42FIX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59487+*                                    THE REQUESTS IN THIS INTERVAL.\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  173\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59488+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59489+*                                                                @10A\n 0000011C                                   59490+SMF42FIY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59491+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59492+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59493+*                                    TRANSFERRED/4K)             @10A\n 00000120                                   59494+SMF42FIZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000128                                   59495+SMF42FI7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59496+SMF42F1C_LEN  EQU *-SMF42F1C                                     @10A   03-IGWSMF\n                                            59497+*\n 00000148                                   59498+SMF42F1D DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            59499+*                                    SECTION                     @10A\n 00000148                                   59500+SMF42FJA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59501+*                                    NUMBER                      @10A\n 0000014C                                   59502+SMF42FJB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59503+*                                                                @10A\n 00000150                                   59504+SMF42FJC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59505+*                                    NRI - NO READ INTEGRITY\n                                            59506+*                                                                @10A\n 00000154                                   59507+SMF42FJD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59508+*                                    CONSISTENT READS   @10A\n                                            59509+*\n 00000158                                   59510+SMF42FJE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59511+*                                                                @10A\n 0000015C                                   59512+SMF42FJF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59513+*                                                                @10A\n 00000160                                   59514+SMF42FJG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59515+*                                                                @10A\n 00000164                                   59516+SMF42FJH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59517+*                                                                @10A\n                                            59518+*\n 00000168                                   59519+SMF42FJI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59520+*                                                                @10A\n 0000016C                                   59521+SMF42FJJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59522+*                                                                @10A\n 00000170                                   59523+SMF42FJK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59524+*                                                                @10A\n 00000174                                   59525+SMF42FJL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59526+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59527+*\n 00000178                                   59528+SMF42FJM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59529+*                                                                @10A\n 0000017C                                   59530+SMF42FJN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000180                                   59531+SMF42FJO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000184                                   59532+SMF42FJP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000188                                   59533+SMF42FJQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59534+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59535+*                                                                @10A\n 00000190                                   59536+SMF42FJR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59537+*                                    TO DASD.                    @10A\n 00000194                                   59538+SMF42FJS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59539+*                                    TO DASD.                    @10A\n 00000198                                   59540+SMF42FJT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59541+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59542+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  174\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000001A0                                   59543+SMF42FJU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59544+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59545+*                                                                @10A\n 000001A8                                   59546+SMF42FJV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59547+*                                                                @10A\n 000001B8                                   59548+SMF42FJW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59549+*                                    REQUESTS IN THIS\n                                            59550+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59551+*                                    IN milli-seconds)           @21A\n                                            59552+*\n 000001C0                                   59553+SMF42FJX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59554+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59555+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59556+*                                                                @10A\n 000001C4                                   59557+SMF42FJY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59558+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59559+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59560+*                                    TRANSFERRED/4K)             @10A\n 000001C8                                   59561+SMF42FJZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000001D0                                   59562+SMF42FJ7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59563+SMF42F1D_LEN  EQU *-SMF42F1D                                     @10A   03-IGWSMF\n                         00000150           59564+SMF42F1B_LEN  EQU *-SMF42F1B                                     @10A   03-IGWSMF\n                                            59565+*\n 000001F0                                   59566+SMF42F1E DS   0CL672                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            59567+*                                                                @10A\n 000001F0                                   59568+SMF42F1F DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            59569+*                                                                @10A\n 000001F0                                   59570+SMF42FKA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59571+*                                    NUMBER                      @10A\n 000001F4                                   59572+SMF42FKB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59573+*                                                                @10A\n 000001F8                                   59574+SMF42FKC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59575+*                                    NRI - NO READ INTEGRITY\n                                            59576+*                                                                @10A\n 000001FC                                   59577+SMF42FKD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59578+*                                    CONSISTENT READS   @10A\n                                            59579+*\n 00000200                                   59580+SMF42FKE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59581+*                                                                @10A\n 00000204                                   59582+SMF42FKF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59583+*                                                                @10A\n 00000208                                   59584+SMF42FKG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59585+*                                                                @10A\n 0000020C                                   59586+SMF42FKH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59587+*                                                                @10A\n                                            59588+*\n 00000210                                   59589+SMF42FKI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59590+*                                                                @10A\n 00000214                                   59591+SMF42FKJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59592+*                                                                @10A\n 00000218                                   59593+SMF42FKK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59594+*                                                                @10A\n 0000021C                                   59595+SMF42FKL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59596+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59597+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  175\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000220                                   59598+SMF42FKM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59599+*                                                                @10A\n 00000224                                   59600+SMF42FKN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000228                                   59601+SMF42FKO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000022C                                   59602+SMF42FKP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000230                                   59603+SMF42FKQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59604+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59605+*                                                                @10A\n 00000238                                   59606+SMF42FKR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59607+*                                    TO DASD.                    @10A\n 0000023C                                   59608+SMF42FKS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59609+*                                    TO DASD.                    @10A\n 00000240                                   59610+SMF42FKT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59611+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59612+*                                                                @10A\n 00000248                                   59613+SMF42FKU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59614+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59615+*                                                                @10A\n 00000250                                   59616+SMF42FKV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59617+*                                                                @10A\n 00000260                                   59618+SMF42FKW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59619+*                                    REQUESTS IN THIS\n                                            59620+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59621+*                                    IN milli-seconds)           @21A\n                                            59622+*\n 00000268                                   59623+SMF42FKX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59624+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59625+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59626+*                                                                @10A\n 0000026C                                   59627+SMF42FKY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59628+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59629+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59630+*                                    TRANSFERRED/4K)             @10A\n 00000270                                   59631+SMF42FKZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000278                                   59632+SMF42FK7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59633+SMF42F1F_LEN  EQU *-SMF42F1F                                     @10A   03-IGWSMF\n                                            59634+*\n 00000298                                   59635+SMF42F1G DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            59636+*                                    SECTION                     @10A\n 00000298                                   59637+SMF42FLA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59638+*                                    NUMBER                      @10A\n 0000029C                                   59639+SMF42FLB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59640+*                                                                @10A\n 000002A0                                   59641+SMF42FLC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59642+*                                    NRI - NO READ INTEGRITY\n                                            59643+*                                                                @10A\n 000002A4                                   59644+SMF42FLD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59645+*                                    CONSISTENT READS   @10A\n                                            59646+*\n 000002A8                                   59647+SMF42FLE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59648+*                                                                @10A\n 000002AC                                   59649+SMF42FLF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59650+*                                                                @10A\n 000002B0                                   59651+SMF42FL6 DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59652+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  176\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000002B4                                   59653+SMF42FLH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59654+*                                                                @10A\n                                            59655+*\n 000002B8                                   59656+SMF42FLI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59657+*                                                                @10A\n 000002BC                                   59658+SMF42FLJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59659+*                                                                @10A\n 000002C0                                   59660+SMF42FLK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59661+*                                                                @10A\n 000002C4                                   59662+SMF42FLL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59663+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59664+*\n 000002C8                                   59665+SMF42FLM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59666+*                                                                @10A\n 000002CC                                   59667+SMF42FLN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000002D0                                   59668+SMF42FLO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000002D4                                   59669+SMF42FLP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002D8                                   59670+SMF42FLQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59671+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59672+*                                                                @10A\n 000002E0                                   59673+SMF42FLR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59674+*                                    TO DASD.                    @10A\n 000002E4                                   59675+SMF42FLS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59676+*                                    TO DASD.                    @10A\n 000002E8                                   59677+SMF42FLT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59678+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59679+*                                                                @10A\n 000002F0                                   59680+SMF42FLU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59681+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59682+*                                                                @10A\n 000002F8                                   59683+SMF42FLV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59684+*                                                                @10A\n 00000308                                   59685+SMF42FLW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59686+*                                    REQUESTS IN THIS\n                                            59687+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59688+*                                    IN milli-seconds)           @21A\n                                            59689+*\n 00000310                                   59690+SMF42FLX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59691+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59692+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59693+*                                                                @10A\n 00000314                                   59694+SMF42FLY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59695+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59696+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59697+*                                    TRANSFERRED/4K)             @10A\n 00000318                                   59698+SMF42FLZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000320                                   59699+SMF42FL7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59700+SMF42F1G_LEN  EQU *-SMF42F1G                                     @10A   03-IGWSMF\n                                            59701+*\n 00000340                                   59702+SMF42F1H DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            59703+*                                    SECTION                     @10A\n 00000340                                   59704+SMF42FMA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59705+*                                    NUMBER                      @10A\n 00000344                                   59706+SMF42FMB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59707+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  177\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000348                                   59708+SMF42FMC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59709+*                                    NRI - NO READ INTEGRITY\n                                            59710+*                                                                @10A\n 0000034C                                   59711+SMF42FMD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59712+*                                    CONSISTENT READS   @10A\n                                            59713+*\n 00000350                                   59714+SMF42FME DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59715+*                                                                @10A\n 00000354                                   59716+SMF42FMF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59717+*                                                                @10A\n 00000358                                   59718+SMF42FMG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59719+*                                                                @10A\n 0000035C                                   59720+SMF42FMH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59721+*                                                                @10A\n                                            59722+*\n 00000360                                   59723+SMF42FMI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59724+*                                                                @10A\n 00000364                                   59725+SMF42FMJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59726+*                                                                @10A\n 00000368                                   59727+SMF42FMK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59728+*                                                                @10A\n 0000036C                                   59729+SMF42FML DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59730+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59731+*\n 00000370                                   59732+SMF42FMM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59733+*                                                                @10A\n 00000374                                   59734+SMF42FMN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000378                                   59735+SMF42FMO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000037C                                   59736+SMF42FMP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000380                                   59737+SMF42FMQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59738+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59739+*                                                                @10A\n 00000388                                   59740+SMF42FMR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59741+*                                    TO DASD.                    @10A\n 0000038C                                   59742+SMF42FMS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59743+*                                    TO DASD.                    @10A\n 00000390                                   59744+SMF42FMT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59745+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59746+*                                                                @10A\n 00000398                                   59747+SMF42FMU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59748+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59749+*                                                                @10A\n 000003A0                                   59750+SMF42FMV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59751+*                                                                @10A\n 000003B0                                   59752+SMF42FMW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59753+*                                    REQUESTS IN THIS\n                                            59754+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59755+*                                    IN milli-seconds)           @21A\n                                            59756+*\n 000003B8                                   59757+SMF42FMX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59758+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59759+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59760+*                                                                @10A\n 000003BC                                   59761+SMF42FMY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59762+*                                    OF THE REQUESTS IN THIS INTERVAL\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  178\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59763+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59764+*                                    TRANSFERRED/4K)             @10A\n 000003C0                                   59765+SMF42FMZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000003C8                                   59766+SMF42FM7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59767+SMF42F1H_LEN  EQU *-SMF42F1H                                     @10A   03-IGWSMF\n                                            59768+*\n 000003E8                                   59769+SMF42F1I DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            59770+*                                    SECTION                     @10A\n 000003E8                                   59771+SMF42FNA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59772+*                                    NUMBER                      @10A\n 000003EC                                   59773+SMF42FNB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59774+*                                                                @10A\n 000003F0                                   59775+SMF42FNC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59776+*                                    NRI - NO READ INTEGRITY\n                                            59777+*                                                                @10A\n 000003F4                                   59778+SMF42FND DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59779+*                                    CONSISTENT READS   @10A\n                                            59780+*\n 000003F8                                   59781+SMF42FNE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59782+*                                                                @10A\n 000003FC                                   59783+SMF42FNF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59784+*                                                                @10A\n 00000400                                   59785+SMF42FNG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59786+*                                                                @10A\n 00000404                                   59787+SMF42FNH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59788+*                                                                @10A\n                                            59789+*\n 00000408                                   59790+SMF42FNI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59791+*                                                                @10A\n 0000040C                                   59792+SMF42FNJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59793+*                                                                @10A\n 00000410                                   59794+SMF42FNK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59795+*                                                                @10A\n 00000414                                   59796+SMF42FNL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59797+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59798+*\n 00000418                                   59799+SMF42FNM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59800+*                                                                @10A\n 0000041C                                   59801+SMF42FNN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000420                                   59802+SMF42FNO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000424                                   59803+SMF42FNP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000428                                   59804+SMF42FNQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59805+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59806+*                                                                @10A\n 00000430                                   59807+SMF42FNR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59808+*                                    TO DASD.                    @10A\n 00000434                                   59809+SMF42FNS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59810+*                                    TO DASD.                    @10A\n 00000438                                   59811+SMF42FNT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59812+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59813+*                                                                @10A\n 00000440                                   59814+SMF42FNU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59815+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59816+*                                                                @10A\n 00000448                                   59817+SMF42FNV DS   CL16                   RESERVED                           03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  179\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59818+*                                                                @10A\n 00000458                                   59819+SMF42FNW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59820+*                                    REQUESTS IN THIS\n                                            59821+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59822+*                                    IN milli-seconds)           @21A\n                                            59823+*\n 00000460                                   59824+SMF42FNX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59825+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59826+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59827+*                                                                @10A\n 00000464                                   59828+SMF42FNY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59829+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59830+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59831+*                                    TRANSFERRED/4K)             @10A\n 00000468                                   59832+SMF42FNZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000470                                   59833+SMF42FN7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59834+SMF42F1I_LEN  EQU *-SMF42F1I                                     @10A   03-IGWSMF\n                         000002A0           59835+SMF42F1E_LEN  EQU *-SMF42F1E                                     @10A   03-IGWSMF\n                                            59836+*\n 00000490                                   59837+SMF42FX3 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000490                                   59838+SMF42FRA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59839+*                                    REQUESTS                    @10A\n                                            59840+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000494                                   59841+SMF42FRB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59842+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            59843+*                                    CONTENTION                  @10A\n 00000498                                   59844+SMF42FRC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59845+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            59846+*                                    CONTENTION                  @10A\n 0000049C                                   59847+SMF42FRD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59848+*                                    RELEASE REQUESTS            @10A\n 000004A0                                   59849+SMF42FRE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            59850+*                                    LOCK REQUESTS               @10A\n 000004A4                                   59851+SMF42FRF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            59852+*                                    RELEASE LOCK REQUESTS       @10A\n 000004A8                                   59853+SMF42FRG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000004B0                                   59854+SMF42FRH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59855+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59856+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004B4                                   59857+SMF42FRI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59858+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59859+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004B8                                   59860+SMF42FRJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59861+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59862+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004BC                                   59863+SMF42FRK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59864+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            59865+*                                    LOCK REQUESTS               @10A\n 000004C0                                   59866+SMF42FRL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59867+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59868+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004C4                                   59869+SMF42FRM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59870+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59871+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004C8                                   59872+SMF42FRN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  180\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59873+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59874+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004CC                                   59875+SMF42FRO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59876+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            59877+*                                    LOCK REQUESTS               @10A\n 000004D0                                   59878+SMF42FRP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59879+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            59880+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004D4                                   59881+SMF42FRQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59882+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            59883+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004D8                                   59884+SMF42FRR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59885+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            59886+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004DC                                   59887+SMF42FRS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59888+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            59889+*                                    LOCK REQUESTS               @10A\n 000004E0                                   59890+SMF42FRT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            59891+*                                    LOCK REQUESTS               @10A\n                                            59892+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004E4                                   59893+SMF42FRU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            59894+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004E8                                   59895+SMF42FRV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            59896+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004EC                                   59897+SMF42FRW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            59898+*                                    RELEASE LOCK REQUESTS       @10A\n 000004F0                                   59899+SMF42FRX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            59900+*                                                                @10A\n                                            59901+*                                                                @10A\n                         00000080           59902+SMF42FX3_LEN  EQU *-SMF42FX3                                     @10A   03-IGWSMF\n                                            59903+*                                                                @10A\n 00000510                                   59904+SMF42FX4 DS   0CL32                  THREAD LEVEL STATISTICS     @10A   03-IGWSMF\n 00000510                                   59905+SMF42FQR DS   2F                     TOTAL TIME ALL THREAD       @64C   03-IGWSMF\n                                            59906+*                                    REQUESTS                    @10A\n 00000518                                   59907+SMF42FQS DS   1FL4                   TOTAL NUMBER OF ALL THREAD  @10A   03-IGWSMF\n                                            59908+*                                    REQUESTS                    @10A\n 0000051C                                   59909+SMF42FQT DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n 00000520                                   59910+SMF42FQU DS   1FL4                   AVERAGE RESPONSE TIME FOR   @10A   03-IGWSMF\n                                            59911+*                                    ALL OF THE THREAD REQUESTS  @10A\n                                            59912+*                                    IN THE INTERVAL             @10A\n                                            59913+*                                    (TOTAL TIME/NUMBER OF       @10A\n                                            59914+*                                     THREAD REQUESTS)           @10A\n 00000524                                   59915+SMF42FQV DS   1FL4                   NORMALIZED RESPONSE TIME    @10A   03-IGWSMF\n                                            59916+*                                    FOR ALL OF THE THREAD       @10A\n                                            59917+*                                    REQUESTS IN THE INTERVAL    @10A\n                                            59918+*                                    (TOTAL TIME/NUMBER OF BYTES @10A\n                                            59919+*                                     TRANSFERRED/4K)            @10A\n 00000528                                   59920+SMF42FQW DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            59921+*                                                                @10A\n                         00000020           59922+SMF42FX4_LEN  EQU *-SMF42FX4                                     @10A   03-IGWSMF\n 00000530                                   59923+SMF42FBM DS   CL16                   Lock Structure name         @P7A   03-IGWSMF\n 00000540                                   59924+SMF42FBN DS   CL8                    Lock Set                    @P7A   03-IGWSMF\n                         00000548           59925+SMF420FB_LEN  EQU *-SMF420FB                                     @10A   03-IGWSMF\n                                            59926+*\n                                            59927+* The following sections are for above bar buffers                @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  181\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59928+*\n 00000000                00000000 00000518  59929+SMF2A0FA DSECT ,                ABOVE BAR BUFFERS                 @64A  03-IGWSMF\n                                            59930+*\n 00000000                                   59931+SMF2AFA1 DS   0CL1280           SYSPLEX WIDE SUMMARY              @64A  03-IGWSMF\n                                            59932+*\n 00000000                                   59933+SMF2AFAA DS   1FL4              INTERVAL LENGTH. THIS IS THE            03-IGWSMF\n                                            59934+*                               TOTAL TIME OF THE MEASUREMENT\n                                            59935+*                               PERIOD. (IN SECONDS)              @64A\n                                            59936+*\n 00000004                                   59937+SMF2AF00 DS   CL12              INDICATES IF DFSMS GREATER        @64A  03-IGWSMF\n                                            59938+*                               THAN 4K CF CACHING IS ACTIVE      @64A\n                                            59939+*                               VALUES ARE GT4KACTIVE OR          @64A\n                                            59940+*                               GT4KNOTACT                        @64A\n                                            59941+*\n 00000010                                   59942+SMF2AFAB DS   1FL2              LENGTH OF THE STORAGE CLASS NAME  @64A  03-IGWSMF\n                                            59943+*\n 00000012                                   59944+SMF2AFAC DS   CL30              STORAGE CLASS NAME                @64A  03-IGWSMF\n                                            59945+*\n 00000030                                   59946+SMF2AF01 DS   1FL2              CACHE SET NAME LENGTH             @64A  03-IGWSMF\n                                            59947+*\n 00000032                                   59948+SMF2AFAD DS   CL30              CACHE SET NAME                    @64A  03-IGWSMF\n                                            59949+*\n 00000050                                   59950+SMF2AFAE DS   1FL4              NUMBER OF LOCK REQUESTS PROCESSED @64A  03-IGWSMF\n                                            59951+*\n 00000054                                   59952+SMF2AFAF DS   1FL4              NUMBER OF TRUE CONTENTION               03-IGWSMF\n                                            59953+*                               LOCK REQUESTS                     @64A\n                                            59954+*\n 00000058                                   59955+SMF2AFAG DS   1FL4              NUMBER OF FALSE CONTENTION              03-IGWSMF\n                                            59956+*                               LOCK REQUESTS                     @64A\n                                            59957+*\n 0000005C                                   59958+SMF2AF02 DS   1FL2              SMS DIRECT WEIGHT                 @64A  03-IGWSMF\n                                            59959+*\n 0000005E                                   59960+SMF2AF12 DS   1FL2              SMS SEQUENTIAL WEIGHT             @64A  03-IGWSMF\n                                            59961+*\n 00000060                                   59962+SMF2AFAH DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            59963+*                                                                 @64A\n 00000070                                   59964+SMF2AFA2 DS   0CL336            DIRECT ACCESS SECTION             @64A  03-IGWSMF\n                                            59965+*\n 00000070                                   59966+SMF2AFA3 DS   0CL168            NORMAL DIRECT ACCESS SUMMARY            03-IGWSMF\n                                            59967+*                               SECTION                           @64A\n                                            59968+*                                                                 @64A\n 00000070                                   59969+SMF2AFCA DS   1FL4              COUPLE FACILITY CACHE PARTITION         03-IGWSMF\n                                            59970+*                               NUMBER                            @64A\n                                            59971+*                                                                 @64A\n 00000074                                   59972+SMF2AFCB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            59973+*\n 00000078                                   59974+SMF2AFCC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            59975+*                               NRI - NO READ INTEGRITY           @64A\n                                            59976+*\n 0000007C                                   59977+SMF2AFCD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -         03-IGWSMF\n                                            59978+*                               CONSISTENT READS                  @64A\n                                            59979+*\n 00000080                                   59980+SMF2AFCE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            59981+*\n 00000084                                   59982+SMF2AFCF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  182\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           59983+*\n 00000088                                   59984+SMF2AFCG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            59985+*\n 0000008C                                   59986+SMF2AFCH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            59987+*\n 00000090                                   59988+SMF2AFCI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            59989+*\n 00000094                                   59990+SMF2AFCJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            59991+*\n 00000098                                   59992+SMF2AFCK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            59993+*\n 0000009C                                   59994+SMF2AFCL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            59995+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            59996+*\n 000000A0                                   59997+SMF2AFCM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            59998+*\n 000000A4                                   59999+SMF2AFCN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60000+*\n 000000A8                                   60001+SMF2AFCO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60002+*\n 000000AC                                   60003+SMF2AFCP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60004+*\n 000000B0                                   60005+SMF2AFCQ DS   2F                NUMBER OF BYTES XFERED INTO THE   @64A  03-IGWSMF\n                                            60006+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60007+*\n 000000B8                                   60008+SMF2AFCR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60009+*                               TO DASD                           @64A\n                                            60010+*\n 000000BC                                   60011+SMF2AFCS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60012+*                               TO DASD                           @64A\n                                            60013+*\n 000000C0                                   60014+SMF2AFCT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60015+*                               DASD FOR THE READ   REQUESTS      @64A\n                                            60016+*\n 000000C8                                   60017+SMF2AFCU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60018+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60019+*\n 000000D0                                   60020+SMF2AFCV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60021+*\n 000000E0                                   60022+SMF2AFCW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60023+*                               REQUESTS IN THIS INTERVAL. (VALUE @64A\n                                            60024+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60025+*\n 000000E8                                   60026+SMF2AFCX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60027+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60028+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60029+*\n 000000EC                                   60030+SMF2AFCY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60031+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60032+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60033+*                                TRANSFERRED/4K)                  @64A\n                                            60034+*\n 000000F0                                   60035+SMF2AFCZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60036+*\n 000000F8                                   60037+SMF2AFC7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  183\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60038+*\n                         000000A8           60039+SMF2AFA3_LEN  EQU *-SMF2AFA3                                      @64A  03-IGWSMF\n                                            60040+*\n                                            60041+*\n 00000118                                   60042+SMF2AFA4 DS   0CL168            RE-DO DURING DIRECT ACCESS SECTION@64A  03-IGWSMF\n                                            60043+*\n 00000118                                   60044+SMF2AFDA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60045+*                               NUMBER                            @64A\n 0000011C                                   60046+SMF2AFDB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60047+*\n 00000120                                   60048+SMF2AFDC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60049+*                               NRI - NO READ INTEGRITY           @64A\n                                            60050+*\n 00000124                                   60051+SMF2AFDD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60052+*                               CONSISTENT READS                  @64A\n                                            60053+*\n 00000128                                   60054+SMF2AFDE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60055+*\n 0000012C                                   60056+SMF2AFDF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60057+*\n 00000130                                   60058+SMF2AFDG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60059+*\n 00000134                                   60060+SMF2AFDH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60061+*\n 00000138                                   60062+SMF2AFDI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60063+*\n 0000013C                                   60064+SMF2AFDJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60065+*\n 00000140                                   60066+SMF2AFDK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60067+*\n 00000144                                   60068+SMF2AFDL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60069+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60070+*\n 00000148                                   60071+SMF2AFDM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60072+*\n 0000014C                                   60073+SMF2AFDN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60074+*\n 00000150                                   60075+SMF2AFDO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60076+*\n 00000154                                   60077+SMF2AFDP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60078+*\n 00000158                                   60079+SMF2AFDQ DS   2F                NUMBER OF BYTES XFERED INTO THE   @64A  03-IGWSMF\n                                            60080+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60081+*\n 00000160                                   60082+SMF2AFDR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60083+*                               TO DASD                           @64A\n                                            60084+*\n 00000164                                   60085+SMF2AFDS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60086+*                               TO DASD                           @64A\n                                            60087+*\n 00000168                                   60088+SMF2AFDT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60089+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60090+*\n 00000170                                   60091+SMF2AFDU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60092+*                               DASD FOR THE WRITE REQUESTS       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  184\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60093+*\n 00000178                                   60094+SMF2AFDV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60095+*\n 00000188                                   60096+SMF2AFDW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60097+*                               REQUESTS IN THIS INTERVAL. (VALUE @64A\n                                            60098+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60099+*\n 00000190                                   60100+SMF2AFDX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60101+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60102+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60103+*\n 00000194                                   60104+SMF2AFDY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60105+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60106+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60107+*                               TRANSFERRED/4K)                   @64A\n                                            60108+*\n 00000198                                   60109+SMF2AFDZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60110+*\n 000001A0                                   60111+SMF2AFD7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60112+*\n                         000000A8           60113+SMF2AFA4_LEN  EQU *-SMF2AFA4                                      @64A  03-IGWSMF\n                                            60114+*\n                                            60115+*\n 000001C0                                   60116+SMF2AFA5 DS   0CL672            SEQUENTIAL ACCESS SUMMARY SECTION @64A  03-IGWSMF\n                                            60117+*\n 000001C0                                   60118+SMF2AFA6 DS   0CL168            NORMAL SEQUENTIAL ACCESS SECTION  @64A  03-IGWSMF\n                                            60119+*\n 000001C0                                   60120+SMF2AFEA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60121+*                               NUMBER                            @64A\n                                            60122+*\n 000001C4                                   60123+SMF2AFEB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60124+*\n 000001C8                                   60125+SMF2AFEC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60126+*                               NRI - NO READ INTEGRITY           @64A\n                                            60127+*\n 000001CC                                   60128+SMF2AFED DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60129+*                               CONSISTENT READS                  @64A\n                                            60130+*\n 000001D0                                   60131+SMF2AFEE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60132+*\n 000001D4                                   60133+SMF2AFEF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60134+*\n 000001D8                                   60135+SMF2AFEG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60136+*\n 000001DC                                   60137+SMF2AFEH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60138+*\n 000001E0                                   60139+SMF2AFEI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60140+*\n 000001E4                                   60141+SMF2AFEJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60142+*\n 000001E8                                   60143+SMF2AFEK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60144+*\n 000001EC                                   60145+SMF2AFEL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60146+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60147+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  185\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000001F0                                   60148+SMF2AFEM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60149+*\n 000001F4                                   60150+SMF2AFEN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60151+*\n 000001F8                                   60152+SMF2AFEO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60153+*\n 000001FC                                   60154+SMF2AFEP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60155+*\n 00000200                                   60156+SMF2AFEQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60157+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60158+*\n 00000208                                   60159+SMF2AFER DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60160+*                               TO DASD                           @64A\n                                            60161+*\n 0000020C                                   60162+SMF2AFES DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60163+*                               TO DASD                           @64A\n                                            60164+*\n 00000210                                   60165+SMF2AFET DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60166+*                               DASD FOR THE READ   REQUESTS      @64A\n                                            60167+*\n 00000218                                   60168+SMF2AFEU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60169+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60170+*\n 00000220                                   60171+SMF2AFEV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60172+*\n 00000230                                   60173+SMF2AFEW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60174+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60175+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60176+*\n 00000238                                   60177+SMF2AFEX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60178+*                               THE REQUESTS IN THIS INTERVAL     @64A\n                                            60179+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60180+*\n 0000023C                                   60181+SMF2AFEY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60182+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60183+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60184+*                               TRANSFERRED/4K)                   @64A\n                                            60185+*\n 00000240                                   60186+SMF2AFEZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60187+*\n 00000248                                   60188+SMF2AFE7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60189+*\n                         000000A8           60190+SMF2AFA6_LEN  EQU *-SMF2AFA6                                      @64A  03-IGWSMF\n                                            60191+*\n                                            60192+*\n 00000268                                   60193+SMF2AFA7 DS   0CL168            RE-DO DURING SEQUENTIAL ACCESS    @64A  03-IGWSMF\n                                            60194+*                               SECTION                           @64A\n                                            60195+*\n 00000268                                   60196+SMF2AFFA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60197+*                               NUMBER                            @64A\n                                            60198+*\n 0000026C                                   60199+SMF2AFFB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60200+*\n 00000270                                   60201+SMF2AFFC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60202+*                               NRI - NO READ INTEGRITY           @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  186\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60203+*\n 00000274                                   60204+SMF2AFFD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60205+*                               CONSISTENT READS                  @64A\n                                            60206+*\n 00000278                                   60207+SMF2AFFE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60208+*\n 0000027C                                   60209+SMF2AFFF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60210+*\n 00000280                                   60211+SMF2AFFG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60212+*\n 00000284                                   60213+SMF2AFFH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60214+*\n 00000288                                   60215+SMF2AFFI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60216+*\n 0000028C                                   60217+SMF2AFFJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60218+*\n 00000290                                   60219+SMF2AFFK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60220+*\n 00000294                                   60221+SMF2AFFL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60222+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60223+*\n 00000298                                   60224+SMF2AFFM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60225+*\n 0000029C                                   60226+SMF2AFFN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60227+*\n 000002A0                                   60228+SMF2AFFO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60229+*\n 000002A4                                   60230+SMF2AFFP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60231+*\n 000002A8                                   60232+SMF2AFFQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60233+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60234+*\n 000002B0                                   60235+SMF2AFFR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60236+*                               TO DASD                           @64A\n                                            60237+*\n 000002B4                                   60238+SMF2AFFS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS       03-IGWSMF\n                                            60239+*                               TO DASD                           @64A\n                                            60240+*\n 000002B8                                   60241+SMF2AFFT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60242+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60243+*\n 000002C0                                   60244+SMF2AFFU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60245+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60246+*\n 000002C8                                   60247+SMF2AFFV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60248+*\n 000002D8                                   60249+SMF2AFFW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60250+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60251+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60252+*\n 000002E0                                   60253+SMF2AFFX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60254+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60255+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60256+*\n 000002E4                                   60257+SMF2AFFY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  187\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60258+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60259+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60260+*                               TRANSFERRED/4K)                   @64A\n                                            60261+*\n 000002E8                                   60262+SMF2AFFZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60263+*\n 000002F0                                   60264+SMF2AFF7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60265+*\n                         000000A8           60266+SMF2AFA7_LEN  EQU *-SMF2AFA7                                      @64A  03-IGWSMF\n                                            60267+*\n                                            60268+*\n 00000310                                   60269+SMF2AFA8 DS   0CL168            READ-A-HEAD SEQUENTIAL ACCESS     @64A  03-IGWSMF\n                                            60270+*                               SECTION                           @64A\n                                            60271+*\n 00000310                                   60272+SMF2AFGA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60273+*                               NUMBER                            @64A\n                                            60274+*\n 00000314                                   60275+SMF2AFGB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60276+*\n 00000318                                   60277+SMF2AFGC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60278+*                               NRI - NO READ INTEGRITY           @64A\n                                            60279+*\n 0000031C                                   60280+SMF2AFGD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60281+*                               CONSISTENT READS                  @64A\n                                            60282+*\n 00000320                                   60283+SMF2AFGE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60284+*\n 00000324                                   60285+SMF2AFGF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60286+*\n 00000328                                   60287+SMF2AFGG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60288+*\n 0000032C                                   60289+SMF2AFGH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60290+*\n 00000330                                   60291+SMF2AFGI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60292+*\n 00000334                                   60293+SMF2AFGJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60294+*\n 00000338                                   60295+SMF2AFGK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60296+*\n 0000033C                                   60297+SMF2AFGL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60298+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60299+*\n 00000340                                   60300+SMF2AFGM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60301+*\n 00000344                                   60302+SMF2AFGN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60303+*\n 00000348                                   60304+SMF2AFGO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60305+*\n 0000034C                                   60306+SMF2AFGP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60307+*\n 00000350                                   60308+SMF2AFGQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60309+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60310+*\n 00000358                                   60311+SMF2AFGR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60312+*                               TO DASD                           @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  188\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60313+*\n 0000035C                                   60314+SMF2AFGS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60315+*                               TO DASD                           @64A\n                                            60316+*\n 00000360                                   60317+SMF2AFGT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60318+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60319+*\n 00000368                                   60320+SMF2AFGU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60321+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60322+*\n 00000370                                   60323+SMF2AFGV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60324+*\n 00000380                                   60325+SMF2AFGW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60326+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60327+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60328+*\n 00000388                                   60329+SMF2AFGX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60330+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60331+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60332+*\n 0000038C                                   60333+SMF2AFGY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60334+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60335+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60336+*                               TRANSFERRED/4K)                   @64A\n                                            60337+*\n 00000390                                   60338+SMF2AFGZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60339+*\n 00000398                                   60340+SMF2AFG7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60341+*\n                         000000A8           60342+SMF2AFA8_LEN  EQU *-SMF2AFA8                                      @64A  03-IGWSMF\n                                            60343+*\n                                            60344+*\n 000003B8                                   60345+SMF2AFA9 DS   0CL168            PRE-FORMAT SEQUENTIAL ACCESS      @64A  03-IGWSMF\n                                            60346+*                               SECTION                           @64A\n                                            60347+*\n 000003B8                                   60348+SMF2AFHA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60349+*                               NUMBER                            @64A\n                                            60350+*\n 000003BC                                   60351+SMF2AFHB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60352+*\n 000003C0                                   60353+SMF2AFHC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60354+*                               NRI - NO READ INTEGRITY           @64A\n                                            60355+*\n 000003C4                                   60356+SMF2AFHD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60357+*                               CONSISTENT READS                  @64A\n                                            60358+*\n 000003C8                                   60359+SMF2AFHE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60360+*\n 000003CC                                   60361+SMF2AFHF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60362+*\n 000003D0                                   60363+SMF2AFHG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60364+*\n 000003D4                                   60365+SMF2AFHH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60366+*\n 000003D8                                   60367+SMF2AFHI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  189\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60368+*\n 000003DC                                   60369+SMF2AFHJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60370+*\n 000003E0                                   60371+SMF2AFHK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60372+*\n 000003E4                                   60373+SMF2AFHL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60374+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60375+*\n 000003E8                                   60376+SMF2AFHM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60377+*\n 000003EC                                   60378+SMF2AFHN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60379+*\n 000003F0                                   60380+SMF2AFHO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60381+*\n 000003F4                                   60382+SMF2AFHP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60383+*\n 000003F8                                   60384+SMF2AFHQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60385+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60386+*\n 00000400                                   60387+SMF2AFHR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60388+*                               TO DASD                           @64A\n                                            60389+*\n 00000404                                   60390+SMF2AFHS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60391+*                               TO DASD                           @64A\n                                            60392+*\n 00000408                                   60393+SMF2AFHT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60394+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60395+*\n 00000410                                   60396+SMF2AFHU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60397+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60398+*\n 00000418                                   60399+SMF2AFHV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60400+*\n 00000428                                   60401+SMF2AFHW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60402+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60403+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60404+*\n 00000430                                   60405+SMF2AFHX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60406+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60407+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60408+*\n 00000434                                   60409+SMF2AFHY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60410+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60411+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60412+*                               TRANSFERRED/4K)                   @64A\n                                            60413+*\n 00000438                                   60414+SMF2AFHZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60415+*\n 00000440                                   60416+SMF2AFH7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60417+*\n                         000000A8           60418+SMF2AFA9_LEN  EQU *-SMF2AFA9                                      @64A  03-IGWSMF\n                                            60419+*\n                         000002A0           60420+SMF2AFA5_LEN  EQU *-SMF2AFA5                                      @64A  03-IGWSMF\n                                            60421+*\n                                            60422+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  190\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000460                                   60423+SMF2AFX1 DS   0CL128            LOCKING STATISTICS SUMMARY        @64A  03-IGWSMF\n                                            60424+*\n 00000460                                   60425+SMF2AFOA DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            60426+*                               REQUESTS                          @64A\n                                            60427+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            60428+*\n 00000464                                   60429+SMF2AFOB DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            60430+*                               REQUESTS THAT CAUSE TRUE          @64A\n                                            60431+*                               CONTENTION                        @64A\n                                            60432+*\n 00000468                                   60433+SMF2AFOC DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            60434+*                               REQUESTS THAT CAUSE FALSE         @64A\n                                            60435+*                               CONTENTION                        @64A\n                                            60436+*\n 0000046C                                   60437+SMF2AFOD DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            60438+*                               RELEASE REQUESTS                  @64A\n                                            60439+*\n 00000470                                   60440+SMF2AFOE DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            60441+*                               LOCK REQUESTS                     @64A\n                                            60442+*\n 00000474                                   60443+SMF2AFOF DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            60444+*                               RELEASE LOCK REQUESTS             @64A\n                                            60445+*\n 00000478                                   60446+SMF2AFOG DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60447+*\n 00000480                                   60448+SMF2AFOH DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60449+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            60450+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            60451+*\n 00000484                                   60452+SMF2AFOI DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60453+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            60454+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            60455+*\n 00000488                                   60456+SMF2AFOJ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60457+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            60458+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            60459+*\n 0000048C                                   60460+SMF2AFOK DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60461+*                               CLASS_1 (DIWA) RELEASE            @64A\n                                            60462+*                               LOCK REQUESTS                     @64A\n                                            60463+*\n 00000490                                   60464+SMF2AFOL DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60465+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            60466+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            60467+*\n 00000494                                   60468+SMF2AFOM DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60469+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            60470+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            60471+*\n 00000498                                   60472+SMF2AFON DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60473+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            60474+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            60475+*\n 0000049C                                   60476+SMF2AFOO DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60477+*                               CLASS_2 (UPGRADE) RELEASE         @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  191\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60478+*                               LOCK REQUESTS                     @64A\n                                            60479+*\n 000004A0                                   60480+SMF2AFOP DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60481+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            60482+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            60483+*\n 000004A4                                   60484+SMF2AFOQ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60485+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            60486+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            60487+*\n 000004A8                                   60488+SMF2AFOR DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60489+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            60490+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            60491+*\n 000004AC                                   60492+SMF2AFOS DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            60493+*                               CLASS_3 (PREFORMAT) RELEASE       @64A\n                                            60494+*                               LOCK REQUESTS                     @64A\n                                            60495+*\n 000004B0                                   60496+SMF2AFOT DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            60497+*                               LOCK REQUESTS                     @64A\n                                            60498+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            60499+*\n 000004B4                                   60500+SMF2AFOU DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            60501+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            60502+*\n 000004B8                                   60503+SMF2AFOV DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            60504+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            60505+*\n 000004BC                                   60506+SMF2AFOW DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            60507+*                               RELEASE LOCK REQUESTS             @64A\n                                            60508+*\n 000004C0                                   60509+SMF2AFOX DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60510+*\n                         00000080           60511+SMF2AFX1_LEN  EQU *-SMF2AFX1                                      @64A  03-IGWSMF\n                                            60512+*\n                                            60513+*\n 000004E0                                   60514+SMF2AFX2 DS   0CL32             THREAD LEVEL STATISTICS           @64A  03-IGWSMF\n                                            60515+*\n 000004E0                                   60516+SMF2AFPR DS   2F                TOTAL TIME ALL THREAD             @64A  03-IGWSMF\n                                            60517+*                               REQUESTS                          @64A\n                                            60518+*\n 000004E8                                   60519+SMF2AFPS DS   1FL4              TOTAL NUMBER OF ALL THREAD        @64A  03-IGWSMF\n                                            60520+*                               REQUESTS                          @64A\n                                            60521+*\n 000004EC                                   60522+SMF2AFPT DS   1FL4              RESERVED                          @64A  03-IGWSMF\n                                            60523+*\n 000004F0                                   60524+SMF2AFPU DS   1FL4              AVERAGE RESPONSE TIME FOR         @64A  03-IGWSMF\n                                            60525+*                               ALL OF THE THREAD REQUESTS        @64A\n                                            60526+*                               IN THE INTERVAL                   @64A\n                                            60527+*                               (TOTAL TIME/NUMBER OF             @64A\n                                            60528+*                               THREAD REQUESTS)                  @64A\n                                            60529+*\n 000004F4                                   60530+SMF2AFPV DS   1FL4              NORMALIZED RESPONSE TIME          @64A  03-IGWSMF\n                                            60531+*                               FOR ALL OF THE THREAD             @64A\n                                            60532+*                               REQUESTS IN THE INTERVAL          @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  192\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60533+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60534+*                               TRANSFERRED/4K)                   @64A\n                                            60535+*\n 000004F8                                   60536+SMF2AFPW DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60537+*\n                         00000020           60538+SMF2AFX2_LEN  EQU *-SMF2AFX2                                      @64A  03-IGWSMF\n 00000500                                   60539+SMF2AFAI DS   CL16              Lock Structure name               @L3C  03-IGWSMF\n 00000510                                   60540+SMF2AFAJ DS   CL8               Lock Set                          @L3A  03-IGWSMF\n                                            60541+*\n                         00000518           60542+SMF2A0FA_LEN  EQU *-SMF2A0FA                                      @64A  03-IGWSMF\n                                            60543+*\n                                            60544+*\n 00000000                00000000 00000548  60545+SMF2A0FB DSECT ,                                                  @64A  03-IGWSMF\n                                            60546+*\n 00000000                                   60547+SMF2AF1A DS   0CL1328           SC/SYS/CF CLASS SUMMARY SECTION   @64A  03-IGWSMF\n                                            60548+*\n 00000000                                   60549+SMF2AFBA DS   1FL4              INTERVAL LENGTH. THIS IS THE      @64A  03-IGWSMF\n                                            60550+*                               TOTAL TIME OF THE MEASUREMENT     @64A\n                                            60551+*                               PERIOD. (IN SECONDS)              @64A\n                                            60552+*\n 00000004                                   60553+SMF2AF03 DS   CL12              INDICATES IF DFSMS GREATER        @64A  03-IGWSMF\n                                            60554+*                               THAN 4K CF CACHING IS ACTIVE      @64A\n                                            60555+*                               VALUES ARE GT4KACTIVE OR          @64A\n                                            60556+*                               GT4KNOTACT                        @64A\n                                            60557+*\n 00000010                                   60558+SMF2AFBB DS   1FL2              LENGTH OF THE STORAGE CLASS NAME  @64A  03-IGWSMF\n                                            60559+*\n 00000012                                   60560+SMF2AFBC DS   CL30              STORAGE CLASS NAME                @64A  03-IGWSMF\n                                            60561+*\n 00000030                                   60562+SMF2AF04 DS   1FL2              CACHE SET NAME LENGTH             @64A  03-IGWSMF\n                                            60563+*\n 00000032                                   60564+SMF2AFBD DS   CL30              CACHE SET NAME                    @64A  03-IGWSMF\n                                            60565+*\n 00000050                                   60566+SMF2AFBE DS   CL8               MVS SYSTEM NAME                   @64A  03-IGWSMF\n                                            60567+*\n 00000058                                   60568+SMF2AF05 DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60569+*\n 00000060                                   60570+SMF2AFBF DS   CL2               RESERVED                          @64A  03-IGWSMF\n                                            60571+*\n 00000062                                   60572+SMF2AFBG DS   CL30              DFP CACHE STRUCTURE  NAME         @64A  03-IGWSMF\n                                            60573+*\n 00000080                                   60574+SMF2AFBH DS   1FL4              NUMBER OF LOCK REQUESTS           @64A  03-IGWSMF\n                                            60575+*                               PROCESSED (not used)              @64A\n                                            60576+*\n 00000084                                   60577+SMF2AFBI DS   1FL4              NUMBER OF TRUE CONTENTION         @64A  03-IGWSMF\n                                            60578+*                               LOCK REQUESTS (not used)          @64A\n                                            60579+*\n 00000088                                   60580+SMF2AFBJ DS   1FL4              NUMBER OF FALSE CONTENTION        @64A  03-IGWSMF\n                                            60581+*                               LOCK REQUESTS (not used)          @64A\n                                            60582+*\n 0000008C                                   60583+SMF2AFB2 DS   1FL2              SMS DIRECT WEIGHT                 @64A  03-IGWSMF\n                                            60584+*\n 0000008E                                   60585+SMF2AFB3 DS   1FL2              SMS SEQUENTIAL WEIGHT             @64A  03-IGWSMF\n                                            60586+*\n 00000090                                   60587+SMF2AFBL DS   CL16              RESERVED                          @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  193\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60588+*\n                                            60589+*\n 000000A0                                   60590+SMF2AF1B DS   0CL336            DIRECT ACCESS SUMMARY SECTION     @64A  03-IGWSMF\n                                            60591+*\n 000000A0                                   60592+SMF2AF1C DS   0CL168            NORMAL DIRECT ACCESS SUMMARY      @64A  03-IGWSMF\n                                            60593+*                               SECTION                           @64A\n                                            60594+*\n 000000A0                                   60595+SMF2AFIA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60596+*                               NUMBER                            @64A\n                                            60597+*\n 000000A4                                   60598+SMF2AFIB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60599+*\n 000000A8                                   60600+SMF2AFIC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60601+*                               NRI - NO READ INTEGRITY           @64A\n                                            60602+*\n 000000AC                                   60603+SMF2AFID DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60604+*                               CONSISTENT READS                  @64A\n                                            60605+*\n 000000B0                                   60606+SMF2AFIE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60607+*\n 000000B4                                   60608+SMF2AFIF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60609+*\n 000000B8                                   60610+SMF2AFIG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60611+*\n 000000BC                                   60612+SMF2AFIH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60613+*\n 000000C0                                   60614+SMF2AFII DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60615+*\n 000000C4                                   60616+SMF2AFIJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60617+*\n 000000C8                                   60618+SMF2AFIK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60619+*\n 000000CC                                   60620+SMF2AFIL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60621+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60622+*\n 000000D0                                   60623+SMF2AFIM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60624+*\n 000000D4                                   60625+SMF2AFIN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60626+*\n 000000D8                                   60627+SMF2AFIO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60628+*\n 000000DC                                   60629+SMF2AFIP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60630+*\n 000000E0                                   60631+SMF2AFIQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60632+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60633+*\n 000000E8                                   60634+SMF2AFIR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60635+*                               TO DASD                           @64A\n                                            60636+*\n 000000EC                                   60637+SMF2AFIS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60638+*                               TO DASD                           @64A\n                                            60639+*\n 000000F0                                   60640+SMF2AFIT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60641+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60642+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  194\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000F8                                   60643+SMF2AFIU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60644+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60645+*\n 00000100                                   60646+SMF2AFIV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60647+*\n 00000110                                   60648+SMF2AFIW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60649+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60650+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60651+*\n 00000118                                   60652+SMF2AFIX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60653+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60654+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60655+*\n 0000011C                                   60656+SMF2AFIY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60657+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60658+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60659+*                               TRANSFERRED/4K)                   @64A\n                                            60660+*\n 00000120                                   60661+SMF2AFIZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60662+*\n 00000128                                   60663+SMF2AFI7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60664+*\n                         000000A8           60665+SMF2AF1C_LEN  EQU *-SMF2AF1C                                      @64A  03-IGWSMF\n                                            60666+*\n                                            60667+*\n 00000148                                   60668+SMF2AF1D DS   0CL168            RE-DO DURING DIRECT ACCESS SECTION@64A  03-IGWSMF\n                                            60669+*\n 00000148                                   60670+SMF2AFJA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60671+*                               NUMBER                            @64A\n                                            60672+*\n 0000014C                                   60673+SMF2AFJB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60674+*\n 00000150                                   60675+SMF2AFJC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60676+*                               NRI - NO READ INTEGRITY           @64A\n                                            60677+*\n 00000154                                   60678+SMF2AFJD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60679+*                               CONSISTENT READS                  @64A\n                                            60680+*\n 00000158                                   60681+SMF2AFJE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60682+*\n 0000015C                                   60683+SMF2AFJF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60684+*\n 00000160                                   60685+SMF2AFJG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60686+*\n 00000164                                   60687+SMF2AFJH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60688+*\n 00000168                                   60689+SMF2AFJI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60690+*\n 0000016C                                   60691+SMF2AFJJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60692+*\n 00000170                                   60693+SMF2AFJK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60694+*\n 00000174                                   60695+SMF2AFJL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60696+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60697+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  195\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000178                                   60698+SMF2AFJM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60699+*\n 0000017C                                   60700+SMF2AFJN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60701+*\n 00000180                                   60702+SMF2AFJO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60703+*\n 00000184                                   60704+SMF2AFJP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60705+*\n 00000188                                   60706+SMF2AFJQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60707+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60708+*\n 00000190                                   60709+SMF2AFJR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60710+*                               TO DASD                           @64A\n                                            60711+*\n 00000194                                   60712+SMF2AFJS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60713+*                               TO DASD                           @64A\n                                            60714+*\n 00000198                                   60715+SMF2AFJT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60716+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60717+*\n 000001A0                                   60718+SMF2AFJU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60719+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60720+*\n 000001A8                                   60721+SMF2AFJV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60722+*\n 000001B8                                   60723+SMF2AFJW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60724+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60725+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60726+*\n 000001C0                                   60727+SMF2AFJX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60728+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60729+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60730+*\n 000001C4                                   60731+SMF2AFJY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60732+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60733+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60734+*                               TRANSFERRED/4K)                   @64A\n                                            60735+*\n 000001C8                                   60736+SMF2AFJZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60737+*\n 000001D0                                   60738+SMF2AFJ7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60739+*\n                         000000A8           60740+SMF2AF1D_LEN  EQU *-SMF2AF1D                                      @64A  03-IGWSMF\n                                            60741+*\n                         00000150           60742+SMF2AF1B_LEN  EQU *-SMF2AF1B                                      @64A  03-IGWSMF\n                                            60743+*\n                                            60744+*\n 000001F0                                   60745+SMF2AF1E DS   0CL672            SEQUENTIAL ACCESS SUMMARY SECTION @64A  03-IGWSMF\n                                            60746+*\n 000001F0                                   60747+SMF2AF1F DS   0CL168            NORMAL SEQUENTIAL ACCESS SECTION  @64A  03-IGWSMF\n                                            60748+*\n 000001F0                                   60749+SMF2AFKA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60750+*                               NUMBER                            @64A\n                                            60751+*\n 000001F4                                   60752+SMF2AFKB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  196\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60753+*\n 000001F8                                   60754+SMF2AFKC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60755+*                               NRI - NO READ INTEGRITY           @64A\n                                            60756+*\n 000001FC                                   60757+SMF2AFKD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60758+*                               CONSISTENT READS                  @64A\n                                            60759+*\n 00000200                                   60760+SMF2AFKE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60761+*\n 00000204                                   60762+SMF2AFKF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60763+*\n 00000208                                   60764+SMF2AFKG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60765+*\n 0000020C                                   60766+SMF2AFKH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60767+*\n 00000210                                   60768+SMF2AFKI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60769+*\n 00000214                                   60770+SMF2AFKJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60771+*\n 00000218                                   60772+SMF2AFKK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60773+*\n 0000021C                                   60774+SMF2AFKL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60775+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60776+*\n 00000220                                   60777+SMF2AFKM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60778+*\n 00000224                                   60779+SMF2AFKN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60780+*\n 00000228                                   60781+SMF2AFKO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60782+*\n 0000022C                                   60783+SMF2AFKP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60784+*\n 00000230                                   60785+SMF2AFKQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60786+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60787+*\n 00000238                                   60788+SMF2AFKR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60789+*                               TO DASD                           @64A\n                                            60790+*\n 0000023C                                   60791+SMF2AFKS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60792+*                               TO DASD                           @64A\n                                            60793+*\n 00000240                                   60794+SMF2AFKT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60795+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60796+*\n 00000248                                   60797+SMF2AFKU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60798+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60799+*\n 00000250                                   60800+SMF2AFKV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60801+*\n 00000260                                   60802+SMF2AFKW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60803+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60804+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60805+*\n 00000268                                   60806+SMF2AFKX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60807+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  197\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60808+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60809+*\n 0000026C                                   60810+SMF2AFKY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60811+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60812+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60813+*                               TRANSFERRED/4K)                   @64A\n                                            60814+*\n 00000270                                   60815+SMF2AFKZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60816+*\n 00000278                                   60817+SMF2AFK7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60818+*\n                         000000A8           60819+SMF2AF1F_LEN  EQU *-SMF2AF1F                                      @64A  03-IGWSMF\n                                            60820+*\n                                            60821+*\n 00000298                                   60822+SMF2AF1G DS   0CL168            RE-DO DURING SEQUENTIAL ACCESS    @64A  03-IGWSMF\n                                            60823+*                               SECTION                           @64A\n                                            60824+*\n 00000298                                   60825+SMF2AFLA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60826+*                               NUMBER                            @64A\n                                            60827+*\n 0000029C                                   60828+SMF2AFLB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60829+*\n 000002A0                                   60830+SMF2AFLC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60831+*                               NRI - NO READ INTEGRITY           @64A\n                                            60832+*\n 000002A4                                   60833+SMF2AFLD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60834+*                               CONSISTENT READS                  @64A\n                                            60835+*\n 000002A8                                   60836+SMF2AFLE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60837+*\n 000002AC                                   60838+SMF2AFLF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60839+*\n 000002B0                                   60840+SMF2AFL6 DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60841+*\n 000002B4                                   60842+SMF2AFLH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60843+*\n 000002B8                                   60844+SMF2AFLI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60845+*\n 000002BC                                   60846+SMF2AFLJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60847+*\n 000002C0                                   60848+SMF2AFLK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60849+*\n 000002C4                                   60850+SMF2AFLL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60851+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60852+*\n 000002C8                                   60853+SMF2AFLM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60854+*\n 000002CC                                   60855+SMF2AFLN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60856+*\n 000002D0                                   60857+SMF2AFLO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60858+*\n 000002D4                                   60859+SMF2AFLP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60860+*\n 000002D8                                   60861+SMF2AFLQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60862+*                               DFSMS CACHE STRUCTURE             @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  198\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60863+*\n 000002E0                                   60864+SMF2AFLR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60865+*                               TO DASD                           @64A\n                                            60866+*\n 000002E4                                   60867+SMF2AFLS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60868+*                               TO DASD                           @64A\n                                            60869+*\n 000002E8                                   60870+SMF2AFLT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60871+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60872+*\n 000002F0                                   60873+SMF2AFLU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60874+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60875+*\n 000002F8                                   60876+SMF2AFLV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60877+*\n 00000308                                   60878+SMF2AFLW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60879+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60880+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60881+*\n 00000310                                   60882+SMF2AFLX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60883+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60884+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60885+*\n 00000314                                   60886+SMF2AFLY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60887+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60888+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60889+*                               TRANSFERRED/4K)                   @64A\n                                            60890+*\n 00000318                                   60891+SMF2AFLZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60892+*\n 00000320                                   60893+SMF2AFL7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60894+*\n                         000000A8           60895+SMF2AF1G_LEN  EQU *-SMF2AF1G                                      @64A  03-IGWSMF\n                                            60896+*\n                                            60897+*\n 00000340                                   60898+SMF2AF1H DS   0CL168            READ-A-HEAD SEQUENTIAL ACCESS     @64A  03-IGWSMF\n                                            60899+*                               SECTION                           @64A\n                                            60900+*\n 00000340                                   60901+SMF2AFMA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60902+*                               NUMBER                            @64A\n                                            60903+*\n 00000344                                   60904+SMF2AFMB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60905+*\n 00000348                                   60906+SMF2AFMC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60907+*                               NRI - NO READ INTEGRITY           @64A\n                                            60908+*\n 0000034C                                   60909+SMF2AFMD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60910+*                               CONSISTENT READS                  @64A\n                                            60911+*\n 00000350                                   60912+SMF2AFME DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60913+*\n 00000354                                   60914+SMF2AFMF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60915+*\n 00000358                                   60916+SMF2AFMG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60917+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  199\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000035C                                   60918+SMF2AFMH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60919+*\n 00000360                                   60920+SMF2AFMI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60921+*\n 00000364                                   60922+SMF2AFMJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60923+*\n 00000368                                   60924+SMF2AFMK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60925+*\n 0000036C                                   60926+SMF2AFML DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60927+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60928+*\n 00000370                                   60929+SMF2AFMM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60930+*\n 00000374                                   60931+SMF2AFMN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60932+*\n 00000378                                   60933+SMF2AFMO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60934+*\n 0000037C                                   60935+SMF2AFMP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60936+*\n 00000380                                   60937+SMF2AFMQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60938+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60939+*\n 00000388                                   60940+SMF2AFMR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60941+*                               TO DASD                           @64A\n                                            60942+*\n 0000038C                                   60943+SMF2AFMS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60944+*                               TO DASD                           @64A\n                                            60945+*\n 00000390                                   60946+SMF2AFMT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60947+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60948+*\n 00000398                                   60949+SMF2AFMU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60950+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60951+*\n 000003A0                                   60952+SMF2AFMV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60953+*\n 000003B0                                   60954+SMF2AFMW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60955+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60956+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60957+*\n 000003B8                                   60958+SMF2AFMX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60959+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60960+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60961+*\n 000003BC                                   60962+SMF2AFMY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60963+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60964+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60965+*                               TRANSFERRED/4K)                   @64A\n                                            60966+*\n 000003C0                                   60967+SMF2AFMZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60968+*\n 000003C8                                   60969+SMF2AFM7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60970+*\n                         000000A8           60971+SMF2AF1H_LEN  EQU *-SMF2AF1H                                            03-IGWSMF\n                                            60972+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  200\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           60973+*\n 000003E8                                   60974+SMF2AF1I DS   0CL168            PRE-FORMAT SEQUENTIAL ACCESS      @64A  03-IGWSMF\n                                            60975+*                               SECTION                           @64A\n                                            60976+*\n 000003E8                                   60977+SMF2AFNA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60978+*                               NUMBER                            @64A\n                                            60979+*\n 000003EC                                   60980+SMF2AFNB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60981+*\n 000003F0                                   60982+SMF2AFNC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60983+*                               NRI - NO READ INTEGRITY           @64A\n                                            60984+*\n 000003F4                                   60985+SMF2AFND DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60986+*                               CONSISTENT READS                  @64A\n                                            60987+*\n 000003F8                                   60988+SMF2AFNE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60989+*\n 000003FC                                   60990+SMF2AFNF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60991+*\n 00000400                                   60992+SMF2AFNG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60993+*\n 00000404                                   60994+SMF2AFNH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60995+*\n 00000408                                   60996+SMF2AFNI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60997+*\n 0000040C                                   60998+SMF2AFNJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60999+*\n 00000410                                   61000+SMF2AFNK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61001+*\n 00000414                                   61002+SMF2AFNL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61003+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61004+*\n 00000418                                   61005+SMF2AFNM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61006+*\n 0000041C                                   61007+SMF2AFNN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61008+*\n 00000420                                   61009+SMF2AFNO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61010+*\n 00000424                                   61011+SMF2AFNP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61012+*\n 00000428                                   61013+SMF2AFNQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61014+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61015+*\n 00000430                                   61016+SMF2AFNR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61017+*                               TO DASD                           @64A\n                                            61018+*\n 00000434                                   61019+SMF2AFNS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61020+*                               TO DASD                           @64A\n                                            61021+*\n 00000438                                   61022+SMF2AFNT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61023+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61024+*\n 00000440                                   61025+SMF2AFNU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61026+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61027+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  201\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000448                                   61028+SMF2AFNV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61029+*\n 00000458                                   61030+SMF2AFNW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61031+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61032+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61033+*\n 00000460                                   61034+SMF2AFNX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61035+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61036+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61037+*\n 00000464                                   61038+SMF2AFNY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61039+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61040+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61041+*                               TRANSFERRED/4K)                   @64A\n                                            61042+*\n 00000468                                   61043+SMF2AFNZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61044+*\n 00000470                                   61045+SMF2AFN7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61046+*\n                         000000A8           61047+SMF2AF1I_LEN  EQU *-SMF2AF1I                                      @64A  03-IGWSMF\n                                            61048+*\n                         000002A0           61049+SMF2AF1E_LEN  EQU *-SMF2AF1E                                      @64A  03-IGWSMF\n                                            61050+*\n                                            61051+*\n 00000490                                   61052+SMF2AFX3 DS   0CL128            LOCKING STATISTICS SUMMARY        @64A  03-IGWSMF\n                                            61053+*\n 00000490                                   61054+SMF2AFRA DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61055+*                               REQUESTS                          @64A\n                                            61056+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61057+*\n 00000494                                   61058+SMF2AFRB DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61059+*                               REQUESTS THAT CAUSE TRUE          @64A\n                                            61060+*                               CONTENTION                        @64A\n                                            61061+*\n 00000498                                   61062+SMF2AFRC DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61063+*                               REQUESTS THAT CAUSE FALSE         @64A\n                                            61064+*                               CONTENTION                        @64A\n                                            61065+*\n 0000049C                                   61066+SMF2AFRD DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61067+*                               RELEASE REQUESTS                  @64A\n                                            61068+*\n 000004A0                                   61069+SMF2AFRE DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            61070+*                               LOCK REQUESTS                     @64A\n                                            61071+*\n 000004A4                                   61072+SMF2AFRF DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            61073+*                               RELEASE LOCK REQUESTS             @64A\n                                            61074+*\n 000004A8                                   61075+SMF2AFRG DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61076+*\n 000004B0                                   61077+SMF2AFRH DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61078+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61079+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61080+*\n 000004B4                                   61081+SMF2AFRI DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61082+*                               CLASS_1 (DIWA) LOCKS              @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  202\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61083+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61084+*\n 000004B8                                   61085+SMF2AFRJ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61086+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61087+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61088+*\n 000004BC                                   61089+SMF2AFRK DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61090+*                               CLASS_1 (DIWA) RELEASE            @64A\n                                            61091+*                               LOCK REQUESTS                     @64A\n                                            61092+*\n 000004C0                                   61093+SMF2AFRL DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61094+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61095+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61096+*\n 000004C4                                   61097+SMF2AFRM DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61098+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61099+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61100+*\n 000004C8                                   61101+SMF2AFRN DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61102+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61103+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61104+*\n 000004CC                                   61105+SMF2AFRO DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61106+*                               CLASS_2 (UPGRADE) RELEASE         @64A\n                                            61107+*                               LOCK REQUESTS                     @64A\n                                            61108+*\n 000004D0                                   61109+SMF2AFRP DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61110+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61111+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61112+*\n 000004D4                                   61113+SMF2AFRQ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61114+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61115+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61116+*\n 000004D8                                   61117+SMF2AFRR DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61118+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61119+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61120+*\n 000004DC                                   61121+SMF2AFRS DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61122+*                               CLASS_3 (PREFORMAT) RELEASE       @64A\n                                            61123+*                               LOCK REQUESTS                     @64A\n                                            61124+*\n 000004E0                                   61125+SMF2AFRT DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            61126+*                               LOCK REQUESTS                     @64A\n                                            61127+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61128+*\n 000004E4                                   61129+SMF2AFRU DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            61130+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61131+*\n 000004E8                                   61132+SMF2AFRV DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            61133+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61134+*\n 000004EC                                   61135+SMF2AFRW DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            61136+*                               RELEASE LOCK REQUESTS             @64A\n                                            61137+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  203\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000004F0                                   61138+SMF2AFRX DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61139+*\n                         00000080           61140+SMF2AFX3_LEN  EQU *-SMF2AFX3                                      @64A  03-IGWSMF\n                                            61141+*\n                                            61142+*\n 00000510                                   61143+SMF2AFX4 DS   0CL32             THREAD LEVEL STATISTICS           @64A  03-IGWSMF\n                                            61144+*\n 00000510                                   61145+SMF2AFQR DS   2F                TOTAL TIME ALL THREAD REQUESTS    @64A  03-IGWSMF\n                                            61146+*\n 00000518                                   61147+SMF2AFQS DS   1FL4              TOTAL NUMBER OF ALL THREAD        @64A  03-IGWSMF\n                                            61148+*                               REQUESTS                          @64A\n                                            61149+*\n 0000051C                                   61150+SMF2AFQT DS   1FL4              RESERVED                          @64A  03-IGWSMF\n                                            61151+*\n 00000520                                   61152+SMF2AFQU DS   1FL4              AVERAGE RESPONSE TIME FOR         @64A  03-IGWSMF\n                                            61153+*                               ALL OF THE THREAD REQUESTS        @64A\n                                            61154+*                               IN THE INTERVAL                   @64A\n                                            61155+*                               (TOTAL TIME/NUMBER OF             @64A\n                                            61156+*                               THREAD REQUESTS)                  @64A\n                                            61157+*\n 00000524                                   61158+SMF2AFQV DS   1FL4              NORMALIZED RESPONSE TIME          @64A  03-IGWSMF\n                                            61159+*                               FOR ALL OF THE THREAD             @64A\n                                            61160+*                               REQUESTS IN THE INTERVAL          @64A\n                                            61161+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61162+*                               TRANSFERRED/4K)                   @64A\n                                            61163+*\n 00000528                                   61164+SMF2AFQW DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61165+*\n                         00000020           61166+SMF2AFX4_LEN  EQU *-SMF2AFX4                                      @64A  03-IGWSMF\n 00000530                                   61167+SMF2AFBM DS   CL16                   Lock Structure name         @P7A   03-IGWSMF\n 00000540                                   61168+SMF2AFBN DS   CL8                    Lock Set                    @P7A   03-IGWSMF\n                                            61169+*\n                         00000548           61170+SMF2A0FB_LEN  EQU *-SMF2A0FB                                      @64A  03-IGWSMF\n                                            61171+*\n                                            61172+*\n                                            61173+*   -----------------------------------------------------------------\n                                            61174+*    CF DATASET RESPONSE TIME SUMMARY (SMF42 SUBTYPE 16)\n                                            61175+*   -----------------------------------------------------------------\n 00000000                00000000 000005D0  61176+SMF420GA DSECT ,                                                        03-IGWSMF\n 00000000                                   61177+SMF42GA1 DS   0CL1472                SYSPLEX WIDE SUMMARY        @21A   03-IGWSMF\n 00000000                                   61178+SMF42GAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            61179+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            61180+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   61181+SMF42A00 DS   CL12                   RESERVED                    @MDK   03-IGWSMF\n                                            61182+*\n 00000010                                   61183+SMF42GAB DS   CL44                   DATA SET NAME               @10A   03-IGWSMF\n 0000003C                                   61184+SMF42A01 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            61185+*\n 00000040                                   61186+SMF42GAC DS   CL44                   VSAM SPHERE NAME            @10A   03-IGWSMF\n 0000006C                                   61187+SMF42A02 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            61188+*\n 00000070                                   61189+SMF42GAD DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            61190+*                                    NAME                        @10A\n 00000072                                   61191+SMF42GAE DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            61192+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  204\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000090                                   61193+SMF42A03 DS   1FL2                   CACHESETNAME LENGTH         @10A   03-IGWSMF\n 00000092                                   61194+SMF42GAF DS   CL30                   CACHESET NAME               @10A   03-IGWSMF\n                                            61195+*\n 000000B0                                   61196+SMF42GAG DS   CL2                    RESERVED                    @10A   03-IGWSMF\n 000000B2                                   61197+SMF42GAH DS   CL30                   DFP CACHE STRUCTURE NAME    @10A   03-IGWSMF\n                                            61198+*\n 000000D0                                   61199+SMF42GAI DS   1FL4                   INDICATOR OF COMPONENT BEING       03-IGWSMF\n                                            61200+*                                    PROCESSED                   @10A\n                         80000000           61201+SMF42GAI0 EQU   X'80000000'          DATA COMPONENT              @10A   03-IGWSMF\n                         40000000           61202+SMF42GAI1 EQU   X'40000000'          INDEX COMPONENT             @10A   03-IGWSMF\n                                            61203+*                                                                @10A\n 000000D4                                   61204+SMF42GAJ DS   CL12                   INDICATES DFSMS GREATER     @P5A   03-IGWSMF\n                                            61205+*                                    THAN 4K CF CACHING STATUS   @P5A\n                                            61206+*                                    VALUES ARE ALL, NONE,       @P5A\n                                            61207+*                                    UPDATESONLY, GT4KNOTACT     @P5A\n 000000E0                                   61208+SMF42GAK DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            61209+*                                    PROCESSED                   @10A\n 000000E4                                   61210+SMF42GAL DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            61211+*                                    LOCK REQUESTS               @10A\n 000000E8                                   61212+SMF42GAM DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            61213+*                                    LOCK REQUESTS               @10A\n 000000EC                                   61214+SMF42GZ1 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 000000EE                                   61215+SMF42GZ2 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n                                            61216+*\n 000000F0                                   61217+SMF42GAN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME@10A   03-IGWSMF\n 000000F8                                   61218+SMF42GAO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME@10A   03-IGWSMF\n                                            61219+*\n 00000100                                   61220+SMF42GAP DS   CL16                   SMS DATACLASS NAME          @P5A   03-IGWSMF\n                                            61221+*\n 00000110                                   61222+SMF42GA2 DS   0CL336                 DIRECT ACCESS SUMMARY SECTION      03-IGWSMF\n                                            61223+*                                                                @10A\n 00000110                                   61224+SMF42GA3 DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            61225+*                                    SECTION                     @10A\n 00000110                                   61226+SMF42GCA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61227+*                                    NUMBER                      @10A\n 00000114                                   61228+SMF42GCB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61229+*                                                                @10A\n 00000118                                   61230+SMF42GCC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61231+*                                    NRI - NO READ INTEGRITY\n                                            61232+*                                                                @10A\n 0000011C                                   61233+SMF42GCD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61234+*                                    CONSISTENT READS   @10A\n                                            61235+*\n 00000120                                   61236+SMF42GCE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61237+*                                                                @10A\n 00000124                                   61238+SMF42GCF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61239+*                                                                @10A\n 00000128                                   61240+SMF42GCG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61241+*                                                                @10A\n 0000012C                                   61242+SMF42GCH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61243+*                                                                @10A\n                                            61244+*\n 00000130                                   61245+SMF42GCI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61246+*                                                                @10A\n 00000134                                   61247+SMF42GCJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  205\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61248+*                                                                @10A\n 00000138                                   61249+SMF42GCK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61250+*                                                                @10A\n 0000013C                                   61251+SMF42GCL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61252+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61253+*\n 00000140                                   61254+SMF42GCM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61255+*                                                                @10A\n 00000144                                   61256+SMF42GCN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000148                                   61257+SMF42GCO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000014C                                   61258+SMF42GCP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000150                                   61259+SMF42GCQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61260+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61261+*                                                                @10A\n 00000158                                   61262+SMF42GCR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61263+*                                    TO DASD.                    @10A\n 0000015C                                   61264+SMF42GCS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61265+*                                    TO DASD.                    @10A\n 00000160                                   61266+SMF42GCT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61267+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61268+*                                                                @10A\n 00000168                                   61269+SMF42GCU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61270+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61271+*                                                                @10A\n 00000170                                   61272+SMF42GCV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61273+*                                                                @10A\n 00000180                                   61274+SMF42GCW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61275+*                                    REQUESTS IN THIS\n                                            61276+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61277+*                                    IN milli-seconds)           @21A\n                                            61278+*\n 00000188                                   61279+SMF42GCX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61280+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61281+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61282+*                                                                @10A\n 0000018C                                   61283+SMF42GCY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61284+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61285+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61286+*                                    TRANSFERRED/4K)             @10A\n 00000190                                   61287+SMF42GCZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000198                                   61288+SMF42GC7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61289+*\n                         000000A8           61290+SMF42GA3_LEN  EQU *-SMF42GA3                                     @10A   03-IGWSMF\n                                            61291+*\n 000001B8                                   61292+SMF42GA4 DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            61293+*                                    SECTION                     @10A\n 000001B8                                   61294+SMF42GDA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61295+*                                    NUMBER                      @10A\n 000001BC                                   61296+SMF42GDB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61297+*                                                                @10A\n 000001C0                                   61298+SMF42GDC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61299+*                                    NRI - NO READ INTEGRITY\n                                            61300+*                                                                @10A\n 000001C4                                   61301+SMF42GDD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61302+*                                    CONSISTENT READS   @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  206\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61303+*\n 000001C8                                   61304+SMF42GDE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61305+*                                                                @10A\n 000001CC                                   61306+SMF42GDF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61307+*                                                                @10A\n 000001D0                                   61308+SMF42GDG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61309+*                                                                @10A\n 000001D4                                   61310+SMF42GDH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61311+*                                                                @10A\n                                            61312+*\n 000001D8                                   61313+SMF42GDI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61314+*                                                                @10A\n 000001DC                                   61315+SMF42GDJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61316+*                                                                @10A\n 000001E0                                   61317+SMF42GDK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61318+*                                                                @10A\n 000001E4                                   61319+SMF42GDL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61320+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61321+*\n 000001E8                                   61322+SMF42GDM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61323+*                                                                @10A\n 000001EC                                   61324+SMF42GDN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000001F0                                   61325+SMF42GDO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000001F4                                   61326+SMF42GDP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000001F8                                   61327+SMF42GDQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61328+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61329+*                                                                @10A\n 00000200                                   61330+SMF42GDR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61331+*                                    TO DASD.                    @10A\n 00000204                                   61332+SMF42GDS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61333+*                                    TO DASD.                    @10A\n 00000208                                   61334+SMF42GDT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61335+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61336+*                                                                @10A\n 00000210                                   61337+SMF42GDU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61338+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61339+*                                                                @10A\n 00000218                                   61340+SMF42GDV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61341+*                                                                @10A\n 00000228                                   61342+SMF42GDW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61343+*                                    REQUESTS IN THIS\n                                            61344+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61345+*                                    IN milli-seconds)           @21A\n                                            61346+*\n 00000230                                   61347+SMF42GDX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61348+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61349+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61350+*                                                                @10A\n 00000234                                   61351+SMF42GDY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61352+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61353+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61354+*                                    TRANSFERRED/4K)             @10A\n 00000238                                   61355+SMF42GDZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000240                                   61356+SMF42GD7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61357+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  207\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        000000A8           61358+SMF42GA4_LEN  EQU *-SMF42GA4                                     @10A   03-IGWSMF\n                         00000150           61359+SMF42GA2_LEN  EQU *-SMF42GA2                                     @10A   03-IGWSMF\n                                            61360+*\n 00000260                                   61361+SMF42GA5 DS   0CL800                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            61362+*                                                                @10A\n 00000260                                   61363+SMF42GA6 DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            61364+*                                                                @10A\n 00000260                                   61365+SMF42GEA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61366+*                                    NUMBER                      @10A\n 00000264                                   61367+SMF42GEB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61368+*                                                                @10A\n 00000268                                   61369+SMF42GEC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61370+*                                    NRI - NO READ INTEGRITY\n                                            61371+*                                                                @10A\n 0000026C                                   61372+SMF42GED DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61373+*                                    CONSISTENT READS   @10A\n                                            61374+*\n 00000270                                   61375+SMF42GEE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61376+*                                                                @10A\n 00000274                                   61377+SMF42GEF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61378+*                                                                @10A\n 00000278                                   61379+SMF42GEG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61380+*                                                                @10A\n 0000027C                                   61381+SMF42GEH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61382+*                                                                @10A\n                                            61383+*\n 00000280                                   61384+SMF42GEI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61385+*                                                                @10A\n 00000284                                   61386+SMF42GEJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61387+*                                                                @10A\n 00000288                                   61388+SMF42GEK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61389+*                                                                @10A\n 0000028C                                   61390+SMF42GEL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61391+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61392+*\n 00000290                                   61393+SMF42GEM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61394+*                                                                @10A\n 00000294                                   61395+SMF42GEN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000298                                   61396+SMF42GEO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000029C                                   61397+SMF42GEP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002A0                                   61398+SMF42GEQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61399+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61400+*                                                                @10A\n 000002A8                                   61401+SMF42GER DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61402+*                                    TO DASD.                    @10A\n 000002AC                                   61403+SMF42GES DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61404+*                                    TO DASD.                    @10A\n 000002B0                                   61405+SMF42GET DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61406+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61407+*                                                                @10A\n 000002B8                                   61408+SMF42GEU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61409+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61410+*                                                                @10A\n 000002C0                                   61411+SMF42GEV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61412+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  208\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000002D0                                   61413+SMF42GEW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61414+*                                    REQUESTS IN THIS\n                                            61415+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61416+*                                    IN milli-seconds)           @21A\n                                            61417+*\n 000002D8                                   61418+SMF42GEX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61419+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61420+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61421+*                                                                @10A\n 000002DC                                   61422+SMF42GEY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61423+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61424+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61425+*                                    TRANSFERRED/4K)             @10A\n                                            61426+*\n 000002E0                                   61427+SMF42GEZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000002E8                                   61428+SMF42GE7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61429+*\n                         000000A8           61430+SMF42GA6_LEN  EQU *-SMF42GA6                                            03-IGWSMF\n                                            61431+*\n 00000308                                   61432+SMF42GA7 DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            61433+*                                    SECTION                     @10A\n 00000308                                   61434+SMF42GFA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61435+*                                    NUMBER                      @10A\n 0000030C                                   61436+SMF42GFB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61437+*                                                                @10A\n 00000310                                   61438+SMF42GFC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61439+*                                    NRI - NO READ INTEGRITY\n                                            61440+*                                                                @10A\n 00000314                                   61441+SMF42GFD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61442+*                                    CONSISTENT READS   @10A\n                                            61443+*\n 00000318                                   61444+SMF42GFE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61445+*                                                                @10A\n 0000031C                                   61446+SMF42GFF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61447+*                                                                @10A\n 00000320                                   61448+SMF42GFG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61449+*                                                                @10A\n 00000324                                   61450+SMF42GFH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61451+*                                                                @10A\n                                            61452+*\n 00000328                                   61453+SMF42GFI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61454+*                                                                @10A\n 0000032C                                   61455+SMF42GFJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61456+*                                                                @10A\n 00000330                                   61457+SMF42GFK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61458+*                                                                @10A\n 00000334                                   61459+SMF42GFL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61460+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61461+*\n 00000338                                   61462+SMF42GFM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61463+*                                                                @10A\n 0000033C                                   61464+SMF42GFN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000340                                   61465+SMF42GFO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000344                                   61466+SMF42GFP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000348                                   61467+SMF42GFQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  209\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61468+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61469+*                                                                @10A\n 00000350                                   61470+SMF42GFR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61471+*                                    TO DASD.                    @10A\n 00000354                                   61472+SMF42GFS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61473+*                                    TO DASD.                    @10A\n 00000358                                   61474+SMF42GFT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61475+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61476+*                                                                @10A\n 00000360                                   61477+SMF42GFU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61478+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61479+*                                                                @10A\n 00000368                                   61480+SMF42GFV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61481+*                                                                @10A\n 00000378                                   61482+SMF42GFW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61483+*                                    REQUESTS IN THIS\n                                            61484+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61485+*                                    IN milli-seconds)           @21A\n                                            61486+*\n 00000380                                   61487+SMF42GFX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61488+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61489+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61490+*                                                                @10A\n 00000384                                   61491+SMF42GFY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61492+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61493+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61494+*                                    TRANSFERRED/4K)             @10A\n                                            61495+*\n 00000388                                   61496+SMF42GFZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000390                                   61497+SMF42GF7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61498+*\n                         000000A8           61499+SMF42GA7_LEN  EQU *-SMF42GA7                                            03-IGWSMF\n                                            61500+*\n 000003B0                                   61501+SMF42GA8 DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            61502+*                                    SECTION                     @10A\n 000003B0                                   61503+SMF42GGA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61504+*                                    NUMBER                      @10A\n 000003B4                                   61505+SMF42GGB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61506+*                                                                @10A\n 000003B8                                   61507+SMF42GGC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61508+*                                    NRI - NO READ INTEGRITY\n                                            61509+*                                                                @10A\n 000003BC                                   61510+SMF42GGD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61511+*                                    CONSISTENT READS   @10A\n                                            61512+*\n 000003C0                                   61513+SMF42GGE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61514+*                                                                @10A\n 000003C4                                   61515+SMF42GGF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61516+*                                                                @10A\n 000003C8                                   61517+SMF42GGG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61518+*                                                                @10A\n 000003CC                                   61519+SMF42GGH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61520+*                                                                @10A\n                                            61521+*\n 000003D0                                   61522+SMF42GGI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  210\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61523+*                                                                @10A\n 000003D4                                   61524+SMF42GGJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61525+*                                                                @10A\n 000003D8                                   61526+SMF42GGK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61527+*                                                                @10A\n 000003DC                                   61528+SMF42GGL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61529+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61530+*\n 000003E0                                   61531+SMF42GGM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61532+*                                                                @10A\n 000003E4                                   61533+SMF42GGN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000003E8                                   61534+SMF42GGO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000003EC                                   61535+SMF42GGP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000003F0                                   61536+SMF42GGQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61537+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61538+*                                                                @10A\n 000003F8                                   61539+SMF42GGR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61540+*                                    TO DASD.                    @10A\n 000003FC                                   61541+SMF42GGS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61542+*                                    TO DASD.                    @10A\n 00000400                                   61543+SMF42GGT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61544+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61545+*                                                                @10A\n 00000408                                   61546+SMF42GGU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61547+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61548+*                                                                @10A\n 00000410                                   61549+SMF42GGV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61550+*                                                                @10A\n 00000420                                   61551+SMF42GGW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61552+*                                    REQUESTS IN THIS\n                                            61553+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61554+*                                    IN milli-seconds)           @21A\n                                            61555+*\n 00000428                                   61556+SMF42GGX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61557+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61558+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61559+*                                                                @10A\n 0000042C                                   61560+SMF42GGY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61561+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61562+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61563+*                                    TRANSFERRED/4K)             @10A\n                                            61564+*\n 00000430                                   61565+SMF42GGZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000438                                   61566+SMF42GG7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61567+*\n                         000000A8           61568+SMF42GA8_LEN  EQU *-SMF42GA8                                            03-IGWSMF\n                                            61569+*\n 00000458                                   61570+SMF42GA9 DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            61571+*                                    SECTION                     @10A\n 00000458                                   61572+SMF42GHA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61573+*                                    NUMBER                      @10A\n 0000045C                                   61574+SMF42GHB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61575+*                                                                @10A\n 00000460                                   61576+SMF42GHC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61577+*                                    NRI - NO READ INTEGRITY\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  211\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61578+*                                                                @10A\n 00000464                                   61579+SMF42GHD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61580+*                                    CONSISTENT READS   @10A\n                                            61581+*\n 00000468                                   61582+SMF42GHE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61583+*                                                                @10A\n 0000046C                                   61584+SMF42GHF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61585+*                                                                @10A\n 00000470                                   61586+SMF42GHG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61587+*                                                                @10A\n 00000474                                   61588+SMF42GHH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61589+*                                                                @10A\n                                            61590+*\n 00000478                                   61591+SMF42GHI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61592+*                                                                @10A\n 0000047C                                   61593+SMF42GHJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61594+*                                                                @10A\n 00000480                                   61595+SMF42GHK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61596+*                                                                @10A\n 00000484                                   61597+SMF42GHL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61598+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61599+*\n 00000488                                   61600+SMF42GHM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61601+*                                                                @10A\n 0000048C                                   61602+SMF42GHN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000490                                   61603+SMF42GHO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000494                                   61604+SMF42GHP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000498                                   61605+SMF42GHQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61606+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61607+*                                                                @10A\n 000004A0                                   61608+SMF42GHR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61609+*                                    TO DASD.                    @10A\n 000004A4                                   61610+SMF42GHS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61611+*                                    TO DASD.                    @10A\n 000004A8                                   61612+SMF42GHT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61613+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61614+*                                                                @10A\n 000004B0                                   61615+SMF42GHU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61616+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61617+*                                                                @10A\n 000004B8                                   61618+SMF42GHV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61619+*                                                                @10A\n 000004C8                                   61620+SMF42GHW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61621+*                                    REQUESTS IN THIS\n                                            61622+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61623+*                                    IN milli-seconds)           @21A\n                                            61624+*\n 000004D0                                   61625+SMF42GHX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61626+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61627+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61628+*                                                                @10A\n 000004D4                                   61629+SMF42GHY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61630+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61631+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61632+*                                    TRANSFERRED/4K)             @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  212\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61633+*\n 000004D8                                   61634+SMF42GHZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000004E0                                   61635+SMF42GH7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61636+*\n                         000000A8           61637+SMF42GA9_LEN  EQU *-SMF42GA9                                            03-IGWSMF\n                         000002A0           61638+SMF42GA5_LEN  EQU *-SMF42GA5                                            03-IGWSMF\n                                            61639+*\n 00000500                                   61640+SMF42FX5 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000500                                   61641+SMF42GPA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            61642+*                                    REQUESTS                    @10A\n                                            61643+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000504                                   61644+SMF42GPB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            61645+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            61646+*                                    CONTENTION                  @10A\n 00000508                                   61647+SMF42GPC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            61648+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            61649+*                                    CONTENTION                  @10A\n 0000050C                                   61650+SMF42GPD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            61651+*                                    RELEASE REQUESTS            @10A\n 00000510                                   61652+SMF42GPE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            61653+*                                    LOCK REQUESTS               @10A\n 00000514                                   61654+SMF42GPF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            61655+*                                    RELEASE LOCK REQUESTS       @10A\n 00000518                                   61656+SMF42GPG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000520                                   61657+SMF42GPH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61658+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            61659+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000524                                   61660+SMF42GPI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61661+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            61662+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000528                                   61663+SMF42GPJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61664+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            61665+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000052C                                   61666+SMF42GPK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61667+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            61668+*                                    LOCK REQUESTS               @10A\n 00000530                                   61669+SMF42GPL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61670+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            61671+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000534                                   61672+SMF42GPM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61673+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            61674+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000538                                   61675+SMF42GPN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61676+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            61677+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000053C                                   61678+SMF42GPO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61679+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            61680+*                                    LOCK REQUESTS               @10A\n 00000540                                   61681+SMF42GPP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61682+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            61683+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000544                                   61684+SMF42GPQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61685+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            61686+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000548                                   61687+SMF42GPR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  213\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61688+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            61689+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000054C                                   61690+SMF42GPS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            61691+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            61692+*                                    LOCK REQUESTS               @10A\n 00000550                                   61693+SMF42GPT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            61694+*                                    LOCK REQUESTS               @10A\n                                            61695+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000554                                   61696+SMF42GPU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            61697+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000558                                   61698+SMF42GPV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            61699+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000055C                                   61700+SMF42GPW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            61701+*                                    RELEASE LOCK REQUESTS       @10A\n 00000560                                   61702+SMF42GPX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61703+*                                                                @10A\n                         00000080           61704+SMF42FX5_LEN  EQU *-SMF42FX5                                     @10A   03-IGWSMF\n                                            61705+*\n 00000580                                   61706+SMF42FX7 DS   0CL64                  DATASET BMF LRU STATS       @21A   03-IGWSMF\n 00000580                                   61707+SMF42GRA DS   1FL4                   NUMBER OF REDOS             @21A   03-IGWSMF\n 00000584                                   61708+SMF42GRB DS   1FL4                   NUMBER OF RECURSIVE REDOS   @21A   03-IGWSMF\n 00000588                                   61709+SMF42GRC DS   1FL4                   NUMBER OF BMF WRITES        @21A   03-IGWSMF\n 0000058C                                   61710+SMF42GRD DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n 00000590                                   61711+SMF42GRE DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n                                            61712+*                                    THAT ENCOUNTERED CASTOUT    @21A\n                                            61713+*                                    LOCK CONTENTION             @21A\n 00000594                                   61714+SMF42GRG DS   1FL4                   REDO PERCENT                @21A   03-IGWSMF\n 00000598                                   61715+SMF42GRH DS   1FL4                   RECURSIVE REDO PERCENT      @21A   03-IGWSMF\n 0000059C                                   61716+SMF42GRI DS   1FL4                   SCM CASTOUT LOCK PERCENT    @21A   03-IGWSMF\n 000005A0                                   61717+SMF42GRF DS   CL8                    RESERVED                    @28C   03-IGWSMF\n 000005A8                                   61718+SMF42GRW DS   1FL4                   LCDLATCH CONTENTION COUNT   @28A   03-IGWSMF\n 000005AC                                   61719+SMF42GRJ DS   CL4                    RESERVED                    @21A   03-IGWSMF\n 000005B0                                   61720+SMF42GRK DS   CL16                   RESERVED                    @21A   03-IGWSMF\n                                            61721+*                                                                @21A\n                         00000040           61722+SMF42FX7_LEN  EQU *-SMF42FX7                                     @21A   03-IGWSMF\n 000005C0                                   61723+SMF42GAQ DS   CL16                   LOCK STRUCTURE NAME         @L3A   03-IGWSMF\n                                            61724+*                                                                @L3A\n                         000005D0           61725+SMF420GA_LEN  EQU *-SMF420GA                                     @10A   03-IGWSMF\n                                            61726+*\n 00000000                00000000 000005E0  61727+SMF420GB DSECT ,                                                        03-IGWSMF\n 00000000                                   61728+SMF42G1A DS   0CL1488                DATA SET/MVS SYSTEM SUMMARY @21A   03-IGWSMF\n                                            61729+*                                    SECTION                     @21C\n 00000000                                   61730+SMF42GBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            61731+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            61732+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   61733+SMF42A05 DS   CL12                   RESERVED                    @10A   03-IGWSMF\n                                            61734+*\n 00000010                                   61735+SMF42GBB DS   CL44                   DATA SET NAME               @10A   03-IGWSMF\n 0000003C                                   61736+SMF42A06 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            61737+*\n 00000040                                   61738+SMF42GBC DS   CL44                   VSAM SPHERE NAME            @10A   03-IGWSMF\n 0000006C                                   61739+SMF42A07 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            61740+*\n 00000070                                   61741+SMF42GBD DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            61742+*                                    NAME                        @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  214\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000072                                   61743+SMF42GBE DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            61744+*\n 00000090                                   61745+SMF42A08 DS   1FL2                   CACHESETNAME LENGTH         @10A   03-IGWSMF\n 00000092                                   61746+SMF42GBF DS   CL30                   CACHESET NAME               @10A   03-IGWSMF\n                                            61747+*\n 000000B0                                   61748+SMF42A12 DS   1FL2                   RESERVED                    @10A   03-IGWSMF\n 000000B2                                   61749+SMF42GBG DS   CL30                   DFP CACHE STRUCTURE NAME    @10A   03-IGWSMF\n                                            61750+*\n 000000D0                                   61751+SMF42GBH DS   CL8                    MVS SYSTEM NAME             @10A   03-IGWSMF\n 000000D8                                   61752+SMF42A11 DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            61753+*\n 000000E0                                   61754+SMF42GBI DS   1FL4                   INDICATOR OF COMPONENT BEING       03-IGWSMF\n                                            61755+*                                    PROCESSED                   @10A\n                         80000000           61756+SMF42GBI0 EQU   X'80000000'          DATA COMPONENT              @10A   03-IGWSMF\n                         40000000           61757+SMF42GBI1 EQU   X'40000000'          INDEX COMPONENT             @10A   03-IGWSMF\n 000000E4                                   61758+SMF42A09 DS   CL12                   INDICATES DFSMS GREATER     @P5A   03-IGWSMF\n                                            61759+*                                    THAN 4K CF CACHING STATUS   @P5A\n                                            61760+*                                    VALUES ARE ALL, NONE,       @P5A\n                                            61761+*                                    UPDATESONLY, GT4KNOTACT     @P5A\n 000000F0                                   61762+SMF42GBK DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            61763+*                                    PROCESSED                   @10A\n 000000F4                                   61764+SMF42GBL DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            61765+*                                    LOCK REQUESTS               @10A\n 000000F8                                   61766+SMF42GBM DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            61767+*                                    LOCK REQUESTS               @10A\n 000000FC                                   61768+SMF42GZ8 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 000000FE                                   61769+SMF42GZ9 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n                                            61770+*\n 00000100                                   61771+SMF42GBN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME@10A   03-IGWSMF\n 00000108                                   61772+SMF42GBO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME@10A   03-IGWSMF\n                                            61773+*\n 00000110                                   61774+SMF42GBP DS   CL16                   SMS DATACLASS NAME          @P5A   03-IGWSMF\n                                            61775+*\n 00000120                                   61776+SMF42G1B DS   0CL336                 DIRECT ACCESS SUMMARY SECTION      03-IGWSMF\n                                            61777+*                                                                @10A\n 00000120                                   61778+SMF42G1C DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            61779+*                                    SECTION                     @10A\n 00000120                                   61780+SMF42GIA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61781+*                                    NUMBER                      @10A\n 00000124                                   61782+SMF42GIB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61783+*                                                                @10A\n 00000128                                   61784+SMF42GIC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61785+*                                    NRI - NO READ INTEGRITY\n                                            61786+*                                                                @10A\n 0000012C                                   61787+SMF42GID DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61788+*                                    CONSISTENT READS   @10A\n                                            61789+*\n 00000130                                   61790+SMF42GIE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61791+*                                                                @10A\n 00000134                                   61792+SMF42GIF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61793+*                                                                @10A\n 00000138                                   61794+SMF42GIG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61795+*                                                                @10A\n 0000013C                                   61796+SMF42GIH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61797+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  215\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61798+*\n 00000140                                   61799+SMF42GII DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61800+*                                                                @10A\n 00000144                                   61801+SMF42GIJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61802+*                                                                @10A\n 00000148                                   61803+SMF42GIK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61804+*                                                                @10A\n 0000014C                                   61805+SMF42GIL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61806+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61807+*\n 00000150                                   61808+SMF42GIM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61809+*                                                                @10A\n 00000154                                   61810+SMF42GIN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000158                                   61811+SMF42GIO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000015C                                   61812+SMF42GIP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000160                                   61813+SMF42GIQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61814+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61815+*                                                                @10A\n 00000168                                   61816+SMF42GIR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61817+*                                    TO DASD.                    @10A\n 0000016C                                   61818+SMF42GIS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61819+*                                    TO DASD.                    @10A\n 00000170                                   61820+SMF42GIT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61821+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61822+*                                                                @10A\n 00000178                                   61823+SMF42GIU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61824+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61825+*                                                                @10A\n 00000180                                   61826+SMF42GIV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61827+*                                                                @10A\n 00000190                                   61828+SMF42GIW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61829+*                                    REQUESTS IN THIS\n                                            61830+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61831+*                                    IN milli-seconds)           @21A\n                                            61832+*\n 00000198                                   61833+SMF42GIX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61834+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61835+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61836+*                                                                @10A\n 0000019C                                   61837+SMF42GIY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61838+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61839+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61840+*                                    TRANSFERRED/4K)             @10A\n                                            61841+*\n 000001A0                                   61842+SMF42GIZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000001A8                                   61843+SMF42GI7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61844+*\n                         000000A8           61845+SMF42G1C_LEN  EQU *-SMF42G1C                                     @10A   03-IGWSMF\n                                            61846+*\n 000001C8                                   61847+SMF42G1D DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            61848+*                                    SECTION                     @10A\n 000001C8                                   61849+SMF42GJA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61850+*                                    NUMBER                      @10A\n 000001CC                                   61851+SMF42GJB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61852+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  216\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000001D0                                   61853+SMF42GJC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61854+*                                    NRI - NO READ INTEGRITY\n                                            61855+*                                                                @10A\n 000001D4                                   61856+SMF42GJD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61857+*                                    CONSISTENT READS   @10A\n                                            61858+*\n 000001D8                                   61859+SMF42GJE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61860+*                                                                @10A\n 000001DC                                   61861+SMF42GJF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61862+*                                                                @10A\n 000001E0                                   61863+SMF42GJG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61864+*                                                                @10A\n 000001E4                                   61865+SMF42GJH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61866+*                                                                @10A\n                                            61867+*\n 000001E8                                   61868+SMF42GJI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61869+*                                                                @10A\n 000001EC                                   61870+SMF42GJJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61871+*                                                                @10A\n 000001F0                                   61872+SMF42GJK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61873+*                                                                @10A\n 000001F4                                   61874+SMF42GJL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61875+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61876+*\n 000001F8                                   61877+SMF42GJM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61878+*                                                                @10A\n 000001FC                                   61879+SMF42GJN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000200                                   61880+SMF42GJO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000204                                   61881+SMF42GJP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000208                                   61882+SMF42GJQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61883+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61884+*                                                                @10A\n 00000210                                   61885+SMF42GJR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61886+*                                    TO DASD.                    @10A\n 00000214                                   61887+SMF42GJS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61888+*                                    TO DASD.                    @10A\n 00000218                                   61889+SMF42GJT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61890+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61891+*                                                                @10A\n 00000220                                   61892+SMF42GJU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61893+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61894+*                                                                @10A\n 00000228                                   61895+SMF42GJV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61896+*                                                                @10A\n 00000238                                   61897+SMF42GJW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61898+*                                    REQUESTS IN THIS\n                                            61899+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61900+*                                    IN milli-seconds)           @21A\n                                            61901+*\n 00000240                                   61902+SMF42GJX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61903+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61904+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61905+*                                                                @10A\n 00000244                                   61906+SMF42GJY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61907+*                                    OF THE REQUESTS IN THIS INTERVAL\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  217\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61908+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61909+*                                    TRANSFERRED/4K)             @10A\n                                            61910+*\n 00000248                                   61911+SMF42GJZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000250                                   61912+SMF42GJ7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61913+*\n                         000000A8           61914+SMF42G1D_LEN  EQU *-SMF42G1D                                     @10A   03-IGWSMF\n                         00000150           61915+SMF42G1B_LEN  EQU *-SMF42G1B                                     @10A   03-IGWSMF\n                                            61916+*\n 00000270                                   61917+SMF42G1E DS   0CL800                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            61918+*                                                                @10A\n 00000270                                   61919+SMF42G1F DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            61920+*                                                                @10A\n 00000270                                   61921+SMF42GKA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61922+*                                    NUMBER                      @10A\n 00000274                                   61923+SMF42GKB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61924+*                                                                @10A\n 00000278                                   61925+SMF42GKC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61926+*                                    NRI - NO READ INTEGRITY\n                                            61927+*                                                                @10A\n 0000027C                                   61928+SMF42GKD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61929+*                                    CONSISTENT READS   @10A\n                                            61930+*\n 00000280                                   61931+SMF42GKE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61932+*                                                                @10A\n 00000284                                   61933+SMF42GKF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61934+*                                                                @10A\n 00000288                                   61935+SMF42GKG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61936+*                                                                @10A\n 0000028C                                   61937+SMF42GKH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61938+*                                                                @10A\n                                            61939+*\n 00000290                                   61940+SMF42GKI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61941+*                                                                @10A\n 00000294                                   61942+SMF42GKJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61943+*                                                                @10A\n 00000298                                   61944+SMF42GKK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61945+*                                                                @10A\n 0000029C                                   61946+SMF42GKL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61947+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61948+*\n 000002A0                                   61949+SMF42GKM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61950+*                                                                @10A\n 000002A4                                   61951+SMF42GKN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000002A8                                   61952+SMF42GKO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000002AC                                   61953+SMF42GKP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002B0                                   61954+SMF42GKQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61955+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61956+*                                                                @10A\n 000002B8                                   61957+SMF42GKR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61958+*                                    TO DASD.                    @10A\n 000002BC                                   61959+SMF42GKS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61960+*                                    TO DASD.                    @10A\n 000002C0                                   61961+SMF42GKT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61962+*                                    DASD FOR THE READ  REQUESTS @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  218\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           61963+*                                                                @10A\n 000002C8                                   61964+SMF42GKU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61965+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61966+*                                                                @10A\n 000002D0                                   61967+SMF42GKV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61968+*                                                                @10A\n 000002E0                                   61969+SMF42GKW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61970+*                                    REQUESTS IN THIS\n                                            61971+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61972+*                                    IN milli-seconds)           @21A\n                                            61973+*\n 000002E8                                   61974+SMF42GKX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61975+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61976+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61977+*                                                                @10A\n 000002EC                                   61978+SMF42GKY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61979+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61980+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61981+*                                    TRANSFERRED/4K)             @10A\n                                            61982+*\n 000002F0                                   61983+SMF42GKZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000002F8                                   61984+SMF42GK7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61985+*\n                         000000A8           61986+SMF42G1F_LEN  EQU *-SMF42G1F                                     @10A   03-IGWSMF\n                                            61987+*\n 00000318                                   61988+SMF42G1G DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            61989+*                                    SECTION                     @10A\n 00000318                                   61990+SMF42GLA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61991+*                                    NUMBER                      @10A\n 0000031C                                   61992+SMF42GLB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61993+*                                                                @10A\n 00000320                                   61994+SMF42GLC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61995+*                                    NRI - NO READ INTEGRITY\n                                            61996+*                                                                @10A\n 00000324                                   61997+SMF42GLD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61998+*                                    CONSISTENT READS   @10A\n                                            61999+*\n 00000328                                   62000+SMF42GLE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62001+*                                                                @10A\n 0000032C                                   62002+SMF42GLF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62003+*                                                                @10A\n 00000330                                   62004+SMF42GLG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62005+*                                                                @10A\n 00000334                                   62006+SMF42GLH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62007+*                                                                @10A\n                                            62008+*\n 00000338                                   62009+SMF42GLI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62010+*                                                                @10A\n 0000033C                                   62011+SMF42GLJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62012+*                                                                @10A\n 00000340                                   62013+SMF42GLK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62014+*                                                                @10A\n 00000344                                   62015+SMF42GLL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62016+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62017+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  219\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000348                                   62018+SMF42GLM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62019+*                                                                @10A\n 0000034C                                   62020+SMF42GLN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000350                                   62021+SMF42GLO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000354                                   62022+SMF42GLP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000358                                   62023+SMF42GLQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62024+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62025+*                                                                @10A\n 00000360                                   62026+SMF42GLR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62027+*                                    TO DASD.                    @10A\n 00000364                                   62028+SMF42GLS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62029+*                                    TO DASD.                    @10A\n 00000368                                   62030+SMF42GLT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62031+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62032+*                                                                @10A\n 00000370                                   62033+SMF42GLU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62034+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62035+*                                                                @10A\n 00000378                                   62036+SMF42GLV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62037+*                                                                @10A\n 00000388                                   62038+SMF42GLW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62039+*                                    REQUESTS IN THIS\n                                            62040+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62041+*                                    IN milli-seconds)           @21A\n                                            62042+*\n 00000390                                   62043+SMF42GLX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62044+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62045+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62046+*                                                                @10A\n 00000394                                   62047+SMF42GLY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62048+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62049+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62050+*                                    TRANSFERRED/4K)             @10A\n                                            62051+*\n 00000398                                   62052+SMF42GLZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000003A0                                   62053+SMF42GL7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62054+*\n                         000000A8           62055+SMF42G1G_LEN  EQU *-SMF42G1G                                     @10A   03-IGWSMF\n                                            62056+*\n 000003C0                                   62057+SMF42G1H DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            62058+*                                    SECTION                     @10A\n 000003C0                                   62059+SMF42GMA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62060+*                                    NUMBER                      @10A\n 000003C4                                   62061+SMF42GMB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62062+*                                                                @10A\n 000003C8                                   62063+SMF42GMC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62064+*                                    NRI - NO READ INTEGRITY\n                                            62065+*                                                                @10A\n 000003CC                                   62066+SMF42GMD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62067+*                                    CONSISTENT READS   @10A\n                                            62068+*\n 000003D0                                   62069+SMF42GME DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62070+*                                                                @10A\n 000003D4                                   62071+SMF42GMF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62072+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  220\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000003D8                                   62073+SMF42GMG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62074+*                                                                @10A\n 000003DC                                   62075+SMF42GMH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62076+*                                                                @10A\n                                            62077+*\n 000003E0                                   62078+SMF42GMI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62079+*                                                                @10A\n 000003E4                                   62080+SMF42GMJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62081+*                                                                @10A\n 000003E8                                   62082+SMF42GMK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62083+*                                                                @10A\n 000003EC                                   62084+SMF42GML DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62085+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62086+*\n 000003F0                                   62087+SMF42GMM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62088+*                                                                @10A\n 000003F4                                   62089+SMF42GMN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000003F8                                   62090+SMF42GMO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000003FC                                   62091+SMF42GMP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000400                                   62092+SMF42GMQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62093+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62094+*                                                                @10A\n 00000408                                   62095+SMF42GMR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62096+*                                    TO DASD.                    @10A\n 0000040C                                   62097+SMF42GMS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62098+*                                    TO DASD.                    @10A\n 00000410                                   62099+SMF42GMT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62100+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62101+*                                                                @10A\n 00000418                                   62102+SMF42GMU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62103+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62104+*                                                                @10A\n 00000420                                   62105+SMF42GMV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62106+*                                                                @10A\n 00000430                                   62107+SMF42GMW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62108+*                                    REQUESTS IN THIS\n                                            62109+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62110+*                                    IN milli-seconds)           @21A\n                                            62111+*\n 00000438                                   62112+SMF42GMX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62113+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62114+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62115+*                                                                @10A\n 0000043C                                   62116+SMF42GMY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62117+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62118+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62119+*                                    TRANSFERRED/4K)             @10A\n                                            62120+*\n 00000440                                   62121+SMF42GMZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000448                                   62122+SMF42GM7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62123+*\n                         000000A8           62124+SMF42G1H_LEN  EQU *-SMF42G1H                                     @10A   03-IGWSMF\n                                            62125+*\n 00000468                                   62126+SMF42G1I DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            62127+*                                    SECTION                     @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  221\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000468                                   62128+SMF42GNA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62129+*                                    NUMBER                      @10A\n 0000046C                                   62130+SMF42GNB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62131+*                                                                @10A\n 00000470                                   62132+SMF42GNC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62133+*                                    NRI - NO READ INTEGRITY\n                                            62134+*                                                                @10A\n 00000474                                   62135+SMF42GND DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62136+*                                    CONSISTENT READS   @10A\n                                            62137+*\n 00000478                                   62138+SMF42GNE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62139+*                                                                @10A\n 0000047C                                   62140+SMF42GNF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62141+*                                                                @10A\n 00000480                                   62142+SMF42GNG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62143+*                                                                @10A\n 00000484                                   62144+SMF42GNH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62145+*                                                                @10A\n                                            62146+*\n 00000488                                   62147+SMF42GNI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62148+*                                                                @10A\n 0000048C                                   62149+SMF42GNJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62150+*                                                                @10A\n 00000490                                   62151+SMF42GNK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62152+*                                                                @10A\n 00000494                                   62153+SMF42GNL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62154+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62155+*\n 00000498                                   62156+SMF42GNM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62157+*                                                                @10A\n 0000049C                                   62158+SMF42GNN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000004A0                                   62159+SMF42GNO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000004A4                                   62160+SMF42GNP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000004A8                                   62161+SMF42GNQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62162+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62163+*                                                                @10A\n 000004B0                                   62164+SMF42GNR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62165+*                                    TO DASD.                    @10A\n 000004B4                                   62166+SMF42GNS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62167+*                                    TO DASD.                    @10A\n 000004B8                                   62168+SMF42GNT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62169+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62170+*                                                                @10A\n 000004C0                                   62171+SMF42GNU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62172+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62173+*                                                                @10A\n 000004C8                                   62174+SMF42GNV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62175+*                                                                @10A\n 000004D8                                   62176+SMF42GNW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62177+*                                    REQUESTS IN THIS\n                                            62178+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62179+*                                    IN milli-seconds)           @21A\n                                            62180+*\n 000004E0                                   62181+SMF42GNX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62182+*                                    THE REQUESTS IN THIS INTERVAL.\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  222\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62183+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62184+*                                                                @10A\n 000004E4                                   62185+SMF42GNY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62186+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62187+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62188+*                                    TRANSFERRED/4K)             @10A\n                                            62189+*\n 000004E8                                   62190+SMF42GNZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000004F0                                   62191+SMF42GN7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62192+*\n                         000000A8           62193+SMF42G1I_LEN  EQU *-SMF42G1I                                     @10A   03-IGWSMF\n                         000002A0           62194+SMF42G1E_LEN  EQU *-SMF42G1E                                     @10A   03-IGWSMF\n                                            62195+*                                                                @10A\n                                            62196+*                                                                @10A\n 00000510                                   62197+SMF42GX6 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000510                                   62198+SMF42GQA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62199+*                                    REQUESTS                    @10A\n                                            62200+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000514                                   62201+SMF42GQB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62202+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            62203+*                                    CONTENTION                  @10A\n 00000518                                   62204+SMF42GQC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62205+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            62206+*                                    CONTENTION                  @10A\n 0000051C                                   62207+SMF42GQD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62208+*                                    RELEASE REQUESTS            @10A\n 00000520                                   62209+SMF42GQE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            62210+*                                    LOCK REQUESTS               @10A\n 00000524                                   62211+SMF42GQF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            62212+*                                    RELEASE LOCK REQUESTS       @10A\n 00000528                                   62213+SMF42GQG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000530                                   62214+SMF42GQH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62215+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62216+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000534                                   62217+SMF42GQI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62218+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62219+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000538                                   62220+SMF42GQJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62221+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62222+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000053C                                   62223+SMF42GQK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62224+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            62225+*                                    LOCK REQUESTS               @10A\n 00000540                                   62226+SMF42GQL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62227+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62228+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000544                                   62229+SMF42GQM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62230+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62231+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000548                                   62232+SMF42GQN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62233+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62234+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000054C                                   62235+SMF42GQO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62236+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            62237+*                                    LOCK REQUESTS               @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  223\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000550                                   62238+SMF42GQP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62239+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62240+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000554                                   62241+SMF42GQQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62242+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62243+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000558                                   62244+SMF42GQR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62245+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62246+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000055C                                   62247+SMF42GQS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62248+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            62249+*                                    LOCK REQUESTS               @10A\n 00000560                                   62250+SMF42GQT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            62251+*                                    LOCK REQUESTS               @10A\n                                            62252+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000564                                   62253+SMF42GQU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            62254+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000568                                   62255+SMF42GQV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            62256+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000056C                                   62257+SMF42GQW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            62258+*                                    RELEASE LOCK REQUESTS       @10A\n 00000570                                   62259+SMF42GQX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62260+*                                                                @10A\n                         00000080           62261+SMF42GX6_LEN  EQU *-SMF42GX6                                     @10A   03-IGWSMF\n                                            62262+*\n 00000590                                   62263+SMF42FX8 DS   0CL64                  DATASET BMF LRU STATS       @21A   03-IGWSMF\n 00000590                                   62264+SMF42GRL DS   1FL4                   NUMBER OF REDOS             @21A   03-IGWSMF\n 00000594                                   62265+SMF42GRM DS   1FL4                   NUMBER OF RECURSIVE REDOS   @21A   03-IGWSMF\n 00000598                                   62266+SMF42GRN DS   1FL4                   NUMBER OF BMF WRITES        @21A   03-IGWSMF\n 0000059C                                   62267+SMF42GRO DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n 000005A0                                   62268+SMF42GRP DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n                                            62269+*                                    THAT ENCOUNTERED CASTOUT    @21A\n                                            62270+*                                    LOCK CONTENTION             @21A\n 000005A4                                   62271+SMF42GRR DS   1FL4                   REDO PERCENT                @21A   03-IGWSMF\n 000005A8                                   62272+SMF42GRS DS   1FL4                   RECURSIVE REDO PERCENT      @21A   03-IGWSMF\n 000005AC                                   62273+SMF42GRT DS   1FL4                   SCM CASTOUT LOCK PERCENT    @21A   03-IGWSMF\n 000005B0                                   62274+SMF42GRQ DS   CL12                   RESERVED                    @21A   03-IGWSMF\n 000005BC                                   62275+SMF42GRU DS   CL4                    RESERVED                    @21A   03-IGWSMF\n 000005C0                                   62276+SMF42GRV DS   CL16                   RESERVED                    @21A   03-IGWSMF\n                                            62277+*                                                                @21A\n                         00000040           62278+SMF42FX8_LEN  EQU *-SMF42FX8                                     @21A   03-IGWSMF\n 000005D0                                   62279+SMF42GBQ DS   CL16                   LOCK STRUCTURE NAME         @P7A   03-IGWSMF\n                         000005E0           62280+SMF420GB_LEN  EQU *-SMF420GB                                     @10A   03-IGWSMF\n                                            62281+*                                                                @10A\n                                            62282+*\n                                            62283+* ABOVE BAR VARIABLES BELOW                                        @64A\n                                            62284+*                                                                  @64A\n 00000000                00000000 000005D0  62285+SMF2A0GA DSECT ,                                                   @64A 03-IGWSMF\n 00000000                                   62286+SMF2AGA1 DS   0CL1472                SYSPLEX WIDE SUMMARY          @64A 03-IGWSMF\n 00000000                                   62287+SMF2AGAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE  @64A 03-IGWSMF\n                                            62288+*                                    TOTAL TIME OF THE MEASUREMENT @64A\n                                            62289+*                                    PERIOD. (IN SECONDS)          @64A\n 00000004                                   62290+SMF2AA00 DS   CL12                   RESERVED                      @64A 03-IGWSMF\n                                            62291+*                                                                  @64A\n 00000010                                   62292+SMF2AGAB DS   CL44                   DATA SET NAME                 @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  224\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000003C                                   62293+SMF2AA01 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            62294+*                                                                  @64A\n 00000040                                   62295+SMF2AGAC DS   CL44                   VSAM SPHERE NAME              @64A 03-IGWSMF\n 0000006C                                   62296+SMF2AA02 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            62297+*                                                                  @64A\n 00000070                                   62298+SMF2AGAD DS   1FL2                   LENGTH OF THE STORAGE CLASS   @64A 03-IGWSMF\n                                            62299+*                                    NAME                          @64A\n 00000072                                   62300+SMF2AGAE DS   CL30                   STORAGE CLASS NAME            @64A 03-IGWSMF\n                                            62301+*                                                                  @64A\n 00000090                                   62302+SMF2AA03 DS   1FL2                   CACHESETNAME LENGTH           @64A 03-IGWSMF\n 00000092                                   62303+SMF2AGAF DS   CL30                   CACHESET NAME                 @64A 03-IGWSMF\n                                            62304+*                                                                  @64A\n 000000B0                                   62305+SMF2AGAG DS   CL2                    RESERVED                      @64A 03-IGWSMF\n 000000B2                                   62306+SMF2AGAH DS   CL30                   DFP CACHE STRUCTURE NAME      @64A 03-IGWSMF\n                                            62307+*                                                                  @64A\n 000000D0                                   62308+SMF2AGAI DS   1FL4                   INDICATOR OF COMPONENT BEING  @64A 03-IGWSMF\n                                            62309+*                                    PROCESSED                     @64A\n                         80000000           62310+SMF2AGAI0 EQU   X'80000000'          DATA COMPONENT                @64A 03-IGWSMF\n                         40000000           62311+SMF2AGAI1 EQU   X'40000000'          INDEX COMPONENT               @64A 03-IGWSMF\n                                            62312+*                                                                  @64A\n 000000D4                                   62313+SMF2AGAJ DS   CL12                   INDICATES DFSMS GREATER       @64A 03-IGWSMF\n                                            62314+*                                    THAN 4K CF CACHING STATUS     @64A\n                                            62315+*                                    VALUES ARE ALL, NONE,         @64A\n                                            62316+*                                    UPDATESONLY, GT4KNOTACT       @64A\n 000000E0                                   62317+SMF2AGAK DS   1FL4                   NUMBER OF LOCK REQUESTS       @64A 03-IGWSMF\n                                            62318+*                                    PROCESSED                     @64A\n 000000E4                                   62319+SMF2AGAL DS   1FL4                   NUMBER OF TRUE CONTENTION     @64A 03-IGWSMF\n                                            62320+*                                    LOCK REQUESTS                 @64A\n 000000E8                                   62321+SMF2AGAM DS   1FL4                   NUMBER OF FALSE CONTENTION    @64A 03-IGWSMF\n                                            62322+*                                    LOCK REQUESTS                 @64A\n 000000EC                                   62323+SMF2AGZ1 DS   1FL2                   SMSDIRECTWEIGHT               @64A 03-IGWSMF\n 000000EE                                   62324+SMF2AGZ2 DS   1FL2                   SMSSEQUENTIALWEIGHT           @64A 03-IGWSMF\n                                            62325+*                                                                  @64A\n 000000F0                                   62326+SMF2AGAN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME  @64A 03-IGWSMF\n 000000F8                                   62327+SMF2AGAO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME  @64A 03-IGWSMF\n                                            62328+*                                                                  @64A\n 00000100                                   62329+SMF2AGAP DS   CL16                   SMS DATACLASS NAME            @64A 03-IGWSMF\n                                            62330+*                                                                  @64A\n 00000110                                   62331+SMF2AGA2 DS   0CL336                 DIRECT ACCESS SUMMARY SECTION @64A 03-IGWSMF\n                                            62332+*                                                                  @64A\n 00000110                                   62333+SMF2AGA3 DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY  @64A 03-IGWSMF\n                                            62334+*                                    SECTION                       @64A\n 00000110                                   62335+SMF2AGCA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            62336+*                                    PARTITION NUMBER              @64A\n 00000114                                   62337+SMF2AGCB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62338+*                                                                  @64A\n 00000118                                   62339+SMF2AGCC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62340+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62341+*                                                                  @64A\n 0000011C                                   62342+SMF2AGCD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62343+*                                    CONSISTENT READS              @64A\n                                            62344+*                                                                  @64A\n 00000120                                   62345+SMF2AGCE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62346+*                                                                  @64A\n 00000124                                   62347+SMF2AGCF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  225\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62348+*                                                                  @64A\n 00000128                                   62349+SMF2AGCG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62350+*                                                                  @64A\n 0000012C                                   62351+SMF2AGCH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62352+*                                                                  @64A\n                                            62353+*                                                                  @64A\n 00000130                                   62354+SMF2AGCI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62355+*                                                                  @64A\n 00000134                                   62356+SMF2AGCJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62357+*                                                                  @64A\n 00000138                                   62358+SMF2AGCK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62359+*                                                                  @64A\n 0000013C                                   62360+SMF2AGCL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            62361+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            62362+*                                                                  @64A\n 00000140                                   62363+SMF2AGCM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62364+*                                                                  @64A\n 00000144                                   62365+SMF2AGCN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000148                                   62366+SMF2AGCO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 0000014C                                   62367+SMF2AGCP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000150                                   62368+SMF2AGCQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            62369+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            62370+*                                                                  @64A\n 00000158                                   62371+SMF2AGCR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            62372+*                                    REQUESTS TO DASD.             @64A\n 0000015C                                   62373+SMF2AGCS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            62374+*                                    REQUESTS TO DASD.             @64A\n 00000160                                   62375+SMF2AGCT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62376+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            62377+*                                                                  @64A\n 00000168                                   62378+SMF2AGCU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62379+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62380+*                                                                  @64A\n 00000170                                   62381+SMF2AGCV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62382+*                                                                  @64A\n 00000180                                   62383+SMF2AGCW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            62384+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62385+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            62386+*                                    IN milli-seconds)             @64A\n                                            62387+*                                                                  @64A\n 00000188                                   62388+SMF2AGCX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            62389+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62390+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            62391+*                                                                  @64A\n 0000018C                                   62392+SMF2AGCY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            62393+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            62394+*                                    INTERVAL.                     @64A\n                                            62395+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            62396+*                                    TRANSFERRED/4K)               @64A\n 00000190                                   62397+SMF2AGCZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000198                                   62398+SMF2AGC7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62399+*                                                                  @64A\n                         000000A8           62400+SMF2AGA3_LEN  EQU *-SMF2AGA3                                       @64A 03-IGWSMF\n                                            62401+*                                                                  @64A\n 000001B8                                   62402+SMF2AGA4 DS   0CL168                 RE-DO DURING DIRECT ACCESS    @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  226\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62403+*                                    SECTION                       @64A\n 000001B8                                   62404+SMF2AGDA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            62405+*                                    PARTITION NUMBER              @64A\n 000001BC                                   62406+SMF2AGDB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62407+*                                                                  @64A\n 000001C0                                   62408+SMF2AGDC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62409+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62410+*                                                                  @64A\n 000001C4                                   62411+SMF2AGDD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62412+*                                    CONSISTENT READS   @10A       @64A\n                                            62413+*                                                                  @64A\n 000001C8                                   62414+SMF2AGDE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62415+*                                                                  @64A\n 000001CC                                   62416+SMF2AGDF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62417+*                                                                  @64A\n 000001D0                                   62418+SMF2AGDG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62419+*                                                                  @64A\n 000001D4                                   62420+SMF2AGDH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62421+*                                                                  @64A\n                                            62422+*                                                                  @64A\n 000001D8                                   62423+SMF2AGDI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62424+*                                                                  @64A\n 000001DC                                   62425+SMF2AGDJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62426+*                                                                  @64A\n 000001E0                                   62427+SMF2AGDK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62428+*                                                                  @64A\n 000001E4                                   62429+SMF2AGDL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            62430+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            62431+*                                                                  @64A\n 000001E8                                   62432+SMF2AGDM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62433+*                                                                  @64A\n 000001EC                                   62434+SMF2AGDN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000001F0                                   62435+SMF2AGDO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000001F4                                   62436+SMF2AGDP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000001F8                                   62437+SMF2AGDQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            62438+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            62439+*                                                                  @64A\n 00000200                                   62440+SMF2AGDR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            62441+*                                    REQUESTS TO DASD.             @64A\n 00000204                                   62442+SMF2AGDS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            62443+*                                    REQUESTS TO DASD.             @64A\n 00000208                                   62444+SMF2AGDT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62445+*                                    DASD FOR THE READ REQUESTS    @64A\n                                            62446+*                                                                  @64A\n 00000210                                   62447+SMF2AGDU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62448+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62449+*                                                                  @64A\n 00000218                                   62450+SMF2AGDV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62451+*                                                                  @64A\n 00000228                                   62452+SMF2AGDW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            62453+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            62454+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            62455+*                                    IN milli-seconds)             @64A\n                                            62456+*                                                                  @64A\n 00000230                                   62457+SMF2AGDX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  227\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62458+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62459+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            62460+*                                                                  @64A\n 00000234                                   62461+SMF2AGDY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            62462+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            62463+*                                    INTERVAL                      @64A\n                                            62464+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            62465+*                                    TRANSFERRED/4K)               @64A\n 00000238                                   62466+SMF2AGDZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000240                                   62467+SMF2AGD7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62468+*                                                                  @64A\n                         000000A8           62469+SMF2AGA4_LEN  EQU *-SMF2AGA4                                       @64A 03-IGWSMF\n                         00000150           62470+SMF2AGA2_LEN  EQU *-SMF2AGA2                                       @64A 03-IGWSMF\n                                            62471+*                                                                  @64A\n 00000260                                   62472+SMF2AGA5 DS   0CL800                 SEQUENTIAL ACCESS SUMMARY     @64A 03-IGWSMF\n                                            62473+*                                    SECTION                       @64A\n                                            62474+*                                                                  @64A\n 00000260                                   62475+SMF2AGA6 DS   0CL168                 NORMAL SEQUENTIAL ACCESS      @64A 03-IGWSMF\n                                            62476+*                                    SECTION                       @64A\n                                            62477+*                                                                  @64A\n 00000260                                   62478+SMF2AGEA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            62479+*                                    PARTITION NUMBER              @64A\n 00000264                                   62480+SMF2AGEB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62481+*                                                                  @64A\n 00000268                                   62482+SMF2AGEC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62483+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62484+*                                                                  @64A\n 0000026C                                   62485+SMF2AGED DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62486+*                                    CONSISTENT READS              @64A\n                                            62487+*                                                                  @64A\n 00000270                                   62488+SMF2AGEE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62489+*                                                                  @64A\n 00000274                                   62490+SMF2AGEF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62491+*                                                                  @64A\n 00000278                                   62492+SMF2AGEG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62493+*                                                                  @64A\n 0000027C                                   62494+SMF2AGEH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62495+*                                                                  @64A\n 00000280                                   62496+SMF2AGEI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62497+*                                                                  @64A\n 00000284                                   62498+SMF2AGEJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62499+*                                                                  @64A\n 00000288                                   62500+SMF2AGEK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62501+*                                                                  @64A\n 0000028C                                   62502+SMF2AGEL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            62503+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            62504+*                                                                  @64A\n 00000290                                   62505+SMF2AGEM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62506+*                                                                  @64A\n 00000294                                   62507+SMF2AGEN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000298                                   62508+SMF2AGEO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 0000029C                                   62509+SMF2AGEP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000002A0                                   62510+SMF2AGEQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            62511+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            62512+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  228\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000002A8                                   62513+SMF2AGER DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            62514+*                                    REQUESTS TO DASD.             @64A\n 000002AC                                   62515+SMF2AGES DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            62516+*                                    REQUESTS TO DASD.             @64A\n 000002B0                                   62517+SMF2AGET DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62518+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            62519+*                                                                  @64A\n 000002B8                                   62520+SMF2AGEU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62521+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62522+*                                                                  @64A\n 000002C0                                   62523+SMF2AGEV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62524+*                                                                  @64A\n 000002D0                                   62525+SMF2AGEW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            62526+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            62527+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            62528+*                                    IN milli-seconds)             @64A\n                                            62529+*                                                                  @64A\n 000002D8                                   62530+SMF2AGEX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            62531+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62532+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            62533+*                                                                  @64A\n 000002DC                                   62534+SMF2AGEY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            62535+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            62536+*                                    INTERVAL                      @64A\n                                            62537+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            62538+*                                    TRANSFERRED/4K)               @64A\n                                            62539+*                                                                  @64A\n 000002E0                                   62540+SMF2AGEZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000002E8                                   62541+SMF2AGE7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62542+*                                                                  @64A\n                         000000A8           62543+SMF2AGA6_LEN  EQU *-SMF2AGA6                                       @64A 03-IGWSMF\n                                            62544+*                                                                  @64A\n 00000308                                   62545+SMF2AGA7 DS   0CL168                 RE-DO DURING SEQUENTIAL       @64A 03-IGWSMF\n                                            62546+*                                    ACCESS SECTION                @64A\n 00000308                                   62547+SMF2AGFA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            62548+*                                    PARTITION NUMBER              @64A\n 0000030C                                   62549+SMF2AGFB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62550+*                                                                  @64A\n 00000310                                   62551+SMF2AGFC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62552+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62553+*                                                                  @64A\n 00000314                                   62554+SMF2AGFD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62555+*                                    CONSISTENT READS              @64A\n                                            62556+*                                                                  @64A\n 00000318                                   62557+SMF2AGFE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62558+*                                                                  @64A\n 0000031C                                   62559+SMF2AGFF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62560+*                                                                  @64A\n 00000320                                   62561+SMF2AGFG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62562+*                                                                  @64A\n 00000324                                   62563+SMF2AGFH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62564+*                                                                  @64A\n                                            62565+*                                                                  @64A\n 00000328                                   62566+SMF2AGFI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62567+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  229\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000032C                                   62568+SMF2AGFJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62569+*                                                                  @64A\n 00000330                                   62570+SMF2AGFK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62571+*                                                                  @64A\n 00000334                                   62572+SMF2AGFL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            62573+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            62574+*                                                                  @64A\n 00000338                                   62575+SMF2AGFM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62576+*                                                                  @64A\n 0000033C                                   62577+SMF2AGFN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000340                                   62578+SMF2AGFO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000344                                   62579+SMF2AGFP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000348                                   62580+SMF2AGFQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            62581+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            62582+*                                                                  @64A\n 00000350                                   62583+SMF2AGFR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            62584+*                                    REQUESTS TO DASD.             @64A\n 00000354                                   62585+SMF2AGFS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            62586+*                                    REQUESTS TO DASD.             @64A\n 00000358                                   62587+SMF2AGFT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62588+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            62589+*                                                                  @64A\n 00000360                                   62590+SMF2AGFU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62591+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62592+*                                                                  @64A\n 00000368                                   62593+SMF2AGFV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62594+*                                                                  @64A\n 00000378                                   62595+SMF2AGFW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            62596+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            62597+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            62598+*                                    IN milli-seconds)             @64A\n                                            62599+*                                                                  @64A\n 00000380                                   62600+SMF2AGFX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            62601+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62602+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            62603+*                                                                  @64A\n 00000384                                   62604+SMF2AGFY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            62605+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            62606+*                                    INTERVAL                      @64A\n                                            62607+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            62608+*                                    TRANSFERRED/4K)               @64A\n                                            62609+*                                                                  @64A\n 00000388                                   62610+SMF2AGFZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000390                                   62611+SMF2AGF7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62612+*                                                                  @64A\n                         000000A8           62613+SMF2AGA7_LEN  EQU *-SMF2AGA7                                       @64A 03-IGWSMF\n                                            62614+*                                                                  @64A\n 000003B0                                   62615+SMF2AGA8 DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS @64A 03-IGWSMF\n                                            62616+*                                    SECTION                       @64A\n 000003B0                                   62617+SMF2AGGA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            62618+*                                    PARTITION NUMBER              @64A\n 000003B4                                   62619+SMF2AGGB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62620+*                                                                  @64A\n 000003B8                                   62621+SMF2AGGC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62622+*                                    NRI - NO READ INTEGRITY       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  230\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62623+*                                                                  @64A\n 000003BC                                   62624+SMF2AGGD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62625+*                                    CONSISTENT READS   @10A       @64A\n                                            62626+*                                                                  @64A\n 000003C0                                   62627+SMF2AGGE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62628+*                                                                  @64A\n 000003C4                                   62629+SMF2AGGF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62630+*                                                                  @64A\n 000003C8                                   62631+SMF2AGGG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62632+*                                                                  @64A\n 000003CC                                   62633+SMF2AGGH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62634+*                                                                  @64A\n                                            62635+*                                                                  @64A\n 000003D0                                   62636+SMF2AGGI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62637+*                                                                  @64A\n 000003D4                                   62638+SMF2AGGJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62639+*                                                                  @64A\n 000003D8                                   62640+SMF2AGGK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62641+*                                                                  @64A\n 000003DC                                   62642+SMF2AGGL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            62643+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            62644+*                                                                  @64A\n 000003E0                                   62645+SMF2AGGM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62646+*                                                                  @64A\n 000003E4                                   62647+SMF2AGGN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000003E8                                   62648+SMF2AGGO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000003EC                                   62649+SMF2AGGP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000003F0                                   62650+SMF2AGGQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            62651+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            62652+*                                                                  @64A\n 000003F8                                   62653+SMF2AGGR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            62654+*                                    REQUESTS TO DASD.             @64A\n 000003FC                                   62655+SMF2AGGS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            62656+*                                    REQUESTS TO DASD.             @64A\n 00000400                                   62657+SMF2AGGT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62658+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            62659+*                                                                  @64A\n 00000408                                   62660+SMF2AGGU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62661+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62662+*                                                                  @64A\n 00000410                                   62663+SMF2AGGV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62664+*                                                                  @64A\n 00000420                                   62665+SMF2AGGW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            62666+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            62667+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            62668+*                                    IN milli-seconds)             @64A\n                                            62669+*                                                                  @64A\n 00000428                                   62670+SMF2AGGX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            62671+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62672+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            62673+*                                                                  @64A\n 0000042C                                   62674+SMF2AGGY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            62675+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            62676+*                                    INTERVAL                      @64A\n                                            62677+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  231\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62678+*                                    TRANSFERRED/4K)               @64A\n                                            62679+*                                                                  @64A\n 00000430                                   62680+SMF2AGGZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000438                                   62681+SMF2AGG7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62682+*                                                                  @64A\n                         000000A8           62683+SMF2AGA8_LEN  EQU *-SMF2AGA8                                       @64A 03-IGWSMF\n                                            62684+*                                                                  @64A\n 00000458                                   62685+SMF2AGA9 DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS  @64A 03-IGWSMF\n                                            62686+*                                    SECTION                       @64A\n 00000458                                   62687+SMF2AGHA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            62688+*                                    PARTITION NUMBER              @64A\n 0000045C                                   62689+SMF2AGHB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62690+*                                                                  @64A\n 00000460                                   62691+SMF2AGHC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62692+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62693+*                                                                  @64A\n 00000464                                   62694+SMF2AGHD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62695+*                                    CONSISTENT READS              @64A\n                                            62696+*                                                                  @64A\n 00000468                                   62697+SMF2AGHE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62698+*                                                                  @64A\n 0000046C                                   62699+SMF2AGHF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62700+*                                                                  @64A\n 00000470                                   62701+SMF2AGHG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62702+*                                                                  @64A\n 00000474                                   62703+SMF2AGHH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62704+*                                                                  @64A\n                                            62705+*                                                                  @64A\n 00000478                                   62706+SMF2AGHI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62707+*                                                                  @64A\n 0000047C                                   62708+SMF2AGHJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62709+*                                                                  @64A\n 00000480                                   62710+SMF2AGHK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62711+*                                                                  @64A\n 00000484                                   62712+SMF2AGHL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            62713+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            62714+*                                                                  @64A\n 00000488                                   62715+SMF2AGHM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62716+*                                                                  @64A\n 0000048C                                   62717+SMF2AGHN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000490                                   62718+SMF2AGHO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000494                                   62719+SMF2AGHP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000498                                   62720+SMF2AGHQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            62721+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            62722+*                                                                  @64A\n 000004A0                                   62723+SMF2AGHR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            62724+*                                    REQUESTS TO DASD.             @64A\n 000004A4                                   62725+SMF2AGHS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            62726+*                                    REQUESTS TO DASD.             @64A\n 000004A8                                   62727+SMF2AGHT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62728+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            62729+*                                                                  @64A\n 000004B0                                   62730+SMF2AGHU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62731+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62732+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  232\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000004B8                                   62733+SMF2AGHV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62734+*                                                                  @64A\n 000004C8                                   62735+SMF2AGHW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            62736+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            62737+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            62738+*                                    IN milli-seconds)             @64A\n                                            62739+*                                                                  @64A\n 000004D0                                   62740+SMF2AGHX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            62741+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62742+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            62743+*                                                                  @64A\n 000004D4                                   62744+SMF2AGHY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            62745+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            62746+*                                    INTERVAL                      @64A\n                                            62747+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            62748+*                                    TRANSFERRED/4K)               @64A\n                                            62749+*                                                                  @64A\n 000004D8                                   62750+SMF2AGHZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000004E0                                   62751+SMF2AGH7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62752+*                                                                  @64A\n                         000000A8           62753+SMF2AGA9_LEN  EQU *-SMF2AGA9                                       @64A 03-IGWSMF\n                         000002A0           62754+SMF2AGA5_LEN  EQU *-SMF2AGA5                                       @64A 03-IGWSMF\n                                            62755+*                                                                  @64A\n 00000500                                   62756+SMF2AFX5 DS   0CL128                 LOCKING STATISTICS SUMMARY    @64A 03-IGWSMF\n 00000500                                   62757+SMF2AGPA DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            62758+*                                    REQUESTS                      @64A\n                                            62759+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000504                                   62760+SMF2AGPB DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            62761+*                                    REQUESTS THAT CAUSE TRUE      @64A\n                                            62762+*                                    CONTENTION                    @64A\n 00000508                                   62763+SMF2AGPC DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            62764+*                                    REQUESTS THAT CAUSE FALSE     @64A\n                                            62765+*                                    CONTENTION                    @64A\n 0000050C                                   62766+SMF2AGPD DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            62767+*                                    RELEASE REQUESTS              @64A\n 00000510                                   62768+SMF2AGPE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            62769+*                                    LOCK REQUESTS                 @64A\n 00000514                                   62770+SMF2AGPF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            62771+*                                    RELEASE LOCK REQUESTS         @64A\n 00000518                                   62772+SMF2AGPG DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000520                                   62773+SMF2AGPH DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62774+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            62775+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000524                                   62776+SMF2AGPI DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62777+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            62778+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000528                                   62779+SMF2AGPJ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62780+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            62781+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000052C                                   62782+SMF2AGPK DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62783+*                                    CLASS_1 (DIWA) RELEASE        @64A\n                                            62784+*                                    LOCK REQUESTS                 @64A\n 00000530                                   62785+SMF2AGPL DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62786+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            62787+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  233\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000534                                   62788+SMF2AGPM DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62789+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            62790+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000538                                   62791+SMF2AGPN DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62792+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            62793+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000053C                                   62794+SMF2AGPO DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62795+*                                    CLASS_2 (UPGRADE) RELEASE     @64A\n                                            62796+*                                    LOCK REQUESTS                 @64A\n 00000540                                   62797+SMF2AGPP DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62798+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            62799+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000544                                   62800+SMF2AGPQ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62801+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            62802+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000548                                   62803+SMF2AGPR DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62804+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            62805+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000054C                                   62806+SMF2AGPS DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            62807+*                                    CLASS_3 (PREFORMAT) RELEASE   @64A\n                                            62808+*                                    LOCK REQUESTS                 @64A\n 00000550                                   62809+SMF2AGPT DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            62810+*                                    LOCK REQUESTS                 @64A\n                                            62811+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000554                                   62812+SMF2AGPU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            62813+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000558                                   62814+SMF2AGPV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            62815+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000055C                                   62816+SMF2AGPW DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            62817+*                                    RELEASE LOCK REQUESTS         @64A\n 00000560                                   62818+SMF2AGPX DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62819+*                                                                  @64A\n                         00000080           62820+SMF2AFX5_LEN  EQU *-SMF2AFX5                                       @64A 03-IGWSMF\n                                            62821+*                                                                  @64A\n 00000580                                   62822+SMF2AFX7 DS   0CL64                  DATASET BMF LRU STATS         @64A 03-IGWSMF\n 00000580                                   62823+SMF2AGRA DS   1FL4                   NUMBER OF REDOS               @64A 03-IGWSMF\n 00000584                                   62824+SMF2AGRB DS   1FL4                   NUMBER OF RECURSIVE REDOS     @64A 03-IGWSMF\n 00000588                                   62825+SMF2AGRC DS   1FL4                   NUMBER OF BMF WRITES          @64A 03-IGWSMF\n 0000058C                                   62826+SMF2AGRD DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n 00000590                                   62827+SMF2AGRE DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n                                            62828+*                                    THAT ENCOUNTERED CASTOUT      @64A\n                                            62829+*                                    LOCK CONTENTION               @64A\n 00000594                                   62830+SMF2AGRG DS   1FL4                   REDO PERCENT                  @64A 03-IGWSMF\n 00000598                                   62831+SMF2AGRH DS   1FL4                   RECURSIVE REDO PERCENT        @64A 03-IGWSMF\n 0000059C                                   62832+SMF2AGRI DS   1FL4                   SCM CASTOUT LOCK PERCENT      @64A 03-IGWSMF\n 000005A0                                   62833+SMF2AGRF DS   CL8                    RESERVED                      @28C 03-IGWSMF\n 000005A8                                   62834+SMF2AGRW DS   1FL4                   LCDLATCH CONTENTION COUNT     @28A 03-IGWSMF\n 000005AC                                   62835+SMF2AGRJ DS   CL4                    RESERVED                      @64A 03-IGWSMF\n 000005B0                                   62836+SMF2AGRK DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62837+*                                                                  @64A\n                         00000040           62838+SMF2AFX7_LEN  EQU *-SMF2AFX7                                       @64A 03-IGWSMF\n 000005C0                                   62839+SMF2AGAQ DS   CL16                   LOCK STRUCTURE NAME           @L3A 03-IGWSMF\n                         000005D0           62840+SMF2A0GA_LEN  EQU *-SMF2A0GA                                       @64A 03-IGWSMF\n                                            62841+*                                                                  @64A\n 00000000                00000000 000005E0  62842+SMF2A0GB DSECT ,                                                   @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  234\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000000                                   62843+SMF2AG1A DS   0CL1488                DATA SET/MVS SYSTEM SUMMARY   @64A 03-IGWSMF\n                                            62844+*                                    SECTION                       @64A\n 00000000                                   62845+SMF2AGBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE  @64A 03-IGWSMF\n                                            62846+*                                    TOTAL TIME OF THE MEASUREMENT @64A\n                                            62847+*                                    PERIOD. (IN SECONDS)          @64A\n 00000004                                   62848+SMF2AA05 DS   CL12                   RESERVED                      @64A 03-IGWSMF\n                                            62849+*                                                                  @64A\n 00000010                                   62850+SMF2AGBB DS   CL44                   DATA SET NAME                 @64A 03-IGWSMF\n 0000003C                                   62851+SMF2AA06 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            62852+*                                                                  @64A\n 00000040                                   62853+SMF2AGBC DS   CL44                   VSAM SPHERE NAME              @64A 03-IGWSMF\n 0000006C                                   62854+SMF2AA07 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            62855+*                                                                  @64A\n 00000070                                   62856+SMF2AGBD DS   1FL2                   LENGTH OF THE STORAGE CLASS   @64A 03-IGWSMF\n                                            62857+*                                    NAME                          @64A\n 00000072                                   62858+SMF2AGBE DS   CL30                   STORAGE CLASS NAME            @64A 03-IGWSMF\n                                            62859+*                                                                  @64A\n 00000090                                   62860+SMF2AA08 DS   1FL2                   CACHESETNAME LENGTH           @64A 03-IGWSMF\n 00000092                                   62861+SMF2AGBF DS   CL30                   CACHESET NAME                 @64A 03-IGWSMF\n                                            62862+*                                                                  @64A\n 000000B0                                   62863+SMF2AA12 DS   1FL2                   RESERVED                      @64A 03-IGWSMF\n 000000B2                                   62864+SMF2AGBG DS   CL30                   DFP CACHE STRUCTURE NAME      @64A 03-IGWSMF\n                                            62865+*                                                                  @64A\n 000000D0                                   62866+SMF2AGBH DS   CL8                    MVS SYSTEM NAME               @64A 03-IGWSMF\n 000000D8                                   62867+SMF2AA11 DS   CL8                    RESERVED                      @64A 03-IGWSMF\n                                            62868+*                                                                  @64A\n 000000E0                                   62869+SMF2AGBI DS   1FL4                   INDICATOR OF COMPONENT BEING  @64A 03-IGWSMF\n                                            62870+*                                    PROCESSED                     @64A\n                         80000000           62871+SMF2AGBI0 EQU   X'80000000'          DATA COMPONENT                @64A 03-IGWSMF\n                         40000000           62872+SMF2AGBI1 EQU   X'40000000'          INDEX COMPONENT               @64A 03-IGWSMF\n 000000E4                                   62873+SMF2AA09 DS   CL12                   INDICATES DFSMS GREATER       @64A 03-IGWSMF\n                                            62874+*                                    THAN 4K CF CACHING STATUS     @64A\n                                            62875+*                                    VALUES ARE ALL, NONE,         @64A\n                                            62876+*                                    UPDATESONLY, GT4KNOTACT       @64A\n 000000F0                                   62877+SMF2AGBK DS   1FL4                   NUMBER OF LOCK REQUESTS       @64A 03-IGWSMF\n                                            62878+*                                    PROCESSED                     @64A\n 000000F4                                   62879+SMF2AGBL DS   1FL4                   NUMBER OF TRUE CONTENTION     @64A 03-IGWSMF\n                                            62880+*                                    LOCK REQUESTS                 @64A\n 000000F8                                   62881+SMF2AGBM DS   1FL4                   NUMBER OF FALSE CONTENTION    @64A 03-IGWSMF\n                                            62882+*                                    LOCK REQUESTS                 @64A\n 000000FC                                   62883+SMF2AGZ8 DS   1FL2                   SMSDIRECTWEIGHT               @64A 03-IGWSMF\n 000000FE                                   62884+SMF2AGZ9 DS   1FL2                   SMSSEQUENTIALWEIGHT           @64A 03-IGWSMF\n                                            62885+*                                                                  @64A\n 00000100                                   62886+SMF2AGBN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME  @64A 03-IGWSMF\n 00000108                                   62887+SMF2AGBO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME  @64A 03-IGWSMF\n                                            62888+*                                                                  @64A\n 00000110                                   62889+SMF2AGBP DS   CL16                   SMS DATACLASS NAME            @64A 03-IGWSMF\n                                            62890+*                                                                  @64A\n 00000120                                   62891+SMF2AG1B DS   0CL336                 DIRECT ACCESS SUMMARY SECTION @64A 03-IGWSMF\n                                            62892+*                                                                  @64A\n 00000120                                   62893+SMF2AG1C DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY  @64A 03-IGWSMF\n                                            62894+*                                    SECTION                       @64A\n 00000120                                   62895+SMF2AGIA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62896+*                                    NUMBER                        @64A\n 00000124                                   62897+SMF2AGIB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  235\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62898+*                                                                  @64A\n 00000128                                   62899+SMF2AGIC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62900+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62901+*                                                                  @64A\n 0000012C                                   62902+SMF2AGID DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62903+*                                    CONSISTENT READS              @64A\n                                            62904+*                                                                  @64A\n 00000130                                   62905+SMF2AGIE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62906+*                                                                  @64A\n 00000134                                   62907+SMF2AGIF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62908+*                                                                  @64A\n 00000138                                   62909+SMF2AGIG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62910+*                                                                  @64A\n 0000013C                                   62911+SMF2AGIH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62912+*                                                                  @64A\n                                            62913+*                                                                  @64A\n 00000140                                   62914+SMF2AGII DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62915+*                                                                  @64A\n 00000144                                   62916+SMF2AGIJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62917+*                                                                  @64A\n 00000148                                   62918+SMF2AGIK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62919+*                                                                  @64A\n 0000014C                                   62920+SMF2AGIL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62921+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            62922+*                                                                  @64A\n 00000150                                   62923+SMF2AGIM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62924+*                                                                  @64A\n 00000154                                   62925+SMF2AGIN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000158                                   62926+SMF2AGIO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 0000015C                                   62927+SMF2AGIP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000160                                   62928+SMF2AGIQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62929+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            62930+*                                                                  @64A\n 00000168                                   62931+SMF2AGIR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62932+*                                    TO DASD.                      @64A\n 0000016C                                   62933+SMF2AGIS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62934+*                                    TO DASD.                      @64A\n 00000170                                   62935+SMF2AGIT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62936+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            62937+*                                                                  @64A\n 00000178                                   62938+SMF2AGIU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            62939+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            62940+*                                                                  @64A\n 00000180                                   62941+SMF2AGIV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            62942+*                                                                  @64A\n 00000190                                   62943+SMF2AGIW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62944+*                                    REQUESTS IN THIS              @64A\n                                            62945+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62946+*                                    IN milli-seconds)             @64A\n                                            62947+*                                                                  @64A\n 00000198                                   62948+SMF2AGIX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62949+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            62950+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62951+*                                                                  @64A\n 0000019C                                   62952+SMF2AGIY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  236\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           62953+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62954+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            62955+*                                    TRANSFERRED/4K)               @64A\n                                            62956+*                                                                  @64A\n 000001A0                                   62957+SMF2AGIZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000001A8                                   62958+SMF2AGI7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            62959+*                                                                  @64A\n                         000000A8           62960+SMF2AG1C_LEN  EQU *-SMF2AG1C                                       @64A 03-IGWSMF\n                                            62961+*                                                                  @64A\n 000001C8                                   62962+SMF2AG1D DS   0CL168                 RE-DO DURING DIRECT ACCESS    @64A 03-IGWSMF\n                                            62963+*                                    SECTION                       @64A\n 000001C8                                   62964+SMF2AGJA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62965+*                                    NUMBER                        @64A\n 000001CC                                   62966+SMF2AGJB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            62967+*                                                                  @64A\n 000001D0                                   62968+SMF2AGJC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62969+*                                    NRI - NO READ INTEGRITY       @64A\n                                            62970+*                                                                  @64A\n 000001D4                                   62971+SMF2AGJD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            62972+*                                    CONSISTENT READS              @64A\n                                            62973+*                                                                  @64A\n 000001D8                                   62974+SMF2AGJE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            62975+*                                                                  @64A\n 000001DC                                   62976+SMF2AGJF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            62977+*                                                                  @64A\n 000001E0                                   62978+SMF2AGJG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            62979+*                                                                  @64A\n 000001E4                                   62980+SMF2AGJH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            62981+*                                                                  @64A\n                                            62982+*                                                                  @64A\n 000001E8                                   62983+SMF2AGJI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            62984+*                                                                  @64A\n 000001EC                                   62985+SMF2AGJJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            62986+*                                                                  @64A\n 000001F0                                   62987+SMF2AGJK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            62988+*                                                                  @64A\n 000001F4                                   62989+SMF2AGJL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62990+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            62991+*                                                                  @64A\n 000001F8                                   62992+SMF2AGJM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            62993+*                                                                  @64A\n 000001FC                                   62994+SMF2AGJN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000200                                   62995+SMF2AGJO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000204                                   62996+SMF2AGJP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000208                                   62997+SMF2AGJQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62998+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            62999+*                                                                  @64A\n 00000210                                   63000+SMF2AGJR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63001+*                                    TO DASD.                      @64A\n 00000214                                   63002+SMF2AGJS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63003+*                                    TO DASD.                      @64A\n 00000218                                   63004+SMF2AGJT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63005+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63006+*                                                                  @64A\n 00000220                                   63007+SMF2AGJU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  237\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63008+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63009+*                                                                  @64A\n 00000228                                   63010+SMF2AGJV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63011+*                                                                  @64A\n 00000238                                   63012+SMF2AGJW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63013+*                                    REQUESTS IN THIS              @64A\n                                            63014+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63015+*                                    IN milli-seconds)             @64A\n                                            63016+*                                                                  @64A\n 00000240                                   63017+SMF2AGJX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63018+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63019+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63020+*                                                                  @64A\n 00000244                                   63021+SMF2AGJY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63022+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63023+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63024+*                                    TRANSFERRED/4K)               @64A\n                                            63025+*                                                                  @64A\n 00000248                                   63026+SMF2AGJZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000250                                   63027+SMF2AGJ7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63028+*                                                                  @64A\n                         000000A8           63029+SMF2AG1D_LEN  EQU *-SMF2AG1D                                       @64A 03-IGWSMF\n                         00000150           63030+SMF2AG1B_LEN  EQU *-SMF2AG1B                                       @64A 03-IGWSMF\n                                            63031+*                                                                  @64A\n 00000270                                   63032+SMF2AG1E DS   0CL800                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            63033+*                                                                  @64A\n 00000270                                   63034+SMF2AG1F DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            63035+*                                                                  @64A\n 00000270                                   63036+SMF2AGKA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63037+*                                    NUMBER                        @64A\n 00000274                                   63038+SMF2AGKB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63039+*                                                                  @64A\n 00000278                                   63040+SMF2AGKC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63041+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63042+*                                                                  @64A\n 0000027C                                   63043+SMF2AGKD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63044+*                                    CONSISTENT READS              @64A\n                                            63045+*                                                                  @64A\n 00000280                                   63046+SMF2AGKE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63047+*                                                                  @64A\n 00000284                                   63048+SMF2AGKF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63049+*                                                                  @64A\n 00000288                                   63050+SMF2AGKG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63051+*                                                                  @64A\n 0000028C                                   63052+SMF2AGKH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63053+*                                                                  @64A\n                                            63054+*                                                                  @64A\n 00000290                                   63055+SMF2AGKI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63056+*                                                                  @64A\n 00000294                                   63057+SMF2AGKJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63058+*                                                                  @64A\n 00000298                                   63059+SMF2AGKK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63060+*                                                                  @64A\n 0000029C                                   63061+SMF2AGKL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63062+*                                    THE SYSPLEX CACHE MANAGER     @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  238\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63063+*                                                                  @64A\n 000002A0                                   63064+SMF2AGKM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63065+*                                                                  @64A\n 000002A4                                   63066+SMF2AGKN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000002A8                                   63067+SMF2AGKO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000002AC                                   63068+SMF2AGKP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000002B0                                   63069+SMF2AGKQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63070+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63071+*                                                                  @64A\n 000002B8                                   63072+SMF2AGKR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63073+*                                    TO DASD.                      @64A\n 000002BC                                   63074+SMF2AGKS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63075+*                                    TO DASD.                      @64A\n 000002C0                                   63076+SMF2AGKT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63077+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63078+*                                                                  @64A\n 000002C8                                   63079+SMF2AGKU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63080+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63081+*                                                                  @64A\n 000002D0                                   63082+SMF2AGKV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63083+*                                                                  @64A\n 000002E0                                   63084+SMF2AGKW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63085+*                                    REQUESTS IN THIS              @64A\n                                            63086+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63087+*                                    IN milli-seconds)             @64A\n                                            63088+*                                                                  @64A\n 000002E8                                   63089+SMF2AGKX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63090+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63091+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63092+*                                                                  @64A\n 000002EC                                   63093+SMF2AGKY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63094+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63095+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63096+*                                    TRANSFERRED/4K)               @64A\n                                            63097+*                                                                  @64A\n 000002F0                                   63098+SMF2AGKZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000002F8                                   63099+SMF2AGK7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63100+*                                                                  @64A\n                         000000A8           63101+SMF2AG1F_LEN  EQU *-SMF2AG1F                                       @64A 03-IGWSMF\n                                            63102+*                                                                  @64A\n 00000318                                   63103+SMF2AG1G DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS@64A 03-IGWSMF\n                                            63104+*                                    SECTION                       @64A\n 00000318                                   63105+SMF2AGLA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63106+*                                    NUMBER                        @64A\n 0000031C                                   63107+SMF2AGLB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63108+*                                                                  @64A\n 00000320                                   63109+SMF2AGLC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63110+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63111+*                                                                  @64A\n 00000324                                   63112+SMF2AGLD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63113+*                                    CONSISTENT READS              @64A\n                                            63114+*                                                                  @64A\n 00000328                                   63115+SMF2AGLE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63116+*                                                                  @64A\n 0000032C                                   63117+SMF2AGLF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  239\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63118+*                                                                  @64A\n 00000330                                   63119+SMF2AGLG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63120+*                                                                  @64A\n 00000334                                   63121+SMF2AGLH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63122+*                                                                  @64A\n                                            63123+*                                                                  @64A\n 00000338                                   63124+SMF2AGLI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63125+*                                                                  @64A\n 0000033C                                   63126+SMF2AGLJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63127+*                                                                  @64A\n 00000340                                   63128+SMF2AGLK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63129+*                                                                  @64A\n 00000344                                   63130+SMF2AGLL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63131+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63132+*                                                                  @64A\n 00000348                                   63133+SMF2AGLM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63134+*                                                                  @64A\n 0000034C                                   63135+SMF2AGLN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000350                                   63136+SMF2AGLO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000354                                   63137+SMF2AGLP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000358                                   63138+SMF2AGLQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63139+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63140+*                                                                  @64A\n 00000360                                   63141+SMF2AGLR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63142+*                                    TO DASD.                      @64A\n 00000364                                   63143+SMF2AGLS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63144+*                                    TO DASD.                      @64A\n 00000368                                   63145+SMF2AGLT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63146+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63147+*                                                                  @64A\n 00000370                                   63148+SMF2AGLU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63149+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63150+*                                                                  @64A\n 00000378                                   63151+SMF2AGLV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63152+*                                                                  @64A\n 00000388                                   63153+SMF2AGLW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63154+*                                    REQUESTS IN THIS              @64A\n                                            63155+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63156+*                                    IN milli-seconds)             @64A\n                                            63157+*                                                                  @64A\n 00000390                                   63158+SMF2AGLX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63159+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63160+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63161+*                                                                  @64A\n 00000394                                   63162+SMF2AGLY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63163+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63164+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63165+*                                    TRANSFERRED/4K)               @64A\n                                            63166+*                                                                  @64A\n 00000398                                   63167+SMF2AGLZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000003A0                                   63168+SMF2AGL7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63169+*                                                                  @64A\n                         000000A8           63170+SMF2AG1G_LEN  EQU *-SMF2AG1G                                       @64A 03-IGWSMF\n                                            63171+*                                                                  @64A\n 000003C0                                   63172+SMF2AG1H DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  240\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63173+*                                    SECTION                       @64A\n 000003C0                                   63174+SMF2AGMA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63175+*                                    NUMBER                        @64A\n 000003C4                                   63176+SMF2AGMB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63177+*                                                                  @64A\n 000003C8                                   63178+SMF2AGMC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63179+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63180+*                                                                  @64A\n 000003CC                                   63181+SMF2AGMD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63182+*                                    CONSISTENT READS              @64A\n                                            63183+*                                                                  @64A\n 000003D0                                   63184+SMF2AGME DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63185+*                                                                  @64A\n 000003D4                                   63186+SMF2AGMF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63187+*                                                                  @64A\n 000003D8                                   63188+SMF2AGMG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63189+*                                                                  @64A\n 000003DC                                   63190+SMF2AGMH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63191+*                                                                  @64A\n                                            63192+*                                                                  @64A\n 000003E0                                   63193+SMF2AGMI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63194+*                                                                  @64A\n 000003E4                                   63195+SMF2AGMJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63196+*                                                                  @64A\n 000003E8                                   63197+SMF2AGMK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63198+*                                                                  @64A\n 000003EC                                   63199+SMF2AGML DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63200+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63201+*                                                                  @64A\n 000003F0                                   63202+SMF2AGMM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63203+*                                                                  @64A\n 000003F4                                   63204+SMF2AGMN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000003F8                                   63205+SMF2AGMO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000003FC                                   63206+SMF2AGMP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000400                                   63207+SMF2AGMQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63208+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63209+*                                                                  @64A\n 00000408                                   63210+SMF2AGMR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63211+*                                    TO DASD.                      @64A\n 0000040C                                   63212+SMF2AGMS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63213+*                                    TO DASD.                      @64A\n 00000410                                   63214+SMF2AGMT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63215+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63216+*                                                                  @64A\n 00000418                                   63217+SMF2AGMU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63218+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63219+*                                                                  @64A\n 00000420                                   63220+SMF2AGMV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63221+*                                                                  @64A\n 00000430                                   63222+SMF2AGMW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63223+*                                    REQUESTS IN THIS              @64A\n                                            63224+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63225+*                                    IN milli-seconds)             @64A\n                                            63226+*                                                                  @64A\n 00000438                                   63227+SMF2AGMX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  241\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63228+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63229+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63230+*                                                                  @64A\n 0000043C                                   63231+SMF2AGMY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63232+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63233+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63234+*                                    TRANSFERRED/4K)               @64A\n                                            63235+*                                                                  @64A\n 00000440                                   63236+SMF2AGMZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000448                                   63237+SMF2AGM7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63238+*                                                                  @64A\n                         000000A8           63239+SMF2AG1H_LEN  EQU *-SMF2AG1H                                       @64A 03-IGWSMF\n                                            63240+*                                                                  @64A\n 00000468                                   63241+SMF2AG1I DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS  @64A 03-IGWSMF\n                                            63242+*                                    SECTION                       @64A\n 00000468                                   63243+SMF2AGNA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63244+*                                    NUMBER                        @64A\n 0000046C                                   63245+SMF2AGNB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63246+*                                                                  @64A\n 00000470                                   63247+SMF2AGNC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63248+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63249+*                                                                  @64A\n 00000474                                   63250+SMF2AGND DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63251+*                                    CONSISTENT READS   @10A       @64A\n                                            63252+*                                                                  @64A\n 00000478                                   63253+SMF2AGNE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63254+*                                                                  @64A\n 0000047C                                   63255+SMF2AGNF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63256+*                                                                  @64A\n 00000480                                   63257+SMF2AGNG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63258+*                                                                  @64A\n 00000484                                   63259+SMF2AGNH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63260+*                                                                  @64A\n                                            63261+*                                                                  @64A\n 00000488                                   63262+SMF2AGNI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63263+*                                                                  @64A\n 0000048C                                   63264+SMF2AGNJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63265+*                                                                  @64A\n 00000490                                   63266+SMF2AGNK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63267+*                                                                  @64A\n 00000494                                   63268+SMF2AGNL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63269+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63270+*                                                                  @64A\n 00000498                                   63271+SMF2AGNM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63272+*                                                                  @64A\n 0000049C                                   63273+SMF2AGNN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000004A0                                   63274+SMF2AGNO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000004A4                                   63275+SMF2AGNP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000004A8                                   63276+SMF2AGNQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63277+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63278+*                                                                  @64A\n 000004B0                                   63279+SMF2AGNR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63280+*                                    TO DASD.                      @64A\n 000004B4                                   63281+SMF2AGNS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63282+*                                    TO DASD.                      @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  242\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000004B8                                   63283+SMF2AGNT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63284+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63285+*                                                                  @64A\n 000004C0                                   63286+SMF2AGNU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63287+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63288+*                                                                  @64A\n 000004C8                                   63289+SMF2AGNV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63290+*                                                                  @64A\n 000004D8                                   63291+SMF2AGNW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63292+*                                    REQUESTS IN THIS              @64A\n                                            63293+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63294+*                                    IN milli-seconds)             @64A\n                                            63295+*                                                                  @64A\n 000004E0                                   63296+SMF2AGNX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63297+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63298+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63299+*                                                                  @64A\n 000004E4                                   63300+SMF2AGNY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63301+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63302+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63303+*                                    TRANSFERRED/4K)               @64A\n                                            63304+*                                                                  @64A\n 000004E8                                   63305+SMF2AGNZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000004F0                                   63306+SMF2AGN7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63307+*                                                                  @64A\n                         000000A8           63308+SMF2AG1I_LEN  EQU *-SMF2AG1I                                       @64A 03-IGWSMF\n                         000002A0           63309+SMF2AG1E_LEN  EQU *-SMF2AG1E                                       @64A 03-IGWSMF\n                                            63310+*                                                                  @64A\n                                            63311+*                                                                  @64A\n 00000510                                   63312+SMF2AGX6 DS   0CL128                 LOCKING STATISTICS SUMMARY    @64A 03-IGWSMF\n 00000510                                   63313+SMF2AGQA DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63314+*                                    REQUESTS                      @64A\n                                            63315+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000514                                   63316+SMF2AGQB DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63317+*                                    REQUESTS THAT CAUSE TRUE      @64A\n                                            63318+*                                    CONTENTION                    @64A\n 00000518                                   63319+SMF2AGQC DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63320+*                                    REQUESTS THAT CAUSE FALSE     @64A\n                                            63321+*                                    CONTENTION                    @64A\n 0000051C                                   63322+SMF2AGQD DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63323+*                                    RELEASE REQUESTS              @64A\n 00000520                                   63324+SMF2AGQE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            63325+*                                    LOCK REQUESTS                 @64A\n 00000524                                   63326+SMF2AGQF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            63327+*                                    RELEASE LOCK REQUESTS         @64A\n 00000528                                   63328+SMF2AGQG DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000530                                   63329+SMF2AGQH DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63330+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63331+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000534                                   63332+SMF2AGQI DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63333+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63334+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000538                                   63335+SMF2AGQJ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63336+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63337+*                                    THAT CAUSE FALSE CONTENTION   @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  243\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000053C                                   63338+SMF2AGQK DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63339+*                                    CLASS_1 (DIWA) RELEASE        @64A\n                                            63340+*                                    LOCK REQUESTS                 @64A\n 00000540                                   63341+SMF2AGQL DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63342+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            63343+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000544                                   63344+SMF2AGQM DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63345+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            63346+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000548                                   63347+SMF2AGQN DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63348+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            63349+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000054C                                   63350+SMF2AGQO DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63351+*                                    CLASS_2 (UPGRADE) RELEASE     @64A\n                                            63352+*                                    LOCK REQUESTS                 @64A\n 00000550                                   63353+SMF2AGQP DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63354+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            63355+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000554                                   63356+SMF2AGQQ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63357+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            63358+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000558                                   63359+SMF2AGQR DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63360+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            63361+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000055C                                   63362+SMF2AGQS DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63363+*                                    CLASS_3 (PREFORMAT) RELEASE   @64A\n                                            63364+*                                    LOCK REQUESTS                 @64A\n 00000560                                   63365+SMF2AGQT DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            63366+*                                    LOCK REQUESTS                 @64A\n                                            63367+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000564                                   63368+SMF2AGQU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            63369+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000568                                   63370+SMF2AGQV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            63371+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000056C                                   63372+SMF2AGQW DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            63373+*                                    RELEASE LOCK REQUESTS         @64A\n 00000570                                   63374+SMF2AGQX DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63375+*                                                                  @64A\n                         00000080           63376+SMF2AGX6_LEN  EQU *-SMF2AGX6                                       @64A 03-IGWSMF\n                                            63377+*                                                                  @64A\n 00000590                                   63378+SMF2AFX8 DS   0CL64                  DATASET BMF LRU STATS         @64A 03-IGWSMF\n 00000590                                   63379+SMF2AGRL DS   1FL4                   NUMBER OF REDOS               @64A 03-IGWSMF\n 00000594                                   63380+SMF2AGRM DS   1FL4                   NUMBER OF RECURSIVE REDOS     @64A 03-IGWSMF\n 00000598                                   63381+SMF2AGRN DS   1FL4                   NUMBER OF BMF WRITES          @64A 03-IGWSMF\n 0000059C                                   63382+SMF2AGRO DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n 000005A0                                   63383+SMF2AGRP DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n                                            63384+*                                    THAT ENCOUNTERED CASTOUT      @64A\n                                            63385+*                                    LOCK CONTENTION               @64A\n 000005A4                                   63386+SMF2AGRR DS   1FL4                   REDO PERCENT                  @64A 03-IGWSMF\n 000005A8                                   63387+SMF2AGRS DS   1FL4                   RECURSIVE REDO PERCENT        @64A 03-IGWSMF\n 000005AC                                   63388+SMF2AGRT DS   1FL4                   SCM CASTOUT LOCK PERCENT      @64A 03-IGWSMF\n 000005B0                                   63389+SMF2AGRQ DS   CL12                   RESERVED                      @64A 03-IGWSMF\n 000005BC                                   63390+SMF2AGRU DS   CL4                    RESERVED                      @64A 03-IGWSMF\n 000005C0                                   63391+SMF2AGRV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63392+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  244\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63393+*                                                                  @64A\n                         00000040           63394+SMF2AFX8_LEN  EQU *-SMF2AFX8                                       @64A 03-IGWSMF\n 000005D0                                   63395+SMF2AGBQ DS   CL16                   LOCK STRUCTURE NAME           @P7A 03-IGWSMF\n                         000005E0           63396+SMF2A0GB_LEN  EQU *-SMF2A0GB                                       @64A 03-IGWSMF\n                                            63397+*                                                                  @64A\n                                            63398+*\n                                            63399+*   -----------------------------------------------------------------\n                                            63400+*    LOCK STRUCTURE ACTIVITY SUMMARY (SMF42 SUBTYPE 17)\n                                            63401+*   -----------------------------------------------------------------\n                                            63402+*   -----------------------------------------------------------------\n                                            63403+*    LOCK ACTIVITY ACROSS THE SYSPLEX FOR THE LOCK STRUCTURE\n                                            63404+*   -----------------------------------------------------------------\n 00000000                00000000 00000120  63405+SMF420HA DSECT ,                                                        03-IGWSMF\n                                            63406+*\n 00000000                                   63407+SMF42HA1 DS   0CL288                 LOCK STRUCTURE SUMMARY             03-IGWSMF\n                                            63408+*                                    SECTION                     @10A\n 00000000                                   63409+SMF42HAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            63410+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            63411+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   63412+SMF42H00 DS   CL12                   RESERVED                    @10A   03-IGWSMF\n                                            63413+*\n 00000010                                   63414+SMF42HAB DS   CL16                   DFP LAF NAME                @10A   03-IGWSMF\n 00000020                                   63415+SMF42H01 DS   CL16                   RESERVED                    @10A   03-IGWSMF\n                                            63416+*   -----------------------------------------------------------------\n                                            63417+*    LOCKS PROCESSED DURING VSAM/RLS READ/WRITE REQUESTS\n                                            63418+*   -----------------------------------------------------------------\n 00000030                                   63419+SMF42HAC DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            63420+*                                                                @10A\n                                            63421+*                                    NOW CONTAINS ZEROS          @10A\n 00000034                                   63422+SMF42HAD DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            63423+*                                    LOCK REQUESTS               @10A\n                                            63424+*                                    NOW CONTAINS ZEROS          @10A\n 00000038                                   63425+SMF42HAE DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            63426+*                                    LOCK REQUESTS               @10A\n                                            63427+*                                    NOW CONTAINS ZEROS          @10A\n 0000003C                                   63428+SMF42HAF DS   1FL4                   RESERVED                           03-IGWSMF\n                                            63429+*\n 00000040                                   63430+SMF42HAG DS   CL32                   RESERVED                           03-IGWSMF\n                                            63431+*   -----------------------------------------------------------------\n                                            63432+*    LOCKS PROCESSED WHICH ARE NOT ASSOCIATED WITH SPECIFIC READ/WRITE/\n                                            63433+*   -----------------------------------------------------------------\n 00000060                                   63434+SMF42HAH DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            63435+*                                                                @10A\n                                            63436+*                                    NOW CONTAINS ZEROS          @10A\n 00000064                                   63437+SMF42HAI DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            63438+*                                    LOCK REQUESTS               @10A\n                                            63439+*                                    NOW CONTAINS ZEROS          @10A\n 00000068                                   63440+SMF42HAJ DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            63441+*                                    LOCK REQUESTS               @10A\n                                            63442+*                                    NOW CONTAINS ZEROS          @10A\n 0000006C                                   63443+SMF42HAK DS   1FL4                   RESERVED                           03-IGWSMF\n                                            63444+*\n 00000070                                   63445+SMF42HAL DS   CL32                   RESERVED                           03-IGWSMF\n 00000090                                   63446+SMF42HCA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63447+*                                    REQUESTS                    @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  245\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63448+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000094                                   63449+SMF42HCB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63450+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            63451+*                                    CONTENTION                  @10A\n 00000098                                   63452+SMF42HCC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63453+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            63454+*                                    CONTENTION                  @10A\n 0000009C                                   63455+SMF42HCD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63456+*                                    RELEASE REQUESTS            @10A\n 000000A0                                   63457+SMF42HCE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            63458+*                                    LOCK REQUESTS               @10A\n 000000A4                                   63459+SMF42HCF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            63460+*                                    RELEASE LOCK REQUESTS       @10A\n 000000A8                                   63461+SMF42HCG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000000B0                                   63462+SMF42HCH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63463+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            63464+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000B4                                   63465+SMF42HCI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63466+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            63467+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000B8                                   63468+SMF42HCJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63469+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            63470+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000BC                                   63471+SMF42HCK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63472+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            63473+*                                    LOCK REQUESTS               @10A\n 000000C0                                   63474+SMF42HCL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63475+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            63476+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000C4                                   63477+SMF42HCM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63478+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            63479+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000C8                                   63480+SMF42HCN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63481+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            63482+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000CC                                   63483+SMF42HCO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63484+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            63485+*                                    LOCK REQUESTS               @10A\n 000000D0                                   63486+SMF42HCP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63487+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            63488+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000D4                                   63489+SMF42HCQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63490+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            63491+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000D8                                   63492+SMF42HCR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63493+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            63494+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000DC                                   63495+SMF42HCS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63496+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            63497+*                                    LOCK REQUESTS               @10A\n 000000E0                                   63498+SMF42HCT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            63499+*                                    LOCK REQUESTS               @10A\n                                            63500+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000E4                                   63501+SMF42HCU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            63502+*                                    THAT CAUSE TRUE CONTENTION  @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  246\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000E8                                   63503+SMF42HCV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            63504+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000EC                                   63505+SMF42HCW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            63506+*                                    RELEASE LOCK REQUESTS       @10A\n 000000F0                                   63507+SMF42HCX DS   1FL4                   NUMBER OF SPECIAL LOCK      @10A   03-IGWSMF\n                                            63508+*                                    REQUESTS                    @10A\n 000000F4                                   63509+SMF42HCY DS   CL12                   RESERVED                    @10A   03-IGWSMF\n 00000100                                   63510+SMF42HCZ DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            63511+*                                                                @10A\n                         00000120           63512+SMF420HA_LEN EQU *-SMF420HA                                             03-IGWSMF\n                                            63513+*   -----------------------------------------------------------------\n                                            63514+*    LOCK ACTIVITY ON ONE MVS SYSTEM IN THE SYSPLEX\n                                            63515+*   -----------------------------------------------------------------\n 00000000                00000000 00000120  63516+SMF420HB DSECT ,                                                        03-IGWSMF\n 00000000                                   63517+SMF42HA2 DS   0CL288                 MVS SYSTEM/LAF ACTIVITY            03-IGWSMF\n                                            63518+*                                    TOTALS SECTION              @10A\n 00000000                                   63519+SMF42HBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            63520+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            63521+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   63522+SMF42H02 DS   CL12                   RESERVED                    @10A   03-IGWSMF\n                                            63523+*\n 00000010                                   63524+SMF42HBB DS   CL16                   DFP LAF NAME                @10A   03-IGWSMF\n                                            63525+*\n 00000020                                   63526+SMF42HBC DS   CL8                    MVS SYSTEM NAME             @10A   03-IGWSMF\n 00000028                                   63527+SMF42H03 DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            63528+*   -----------------------------------------------------------------\n                                            63529+*    LOCKS PROCESSED DURING VSAM/RLS READ/WRITE REQUESTS\n                                            63530+*   -----------------------------------------------------------------\n 00000030                                   63531+SMF42HBD DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            63532+*                                    PROCESSED BY THIS MVS SYSTEM@10A\n 00000034                                   63533+SMF42HBE DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            63534+*                                    LOCK REQUESTS               @10A\n 00000038                                   63535+SMF42HBF DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            63536+*                                    LOCK REQUESTS               @10A\n 0000003C                                   63537+SMF42HBG DS   1FL4                   RESERVED                           03-IGWSMF\n                                            63538+*\n 00000040                                   63539+SMF42HBH DS   CL32                   RESERVED                           03-IGWSMF\n                                            63540+*   -----------------------------------------------------------------\n                                            63541+*    LOCKS PROCESSED WHICH ARE NOT ASSOCIATED WITH SPECIFIC READ/WRITE/\n                                            63542+*   -----------------------------------------------------------------\n 00000060                                   63543+SMF42HBI DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            63544+*                                    PROCESSED BY THIS MVS SYSTEM@10A\n 00000064                                   63545+SMF42HBJ DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            63546+*                                    LOCK REQUESTS               @10A\n 00000068                                   63547+SMF42HBK DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            63548+*                                    LOCK REQUESTS               @10A\n 0000006C                                   63549+SMF42HBL DS   1FL4                   RESERVED                           03-IGWSMF\n                                            63550+*\n 00000070                                   63551+SMF42HBM DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            63552+*                                                                @10A\n 00000090                                   63553+SMF42HDA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63554+*                                    REQUESTS                    @10A\n                                            63555+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000094                                   63556+SMF42HDB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63557+*                                    REQUESTS THAT CAUSE TRUE    @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  247\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63558+*                                    CONTENTION                  @10A\n 00000098                                   63559+SMF42HDC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63560+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            63561+*                                    CONTENTION                  @10A\n 0000009C                                   63562+SMF42HDD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            63563+*                                    RELEASE REQUESTS            @10A\n 000000A0                                   63564+SMF42HDE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            63565+*                                    LOCK REQUESTS               @10A\n 000000A4                                   63566+SMF42HDF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            63567+*                                    RELEASE LOCK REQUESTS       @10A\n 000000A8                                   63568+SMF42HDG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000000B0                                   63569+SMF42HDH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63570+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            63571+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000B4                                   63572+SMF42HDI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63573+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            63574+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000B8                                   63575+SMF42HDJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63576+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            63577+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000BC                                   63578+SMF42HDK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63579+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            63580+*                                    LOCK REQUESTS               @10A\n 000000C0                                   63581+SMF42HDL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63582+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            63583+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000C4                                   63584+SMF42HDM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63585+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            63586+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000C8                                   63587+SMF42HDN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63588+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            63589+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000CC                                   63590+SMF42HDO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63591+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            63592+*                                    LOCK REQUESTS               @10A\n 000000D0                                   63593+SMF42HDP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63594+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            63595+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000D4                                   63596+SMF42HDQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63597+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            63598+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000D8                                   63599+SMF42HDR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63600+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            63601+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000DC                                   63602+SMF42HDS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            63603+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            63604+*                                    LOCK REQUESTS               @10A\n 000000E0                                   63605+SMF42HDT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            63606+*                                    LOCK REQUESTS               @10A\n                                            63607+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000E4                                   63608+SMF42HDU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            63609+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000E8                                   63610+SMF42HDV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            63611+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000EC                                   63612+SMF42HDW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  248\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63613+*                                    RELEASE LOCK REQUESTS       @10A\n 000000F0                                   63614+SMF42HDX DS   1FL4                   NUMBER OF SPECIAL LOCK      @10A   03-IGWSMF\n                                            63615+*                                    REQUESTS                    @10A\n 000000F4                                   63616+SMF42HDY DS   CL12                   RESERVED                    @10A   03-IGWSMF\n 00000100                                   63617+SMF42HDZ DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            63618+*                                                                @10A\n                         00000120           63619+SMF420HB_LEN EQU *-SMF420HB                                             03-IGWSMF\n                                            63620+*\n                                            63621+*   -----------------------------------------------------------------\n                                            63622+*    COUPLING FACILITY CACHE PARTITION SUMMARY (SMF42 SUBTYPE 18)\n                                            63623+*    DATA FOR THIS PARTITION ACROSS ALL CACHE STRUCTURES.\n                                            63624+*   -----------------------------------------------------------------\n 00000000                00000000 000000C4  63625+SMF420IA DSECT ,                                                        03-IGWSMF\n 00000000                                   63626+SMF42IA1 DS   0D              CF CACHE PARTITION TOTALS                 03-IGWSMF\n                                            63627+*                                    SECTION                       @10A\n 00000000                                   63628+SMF42IAC DS   0CL196                 CACHE BUFFER POOLS                 03-IGWSMF\n                                            63629+*                                     THERE ARE 23 POOLS:\n                                            63630+*                                     11 SEQUENTIAL, 11 DIRECT,\n                                            63631+*                                     AND 1 DEFAULT\n                                            63632+*                                     THERE IS A SEPARATE SECTION FOR\n                                            63633+*                                     EACH PARTITION.  THIS MEANS THAT\n                                            63634+*                                     THERE WILL BE A MINIMUM OF 23\n                                            63635+*                                     TOTALS SECTIONS AND 23 SUMMARY\n                                            63636+*                                     SECTIONS.\n 00000000                                   63637+SMF42IAA DS    1FL4                   INTERVAL LENGTH. THIS IS THE      03-IGWSMF\n                                            63638+*                                     TOTAL TIME OF THE MEASUREMENT\n                                            63639+*                                     PERIOD. (IN SECONDS)         @10A\n 00000004                                   63640+SMF42I00 DS    CL12                   RESERVED                     @10A 03-IGWSMF\n                                            63641+*\n 00000010                                   63642+SMF42IAB DS    CL32                   RESERVED                     @10A 03-IGWSMF\n                                            63643+*\n 00000030                                   63644+SMF42IBG DS    CL16                   PARTITION TYPE               @10A 03-IGWSMF\n                                            63645+*                                     'SEQUENTIAL' DATA ONLY       @10A\n                                            63646+*                                     'DIRECT' DATA ONLY           @10A\n                                            63647+*                                     'COMBINED' DATA              @10A\n                                            63648+*\n 00000040                                   63649+SMF42IBH DS    1FL4                   SMS SPECIFIED CACHE WEIGHT   @10A 03-IGWSMF\n 00000044                                   63650+SMF42I01 DS    CL12                   PARTITIONNAMEWORD            @10A 03-IGWSMF\n 00000050                                   63651+SMF42IAD DS    1FL4                   COUPLE FACILITY CACHE             03-IGWSMF\n                                            63652+*                                     PARTITION NUMBER             @10A\n 00000054                                   63653+SMF42IAE DS    1FL4                   STATUS CONDITIONS            @10A 03-IGWSMF\n 00000058                                   63654+SMF42IAF DS    1FL4                   READ HIT COUNTER             @10A 03-IGWSMF\n 0000005C                                   63655+SMF42IAG DS    1FL4                   READ MISS DIRECTORY HIT           03-IGWSMF\n                                            63656+*                                     COUNTER                      @10A\n 00000060                                   63657+SMF42IAH DS    1FL4                   READ MISS ASSIGN SUPP             03-IGWSMF\n                                            63658+*                                     COUNTER                      @10A\n 00000064                                   63659+SMF42IAI DS    1FL4                   READ MISS, NAME ASSIGNED          03-IGWSMF\n                                            63660+*                                     COUNTER                      @10A\n 00000068                                   63661+SMF42IAJ DS    1FL4                   READ MISS TARGET STORAGE          03-IGWSMF\n                                            63662+*                                     CLASS FULL COUNTER           @10A\n 0000006C                                   63663+SMF42IAK DS    1FL4                   WRITE HIT CHANGE BIT 0            03-IGWSMF\n                                            63664+*                                     COUNTER                      @10A\n 00000070                                   63665+SMF42IAL DS    1FL4                   WRITE HIT CHANGE BIT 1            03-IGWSMF\n                                            63666+*                                     COUNTER                      @10A\n 00000074                                   63667+SMF42IAM DS    1FL4                   WRITE MISS NOT REGISTERED         03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  249\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63668+*                                     COUNTER                      @10A\n 00000078                                   63669+SMF42IAN DS    1FL4                   WRITE MISS INVALID STATE          03-IGWSMF\n                                            63670+*                                     COUNTER                      @10A\n 0000007C                                   63671+SMF42IAO DS    1FL4                   WRITE MISS TARGET STORAGE CLASS   03-IGWSMF\n                                            63672+*                                     FULL COUNTER                 @10A\n 00000080                                   63673+SMF42IAP DS    1FL4                   DIRECTORY ENTRY RECLAIM           03-IGWSMF\n                                            63674+*                                     COUNTER                      @10A\n 00000084                                   63675+SMF42IAQ DS    1FL4                   DATA TABLE ENTRY RECLAIM          03-IGWSMF\n                                            63676+*                                     COUNTER                      @10A\n 00000088                                   63677+SMF42IAR DS    1FL4                   XI FOR DIRECTORY RECLAIM          03-IGWSMF\n                                            63678+*                                     COUNTER                      @10A\n 0000008C                                   63679+SMF42IAS DS    1FL4                   XI FOR WRITE COUNTER         @10A 03-IGWSMF\n 00000090                                   63680+SMF42IAT DS    1FL4                   XI FOR NAME INVALIDATION          03-IGWSMF\n                                            63681+*                                     COUNTER                      @10A\n 00000094                                   63682+SMF42IAU DS    1FL4                   XI FOR COMPLEMENT INVALIDATION    03-IGWSMF\n                                            63683+*                                     COUNTER                      @10A\n 00000098                                   63684+SMF42IAV DS    1FL4                   CASTOUT COUNTER              @10A 03-IGWSMF\n 0000009C                                   63685+SMF42IAW DS    1FL4                   REFERENCE SIGNAL MISS             03-IGWSMF\n                                            63686+*                                     COUNTER                      @10A\n 000000A0                                   63687+SMF42IAX DS    1FL4                   TARGET STORAGE CLASS FULL         03-IGWSMF\n                                            63688+*                                     COUNTER                      @10A\n 000000A4                                   63689+SMF42IAY DS    1FL4                   DIRECTORY ENTRY COUNTER      @10A 03-IGWSMF\n 000000A8                                   63690+SMF42IAZ DS    1FL4                   DATA AREA ELEMENT COUNTER    @10A 03-IGWSMF\n 000000AC                                   63691+SMF42IBA DS    1FL4                   TOTAL CHANGED COUNTER        @10A 03-IGWSMF\n 000000B0                                   63692+SMF42IBB DS    1FL4                   DATA AREA COUNTER            @10A 03-IGWSMF\n 000000B4                                   63693+SMF42IBC DS    1FL4                   COMPLETED REFERENCE LISTS         03-IGWSMF\n                                            63694+*                                     COUNTER                      @10A\n 000000B8                                   63695+SMF42IBD DS    1FL4                   PARTIALLY COMPLETED REFERENCE     03-IGWSMF\n                                            63696+*                                     LIST COUNTER                 @10A\n 000000BC                                   63697+SMF42IBE DS    1FL4                   XI FOR LCEN REPLACEMENT           03-IGWSMF\n                                            63698+*                                     COUNTER                      @10A\n 000000C0                                   63699+SMF42IBF DS    1FL4                   WRITE UNCHANGED WITH XI           03-IGWSMF\n                         000000C4           63700+SMF420IA_LEN EQU *-SMF420IA                                             03-IGWSMF\n                                            63701+*                                     COUNTER                      @10A\n                                            63702+*   -----------------------------------------------------------------\n                                            63703+*    COUPLING FACILITY CACHE PARTITION SUMMARY (SMF42 SUBTYPE 18)\n                                            63704+*    DATA FOR THIS PARTITION FOR A SINGLE CACHE STRUCTURE\n                                            63705+*   -----------------------------------------------------------------\n 00000000                00000000 000000C4  63706+SMF420IC DSECT ,                                                        03-IGWSMF\n 00000000                                   63707+SMF42IC1 DS    0D                     CF CACHE PARTITION SUMMARY        03-IGWSMF\n                                            63708+*                                     SECTION                      @10A\n 00000000                                   63709+SMF42ICC DS    0CL196                 CACHE BUFFER POOLS                03-IGWSMF\n                                            63710+*                                     THERE ARE 23 POOLS:\n                                            63711+*                                     11 SEQUENTIAL, 11 DIRECT,\n                                            63712+*                                     AND 1 DEFAULT\n                                            63713+*                                     THERE IS A SEPARATE SECTION FOR\n                                            63714+*                                     EACH PARTITION.  THIS MEANS THAT\n                                            63715+*                                     THERE WILL BE A MINIMUM OF 23\n                                            63716+*                                     TOTALS SECTIONS AND 23 SUMMARY\n                                            63717+*                                     SECTIONS.\n 00000000                                   63718+SMF42ICA DS    1FL4                   INTERVAL LENGTH. THIS IS THE      03-IGWSMF\n                                            63719+*                                     TOTAL TIME OF THE MEASUREMENT\n                                            63720+*                                     PERIOD. (IN SECONDS)         @10A\n 00000004                                   63721+SMF42I02 DS    CL12                   RESERVED                     @10A 03-IGWSMF\n                                            63722+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  250\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000010                                   63723+SMF42I04 DS    1FL2                   RESERVED                     @10A 03-IGWSMF\n 00000012                                   63724+SMF42ICB DS    CL30                   CACHE STRUCTURE NAME         @10A 03-IGWSMF\n                                            63725+*\n 00000030                                   63726+SMF42IDG DS    CL16                   PARTITION TYPE               @10A 03-IGWSMF\n                                            63727+*                                     'SEQUENTIAL' DATA ONLY       @10A\n                                            63728+*                                     'DIRECT' DATA ONLY           @10A\n                                            63729+*                                     'COMBINED' DATA              @10A\n                                            63730+*\n 00000040                                   63731+SMF42IDH DS    1F                     SMS SPECIFIED CACHE WEIGHT   @10A 03-IGWSMF\n 00000044                                   63732+SMF42I03 DS    CL12                   RESERVED                     @10A 03-IGWSMF\n                                            63733+*\n 00000050                                   63734+SMF42ICD DS    1FL4                   COUPLE FACILITY CACHE             03-IGWSMF\n                                            63735+*                                     PARTITION NUMBER             @10A\n 00000054                                   63736+SMF42ICE DS    1FL4                   STATUS CONDITIONS            @10A 03-IGWSMF\n 00000058                                   63737+SMF42ICF DS    1FL4                   READ HIT COUNTER             @10A 03-IGWSMF\n 0000005C                                   63738+SMF42ICG DS    1FL4                   READ MISS DIRECTORY HIT           03-IGWSMF\n                                            63739+*                                     COUNTER                      @10A\n 00000060                                   63740+SMF42ICH DS    1FL4                   READ MISS ASSIGN SUPP             03-IGWSMF\n                                            63741+*                                     COUNTER                      @10A\n 00000064                                   63742+SMF42ICI DS    1FL4                   READ MISS, NAME ASSIGNED          03-IGWSMF\n                                            63743+*                                     COUNTER                      @10A\n 00000068                                   63744+SMF42ICJ DS    1FL4                   READ MISS TARGET STORAGE          03-IGWSMF\n                                            63745+*                                     CLASS FULL COUNTER           @10A\n 0000006C                                   63746+SMF42ICK DS    1FL4                   WRITE HIT CHANGE BIT 0            03-IGWSMF\n                                            63747+*                                     COUNTER                      @10A\n 00000070                                   63748+SMF42ICL DS    1FL4                   WRITE HIT CHANGE BIT 1            03-IGWSMF\n                                            63749+*                                     COUNTER                      @10A\n 00000074                                   63750+SMF42ICM DS    1FL4                   WRITE MISS NOT REGISTERED         03-IGWSMF\n                                            63751+*                                     COUNTER                      @10A\n 00000078                                   63752+SMF42ICN DS    1FL4                   WRITE MISS INVALID STATE          03-IGWSMF\n                                            63753+*                                     COUNTER                      @10A\n 0000007C                                   63754+SMF42ICO DS    1FL4                   WRITE MISS TARGET STORAGE CLASS   03-IGWSMF\n                                            63755+*                                     FULL COUNTER                 @10A\n 00000080                                   63756+SMF42ICP DS    1FL4                   DIRECTORY ENTRY RECLAIM           03-IGWSMF\n                                            63757+*                                     COUNTER                      @10A\n 00000084                                   63758+SMF42ICQ DS    1FL4                   DATA TABLE ENTRY RECLAIM          03-IGWSMF\n                                            63759+*                                     COUNTER                      @10A\n 00000088                                   63760+SMF42ICR DS    1FL4                   XI FOR DIRECTORY RECLAIM          03-IGWSMF\n                                            63761+*                                     COUNTER                      @10A\n 0000008C                                   63762+SMF42ICS DS    1FL4                   XI FOR WRITE COUNTER         @10A 03-IGWSMF\n 00000090                                   63763+SMF42ICT DS    1FL4                   XI FOR NAME INVALIDATION          03-IGWSMF\n                                            63764+*                                     COUNTER                      @10A\n 00000094                                   63765+SMF42ICU DS    1FL4                   XI FOR COMPLEMENT INVALIDATION    03-IGWSMF\n                                            63766+*                                     COUNTER                      @10A\n 00000098                                   63767+SMF42ICV DS    1FL4                   CASTOUT COUNTER              @10A 03-IGWSMF\n 0000009C                                   63768+SMF42ICW DS    1FL4                   REFERENCE SIGNAL MISS             03-IGWSMF\n                                            63769+*                                     COUNTER                      @10A\n 000000A0                                   63770+SMF42ICX DS    1FL4                   TARGET STORAGE CLASS FULL         03-IGWSMF\n                                            63771+*                                     COUNTER                      @10A\n 000000A4                                   63772+SMF42ICY DS    1FL4                   DIRECTORY ENTRY COUNTER      @10A 03-IGWSMF\n 000000A8                                   63773+SMF42ICZ DS    1FL4                   DATA AREA ELEMENT COUNTER    @10A 03-IGWSMF\n 000000AC                                   63774+SMF42IDA DS    1FL4                   TOTAL CHANGED COUNTER        @10A 03-IGWSMF\n 000000B0                                   63775+SMF42IDB DS    1FL4                   DATA AREA COUNTER            @10A 03-IGWSMF\n 000000B4                                   63776+SMF42IDC DS    1FL4                   COMPLETED REFERENCE LISTS         03-IGWSMF\n                                            63777+*                                     COUNTER                      @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  251\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000B8                                   63778+SMF42IDD DS    1FL4                   PARTIALLY COMPLETED REFERENCE     03-IGWSMF\n                                            63779+*                                     LIST COUNTER                 @10A\n 000000BC                                   63780+SMF42IDE DS    1FL4                   XI FOR LCEN REPLACEMENT           03-IGWSMF\n                                            63781+*                                     COUNTER                      @10A\n 000000C0                                   63782+SMF42IDF DS    1FL4                   WRITE UNCHANGED WITH XI           03-IGWSMF\n                                            63783+*                                     COUNTER                      @10A\n                                            63784+*\n                         000000C4           63785+SMF420IC_LEN EQU *-SMF420IC                                             03-IGWSMF\n                                            63786+* -------------------------------------------------------------------\n                                            63787+*    Coupling Facility Cache Partition Summary (SMF42 subtype 18)\n                                            63788+*    Directory/Element ratio data for this cache structure\n                                            63789+* -------------------------------------------------------------------\n 00000000                00000000 00000050  63790+SMF420IE DSECT ,                                                   @11A 03-IGWSMF\n 00000000                                   63791+SMF42IE1 DS    0CL80                 CF Cache Directory/element    @11A 03-IGWSMF\n                                            63792+*                                    ratio section                 @11A\n 00000000                                   63793+SMF42IEA DS    1FL4                  Interval length               @11A 03-IGWSMF\n 00000004                                   63794+SMF42I06 DS    CL12                  reserved                      @11A 03-IGWSMF\n 00000010                                   63795+SMF42I07 DS    CL2                   reserved                      @11A 03-IGWSMF\n 00000012                                   63796+SMF42IEB DS    CL30                  DFSMS cache structure name    @11A 03-IGWSMF\n 00000030                                   63797+SMF42IEC DS    1FL4                  Number of times the           @11A 03-IGWSMF\n                                            63798+*                                    directory portion of the      @11A\n                                            63799+*                                    dir/ele ratio changes         @11A\n 00000034                                   63800+SMF42IED DS    1FL4                  Number of times the           @11A 03-IGWSMF\n                                            63801+*                                    Element   portion of the      @11A\n                                            63802+*                                    dir/ele ratio changes         @11A\n 00000038                                   63803+SMF42IEE DS    1FL4                  Low  ratio value in this      @11A 03-IGWSMF\n                                            63804+*                                    interval - directory part     @11A\n 0000003C                                   63805+SMF42IEF DS    1FL4                  Low  ratio value in this      @11A 03-IGWSMF\n                                            63806+*                                    interval - Element   part     @11A\n 00000040                                   63807+SMF42IEG DS    1FL4                  High ratio value in this      @11A 03-IGWSMF\n                                            63808+*                                    interval - directory part     @11A\n 00000044                                   63809+SMF42IEH DS    1FL4                  High ratio value in this      @11A 03-IGWSMF\n                                            63810+*                                    interval - Element   part     @11A\n 00000048                                   63811+SMF42IEI DS    1FL4                  Current ratio value in this   @11A 03-IGWSMF\n                                            63812+*                                    interval - directory part     @11A\n 0000004C                                   63813+SMF42IEJ DS    1FL4                  Current ratio value in this   @11A 03-IGWSMF\n                                            63814+*                                    interval - element part       @11A\n                         00000050           63815+SMF420IE_LEN EQU *-SMF420IE          Length of section             @11A 03-IGWSMF\n                                            63816+*\n                                            63817+* --------------------------------------------------------------   @11A\n                                            63818+*    Coupling Facility Local Buffer Manager (SMF42 subtype 19)     @11A\n                                            63819+*    Local Buffer Manager LRU Statistics Summary. sysplex totals   @11A\n                                            63820+* --------------------------------------------------------------   @11A\n 00000000                00000000 000005C0  63821+SMF420JA DSECT ,                                                   @11A 03-IGWSMF\n 00000000                                   63822+SMF42JA1 DS    0D                       sysplex totals section     @11A 03-IGWSMF\n                                            63823+*                                                                  @11A\n 00000000                                   63824+SMF42JAC DS    0CL1384                                             @11A 03-IGWSMF\n                                            63825+*                                                                  @11A\n 00000000                                   63826+SMF42JNA DS    1FL4                Interval length. This is the    @11A 03-IGWSMF\n                                            63827+*                                  total time of the measurement   @11A\n                                            63828+*                                  period. (in seconds) total      @11A\n 00000004                                   63829+SMF42J00 DS    CL12                reserved                        @11A 03-IGWSMF\n                                            63830+*                                                                  @11A\n 00000010                                   63831+SMF42JNB DS    CL16                reserved                        @11A 03-IGWSMF\n 00000020                                   63832+SMF42JND DS    CL8                 Reserved                        @11A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  252\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63833+*                                                                  @11A\n 00000028                                   63834+SMF42JNE DS    2F                                                  @64C 03-IGWSMF\n                                            63835+*                                  Average Cpu time for all        @11A\n                                            63836+*                                  systems in the sysplex.  This   @11A\n                                            63837+*                                  is the amount of CPU time       @11A\n                                            63838+*                                  (on average) that each system   @11A\n                                            63839+*                                  consumed while processing the   @11A\n                                            63840+*                                  Local Buffer Manager LRU        @11A\n                                            63841+*                                  algorithm.                      @11A\n                                            63842+*                                                                  @11A\n 00000030                                   63843+SMF42JNF DS    2F                                                  @64C 03-IGWSMF\n                                            63844+*                                  Total CPU time for this         @11A\n                                            63845+*                                  record (in milli-seconds)       @11A\n                                            63846+*                                  (sysplex totals)                @11A\n                                            63847+*                                                                  @11A\n 00000038                                   63848+SMF42JN0 DS    CL4                 Reserved                        @21A 03-IGWSMF\n 0000003C                                   63849+SMF42JN7 DS    1FL4                Total number of write           @21A 03-IGWSMF\n                                            63850+*                                  requests                        @21A\n                                            63851+*                                  (sysplex totals)                @21A\n 00000040                                   63852+SMF42JNG DS    1FL4                Average number of buffer        @11A 03-IGWSMF\n                                            63853+*                                  manager LRU intervals           @11A\n                                            63854+*                                  processed during this period.   @11A\n                                            63855+*                                  (sysplex totals)                @11A\n                                            63856+*                                                                  @11A\n 00000044                                   63857+SMF42JNH DS    1FL4                Total number of buffer          @11A 03-IGWSMF\n                                            63858+*                                  manager LRU intervals           @11A\n                                            63859+*                                  processed during this period.   @11A\n                                            63860+*                                  (across the sysplex)            @11A\n                                            63861+*                                                                  @11A\n 00000048                                   63862+SMF42JNI DS    1FL4                Average                         @11A 03-IGWSMF\n                                            63863+*                                  Number of buffer manager        @11A\n                                            63864+*                                  LRU intervals processed         @11A\n                                            63865+*                                  where BMF was over the goal     @11A\n                                            63866+*                                  and normal algorithms were      @11A\n                                            63867+*                                  bypassed to reclaim buffers.    @11A\n                                            63868+*                                                                  @11A\n 0000004C                                   63869+SMF42JNJ DS    1FL4                Total                           @11A 03-IGWSMF\n                                            63870+*                                  Number of buffer manager        @11A\n                                            63871+*                                  LRU intervals processed         @11A\n                                            63872+*                                  where BMF was over the goal     @11A\n                                            63873+*                                  and normal algorithms were      @11A\n                                            63874+*                                  bypassed to reclaim buffers.    @11A\n                                            63875+*                                  (across the sysplex)            @11A\n                                            63876+*                                                                  @11A\n 00000050                                   63877+SMF42JNK DS    1FL4                Avg. number of times that       @11A 03-IGWSMF\n                                            63878+*                                  BMF was called on this          @11A\n                                            63879+*                                  interval.                       @11A\n                                            63880+*                                                                  @11A\n 00000054                                   63881+SMF42JNL DS    1FL4                Total number of times that      @11A 03-IGWSMF\n                                            63882+*                                  BMF was called on this          @11A\n                                            63883+*                                  interval(across the sysplex)    @11A\n                                            63884+*                                                                  @11A\n 00000058                                   63885+SMF42JNM DS    1FL4                Average number of BMF           @11A 03-IGWSMF\n                                            63886+*                                  hits during this interval.      @11A\n                                            63887+*                                  (sysplex totals)                @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  253\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63888+*                                                                  @11A\n 0000005C                                   63889+SMF42JNN DS    1FL4                Total number of BMF             @11A 03-IGWSMF\n                                            63890+*                                  hits during this interval.      @11A\n                                            63891+*                                  (sysplex totals)                @11A\n                                            63892+*                                                                  @11A\n 00000060                                   63893+SMF42JNO DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            63894+*                                  'hits' Current percentage       @11A\n                                            63895+*                                  during this interval.           @11A\n                                            63896+*                                  (sysplex totals)                @11A\n                                            63897+*                                                                  @11A\n 00000064                                   63898+SMF42JNP DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            63899+*                                  'hits' low percentage during    @11A\n                                            63900+*                                  this interval.                  @11A\n                                            63901+*                                  (sysplex totals)                @11A\n                                            63902+*                                                                  @11A\n 00000068                                   63903+SMF42JNQ DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            63904+*                                  'hits' high percentage during   @11A\n                                            63905+*                                  this interval.                  @11A\n                                            63906+*                                  (sysplex totals)                @11A\n                                            63907+*                                                                  @11A\n 0000006C                                   63908+SMF42JNR DS    1FL4                Buffer manager average          @11A 03-IGWSMF\n                                            63909+*                                  'hits' during this interval.    @11A\n                                            63910+*                                  (across the sysplex)            @11A\n                                            63911+*                                                                  @11A\n 00000070                                   63912+SMF42JNS DS    1FL4                Avg. Sysplex Cache manager      @11A 03-IGWSMF\n                                            63913+*                                  number of 'hits' during this    @11A\n                                            63914+*                                  interval.                       @11A\n                                            63915+*                                  (Across the sysplex)            @11A\n                                            63916+*                                                                  @11A\n 00000074                                   63917+SMF42JNT DS    1FL4                Tot Sysplex Cache manager       @11A 03-IGWSMF\n                                            63918+*                                  number of 'hits' during this    @11A\n                                            63919+*                                  interval.                       @11A\n                                            63920+*                                  (Across the sysplex)            @11A\n                                            63921+*                                                                  @11A\n 00000078                                   63922+SMF42JNU DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            63923+*                                  current percentage              @11A\n                                            63924+*                                  during this interval            @11A\n                                            63925+*                                  (across the sysplex)            @11A\n                                            63926+*                                                                  @11A\n 0000007C                                   63927+SMF42JNV DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            63928+*                                  low percentage during this      @11A\n                                            63929+*                                  interval.                       @11A\n                                            63930+*                                  (across the sysplex)            @11A\n                                            63931+*                                                                  @11A\n 00000080                                   63932+SMF42JNW DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            63933+*                                  high percentage during this     @11A\n                                            63934+*                                  interval.                       @11A\n                                            63935+*                                  (across the sysplex)            @11A\n 00000084                                   63936+SMF42JNX DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            63937+*                                  average percentage during       @11A\n                                            63938+*                                  this interval.                  @11A\n                                            63939+*                                  (across the sysplex)            @11A\n                                            63940+*                                                                  @11A\n 00000088                                   63941+SMF42JNY DS    1FL4                Avg. DASD number of 'hits'      @11A 03-IGWSMF\n                                            63942+*                                  during this interval            @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  254\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63943+*                                  (across the sysplex)            @11A\n                                            63944+*                                                                  @11A\n 0000008C                                   63945+SMF42JNZ DS    1FL4                Tot DASD number of 'hits'       @11A 03-IGWSMF\n                                            63946+*                                  during this interval            @11A\n                                            63947+*                                  (across the sysplex)            @11A\n                                            63948+*                                                                  @11A\n 00000090                                   63949+SMF42JOA DS    1FL4                DASD 'hits' current             @11A 03-IGWSMF\n                                            63950+*                                  percentage during this          @11A\n                                            63951+*                                  interval (across the sysplex)   @11A\n                                            63952+*                                                                  @11A\n 00000094                                   63953+SMF42JOB DS    1FL4                DASD 'hits' low percentage      @11A 03-IGWSMF\n                                            63954+*                                  during this interval            @11A\n                                            63955+*                                  (across the sysplex)            @11A\n                                            63956+*                                                                  @11A\n 00000098                                   63957+SMF42JOC DS    1FL4                DASD 'hits' high percentage     @11A 03-IGWSMF\n                                            63958+*                                  during this interval            @11A\n                                            63959+*                                  (across the sysplex)            @11A\n                                            63960+*                                                                  @11A\n 0000009C                                   63961+SMF42JOD DS    1FL4                Average                         @11A 03-IGWSMF\n                                            63962+*                                  DASD average 'hits' during      @11A\n                                            63963+*                                  this interval                   @11A\n                                            63964+*                                  (across the sysplex             @11A\n                                            63965+*                                                                  @11A\n 000000A0                                   63966+SMF42JOE DS    CL512               Sysplex average                 @11A 03-IGWSMF\n                                            63967+*                                  Buffer pool count array.        @11A\n                                            63968+*                                  This is a 16 entry array with   @11A\n                                            63969+*                                  each entry 32 bytes long.  The  @11A\n                                            63970+*                                  first entry is for the 2K       @11A\n                                            63971+*                                  storage pool, the second entry  @11A\n                                            63972+*                                  is for the 4K storage pool.     @11A\n                                            63973+*                                  The format is described below.  @11A\n                                            63974+*                                  (sysplex totals)                @11A\n                                            63975+*                                  Each Entry is mapped by         @11A\n                                            63976+*                                  dsect SMF420JB                  @11A\n                                            63977+*                                                                  @11A\n 000002A0                                   63978+SMF42JRI DS    CL512               Sysplex wide totals -           @11A 03-IGWSMF\n                                            63979+*                                  Buffer pool count array.        @11A\n                                            63980+*                                  This is a 16 entry array with   @11A\n                                            63981+*                                  each entry 32 bytes long.  The  @11A\n                                            63982+*                                  first entry is for the 2K       @11A\n                                            63983+*                                  storage pool, the second entry  @11A\n                                            63984+*                                  is for the 4K storage pool.     @11A\n                                            63985+*                                  The format is described below.  @11A\n                                            63986+*                                  (sysplex totals)                @11A\n                                            63987+*                                  Each Entry is mapped by         @11A\n                                            63988+*                                  DSECT SMF420JC                  @11A\n                                            63989+*                                  Average                         @11A\n 000004A0                                   63990+SMF42JON DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            63991+*                                  bytes) - low value              @11A\n                                            63992+*                                  (sysplex totals)                @11A\n                                            63993+*                                                                  @11A\n                                            63994+*                                  Total                           @11A\n 000004A4                                   63995+SMF42JOO DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            63996+*                                  bytes) - low value              @11A\n                                            63997+*                                  (sysplex totals)                @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  255\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           63998+*                                                                  @11A\n                                            63999+*                                  Average                         @11A\n 000004A8                                   64000+SMF42JOP DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64001+*                                  bytes) - high value.            @11A\n                                            64002+*                                  (sysplex totals)                @11A\n                                            64003+*                                                                  @11A\n                                            64004+*                                  Total                           @11A\n 000004AC                                   64005+SMF42JOQ DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64006+*                                  bytes) - high value.            @11A\n                                            64007+*                                  (sysplex totals)                @11A\n                                            64008+*                                                                  @11A\n                                            64009+*                                  Average                         @11A\n 000004B0                                   64010+SMF42JOR DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64011+*                                  bytes) - current value.         @11A\n                                            64012+*                                  (sysplex totals)                @11A\n                                            64013+*                                                                  @11A\n                                            64014+*                                  Total                           @11A\n 000004B4                                   64015+SMF42JOS DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64016+*                                  bytes) - current value.         @11A\n                                            64017+*                                  (sysplex totals)                @11A\n                                            64018+*                                                                  @11A\n                                            64019+*                                  Total                           @11A\n 000004B8                                   64020+SMF42JOT DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64021+*                                  bytes) - Average value.         @11A\n                                            64022+*                                  (sysplex totals)                @11A\n                                            64023+*                                                                  @11A\n 000004BC                                   64024+SMF42JOU DS    1FL4                reserved                        @11A 03-IGWSMF\n                                            64025+*                                                                  @11A\n                                            64026+*                                  Average                         @11A\n 000004C0                                   64027+SMF42JOV DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64028+*                                  (in megabytes) - low value      @11A\n                                            64029+*                                  (across the sysplex)            @11A\n                                            64030+*                                                                  @11A\n                                            64031+*                                  Total                           @11A\n 000004C4                                   64032+SMF42JOW DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64033+*                                  (in megabytes) - low value      @11A\n                                            64034+*                                  (across the sysplex)            @11A\n                                            64035+*                                                                  @11A\n                                            64036+*                                  Average                         @11A\n 000004C8                                   64037+SMF42JOX DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64038+*                                  (in megabytes) - high value     @11A\n                                            64039+*                                  (across the sysplex)            @11A\n                                            64040+*                                                                  @11A\n                                            64041+*                                  Total                           @11A\n 000004CC                                   64042+SMF42JOY DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64043+*                                  (in megabytes) - high value     @11A\n                                            64044+*                                  (across the sysplex)            @11A\n                                            64045+*                                                                  @11A\n                                            64046+*                                  Average                         @11A\n 000004D0                                   64047+SMF42JOZ DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64048+*                                  (in megabytes) - current value  @11A\n                                            64049+*                                  (sysplex totals)                @11A\n                                            64050+*                                                                  @11A\n                                            64051+*                                  Total                           @11A\n 000004D4                                   64052+SMF42JRA DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  256\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64053+*                                  (in megabytes) - current value  @11A\n                                            64054+*                                  (sysplex totals)                @11A\n                                            64055+*                                                                  @11A\n                                            64056+*                                  Total                           @11A\n 000004D8                                   64057+SMF42JRB DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64058+*                                  (in megabytes) - Average value  @11A\n                                            64059+*                                  (sysplex totals)                @11A\n                                            64060+*                                                                  @11A\n 000004DC                                   64061+SMF42JRC DS    1FL4                Reserved                        @11A 03-IGWSMF\n                                            64062+*                                                                  @11A\n 000004E0                                   64063+SMF42JRD DS    CL8                 Reserved                        @11A 03-IGWSMF\n                                            64064+*                                                                  @11A\n                                            64065+*                                  Average                         @11A\n 000004E8                                   64066+SMF42JRE DS    CL64                Calculated megabytes            @11A 03-IGWSMF\n                                            64067+*                                  distribution array.  this is a  @11A\n                                            64068+*                                  16 entry array which contains   @11A\n                                            64069+*                                  the number of times the cal-    @11A\n                                            64070+*                                  culated value occurred within   @11A\n                                            64071+*                                  a 100mb span.  Entry 1= 0-99m,  @11A\n                                            64072+*                                  entry 2 = 100-100m... entry     @11A\n                                            64073+*                                  (across the sysplex)            @11A\n                                            64074+*                                  The entry is mapped by          @11A\n                                            64075+*                                  DSECT SMF420JD                  @11A\n                                            64076+*                                                                  @11A\n                                            64077+*                                  Total                           @11A\n 00000528                                   64078+SMF42JRG DS    CL64                Calculated megabytes            @11A 03-IGWSMF\n                                            64079+*                                  distribution array.  this is a  @11A\n                                            64080+*                                  16 entry array which contains   @11A\n                                            64081+*                                  the number of times the cal-    @11A\n                                            64082+*                                  culated value occurred within   @11A\n                                            64083+*                                  a 100mb span.  Entry 1= 0-99m,  @11A\n                                            64084+*                                  entry 2 = 100-100m... entry     @11A\n                                            64085+*                                  (across the sysplex)            @11A\n                                            64086+*                                  The entry is mapped by          @11A\n                                            64087+*                                  DSECT SMF420JE                  @11A\n                                            64088+*                                                                  @11A\n                                            64089+*  asdf  smf42jta-smf42jub moves to here\n                                            64090+*                                                                  @21A\n                                            64091+* Additional statistics for RMF                                    @21A\n                                            64092+*                                                                  @21A\n 00000568                                   64093+SMF42JTA DS    1FL4                  Avg. number of scm read reques@21A 03-IGWSMF\n                                            64094+*                                    which encountered castout lock@21A\n                                            64095+*                                    contention during this interva@21A\n                                            64096+*                                    (across the sysplex)          @21A\n 0000056C                                   64097+SMF42JTB DS    1FL4                  Total number of scm read reque@21A 03-IGWSMF\n                                            64098+*                                    which encountercastout lock   @21A\n                                            64099+*                                    contention during this interva@21A\n                                            64100+*                                    (across the sysplex)          @21A\n 00000570                                   64101+SMF42JTC DS    1FL4                  Avg. number of scm read reques@21A 03-IGWSMF\n                                            64102+*                                    during this interval          @21A\n                                            64103+*                                    (across the sysplex)          @21A\n 00000574                                   64104+SMF42JTD DS    1FL4                  Total number of scm read reque@21A 03-IGWSMF\n                                            64105+*                                    during this interval          @21A\n                                            64106+*                                    (across the sysplex)          @21A\n 00000578                                   64107+SMF42JTE DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  257\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64108+*                                    encountered castout lock      @21A\n                                            64109+*                                    contention current percentage @21A\n                                            64110+*                                    during this interval          @21A\n                                            64111+*                                    (across the sysplex)          @21A\n 0000057C                                   64112+SMF42JTF DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64113+*                                    encountered castout lock      @21A\n                                            64114+*                                    contention low percentage duri@21A\n                                            64115+*                                    this interval                 @21A\n                                            64116+*                                    (across the sysplex)          @21A\n 00000580                                   64117+SMF42JTG DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64118+*                                    encountered castout lock      @21A\n                                            64119+*                                    contention high percentage    @21A\n                                            64120+*                                    during this interval          @21A\n                                            64121+*                                    (across the sysplex)          @21A\n 00000584                                   64122+SMF42JTH DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64123+*                                    encountered castout lock      @21A\n                                            64124+*                                    contention average percentage @21A\n                                            64125+*                                    during this interval          @21A\n                                            64126+*                                    (across the sysplex)          @21A\n 00000588                                   64127+SMF42JTI DS    1FL4                  Avg. number of redos          @21A 03-IGWSMF\n                                            64128+*                                    during this interval          @21A\n                                            64129+*                                    (across the sysplex)          @21A\n 0000058C                                   64130+SMF42JTJ DS    1FL4                  Total number of redos         @21A 03-IGWSMF\n                                            64131+*                                    during this interval          @21A\n                                            64132+*                                    (across the sysplex)          @21A\n 00000590                                   64133+SMF42JTK DS    1FL4                  Avg. number of recursive redos@21A 03-IGWSMF\n                                            64134+*                                    during this interval          @21A\n                                            64135+*                                    (across the sysplex)          @21A\n 00000594                                   64136+SMF42JTL DS    1FL4                  Total number of recursive redo@21A 03-IGWSMF\n                                            64137+*                                    during this interval          @21A\n                                            64138+*                                    (across the sysplex)          @21A\n 00000598                                   64139+SMF42JTM DS    1FL4                  Redos current percentage      @21A 03-IGWSMF\n                                            64140+*                                    during this interval          @21A\n                                            64141+*                                    (across the sysplex)          @21A\n 0000059C                                   64142+SMF42JTN DS    1FL4                  Redos low percentage          @21A 03-IGWSMF\n                                            64143+*                                    during this interval          @21A\n                                            64144+*                                    (across the sysplex)          @21A\n 000005A0                                   64145+SMF42JTO DS    1FL4                  Redos high percentage         @21A 03-IGWSMF\n                                            64146+*                                    during this interval          @21A\n                                            64147+*                                    (across the sysplex)          @21A\n 000005A4                                   64148+SMF42JTP DS    1FL4                  Redos average percentage      @21A 03-IGWSMF\n                                            64149+*                                    during this interval          @21A\n                                            64150+*                                    (across the sysplex)          @21A\n 000005A8                                   64151+SMF42JTQ DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64152+*                                    current percentage during     @21A\n                                            64153+*                                    this interval                 @21A\n                                            64154+*                                    (across the sysplex)          @21A\n 000005AC                                   64155+SMF42JTR DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64156+*                                    low percentage during         @21A\n                                            64157+*                                    this interval                 @21A\n                                            64158+*                                    (across the sysplex)          @21A\n 000005B0                                   64159+SMF42JTS DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64160+*                                    high percentage during        @21A\n                                            64161+*                                    this interval                 @21A\n                                            64162+*                                    (across the sysplex)          @21A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  258\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000005B4                                   64163+SMF42JTT DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64164+*                                    average percentage during     @21A\n                                            64165+*                                    this interval                 @21A\n                                            64166+*                                    (across the sysplex)          @21A\n 000005B8                                   64167+SMF42JUA DS    1FL4                  Avg. number of                @21A 03-IGWSMF\n                                            64168+*                                    Number of buffer manager      @21A\n                                            64169+*                                    LRU intervals processed       @21A\n                                            64170+*                                    where BMF was over the goal   @21A\n                                            64171+*                                    accelerated the aging, but    @21A\n                                            64172+*                                    did not go into panic mode.   @21A\n                                            64173+*                                    (across the sysplex)          @21A\n 000005BC                                   64174+SMF42JUB DS    1FL4                  Total number of               @21A 03-IGWSMF\n                                            64175+*                                    Number of buffer manager      @21A\n                                            64176+*                                    LRU intervals processed       @21A\n                                            64177+*                                    where BMF was over the goal   @21A\n                                            64178+*                                    accelerated the aging, but    @21A\n                                            64179+*                                    did not go into panic mode.   @21A\n                                            64180+*                                    (across the sysplex)          @21A\n                                            64181+*                                                                  @PJS\n                                            64182+*                                                                  @11A\n                                            64183+*                                                                  @11A\n                                            64184+* --------------------------------------------------------------   @11A\n                                            64185+*  Coupling Facility Local Buffer Manager (SMF42 subtype 19)       @11A\n                                            64186+*  Local Buffer Manager LRU Statistics Summary. single system      @11A\n                                            64187+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000374  64188+SMF420PA DSECT ,                                                   @11A 03-IGWSMF\n 00000000                                   64189+SMF42PA1 DS    0D                                                  @11A 03-IGWSMF\n                                            64190+*                                                                  @11A\n 00000000                                   64191+SMF42PAC DS    0CL800                                              @11A 03-IGWSMF\n                                            64192+*                                                                  @11A\n 00000000                                   64193+SMF42JPA DS    1FL4                Interval length. This is the    @11A 03-IGWSMF\n                                            64194+*                                  total time of the measurement   @11A\n                                            64195+*                                  period. (in seconds) total      @11A\n                                            64196+*                                                                  @11A\n 00000004                                   64197+SMF42J01 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64198+*                                                                  @11A\n 00000010                                   64199+SMF42JPB DS    CL8                 MVS system name.                @11A 03-IGWSMF\n 00000018                                   64200+SMF42JPC DS    CL8                 Reserved                        @11A 03-IGWSMF\n 00000020                                   64201+SMF42JPD DS    CL8                 Reserved                        @11A 03-IGWSMF\n                                            64202+*                                                                  @11A\n 00000028                                   64203+SMF42JPE DS    CL8                 Average CPU time spent by       @11A 03-IGWSMF\n                                            64204+*                                  BMF LRU processing during       @11A\n                                            64205+*                                  each cycle (in milli-seconds)   @11A\n                                            64206+*                                                                  @11A\n 00000030                                   64207+SMF42JPF DS    CL8                 Total CPU time for this         @11A 03-IGWSMF\n                                            64208+*                                  record (in milli-seconds)       @11A\n                                            64209+*                                                                  @11A\n 00000038                                   64210+SMF42JP1 DS    CL12                Reserved                        @21A 03-IGWSMF\n 00000044                                   64211+SMF42JP6 DS    1FL4                Total number of write           @21A 03-IGWSMF\n                                            64212+*                                  requests                        @21A\n 00000048                                   64213+SMF42JPG DS    1FL4                Number of buffer manager        @11A 03-IGWSMF\n                                            64214+*                                  LRU intervals processed         @11A\n                                            64215+*                                  during this period.             @11A\n                                            64216+*                                                                  @11A\n 0000004C                                   64217+SMF42JPH DS    1FL4                Number of buffer manager        @11A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  259\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64218+*                                  LRU intervals processed         @11A\n                                            64219+*                                  where BMF was over the goal     @11A\n                                            64220+*                                  and normal algorithms were      @11A\n                                            64221+*                                  bypassed to reclaim buffers.    @11A\n                                            64222+*                                                                  @11A\n 00000050                                   64223+SMF42JPI DS    1FL4                Total number of times that BMF  @11A 03-IGWSMF\n                                            64224+*                                  was called in this interval     @11A\n                                            64225+*                                                                  @11A\n 00000054                                   64226+SMF42JP2 DS    1FL4                Number of buffer manager        @21A 03-IGWSMF\n                                            64227+*                                  LRU intervals processed         @21A\n                                            64228+*                                  where BMF was over the goal,    @21A\n                                            64229+*                                  accelerated the aging, but      @21A\n                                            64230+*                                  did not go into panic mode.     @21A\n 00000058                                   64231+SMF42JPJ DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64232+*                                  hits during this interval.      @11A\n 0000005C                                   64233+SMF42JPK DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64234+*                                  'hits' current percentage       @11A\n                                            64235+*                                  during this interval. Value     @11A\n                                            64236+*                                  for the last LRU cycle before   @11A\n                                            64237+*                                  the SMF record was processed    @11A\n                                            64238+*                                                                  @11A\n 00000060                                   64239+SMF42JPL DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64240+*                                  'hits' low percentage during    @11A\n                                            64241+*                                  this interval.                  @11A\n                                            64242+*                                                                  @11A\n 00000064                                   64243+SMF42JPM DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64244+*                                  'hits' high percentage during   @11A\n                                            64245+*                                  this interval.                  @11A\n                                            64246+*                                                                  @11A\n 00000068                                   64247+SMF42JPN DS    1FL4                Buffer manager average          @11A 03-IGWSMF\n                                            64248+*                                  'hits' during this interval.    @11A\n                                            64249+*                                                                  @11A\n 0000006C                                   64250+SMF42JP3 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64251+*                                                                  @11A\n 00000078                                   64252+SMF42JPO DS    1FL4                Sysplex Cache manager           @11A 03-IGWSMF\n                                            64253+*                                  number of 'hits' during this    @11A\n                                            64254+*                                  interval.                       @11A\n                                            64255+*                                                                  @11A\n 0000007C                                   64256+SMF42JPP DS    1FL4                Sysplex cache manager num       @11A 03-IGWSMF\n                                            64257+*                                  of 'hits' current percentage    @11A\n                                            64258+*                                  during this interval. Value     @11A\n                                            64259+*                                  for the last LRU cycle before   @11A\n                                            64260+*                                  the SMF record was processed    @11A\n                                            64261+*                                                                  @11A\n 00000080                                   64262+SMF42JPQ DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64263+*                                  low percentage during this      @11A\n                                            64264+*                                  interval.                       @11A\n                                            64265+*                                                                  @11A\n 00000084                                   64266+SMF42JPR DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64267+*                                  high percentage during this     @11A\n                                            64268+*                                  interval.                       @11A\n                                            64269+*                                                                  @11A\n 00000088                                   64270+SMF42JPS DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64271+*                                  average percentage during this  @11A\n                                            64272+*                                  interval.                       @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  260\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64273+*                                                                  @11A\n 0000008C                                   64274+SMF42JP4 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64275+*                                                                  @11A\n 00000098                                   64276+SMF42JPT DS    1FL4                DASD number of 'hits'           @11A 03-IGWSMF\n                                            64277+*                                  during this interval            @11A\n 0000009C                                   64278+SMF42JPU DS    1FL4                DASD number                     @11A 03-IGWSMF\n                                            64279+*                                  of 'hits' current percentage    @11A\n                                            64280+*                                  during this interval. Value     @11A\n                                            64281+*                                  for the last LRU cycle before   @11A\n                                            64282+*                                  the SMF record was processed    @11A\n                                            64283+*                                                                  @11A\n 000000A0                                   64284+SMF42JPV DS    1FL4                DASD 'hits' low percentage      @11A 03-IGWSMF\n                                            64285+*                                  during this interval            @11A\n                                            64286+*                                                                  @11A\n 000000A4                                   64287+SMF42JPW DS    1FL4                DASD 'hits' high percentage     @11A 03-IGWSMF\n                                            64288+*                                  during this interval            @11A\n                                            64289+*                                                                  @11A\n 000000A8                                   64290+SMF42JPX DS    1FL4                DASD average 'hits' during      @11A 03-IGWSMF\n                                            64291+*                                  this interval                   @11A\n                                            64292+*                                                                  @11A\n 000000AC                                   64293+SMF42JP5 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64294+*                                                                  @11A\n 000000B8                                   64295+SMF42JPY DS    CL512               Buffer pool count array.        @11A 03-IGWSMF\n                                            64296+*                                  This is a 16 entry array with   @11A\n                                            64297+*                                  each entry 16 bytes long.  The  @11A\n                                            64298+*                                  first entry is for the 2K       @11A\n                                            64299+*                                  storage pool, the second entry  @11A\n                                            64300+*                                  is for the 4K storage pool.     @11A\n                                            64301+*                                  The format is described below.  @11A\n                                            64302+*                                  The entry is mapped by          @11A\n                                            64303+*                                  DSECT SMF420JF                  @11A\n                                            64304+*                                                                  @11A\n 000002B8                                   64305+SMF42JQG DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64306+*                                  bytes) - low value              @11A\n                                            64307+*                                                                  @11A\n 000002BC                                   64308+SMF42JQH DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64309+*                                  bytes) - high value.            @11A\n                                            64310+*                                                                  @11A\n 000002C0                                   64311+SMF42JQI DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64312+*                                  bytes) - current value.         @11A\n                                            64313+*                                                                  @11A\n 000002C4                                   64314+SMF42JQJ DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64315+*                                  bytes) - average value.         @11A\n                                            64316+*                                                                  @11A\n 000002C8                                   64317+SMF42JQK DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64318+*                                  (in megabytes) - low value      @11A\n                                            64319+*                                                                  @11A\n 000002CC                                   64320+SMF42JQL DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64321+*                                  (in megabytes) - high value     @11A\n                                            64322+*                                                                  @11A\n 000002D0                                   64323+SMF42JQM DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64324+*                                  (in megabytes) - current value  @11A\n                                            64325+*                                                                  @11A\n 000002D4                                   64326+SMF42JQN DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64327+*                                  (in megabytes) - average value  @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  261\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64328+*                                                                  @11A\n 000002D8                                   64329+SMF42JQ3 DS    CL8                 Reserved                        @11A 03-IGWSMF\n                                            64330+*                                                                  @11A\n 000002E0                                   64331+SMF42JQO DS    CL64                Calculated megabytes            @11A 03-IGWSMF\n                                            64332+*                                  distribution array.  this is a  @11A\n                                            64333+*                                  16 entry array which contains   @11A\n                                            64334+*                                  the number of times the cal-    @11A\n                                            64335+*                                  culated value occurred within   @11A\n                                            64336+*                                  a 100mb span.  Entry 1= 0-99m,  @11A\n                                            64337+*                                  entry 2 = 100-199m... entry     @11A\n                                            64338+*                                  The entry is mapped by          @11A\n                                            64339+*                                  DSECT SMF420JG                  @11A\n                                            64340+*                                                                  @11A\n                                            64341+*  asdf  smf42jsa to smf42jsp moves to here\n                                            64342+*                                                                  @21A\n                                            64343+* Additional statistics for RMF                                    @21A\n                                            64344+*                                                                  @21A\n 00000320                                   64345+SMF42JSA DS    1FL4                 Number of SCM Read requests    @21A 03-IGWSMF\n                                            64346+*                                   which encountered castout      @21A\n                                            64347+*                                   contention during this interva @21A\n                                            64348+*                                                                  @21A\n 00000324                                   64349+SMF42JSB DS    1FL4                 Number of SCM Read requests    @21A 03-IGWSMF\n                                            64350+*                                   during this interval           @21A\n                                            64351+*                                                                  @21A\n 00000328                                   64352+SMF42JSC DS    1FL4                 Current percentage of SCM read @21A 03-IGWSMF\n                                            64353+*                                   request which encountered cast @21A\n                                            64354+*                                   contention during this interva @21A\n                                            64355+*                                   Value for the last LRU cycle   @21A\n                                            64356+*                                   before the SMF record was      @21A\n                                            64357+*                                   processed                      @21A\n                                            64358+*                                                                  @21A\n 0000032C                                   64359+SMF42JSD DS    1FL4                 Low percentage during this     @21A 03-IGWSMF\n                                            64360+*                                   interval for SMF42JSC          @21A\n                                            64361+*                                                                  @21A\n 00000330                                   64362+SMF42JSE DS    1FL4                 High percentage during this    @21A 03-IGWSMF\n                                            64363+*                                   interval for SMF42JSC          @21A\n                                            64364+*                                                                  @21A\n 00000334                                   64365+SMF42JSF DS    1FL4                 Average percentage during this @21A 03-IGWSMF\n                                            64366+*                                   interval for SMF42JSC          @21A\n                                            64367+*                                                                  @21A\n 00000338                                   64368+SMF42JSG DS    1FL4                 Number of Redos during         @21A 03-IGWSMF\n                                            64369+*                                   this interval.                 @21A\n                                            64370+*                                                                  @21A\n 0000033C                                   64371+SMF42JSH DS    1FL4                 Current percentage of Redos    @21A 03-IGWSMF\n                                            64372+*                                   during this interval.          @21A\n                                            64373+*                                   Value for the last LRU cycle   @21A\n                                            64374+*                                   before the SMF record was      @21A\n                                            64375+*                                   processed                      @21A\n                                            64376+*                                                                  @21A\n 00000340                                   64377+SMF42JSI DS    1FL4                 Low percentage during this     @21A 03-IGWSMF\n                                            64378+*                                   interval for SMF42JSH          @21A\n                                            64379+*                                                                  @21A\n 00000344                                   64380+SMF42JSJ DS    1FL4                 High percentage during this    @21A 03-IGWSMF\n                                            64381+*                                   interval for SMF42JSH          @21A\n                                            64382+*                                                                  @21A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  262\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000348                                   64383+SMF42JSK DS    1FL4                 Average percentage during      @21A 03-IGWSMF\n                                            64384+*                                   this interval for SMF42JSH     @21A\n                                            64385+*                                                                  @21A\n 0000034C                                   64386+SMF42JSL DS    1FL4                 Number of Recursive Redos duri @21A 03-IGWSMF\n                                            64387+*                                   this interval                  @21A\n                                            64388+*                                                                  @21A\n 00000350                                   64389+SMF42JSM DS    1FL4                 Current percentage of          @21A 03-IGWSMF\n                                            64390+*                                   Recursive Redos during this    @21A\n                                            64391+*                                   interval. Value for the last L @21A\n                                            64392+*                                   cycle before the SMF record wa @21A\n                                            64393+*                                   processed                      @21A\n                                            64394+*                                                                  @21A\n 00000354                                   64395+SMF42JSN DS    1FL4                 Low percentage during this     @21A 03-IGWSMF\n                                            64396+*                                   interval for SMF42JSM          @21A\n                                            64397+*                                                                  @21A\n 00000358                                   64398+SMF42JSO DS    1FL4                 High percentage during this    @21A 03-IGWSMF\n                                            64399+*                                   interval for SMF42JSM          @21A\n                                            64400+*                                                                  @21A\n 0000035C                                   64401+SMF42JSP DS    1FL4                 Average percentage during this @21A 03-IGWSMF\n                                            64402+*                                   interval for SMF42JSM          @21A\n                                            64403+*                                                                  @11A\n 00000360                                   64404+SMF42JUC DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            64405+*                                    Low Amount                    @PJS\n                                            64406+*                                                                  @PJS\n 00000364                                   64407+SMF42JUD DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            64408+*                                    High Amount                   @PJS\n                                            64409+*                                                                  @PJS\n 00000368                                   64410+SMF42JUE DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            64411+*                                    Avg Amount                    @PJS\n                                            64412+*                                                                  @PJS\n 0000036C                                   64413+SMF42JUF DS    1FL4                  Fixed Storage Amount          @PJS 03-IGWSMF\n                                            64414+*                                                                  @PJS\n 00000370                                   64415+SMF42JUG DS    1FL4                  Real Storage Percentage       @PJS 03-IGWSMF\n                                            64416+*                                                                  @11A\n                                            64417+* --------------------------------------------------------------   @11A\n                                            64418+* Start  --- Buffer Pool Count Array Element -  AVERAGE            @11A\n                                            64419+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000020  64420+SMF420JB DSECT ,                    entry mapping                  @11A 03-IGWSMF\n                                            64421+*                                   Average                        @11A\n 00000000                                   64422+SMF42JOF DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            64423+*                                   BMF buffers for this pool      @11A\n                                            64424+*                                   during this interval.          @11A\n                                            64425+*                                   (sysplex totals)               @11A\n                                            64426+*                                                                  @11A\n                                            64427+*                                   Average                        @11A\n 00000004                                   64428+SMF42JOG DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            64429+*                                   BMF buffers for this pool      @11A\n                                            64430+*                                   during this interval.          @11A\n                                            64431+*                                   (sysplex totals)               @11A\n                                            64432+*                                                                  @11A\n                                            64433+*                                   Average current                @11A\n 00000008                                   64434+SMF42JOH DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            64435+*                                   BMF buffers for this pool      @11A\n                                            64436+*                                   during this interval.          @11A\n                                            64437+*                                   (sysplex totals)               @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  263\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64438+*                                                                  @11A\n 0000000C                                   64439+SMF42JOI DS    1FL4                 Reserved                       @11A 03-IGWSMF\n                                            64440+*                                                                  @11A\n                                            64441+*                                   Average                        @11A\n 00000010                                   64442+SMF42JOJ DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            64443+*                                   extents for this pool          @11A\n                                            64444+*                                   during this interval.          @11A\n                                            64445+*                                   (sysplex totals)               @11A\n                                            64446+*                                                                  @11A\n                                            64447+*                                   Average                        @11A\n 00000014                                   64448+SMF42JOK DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            64449+*                                   extents for this pool          @11A\n                                            64450+*                                   during this interval.          @11A\n                                            64451+*                                   (sysplex totals)               @11A\n                                            64452+*                                                                  @11A\n                                            64453+*                                   Average current                @11A\n 00000018                                   64454+SMF42JOL DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            64455+*                                   extents for this pool          @11A\n                                            64456+*                                   during this interval.          @11A\n                                            64457+*                                   (sysplex totals)               @11A\n                                            64458+*                                                                  @11A\n 0000001C                                   64459+SMF42JOM DS    1FL4                 Reserved                       @11A 03-IGWSMF\n                                            64460+*                                                                  @11A\n                         00000020           64461+SMF420JB_LEN EQU *-SMF420JB         Length of single entry         @11A 03-IGWSMF\n                                            64462+* --------------------------------------------------------------   @11A\n                                            64463+* End    --- Buffer Pool Count Array Element -  AVERAGE            @11A\n                                            64464+* --------------------------------------------------------------   @11A\n                                            64465+*                                                                  @11A\n                                            64466+* --------------------------------------------------------------   @11A\n                                            64467+* Start  --- Buffer Pool Count Array Element - sysplex totals      @11A\n                                            64468+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000020  64469+SMF420JC DSECT ,                    entry mapping                  @11A 03-IGWSMF\n                                            64470+*                                   sysplex wide totals            @11A\n                                            64471+*                                                                  @11A\n 00000000                                   64472+SMF42JRJ DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            64473+*                                   BMF buffers for this pool      @11A\n                                            64474+*                                   during this interval.          @11A\n                                            64475+*                                   (sysplex totals)               @11A\n                                            64476+*                                                                  @11A\n 00000004                                   64477+SMF42JRK DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            64478+*                                   BMF buffers for this pool      @11A\n                                            64479+*                                   during this interval.          @11A\n                                            64480+*                                   (sysplex totals)               @11A\n                                            64481+*                                                                  @11A\n 00000008                                   64482+SMF42JRL DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            64483+*                                   BMF buffers for this pool      @11A\n                                            64484+*                                   during this interval.          @11A\n                                            64485+*                                   (sysplex totals)               @11A\n                                            64486+*                                                                  @11A\n 0000000C                                   64487+SMF42JRM DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            64488+*                                                                  @11A\n 00000010                                   64489+SMF42JRN DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            64490+*                                   extents for this pool          @11A\n                                            64491+*                                   during this interval.          @11A\n                                            64492+*                                   (sysplex totals)               @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  264\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64493+*                                                                  @11A\n 00000014                                   64494+SMF42JRO DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            64495+*                                   extents for this pool          @11A\n                                            64496+*                                   during this interval.          @11A\n                                            64497+*                                   (sysplex totals)               @11A\n                                            64498+*                                                                  @11A\n                                            64499+*                                   current                        @11A\n 00000018                                   64500+SMF42JRP DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            64501+*                                   extents for this pool          @11A\n                                            64502+*                                   during this interval.          @11A\n                                            64503+*                                   (sysplex totals)               @11A\n                                            64504+*                                                                  @11A\n 0000001C                                   64505+SMF42JRQ DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            64506+*                                                                  @11A\n                                            64507+* --------------------------------------------------------------   @11A\n                                            64508+* End    --- Buffer Pool Count Array Element - sysplex totals      @11A\n                                            64509+* --------------------------------------------------------------   @11A\n                                            64510+*                                                                  @11A\n                                            64511+* --------------------------------------------------------------   @11A\n                                            64512+* Start --  Buffer Manager Calculated Distribution Array - Avg.    @11A\n                                            64513+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000004  64514+SMF420JD DSECT ,                                                   @11A 03-IGWSMF\n                                            64515+*                                   Average                        @11A\n 00000000                                   64516+SMF42JRF DS    1FL4                 Number of times calculated     @11A 03-IGWSMF\n                                            64517+*                                   value was within this range    @11A\n                                            64518+*                                   (across the sysplex)           @11A\n                                            64519+*                                                                  @11A\n                                            64520+*                                                                  @11A\n                                            64521+* --------------------------------------------------------------   @11A\n                                            64522+* End   --  Buffer Manager Calculated Distribution Array - Avg.    @11A\n                                            64523+* --------------------------------------------------------------   @11A\n                                            64524+*                                                                  @11A\n                                            64525+* --------------------------------------------------------------   @11A\n                                            64526+* Start --  Buffer Manager Calculated Distribution Array - Total   @11A\n                                            64527+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000004  64528+SMF420JE DSECT ,                                                   @11A 03-IGWSMF\n                                            64529+*                                   Total                          @11A\n 00000000                                   64530+SMF42JRH DS    1FL4                 Number of times calculated     @11A 03-IGWSMF\n                                            64531+*                                   value was within this range    @11A\n                                            64532+*                                   (across the sysplex)           @11A\n                                            64533+*                                                                  @11A\n                                            64534+* --------------------------------------------------------------   @11A\n                                            64535+* End   --  Buffer Manager Calculated Distribution Array - Total   @11A\n                                            64536+* --------------------------------------------------------------   @11A\n                                            64537+*  asdf  smf42jta to smf42jub moved from here\n                                            64538+* --------------------------------------------------------------   @11A\n                                            64539+* Start  --- Buffer Pool Count Array Element - single system       @11A\n                                            64540+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000020  64541+SMF420JF DSECT ,                    entry mapping                  @11A 03-IGWSMF\n                                            64542+*                                   single system                  @11A\n                                            64543+*                                                                  @11A\n 00000000                                   64544+SMF42JPZ DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            64545+*                                   BMF buffers for this pool      @11A\n                                            64546+*                                   during this interval.          @11A\n                                            64547+*                                                                  @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  265\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000004                                   64548+SMF42JQA DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            64549+*                                   BMF buffers for this pool      @11A\n                                            64550+*                                   during this interval.          @11A\n                                            64551+*                                                                  @11A\n                                            64552+*                                   current                        @11A\n 00000008                                   64553+SMF42JQB DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            64554+*                                   BMF buffers for this pool      @11A\n                                            64555+*                                   during this interval.          @11A\n                                            64556+*                                                                  @11A\n 0000000C                                   64557+SMF42JQ6 DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            64558+*                                                                  @11A\n 00000010                                   64559+SMF42JQC DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            64560+*                                   extents for this pool          @11A\n                                            64561+*                                   during this interval.          @11A\n                                            64562+*                                                                  @11A\n 00000014                                   64563+SMF42JQD DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            64564+*                                   extents for this pool          @11A\n                                            64565+*                                   during this interval.          @11A\n                                            64566+*                                                                  @11A\n                                            64567+*                                   current                        @11A\n 00000018                                   64568+SMF42JQF DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            64569+*                                   extents for this pool          @11A\n                                            64570+*                                   during this interval.          @11A\n                                            64571+*                                                                  @11A\n 0000001C                                   64572+SMF42JQ7 DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            64573+*                                                                  @11A\n                                            64574+*                                                                  @11A\n                                            64575+* --------------------------------------------------------------   @11A\n                                            64576+* End    --- Buffer Pool Count Array Element - single system       @11A\n                                            64577+* --------------------------------------------------------------   @11A\n                                            64578+*                                                                  @11A\n                                            64579+* --------------------------------------------------------------   @11A\n                                            64580+* Start --  Buffer Manager Calculated Distribution Array           @11A\n                                            64581+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000004  64582+SMF420JG DSECT ,                                                   @11A 03-IGWSMF\n                                            64583+*                                   SINGLE SYSTEM                  @11A\n                                            64584+*                                                                  @11A\n 00000000                                   64585+SMF42JQP DS    1FL4                 Number of times calculated     @11A 03-IGWSMF\n                                            64586+*                                   value was within this range    @11A\n                                            64587+*                                   (across the sysplex)           @11A\n                                            64588+*                                                                  @11A\n                                            64589+* --------------------------------------------------------------   @11A\n                                            64590+* End   --  Buffer Manager Calculated Distribution Array           @11A\n                                            64591+* --------------------------------------------------------------   @11A\n                                            64592+*                                                                  @11A\n                                            64593+*  asdf  smf42jsa to smf42jsp moved from here\n                                            64594+*  The following sections are for above bar buffers                @64A\n                                            64595+*                                                                  @64A\n 00000000                00000000 000005C0  64596+SMF2A0JA DSECT ,                                                   @64A 03-IGWSMF\n                                            64597+*                                                                  @64A\n 00000000                                   64598+SMF2AJA1 DS    0D                  Sysplex Totals Section          @64A 03-IGWSMF\n                                            64599+*                                                                  @64A\n 00000000                                   64600+SMF2AJAC DS    0CL1384                                             @64A 03-IGWSMF\n                                            64601+*                                                                  @64A\n 00000000                                   64602+SMF2AJNA DS    1FL4                Interval Length. This is the    @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  266\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64603+*                                  Total Time of the Measurement   @64A\n                                            64604+*                                  Period  (in seconds) Total      @64A\n                                            64605+*                                                                  @64A\n 00000004                                   64606+SMF2AJ00 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            64607+*                                                                  @64A\n 00000010                                   64608+SMF2AJNB DS    CL16                Reserved                        @64A 03-IGWSMF\n                                            64609+*                                                                  @64A\n 00000020                                   64610+SMF2AJND DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            64611+*                                                                  @64A\n 00000028                                   64612+SMF2AJNE DS    2F                  Average CPU Time for all        @64A 03-IGWSMF\n                                            64613+*                                  Systems in the Sysplex.  This   @64A\n                                            64614+*                                  is the Amount of CPU Time       @64A\n                                            64615+*                                  (On Average) That Each System   @64A\n                                            64616+*                                  Consumed While Processing the   @64A\n                                            64617+*                                  Local Buffer Manager LRU        @64A\n                                            64618+*                                  algorithm                       @64A\n                                            64619+*                                                                  @64A\n 00000030                                   64620+SMF2AJNF DS    2F                  Total CPU Time for This         @64A 03-IGWSMF\n                                            64621+*                                  Record (in milli-seconds)       @64A\n                                            64622+*                                  (Sysplex Totals)                @64A\n                                            64623+*                                                                  @64A\n 00000038                                   64624+SMF2AJN0 DS    CL4                 Reserved                        @64A 03-IGWSMF\n                                            64625+*                                                                  @64A\n 0000003C                                   64626+SMF2AJN7 DS    1FL4                Total Number of Write Requests  @64A 03-IGWSMF\n                                            64627+*                                  (Sysplex Totals)                @64A\n                                            64628+*                                                                  @64A\n 00000040                                   64629+SMF2AJNG DS    1FL4                Average Number of Buffer        @64A 03-IGWSMF\n                                            64630+*                                  Manager LRU Intervals           @64A\n                                            64631+*                                  Processed During This Period.   @64A\n                                            64632+*                                  (Sysplex Totals)                @64A\n                                            64633+*                                                                  @64A\n 00000044                                   64634+SMF2AJNH DS    1FL4                Total Number of Buffer          @64A 03-IGWSMF\n                                            64635+*                                  Manager LRU Intervals           @64A\n                                            64636+*                                  Processed During This Period    @64A\n                                            64637+*                                  (Across the Sysplex)            @64A\n                                            64638+*                                                                  @64A\n 00000048                                   64639+SMF2AJNI DS    1FL4                Average Number of Buffer        @64A 03-IGWSMF\n                                            64640+*                                  Manager LRU Intervals Processed @64A\n                                            64641+*                                  Where BMF was Over the Goal     @64A\n                                            64642+*                                  And Normal Algorithms Were      @64A\n                                            64643+*                                  Bypassed to Reclaim Buffers     @64A\n                                            64644+*                                                                  @64A\n 0000004C                                   64645+SMF2AJNJ DS    1FL4                Total Number of Buffer Manager  @64A 03-IGWSMF\n                                            64646+*                                  LRU Intervals Processed         @64A\n                                            64647+*                                  Where BMF was Over the Goal     @64A\n                                            64648+*                                  And Normal Algorithms Were      @64A\n                                            64649+*                                  Bypassed to Reclaim Buffers     @64A\n                                            64650+*                                  (Across the Sysplex)            @64A\n                                            64651+*                                                                  @64A\n 00000050                                   64652+SMF2AJNK DS    1FL4                Average Number of Times That    @64A 03-IGWSMF\n                                            64653+*                                  BMF was Called on This Interval @64A\n                                            64654+*                                                                  @64A\n 00000054                                   64655+SMF2AJNL DS    1FL4                Total Number of Times That      @64A 03-IGWSMF\n                                            64656+*                                  BMF was Called on This Interval @64A\n                                            64657+*                                  (Across the Sysplex)            @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  267\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64658+*                                                                  @64A\n 00000058                                   64659+SMF2AJNM DS    1FL4                Average Number of BMF           @64A 03-IGWSMF\n                                            64660+*                                  Hits During This Interval       @64A\n                                            64661+*                                  (Sysplex Totals)                @64A\n                                            64662+*                                                                  @64A\n 0000005C                                   64663+SMF2AJNN DS    1FL4                Total Number of BMF             @64A 03-IGWSMF\n                                            64664+*                                  Hits During This Interval       @64A\n                                            64665+*                                  (Sysplex Totals)                @64A\n                                            64666+*                                                                  @64A\n 00000060                                   64667+SMF2AJNO DS    1FL4                Buffer Manager Number of        @64A 03-IGWSMF\n                                            64668+*                                  'Hits' Current Percentage       @64A\n                                            64669+*                                  During This Interval            @64A\n                                            64670+*                                  (Sysplex Totals)                @64A\n                                            64671+*                                                                  @64A\n 00000064                                   64672+SMF2AJNP DS    1FL4                Buffer Manager Number of        @64A 03-IGWSMF\n                                            64673+*                                  'Hits' Low Percentage During    @64A\n                                            64674+*                                  This Interval                   @64A\n                                            64675+*                                  (Sysplex Totals)                @64A\n                                            64676+*                                                                  @64A\n 00000068                                   64677+SMF2AJNQ DS    1FL4                Buffer Manager Number of        @64A 03-IGWSMF\n                                            64678+*                                  'Hits' High Percentage During   @64A\n                                            64679+*                                  This Interval                   @64A\n                                            64680+*                                  (Sysplex Totals)                @64A\n                                            64681+*                                                                  @64A\n 0000006C                                   64682+SMF2AJNR DS    1FL4                Buffer Manager Average          @64A 03-IGWSMF\n                                            64683+*                                  'Hits' During This Interval     @64A\n                                            64684+*                                  (Across the Sysplex)            @64A\n                                            64685+*                                                                  @64A\n 00000070                                   64686+SMF2AJNS DS    1FL4                Average Sysplex Cache Manager   @64A 03-IGWSMF\n                                            64687+*                                  Number of 'Hits' During This    @64A\n                                            64688+*                                  Interval                        @64A\n                                            64689+*                                  (Across the Sysplex)            @64A\n                                            64690+*                                                                  @64A\n 00000074                                   64691+SMF2AJNT DS    1FL4                Total Sysplex Cache Manager     @64A 03-IGWSMF\n                                            64692+*                                  Number of 'Hits' During This    @64A\n                                            64693+*                                  Interval                        @64A\n                                            64694+*                                  (Across the Sysplex)            @64A\n                                            64695+*                                                                  @64A\n 00000078                                   64696+SMF2AJNU DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            64697+*                                  Current Percentage              @64A\n                                            64698+*                                  During This Interval            @64A\n                                            64699+*                                  (Across the Sysplex)            @64A\n                                            64700+*                                                                  @64A\n 0000007C                                   64701+SMF2AJNV DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            64702+*                                  Low Percentage During This      @64A\n                                            64703+*                                  Interval                        @64A\n                                            64704+*                                  (Across the Sysplex)            @64A\n                                            64705+*                                                                  @64A\n 00000080                                   64706+SMF2AJNW DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            64707+*                                  High Percentage During This     @64A\n                                            64708+*                                  Interval                        @64A\n                                            64709+*                                  (Across the Sysplex)            @64A\n                                            64710+*                                                                  @64A\n 00000084                                   64711+SMF2AJNX DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            64712+*                                  Average Percentage During       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  268\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64713+*                                  This Interval                   @64A\n                                            64714+*                                  (Across the Sysplex)            @64A\n                                            64715+*                                                                  @64A\n 00000088                                   64716+SMF2AJNY DS    1FL4                Average DASD Number of 'Hits'   @64A 03-IGWSMF\n                                            64717+*                                  During This Interval            @64A\n                                            64718+*                                  (Across the Sysplex)            @64A\n                                            64719+*                                                                  @64A\n 0000008C                                   64720+SMF2AJNZ DS    1FL4                Total DASD Number of 'Hits'     @64A 03-IGWSMF\n                                            64721+*                                  During This Interval            @64A\n                                            64722+*                                  (Across the Sysplex)            @64A\n                                            64723+*                                                                  @64A\n 00000090                                   64724+SMF2AJOA DS    1FL4                DASD 'Hits' Current Percentage  @64A 03-IGWSMF\n                                            64725+*                                  During This Interval            @64A\n                                            64726+*                                  (Across the Sysplex)            @64A\n                                            64727+*                                                                  @64A\n 00000094                                   64728+SMF2AJOB DS    1FL4                DASD 'Hits' Low Percentage      @64A 03-IGWSMF\n                                            64729+*                                  During This Interval            @64A\n                                            64730+*                                  (Across the Sysplex)            @64A\n                                            64731+*                                                                  @64A\n 00000098                                   64732+SMF2AJOC DS    1FL4                DASD 'Hits' High Percentage     @64A 03-IGWSMF\n                                            64733+*                                  During This Interval            @64A\n                                            64734+*                                  (Across the Sysplex)            @64A\n                                            64735+*                                                                  @64A\n 0000009C                                   64736+SMF2AJOD DS    1FL4                DASD Average 'Hits'             @64A 03-IGWSMF\n                                            64737+*                                  During This Interval            @64A\n                                            64738+*                                  (Across the Sysplex)            @64A\n                                            64739+*                                                                  @64A\n 000000A0                                   64740+SMF2AJOE DS    CL512               Sysplex Average -               @64A 03-IGWSMF\n                                            64741+*                                  Buffer Pool Count Array         @64A\n                                            64742+*                                  This is a 16 Entry Array With   @64A\n                                            64743+*                                  Each Entry 32 Bytes Long.  The  @64A\n                                            64744+*                                  First Entry is for the 2K       @64A\n                                            64745+*                                  Storage Pool, the Second Entry  @64A\n                                            64746+*                                  Is for the 4K Storage Pool.     @64A\n                                            64747+*                                  The Format is Described Below.  @64A\n                                            64748+*                                  (Sysplex Totals)                @64A\n                                            64749+*                                  Each Entry is Mapped by         @64A\n                                            64750+*                                  DSECT SMF2A0JB                  @64A\n                                            64751+*                                                                  @64A\n 000002A0                                   64752+SMF2AJRI DS    CL512               Sysplex Wide Totals -           @64A 03-IGWSMF\n                                            64753+*                                  Buffer Pool Count Array         @64A\n                                            64754+*                                  This is a 16 Entry Array With   @64A\n                                            64755+*                                  Each Entry 32 Bytes Long.  The  @64A\n                                            64756+*                                  First Entry is for the 2K       @64A\n                                            64757+*                                  Storage Pool, the Second Entry  @64A\n                                            64758+*                                  Is for the 4K Storage Pool.     @64A\n                                            64759+*                                  The Format is Described Below.  @64A\n                                            64760+*                                  (Sysplex Totals)                @64A\n                                            64761+*                                  Each Entry is Mapped by         @64A\n                                            64762+*                                  DSECT SMF2A0JC                  @64A\n                                            64763+*                                                                  @64A\n 000004A0                                   64764+SMF2AJON DS    1FL4                Average Buffer Size Goal        @64A 03-IGWSMF\n                                            64765+*                                  (in megabytes) - Low Value      @64A\n                                            64766+*                                  (Sysplex Totals)                @64A\n                                            64767+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  269\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000004A4                                   64768+SMF2AJOO DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            64769+*                                  (in megabytes) - Low Value      @64A\n                                            64770+*                                  (Sysplex Totals)                @64A\n                                            64771+*                                                                  @64A\n 000004A8                                   64772+SMF2AJOP DS    1FL4                Average Buffer Size Goal        @64A 03-IGWSMF\n                                            64773+*                                  (in megabytes) - High Value     @64A\n                                            64774+*                                  (Sysplex Totals)                @64A\n                                            64775+*                                                                  @64A\n 000004AC                                   64776+SMF2AJOQ DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            64777+*                                  (in megabytes) - High Value     @64A\n                                            64778+*                                  (Sysplex Totals)                @64A\n                                            64779+*                                                                  @64A\n 000004B0                                   64780+SMF2AJOR DS    1FL4                Average Buffer Size Goal        @64A 03-IGWSMF\n                                            64781+*                                  (in megabytes) - Current Value  @64A\n                                            64782+*                                  (Sysplex Totals)                @64A\n                                            64783+*                                                                  @64A\n 000004B4                                   64784+SMF2AJOS DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            64785+*                                  (in megabytes) - Current Value  @64A\n                                            64786+*                                  (Sysplex Totals)                @64A\n                                            64787+*                                                                  @64A\n 000004B8                                   64788+SMF2AJOT DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            64789+*                                  (in megabytes) - Average Value  @64A\n                                            64790+*                                  (Sysplex Totals)                @64A\n                                            64791+*                                                                  @64A\n 000004BC                                   64792+SMF2AJOU DS    1FL4                Reserved                        @64A 03-IGWSMF\n                                            64793+*                                                                  @64A\n 000004C0                                   64794+SMF2AJOV DS    1FL4                Average Buffer Size Calculated  @64A 03-IGWSMF\n                                            64795+*                                  (in megabytes) - Low Value      @64A\n                                            64796+*                                  (Across the Sysplex)            @64A\n                                            64797+*                                                                  @64A\n 000004C4                                   64798+SMF2AJOW DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            64799+*                                  (in megabytes) - Low Value      @64A\n                                            64800+*                                  (Across the Sysplex)            @64A\n                                            64801+*                                                                  @64A\n 000004C8                                   64802+SMF2AJOX DS    1FL4                Average Buffer Size Calculated  @64A 03-IGWSMF\n                                            64803+*                                  (in megabytes) - High Value     @64A\n                                            64804+*                                  (Across the Sysplex)            @64A\n                                            64805+*                                                                  @64A\n 000004CC                                   64806+SMF2AJOY DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            64807+*                                  (in megabytes) - High Value     @64A\n                                            64808+*                                  (Across the Sysplex)            @64A\n                                            64809+*                                                                  @64A\n 000004D0                                   64810+SMF2AJOZ DS    1FL4                Average Buffer Size Calculated  @64A 03-IGWSMF\n                                            64811+*                                  (in megabytes) - Current Value  @64A\n                                            64812+*                                  (Sysplex Totals)                @64A\n                                            64813+*                                                                  @64A\n 000004D4                                   64814+SMF2AJRA DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            64815+*                                  (in megabytes) - Current Value  @64A\n                                            64816+*                                  (Sysplex Totals)                @64A\n                                            64817+*                                                                  @64A\n 000004D8                                   64818+SMF2AJRB DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            64819+*                                  (in megabytes) - Average Value  @64A\n                                            64820+*                                  (Sysplex Totals)                @64A\n                                            64821+*                                                                  @64A\n 000004DC                                   64822+SMF2AJRC DS    1FL4                Reserved                        @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  270\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64823+*                                                                  @64A\n 000004E0                                   64824+SMF2AJRD DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            64825+*                                                                  @64A\n 000004E8                                   64826+SMF2AJRE DS    CL64                Average Calculated Megabytes    @64A 03-IGWSMF\n                                            64827+*                                  Distribution Array.  This is a  @64A\n                                            64828+*                                  16 Entry Array Which Contains   @64A\n                                            64829+*                                  The Number of Times the Cal-    @64A\n                                            64830+*                                  culated Value Occurred Within   @64A\n                                            64831+*                                  A 100mb Span.  Entry 1= 0-99m,  @64A\n                                            64832+*                                  Entry 2 = 100-100m... Entry     @64A\n                                            64833+*                                  (Across the Sysplex)            @64A\n                                            64834+*                                  The Entry is Mapped by          @64A\n                                            64835+*                                  DSECT SMF2A0JD                  @64A\n                                            64836+*                                                                  @64A\n 00000528                                   64837+SMF2AJRG DS    CL64                Total Calculated Megabytes      @64A 03-IGWSMF\n                                            64838+*                                  Distribution Array.  This is a  @64A\n                                            64839+*                                  16 Entry Array Which Contains   @64A\n                                            64840+*                                  The Number of Times the Cal-    @64A\n                                            64841+*                                  culated Value Occurred Within   @64A\n                                            64842+*                                  A 100mb Span.  Entry 1= 0-99m,  @64A\n                                            64843+*                                  Entry 2 = 100-100m... Entry     @64A\n                                            64844+*                                  (Across the Sysplex)            @64A\n                                            64845+*                                  The Entry is Mapped by          @64A\n                                            64846+*                                  DSECT SMF2A0JE                  @64A\n                                            64847+*                                                                  @64A\n                                            64848+*  asdf  smf2ajta to smf2ajub moves to here\n                                            64849+*                                                                  @64A\n                                            64850+* Additional statistics for RMF                                    @64A\n                                            64851+*                                                                  @64A\n 00000568                                   64852+SMF2AJTA DS    1FL4                  Average Number of SCM Read    @64A 03-IGWSMF\n                                            64853+*                                    Requests Which Encountered    @64A\n                                            64854+*                                    Castout Lock Contention       @64A\n                                            64855+*                                    During This Interval          @64A\n                                            64856+*                                    (Across the Sysplex)          @64A\n                                            64857+*                                                                  @64A\n 0000056C                                   64858+SMF2AJTB DS    1FL4                  Total Number of SCM Read      @64A 03-IGWSMF\n                                            64859+*                                    Requests Which Encountered    @64A\n                                            64860+*                                    Castout Lock Contention       @64A\n                                            64861+*                                    During This Interval          @64A\n                                            64862+*                                    (Across the Sysplex)          @64A\n                                            64863+*                                                                  @64A\n 00000570                                   64864+SMF2AJTC DS    1FL4                  Average Number of SCM Read    @64A 03-IGWSMF\n                                            64865+*                                    Requests During This Interval @64A\n                                            64866+*                                    (Across the Sysplex)          @64A\n                                            64867+*                                                                  @64A\n 00000574                                   64868+SMF2AJTD DS    1FL4                  Total Number of SCM Read      @64A 03-IGWSMF\n                                            64869+*                                    Requests During This Interval @64A\n                                            64870+*                                    (across the sysplex)          @64A\n                                            64871+*                                                                  @64A\n 00000578                                   64872+SMF2AJTE DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            64873+*                                    Encountered Castout Lock      @64A\n                                            64874+*                                    Contention Current Percentage @64A\n                                            64875+*                                    During This Interval          @64A\n                                            64876+*                                    (Across the Sysplex)          @64A\n                                            64877+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  271\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000057C                                   64878+SMF2AJTF DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            64879+*                                    Encountered Castout Lock      @64A\n                                            64880+*                                    Contention Low Percentage     @64A\n                                            64881+*                                    During This Interval          @64A\n                                            64882+*                                    (Across the Sysplex)          @64A\n                                            64883+*                                                                  @64A\n 00000580                                   64884+SMF2AJTG DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            64885+*                                    Encountered Castout Lock      @64A\n                                            64886+*                                    Contention High Percentage    @64A\n                                            64887+*                                    During This Interval          @64A\n                                            64888+*                                    (Across the Sysplex)          @64A\n                                            64889+*                                                                  @64A\n 00000584                                   64890+SMF2AJTH DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            64891+*                                    Encountered Castout Lock      @64A\n                                            64892+*                                    Contention Average Percentage @64A\n                                            64893+*                                    During This Interval          @64A\n                                            64894+*                                    (Across the Sysplex)          @64A\n                                            64895+*                                                                  @64A\n 00000588                                   64896+SMF2AJTI DS    1FL4                  Average Number of Redos       @64A 03-IGWSMF\n                                            64897+*                                    During This Interval          @64A\n                                            64898+*                                    (Across the Sysplex)          @64A\n                                            64899+*                                                                  @64A\n 0000058C                                   64900+SMF2AJTJ DS    1FL4                  Total Number of Redos         @64A 03-IGWSMF\n                                            64901+*                                    During This Interval          @64A\n                                            64902+*                                    (Across the Sysplex)          @64A\n                                            64903+*                                                                  @64A\n 00000590                                   64904+SMF2AJTK DS    1FL4                  Average Number of Recursive   @64A 03-IGWSMF\n                                            64905+*                                    Redos During This Interval    @64A\n                                            64906+*                                    (Across the Sysplex)          @64A\n                                            64907+*                                                                  @64A\n 00000594                                   64908+SMF2AJTL DS    1FL4                  Total Number of Recursive     @64A 03-IGWSMF\n                                            64909+*                                    Redos During This Interval    @64A\n                                            64910+*                                    (Across the Sysplex)          @64A\n                                            64911+*                                                                  @64A\n 00000598                                   64912+SMF2AJTM DS    1FL4                  Redos Current Percentage      @64A 03-IGWSMF\n                                            64913+*                                    During This Interval          @64A\n                                            64914+*                                    (Across the Sysplex)          @64A\n                                            64915+*                                                                  @64A\n 0000059C                                   64916+SMF2AJTN DS    1FL4                  Redos Low Percentage          @64A 03-IGWSMF\n                                            64917+*                                    During This Interval          @64A\n                                            64918+*                                    (Across the Sysplex)          @64A\n                                            64919+*                                                                  @64A\n 000005A0                                   64920+SMF2AJTO DS    1FL4                  Redos High Percentage         @64A 03-IGWSMF\n                                            64921+*                                    During This Interval          @64A\n                                            64922+*                                    (Across the Sysplex)          @64A\n                                            64923+*                                                                  @64A\n 000005A4                                   64924+SMF2AJTP DS    1FL4                  Redos Average Percentage      @64A 03-IGWSMF\n                                            64925+*                                    During This Interval          @64A\n                                            64926+*                                    (Across the Sysplex)          @64A\n                                            64927+*                                                                  @64A\n 000005A8                                   64928+SMF2AJTQ DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            64929+*                                    Current Percentage During     @64A\n                                            64930+*                                    This Interval                 @64A\n                                            64931+*                                    (Across the Sysplex)          @64A\n                                            64932+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  272\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000005AC                                   64933+SMF2AJTR DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            64934+*                                    Low Percentage During         @64A\n                                            64935+*                                    This Interval                 @64A\n                                            64936+*                                    (Across the Sysplex)          @64A\n                                            64937+*                                                                  @64A\n 000005B0                                   64938+SMF2AJTS DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            64939+*                                    High Percentage During        @64A\n                                            64940+*                                    This Interval                 @64A\n                                            64941+*                                    (Across the Sysplex)          @64A\n                                            64942+*                                                                  @64A\n 000005B4                                   64943+SMF2AJTT DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            64944+*                                    Average Percentage During     @64A\n                                            64945+*                                    This Interval                 @64A\n                                            64946+*                                    (Across the Sysplex)          @64A\n                                            64947+*                                                                  @64A\n 000005B8                                   64948+SMF2AJUA DS    1FL4                  Average Number of             @64A 03-IGWSMF\n                                            64949+*                                    Number of Buffer Manager      @64A\n                                            64950+*                                    LRU Intervals Processed       @64A\n                                            64951+*                                    Where BMF was Over the Goal   @64A\n                                            64952+*                                    Accelerated the Aging, but    @64A\n                                            64953+*                                    Did not go into Panic Mode.   @64A\n                                            64954+*                                    (Across the Sysplex)          @64A\n                                            64955+*                                                                  @64A\n 000005BC                                   64956+SMF2AJUB DS    1FL4                  Total Number of               @64A 03-IGWSMF\n                                            64957+*                                    Number of Buffer Manager      @64A\n                                            64958+*                                    LRU Intervals Processed       @64A\n                                            64959+*                                    Where BMF was Over the Goal   @64A\n                                            64960+*                                    Accelerated the Aging, but    @64A\n                                            64961+*                                    Did not go into Panic Mode.   @64A\n                                            64962+*                                    (Across the Sysplex)          @64A\n                                            64963+*                                                                  @64A\n                                            64964+* --------------------------------------------------------------   @64A\n                                            64965+*  Coupling Facility Local Buffer Manager (SMF42 Subtype 19)       @64A\n                                            64966+*  Local Buffer Manager LRU Statistics Summary. Single System      @64A\n                                            64967+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000394  64968+SMF2A0PA DSECT ,                                                   @64A 03-IGWSMF\n                                            64969+*                                                                  @64A\n 00000000                                   64970+SMF2APA1 DS    0D                                                  @64A 03-IGWSMF\n                                            64971+*                                                                  @64A\n 00000000                                   64972+SMF2APAC DS    0CL832                                              @64A 03-IGWSMF\n                                            64973+*                                                                  @64A\n 00000000                                   64974+SMF2AJPA DS    1FL4                Interval length. This is the    @64A 03-IGWSMF\n                                            64975+*                                  total time of the measurement   @64A\n                                            64976+*                                  period. (in seconds) total      @64A\n                                            64977+*                                                                  @64A\n 00000004                                   64978+SMF2AJ01 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            64979+*                                                                  @64A\n 00000010                                   64980+SMF2AJPB DS    CL8                 MVS system name.                @64A 03-IGWSMF\n                                            64981+*                                                                  @64A\n 00000018                                   64982+SMF2AJPC DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            64983+*                                                                  @64A\n 00000020                                   64984+SMF2AJPD DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            64985+*                                                                  @64A\n 00000028                                   64986+SMF2AJPE DS    CL8                 Average CPU time spent by       @64A 03-IGWSMF\n                                            64987+*                                  BMF LRU processing during       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  273\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           64988+*                                  each cycle (in milli-seconds)   @64A\n                                            64989+*                                                                  @64A\n 00000030                                   64990+SMF2AJPF DS    CL8                 Total CPU time for this         @64A 03-IGWSMF\n                                            64991+*                                  record (in milli-seconds)       @64A\n                                            64992+*                                                                  @64A\n 00000038                                   64993+SMF2AJP1 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            64994+*                                                                  @64A\n 00000044                                   64995+SMF2AJP6 DS    1FL4                Total number of write requests  @64A 03-IGWSMF\n                                            64996+*                                                                  @64A\n 00000048                                   64997+SMF2AJPG DS    1FL4                Number of buffer manager        @64A 03-IGWSMF\n                                            64998+*                                  LRU intervals processed         @64A\n                                            64999+*                                  during this period.             @64A\n                                            65000+*                                                                  @64A\n 0000004C                                   65001+SMF2AJPH DS    1FL4                Number of buffer manager        @64A 03-IGWSMF\n                                            65002+*                                  LRU intervals processed         @64A\n                                            65003+*                                  where BMF was over the goal     @64A\n                                            65004+*                                  and normal algorithms were      @64A\n                                            65005+*                                  bypassed to reclaim buffers.    @64A\n                                            65006+*                                                                  @64A\n 00000050                                   65007+SMF2AJPI DS    1FL4                Total number of times that BMF  @64A 03-IGWSMF\n                                            65008+*                                  was called in this interval     @64A\n                                            65009+*                                                                  @64A\n 00000054                                   65010+SMF2AJP2 DS    1FL4                Number of buffer manager        @64A 03-IGWSMF\n                                            65011+*                                  LRU intervals processed         @64A\n                                            65012+*                                  where BMF was over the goal,    @64A\n                                            65013+*                                  accelerated the aging, but      @64A\n                                            65014+*                                  did not go into panic mode.     @64A\n                                            65015+*                                                                  @64A\n 00000058                                   65016+SMF2AJPJ DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65017+*                                  hits during this interval.      @64A\n                                            65018+*                                                                  @64A\n 0000005C                                   65019+SMF2AJPK DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65020+*                                  'hits' current percentage       @64A\n                                            65021+*                                  during this interval. Value     @64A\n                                            65022+*                                  for the last LRU cycle before   @64A\n                                            65023+*                                  the SMF record was processed    @64A\n                                            65024+*                                                                  @64A\n 00000060                                   65025+SMF2AJPL DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65026+*                                  'hits' low percentage during    @64A\n                                            65027+*                                  this interval.                  @64A\n                                            65028+*                                                                  @64A\n 00000064                                   65029+SMF2AJPM DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65030+*                                  'hits' high percentage during   @64A\n                                            65031+*                                  this interval.                  @64A\n                                            65032+*                                                                  @64A\n 00000068                                   65033+SMF2AJPN DS    1FL4                Buffer manager average          @64A 03-IGWSMF\n                                            65034+*                                  'hits' during this interval.    @64A\n                                            65035+*                                                                  @64A\n 0000006C                                   65036+SMF2AJP3 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65037+*                                                                  @64A\n 00000078                                   65038+SMF2AJPO DS    1FL4                Sysplex Cache manager           @64A 03-IGWSMF\n                                            65039+*                                  number of 'hits' during this    @64A\n                                            65040+*                                  interval.                       @64A\n                                            65041+*                                                                  @64A\n 0000007C                                   65042+SMF2AJPP DS    1FL4                Sysplex cache manager num       @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  274\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65043+*                                  of 'hits' current percentage    @64A\n                                            65044+*                                  during this interval. Value     @64A\n                                            65045+*                                  for the last LRU cycle before   @64A\n                                            65046+*                                  the SMF record was processed    @64A\n                                            65047+*                                                                  @64A\n 00000080                                   65048+SMF2AJPQ DS    1FL4                Sysplex Cache manager hits      @64A 03-IGWSMF\n                                            65049+*                                  low percentage during this      @64A\n                                            65050+*                                  interval.                       @64A\n                                            65051+*                                                                  @64A\n 00000084                                   65052+SMF2AJPR DS    1FL4                Sysplex Cache manager hits      @64A 03-IGWSMF\n                                            65053+*                                  high percentage during this     @64A\n                                            65054+*                                  interval.                       @64A\n                                            65055+*                                                                  @64A\n 00000088                                   65056+SMF2AJPS DS    1FL4                Sysplex Cache manager hits      @64A 03-IGWSMF\n                                            65057+*                                  average percentage during this  @64A\n                                            65058+*                                  interval.                       @64A\n                                            65059+*                                                                  @64A\n 0000008C                                   65060+SMF2AJP4 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65061+*                                                                  @64A\n 00000098                                   65062+SMF2AJPT DS    1FL4                DASD number of 'hits'           @64A 03-IGWSMF\n                                            65063+*                                  during this interval            @64A\n                                            65064+*                                                                  @64A\n 0000009C                                   65065+SMF2AJPU DS    1FL4                DASD number                     @64A 03-IGWSMF\n                                            65066+*                                  of 'hits' current percentage    @64A\n                                            65067+*                                  during this interval. Value     @64A\n                                            65068+*                                  for the last LRU cycle before   @64A\n                                            65069+*                                  the SMF record was processed    @64A\n                                            65070+*                                                                  @64A\n 000000A0                                   65071+SMF2AJPV DS    1FL4                DASD 'hits' low percentage      @64A 03-IGWSMF\n                                            65072+*                                  during this interval            @64A\n                                            65073+*                                                                  @64A\n 000000A4                                   65074+SMF2AJPW DS    1FL4                DASD 'hits' high percentage     @64A 03-IGWSMF\n                                            65075+*                                  during this interval            @64A\n                                            65076+*                                                                  @64A\n 000000A8                                   65077+SMF2AJPX DS    1FL4                DASD average 'hits' during      @64A 03-IGWSMF\n                                            65078+*                                  this interval                   @64A\n                                            65079+*                                                                  @64A\n 000000AC                                   65080+SMF2AJP5 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65081+*                                                                  @64A\n 000000B8                                   65082+SMF2AJPY DS    CL512               Buffer pool count array.        @64A 03-IGWSMF\n                                            65083+*                                  This is a 16 entry array with   @64A\n                                            65084+*                                  each entry 16 bytes long.  The  @64A\n                                            65085+*                                  first entry is for the 2K       @64A\n                                            65086+*                                  storage pool, the second entry  @64A\n                                            65087+*                                  is for the 4K storage pool.     @64A\n                                            65088+*                                  The format is described below.  @64A\n                                            65089+*                                  The entry is mapped by          @64A\n                                            65090+*                                  DSECT SMF2A0JF                  @64A\n                                            65091+*                                                                  @64A\n 000002B8                                   65092+SMF2AJQG DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65093+*                                  bytes) - low value              @64A\n                                            65094+*                                                                  @64A\n 000002C0                                   65095+SMF2AJQH DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65096+*                                  bytes) - high value.            @64A\n                                            65097+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  275\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000002C8                                   65098+SMF2AJQI DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65099+*                                  bytes) - current value.         @64A\n                                            65100+*                                                                  @64A\n 000002D0                                   65101+SMF2AJQJ DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65102+*                                  bytes) - average value.         @64A\n                                            65103+*                                                                  @64A\n 000002D8                                   65104+SMF2AJQK DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65105+*                                  (in megabytes) - low value      @64A\n                                            65106+*                                                                  @64A\n 000002E0                                   65107+SMF2AJQL DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65108+*                                  (in megabytes) - high value     @64A\n                                            65109+*                                                                  @64A\n 000002E8                                   65110+SMF2AJQM DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65111+*                                  (in megabytes) - current value  @64A\n                                            65112+*                                                                  @64A\n 000002F0                                   65113+SMF2AJQN DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65114+*                                  (in megabytes) - average value  @64A\n                                            65115+*                                                                  @64A\n 000002F8                                   65116+SMF2AJQ3 DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            65117+*                                                                  @64A\n 00000300                                   65118+SMF2AJQO DS    CL64                Calculated megabytes            @64A 03-IGWSMF\n                                            65119+*                                  distribution array.  this is a  @64A\n                                            65120+*                                  16 entry array which contains   @64A\n                                            65121+*                                  the number of times the cal-    @64A\n                                            65122+*                                  culated value occurred within   @64A\n                                            65123+*                                  a 100mb span.  Entry 1= 0-99m,  @64A\n                                            65124+*                                  entry 2 = 100-199m... entry     @64A\n                                            65125+*                                  The entry is mapped by          @64A\n                                            65126+*                                  DSECT SMF2A0JG                  @64A\n                                            65127+*                                                                  @64A\n                                            65128+* asdf  smf2ajsa to smf2ajsp  moves to here\n                                            65129+* Additional Statistics for RMF                                    @64A\n                                            65130+*                                                                  @64A\n 00000340                                   65131+SMF2AJSA DS    1FL4                 Number of SCM Read Requests    @64A 03-IGWSMF\n                                            65132+*                                   Which Encountered Castout      @64A\n                                            65133+*                                   Contention During This Interval@64A\n                                            65134+*                                                                  @64A\n 00000344                                   65135+SMF2AJSB DS    1FL4                 Number of SCM Read Requests    @64A 03-IGWSMF\n                                            65136+*                                   During This Interval           @64A\n                                            65137+*                                                                  @64A\n 00000348                                   65138+SMF2AJSC DS    1FL4                 Current Percentage of SCM Read @64A 03-IGWSMF\n                                            65139+*                                   Requests Which Encountered     @64A\n                                            65140+*                                   Castout Contention During      @64A\n                                            65141+*                                   This Interval                  @64A\n                                            65142+*                                   Value for the Last LRU Cycle   @64A\n                                            65143+*                                   Before the SMF Record was      @64A\n                                            65144+*                                   Processed                      @64A\n                                            65145+*                                                                  @64A\n 0000034C                                   65146+SMF2AJSD DS    1FL4                 Low Percentage During This     @64A 03-IGWSMF\n                                            65147+*                                   Interval for SMF2AJSC          @64A\n                                            65148+*                                                                  @64A\n 00000350                                   65149+SMF2AJSE DS    1FL4                 High Percentage During This    @64A 03-IGWSMF\n                                            65150+*                                   Interval for SMF2AJSC          @64A\n                                            65151+*                                                                  @64A\n 00000354                                   65152+SMF2AJSF DS    1FL4                 Average Percentage During This @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  276\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65153+*                                   Interval for SMF2AJSC          @64A\n                                            65154+*                                                                  @64A\n 00000358                                   65155+SMF2AJSG DS    1FL4                 Number of Redos During         @64A 03-IGWSMF\n                                            65156+*                                   This Interval                  @64A\n                                            65157+*                                                                  @64A\n 0000035C                                   65158+SMF2AJSH DS    1FL4                 Current Percentage of Redos    @64A 03-IGWSMF\n                                            65159+*                                   During This Interval.          @64A\n                                            65160+*                                   Value for the Last LRU Cycle   @64A\n                                            65161+*                                   Before the SMF Record was      @64A\n                                            65162+*                                   Processed                      @64A\n                                            65163+*                                                                  @64A\n 00000360                                   65164+SMF2AJSI DS    1FL4                 Low Percentage During This     @64A 03-IGWSMF\n                                            65165+*                                   Interval for SMF2AJSH          @64A\n                                            65166+*                                                                  @64A\n 00000364                                   65167+SMF2AJSJ DS    1FL4                 High Percentage During This    @64A 03-IGWSMF\n                                            65168+*                                   Interval for SMF2AJSH          @64A\n                                            65169+*                                                                  @64A\n 00000368                                   65170+SMF2AJSK DS    1FL4                 Average Percentage During      @64A 03-IGWSMF\n                                            65171+*                                   This Interval for SMF2AJSH     @64A\n                                            65172+*                                                                  @64A\n 0000036C                                   65173+SMF2AJSL DS    1FL4                 Number of Recursive Redos      @64A 03-IGWSMF\n                                            65174+*                                   During This Interval           @64A\n                                            65175+*                                                                  @64A\n 00000370                                   65176+SMF2AJSM DS    1FL4                 Current Percentage of          @64A 03-IGWSMF\n                                            65177+*                                   Recursive Redos During This    @64A\n                                            65178+*                                   Interval. Value for the Last   @64A\n                                            65179+*                                   LRU Cycle Before the SMF       @64A\n                                            65180+*                                   Record was Processed           @64A\n                                            65181+*                                                                  @64A\n 00000374                                   65182+SMF2AJSN DS    1FL4                 Low Percentage During This     @64A 03-IGWSMF\n                                            65183+*                                   Interval for SMF2AJSM          @64A\n                                            65184+*                                                                  @64A\n 00000378                                   65185+SMF2AJSO DS    1FL4                 High Percentage During This    @64A 03-IGWSMF\n                                            65186+*                                   Interval for SMF2AJSM          @64A\n                                            65187+*                                                                  @64A\n 0000037C                                   65188+SMF2AJSP DS    1FL4                 Average Percentage During This @64A 03-IGWSMF\n                                            65189+*                                   Interval for SMF2AJSM          @64A\n                                            65190+*                                                                  @64A\n 00000380                                   65191+SMF2AJUC DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65192+*                                    Low Amount                    @PJS\n                                            65193+*                                                                  @PJS\n 00000384                                   65194+SMF2AJUD DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65195+*                                    High Amount                   @PJS\n                                            65196+*                                                                  @PJS\n 00000388                                   65197+SMF2AJUE DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65198+*                                    Avg Amount                    @PJS\n                                            65199+*                                                                  @PJS\n 0000038C                                   65200+SMF2AJUF DS    1FL4                  Fixed Storage Amount          @PJS 03-IGWSMF\n                                            65201+*                                                                  @PJS\n 00000390                                   65202+SMF2AJUG DS    1FL4                  Real Storage Percentage       @PJS 03-IGWSMF\n                                            65203+*                                                                  @PJS\n                                            65204+* --------------------------------------------------------------   @64A\n                                            65205+* Start  --- Buffer Pool Count Array Element -  AVERAGE            @64A\n                                            65206+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000020  65207+SMF2A0JB DSECT ,                    Entry Mapping                  @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  277\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65208+*                                                                  @64A\n 00000000                                   65209+SMF2AJOF DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65210+*                                   Low value of the number of     @64A\n                                            65211+*                                   BMF buffers for this pool      @64A\n                                            65212+*                                   during this interval.          @64A\n                                            65213+*                                   (sysplex totals)               @64A\n                                            65214+*                                                                  @64A\n 00000004                                   65215+SMF2AJOG DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65216+*                                   High value of the number of    @64A\n                                            65217+*                                   BMF buffers for this pool      @64A\n                                            65218+*                                   during this interval.          @64A\n                                            65219+*                                   (sysplex totals)               @64A\n                                            65220+*                                                                  @64A\n 00000008                                   65221+SMF2AJOH DS    1FL4                 Average current                @64A 03-IGWSMF\n                                            65222+*                                   value of the number of         @64A\n                                            65223+*                                   BMF buffers for this pool      @64A\n                                            65224+*                                   during this interval.          @64A\n                                            65225+*                                   (sysplex totals)               @64A\n                                            65226+*                                                                  @64A\n 0000000C                                   65227+SMF2AJOI DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65228+*                                                                  @64A\n 00000010                                   65229+SMF2AJOJ DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65230+*                                   Low value of the number of     @64A\n                                            65231+*                                   extents for this pool          @64A\n                                            65232+*                                   during this interval.          @64A\n                                            65233+*                                   (sysplex totals)               @64A\n                                            65234+*                                                                  @64A\n 00000014                                   65235+SMF2AJOK DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65236+*                                   High value of the number of    @64A\n                                            65237+*                                   extents for this pool          @64A\n                                            65238+*                                   during this interval.          @64A\n                                            65239+*                                   (sysplex totals)               @64A\n                                            65240+*                                                                  @64A\n 00000018                                   65241+SMF2AJOL DS    1FL4                 Average current                @64A 03-IGWSMF\n                                            65242+*                                   value of the number of         @64A\n                                            65243+*                                   extents for this pool          @64A\n                                            65244+*                                   during this interval.          @64A\n                                            65245+*                                   (sysplex totals)               @64A\n                                            65246+*                                                                  @64A\n 0000001C                                   65247+SMF2AJOM DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65248+*                                                                  @64A\n                         00000020           65249+SMF2A0JB_LEN EQU *-SMF2A0JB         Length of single entry         @64A 03-IGWSMF\n                                            65250+*                                                                  @64A\n                                            65251+* --------------------------------------------------------------   @64A\n                                            65252+* End    --- Buffer Pool Count Array Element -  AVERAGE            @64A\n                                            65253+* --------------------------------------------------------------   @64A\n                                            65254+*                                                                  @64A\n                                            65255+* --------------------------------------------------------------   @64A\n                                            65256+* Start  --- Buffer Pool Count Array Element - Sysplex Totals      @64A\n                                            65257+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000020  65258+SMF2A0JC DSECT ,                    Entry Mapping                  @64A 03-IGWSMF\n                                            65259+*                                   Sysplex Wide Totals            @64A\n                                            65260+*                                                                  @64A\n 00000000                                   65261+SMF2AJRJ DS    1FL4                 Low value of the number of     @64A 03-IGWSMF\n                                            65262+*                                   BMF buffers for this pool      @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  278\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65263+*                                   during this interval.          @64A\n                                            65264+*                                   (sysplex totals)               @64A\n                                            65265+*                                                                  @64A\n 00000004                                   65266+SMF2AJRK DS    1FL4                 High value of the number of    @64A 03-IGWSMF\n                                            65267+*                                   BMF buffers for this pool      @64A\n                                            65268+*                                   during this interval.          @64A\n                                            65269+*                                   (sysplex totals)               @64A\n                                            65270+*                                                                  @64A\n 00000008                                   65271+SMF2AJRL DS    1FL4                 Current value of the number of @64A 03-IGWSMF\n                                            65272+*                                   BMF buffers for this pool      @64A\n                                            65273+*                                   during this interval.          @64A\n                                            65274+*                                   (sysplex totals)               @64A\n                                            65275+*                                                                  @64A\n 0000000C                                   65276+SMF2AJRM DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65277+*                                                                  @64A\n 00000010                                   65278+SMF2AJRN DS    1FL4                 Low value of the number of     @64A 03-IGWSMF\n                                            65279+*                                   extents for this pool          @64A\n                                            65280+*                                   during this interval.          @64A\n                                            65281+*                                   (sysplex totals)               @64A\n                                            65282+*                                                                  @64A\n 00000014                                   65283+SMF2AJRO DS    1FL4                 High value of the number of    @64A 03-IGWSMF\n                                            65284+*                                   extents for this pool          @64A\n                                            65285+*                                   during this interval.          @64A\n                                            65286+*                                   (sysplex totals)               @64A\n                                            65287+*                                                                  @64A\n 00000018                                   65288+SMF2AJRP DS    1FL4                 Current value of the number of @64A 03-IGWSMF\n                                            65289+*                                   extents for this pool          @64A\n                                            65290+*                                   during this interval.          @64A\n                                            65291+*                                   (sysplex totals)               @64A\n                                            65292+*                                                                  @64A\n 0000001C                                   65293+SMF2AJRQ DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65294+*                                                                  @64A\n                                            65295+* --------------------------------------------------------------   @64A\n                                            65296+* End    --- Buffer Pool Count Array Element - sysplex totals      @64A\n                                            65297+* --------------------------------------------------------------   @64A\n                                            65298+*                                                                  @64A\n                                            65299+* --------------------------------------------------------------   @64A\n                                            65300+* Start --  Buffer Manager Calculated Distribution Array - Avg.    @64A\n                                            65301+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000004  65302+SMF2A0JD DSECT ,                                                   @64A 03-IGWSMF\n                                            65303+*                                                                  @64A\n 00000000                                   65304+SMF2AJRF DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65305+*                                   Number of times calculated     @64A\n                                            65306+*                                   value was within this range    @64A\n                                            65307+*                                   (across the sysplex)           @64A\n                                            65308+*                                                                  @64A\n                                            65309+*                                                                  @64A\n                                            65310+* --------------------------------------------------------------   @64A\n                                            65311+* End   --  Buffer Manager Calculated Distribution Array - Avg.    @64A\n                                            65312+* --------------------------------------------------------------   @64A\n                                            65313+*                                                                  @64A\n                                            65314+* --------------------------------------------------------------   @64A\n                                            65315+* Start --  Buffer Manager Calculated Distribution Array - Total   @64A\n                                            65316+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000004  65317+SMF2A0JE DSECT ,                                                   @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  279\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65318+*                                                                  @64A\n 00000000                                   65319+SMF2AJRH DS    1FL4                 Total                          @64A 03-IGWSMF\n                                            65320+*                                   Number of times calculated     @64A\n                                            65321+*                                   value was within this range    @64A\n                                            65322+*                                   (across the sysplex)           @64A\n                                            65323+*                                                                  @64A\n                                            65324+* --------------------------------------------------------------   @64A\n                                            65325+* End   --  Buffer Manager Calculated Distribution Array - Total   @64A\n                                            65326+* --------------------------------------------------------------   @64A\n                                            65327+*  asdf  smf2ajta to smf2ajub moved from here\n                                            65328+*                                                                  @64A\n                                            65329+* --------------------------------------------------------------   @64A\n                                            65330+* Start  --- Buffer Pool Count Array Element - Single System       @64A\n                                            65331+* --------------------------------------------------------------   @64A\n                                            65332+*                                                                  @64A\n 00000000                00000000 00000020  65333+SMF2A0JF DSECT ,                    Entry Mapping                  @64A 03-IGWSMF\n                                            65334+*                                   Single System                  @64A\n                                            65335+*                                                                  @64A\n 00000000                                   65336+SMF2AJPZ DS    1FL4                 Low Value of the Number of     @64A 03-IGWSMF\n                                            65337+*                                   BMF Buffers for This Pool      @64A\n                                            65338+*                                   During This Interval.          @64A\n                                            65339+*                                                                  @64A\n 00000004                                   65340+SMF2AJQA DS    1FL4                 High Value of the Number of    @64A 03-IGWSMF\n                                            65341+*                                   BMF Buffers for This Pool      @64A\n                                            65342+*                                   During this Interval.          @64A\n                                            65343+*                                                                  @64A\n 00000008                                   65344+SMF2AJQB DS    1FL4                 Current Value of the Number of @64A 03-IGWSMF\n                                            65345+*                                   BMF Buffers for This Pool      @64A\n                                            65346+*                                   During This Interval.          @64A\n                                            65347+*                                                                  @64A\n 0000000C                                   65348+SMF2AJQ6 DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65349+*                                                                  @64A\n 00000010                                   65350+SMF2AJQC DS    1FL4                 Low Value of the Number of     @64A 03-IGWSMF\n                                            65351+*                                   Extents for This Pool          @64A\n                                            65352+*                                   During This Interval.          @64A\n                                            65353+*                                                                  @64A\n 00000014                                   65354+SMF2AJQD DS    1FL4                 High Value of the Number of    @64A 03-IGWSMF\n                                            65355+*                                   Extents for This Pool          @64A\n                                            65356+*                                   During This Interval.          @64A\n                                            65357+*                                                                  @64A\n 00000018                                   65358+SMF2AJQF DS    1FL4                 Current Value of the Number of @64A 03-IGWSMF\n                                            65359+*                                   Extents for This Pool          @64A\n                                            65360+*                                   During This Interval.          @64A\n                                            65361+*                                                                  @64A\n 0000001C                                   65362+SMF2AJQ7 DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65363+*                                                                  @64A\n                                            65364+* --------------------------------------------------------------   @64A\n                                            65365+* End    --- Buffer Pool Count Array Element - Single System       @64A\n                                            65366+* --------------------------------------------------------------   @64A\n                                            65367+*                                                                  @64A\n                                            65368+* --------------------------------------------------------------   @64A\n                                            65369+* Start --  Buffer Manager Calculated Distribution Array           @64A\n                                            65370+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000004  65371+SMF2A0JG DSECT ,                                                   @64A 03-IGWSMF\n                                            65372+*                                   SINGLE SYSTEM                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  280\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65373+*                                                                  @64A\n 00000000                                   65374+SMF2AJQP DS    1FL4                 Number of Times Calculated     @64A 03-IGWSMF\n                                            65375+*                                   Value was Within This Range    @64A\n                                            65376+*                                   (Across the Sysplex)           @64A\n                                            65377+*                                                                  @64A\n                                            65378+* --------------------------------------------------------------   @64A\n                                            65379+* End   --  Buffer Manager Calculated Distribution Array           @64A\n                                            65380+* --------------------------------------------------------------   @64A\n                                            65381+*                                                                  @64A\n                                            65382+* asdf  smf2ajsa to smf2ajsp  moved from here\n                                            65383+*                                                                  @64A\n                                            65384+*\n                                            65385+*\n                                            65386+* -------------------------------------------------------------- @L2A\n                                            65387+*    STOW Initialize (SMF 42 subtype 20)                         @L2A\n                                            65388+*    job and data set information                                @L2A\n                                            65389+* -------------------------------------------------------------- @L2A\n                                            65390+*\n 00000000                00000000 0000004A  65391+SMF420KA DSECT ,                                                 @L2A   03-IGWSMF\n 00000000                                   65392+SMF42KJB DS    CL8                  Job name, started task       @L2A   03-IGWSMF\n                                            65393+*                                    control, or time sharing    @L2A\n                                            65394+*                                    user who issued the STOW    @L2A\n                                            65395+*                                    Initialize.                 @L2A\n 00000008                                   65396+SMF42KST DS    CL8                  Step name                    @L2A   03-IGWSMF\n 00000010                                   65397+SMF42KPR DS    CL8                  Proc name or blanks          @L2A   03-IGWSMF\n 00000018                                   65398+SMF42KDS DS    CL44                 Data set name                @L2A   03-IGWSMF\n 00000044                                   65399+SMF42KVS DS    CL6                  VOLSER                       @L2A   03-IGWSMF\n 00000000                00000000 00000050  65400+SMF420KB DSECT ,                    Additional Information       @26A   03-IGWSMF\n                                            65401+*    section B                                                   @26A\n                                            65402+*    This section follows immediately after SMF420KA section.    @26A\n                                            65403+*    This section will only be generated on systems where apar   @26A\n                                            65404+*    apar OA25068 is installed.                                  @26A\n 00000000                                   65405+SMF42KUI DS    CL80                userid token of the caller of @26A   03-IGWSMF\n                                            65406+*                                  STOW -- mapped by ICHRUTKN    @26A\n                                            65407+* -------------------------------------------------------------- @L2A\n                                            65408+*    Member Delete   (SMF 42 subtype 21)                         @L2A\n                                            65409+*    first tripple - job and data set information                @L2A\n                                            65410+* -------------------------------------------------------------- @L2A\n 00000000                00000000 0000008F  65411+SMF420LA DSECT ,                                                 @L2A   03-IGWSMF\n 00000000                                   65412+SMF42LJB DS    CL8                  Job name, started task       @L2A   03-IGWSMF\n                                            65413+*                                    control, or time sharing    @L2A\n                                            65414+*                                    user who issued the STOW    @L2A\n                                            65415+*                                    or DESERV Delete to delete  @L2A\n                                            65416+*                                    a PDS or PDSE member        @L2A\n 00000008                                   65417+SMF42LST DS    CL8                  Step name                    @L2A   03-IGWSMF\n 00000010                                   65418+SMF42LPR DS    CL8                  Proc name or blanks          @L2A   03-IGWSMF\n 00000018                                   65419+SMF42LDS DS    CL44                 Data set name                @L2A   03-IGWSMF\n 00000044                                   65420+SMF42LVS DS    CL6                  VOLSER                       @L2A   03-IGWSMF\n 0000004A                                   65421+SMF42LNL DS    H                    Length of the member name    @L2A   03-IGWSMF\n                                            65422+*                                    which was deleted (SMF42LMN)@L2A\n 0000004C                                   65423+SMF42LFL DS    1BL1                 Flags                        @L2A   03-IGWSMF\n                         00000080           65424+SMF42LXA EQU   X'80'                Some aliases were excluded from     03-IGWSMF\n                                            65425+*                                    record because the record len\n                                            65426+*                                    would exceed the SMF max    @L2A\n 0000004D                                   65427+         DS    1CL3                 Reserved                     @L2A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  281\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000050                                   65428+SMF42LMN DS    CL63                 Member name that was         @L2A   03-IGWSMF\n                                            65429+*                                    deleted. Maximum length is  @L2A\n                                            65430+*                                    63. Actual length used is   @L2A\n                                            65431+*                                    determined by SMF42LNL.     @L2A\n                                            65432+* -------------------------------------------------------------- @L2A\n                                            65433+*    section B                                                   @26A\n                                            65434+*    Member Delete   (SMF 42 subtype 21)                         @L2A\n                                            65435+*    second triplet - alias names deleted in sympathy            @L2A\n                                            65436+* -------------------------------------------------------------- @L2A\n 00000000                00000000 00000002  65437+SMF420LB DSECT ,                                                 @L2A   03-IGWSMF\n 00000000                                   65438+SMF42LNA DS    H                    Number of (PDSE member)      @L2A   03-IGWSMF\n                                            65439+*                                    alias names which were also @L2A\n                                            65440+*                                    deleted because SMF42LMN is @L2A\n                                            65441+*                                    a primary name              @L2A\n 00000002                                   65442+SMF42LAA DS    0C                   alias name list array.       @L2A   03-IGWSMF\n                                            65443+*                                    contains SMF42LNA number of @L2A\n                                            65444+*                                    entries, each mapped by     @L2A\n                                            65445+*                                    SMF42LA0 dsect.             @L2A\n 00000000                00000000 00000041  65446+SMF42LA0 DSECT ,                    Alias name section           @L2A   03-IGWSMF\n 00000000                                   65447+SMF42LAL DS    H                    Length of the alias name that@L2A   03-IGWSMF\n                                            65448+*                                    SMF42LAN that was deleted   @L2A\n                                            65449+*                                    in sympathy                 @L2A\n 00000002                                   65450+SMF42LAN DS    CL63                 Alias name that was deleted  @L2A   03-IGWSMF\n                                            65451+*                                    in sympathy. Maximum length @L2A\n                                            65452+*                                    is 63, but the length used  @L2A\n                                            65453+*                                    is determined by SMF42LAL.  @L2A\n 00000000                00000000 00000050  65454+SMF420LC DSECT ,                    Additional Information       @26A   03-IGWSMF\n                                            65455+*    section C                                                   @26A\n                                            65456+*    this section follows immediately after SMF420LBs\n                                            65457+*    array of member names deleted in sympathy.\n                                            65458+*    If no member names deleted in sympathy then this\n                                            65459+*    section is located immediately after SMF420LA.  This section will\n                                            65460+*    only be generated on systems where apar OA25068 is installed.\n                                            65461+*    This section will always be generated even if it means not\n                                            65462+*    reporting on some of the aliases deleted in sympathy.       @26A\n 00000000                                   65463+SMF42LUI DS    CL80                 userid token of the caller of STOW  03-IGWSMF\n                                            65464+*                                   or DESERV --mapped by ICHRUTKN @26A\n                                            65465+* ---------------------------------------------------------------- @MZA\n                                            65466+*    DFSMSrmm Audit Information (SMF 42 subtype 22)                @MZA\n                                            65467+*    first triplet - audit section                                 @MZA\n                                            65468+* ---------------------------------------------------------------- @MZA\n 00000000                00000000 0000004C  65469+SMF420MA DSECT ,                                                   @MZA 03-IGWSMF\n 00000000                                   65470+SMF42MJBN      DS    1CL8           Job name                       @MZA 03-IGWSMF\n 00000008                                   65471+SMF42MRST      DS    1CL4           Reader start time              @MZA 03-IGWSMF\n 0000000C                                   65472+SMF42MRSD      DS    1CL4           Reader start date              @MZA 03-IGWSMF\n 00000010                                   65473+SMF42MUID      DS    1CL8           RACF user id                   @MZA 03-IGWSMF\n 00000018                                   65474+SMF42MACT      DS    1CL1           Activity type:                 @MZA 03-IGWSMF\n                                            65475+*                                   A - Record added               @MZA\n                                            65476+*                                   C - Record changed             @MZA\n                                            65477+*                                   D - Record deleted             @MZA\n 00000019                                   65478+SMF42MFG1      DS    1XL1           Flag 1                         @MZA 03-IGWSMF\n                         00000080           65479+SMF42MLIS      EQU   X'80'          Last in set                    @MZA 03-IGWSMF\n                         00000040           65480+SMF42MJRN      EQU   X'40'          Journal record available       @MZA 03-IGWSMF\n 0000001A                                   65481+SMF42MCVTSFLG  DS    1XL1           Virtual tape server flag       @MZA 03-IGWSMF\n 0000001B                                   65482+SMF42MCENABLE  DS    1XL1           Control record enable flag     @MZA 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  282\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000001C                                   65483+SMF42MLDTO     DS    1DL8           Local time/date offset         @MZA 03-IGWSMF\n 00000024                                   65484+SMF42MCJNRECN  DS    1FL4           Journal record number          @MZA 03-IGWSMF\n 00000028                                   65485+SMF42MJNRECNUM DS    1FL4           Number of next jn rec written  @MZA 03-IGWSMF\n 0000002C                                   65486+SMF42MCUPDVSI  DS    1FL4           VSI when MCUPDACT set on       @MZA 03-IGWSMF\n 00000030                                   65487+SMF42MCVSICNT  DS    1FL4           VSI control count              @MZA 03-IGWSMF\n 00000034                                   65488+SMF42MCVRLCTK  DS    1CL8           VRSEL last change token        @MZA 03-IGWSMF\n 0000003C                                   65489+SMF42MCVRSCNT  DS    1FL4           Current VRS change counter     @MZA 03-IGWSMF\n 00000040                                   65490+SMF42MCVRSRUN  DS    1FL4           Last HSKP VRS change counter   @MZA 03-IGWSMF\n 00000044                                   65491+SMF42MCSYNCTS  DS    0CL8           Catsynch time stamp            @MZA 03-IGWSMF\n 00000044                                   65492+SMF42MCSYNCDT  DS    1FL4           Catsynch date                  @MZA 03-IGWSMF\n 00000048                                   65493+SMF42MCSYNCTM  DS    1FL4           Catsynch time                  @MZA 03-IGWSMF\n 0000004C                                   65494+SMF42MEND      DS    0F             1st data section end           @MZA 03-IGWSMF\n                         0000004C           65495+SMF420MA_LEN   EQU *-SMF420MA       Length of single entry         @MZA 03-IGWSMF\n                                            65496+* ---------------------------------------------------------------- @MZA\n                                            65497+*    DFSMSrmm Security Information (SMF 42 subtype 23)             @MZA\n                                            65498+*    first triplet - Security section                              @MZA\n                                            65499+* ---------------------------------------------------------------- @MZA\n 00000000                00000000 00000072  65500+SMF420NA DSECT ,                                                   @MZA 03-IGWSMF\n 00000000                                   65501+SMF42NJBN    DS    1CL8             Job name                       @MZA 03-IGWSMF\n 00000008                                   65502+SMF42NRST    DS    1CL4             Reader start time              @MZA 03-IGWSMF\n 0000000C                                   65503+SMF42NRSD    DS    1CL4             Reader start date              @MZA 03-IGWSMF\n 00000010                                   65504+SMF42NUIF    DS    1CL8             User identification            @MZA 03-IGWSMF\n 00000018                                   65505+SMF42NUID    DS    1CL8             RACF user id                   @MZA 03-IGWSMF\n 00000020                                   65506+SMF42NCGP    DS    1CL8             RACF connect group             @MZA 03-IGWSMF\n 00000028                                   65507+SMF42NVER    DS    1CL1             Record version identifier (2)  @MZA 03-IGWSMF\n 00000029                                   65508+SMF42NACT    DS    1CL1             Activity type:                 @MZA 03-IGWSMF\n                                            65509+*                                   C - Dataset create             @MZA\n                                            65510+*                                   E - Dataset extend             @MZA\n                                            65511+*                                   U - Dataset update             @MZA\n                                            65512+*                                   R - Dataset read access        @MZA\n                                            65513+*                                   D - Dataset delete             @MZA\n 0000002A                                   65514+SMF42NSTP    DS    1XL1             Security type                  @MZA 03-IGWSMF\n                                            65515+*                                      (classification number)     @MZA\n 0000002B                                   65516+             DS    1XL1             Reserved                       @MZA 03-IGWSMF\n 0000002C                                   65517+SMF42NDSN    DS    1CL44            Dataset name                   @MZA 03-IGWSMF\n 00000058                                   65518+SMF42NVOL    DS    1CL6             Volume serial number           @MZA 03-IGWSMF\n 0000005E                                   65519+SMF42NUNT    DS    1CL8             Device type                    @MZA 03-IGWSMF\n 00000066                                   65520+SMF42NDSQ    DS    1HL2             Dataset sequence number        @MZA 03-IGWSMF\n 00000068                                   65521+SMF42NVSQ    DS    1XL2             Volume sequence number         @MZA 03-IGWSMF\n 0000006A                                   65522+SMF42NLDTO   DS    1DL8             Local time/date offset         @MZA 03-IGWSMF\n 00000072                                   65523+SMF42NEND    DS    0C               1st data section end           @MZA 03-IGWSMF\n                         00000072           65524+SMF420NA_LEN EQU *-SMF420NA         Length of single entry         @MZA 03-IGWSMF\n                                            65525+*------------------------------------------------------------      @26A\n                                            65526+* Member Add or Replace (SMF 42 subtype 24)                        @26A\n                                            65527+* job and data set information                                     @26A\n                                            65528+*------------------------------------------------------------      @26A\n 00000000                00000000 0000008F  65529+SMF421PA DSECT ,                                                   @26A 03-IGWSMF\n 00000000                                   65530+SMF42PJB     DS    CL8              Job name, started task control, or  03-IGWSMF\n                                            65531+*                                    time sharing user who issued\n                                            65532+*                                    the STOW (add or replace) or\n                                            65533+*                                    DESERV PUT                    @26A\n 00000008                                   65534+SMF42PST     DS    CL8              Step name                      @26A 03-IGWSMF\n 00000010                                   65535+SMF42PPR     DS    CL8              Proc name or blanks            @26A 03-IGWSMF\n 00000018                                   65536+SMF42PDS     DS    CL44             Data set name                  @26A 03-IGWSMF\n 00000044                                   65537+SMF42PVS     DS    CL6              VOLSER                         @26A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  283\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000004A                                   65538+SMF42PML     DS    H                Length of the member name which was 03-IGWSMF\n                                            65539+*                                   added or replaced (SMF42PMN)   @26A\n 0000004C                                   65540+SMF42PF1     DS    CL1              Flags                          @26A 03-IGWSMF\n                         00000080           65541+SMF42PXA     EQU   X'80'            Some aliases were excluded from     03-IGWSMF\n                                            65542+*                                    the record because the record len\n                                            65543+*                                    would have exceed the SMF max\n                                            65544+*                                    record length                 @26A\n                         00000040           65545+SMF42PAD     EQU   X'40'            on - member was added new      @26A 03-IGWSMF\n                                            65546+*                                   off - member replaced a prior  @26A\n                                            65547+*                                         version of the same name @26A\n 0000004D                                   65548+             DS    1CL3             Reserved                       @26A 03-IGWSMF\n 00000050                                   65549+SMF42PMN     DS    CL63             Member name that was added or       03-IGWSMF\n                                            65550+*                                    replaced                      @26A\n 00000000                00000000 00000002  65551+SMF420PB DSECT ,                                                   @26A 03-IGWSMF\n                                            65552+*------------------------------------------------------------      @26A\n                                            65553+* section B                                                        @26A\n                                            65554+* Member Add or Replace (SMF 42 subtype 24)                        @26A\n                                            65555+* alias names deleted in sympathy                                  @26A\n                                            65556+*------------------------------------------------------------      @26A\n 00000000                                   65557+SMF42P#A     DS    H                Number of alias names that were     03-IGWSMF\n                                            65558+*                                   deleted because SMF42PMN is\n                                            65559+*                                   a PDSE primary member name.    @26A\n 00000002                                   65560+SMF42PAA     DS    0C               Alias name array. contains SMF42P#A 03-IGWSMF\n                                            65561+*                                    number of entries, each mapped by\n                                            65562+*                                    SMF42PA0 structure.           @26A\n 00000000                00000000 00000041  65563+SMF42PA0 DSECT ,                    Alias name section             @26A 03-IGWSMF\n 00000000                                   65564+SMF42PAL     DS    H                Length of the alias name which was  03-IGWSMF\n                                            65565+*                                    deleted in sympathy.          @26A\n 00000002                                   65566+SMF42PAN DS    CL63                 Alias name that was deleted         03-IGWSMF\n                                            65567+*                                    in sympathy.  Maximum length\n                                            65568+*                                    is 63, but the length used is\n                                            65569+*                                    indicated by SMF42PAL        !@26A\n 00000000                00000000 00000050  65570+SMF420PC DSECT ,                    Additional Information         @26A 03-IGWSMF\n                                            65571+*    section C                                                     @26A\n                                            65572+*    this section follows immediately after SMF420PBs\n                                            65573+*    array of member names deleted in sympathy.\n                                            65574+*    If no member names deleted in sympathy then this\n                                            65575+*    section is located immediately after SMF421PA.  This section will\n                                            65576+*    only be generated on systems where apar OA25068 is installed.\n                                            65577+*    This section will always be generated even if it means not\n                                            65578+*    reporting on some of the aliases deleted in sympathy.         @26A\n 00000000                                   65579+SMF42PUI DS    CL80                 USERID token of caller of STOW or   03-IGWSMF\n                                            65580+*                                    DESERV -- mapped by ICHRUTKN. @26A\n                                            65581+*------------------------------------------------------------      @26A\n                                            65582+* Member Rename (SMF 42 subtype 25)                                @26A\n                                            65583+* job and data set information                                     @26A\n                                            65584+*------------------------------------------------------------      @26A\n 00000000                00000000 0000008B  65585+SMF420QA DSECT ,                                                   @26A 03-IGWSMF\n 00000000                                   65586+SMF42QJB     DS    CL8              Job name, started task control, or  03-IGWSMF\n                                            65587+*                                   time sharing user who issued the\n                                            65588+*                                   STOW change or DESERV rename   @26A\n 00000008                                   65589+SMF42QST     DS    CL8              Step name                      @26A 03-IGWSMF\n 00000010                                   65590+SMF42QPR     DS    CL8              Proc name or blanks            @26A 03-IGWSMF\n 00000018                                   65591+SMF42QDS     DS    CL44             Data set name                  @26A 03-IGWSMF\n 00000044                                   65592+SMF42QVS     DS    CL6              VOLSER                         @26A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  284\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000004A                                   65593+SMF42QML     DS    H                Length of the member name after the 03-IGWSMF\n                                            65594+*                                    the rename         (SMF42QMN) @26A\n 0000004C                                   65595+SMF42QMN     DS    CL63             Member name after rename            03-IGWSMF\n                                            65596+*                                    (new name)                    @26A\n 00000000                00000000 00000041  65597+SMF420QB DSECT ,                                                   @26A 03-IGWSMF\n                                            65598+*------------------------------------------------------------      @26A\n                                            65599+* Section B -- Member Rename (SMF 42 subtype 25)                   @26A\n                                            65600+* Original member name section                                     @26A\n                                            65601+* this section follows immediately after SMF420QA                  @26A\n                                            65602+*------------------------------------------------------------      @26A\n 00000000                                   65603+SMF42QOL     DS    H                Length of the member name before    03-IGWSMF\n                                            65604+*                                    the rename         (SMF42QON) @26A\n 00000002                                   65605+SMF42QON     DS    CL63             Member name before rename      @26A 03-IGWSMF\n                                            65606+*                                    (original name)               @26A\n 00000000                00000000 00000050  65607+SMF420QC DSECT ,                                                   @26A 03-IGWSMF\n                                            65608+*------------------------------------------------------------      @26A\n                                            65609+* Section C -- Member Rename (SMF 42 subtype 25)                   @26A\n                                            65610+* Additional information section                                   @26A\n                                            65611+* this section follows immediately after SMF420QB.                 @26A\n                                            65612+*------------------------------------------------------------      @26A\n 00000000                00000000 00000050  65613+SMF420QC DSECT ,                    Additional Information         @26A 03-IGWSMF\n 00000000                                   65614+SMF42QUI DS    CL80                 USERID token of caller of STOW or   03-IGWSMF\n                                            65615+*                                    DESERV -- mapped by ICHRUTKN  @26A\n                                            65616+*        IFASMFR 04\n 00000000                00000000 000000D7  65617+SMF4     DSECT                                                          02-$$GLOBAL\n                                            65619+*%IFABGN1: ;\n                                            65620+* /*                                                                 */\n                                            65621+* /* METHOD OF ACCESS                                                */\n                                            65622+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            65623+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            65624+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            65625+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            65626+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            65627+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            65628+* /*                                             A DIAGNOSTIC.       */\n                                            65629+* /*                                                                 */\n                                            65630+* /*                                                                 */\n                                            65631+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            65632+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            65633+* /*         RECORDS AS FOLLOWS:                                     */\n                                            65634+* /*                                                                 */\n                                            65635+* /*             MACRO        RECORDS                                */\n                                            65636+* /*            ********      *******                                */\n                                            65637+* /*            IFASMFR1      07-19                                  */\n                                            65638+* /*            IFASMFR2      20-27                                  */\n                                            65639+* /*            IFASMFR3      28-36                                  */\n                                            65640+* /*            IFASMFR4      37-46                                  */\n                                            65641+* /*            IFASMFR5      47-54                                  */\n                                            65642+* /*            IFASMFR6      55-69                                  */\n                                            65643+* /*            IFASMFR9      80-84                              @07C*/\n                                            65644+* /*            IFASMFRA      85-103                             @07C*/\n                                            65645+* /*            IFASMFRB      104-113                                */\n                                            65646+* /*            IFASMFRC      114-123                                */\n                                            65647+* /*            IFASMFRD      124-127                                */\n                                            65648+*%GOTO IFABGN2;   /*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  285\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65649+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            65650+*  REQUIRED FORMAT IS\n                                            65651+*\n                                            65652+*        IFASMFR  &RECTYPE\n                                            65653+*\n                                            65654+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            65655+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  286\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65657+* THIS RECORD IS WRITTEN AT NORMAL OR ABNORMAL TERMINATION OF A STEP.\n                                            65658+* RECORD LENGTH IS VARIABLE. MINIMUM OF 137.\n                                            65659+*\n 00000000                                   65660+         DS    0F        ALIGN TO FULL WORD BOUNDARY                    03-IFASMFR\n                         00000000           65661+SMFRCD4  EQU   *         HEADER SEGMENT                                 03-IFASMFR\n 00000000                                   65662+SMF4LEN  DS    BL2'0'    RECORD LENGTH                                  03-IFASMFR\n 00000002                                   65663+SMF4SEG  DS    BL2'0'    SEGMENT DESCRIPTOR                             03-IFASMFR\n 00000004 00                                65664+SMF4FLG  DC    BL1'0'    HEADER FLAG BYTE                               03-IFASMFR\n 00000005 00                                65665+SMF4RTY  DC    BL1'0'    RECORD TYPE 4                                  03-IFASMFR\n 00000006 00000000                          65666+SMF4TME  DC    BL4'0'    TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL. 03-IFASMFR\n 0000000A 0000000C                          65667+SMF4DTE  DC    PL4'0000' DATE IN PACKED DECIMAL FORM: OOYYDDDF          03-IFASMFR\n 0000000E 40404040                          65668+SMF4SID  DC    CL4' '    SYSTEM IDENTIFICATION                   Y02901 03-IFASMFR\n 00000012 4040404040404040                  65669+SMF4JBN  DC    CL8' '    JOB NAME                                       03-IFASMFR\n 0000001A 00000000                          65670+SMF4RST  DC    BL4'0'    READER START TIME (IN 100THS SECONDS)          03-IFASMFR\n 0000001E 0000000C                          65671+SMF4RSD  DC    PL4'0000' READER START DATE                              03-IFASMFR\n 00000022 4040404040404040                  65672+SMF4UIF  DC    CL8' '    USER IDENTIFICATION FIELD                      03-IFASMFR\n 0000002A 00                                65673+SMF4STN  DC    BL1'0'    STEP NUMBER                                    03-IFASMFR\n 0000002B 00000000                          65674+SMF4SIT  DC    BL4'0'    STEP INITIATION TIME (IN 100THS SECONDS)       03-IFASMFR\n 0000002F 0000000C                          65675+SMF4STID DC    PL4'0000' STEP INITIATION DATE (PACKED DECIMAL FORMAT)   03-IFASMFR\n 00000033 00000000                          65676+SMF4NCI  DC    BL4'0'    NUMBER OF CARD IMAGES IN DD DATA OR DD *       03-IFASMFR\n                                            65677+*                        DATA SETS\n 00000037 0000                              65678+SMF4SCC  DC    BL2'0'    STEP COMPLETION CODE                  @G50FPRL 03-IFASMFR\n 00000039 00                                65679+SMF4PRTY DC    BL1'0'    PRIORITY AT WHICH STEP WAS DISPATCHED :        03-IFASMFR\n                                            65680+*                        ACTUAL PRIORITY=251-(15-USER PRIORITY)*16\n 0000003A 4040404040404040                  65681+SMF4PGMN DC    CL8' '    PROGRAM NAME                                   03-IFASMFR\n 00000042 4040404040404040                  65682+SMF4STMN DC    CL8' '    STEP NAME                                      03-IFASMFR\n 0000004A 0000                              65683+SMF4RSV5 DC    BL2'0'    RESERVED                                  @PVC 03-IFASMFR\n 0000004C 0000                              65684+SMF4SYST DC    BL2'0'    SYSTEM AREA USED(TOP OF PROVATE AREA)   Y02901 03-IFASMFR\n 0000004E 0000                              65685+SMF4H0ST DC    BL2'0'    STORAGE USED(VIRT OR REAL-SEE SMF4RIN)         03-IFASMFR\n                         0000004E           65686+SMF4STU  EQU   SMF4H0ST  (LOW OF PRIVATE AREA)                   Y02901 03-IFASMFR\n 00000050 0000                              65687+SMF4RV1  DC    BL2'0'    RESERVED                                  @PVC 03-IFASMFR\n 00000052 00000000                          65688+SMF4RSH0 DC    BL4'0'    REGION SIZE REQ(PRIVATE AREA 1K UNIT)     @PVM 03-IFASMFR\n                         00000052           65689+SMF4PRV  EQU   SMF4RSH0                                            @PVM 03-IFASMFR\n 00000056 00                                65690+SMF4SPK  DC    1BL1'0'   STORAGE PROTECT KEY                     A40791 03-IFASMFR\n 00000057 00                                65691+SMF4STI  DC    1BL1'0'   STEP TERMINATION INDICATOR                     03-IFASMFR\n                                            65692+*                        BIT0 - RESERVED\n                                            65693+*                        BIT1 - CANCELLED AT EXIT IEFUJV\n                                            65694+*                        BIT2 - CANCELLED AT EXIT IEFUJI\n                                            65695+*                        BIT3 - CANCELLED AT EXIT IEFUSI\n                                            65696+*                        BIT4 - CANCELLED AT EXIT IEFACTRT\n                                            65697+*                        BIT5 - STEP IS TO BE RESTARTED        @YL026WA\n                                            65698+*                        BIT6 - 0=NORMAL COMPLETION\n                                            65699+*                               1=ABEND\n                                            65700+*                        BIT7 - 1=STEP FLUSHED\n 00000058 0000                              65701+SMF4RV2  DC    BL2'0'    RESERVED                                A40791 03-IFASMFR\n 0000005A 00000000                          65702+SMF4AST  DC    BL4'0'    DEVICE ALLOC START TIME                 A40791 03-IFASMFR\n 0000005E 00000000                          65703+SMF4PPST DC    BL4'0'    PROBLEM PROGRAM START TIME              A40791 03-IFASMFR\n 00000062 00                                65704+SMF4RV3  DC    BL1'0'    RESERVED                              @YL026WA 03-IFASMFR\n 00000063 000000                            65705+SMF4SRBT DC    BL3'0'    STEP CPU TIME UNDER SRB(.01 SEC)      @YL026WA 03-IFASMFR\n 00000066 0000                              65706+SMF4RIN  DC    BL2'0'    RECORD INDICATORS                              03-IFASMFR\n                                            65707+*                        BIT0-3 RESERVED                           @DAC\n                                            65708+*                         4=1 FIELD SMF4SETM NOT VALID FOR SP410   @LAC\n                                            65709+*                            WHEN ACTJTIME >3 BYTES FOR TYPE 30    @DGA\n                                            65710+*                         5 =1 DEVICE DATA NOT RECORDED            @DAA\n                                            65711+*                         6 =1 POSSIBLE ERROR IN DEV ENTRY     @YM02618\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  287\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65712+*                         7 =0 STOR IS VIRTUAL, =1 STOR IS REAL@YM02618\n                                            65713+*                         8-15 RESERVED                        @YM02618\n 00000068 0000                              65714+SMF4RLCT DC    BL2'0'    OFFSET TO RELOCATE SECTION                     03-IFASMFR\n 0000006A 0000                              65715+SMF4LENN DC    BL2'0'    LENGTH OF EXCP PORTION OF RECORD               03-IFASMFR\n                                            65716+*        FOR EACH DEVICE ASSIGNED TO EACH DATA SET THERE IS AN 8 BYTE\n                                            65717+*        ENTRY HAVING THE FOLLOWING FORMAT:\n                                            65718+*\n                                            65719+*     Note: Virtual I/O Devices are identified by the following:   @LYA\n                                            65720+*           Device Class 0                                         @LYA\n                                            65721+*           Unit Type 0                                            @LYA\n                                            65722+*           Device Number x'7FFF'                                  @LYA\n                                            65723+*\n 0000006C 00                                65724+SMF4DEVC DC    BL1'0'    DEVICE CLASS                                   03-IFASMFR\n 0000006D 00                                65725+SMF4UTYP DC    BL1'0'    UNIT TYPE                                      03-IFASMFR\n 0000006E 0000                              65726+SMF4CUAD DC    BL2'0'    Device Number                             @LYC 03-IFASMFR\n                                            65727+*                                                                 1@LYD\n 00000070 00000000                          65728+SMF4EXCP DC    BL4'0'    COUNT OF EXCP'S ISSUED FOR THE DEVICE AND      03-IFASMFR\n                                            65729+*                        DATA SET\n 00000074                00000074 0000006C  65730+         ORG   SMF4DEVC                                                 03-IFASMFR\n 0000006C 00                                65731+SMF4LNTH DC    BL1'0'    TOTAL LENGTH OF CPU AND ACCT. SECTION          03-IFASMFR\n 0000006D 000000                            65732+SMF4SETM DC    BL3'0'    RESERVED                                 @LAC  03-IFASMFR\n 00000070 00                                65733+SMF4NAF  DC    BL1'0'    NUMBER OF ACCOUNTING FIELDS                    03-IFASMFR\n 00000071                                   65734+SMF4ACTF DS    0C        EXEC STATEMENT ACCOUNTING FIELDS(VARIABLE)     03-IFASMFR\n                                            65735+*\n                                            65736+*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE\n                                            65737+*        FIELD (1 BYTE,BINARY), FOLLOWED BY THE FIELD(EBCDIC).AN\n                                            65738+*        OMITTED FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.\n                                            65739+*\n                                            65740+*        RELOCATE SECTION\n 00000071                                   65741+SMF4PGIN DS    BL4'0'    NUMBER OF PAGE-INS                             03-IFASMFR\n 00000075                                   65742+SMF4PGOT DS    BL4'0'    NUMBER OF PAGE-OUTS                            03-IFASMFR\n 00000079                                   65743+SMF4NSW  DS    BL4'0'    NUM OF SWAPS                            Y02901 03-IFASMFR\n                         00000079           65744+SMF4RGNS EQU   SMF4NSW                                           Y02901 03-IFASMFR\n 0000007D                                   65745+SMF4PSI  DS    BL4'0'    PAGES SWAPPED IN                        Y02901 03-IFASMFR\n                         0000007D           65746+SMF4SIN  EQU   SMF4PSI                                           Y02901 03-IFASMFR\n 00000081                                   65747+SMF4PSO  DS    BL4'0'    PAGES SWAPPED OUT                       Y02901 03-IFASMFR\n                         00000081           65748+SMF4SOUT EQU   SMF4PSO                                           Y02901 03-IFASMFR\n 00000085                                   65749+SMF4VPI  DS    BL4'0'    VAM PAGE INS                            Y02132 03-IFASMFR\n 00000089                                   65750+SMF4VPO  DS    BL4'0'    VAM PAGE OUTS                           Y02132 03-IFASMFR\n                                            65751+*        PERFORMANCE SECTION\n 0000008D                                   65752+SMF4SST  DS    BL4'0'              STEP SERVICE TIME           @YM07459 03-IFASMFR\n 00000091                                   65753+SMF4ACT  DS    BL4'0'              STEP ACTIVE TIME            @YM07459 03-IFASMFR\n 00000095                                   65754+SMF4PGNO DS    BL2'0'      Step performance group number:          @LZC 03-IFASMFR\n                                            65755+*                          - Valid only if workload management     @LZA\n                                            65756+*                            compatibility mode in effect.         @LZA\n                                            65757+*                          - Zero if workload management goal      @LZA\n                                            65758+*                            mode in effect when the Type 4        @LZA\n                                            65759+*                            record is generated.                  @LZA\n 00000097                                   65760+SMF4TRAN DS    BL4'0'      STEP TRANSACTION RESIDENCY TIME     @Z40FPPF 03-IFASMFR\n 0000009B                                   65761+SMF4CPM  DS    BL4'0'      CREAD PAGE MISS COUNT                   @DFC 03-IFASMFR\n 0000009F                                   65762+SMF4RCLM DS    BL4'0'      NUMBER OF VIO RECLAIMS              @Z40FPPF 03-IFASMFR\n 000000A3                                   65763+SMF4CPGN DS    BL4'0'      NUMBER OF COMMON PAGE-INS           @Z40FPPF 03-IFASMFR\n 000000A7                                   65764+SMF4HSPI DS    BL4'0'      HIPERSPACE PAGE IN COUNT                @LBC 03-IFASMFR\n 000000AB                                   65765+SMF4PGST DS    BL4'0'      NUMBER OF PAGES STOLEN FROM         @Z40FPPF 03-IFASMFR\n                                            65766+*                          THIS MEMORY                         @Z40FPPF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  288\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000AF                                   65767+SMF4PSEC DS    CL8         COUNT OF PAGE SECONDS               @Z40FPPF 03-IFASMFR\n 000000B7                                   65768+SMF4LPAI DS    BL4'0'      LPA PAGE INS                        @G50FPRL 03-IFASMFR\n 000000BB                                   65769+SMF4HSPO DS    BL4'0'      HIPERSPACE PAGE OUT COUNT               @LBC 03-IFASMFR\n 000000BF                                   65770+SMF4CPUS DS    BL4'0'      STEP CPU SERVICE                    @G50FPRL 03-IFASMFR\n 000000C3                                   65771+SMF4IOCS DS    BL4'0'      STEP I/O SERVICE                    @G50FPRL 03-IFASMFR\n 000000C7                                   65772+SMF4MSOS DS    BL4'0'      STEP MAIN STORAGE SERVICE           @G50FPRL 03-IFASMFR\n 000000CB                                   65773+SMF4SRBS DS    BL4'0'      STEP SRB SERVICE                    @G50FPRL 03-IFASMFR\n 000000CF                                   65774+SMF4RSV1 DS    CL8' '      RESERVED                            @YA15607 03-IFASMFR\n                                            65775+*        IFASMFR 05\n 00000000                00000000 00000091  65776+SMF5     DSECT                                                          02-$$GLOBAL\n                                            65778+*%IFABGN1: ;\n                                            65779+* /*                                                                 */\n                                            65780+* /* METHOD OF ACCESS                                                */\n                                            65781+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            65782+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            65783+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            65784+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            65785+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            65786+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            65787+* /*                                             A DIAGNOSTIC.       */\n                                            65788+* /*                                                                 */\n                                            65789+* /*                                                                 */\n                                            65790+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            65791+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            65792+* /*         RECORDS AS FOLLOWS:                                     */\n                                            65793+* /*                                                                 */\n                                            65794+* /*             MACRO        RECORDS                                */\n                                            65795+* /*            ********      *******                                */\n                                            65796+* /*            IFASMFR1      07-19                                  */\n                                            65797+* /*            IFASMFR2      20-27                                  */\n                                            65798+* /*            IFASMFR3      28-36                                  */\n                                            65799+* /*            IFASMFR4      37-46                                  */\n                                            65800+* /*            IFASMFR5      47-54                                  */\n                                            65801+* /*            IFASMFR6      55-69                                  */\n                                            65802+* /*            IFASMFR9      80-84                              @07C*/\n                                            65803+* /*            IFASMFRA      85-103                             @07C*/\n                                            65804+* /*            IFASMFRB      104-113                                */\n                                            65805+* /*            IFASMFRC      114-123                                */\n                                            65806+* /*            IFASMFRD      124-127                                */\n                                            65807+*%GOTO IFABGN2;   /*\n                                            65808+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            65809+*  REQUIRED FORMAT IS\n                                            65810+*\n                                            65811+*        IFASMFR  &RECTYPE\n                                            65812+*\n                                            65813+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            65814+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  289\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65816+* THIS RECORD IS WRITTEN AT  NORMAL OR ABNORMAL TERMINATION OF A JOB.\n                                            65817+* RECORD LENGTH IS VARIABLE. MINIMUM OF 117.\n                                            65818+*\n 00000000                                   65819+         DS    0F        ALIGN TO FULL WORD BOUNDARY                    03-IFASMFR\n                         00000000           65820+SMFRCD5  EQU   *         HEADER SEGMENT                                 03-IFASMFR\n 00000000                                   65821+SMF5LEN  DS    BL2'0'    RECORD LENGTH                                  03-IFASMFR\n 00000002                                   65822+SMF5SEG  DS    BL2'0'    SEGMENT DESCRIPTOR                             03-IFASMFR\n 00000004 00                                65823+SMF5FLG  DC    BL1'0'    HEADER FLAG BYTE                               03-IFASMFR\n 00000005 00                                65824+SMF5RTY  DC    BL1'0'    RECORD TYPE 5                                  03-IFASMFR\n 00000006 00000000                          65825+SMF5TME  DC    BL4'0'    TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL. 03-IFASMFR\n 0000000A 0000000C                          65826+SMF5DTE  DC    PL4'0000' DATE, PACKED DEC. FORM : OOYYDDDF(F IS A SIGN) 03-IFASMFR\n 0000000E 40404040                          65827+SMF5SID  DC    CL4' '    SYSTEM IDENTIFICATION                   Y02901 03-IFASMFR\n 00000012 4040404040404040                  65828+SMF5JBN  DC    CL8' '    JOB NAME                                       03-IFASMFR\n 0000001A 00000000                          65829+SMF5RST  DC    BL4'0'    READER START TIME FOR JOB (IN 100THS/SECONDS)  03-IFASMFR\n 0000001E 0000000C                          65830+SMF5RSD  DC    PL4'0000' READER START DATE,PACKED DECIMAL FORMAT        03-IFASMFR\n 00000022 4040404040404040                  65831+SMF5UIF  DC    CL8' '    USER IDENTIFICATION FIELD                      03-IFASMFR\n 0000002A 00                                65832+SMF5NST  DC    BL1'0'    NUMBER OF STEPS IN THE JOB                     03-IFASMFR\n 0000002B 00000000                          65833+SMF5JIT  DC    BL4'0'    JOB INITIATION TIME (IN 100THS/SECONDS)        03-IFASMFR\n 0000002F 0000000C                          65834+SMF5JID  DC    PL4'0000' JOB INITIATION DATE, PACKED DECIMAL FORMAT     03-IFASMFR\n 00000033 00000000                          65835+SMF5NCI  DC    BL4'0'    NUMBER OF CARD-IMAGE RECORDS IN DD DATA OR DD* 03-IFASMFR\n                                            65836+*                        DATA SETS\n 00000037 0000                              65837+SMF5JCC  DC    BL2'0'    JOB COMPLETION CODE                            03-IFASMFR\n 00000039 00                                65838+SMF5JPTY DC    BL1'0'    JOB PRIORITY                                   03-IFASMFR\n 0000003A 00000000                          65839+SMF5RSTT DC    BL4'0'    READER STOP TIME FOR JOB (IN 100THS/SECONDS)   03-IFASMFR\n 0000003E 0000000C                          65840+SMF5RSTD DC    PL4'0000' READER STOP DATE FOR JOB (IN PACKED DEC.FORM)  03-IFASMFR\n 00000042 00                                65841+SMF5JBTI DC    BL1'0'    JOB TERMINATION INDICATOR                      03-IFASMFR\n                                            65842+*                           0-FIELD SMF5JCPU NOT VALID FOR SP410 @LAC\n                                            65843+*                            WHEN ACTJTIME IS >3 BYTES           @DGA\n                                            65844+*                           1-CANCELLED AT EXIT IEFUJV\n                                            65845+*                           2-CANCELLED AT EXIT IEFUJI\n                                            65846+*                           3-CANCELLED AT EXIT IEFUSI\n                                            65847+*                           4-CANCELLED AT EXIT IEFACTRT\n                                            65848+*                           5-RESERVED\n                                            65849+*                           6-O=NORMAL COMPLETION\n                                            65850+*                             1=ABEND\n                                            65851+*                           7-RESERVED\n 00000043 00                                65852+SMF5SMCI DC    BL1'0'    RESV-FORMERLY SYSOUT CLASSES INDICATOR  Y02120 03-IFASMFR\n 00000044 00000000                          65853+SMF5TRAN DC    BL4'0'    TOTAL TRANSACTION RESIDENCY TIME      @ZM01380 03-IFASMFR\n 00000048 00                                65854+SMF5CKRE DC    BL1'0'    RESV                                           03-IFASMFR\n 00000049 00                                65855+SMF5RDCL DC    BL1'0'    READER DEVICE CLASS                            03-IFASMFR\n 0000004A 00                                65856+SMF5RUTY DC    BL1'0'    READER UNIT TYPE                               03-IFASMFR\n 0000004B 40                                65857+SMF5JICL DC    CL1' '    JOB INPUT CLASS                                03-IFASMFR\n 0000004C 00                                65858+SMF5SPK  DC    BL1'0'    STORAGE PROTECT KEY                     A40791 03-IFASMFR\n 0000004D 000000                            65859+SMF5SRBT DC    BL3'0'    JOB CPU TIME UNDER SRB(.01 SEC)       @YL026WA 03-IFASMFR\n 00000050                                   65860+SMF5TJS  DS    BL4'0'    TOTAL JOB SERVICE(SERVICE UNITS)        Y02133 03-IFASMFR\n 00000054                                   65861+SMF5TTAT DS    BL4'0'    TOTAL TRANSACTION ACTIVE TIME FOR JOB   Y02133 03-IFASMFR\n 00000058                                   65862+SMF5RV2  DS    BL4'0'    RESERVED                              @YL026WA 03-IFASMFR\n 0000005C 0000                              65863+SMF5PGNO DC    BL2'0'    Performance group number                  @LZC 03-IFASMFR\n                                            65864+*                          - Valid only if workload management     @LZA\n                                            65865+*                            compatibility mode in effect.         @LZA\n                                            65866+*                          - Zero if workload management goal      @LZA\n                                            65867+*                            mode in effect when the Type 5        @LZA\n                                            65868+*                            record is generated.                  @LZA\n 0000005E 4040                              65869+SMF5RV3  DC    CL2' '    RESERVED                              @YL026WA 03-IFASMFR\n 00000060 00                                65870+SMF5TLEN DC    BL1'0'    TOTAL LENGTH OF ACCT SECT OF RECORD @G50FPRL   03-IFASMFR\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  290\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000061 4040404040404040                  65871+SMF5PRGN DC    CL20' '   PROGRAMMER'S NAME                              03-IFASMFR\n 00000075 000000                            65872+SMF5JCPU DC    BL3'0'    RESERVED                                  @LAC 03-IFASMFR\n 00000078 00                                65873+SMF5ACTF DC    BL1'0'    NUMBER OF ACCOUNTING FIELDS                    03-IFASMFR\n 00000079                                   65874+SMF5JSAF DS    0C        JOB STATEMENT ACCOUNTING FIELDS(VARIABLE)      03-IFASMFR\n                                            65875+*\n                                            65876+*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE\n                                            65877+*        FIELD(1 BYTE,BINARY),FOLLOWED BY THE FIELD (EBCDIC).AN OMITTED\n                                            65878+*        FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.\n 00000079                                   65879+SMF5CPUS DS    BL4'0'    JOB CPU SERVICE                       @G50FPRL 03-IFASMFR\n 0000007D                                   65880+SMF5IOCS DS    BL4'0'    JOB I/O SERVICE                       @G50FPRL 03-IFASMFR\n 00000081                                   65881+SMF5MSOS DS    BL4'0'    JOB MAIN STORAGE SERVICE              @G50FPRL 03-IFASMFR\n 00000085                                   65882+SMF5SRBS DS    BL4'0'    JOB SRB SERVICE                       @G50FPRL 03-IFASMFR\n 00000089                                   65883+SMF5RSV1 DS    CL8' '    RESERVED                              @YA15607 03-IFASMFR\n                                            65884+*        IFASMFR 92\n                                            65886+*%IFABGN1: ;\n                                            65887+* /*                                                                 */\n                                            65888+* /* METHOD OF ACCESS                                                */\n                                            65889+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            65890+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            65891+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            65892+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            65893+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            65894+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            65895+* /*                                             A DIAGNOSTIC.       */\n                                            65896+* /*                                                                 */\n                                            65897+* /*                                                                 */\n                                            65898+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            65899+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            65900+* /*         RECORDS AS FOLLOWS:                                     */\n                                            65901+* /*                                                                 */\n                                            65902+* /*             MACRO        RECORDS                                */\n                                            65903+* /*            ********      *******                                */\n                                            65904+* /*            IFASMFR1      07-19                                  */\n                                            65905+* /*            IFASMFR2      20-27                                  */\n                                            65906+* /*            IFASMFR3      28-36                                  */\n                                            65907+* /*            IFASMFR4      37-46                                  */\n                                            65908+* /*            IFASMFR5      47-54                                  */\n                                            65909+* /*            IFASMFR6      55-69                                  */\n                                            65910+* /*            IFASMFR9      80-84                              @07C*/\n                                            65911+* /*            IFASMFRA      85-103                             @07C*/\n                                            65912+* /*            IFASMFRB      104-113                                */\n                                            65913+* /*            IFASMFRC      114-123                                */\n                                            65914+* /*            IFASMFRD      124-127                                */\n                                            65915+*%GOTO IFABGN2;   /*\n                                            65916+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            65917+*  REQUIRED FORMAT IS\n                                            65918+*\n                                            65919+*        IFASMFR  &RECTYPE\n                                            65920+*\n                                            65921+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            65922+*\n                                            65924+* MACRO NAME:  IFASMFRA                                            @M9C\n                                            65925+* DSECT NAME:  SMFRCD89                                            @M9A\n                                            65926+*              SMF89PR                                             @M9A\n                                            65927+*              SMF89SI                                             @M9A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  291\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65928+*              SMF89UD                                             @M9A\n                                            65929+*              SMF89T2                                             @M9A\n                                            65930+*              SMFRCD90                                            @M9A\n                                            65931+*              SMF90PRH                                            @M9A\n                                            65932+*              SMF90T5                                             @M9A\n                                            65933+*              SMF90DSM                                            @M9A\n                                            65934+*              SMF90DSE                                            @M9A\n                                            65935+*              SMF90WCH                                            @M9A\n                                            65936+*              SMF90SUB                                            @M9A\n                                            65937+*              SMF90T6                                             @M9A\n                                            65938+*              SMF90T8                                             @M9A\n                                            65939+*              SMF90T1                                             @M9A\n                                            65940+*              SMF90T4                                             @M9A\n                                            65941+*              SMF90T3                                             @M9A\n                                            65942+*              SMF90T10                                            @M9A\n                                            65943+*              SMF90T11                                            @M9A\n                                            65944+*              SMF90T12                                            @M9A\n                                            65945+*              SMF90T14                                            @M9A\n                                            65946+*              SMF90T16                                            @M9A\n                                            65947+*              SMF90T17                                            @M9A\n                                            65948+*              SMF90T18                                            @M9A\n                                            65949+*              SMF90T19                                            @M9A\n                                            65950+*              SMF90T20                                            @M9A\n                                            65951+*              SMF90T21                                            @M9A\n                                            65952+*              SMF90T22                                            @M9A\n                                            65953+*              SMF90T33                                            @L6A\n                                            65954+*              SMF90T34                                            @L8A\n                                            65955+*\n                                            65956+* COMPONENT: Systems Management Facility (SC100)                   @M9A\n                                            65957+*01* PROPRIETARY STATEMENT=                                          *\n                                            65958+*  **PROPRIETARY_STATEMENT********************************************\n                                            65959+*                                                                    *\n                                            65960+*                                                                    *\n                                            65961+*   LICENSED MATERIALS - PROPERTY OF IBM                             *\n                                            65962+*   5694-A01 COPYRIGHT IBM CORP. 1977, 2010                          *\n                                            65963+*                                                                    *\n                                            65964+*   STATUS= HBB7770                                                  *\n                                            65965+*                                                                    *\n                                            65966+*  **END_OF_PROPRIETARY_STATEMENT*************************************\n                                            65967+* METHOD OF ACCESS:                                                @M9C\n                                            65968+* DESCRIPTIVE NAME:  SMF RECORDS 85-103                            @M9A\n                                            65969+* EYE CATCHER:                                                     @M9A\n                                            65970+* OFFSET:                                                          @M9A\n                                            65971+* LENGTH:                                                          @M9A\n                                            65972+* STORAGE ATTRIBUTES:                                              @M9A\n                                            65973+* MAIN STORAGE:                                                    @M9A\n                                            65974+* VIRTUAL STORAGE:                                                 @M9A\n                                            65975+* AUXILIARY STORAGE:                                               @M9A\n                                            65976+* SUBPOOL:                                                         @M9A\n                                            65977+* KEY:                                                             @M9A\n                                            65978+* DATA SPACE:                                                      @M9A\n                                            65979+* RESIDENCY:                                                       @M9A\n                                            65980+* SIZE:                                                            @M9A\n                                            65981+* CREATED BY:                                                      @M9A\n                                            65982+* POINTED TO BY:                                                   @M9A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  292\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65983+* SERIALIZATION:                                                   @M9A\n                                            65984+* FUNCTION:                                                        @M9A\n                                            65985+* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 92 WRITTEN         @D6A\n                                            65986+* BY THE O/MVS FILE SYSTEM                                         @D6A\n                                            65987+*                                                                  @D6A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  293\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           65991+**/ BPXYSMFR_1:;\n                                            65992+*/****START OF SPECIFICATIONS******************************************\n                                            65993+*\n                                            65994+*    $MAC (BPXYSMFR) COMP(SCPX1) PROD(BPX):\n                                            65995+*\n                                            65996+*01* MACRO NAME: BPXYSMFR\n                                            65997+*\n                                            65998+*01* DSECT NAME: SMFRCD92\n                                            65999+*\n                                            66000+*01* DESCRIPTIVE NAME: OpenMVS File System SMF Record format\n                                            66001+*\n                                            66002+*02*   ACRONYM: SMFR\n                                            66003+**/\n                                            66004+*/*01* PROPRIETARY STATEMENT=                                        */\n                                            66005+*/***PROPRIETARY_STATEMENT********************************************/\n                                            66006+*/*                                                                  */\n                                            66007+*/*                                                                  */\n                                            66008+*/* LICENSED MATERIALS - PROPERTY OF IBM                             */\n                                            66009+*/* 5694-A01 (C) COPYRIGHT IBM CORP. 1993, 2005                      */\n                                            66010+*/*                                                                  */\n                                            66011+*/* STATUS= HBB7720                                                  */\n                                            66012+*/*                                                                  */\n                                            66013+*/***END_OF_PROPRIETARY_STATEMENT*************************************/\n                                            66014+*/*\n                                            66015+*\n                                            66016+*01* EXTERNAL CLASSIFICATION:  GUPI\n                                            66017+*01* END OF EXTERNAL CLASSIFICATION:\n                                            66018+*\n                                            66019+*01* FUNCTION:\n                                            66020+*\n                                            66021+*      The SMFRCD92 maps the structure of SMF record type 92 which\n                                            66022+*      is written at OpenMVS file open or close, file system\n                                            66023+*      mount, remount or unmount, file system suspend or resume,\n                                            66024+*      and file memory map or unmap.\n                                            66025+*\n                                            66026+*      This is a CBGEN part, see the notes below before changing.\n                                            66027+*\n                                            66028+*01* METHOD OF ACCESS:\n                                            66029+*\n                                            66030+*02*   PL/X:\n                                            66031+*\n                                            66032+*        %INCLUDE SYSLIB(BPXYSMFR)\n                                            66033+*        By default, the SMFRCD92 is based on SMF92PTR. If\n                                            66034+*        other basing is desired, use %SMFRBASE='BASED(XXXXXX)'.\n                                            66035+*        If %SMFRBASE='BASED(SMF92PTR)' is coded, a declare for\n                                            66036+*        SMF92PTR is also generated.\n                                            66037+*\n                                            66038+*01* SIZE:\n                                            66039+*            SMF92ESA -- X'0490' bytes\n                                            66040+*            SMF92DFL -- X'00CC' bytes\n                                            66041+*            SMFRCD92 -- X'0034' bytes\n                                            66042+*            SMF92SSS -- X'0014' bytes\n                                            66043+*            SMF92ID  -- X'0048' bytes\n                                            66044+*            SMF92FSM -- X'006C' bytes\n                                            66045+*            SMF92FSP -- X'0002' bytes\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  294\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66046+*            SMF92FSS -- X'0051' bytes\n                                            66047+*            SMF92FSR -- X'0059' bytes\n                                            66048+*            SMF92FSU -- X'0094' bytes\n                                            66049+*            SMF92FSV -- X'0094' bytes\n                                            66050+*            SMF92FOP -- X'0018' bytes\n                                            66051+*            SMF92FCL -- X'0084' bytes\n                                            66052+*            SMF92MMP -- X'0018' bytes\n                                            66053+*            SMF92MUN -- X'0028' bytes\n                                            66054+*01*             SMFRCD92 -- X'0034' bytes\n                                            66055+*01*             SMF92SSS -- X'0014' bytes\n                                            66056+*01*             SMF92ID  -- X'0048' bytes\n                                            66057+*01*             SMF92FSM -- X'006C' bytes\n                                            66058+*01*             SMF92FSP -- X'0002' bytes\n                                            66059+*01*             SMF92FSS -- X'0050' bytes\n                                            66060+*01*             SMF92FSR -- X'0058' bytes\n                                            66061+*01*             SMF92FSU -- X'0094' bytes\n                                            66062+*01*             SMF92FOP -- X'0018' bytes\n                                            66063+*01*             SMF92FCL -- X'0044' bytes\n                                            66064+*01*             SMF92MMP -- X'0018' bytes\n                                            66065+*01*             SMF92MUN -- X'0028' bytes\n                                            66066+*\n                                            66067+*01* POINTED TO BY: SMF92PTR\n                                            66068+*\n                                            66069+*01* CREATED BY:\n                                            66070+*             Open file record            - BPXFSOPN\n                                            66071+*             Close file record           - BPXFSCLS\n                                            66072+*             Mount file System record    - BPXFSLIT and BPXFSMNT\n                                            66073+*             Unmount File System record  - BPXFSUMT\n                                            66074+*             Suspend File System record  - BPXFSQSE\n                                            66075+*             Resume File System record   - BPXFSUQS\n                                            66076+*             Mmap record                 - BPXGYVDA\n                                            66077+*             Munmap record               - BPXGYVDA\n                                            66078+*\n                                            66079+*01* DELETED BY: Caller of SMFEWTM\n                                            66080+*\n                                            66081+*01* STORAGE ATTRIBUTES:\n                                            66082+*02*   SUBPOOL:            N/A\n                                            66083+*02*   KEY:                N/A\n                                            66084+*02*   RESIDENCY:          N/A\n                                            66085+*\n                                            66086+*01* FREQUENCY: 1 per call to SMFEWTM\n                                            66087+*\n                                            66088+*01* SERIALIZATION: N/A\n                                            66089+*\n                                            66090+*01* DEPENDENCIES: None\n                                            66091+*\n                                            66092+*01* NOTES:  The assembly language portion of this macro is\n                                            66093+*            generated using the CBGEN tool - it is not\n                                            66094+*            to be edited manually.\n                                            66095+*\n                                            66096+*  To make a change in the development release:                   @01A\n                                            66097+*  -------------------------------------------\n                                            66098+*  1) Extract the BPXYSMFR.CBG part from CMVC.\n                                            66099+*  2) Make your changes to the PLX section only.\n                                            66100+*     The ASM section will be totally replaced in step 3.\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  295\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66101+*  3) Generate a new executable macro through the TSO CBGEN panel.\n                                            66102+*     Do a test assemble of the generated macro.\n                                            66103+*  4) Transmit the new generated object as the new CBG part in CMVC.\n                                            66104+*     This is so the CMVC library object will have the current level\n                                            66105+*     of the ASM section.\n                                            66106+*     B390 will generate a new macro for the compile maclibs,\n                                            66107+*     i.e. B390.fmid.MACLIB.  This should match the one you generated,\n                                            66108+*     and transmitted as the .CBG part.\n                                            66109+*\n                                            66110+*01* COMPONENT: OpenMVS (SCPX1)\n                                            66111+*\n                                            66112+*01* DISTRIBUTION LIBRARY:  AMACLIB\n                                            66113+*\n                                            66114+*01* EYE-CATCHER: none\n                                            66115+*\n                                            66116+*01* CHANGE-ACTIVITY:\n                                            66117+*\n                                            66118+*      $L0=POSIXXF  HOM1110 921201 PDP1: OpenMVS Initial Release\n                                            66119+*      $P1=PL70342  HOM1110 920721 PDJT: Change Line Item Flag to XF\n                                            66120+*      $L1=D0AA006  HOM1120 930419 PDI6: OpenMVS Multi-Process Support\n                                            66121+*      $D1=DOAA009  HOM1120 930812 PDEA: Wellington NFS Server Support\n                                            66122+*                                        for Dcr A009.04\n                                            66123+*      $D2=DOAA002  HOM1120 930816 PDEA: (dcr A002.12) SMF support for\n                                            66124+*                                        socket\n                                            66125+*      $P2=POA0294  HOM1120 940201 PDEA: Change the version number\n                                            66126+*      $P2=PPF0001  HOM1130 940201 PDEA: Change the version number\n                                            66127+*      $P3=POA0421  HOM1120 940415 PDNU: SMF Accounting\n                                            66128+*      $P3=PPF0006  HOM1130 940415 PDNU: SMF Accounting\n                                            66129+*      $D3=DPFA065  HOM1130 940628 PDPB: A065.03 MMAP support\n                                            66130+*      $D4=DPFA052  HOM1130 940630 PDEA: A052.05 NFSC support\n                                            66131+*      $D5=DPFA091  HOM1130 941103 PDSV: DCR A091.02 Automountd/remount\n                                            66132+*      $D6=DUXA217  HBB6605 970411 PDSK: NFS Performance Items A217.12\n                                            66133+*      $D7=DCA0309  JBB6609 990410 PDRD: DCR A309 Support\n                                            66134+*      $P4=PYN0220  HBB7708 020301 PDFO: Bilingual fixup\n                                            66135+*      $D8=DDEA630  HBB7720 040316 PDJT: NFS V4\n                                            66136+*      $D9=ME06291  HBB7740 060322 PDFV: Subtype 14 Deletes  B033.00\n                                            66137+*      $01=OA24208  HBB7730 080209 PDJT: Subtype 15 Ext Security Attrs\n                                            66138+****END OF SPECIFICATIONS*********************************************/\n                                            66139+*% /*\n 00000000                00000000 00000034  66140+SMFRCD92 DSECT                                                          05-BPXYSMFR\n 00000000                                   66141+SMF92RPS DS    0CL52     Fixed record sections                          05-BPXYSMFR\n                                            66142+*\n                                            66143+*\n                                            66144+*    SMF Record Header Section\n                                            66145+*\n                                            66146+*\n                                            66147+*\n 00000000                                   66148+SMF92RHD DS    0CL28     Record header section                          05-BPXYSMFR\n 00000000                                   66149+SMF92LEN DS    H         Record length                                  05-BPXYSMFR\n 00000002                                   66150+SMF92SEG DS    H         Segment descriptor                             05-BPXYSMFR\n 00000004                                   66151+SMF92FLG DS    0B        Header flag byte                               05-BPXYSMFR\n                         00000080           66152+SMF92SSF EQU   X'80'     Bit 0 - Subsys ID after Sys ID                 05-BPXYSMFR\n                         00000040           66153+SMF92SBT EQU   X'40'     Bit 1 - Subtypes utilized                      05-BPXYSMFR\n 00000004                00000004 00000005  66154+         ORG   SMF92FLG+1                                               05-BPXYSMFR\n 00000005                                   66155+SMF92RTY DS    B         Record type - 92 ('5C'x)                       05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  296\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000006                                   66156+SMF92TME DS    FL4       Record written time                            05-BPXYSMFR\n 0000000A                                   66157+SMF92DTE DS    FL4       Record written date                            05-BPXYSMFR\n 0000000E                                   66158+SMF92SID DS    CL4       System identifier                              05-BPXYSMFR\n 00000012                                   66159+SMF92WID DS    CL4       Subsystem identifier                           05-BPXYSMFR\n 00000016                                   66160+SMF92STP DS    H         Record subtype                                 05-BPXYSMFR\n 00000018                                   66161+         DS    CL2       Reserved                                       05-BPXYSMFR\n 0000001A                                   66162+SMF92SDL DS    H         Length of self-defining section                05-BPXYSMFR\n                                            66163+*\n                                            66164+*\n                                            66165+*    Self Defining Section\n                                            66166+*\n                                            66167+*\n                                            66168+*\n 0000001C                                   66169+SMF92SDS DS    0CL24                                                    05-BPXYSMFR\n 0000001C                                   66170+SMF92SOF DS    F         Offset to subsystem section                    05-BPXYSMFR\n 00000020                                   66171+SMF92SLN DS    H         Length of subsystem section                    05-BPXYSMFR\n 00000022                                   66172+SMF92SON DS    H         Number of subsystem sections                   05-BPXYSMFR\n 00000024                                   66173+SMF92IOF DS    F         Offset of identification section               05-BPXYSMFR\n 00000028                                   66174+SMF92ILN DS    H         Length of identification section               05-BPXYSMFR\n 0000002A                                   66175+SMF92ION DS    H         Number of identification section               05-BPXYSMFR\n 0000002C                                   66176+SMF92DOF DS    F         Offset of data section                         05-BPXYSMFR\n 00000030                                   66177+SMF92DLN DS    H         Length of data section                         05-BPXYSMFR\n 00000032                                   66178+SMF92DON DS    H         Number of data sections                        05-BPXYSMFR\n                         00000034           66179+SMFRCD92_LEN EQU *-SMFRCD92                                             05-BPXYSMFR\n                                            66180+*\n                                            66181+*\n                                            66182+*    Subsystem Section\n                                            66183+*\n                                            66184+*\n                                            66185+*\n 00000000                00000000 00000014  66186+SMF92SSS DSECT                                                          05-BPXYSMFR\n 00000000                                   66187+SMF92TYP DS    H         Record subtype, 1 = File system mount, 2 =    X05-BPXYSMFR\n                                                 +                         File system suspend, 4 = File system resume,  X\n                                                 +                         5 = File system unmount, 6 = File system      X\n                                                 +                         remount, 7 = File system move, 10 = File      X\n                                                 +                         open, 11 = File close. 12 = Memmap. 13 =      X\n                                                 +                         Memunmap. 14 = File/directory delete\n 00000002                                   66188+SMF92RVN DS    CL2       Record version number                          05-BPXYSMFR\n 00000004                                   66189+SMF92PNM DS    CL8       Product name - OpenMVS                         05-BPXYSMFR\n 0000000C                                   66190+SMF92OSL DS    CL8       MVS product level                              05-BPXYSMFR\n                         00000014           66191+SMF92SSS_LEN EQU *-SMF92SSS                                             05-BPXYSMFR\n                                            66192+*\n                                            66193+*\n                                            66194+*    Identification Section\n                                            66195+*\n                                            66196+*\n                                            66197+*\n 00000000                00000000 00000048  66198+SMF92ID  DSECT                                                          05-BPXYSMFR\n 00000000                                   66199+SMF92JBN DS    CL8       JobName                                        05-BPXYSMFR\n 00000008                                   66200+SMF92RST DS    F         Reader start time                              05-BPXYSMFR\n 0000000C                                   66201+SMF92RSD DS    CL4       Reader start date                              05-BPXYSMFR\n 00000010                                   66202+SMF92STM DS    CL8       Step name                                      05-BPXYSMFR\n 00000018                                   66203+SMF92RGD DS    CL8       SAF group ID                                   05-BPXYSMFR\n 00000020                                   66204+SMF92RUD DS    CL8       SAF user ID                                    05-BPXYSMFR\n 00000028                                   66205+SMF92UID DS    F         OpenMVS real user ID                           05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  297\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000002C                                   66206+SMF92GID DS    F         OpenMVS real group ID                          05-BPXYSMFR\n 00000030                                   66207+SMF92PID DS    F         OpenMVS process ID                             05-BPXYSMFR\n 00000034                                   66208+SMF92PGD DS    F         OpenMVS process group ID                       05-BPXYSMFR\n 00000038                                   66209+SMF92SSD DS    F         OpenMVS session ID                             05-BPXYSMFR\n 0000003C                                   66210+SMF92API DS    F         OpenMVS anchor process ID                      05-BPXYSMFR\n 00000040                                   66211+SMF92APG DS    F         OpenMVS anchor proc grp ID                     05-BPXYSMFR\n 00000044                                   66212+SMF92ASG DS    F         OpenMVS anchor session ID                      05-BPXYSMFR\n                         00000048           66213+SMF92ID_LEN EQU *-SMF92ID                                               05-BPXYSMFR\n                                            66214+*\n                                            66215+*\n                                            66216+*    Data Section for File System Mount subtype (subtype 1)\n                                            66217+*\n                                            66218+*\n                                            66219+*\n 00000000                00000000 0000006C  66220+SMF92FSM DSECT                                                          05-BPXYSMFR\n 00000000                                   66221+SMF92MTM DS    BL8       Time of mount, STCK format                     05-BPXYSMFR\n 00000008                                   66222+SMF92MPF DS    F         Offset of path section                         05-BPXYSMFR\n 0000000C                                   66223+SMF92MFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000010                                   66224+SMF92MFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000014                                   66225+SMF92MDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000018                                   66226+SMF92MDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000020                                   66227+SMF92MTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000028                                   66228+SMF92MFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000054                                   66229+SMF92MBL DS    F         File system block size                         05-BPXYSMFR\n 00000058                                   66230+SMF92MST DS    BL8       Total space in file system in block size      X05-BPXYSMFR\n                                                 +                         units\n 00000060                                   66231+SMF92MSU DS    BL8       Allocated space in file system in block size  X05-BPXYSMFR\n                                                 +                         units\n 00000068                                   66232+SMF92MFG DS    0B        Flag byte                                      05-BPXYSMFR\n                         00000080           66233+SMF92MAU EQU   X'80'     Mounted by Automounter                         05-BPXYSMFR\n                         00000040           66234+SMF92MAS EQU   X'40'     Asynchronous mount 1 = Yes, 0 = No             05-BPXYSMFR\n 00000068                00000068 00000069  66235+         ORG   SMF92MFG+1                                               05-BPXYSMFR\n 00000069                                   66236+SMF92MF2 DS    0B        Second Flag byte                               05-BPXYSMFR\n                         00000080           66237+SMF92MLU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66238+SMF92MNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66239+SMF92MDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66240+SMF92MSN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000069                00000069 0000006A  66241+         ORG   SMF92MF2+1                                               05-BPXYSMFR\n 0000006A                                   66242+         DS    CL2       Reserved                                       05-BPXYSMFR\n                         0000006C           66243+SMF92FSM_LEN EQU *-SMF92FSM                                             05-BPXYSMFR\n 00000000                00000000 00000002  66244+SMF92FSP DSECT                                                          05-BPXYSMFR\n 00000000                                   66245+SMF92PPL DS    H         Length of path name                            05-BPXYSMFR\n 00000002                                   66246+SMF92PPN DS    0C        Path name of directory where file system is   X05-BPXYSMFR\n                                                 +                         mounted. Maximum length=1024\n                         00000002           66247+SMF92FSP_LEN EQU *-SMF92FSP                                             05-BPXYSMFR\n                                            66248+*\n                                            66249+*\n                                            66250+*    Data Section for File System Suspend subtype (subtype 2)\n                                            66251+*        This subtype is written as a result of a quiesce syscall\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  298\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66252+*\n                                            66253+*\n                                            66254+*\n 00000000                00000000 00000051  66255+SMF92FSS DSECT                                                          05-BPXYSMFR\n 00000000                                   66256+SMF92STS DS    BL8       Time of suspend, STCK format                   05-BPXYSMFR\n 00000008                                   66257+SMF92SFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 0000000C                                   66258+SMF92SFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000010                                   66259+SMF92SDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000014                                   66260+SMF92SDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66261+SMF92STN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66262+SMF92SFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000050                                   66263+SMF92SFG DS    0B        Flag btye                                      05-BPXYSMFR\n                         00000080           66264+SMF92SLU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66265+SMF92SNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66266+SMF92SDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66267+SMF92SSN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000050                00000050 00000051  66268+         ORG   SMF92FSS+81                                              05-BPXYSMFR\n                         00000051           66269+SMF92FSS_LEN EQU *-SMF92FSS                                             05-BPXYSMFR\n                                            66270+*\n                                            66271+*\n                                            66272+*    Data Section for File System Resume subtype (subtype 4)\n                                            66273+*        This subtype is written as a result of an unquiesce syscall\n                                            66274+*\n                                            66275+*\n                                            66276+*\n 00000000                00000000 00000059  66277+SMF92FSR DSECT                                                          05-BPXYSMFR\n 00000000                                   66278+SMF92RTS DS    BL8       Time of suspend, STCK format                   05-BPXYSMFR\n 00000008                                   66279+SMF92RTR DS    BL8       Time of resume, STCK format                    05-BPXYSMFR\n 00000010                                   66280+SMF92RFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000014                                   66281+SMF92RFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000018                                   66282+SMF92RDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66283+SMF92RDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66284+SMF92RTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000002C                                   66285+SMF92RFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000058                                   66286+SMF92RFG DS    0B        Flag btye                                      05-BPXYSMFR\n                         00000080           66287+SMF92RLU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66288+SMF92RNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66289+SMF92RDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66290+SMF92RSN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000058                00000058 00000059  66291+         ORG   SMF92FSR+89                                              05-BPXYSMFR\n                         00000059           66292+SMF92FSR_LEN EQU *-SMF92FSR                                             05-BPXYSMFR\n                                            66293+*\n                                            66294+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  299\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66295+*    Data Section for File System Unmount subtype (subtype 5)\n                                            66296+*    Data Section for File System Remount subtype (subtype 6)\n                                            66297+*    (Subtypes 5 & 6 differ only by the subtype numbers)\n                                            66298+*\n                                            66299+*\n                                            66300+*\n 00000000                00000000 00000094  66301+SMF92FSU DSECT                                                          05-BPXYSMFR\n 00000000                                   66302+SMF92UTM DS    BL8       Time of mount, STCK format                     05-BPXYSMFR\n 00000008                                   66303+SMF92UTU DS    BL8       Time of unmount, STCK format                   05-BPXYSMFR\n 00000010                                   66304+SMF92UFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000014                                   66305+SMF92UFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000018                                   66306+SMF92UDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66307+SMF92UDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66308+SMF92UTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000002C                                   66309+SMF92UFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000058                                   66310+SMF92UBL DS    F         File system block size                         05-BPXYSMFR\n 0000005C                                   66311+SMF92UST DS    BL8       Total space in file system in block size      X05-BPXYSMFR\n                                                 +                         units\n 00000064                                   66312+SMF92USU DS    BL8       Allocated space in file system in block size  X05-BPXYSMFR\n                                                 +                         units\n 0000006C                                   66313+SMF92USR DS    F         Reads                                          05-BPXYSMFR\n 00000070                                   66314+SMF92USW DS    F         Writes                                         05-BPXYSMFR\n 00000074                                   66315+SMF92UDI DS    F         Directory I/O blocks                           05-BPXYSMFR\n 00000078                                   66316+SMF92UIR DS    F         I/O blocks read                                05-BPXYSMFR\n 0000007C                                   66317+SMF92UIW DS    F         I/O blocks written                             05-BPXYSMFR\n 00000080                                   66318+SMF92UBR DS    BL8       Bytes read                                     05-BPXYSMFR\n 00000088                                   66319+SMF92UBW DS    BL8       Bytes written                                  05-BPXYSMFR\n 00000090                                   66320+SMF92UFG DS    0B        Flag byte                                      05-BPXYSMFR\n                         00000080           66321+SMF92UAU EQU   X'80'     Unmounted by Automounter                       05-BPXYSMFR\n 00000090                00000090 00000091  66322+         ORG   SMF92UFG+1                                               05-BPXYSMFR\n 00000091                                   66323+SMF92UF2 DS    0B        Second flag byte                               05-BPXYSMFR\n                         00000080           66324+SMF92ULU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66325+SMF92UNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66326+SMF92UDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66327+SMF92USN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000091                00000091 00000092  66328+         ORG   SMF92UF2+1                                               05-BPXYSMFR\n 00000092                                   66329+         DS    CL2       Reserved                                       05-BPXYSMFR\n                         00000094           66330+SMF92FSU_LEN EQU *-SMF92FSU                                             05-BPXYSMFR\n                                            66331+*\n                                            66332+*\n                                            66333+*   Data Section for Move File System subtype (subtype 7)\n                                            66334+*\n                                            66335+*\n                                            66336+*\n 00000000                00000000 00000094  66337+SMF92FSV DSECT                                                          05-BPXYSMFR\n 00000000                                   66338+SMF92VTV DS    BL8       Time of move, STCK format                      05-BPXYSMFR\n 00000008                                   66339+SMF92VTM DS    BL8       Time of mount, STCK format                     05-BPXYSMFR\n 00000010                                   66340+SMF92VFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  300\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000014                                   66341+SMF92VFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000018                                   66342+SMF92VDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66343+SMF92VDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66344+SMF92VTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000002C                                   66345+SMF92VNM DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000058                                   66346+SMF92VBL DS    F         File system block size                         05-BPXYSMFR\n 0000005C                                   66347+SMF92VST DS    BL8       Total space in file system in block size      X05-BPXYSMFR\n                                                 +                         units\n 00000064                                   66348+SMF92VSU DS    BL8       Allocated space in file system in block size  X05-BPXYSMFR\n                                                 +                         units\n 0000006C                                   66349+SMF92VSR DS    F         Reads                                          05-BPXYSMFR\n 00000070                                   66350+SMF92VSW DS    F         Writes                                         05-BPXYSMFR\n 00000074                                   66351+SMF92VDI DS    F         Directory I/O blocks                           05-BPXYSMFR\n 00000078                                   66352+SMF92VIR DS    F         I/O blocks read                                05-BPXYSMFR\n 0000007C                                   66353+SMF92VIW DS    F         I/O blocks written                             05-BPXYSMFR\n 00000080                                   66354+SMF92VBR DS    BL8       Bytes read                                     05-BPXYSMFR\n 00000088                                   66355+SMF92VBW DS    BL8       Bytes written                                  05-BPXYSMFR\n 00000090                                   66356+SMF92VFG DS    0B        Flag byte - reason for move                    05-BPXYSMFR\n                         00000080           66357+SMF92VUI EQU   X'80'     User-initiated                                 05-BPXYSMFR\n                         00000040           66358+SMF92VRI EQU   X'40'     Recovery                                       05-BPXYSMFR\n 00000090                00000090 00000091  66359+         ORG   SMF92VFG+1                                               05-BPXYSMFR\n 00000091                                   66360+SMF92VOF DS    0B        Flag byte - old status                         05-BPXYSMFR\n                         00000080           66361+SMF92VOL EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66362+SMF92VON EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66363+SMF92VOD EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66364+SMF92VOS EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000091                00000091 00000092  66365+         ORG   SMF92VOF+1                                               05-BPXYSMFR\n 00000092                                   66366+SMF92VNF DS    0B        Flag byte - new status                         05-BPXYSMFR\n                         00000080           66367+SMF92VNL EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66368+SMF92VNN EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66369+SMF92VND EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66370+SMF92VNS EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000092                00000092 00000093  66371+         ORG   SMF92VNF+1                                               05-BPXYSMFR\n 00000093                                   66372+         DS    CL1       Reserved                                       05-BPXYSMFR\n                         00000094           66373+SMF92FSV_LEN EQU *-SMF92FSV                                             05-BPXYSMFR\n                                            66374+*\n                                            66375+*\n                                            66376+*    Data Section for File Open subtype (subtype 10)\n                                            66377+*\n                                            66378+*\n                                            66379+*\n 00000000                00000000 00000018  66380+SMF92FOP DSECT                                                          05-BPXYSMFR\n 00000000                                   66381+SMF92OTO DS    BL8       Open time - STCK format                        05-BPXYSMFR\n 00000008                                   66382+SMF92OTY DS    X         File Type as defined in BPXYFTYP               05-BPXYSMFR\n 00000009                                   66383+SMF92OFG DS    0B        record flag                                    05-BPXYSMFR\n                         00000080           66384+SMF92ONF EQU   X'80'     record generated by VNode interface service    05-BPXYSMFR\n                         00000040           66385+SMF92ONS EQU   X'40'     Network or local socket, 1 = network           05-BPXYSMFR\n                         00000020           66386+SMF92OCS EQU   X'20'     Client or server socket 1 = client             05-BPXYSMFR\n 00000009                00000009 0000000A  66387+         ORG   SMF92OFG+1                                               05-BPXYSMFR\n 0000000A                                   66388+         DS    CL2       Reserved                                       05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  301\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000000C                                   66389+SMF92OTK DS    BL4       Open file token (Matches close)                05-BPXYSMFR\n 00000010                                   66390+SMF92OIN DS    F         Inode number                                   05-BPXYSMFR\n 00000014                                   66391+SMF92ODN DS    F         Unique device number                           05-BPXYSMFR\n                         00000018           66392+SMF92FOP_LEN EQU *-SMF92FOP                                             05-BPXYSMFR\n                                            66393+*\n                                            66394+*\n                                            66395+*    Data Section for File Close subtype (subtype 11)\n                                            66396+*\n                                            66397+*\n                                            66398+*\n 00000000                00000000 00000084  66399+SMF92FCL DSECT                                                          05-BPXYSMFR\n 00000000                                   66400+SMF92CTO DS    BL8       Open time - STCK format                        05-BPXYSMFR\n 00000008                                   66401+SMF92CTC DS    BL8       Close time - STCK format                       05-BPXYSMFR\n 00000010                                   66402+SMF92CTY DS    X         File type as defined in BPXYFTYP               05-BPXYSMFR\n 00000011                                   66403+SMF92CFG DS    0B        record flag                                    05-BPXYSMFR\n                         00000080           66404+SMF92CNF EQU   X'80'     record generated by VNode interface service    05-BPXYSMFR\n                         00000040           66405+SMF92CNS EQU   X'40'     Network or local socket 1 = network            05-BPXYSMFR\n                         00000020           66406+SMF92CCS EQU   X'20'     Client or server socket 1 = server             05-BPXYSMFR\n                         00000010           66407+SMF92CFC EQU   X'10'     File was cached                                05-BPXYSMFR\n                         00000008           66408+SMF92CDR EQU   X'08'     File had Deny Read on it                       05-BPXYSMFR\n                         00000004           66409+SMF92CDW EQU   X'04'     File had Deny Write on it                      05-BPXYSMFR\n 00000011                00000011 00000012  66410+         ORG   SMF92CFG+1                                               05-BPXYSMFR\n 00000012                                   66411+         DS    CL2       Reserved                                       05-BPXYSMFR\n 00000014                                   66412+SMF92CTK DS    BL4       Open file token                                05-BPXYSMFR\n 00000018                                   66413+SMF92CIN DS    F         Inode number                                   05-BPXYSMFR\n 0000001C                                   66414+SMF92CDN DS    F         Unique device number                           05-BPXYSMFR\n 00000020                                   66415+SMF92CSR DS    F         Reads                                          05-BPXYSMFR\n 00000024                                   66416+SMF92CSW DS    F         Writes                                         05-BPXYSMFR\n 00000028                                   66417+SMF92CDI DS    F         Directory I/O blocks                           05-BPXYSMFR\n 0000002C                                   66418+SMF92CIR DS    F         I/O blocks read                                05-BPXYSMFR\n 00000030                                   66419+SMF92CIW DS    F         I/O blocks written                             05-BPXYSMFR\n 00000034                                   66420+SMF92CBR DS    BL8       Bytes read                                     05-BPXYSMFR\n 0000003C                                   66421+SMF92CBW DS    BL8       Bytes written                                  05-BPXYSMFR\n 00000044                                   66422+SMF92CPN DS    CL64      Pathname                                       05-BPXYSMFR\n                         00000084           66423+SMF92FCL_LEN EQU *-SMF92FCL                                             05-BPXYSMFR\n                                            66424+*\n                                            66425+*\n                                            66426+*    Data Section for mmap subtype (subtype 12)\n                                            66427+*\n                                            66428+*\n                                            66429+*\n 00000000                00000000 00000018  66430+SMF92MMP DSECT                                                          05-BPXYSMFR\n 00000000                                   66431+SMF92MTO DS    BL8       time of mmap - STCK format                     05-BPXYSMFR\n 00000008                                   66432+SMF92MSZ DS    F         Number of bytes being memory mapped            05-BPXYSMFR\n 0000000C                                   66433+SMF92MTK DS    F         mmap file token (matches token in munmap data X05-BPXYSMFR\n                                                 +                         section\n 00000010                                   66434+SMF92MIN DS    F         file serial number                             05-BPXYSMFR\n 00000014                                   66435+SMF92MMDN DS   F         file unique device number                      05-BPXYSMFR\n                         00000018           66436+SMF92MMP_LEN EQU *-SMF92MMP                                             05-BPXYSMFR\n                                            66437+*\n                                            66438+*\n                                            66439+*    Data Section for munmap subtype (subtype 13)\n                                            66440+*\n                                            66441+*\n                                            66442+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  302\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000000                00000000 00000028  66443+SMF92MUN DSECT                                                          05-BPXYSMFR\n 00000000                                   66444+SMF92MUTO DS   BL8       time of mmap - STCK format                     05-BPXYSMFR\n 00000008                                   66445+SMF92MUTC DS   BL8       time of munmap - STCK format                   05-BPXYSMFR\n 00000010                                   66446+SMF92MUSZ DS   F         number of bytes being memory mapped            05-BPXYSMFR\n 00000014                                   66447+SMF92MUTK DS   F         mmap file token (matches token in mmap data   X05-BPXYSMFR\n                                                 +                         section\n 00000018                                   66448+SMF92MUIN DS   F         file serial number                             05-BPXYSMFR\n 0000001C                                   66449+SMF92MUDN DS   F         file unique device number                      05-BPXYSMFR\n 00000020                                   66450+SMF92MUIR DS   F         I/O blocks read                                05-BPXYSMFR\n 00000024                                   66451+SMF92MUIW DS   F         I/O blocks written                             05-BPXYSMFR\n                         00000028           66452+SMF92MUN_LEN EQU *-SMF92MUN                                             05-BPXYSMFR\n                                            66453+*\n                                            66454+*\n                                            66455+*    Data Section for File Delete Subtype (Subtype 14)\n                                            66456+*\n                                            66457+*\n                                            66458+*\n 00000000                00000000 000000CC  66459+SMF92DFL DSECT                                                          05-BPXYSMFR\n 00000000                                   66460+SMF92D   DS    0CL136    Delete information                             05-BPXYSMFR\n 00000000                                   66461+SMF92DFT DS    BL8       Delete time - STCK format                      05-BPXYSMFR\n 00000008                                   66462+SMF92DTY DS    X         File Type as defined in BPXYFTYP               05-BPXYSMFR\n 00000009                                   66463+SMF92DFLG DS   0X        Flags                                          05-BPXYSMFR\n                         00000080           66464+SMF92DREN EQU  X'80'     Rename record                                  05-BPXYSMFR\n 00000009                00000009 0000000A  66465+         ORG   SMF92DFLG+1                                              05-BPXYSMFR\n 0000000A                                   66466+         DS    H         Reserved                                       05-BPXYSMFR\n 0000000C                                   66467+SMF92DIN DS    F         File serial number                             05-BPXYSMFR\n 00000010                                   66468+SMF92DINP DS   F         File serial number of parent                   05-BPXYSMFR\n 00000014                                   66469+SMF92DDN DS    F         File unique device number                      05-BPXYSMFR\n 00000018                                   66470+SMF92DFS DS    CL44      File System Name                               05-BPXYSMFR\n 00000044                                   66471+SMF92DNL DS    F         Length of name for delete                      05-BPXYSMFR\n 00000048                                   66472+SMF92DFN DS    CL64      Name deleted                                   05-BPXYSMFR\n 00000088                                   66473+SMF92DR  DS    0CL68     Rename information                             05-BPXYSMFR\n 00000088                                   66474+SMF92DNLR DS   F         Length of name for rename                      05-BPXYSMFR\n 0000008C                                   66475+SMF92DFNR DS   CL64      Name deleted                                   05-BPXYSMFR\n                         000000CC           66476+SMF92DFL_LEN EQU *-SMF92DFL                                             05-BPXYSMFR\n                                            66477+*\n                                            66478+*\n                                            66479+*    Data Section for Ext Security Attr Change (Subtype 15)\n                                            66480+*\n                                            66481+*\n                                            66482+*\n 00000000                00000000 00000490  66483+SMF92ESA DSECT                                                          05-BPXYSMFR\n 00000000                                   66484+SMF92ESA_BASE DS 0CL144  Fixed Length Secion                            05-BPXYSMFR\n 00000000                                   66485+SMF92ACT DS    BL8       Change Time - STCK format                      05-BPXYSMFR\n 00000008                                   66486+SMF92ATY DS    X         File Type. See BPXYFTYP                        05-BPXYSMFR\n 00000009                                   66487+SMF92AFLG DS   X         Flags                                          05-BPXYSMFR\n 0000000A                                   66488+         DS    H         Reserved                                       05-BPXYSMFR\n 0000000C                                   66489+SMF92AIN DS    F         File Ino number                                05-BPXYSMFR\n 00000010                                   66490+SMF92ADN DS    F         File's File System devno                       05-BPXYSMFR\n 00000014                                   66491+SMF92AFS DS    CL44      File System Name                               05-BPXYSMFR\n 00000040                                   66492+SMF92AOLDGENVAL DS 0BL4  File's original gen values - same as          X05-BPXYSMFR\n                                                 +                         st_GenValue from BPXYSTAT.\n 00000040                                   66493+         DS    BL3                                                      05-BPXYSMFR\n 00000043                                   66494+SMF92AOLDGENVALSECBYTE DS 0B                                            05-BPXYSMFR\n                         00000010           66495+SMF92AOLDSHARELIB EQU X'10' Shared Library                              05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  303\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000004           66496+SMF92AOLDAPFAUTH EQU X'04' Program is APF Auth                          05-BPXYSMFR\n                         00000002           66497+SMF92AOLDPROGCTL EQU X'02' Program Controlled                           05-BPXYSMFR\n 00000043                00000043 00000044  66498+         ORG   SMF92AOLDGENVAL+4                                        05-BPXYSMFR\n 00000044                                   66499+SMF92AOLDSECATTRSC DS 0CL4 File's original Security flags in character X05-BPXYSMFR\n                                                 +                         form: A, P, S.\n 00000044                                   66500+SMF92AOLDATTRCHAR DS CL1 '>' Delimiter                                  05-BPXYSMFR\n 00000045                                   66501+SMF92AOLDSHRLIBC DS CL1  =S if Shared Lib was on                        05-BPXYSMFR\n 00000046                                   66502+SMF92AOLDAPFAUTHC DS CL1 =A if APF Auth was on                          05-BPXYSMFR\n 00000047                                   66503+SMF92AOLDPGMCTLC DS CL1  =P if Program Ctl was on                       05-BPXYSMFR\n 00000048                                   66504+SMF92ANEWGENVAL DS 0BL4  New gen values after the change same as       X05-BPXYSMFR\n                                                 +                         st_GenValue from BPXYSTAT.\n 00000048                                   66505+         DS    BL3                                                      05-BPXYSMFR\n 0000004B                                   66506+SMF92ANEWGENVALSECBYTE DS 0B                                            05-BPXYSMFR\n                         00000010           66507+SMF92ANEWSHARELIB EQU X'10' Shared Library                              05-BPXYSMFR\n                         00000004           66508+SMF92ANEWAPFAUTH EQU X'04' Program is APF Auth                          05-BPXYSMFR\n                         00000002           66509+SMF92ANEWPROGCTL EQU X'02' Program Controlled                           05-BPXYSMFR\n 0000004B                0000004B 0000004C  66510+         ORG   SMF92ANEWGENVAL+4                                        05-BPXYSMFR\n 0000004C                                   66511+SMF92ANEWSECATTRSC DS 0CL4 File's new Security flags in character      X05-BPXYSMFR\n                                                 +                         form: A, P, S.\n 0000004C                                   66512+SMF92ANEWATTRCHAR DS CL1 '>' Delimiter                                  05-BPXYSMFR\n 0000004D                                   66513+SMF92ANEWSHRLIBC DS CL1  =S if Shared Lib is on                         05-BPXYSMFR\n 0000004E                                   66514+SMF92ANEWAPFAUTHC DS CL1 =A if APF Auth is on                           05-BPXYSMFR\n 0000004F                                   66515+SMF92ANEWPGMCTLC DS CL1  =P if Program Ctl is on                        05-BPXYSMFR\n 00000050                                   66516+SMF92AOWNUID DS F        File Owner UID                                 05-BPXYSMFR\n 00000054                                   66517+SMF92AOWNGID DS F        File Owner GID                                 05-BPXYSMFR\n 00000058                                   66518+SMF92ASECLABEL DS CL8    File SecLabel                                  05-BPXYSMFR\n 00000060                                   66519+SMF92AAUDITFID DS CL16   RACF's File Id - this is the same as the      X05-BPXYSMFR\n                                                 +                         XXXX_FILE_ID in the various RACF SMF Type 80  X\n                                                 +                         audit records.\n 00000070                                   66520+         DS    CL20      Reserved                                       05-BPXYSMFR\n 00000084                                   66521+SMF92ACWDRC DS F         getcwd Error Return Code                       05-BPXYSMFR\n 00000088                                   66522+SMF92ACWDRSN DS F        getcwd Error Reason Code - If the full        X05-BPXYSMFR\n                                                 +                         pathname of the file could not be determined  X\n                                                 +                         these fields contain the return and reason    X\n                                                 +                         codes of the error. In this case the SMF92APN X\n                                                 +                         field will contain the relative pathname as   X\n                                                 +                         entered by the user. SMF92APN is a full       X\n                                                 +                         pathname if SMF92ACwdRc=0.\n 0000008C                                   66523+SMF92APNL DS   F         File Pathname length                           05-BPXYSMFR\n 00000090                                   66524+SMF92APN DS    CL1024    File Pathname - the absolute pathname as      X05-BPXYSMFR\n                                                 +                         entered by the user or the getcwd() value for X\n                                                 +                         the current working directory concatenated    X\n                                                 +                         with the relative name that was entered by    X\n                                                 +                         the user.\n                                            66525+*\n                                            66526+*    *****************************************************************\n                                            66527+*    *                                                               *\n                                            66528+*    * The SubType 15 record is variable length and ends at the end  *\n                                            66529+*    * of the pathname string within the SMF92APN field.\n                                            66530+*    * Security Attribute Character Values - for SMF92AOldSecAttrsC  *\n                                            66531+*    * and SMF92ANewSecAttrsC\n                                            66532+*    *                                                               *\n                                            66533+*    *****************************************************************\n                                            66534+*\n                                            66535+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  304\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        000000C1           66536+SMF92#SECATTRAPFAUTH EQU C'A'                                           05-BPXYSMFR\n                         000000D7           66537+SMF92#SECATTRPGMCTL EQU C'P'                                            05-BPXYSMFR\n                         000000E2           66538+SMF92#SECATTRSHARLIB EQU C'S'                                           05-BPXYSMFR\n                         0000006E           66539+SMF92#SECATTRDELIM EQU C'>'                                             05-BPXYSMFR\n                                            66540+*\n                                            66541+*    Version Constants - SMF92RVN\n                                            66542+*\n                                            66543+*\n                         0000F0F2           66544+SMF92#VERSION02 EQU C'02' Record version 02                             05-BPXYSMFR\n                         0000F0F1           66545+SMF92#VERSION01 EQU C'01' Record version 01                             05-BPXYSMFR\n                         0000F0F2           66546+SMF92#VERSION EQU C'02'  Record version num                             05-BPXYSMFR\n                                            66547+*\n                                            66548+*    Subtype Values - SMF92TYP & SMF92STP\n                                            66549+*\n                                            66550+*\n                         00000001           66551+SMF92#MOUNT EQU 1        Mount subtype                                  05-BPXYSMFR\n                         00000002           66552+SMF92#SUSPEND EQU 2      Suspend subtype                                05-BPXYSMFR\n                         00000004           66553+SMF92#RESUME EQU 4       Resume subtype                                 05-BPXYSMFR\n                         00000005           66554+SMF92#UNMOUNT EQU 5      UnMount subtype                                05-BPXYSMFR\n                         00000006           66555+SMF92#REMOUNT EQU 6      ReMount subtype                                05-BPXYSMFR\n                         00000007           66556+SMF92#MOVE EQU 7         Move subtype                                   05-BPXYSMFR\n                         0000000A           66557+SMF92#OPEN EQU 10        Open subtype                                   05-BPXYSMFR\n                         0000000B           66558+SMF92#CLOSE EQU 11       Close subtype                                  05-BPXYSMFR\n                         0000000C           66559+SMF92#MMAP EQU 12        Memmap subtype                                 05-BPXYSMFR\n                         0000000D           66560+SMF92#MUNMAP EQU 13      Memunmap subtype                               05-BPXYSMFR\n                         0000000E           66561+SMF92#DELETE EQU 14      Delete subtype                                 05-BPXYSMFR\n                         0000000F           66562+SMF92#EXTSEC EQU 15      Ext Security                                   05-BPXYSMFR\n                         00000490           66563+SMF92ESA_LEN EQU *-SMF92ESA                                             05-BPXYSMFR\n                                            66564+*                                                                  @D6A\n                                            66565+*        ERBSMFR 79\n                                            66567+*                                */\n                                            66568+*%ERBBGN1: ;\n                                            66569+*/********************************************************************/\n                                            66570+*/*                                                                  */\n                                            66571+*/* MODULE-NAME = ERBSMFR                                            */\n                                            66572+*/*                                                                  */\n                                            66573+*/* DESCRIPTIVE NAME = RMF SMF Record Mapping                        */\n                                            66574+*/*                                                                  */\n                                            66575+*/* PROPRIETARY-STATEMENT =                                          */\n                                            66576+*/*                                                                  */\n                                            66577+*/*      Licensed Materials - Property of IBM                        */\n                                            66578+*/*      \"Restricted Materials of IBM\"                               */\n                                            66579+*/*      5694-A01 Copyright IBM Corp. 1997, 2007                     */\n                                            66580+*/*                                                                  */\n                                            66581+*/*      Status = z/OS V1R9 RMF (HRM7740)                            */\n                                            66582+*/*                                                                  */\n                                            66583+*/*                                                                  */\n                                            66584+*/* METHOD OF ACCESS =                                               */\n                                            66585+*/*                                                                  */\n                                            66586+*/*   PL/X =                                                         */\n                                            66587+*/*     %INCLUDE SYSLIB(ERBSMFR) semicolon                           */\n                                            66588+*/*                                                                  */\n                                            66589+*/*     NOTE: Macro variables must be set to '1' for each record     */\n                                            66590+*/*           type desired. They are named IFARXX where XX is        */\n                                            66591+*/*           the record number (70-79).                             */\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  305\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66592+*/*                                                                  */\n                                            66593+*/*           For SMF records 70, 72 and 74 an additional            */\n                                            66594+*/*           variable IFAR70x, IFAR72x or IFA74x = 'YES'            */\n                                            66595+*/*           requests the subtype x. Default is subtype 1.          */\n                                            66596+*/*                                                                  */\n                                            66597+*/*           For SMF Records 78 and 89 additional switches          */\n                                            66598+*/*           IFAR78X, resp. IFAR79X must be set to one,             */\n                                            66599+*/*           where X is a subtype of SMF record 78 (1-3)            */\n                                            66600+*/*           or SMF record 79 (1-E). If SMF record 78,              */\n                                            66601+*/*           subtype 2, is to be included the additional macro      */\n                                            66602+*/*           variable IFAR78V must be set to '1' to request         */\n                                            66603+*/*           automatic inclusion of the necessary mapping           */\n                                            66604+*/*           ERBVSDAT.                                              */\n                                            66605+*/*                                                                  */\n                                            66606+*/*   ASSEMBLER =                                                    */\n                                            66607+*/*                                                                  */\n                                            66608+*/*     ERBSMFR (N1,N2,N3,...) Where N1,N2,N3 are the record types   */\n                                            66609+*/*                            desired in the range 70-79            */\n                                            66610+*/*     NOTE: If record type 78 and/or 79 is requested all           */\n                                            66611+*/*           subtypes will be mapped.                               */\n                                            66612+*/*                                                                  */\n                                            66613+*/* DISTRIBUTION LIBRARY = SYS1.MACLIB                               */\n                                            66614+*/*                                                                  */\n                                            66615+*/* CHANGE-ACTIVITY = see below                                      */\n                                            66616+*/*                                                                  */\n                                            66617+*/*  $N0=SMFFORMT,HRM3102,,FRS: SMF RECORD RESTRUCTURING         @N0A*/\n                                            66618+*/*  $Q1=MISC,HRM3402,,SHR: Enhancements for SMF record 78       @Q1A*/\n                                            66619+*/*  OZ87634 Enhancements for SMF record 78                  @ZA87634*/\n                                            66620+*/*  $Y1=MISC,HRM4420,,THE: New COPYRIGHT text and PLAS 1.4      @Y1A*/\n                                            66621+*/*  $A9=PGRC,JRM4422,,DPN: Change to SMF record 71              @A9A*/\n                                            66622+*/*  $B1=R430,HRM4430,,THE: Distribution lib in prolog           @B1A*/\n                                            66623+*/*  $J1=CRYPTO,OW49808,,GUB: New SMF Record 70 Subtype 2        @J1A*/\n                                            66624+*/*  $01=V1R8,HRM7730,,GUB: z/OS V1R8 RMF                        @01A*/\n                                            66625+*/*                                                                  */\n                                            66626+*/********************************************************************/\n                                            66627+*%GOTO ERBBGN2;                  /* ASSEMBLER PART\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  306\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66630+**/\n                                            66631+*/*** START OF SPECIFICATIONS ****************************************\n                                            66632+*01* Proprietary Statement:                                          *\n                                            66634+*\n                                            66635+*        PROPRIETARY STATEMENT:\n                                            66636+*           Licensed Materials - Property of IBM\n                                            66637+*           \"Restricted Materials of IBM\"\n                                            66638+*           Copyright IBM Corp. 1977, 2010                        @41C\n                                            66639+*\n                                            66640+*           Status: z/OS V1R12 RMF (HRM7770)                      @41C\n                                            66641+*\n                                            66642+*       ?ERBCOPY1 Y1(1983);\n                                            66643+*/*                                                                  *\n                                            66644+*                                                                    *\n                                            66645+*   Macro Name: ERBSMF79                                             *\n                                            66646+*                                                                    *\n                                            66647+*   Descriptive Name: Mapping Macro for SMF record type 79           *\n                                            66648+*                     (Monitor II) with following subtypes:          *\n                                            66649+*                                                                    *\n                                            66650+*                       1 - Address Space State Data                 *\n                                            66651+*                       2 - Address Space Resource Data              *\n                                            66652+*                       3 - Storage/Processor (SRCS) Data            *\n                                            66653+*                       4 - Paging Activity                          *\n                                            66654+*                       5 - Address Space SRM Data                   *\n                                            66655+*                       6 - Reserve (SENQR) Data                     *\n                                            66656+*                       7 - Enqueue Contention (SENQ) Data           *\n                                            66657+*                       9 - Device Activity                          *\n                                            66658+*                      11 - Page Data Set Activity                   *\n                                            66659+*                      12 - Channel Path Activity                    *\n                                            66660+*                      14 - I/O Queuing Activity                     *\n                                            66661+*                      15 - IRLM Long Lock Detection                 *\n                                            66662+*                                                                    *\n                                            66663+*                                                                    *\n                                            66664+*   DSECT names: SMF79HDR, SMF79PRO, R79CHL,                         *\n                                            66665+*                R791ELEM,                                           *\n                                            66666+*                R792ELEM,                                           *\n                                            66667+*                R793,                                               *\n                                            66668+*                R794,                                               *\n                                            66669+*                R795ELEM,                                           *\n                                            66670+*                R796ELEM,                                           *\n                                            66671+*                R797ELEM,                                           *\n                                            66672+*                R798ELEM,                                           *\n                                            66673+*                R799ELEM,                                           *\n                                            66674+*                R79AELEM,                                           *\n                                            66675+*                R79BCNTL, R79BELEM,                                 *\n                                            66676+*                R79CCNTL, R79CCHNL                                  *\n                                            66677+*                R79DCS, R79DCPD, R79DDS,                            *\n                                            66678+*                R79EGD, R79ECS, R79ECPD, R79EDS                     *\n                                            66679+*                R79FIRLM                                        @F1A*\n                                            66680+*                                                                    *\n                                            66681+*                                                                    *\n                                            66682+*   Function: This macro maps the complete SMF record type 79        *\n                                            66683+*             The record consists of 5 parts:                        *\n                                            66684+*             1. The fixed portion of the SMF header.                *\n                                            66685+*                This mapping is invoked by calling macro ERBHDR.    *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  307\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66686+*             2. The individual header extension which               *\n                                            66687+*                contains offset/length/number triplets              *\n                                            66688+*                to address the record parts following the           *\n                                            66689+*                RMF product section.                                *\n                                            66690+*             3. The RMF product section.                            *\n                                            66691+*                This mapping is invoked by calling macro ERBPRO.    *\n                                            66692+*             4. The RMF data control section.                       *\n                                            66693+*             5. The RMF data sections.                              *\n                                            66694+*                                                                    *\n                                            66695+*   Notes: None                                                      *\n                                            66696+*                                                                    *\n                                            66697+*   Method of access: See below                                      *\n                                            66698+*                                                                    *\n                                            66699+*   BAL: ERBSMF79                                                    *\n                                            66700+*                                                                    *\n                                            66701+*   Created by: ERBPCTBL                                             *\n                                            66702+*                                                                    *\n                                            66703+*   Pointed to by: local pointer                                     *\n                                            66704+*                                                                    *\n                                            66705+*   Subpool and Key: Subpool MFSBSUBP                                *\n                                            66706+*                                                                    *\n                                            66707+*   Serialization: None                                              *\n                                            66708+*                                                                    *\n                                            66709+*   Size:  SMF79HDR   68                                             *\n                                            66710+*          SMF79PRO   52                                             *\n                                            66711+*          R79CHL    104                                             *\n                                            66712+*          R791ELEM  236                                         @31A*\n                                            66713+*          R792ELEM  224                                         @31C*\n                                            66714+*          R793      102                                     @WA56739*\n                                            66715+*          R794      108                                         @Y4C*\n                                            66716+*          R795ELEM   79                                         @C1C*\n                                            66717+*          R796ELEM   86                                         @C2C*\n                                            66718+*          R797ELEM   92                                             *\n                                            66719+*          R798ELEM   52                                             *\n                                            66720+*          R799ELEM  104                                         @01C*\n                                            66721+*          R79AELEM   64                                         @Y4C*\n                                            66722+*          R79BCNTL    4                                             *\n                                            66723+*          R79BELEM   98                                         @C2C*\n                                            66724+*          R79CCNTL   20                                             *\n                                            66725+*          R79CCHNL  108                                         @22C*\n                                            66726+*          R79DCS     12                                             *\n                                            66727+*          R79DCPD    12                                             *\n                                            66728+*          R79DDS     32                                             *\n                                            66729+*          R79EGD      8                                             *\n                                            66730+*          R79ECS     12                                             *\n                                            66731+*          R79ECPD    32                                         @Z1C*\n                                            66732+*          R79EDS     32                                         @I3C*\n                                            66733+*          R79FIRLM  103                                         @F1A*\n                                            66734+*                                                                    *\n                                            66735+*   Deleted by:                                                      *\n                                            66736+*                                                                    *\n                                            66737+*   Distribution Library: SYS1.MACLIB                                *\n                                            66738+*                                                                    *\n                                            66739+*   Change Activity: See below                                       *\n                                            66740+*                                                                    *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  308\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66741+*   $N0=MON1,HRM3102,,WBS: NEW FOR RMF 3.1                       @N0A*\n                                            66742+*   CHANGE DECLARE FOR R79ACIDX SO THE VALUE IS UNSIGNED     @ZA69833*\n                                            66743+*   REDEFINE R79IST                                          @ZA70287*\n                                            66744+*   $O1=4381,JRM3212,,SHR: 4381 - SUPPORT                        @O1A*\n                                            66745+*   $P1=SRM,HRM3302,,THE: SRM - SUPPORT  (SAD-STCPS)             @P1A*\n                                            66746+*   $P2=ES,HRM3302,,KLZ: CHANGED LAYOUT / EXTENDED STORAGE       @P2A*\n                                            66747+*   $P3=MON2,HRM3302,,FRY: CHANGED LAYOUT / DOMAIN REPORT        @P3A*\n                                            66748+*   $P4=3090,HRM3302,,WEY: 3090 support                          @P4A*\n                                            66749+*   $P5=3090,HRM3302,,MLN: 3090 support                          @P5A*\n                                            66750+*   $E1=3351P,HRM3302,,FLJ: Support for 3351P                    @E1A*\n                                            66751+*   $P6=ES,HRM3302,,KLZ: PTM   PA70089  / EXTENDED STORAGE       @P6A*\n                                            66752+*   $Q1=MISC,HRM3402,,MLN: Converted to global ENQ               @Q1A*\n                                            66753+*   $S1=TRQ,JRM3412,,WRC: Support for SP2.1.7 True Ready Queue   @S1A*\n                                            66754+*   $Q2=MIG,HRM3402,,HEN: R794MAGE is moved and changed to           *\n                                            66755+*                         fixed 31.                      OZ95298 @Q2A*\n                                            66756+*   NO CHANGE - RESHIPPED TO SUPERCEDE OZ95298               @ZA98025*\n                                            66757+*   $R0=220SUP,JRM3422,,WRC: SUPPORT FOR MVS SP2.2.0             @R0A*\n                                            66758+*   $U1=SGSUP,JRM3512,,KLZ: Storage Group support                @U1A*\n                                            66759+*   $U2=UCBDMC,JRM3512,,TJI: UCBDMC constraint relief            @U2A*\n                                            66760+*   $W1=SP310,HRM4410,,SOT: MVS SP 3.1.0 support                 @W1A*\n                                            66761+*   $W2=SP310,HRM4410,,PAE: IARXC return code handling           @W2A*\n                                            66762+*   $W3=LSCR,HRM4410,,BHL: Large systems constraint relief       @W3A*\n                                            66763+*   $W4=APAR,HRM4410,,SOT: Integration of APAR OY05739           @W4A*\n                                            66764+*   $W5=MISC,HRM4410,,PAE: ASCB frame count constraint relief    @W5A*\n                                            66765+*   $W6=MISC,JRM4411,,SHR: Clean up to reduce compiler messages  @W6A*\n                                            66766+*   $W7=SP310E,JRM4411,,PAE: MVS SP 3.1.0E Support               @W7A*\n                                            66767+*   $W8=SP310E,JRM4411,,PAE: Stor isolation for ESO hiperspaces  @W8A*\n                                            66768+*   $Y1=DMSR,HRM4420,,CLL: Model Type (SHARE SOMVSP87001)        @Y1A*\n                                            66769+*   $Y2=LJM,HRM4420,,LAH: Large Job Management Support           @Y2A*\n                                            66770+*   Expanded storage frame count constraint relief           @YA28328*\n                                            66771+*   Support for MVS/ESA Large Job Management SPE             @YA20560*\n                                            66772+*   $Z1=OY29112,HRM4420,,WRC: ESCA Basis                         @Z1A*\n                                            66773+*   $Z2=OY29112,HRM4420,,WRC: Serial & Switch Supprt             @Z2A*\n                                            66774+*   SHR: Include FLPA/EFLPA frames and real frame zero       @YA34458*\n                                            66775+*   $A1=APPC,JRM4421,,BAJU: APPC tolerating support              @A1A*\n                                            66776+*   $A2=WSET,JRM4421,,BB: Working Set Management / Block Paging  @A2A*\n                                            66777+*   $A3=WSET,JRM4421,,RTN: Working Set Management / Block Paging @A3A*\n                                            66778+*   $A9=MISC,JRM4422,,DPN: Recompile                             @A9A*\n                                            66779+*   RN:  Increases max number of channel paths per LCU to 8  @YA41310*\n                                            66780+*   GBO: Fix 0C9 calculating AVERAGE TRANSACTION TIME        @YA41781*\n                                            66781+*   PFU: Insert 4 Byte Field for EXCP count                  @YA42170*\n                                            66782+*   $B1=R430,HRM4430,,HOL: Modifies DISTLIB statement            @B1A*\n                                            66783+*   $B2=OMVS,HRM4430,,RPT: OPEN/MVS Toleration Support           @B2A*\n                                            66784+*   $BA=MIF,JRM4422,,BHL: ESCON Multiple Image Facility SPE      @BAA*\n                                            66785+*   LGO: INCLUDE CTC TYPES                                   @YA55031*\n                                            66786+*   $C1=WLM2,HRM4440,,HKH: WLM support, subtypes 1, 2, 5, 8      @C1A*\n                                            66787+*   $C2=4KUCB,HRM4440,,FF: Four Digit Device Numbers (>4K UCB)   @C2A*\n                                            66788+*   LAN: Increase max number of channel paths for 308X/4381  @YA61897*\n                                            66789+*   $C3=NEWCH,HRM5510,,FF: New channel support (OSA,ISC,Pacer)   @C3A*\n                                            66790+*   HUE: ABEND0C9 in ERBRDEV due to invalid data because     @YA66876*\n                                            66791+*        Mon I interval ended while ERBGDEV accessed EDDBB   @YA66876*\n                                            66792+*   HUE: correct incompatible change from @YA55031           @YA67090*\n                                            66793+*        may cause PP convertion errors (430 to 510), FF     @YA67090*\n                                            66794+*   FF:  KRO0397: 0C4 with Reason Code 10 in ERBGENQR        @WA02579*\n                                            66795+*   HUE: ABEND0C9 when dividing TCB time (from ASCBEJST)     @WA03326*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  309\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66796+*        by 1000 as result does not fit in 31 bit field      @WA03326*\n                                            66797+*        Equivalent to OW02302                               @WA03326*\n                                            66798+*   BHL: LPAR enhancements                                   @WA05435*\n                                            66799+* $D1=CAP,HRM5520,,JKE: Captured Storage support                 @D1A*\n                                            66800+* $D2=R79,HRM5520,,DK: SMF Record 79(1) Enhancement for SDSF     @D2A*\n                                            66801+* $D3=NEWISD,HRM5520,,FF: Integrated System Device           @WA10257*\n                                            66802+*   SUW: Add new Flag R799DTF - Device connect or pending or @WA15094*\n                                            66803+*                               disconnect time is invalid   @WA15094*\n                                            66804+* $E1=IPM,OW17898,,HBE: Enabling of M II reports                 @E1A*\n                                            66805+*   AJU: Corrects comment for R793DQ and R792EXCT+R791EXCT   @WA19913*\n                                            66806+* $E2=MISC,HRM6603,,HOL: Preemptable SRB support                 @E2A*\n                                            66807+* $F1=IRLM,HRM6604,,HOL: IMS Long Lock Report                    @F1A*\n                                            66808+* GUB: Additional field in 79.15 record                      @WA27252*\n                                            66809+* FDL: Add ORG for header adjustment (PMR16340)              @WA28830*\n                                            66810+* $G1=ACR,HRM6606,,PS: Channel Type Support                      @G1A*\n                                            66811+* $G2=PAV,HRM6606,,PS: PAV device support                        @G2A*\n                                            66812+* $H1=FICON,HRM6607,,PS:  Fibre Channel Support                  @H1A*\n                                            66813+* $I1=MISC,HRM7703,,FDL: Correct comments on R79xCL              @I1A*\n                                            66814+* $I2=TBIT,HRM7703,,SHR: Honors T-bit in SCHIB                   @I2A*\n                                            66815+*  PS: R79CCPTS to small for values bigger than 16MB         @WA39393*\n                                            66816+* SHR: PAV device support                                    @WA31701*\n                                            66817+* $I3=DCM,HRM7703,,SHR: Dynamic CHPID Management support         @I3A*\n                                            66818+* $I4=WLM,HRM7703,,HOL: SDSF Support                             @I4A*\n                                            66819+* $I5=BIT64,HRM7703,,VTH: 64 Bit real support                    @I5A*\n                                            66820+* $J1=GMI,HRM7705,,BEN: WLM Goal Mode Inhibitor removal          @J1A*\n                                            66821+* $J2=SDSF,HRM7705,,GUB: SDSF Support                            @J2A*\n                                            66822+* $J3=MISC,HRM7705,,GUB: New swap reason code                    @J3A*\n                                            66823+* GUB: Temporal affinity                                     @WA46622*\n                                            66824+* $J4=IQDIO,HRM7705,,PS:  iQDIO Support                          @J4A*\n                                            66825+* $J5=HYDRA,HRM7705,,PS:  Hydra 1.75 support                     @J5A*\n                                            66826+*  PS: IQDIO support Monitor II/III in I/O part              @WA50187*\n                                            66827+* $K1=XMP,HRM7708,,PS: T-Rex toleration                          @K1A*\n                                            66828+* $K2=MISC,HRM7708,,GUB: Swap data set removal                   @K2A*\n                                            66829+* $K3=XMP,HRM7708,,PS: T-Rex exploitation                        @K3A*\n                                            66830+* $K4=XMP,HRM7708,,PS: T-Rex Support 2-Gigabit change            @K4A*\n                                            66831+* FDL: Prepares for up to 65535 devices                      @WA55906*\n                                            66832+* FDL: Replaces R793 SMF record fields by 4-byte fields      @WA56739*\n                                            66833+* FDL: Subtype 255 reserved for ILOCK processing             @WA57131*\n                                            66834+*  PS: Changed comments for SMF73SMP and SMF73CSS            @OA04260*\n                                            66835+* $K5=IFA,OA05731,,WLR: IFA support                              @K5A*\n                                            66836+* $K6=PTERO,OA07950,,WLR: PTero support and IFA completion       @K6A*\n                                            66837+* $L1=PPS,OA09921,,WLR: Preferred Paths Support                  @L1A*\n                                            66838+* VTH: System Utility Processor (SUP) support                @OA13499*\n                                            66839+* $02=GT128,HRM7730,,GUB: >128G real storage support             @02A*\n                                            66840+*  PS: R79BRLEN now includes R79BELEM totally                @OA16748*\n                                            66841+* $01=HPV,OA12865,,PS: HyperPAV Support                          @01A*\n                                            66842+* RPE: New EXCP Count Field ( DoubleWord )                   @OA15850*\n                                            66843+* PMU: Change comment for R791TCPC                           @OA21046*\n                                            66844+* $21=WLMJ7Z,HRM7750,,VTH: WLM enqueue mgmt stage 3 support      @21A*\n                                            66845+* $22=FCX,OA21140,,GUB: zHPF support                             @22A*\n                                            66846+* $31=FITS,HRM7760,,GUB: Additional fields for zIIP and zAAP     @31A*\n                                            66847+* PMU: Adds new region type introduced with IMS APAR PK74078 @OA28931*\n                                            66848+*                                                                    *\n                                            66849+****** END OF SPECIFICATIONS *****************************************\n                                            66850+*                                                                    */\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  310\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66851+*        %GOTO PLSMACRO;\n                                            66852+*\n                                            66853+*/*\n-\n                                            66855+**********************  COMMON SMF HEADER  ****************************\n                                            66857+***** START OF SPECIFICATIONS *****************************************\n                                            66858+*                                                                     *\n                                            66859+*   MODULE-NAME = ERBHDR                                              *\n                                            66860+*                                                                     *\n                                            66861+*   DESCRIPTIVE-NAME = GENERAL MAPPING OF RMF SMF RECORD HEADER       *\n                                            66862+*                                                                     *\n                                            66864+*\n                                            66865+*        PROPRIETARY STATEMENT:\n                                            66866+*           Licensed Materials - Property of IBM\n                                            66867+*           \"Restricted Materials of IBM\"\n                                            66868+*           Copyright IBM Corp. 1977, 2010                        @41C\n                                            66869+*\n                                            66870+*           Status: z/OS V1R12 RMF (HRM7770)                      @41C\n                                            66871+*\n                                            66872+*\n                                            66873+*   FUNCTION : THIS MACRO MAPS THE GENERAL HEADER PART OF RMF         *\n                                            66874+*              SMF RECORDS DEPENDING ON THE MACRO CALL.               *\n                                            66875+*              IT IS CALLED BY MACRO ERBSMF                           *\n                                            66876+*                                    ERBSMF70                         *\n                                            66877+*                                       :                             *\n                                            66878+*                                    ERBSMF79                         *\n                                            66879+*                                                                     *\n                                            66880+*   MODULE-TYPE = BILINGUAL MAPPING MACRO                             *\n                                            66881+*                                                                     *\n                                            66882+*   METHOD OF INVOCATION = SEE BELOW                                  *\n                                            66883+*                                                                     *\n                                            66884+*      PLS - .QUESTION MARK.ERBHDR ATTRIBUT(ATTRIBUTES)               *\n                                            66885+*            .QUESTION MARK.ERBHDR TYPE(70) ATTRIBUT(ATTRIBUTES)      *\n                                            66886+*                                       :                             *\n                                            66887+*            .QUESTION MARK.ERBHDR TYPE(79) ATTRIBUT(ATTRIBUTES)      *\n                                            66888+*            WHERE ATTRIBUTES ARE ANY ACCEPTABLE PLS ATTRIBUTES       *\n                                            66889+*            FOR STRUCTURE DECLARATIONS.                              *\n                                            66890+*                                                                     *\n                                            66891+*      BAL - ERBHDR                                                   *\n                                            66892+*          - ERBHDR 70                                                *\n                                            66893+*                :                                                    *\n                                            66894+*          - ERBHDR 79                                                *\n                                            66895+*                                                                     *\n                                            66896+*   DISTRIBUTION LIBRARY: ARMFMAC1                                @B1A*\n                                            66897+*                                                                     *\n                                            66898+*   CHANGE-ACTIVITY = SEE BELOW                                       *\n                                            66899+* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS            *\n                                            66900+* $P1=MISC,HRM3302,,CIH: MACRO COMMENTARY ENHANCEMENTS            @P1A*\n                                            66901+* $R0=220SUP,JRM3422,,WRC: Support for MVS/SP220                  @R0A*\n                                            66902+* $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY          @X0A*\n                                            66903+* $W1=SP310E,JRM4411,,PAE: MVS/ESA support                        @W1A*\n                                            66904+* $A1=SP420,JRM4421,,BGBO: MVS SP 4 support                       @A1A*\n                                            66905+* $B1=R430,HRM4430,,THE: Distribution lib in prolog               @B1A*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  311\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66906+* GBO: Cleanup of PADI-inconsistencies                        @WA05544*\n                                            66907+*                                                                     *\n                                            66908+****** END OF SPECIFICATIONS ******************************************\n 00000000                00000000 00000044  66909+SMF79HDR  DSECT                                                         05-ERBHDR\n 00000000                                   66910+SMF79HDC  DS    CL36     COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 05-ERBHDR\n 00000024                00000024 00000000  66911+          ORG   SMF79HDC                                       @WA05544 05-ERBHDR\n 00000000                                   66912+SMF79LEN  DS    BL2      RECORD LENGTH                                  05-ERBHDR\n 00000002                                   66913+SMF79SEG  DS    BL2      SEGMENT DESCRIPTOR                             05-ERBHDR\n 00000004                                   66914+SMF79FLG  DS    BL1      HEADER FLAG BYTE                               05-ERBHDR\n                         00000080           66915+SMF79RRF  EQU   X'80'    NEW RECORD FORMAT                              05-ERBHDR\n                         00000040           66916+SMF79SUT  EQU   X'40'    SUBTYPES USED                             @R0A 05-ERBHDR\n                         00000010           66917+SMF79V4   EQU   X'10'    MVS/ESA Version 4                         @A1A 05-ERBHDR\n                         00000008           66918+SMF79ESA  EQU   X'08'    MVS/ESA VERSION                           @W1A 05-ERBHDR\n                         00000004           66919+SMF79VXA  EQU   X'04'    MVS/XA VERSION                            @R0A 05-ERBHDR\n                         00000002           66920+SMF79OS   EQU   X'02'    OPERATING SYSTEM IS OS/VS2                     05-ERBHDR\n                         00000001           66921+SMF79BFY  EQU   X'01'    System running in PR/SM mode              @J1C 05-ERBHDR\n 00000005                                   66922+SMF79RTY  DS    BL1      RECORD TYPE                                    05-ERBHDR\n 00000006                                   66923+SMF79TME  DS    BL4      TOD RECORD WRITTEN                             05-ERBHDR\n 0000000A                                   66924+SMF79DTE  DS    PL4      DATE RECORD WRITTEN                            05-ERBHDR\n 0000000E                                   66925+SMF79SID  DS    CL4      SYSTEM ID FROM INSTALLATION                    05-ERBHDR\n 00000012                                   66926+SMF79SSI  DS    CL4      SUBSYSTEM ID (RMF)                             05-ERBHDR\n 00000016                                   66927+SMF79STY  DS    BL2      SUBTYPE                                        05-ERBHDR\n 00000018                                   66928+SMF79TRN  DS    BL2      NUMBER OF TRIPLETS IN THIS RECORD              05-ERBHDR\n 0000001A                                   66929+          DS    BL2      RESERVED                                       05-ERBHDR\n 0000001C                                   66930+SMF79PRS  DS    BL4      OFFSET TO RMF PRODUCT SECTION                  05-ERBHDR\n 00000020                                   66931+SMF79PRL  DS    BL2      LENGTH OF RMF PRODUCT SECTION                  05-ERBHDR\n 00000022                                   66932+SMF79PRN  DS    BL2      NUMBER OF RMF PRODUCT SECTIONS                 05-ERBHDR\n-\n                                            66934+**********************  INDIVIDUAL HEADER EXTENSION  ******************\n 00000024                                   66935+SMF79MCS DS    F -                OFFSET TO MONITOR II CONTROL SECTION  04-ERBSMF79\n 00000028                                   66936+SMF79MCL DS    H -                LENGTH OF MONITOR II CONTROL SECTION  04-ERBSMF79\n 0000002A                                   66937+SMF79MCN DS    H -                NUMBER OF MONITOR II CONTROL SECTION  04-ERBSMF79\n 0000002C                                   66938+SMF79ASS DS    F -                OFFSET TO DATA SECTION                04-ERBSMF79\n 00000030                                   66939+SMF79ASL DS    H -                LENGTH OF DATA SECTION                04-ERBSMF79\n 00000032                                   66940+SMF79ASN DS    H -                NUMBER OF DATA SECTION                04-ERBSMF79\n 00000034                                   66941+SMF79DCS DS    F -                OFFSET TO DATA CONTROL SECTION        04-ERBSMF79\n 00000038                                   66942+SMF79DCL DS    H -                LENGTH OF DATA CONTROL SECTION        04-ERBSMF79\n 0000003A                                   66943+SMF79DCN DS    H -                NUMBER OF DATA CONTROL SECTION        04-ERBSMF79\n 0000003C                                   66944+SMF79QSS DS    F -                OFFSET TO I/O QUEUING GLBL.SECT. @P4A 04-ERBSMF79\n 00000040                                   66945+SMF79QSL DS    H -                LENGTH OF I/O QUEUING GLBL.SECT. @P4A 04-ERBSMF79\n 00000042                                   66946+SMF79QSN DS    H -                NUMBER OF I/O QUEUING GLBL.SECT. @P4A 04-ERBSMF79\n                         00000044           66947+SMF79ENX EQU   *                  End of ind. header extension @WA28830 04-ERBSMF79\n-\n                                            66949+**********************  Special 79.F Header Extension *****************\n 00000044                00000044 00000024  66950+         ORG   SMF79MCS                                            @F1A 04-ERBSMF79\n 00000024                                   66951+SMF79FHX DS    0XL8                                            @WA28830 04-ERBSMF79\n 00000024                                   66952+SMF79FPO DS    F                  Offset to IMS Long Lock Data Sct @F1A 04-ERBSMF79\n 00000028                                   66953+SMF79FPL DS    H                  Length of IMS Long Lock Data Sct @F1A 04-ERBSMF79\n 0000002A                                   66954+SMF79FPN DS    H                  Number of IMS Long Lock Data Sct @F1A 04-ERBSMF79\n                         0000002C           66955+SMF79FNX EQU   *                  End of 79.F header extension @WA28830 04-ERBSMF79\n 0000002C                0000002C 00000044  66956+         ORG   SMF79ENX                                        @WA28830 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  312\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           66958+**********************  COMMON SMF PRODUCT SECTION  *******************\n                                            66960+*\n                                            66961+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            66962+*'/* START OF SPECIFICATIONS ****************************************/'\n                                            66963+*'/*01* PROPRIETARY STATEMENT=                                      */'\n                                            66964+*    ENDANSWER;\n                                            66965+*/*\n                                            66967+*\n                                            66968+*        PROPRIETARY STATEMENT:\n                                            66969+*           Licensed Materials - Property of IBM\n                                            66970+*           \"Restricted Materials of IBM\"\n                                            66971+*           Copyright IBM Corp. 1977, 2010                        @41C\n                                            66972+*\n                                            66973+*           Status: z/OS V1R12 RMF (HRM7770)                      @41C\n                                            66974+*\n                                            66975+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            66976+*'      ?ERBCOPY1;                                                    '\n                                            66977+*'/*                                                                */'\n                                            66978+*'/*01* DESCRIPTIVE_NAME: General mapping of RMF Product Section    */'\n                                            66979+*'/*02*  ACRONYM:  PRO                                              */'\n                                            66980+*'/*                                                                */'\n                                            66981+*'/*01* MACRO-NAME:  ERBPRO                                         */'\n                                            66982+*'/*                                                                */'\n                                            66983+*'/*01* DSECT NAME:  SMFnnPRO, if record type specified             */'\n                                            66984+*'/*                 RMFPRO  , if record type omitted               */'\n                                            66985+*'/*                                                                */'\n                                            66986+*'/*01* COMPONENT:  Resource Measurement Facility (27404)           */'\n                                            66987+*'/*                                                                */'\n                                            66988+*'/*01* EYE-CATCHER:  N/A                                           */'\n                                            66989+*'/*02*  OFFSET:  N/A                                               */'\n                                            66990+*'/*02*  LENGTH:  N/A                                               */'\n                                            66991+*'/*                                                                */'\n                                            66992+*'/*01* STORAGE ATTRIBUTES:                                         */'\n                                            66993+*'/*02*  SUBPOOL:    same as SMF record mapping                     */'\n                                            66994+*'/*02*  KEY:        same as SMF record mapping                     */'\n                                            66995+*'/*02*  RESIDENCY:  same as SMF record mapping                     */'\n                                            66996+*'/*02*  MAIN STORAGE:      N/A                                     */'\n                                            66997+*'/*02*  AUXILIARY STORAGE: N/A                                     */'\n                                            66998+*'/*02*  VIRTUAL STORAGE:   N/A                                     */'\n                                            66999+*'/*                                                                */'\n                                            67000+*'/*01* SIZE: 104 bytes - common section                        @C1C*/'\n                                            67001+*'/*         + 16 bytes - split/reassembly control (static)     @C1C*/'\n                                            67002+*'/*         +  4 bytes * SMFHDR extension triplet -            @C1C*/'\n                                            67003+*'/*                      - split/reassembly (variable)         @C1C*/'\n                                            67004+*'/*                                                                */'\n                                            67005+*'/*01* CREATED BY: N/A                                             */'\n                                            67006+*'/*                                                                */'\n                                            67007+*'/*01* POINTED TO BY: N/A                                          */'\n                                            67008+*'/*                                                                */'\n                                            67009+*'/*01* SERIALIZATION:                                              */'\n                                            67010+*'/*     Not provided                                               */'\n                                            67011+*'/*                                                                */'\n                                            67012+*'/*01* FUNCTION:                                                   */'\n                                            67013+*'/*02*  This macro maps the RMF product section of RMFs            */'\n                                            67014+*'/*     SMF records depending on the macro call.                   */'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  313\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67015+*'/*     It is called by macro ERBSMF                               */'\n                                            67016+*'/*                           ERBSMF70                             */'\n                                            67017+*'/*                              :                                 */'\n                                            67018+*'/*                           ERBSMF79                             */'\n                                            67019+*'/*     NOTE:                                                      */'\n                                            67020+*'/*      When this data section is build in a NON-RMF environment, */'\n                                            67021+*'/*      all data are zero except:                             @G1A*/'\n                                            67022+*'/*         SMF74PRD = product name, e.g. CRR instead of RMF   @G1A*/'\n                                            67023+*'/*         SMF74IST = time (0hhmmssF),                        @G1A*/'\n                                            67024+*'/*                    time when the record is processed       @G1A*/'\n                                            67025+*'/*         SMF74DAT = date (0cyydddF),                        @G1A*/'\n                                            67026+*'/*                    date when the record is processed       @G1A*/'\n                                            67027+*'/*         SMF74SRL = SMF record level change number          @G1A*/'\n                                            67028+*'/*         SMF74IET = 8 TOKEN, 8 bytes TOD value              @G1A*/'\n                                            67029+*'/*                    TOD value when the record is processed  @G1A*/'\n                                            67030+*'/*                                                                */'\n                                            67031+*'/*01* METHOD OF ACCESS:                                           */'\n                                            67032+*'/*02*  ASM:                                                       */'\n                                            67033+*'/*      - ERBPRO                                                  */'\n                                            67034+*'/*      - ERBPRO 70                                               */'\n                                            67035+*'/*            :                                                   */'\n                                            67036+*'/*      - ERBPRO 79                                               */'\n                                            67037+*'/*                                                                */'\n                                            67038+*'/*02*  PL/X:                                                      */'\n                                            67039+*'/*      .question mark.ERBPRO ATTRIBUT(attributes)                */'\n                                            67040+*'/*      .question mark.ERBPRO TYPE(70) ATTRIBUT(attributes)       */'\n                                            67041+*'/*      :                                                         */'\n                                            67042+*'/*      .question mark.ERBPRO TYPE(79) ATTRIBUT(attributes)       */'\n                                            67043+*'/*                                                                */'\n                                            67044+*'/*      where attributes are any acceptable PL/X attributes       */'\n                                            67045+*'/*      for structure declarations.                               */'\n                                            67046+*'/*                                                                */'\n                                            67047+*'/*01* MODULE-TYPE: Bilingual mapping macro                        */'\n                                            67048+*'/*                                                                */'\n                                            67049+*'/*01* DELETED BY: N/A                                             */'\n                                            67050+*'/*                                                                */'\n                                            67051+*'/*01* FREQUENCY:  N/A                                             */'\n                                            67052+*'/*                                                                */'\n                                            67053+*'/*01* DEPENDENCIES: None                                          */'\n                                            67054+*'/*                                                                */'\n                                            67055+*'/*01* DISTRIBUTION LIBRARY: ARMFMAC1                              */'\n                                            67056+*'/*                                                                */'\n                                            67057+*'/*01* CHANGE ACTIVITY:                                            */'\n                                            67058+*'/* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS       */'\n                                            67059+*'/* $O1=4381SP,JRM3212,,SHR: 4381 - SUPPORT                    @O1A*/'\n                                            67060+*'/* $O2=SOLVSP,JRM3212,,SHR: SOFTWARE LEVEL SUPPORT            @O2A*/'\n                                            67061+*'/* $P1=3090,HRM3302,,HEN: 3090 - SUPPORT                      @P1A*/'\n                                            67062+*'/* $P2=ES,HRM3302,,CIH: SP2.2 EXTENDED STORE                  @P2A*/'\n                                            67063+*'/* $Q1=MISC,HRM3402,,WEY: CSA FIXED FRAMES COUNT INTERFACE    @Q1A*/'\n                                            67064+*'/* $X0=OY11330,HRM4410,,WRC: PR/SM support                    @X0A*/'\n                                            67065+*'/* SMF Record Change Level Support                        @YA28449*/'\n                                            67066+*'/* $Z1=SERIAL,HRM4420,,WRC: Serial & switch                   @Z1A*/'\n                                            67067+*'/* $B1=SYNC,HRM4430,,GBO: Synchronize Measurements            @B1A*/'\n                                            67068+*'/* $C1=WLM,HRM4440,,HKH: WLM Support                          @C1A*/'\n                                            67069+*'/* $C2=SPLIT,HRM4440,,SCD: Split/Reassembly                   @C2A*/'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  314\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67070+*'/* $E1=CVT,HRM5530,,SUW: Report new product type OS/390 and       */'\n                                            67071+*'/*         software level. Will be added with APAR OW15873        */'\n                                            67072+*'/*         (OS/390 Release 1).                                @E1A*/'\n                                            67073+*'/* $G1=CACHE,HRM6606,,THE: 256 device support                 @G1A*/'\n                                            67074+*'/* $I1=BIT64,HRM7703,,GUB: 64 Bit real support                @I1A*/'\n                                            67075+*'/* $J1=MISC,HRM7705,,GUB: Comment changes for zSeries         @J1A*/'\n                                            67076+*'/* FDL: Prepares for up to 65535 devices                  @WA55906*/'\n                                            67077+*'/* $K1=MISC,HRM7708,,GUB: Allign and update comments          @K1A*/'\n                                            67078+*'/* $K2=IFA,OA05731,,WLR: IFA support                          @K2A*/'\n                                            67079+*'/* GUB: System Utility Processor (SUP) support            @OA13499*/'\n                                            67080+*'/* $11=LPS,HRM7740,,WLR: New function                         @11A*/'\n                                            67081+*'/* $21=COMM,HRM7750,,WLR: 64-bit Common Memory support        @21A*/'\n                                            67082+*'/* $22=ICN,HRM7750,,GUB: Dynamic CPU addition                 @22A*/'\n                                            67083+*'/*                                                                */'\n                                            67084+*'/* END OF SPECIFICATIONS ******************************************/'\n                                            67085+*    ENDANSWER;                     /*\n 00000000                00000000 00000068  67086+SMF79PRO DSECT                                                          05-ERBPRO\n 00000000                                   67087+SMF79MFV DS    CL2      RMF VERSION NUMBER, WITH INTRODUCTION OF   @O2C 05-ERBPRO\n                                            67088+*                       THE MVS SOFTWARE LEVEL THE FORMAT CHANGES  @O2A\n                                            67089+*                       TO PACKED 'VRLF'                           @O2A\n                                            67090+*                       ... V = VERSION NUMBER                     @O2A\n                                            67091+*                       ... R = RELEASE NUMBER                     @O2A\n                                            67092+*                       ... L = MODIFICATION LEVEL                 @O2A\n 00000002                                   67093+SMF79PRD DS    CL8      PRODUCT NAME                                    05-ERBPRO\n 0000000A                                   67094+SMF79IST DS    PL4      TOD MONITOR INTERVAL START: 0HHMMSSF            05-ERBPRO\n 0000000E                                   67095+SMF79DAT DS    PL4      DATE MONITOR INTERVAL START: 00YYDDDF           05-ERBPRO\n 00000012                                   67096+SMF79INT DS    PL4      DURATION OF MONITOR INTERVAL: MMSSTTTF          05-ERBPRO\n                                            67097+*\n 00000016                                   67098+SMF79MFL DS    BL2      RESERVED                                   @J1C 05-ERBPRO\n 00000018                                   67099+SMF79SAM DS    BL4      NUMBER OF SAMPLES                               05-ERBPRO\n 0000001C                                   67100+SMF79RV2 DS    BL2      RESERVED                                        05-ERBPRO\n 0000001E                                   67101+SMF79FLA DS    BL2      FLAGS                                           05-ERBPRO\n                         00000080           67102+SMF79CNV EQU   X'80'    DATA CONVERT.FROM VER.2                         05-ERBPRO\n                         00000040           67103+SMF79ISS EQU   X'40'    INVALID SAMPLES TO BE SKIPPED              @Q1A 05-ERBPRO\n                         00000020           67104+SMF79M3R EQU   X'20'    Record was written by RMF Monitor III      @B1A 05-ERBPRO\n                         00000010           67105+SMF79ISM EQU   X'10'    Interval was written under SMF control     @B1A 05-ERBPRO\n 00000020                                   67106+SMF79RLS DS    CL4      RESERVED                                   @J1C 05-ERBPRO\n 00000024                                   67107+SMF79CYC DS    PL4      CYCLE IN PACKED DECIMAL 000TTTTF                05-ERBPRO\n 00000028                                   67108+SMF79MVS DS    CL8      MVS software level (consists of an acronym @J1C 05-ERBPRO\n                                            67109+*                       and the version, release, and modification @J1C\n                                            67110+*                       level - ZVvvrrmm).                         @J1C\n 00000030                                   67111+SMF79IML DS    XL1      Indicates the type of processor complex    @J1C 05-ERBPRO\n                                            67112+*                       on which data measurements were taken      @J1C\n                                            67113+*                       X'03' = 9672, zSeries, z9              @OA13499\n 00000031                                   67114+SMF79PRF DS    BL1      PROCESSOR FLAGS                            @P2A 05-ERBPRO\n                         00000080           67115+SMF79QES EQU   X'80'    Equipped with Expanded Storage             @P2A 05-ERBPRO\n                         00000040           67116+SMF79CNE EQU   X'40'    Equipped with ESCON Channel                @Z1A 05-ERBPRO\n                         00000020           67117+SMF79DRC EQU   X'20'    ESCON Director in configuration            @Z1A 05-ERBPRO\n                         00000010           67118+SMF79EME EQU   X'10'    System in z/ARCH mode                      @I1A 05-ERBPRO\n                         00000008           67119+SMF79PRI EQU   X'08'    At least one zAAP is currently installed   @22C 05-ERBPRO\n                         00000004           67120+SMF79PRP EQU   X'04'    At least one zIIP is currently installed   @22C 05-ERBPRO\n                         00000002           67121+SMF79PED EQU   X'02'    Enhanced DAT architecture available        @21C 05-ERBPRO\n 00000032                                   67122+SMF79PTN DS    BL1      PR/SM PARTITION NUMBER                     @Z1C 05-ERBPRO\n 00000033                                   67123+SMF79SRL DS    BL1      SMF record level                       @YA28449 05-ERBPRO\n 00000034                                   67124+SMF79IET DS    CL8      Interval expiration time token             @B1A 05-ERBPRO\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  315\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000003C                                   67125+SMF79LGO DS    CL8      Offset GMT to local time                   @C1A 05-ERBPRO\n 00000044                                   67126+SMF79RAO DS    BL4      Offset to reassembly area relative to      @C2A 05-ERBPRO\n                                            67127+*                       start of RMF product section               @C2A\n 00000048                                   67128+SMF79RAL DS    BL2      Length of reassembly area. Length depends  @C2A 05-ERBPRO\n                                            67129+*                       on the record type/subtype but is fix for  @C2A\n                                            67130+*                       a specific type/subtype                    @C2A\n 0000004A                                   67131+SMF79RAN DS    BL2      Number of reassembly area. Only 0 or 1 are @C2A 05-ERBPRO\n                                            67132+*                       valid. This field is used to indicate      @C2A\n                                            67133+*                       whether a SMF record is a broken record    @C2A\n                                            67134+*                       (0 = NOT broken, 1 = is a broken record).  @C2A\n                                            67135+*                       Offset and length are only valid if        @C2A\n                                            67136+*                       SMFxxRAN = 1. Reassembly area is only      @C2A\n                                            67137+*                       present in broken records                  @C2A\n 0000004C                                   67138+SMF79OIL DS    BL2      Original interval length                   @C2A 05-ERBPRO\n                                            67139+*                       (as defined in the session option or by    @C2A\n                                            67140+*                        SMF)                                      @C2A\n 0000004E                                   67141+SMF79SYN DS    BL2      SYNC value in seconds                      @C2A 05-ERBPRO\n 00000050                                   67142+SMF79GIE DS    CL8      Projected gathering interval end           @C2A 05-ERBPRO\n                                            67143+*                       (STCK format) GMT time                     @C2A\n 00000058                                   67144+SMF79XNM DS    CL8      Sysplex name                               @C1A 05-ERBPRO\n                                            67145+*                       (as defined in ECVTSPLX)                   @C1A\n 00000060                                   67146+SMF79SNM DS    CL8      System name for current system             @C1A 05-ERBPRO\n                                            67147+*                       (as defined in CVTSNAME)                   @C1A\n 00000000                00000000 00000010  67148+SMF79RHD DSECT                                                          05-ERBPRO\n 00000000                                   67149+SMF79RBR DS    BL2      Total number of broken records build from  @C2A 05-ERBPRO\n                                            67150+*                       the original large record                  @C2A\n 00000002                                   67151+SMF79RSQ DS    BL2      Sequence number of this broken record.     @C2A 05-ERBPRO\n                                            67152+*                       Every broken record build from the same    @C2A\n                                            67153+*                       large record must have a unique sequence   @C2A\n                                            67154+*                       number. Broken records with sequence       @C2A\n                                            67155+*                       numbers from 1 to SMFxxRBR must exist      @C2A\n 00000004                                   67156+SMF79RIO DS    BL4      Offset to first reassembly information     @C2A 05-ERBPRO\n                                            67157+*                       block relative to start of reassembly      @C2A\n                                            67158+*                       area header                                @C2A\n 00000008                                   67159+SMF79RIL DS    BL2      Length of reassembly information block     @C2A 05-ERBPRO\n 0000000A                                   67160+SMF79RIN DS    BL2      Number of reassembly information blocks    @C2A 05-ERBPRO\n                                            67161+*                       (same as SMFxxTRN in header section)       @C2A\n 0000000C                                   67162+         DS    BL4      Reserved                                   @C2A 05-ERBPRO\n 00000000                00000000 00000004  67163+SMF79RBL DSECT                                                          05-ERBPRO\n 00000000                                   67164+SMF79RNN DS    BL2      Total number of sections in the original   @C2A 05-ERBPRO\n                                            67165+*                       large record. This field contains          @C2A\n                                            67166+*                       information of how many sections of a      @C2A\n                                            67167+*                       specific type were contained in the        @C2A\n                                            67168+*                       original SMF record. This field is a copy  @C2A\n                                            67169+*                       of the number field of the triplet in the  @C2A\n                                            67170+*                       original (non broken) record               @C2A\n 00000002                                   67171+SMF79RPP DS    BL2      Position of the first of one or more       @C2A 05-ERBPRO\n                                            67172+*                       consecutive section(s) described by this   @C2A\n                                            67173+*                       block as in the original record. Values in @C2A\n                                            67174+*                       the range of 1 to SMFxxRNN are valid for   @C2A\n                                            67175+*                       correct processing. A value of 0 will skip @C2A\n                                            67176+*                       processing of this information block. This @C2A\n                                            67177+*                       field provides information where the       @C2A\n                                            67178+*                       sections that are part of this broken      @C2A\n                                            67179+*                       record were placed in the original record  @C2A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  316\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67180+*                       before the split took place. The actual    @C2A\n                                            67181+*                       number of consecutive sections contained   @C2A\n                                            67182+*                       in this record is available from the       @C2A\n                                            67183+*                       actual triplet in the header extension     @C2A\n-\n                                            67185+**********************  MONITOR II CONTROL SECTION  *******************\n 00000000                00000000 00000070  67186+R79CHL   DSECT                    COMMON RECORD 79 HEADER               04-ERBSMF79\n 00000000                                   67187+R79GTOD  DS    XL4 -              DATA GATHERER CALL TOD                04-ERBSMF79\n 00000004                                   67188+R79LF2   DS    XL1 -              FLAG BYTE                             04-ERBSMF79\n                         00000080           67189+R79PAR   EQU   X'80' -            NOT ENOUGH RELOCATE SECTION TO        04-ERBSMF79\n                         00000040           67190+R79SG    EQU   X'40' -            Report to be sorted by SG        @U1A 04-ERBSMF79\n                         00000020           67191+R79RSM   EQU   X'20' -            Invalid RSM data obtained        @W2A 04-ERBSMF79\n                         00000010           67192+R79GOAL  EQU   X'10' -            System is in GOAL mode           @C1A 04-ERBSMF79\n                         00000008           67193+R79TRXI  EQU   X'08' -            Invalid transaction data         @C1A 04-ERBSMF79\n                         00000004           67194+R79SRMC  EQU   X'04' -            SRM mode changed                 @C1A 04-ERBSMF79\n                         00000002           67195+R79INV   EQU   X'02' -            invalid data from Mon I      @YA66876 04-ERBSMF79\n                                            67196+*                                 (DEV PGSP IOQ)               @YA66876\n                                            67197+*                                 COMPLETE DATA GATHERING\n 00000005                                   67198+R79RV1   DS    XL1 -              RESERVED                              04-ERBSMF79\n 00000006                                   67199+R79SES   DS    CL2 -              SESSION NAME                          04-ERBSMF79\n 00000008                                   67200+R79RSV   DS    XL2 -              RESERVED                              04-ERBSMF79\n 0000000A                                   67201+R79USER  DS    XL2 -              USER FIELD                            04-ERBSMF79\n 0000000C                                   67202+R79RID   DS    CL8 -              MEASUREMENT NAME                      04-ERBSMF79\n 00000014                                   67203+R79CTXTL DS    XL2 -              LEN OF COMMAND TEXT                   04-ERBSMF79\n 00000016                                   67204+R79CTEXT DS    CL32 -             COMMAND TEXT                          04-ERBSMF79\n 00000036                                   67205+R79DTXTL DS    XL2 -              LEN OF DEFAULT DR TEXT                04-ERBSMF79\n 00000038                                   67206+R79DTEXT DS    CL32 -             DEFAULT DR TEXT                       04-ERBSMF79\n 00000058                                   67207+R79IST   DS    CL4 -              MONITOR I INTERVAL START TIME         04-ERBSMF79\n                                            67208+*                                 IN 0HHMMSSF FORMAT   @ZA70287\n 0000005C                                   67209+R79TSR   DS    XL2                Total number of small records    @W3A 04-ERBSMF79\n 0000005E                                   67210+         DS    XL2                Reserved for future use          @W3A 04-ERBSMF79\n 00000060                                   67211+R79TOT   DS    XL4                Total number of data sections in      04-ERBSMF79\n                                            67212+*                                 large record                     @W3A\n 00000064                                   67213+R79NXT   DS    XL4                Number of data sections in following  04-ERBSMF79\n                                            67214+*                                 small records                    @W3A\n 00000068                                   67215+R79IWMTK DS    CL8                Token returned from IWMRCOLL          04-ERBSMF79\n                                            67216+*                                 service                          @C1A\n                                            67217+*\n                                            67218+*\n                                            67219+*        RELOCATE BLOCK FOR SUBTYPE 1\n                                            67220+*\n 00000000                00000000 000000EC  67221+R791ELEM DSECT                    MAPPING OF ELEMENT                    04-ERBSMF79\n 00000000                                   67222+R791ASID DS    XL2                ADDRESS SPACE IDENTIFIER              04-ERBSMF79\n 00000002                                   67223+R791JBN  DS    CL8                NAME OF JOB                           04-ERBSMF79\n 0000000A                                   67224+R791DMN  DS    XL2                DOMAIN NUMBER                         04-ERBSMF79\n                                            67225+*                                 not applicable in GOAL mode      @C1C\n 0000000C                                   67226+R791NPG  DS    XL2                PERFORMANCE GROUP                     04-ERBSMF79\n                                            67227+*                                 not applicable in GOAL mode      @C1C\n 0000000E                                   67228+R791PGP  DS    XL2                PERFORMANCE GROUP PERIOD              04-ERBSMF79\n                                            67229+*                                 not applicable in GOAL mode      @C1C\n 00000010                                   67230+R791TTOD DS    XL4                REAL TIME INTO TRANSACTION       @J2C 04-ERBSMF79\n                                            67231+*                                 (MILLISECONDS)\n                                            67232+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  317\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000014                                   67233+R791CL   DS    CL2                CURRENT LOCATION                      04-ERBSMF79\n                                            67234+*\n                                            67235+*                              CONTENTS   MEANING\n                                            67236+*                              --------   -------\n                                            67237+*                                   IN  - IN STORAGE\n                                            67238+*                                   OT  - SWAPPED OUT AND READY\n                                            67239+*                                   LO  - LOGICALLY SWAPPED    @G537NLS\n                                            67240+*                                   NS  - NON-SWAPPABLE\n                                            67241+*                                   WM  - WAIT QUEUE/MSO\n                                            67242+*                                   WL  - WAIT QUEUE/LONG WAIT\n                                            67243+*                                   WT  - WAIT QUEUE/TERM WAIT\n                                            67244+*                                   WO  - WAIT QUEUE/other reasons @I1A\n                                            67245+*                                   DL  - TSO user delayed by SRM\n                                            67246+*                                         to meet response time\n                                            67247+*                                         objective                @I1A\n                                            67248+*                                   PR  - PRIVILEGED\n                                            67249+*                                   >>  - TRANSITIONING OUT\n                                            67250+*                                   <<  - TRANSITIONING IN\n 00000016                                   67251+R791TAS  DS    XL2                TYPE OF USER                          04-ERBSMF79\n                                            67252+*\n                                            67253+*                              CONTENTS   MEANING\n                                            67254+*                              --------   -------\n                                            67255+*                                   0 - BATCH\n                                            67256+*                                   1 - STARTED TASK\n                                            67257+*                                   2 - MOUNT TASK\n                                            67258+*                                   3 - TSO\n                                            67259+*                                   4 - ASCH                       @A1A\n                                            67260+*                                   5   OMVS                       @B2A\n 00000018                                   67261+R791SRC  DS    CL2                REASON LAST SWAP OUT                  04-ERBSMF79\n                                            67262+*\n                                            67263+*                              CONTENTS   MEANING\n                                            67264+*                              --------   -------\n                                            67265+*                                   TI - TERMINAL INPUT\n                                            67266+*                                   TO - TERMINAL OUTPUT\n                                            67267+*                                   LW - LONG WAIT\n                                            67268+*                                   XS - AUX STORAGE SHORT\n                                            67269+*                                   RS - REAL STORAGE SHORT\n                                            67270+*                                   DW - DETECTED WAIT\n                                            67271+*                                   RQ - REQUESTED SWAP\n                                            67272+*                                   NQ - CAP ENQ\n                                            67273+*                                   EX - CAP EXCHANGE\n                                            67274+*                                   US - CAP UNI-SWAP\n                                            67275+*                                   TS - TRANSITION SWAP       @ZA27329\n                                            67276+*                                   IC - Improve central storage usage\n                                            67277+*                                                                  @A3A\n                                            67278+*                                   IP - Improve system paging rate\n                                            67279+*                                                                  @A3A\n                                            67280+*                                   MR - Make room to swap in an\n                                            67281+*                                        out-too-long user         @A3A\n                                            67282+*                                   AW - APPC wait                 @A1A\n                                            67283+*                                   IW - OMVS input wait           @B2A\n                                            67284+*                                   OW - OMVS output wait          @B2A\n                                            67285+*                                   SR - In-real swap              @J3A\n                                            67286+*                                   00 - UNKNOWN\n                                            67287+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  318\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000001A                                   67288+R791DP   DS    XL2 -              DISPATCHER PRIORITY                   04-ERBSMF79\n 0000001C                                   67289+R791SEQN DS    XL2                RESERVED                         @S1C 04-ERBSMF79\n 0000001E                                   67290+R791RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000020                                   67291+R791RSV2 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000022                                   67292+R791SWC  DS    XL2                TRANSACTION SWAP COUNT                04-ERBSMF79\n 00000024                                   67293+R791SWMR DS    XL2                SRM WORKLOAD RECOM VALUE              04-ERBSMF79\n 00000026                                   67294+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000028                                   67295+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 0000002A                                   67296+R791WMS  DS    XL4                SRM SSERVICE FOR THE CURRENT          04-ERBSMF79\n                                            67297+*                                 TRANSACTION SINCE THE LAST SWAP IN\n 0000002E                                   67298+R791TCPU DS    XL4                Total CPU time consumed on behalf     04-ERBSMF79\n                                            67299+*                                 of this address space in milliseconds\n                                            67300+*                                 (ascbejst+ascbsrbt+assbasst).    @E2C\n                                            67301+*                                 Wraps after 4 Giga millisec  @WA02302\n 00000032                                   67302+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000034                                   67303+         DS    XL2                Reserved                     @YA28328 04-ERBSMF79\n 00000036                                   67304+R791ESCT DS    XL4                Number of expanded storage frames     04-ERBSMF79\n                                            67305+*                                 used by job                  @YA28328\n 0000003A                                   67306+R791RSV3 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 0000003C                                   67307+R791PIN  DS    XL4                Page in count                    @W1A 04-ERBSMF79\n 00000040                                   67308+R791TRTM DS    XL4                Transaction residency time       @W1A 04-ERBSMF79\n 00000044                                   67309+R791FLG  DS    XL1                Flags                            @W1A 04-ERBSMF79\n                         00000080           67310+R791XM   EQU   X'80'              -- Cross memory address space    @W1A 04-ERBSMF79\n                         00000040           67311+R791PMON EQU   X'40'              On = data in R791CTAR is valid.       04-ERBSMF79\n                                            67312+*                                  Off = not valid.                @A3A\n                         00000020           67313+R791VALV EQU   X'20'              On = data in R791VAL is valid.        04-ERBSMF79\n                                            67314+*                                  Off = not valid.                @A3A\n                         00000010           67315+R791GOAL EQU   X'10'              On = system is in GOAL mode      @C1A 04-ERBSMF79\n                         00000008           67316+R791SRV  EQU   X'08'              On = this address space is a          04-ERBSMF79\n                                            67317+*                                 server address space             @C1A\n                                            67318+*                                  Off = GOAL specified for this\n                                            67319+*                                  address space is being honored\n                                            67320+*                                  by WLM                          @C1A\n                         00000004           67321+R791QSC  EQU   X'04'              On = address space has been           04-ERBSMF79\n                                            67322+*                                 quiesced by a RESET command      @C1A\n                         00000002           67323+R791TXME EQU   X'02'              Like RASDTRXNMGMTEXEMPT          @I4A 04-ERBSMF79\n                         00000001           67324+R791TAFF EQU   X'01'              On = address space has temporal       04-ERBSMF79\n                                            67325+*                                 affinities, same as RASDTAF  @WA46622\n 00000045                                   67326+R791FLG2 DS    XL1                Additional flags                 @I4C 04-ERBSMF79\n                         00000080           67327+R791CPRC EQU   X'80'              Same as RASDCPROTCPU             @I4A 04-ERBSMF79\n                         00000040           67328+R791CPRE EQU   X'40'              Same as RASDASPROTSTG            @I4A 04-ERBSMF79\n                         00000020           67329+R791CPRI EQU   X'20'              Same as RASDCPROTSTG             @I4A 04-ERBSMF79\n                         00000010           67330+R791CPUP EQU   X'10'              Same as RASDCPUPROTECTED         @I4A 04-ERBSMF79\n                         00000008           67331+R791STOP EQU   X'08'              Same as RASDSTGPROTECTED         @I4A 04-ERBSMF79\n                         00000004           67332+R791CRMP EQU   X'04'              The dispatch priority of the          04-ERBSMF79\n                                            67333+*                                 address space is currently\n                                            67334+*                                 promoted due to a chronic\n                                            67335+*                                 resource contention              @21A\n 00000046                                   67336+R791FMCT DS    XL4                NUMBER OF REAL STORAGE FRAMES    @W5A 04-ERBSMF79\n 0000004A                                   67337+R791WSS  DS    XL4                WORKING SET AT LAST SWAP IN      @W5A 04-ERBSMF79\n 0000004E                                   67338+R791TWSS DS    XL4                SRM TARGET WORKING SET SIZE      @W5A 04-ERBSMF79\n 00000052                                   67339+R791ESHP DS    XL4                Number of hiperspace expanded storage 04-ERBSMF79\n                                            67340+*                                 pages used by job                @W7A\n 00000056                                   67341+R791ESVI DS    XL4                Number of VIO expanded storage        04-ERBSMF79\n                                            67342+*                                 pages used by job                @W7A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  319\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000005A                                   67343+R791HIN  DS    XL4                Number of hiperspace page ins    @W8A 04-ERBSMF79\n 0000005E                                   67344+R791HRMS DS    XL4                Number of ESO hiperspace read         04-ERBSMF79\n                                            67345+*                                 misses by job                    @W8A\n 00000062                                   67346+R791BPIN DS    XL4                Number of blocked pages brought       04-ERBSMF79\n                                            67347+*                                  in from DASD                    @A3A\n 00000066                                   67348+R791PINE DS    XL4                Number of pages brought in from       04-ERBSMF79\n                                            67349+*                                  expanded storage                @A3A\n 0000006A                                   67350+R791BPNE DS    XL4                Number of blocked pages brought       04-ERBSMF79\n                                            67351+*                                  in from expanded storage        @A3A\n 0000006E                                   67352+R791CTAR DS    XL4                Central storage target number of      04-ERBSMF79\n                                            67353+*                                  frames                          @A3A\n 00000072                                   67354+R791VAL  DS    XL4                Recommendation value for WSM          04-ERBSMF79\n                                            67355+*                                  managed address spaces          @A3A\n 00000076                                   67356+R791SCL  DS    CL8                Service class name               @C1A 04-ERBSMF79\n 0000007E                                   67357+R791SCP  DS    BL2                Service class period             @C1A 04-ERBSMF79\n 00000080                                   67358+R791WKLD DS    CL8                Workload name                    @C1A 04-ERBSMF79\n 00000088                                   67359+R791RGRP DS    CL8                Resource group name              @C1A 04-ERBSMF79\n 00000090                                   67360+R791SPI  DS    XL4                Number of page-ins from               04-ERBSMF79\n                                            67361+*                                 auxiliary storage\n                                            67362+*                                 for shared page groups           @D1A\n 00000094                                   67363+R791CMNI DS    XL4                Number of common pages for current    04-ERBSMF79\n                                            67364+*                                 transaction (= R792CMNI)         @D2A\n 00000098                                   67365+R791PNV  DS    XL4                Number of non-vio pages for current   04-ERBSMF79\n                                            67366+*                                 transaction (= R792PNV)          @D2A\n 0000009C                                   67367+R791PVIO DS    XL4                Number of vio pages for current       04-ERBSMF79\n                                            67368+*                                 transaction (= R792PVIO)         @D2A\n 000000A0                                   67369+R791EXCT DS    XL4                EXCP count for                        04-ERBSMF79\n                                            67370+*                                 this step (= R792EXCT)           @D2A\n 000000A4                                   67371+R791TCPC DS    XL4                Total CPU time consumed in this       04-ERBSMF79\n                                            67372+*                                 address space in milliseconds\n                                            67373+*                                 (ascbejst+ascbsrbt           @OA21046\n                                            67374+*                                 +(assbphtm-assbphtm_base))   @OA21046\n 000000A8                                   67375+R791ASST DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            67376+*                                 class SRBs running on behalf of\n                                            67377+*                                 this address space in milliseconds\n                                            67378+*                                 (assbasst)                       @E2A\n 000000AC                                   67379+R791PHTM DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            67380+*                                 class SRBs running in this address\n                                            67381+*                                 space in milliseconds (assbphtm) @E2A\n 000000B0                                   67382+R791RCL  DS    CL8                Report class name                @I4A 04-ERBSMF79\n 000000B8                                   67383+R791MLIM DS    CL8                Address space memory limit            04-ERBSMF79\n                                            67384+*                                 in units of MB                   @J2A\n 000000C0                                   67385+R791TIFA DS    XL4                CPU time consumed on zAAPs (IFAs)     04-ERBSMF79\n                                            67386+*                                 (ASSB_TIME_ON_IFA)               @K6C\n 000000C4                                   67387+R791TCP  DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            67388+*                                 (ASSB_TIME_ON_CP). Only valid if\n                                            67389+*                                 zAAPs or zIIPs in configuration\n                                            67390+*                                                              @OA13499\n 000000C8                                   67391+R791TIFC DS    XL4                CPU time consumed on standard CPs by  04-ERBSMF79\n                                            67392+*                                 zAAP (IFA) eligible work\n                                            67393+*                                 (ASSB_TIME_IFA_ON_CP)            @K6C\n 000000CC                                   67394+R791NFFI DS    XL4                Normalization factor for zAAP time.   04-ERBSMF79\n                                            67395+*                                 Used to convert between real zAAP\n                                            67396+*                                 times and \"normalized\" zAAP times,\n                                            67397+*                                 i.e. the equivalent time on a\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  320\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67398+*                                 standard CP. Multiply R791TIFA by\n                                            67399+*                                 this value and divide by 256 to\n                                            67400+*                                 calculate the normalized zAAP time.\n                                            67401+*                                                                  @K6A\n 000000D0                                   67402+R791TSUP DS    XL4                CPU time consumed on zIIPs            04-ERBSMF79\n                                            67403+*                                 (ASSB_TIME_ON_zIIP)          @OA13499\n 000000D4                                   67404+R791TSUC DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            67405+*                                 by zIIP eligible work\n                                            67406+*                                 (ASSB_TIME_zIIP_ON_CP)       @OA13499\n 000000D8                                   67407+R791NFFS DS    XL4                Normalization factor for zIIP time.   04-ERBSMF79\n                                            67408+*                                 Used to convert between real zIIP\n                                            67409+*                                 times and \"normalized\" zIIP times,\n                                            67410+*                                 i.e. the equivalent time on a\n                                            67411+*                                 standard CP. Multiply R791TSUP by\n                                            67412+*                                 this value and divide by 256 to\n                                            67413+*                                 calculate the normalized zIIP time.\n                                            67414+*                                                              @OA13499\n 000000DC                                   67415+R791EXCW DS    CL8                EXCP Count ( DoubleWord )    @OA15850 04-ERBSMF79\n 000000E4                                   67416+R791PHTA DS    XL4                zAAP-only equivalent of R791PHTM      04-ERBSMF79\n                                            67417+*                                 (ASSB_IFA_PHTM).\n                                            67418+*                                 This is normalized time          @31A\n 000000E8                                   67419+R791PHTI DS    XL4                zIIP-only equivalent of R791PHTM      04-ERBSMF79\n                                            67420+*                                 (ASSB_zIIP_PHTM).\n                                            67421+*                                 This is normalized time          @31A\n                         000000EC           67422+R791RLEN EQU   *-R791ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67423+R791FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67424+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67425+*\n                                            67426+*        RELOCATE BLOCK FOR SUBTYPE 2\n                                            67427+*\n                                            67428+*\n 00000000                00000000 000000E0  67429+R792ELEM DSECT                    MAPPING OF ELEMENT                    04-ERBSMF79\n 00000000                                   67430+R792ASID DS    XL2                ASID ADDRESS SPACE IDENTIFIER         04-ERBSMF79\n 00000002                                   67431+R792JBN  DS    CL8                NAME OF JOB                           04-ERBSMF79\n 0000000A                                   67432+R792DMN  DS    XL2                DOMAIN NUMBER                         04-ERBSMF79\n                                            67433+*                                 not applicable in GOAL mode      @C1C\n 0000000C                                   67434+R792NPG  DS    XL2                PERFORMANCE GROUP                     04-ERBSMF79\n                                            67435+*                                 not applicable in GOAL mode      @C1C\n 0000000E                                   67436+R792CL   DS    CL2                CURRENT LOCATION                      04-ERBSMF79\n                                            67437+*\n                                            67438+*                              CONTENTS   MEANING\n                                            67439+*                              --------   -------\n                                            67440+*                                   IN  - IN STORAGE\n                                            67441+*                                   OT  - SWAPPED OUT AND READY\n                                            67442+*                                   LO  - LOGICALLY SWAPPED\n                                            67443+*                                   NS  - NON-SWAPPABLE\n                                            67444+*                                   WM  - WAIT QUEUE/MSO\n                                            67445+*                                   WL  - WAIT QUEUE/LONG WAIT\n                                            67446+*                                   WT  - WAIT QUEUE/TERM WAIT\n                                            67447+*                                   WO  - WAIT QUEUE/other reasons @I1A\n                                            67448+*                                   DL  - TSO user delayed by SRM\n                                            67449+*                                         to meet response time\n                                            67450+*                                         objective                @I1A\n                                            67451+*                                   PR  - PRIVILEGED\n                                            67452+*                                   >>  - TRANSITIONING OUT\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  321\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67453+*                                   <<  - TRANSITIONING IN\n                                            67454+*\n                                            67455+*\n 00000010                                   67456+R792TAS  DS    XL2                TYPE OF USER                          04-ERBSMF79\n                                            67457+*\n                                            67458+*                              CONTENTS   MEANING\n                                            67459+*                              --------   -------\n                                            67460+*                                   0 - BATCH\n                                            67461+*                                   1 - STARTED TASK\n                                            67462+*                                   2 - MOUNT TASK\n                                            67463+*                                   3 - TSO\n                                            67464+*\n                                            67465+*                                   4 - ASCH                       @A1A\n                                            67466+*                                   5 - OMVS                       @B2A\n                                            67467+*\n 00000012                                   67468+R792TRC  DS    XL2                TRANSACTION COUNT                     04-ERBSMF79\n 00000014                                   67469+R792TTOD DS    XL4                TRANSACTION ELAPSED TIME,             04-ERBSMF79\n                                            67470+*                                 IN MILLISECONDS\n 00000018                                   67471+R792PRFX DS    XL4                NUMBER OF PRIVATE FIXED FRAMES        04-ERBSMF79\n 0000001C                                   67472+R792RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 0000001E                                   67473+R792SVAR DS    XL4                SRM SERVICE ABSORPTION RATE FOR STEP  04-ERBSMF79\n 00000022                                   67474+R792TCPU DS    XL4                TOTAL TCB TIME FOR STEP          @R0C 04-ERBSMF79\n                                            67475+*                                 IN MILLISECONDS.                 @R0A\n                                            67476+*                                 Wraps after 4 Giga millisec  @WA02302\n 00000026                                   67477+R792PSS  DS    0CL8               STEP PRODUCT OF FRAME IN MILLISECONDS 04-ERBSMF79\n 00000026                                   67478+R792PSS1 DS    XL4                HIGH ORDER WORD                       04-ERBSMF79\n 0000002A                                   67479+R792PSS2 DS    XL4                LOW ORDER WORD                        04-ERBSMF79\n 0000002E                                   67480+R792EJST DS    XL4                Total CPU time consumed on behalf     04-ERBSMF79\n                                            67481+*                                 of this address space in millisecs.\n                                            67482+*                                 (ascbejst+ascbsrbt+assbasst).    @E2C\n                                            67483+*                                 Wraps after 4 Giga millisec  @WA02302\n 00000032                                   67484+R792TSRM DS    XL4                TOTAL SRM SERVICE FOR STEP            04-ERBSMF79\n 00000036                                   67485+R792RTM  DS    XL4                RESIDENT TIME FOR STEP IN SECONDS     04-ERBSMF79\n 0000003A                                   67486+R792EXCP DS    XL2                EXCP COUNT FOR STEP                   04-ERBSMF79\n 0000003C                                   67487+R792CMNI DS    XL4                NUMBER OF COMMON PAGES FOR CURRENT    04-ERBSMF79\n                                            67488+*                                 TRANSACTION\n 00000040                                   67489+R792PNV  DS    XL4                NUMBER OF NON-VIO PAGES FOR CURRENT   04-ERBSMF79\n                                            67490+*                                 TRANSACTION\n 00000044                                   67491+R792PVIO DS    XL4                NUMBER OF VIO PAGES FOR CURRENT       04-ERBSMF79\n                                            67492+*                                 TRANSACTION\n 00000048                                   67493+R792FXBL DS    XL4                NUMBER OF FIXED FRAMES WHICH ARE      04-ERBSMF79\n                                            67494+*                                 LOCATED BELOW 16M REAL\n 0000004C                                   67495+R792PSWP DS    XL4                NUMBER OF PAGES SWAPPED IN FOR        04-ERBSMF79\n                                            67496+*                                 CURRENT TRANSACTION\n 00000050                                   67497+R792LPAI DS    XL4                NUMBER OF LPA PAGES SWAPPED IN FOR    04-ERBSMF79\n                                            67498+*                                 CURRENT TRANSACTION\n 00000054                                   67499+R792CSAI DS    XL4                NUMBER OF CSA PAGES SWAPPED IN FOR    04-ERBSMF79\n                                            67500+*                                 CURRENT TRANSACTION\n 00000058                                   67501+R792LSQA DS    XL4                NUMBER OF LSQA FIXED FRAMES           04-ERBSMF79\n 0000005C                                   67502+R792NLQF DS    XL4                NUMBER OF NON-LSQA FIXED FRAMES       04-ERBSMF79\n 00000060                                   67503+R792TDEV DS    XL4                TOTAL DEVICE CONNECT TIME IN          04-ERBSMF79\n                                            67504+*                                 MILLISECONDS\n 00000064                                   67505+R792RSV2 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000066                                   67506+R792PIN  DS    XL4                PAGE-IN COUNT                         04-ERBSMF79\n 0000006A                                   67507+R792TRTM DS    XL4                TRANSACTION RESIDENCY TIME            04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  322\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000006E                                   67508+R792FLG  DS    XL1                FLAGS:                                04-ERBSMF79\n                         00000080           67509+R792XM   EQU   X'80'              -- CROSS MEMORY ADDRESS SPACE         04-ERBSMF79\n                         00000040           67510+R792RSM  EQU   X'40'              Invalid RSM data for address          04-ERBSMF79\n                                            67511+*                                      space obtained              @W2A\n                         00000020           67512+R792RSV3 EQU   X'20'              Reserved                         @C1A 04-ERBSMF79\n                         00000010           67513+R792GOAL EQU   X'10'              On = system is in GOAL mode      @C1A 04-ERBSMF79\n                         00000008           67514+R792SRV  EQU   X'08'              On = this address space is a          04-ERBSMF79\n                                            67515+*                                 server address space             @C1A\n                                            67516+*                                  Off = GOAL specified for this\n                                            67517+*                                  address space is being honored\n                                            67518+*                                  by WLM                          @C1A\n                         00000004           67519+R792QSC  EQU   X'04'              On = address space has been           04-ERBSMF79\n                                            67520+*                                 quiesced by a RESET command      @C1A\n                         00000002           67521+R792TXME EQU   X'02'              Like RASDTRXNMGMTEXEMPT          @J1A 04-ERBSMF79\n                         00000001           67522+R792TAFF EQU   X'01'              On = address space has temporal       04-ERBSMF79\n                                            67523+*                                 affinities, same as RASDTAF  @WA46622\n 0000006F                                   67524+R792FLG2 DS    XL1                Additional flags                 @J1C 04-ERBSMF79\n                         00000080           67525+R792CPRC EQU   X'80'              Same as RASDCPROTCPU             @J1A 04-ERBSMF79\n                         00000040           67526+R792CPRE EQU   X'40'              Same as RASDASPROTSTG            @J1A 04-ERBSMF79\n                         00000020           67527+R792CPRI EQU   X'20'              Same as RASDCPROTSTG             @J1A 04-ERBSMF79\n                         00000010           67528+R792CPUP EQU   X'10'              Same as RASDCPUPROTECTED         @J1A 04-ERBSMF79\n                         00000008           67529+R792STOP EQU   X'08'              Same as RASDSTGPROTECTED         @J1A 04-ERBSMF79\n                         00000004           67530+R792CRMP EQU   X'04'              The dispatch priority of the          04-ERBSMF79\n                                            67531+*                                 address space is currently\n                                            67532+*                                 promoted due to a chronic\n                                            67533+*                                 resource contention              @21A\n 00000070                                   67534+R792LSQR DS    XL4                LSQA pages in real storage            04-ERBSMF79\n                                            67535+*                                      CNTFTN + CNTFRLSD           @W1A\n 00000074                                   67536+R792LSQE DS    XL4                LSQA pages in ext. storage            04-ERBSMF79\n                                            67537+*                                      CNTFTLSD - CNTFRLSD         @W1A\n 00000078                                   67538+R792ARS  DS    XL4                AVG NUM OF REAL FRAMES FOR STEP  @W5A 04-ERBSMF79\n 0000007C                                   67539+R792TWSS DS    XL4                SRM TARGET WORKING SET SIZE           04-ERBSMF79\n                                            67540+*                                 FOR THIS JOB                     @W5A\n 00000080                                   67541+R792PHSP DS    XL4                Number of hiperspace pages            04-ERBSMF79\n                                            67542+*                                 for current transaction          @W7A\n 00000084                                   67543+R792EXCT DS    XL4                New 4-byte EXCP count field  @YA42170 04-ERBSMF79\n 00000088                                   67544+R792SCL  DS    CL8                Service class name               @C1A 04-ERBSMF79\n 00000090                                   67545+R792SCP  DS    BL2                Service class period             @C1A 04-ERBSMF79\n 00000092                                   67546+R792WKLD DS    CL8                Workload name                    @C1A 04-ERBSMF79\n 0000009A                                   67547+R792RGRP DS    CL8                Resource group name              @C1A 04-ERBSMF79\n 000000A2                                   67548+         DS    XL2                RESERVED                              04-ERBSMF79\n 000000A4                                   67549+R792TCPC DS    XL4                Total CPU time consumed in this       04-ERBSMF79\n                                            67550+*                                 address space in milliseconds.\n                                            67551+*                                 (ascbejst+ascbsrbt+assbphtm)     @E2A\n 000000A8                                   67552+R792ASST DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            67553+*                                 class SRBs running on behalf of\n                                            67554+*                                 this address space in milliseconds.\n                                            67555+*                                 (assbasst)                       @E2A\n 000000AC                                   67556+R792PHTM DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            67557+*                                 class SRBs running in this address\n                                            67558+*                                 space in milliseconds (assbphtm) @E2A\n                                            67559+*\n 000000B0                                   67560+R792FXAB DS    XL4                Number of fixed frames between        04-ERBSMF79\n                                            67561+*                                 16M and 2G (ESAME only)          @I5A\n                                            67562+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  323\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000B4                                   67563+R792TIFA DS    XL4                CPU time consumed on zAAPs (IFAs)     04-ERBSMF79\n                                            67564+*                                 (ASSB_TIME_ON_IFA)               @K6C\n 000000B8                                   67565+R792TCP  DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            67566+*                                 (ASSB_TIME_ON_CP). Only valid if\n                                            67567+*                                 zAAPs or zIIPs in configuration\n                                            67568+*                                                              @OA13499\n 000000BC                                   67569+R792TIFC DS    XL4                CPU time consumed on standard CPs by  04-ERBSMF79\n                                            67570+*                                 zAAP (IFA) eligible work\n                                            67571+*                                 (ASSB_TIME_IFA_ON_CP)            @K6C\n 000000C0                                   67572+R792NFFI DS    XL4                Normalization factor for IFA time.    04-ERBSMF79\n                                            67573+*                                 Used to convert between real IFA\n                                            67574+*                                 times and \"normalized\" IFA times,\n                                            67575+*                                 i.e. the equivalent time on a\n                                            67576+*                                 standard CP. Multiply R792TIFA by\n                                            67577+*                                 this value and divide by 256 to\n                                            67578+*                                 calculate the normalized IFA time.\n                                            67579+*                                                                  @K6A\n 000000C4                                   67580+R792TSUP DS    XL4                CPU time consumed on zIIPs            04-ERBSMF79\n                                            67581+*                                 (ASSB_TIME_ON_zIIP)          @OA13499\n 000000C8                                   67582+R792TSUC DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            67583+*                                 by zIIP eligible work\n                                            67584+*                                 (ASSB_TIME_zIIP_ON_CP)       @OA13499\n 000000CC                                   67585+R792NFFS DS    XL4                Normalization factor for zIIP time.   04-ERBSMF79\n                                            67586+*                                 Used to convert between real zIIP\n                                            67587+*                                 times and \"normalized\" zIIP times,\n                                            67588+*                                 i.e. the equivalent time on a\n                                            67589+*                                 standard CP. Multiply R792TSUP by\n                                            67590+*                                 this value and divide by 256 to\n                                            67591+*                                 calculate the normalized zIIP time.\n                                            67592+*                                                              @OA13499\n 000000D0                                   67593+R792EXCW DS    CL8                EXCP Count ( DoubleWord )    @OA15850 04-ERBSMF79\n 000000D8                                   67594+R792PHTA DS    XL4                zAAP-only equivalent of R792PHTM      04-ERBSMF79\n                                            67595+*                                 (ASSB_IFA_PHTM).\n                                            67596+*                                 This is normalized time          @31A\n 000000DC                                   67597+R792PHTI DS    XL4                zIIP-only equivalent of R792PHTM      04-ERBSMF79\n                                            67598+*                                 (ASSB_zIIP_PHTM).\n                                            67599+*                                 This is normalized time          @31A\n                         000000E0           67600+R792RLEN EQU   *-R792ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67601+R792FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67602+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67603+*\n                                            67604+*        RELOCATE BLOCK FOR SUBTYPE 3\n                                            67605+*\n                                            67606+*\n 00000000                00000000 00000066  67607+R793     DSECT                    SCALAR RELOCATE SECTION               04-ERBSMF79\n 00000000                                   67608+R793RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000002                                   67609+R793CRI  DS    XL2                Current System UIC                    04-ERBSMF79\n                                            67610+*                                 (MCTCurSystemUIC)                @02C\n                                            67611+*                                                              @WA56739\n                                            67612+*        With apar OW56739 4-byte fields are appended to replace\n                                            67613+*        the 2-byte storage frame count fields. The old 2-byte\n                                            67614+*        fields still will be filled. They will contain value -1\n                                            67615+*        (x'FFFF') if a frame count is greater than 32767.\n                                            67616+*                                                              @WA56739\n 00000004                                   67617+R793SQA  DS    XL2                NUMBER OF FIXED SQA FRAMES            04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  324\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67618+*                                 (replaced by R793SQA4)       @WA56739\n 00000006                                   67619+R793CMNF DS    XL2                NUMBER OF COMMON (LPA+CSA)            04-ERBSMF79\n                                            67620+*                                 PAGEABLE AND FIXED FRAMES\n                                            67621+*                                 (replaced by R793CMN4)       @WA56739\n 00000008                                   67622+R793CMFF DS    XL2                NUMBER OF COMMON (LPA+CSA)            04-ERBSMF79\n                                            67623+*                                 FIXED FRAMES\n                                            67624+*                                 (replaced by R793CMF4)       @WA56739\n 0000000A                                   67625+R793PRFX DS    XL2                NUMBER OF PRIVATE FIXED FRAMES        04-ERBSMF79\n                                            67626+*                                 (LSQA+NON-LSQA)\n                                            67627+*                                 (replaced by R793PFX4)       @WA56739\n 0000000C                                   67628+R793CPUU DS    XL2                PROCESSOR UTILIZATION (0-101)         04-ERBSMF79\n 0000000E                                   67629+R793DQ   DS    XL2                LENGTH OF OUT WAIT QUEUE     @WA19913 04-ERBSMF79\n 00000010                                   67630+R793INC  DS    XL2                NUMBER OF ADDRESS SPACES IN STORAGE   04-ERBSMF79\n                                            67631+*                                 (SRM IN QUEUE)\n 00000012                                   67632+R793OUTU DS    XL2                NUMBER OF ADDRESS SPACES OUT OF       04-ERBSMF79\n                                            67633+*                                 STORAGE (SRM OUT QUEUE)\n 00000014                                   67634+R793LCU  DS    XL2                RESERVED                              04-ERBSMF79\n 00000016                                   67635+R793RSV4 DS    XL2                RESERVED LJM-SPE                 @Y2C 04-ERBSMF79\n 00000018                                   67636+R793LPAF DS    XL2                Number of total LPA frames   @YA34458 04-ERBSMF79\n                                            67637+*                                 (replaced by R793LPF4)       @WA56739\n 0000001A                                   67638+R793CSAF DS    XL2                Number of total CSA frames   @YA34458 04-ERBSMF79\n                                            67639+*                                 (replaced by R793CSF4)       @WA56739\n 0000001C                                   67640+R793LPFX DS    XL2                NUMBER OF LPA FIXED FRAMES            04-ERBSMF79\n                                            67641+*                                 (replaced by R793LFX4)       @WA56739\n 0000001E                                   67642+R793CSFX DS    XL2                NUMBER OF CSA FIXED FRAMES            04-ERBSMF79\n                                            67643+*                                 (replaced by R793CFX4)       @WA56739\n 00000020                                   67644+R793LSQA DS    XL2                NUMBER OF FIXED LSQA FRAMES           04-ERBSMF79\n                                            67645+*                                 (replaced by R793LSQ4)       @WA56739\n 00000022                                   67646+R793NLQF DS    XL2                NUMBER OF PRIVATE NON LSQA FIX FRAMES 04-ERBSMF79\n                                            67647+*                                 (replaced by R793NLF4)       @WA56739\n 00000024                                   67648+R793LOUT DS    XL2                NUMBER OF ADDRESS SPACES LOGICALLY    04-ERBSMF79\n                                            67649+*                                 SWAPPED OUT\n 00000026                                   67650+R793SQR  DS    XL4                SQA pages in real storage             04-ERBSMF79\n                                            67651+*                                      CTSQAF + CTRSQAF            @W1A\n 0000002A                                   67652+R793SQE  DS    XL4                SQA pages in ext. storage             04-ERBSMF79\n                                            67653+*                                      CTTSQAF - CTRSQAF           @W1A\n 0000002E                                   67654+R793LSQR DS    XL4                LSQA pages in real storage            04-ERBSMF79\n                                            67655+*                                      CTLSQAF + CTRLSQAF          @W1A\n 00000032                                   67656+R793LSQE DS    XL4                LSQA pages in ext. storage            04-ERBSMF79\n                                            67657+*                                      CTTLSQAF - CTRLSQAF         @W1A\n 00000036                                   67658+R793AFC  DS    XL4                NUMBER OF AVAILABLE FRAMES       @W5A 04-ERBSMF79\n 0000003A                                   67659+R793CUT  DS    XL4                MVS view of CPU utilization           04-ERBSMF79\n                                            67660+*                                 (interval - wait time) if Monitor I\n                                            67661+*                                 CPU gathering is active, otherwise\n                                            67662+*                                 CCVUTILP value at end of interval.\n                                            67663+*                                 (The interval length of the MVS\n                                            67664+*                                 view value is either 5 seconds or\n                                            67665+*                                 the Monitor I cycle time, if it is\n                                            67666+*                                 larger than 5 seconds.)      @WA05435\n                                            67667+*                                                              @WA56739\n 0000003E                                   67668+R793SQA4 DS    XL4                NUMBER OF FIXED SQA FRAMES   @WA56739 04-ERBSMF79\n                                            67669+*                                 (replaces R793SQA)           @WA56739\n 00000042                                   67670+R793CMN4 DS    XL4                NUMBER OF COMMON (LPA+CSA)   @WA56739 04-ERBSMF79\n                                            67671+*                                 PAGEABLE AND FIXED FRAMES    @WA56739\n                                            67672+*                                 (replaces R793CMN)           @WA56739\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  325\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000046                                   67673+R793CMF4 DS    XL4                NUMBER OF COMMON (LPA+CSA)   @WA56739 04-ERBSMF79\n                                            67674+*                                 FIXED FRAMES                 @WA56739\n                                            67675+*                                 (replaces R793CMFF)          @WA56739\n 0000004A                                   67676+R793PFX4 DS    XL4                NUMBER OF PRIVATE FIXED      @WA56739 04-ERBSMF79\n                                            67677+*                                 FRAMES (LSQA+NON-LSQA)       @WA56739\n                                            67678+*                                 (replaces R793PRFX)          @WA56739\n 0000004E                                   67679+R793LPF4 DS    XL4                Number of total LPA frames   @WA56739 04-ERBSMF79\n                                            67680+*                                 (replaces R793LPAF)          @WA56739\n 00000052                                   67681+R793CSF4 DS    XL4                Number of total CSA frames   @WA56739 04-ERBSMF79\n                                            67682+*                                 (replaces R793CSAF)          @WA56739\n 00000056                                   67683+R793LFX4 DS    XL4                NUMBER OF LPA FIXED FRAMES   @WA56739 04-ERBSMF79\n                                            67684+*                                 (replaces R793LPFX)          @WA56739\n 0000005A                                   67685+R793CFX4 DS    XL4                NUMBER OF CSA FIXED FRAMES   @WA56739 04-ERBSMF79\n                                            67686+*                                 (replaces by R793CSFX)       @WA56739\n 0000005E                                   67687+R793LSQ4 DS    XL4                NUMBER OF FIXED LSQA FRAMES  @WA56739 04-ERBSMF79\n                                            67688+*                                 (replaces R793LSQA)          @WA56739\n 00000062                                   67689+R793NLF4 DS    XL4                NUMBER OF PRIVATE NON LSQA   @WA56739 04-ERBSMF79\n                                            67690+*                                 FIXED FRAMES                 @WA56739\n                                            67691+*                                 (replaces R793NLQF)          @WA56739\n                         00000066           67692+R793RLEN EQU   *-R793             LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67693+R793FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67694+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67695+*\n                                            67696+*        RELOCATE BLOCK FOR SUBTYPE 4\n                                            67697+*\n                                            67698+*\n 00000000                00000000 0000006C  67699+R794     DSECT                    SCALAR RELOCATE SECTION               04-ERBSMF79\n 00000000                                   67700+R794CMNI DS    XL4                SYSTEM COMMON (LPA+CSA) PAGES IN      04-ERBSMF79\n 00000004                                   67701+R794CMNO DS    XL4                SYSTEM COMMON (CSA) PAGES OUT         04-ERBSMF79\n 00000008                                   67702+R794CMNR DS    XL4                SYSTEM COMMON (LPA+CSA) PAGES         04-ERBSMF79\n                                            67703+*                                 RECLAIMED, not used since rel 330\n 0000000C                                   67704+R794SWPO DS    XL4                NUMBER OF SWAPS (OUT)            @P1C 04-ERBSMF79\n 00000010                                   67705+R794PSPI DS    XL4                NUMBER OF PAGES SWAPPED IN            04-ERBSMF79\n 00000014                                   67706+R794PSPO DS    XL4                NUMBER OF PAGES SWAPPED OUT           04-ERBSMF79\n 00000018                                   67707+R794PRVI DS    XL4                NUMBER OF PRIVATE PAGES               04-ERBSMF79\n                                            67708+*                                 (VIO+NON-VIO) SWAPPED IN\n 0000001C                                   67709+R794PRVO DS    XL4                NUMBER OF PRIVATE PAGES               04-ERBSMF79\n                                            67710+*                                 (VIO+NON-VIO) SWAPPED OUT\n 00000020                                   67711+R794PRVR DS    XL4                NUMBER OF PRIVATE PAGES               04-ERBSMF79\n                                            67712+*                                 (VIO+NON-VIO) RECLAIMED\n                                            67713+*                                 not used since rel 330\n 00000024                                   67714+R794VIO  DS    XL4                NUMBER OF VIO PAGES (IN+OUT)          04-ERBSMF79\n 00000028                                   67715+R794RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 0000002A                                   67716+R794CRI  DS    XL2                Current System UIC                    04-ERBSMF79\n                                            67717+*                                 (MCTCurSystemUIC)                @02C\n 0000002C                                   67718+R794ACRI DS    XL2                AVERAGE OF HIGH UIC COUNT             04-ERBSMF79\n                                            67719+*                                 not used since rel 330\n 0000002E                                   67720+R794RV1  DS    XL2                RESERVED                              04-ERBSMF79\n 00000030                                   67721+R794LPAI DS    XL4                SYSTEM LPA PAGES IN          @G537NLS 04-ERBSMF79\n 00000034                                   67722+R794CSAI DS    XL4                SYSTEM CSA PAGES OUT         @G537NLS 04-ERBSMF79\n 00000038                                   67723+R794LPAR DS    XL4                SYSTEM LPA PAGES RECLAIMED   @G537NLS 04-ERBSMF79\n                                            67724+*                                 not used since rel 330\n 0000003C                                   67725+R794CSAR DS    XL4                SYSTEM CSA PAGES RECLAIMED   @G537NLS 04-ERBSMF79\n                                            67726+*                                 not used since rel 330\n 00000040                                   67727+R794RSV2 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  326\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000042                                   67728+         DS    XL2                UNUSED (Was Migation age)        @Q2C 04-ERBSMF79\n 00000044                                   67729+R794ERTE DS    XL4                NO. PAGES TO EXT. STORAGE        @P2A 04-ERBSMF79\n 00000048                                   67730+R794EVAL DS    XL4                NO. OF EXTENDED STORAGE SLOTS         04-ERBSMF79\n                                            67731+*                                 AVAIL. AND NOT IN USE            @P2A\n 0000004C                                   67732+R794ESSL DS    XL4                AVAILABLE FOR FUTURE USE         @P2A 04-ERBSMF79\n 00000050                                   67733+R794MRTE DS    XL4                NO. OF PAGES MIGRATED FROM            04-ERBSMF79\n                                            67734+*                                 EXT. STOR. TO AUX. STOR.         @P6A\n 00000054                                   67735+R794MAGE DS    XL4                Migration age                    @Q2M 04-ERBSMF79\n                                            67736+*                                                                  @P6D\n 00000058                                   67737+R794AFC  DS    XL4                NUMBER AVAILABLE FRAMES          @W5A 04-ERBSMF79\n 0000005C                                   67738+R794TWSS DS    XL4                TARGET WORKING SETSIZE FOR THE COMMON 04-ERBSMF79\n                                            67739+*                                 AREA                             @W5A\n 00000060                                   67740+R794HSP  DS    XL4                Number of hiperspace pages            04-ERBSMF79\n                                            67741+*                                 (In + Out)                       @W7A\n 00000064                                   67742+R794PPIA DS    XL4                Number of blocked pages paged in      04-ERBSMF79\n                                            67743+*                                 from AUX (private)               @A3A\n 00000068                                   67744+R794LPIA DS    XL4                Number of blocks paged in from        04-ERBSMF79\n                                            67745+*                                 AUX (private)                    @A3A\n                         0000006C           67746+R794RLEN EQU   *-R794             LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67747+R794FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67748+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67749+*\n                                            67750+*        RELOCATE BLOCK FOR SUBTYPE 5\n                                            67751+*\n 00000000                00000000 00000057  67752+R795ELEM DSECT                    MAPPING OF ELEMENT                    04-ERBSMF79\n 00000000                                   67753+R795ASID DS    XL2                ADDRESS SPACE IDENTIFIER              04-ERBSMF79\n 00000002                                   67754+R795JBN  DS    CL8                NAME OF JOB                           04-ERBSMF79\n 0000000A                                   67755+R795DMN  DS    XL2                DOMAIN NAME                           04-ERBSMF79\n                                            67756+*                                 not applicable in GOAL mode      @C1C\n 0000000C                                   67757+R795NPG  DS    XL2                PERFORMANCE GROUP                     04-ERBSMF79\n                                            67758+*                                 not applicable in GOAL mode      @C1C\n 0000000E                                   67759+R795PGP  DS    XL2                PERFORMANCE GROUP PERIOD              04-ERBSMF79\n                                            67760+*                                 not applicable in GOAL mode      @C1C\n 00000010                                   67761+R795TTOD DS    XL4                REAL TIME INTO TRANSACTION            04-ERBSMF79\n 00000014                                   67762+R795CL   DS    CL2                CURRENT LOCATION                      04-ERBSMF79\n                                            67763+*\n                                            67764+*                              CONTENTS   MEANING\n                                            67765+*                              --------   -------\n                                            67766+*                                   IN - SWAPPED IN\n                                            67767+*                                   OT - SWAPPED OUT AND READY\n                                            67768+*                                   LO - LOGICALLY SWAPPED OUT @G537NLS\n                                            67769+*                                   NS - NON-SWAPPABLE\n                                            67770+*                                   WM - WAIT QUEUE/MSO\n                                            67771+*                                   WL - WAIT QUEUE/LONG WAIT\n                                            67772+*                                   WT - WAIT QUEUE/TERM WAIT\n                                            67773+*                                   WO - WAIT QUEUE/other reasons  @I1A\n                                            67774+*                                   DL - TSO user delayed by SRM\n                                            67775+*                                        to meet response time\n                                            67776+*                                        objective                 @I1A\n                                            67777+*                                   PR - PRIVLEDGED\n                                            67778+*                                   >> - TRANSITIONING OUT\n                                            67779+*                                   << - TRANSITIONING IN\n000000016                                   67781+R795TAS  DS    XL2                TYPE OF USER                          04-ERBSMF79\n                                            67782+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  327\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67783+*                              CONTENTS   MEANING\n                                            67784+*                              --------   -------\n                                            67785+*                                   0 - BATCH\n                                            67786+*                                   1 - STARTED TASK\n                                            67787+*                                   2 - MOUNT TASK\n                                            67788+*                                   3 - TSO\n                                            67789+*                                   4 - ASCH                       @A1A\n                                            67790+*                                   5 - OMVS                       @B2A\n000000018                                   67792+R795TROD DS    CL4                TRANSACTION RESIDENT TIME             04-ERBSMF79\n 0000001C                                   67793+R795TCNT DS    XL2                TRANSACTION COUNT                     04-ERBSMF79\n 0000001E                                   67794+R795SWC  DS    XL2                TRANSACTION SWAP COUNT                04-ERBSMF79\n 00000020                                   67795+R795CPUS DS    XL4                TOTAL PROCESSOR  SERVICE FOR          04-ERBSMF79\n                                            67796+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            67797+*                                 OF STORAGE)\n 00000024                                   67798+R795MSOS DS    XL4                TOTAL MSO SERVICE FOR                 04-ERBSMF79\n                                            67799+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            67800+*                                 OF STORAGE)\n 00000028                                   67801+R795IOCS DS    XL4                TOTAL IOC SERVICE FOR                 04-ERBSMF79\n                                            67802+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            67803+*                                 OF STORAGE)\n 0000002C                                   67804+R795WMS  DS    XL4                TOTAL SERVICE FOR                     04-ERBSMF79\n                                            67805+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            67806+*                                 OF STORAGE)\n 00000030                                   67807+R795TOTL DS    XL4                TOTAL SERVIC FOR SESSION              04-ERBSMF79\n                                            67808+*                                 (ZERO WHEN ASID IS OUT OF STORAGE)\n 00000034                                   67809+R795TOT  DS    XL4                TOTAL SERVICE FOR TRANSACTION         04-ERBSMF79\n                                            67810+*                                 SINCE LAST SWAP - IN\n 00000038                                   67811+R795SRBS DS    XL4                TOTAL SRB SERVICE FOR                 04-ERBSMF79\n                                            67812+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            67813+*                                 OF STORAGE)\n 0000003C                                   67814+R795FLG  DS    XL1                Flags                            @C1A 04-ERBSMF79\n                         000000E0           67815+R795RSV1 EQU   X'E0'              Reserved                         @C1A 04-ERBSMF79\n                         00000010           67816+R795GOAL EQU   X'10'              On = system is in GOAL mode      @C1A 04-ERBSMF79\n                         00000008           67817+R795SRV  EQU   X'08'              On = this address space is a          04-ERBSMF79\n                                            67818+*                                 server address space             @C1A\n                                            67819+*                                  Off = GOAL specified for this\n                                            67820+*                                  address space is being honored\n                                            67821+*                                  by WLM                          @C1A\n                         00000004           67822+R795QSC  EQU   X'04'              On = address space has been           04-ERBSMF79\n                                            67823+*                                 quiesced by a RESET command      @C1A\n 0000003D                                   67824+R795SCL  DS    CL8                Service class name               @C1A 04-ERBSMF79\n 00000045                                   67825+R795SCP  DS    BL2                Service class period             @C1A 04-ERBSMF79\n 00000047                                   67826+R795WKLD DS    CL8                Workload name                    @C1A 04-ERBSMF79\n 0000004F                                   67827+R795RGRP DS    CL8                Resource group name              @C1A 04-ERBSMF79\n                         00000057           67828+R795RLEN EQU   *-R795ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67829+R795FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67830+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67831+*\n                                            67832+*          RELOCATE BLOCK FOR SUBTYPE 6 - MONITOR 2                @L8A\n                                            67833+*          ENQUEUE RESERVE                                         @L8A\n                                            67834+*\n 00000000                00000000 00000056  67835+R796ELEM DSECT                    MAPPING OF ELEMENT               @L8A 04-ERBSMF79\n 00000000                                   67836+R796ASID DS    XL2                ADDRESS SPACE ID OF THE JOB WHICH@L8A 04-ERBSMF79\n                                            67837+*                                 ISSUED THE RESERVE\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  328\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000002                                   67838+R796MAJ  DS    CL8                MAJOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 0000000A                                   67839+R796MIN  DS    CL44               MINOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 00000036                                   67840+R796JBN  DS    CL8                NAME OF THE JOB IN WHICH THE     @L8A 04-ERBSMF79\n                                            67841+*                                 RESERVE WAS ISSUED\n 0000003E                                   67842+R796VOLS DS    CL6                VOLUME SERIAL OF THE VOLUME      @L8A 04-ERBSMF79\n                                            67843+*                                 AGAINST WHICH THE RESERVE WAS ISSUED\n 00000044                                   67844+R796UCB  DS    CL3                THE 3 DIGIT DEV NUMBER AGAINST   @C2C 04-ERBSMF79\n                                            67845+*                                 THE RESERVE WAS ISSUED, OR \"UCB\" @C2C\n                                            67846+*                                 IF UCBNAME = \"UCB\"               @C2A\n 00000047                                   67847+R796REQ  DS    CL2                TYPE AND STATUS OF REQUEST FOR   @L8A 04-ERBSMF79\n                                            67848+*                                 THE RESOURCEISSUED\n 00000049                                   67849+R796MINL DS    XL2                MINOR NAME LENGTH FOR REPORTING  @L8A 04-ERBSMF79\n 0000004B                                   67850+R796FLG  DS    XL1                DATA TYPE FLAGS                  @L8A 04-ERBSMF79\n                         00000080           67851+R796RESV EQU   X'80'              1... .... ON=DEVICE RESERVED BY       04-ERBSMF79\n                                            67852+*                                           THIS CPU               @L8A\n                         00000040           67853+R796TRUN EQU   X'40'              .1.. .... ON=MINOR NAME TRUNCATED     04-ERBSMF79\n                                            67854+*                                                                  @L8A\n                         00000020           67855+R796GLBL EQU   X'20'              ..1. .... ON=GLOBAL RESOURCE     @LCA 04-ERBSMF79\n                         00000010           67856+R796RESC EQU   X'10'              ...1 .... ON=RES REQU CONV TO         04-ERBSMF79\n                                            67857+*                                           GLOBAL ENQ             @Q1A\n                                            67858+*                                 .... XXXX RESERVED BITS          @L8A\n 0000004C                                   67859+R796SID  DS    CL8                SYSTEM ID OF THE JOB BY WHICH         04-ERBSMF79\n                                            67860+*                                 THE RESERVE WAS ISSUED\n 00000054                                   67861+R796DVN  DS    XL2                DEV NUMBER (BIN) FROM UCBCHAN    @C2A 04-ERBSMF79\n                                            67862+*                                 R796DVN moved into REL BLOCK @WA02579\n                         00000056           67863+R796RLEN EQU   *-R796ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67864+R796FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67865+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67866+*\n                                            67867+*          RELOCATE BLOCK FOR SUBTYPE 7 - MONITOR 2                @L8A\n                                            67868+*          ENQUEUE REQUESTS                                        @L8A\n                                            67869+*                                                                  @L8A\n 00000000                00000000 0000005C  67870+R797ELEM DSECT                    MAPPING OF ELEMENT               @L8A 04-ERBSMF79\n 00000000                                   67871+R797MAJ  DS    CL8                MAJOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 00000008                                   67872+R797MIN  DS    CL44               MINOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 00000034                                   67873+R797FLG  DS    XL1                DATA TYPE FLAGS                  @L8A 04-ERBSMF79\n0                        00000080           67875+R797GDET EQU   X'80'              1... .... ON=DETAIL DATA, OFF=SUMMARY 04-ERBSMF79\n                                            67876+*                                           DATA                   @L8A\n                         00000040           67877+R797GMAJ EQU   X'40'              .1.. .... ON= MAJOR NAME IS           04-ERBSMF79\n                                            67878+*                                           SPECIFIED              @L8A\n                         00000020           67879+R797GMIN EQU   X'20'              ..1. .... ON= MINOR NAME IS           04-ERBSMF79\n                                            67880+*                                           SPECIFIED              @L8A\n                         00000010           67881+R797TRNC EQU   X'10'              ...1 .... ON=MINOR NAME               04-ERBSMF79\n                                            67882+*                                           TRUNCATED              @L8A\n                         00000008           67883+R797GLBL EQU   X'08'              .... 1... ON=GLOBAL RESOURCE     @LCA 04-ERBSMF79\n                                            67884+*                                                                  @L8A\n                         00000004           67885+R797ALLS EQU   X'04'              .... .1.. ON=RESOURCES IS HELD BY SYS 04-ERBSMF79\n                                            67886+*                                                                  @L8A\n                         00000002           67887+R797ALLE EQU   X'02'              .... ..1. ON=ALL EXL OWNED HELD       04-ERBSMF79\n                                            67888+*                                           BY SYS                 @L8A\n0                                           67890+*                                 .... ...X RESERVED BITS          @LLA\n 00000035                                   67891+R797MINL DS    XL4                MINOR NAME LENGTH FOR REPORTING       04-ERBSMF79\n                                            67892+*                                                                  @L8A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  329\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000039                                   67893+R797OWN  DS    XL2                COUNT OF REQUESTS OWNING RESOURCE     04-ERBSMF79\n                                            67894+*                                                                  @L8A\n 0000003B                                   67895+R797EXCW DS    XL2                COUNT EXCL REQS WAITING FOR RESOURCE  04-ERBSMF79\n                                            67896+*                                                                  @L8A\n 0000003D                                   67897+R797SHRW DS    XL2                COUNT SHR REQS WAITING FOR RESOURCE   04-ERBSMF79\n                                            67898+*                                                                  @L8A\n 0000003F                                   67899+R797REQ  DS    CL2                TYPE AND STATUS OF REQUEST       @L8A 04-ERBSMF79\n                                            67900+*                                 FOR A RESOURCE\n 00000041                                   67901+R797JBN  DS    CL8                NAME OF JOB WHICH ISSUED THE ENQ @L8A 04-ERBSMF79\n 00000049                                   67902+R797ASID DS    CL2                ADDRESS SPACE ID OF THE JOB WHICH     04-ERBSMF79\n                                            67903+*                                 ISSUED THE ENQ\n 0000004B                                   67904+R797SCOP DS    CL4                SCOPE OF THE RESOURCE                 04-ERBSMF79\n 0000004F                                   67905+R797RES  DS    CL2                RESERVED                         @L8A 04-ERBSMF79\n 00000051                                   67906+R797SID  DS    CL8                SYSTEM ID OF JOB THAT ISSUED ENQ      04-ERBSMF79\n 00000059                                   67907+         DS    XL3                RESERVED FOR ALIGNMENT                04-ERBSMF79\n                         0000005C           67908+R797RLEN EQU   *-R797ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67909+R797FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67910+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            67911+*\n                                            67912+*           RELOCATE BLOCK FOR SUBTYPE 8 - MONITOR 2           @GM2EPDV\n                                            67913+*           TRANSACTION ANALYSIS                               @GM2EPDV\n                                            67914+*\n 00000000                00000000 00000040  67915+R798ELEM DSECT                    MAPPING OF ELEMENT           @GM2EPDV 04-ERBSMF79\n 00000000                                   67916+R798ICSI DS    CL2                ICS MEMBER NAME ID           @GM2EPDV 04-ERBSMF79\n 00000002                                   67917+R798IPSI DS    CL2                IPS MEMBER NAME ID           @GM2EPDV 04-ERBSMF79\n 00000004                                   67918+R798PGN  DS    XL2                PERFORMANCE GROUP NUMBER     @GM2EPDV 04-ERBSMF79\n 00000006                                   67919+R798PGP  DS    XL2                PERFORMANCE GROUP PERIOD     @GM2EPDV 04-ERBSMF79\n 00000008                                   67920+R798SYS  DS    CL4                SUBSYSTEM NAME               @GM2EPDV 04-ERBSMF79\n 0000000C                                   67921+R798TTX  DS    XL4                NUMBER OF ENDED TRANSACTIONS @GM2EPDV 04-ERBSMF79\n 00000010                                   67922+R798TTM  DS    XL4                ELAPSED TIME OF ENDED TRANS FOR PGP,  04-ERBSMF79\n                                            67923+*                                 IN 1024 MICROSECONDS         @GM2EPDV\n 00000014                                   67924+R798CLS  DS    CL10               TRANSACTION CLASS NAME       @GM2EPDV 04-ERBSMF79\n 0000001E                                   67925+R798USR  DS    CL10               USERID                       @GM2EPDV 04-ERBSMF79\n 00000028                                   67926+R798NAM  DS    CL10               TRANSACTION NAME             @GM2EPDV 04-ERBSMF79\n 00000032                                   67927+R798FL1  DS    XL1                DATA TYPE FLAGS              @GM2EPDV 04-ERBSMF79\n0                        00000080           67929+R798RPT  EQU   X'80'              1... .... ON=RPT PGN,        @GM2EPDV 04-ERBSMF79\n                                            67930+*                                           OFF=CONTROL PGN    @GM2EPDV\n                         00000040           67931+R798ACN  EQU   X'40'              .1.. .... ON=ACCTINFO USED       @R0A 04-ERBSMF79\n                                            67932+*                                 ..XX XXXX RESERVED BITS          @R0C\n 00000033                                   67933+         DS    XL5                RESERVED                         @C1C 04-ERBSMF79\n 00000038                                   67934+R798TET  DS    0D                 ELAPSED TIME OF ENDED TRANS FOR PGP,  04-ERBSMF79\n                                            67935+*                                 IN 1024 MICROSECONDS             @C1A\n 00000038                                   67936+R798TET1 DS    F                  R798TET - WORD 1                 @C1A 04-ERBSMF79\n 0000003C                                   67937+R798TET2 DS    F                  R798TET - WORD 2                 @C1A 04-ERBSMF79\n0                        00000040           67939+R798RLEN EQU   *-R798ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           67940+R798FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            67941+*                                 WE ONLY HAVE RELOCATE BLOCKS\n-\n                                            67943+*\n                                            67944+*           RELOCATE BLOCK FOR SUBTYPE 9 - MONITOR 2\n                                            67945+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  330\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           67946+*           DEVICE DATA SECTION (ONE PER DEVICE)\n                                            67947+*\n 00000000                00000000 00000068  67948+R799ELEM DSECT          MAPPING OF ELEMENT                              04-ERBSMF79\n 00000000                                   67949+R799NUM  DS    PL2      DEVICE NUMBER IN THE RANGE X'0000' TO X'0FFF'   04-ERBSMF79\n 00000002                                   67950+R799LCU  DS    BL2      LOGICAL CONTROL UNIT GROUP NUMBER 0 TO 255      04-ERBSMF79\n 00000004                                   67951+R799RV0  DS    BL1      RESERVED                                        04-ERBSMF79\n 00000005                                   67952+R799CNF  DS    BL1      DEVICE FLAGS:                                   04-ERBSMF79\n                         00000080           67953+R799QUL  EQU   X'80'    1... ....   ON= IOS Q-LENGTH INVALID            04-ERBSMF79\n                         00000040           67954+R799LCD  EQU   X'40'    .1.. ....   ON= NO LCU INFORMATION              04-ERBSMF79\n                         00000020           67955+R799CMB  EQU   X'20'    ..1. ....   ON= CMB DATA INVALID                04-ERBSMF79\n                         00000010           67956+R799DTF  EQU   X'10'    ...1 ....   ON= DEVICE CONNECT OR PENDING OR    04-ERBSMF79\n                                            67957+*                                       DISCONNECT TIME IS INVALID\n                                            67958+*                                                              @WA15094\n                                            67959+*        EQU   X'08'    .... 1...   RESERVED\n                         00000004           67960+R799MXB  EQU   X'04'    .... .1..   ON= DEVICE IS MULTIPLE EXPOSURE     04-ERBSMF79\n                                            67961+*                                       DEVICE; THIS IS BASE EXPOSURE\n                         00000002           67962+R799VAC  EQU   X'02'    .... ..1.   ON= DATA RECORDED IS INVALID        04-ERBSMF79\n                                            67963+*                                       BECAUSE DEVICE WAS VARIED\n                                            67964+*                                       DURING INTERVAL\n                         00000001           67965+R799STA  EQU   X'01'    .... ...1   ON= DEVICE IS CURRENTLY ONLINE      04-ERBSMF79\n 00000006                                   67966+R799SER  DS    CL6      VOLUME SERIAL NUMBER OF MOUNTED VOLUME          04-ERBSMF79\n 0000000C                                   67967+R799TYP  DS    BL4      UNIT TYPE                                       04-ERBSMF79\n 00000010                                   67968+R799NUX  DS    BL4      Number of exposures (if multiple).              04-ERBSMF79\n                                            67969+*                       In case of a HyperPAV base device,\n                                            67970+*                       R799HPV = 1, number of accumulated\n                                            67971+*                       HyperPAV aliases                           @01C\n 00000014                                   67972+R799SSC  DS    BL4      START SUBCHANNEL (SSCH) COUNT                   04-ERBSMF79\n 00000018                                   67973+R799MEC  DS    BL4      MEASUREMENT EVENT COUNT (NUMBER OF SSCH         04-ERBSMF79\n                                            67974+*                       FOR WHICH CONNECT, PENDING, AND ACTIVE\n                                            67975+*                       TIMES WERE STORED)\n 0000001C                                   67976+R799CNN  DS    BL4      DEVICE CONNECT TIME                             04-ERBSMF79\n 00000020                                   67977+R799PEN  DS    BL4      FUNCTION PENDING TIME                           04-ERBSMF79\n 00000024                                   67978+R799ATV  DS    BL4      FUNCTION ACTIVE TIME                            04-ERBSMF79\n 00000028                                   67979+R799DIS  DS    BL4      DEVICE DISCONNECT TIME                          04-ERBSMF79\n 0000002C                                   67980+R799QUE  DS    BL4      NUMBER OF REQUESTS QUEUED IN IOS FOR            04-ERBSMF79\n                                            67981+*                       THIS DEVICE\n 00000030                                   67982+R799UTL  DS    BL4      NUMBER OF SAMPLES WHEN THE DEVICE WAS           04-ERBSMF79\n                                            67983+*                       RESERVED, BUT AN SSCH HAD NOT BEEN ISSUED\n 00000034                                   67984+R799RSV  DS    BL4      NUMBER OF SAMPLES DURING THE MEASUREMENT        04-ERBSMF79\n                                            67985+*                       INTERVAL THAT INDICATED THAT THE DEVICE\n                                            67986+*                       WAS RESERVED\n 00000038                                   67987+R799DSO  DS    BL4      reserved - do not use - variable name is        04-ERBSMF79\n                                            67988+*                       needed for conversion                      @U1C\n 0000003C                                   67989+R799ALC  DS    BL4      NUMBER OF SAMPLES DURING THE MEASUREMENT        04-ERBSMF79\n                                            67990+*                       INTERVAL THAT INDICATED THAT THE DEVICE\n                                            67991+*                       WAS ALLOCATED\n 00000040                                   67992+R799DVB  DS    BL4      device busy delay time                     @Z1C 04-ERBSMF79\n                                            67993+*                       (3090,9021,9121,9221 support)\n 00000044                                   67994+R799CUB  DS    BL4      No longer used                             @K1C 04-ERBSMF79\n 00000048                                   67995+R799ICT  DS    BL2      invalid sample count                       @Z1C 04-ERBSMF79\n                                            67996+*                       (3090,9021,9121,9221 support)\n 0000004A                                   67997+R799CNX  DS    BL1      Device flag extensions                     @G2A 04-ERBSMF79\n                         00000080           67998+R799PAV  EQU X'80'      1... .... =1 If base exposure of a Parallel     04-ERBSMF79\n                                            67999+*                                    Access Volume                 @G2A\n                         00000040           68000+R799NXC  EQU X'40'      .1.. .... =1 If number of alias exposures       04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  331\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68001+*                                    changed                       @G2A\n                         00000020           68002+R799NTF  EQU X'20'      ..1. .... =1 Timing facility not active    @I2A 04-ERBSMF79\n                         00000010           68003+R799ECM  EQU X'10'      ...1 .... =1 ECMB mode                     @K3A 04-ERBSMF79\n                         00000008           68004+R799STS  EQU X'08'      .... 1... =1 model dependent data not      @K1A 04-ERBSMF79\n                                            68005+*                                    available by STSCH            @K1A\n                         00000004           68006+R799FCM  EQU X'04'      .... .1.. =1 Initial command response      @K1A 04-ERBSMF79\n                                            68007+*                                    time available                @K1A\n                         00000002           68008+R799HPV  EQU X'02'      .... ..1. =1 HyperPAV base device          @01A 04-ERBSMF79\n 0000004B                                   68009+R799RES  DS    BL1      reserved                                   @G2C 04-ERBSMF79\n 0000004C                                   68010+R799SGN  DS    CL8      Storage Group Name                         @U1A 04-ERBSMF79\n 00000054                                   68011+R799NDA  DS    BL4      Total number of allocations in effect for the   04-ERBSMF79\n                                            68012+*                       device                                     @U2A\n 00000058                                   68013+R799DPB  DS    BL4      No longer used                             @K1C 04-ERBSMF79\n 0000005C                                   68014+R799CMR  DS    BL4      Command response time in units of          @K1C 04-ERBSMF79\n                                            68015+*                       128 microseconds                           @K1C\n 00000060                                   68016+R799PCT  DS    BL4      Number of unsuccessful PAV samples     @WA31701 04-ERBSMF79\n 00000064                                   68017+R799PSM  DS    BL4      Number of successful PAV samples           @01A 04-ERBSMF79\n                         00000068           68018+R799RLEN EQU   *-R799ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68019+R799FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68020+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68021+*\n                                            68022+*           RELOCATE BLOCK FOR SUBTYPE A - MONITOR 2               @LBA\n                                            68023+*           DISPLAY DOMAIN DATA                                    @LBA\n                                            68024+*\n 00000000                00000000 00000040  68025+R79AELEM DSECT                    MAPPING OF ELEMENT               @LBA 04-ERBSMF79\n 00000000                                   68026+R79ATWSR DS    XL4                TIME WEIGHTED SERVICE RATE       @LBA 04-ERBSMF79\n 00000004                                   68027+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000006                                   68028+R79ARUA  DS    XL2                AVERAGE NUMBER OF READY USERS    @LBA 04-ERBSMF79\n 00000008                                   68029+R79RSV5  DS    XL2                RESERVED LJM-SPE                 @Y2C 04-ERBSMF79\n 0000000A                                   68030+R79ACMPL DS    XL2                CURRENT MPL VALUE                @LBA 04-ERBSMF79\n 0000000C                                   68031+R79AOUTU DS    XL2                AVERAGE NUMBER OF USERS SWAPPED OUT   04-ERBSMF79\n 0000000E                                   68032+R79AINCU DS    XL2                AVERAGE NUMBER OF SWAPPED IN-USER     04-ERBSMF79\n 00000010                                   68033+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000012                                   68034+R79ACIDX DS    XL2                CONTENTION INDEX                 @LBA 04-ERBSMF79\n 00000014                                   68035+R79ANSW  DS    XL2                NUMBER OF NON SWAPPABLE USERS         04-ERBSMF79\n 00000016                                   68036+R79ADMNO DS    XL1                DOMAIN NUMBER                    @LBA 04-ERBSMF79\n 00000017                                   68037+R79RESV1 DS    XL1                RESERVED. FORMER R79ADMLO        @P3C 04-ERBSMF79\n 00000018                                   68038+R79RESV2 DS    XL1                RESERVED. FORMER R79ADMHI        @P3C 04-ERBSMF79\n 00000019                                   68039+         DS    CL1                Reserved                         @A3C 04-ERBSMF79\n 0000001A                                   68040+R79AIPS  DS    CL2                CURRENT IPS                      @LBA 04-ERBSMF79\n 0000001C                                   68041+R79ACPU  DS    CL4                CPU SERVICE COEF.                @LBA 04-ERBSMF79\n 00000020                                   68042+R79AIOS  DS    CL4                I/O SERVICE COEF.                @LBA 04-ERBSMF79\n 00000024                                   68043+R79ARSV4 DS    CL4                RESERVED SINCE RMF 4.2.0         @Y2C 04-ERBSMF79\n 00000028                                   68044+R79ASRB  DS    CL4                SRB SERVICE COEF.                @LBA 04-ERBSMF79\n 0000002C                                   68045+R79ATWET DS    CL4                AVERAGE FIRST PERIOD TSO TRANSACTION  04-ERBSMF79\n                                            68046+*                                 RESPONSE TIME\n 00000030                                   68047+R79ADMLO DS    XL2                MIN MPL LEVEL                    @P3C 04-ERBSMF79\n 00000032                                   68048+R79ADMHI DS    XL2                MAX MPL LEVEL                    @P3A 04-ERBSMF79\n 00000034                                   68049+R79AMSO  DS    CL8                MAIN STORAGE SERVICE COEFICIENT  @Y2A 04-ERBSMF79\n 0000003C                                   68050+R79AIMPL DS    XL2                IN MPL Target                    @A3A 04-ERBSMF79\n 0000003E                                   68051+R79AOMPL DS    XL2                OUT MPL Target                   @A3A 04-ERBSMF79\n                         00000040           68052+R79ARLEN EQU   *-R79AELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68053+R79AFLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68054+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68055+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  332\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68056+*           RELOCATE BLOCK FOR SUBTYPE B - MONITOR 2               @LBA\n                                            68057+*           PAGE DATA SET ACTIVITY                                 @K2C\n                                            68058+*\n 00000000                00000000 00000004  68059+R79BCNTL DSECT                    MAPPING OF COMMON DATA ELEMENT   @LBA 04-ERBSMF79\n 00000000                                   68060+R79BETYP DS    CL1                TYPE OF DATA THAT FOLLOWS:       @K2C 04-ERBSMF79\n                                            68061+*                                 P - PAGE                         @K2C\n 00000001                                   68062+         DS    CL3                RESERVED                              04-ERBSMF79\n                         00000004           68063+R79BFLEN EQU   *-R79BCNTL         LENGTH OF FIXED SECTION               04-ERBSMF79\n-\n 00000000                00000000 00000062  68065+R79BELEM DSECT                    MAPPING OF ELEMENT               @LBA 04-ERBSMF79\n 00000000                                   68066+R79BSALC DS    XL4                SLOTS IN THIS DATA SET           @LBA 04-ERBSMF79\n 00000004                                   68067+R79BSAVL DS    XL4                SLOTS AVAILABLE                  @LBA 04-ERBSMF79\n 00000008                                   68068+R79BSLBD DS    XL4                NUMBER OF BAD SLOTS              @LBA 04-ERBSMF79\n 0000000C                                   68069+R79BSUSE DS    XL4                ASM IN USE COUNT                 @LBA 04-ERBSMF79\n 00000010                                   68070+R79BSIOS DS    XL4                I/O REQUESTS                     @LBA 04-ERBSMF79\n 00000014                                   68071+R79BREQS DS    XL4                PAGES TRANSFERRED                @LBA 04-ERBSMF79\n 00000018                                   68072+R79BFLG  DS    CL1                FLAGS                            @LBA 04-ERBSMF79\n0                        00000080           68074+R79BSBAD EQU   X'80'              1... .... BAD DATA SET INDICATOR      04-ERBSMF79\n                         00000040           68075+R79BPLPA EQU   X'40'              .1.. .... PLPA DATA SET               04-ERBSMF79\n                         00000020           68076+R79BCOMM EQU   X'20'              ..1. .... COMMON DATA SET             04-ERBSMF79\n                         00000010           68077+R79BDPLX EQU   X'10'              ...1 .... Reserved               @K2C 04-ERBSMF79\n                         00000008           68078+R79BLOCL EQU   X'08'              .... 1... LOCAL DATA SET              04-ERBSMF79\n                         00000004           68079+R79BPAGE EQU   X'04'              .... .1.. PAGE DATA                   04-ERBSMF79\n                         00000002           68080+R79BSWAP EQU   X'02'              .... ..1. Reserved               @K2C 04-ERBSMF79\n                         00000001           68081+R79BVIO  EQU   X'01'              .... ...1 DATASET ACCEPTS VIO PAGES   04-ERBSMF79\n000000019                                   68083+R79BDEV  DS    CL1                DEVICE TYPE CODE                 @LBA 04-ERBSMF79\n 0000001A                                   68084+R79BDADR DS    CL3                3 DIGIT DEV NUMBER OR \"UCB\",     @C2C 04-ERBSMF79\n                                            68085+*                                 IF UCBNAME=\"UCB\"                 @C2A\n 0000001D                                   68086+R79BVSER DS    CL6                VOLUME SERIAL                    @LBA 04-ERBSMF79\n 00000023                                   68087+R79BDSN  DS    CL44               DATA SET NAME                    @LBA 04-ERBSMF79\n 0000004F                                   68088+R79BFL2  DS    CL1                FLAGS                        @ZA57889 04-ERBSMF79\n                         00000080           68089+R79BMEXP EQU   X'80'              MULTIPLE EXPOSURE DEVICE     @ZA57889 04-ERBSMF79\n                         00000040           68090+R79BALCU EQU   X'40'              ALTERNATE CONTROL UNIT DEVICE    @E1A 04-ERBSMF79\n                         00000020           68091+R79BDNM  EQU   X'20'              INDICATES IF FIELD R79BDEVN CONTAINS  04-ERBSMF79\n                                            68092+*                                 A VALID DEVICE NAME              @Y1A\n                                            68093+*                                                                  @Y1D\n 00000050                                   68094+R79BDEVN DS    CL8                DEVICE NAME                      @Y1A 04-ERBSMF79\n 00000058                                   68095+R79BCU   DS    CL8                CONTROL UNIT NAME                @Y1A 04-ERBSMF79\n 00000060                                   68096+R79BDVN  DS    XL2                DEV NUMBER (BIN) FROM UCBCHAN    @C2A 04-ERBSMF79\n                         00000062           68097+R79BRLEN EQU   *-R79BELEM         LENGTH OF RELOCATE SECTION   @OA16748 04-ERBSMF79\n-                                           68099+************** CHANNEL PATH CONTROL SECTION ***************************\n000000000                00000000 00000014  68101+R79CCNTL DSECT                                                          04-ERBSMF79\n 00000000                                   68102+R79CSMP  DS    BL4                NUMBER OF SAMPLES, WEIGHTED BY SRM,   04-ERBSMF79\n                                            68103+*                                 only valid if R79CMCS = OFF @OA04260\n 00000004                                   68104+R79CFLAG DS    BL1                Flags                           @BAA  04-ERBSMF79\n                         00000080           68105+R79CCPMF EQU   X'80'              CPMF available                  @BAA  04-ERBSMF79\n                         00000040           68106+R79CCFGC EQU   X'40'              Configuration change            @E1A  04-ERBSMF79\n                         00000020           68107+R79CCMH  EQU   X'20'              DCM supported by the hardware   @I3A  04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  333\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000010           68108+R79CCMD  EQU   X'10'              Configuration contains DCM      @I3A  04-ERBSMF79\n                                            68109+*                                 managed channels                @H1A\n                         00000008           68110+R79CRNA  EQU   X'08'              RMF address space not active    @I3A  04-ERBSMF79\n                         00000004           68111+R79CMCS  EQU   X'04'              Hardware allows multiple        @K3A  04-ERBSMF79\n                                            68112+*                                 channel subsystems              @K3A\n                         00000002           68113+R79CECM  EQU   X'02'              Enhanced channel measurement    @22A  04-ERBSMF79\n                                            68114+*                                 facility available              @22A\n 00000005                                   68115+R79CCMI  DS    BL1                CPMF mode info                  @H1A  04-ERBSMF79\n                                            68116+*                                 0 - CPMF not active             @H1A\n                                            68117+*                                 1 - Compatibility mode          @H1A\n                                            68118+*                                 2 - Extended mode               @H1A\n 00000006                                   68119+         DS    CL2                Reserved for future use         @H1C  04-ERBSMF79\n 00000008                                   68120+R79CCFRC DS    BL4                CPMF restart count              @BAA  04-ERBSMF79\n 0000000C                                   68121+R79CCFSC DS    BL4                CPMF sample count               @BAA  04-ERBSMF79\n 00000010                                   68122+R79CCSS  DS    BL1                Channel SubSystem Id,           @K3A  04-ERBSMF79\n                                            68123+*                                 only valid if R79CMCS = ON  @OA04260\n 00000011                                   68124+         DS    CL3                Reserved for future use         @K3A  04-ERBSMF79\n                                            68125+*                                                                 @P1C\n                         00000014           68126+R79CFLEN EQU   *-R79CCNTL         LENGTH OF FIXED SECTION               04-ERBSMF79\n-                                           68128+*\n                                            68129+*              RELOCATE BLOCK FOR SUBTYPE C\n                                            68130+*\n                                            68131+************** CHANNEL PATH DATA SECTION ******************************\n 00000000                00000000 0000006C  68132+R79CCHNL DSECT                                                          04-ERBSMF79\n 00000000                                   68133+R79CCPID DS    BL1                CHANNEL PATH IDENTIFICATIONS          04-ERBSMF79\n                                            68134+*                                 THE RANGE OF VALUES IS 0 TO 111\n 00000001                                   68135+R79CFG2  DS    CL1                CHANNEL FLAGS                         04-ERBSMF79\n0                        000000C0           68137+R79CRV1  EQU   X'C0'              RESERVED                              04-ERBSMF79\n                         00000020           68138+R79CBL   EQU   X'20'              BLOCK MULTIPLEXER                     04-ERBSMF79\n                         00000010           68139+R79CBY   EQU   X'10'              BYTE MULTIPLEXER                      04-ERBSMF79\n                         00000008           68140+R79CCVC  EQU   X'08'              ES Conversion Channel           @Z1A  04-ERBSMF79\n                         00000004           68141+R79CCNC  EQU   X'04'              ES Connection Channel           @Z2A  04-ERBSMF79\n                         00000002           68142+R79CDOC  EQU   X'02'              ESCON Director on Chanel        @Z2A  04-ERBSMF79\n                         00000001           68143+R79CCC   EQU   X'01'              Channel to Channel          @YA67090  04-ERBSMF79\n 00000002                                   68144+R79CFG3  DS    BL1                Channel flags continued         @BAA  04-ERBSMF79\n                         00000080           68145+R79CSHR  EQU   X'80'              Channel path is shared between        04-ERBSMF79\n                                            68146+*                                 logical partitions.             @BAA\n                         00000040           68147+R79CNVL  EQU   X'40'              CPMF indication, this entry is        04-ERBSMF79\n                                            68148+*                                 invalid                         @BAA\n                                            68149+*                                 1 line deleted              @YA67090\n                         00000010           68150+R79CFXT  EQU   X'10'              Channel converter 3090          @C3A  04-ERBSMF79\n                         00000008           68151+R79CCPM  EQU   X'08'              Channel path is DCM managed     @I3A  04-ERBSMF79\n                         00000004           68152+R79CCDC  EQU   X'04'              Channel characteristics changed @K4A  04-ERBSMF79\n                         00000002           68153+R79CXCM  EQU   X'02'              Extended channel measurements         04-ERBSMF79\n                                            68154+*                                 supported                       @22A\n 00000003                                   68155+R79CCPD  DS    BL1                Channel path description.       @C3A  04-ERBSMF79\n                                            68156+*                                 For an explanation, you can     @G1C\n                                            68157+*                                 issue the command D M=CHP.      @G1C\n                                            68158+*                                                                9@G1D\n                                            68159+*                                                                 @C3A\n 00000004                                   68160+R79CBSY  DS    BL4                Number of samples in which the        04-ERBSMF79\n                                            68161+*                                 channel path was busy,\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  334\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68162+*                                 weighted by SRM.                @BAC\n 00000008                                   68163+R79CPBY  DS    BL4                Partitions channel-path-busy          04-ERBSMF79\n                                            68164+*                                 time since last interval in\n                                            68165+*                                 units of 128 microsecs          @BAA\n 0000000C                                   68166+R79CCPTX DS    0BL4               Extended last time stamp    @WA39393  04-ERBSMF79\n 0000000C                                   68167+         DS    BL1                Overflow area               @WA39393  04-ERBSMF79\n 0000000D                                   68168+R79CCPTS DS    BL3                Last CPMB entry time stamp in         04-ERBSMF79\n                                            68169+*                                 units of 128 microsecs\n                                            68170+*                                 (be aware that this value wraps\n                                            68171+*                                 about every 35.79 minutes)      @BAA\n 00000010                                   68172+R79CACR  DS    CL5                Channel path acronym            @G1A  04-ERBSMF79\n 00000015                                   68173+R79CCMG  DS    BL1                CPMF Channel Measurement Group  @H1A  04-ERBSMF79\n 00000016                                   68174+R79CFG4  DS    BL1                Channel Path Flags              @H1C  04-ERBSMF79\n                         00000080           68175+R79CWD1  EQU   X'80'              CPMF Channel characteristics          04-ERBSMF79\n                                            68176+*                                 word 1 valid                    @J1C\n                         00000040           68177+R79CWD2  EQU   X'40'              CPMF Channel characteristics          04-ERBSMF79\n                                            68178+*                                 word 2 valid                    @J1C\n                         00000020           68179+R79CWD3  EQU   X'20'              CPMF Channel characteristics          04-ERBSMF79\n                                            68180+*                                 word 3 valid                    @J1C\n                         00000010           68181+R79CWD4  EQU   X'10'              CPMF Channel characteristics          04-ERBSMF79\n                                            68182+*                                 word 4 valid                    @J1C\n                         00000008           68183+R79CWD5  EQU   X'08'              CPMF Channel characteristics          04-ERBSMF79\n                                            68184+*                                 word 5 valid                    @J1C\n 00000017                                   68185+R79CCPP  DS    BL1                Channel path parameter          @I3C  04-ERBSMF79\n 00000018                                   68186+R79CCCM  DS    CL48               CPMF Channel Measurement        @H1A  04-ERBSMF79\n                                            68187+*                                 (extended mode)                 @H1A\n                                            68188+************** CHANNEL Measurement Group 1 ****************************\n 00000048                00000048 00000018  68189+         ORG   R79CCCM                                            @H1A  04-ERBSMF79\n 00000018                                   68190+R79CCM1  DS    0CL8               Channel data Measurement Group1 @H1A  04-ERBSMF79\n 00000018                                   68191+R79CTUT  DS    BL4                CPMF Total channel path busy    @H1A  04-ERBSMF79\n                                            68192+*                                 Time in units of                @H1A\n                                            68193+*                                 128 microseconds                @H1A\n 0000001C                                   68194+R79CPUT  DS    BL4                CPMF LPAR channel path busy     @H1A  04-ERBSMF79\n                                            68195+*                                 Time in units of                @H1A\n                                            68196+*                                 128 microseconds                @H1A\n 00000020                                   68197+         DS    CL40               Reserved                        @H1A  04-ERBSMF79\n                                            68198+************** CHANNEL Measurement Group 2 ****************************\n 00000048                00000048 00000018  68199+         ORG   R79CCCM                                            @H1A  04-ERBSMF79\n 00000018                                   68200+R79CCCC  DS    0CL20              CPMF Channel Characteristics    @H1A  04-ERBSMF79\n                                            68201+*                                 data                            @H1A\n 00000018                                   68202+R79CMBC  DS    BL4                CPMF Maximum Bus Cycles per     @H1A  04-ERBSMF79\n                                            68203+*                                 second (word 1)                 @J1C\n 0000001C                                   68204+R79CMCU  DS    BL4                CPMF Maximum Channel work Units @H1A  04-ERBSMF79\n                                            68205+*                                 per second (word 2)             @J1C\n 00000020                                   68206+R79CMWU  DS    BL4                CPMF Maximum Write data Units   @H1A  04-ERBSMF79\n                                            68207+*                                 per second (word 3)             @J1C\n 00000024                                   68208+R79CMRU  DS    BL4                CPMF Maximum Read data Units    @H1A  04-ERBSMF79\n                                            68209+*                                 per second (word 4)             @J1C\n 00000028                                   68210+R79CUS   DS    BL4                CPMF data Unit Size in bytes    @H1A  04-ERBSMF79\n                                            68211+*                                 (word 5)                        @J1C\n 0000002C                                   68212+R79CCCD  DS    0CL28              Channel Measurement Group 2     @H1A  04-ERBSMF79\n                                            68213+*                                 Data                            @H1A\n 0000002C                                   68214+R79CTBC  DS    BL4                CPMF Total Bus Cycles Count     @H1A  04-ERBSMF79\n 00000030                                   68215+R79CTUC  DS    BL4                CPMF Total channel work Unit    @H1A  04-ERBSMF79\n                                            68216+*                                 Count                           @H1A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  335\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000034                                   68217+R79CPUC  DS    BL4                CPMF LPAR channel work Unit     @H1A  04-ERBSMF79\n                                            68218+*                                 Count                           @H1A\n 00000038                                   68219+R79CTWU  DS    BL4                CPMF Total Write data Units     @H1A  04-ERBSMF79\n 0000003C                                   68220+R79CPWU  DS    BL4                CPMF LPAR Write data Units      @H1A  04-ERBSMF79\n 00000040                                   68221+R79CTRU  DS    BL4                CPMF Total Read data Units      @H1A  04-ERBSMF79\n 00000044                                   68222+R79CPRU  DS    BL4                CPMF LPAR Read data Units       @H1A  04-ERBSMF79\n                                            68223+************** CHANNEL Measurement Group 3 ****************************\n 00000048                00000048 00000018  68224+         ORG   R79CCCM                                            @J4A  04-ERBSMF79\n 00000018                                   68225+R79CCC3  DS    0CL20              CPMF Channel Characteristics    @J4A  04-ERBSMF79\n                                            68226+*                                 data                            @J4A\n 00000018                                   68227+R79CPDU  DS    BL4                CPMF LPAR Data Unit size in     @J4A  04-ERBSMF79\n                                            68228+*                                 bytes (word 1)                  @J4A\n 0000001C                                   68229+R79CTDU  DS    BL4                CPMF Total Data Unit size in    @J4A  04-ERBSMF79\n                                            68230+*                                 bytes (word 2)                  @J4A\n 00000020                                   68231+R79CPUM  DS    BL4                CPMF LPAR Message sent unit     @J4A  04-ERBSMF79\n                                            68232+*                                 size (word 3)                   @J4A\n 00000024                                   68233+R79CTUM  DS    BL4                CPMF Total Message sent unit    @J4A  04-ERBSMF79\n                                            68234+*                                 size (word 4)                   @J4A\n 00000028                                   68235+         DS    CL4                Reserved                        @J4A  04-ERBSMF79\n 0000002C                                   68236+R79CCD3  DS    0CL28              Channel Measurement Group 3     @J4A  04-ERBSMF79\n                                            68237+*                                 Data                            @J4A\n 0000002C                                   68238+R79CPMS  DS    BL4                CPMF LPAR Message sent units    @J4A  04-ERBSMF79\n                                            68239+*                                 count                           @J4A\n 00000030                                   68240+R79CTMS  DS    BL4                CPMF Total Message sent units   @J4A  04-ERBSMF79\n                                            68241+*                                 count                           @J4A\n 00000034                                   68242+R79CPUS  DS    BL4                CPMF LPAR count of Unsuccessful @J4A  04-ERBSMF79\n                                            68243+*                                 attempts to send messages       @J4A\n 00000038                                   68244+R79CPUB  DS    BL4                CPMF LPAR count of Unsuccessful @J4A  04-ERBSMF79\n                                            68245+*                                 attempts to receive messages    @J4A\n                                            68246+*                                 due to unavailable Buffers      @J4A\n 0000003C                                   68247+R79CTUB  DS    BL4                CPMF Total count of             @J4A  04-ERBSMF79\n                                            68248+*                                 Unsuccessful attempts to        @J4A\n                                            68249+*                                 receive messages due to         @J4A\n                                            68250+*                                 unavailable Buffers             @J4A\n 00000040                                   68251+R79CPDS  DS    BL4                CPMF LPAR Data units Sent count @J4A  04-ERBSMF79\n 00000044                                   68252+R79CTDS  DS    BL4                CPMF Total Data units Sent      @J4A  04-ERBSMF79\n                                            68253+*                                 count                           @J4A\n 00000048                                   68254+R79CGEN  DS    BL1                Channel type generation         @J5A  04-ERBSMF79\n 00000049                                   68255+         DS    CL3                Reserved                              04-ERBSMF79\n 0000004C                                   68256+R79CCCMX DS    CL32               CPMF Extended channel           @22A  04-ERBSMF79\n                                            68257+*                                 measurement data. Only valid    @22A\n                                            68258+*                                 for measurement group 2.        @22A\n                                            68259+************** Extended channel measurement group 2 data ******** @22A\n 0000006C                0000006C 0000004C  68260+         ORG   R79CCCMX                                           @22A  04-ERBSMF79\n 0000004C                                   68261+R79CXCM2 DS    0CL32              Extended group 2 data           @22A  04-ERBSMF79\n 0000004C                                   68262+R79CXOC  DS    BL4                Total number of FICON command-  @22A  04-ERBSMF79\n                                            68263+*                                 mode operations (CPC) that have @22A\n                                            68264+*                                 been attempted by the channel.  @22A\n 00000050                                   68265+R79CXOD  DS    BL4                Total number of FICON command-  @22A  04-ERBSMF79\n                                            68266+*                                 mode operations (CPC) that      @22A\n                                            68267+*                                 could not be initiated by the   @22A\n                                            68268+*                                 channel due to a lack of        @22A\n                                            68269+*                                 available resources.            @22A\n 00000054                                   68270+R79CXOS  DS    BL8                Summation count of FICON        @22A  04-ERBSMF79\n                                            68271+*                                 command-mode operations (CPC).  @22A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  336\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68272+*                                 Each time the number of FICON   @22A\n                                            68273+*                                 command-mode operations is      @22A\n                                            68274+*                                 incremented, the number of      @22A\n                                            68275+*                                 FICON command-mode operations   @22A\n                                            68276+*                                 active at the channel,          @22A\n                                            68277+*                                 including the one being         @22A\n                                            68278+*                                 initiated, is added to this     @22A\n                                            68279+*                                 field.                          @22A\n 0000005C                                   68280+R79CXTC  DS    BL4                Total number of FICON transport @22A  04-ERBSMF79\n                                            68281+*                                 mode operations (CPC) that have @22A\n                                            68282+*                                 been attempted by the channel.  @22A\n                                            68283+*                                 Zero when no zHPF.              @22A\n 00000060                                   68284+R79CXTD  DS    BL4                Total number of FICON transport @22A  04-ERBSMF79\n                                            68285+*                                 mode operations (CPC) that      @22A\n                                            68286+*                                 could not be initiated by the   @22A\n                                            68287+*                                 channel due to a lack of        @22A\n                                            68288+*                                 available resources.            @22A\n                                            68289+*                                 Zero when no zHPF.              @22A\n 00000064                                   68290+R79CXTS  DS    BL8                Summation count of FICON        @22A  04-ERBSMF79\n                                            68291+*                                 transport-mode operations       @22A\n                                            68292+*                                 (CPC). Each time the number of  @22A\n                                            68293+*                                 FICON transport-mode operations @22A\n                                            68294+*                                 is incremented, the number of   @22A\n                                            68295+*                                 transport-mode operations       @22A\n                                            68296+*                                 active at the channel,          @22A\n                                            68297+*                                 including the one being         @22A\n                                            68298+*                                 initiated, is added to this     @22A\n                                            68299+*                                 field. Zero when no zHPF.       @22A\n0                        0000006C           68301+R79CRLEN EQU   *-R79CCHNL         LENGTH OF RELOCATE SECTION            04-ERBSMF79\n                                            68302+*\n                                            68303+*           RELOCATE BLOCK FOR SUBTYPE D - MONITOR 2\n                                            68304+*           I/O QUEUING SECTION (308X/LEAR)                        @P4C\n                                            68305+*\n                                            68306+***********************************************************************\n-                                           68308+**********************  I/O QUEUING CONFIGURATION CONTROL SECTION  ****\n 00000000                00000000 0000000C  68309+R79DCS   DSECT                                                          04-ERBSMF79\n 00000000                                   68310+R79DID1  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4C 04-ERBSMF79\n                                            68311+*                                                                  @P4D\n 00000002                                   68312+R79DNTR  DS    BL2      NUMBER OF DESCRIPTOR TRIPLETS                   04-ERBSMF79\n 00000004                                   68313+R79DCPDS DS    BL4      OFFSET TO CONFIGURATION DATA SECTION            04-ERBSMF79\n 00000008                                   68314+R79DCPDL DS    BL2      LENGTH OF CONFIGURATION DATA SECTION            04-ERBSMF79\n 0000000A                                   68315+R79DCPDN DS    BL2      NUMBER OF CONFIGURATION DATA SECTIONS           04-ERBSMF79\n                         00000008           68316+R79DCPDX EQU   8        NUMBER OF CONFIGURATION DATA SECTIONS  @YA61897 04-ERBSMF79\n                         0000006C           68317+R79DCSL  EQU   (*-R79DCS)+R79DCPDX*R79DCPDY LENGTH OF CONFIGURATION     04-ERBSMF79\n                                            68318+*                       CONTROL SECTION PLUS CONFIG DATA SECTIONS\n                         0000008C           68319+R79DRLEN EQU   R79DCSL+R79DDSL  LENGTH OF A RELOCATE BLOCK              04-ERBSMF79\n                         00000000           68320+R79DFLEN EQU   0        LENGTH OF A FIXED BLOCK                         04-ERBSMF79\n                                            68321+*                       (WE ONLY HAVE RELOCATE BLOCKS)\n                         00000100           68322+R79DRMAX EQU   256      MAXIMUM NUMBER OF RELOCATE BLOCKS (MAXRB)       04-ERBSMF79\n-                                           68324+**********************  I/O QUEUING CONFIGURATION DATA SECTION  *******\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  337\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000000                00000000 0000000C  68325+R79DCPD  DSECT                                                          04-ERBSMF79\n 00000000                                   68326+R79DCPID DS    BL1      CHANNEL PATH IDENTIFIER                         04-ERBSMF79\n000000001                                   68328+R79DCPST DS    BL1      CHANNEL PATH STATUS                             04-ERBSMF79\n                         00000080           68329+R79DCPI  EQU   X'80'    CHANNEL PATH INSTALLED                          04-ERBSMF79\n                         00000040           68330+R79DCPO  EQU   X'40'    CHANNEL PATH ONLINE                             04-ERBSMF79\n                         00000020           68331+R79DCPV  EQU   X'20'    CHANNEL PATH VARIED                             04-ERBSMF79\n                         00000010           68332+R79DVPOF EQU   X'10'    PATH OFFLINE TO ALL DEVICES TO THE LCU     @P4A 04-ERBSMF79\n                         00000008           68333+R79DVP   EQU   X'08'    PATH CONNECTIVITY TO DEVICES OF THE LCU    @P4A 04-ERBSMF79\n                                            68334+*                       HAS MANIPULATED VIA VARY PATH              @P4A\n000000002                                   68336+R79DCUN  DS    BL2      NUMBER OF CONTROL UNITS ATTACHED                04-ERBSMF79\n 00000004                                   68337+R79DCU   DS    0BL8     CONTROL UNITS ATTACHED TO THIS CHANNEL PATH     04-ERBSMF79\n 00000004                                   68338+R79DCU1  DS    BL2      1ST CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n 00000006                                   68339+R79DCU2  DS    BL2      2ND CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n 00000008                                   68340+R79DCU3  DS    BL2      3RD CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n 0000000A                                   68341+R79DCU4  DS    BL2      4TH CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n                         0000000C           68342+R79DCPDY EQU   *-R79DCPD LENGTH OF CONFIGURATION DATA SECTION           04-ERBSMF79\n-                                           68344+**********************  I/O QUEUING DATA SECTION  ********************\n 00000000                00000000 00000020  68345+R79DDS   DSECT                                                          04-ERBSMF79\n 00000000                                   68346+         DS    BL1      RESERVED                                   @P4C 04-ERBSMF79\n000000001                                   68348+R79DDST  DS    BL1      DATA STATUS                                     04-ERBSMF79\n                         00000080           68349+R79DCPS  EQU   X'80'    1... .... ON= NO STCPS DATA AVAILABLE           04-ERBSMF79\n                         00000020           68350+R79DNHMA EQU   X'20'    ..1. .... ON= NO HARDWARE MEASUREMENTS     @O1A 04-ERBSMF79\n 00000002                                   68351+R79DICT  DS    BL2      COUNT OF SUCCESSIVE UNSUCCESSFUL SAMPLES        04-ERBSMF79\n                                            68352+*                       IF THIS COUNT DIFFERS FROM ZERO, THE\n                                            68353+*                       FOLLOWING FIELDS, BESIDES R79DABY, ARE\n                                            68354+*                       NOT SET UP\n 00000004                                   68355+R79DABY  DS    BL4      NUMBER OF SAMPLES WHEN ALL CHANNEL PATHS        04-ERBSMF79\n                                            68356+*                       IN THE LCU WERE BUSY, VALID ONLY IF\n                                            68357+*                       STCPS DATA AVAILABLE\n 00000008                                   68358+R79DTIS  DS    BL4      TOTAL NUMBER OF  INITIAL SELECTION ATTEMPTS     04-ERBSMF79\n 0000000C                                   68359+R79DSIS  DS    BL4      TOTAL NUMBER OF SUCCESSFUL SELECTION            04-ERBSMF79\n                                            68360+*                       ATTEMPTS\n 00000010                                   68361+R79DCUB  DS    BL4      TOTAL NUMBER OF UNSUCCESSFUL SELECTION          04-ERBSMF79\n                                            68362+*                       ATTEMPTS DUE TO CONTROL UNIT BUSY\n 00000014                                   68363+R79DDVB  DS    BL4      TOTAL NUMBER OF UNSUCCESSFUL SELECTION          04-ERBSMF79\n                                            68364+*                       ATTEMPTS DUE TO DEVICE BUSY\n 00000018                                   68365+R79DQUE  DS    BL4      TOTAL NUMBER OF REQUESTS QUEUED FOR THE LCU     04-ERBSMF79\n                                            68366+*                       (ACCUMULATED AT INITIAL SELECTION TIME)\n                                            68367+*                       THE FIELD R79DQUE IS NOT SET UP FOR I/O    @O1A\n                                            68368+*                       MEASUREMENT LEVEL X'02' LEAR PROCESSORS    @O1A\n 0000001C                                   68369+R79DID2  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4A 04-ERBSMF79\n 0000001E                                   68370+         DS    BL2      RESERVED                                   @P4A 04-ERBSMF79\n                         00000020           68371+R79DDSL  EQU   *-R79DDS LENGTH OF DATA SECTION                          04-ERBSMF79\n                                            68372+*                                                                  @P4A\n                                            68373+*           FIXED BLOCK FOR SUBTYPE E - MONITOR 2                  @P4A\n                                            68374+*           I/O QUEUING SECTION (3090,9021,9121,9221)              @P4A\n                                            68375+*                                                                  @P4A\n                                            68376+*******************************************************************@P4A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  338\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68378+**********************  GLOBAL I/O QUEUING SECTION                 @P4A\n 00000000                00000000 00000008  68379+R79EGD   DSECT                                                     @P4A 04-ERBSMF79\n000000000                                   68381+R79EGFLG DS    BL1      GLOBAL IOQ STATUS                          @P4A 04-ERBSMF79\n                         00000080           68382+R79EGCMF EQU   X'80'    1... .... ON= DATA IS INVALID DUE TO FAILURE    04-ERBSMF79\n                                            68383+*                                     OF THE CHANNEL MEASUREMENT\n                                            68384+*                                     FACILITY                     @P4A\n                         00000040           68385+R79EGDIF EQU   X'40'    .1.. .... ON= DIAGNOSE INTERFACE FAILURE   @P4A 04-ERBSMF79\n                         00000020           68386+R79EGDIR EQU   X'20'    ..1. .... ON= ESCON Director in Config.    @Z2A 04-ERBSMF79\n                         00000010           68387+R79EGSSQ EQU   X'10'    ...1 .... ON= CHSC store secondary queue        04-ERBSMF79\n                                            68388+*                                     data not supported           @E1A\n                         00000008           68389+R79EGCMH EQU   X'08'    .... 1... ON= DCM is supported by hardware @I3A 04-ERBSMF79\n                         00000004           68390+R79EGCMD EQU   X'04'    .... .1.. ON= Configuration contains DCM   @I3A 04-ERBSMF79\n                                            68391+*                                 managed channels                 @I3A\n                         00000002           68392+R79EGCMR EQU   X'02'    .... ..1. ON= initial-command-response-    @K3A 04-ERBSMF79\n                                            68393+*                                 time supported                   @K3A\n                                            68394+*                       .... ...1 Reserved                         @K3C\n 00000001                                   68395+         DS    BL3      FOR ALIGNMENT ONLY                         @P4A 04-ERBSMF79\n 00000004                                   68396+         DS    BL4      No longer used                         @WA50187 04-ERBSMF79\n0                        00000008           68398+R79EFLEN EQU   *-R79EGD LENGTH OF A FIXED BLOCK                    @P4A 04-ERBSMF79\n-                                           68400+*                                                                  @P4A\n                                            68401+*           RELOCATE BLOCK FOR SUBTYPE E - MONITOR 2               @P4A\n                                            68402+*           I/O QUEUING SECTION (3090,9021,9121,9221)              @P4A\n                                            68403+*                                                                  @P4A\n                                            68404+*******************************************************************@P4A\n-                                           68406+**********************  I/O QUEUING CONFIGURATION CONTROL SECTION  @P4A\n 00000000                00000000 0000000C  68407+R79ECS   DSECT                                                     @P4A 04-ERBSMF79\n 00000000                                   68408+R79EID1  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4A 04-ERBSMF79\n 00000002                                   68409+R79ENTR  DS    BL2      NUMBER OF DESCRIPTOR TRIPLETS              @P4A 04-ERBSMF79\n 00000004                                   68410+R79ECPDS DS    BL4      OFFSET TO CONFIGURATION DATA SECTION       @P4A 04-ERBSMF79\n 00000008                                   68411+R79ECPDL DS    BL2      LENGTH OF CONFIGURATION DATA SECTION       @P4A 04-ERBSMF79\n 0000000A                                   68412+R79ECPDN DS    BL2      NUMBER OF CONFIGURATION DATA SECTIONS      @P4A 04-ERBSMF79\n                         00000008           68413+R79ECPDX EQU   8        NUMBER OF CONFIGURATION DATA SECTIONS  @YA41310 04-ERBSMF79\n                         0000018C           68414+R79ECSL  EQU   (*-R79ECS)+R79ECPDX*R79ECPDY LENGTH OF CONFIG.      @P4A 04-ERBSMF79\n                                            68415+*                       CONTROL SECTION PLUS CONFIG DATA SECTIONS  @P4A\n                         000001C4           68416+R79ERLEN EQU   R79ECSL+R79EDSL  LENGTH OF A RELOCATE BLOCK         @P4A 04-ERBSMF79\n                         00000100           68417+R79ERMAX EQU   256      MAXIMUM NUMBER OF RELOCATE BLOCKS (MAXRB)  @P4A 04-ERBSMF79\n-                                           68419+**********************  I/O QUEUING CONFIGURATION DATA SECTION  ***@P4A\n 00000000                00000000 00000030  68420+R79ECPD  DSECT                                                     @P4A 04-ERBSMF79\n 00000000                                   68421+R79ECPID DS    BL1      CHANNEL PATH IDENTIFIER                    @P4A 04-ERBSMF79\n000000001                                   68423+R79ECPST DS    BL1      CHANNEL PATH STATUS                        @P4A 04-ERBSMF79\n                         00000080           68424+R79ECPI  EQU   X'80'    CHANNEL PATH INSTALLED                     @P4A 04-ERBSMF79\n                         00000040           68425+R79ECPO  EQU   X'40'    CHANNEL PATH ONLINE                        @P4A 04-ERBSMF79\n                         00000020           68426+R79ECPV  EQU   X'20'    CHANNEL PATH VARIED                        @P4A 04-ERBSMF79\n                         00000010           68427+R79EVPOF EQU   X'10'    PATH OFFLINE TO ALL DEVICES OF THE LCU     @P4A 04-ERBSMF79\n                         00000008           68428+R79EVP   EQU   X'08'    PATH CONNECTIVITY TO DEVICES OF THE LCU    @P4A 04-ERBSMF79\n                                            68429+*                       HAS MANIPULATED VIA VARY PATH              @P4A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  339\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000002           68430+R79ECPM  EQU   X'02'    Channel path is DCM managed                @I3A 04-ERBSMF79\n                         00000001           68431+R79ECPMR EQU   X'01'    CHPID manipulated, requiring data reset    @I3A 04-ERBSMF79\n000000002                                   68433+R79ECUN  DS    BL2      NUMBER OF CONTROL UNITS ATTACHED           @P4A 04-ERBSMF79\n 00000004                                   68434+R79ECU   DS    0BL8     CONTROL UNITS ATTACHED TO THIS CHANNEL P.  @P4A 04-ERBSMF79\n 00000004                                   68435+R79ECU1  DS    BL2      1ST CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 00000006                                   68436+R79ECU2  DS    BL2      2ND CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 00000008                                   68437+R79ECU3  DS    BL2      3RD CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 0000000A                                   68438+R79ECU4  DS    BL2      4TH CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 0000000C                                   68439+R79ECUB  DS    BL4      COUNT OF CU BUSY                           @P4A 04-ERBSMF79\n 00000010                                   68440+R79EPT   DS    BL4      COUNT OF OPERATIONS ACCEPTED               @P4A 04-ERBSMF79\n 00000014                                   68441+         DS    BL4      No longer used                         @WA50187 04-ERBSMF79\n 00000018                                   68442+R79EDPBC DS    BL4      Count of ESCON Director port busy          @Z2C 04-ERBSMF79\n 0000001C                                   68443+R79ECBT  DS    BL4      Control unit Busy delay Time in units of   @K3C 04-ERBSMF79\n                                            68444+*                       128 microseconds                           @K3A\n 00000020                                   68445+R79ECMR  DS    BL4      Initial CoMmand Response time in units of  @K3A 04-ERBSMF79\n                                            68446+*                       128 microseconds                           @K3A\n 00000024                                   68447+R79ESBS  DS    BL4      Switch busy count summation                @K3A 04-ERBSMF79\n 00000028                                   68448+         DS    CL4      Reserved for future use                    @K3A 04-ERBSMF79\n 0000002C                                   68449+R79ECPXF DS    BL1      Channel path extended flags                @K3A 04-ERBSMF79\n                         00000080           68450+R79ECPXM EQU   X'80'    1... .... 1= extended I/O-measurement-     @K3A 04-ERBSMF79\n                                            68451+*                       block data available                       @K3A\n 0000002D                                   68452+R79ECPAT DS    BL1      Path attributes:                           @L1A 04-ERBSMF79\n                                            68453+*                       0 = No attributes specified\n                                            68454+*                       1 = Preferred path\n                                            68455+*                       2 = Non-preferred path\n 0000002E                                   68456+         DS    CL2      Reserved for future use                    @L1C 04-ERBSMF79\n                         00000030           68457+R79ECPDY EQU   *-R79ECPD LENGTH OF CONFIGURATION DATA SECTION      @P4A 04-ERBSMF79\n-                                           68459+**********************  I/O QUEUING DATA SECTION  *****************@P4A\n 00000000                00000000 00000038  68460+R79EDS   DSECT                                                     @P4A 04-ERBSMF79\n 00000000                                   68461+R79EID2  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4A 04-ERBSMF79\n 00000002                                   68462+R79EDST  DS    BL1      DATA STATUS                                @P4A 04-ERBSMF79\n                                            68463+*        EQU   X'80'    RESERVED                                   @P4A\n                         00000040           68464+R79ENHMA EQU   X'40'    .1.. .... ON= NO HARDWARE MEASUREMENTS     @Z1C 04-ERBSMF79\n                         00000008           68465+R79ELDCM EQU   X'08'    .... 1... ON= LCU contains DCM managed     @I3A 04-ERBSMF79\n                                            68466+*                       channels                                   @I3A\n                         00000004           68467+R79ELPAT EQU   X'04'    .... .1.. ON= Path attributes are valid    @L1A 04-ERBSMF79\n 00000003                                   68468+         DS    BL1      RESERVED                                   @P4A 04-ERBSMF79\n 00000004                                   68469+R79EQSM  DS    BL4      QUEUED SUM ON THE CU-HDR QUEUE             @P4A 04-ERBSMF79\n 00000008                                   68470+R79EQCT  DS    BL4      COUNT OF ENTRIES PLACED ON THE CU-HDR Q.   @P4A 04-ERBSMF79\n 0000000C                                   68471+R79EMCMN DS    BL2      Min number of DCM managed channels used    @I3A 04-ERBSMF79\n 0000000E                                   68472+R79EMCMX DS    BL2      Max number of DCM managed channels used    @I3A 04-ERBSMF79\n 00000010                                   68473+R79EMCDF DS    BL2      Defined number of DCM managed channels     @I3A 04-ERBSMF79\n 00000012                                   68474+         DS    BL2      Reserved                                   @I3A 04-ERBSMF79\n 00000014                                   68475+R79EPTM  DS    BL4      Accumulated path taken count for DCM       @I3A 04-ERBSMF79\n                                            68476+*                       managed channels                           @I3A\n 00000018                                   68477+R79EDPBM DS    BL4      Accumulated director port busy count for   @I3A 04-ERBSMF79\n                                            68478+*                       DCM managed channels                       @I3A\n 0000001C                                   68479+R79ECUBM DS    BL4      Accumulated control unit busy count for    @I3A 04-ERBSMF79\n                                            68480+*                       DCM managed channels                       @I3A\n 00000020                                   68481+R79ECBTM DS    BL4      Accumulated control unit busy time for     @K3A 04-ERBSMF79\n                                            68482+*                       DCM managed channels                       @K3A\n 00000024                                   68483+R79ECMRM DS    BL4      Accumulated initial command response time  @K3A 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  340\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68484+*                       for DCM managed channels                   @K3A\n 00000028                                   68485+R79ESBSM DS    BL4      Accumulated switch busy count summation    @K3A 04-ERBSMF79\n                                            68486+*                       for DCM managed channels                   @K3A\n 0000002C                                   68487+         DS    CL8      Reserved for future use                    @K3A 04-ERBSMF79\n 00000034                                   68488+R79ECSST DS    BL4      Channel subsystem wait time in             @K3A 04-ERBSMF79\n                                            68489+*                       units of 128 microsends                    @K3A\n                         00000038           68490+R79EDSL  EQU   *-R79EDS LENGTH OF DATA SECTION                     @P4A 04-ERBSMF79\n-                                           68492+**********************  IMS Long Lock Data Section *************** @F1A\n 00000000                00000000 0000006F  68493+R79FIRLM DSECT                                                     @F1A 04-ERBSMF79\n 00000000                                   68494+R79FISTN DS    CL16     IRLM Lock Structure Name                   @F1A 04-ERBSMF79\n 00000010                                   68495+R79FDLKC DS    BL4      Dead Lock Cycle Number                     @F1A 04-ERBSMF79\n 00000014                                   68496+R79FETYP DS    CL1      'B' = Blocker / 'W' = Waiter               @F1A 04-ERBSMF79\n 00000015                                   68497+R79FAVL  DS    CL3      Reserved                                   @F1A 04-ERBSMF79\n 00000018                                   68498+R79FWAIT DS    0C       Start of variable Section: Waiter data     @F1A 04-ERBSMF79\n 00000018                00000018 00000018  68499+         ORG   R79FWAIT                                            @F1A 04-ERBSMF79\n 00000018                                   68500+R79FBLKR DS    0C                                                  @F1A 04-ERBSMF79\n 00000018                                   68501+R79FIMSI DS    CL8      IMS Subsystem ID                           @F1A 04-ERBSMF79\n 00000020                                   68502+R79FPSTN DS    CL2      PST Number                                 @F1A 04-ERBSMF79\n 00000022                                   68503+R79FPSBN DS    CL8      PSB Name                                   @F1A 04-ERBSMF79\n 0000002A                                   68504+R79FRGTY DS    CL1      Region Type                                @F1A 04-ERBSMF79\n 0000002B                                   68505+R79FRCVT DS    CL16     Recovery Token                             @F1A 04-ERBSMF79\n 0000003B                                   68506+R79FCTID DS    CL8      CICS Task ID (If CICS)                     @F1A 04-ERBSMF79\n 00000043                                   68507+R79FLHTI DS    CL8      Lock Held Time-Duration                    @F1A 04-ERBSMF79\n 0000004B                                   68508+R79FLHCN DS    CL4      Max Lock Held-PSTLKHLD                     @F1A 04-ERBSMF79\n 0000004F                                   68509+R79FLKNA DS    CL16     Lock Name                                  @F1A 04-ERBSMF79\n 0000005F                                   68510+R79FTRNM DS    CL8      Transaction Name / Job Name            @WA27252 04-ERBSMF79\n 00000067                                   68511+R79FRSNA DS    CL8      Resource (DB/Area) Name                    @F1A 04-ERBSMF79\n                         0000006F           68512+R79FIRLL EQU   *-R79FIRLM   Length of data section                 @F1A 04-ERBSMF79\n-                        00000080           68514+R79FRBAT EQU   X'80'    Region type = BATCH                        @F1A 04-ERBSMF79\n                         00000040           68515+R79FRBMP EQU   X'40'    Region type = BMP                          @F1A 04-ERBSMF79\n                         00000020           68516+R79FRIFP EQU   X'20'    Region type = IFP                          @F1A 04-ERBSMF79\n                         00000010           68517+R79FRCIC EQU   X'10'    Region type = CICS                         @F1A 04-ERBSMF79\n                         00000008           68518+R79FRMPP EQU   X'08'    Region type = MPP                          @F1A 04-ERBSMF79\n                         00000004           68519+R79FRDBC EQU   X'04'    Region type = DBCTL                        @F1A 04-ERBSMF79\n                         00000002           68520+R79FRSYS EQU   X'02'    Region type = SYPST                    @OA28931 04-ERBSMF79\n                                            68521+******************* End IMS Long Lock Data Section *************** @F1A\n-                                           68523+*        ERBSMF70\n                                            68525+*/*** START OF SPECIFICATIONS ****************************************\n                                            68526+*                                                                    *\n                                            68527+*01* Proprietary Statement:                                          *\n                                            68529+*\n                                            68530+*        PROPRIETARY STATEMENT:\n                                            68531+*           Licensed Materials - Property of IBM\n                                            68532+*           \"Restricted Materials of IBM\"\n                                            68533+*           Copyright IBM Corp. 1977, 2010                        @41C\n                                            68534+*\n                                            68535+*           Status: z/OS V1R12 RMF (HRM7770)                      @41C\n                                            68536+*\n                                            68537+*       ?ERBCOPY1 Y1(1977);\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  341\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68538+*/*                                                                  *\n                                            68539+*01* Macro Name: ERBSMF70                                            *\n                                            68540+*                                                                    *\n                                            68541+*01* Descriptive Name:  SMF record 70 subtype 1 and 2                *\n                                            68542+*02* Acronym: SMF70                                                  *\n                                            68543+*                                                                    *\n                                            68544+*01* DSECT Name:                                                     *\n                                            68545+*02* Subtype 1: SMF70HDR SMF70PRO SMF70CTL SMF70CPU                  *\n                                            68546+*02*            SMF70AID SMF70BCT SMF70BPD SMF70CIS                  *\n                                            68547+*02* Subtype 2: SMF70HDR SMF70PRO R702TYP3 R702TYP4                  *\n                                            68548+*               R702CCF                                              *\n                                            68549+*                                                                    *\n                                            68550+*01* Component: Resource Measurement Facility (27404)                *\n                                            68551+*                                                                    *\n                                            68552+*01* Eye-Catcher: None                                               *\n                                            68553+*02*  Offset: N/A                                                    *\n                                            68554+*02*  Length: N/A                                                    *\n                                            68555+*                                                                    *\n                                            68556+*01* Storage Attributes:                                             *\n                                            68557+*02*   Subpool: 1                                                    *\n                                            68558+*02*   Key: 0                                                        *\n                                            68559+*02*   Residency: Any                                                *\n                                            68560+*02*   Main Storage: N/A                                             *\n                                            68561+*02*   Auxiliary Storage: N/A                                        *\n                                            68562+*02*   Virtual Storage: N/A                                          *\n                                            68563+*                                                                    *\n                                            68564+*01* Function = This macro maps the complete SMF record type 70.     *\n                                            68565+*                                                                    *\n                                            68566+*              It has two subtypes:                                  *\n                                            68567+*                                                                    *\n                                            68568+*              - Subtype 1 is created by RMF if CPU activity         *\n                                            68569+*                measurements are activated.                         *\n                                            68570+*              - Subtype 2 is created by RMF if Crypto activity      *\n                                            68571+*                measurements are activated.                         *\n                                            68572+*                                                                    *\n                                            68573+*              The record consists of 4 parts:                       *\n                                            68574+*                                                                    *\n                                            68575+*              1. The fixed portion of the SMF header.               *\n                                            68576+*                 This mapping is invoked by calling ERBHDR macro.   *\n                                            68577+*              2. The individual header extension which contains     *\n                                            68578+*                 offset/length/number triplets to address the       *\n                                            68579+*                 record parts following the RMF product section.    *\n                                            68580+*              3. The RMF product section.                           *\n                                            68581+*                 This mapping is invoked by calling ERBPRO macro.   *\n                                            68582+*              4. The RMF data sections                              *\n                                            68583+*                                                                    *\n                                            68584+*01* Notes: None                                                     *\n                                            68585+*                                                                    *\n                                            68586+*01* Size:                                                           *\n                                            68587+*                                                                    *\n                                            68588+*    Subtype 1:                                                      *\n                                            68589+*                                                                    *\n                                            68590+*    - Common Header . . . . . . . . . :  36 bytes                   *\n                                            68591+*    - Header Extension  . . . . . . . :  40 bytes                   *\n                                            68592+*    - Product Section . . . . . . . . :  60 bytes                   *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  342\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68593+*    - CPU Control Section . . . . . . : 220 bytes           @OA29530*\n                                            68594+*    - CPU Data Section  . . . . . . . :  80 bytes               @41C*\n                                            68595+*    - ASID Data Section . . . . . . . : 788 bytes               @41C*\n                                            68596+*    - PR/SM Partition Data Section  . :  72 bytes               @I3C*\n                                            68597+*    - PR/SM LPD Data Section  . . . . :  80 bytes               @I3C*\n                                            68598+*    - CPU-identification Name Section :  24 bytes               @11C*\n                                            68599+*                                                                    *\n                                            68600+*    Subtype 2:                                                  @J1A*\n                                            68601+*                                                                    *\n                                            68602+*    - Common Header . . . . . . . . . :  36 bytes               @J1A*\n                                            68603+*    - Header Extension  . . . . . . . :  16 bytes               @J1A*\n                                            68604+*    - Product section . . . . . . . . :  60 bytes               @J1A*\n                                            68605+*    - Crypto Coprocessor data section :  48 bytes               @K1C*\n                                            68606+*    - Crypto Accelerator data section : 368 bytes           @OA31349*\n                                            68607+*    - ICSF Data Section . . . . . . . : 284 bytes           @OA28670*\n                                            68608+*                                                                    *\n                                            68609+*                                                                    *\n                                            68610+*01* Method of Access: see below:                                    *\n                                            68611+*                                                                    *\n                                            68612+*    BAL : ERBSMF70 type                                             *\n                                            68613+*          If the type is not specified, all subtypes are            *\n                                            68614+*          included.                                                 *\n                                            68615+*                                                                    *\n                                            68616+*    PL/X: %IFAR70n='YES' semicolon  n = subtype selected            *\n                                            68617+*          %INCLUDE SYSLIB(ERBSMF70) semicolon                       *\n                                            68618+*          If the preprocessor variable %IFAR70n is not set          *\n                                            68619+*          in the including module, subtype 1 is included.           *\n                                            68620+*                                                                    *\n                                            68621+*01* Pointed to by: SMF70PTR                                         *\n                                            68622+*                                                                    *\n                                            68623+*01* Serialization: None                                             *\n                                            68624+*                                                                    *\n                                            68625+*01* Created by:                                                     *\n                                            68626+*                                                                    *\n                                            68627+*02*    Subtype 1: ERBMFDCP                                          *\n                                            68628+*02*    Subtype 2: ERBMFDCY                                          *\n                                            68629+*                                                                    *\n                                            68630+*01* Deleted by: N/A                                                 *\n                                            68631+*                                                                    *\n                                            68632+*01* Module-Type: BILINGUAL MAPPING MACRO                            *\n                                            68633+*                                                                    *\n                                            68634+*01* Status: HRM7770                                             @41C*\n                                            68635+*                                                                    *\n                                            68636+*01*Dependencies: None                                               *\n                                            68637+*                                                                    *\n                                            68638+*01*Distribution Library: Sys1.Maclib                                *\n                                            68639+*                                                                    *\n                                            68640+*01* Change Activity = see below                                     *\n                                            68641+*                                                                    *\n                                            68642+*      $P1=MISC,HRM3302,,SHR: Alignment of record sections       @P1A*\n                                            68643+*      $Q1=NEWFUN,HRM3302,,WEY: SUPPORT FOR NEW FUNCTION         @Q1A*\n                                            68644+*      $E1=NEWFUN,HRM3302,,FLJ: SPE (E040201) SUPPORT            @E1A*\n                                            68645+*      CHANGE THE INVOCATION OF ERBCOPY1                     @ZA92372*\n                                            68646+*      CORRECT BIT SETTING FOR SMF70VON                      @ZA94355*\n                                            68647+*      $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY    @X0A*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  343\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68648+*      $X1=OY11330,HRM4410,,WRC: Fixes to PR/SM X0 level         @X1A*\n                                            68649+*      $A1=APPC,JRM4421,,BGBO: APPC tolerating support           @A1A*\n                                            68650+*      PAE: Support for Partition Effective Dispatch Time    @YA36668*\n                                            68651+*      $B1=R430,HRM4430,,THE: Distribution lib in prolog         @B1A*\n                                            68652+*      $B2=OMVS,HRM4430,,RPT: OPEN/MVS Toleration Support        @B2A*\n                                            68653+*      WBA: Fix different value of CPU BUSY TIME PERCENTAGE  @YA58838*\n                                            68654+*      WBA:VARY ONLINE for a processor in LPAR may show negative     *\n                                            68655+*          values in the LPAR report and/or cause 0C9 ABENDS @YA67002*\n                                            68656+*      $D1=R520,HRM5520,,GBO: Cleanup of PADI-inconsistencies    @D1A*\n                                            68657+*      SHR: Corrects processing for VARY activity            @WA27840*\n                                            68658+*      $H1=MISC,HRM6607,,FDL: Dynamic ICF expansion              @H1A*\n                                            68659+*      $H2=MISC,HRM6607,,FDL: CPU model info from IOSDSHID       @H2A*\n                                            68660+*      $I1=DIAG,HRM7703,,GUB: Diagnose 204 and 224 support       @I1A*\n                                            68661+*      $I2=STSI,HRM7703,,GUB: Concurrent CP upgrade              @I2A*\n                                            68662+*      $I3=LCLU,HRM7703,,HBE: LPAR Clustering                    @I3A*\n                                            68663+*      PS: License Manager enhancements                      @WA46477*\n                                            68664+*      $J1=CRYPTO,OW49808,,DAG: Crypto support                   @J1A*\n                                            68665+*      $J2=ICSF,OW49808,,DAG: ICSF support                       @J2A*\n                                            68666+*      PMU: SMF70CSF and SMF70ESF field descriptions changed @WA55906*\n                                            68667+*      $K1=XCRYPTO,OW56656,,VTH: PCIX crypto support             @K1A*\n                                            68668+*      $K2=IFA,OA05731,,WLR: IFA support                         @K2A*\n                                            68669+*      $L1=SCRT,HRM7720,,GUB: SCRT enhancements                  @L1A*\n                                            68670+*      $L2=GT16W2,HRM7720,,GUB: Greater 16 CPUs - Stage 2        @L2A*\n                                            68671+*      $L3=CSRSI,HRM7720,,GUB: Adds CPC physical model           @L3A*\n                                            68672+*      $L4=MISC,HRM7720,,GUB: Updates logical partition flags    @L4A*\n                                            68673+*      $L5=DANU,OA10346,,GUB: ICSF SHA-256 hashing support       @L5A*\n                                            68674+*      GUB: SCRT sysplex timer offset support                @OA11375*\n                                            68675+*      GUB: Save user partition ID in SMF70                  @OA10346*\n                                            68676+*      GUB: System Utility Processor (SUP) support           @OA13499*\n                                            68677+*      $01=GCAP,HRM7730,,VTH: Group Capacity support             @01A*\n                                            68678+*      $02=MISC,HRM7730,,GUB: Add CPC plant and sequence code    @02A*\n                                            68679+*      $11=ZHE,OA12774,,VTH: z10 and HiperDispatch support       @11A*\n                                            68680+*      $12=WLMBLW,OA18244,,GUB: Blocked workload support         @12A*\n                                            68681+*      $21=SHA512,HRM7750,,GUB: z10 SHA-512 support              @21A*\n                                            68682+*      $22=DOC,HRM7750,,GUB: Improves SMF70GJT description       @22A*\n                                            68683+*      GUB: Hiperdispatch improvements                       @OA24074*\n                                            68684+*      GUB: Infrastructure support for new function          @OA25078*\n                                            68685+*      GUB: Polarization indicator                           @OA21140*\n                                            68686+*      GUB: Considers parked CPUs for SMF70Qxx counts        @OA21140*\n                                            68687+*      GUB: Adds normalization factor for zIIP               @OA21140*\n                                            68688+*      $31=G64CPU,HRM7760,,GUB: Enhance PL/X declares            @31A*\n                                            68689+*      $32=STATS,HRM7760,,GUB: Additional SMF statistics         @32A*\n                                            68690+*      $33=DOC,HRM7760,,GUB: Format of SMF70UPI is binary        @33A*\n                                            68691+*      $34=GCAP2,HRM7760,,GUB: Group capacity enhancements       @34A*\n                                            68692+*      GUB: CEX3 crypto and AES support                      @OA28670*\n                                            68693+*      JKU: Infrastructure support for new function          @OA29310*\n                                            68694+*      JKU: Power-Save and Cycle-Steering Modes              @OA29530*\n                                            68695+*      RRe: SIGP measurement                                 @OA29820*\n                                            68696+*      $41=WEB,HRM7770,,RRe: WEB queue distribution              @41A*\n                                            68697+*      JKU: Crypto support for 4096-bit operations           @OA31349*\n                                            68698+*                                                                    *\n                                            68699+****** END OF SPECIFICATIONS *****************************************\n                                            68700+*                                                                    */\n                                            68701+*        %GOTO PLS70;\n                                            68702+*/*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  344\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68703+*\n-\n0                                           68705+**********************  COMMON SMF HEADER  ****************************\n                                            68707+***** START OF SPECIFICATIONS *****************************************\n                                            68708+*                                                                     *\n                                            68709+*   MODULE-NAME = ERBHDR                                              *\n                                            68710+*                                                                     *\n                                            68711+*   DESCRIPTIVE-NAME = GENERAL MAPPING OF RMF SMF RECORD HEADER       *\n                                            68712+*                                                                     *\n                                            68714+*\n                                            68715+*        PROPRIETARY STATEMENT:\n                                            68716+*           Licensed Materials - Property of IBM\n                                            68717+*           \"Restricted Materials of IBM\"\n                                            68718+*           Copyright IBM Corp. 1977, 2010                        @41C\n                                            68719+*\n                                            68720+*           Status: z/OS V1R12 RMF (HRM7770)                      @41C\n                                            68721+*\n                                            68722+*\n                                            68723+*   FUNCTION : THIS MACRO MAPS THE GENERAL HEADER PART OF RMF         *\n                                            68724+*              SMF RECORDS DEPENDING ON THE MACRO CALL.               *\n                                            68725+*              IT IS CALLED BY MACRO ERBSMF                           *\n                                            68726+*                                    ERBSMF70                         *\n                                            68727+*                                       :                             *\n                                            68728+*                                    ERBSMF79                         *\n                                            68729+*                                                                     *\n                                            68730+*   MODULE-TYPE = BILINGUAL MAPPING MACRO                             *\n                                            68731+*                                                                     *\n                                            68732+*   METHOD OF INVOCATION = SEE BELOW                                  *\n                                            68733+*                                                                     *\n                                            68734+*      PLS - .QUESTION MARK.ERBHDR ATTRIBUT(ATTRIBUTES)               *\n                                            68735+*            .QUESTION MARK.ERBHDR TYPE(70) ATTRIBUT(ATTRIBUTES)      *\n                                            68736+*                                       :                             *\n                                            68737+*            .QUESTION MARK.ERBHDR TYPE(79) ATTRIBUT(ATTRIBUTES)      *\n                                            68738+*            WHERE ATTRIBUTES ARE ANY ACCEPTABLE PLS ATTRIBUTES       *\n                                            68739+*            FOR STRUCTURE DECLARATIONS.                              *\n                                            68740+*                                                                     *\n                                            68741+*      BAL - ERBHDR                                                   *\n                                            68742+*          - ERBHDR 70                                                *\n                                            68743+*                :                                                    *\n                                            68744+*          - ERBHDR 79                                                *\n                                            68745+*                                                                     *\n                                            68746+*   DISTRIBUTION LIBRARY: ARMFMAC1                                @B1A*\n                                            68747+*                                                                     *\n                                            68748+*   CHANGE-ACTIVITY = SEE BELOW                                       *\n                                            68749+* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS            *\n                                            68750+* $P1=MISC,HRM3302,,CIH: MACRO COMMENTARY ENHANCEMENTS            @P1A*\n                                            68751+* $R0=220SUP,JRM3422,,WRC: Support for MVS/SP220                  @R0A*\n                                            68752+* $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY          @X0A*\n                                            68753+* $W1=SP310E,JRM4411,,PAE: MVS/ESA support                        @W1A*\n                                            68754+* $A1=SP420,JRM4421,,BGBO: MVS SP 4 support                       @A1A*\n                                            68755+* $B1=R430,HRM4430,,THE: Distribution lib in prolog               @B1A*\n                                            68756+* GBO: Cleanup of PADI-inconsistencies                        @WA05544*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  345\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68757+*                                                                     *\n                                            68758+****** END OF SPECIFICATIONS ******************************************\n 00000000                00000000 00000054  68759+SMF70HDR  DSECT                                                         04-ERBHDR\n 00000000                                   68760+SMF70HDC  DS    CL36     COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 04-ERBHDR\n 00000024                00000024 00000000  68761+          ORG   SMF70HDC                                       @WA05544 04-ERBHDR\n 00000000                                   68762+SMF70LEN  DS    BL2      RECORD LENGTH                                  04-ERBHDR\n 00000002                                   68763+SMF70SEG  DS    BL2      SEGMENT DESCRIPTOR                             04-ERBHDR\n 00000004                                   68764+SMF70FLG  DS    BL1      HEADER FLAG BYTE                               04-ERBHDR\n                         00000080           68765+SMF70RRF  EQU   X'80'    NEW RECORD FORMAT                              04-ERBHDR\n                         00000040           68766+SMF70SUT  EQU   X'40'    SUBTYPES USED                             @R0A 04-ERBHDR\n                         00000010           68767+SMF70V4   EQU   X'10'    MVS/ESA Version 4                         @A1A 04-ERBHDR\n                         00000008           68768+SMF70ESA  EQU   X'08'    MVS/ESA VERSION                           @W1A 04-ERBHDR\n                         00000004           68769+SMF70VXA  EQU   X'04'    MVS/XA VERSION                            @R0A 04-ERBHDR\n                         00000002           68770+SMF70OS   EQU   X'02'    OPERATING SYSTEM IS OS/VS2                     04-ERBHDR\n                         00000001           68771+SMF70BFY  EQU   X'01'    System running in PR/SM mode              @J1C 04-ERBHDR\n 00000005                                   68772+SMF70RTY  DS    BL1      RECORD TYPE                                    04-ERBHDR\n 00000006                                   68773+SMF70TME  DS    BL4      TOD RECORD WRITTEN                             04-ERBHDR\n 0000000A                                   68774+SMF70DTE  DS    PL4      DATE RECORD WRITTEN                            04-ERBHDR\n 0000000E                                   68775+SMF70SID  DS    CL4      SYSTEM ID FROM INSTALLATION                    04-ERBHDR\n 00000012                                   68776+SMF70SSI  DS    CL4      SUBSYSTEM ID (RMF)                             04-ERBHDR\n 00000016                                   68777+SMF70STY  DS    BL2      SUBTYPE                                        04-ERBHDR\n 00000018                                   68778+SMF70TRN  DS    BL2      NUMBER OF TRIPLETS IN THIS RECORD              04-ERBHDR\n 0000001A                                   68779+          DS    BL2      RESERVED                                       04-ERBHDR\n 0000001C                                   68780+SMF70PRS  DS    BL4      OFFSET TO RMF PRODUCT SECTION                  04-ERBHDR\n 00000020                                   68781+SMF70PRL  DS    BL2      LENGTH OF RMF PRODUCT SECTION                  04-ERBHDR\n 00000022                                   68782+SMF70PRN  DS    BL2      NUMBER OF RMF PRODUCT SECTIONS                 04-ERBHDR\n-\n                                            68784+**********************  INDIVIDUAL HEADER EXTENSION  ******************\n-\n-\n                                            68787+**********************  Subtype 1  ******************************* @J1A\n-\n 00000024                                   68789+SMF70HDX DS    0CL40    TOTAL HEADER EXTENSION                     @D1A 03-ERBSMF70\n 00000024                                   68790+SMF70CCS DS    BL4      Offset to CPU Control section                   03-ERBSMF70\n 00000028                                   68791+SMF70CCL DS    BL2      Length of CPU Control section                   03-ERBSMF70\n 0000002A                                   68792+SMF70CCN DS    BL2      Number of CPU Control sections                  03-ERBSMF70\n 0000002C                                   68793+SMF70CPS DS    BL4      Offset to CPU Data section                      03-ERBSMF70\n 00000030                                   68794+SMF70CPL DS    BL2      Length of CPU Data section                      03-ERBSMF70\n 00000032                                   68795+SMF70CPN DS    BL2      Number of CPU Data sections                     03-ERBSMF70\n 00000034                                   68796+SMF70ASS DS    BL4      Offset to ASID Data section                     03-ERBSMF70\n 00000038                                   68797+SMF70ASL DS    BL2      Length of ASID Data section                     03-ERBSMF70\n 0000003A                                   68798+SMF70ASN DS    BL2      Number of ASID Data sections                    03-ERBSMF70\n 0000003C                                   68799+SMF70BCS DS    BL4      Offset to PR/SM Partition data sections         03-ERBSMF70\n 00000040                                   68800+SMF70BCL DS    BL2      Length of PR/SM Partition data section          03-ERBSMF70\n 00000042                                   68801+SMF70BCN DS    BL2      Number of PR/SM Partition data sections         03-ERBSMF70\n 00000044                                   68802+SMF70BVS DS    BL4      Offset to PR/SM Processor data sections         03-ERBSMF70\n 00000048                                   68803+SMF70BVL DS    BL2      Length of PR/SM Processor data section          03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  346\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000004A                                   68804+SMF70BVN DS    BL2      Number of PR/SM Processor data sections         03-ERBSMF70\n 0000004C                                   68805+SMF70CNS DS    BL4      Offset to CPU-identification name section  @I1A 03-ERBSMF70\n 00000050                                   68806+SMF70CNL DS    BL2      Length of CPU-identification name section  @I1A 03-ERBSMF70\n 00000052                                   68807+SMF70CNN DS    BL2      Number of CPU-identification name sections @I1A 03-ERBSMF70\n-\n 00000054                00000054 00000024  68809+         ORG   SMF70CCS                                            @J1A 03-ERBSMF70\n                                            68810+**********************  Subtype 2  ******************************* @J1A\n-\n 00000024                                   68812+SMF702HX DS    0CL24    Total Header extension                     @J1A 03-ERBSMF70\n 00000024                                   68813+SMF7023S DS    BL4      Offset to crypto coprocessor section       @K1C 03-ERBSMF70\n 00000028                                   68814+SMF7023L DS    BL2      Length of crypto coprocessor section       @K1C 03-ERBSMF70\n 0000002A                                   68815+SMF7023N DS    BL2      Number of crypto coprocessor section       @K1C 03-ERBSMF70\n 0000002C                                   68816+SMF7024S DS    BL4      Offset to crypto accelerator section       @K1C 03-ERBSMF70\n 00000030                                   68817+SMF7024L DS    BL2      Length of crypto accelerator section       @K1C 03-ERBSMF70\n 00000032                                   68818+SMF7024N DS    BL2      Number of crypto accelerator section       @K1C 03-ERBSMF70\n 00000034                                   68819+SMF702CS DS    BL4      Offset to ICSF section                     @K1C 03-ERBSMF70\n 00000038                                   68820+SMF702CL DS    BL2      Length of ICSF section                     @K1C 03-ERBSMF70\n 0000003A                                   68821+SMF702CN DS    BL2      Number of ICSF section                     @K1C 03-ERBSMF70\n                                            68822+*\n-\n 0000003C                0000003C 00000024  68824+         ORG   SMF7023S                                            @J1A 03-ERBSMF70\n-\n                                            68826+**********************  COMMON RMF PRODUCT SECTION  *******************\n                                            68828+*\n                                            68829+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            68830+*'/* START OF SPECIFICATIONS ****************************************/'\n                                            68831+*'/*01* PROPRIETARY STATEMENT=                                      */'\n                                            68832+*    ENDANSWER;\n                                            68833+*/*\n                                            68835+*\n                                            68836+*        PROPRIETARY STATEMENT:\n                                            68837+*           Licensed Materials - Property of IBM\n                                            68838+*           \"Restricted Materials of IBM\"\n                                            68839+*           Copyright IBM Corp. 1977, 2010                        @41C\n                                            68840+*\n                                            68841+*           Status: z/OS V1R12 RMF (HRM7770)                      @41C\n                                            68842+*\n                                            68843+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            68844+*'      ?ERBCOPY1;                                                    '\n                                            68845+*'/*                                                                */'\n                                            68846+*'/*01* DESCRIPTIVE_NAME: General mapping of RMF Product Section    */'\n                                            68847+*'/*02*  ACRONYM:  PRO                                              */'\n                                            68848+*'/*                                                                */'\n                                            68849+*'/*01* MACRO-NAME:  ERBPRO                                         */'\n                                            68850+*'/*                                                                */'\n                                            68851+*'/*01* DSECT NAME:  SMFnnPRO, if record type specified             */'\n                                            68852+*'/*                 RMFPRO  , if record type omitted               */'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  347\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68853+*'/*                                                                */'\n                                            68854+*'/*01* COMPONENT:  Resource Measurement Facility (27404)           */'\n                                            68855+*'/*                                                                */'\n                                            68856+*'/*01* EYE-CATCHER:  N/A                                           */'\n                                            68857+*'/*02*  OFFSET:  N/A                                               */'\n                                            68858+*'/*02*  LENGTH:  N/A                                               */'\n                                            68859+*'/*                                                                */'\n                                            68860+*'/*01* STORAGE ATTRIBUTES:                                         */'\n                                            68861+*'/*02*  SUBPOOL:    same as SMF record mapping                     */'\n                                            68862+*'/*02*  KEY:        same as SMF record mapping                     */'\n                                            68863+*'/*02*  RESIDENCY:  same as SMF record mapping                     */'\n                                            68864+*'/*02*  MAIN STORAGE:      N/A                                     */'\n                                            68865+*'/*02*  AUXILIARY STORAGE: N/A                                     */'\n                                            68866+*'/*02*  VIRTUAL STORAGE:   N/A                                     */'\n                                            68867+*'/*                                                                */'\n                                            68868+*'/*01* SIZE: 104 bytes - common section                        @C1C*/'\n                                            68869+*'/*         + 16 bytes - split/reassembly control (static)     @C1C*/'\n                                            68870+*'/*         +  4 bytes * SMFHDR extension triplet -            @C1C*/'\n                                            68871+*'/*                      - split/reassembly (variable)         @C1C*/'\n                                            68872+*'/*                                                                */'\n                                            68873+*'/*01* CREATED BY: N/A                                             */'\n                                            68874+*'/*                                                                */'\n                                            68875+*'/*01* POINTED TO BY: N/A                                          */'\n                                            68876+*'/*                                                                */'\n                                            68877+*'/*01* SERIALIZATION:                                              */'\n                                            68878+*'/*     Not provided                                               */'\n                                            68879+*'/*                                                                */'\n                                            68880+*'/*01* FUNCTION:                                                   */'\n                                            68881+*'/*02*  This macro maps the RMF product section of RMFs            */'\n                                            68882+*'/*     SMF records depending on the macro call.                   */'\n                                            68883+*'/*     It is called by macro ERBSMF                               */'\n                                            68884+*'/*                           ERBSMF70                             */'\n                                            68885+*'/*                              :                                 */'\n                                            68886+*'/*                           ERBSMF79                             */'\n                                            68887+*'/*     NOTE:                                                      */'\n                                            68888+*'/*      When this data section is build in a NON-RMF environment, */'\n                                            68889+*'/*      all data are zero except:                             @G1A*/'\n                                            68890+*'/*         SMF74PRD = product name, e.g. CRR instead of RMF   @G1A*/'\n                                            68891+*'/*         SMF74IST = time (0hhmmssF),                        @G1A*/'\n                                            68892+*'/*                    time when the record is processed       @G1A*/'\n                                            68893+*'/*         SMF74DAT = date (0cyydddF),                        @G1A*/'\n                                            68894+*'/*                    date when the record is processed       @G1A*/'\n                                            68895+*'/*         SMF74SRL = SMF record level change number          @G1A*/'\n                                            68896+*'/*         SMF74IET = 8 TOKEN, 8 bytes TOD value              @G1A*/'\n                                            68897+*'/*                    TOD value when the record is processed  @G1A*/'\n                                            68898+*'/*                                                                */'\n                                            68899+*'/*01* METHOD OF ACCESS:                                           */'\n                                            68900+*'/*02*  ASM:                                                       */'\n                                            68901+*'/*      - ERBPRO                                                  */'\n                                            68902+*'/*      - ERBPRO 70                                               */'\n                                            68903+*'/*            :                                                   */'\n                                            68904+*'/*      - ERBPRO 79                                               */'\n                                            68905+*'/*                                                                */'\n                                            68906+*'/*02*  PL/X:                                                      */'\n                                            68907+*'/*      .question mark.ERBPRO ATTRIBUT(attributes)                */'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  348\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           68908+*'/*      .question mark.ERBPRO TYPE(70) ATTRIBUT(attributes)       */'\n                                            68909+*'/*      :                                                         */'\n                                            68910+*'/*      .question mark.ERBPRO TYPE(79) ATTRIBUT(attributes)       */'\n                                            68911+*'/*                                                                */'\n                                            68912+*'/*      where attributes are any acceptable PL/X attributes       */'\n                                            68913+*'/*      for structure declarations.                               */'\n                                            68914+*'/*                                                                */'\n                                            68915+*'/*01* MODULE-TYPE: Bilingual mapping macro                        */'\n                                            68916+*'/*                                                                */'\n                                            68917+*'/*01* DELETED BY: N/A                                             */'\n                                            68918+*'/*                                                                */'\n                                            68919+*'/*01* FREQUENCY:  N/A                                             */'\n                                            68920+*'/*                                                                */'\n                                            68921+*'/*01* DEPENDENCIES: None                                          */'\n                                            68922+*'/*                                                                */'\n                                            68923+*'/*01* DISTRIBUTION LIBRARY: ARMFMAC1                              */'\n                                            68924+*'/*                                                                */'\n                                            68925+*'/*01* CHANGE ACTIVITY:                                            */'\n                                            68926+*'/* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS       */'\n                                            68927+*'/* $O1=4381SP,JRM3212,,SHR: 4381 - SUPPORT                    @O1A*/'\n                                            68928+*'/* $O2=SOLVSP,JRM3212,,SHR: SOFTWARE LEVEL SUPPORT            @O2A*/'\n                                            68929+*'/* $P1=3090,HRM3302,,HEN: 3090 - SUPPORT                      @P1A*/'\n                                            68930+*'/* $P2=ES,HRM3302,,CIH: SP2.2 EXTENDED STORE                  @P2A*/'\n                                            68931+*'/* $Q1=MISC,HRM3402,,WEY: CSA FIXED FRAMES COUNT INTERFACE    @Q1A*/'\n                                            68932+*'/* $X0=OY11330,HRM4410,,WRC: PR/SM support                    @X0A*/'\n                                            68933+*'/* SMF Record Change Level Support                        @YA28449*/'\n                                            68934+*'/* $Z1=SERIAL,HRM4420,,WRC: Serial & switch                   @Z1A*/'\n                                            68935+*'/* $B1=SYNC,HRM4430,,GBO: Synchronize Measurements            @B1A*/'\n                                            68936+*'/* $C1=WLM,HRM4440,,HKH: WLM Support                          @C1A*/'\n                                            68937+*'/* $C2=SPLIT,HRM4440,,SCD: Split/Reassembly                   @C2A*/'\n                                            68938+*'/* $E1=CVT,HRM5530,,SUW: Report new product type OS/390 and       */'\n                                            68939+*'/*         software level. Will be added with APAR OW15873        */'\n                                            68940+*'/*         (OS/390 Release 1).                                @E1A*/'\n                                            68941+*'/* $G1=CACHE,HRM6606,,THE: 256 device support                 @G1A*/'\n                                            68942+*'/* $I1=BIT64,HRM7703,,GUB: 64 Bit real support                @I1A*/'\n                                            68943+*'/* $J1=MISC,HRM7705,,GUB: Comment changes for zSeries         @J1A*/'\n                                            68944+*'/* FDL: Prepares for up to 65535 devices                  @WA55906*/'\n                                            68945+*'/* $K1=MISC,HRM7708,,GUB: Allign and update comments          @K1A*/'\n                                            68946+*'/* $K2=IFA,OA05731,,WLR: IFA support                          @K2A*/'\n                                            68947+*'/* GUB: System Utility Processor (SUP) support            @OA13499*/'\n                                            68948+*'/* $11=LPS,HRM7740,,WLR: New function                         @11A*/'\n                                            68949+*'/* $21=COMM,HRM7750,,WLR: 64-bit Common Memory support        @21A*/'\n                                            68950+*'/* $22=ICN,HRM7750,,GUB: Dynamic CPU addition                 @22A*/'\n                                            68951+*'/*                                                                */'\n                                            68952+*'/* END OF SPECIFICATIONS ******************************************/'\n                                            68953+*    ENDANSWER;                     /*\n 00000000                00000000 00000068  68954+SMF70PRO DSECT                                                          04-ERBPRO\n 00000000                                   68955+SMF70MFV DS    CL2      RMF VERSION NUMBER, WITH INTRODUCTION OF   @O2C 04-ERBPRO\n                                            68956+*                       THE MVS SOFTWARE LEVEL THE FORMAT CHANGES  @O2A\n                                            68957+*                       TO PACKED 'VRLF'                           @O2A\n                                            68958+*                       ... V = VERSION NUMBER                     @O2A\n                                            68959+*                       ... R = RELEASE NUMBER                     @O2A\n                                            68960+*                       ... L = MODIFICATION LEVEL                 @O2A\n 00000002                                   68961+SMF70PRD DS    CL8      PRODUCT NAME                                    04-ERBPRO\n 0000000A                                   68962+SMF70IST DS    PL4      TOD MONITOR INTERVAL START: 0HHMMSSF            04-ERBPRO\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  349\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n00000000E                                   68963+SMF70DAT DS    PL4      DATE MONITOR INTERVAL START: 00YYDDDF           04-ERBPRO\n 00000012                                   68964+SMF70INT DS    PL4      DURATION OF MONITOR INTERVAL: MMSSTTTF          04-ERBPRO\n                                            68965+*\n 00000016                                   68966+SMF70MFL DS    BL2      RESERVED                                   @J1C 04-ERBPRO\n 00000018                                   68967+SMF70SAM DS    BL4      NUMBER OF SAMPLES                               04-ERBPRO\n 0000001C                                   68968+SMF70RV2 DS    BL2      RESERVED                                        04-ERBPRO\n 0000001E                                   68969+SMF70FLA DS    BL2      FLAGS                                           04-ERBPRO\n                         00000080           68970+SMF70CNV EQU   X'80'    DATA CONVERT.FROM VER.2                         04-ERBPRO\n                         00000040           68971+SMF70ISS EQU   X'40'    INVALID SAMPLES TO BE SKIPPED              @Q1A 04-ERBPRO\n                         00000020           68972+SMF70M3R EQU   X'20'    Record was written by RMF Monitor III      @B1A 04-ERBPRO\n                         00000010           68973+SMF70ISM EQU   X'10'    Interval was written under SMF control     @B1A 04-ERBPRO\n 00000020                                   68974+SMF70RLS DS    CL4      RESERVED                                   @J1C 04-ERBPRO\n 00000024                                   68975+SMF70CYC DS    PL4      CYCLE IN PACKED DECIMAL 000TTTTF                04-ERBPRO\n 00000028                                   68976+SMF70MVS DS    CL8      MVS software level (consists of an acronym @J1C 04-ERBPRO\n                                            68977+*                       and the version, release, and modification @J1C\n                                            68978+*                       level - ZVvvrrmm).                         @J1C\n 00000030                                   68979+SMF70IML DS    XL1      Indicates the type of processor complex    @J1C 04-ERBPRO\n                                            68980+*                       on which data measurements were taken      @J1C\n                                            68981+*                       X'03' = 9672, zSeries, z9              @OA13499\n 00000031                                   68982+SMF70PRF DS    BL1      PROCESSOR FLAGS                            @P2A 04-ERBPRO\n                         00000080           68983+SMF70QES EQU   X'80'    Equipped with Expanded Storage             @P2A 04-ERBPRO\n                         00000040           68984+SMF70CNE EQU   X'40'    Equipped with ESCON Channel                @Z1A 04-ERBPRO\n                         00000020           68985+SMF70DRC EQU   X'20'    ESCON Director in configuration            @Z1A 04-ERBPRO\n                         00000010           68986+SMF70EME EQU   X'10'    System in z/ARCH mode                      @I1A 04-ERBPRO\n                         00000008           68987+SMF70PRI EQU   X'08'    At least one zAAP is currently installed   @22C 04-ERBPRO\n                         00000004           68988+SMF70PRP EQU   X'04'    At least one zIIP is currently installed   @22C 04-ERBPRO\n                         00000002           68989+SMF70PED EQU   X'02'    Enhanced DAT architecture available        @21C 04-ERBPRO\n 00000032                                   68990+SMF70PTN DS    BL1      PR/SM PARTITION NUMBER                     @Z1C 04-ERBPRO\n 00000033                                   68991+SMF70SRL DS    BL1      SMF record level                       @YA28449 04-ERBPRO\n 00000034                                   68992+SMF70IET DS    CL8      Interval expiration time token             @B1A 04-ERBPRO\n 0000003C                                   68993+SMF70LGO DS    CL8      Offset GMT to local time                   @C1A 04-ERBPRO\n 00000044                                   68994+SMF70RAO DS    BL4      Offset to reassembly area relative to      @C2A 04-ERBPRO\n                                            68995+*                       start of RMF product section               @C2A\n 00000048                                   68996+SMF70RAL DS    BL2      Length of reassembly area. Length depends  @C2A 04-ERBPRO\n                                            68997+*                       on the record type/subtype but is fix for  @C2A\n                                            68998+*                       a specific type/subtype                    @C2A\n 0000004A                                   68999+SMF70RAN DS    BL2      Number of reassembly area. Only 0 or 1 are @C2A 04-ERBPRO\n                                            69000+*                       valid. This field is used to indicate      @C2A\n                                            69001+*                       whether a SMF record is a broken record    @C2A\n                                            69002+*                       (0 = NOT broken, 1 = is a broken record).  @C2A\n                                            69003+*                       Offset and length are only valid if        @C2A\n                                            69004+*                       SMFxxRAN = 1. Reassembly area is only      @C2A\n                                            69005+*                       present in broken records                  @C2A\n 0000004C                                   69006+SMF70OIL DS    BL2      Original interval length                   @C2A 04-ERBPRO\n                                            69007+*                       (as defined in the session option or by    @C2A\n                                            69008+*                        SMF)                                      @C2A\n 0000004E                                   69009+SMF70SYN DS    BL2      SYNC value in seconds                      @C2A 04-ERBPRO\n 00000050                                   69010+SMF70GIE DS    CL8      Projected gathering interval end           @C2A 04-ERBPRO\n                                            69011+*                       (STCK format) GMT time                     @C2A\n 00000058                                   69012+SMF70XNM DS    CL8      Sysplex name                               @C1A 04-ERBPRO\n                                            69013+*                       (as defined in ECVTSPLX)                   @C1A\n 00000060                                   69014+SMF70SNM DS    CL8      System name for current system             @C1A 04-ERBPRO\n                                            69015+*                       (as defined in CVTSNAME)                   @C1A\n 00000000                00000000 00000010  69016+SMF70RHD DSECT                                                          04-ERBPRO\n 00000000                                   69017+SMF70RBR DS    BL2      Total number of broken records build from  @C2A 04-ERBPRO\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  350\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69018+*                       the original large record                  @C2A\n 00000002                                   69019+SMF70RSQ DS    BL2      Sequence number of this broken record.     @C2A 04-ERBPRO\n                                            69020+*                       Every broken record build from the same    @C2A\n                                            69021+*                       large record must have a unique sequence   @C2A\n                                            69022+*                       number. Broken records with sequence       @C2A\n                                            69023+*                       numbers from 1 to SMFxxRBR must exist      @C2A\n 00000004                                   69024+SMF70RIO DS    BL4      Offset to first reassembly information     @C2A 04-ERBPRO\n                                            69025+*                       block relative to start of reassembly      @C2A\n                                            69026+*                       area header                                @C2A\n 00000008                                   69027+SMF70RIL DS    BL2      Length of reassembly information block     @C2A 04-ERBPRO\n 0000000A                                   69028+SMF70RIN DS    BL2      Number of reassembly information blocks    @C2A 04-ERBPRO\n                                            69029+*                       (same as SMFxxTRN in header section)       @C2A\n 0000000C                                   69030+         DS    BL4      Reserved                                   @C2A 04-ERBPRO\n 00000000                00000000 00000004  69031+SMF70RBL DSECT                                                          04-ERBPRO\n 00000000                                   69032+SMF70RNN DS    BL2      Total number of sections in the original   @C2A 04-ERBPRO\n                                            69033+*                       large record. This field contains          @C2A\n                                            69034+*                       information of how many sections of a      @C2A\n                                            69035+*                       specific type were contained in the        @C2A\n                                            69036+*                       original SMF record. This field is a copy  @C2A\n                                            69037+*                       of the number field of the triplet in the  @C2A\n                                            69038+*                       original (non broken) record               @C2A\n 00000002                                   69039+SMF70RPP DS    BL2      Position of the first of one or more       @C2A 04-ERBPRO\n                                            69040+*                       consecutive section(s) described by this   @C2A\n                                            69041+*                       block as in the original record. Values in @C2A\n                                            69042+*                       the range of 1 to SMFxxRNN are valid for   @C2A\n                                            69043+*                       correct processing. A value of 0 will skip @C2A\n                                            69044+*                       processing of this information block. This @C2A\n                                            69045+*                       field provides information where the       @C2A\n                                            69046+*                       sections that are part of this broken      @C2A\n                                            69047+*                       record were placed in the original record  @C2A\n                                            69048+*                       before the split took place. The actual    @C2A\n                                            69049+*                       number of consecutive sections contained   @C2A\n                                            69050+*                       in this record is available from the       @C2A\n                                            69051+*                       actual triplet in the header extension     @C2A\n-\n                                            69053+**********************  Control Section for Subtype 1 ************ @J1A\n                                            69054+**********************  CPU CONTROL SECTION  **************************\n 00000000                00000000 000000DC  69055+SMF70CTL DSECT                                                          03-ERBSMF70\n 00000000                                   69056+SMF70MOD DS    CL2      CPU processor family                       @I2C 03-ERBSMF70\n 00000002                                   69057+SMF70VER DS    C        CPU version number                              03-ERBSMF70\n 00000003                                   69058+SMF70BNP DS    CL1      Number of physical processors assigned for      03-ERBSMF70\n                                            69059+*                       use by PR/SM\n 00000004                                   69060+SMF70INB DS    CL1      PR/SM indicator bits                            03-ERBSMF70\n                         00000080           69061+SMF70DIF EQU   X'80'    PR/SM - Diagnose X'204' failure                 03-ERBSMF70\n                         00000040           69062+SMF70NPC EQU   X'40'    PR/SM - Number of phys procrs has changed       03-ERBSMF70\n                         00000020           69063+SMF70TSC EQU   X'20'    PR/SM - Dispatch interval value changed         03-ERBSMF70\n                         00000010           69064+SMF70PHY EQU   X'10'    PR/SM - An additional partition is presented    03-ERBSMF70\n                                            69065+*                       with the name \"PHYSICAL\".  This partition\n                                            69066+*                       includes all of the otherwise uncaptured\n                                            69067+*                       time which was used by LPAR but could not be\n                                            69068+*                       attrubuted to a specific logical partition\n                         00000008           69069+SMF70DGE EQU   X'08'    PR/SM - Diagnose X'204' extended data is        03-ERBSMF70\n                                            69070+*                       supported                                  @I3A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  351\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000005                                   69071+SMF70STF DS    CL1      Control section flags                      @I2C 03-ERBSMF70\n                         00000080           69072+SMF70STS EQU   X'80'    Store-system-information facility          @I2A 03-ERBSMF70\n                                            69073+*                       installed\n                         00000040           69074+SMF70ADC EQU   X'40'    Physical CPU adjustment factor changed @WA46477 03-ERBSMF70\n                         00000020           69075+SMF70WUC EQU   X'20'    Service units available to MVS image            03-ERBSMF70\n                                            69076+*                       changed                                @WA46477\n                         00000010           69077+SMF70RCU EQU   X'10'    SMF70LAC is provided for systems running        03-ERBSMF70\n                                            69078+*                       in LPAR mode or as a VM guest. The value\n                                            69079+*                       does no longer include CPU wait times.     @L1A\n                         00000008           69080+SMF70HWV EQU   X'08'    SMF70MDL is the model-capacity identifier       03-ERBSMF70\n                                            69081+*                       and SMF70HWM is the physical model. If OFF,\n                                            69082+*                       SMF70MDL represents both model-capacity and\n                                            69083+*                       physical model.                            @L3A\n                         00000004           69084+SMF70PTC EQU   X'04'    CP promote slices (OPT parameter BLWLTRPCT)     03-ERBSMF70\n                                            69085+*                       changed                                    @12A\n                         00000002           69086+SMF70PLC EQU   X'02'    Swapped-in starvation threshold                 03-ERBSMF70\n                                            69087+*                       (OPT parameter BLWLINTHD) changed          @12A\n                         00000001           69088+SMF70GAV EQU   X'01'    SMF70GAU is valid                          @34A 03-ERBSMF70\n 00000006                                   69089+SMF70GTS DS    CL2      PR/SM - Dispatch interval                       03-ERBSMF70\n 00000008                                   69090+SMF70MDL DS    CL16     EBCDIC CPC model identifier.                    03-ERBSMF70\n                                            69091+*                       See Bit 4 of SMF70STF (SMF70HWV)           @L3C\n 00000018                                   69092+SMF70DSA DS    CL2      Number of Diagnose samples                 @I3A 03-ERBSMF70\n 0000001A                                   69093+SMF70IFA DS    BL2      zAAPs (IFAs) online at the end of the           03-ERBSMF70\n                                            69094+*                       interval                               @OA13499\n 0000001C                                   69095+SMF70CPA DS    CL4      Physical CPU adjustment factor (will be         03-ERBSMF70\n                                            69096+*                       used for converting CPU time to service\n                                            69097+*                       units)                                 @WA46477\n 00000020                                   69098+SMF70WLA DS    CL4      Millions of service units available to MVS      03-ERBSMF70\n                                            69099+*                       image when not running as VM guest. If running\n                                            69100+*                       as VM guest, capacity available to VM.     @J2C\n 00000024                                   69101+SMF70LAC DS    CL4      Long-term average CPU service in millions       03-ERBSMF70\n                                            69102+*                       of service units. For details, see RCTLACS\n                                            69103+*                       of IRARCT. Scope of the value depends on\n                                            69104+*                       Bit 3 of SMF70STF (SMF70RCU)               @L1C\n 00000028                                   69105+SMF70HOF DS    CL8      Hypervisor date/time offset in STCK format      03-ERBSMF70\n                                            69106+*                       (aka Sysplex timer offset)             @OA11375\n 00000030                                   69107+SMF70HWM DS    CL16     EBCDIC CPC physical model identifier. Valid     03-ERBSMF70\n                                            69108+*                       if Bit 4 of SMF70STF (SMF70HWV) is set     @L3A\n 00000040                                   69109+SMF70SUP DS    CL2      zIIPs online at end of the interval    @OA13499 03-ERBSMF70\n 00000042                                   69110+SMF70GJT DS    CL8      Time in STCK format when the partition          03-ERBSMF70\n                                            69111+*                       that wrote this record has joined or left a\n                                            69112+*                       capacity group (last change of group name).\n                                            69113+*                       Also set at IPL time when no member of a\n                                            69114+*                       capacity group.                            @22C\n 0000004A                                   69115+SMF70POM DS    CL4      EBCDIC plant code that identifies the plant     03-ERBSMF70\n                                            69116+*                       of manufacture for the configuration.\n                                            69117+*                       The plant code is left-justified with\n                                            69118+*                       trailing blank characters if necessary.    @02A\n 0000004E                                   69119+SMF70CSC DS    CL16     EBCDIC sequence code of the configuration.      03-ERBSMF70\n                                            69120+*                       The sequence code is right-justified with\n                                            69121+*                       leading EBCDIC zeroes if necessary.        @02A\n 0000005E                                   69122+SMF70HHF DS    CL1      Additional flags                       @OA24074 03-ERBSMF70\n                         00000080           69123+SMF70HHS EQU   X'80'    HiperDispatch supported                @OA24074 03-ERBSMF70\n                         00000040           69124+SMF70HHA EQU   X'40'    HiperDispatch is active                @OA24074 03-ERBSMF70\n                         00000020           69125+SMF70HHC EQU   X'20'    HiperDispatch status changed during             03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  352\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69126+*                       interval                               @OA24074\n 0000005F                                   69127+SMF70CR  DS    CL1      ZEP field 0                            @OA29310 03-ERBSMF70\n 00000060                                   69128+SMF70PMI DS    F        Accumulated number of blocked dispatchable      03-ERBSMF70\n                                            69129+*                       units per second that may get promoted in\n                                            69130+*                       their dispatch priority. To get the average\n                                            69131+*                       promote rate, divide SMF70PMI by SMF70SAM. @12A\n 00000064                                   69132+SMF70PMU DS    F        Number of blocked dispatchable units being      03-ERBSMF70\n                                            69133+*                       promoted during the interval               @12A\n 00000068                                   69134+SMF70PMW DS    F        Accumulated number of address spaces and        03-ERBSMF70\n                                            69135+*                       enclaves being blocked during the interval.\n                                            69136+*                       To get the average number of waiters for\n                                            69137+*                       promote, divide SMF70PMW by SMF70SAM.      @12A\n 0000006C                                   69138+SMF70PMP DS    F        Maximum number of address spaces and enclaves   03-ERBSMF70\n                                            69139+*                       found being blocked during the interval    @12A\n 00000070                                   69140+SMF70PMT DS    H        1/1000s of the CPU capacity for promote         03-ERBSMF70\n                                            69141+*                       slices (OPT parameter BLWLTRPCT)           @12A\n 00000072                                   69142+SMF70PML DS    H        Swapped-in starvation threshold. When an        03-ERBSMF70\n                                            69143+*                       address space or enclave has not received\n                                            69144+*                       CPU service within this time interval\n                                            69145+*                       although it has ready-to-run work, it is\n                                            69146+*                       considered being blocked (OPT parameter\n                                            69147+*                       BLWLINTHD)                                 @12A\n 00000074                                   69148+SMF70MPC DS    CL16     When non-zero, EBCDIC model permanent           03-ERBSMF70\n                                            69149+*                       capacity identifier of the configuration.\n                                            69150+*                       The identifier is left justified with\n                                            69151+*                       trailing blanks if necessary.              @11A\n 00000084                                   69152+SMF70MTC DS    CL16     When non-zero, EBCDIC model temporary           03-ERBSMF70\n                                            69153+*                       capacity identifier of the configuration.\n                                            69154+*                       The identifier is left justified with\n                                            69155+*                       trailing blanks if necessary.              @11A\n 00000094                                   69156+SMF70MCR DS    F        Model capacity rating. When non-zero,           03-ERBSMF70\n                                            69157+*                       this value is associated with the model\n                                            69158+*                       capacity as identified in field SMF70MDL.  @11A\n 00000098                                   69159+SMF70MPR DS    F        Model permanent capacity rating. When           03-ERBSMF70\n                                            69160+*                       non-zero, this value is associated with\n                                            69161+*                       the model permanent capacity as identified\n                                            69162+*                       in field SMF70MPC.                         @11A\n 0000009C                                   69163+SMF70MTR DS    F        Model temporary capacity rating. When           03-ERBSMF70\n                                            69164+*                       non-zero, this value is associated with\n                                            69165+*                       the model temporary capacity as identified\n                                            69166+*                       in field SMF70MTC.                         @11A\n 000000A0                                   69167+SMF70ZEP DS    F        ZEP field 1                            @OA25078 03-ERBSMF70\n 000000A4                                   69168+SMF70ZER DS    CL8      ZEP field 2                            @OA25078 03-ERBSMF70\n 000000AC                                   69169+SMF70ZEE DS    CL8      ZEP field 3                            @OA25078 03-ERBSMF70\n 000000B4                                   69170+SMF70ZEC DS    CL8      ZEP field 4                            @OA25078 03-ERBSMF70\n 000000BC                                   69171+SMF70NRM DS    F        Normalization factor for zIIP. Multiply         03-ERBSMF70\n                                            69172+*                       zIIP time by this value and divide by 256\n                                            69173+*                       to get the equivalent time on a CP.    @OA21140\n 000000C0                                   69174+SMF70GAU DS    F        Long-term average of CPU service in millions    03-ERBSMF70\n                                            69175+*                       of service units which would be allowed by\n                                            69176+*                       the limit of the capacity group but is not\n                                            69177+*                       used by its members. If the value is negative,\n                                            69178+*                       this capacity group is capped.\n                                            69179+*                       Valid if Bit 7 of SMF70STF (SMF70GAV) set. @34A\n 000000C4                                   69180+SMF70ZEI DS    CL8      ZEP field 5                            @OA29310 03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  353\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000CC                                   69181+SMF70NCR DS    F        Nominal model-capacity rating.                  03-ERBSMF70\n                                            69182+*                       When non-zero, this value is associated with\n                                            69183+*                       the nominal model capacity as identified in\n                                            69184+*                       field SMF70MDL. When field SMF70CAI contains\n                                            69185+*                       a value of 100, this value equals the value\n                                            69186+*                       in field SMF70MCR.                     @OA29530\n 000000D0                                   69187+SMF70NPR DS    F        Nominal permanent model-capacity rating.        03-ERBSMF70\n                                            69188+*                       When non-zero, this value is associated with\n                                            69189+*                       the nominal permanent model capacity as\n                                            69190+*                       identified in field SMF70MPC. When field\n                                            69191+*                       SMF70CAI contains a value of 100, this value\n                                            69192+*                       equals the value in field SMF70MPR.    @OA29530\n 000000D4                                   69193+SMF70NTR DS    F        Nominal temporary model-capacity rating.        03-ERBSMF70\n                                            69194+*                       When non-zero, this value is associated with\n                                            69195+*                       the nominal temporary model capacity as\n                                            69196+*                       identified in field SMF70MTC. When field\n                                            69197+*                       SMF70CAI contains a value of 100, this value\n                                            69198+*                       equals the value in field SMF70MTR.    @OA29530\n 000000D8                                   69199+SMF70CAI DS    BL1      Capacity-adjustment indication. When zero, the  03-ERBSMF70\n                                            69200+*                       indication is not reported. When in the range\n                                            69201+*                       1 to 99, some amount of reduction is indicated.\n                                            69202+*                       When 100, the machine is operating at its\n                                            69203+*                       normal capacity. Temporary capacity changes\n                                            69204+*                       that affect machine performance (for example,\n                                            69205+*                       CBU or OOCoD) are not included.        @OA29530\n 000000D9                                   69206+SMF70CCR DS    BL1      Capacity-change reason.                         03-ERBSMF70\n                                            69207+*                       Valid if SMF70CAI is non-zero. When 1, the\n                                            69208+*                       capacity change is due to the setting of a\n                                            69209+*                       manual control. When greater than 1, capacity\n                                            69210+*                       change is due to an internal machine condition\n                                            69211+*                       or exception condition external to the machine\n                                            69212+*                                                              @OA29530\n 000000DA                                   69213+         DS    CL2      Reserved                               @OA29530 03-ERBSMF70\n-\n                                            69215+**********************  CPU DATA SECTION  *****************************\n 00000000                00000000 00000050  69216+SMF70CPU DSECT                                                          03-ERBSMF70\n 00000000                                   69217+SMF70WAT DS    CL8      CPU wait time, where bit 51 = 1 microsecond     03-ERBSMF70\n 00000008                                   69218+SMF70CID DS    BL2      CPU identification                              03-ERBSMF70\n 0000000A                                   69219+SMF70CNF DS    BL1      Configuration activity indicator                03-ERBSMF70\n                         00000008           69220+SMF70DCI EQU   8        Data available for a complete interval @WA27840 03-ERBSMF70\n                         00000004           69221+SMF70PAR EQU   4        CPU was varied during Postprocessor             03-ERBSMF70\n                                            69222+*                       duration interval\n                         00000002           69223+SMF70VAC EQU   2        Data invalid, CPU varied on or offline          03-ERBSMF70\n                         00000001           69224+SMF70STA EQU   1        CPU is online at end of interval                03-ERBSMF70\n 0000000B                                   69225+SMF70RV3 DS    BL1      Reserved                                        03-ERBSMF70\n 0000000C                                   69226+SMF70SER DS    CL3      CPU serial number (6 hexadecimal digits)        03-ERBSMF70\n 0000000F                                   69227+SMF70TYP DS    BL1      CPU type                                        03-ERBSMF70\n                                            69228+*                       0 = General purpose CP\n                                            69229+*                       1 = zAAP (IFA)                             @K2C\n                                            69230+*                       2 = zIIP                               @OA13499\n 00000010                                   69231+SMF70SLH DS    BL4      Number of entries to the I/O SLIH               03-ERBSMF70\n 00000014                                   69232+SMF70TPI DS    BL4      Number of TPI with CC=1                         03-ERBSMF70\n 00000018                                   69233+SMF70VFS DS    BL4      Number of samples when the vector bit           03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  354\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69234+*                       in the PSA image was turned on             @E1A\n 0000001C                                   69235+SMF70V   DS    BL1      Vector configuration                            03-ERBSMF70\n                         00000080           69236+SMF70VON EQU   X'80'    Vector was online                               03-ERBSMF70\n 0000001D                                   69237+SMF70CPM DS    CL3      Reserved                                   @I2C 03-ERBSMF70\n 00000020                                   69238+SMF70PAT DS    CL8      CPU parked time, bit 51 = 1 microsecond    @11C 03-ERBSMF70\n 00000028                                   69239+SMF70TCB DS    D        Number of TCB dispatches for this CPU      @32A 03-ERBSMF70\n 00000030                                   69240+SMF70SRB DS    D        Number of SRB dispatches for this CPU      @32A 03-ERBSMF70\n 00000038                                   69241+SMF70NIO DS    D        Number of I/Os for this CPU                @32A 03-ERBSMF70\n 00000040                                   69242+SMF70SIG DS    D        Total number of SIGPs for this CPU     @OA29820 03-ERBSMF70\n 00000048                                   69243+SMF70WTD DS    D        Wait dispatch count for this CPU           @41A 03-ERBSMF70\n                         00000000           69244+SMF70TCP EQU   0        General purpose CP                         @K2A 03-ERBSMF70\n                         00000001           69245+SMF70TIF EQU   1        zAAP (IFA)                                 @K2A 03-ERBSMF70\n                         00000002           69246+SMF70TSU EQU   2        zIIP                                   @OA13499 03-ERBSMF70\n-\n                                            69248+**********************  ASID DATA SECTION  ****************************\n 00000000                00000000 00000314  69249+SMF70AID DSECT                                                          03-ERBSMF70\n 00000000                                   69250+SMF70RMN DS    H        READY MINIMUM VALUE OVER INTERVAL               03-ERBSMF70\n 00000002                                   69251+SMF70RMM DS    H        READY MAXIMUM VALUE OVER INTERVAL               03-ERBSMF70\n 00000004                                   69252+SMF70RTT DS    F        READY TOTAL VALUE OVER INTERVAL                 03-ERBSMF70\n 00000008                                   69253+SMF70R00 DS    F        COUNT OF TIMES READY VALUE WAS 0                03-ERBSMF70\n 0000000C                                   69254+SMF70R01 DS    F        COUNT OF TIMES READY VALUE WAS 1                03-ERBSMF70\n 00000010                                   69255+SMF70R02 DS    F        COUNT OF TIMES READY VALUE WAS 2                03-ERBSMF70\n 00000014                                   69256+SMF70R03 DS    F        COUNT OF TIMES READY VALUE WAS 3                03-ERBSMF70\n 00000018                                   69257+SMF70R04 DS    F        COUNT OF TIMES READY VALUE WAS 4                03-ERBSMF70\n 0000001C                                   69258+SMF70R05 DS    F        COUNT OF TIMES READY VALUE WAS 5                03-ERBSMF70\n 00000020                                   69259+SMF70R06 DS    F        COUNT OF TIMES READY VALUE WAS 6                03-ERBSMF70\n 00000024                                   69260+SMF70R07 DS    F        COUNT OF TIMES READY VALUE WAS 7                03-ERBSMF70\n 00000028                                   69261+SMF70R08 DS    F        COUNT OF TIMES READY VALUE WAS 8                03-ERBSMF70\n 0000002C                                   69262+SMF70R09 DS    F        COUNT OF TIMES READY VALUE WAS 9                03-ERBSMF70\n 00000030                                   69263+SMF70R10 DS    F        COUNT OF TIMES READY VALUE WAS 10               03-ERBSMF70\n 00000034                                   69264+SMF70R11 DS    F        COUNT OF TIMES READY VALUE WAS 11               03-ERBSMF70\n 00000038                                   69265+SMF70R12 DS    F        COUNT OF TIMES READY VALUE WAS 12               03-ERBSMF70\n 0000003C                                   69266+SMF70R13 DS    F        COUNT OF TIMES READY VALUE WAS 13               03-ERBSMF70\n 00000040                                   69267+SMF70R14 DS    F        COUNT OF TIMES READY VALUE WAS 14               03-ERBSMF70\n 00000044                                   69268+SMF70R15 DS    F        COUNT OF TIMES READY VALUE WAS 14+              03-ERBSMF70\n 00000048                                   69269+SMF70IMN DS    H        IN USERS MINIMUM OVER INTERVAL                  03-ERBSMF70\n 0000004A                                   69270+SMF70IMM DS    H        IN USERS MAXIMUM OVER INTERVAL                  03-ERBSMF70\n 0000004C                                   69271+SMF70ITT DS    F        IN USERS TOTAL VALUE OVER INTERVAL              03-ERBSMF70\n 00000050                                   69272+SMF70I00 DS    F        COUNT OF TIMES IN USERS WAS 0                   03-ERBSMF70\n 00000054                                   69273+SMF70I01 DS    F        COUNT OF TIMES IN USERS WAS 1-2                 03-ERBSMF70\n 00000058                                   69274+SMF70I02 DS    F        COUNT OF TIMES IN USERS WAS 3-4                 03-ERBSMF70\n 0000005C                                   69275+SMF70I03 DS    F        COUNT OF TIMES IN USERS WAS 5-6                 03-ERBSMF70\n 00000060                                   69276+SMF70I04 DS    F        COUNT OF TIMES IN USERS WAS 7-8                 03-ERBSMF70\n 00000064                                   69277+SMF70I05 DS    F        COUNT OF TIMES IN USERS WAS 9-10                03-ERBSMF70\n 00000068                                   69278+SMF70I06 DS    F        COUNT OF TIMES IN USERS WAS 11-15               03-ERBSMF70\n 0000006C                                   69279+SMF70I07 DS    F        COUNT OF TIMES IN USERS WAS 16-20               03-ERBSMF70\n 00000070                                   69280+SMF70I08 DS    F        COUNT OF TIMES IN USERS WAS 21-25               03-ERBSMF70\n 00000074                                   69281+SMF70I09 DS    F        COUNT OF TIMES IN USERS WAS 26-30               03-ERBSMF70\n 00000078                                   69282+SMF70I10 DS    F        COUNT OF TIMES IN USERS WAS 31-35               03-ERBSMF70\n 0000007C                                   69283+SMF70I11 DS    F        COUNT OF TIMES IN USERS WAS 35+                 03-ERBSMF70\n 00000080                                   69284+SMF70OMN DS    H        OUT USERS MINIMUM OVER INTERVAL                 03-ERBSMF70\n 00000082                                   69285+SMF70OMM DS    H        OUT USERS MAXIMUM OVER INTERVAL                 03-ERBSMF70\n 00000084                                   69286+SMF70OTT DS    F        OUT USERS TOTAL VALUE OVER INTERVAL             03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  355\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000088                                   69287+SMF70O00 DS    F        COUNT OF TIMES OUT USERS WAS 0                  03-ERBSMF70\n 0000008C                                   69288+SMF70O01 DS    F        COUNT OF TIMES OUT USERS WAS 1-2                03-ERBSMF70\n 00000090                                   69289+SMF70O02 DS    F        COUNT OF TIMES OUT USERS WAS 3-4                03-ERBSMF70\n 00000094                                   69290+SMF70O03 DS    F        COUNT OF TIMES OUT USERS WAS 5-6                03-ERBSMF70\n 00000098                                   69291+SMF70O04 DS    F        COUNT OF TIMES OUT USERS WAS 7-8                03-ERBSMF70\n 0000009C                                   69292+SMF70O05 DS    F        COUNT OF TIMES OUT USERS WAS 9-10               03-ERBSMF70\n 000000A0                                   69293+SMF70O06 DS    F        COUNT OF TIMES OUT USERS WAS 11-15              03-ERBSMF70\n 000000A4                                   69294+SMF70O07 DS    F        COUNT OF TIMES OUT USERS WAS 16-20              03-ERBSMF70\n 000000A8                                   69295+SMF70O08 DS    F        COUNT OF TIMES OUT USERS WAS 21-25              03-ERBSMF70\n 000000AC                                   69296+SMF70O09 DS    F        COUNT OF TIMES OUT USERS WAS 26-30              03-ERBSMF70\n 000000B0                                   69297+SMF70O10 DS    F        COUNT OF TIMES OUT USERS WAS 31-35              03-ERBSMF70\n 000000B4                                   69298+SMF70O11 DS    F        COUNT OF TIMES OUT USERS WAS 35+                03-ERBSMF70\n 000000B8                                   69299+SMF70WMN DS    H        WAIT USERS MINIMUM OVER INTERVAL                03-ERBSMF70\n 000000BA                                   69300+SMF70WMM DS    H        WAIT USERS MAXIMUM OVER INTERVAL                03-ERBSMF70\n 000000BC                                   69301+SMF70WTT DS    F        WAIT USERS TOTAL VALUE OVER INTERVAL            03-ERBSMF70\n 000000C0                                   69302+SMF70W00 DS    F        COUNT OF TIMES WAIT USERS WAS 0                 03-ERBSMF70\n 000000C4                                   69303+SMF70W01 DS    F        COUNT OF TIMES WAIT USERS WAS 1-2               03-ERBSMF70\n 000000C8                                   69304+SMF70W02 DS    F        COUNT OF TIMES WAIT USERS WAS 3-4               03-ERBSMF70\n 000000CC                                   69305+SMF70W03 DS    F        COUNT OF TIMES WAIT USERS WAS 5-6               03-ERBSMF70\n 000000D0                                   69306+SMF70W04 DS    F        COUNT OF TIMES WAIT USERS WAS 7-8               03-ERBSMF70\n 000000D4                                   69307+SMF70W05 DS    F        COUNT OF TIMES WAIT USERS WAS 9-10              03-ERBSMF70\n 000000D8                                   69308+SMF70W06 DS    F        COUNT OF TIMES WAIT USERS WAS 11-15             03-ERBSMF70\n 000000DC                                   69309+SMF70W07 DS    F        COUNT OF TIMES WAIT USERS WAS 16-20             03-ERBSMF70\n 000000E0                                   69310+SMF70W08 DS    F        COUNT OF TIMES WAIT USERS WAS 21-25             03-ERBSMF70\n 000000E4                                   69311+SMF70W09 DS    F        COUNT OF TIMES WAIT USERS WAS 26-30             03-ERBSMF70\n 000000E8                                   69312+SMF70W10 DS    F        COUNT OF TIMES WAIT USERS WAS 31-35             03-ERBSMF70\n 000000EC                                   69313+SMF70W11 DS    F        COUNT OF TIMES WAIT USERS WAS 35+               03-ERBSMF70\n 000000F0                                   69314+SMF70BMN DS    H        BATCH USERS MINIMUM OVER INTERVAL               03-ERBSMF70\n 000000F2                                   69315+SMF70BMM DS    H        BATCH USERS MAXIMUM OVER INTERVAL               03-ERBSMF70\n 000000F4                                   69316+SMF70BTT DS    F        BATCH USERS TOTAL VALUE OVER INTERVAL           03-ERBSMF70\n 000000F8                                   69317+SMF70B00 DS    F        COUNT OF TIMES BATCH USERS WAS 0                03-ERBSMF70\n 000000FC                                   69318+SMF70B01 DS    F        COUNT OF TIMES BATCH USERS WAS 1-2              03-ERBSMF70\n 00000100                                   69319+SMF70B02 DS    F        COUNT OF TIMES BATCH USERS WAS 3-4              03-ERBSMF70\n 00000104                                   69320+SMF70B03 DS    F        COUNT OF TIMES BATCH USERS WAS 5-6              03-ERBSMF70\n 00000108                                   69321+SMF70B04 DS    F        COUNT OF TIMES BATCH USERS WAS 7-8              03-ERBSMF70\n 0000010C                                   69322+SMF70B05 DS    F        COUNT OF TIMES BATCH USERS WAS 9-10             03-ERBSMF70\n 00000110                                   69323+SMF70B06 DS    F        COUNT OF TIMES BATCH USERS WAS 11-15            03-ERBSMF70\n 00000114                                   69324+SMF70B07 DS    F        COUNT OF TIMES BATCH USERS WAS 16-20            03-ERBSMF70\n 00000118                                   69325+SMF70B08 DS    F        COUNT OF TIMES BATCH USERS WAS 21-25            03-ERBSMF70\n 0000011C                                   69326+SMF70B09 DS    F        COUNT OF TIMES BATCH USERS WAS 26-30            03-ERBSMF70\n 00000120                                   69327+SMF70B10 DS    F        COUNT OF TIMES BATCH USERS WAS 31-35            03-ERBSMF70\n 00000124                                   69328+SMF70B11 DS    F        COUNT OF TIMES BATCH USERS WAS 35+              03-ERBSMF70\n 00000128                                   69329+SMF70SMN DS    H        STARTED USERS MINIMUM OVER INTERVAL             03-ERBSMF70\n 0000012A                                   69330+SMF70SMM DS    H        STARTED USERS MAXIMUM OVER INTERVAL             03-ERBSMF70\n 0000012C                                   69331+SMF70STT DS    F        STARTED USERS TOTAL VALUE OVER INTERVAL         03-ERBSMF70\n 00000130                                   69332+SMF70S00 DS    F        COUNT OF TIMES STARTED USERS WAS 0              03-ERBSMF70\n 00000134                                   69333+SMF70S01 DS    F        COUNT OF TIMES STARTED USERS WAS 1-2            03-ERBSMF70\n 00000138                                   69334+SMF70S02 DS    F        COUNT OF TIMES STARTED USERS WAS 3-4            03-ERBSMF70\n 0000013C                                   69335+SMF70S03 DS    F        COUNT OF TIMES STARTED USERS WAS 5-6            03-ERBSMF70\n 00000140                                   69336+SMF70S04 DS    F        COUNT OF TIMES STARTED USERS WAS 7-8            03-ERBSMF70\n 00000144                                   69337+SMF70S05 DS    F        COUNT OF TIMES STARTED USERS WAS 9-10           03-ERBSMF70\n 00000148                                   69338+SMF70S06 DS    F        COUNT OF TIMES STARTED USERS WAS 11-15          03-ERBSMF70\n 0000014C                                   69339+SMF70S07 DS    F        COUNT OF TIMES STARTED USERS WAS 16-20          03-ERBSMF70\n 00000150                                   69340+SMF70S08 DS    F        COUNT OF TIMES STARTED USERS WAS 21-25          03-ERBSMF70\n 00000154                                   69341+SMF70S09 DS    F        COUNT OF TIMES STARTED USERS WAS 26-30          03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  356\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000158                                   69342+SMF70S10 DS    F        COUNT OF TIMES STARTED USERS WAS 31-35          03-ERBSMF70\n 0000015C                                   69343+SMF70S11 DS    F        COUNT OF TIMES STARTED USERS WAS 35+            03-ERBSMF70\n 00000160                                   69344+SMF70TMN DS    H        TSO USERS MINIMUM OVER INTERVAL                 03-ERBSMF70\n 00000162                                   69345+SMF70TMM DS    H        TSO USERS MAXIMUM OVER INTERVAL                 03-ERBSMF70\n 00000164                                   69346+SMF70TTT DS    F        TSO USERS TOTAL VALUE OVER INTERVAL             03-ERBSMF70\n 00000168                                   69347+SMF70T00 DS    F        COUNT OF TIMES TSO USERS WAS 0                  03-ERBSMF70\n 0000016C                                   69348+SMF70T01 DS    F        COUNT OF TIMES TSO USERS WAS 1-2                03-ERBSMF70\n 00000170                                   69349+SMF70T02 DS    F        COUNT OF TIMES TSO USERS WAS 3-4                03-ERBSMF70\n 00000174                                   69350+SMF70T03 DS    F        COUNT OF TIMES TSO USERS WAS 5-6                03-ERBSMF70\n 00000178                                   69351+SMF70T04 DS    F        COUNT OF TIMES TSO USERS WAS 7-8                03-ERBSMF70\n 0000017C                                   69352+SMF70T05 DS    F        COUNT OF TIMES TSO USERS WAS 9-10               03-ERBSMF70\n 00000180                                   69353+SMF70T06 DS    F        COUNT OF TIMES TSO USERS WAS 11-15              03-ERBSMF70\n 00000184                                   69354+SMF70T07 DS    F        COUNT OF TIMES TSO USERS WAS 16-20              03-ERBSMF70\n 00000188                                   69355+SMF70T08 DS    F        COUNT OF TIMES TSO USERS WAS 21-25              03-ERBSMF70\n 0000018C                                   69356+SMF70T09 DS    F        COUNT OF TIMES TSO USERS WAS 26-30              03-ERBSMF70\n 00000190                                   69357+SMF70T10 DS    F        COUNT OF TIMES TSO USERS WAS 31-35              03-ERBSMF70\n 00000194                                   69358+SMF70T11 DS    F        COUNT OF TIMES TSO USERS WAS 35+                03-ERBSMF70\n 00000198                                   69359+SMF70LMN DS    H        LOGICAL RDY USERS MINIMUM                       03-ERBSMF70\n 0000019A                                   69360+SMF70LMM DS    H        LOGICAL RDY USERS MAXIMUM                       03-ERBSMF70\n 0000019C                                   69361+SMF70LTT DS    F        LOGICAL RDY USERS TOTAL                         03-ERBSMF70\n 000001A0                                   69362+SMF70L00 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 0          03-ERBSMF70\n 000001A4                                   69363+SMF70L01 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 1-2        03-ERBSMF70\n 000001A8                                   69364+SMF70L02 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 3-4        03-ERBSMF70\n 000001AC                                   69365+SMF70L03 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 5-6        03-ERBSMF70\n 000001B0                                   69366+SMF70L04 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 7-8        03-ERBSMF70\n 000001B4                                   69367+SMF70L05 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 9-10       03-ERBSMF70\n 000001B8                                   69368+SMF70L06 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 11-15      03-ERBSMF70\n 000001BC                                   69369+SMF70L07 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 16-20      03-ERBSMF70\n 000001C0                                   69370+SMF70L08 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 21-25      03-ERBSMF70\n 000001C4                                   69371+SMF70L09 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 26-30      03-ERBSMF70\n 000001C8                                   69372+SMF70L10 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 31-35      03-ERBSMF70\n 000001CC                                   69373+SMF70L11 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 35+        03-ERBSMF70\n 000001D0                                   69374+SMF70AMN DS    H        LOGICAL WAIT USERS MINIMUM                      03-ERBSMF70\n 000001D2                                   69375+SMF70AMM DS    H        LOGICAL WAIT USERS MAXIMUM                      03-ERBSMF70\n 000001D4                                   69376+SMF70ATT DS    F        LOGICAL WAIT USERS TOTAL                        03-ERBSMF70\n 000001D8                                   69377+SMF70A00 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 0         03-ERBSMF70\n 000001DC                                   69378+SMF70A01 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 1-2       03-ERBSMF70\n 000001E0                                   69379+SMF70A02 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 3-4       03-ERBSMF70\n 000001E4                                   69380+SMF70A03 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 5-6       03-ERBSMF70\n 000001E8                                   69381+SMF70A04 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 7-8       03-ERBSMF70\n 000001EC                                   69382+SMF70A05 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 9-10      03-ERBSMF70\n 000001F0                                   69383+SMF70A06 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 11-15     03-ERBSMF70\n 000001F4                                   69384+SMF70A07 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 16-20     03-ERBSMF70\n 000001F8                                   69385+SMF70A08 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 21-25     03-ERBSMF70\n 000001FC                                   69386+SMF70A09 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 26-30     03-ERBSMF70\n 00000200                                   69387+SMF70A10 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 31-35     03-ERBSMF70\n 00000204                                   69388+SMF70A11 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 35+       03-ERBSMF70\n 00000208                                   69389+SMF70PMN DS    H        ASCH USERS MINIMUM                              03-ERBSMF70\n 0000020A                                   69390+SMF70PMM DS    H        ASCH USERS MAXIMUM                              03-ERBSMF70\n 0000020C                                   69391+SMF70PTT DS    F        ASCH USERS TOTAL                                03-ERBSMF70\n 00000210                                   69392+SMF70P00 DS    F        COUNT OF TIMES ASCH USERS WAS 0                 03-ERBSMF70\n 00000214                                   69393+SMF70P01 DS    F        COUNT OF TIMES ASCH USERS WAS 1-2               03-ERBSMF70\n 00000218                                   69394+SMF70P02 DS    F        COUNT OF TIMES ASCH USERS WAS 3-4               03-ERBSMF70\n 0000021C                                   69395+SMF70P03 DS    F        COUNT OF TIMES ASCH USERS WAS 5-6               03-ERBSMF70\n 00000220                                   69396+SMF70P04 DS    F        COUNT OF TIMES ASCH USERS WAS 7-8               03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  357\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000224                                   69397+SMF70P05 DS    F        COUNT OF TIMES ASCH USERS WAS 9-10              03-ERBSMF70\n 00000228                                   69398+SMF70P06 DS    F        COUNT OF TIMES ASCH USERS WAS 11-15             03-ERBSMF70\n 0000022C                                   69399+SMF70P07 DS    F        COUNT OF TIMES ASCH USERS WAS 16-20             03-ERBSMF70\n 00000230                                   69400+SMF70P08 DS    F        COUNT OF TIMES ASCH USERS WAS 21-25             03-ERBSMF70\n 00000234                                   69401+SMF70P09 DS    F        COUNT OF TIMES ASCH USERS WAS 26-30             03-ERBSMF70\n 00000238                                   69402+SMF70P10 DS    F        COUNT OF TIMES ASCH USERS WAS 31-35             03-ERBSMF70\n 0000023C                                   69403+SMF70P11 DS    F        COUNT OF TIMES ASCH USERS WAS 35+               03-ERBSMF70\n 00000240                                   69404+SMF70XMN DS    H        OMVS USERS MINIMUM                              03-ERBSMF70\n 00000242                                   69405+SMF70XMM DS    H        OMVS USERS MAXIMUM                              03-ERBSMF70\n 00000244                                   69406+SMF70XTT DS    F        OMVS USERS TOTAL                                03-ERBSMF70\n 00000248                                   69407+SMF70X00 DS    F        COUNT OF TIMES OMVS USERS WAS 0                 03-ERBSMF70\n 0000024C                                   69408+SMF70X01 DS    F        COUNT OF TIMES OMVS USERS WAS 1-2               03-ERBSMF70\n 00000250                                   69409+SMF70X02 DS    F        COUNT OF TIMES OMVS USERS WAS 3-4               03-ERBSMF70\n 00000254                                   69410+SMF70X03 DS    F        COUNT OF TIMES OMVS USERS WAS 5-6               03-ERBSMF70\n 00000258                                   69411+SMF70X04 DS    F        COUNT OF TIMES OMVS USERS WAS 7-8               03-ERBSMF70\n 0000025C                                   69412+SMF70X05 DS    F        COUNT OF TIMES OMVS USERS WAS 9-10              03-ERBSMF70\n 00000260                                   69413+SMF70X06 DS    F        COUNT OF TIMES OMVS USERS WAS 11-15             03-ERBSMF70\n 00000264                                   69414+SMF70X07 DS    F        COUNT OF TIMES OMVS USERS WAS 16-20             03-ERBSMF70\n 00000268                                   69415+SMF70X08 DS    F        COUNT OF TIMES OMVS USERS WAS 21-25             03-ERBSMF70\n 0000026C                                   69416+SMF70X09 DS    F        COUNT OF TIMES OMVS USERS WAS 26-30             03-ERBSMF70\n 00000270                                   69417+SMF70X10 DS    F        COUNT OF TIMES OMVS USERS WAS 31-35             03-ERBSMF70\n 00000274                                   69418+SMF70X11 DS    F        COUNT OF TIMES OMVS USERS WAS 35+               03-ERBSMF70\n 00000278                                   69419+SMF70Q00 DS    F        Count of times In Ready was <= N while N is     03-ERBSMF70\n                                            69420+*                       the number of processors being online when\n                                            69421+*                       the sample was taken. With HiperDispatch\n                                            69422+*                       active and an SMF record level SMF70SRL >= 55\n                                            69423+*                       (x85), N is the number of processors being\n                                            69424+*                       online and not parked when the sample was\n                                            69425+*                       taken                                  @OA21140\n 0000027C                                   69426+SMF70Q01 DS    F        Count of times In Ready was N+1            @L2A 03-ERBSMF70\n 00000280                                   69427+SMF70Q02 DS    F        Count of times In Ready was N+2            @L2A 03-ERBSMF70\n 00000284                                   69428+SMF70Q03 DS    F        Count of times In Ready was N+3            @L2A 03-ERBSMF70\n 00000288                                   69429+SMF70Q04 DS    F        Count of times In Ready was N+4 or N+5     @L2A 03-ERBSMF70\n 0000028C                                   69430+SMF70Q05 DS    F        Count of times In Ready was N+6 to N+10    @L2A 03-ERBSMF70\n 00000290                                   69431+SMF70Q06 DS    F        Count of times In Ready was N+11 to N+15   @L2A 03-ERBSMF70\n 00000294                                   69432+SMF70Q07 DS    F        Count of times In Ready was N+16 to N+20   @L2A 03-ERBSMF70\n 00000298                                   69433+SMF70Q08 DS    F        Count of times In Ready was N+21 to N+30   @L2A 03-ERBSMF70\n 0000029C                                   69434+SMF70Q09 DS    F        Count of times In Ready was N+31 to N+40   @L2A 03-ERBSMF70\n 000002A0                                   69435+SMF70Q10 DS    F        Count of times In Ready was N+41 to N+60   @L2A 03-ERBSMF70\n 000002A4                                   69436+SMF70Q11 DS    F        Count of times In Ready was N+61 to N+80   @L2A 03-ERBSMF70\n 000002A8                                   69437+SMF70Q12 DS    F        Count of times In Ready was > N+80         @L2A 03-ERBSMF70\n                                            69438+*\n 000002AC                                   69439+SMF70SRM DS    F        Number of SRM samples for WEB calculation  @41A 03-ERBSMF70\n 000002B0                                   69440+SMF70CMN DS    F        General purpose processors minimum         @41A 03-ERBSMF70\n 000002B4                                   69441+SMF70CMM DS    F        General purpose processors maximum         @41A 03-ERBSMF70\n 000002B8                                   69442+SMF70CTT DS    F        General purpose processors total           @41A 03-ERBSMF70\n 000002BC                                   69443+SMF70DMN DS    F        AAP processors minimum                     @41A 03-ERBSMF70\n 000002C0                                   69444+SMF70DMM DS    F        AAP processors maximum                     @41A 03-ERBSMF70\n 000002C4                                   69445+SMF70DTT DS    F        AAP processors total                       @41A 03-ERBSMF70\n 000002C8                                   69446+SMF70EMN DS    F        IIP processors minimum                     @41A 03-ERBSMF70\n 000002CC                                   69447+SMF70EMM DS    F        IIP processors maximum                     @41A 03-ERBSMF70\n 000002D0                                   69448+SMF70ETT DS    F        IIP processors total                       @41A 03-ERBSMF70\n                                            69449+*\n 000002D4                                   69450+SMF70U00 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69451+*                       was <= N,\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  358\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69452+*                       N is the number of processors being online\n                                            69453+*                       and not parked when the sample was taken\n                                            69454+*                                                                  @41A\n 000002D8                                   69455+SMF70U01 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69456+*                       was N+1                                    @41A\n 000002DC                                   69457+SMF70U02 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69458+*                       was N+2                                    @41A\n 000002E0                                   69459+SMF70U03 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69460+*                       was N+3                                    @41A\n 000002E4                                   69461+SMF70U04 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69462+*                       was N+4 or N+5                             @41A\n 000002E8                                   69463+SMF70U05 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69464+*                       was N+6 to N+10                            @41A\n 000002EC                                   69465+SMF70U06 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69466+*                       was N+11 to N+15                           @41A\n 000002F0                                   69467+SMF70U07 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69468+*                       was N+16 to N+20                           @41A\n 000002F4                                   69469+SMF70U08 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69470+*                       was N+21 to N+30                           @41A\n 000002F8                                   69471+SMF70U09 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69472+*                       was N+31 to N+40                           @41A\n 000002FC                                   69473+SMF70U10 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69474+*                       was N+41 to N+60                           @41A\n 00000300                                   69475+SMF70U11 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69476+*                       was N+61 to N+80                           @41A\n 00000304                                   69477+SMF70U12 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69478+*                       was N+81 to N+100                          @41A\n 00000308                                   69479+SMF70U13 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69480+*                       was N+101 to N+120                         @41A\n 0000030C                                   69481+SMF70U14 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69482+*                       was N+121 to N+150                         @41A\n 00000310                                   69483+SMF70U15 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            69484+*                       was > N+150                                @41A\n-\n                                            69486+**********  PR/SM PARTITION DATA SECTION     **************************\n 00000000                00000000 00000048  69487+SMF70BCT DSECT                                                          03-ERBSMF70\n 00000000                                   69488+SMF70BPC DS    0CL72                                               @I3C 03-ERBSMF70\n 00000000                                   69489+SMF70LPM DS    CL8      Logical Partition name                          03-ERBSMF70\n 00000008                                   69490+SMF70LPN DS    CL1      Logical Partition number                        03-ERBSMF70\n 00000009                                   69491+SMF70PFG DS    CL1      Partition flags                                 03-ERBSMF70\n                         00000080           69492+SMF70PDV EQU   X'80'    Partition deactivated during interval           03-ERBSMF70\n                         00000040           69493+SMF70NVC EQU   X'40'    Number of logical procrs has changed            03-ERBSMF70\n                         00000020           69494+SMF70NDC EQU   X'20'    Number of dedicated procrs has changed     @H1A 03-ERBSMF70\n                         00000010           69495+SMF70NSC EQU   X'10'    Number of shared procrs has changed        @H1A 03-ERBSMF70\n                         00000008           69496+SMF70WLM EQU   X'08'    WLM LPAR Management is active for this          03-ERBSMF70\n                                            69497+*                       partition                                  @I3A\n                         00000004           69498+SMF70WTF EQU   X'04'    Wait Time field is defined             @WA46477 03-ERBSMF70\n                         00000002           69499+SMF70MSC EQU   X'02'    Defined capacity limit has been changed    @K2C 03-ERBSMF70\n                         00000001           69500+SMF70MSF EQU   X'01'    No longer used                             @L4C 03-ERBSMF70\n 0000000A                                   69501+SMF70BDN DS    CL2      Number of logical CPUs assigned to this         03-ERBSMF70\n                                            69502+*                       partition. This count matches the number\n                                            69503+*                       of subsequent PR/SM data sections          @I3C\n 0000000C                                   69504+SMF70BDS DS    CL4      Start of data section block number              03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  359\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000010                                   69505+SMF70BDA DS    CL4      Accumulated number of logical CPUs active for   03-ERBSMF70\n                                            69506+*                       this partition.                        @WA46477\n 00000014                                   69507+SMF70SPN DS    CL8      Name of the logical-partition cluster. Zeros    03-ERBSMF70\n                                            69508+*                       if this partition is no cluster member. For\n                                            69509+*                       z/OS, the LPAR cluster name is the sysplex\n                                            69510+*                       name. For any other logical partition, the\n                                            69511+*                       LPAR cluster name is the name provided in the\n                                            69512+*                       HMC definition of this logical partition.  @02C\n 0000001C                                   69513+SMF70STN DS    CL8      Name of the operating-system instance. Zeros    03-ERBSMF70\n                                            69514+*                       if no name declared for this partition.    @02C\n 00000024                                   69515+         DS    CL4      Reserved                                   @I3A 03-ERBSMF70\n 00000028                                   69516+SMF70CSF DS    CL4      Number of megabytes of central storage          03-ERBSMF70\n                                            69517+*                       currently online to this partition     @WA55906\n 0000002C                                   69518+         DS    CL4      Reserved                                   @I3A 03-ERBSMF70\n 00000030                                   69519+SMF70ESF DS    CL4      Number of megabytes of expanded storage         03-ERBSMF70\n                                            69520+*                       currently online to this partition     @WA55906\n 00000034                                   69521+SMF70MSU DS    CL4      Defined capacity limit (in millions             03-ERBSMF70\n                                            69522+*                       of service units) that a logical partition\n                                            69523+*                       may consume per unit time on average\n                                            69524+*                       (extended mode only)                   @WA46477\n 00000038                                   69525+SMF70PFL DS    CL2      Additional partition flags             @OA10346 03-ERBSMF70\n                         00008000           69526+SMF70UVF EQU   X'8000'  Content of SMF70UPI is valid           @OA10346 03-ERBSMF70\n                         00004000           69527+SMF70GRP EQU   X'4000'  Group flag. This partition is member            03-ERBSMF70\n                                            69528+*                       of a capacity group.                       @01A\n                         00002000           69529+SMF70PWF EQU   X'2000'  Polarization flag. This partition is            03-ERBSMF70\n                                            69530+*                       vertically polarized. That is, HiperDispatch\n                                            69531+*                       mode is active. The SMF70POW fields in the\n                                            69532+*                       logical processor data section are valid for\n                                            69533+*                       CPUs of this partition.                    @11A\n 0000003A                                   69534+SMF70UPI DS    BL1      User partition ID. Valid if bit 0          @33C 03-ERBSMF70\n                                            69535+*                       (SMF70UVF) of SMF70PFL is set          @OA10346\n 0000003B                                   69536+         DS    CL1      Reserved                                   @01C 03-ERBSMF70\n 0000003C                                   69537+SMF70GNM DS    CL8      Name of the capacity group this partition       03-ERBSMF70\n                                            69538+*                       belongs to. Valid if bit 1 (SMF70GRP) of\n                                            69539+*                       SMF70PFL is ON                             @01A\n 00000044                                   69540+SMF70GMU DS    CL4      Group maximum licensing units.                  03-ERBSMF70\n                                            69541+*                       The maximum number of processor licensing\n                                            69542+*                       units for the group of logical partitions\n                                            69543+*                       identified by having the same group name, of\n                                            69544+*                       which this partition is a member, and which\n                                            69545+*                       may be consumed per unit of time, on average.\n                                            69546+*                       Valid if bit 1 (SMF70GRP) of SMF70PFL is ON.\n                                            69547+*                                                                  @01A\n-\n                                            69549+*************  PR/SM LOGICAL PROCESSOR DATA SECTION  ******************\n 00000000                00000000 00000050  69550+SMF70BPD DSECT                                                          03-ERBSMF70\n 00000000                                   69551+SMF70PDT DS    CL8     Logical processor total dispatch time            03-ERBSMF70\n 00000008                                   69552+SMF70VPA DS    CL2     Logical processor address                        03-ERBSMF70\n 0000000A                                   69553+SMF70BPS DS    CL2     Processor relative share                         03-ERBSMF70\n 0000000C                                   69554+SMF70VPF DS    CL1     Logical processor flags                          03-ERBSMF70\n                         00000080           69555+SMF70WSA EQU   X'80'   Wait Completion state enabled                    03-ERBSMF70\n                         00000040           69556+SMF70WSC EQU   X'40'   Wait Completion state changed during interval    03-ERBSMF70\n                         00000020           69557+SMF70RSC EQU   X'20'   Relative share changed during interval           03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  360\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        00000010           69558+SMF70CAP EQU   X'10'   Partition Capping Flag.  Capped=yes in           03-ERBSMF70\n                                            69559+*                      logical partition controls\n                         00000008           69560+SMF70CPC EQU   X'08'   Partition Capping option changed during          03-ERBSMF70\n                                            69561+*                      the measurement interval\n                         00000004           69562+SMF70LPO EQU   X'04'   Logical processor varied online during           03-ERBSMF70\n                                            69563+*                      the measurement interval\n 0000000D                                   69564+SMF70POF DS    BL1     Polarization flags                      @OA21140 03-ERBSMF70\n                         000000C0           69565+SMF70POI EQU   X'C0'   Polarization indicator (2 bits)         @OA21140 03-ERBSMF70\n                                            69566+*                      00 = Horizontally polarized or          @OA21140\n                                            69567+*                           polarization not indicated         @OA21140\n                                            69568+*                      01 = Vertically polarized with          @OA21140\n                                            69569+*                           low entitlement                    @OA21140\n                                            69570+*                      10 = Vertically polarized with          @OA21140\n                                            69571+*                           medium entitilement                @OA21140\n                                            69572+*                      11 = Vertically polarized with          @OA21140\n                                            69573+*                           high entitlement                   @OA21140\n                         00000020           69574+SMF70POC EQU   X'20'   Polarization indication changed during  @OA21140 03-ERBSMF70\n                                            69575+*                      the interval                            @OA21140\n 0000000E                                   69576+SMF70CIX DS    BL2     Index to the CPU-identification name section     03-ERBSMF70\n                                            69577+*                      that contains the EBCDIC name corresponding\n                                            69578+*                      to the CPU type of the logical processor    @I1C\n 00000010                                   69579+SMF70EDT DS    CL8     Logical processor effective dispatch time        03-ERBSMF70\n 00000018                                   69580+SMF70ACS DS    CL4     Accumulated processor actual share      @WA46477 03-ERBSMF70\n 0000001C                                   69581+SMF70MIS DS    CL2     Processor minimum share                     @I3A 03-ERBSMF70\n 0000001E                                   69582+SMF70MAS DS    CL2     Processor maximum share                     @I3A 03-ERBSMF70\n 00000020                                   69583+SMF70NSI DS    CL4     Number of Diagnose samples within the            03-ERBSMF70\n                                            69584+*                      specified minimum (+10%)                @WA46477\n 00000024                                   69585+SMF70NSA DS    CL4     Number of Diagnose samples within the            03-ERBSMF70\n                                            69586+*                      specified maximum (-10%)                @WA46477\n 00000028                                   69587+SMF70ONT DS    CL8     Logical processor online time               @I3A 03-ERBSMF70\n 00000030                                   69588+SMF70WST DS    CL8     Logical processor wait state time           @I3A 03-ERBSMF70\n 00000038                                   69589+SMF70PMA DS    CL4     Average pricing management adjustment weight     03-ERBSMF70\n                                            69590+*                                                              @WA46477\n 0000003C                                   69591+SMF70NSW DS    CL4     Number of Diagnose samples where WLM             03-ERBSMF70\n                                            69592+*                      considers to cap the set of logical CPUs\n                                            69593+*                      of type SMF70CIX within the logical partition\n                                            69594+*                      (see also SMF70NCA)                         @34C\n 00000040                                   69595+SMF70POW DS    CL4     Weight for the logical CPU when HiperDispatch    03-ERBSMF70\n                                            69596+*                      mode is active. See bit 2 (SMF70PWF) of\n                                            69597+*                      SMF70PFL. Multiplied by a factor of 4096\n                                            69598+*                      for more granularity. The value may be the\n                                            69599+*                      same or different for all shared CPUs of\n                                            69600+*                      type SMF70CIX.\n                                            69601+*                      This is an accumulated value. Divide by the\n                                            69602+*                      number of Diagnose samples SMF70DSA to get\n                                            69603+*                      the average weight value for the interval.  @11A\n 00000044                                   69604+SMF70NCA DS    F       Number of Diagnose samples where capping         03-ERBSMF70\n                                            69605+*                      actually limited the usage of processor\n                                            69606+*                      resources for the set of logical CPUs of\n                                            69607+*                      type SMF70CIX within the logical partition. @34A\n 00000048                                   69608+         DS    CL8     Reserved                                    @34C 03-ERBSMF70\n                                            69609+*************  CPU-IDENTIFICATION NAME SECTION ************************\n 00000000                00000000 00000018  69610+SMF70CIS DSECT                                                          03-ERBSMF70\n 00000000                                   69611+SMF70CIN DS    CL16    CPU-identification name                     @I1A 03-ERBSMF70\n 00000010                                   69612+SMF70CTN DS    BL2     Number of physical CPUs of this type             03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  361\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69613+*                      at interval end                             @11C\n 00000012                                   69614+         DS    CL2     Reserved                                @OA13499 03-ERBSMF70\n 00000014                                   69615+SMF70CAN DS    F       Accumulated number of physical CPUs.             03-ERBSMF70\n                                            69616+*                      Divide by SMF70DSA to get the average\n                                            69617+*                      number of physical CPUs of this type\n                                            69618+*                      applicable during the interval.             @11A\n-\n-\n                                            69621+**********************  Crypto Data Section for Subtype 2  ******* @J1A\n                                            69622+**************** Cryptographic Coprocessor Section ********************\n-\n 00000000                00000000 00000030  69624+R702TYP3 DSECT                                                          03-ERBSMF70\n 00000000                                   69625+R7023AX  DS    CL1      Crypto processor index                     @J1A 03-ERBSMF70\n 00000001                                   69626+R7023CT  DS    CL1      Crypto processor type                      @J1A 03-ERBSMF70\n                                            69627+*                       3 = PCICC\n                                            69628+*                       5 = PCIXCC\n                                            69629+*                       7 = CEX2C\n                                            69630+*                       9 = CEX3C                              @OA28670\n 00000002                                   69631+         DS    CL6      Reserved                                   @J1A 03-ERBSMF70\n 00000008                                   69632+R7023SF  DS    CL8      Scaling factor for the indicating               03-ERBSMF70\n                                            69633+*                       crypto coprocessor\n                                            69634+*                       (long floating point)                      @K1C\n 00000010                                   69635+R7023T0  DS    CL8      Execution time of all operations on the         03-ERBSMF70\n                                            69636+*                       specified crypto coprocessor\n                                            69637+*                       (long floating point)                      @K1C\n 00000018                                   69638+R7023C0  DS    CL8      Execution number of all operations on the       03-ERBSMF70\n                                            69639+*                       specified crypto coprocessor\n                                            69640+*                       (long floating point)                      @K1C\n 00000020                                   69641+         DS    CL8      Reserved                                   @J1C 03-ERBSMF70\n 00000028                                   69642+R7023C1  DS    CL8      Execution number of RSA-key-genaration          03-ERBSMF70\n                                            69643+*                       (long floating point)                      @J1A\n-\n                                            69645+**************** Cryptographic Accelerator Section ********************\n-\n 00000000                00000000 00000170  69647+R702TYP4 DSECT                                                     @J1A 03-ERBSMF70\n 00000000                                   69648+R7024AX  DS    CL1      Crypto processor index                     @J1A 03-ERBSMF70\n 00000001                                   69649+R7024CT  DS    CL1      Crypto processor type                      @J1A 03-ERBSMF70\n                                            69650+*                       4 = PCICA\n                                            69651+*                       6 = CEX2A\n                                            69652+*                       8 = CEX3A                              @OA28670\n 00000002                                   69653+R7024MSK DS    CL1      Validity bit mask. Each bit position   @OA31349 03-ERBSMF70\n                                            69654+*                       represents the validity of a timer-\n                                            69655+*                       counter pair that measures the execution\n                                            69656+*                       time and number of operations on a\n                                            69657+*                       cryptographic accelerator card for a\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  362\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69658+*                       certain type of RSA operations\n                         00000080           69659+R7021KM  EQU   X'80'    1024-bit ME-format RSA operations      @OA31349 03-ERBSMF70\n                         00000040           69660+R7022KM  EQU   X'40'    2048-bit ME-format RSA operations      @OA31349 03-ERBSMF70\n                         00000020           69661+R7021KC  EQU   X'20'    1024-bit CRT-format RSA operations     @OA31349 03-ERBSMF70\n                         00000010           69662+R7022KC  EQU   X'10'    2048-bit CRT-format RSA operations     @OA31349 03-ERBSMF70\n                         00000008           69663+R7023KM  EQU   X'08'    4096-bit ME-format RSA operations      @OA31349 03-ERBSMF70\n                         00000004           69664+R7023KC  EQU   X'04'    4096-bit CRT-format RSA operations     @OA31349 03-ERBSMF70\n 00000003                                   69665+         DS    CL1      Reserved                               @OA31349 03-ERBSMF70\n 00000004                                   69666+R7024EN  DS    CL4      Number of engines. This is the number of   @K1A 03-ERBSMF70\n                                            69667+*                       valid entries in the R7024TC array of      @K1A\n                                            69668+*                       timer and counter pairs.                   @K1A\n 00000008                                   69669+R7024SF  DS    CL8      Scaling factor for the indicating               03-ERBSMF70\n                                            69670+*                       cryptographic accelerator\n                                            69671+*                       (long floating point)                      @K1C\n 00000010                                   69672+R7024TC  DS    5CL64    Timers & counters for the cryptographic         03-ERBSMF70\n                                            69673+*                       accelerator                                @K1C\n 00000150                00000150 00000010  69674+         ORG   R7024TC                                             @J2A 03-ERBSMF70\n 00000010                                   69675+R7021MET DS    CL8      Execution time for 1024-bit ME-format           03-ERBSMF70\n                                            69676+*                       RSA operations (long floating point)       @J1A\n 00000018                                   69677+R7021MEC DS    CL8      Execution number for 1024-bit ME-format         03-ERBSMF70\n                                            69678+*                       RSA operations (long floating point)       @J1A\n 00000020                                   69679+R7022MET DS    CL8      Execution time for 2048-bit ME-format           03-ERBSMF70\n                                            69680+*                       RSA operations (long floating point)       @J1A\n 00000028                                   69681+R7022MEC DS    CL8      Execution number for 2048-bit ME-format         03-ERBSMF70\n                                            69682+*                       RSA operations (long floating point)       @J1A\n 00000030                                   69683+R7021CRT DS    CL8      Execution time for 1024-bit CRT-format          03-ERBSMF70\n                                            69684+*                       RSA operations (long floating point)       @J1A\n 00000038                                   69685+R7021CRC DS    CL8      Execution number for 1024-bit CRT-format        03-ERBSMF70\n                                            69686+*                       RSA operations (long floating point)       @J1A\n 00000040                                   69687+R7022CRT DS    CL8      Execution time for 2048-bit CRT-format          03-ERBSMF70\n                                            69688+*                       RSA operations (long floating point)       @J1A\n 00000048                                   69689+R7022CRC DS    CL8      Execution number for 2048-bit CRT-format        03-ERBSMF70\n                                            69690+*                       RSA operations (long floating point)       @J1A\n                         00000005           69691+R702NENG EQU   5        Max number of entries in the R7024TC array @K1C 03-ERBSMF70\n 00000050                00000050 00000150  69692+         ORG   R7024TC+R702NENG*L'R7024TC                      @OA31349 03-ERBSMF70\n 00000150                                   69693+R7023MET DS    CL8      Execution time for 4096-bit ME-format           03-ERBSMF70\n                                            69694+*                       RSA operations (long floating point)   @OA31349\n 00000158                                   69695+R7023MEC DS    CL8      Execution number for 4096-bit ME-format         03-ERBSMF70\n                                            69696+*                       RSA operations (long floating point)   @OA31349\n 00000160                                   69697+R7023CRT DS    CL8      Execution time for 4096-bit CRT-format          03-ERBSMF70\n                                            69698+*                       RSA operations (long floating point)   @OA31349\n 00000168                                   69699+R7023CRC DS    CL8      Execution number for 4096-bit CRT-format        03-ERBSMF70\n                                            69700+*                       RSA operations (long floating point)   @OA31349\n-\n                                            69702+*************** ICSF section  ********************************** @K1C**\n-\n 00000000                00000000 0000011C  69704+R702CCF  DSECT                                                     @J2A 03-ERBSMF70\n 00000000                                   69705+R702SNEC DS    CL8      Single DES: Number of calls                     03-ERBSMF70\n                                            69706+*                       to encipher (long floating point)          @J2A\n 00000008                                   69707+R702SNEB DS    CL8      Single DES: Number of bytes                     03-ERBSMF70\n                                            69708+*                       of data enciphered (long floating point)   @J2A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  363\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000010                                   69709+R702SNEI DS    CL8      Single DES: Number of CMD instructions          03-ERBSMF70\n                                            69710+*                       used to encipher the data\n                                            69711+*                       (long floating point)                      @J2A\n 00000018                                   69712+R702TNEC DS    CL8      Triple DES: Number of calls                     03-ERBSMF70\n                                            69713+*                       to encipher (long floating point)          @J2A\n 00000020                                   69714+R702TNEB DS    CL8      Triple DES: Number of bytes                     03-ERBSMF70\n                                            69715+*                       of data enciphered (long floating point)   @J2A\n 00000028                                   69716+R702TNEI DS    CL8      Triple DES: Number of CMD instructions          03-ERBSMF70\n                                            69717+*                       used to encipher the data\n                                            69718+*                       (long floating point)                      @J2A\n 00000030                                   69719+R702SNDC DS    CL8      Single DES: Number of calls                     03-ERBSMF70\n                                            69720+*                       to decipher (long floating point)          @J2A\n 00000038                                   69721+R702SNDB DS    CL8      Single DES: Number of bytes                     03-ERBSMF70\n                                            69722+*                       of data deciphered (long floating point)   @J2A\n 00000040                                   69723+R702SNDI DS    CL8      Single DES: Number of CMD instructions          03-ERBSMF70\n                                            69724+*                       used to decipher the data\n                                            69725+*                       (long floating point)                      @J2A\n 00000048                                   69726+R702TNDC DS    CL8      Triple DES: Number of calls to decipher         03-ERBSMF70\n                                            69727+*                       (long floating point)                      @J2A\n 00000050                                   69728+R702TNDB DS    CL8      Triple DES: Number of bytes                     03-ERBSMF70\n                                            69729+*                       of data deciphered (long floating point)   @J2A\n 00000058                                   69730+R702TNDI DS    CL8      Triple DES: Number of CMD instructions          03-ERBSMF70\n                                            69731+*                       used to decipher the data\n                                            69732+*                       (long floating point)                      @J2A\n 00000060                                   69733+R702NMGC DS    CL8      Number of calls to MAC generate                 03-ERBSMF70\n                                            69734+*                       (long floating point)                      @J2A\n 00000068                                   69735+R702NMGB DS    CL8      Number of bytes of data MAC generated           03-ERBSMF70\n                                            69736+*                       (long floating point)                      @J2A\n 00000070                                   69737+R702NMGI DS    CL8      Number of PCMF instructions                     03-ERBSMF70\n                                            69738+*                       used to MAC generate (long floating point) @J2A\n 00000078                                   69739+R702NMVC DS    CL8      Number of calls to MAC verify                   03-ERBSMF70\n                                            69740+*                       (long floating point)                      @J2A\n 00000080                                   69741+R702NMVB DS    CL8      Number of bytes of data MAC verified            03-ERBSMF70\n                                            69742+*                       (long floating point)                      @J2A\n 00000088                                   69743+R702NMVI DS    CL8      Number of PCMF instructions                     03-ERBSMF70\n                                            69744+*                       used to MAC verify (long floating point)   @J2A\n 00000090                                   69745+R702NHAC DS    CL8      For SHA-1: Number of calls to hash              03-ERBSMF70\n                                            69746+*                       (long floating point)                      @L5C\n 00000098                                   69747+R702NHAB DS    CL8      For SHA-1: Number of bytes of data hashed       03-ERBSMF70\n                                            69748+*                       (long floating point)                      @L5C\n 000000A0                                   69749+R702NHAI DS    CL8      For SHA-1: Number of PCMF instructions          03-ERBSMF70\n                                            69750+*                       used to hash data (long floating point)    @L5C\n 000000A8                                   69751+R702NPTC DS    CL8      Number of calls to PIN translate                03-ERBSMF70\n                                            69752+*                       (long floating point)                      @J2A\n 000000B0                                   69753+R702NPVC DS    CL8      Number of calls to PIN verify                   03-ERBSMF70\n                                            69754+*                       (long floating point)                      @J2A\n 000000B8                                   69755+R702NH2C DS    CL8      For SHA-224 and SHA-256:                   @21C 03-ERBSMF70\n                                            69756+*                       Number of calls to hash\n                                            69757+*                       (long floating point)                      @L5A\n 000000C0                                   69758+R702NH2B DS    CL8      For SHA-224 and SHA-256:                   @21C 03-ERBSMF70\n                                            69759+*                       Number of bytes of data hashed\n                                            69760+*                       (long floating point)                      @L5A\n 000000C8                                   69761+R702NH2I DS    CL8      For SHA-224 and SHA-256:                   @21C 03-ERBSMF70\n                                            69762+*                       Number of PCMF instructions used to hash data\n                                            69763+*                       (long floating point)                      @L5A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  364\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0000000D0                                   69764+R702NH5C DS    CL8      For SHA-384 and SHA-512:                        03-ERBSMF70\n                                            69765+*                       Number of calls to hash\n                                            69766+*                       (long floating point)                      @21A\n 000000D8                                   69767+R702NH5B DS    CL8      For SHA-384 and SHA-512:                        03-ERBSMF70\n                                            69768+*                       Number of bytes of data hashed\n                                            69769+*                       (long floating point)                      @21A\n 000000E0                                   69770+R702NH5I DS    CL8      For SHA-384 and SHA-512:                        03-ERBSMF70\n                                            69771+*                       Number of PCMF instructions used to hash data\n                                            69772+*                       (long floating point)                      @21A\n 000000E8                                   69773+R702CDLV DS    F        ICSF data level                        @OA28670 03-ERBSMF70\n 000000EC                                   69774+R702AESC DS    CL8      Number of AES encipher calls sent to a          03-ERBSMF70\n                                            69775+*                       coprocessor (long floating point).\n                                            69776+*                       Only valid if R702CDLV greater than 11 @OA28670\n 000000F4                                   69777+R702AESB DS    CL8      Number of bytes processed by the AES            03-ERBSMF70\n                                            69778+*                       encipher services handled by a coprocessor\n                                            69779+*                       (long floating point).\n                                            69780+*                       Only valid if R702CDLV greater than 11 @OA28670\n 000000FC                                   69781+R702AESI DS    CL8      Number of operations required to complete       03-ERBSMF70\n                                            69782+*                       the AES encipher service calls to a\n                                            69783+*                       coprocessor (long floating point).\n                                            69784+*                       Only valid if R702CDLV greater than 11 @OA28670\n 00000104                                   69785+R702ASDC DS    CL8      Number of AES decipher calls sent to a          03-ERBSMF70\n                                            69786+*                       coprocessor (long floating point).\n                                            69787+*                       Only valid if R702CDLV greater than 11 @OA28670\n 0000010C                                   69788+R702ASDB DS    CL8      Number of bytes processed by the AES            03-ERBSMF70\n                                            69789+*                       decipher services handled by a coprocessor\n                                            69790+*                       (long floating point).\n                                            69791+*                       Only valid if R702CDLV greater than 11 @OA28670\n 00000114                                   69792+R702ASDI DS    CL8      Number of operations required to complete       03-ERBSMF70\n                                            69793+*                       the AES decipher service calls to a\n                                            69794+*                       coprocessor (long floating point).\n                                            69795+*                       Only valid if R702CDLV greater than 11 @OA28670\n                                            69796+*        ASASYMBP\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  365\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69799+**/ ASASYMBP_1:;\n                                            69800+*/* START OF SPECIFICATIONS *******************************************\n                                            69801+*\n                                            69802+*  **PROPRIETARY_STATEMENT********************************************\n                                            69803+***01* PROPRIETARY STATEMENT=                                        *\n                                            69804+*                                                                    *\n                                            69805+*                                                                    *\n                                            69806+*   LICENSED MATERIALS - PROPERTY OF IBM                             *\n                                            69807+*   THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                      *\n                                            69808+*   5694-A01 (C) COPYRIGHT IBM CORP. 1994,2002                       *\n                                            69809+*                                                                    *\n                                            69810+*   STATUS= HBB7707                                                  *\n                                            69811+*                                                                    *\n                                            69812+*  **END_OF_PROPRIETARY_STATEMENT*************************************\n                                            69813+*\n                                            69814+*01* DESCRIPTIVE NAME:  ASASYMBM parameter area and symbol table\n                                            69815+*02*  ACRONYM:  SYMBP\n                                            69816+*\n                                            69817+*01* MACRO NAME:  ASASYMBP\n                                            69818+*\n                                            69819+*01* EXTERNAL CLASSIFICATION: GUPI\n                                            69820+*01* END OF EXTERNAL CLASSIFICATION:\n                                            69821+*\n                                            69822+*01* DSECT NAME:\n                                            69823+*     SYMBP\n                                            69824+*     SYMBT\n                                            69825+*     SYMBTE\n                                            69826+*\n                                            69827+*01* COMPONENT:  MVS Reuse (SCASA)\n                                            69828+*\n                                            69829+*01* EYE-CATCHER:  NONE\n                                            69830+*\n                                            69831+*01* STORAGE ATTRIBUTES:\n                                            69832+*02*  SUBPOOL:  Caller-supplied\n                                            69833+*02*  KEY:  Caller-supplied\n                                            69834+*02*  RESIDENCY:  Caller-supplied\n                                            69835+*\n                                            69836+*01* SIZE:  Variable\n                                            69837+*                SYMBP  -- X'001C' bytes\n                                            69838+*                SYMBT  -- X'0004' bytes\n                                            69839+*                          + one SYMBTE for each symbol indicated by\n                                            69840+*                            the SymbtNumberOfSymbols field.\n                                            69841+*                SYMBTE -- X'0010' bytes\n                                            69842+*01* CREATED BY:\n                                            69843+*     Caller and provided as input to ASASYMBM\n                                            69844+*\n                                            69845+*01* POINTED TO BY:\n                                            69846+*     Not applicable\n                                            69847+*\n                                            69848+*01* SERIALIZATION:\n                                            69849+*     None required\n                                            69850+*\n                                            69851+*01* FUNCTION:\n                                            69852+*02* Maps the data provided to ASASYMBM.\n                                            69853+*    A parameter area (SYMBP) is provided.\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  366\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69854+*    Optionally, the parameter area can point to a symbol table\n                                            69855+*    (SYMBT) which consists of the SYMBT header plus SYMBTE entries\n                                            69856+*    (which immediately follow the header, or are pointed to by\n                                            69857+*    a field which immediately follows the header).\n                                            69858+*\n                                            69859+*02* Return information is provided in the fullword pointed to by\n                                            69860+*    field SymbpReturnCode@. Possible values are:\n                                            69861+*03* 0\n                                            69862+*03*    Meaning: Successful Completion. All requested substitution\n                                            69863+*                was performed.\n                                            69864+*03*    Action:  None required.\n                                            69865+*\n                                            69866+*03* 4\n                                            69867+*03*    Meaning: Warning. When Substring was specified, a substring\n                                            69868+*                that exceeded the bounds of the substitution text,\n                                            69869+*                or a substring in which the length was specified\n                                            69870+*                as 0, was found.\n                                            69871+*                Substitution continues.\n                                            69872+*03*    Action:  None required.\n                                            69873+*\n                                            69874+*03* 8\n                                            69875+*03*    Meaning: Warning. Target buffer was too small to contain\n                                            69876+*                all of the substitution text.\n                                            69877+*03*    Action:  Specify a larger target buffer, or continue\n                                            69878+*                processing using the value returned in the fullword\n                                            69879+*                pointed to by field SymbpTargetLength@ to determine\n                                            69880+*                how much data was placed into the target buffer.\n                                            69881+*\n                                            69882+*03* 12\n                                            69883+*03*    Meaning: Error. When CheckNull was specified, a substitution\n                                            69884+*                text length of 0 was encountered when performing\n                                            69885+*                substitution. Substitution continues.\n                                            69886+*03*    Action:  None required. The system informs the program of the\n                                            69887+*                situation in which it was interested. It is up to\n                                            69888+*                the program to determine the necessary course of\n                                            69889+*                action.\n                                            69890+*\n                                            69891+*03* 16\n                                            69892+*03*    Meaning: Warning. When WarnNoSub was specified, the\n                                            69893+*                substitution process encountered no symbols for\n                                            69894+*                which to substitute.\n                                            69895+*                The substitution processing completed normally.\n                                            69896+*03*    Action:  None required.\n                                            69897+*\n                                            69898+*01* METHOD OF ACCESS:\n                                            69899+*02*  ASM:\n                                            69900+*      ASASYMBP\n                                            69901+*           DSECT=YES|NO  -- Request DSECT definition\n                                            69902+*           SYMBP=YES|NO|COND -- Request parameter area mapping\n                                            69903+*                            USING on SYMBP\n                                            69904+*           SYMBT=YES|NO|COND -- Request symbol table mapping\n                                            69905+*                            USING on SYMBT\n                                            69906+*           SYMBTE=YES|NO|COND -- Request symbol table entry mapping\n                                            69907+*                            USING on SYMBTE\n                                            69908+*     Default: DSECT=YES,SYMBP=YES,SYMBT=COND,SYMBTE=COND\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  367\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                           69909+*     Notes: name=YES  => expand\n                                            69910+*            name=NO   => do not expand\n                                            69911+*            name=COND => expand only if DSECT=YES\n                                            69912+*\n                                            69913+*02*  PL/AS:\n                                            69914+*      %INCLUDE SYSLIB(ASASYMBP)\n                                            69915+*\n                                            69916+*01*  USAGE NOTES:\n                                            69917+*      Invoke ASASYMBM via\n                                            69918+*        Build symbparea to conform with the Symbp mapping.\n                                            69919+*        LINK EP=ASASYMBM,MF=(E,symbparea)\n                                            69920+*     or LINKX EP=ASASYMBM,MF=(E,symbparea)\n                                            69921+*          <<if reentrant and using LINKX, use the SF key as well>>\n                                            69922+*     or LOAD EP=ASASYMBM\n                                            69923+*        move entry point address to GPR 15\n                                            69924+*        CALL (15),MF=(E,symbparea)\n                                            69925+*\n                                            69926+*\n                                            69927+*01* DELETED BY:  Caller\n                                            69928+*\n                                            69929+*01* FREQUENCY:  Created for input to ASASYMBM\n                                            69930+*\n                                            69931+*01* DEPENDENCIES:  None\n                                            69932+*\n                                            69933+*01* DISTRIBUTION LIBRARY:  AMACLIB\n                                            69934+*\n                                            69935+*01* CHANGE ACTIVITY:\n                                            69936+*   $L0=CLONECBG ,HBB5520,930908,PD00XB: ASASYMBM parameter area\n                                            69937+*   $L1=CLONEASA ,HBB5520,930908,PD00XB: ASASYMBM parameter area\n                                            69938+*   $L2=CLONEASA ,HBB5520,930908,PD00XB: Substring, Check null\n                                            69939+*   $D1=DN70056  ,HBB5520,940506,PD00XB: Warn on no substitution\n                                            69940+*   $P1=PN70675  ,HBB5520,940520,PD00XB: Mixed case symbols\n                                            69941+*   $L3=MSYMB    ,HBB7707,010702,PD00XB: More symbols\n                                            69942+*\n                                            69943+* END OF SPECIFICATIONS *********************************************/\n                                            69944+*% /*\n 00000000                00000000 0000001C  69945+SYMBP    DSECT                                                          03-ASASYMBP\n 00000000                                   69946+SYMBPPATTERN@ DS 1AL4    Address of input pattern containing symbols   X03-ASASYMBP\n                                                 +                         to be resolved\n 00000004                00000004 00000000  69947+         ORG   SYMBPPATTERN@                                            03-ASASYMBP\n 00000000                                   69948+SYMBPPATTERNADDR DS 1AL4 Same as SymbpPattern@                          03-ASASYMBP\n 00000004                                   69949+SYMBPPATTERNLENGTH DS 1FL4 Length of input pattern                      03-ASASYMBP\n 00000008                                   69950+SYMBPTARGET@ DS 1AL4     Address of output target area. The target,    X03-ASASYMBP\n                                                 +                         for the length specified in the word pointed  X\n                                                 +                         to by SymbpTargetLength@, is initialized to   X\n                                                 +                         blanks before substitution processing begins.\n 0000000C                0000000C 00000008  69951+         ORG   SYMBPTARGET@                                             03-ASASYMBP\n 00000008                                   69952+SYMBPTARGETADDR DS 1AL4  Same as SymbpTarget@                           03-ASASYMBP\n 0000000C                                   69953+SYMBPTARGETLENGTH@ DS 1AL4 Address of input output fullword field      X03-ASASYMBP\n                                                 +                         containing length of target area. On input,   X\n                                                 +                         it contains the length provided. On output,   X\n                                                 +                         it contains the actual length of the target   X\n                                                 +                         resulting from the symbolic substitution.\n 00000010                00000010 0000000C  69954+         ORG   SYMBPTARGETLENGTH@                                       03-ASASYMBP\n 0000000C                                   69955+SYMBPTARGETLENGTHADDR DS 1AL4 Same as SymbpTargetLength                 03-ASASYMBP\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  368\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000010                                   69956+SYMBPSYMBOLTABLE@ DS 1AL4 Address of symbol table mapped by SYMBT      X03-ASASYMBP\n                                                 +                         DSECT. If only the default set of symbols are X\n                                                 +                         wanted, and none of the functions indicated   X\n                                                 +                         by the flags in SymbtFlags are needed, then   X\n                                                 +                         this field should be 0.\n 00000014                00000014 00000010  69957+         ORG   SYMBPSYMBOLTABLE@                                        03-ASASYMBP\n 00000010                                   69958+SYMBPSYMBOLTABLEADDR DS 1AL4 Same as SymbpSymbolTable                   03-ASASYMBP\n 00000014                                   69959+SYMBPTIMESTAMP@ DS 1AL4  Address of 8-character area containing the    X03-ASASYMBP\n                                                 +                         time stamp to use. If this field is           X\n                                                 +                         hexadecimal zeroes, the system will obtain    X\n                                                 +                         the current time stamp for use in evaluating  X\n                                                 +                         symbolics related to time or date.\n 00000018                00000018 00000014  69960+         ORG   SYMBPTIMESTAMP@                                          03-ASASYMBP\n 00000014                                   69961+SYMBPTIMESTAMPADDR DS 1AL4 Same as SymbpTimeStamp@                      03-ASASYMBP\n 00000018                                   69962+SYMBPRETURNCODE@ DS 1FL4 Address of fullword which is to contain the   X03-ASASYMBP\n                                                 +                         return code\n 0000001C                0000001C 00000018  69963+         ORG   SYMBPRETURNCODE@                                         03-ASASYMBP\n 00000018                                   69964+SYMBPRETURNCODEADDR DS 1AL4 Same as SymbpReturnCode                     03-ASASYMBP\n                         0000001C           69965+SYMBP_LEN EQU  *-SYMBP                                                  03-ASASYMBP\n 00000000                00000000 00000004  69966+SYMBT    DSECT           Symbol table                                   03-ASASYMBP\n 00000000                                   69967+SYMBTHEADER DS 1CL0004                                                  03-ASASYMBP\n 00000004                00000004 00000000  69968+         ORG   SYMBTHEADER                                              03-ASASYMBP\n 00000000                                   69969+SYMBTFLAGS DS  1BL2                                                     03-ASASYMBP\n 00000002                00000002 00000000  69970+         ORG   SYMBTFLAGS                                               03-ASASYMBP\n 00000000                                   69971+SYMBTFLAG0 DS  1BL1      Byte 0 of SymbtFlags                           03-ASASYMBP\n 00000001                00000001 00000000  69972+         ORG   SYMBTFLAG0                                               03-ASASYMBP\n                         00000080           69973+SYMBTNODEFAULTSYMBOLS EQU X'80' Avoid using the default symbol set      03-ASASYMBP\n                         00000040           69974+SYMBTONLYSTATICSYMBOLS EQU X'40' Allow only static symbols              03-ASASYMBP\n                         00000020           69975+SYMBTTIMESTAMPISGMT EQU X'20' The input timestamp is GMT-time, not     X03-ASASYMBP\n                                                 +                         Local. Note that the value from STCK or       X\n                                                 +                         STCKSYNC is not GMT. It needs to be corrected X\n                                                 +                         by subtracting CVTLSO. This bit need not be   X\n                                                 +                         set as it is the default. Do not also specify X\n                                                 +                         SymbtTimeStampIsLocal or                      X\n                                                 +                         SymbtTimeStampIsStck.\n                         00000010           69976+SYMBTTIMESTAMPISLOCAL EQU X'10' The input timestamp is Local-Time, not X03-ASASYMBP\n                                                 +                         GMT. Do not also specify SymbtTimeStampIsGMT  X\n                                                 +                         or SymbtTimeStampIsStck.\n                         00000008           69977+SYMBTWARNSUBSTRINGS EQU X'08' When a substring problem is encountered, X03-ASASYMBP\n                                                 +                         produce a warning return code. The substring  X\n                                                 +                         is fixed irregardless.\n                         00000004           69978+SYMBTCHECKNULLSUBTEXT EQU X'04' The presence of null sub-text will be  X03-ASASYMBP\n                                                 +                         flagged via non-zero return code.\n                         00000002           69979+SYMBTPTRSAREOFFSETS EQU X'02' The pointer fields within the            X03-ASASYMBP\n                                                 +                         user-provided symbol area are offsets. The    X\n                                                 +                         processing code will add the offset and the   X\n                                                 +                         symbol area address to get the actual address X\n                                                 +                         of the operand. Note that this does not apply X\n                                                 +                         to field SymbteSymbolAreaAddr - it is always  X\n                                                 +                         a pointer. Note also that when bit            X\n                                                 +                         SymbtIndrectSymbolArea is on, the symbol area X\n                                                 +                         address is the address contained in           X\n                                                 +                         SymbteSymbolAreaAddr. When bit\n                                            69980+*                        SymbtIndirectSymbolArea is off, the symbol    X\n                                                 +                         area address is the address of                X\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  369\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                                                +                         SymbtTableEntries.\n                         00000001           69981+SYMBTONLYDYNAMICSYMBOLS EQU X'01' Allow only dynamic symbols. This     X03-ASASYMBP\n                                                 +                         should be used only when passing in as a user X\n                                                 +                         symbol table the static symbol table of       X\n                                                 +                         another system.\n 00000000                00000000 00000001  69982+         ORG   SYMBTFLAG0+X'00000001'                                   03-ASASYMBP\n 00000001                                   69983+SYMBTFLAG1 DS  1BL1      Byte 1 of SymbtFlags                           03-ASASYMBP\n 00000002                00000002 00000001  69984+         ORG   SYMBTFLAG1                                               03-ASASYMBP\n                         00000080           69985+SYMBTFLAG1RSV1 EQU X'80' Reserved. Must be zero. Do not use.            03-ASASYMBP\n                         00000040           69986+SYMBTTIMESTAMPISSTCK EQU X'40' The input timestamp is from the STCK    X03-ASASYMBP\n                                                 +                         instruction or the STCKSYNC service. Do not   X\n                                                 +                         also specify SymbtTimeStampIsGMT or           X\n                                                 +                         SymbtTimeStampIsLocal.\n                         00000020           69987+SYMBTWARNNOSUB EQU X'20' When no substitution at all has occurred,     X03-ASASYMBP\n                                                 +                         produce a warning return code.\n                         00000010           69988+SYMBTINDIRECTSYMBOLAREA EQU X'10' Indicates that the symbol area is    X03-ASASYMBP\n                                                 +                         not contiguous but rather is pointed to by    X\n                                                 +                         SymbteSymbolAreaAddr.\n                         00000008           69989+SYMBTMIXEDCASESYMBOLS EQU X'08' Indicates that the input may have      X03-ASASYMBP\n                                                 +                         non-uppercase symbols. The processing will    X\n                                                 +                         obtain an additional area to copy the input   X\n                                                 +                         pattern in order to make recognition of these X\n                                                 +                         symbols possible.\n                         00000007           69990+SYMBTFLAG1RSV3 EQU X'07' Unused. Must be zero.                          03-ASASYMBP\n 00000001                00000001 00000002  69991+         ORG   SYMBTFLAGS+X'00000002'                                   03-ASASYMBP\n 00000002                                   69992+SYMBTNUMBEROFSYMBOLS DS 1FL2 Number of entries in symbol table. Can be X03-ASASYMBP\n                                                 +                         0.\n 00000004                                   69993+SYMBTTABLEENTRIES DS 0C  Symbol table entries. One for each indicated  X03-ASASYMBP\n                                                 +                         by the NumberOfSymbols field. Mapped by       X\n                                                 +                         SYMBTE DSECT. Note that when                  X\n                                                 +                         SymbtIndirectSymbolArea is specified, this    X\n                                                 +                         area consists only of field                   X\n                                                 +                         SymbteSymbolAreaAddr. In that case, it is the X\n                                                 +                         area pointed to by that pointer that is       X\n                                                 +                         mapped by SYMBTE DSECT.\n                                            69994+*\n                                            69995+*    *****************************************************************\n                                            69996+*    *                                                               *\n                                            69997+*    * The static symbol table is pointed to by ECVTSYMT and is      *\n                                            69998+*    * mapped by the SYMBT DSECT. In the 4-bytes preceding this table*\n                                            69999+*    * is a fullword which specifies the length of the contiguous    *\n                                            70000+*    * area that follows which contains the table plus the symbol    *\n                                            70001+*    * names plus the substitution text values.                      *\n                                            70002+*    *                                                               *\n                                            70003+*    *****************************************************************\n                                            70004+*\n                                            70005+*\n                         00000008           70006+SYMBTMAXSTATICSYMBOLLENGTH EQU 8 The max length of a static symbol,    X03-ASASYMBP\n                                                 +                         not counting the \"&\" and the \".\"\n                         00000067           70007+SYMBTMAXSTATICENTRIESPREZOSR4 EQU 103 The max number of full-sized     X03-ASASYMBP\n                                                 +                         entries. This provides for the 5 MVS-defined  X\n                                                 +                         symbols plus 98 user-provided symbols\n                         000003A0           70008+SYMBTMAXSTATICENTRIESZOSR4 EQU 928 The max number of full-sized        X03-ASASYMBP\n                                                 +                         entries. This provides for the 5 MVS-defined  X\n                                                 +                         symbols plus 923 user-provided symbols\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  370\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        000003A0           70009+SYMBTMAXSTATICENTRIES EQU 928 The max number of full-sized entries.    X03-ASASYMBP\n                                                 +                         This provides for the 5 MVS-defined symbols   X\n                                                 +                         plus 98 user-provided symbols\n                         00000009           70010+SYMBTMAXSTATICSUBTEXTLENGTH EQU 9 The max length of substitution text  X03-ASASYMBP\n                                                 +                         for a static symbol\n                         00000E19           70011+SYMBTMAXSTATICTABLESIZEPREZOSR4 EQU 3609 The max table size, taking    X03-ASASYMBP\n                                                 +                         into account that each symbol is preceded by  X\n                                                 +                         \"&\" and followed by \".\"\n                         00007F00           70012+SYMBTMAXSTATICTABLESIZEZOSR4 EQU 32512 The max table size, taking into X03-ASASYMBP\n                                                 +                         account that each symbol is preceded by \"&\"   X\n                                                 +                         and followed by \".\"\n                         00007F00           70013+SYMBTMAXSTATICTABLESIZE EQU 32512                                       03-ASASYMBP\n                         00000004           70014+SYMBT_LEN EQU  *-SYMBT                                                  03-ASASYMBP\n                                            70015+*\n                                            70016+*                                      The max table size taking into\n                                            70017+*                                      account that each symbol is\n                                            70018+*                                      preceded by \"&\" and followed\n                                            70019+*                                      by \".\"\n                                            70020+*\n 00000000                00000000 00000010  70021+SYMBTE   DSECT           Symbol table entry                             03-ASASYMBP\n 00000000                                   70022+SYMBTETABLEENTRIES DS 1CL0016 Symbol table entry. One such entry for   X03-ASASYMBP\n                                                 +                         each indicated by the SymbtNumberOfSymbols    X\n                                                 +                         field.\n 00000010                00000010 00000000  70023+         ORG   SYMBTETABLEENTRIES                                       03-ASASYMBP\n 00000000                                   70024+SYMBTESYMBOLPTR DS 1AL4  Address of symbol. Do not use when bit        X03-ASASYMBP\n                                                 +                         SymbtPtrsAreOffsets is on. Note that the      X\n                                                 +                         symbol must include the preceding \"&\" and the X\n                                                 +                         trailing \".\"\n 00000004                00000004 00000000  70025+         ORG   SYMBTESYMBOLPTR                                          03-ASASYMBP\n 00000000                                   70026+SYMBTESYMBOLOFFSET DS 1FL4 Offset to symbol from start of symbol area. X03-ASASYMBP\n                                                 +                         Only use if bit SymbtPtrsAreOffsets is on.    X\n                                                 +                         Note that the symbol must include the         X\n                                                 +                         preceding \"&\" and the trailing \".\"\n 00000004                00000004 00000000  70027+         ORG   SYMBTESYMBOLOFFSET                                       03-ASASYMBP\n 00000000                                   70028+SYMBTESYMBOLAREAADDR DS 1AL4 Address of symbol area when               X03-ASASYMBP\n                                                 +                         SymbtIndirectSymbolArea is set. In that case, X\n                                                 +                         this is the only word needed in the Symbte    X\n                                                 +                         area, and the area pointed to by this pointer X\n                                                 +                         is mapped by the \"regular\" SYMBTE DSECT (for  X\n                                                 +                         which SymbteSymbolAreaAddr is not relevant).\n 00000004                                   70029+SYMBTESYMBOLLENGTH DS 1FL4 Length of symbol (includes preceding \"&\"    X03-ASASYMBP\n                                                 +                         and trailing \".\")\n 00000008                                   70030+SYMBTESUBTEXTPTR DS 1AL4 Address of substitution text. Do not use when X03-ASASYMBP\n                                                 +                         bit SymbtPtrsAreOffsets is on.\n 0000000C                0000000C 00000008  70031+         ORG   SYMBTESUBTEXTPTR                                         03-ASASYMBP\n 00000008                                   70032+SYMBTESUBTEXTOFFSET DS 1FL4 Offset to substitution text from start of  X03-ASASYMBP\n                                                 +                         symbol area. Only use if bit                  X\n                                                 +                         SymbtPtrsAreOffsets is on.\n 0000000C                                   70033+SYMBTESUBTEXTLENGTH DS 1FL4 Length of substitution text                 03-ASASYMBP\n                         00000010           70034+SYMBTE_LEN EQU *-SYMBTE                                                 03-ASASYMBP\n                                            70035+*        ARCMCD\n 00000000                00000000 000001D4  70037+ARCMCD   DSECT                                                          03-ARCMCD\n 00000000                                   70038+MCK      DS    CL44                MCK key                              03-ARCMCD\n 0000002C                                   70039+MCH      DS    XL20                header                               03-ARCMCD\n 00000040                                   70040+MCD      DS    0CL404              MCD                                  03-ARCMCD\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  371\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000040                                   70041+MCDVSN   DS    CL6                 vmig volume volser                   03-ARCMCD\n 00000046                                   70042+MCDFLGS  DS    AL2                 flag bytes                           03-ARCMCD\n                         00008000           70043+MCDFASN  EQU   X'8000'             valid migrated dataset               03-ARCMCD\n                         00004000           70044+MCDFMIG  EQU   X'4000'             to be migrated                       03-ARCMCD\n                         00002000           70045+MCDFNOMG EQU   X'2000'             prevented from mig.                  03-ARCMCD\n                         00001000           70046+MCDFDEL  EQU   X'1000'             delete                               03-ARCMCD\n                         00000800           70047+MCDFSDP  EQU   X'0800'             VSAM SDSP                            03-ARCMCD\n                         00000400           70048+MCDML2   EQU   X'0400'             on ML2                               03-ARCMCD\n                         00000200           70049+MCDFNSCR EQU   X'0200'             no yet scratched                     03-ARCMCD\n                         00000100           70050+MCDFJES3 EQU   X'0100'             jes3                                 03-ARCMCD\n                         00000080           70051+MCDFMCO  EQU   X'0080'             MCO record exists                    03-ARCMCD\n                         00000040           70052+MCDFMIGP EQU   X'0040'             VSAM mig in progress                 03-ARCMCD\n                         00000020           70053+MCDNOUPD EQU   X'0020'             discrate RACF prof not updated       03-ARCMCD\n                         00000010           70054+MCDRACND EQU   X'0010'             racf indicated                       03-ARCMCD\n                         00000008           70055+MCDFEOS  EQU   X'0008'             erease attrib spec                   03-ARCMCD\n                         00000004           70056+MCDFSMVL EQU   X'0004'             inavlid space mgmt flag              03-ARCMCD\n                         00000002           70057+MCDFDUMD EQU   X'0002'             dummy MCD record                     03-ARCMCD\n                         00000001           70058+MCDFR3   EQU   X'0001'             HSM rel 3                            03-ARCMCD\n 00000048                                   70059+MCDCOMPR DS    AL1                 % of saved space if compacted        03-ARCMCD\n 00000049                                   70060+MCDRV    DS    AL1                 ver/rel/mod level                    03-ARCMCD\n 0000004A                                   70061+MCDOPTCD DS    AL1                 option code from VTOC                03-ARCMCD\n                         00000080           70062+MCDICF   EQU   X'80'               VSAM in ICF catalog                  03-ARCMCD\n 0000004B                                   70063+         DS    XL1                 resrved                              03-ARCMCD\n 0000004C                                   70064+MCDDLC   DS    FL4                 creation date                        03-ARCMCD\n 00000050                                   70065+MCDTSLR  DS    0XL8                last referenced                      03-ARCMCD\n 00000050                                   70066+MCDTLR   DS    FL4                 last used                            03-ARCMCD\n 00000054                                   70067+MCDDLR   DS    FL4                 date the dataset was last ref.       03-ARCMCD\n 00000058                                   70068+MCDTSLU  DS    0XL8                last used time stamp                 03-ARCMCD\n 00000058                                   70069+MCDTLU   DS    FL4                 time the VSAM last updated           03-ARCMCD\n 0000005C                                   70070+MCDDLU   DS    FL4                 date VSAM last upadted               03-ARCMCD\n 00000060                                   70071+MCDTSMIG DS    0XL8                last migrated time stamp             03-ARCMCD\n 00000060                                   70072+MCDTMIG  DS    FL4                 time of the last migration           03-ARCMCD\n 00000064                                   70073+MCDDMIG  DS    FL4                 date of the last migration           03-ARCMCD\n 00000068                                   70074+MCDDSORG DS    AL2                 DSORG                                03-ARCMCD\n                         00000400           70075+MCDFPSDS EQU   X'0400'             PS dataset                           03-ARCMCD\n                         00000008           70076+MCDFVSDS EQU   X'0008'             VSAM dataset                         03-ARCMCD\n 0000006A                                   70077+MCDBKLSZ DS    AL2                 block size                           03-ARCMCD\n 0000006C                                   70078+MCDKEYLN DS    AL1                 key length                           03-ARCMCD\n 0000006D                                   70079+MCDRECFM DS    AL1                 RECFM                                03-ARCMCD\n                         000000C0           70080+MCDRFTYP EQU   X'C0'               fix or V or U                        03-ARCMCD\n                         00000020           70081+MCDRFTO  EQU   X'20'               track overflow                       03-ARCMCD\n 0000006E                                   70082+MCDDSIND DS    AL1                 dataset in from VTOC                 03-ARCMCD\n                         00000080           70083+MCDFLSTV EQU   X'80'               last on volume                       03-ARCMCD\n                         00000040           70084+MCDFRACF EQU   X'40'               RACF                                 03-ARCMCD\n                         00000010           70085+MCDFSCTY EQU   X'10'               password protected                   03-ARCMCD\n                         00000004           70086+MCDFWSEC EQU   X'04'               write password                       03-ARCMCD\n                         00000002           70087+MCDFCHNG EQU   X'02'               change indicator                     03-ARCMCD\n 0000006F                                   70088+MCDHID   DS    AL1                 HOST id                              03-ARCMCD\n 00000070                                   70089+MCDSIZE  DS    FL4                 allocated size in tracks             03-ARCMCD\n 00000074                                   70090+MCDSIZEB DS    FL4                 allocated size bytes or Kb           03-ARCMCD\n 00000078                                   70091+MCDCSZ   DS    FL4                 2K block size on mig volume          03-ARCMCD\n 0000007C                                   70092+MCDNMIG  DS    AL2                 num of times migrated                03-ARCMCD\n 0000007E                                   70093+MCDDAYS  DS    AL2                 num of days before mig               03-ARCMCD\n 00000080                                   70094+MCDFRVSN DS    CL6                 primary vol ser before mig           03-ARCMCD\n 00000086                                   70095+MCDFOVSN DS    0XL6                recall volser                        03-ARCMCD\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  372\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000086                                   70096+MCDFLAG1 DS    AL1                 flag byte                            03-ARCMCD\n                         00000080           70097+MCDFMCL  EQU   X'80'               MCL record exits                     03-ARCMCD\n                         00000040           70098+MCDFNOD  EQU   X'40'               MCV record ineligible                03-ARCMCD\n                         00000020           70099+MCDFCMCL EQU   X'20'               MCL record created at mig            03-ARCMCD\n                         00000010           70100+MCDFBUWM EQU   X'10'               backed up while mig                  03-ARCMCD\n                         00000008           70101+MCDFPDSE EQU   X'08'               PDSE                                 03-ARCMCD\n                         00000002           70102+MCDFDSS  EQU   X'02'               DSS datamover used                   03-ARCMCD\n                         00000001           70103+MCDDSRNM EQU   X'01'               renamed by ARECOVER                  03-ARCMCD\n 00000087                                   70104+MCDMCL43 DS    AL1                 43 char                              03-ARCMCD\n 00000088                                   70105+MCDCTID  DS    FL4                 compaction table id                  03-ARCMCD\n 0000008C                                   70106+MCDUCBTY DS    FL4                 primary vol dev type                 03-ARCMCD\n 00000090                                   70107+MCDTSRES DS    0XL8                recall/delete time stamp             03-ARCMCD\n 00000090                                   70108+MCDTRES  DS    FL4                 date dataset recalled                03-ARCMCD\n 00000094                                   70109+MCDDRES  DS    FL4                 date dataset recalled                03-ARCMCD\n 00000098                                   70110+MCDMDEVT DS    0XL4                migvol devtype                       03-ARCMCD\n 00000098                                   70111+         DS    AL1                 reserved                             03-ARCMCD\n 00000099                                   70112+MCDFLAG2 DS    AL1                 flag byte                            03-ARCMCD\n                         00000008           70113+MCDFNVRT EQU   X'08'               virtual volume                       03-ARCMCD\n 0000009A                                   70114+MCDFLAG3 DS    AL1                 flag byte                            03-ARCMCD\n                         00000080           70115+MCDTPDEV EQU   X'80'               tape dev                             03-ARCMCD\n                         00000020           70116+MCDFMVDA EQU   X'20'               DASD dev                             03-ARCMCD\n 0000009B                                   70117+         DS    AL1                 reserved                             03-ARCMCD\n 0000009C                                   70118+MCDJDAYS DS    AL1                 delay to mig                         03-ARCMCD\n 0000009D                                   70119+MCDJDATE DS    AL3                 last date of delay                   03-ARCMCD\n 000000A0                                   70120+MCDJVEXD DS    AL3                 last date HSM will hold vol          03-ARCMCD\n 000000A3                                   70121+MCDPDEP  DS    AL1                 volume selected                      03-ARCMCD\n 000000A4                                   70122+MCDJCT   DS    AL1                 number of eligible volumes           03-ARCMCD\n 000000A5                                   70123+MCDJVOLS DS    XL50                rest 4 times                         03-ARCMCD\n 000000D7                000000D7 000000A5  70124+         ORG   MCDJVOLS                                                 03-ARCMCD\n 000000A5                                   70125+MCDJVSN  DS    CL6                 volser                               03-ARCMCD\n 000000AB                                   70126+MCDJDEVT DS    FL4                 device type                          03-ARCMCD\n 000000AF                000000AF 000000D7  70127+         ORG                                                            03-ARCMCD\n 000000D7                                   70128+MCDRECAL DS    AL1                 recall flags                         03-ARCMCD\n                         00000080           70129+MCDFDBA  EQU   X'80'               MIGRATE techinque                    03-ARCMCD\n                         00000040           70130+MCDFRBU  EQU   X'40'               DELETEIFBACKUP                       03-ARCMCD\n                         00000020           70131+MCDFBDCS EQU   X'20'               device category spec                 03-ARCMCD\n                         00000010           70132+MCDFBDCT EQU   X'10'               tape category                        03-ARCMCD\n                         00000008           70133+MCDFAM   EQU   X'08'               auto space mgmt                      03-ARCMCD\n                         00000004           70134+MCDFAB   EQU   X'04'               auto backup on same host             03-ARCMCD\n 000000D8                                   70135+MCDEXPDT DS    XL4                 exp date at migration                03-ARCMCD\n 000000DC                                   70136+MCDMCANM DS    CL44                name of the mig copy                 03-ARCMCD\n 00000108                                   70137+MCDVSPWD DS    CL8                 VSAM password                        03-ARCMCD\n 00000110                                   70138+MCDFBID  DS    FL4                 tape pos info                        03-ARCMCD\n 00000114                                   70139+MCDNVSN  DS    AL2                 additional tape volumes              03-ARCMCD\n 00000116                                   70140+MCDVSNO  DS    AL2                 offset from MCDVSN to MCDAVSN        03-ARCMCD\n 00000118                                   70141+MCDTPBLK DS    FL4                 total 16k blocks                     03-ARCMCD\n 0000011C                                   70142+MCDTERN  DS    FL4                 TTOC entry                           03-ARCMCD\n 00000120                                   70143+MCDVOLSQ DS    AL2                 vol seq                              03-ARCMCD\n 00000122                                   70144+MCDFLGS2 DS    AL1                 flag byte                            03-ARCMCD\n                         00000080           70145+MCDFSIZE EQU   X'80'               size in Kbytes                       03-ARCMCD\n                         00000040           70146+MCDFSTRP EQU   X'40'               extended format                      03-ARCMCD\n                         00000020           70147+MCDFPDSX EQU   X'20'               HFS dataset                          03-ARCMCD\n 00000123                                   70148+         DS    AL1                 reserved                             03-ARCMCD\n 00000124                                   70149+MCDSMSWA DS    0XL96               SMS construct                        03-ARCMCD\n 00000124                                   70150+MCDDCLEN DS    AL2                 data class length                    03-ARCMCD\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  373\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n000000126                                   70151+MCDDCNAM DS    CL30                data class name                      03-ARCMCD\n 00000144                                   70152+MCDSCLEN DS    AL2                 storage class length                 03-ARCMCD\n 00000146                                   70153+MCDSCNAM DS    CL30                storage class                        03-ARCMCD\n 00000164                                   70154+MCDMCLEN DS    AL2                 mamg class length                    03-ARCMCD\n 00000166                                   70155+MDCMCNAM DS    CL30                mgmt class name                      03-ARCMCD\n 00000184                                   70156+MDCDLBU  DS    XL8                 last backup time stamp               03-ARCMCD\n 0000018C                                   70157+MDCRECOR DS    AL1                 VSAM dataset org                     03-ARCMCD\n 0000018D                                   70158+MDCSMSFG DS    AL1                 SMS related flags                    03-ARCMCD\n                         00000080           70159+MDCFSMS  EQU   X'80'               SMS managed                          03-ARCMCD\n                         00000040           70160+MDCFGDG  EQU   X'40'               GDG dataset                          03-ARCMCD\n                         00000020           70161+MDCFROG  EQU   X'20'               ROFF GDG                             03-ARCMCD\n                         00000010           70162+MDCKEYRG EQU   X'10'               keyrange dataset                     03-ARCMCD\n                         00000008           70163+MCDFMVOL EQU   X'08'               multivolume                          03-ARCMCD\n                         00000004           70164+MCDFRBLK EQU   X'04'               reblock                              03-ARCMCD\n                         00000002           70165+MCDFCOMP EQU   X'02'               compressed format                    03-ARCMCD\n                         00000001           70166+MCDF_AWR EQU   X'01'               MCD updated                          03-ARCMCD\n 0000018E                                   70167+MCDROWNR DS    XL16                resource owner name                  03-ARCMCD\n 0000019E                                   70168+MCDRDATA DS    XL8                 recovery data                        03-ARCMCD\n 000001A6                                   70169+MCDSCALO DS    0XL4                SECODARY ALLOCATION                  03-ARCMCD\n 000001A6                                   70170+MCDSCAL1 DS    AL1                 sec alloc flag1                      03-ARCMCD\n                         00000080           70171+MCDALCYL EQU   X'80'               CYl request                          03-ARCMCD\n                         00000040           70172+MCDALTRK EQU   X'40'               track                                03-ARCMCD\n                         00000020           70173+MCDALBLK EQU   X'20'               block request                        03-ARCMCD\n 000001A7                                   70174+MCDSCAL3 DS    AL3                 alloc quantity                       03-ARCMCD\n 000001AA                                   70175+MCDJDATE_CC DS AL1                 JES3                                 03-ARCMCD\n 000001AB                                   70176+MCDJVEXD_CC DS AL1                 JES3                                 03-ARCMCD\n 000001AC                                   70177+MCD_USER_DATASIZE DS FL4           uncompressed size                    03-ARCMCD\n 000001B0                                   70178+MCD_COMP_DATASIZE DS FL4           compressed size                      03-ARCMCD\n 000001B4                                   70179+MCD_VRM  DS    FL4                 DFSMShsm version/rel                 03-ARCMCD\n 000001B8                                   70180+MCD_CLN_DATE DS FL4                date MCD deleted                     03-ARCMCD\n 000001BC                                   70181+         DS    6FL4                reserved                             03-ARCMCD\n                         000001D4           70182+MCDEND   EQU   *                                                        03-ARCMCD\n                                            70183+*        ARCMCK\n 00000000                00000000 00000040  70185+ARCMCK   DSECT                                                          03-ARCMCK\n 00000000                                   70186+MCKTYPE  DS    X                   entry type                           03-ARCMCK\n                         000000C1           70187+MCKTYPE_CODE_A EQU C'A'            record a                             03-ARCMCK\n                         000000C2           70188+MCKTYPE_CODE_B EQU C'B'            record b                             03-ARCMCK\n                         000000C3           70189+MCKTYPE_CODE_C EQU C'C'            record c                             03-ARCMCK\n                         000000C4           70190+MCKTYPE_CODE_D EQU C'D'            record d                             03-ARCMCK\n                         00000001           70191+MCKTYPE_CODE_U EQU X'01'           record U                             03-ARCMCK\n                         00000002           70192+MCKTYPE_CODE_1 EQU X'02'           record 1                             03-ARCMCK\n                         00000004           70193+MCKTYPE_CODE_V EQU X'04'           record v                             03-ARCMCK\n                         00000007           70194+MCKTYPE_CODE_N EQU X'07'           record n                             03-ARCMCK\n                         00000010           70195+MCKTYPE_CODE_S EQU X'10'           record s                             03-ARCMCK\n                         00000012           70196+MCKTYPE_CODE_O EQU X'12'           record o                             03-ARCMCK\n                         00000021           70197+MCKTYPE_CODE_Y EQU X'21'           record y                             03-ARCMCK\n                         00000022           70198+MCKTYPE_CODE_W EQU X'22'           record w                             03-ARCMCK\n                         00000025           70199+MCKTYPE_CODE_J EQU X'25'           record j                             03-ARCMCK\n                         00000026           70200+MCKTYPE_CODE_M EQU X'26'           record m                             03-ARCMCK\n                         00000027           70201+MCKTYPE_CODE_L EQU X'27'           record l                             03-ARCMCK\n                         00000028           70202+MCKTYPE_CODE_P EQU X'28'           record p                             03-ARCMCK\n                         00000029           70203+MCKTYPE_CODE_G EQU X'29'           record g                             03-ARCMCK\n                         0000002A           70204+MCKTYPE_CODE_Q EQU X'2A'           record q                             03-ARCMCK\n                         0000002C           70205+MCKTYPE_CODE_X EQU X'2C'           record x                             03-ARCMCK\n                         0000002D           70206+MCKTYPE_CODE_I EQU X'2D'           record i                             03-ARCMCK\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  374\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.56\n0                        0000002E           70207+MCKTYPE_CODE_F EQU X'2E'           record f                             03-ARCMCK\n                         0000002F           70208+MCKTYPE_CODE_H EQU X'2F'           record h                             03-ARCMCK\n                         00000030           70209+MCKTYPE_CODE_Z EQU X'30'           record r                             03-ARCMCK\n                         00000032           70210+MCKTYPE_CODE_T EQU X'32'           record t                             03-ARCMCK\n                         00000033           70211+MCKTYPE_CODE_E EQU X'33'           record e                             03-ARCMCK\n 00000001                                   70212+MCKKEY2  DS    XL43                remainder of the control key         03-ARCMCK\n 0000002C                                   70213+MCKHDR   DS    0XL20               entry header                         03-ARCMCK\n 0000002C                                   70214+MCHLEN   DS    XL2                 total length of the record           03-ARCMCK\n 0000002E                                   70215+MCHTYPE  DS    X                   entry type                           03-ARCMCK\n 0000002F                                   70216+         DS    X                   reserved                             03-ARCMCK\n 00000030                                   70217+MCHTSLU  DS    XL8                 last update time stamp               03-ARCMCK\n 00000038                                   70218+MCHTSCR  DS    XL8                 creation time stamp                  03-ARCMCK\n 00000000                00000000 0000004A  70219+DIR      DSECT                     DIRECTORY DSECT                      02-$$GLOBAL\n 00000000                                   70220+DIRMEM   DS    CL8                 MEMBER NAME                          02-$$GLOBAL\n 00000008                                   70221+DIRTTR   DS    XL3                 TTR VALUE                            02-$$GLOBAL\n 0000000B                                   70222+DIRC     DS    C                   COMBINED FLAG BYTE                   02-$$GLOBAL\n                         00000080           70223+DIRCA    EQU   X'80'               ALIAS FLAG                           02-$$GLOBAL\n                         00000060           70224+DIRCN    EQU   X'60'               TTRN MASK                            02-$$GLOBAL\n                         0000001F           70225+DIRCU    EQU   X'1F'               USER DATA MASK                       02-$$GLOBAL\n 0000000C                                   70226+DIRUSER  DS    CL62                USER DATA FIELD                      02-$$GLOBAL\n                                            70227+         POP  PRINT                                                     02-$$GLOBAL\n                                            70228+         PRINT GEN                                                      01-$$ASMIF\n0                                           70230+* event token dsect\n 00000000                00000000 00000010  70231+EVENT_TOKEN  DSECT                                                      01-$$ASMIF\n 00000000 00000000                          70232+EVENT_TOKEN_ASCB DC A(0)         ascb pointer                           01-$$ASMIF\n 00000004 00000000                          70233+EVENT_TOKEN_TCB  DC A(0)         tcb pointer                            01-$$ASMIF\n 00000008 00000000                          70234+EVENT_TOKEN_ECBP DC A(0)         ecb pointer                            01-$$ASMIF\n 0000000C 00000000                          70235+EVENT_TOKEN_ECB  DC A(0)         event ecb                              01-$$ASMIF\n0                                           70237+* event token dsect\n 00000000                00000000 00000010  70238+SHMEM_TOKEN  DSECT                                                      01-$$ASMIF\n 00000000 00000000                          70239+SHMEM_TOKEN_ASCB DC A(0)         ascb pointer                           01-$$ASMIF\n 00000004 00000000                          70240+SHMEM_TOKEN_ADDR DC A(0)         source address                         01-$$ASMIF\n 00000008 00000000                          70241+SHMEM_TOKEN_LGTH DC A(0)         source length                          01-$$ASMIF\n 0000000C 00000000                          70242+SHMEM_TOKEN_     DC A(0)         reserved                               01-$$ASMIF\n                                            70243+         PRINT NOGEN                                                    01-$$ASMIF\n                                            70244          END\n1                                                 Relocation Dictionary                                         Page  375\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2013/01/07 10.56\n0  00000004 00000004 00001C54   A 4     +\n   00000004 00000006 0000044C   V 4    ST\n   00000004 00000007 0000166C   V 4    ST\n1                                          Macro and Copy Code Source Summary                                   Page  376\n- Con Source                                        Volume    Members                        HLASM R6.0  2013/01/07 10.56\n0     PRIMARY INPUT                                           ASM_CASE ASM_CASENTRY      ASM_DO   ASM_DOEXIT\n                                                              ASM_ELSE ASM_ELSEIF        ASM_ENDCASE       ASM_ENDDO\n                                                              ASM_ENDIF         ASM_ENDLOOP       ASM_ENDSEL\n                                                              ASM_ENDSRCH       ASM_EXITIF        ASM_IF   ASM_ITERATE\n                                                              ASM_LEAVE         ASM_NEXTWHEN      ASM_ORELSE\n                                                              ASM_OTHRWISE      ASM_SELECT        ASM_STRTSRCH\n                                                              ASM_TK_RENAME     ASM_WHEN B        BAL      BAS      BC\n                                                              BCT      BE       BH       BL       BM       BNE      BNH\n                                                              BNL      BNM      BNO      BNP      BNZ      BO       BP\n                                                              BXH      BXLE     BZ\n   L1 ESA.PRJ.CBTEXP.ASM                            USERL1    $$       $$ASMIF  $$DBASE  $$GLOBAL $$SETKEY $$SYSTEM\n                                                              $$SYSVAR ARCMCD   ARCMCK   BPXZOCVE BPXZOCVT BPXZOPNT\n                                                              CREGS    IHALLT\n   L2 SYS1.MACLIB                                   Z1CT12    ADREID0  ALESERV  ASASYMBP BPXYAIO  BPXYCID  BPXYIOCC\n                                                              BPXYMNTE BPXYOPNF BPXYOSMF BPXYPGPS BPXYPGTH BPXYPRLI\n                                                              BPXYRFIS BPXYSEL  BPXYSIGH BPXYSMFR BPXYSTAT BPXYTHLI\n                                                              BPXZOTCB CALL     CAMLST   CLOSE    CONVTOD  CSVDLCB  CVT\n                                                              DCB      DCBD     DELETE   DEQ      ENQ      ERBCOPY1\n                                                              ERBHDR   ERBPRO   ERBSMFR  ERBSMF70 ERBSMF79 EXTRACT\n                                                              FREEMAIN GETMAIN  IARVSERV IAZCHK   IAZCTKN  IAZFSCT\n                                                              IAZFSIP  IAZFSVT  IAZIDX   IAZJSAB  IAZJSPA  IAZRESPA\n                                                              IAZSSS2  ICHRUTKN IDARMRCD IDCDOUT  IEABRC   IEAMSCHD\n                                                              IEANTASM IEATDUMP IEESMCA  IEFJESCT IEFJFCBN IEFJSBVT\n                                                              IEFJSCVT IEFJSIPL IEFJSSIB IEFJSSOB IEFSJMRP IEFSJRC\n                                                              IEFSJREP IEFSSAL  IEFSSEN  IEFSSOBH IEFSSTS  IEFSSVS\n                                                              IEFTIOT1 IEFZB505 IEWPMAR  IEZCIB   IEZCOM   IEZDEB\n                                                              IEZJSCB  IFASMFR  IFASMFRA IFASMFR1 IFASMFR3 IFGSMF14\n                                                              IGVVSMD  IGWDES   IGWSMDE  IGWSMF   IHAACEE  IHAASCB\n                                                              IHAASSB  IHADCBE  IHAEPIE  IHAPCCAT IHAPSA   IHAPSAE\n                                                              IHARB    IHASDWA  IHASRB   IHASVT   IHATTE   IHAVRA\n                                                              IHBERMAC IHBINNRA IHBINNRR IHBOPLTX IHBSETR  IHB01\n                                                              IKJECT   IKJEFTSJ IKJEFTSV IKJPSCB  IKJTCB   IKJTSVT\n                                                              IKJUPT   IRACMCT  IRACPMB  IRARMCT  IRXSHVB  ISTDBIND\n                                                              ISTDNIB  ISTDPROC ISTDVCHR ISTFM5   ISTGAPPC ISTGLBAL\n                                                              ISTRPLEX ISTRPLFB ISTRPL6X ISTSLCNS ISTSLD   IWMPB\n                                                              IWMQCXIT IWMYCON  IXCYARAA IXCYARM  IXGANSAA IXGBRMLT\n                                                              IXGBRWSE IXGCONN  IXGWRITE LOAD     MODESET  OPEN\n                                                              PGSER    POST     QEDIT    RDJFCB   SCHEDULE SDUMPX\n                                                              SETLOCK  SPLEVEL  STIMER   STORAGE  SYSEVENT SYSSTATE\n                                                              TESTAUTH TIMEUSED TTIMER   VSMLIST  WAIT     WTO\n   L3 SYS1.MODGEN                                   Z1CT12    ADRUFO   CVAFFILT IARVRL   ICVAFBFL ICVAFPL  ICVFCL\n                                                              IECSDSL1 IEFJMR   IEFJSSWA IEFSSAG  IEFSSARB IEFSSCI\n                                                              IEFSSCS  IEFSSDA  IEFSSSO  IEFZB610 IEZBITS  IFGACB\n                                                              IFGACBVS IFGEXLST IFGEXLVS IFGRPL   IFGRPLVS IHAASVT\n                                                              IHAASXB  IHACDE   IHACSD   IHADECB  IHAECVT  IHALDA\n                                                              IHALLE   IHAPCCA  IHASCVT  IHASTCB  IHATBVT  IHATRVT\n                                                              IHAXTLST IKJRB    IRACCT   IRAICT   IRAMCT   OBTAIN\n   L5 ASM.AASMMAC2                                  Z1CDL1    ASMMCHKN ASMMDOPR ASMMGBLV ASMMGETC ASMMIFPR ASMMNAME\n                                                              ASMMPOPI ASMMPOPN ASMMPSHI ASMMPSHL ASMMPSHN ASMMREL\n                                                              ASMMSP   ASMMSTKI\n   L6 ASM.AASMMAC1                                  Z1CDL1    ASMAXITP\n   L7 TCPIP.SEZACMAC                                Z1CT12    DIAG     EZASMI   EZASMIP\n   L8 TCPIP.SEZANMAC                                Z1CT12    EZBCTHDR EZBYPTHA\n1                                                Dsect Cross Reference                                          Page  377\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0ACEE     000000C0  FFFFFFC8   20190\n ADREIB   0000002C  FFFFFF1A   53652\n ADRUFOB  00000018  FFFFFF0D   54271\n AIO      00000100  FFFFFF47   50310\n ANSAA    00000028  FFFFFF1E   52938\n ARAA     00000020  FFFFFFB0   25286\n ARCMCD   000001D4  FFFFFE51   70037\n ARCMCK   00000040  FFFFFE50   70185\n ASCB     00000180  FFFFFFF3    9989\n ASM_BUFFER\n          00001000  FFFFFFFA    4352\n ASMDSECT 00000978  FFFFFFFD    3747\n ASSB     00000900  FFFFFFF1   11013\n ASVT     00000214  FFFFFFDA   15405\n ASXB     00000300  FFFFFFF2   10745\n AXP_HSIBlock\n          00000188  FFFFFF21   52634\n AXPAIL   00000024  FFFFFF22   52623\n AXPRIL   0000003C  FFFFFF24   52475\n AXPSIL   00000410  FFFFFF23   52596\n AXPXITP  0000001C  FFFFFF25   52458\n BFL_MAP  00000008  FFFFFF84   38173\n BFLE     0000000C  FFFFFF83   38200\n CCT      00000190  FFFFFFC6   20834\n CDENTRY  00000020  FFFFFFD6   17868\n CIBX     00000030  FFFFFF80   38766\n CID      00000028  FFFFFF48   50274\n CMCT     000000F0  FFFFFFC5   21262\n CMC2     00002000  FFFFFFC0   22881\n CMC2CMG2 00000014  FFFFFFBF   22963\n CMC2CMG3 00000014  FFFFFFBE   23019\n CPMB     00001000  FFFFFFC2   22802\n CPMB_CHP_ENTRY\n          00000008  FFFFFFC1   22852\n CPMX     00004000  FFFFFFB9   23324\n CPMXCMG2 00000040  FFFFFFB8   23413\n CPM2     00002000  FFFFFFBD   23070\n CPM2CMG1 0000001C  FFFFFFBC   23122\n CPM2CMG2 0000001C  FFFFFFBB   23228\n CPM2CMG3 0000001C  FFFFFFBA   23303\n CSD      00000200  FFFFFFB7   23609\n CTOKEN   00000050  FFFFFF53   47186\n CVAFFILT_MAP\n          00000044  FFFFFF82   38237\n CVT      00000500  FFFFFFF8    8425\n CVTVSTGX 00000050  FFFFFFF7    9538\n CVTXTNT1 0000000C  FFFFFFF6    9577\n CVTXTNT2 00000084  FFFFFFF5    9585\n DCBE     00000038  FFFFFFD3   17983\n DCUOUTH  000003D8  FFFFFF49   48311\n DDDUMM   00000000  FFFFFFFB    4350\n DEB      00000058  FFFFFF94   34299\n DEBACSMD 00000044  FFFFFF92   34936\n DEBDASD  00000010  FFFFFF93   34894\n DEBSUBNM 00000002  FFFFFF91   35138\n1                                                Dsect Cross Reference                                          Page  378\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0DEBXTN   00000054  FFFFFF90   35151\n DEB2XTN  000000E3  FFFFFF8F   35355\n DECB     00000030  FFFFFF8E   35456\n DESB     00000028  FFFFFF69   43160\n DESD     00000010  FFFFFF67   43195\n DESL     00000010  FFFFFF6A   43121\n DESN     00000002  FFFFFF68   43185\n DESP     00000068  FFFFFF6B   42976\n DESR     00000004  FFFFFF63   43299\n DESRCS   00000004  FFFFFF64   43285\n DESX     00000024  FFFFFF66   43230\n DIR      0000004A  FFFFFE4F   70219\n DLCB     00000044  FFFFFF6E   42323\n DSCB     0000008C  FFFFFF89   37755\n DST      00000014  FFFFFF65   43264\n ECT      00000038  FFFFFFB6   23966\n ECVT     00000398  FFFFFFEF   12154\n EIDDINFO 00000014  FFFFFF19   53701\n EIREC00  00000010  FFFFFF18   53714\n EIREC14  00000010  FFFFFF17   53765\n EIREC20  00000042  FFFFFF16   53775\n EIREC21  0000002C  FFFFFF14   53839\n EIREC22  00000066  FFFFFF13   53845\n EIREC23  00000351  FFFFFF12   53916\n EIREC24  00000053  FFFFFF11   53976\n EIREC26  000000BC  FFFFFF10   53992\n EIREC27  000000A8  FFFFFF0F   54017\n EIREC28  00000150  FFFFFF0E   54109\n EI20DSI  00000044  FFFFFF15   53814\n EPIE     00000140  FFFFFFEE   12978\n EVENT_TOKEN\n          00000010  FFFFFE4E   70231\n EZASMGWA 00000008  FFFFFF4F   47693\n EZATASK  000000B0  FFFFFF4E   47765\n FCL_MAP  00000010  FFFFFF86   38121\n FM5ACCSE 00000002  FFFFFF9F   32496\n FM5ASI   00000001  FFFFFFA4   32450\n FM5CVCOR 00000001  FFFFFFA1   32475\n FM5DSSFM 00000004  FFFFFF9C   32538\n FM5LUOW1 00000002  FFFFFFA3   32462\n FM5LUOW2 00000008  FFFFFFA2   32471\n FM5PIPFM 00000004  FFFFFF9E   32514\n FM5PIPSM 00000004  FFFFFF9D   32520\n FM5SEQNM 00000009  FFFFFFA0   32482\n FRRAREA  000000B8  FFFFFFFE    3703\n FSIEA    000000BC  FFFFFF75   40949\n FSIED    00000018  FFFFFF76   40930\n FSIUDATA 0000000C  FFFFFF77   40919\n F2DSCB   0000008C  FFFFFF88   38022\n F3DSCB   0000008C  FFFFFF87   38085\n GTCNTL   00000034  FFFFFF4D   47844\n IAZCHK   00000080  FFFFFF7C   39804\n IAZFSCT  00000008  FFFFFF71   41383\n IAZFSIP  000000CC  FFFFFF78   40358\n IAZFSVT  0000000C  FFFFFF70   41425\n1                                                Dsect Cross Reference                                          Page  379\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0IAZIDX   00000020  FFFFFF79   40189\n IAZJSAB  00000080  FFFFFFB3   24350\n IAZJSPA  00000078  FFFFFF7B   39995\n IAZRESPA 0000003C  FFFFFF72   41319\n ICT      00000048  FFFFFFC4   21495\n IEFJFCBN 000000B0  FFFFFF8A   36551\n IEZCIB   00000018  FFFFFF81   38643\n IEZCOM   00000208  FFFFFF7F   38795\n IEZJSCB  0000017C  FFFFFFB2   24640\n IF_NAMEINDEX\n          00000020  FFFFFF02   54917\n IF_NAMEINDEXENTRY\n          00000018  FFFFFF03   54902\n IFGACB   0000004C  FFFFFFA6   31657\n IFGEXLEF 00000005  FFFFFFA9   29696\n IFGEXLST 00000030  FFFFFFAA   29591\n IFGRPL   00000070  FFFFFFA8   29756\n IHADCB   00000060  FFFFFF95   33731\n IOCC     00000004  FFFFFF0A   54552\n IOCDIRIOCTL\n          00000011  FFFFFF05   54871\n IOCMLSINFO\n          00000080  FFFFFF00   54947\n IOCN_IFREQ\n          00000020  FFFFFEFD   55119\n IOCN_RTMSGHDRTYPE\n          00000048  FFFFFEFF   55040\n IOCN_RTMSGTYPE\n          00000030  FFFFFEFE   55067\n IOCPOEATTR\n          00000060  FFFFFF01   54930\n IOCRTRSELECT\n          00000018  FFFFFF04   54886\n IOCSTACKINFO\n          00000018  FFFFFF07   54842\n IOCSTACKNAMESD\n          00000010  FFFFFF06   54855\n IOCUOCSBUFF\n          00000008  FFFFFF08   54816\n IOCUOFTE 0000000C  FFFFFF09   54805\n ISTDBIND 00000024  FFFFFF98   32866\n ISTDNIB  00000040  FFFFFF9B   32549\n ISTFM5   0000000A  FFFFFFA5   32403\n ISTRPL6X 00000070  FFFFFFA7   31105\n ISTSLCNS 00000010  FFFFFF96   33678\n ISTSLD   00000044  FFFFFF97   33566\n IXGANSAA 00000000  FFFFFF1F   52848\n IXGBRMHD 00000008  FFFFFF1D   53331\n IXGBRMLT 0000002C  FFFFFF1C   53355\n IXGBRMLT_LOGBLOCK\n          0000005C  FFFFFF1B   53479\n JESCT    00000080  FFFFFFE5   14720\n JESPEXT  00000098  FFFFFFE4   14838\n JMR      0000004C  FFFFFF73   41081\n JSBFCODG 00000002  FFFFFFDC   15227\n1                                                Dsect Cross Reference                                          Page  380\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0JSBTBL   0000000C  FFFFFFDD   15219\n JSBVT    00000010  FFFFFFDE   15200\n JSIPL    00000020  FFFFFFDB   15318\n JSPEXT   00000068  FFFFFF7A   40064\n LDA      000001F0  FFFFFFF0   11825\n LLE      0000000C  FFFFFFD5   17955\n LLT      00000035  FFFFFFED   13080\n MCT      00000388  FFFFFFC3   21822\n MNTE     000004CC  FFFFFF2D   52255\n MNTEH    00000020  FFFFFF2E   52236\n MNTENTAGGNAMEDSECT\n          00000000  FFFFFF2A   52378\n MNTENTPARMDATA\n          00000000  FFFFFF2C   52366\n MNTENTPFSEXCPSTATUSDSECT\n          00000000  FFFFFF28   52386\n MNTENTPFSNORMALSTATUSDSECT\n          00000000  FFFFFF29   52382\n MNTENTSYSLISTINFO\n          00000104  FFFFFF2B   52370\n NIBRPRM  0000001C  FFFFFF9A   32838\n NIBVECS  00000002  FFFFFF99   32854\n O_FLAGS  00000004  FFFFFF31   52053\n OCVE     00000010  FFFFFF40   51037\n OCVT     00000144  FFFFFF41   51019\n OPNT     0000031F  FFFFFF3F   51045\n OSMF     00000090  FFFFFF2F   52180\n OTCB     000001B0  FFFFFF45   50650\n OTCBCOPYONFORK\n          000000A8  FFFFFF44   50920\n OTCBFLAGS3WORD\n          00000004  FFFFFF42   51003\n OTCBRACGIDS\n          0000000C  FFFFFF43   50987\n PB       00000438  FFFFFFAF   27173\n PCCA     00000248  FFFFFFEC   13198\n PCCAVT   00000200  FFFFFFEB   13446\n PGPS     00000CA6  FFFFFF3E   51098\n PGTHA    0000001A  FFFFFF3D   51212\n PGTHB    00000030  FFFFFF3C   51247\n PGTHC    00000068  FFFFFF3B   51306\n PGTHD    00000406  FFFFFF3A   51379\n PGTHE    00000406  FFFFFF39   51385\n PGTHF    00000806  FFFFFF38   51391\n PGTHG    00000044  FFFFFF37   51399\n PGTHH    0000000C  FFFFFF36   51417\n PGTHJ    0000005C  FFFFFF35   51431\n PGTHK    00000048  FFFFFF34   51485\n PMAR     0000001E  FFFFFF5B   44188\n PMARA    00000007  FFFFFF58   44477\n PMARL    0000006A  FFFFFF5A   44322\n PMARR    00000017  FFFFFF59   44444\n PPT      00000020  FFFFFF51   47552\n PPT1     00000010  FFFFFF50   47568\n PRLI     00000070  FFFFFF32   51847\n1                                                Dsect Cross Reference                                          Page  381\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0PSA      00001000  FFFFFFD9   15573\n PSCB     00000068  FFFFFFB5   24120\n PTH_Ext2 00000014  FFFFFF4B   48081\n PTH_Ext3 00000008  FFFFFF4A   48092\n PTHDR_T  0000005C  FFFFFF4C   48006\n RBPRFX   00000110  FFFFFFD8   17098\n RFIM     00000010  FFFFFF26   52433\n RFIS     0000001C  FFFFFF27   52414\n RMCT     00000400  FFFFFFC7   20511\n R702CCF  0000011C  FFFFFE55   69704\n R702TYP3 00000030  FFFFFE57   69624\n R702TYP4 00000170  FFFFFE56   69647\n R79AELEM 00000040  FFFFFE6E   68025\n R79BCNTL 00000004  FFFFFE6D   68059\n R79BELEM 00000062  FFFFFE6C   68065\n R79CCHNL 0000006C  FFFFFE6A   68132\n R79CCNTL 00000014  FFFFFE6B   68101\n R79CHL   00000070  FFFFFE78   67186\n R79DCPD  0000000C  FFFFFE68   68325\n R79DCS   0000000C  FFFFFE69   68309\n R79DDS   00000020  FFFFFE67   68345\n R79ECPD  00000030  FFFFFE64   68420\n R79ECS   0000000C  FFFFFE65   68407\n R79EDS   00000038  FFFFFE63   68460\n R79EGD   00000008  FFFFFE66   68379\n R79FIRLM 0000006F  FFFFFE62   68493\n R791ELEM 000000EC  FFFFFE77   67221\n R792ELEM 000000E0  FFFFFE76   67429\n R793     00000066  FFFFFE75   67607\n R794     0000006C  FFFFFE74   67699\n R795ELEM 00000057  FFFFFE73   67752\n R796ELEM 00000056  FFFFFE72   67835\n R797ELEM 0000005C  FFFFFE71   67870\n R798ELEM 00000040  FFFFFE70   67915\n R799ELEM 00000068  FFFFFE6F   67948\n SCVTSECT 000000E0  FFFFFFF4    9730\n SDWA     00000298  FFFFFFD2   18355\n SDWANRC1 000000F0  FFFFFFCC   19417\n SDWANRC2 00000010  FFFFFFCB   19426\n SDWANRC3 000000F0  FFFFFFCA   19439\n SDWAPTRS 00000020  FFFFFFCD   19402\n SDWARC1  000001C8  FFFFFFD1   19030\n SDWARC2  00000010  FFFFFFD0   19275\n SDWARC3  00000020  FFFFFFCF   19287\n SDWARC4  00000168  FFFFFFCE   19346\n SEL      00000004  FFFFFFF9    4365\n SHMEM_TOKEN\n          00000010  FFFFFE4D   70238\n SHVBLOCK 00000020  FFFFFFAB   29460\n SIGEVENT 00000014  FFFFFF46   50422\n SJMRP    0000002C  FFFFFF74   41052\n SJRELIST 0000000C  FFFFFF7D   39687\n SJREP    00000030  FFFFFF7E   39661\n SMCABASE 000001F4  FFFFFF6D   42560\n SMDE     0000002C  FFFFFF62   43900\n1                                                Dsect Cross Reference                                          Page  382\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0SMDE_EXT_ATTR\n          00000024  FFFFFF5C   44056\n SMDE_FD  00000004  FFFFFF5E   44010\n SMDE_NAME\n          00000002  FFFFFF61   43971\n SMDE_NLST\n          00000004  FFFFFF60   43979\n SMDE_PNAME\n          00000002  FFFFFF5D   44018\n SMDE_TOKEN\n          00000020  FFFFFF5F   43993\n SMFRCD30 000000B0  FFFFFEFB   55607\n SMFRCD92 00000034  FFFFFE8B   66140\n SMF14    0000019C  FFFFFEFC   55163\n SMF2A0FA 00000518  FFFFFEB7   59929\n SMF2A0FB 00000548  FFFFFEB6   60545\n SMF2A0GA 000005D0  FFFFFEB3   62285\n SMF2A0GB 000005E0  FFFFFEB2   62842\n SMF2A0JA 000005C0  FFFFFEA4   64596\n SMF2A0JB 00000020  FFFFFEA2   65207\n SMF2A0JC 00000020  FFFFFEA1   65258\n SMF2A0JD 00000004  FFFFFEA0   65302\n SMF2A0JE 00000004  FFFFFE9F   65317\n SMF2A0JF 00000020  FFFFFE9E   65333\n SMF2A0JG 00000004  FFFFFE9D   65371\n SMF2A0PA 00000394  FFFFFEA3   64968\n SMF30ACS 00000001  FFFFFEF4   56411\n SMF30AR  00000028  FFFFFEF0   57055\n SMF30CAS 000000A8  FFFFFEF6   56114\n SMF30CMP 00000008  FFFFFEF7   56030\n SMF30DR  00000028  FFFFFEEF   57079\n SMF30EXP 0000001E  FFFFFEF5   56363\n SMF30ID  000000BA  FFFFFEF9   55808\n SMF30MSE 00000014  FFFFFEEB   57249\n SMF30OP  00000060  FFFFFEEE   57116\n SMF30OPS 00000018  FFFFFEF1   57032\n SMF30PRF 000000D2  FFFFFEF2   56668\n SMF30PSS 00000026  FFFFFEFA   55778\n SMF30RM  0000004D  FFFFFEEC   57201\n SMF30SAP 000000E8  FFFFFEF3   56419\n SMF30UD  0000004C  FFFFFEED   57171\n SMF30URA 0000004C  FFFFFEF8   55923\n SMF4     000000D7  FFFFFE8D   65617\n SMF42    00000024  FFFFFEEA   57503\n SMF42LA0 00000041  FFFFFE98   65446\n SMF42PA0 00000041  FFFFFE92   65563\n SMF42PRD 00000028  FFFFFED5   58025\n SMF42SA  00000008  FFFFFEE2   57688\n SMF42SB  00000008  FFFFFEE1   57703\n SMF42SF  00000020  FFFFFEE0   57718\n SMF42SG  00000020  FFFFFEDF   57761\n SMF42SH  00000010  FFFFFEDE   57802\n SMF42SI  00000018  FFFFFEDD   57825\n SMF42SJ  00000020  FFFFFEDC   57854\n SMF42SK  00000010  FFFFFEDB   57899\n1                                                Dsect Cross Reference                                          Page  383\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0SMF42SL  00000018  FFFFFEDA   57919\n SMF42SM  00000010  FFFFFED9   57946\n SMF42SN  00000008  FFFFFED8   57962\n SMF42SP  00000018  FFFFFED7   57973\n SMF42SQ  00000018  FFFFFED6   57998\n SMF42S1  00000010  FFFFFEE9   57554\n SMF42S2  00000010  FFFFFEE8   57573\n SMF42S3  00000008  FFFFFEE7   57592\n SMF42S4  00000018  FFFFFEE6   57611\n SMF42S5  00000010  FFFFFEE5   57634\n SMF42S6  00000008  FFFFFEE4   57654\n SMF42S9  00000010  FFFFFEE3   57669\n SMF420AA 00000292  FFFFFEBD   58764\n SMF420BA 00000020  FFFFFEBC   58800\n SMF420FA 00000518  FFFFFEB9   58875\n SMF420FB 00000548  FFFFFEB8   59397\n SMF420GA 000005D0  FFFFFEB5   61176\n SMF420GB 000005E0  FFFFFEB4   61727\n SMF420HA 00000120  FFFFFEB1   63405\n SMF420HB 00000120  FFFFFEB0   63516\n SMF420IA 000000C4  FFFFFEAF   63625\n SMF420IC 000000C4  FFFFFEAE   63706\n SMF420IE 00000050  FFFFFEAD   63790\n SMF420JA 000005C0  FFFFFEAC   63821\n SMF420JB 00000020  FFFFFEAA   64420\n SMF420JC 00000020  FFFFFEA9   64469\n SMF420JD 00000004  FFFFFEA8   64514\n SMF420JE 00000004  FFFFFEA7   64528\n SMF420JF 00000020  FFFFFEA6   64541\n SMF420JG 00000004  FFFFFEA5   64582\n SMF420KA 0000004A  FFFFFE9C   65391\n SMF420KB 00000050  FFFFFE9B   65400\n SMF420LA 0000008F  FFFFFE9A   65411\n SMF420LB 00000002  FFFFFE99   65437\n SMF420LC 00000050  FFFFFE97   65454\n SMF420MA 0000004C  FFFFFE96   65469\n SMF420NA 00000072  FFFFFE95   65500\n SMF420PA 00000374  FFFFFEAB   64188\n SMF420PB 00000002  FFFFFE93   65551\n SMF420PC 00000050  FFFFFE91   65570\n SMF420QA 0000008B  FFFFFE90   65585\n SMF420QB 00000041  FFFFFE8F   65597\n SMF420QC 00000050  FFFFFE8E   65607\n SMF4201A 00000024  FFFFFED4   58057\n SMF4201B 00000030  FFFFFED3   58076\n SMF4202A 00000058  FFFFFED2   58102\n SMF4202B 00000010  FFFFFED1   58176\n SMF4203A 000000C0  FFFFFED0   58203\n SMF4204C 00000040  FFFFFECF   58267\n SMF4204E 00000048  FFFFFECC   58332\n SMF4204V 00000058  FFFFFECB   58355\n SMF4205A 00000060  FFFFFEC8   58430\n SMF4205B 00000030  FFFFFEC7   58475\n SMF4205C 00000040  FFFFFEC6   58498\n SMF4205D 00000040  FFFFFEC5   58523\n1                                                Dsect Cross Reference                                          Page  384\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0SMF4205E 00000040  FFFFFEC4   58548\n SMF4206A 00000040  FFFFFEC3   58579\n SMF4209A 0000006C  FFFFFEBF   58710\n SMF4209B 0000005A  FFFFFEBE   58742\n SMF421PA 0000008F  FFFFFE94   65529\n SMF5     00000091  FFFFFE8C   65776\n SMF70AID 00000314  FFFFFE5B   69249\n SMF70BCT 00000048  FFFFFE5A   69487\n SMF70BPD 00000050  FFFFFE59   69550\n SMF70CIS 00000018  FFFFFE58   69610\n SMF70CPU 00000050  FFFFFE5C   69216\n SMF70CTL 000000DC  FFFFFE5D   69055\n SMF70HDR 00000054  FFFFFE61   68759\n SMF70PRO 00000068  FFFFFE60   68954\n SMF70RBL 00000004  FFFFFE5E   69031\n SMF70RHD 00000010  FFFFFE5F   69016\n SMF79HDR 00000044  FFFFFE7C   66909\n SMF79PRO 00000068  FFFFFE7B   67086\n SMF79RBL 00000004  FFFFFE79   67163\n SMF79RHD 00000010  FFFFFE7A   67148\n SMF92DFL 000000CC  FFFFFE7E   66459\n SMF92ESA 00000490  FFFFFE7D   66483\n SMF92FCL 00000084  FFFFFE81   66399\n SMF92FOP 00000018  FFFFFE82   66380\n SMF92FSM 0000006C  FFFFFE88   66220\n SMF92FSP 00000002  FFFFFE87   66244\n SMF92FSR 00000059  FFFFFE85   66277\n SMF92FSS 00000051  FFFFFE86   66255\n SMF92FSU 00000094  FFFFFE84   66301\n SMF92FSV 00000094  FFFFFE83   66337\n SMF92ID  00000048  FFFFFE89   66198\n SMF92MMP 00000018  FFFFFE80   66430\n SMF92MUN 00000028  FFFFFE7F   66443\n SMF92SSS 00000014  FFFFFE8A   66186\n SRBSECT  0000002C  FFFFFFD7   17790\n SRBWORK  00002080  FFFFFFFC    4327\n SSAGDMBK 00000002  FFFFFFE0   15086\n SSAGGMBK 00000002  FFFFFFDF   15092\n SSARB    0000003C  FFFFFFE1   15064\n SSCT     00000024  FFFFFFE6   14357\n SSIB     00000024  FFFFFF57   44673\n SSOB     0000001C  FFFFFF56   44898\n SSOBEXT  00000078  FFFFFF55   44932\n SSS2     00000428  FFFFFF54   46290\n SSTS     00000024  FFFFFF52   47380\n SSWA     00000009  FFFFFFE3   14996\n SSWAIFLD 00000001  FFFFFFE2   15012\n STAT     000000D8  FFFFFF30   52091\n STCB     000004A8  FFFFFFAC   28699\n SVT      00000600  FFFFFF6F   41542\n SYMBP    0000001C  FFFFFE54   69945\n SYMBT    00000004  FFFFFE53   69966\n SYMBTE   00000010  FFFFFE52   70021\n S42CSIDH 00000018  FFFFFECE   58289\n S42CVL   00000024  FFFFFECD   58308\n1                                                Dsect Cross Reference                                          Page  385\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.56\n0S42DSAM  00000030  FFFFFEC0   58687\n S42DSH   00000058  FFFFFEC2   58603\n S42DSIO  00000048  FFFFFEC1   58642\n S42VSIDH 00000020  FFFFFECA   58380\n S42VVL   0000002C  FFFFFEC9   58400\n S42XRSSD 0000002C  FFFFFEBB   58816\n S42XRVLD 00000034  FFFFFEBA   58844\n TBUF     00001000  FFFFFFE8   13882\n TBVT     00000058  FFFFFFE9   13798\n TCBFIX   00000178  FFFFFFAE   27740\n TCBXTNT2 00000020  FFFFFFAD   28531\n THLI     000000EC  FFFFFF33   51626\n TJDSECTD 0000003C  FFFFFF8C   36315\n TOKEN    00000050  FFFFFF20   52751\n TRVT     000000F0  FFFFFFEA   13562\n TSVT     00000128  FFFFFF8D   35921\n TTE      00000090  FFFFFFE7   14096\n TVDSECTD 0000003C  FFFFFF8B   36486\n UFOFUNCT 00000030  FFFFFF0C   54352\n UFOVOL   00000018  FFFFFF0B   54539\n UPT      00000038  FFFFFFB4   24219\n VRAMAP   00000002  FFFFFFC9   19592\n VRL      0000001C  FFFFFFFF    3654\n VSMD     00000008  FFFFFF6C   42943\n XTLST    00000010  FFFFFFD4   17973\n ZB505    0000001C  FFFFFFB1   24949\n1                                                      Using Map                                                Page  386\n-                                                                                            HLASM R6.0  2013/01/07 10.56\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0  4323  00000978  FFFFFFFD USING  ORDINARY    00000000 00001000 FFFFFFD9   0 00224   7867 PSA,R0\n   4412  00000004  FFFFFFF9 USING  ORDINARY    00000000 00001000 FFFFFFFD   7 000CC   4475 ASMDSECT,R7\n   4430  00000036  00000004 USING  ORDINARY    00001C18 00000FFF 00000004  11 003A4   8086 (DATAASMIF,DATAASMIFEND),R11\n   4476  000000A2  00000004 DROP                                            7              R7\n   4477  000000A2  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  13 008D8   4548 ASM_SAVE,R13\n   4514  000000FC  00000004 USING  ORDINARY    00000020 00001000 FFFFFFAE   2 0000C   4523 TCB,R2\n   4516  00000100  00000004 USING  ORDINARY    00000468 00001000 FFFFFFAC  14 00000   4517 TIOT1,R14\n   4524  0000011C  00000004 DROP                                           14              R14\n   4525  0000011C  00000004 USING  ORDINARY    00000040 00001000 FFFFFFD8  14 0001C   4542 RBBASIC,R14\n   4547  00000144  00000004 USING  ORDINARY    00000000 00001000 FFFFFFD6  15 00008   4548 CDENTRY,R15\n   4549  0000014A  00000004 DROP                                           14              R14\n   4549  0000014A  00000004 DROP                                           15              R15\n   4557  0000015A  00000004 DROP                                           13              R13\n   4559  0000015E  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD   7 00060   4564 ASMDSECT,R7\n   4565  00000174  00000004 DROP                                            7              R7\n   4566  00000174  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  13 000CC   4608 ASM_SAVE,R13\n   4611  00000216  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  13 008F4   8161 ASM_SAVE,R13\n   5628  00000C44  00000004 USING  ORDINARY    00000000 00001000 FFFFFF1D   3 00004   5644 IXGBRMHD,R3\n   5630  00000C48  00000004 USING  ORDINARY    00000000 00001000 FFFFFF1C   4 0002C   5648 IXGBRMLT,R4\n   5664  00000CA4  00000004 DROP                                            3              R3\n   5664  00000CA4  00000004 DROP                                            4              R4\n   5679  00000CA4  00000004 USING  ORDINARY    00000000 00001000 FFFFFF95   6 00030   5769 IHADCB,R6\n   5680  00000CA4  00000004 USING  ORDINARY    00000000 00001000 FFFFFF8A   5 00001   5735 IEFJFCBN,R5\n   5681  00000CA4  00000004 USING  DEPENDENT  +000007CC 00000834 FFFFFF86  13              FCL_MAP,ASM_VTOC_FCL\n   5682  00000CA4  00000004 USING  DEPENDENT  +000007E4 0000081C FFFFFF84  13              BFL_MAP,ASM_VTOC_BFL\n   5683  00000CA4  00000004 USING  DEPENDENT  +000007F8 00000808 FFFFFF82  13              CVAFFILT_MAP,ASM_VTOC_CVAFFILT\n   5752  00000D8A  00000004 USING  ORDINARY    00000000 00001000 FFFFFF85   2 00004   5756 FCLDSN,R2\n   5757  00000D9E  00000004 DROP                                            2              R2\n   5762  00000DB0  00000004 USING  ORDINARY    00000000 00001000 FFFFFF83   2 00008   5766 BFLE,R2\n   5767  00000DC0  00000004 DROP                                            2              R2\n   6199  00001148  00000004 USING  ORDINARY    00000000 00001000 FFFFFE4E   4 00000        EVENT_TOKEN,R4\n   6240  0000119C  00000004 DROP                                            4              R4\n   6246  0000119C  00000004 USING  ORDINARY    00000000 00001000 FFFFFE4E   4 00008   6248 EVENT_TOKEN,R4\n   6253  000011AC  00000004 DROP                                            4              R4\n   6649  00001328  00000004 USING  ORDINARY    00000000 00001000 FFFFFFD7   9 00028   6664 SRBSECT,R9\n   6651  0000132C  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFC   8 00078   6770 SRBWORK,R8\n   6828  00001438  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF3  12 0007C   6917 ASCB,R12\n   6832  00001442  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFC   8 00084   7131 SRBWORK,R8\n   6918  000014C0  00000004 DROP                                           12              R12\n   7230  00001688  00000004 USING  ORDINARY    00000000 00001000 FFFFFE4D   2 00008   7277 SHMEM_TOKEN,R2\n   7231  00001688  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFF   4 00018   7301 VRL,R4\n   7259  000016BE  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF3   5 00150   7260 ASCB,R5\n   7261  000016C2  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF1   5 00030   7269 ASSB,R5\n   7283  0000170A  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF3   5 00150   7284 ASCB,R5\n   7285  0000170E  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF1   5 00030   7293 ASSB,R5\n   7346  0000179C  00000004 DROP                                            4              R4\n   7346  0000179C  00000004 DROP                                            5              R5\n   7353  0000179C  00000004 USING  ORDINARY    00000000 00001000 FFFFFE4D   2 00000        SHMEM_TOKEN,R2\n   7354  0000179C  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFF   4 00018   7398 VRL,R4\n   7445  0000185C  00000004 DROP                                            4              R4\n   7649  000019A0  00000004 USING  ORDINARY    00000000 00001000 FFFFFF7F   4 00004   7765 COMLIST,R4\n   7650  000019A0  00000004 USING  ORDINARY    00000000 00001000 FFFFFF81   5 00010   7753 CIBNEXT,R5\n   7773  00001A9E  00000004 DROP                                            4              R4\n1                                                      Using Map                                                Page  387\n-                                                                                            HLASM R6.0  2013/01/07 10.56\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0  7774  00001A9E  00000004 DROP                                            5              R5\n   7819  00001AE2  00000004 USING  ORDINARY    00000020 00001000 FFFFFFAE   2 0007C   7821 TCB,R2\n   7866  00001B46  00000004 USING  ORDINARY    00000020 00001000 FFFFFFAE   2 0007C   7868 TCB,R2\n   8198  00001FBC  00000004 PUSH\n   8199  00001FBC  00000004 DROP                                           13              R13\n   8201  00001FBE  00000004 USING  ORDINARY    00000076 00001000 FFFFFFFD  15 00052   8203 ASM_TIMX+2,R15\n   8212  00001FD4  00000004 DROP                                           15              R15\n   8214  00001FD4  00000004 POP\n  15569  00000214  FFFFFFDA PUSH\n  15572  00000214  FFFFFFDA USING  ORDINARY    00000000 00001000 FFFFFFD9   0 00000        PSA,0\n  16955  00001000  FFFFFFD9 POP\n1                                   General Purpose Register Cross Reference                                    Page  388\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 10.56\n0    0(0)     4323U  4415M  4427   4428   4459M  4466M  4470M  4487M  4490   4498M  4501   4509M  4512   4558   4618   4638M  4639\n              4642M  4643   4647   4655   4674M  4675   4678M  4679   4680M  4681   4685   4719M  4720   4722M  4723   4727   4753M\n              4775M  4879M  4880   4904M  4905   4908M  4909   4912M  4913   4946M  4950   4951M  4952M  4953   5085   5148M  5184M\n              5225M  5246M  5282M  5286   5314M  5318   5350M  5354   5382M  5386   5442M  5446   5475M  5479   5522M  5526   5558M\n              5562   5570   5579M  5610M  5614   5662   5689M  5692M  5695M  5703M  5817M  5823M  5834M  5838M  5849   5957   5973M\n              5974M  6108M  6109M  6115M  6230M  6259   6278M  6279M  6372M  6416M  6416   6472M  6523M  6527M  6544M  6550M  6550\n              6560M  6643M  6726M  6733   6744M  6752M  6759   6765M  6797M  6905M  6912   6971M  6974M  7025M  7032   7125M  7125\n              7159M  7160M  7161   7162   7163   7196M  7197   7200M  7201   7204M  7205   7208M  7209   7277M  7278M  7279M  7280M\n              7281   7325   7424   7457M  7467M  7477M  7511M  7569M  7589M  7589   7599M  7633M  7679M  7680M  7680   7707M  7730\n              7732   7765M  7827M  7884M  7909   7920   7937   8202   8207M  8207   8210M 15572U\n     1(1)     4415   4416M  4416   4417M  4417   4418M  4418   4420   4424   4425   4427M  4428   4431   4447M  4465   4466   4469M\n              4470M  4488M  4488   4499M  4499   4510M  4510   4556M  4558   4618   4621M  4637M  4639   4640   4641   4643   4655\n              4662M  4673M  4675   4676   4677   4679   4681   4698M  4700M  4700   4707M  4718M  4720   4721   4723   4735M  4737M\n              4737   4759   4776M  4803M  4804   4805   4806   4807   4813   4814   4852M  4853   4854   4855   4856   4862   4863\n              4879M  4901M  4905   4909   4913   4914   4950   4951M  4952M  4953   4964M  4965M  4965   4978M  4979M  4979   5013M\n              5014   5014   5015   5016   5017   5018   5019   5020   5021   5022   5023   5024   5025   5026   5027   5028   5029\n              5031   5052M  5053   5053   5054   5055   5056   5057   5058   5059   5060   5061   5062   5063   5064   5065   5066\n              5068   5070   5132M  5133   5133   5134   5135   5136   5138   5139   5140   5141   5142   5142   5143M  5143   5150M\n              5150   5151   5170M  5171   5171   5172   5173   5175   5176   5177   5178   5178   5179M  5179   5186M  5186   5210M\n              5211   5211   5212   5213   5214   5216   5217   5218   5219   5219   5220M  5220   5254   5266M  5267   5267   5268\n              5269   5271   5272   5273   5275   5276   5276   5277M  5277   5284M  5284   5298M  5299   5299   5300   5301   5303\n              5304   5305   5307   5308   5308   5309M  5309   5316M  5316   5334M  5335   5335   5336   5337   5339   5340   5341\n              5343   5344   5344   5345M  5345   5352M  5352   5366M  5367   5367   5368   5369   5371   5372   5373   5375   5376\n              5376   5377M  5377   5384M  5384   5404M  5405   5405   5406   5407   5409   5415   5425M  5426   5426   5427   5428\n              5430   5431   5432   5434   5435   5436   5436   5437M  5437   5444M  5444   5458M  5459   5459   5460   5461   5463\n              5464   5465   5467   5468   5469   5469   5470M  5470   5477M  5477   5502M  5503   5503   5504   5505   5506   5507\n              5508   5510   5511   5512   5514   5515   5516   5516   5517M  5517   5524M  5524   5538M  5539   5539   5540   5541\n              5542   5543   5544   5546   5547   5548   5550   5551   5552   5552   5553M  5553   5560M  5560   5580M  5594M  5595\n              5595   5596   5597   5599   5600   5601   5603   5604   5604   5605M  5605   5612M  5612   5651M  5652N  5709   5710\n              5718M  5719   5720N  5721   5727M  5728N  5729N  5730N  5739M  5740   5741N  5742N  5743N  5754M  5755   5765M  5766\n              5768M  5768   5769M  5770   5774M  5775   5777   5779   5794M  5795   5804M  5805   5806   5808   5810   5815M  5816N\n              5817   5818M  5818   5824M  5835M  5837   5838M  5886M  5888M  5901   5904   5905M  5907   5914M  5915   5927M  5929\n              5936M  5937   5957   5958M  5959M  5959   5971M  6064M  6065   6070   6071   6080M  6081   6082   6084   6086   6100M\n              6106M  6117M  6118M  6118   6126M  6131M  6132M  6132   6133M  6133   6137   6150M  6150   6154   6156   6178M  6179\n              6180   6182   6184   6207M  6208M  6209   6231M  6259   6277M  6337M  6339M  6339   6404   6405   6417M  6418M  6524M\n              6525   6527M  6551M  6552M  6561M  6580M  6582M  6582   6613M  6614M  6614N  6615   6616M  6616N  6617   6618   6634M\n              6636M  6636   6645M  6645   6647   6648   6670M  6671   6672   6678   6727M  6734   6742M  6753M  6760   6767M  6798M\n              6814M  6816M  6816   6831   6850M  6851   6852   6854   6860   6906M  6913   6942M  6944   6946   6947   6949   6950\n              6971M  6974M  7026M  7033   7038M  7039   7040   7042   7069M  7193M  7197   7201   7205   7209   7211   7212   7238M\n              7240M  7240   7249M  7253   7266M  7267   7268   7270   7276   7290M  7291   7292   7294   7300   7310M  7311   7311\n              7312   7313   7314   7315   7341M  7343M  7343   7362M  7364M  7364   7373M  7377   7382M  7383   7384   7386   7395M\n              7396   7397   7399   7410M  7411   7411   7412   7413   7414   7440M  7442M  7442   7492M  7494M  7494   7503M  7507\n              7512M  7533M  7535M  7535   7563M  7565M  7565   7590M  7591M  7600M  7619M  7621M  7621   7634M  7661M  7662N  7664N\n              7665   7666   7677M  7678M  7678   7708M  7732   7764M  7799M  7815M  7817M  7817   7834N  7835   7836M  7836   7837\n              7844M  7846M  7846   7862M  7864M  7864   7886M  7898M  7900M  7900   7909   7911   7920   7924   7928   7929M  7929\n              7937   7939   7943M  7943   7947M  8081   8202   8208M  8210M\n     2(2)     4423   4428   4446M  4513M  4514U  4555M  4558   4610M  4618   4620M  4621   4623M  4640   4648M  4655   4661M  4662\n              4664M  4676   4686M  4706M  4707   4709M  4721   4739M  4747M  4748M  4749M  4753   4761M  4769M  4770M  4771M  4775\n              4783M  4793M  4813   4835M  4843M  4862   4872M  4880M  4881   4883M  4892M  4902   4924M  4925M  4930M  4931   4933M\n              4938M  4950   4951   4953   4955M  5092M  5109M  5112M  5112   5197   5256   5324   5393M  5488   5651M  5653N  5663M\n              5684M  5686M  5686   5712M  5713   5751M  5752U  5757D  5761M  5762U  5767D  5836M  5838M  5858M  5868M  5875M  5886M\n              5949M  5957   5982M  5987M  5989   6010N  6014   6031M  6038M  6039M  6039   6046   6051M  6053   6054M  6059   6064N\n              6091M  6091   6191M  6239M  6252M  6259   6298M  6306M  6508   6509M  6526M  6561   6600M  6611M  6612   6657M  6658M\n              6659   6660M  6661M  6662   6663   6818M  7070M  7083M  7083   7112M  7157M  7158   7159   7222M  7230U  7246M  7248\n              7254M  7330M  7330   7331M  7335   7345M  7353U  7355M  7370M  7372   7429M  7429   7430M  7434   7444M  7500M  7502\n1                                   General Purpose Register Cross Reference                                    Page  389\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 10.56\n0             7522M  7522   7523M  7527   7600   7641M  7656M  7661   7698M  7699   7708   7731M  7732   7747M  7748M  7748   7759M\n              7760   7772M  7784M  7793M  7802M  7819U  7820M  7821M  7828   7850M  7866U  7867M  7868M  7885   7904M  7909   7910M\n              7910   7912M  7914M  7915   7916M  7920   7922M  7928   7930M  7930   7933M  7937   7938M  7945M  7948   7949M  8202\n              8203M  8208   8210M\n     3(3)     4423   4428   4446M  4464M  4555M  4558   4610M  4618   4620M  4641   4648M  4655   4661M  4677   4686M  4739M  4747M\n              4758M  4759   4761M  4769M  4776   4781M  4783M  4793M  4814   4835M  4843M  4863   4872M  4883M  4892M  4903   4924M\n              4925M  4933M  4947M  4955M  4967M  4981M  5092M  5109M  5201M  5201   5213   5233M  5233   5237   5237   5251M  5413M\n              5493M  5507   5543   5573M  5580   5585M  5626M  5628U  5629N  5649   5663M  5664D  5684M  5690M  5690   5698   5708M\n              5829M  5837M  5838M  5858M  5868M  5875M  5949M  5957   5982M  5988M  5993M  5995   5999M  5999   6000   6008   6009M\n              6009   6010   6014M  6015M  6016   6020   6024   6024   6031M  6055M  6063M  6063   6071   6085N  6088   6095   6122M\n              6165M  6169   6183N  6191M  6239M  6248M  6252M  6259   6298M  6306M  6377M  6508M  6566M  6600M  6676M  6818M  6858M\n              7046M  7157M  7164M  7164   7168M  7196   7222M  7254M  7274M  7298M  7301   7321M  7345M  7355M  7390M  7403M  7420M\n              7444M  7482M  7482   7483M  7512   7517M  7605M  7639M  7641M  7657M  7662   7731M  7732   7747M  7754   7758M  7759M\n              7772M  7784M  7792M  7793M  7802M  7822M  7823M  7823   7827   7833M  7834   7850M  7869M  7871M  7871   7875M  7876\n              7877   7886   7891M  7904M  7909   7911M  7912M  7913M  7913   7914M  7915   7916M  7920   7923M  7932M  7933M  7937\n              7949M  8081   8161   8202   8210M\n     4(4)     4423   4428   4446M  4464M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4758M  4761M  4781M  4783M  4793M\n              4804   4835M  4843M  4853   4872M  4883M  4892M  4904   4924M  4925M  4933M  4947M  4955M  5092M  5109M  5115M  5115\n              5118   5120M  5121M  5122   5199M  5199   5203   5235M  5235   5238   5238   5242M  5246   5251M  5413M  5575M  5579\n              5585M  5625M  5629M  5629   5630U  5663M  5664D  5684M  5693M  5693   5699   5708M  5717M  5718   5722   5727   5739\n              5829M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6056M  6093M  6096M  6097   6122M  6164M  6188M  6191M  6199U\n              6200M  6201N  6209   6221   6231   6239M  6240D  6246U  6247M  6252M  6253D  6259   6298M  6366M  6377M  6405M  6417\n              6419   6509   6526   6527M  6551   6553   6566M  6600M  6676M  6818M  6858M  7046M  7157M  7170M  7170   7174M  7199\n              7222M  7231U  7255M  7256   7256   7274M  7298M  7302   7303M  7315   7321M  7345M  7346D  7354U  7356M  7390M  7403M\n              7414   7420M  7444M  7445D  7517M  7583M  7590   7592   7605M  7639M  7641M  7649U  7668M  7668   7669M  7686M  7686\n              7687M  7731M  7732   7772M  7773D  7784M  7787   7790M  7793M  7802M  7822M  7833M  7837   7850M  7876M  7884   7891M\n              7904M  7909   7916M  7920   7933M  7937   7949M  8202   8210M\n     5(5)     4423   4428   4446M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4793M  4835M  4872M  4883M\n              4892M  4906   4924M  4925M  4933M  4955M  5092M  5110M  5394M  5394   5397   5398   5639M  5642M  5650   5652   5663M\n              5680U  5684M  5696M  5696   5715M  5720   5858M  5868M  5875M  5949M  5957   5982M  6031M  6057M  6088   6089M  6089\n              6099M  6107   6163M  6165   6186M  6186   6191M  6200M  6208   6221   6230   6239M  6247M  6252M  6259   6298M  6525M\n              6527M  6600M  6818M  7157M  7176M  7176   7180M  7202   7222M  7258M  7259U  7260M  7261U  7282M  7283U  7284M  7285U\n              7345M  7346D  7444M  7641M  7650U  7673M  7688M  7688   7689M  7711M  7731M  7732   7734M  7734   7764   7767M  7767\n              7772M  7774D  7791M  7793M  7802M  7838M  7848   7850M  7892M  7902   7904M  7909   7916M  7920   7933M  7937   7949M\n              8202   8210M\n     6(6)     4423   4428   4446M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M  4883M  4924M\n              4925M  4933M  4955M  5092M  5648M  5649M  5650M  5653   5663M  5679U  5710M  5715   5717   5729   5742   5816   5858M\n              5868M  5875M  5949M  5957   5982M  6031M  6191M  6201M  6202M  6202   6206M  6209M  6213M  6213   6217M  6239M  6252M\n              6259   6298M  6600M  6818M  6916M  6974M  7009   7157M  7182   7222M  7345M  7444M  7641M  7731M  7732   7772M  7802M\n              7850M  7904M  7909   7916M  7920   7933M  7937   7949M  8086   8202   8210M\n     7(7)     4412U  4423   4428   4431M  4432M  4432   4433M  4433   4446M  4450   4465M  4472   4474   4476D  4551   4555M  4558\n              4559U  4560   4562   4565D  4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M  4883M  4924M  4925M\n              4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6191M  6239M  6252M  6259   6298M  6600M\n              6818M  6916M  6974M  7009   7127M  7130   7222M  7345M  7444M  7634   7641M  7731M  7732   7772M  7802M  7850M  7904M\n              7909   7916M  7920   7933M  7937   7949M  8202   8210M\n     8(8)     4423   4428   4438M  4438   4439M  4441M  4441   4446M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4761M\n              4783M  4835M  4872M  4883M  4924M  4925M  4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M\n              6191M  6239M  6252M  6259   6298M  6600M  6650M  6651U  6664   6818M  6831M  6832U  7222M  7345M  7444M  7641M  7731M\n              7732   7772M  7802M  7850M  7904M  7909   7916M  7920   7933M  7937   7949M  8202   8210M\n     9(9)     4423   4428   4446M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M  4883M  4924M\n              4925M  4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6191M  6239M  6252M  6259   6298M\n              6600M  6648M  6649U  6650   6742   6790M  6798   6818M  6830M  7143B  7222M  7345M  7444M  7641M  7731M  7732   7772M\n              7802M  7850M  7904M  7909   7916M  7920   7933M  7937   7949M  8202   8210M\n    10(A)     4423   4428   4446M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M  4883M  4924M\n              4925M  4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6191M  6239M  6252M  6259   6298M\n1                                   General Purpose Register Cross Reference                                    Page  390\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 10.56\n0             6600M  6818M  7124M  7126M  7222M  7345M  7444M  7641M  7731M  7732   7772M  7802M  7850M  7904M  7909   7916M  7920\n              7933M  7937   7949M  8202   8210M\n    11(B)     4423   4428   4429M  4430U  4446M  4555M  4558   4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M\n              4883M  4924M  4925M  4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6191M  6239M  6252M\n              6259   6298M  6600M  6725   6731M  6751   6757M  6818M  6829M  6904   6910M  7024   7030M  7129M  7130M  7135M  7222M\n              7345M  7444M  7641M  7731M  7732   7772M  7802M  7850M  7904M  7909   7916M  7920   7933M  7937   7949M  8202   8210M\n              8874B  8875B\n    12(C)     4423   4428   4446M  4473   4555M  4558   4561   4610M  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M\n              4883M  4924M  4925M  4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6191M  6239M  6252M\n              6259   6298M  6600M  6726   6733M  6752   6759M  6818M  6828U  6833M  6905   6912M  6917M  6918D  6947   7025   7032M\n              7128M  7222M  7345M  7444M  7641M  7731M  7732   7772M  7802M  7850M  7904M  7909   7916M  7920   7933M  7937   7949M\n              8202   8210M\n    13(D)     4422   4423   4425   4428   4445   4446   4450M  4472   4474   4475M  4477U  4553M  4553   4554   4555   4557D  4558\n              4560   4562   4563M  4566U  4610M  4611U  4618   4648M  4655   4686M  4739M  4761M  4783M  4835M  4872M  4883M  4924M\n              4925M  4933M  4955M  5092M  5663M  5858M  5868M  5875M  5949M  5957   5982M  6031M  6191M  6239M  6252M  6259   6298M\n              6600M  6727   6729M  6730B  6732   6734M  6753   6755M  6756B  6758   6760M  6818M  6834M  6906   6908M  6909B  6911\n              6913M  7026   7028M  7029B  7031   7033M  7131M  7222M  7345M  7444M  7641M  7731M  7732   7772M  7802M  7850M  7904M\n              7909   7916M  7920   7933M  7937   7949M  8199D  8202   8210\n    14(E)     4422   4424M  4426B  4428   4440M  4445M  4447B  4461M  4462M  4462N  4463M  4463N  4464   4464M  4470M  4515M  4516U\n              4521M  4523M  4524D  4525U  4534M  4535M  4535   4549D  4554M  4556B  4558   4558   4610M  4618   4618   4622M  4644M\n              4648M  4655   4655   4663M  4682M  4686M  4708M  4724M  4739M  4755M  4756M  4756N  4757M  4757N  4758   4758M  4761M\n              4778M  4779M  4779N  4780M  4780N  4781   4781M  4783M  4807M  4808   4810M  4810N  4811   4835M  4856M  4857   4859M\n              4859N  4860   4872M  4883M  4902M  4905   4906M  4909   4910M  4913   4919M  4924M  4925M  4933M  4943M  4944M  4944N\n              4945M  4945N  4947   4947M  4955M  4968M  4982M  5030M  5031   5067M  5068   5069M  5070   5092M  5137M  5138   5149M\n              5174M  5175   5185M  5215M  5216   5226M  5248M  5249M  5249N  5250M  5250N  5251   5251M  5270M  5271   5274M  5275\n              5283M  5302M  5303   5306M  5307   5315M  5338M  5339   5342M  5343   5351M  5370M  5371   5374M  5375   5383M  5408M\n              5409   5410M  5411M  5411N  5412M  5412N  5413   5413M  5414M  5415   5429M  5430   5433M  5434   5443M  5462M  5463\n              5466M  5467   5476M  5509M  5510   5513M  5514   5523M  5545M  5546   5549M  5550   5559M  5582M  5583M  5583N  5584M\n              5584N  5585   5585M  5598M  5599   5602M  5603   5611M  5663M  5705M  5706M  5706N  5707M  5707N  5708   5708M  5728M\n              5730   5741M  5743   5826M  5827M  5827N  5828M  5828N  5829   5829M  5858M  5868M  5875M  5949M  5957   5957   5966M\n              5982M  6031M  6083M  6084   6085M  6086   6101M  6119M  6120M  6120   6121M  6121   6122   6122M  6130M  6143M  6181M\n              6182   6183M  6184   6191M  6239M  6252M  6259   6259   6298M  6374M  6375M  6375N  6376M  6376N  6377   6377M  6420M\n              6554M  6563M  6564M  6564N  6565M  6565N  6566   6566M  6600M  6673M  6674M  6674N  6675M  6675N  6676   6676M  6677M\n              6678   6728M  6729N  6730M  6754M  6755N  6756M  6818M  6830   6853M  6854   6855M  6856M  6856N  6857M  6857N  6858\n              6858M  6859M  6860   6907M  6908N  6909M  6953M  7027M  7028N  7029M  7041M  7042   7043M  7044M  7044N  7045M  7045N\n              7046   7046M  7134M  7148B  7194M  7197   7198M  7201   7202M  7205   7206M  7209   7210M  7211   7217M  7222M  7269M\n              7270   7271M  7272M  7272N  7273M  7273N  7274   7274M  7275M  7276   7293M  7294   7295M  7296M  7296N  7297M  7297N\n              7298   7298M  7299M  7300   7316M  7317M  7317N  7318M  7318N  7320M  7321   7321M  7345M  7385M  7386   7387M  7388M\n              7388N  7389M  7389N  7390   7390M  7398M  7399   7400M  7401M  7401N  7402M  7402N  7403   7403M  7415M  7416M  7416N\n              7417M  7417N  7419M  7420   7420M  7444M  7514M  7515M  7515N  7516M  7516N  7517   7517M  7593M  7602M  7603M  7603N\n              7604M  7604N  7605   7605M  7636M  7637M  7637N  7638M  7638N  7639   7639M  7641M  7663M  7663   7664   7674M  7716M\n              7731M  7732   7732   7752M  7759M  7772M  7786M  7787M  7788   7802M  7830M  7831M  7831N  7832M  7832N  7833   7833M\n              7850M  7888M  7889M  7889N  7890M  7890N  7891   7891M  7904M  7909   7909   7916M  7920   7920   7933M  7937   7937\n              7949M  8202   8210M  8211B\n    15(F)     4428   4460M  4467   4470M  4483M  4487   4494M  4498   4505M  4509   4542M  4543M  4543   4547U  4549D  4551M  4558\n              4570M  4571M  4572M  4573B  4618   4628M  4644B  4647   4655   4660M  4682B  4685   4703M  4724B  4727   4754M  4760\n              4777M  4782   4816M  4816   4820M  4820   4821M  4825M  4825   4829M  4833M  4834   4865M  4865   4869M  4869   4870M\n              4871   4882   4903M  4905   4907M  4909   4911M  4913   4916M  4918M  4918N  4919B  4920M  4921   4922M  4923   4932M\n              4932   4948M  4948   4954M  4954   4969M  4969   4971   4973M  4974   4975M  4976   4983M  4983   4985   4987M  4988\n              4989M  4990   5084   5086M  5086   5111M  5111   5144M  5145M  5145N  5146M  5146N  5147M  5147N  5149B  5152   5156M\n              5156   5180M  5181M  5181N  5182M  5182N  5183M  5183N  5185B  5187   5191M  5191   5221M  5222M  5222N  5223M  5223N\n              5224M  5224N  5226B  5247M  5252M  5252   5278M  5279M  5279N  5280M  5280N  5281M  5281N  5283B  5285   5310M  5311M\n              5311N  5312M  5312N  5313M  5313N  5315B  5317   5346M  5347M  5347N  5348M  5348N  5349M  5349N  5351B  5353   5378M\n              5379M  5379N  5380M  5380N  5381M  5381N  5383B  5385   5438M  5439M  5439N  5440M  5440N  5441M  5441N  5443B  5445\n              5471M  5472M  5472N  5473M  5473N  5474M  5474N  5476B  5478   5485   5487M  5487   5518M  5519M  5519N  5520M  5520N\n1                                   General Purpose Register Cross Reference                                    Page  391\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 10.56\n0             5521M  5521N  5523B  5525   5554M  5555M  5555N  5556M  5556N  5557M  5557N  5559B  5561   5567   5581M  5606M  5607M\n              5607N  5608M  5608N  5609M  5609N  5611B  5613   5618   5620M  5621   5657M  5659M  5659   5661   5704M  5732M  5732\n              5776M  5777   5778M  5779   5781M  5781   5783   5807M  5808   5809M  5810   5825M  5831M  5833M  5833   5851M  5853M\n              5855M  5855   5857   5887M  5948   5957   5972M  5972   5976M  5976   5980M  5981   6025M  6025   6029M  6030   6107M\n              6129M  6131   6141M  6141   6155M  6155   6156M  6160M  6161   6238M  6250M  6250   6251M  6259   6272M  6281   6290M\n              6329M  6373M  6389M  6389   6419M  6433M  6433   6485M  6485   6553M  6562M  6584M  6584   6644M  6690M  6690   6725M\n              6731   6732M  6743M  6744B  6751M  6757   6758M  6799M  6872M  6872   6904M  6910   6911M  6915M  6943M  6944   6945M\n              6946   6948M  6948   6949   6950   6951M  6952M  6952   6953B  6965   7004   7008   7024M  7030   7031M  7058M  7058\n              7071M  7112   7124   7132M  7133M  7133   7134B  7195M  7197   7199M  7201   7203M  7205   7207M  7209   7214M  7216M\n              7216N  7217B  7218M  7219   7220M  7221   7319M  7320   7325   7418M  7419   7424   7513M  7592M  7601M  7635M  7640M\n              7640   7720M  7720   7724M  7728M  7730   7732   7733M  7733   7738M  7753M  7754   7758   7759M  7771M  7771   7785M\n              7785   7787M  7789   7801M  7801   7829M  7838   7848M  7849   7870M  7870   7887M  7892   7902M  7903   7909   7920\n              7937   7946M  7948M  8200M  8201U  8202   8210M  8212D  9337M  9337\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page  392\n-                                                                                            HLASM R6.0  2013/01/07 10.56\n0Statements Flagged\n0    52(L1:$$SYSTEM,51), 53(L1:$$SYSTEM,52), 54(L1:$$SYSTEM,53), 55(L1:$$SYSTEM,54), 56(L1:$$SYSTEM,55),\n     57(L1:$$SYSTEM,56), 58(L1:$$SYSTEM,57), 59(L1:$$SYSTEM,58), 60(L1:$$SYSTEM,59), 61(L1:$$SYSTEM,60),\n     62(L1:$$SYSTEM,61), 63(L1:$$SYSTEM,62), 64(L1:$$SYSTEM,63), 65(L1:$$SYSTEM,64), 66(L1:$$SYSTEM,65),\n     67(L1:$$SYSTEM,66), 68(L1:$$SYSTEM,67), 69(L1:$$SYSTEM,68), 6613(L1:$$ASMIF,1685), 7132(L1:$$ASMIF,1835),\n     7247(L1:$$SETKEY,25), 7371(L1:$$SETKEY,25), 7501(L1:$$SETKEY,25)\n\n      23 Statements Flagged in this Assembly        4 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK62835\n0SYSTEM: z/OS 01.12.00              JOBNAME: COMPALL     STEPNAME: ASMIF      PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTEXP.ASM                           USERL1  ASMIF\n   L1 SYSLIB   ESA.PRJ.CBTEXP.ASM                           USERL1\n   L2          SYS1.MACLIB                                  Z1CT12\n   L3          SYS1.MODGEN                                  Z1CT12\n   L4          CEE.SCEEMAC                                  Z1CT12\n   L5          ASM.AASMMAC2                                 Z1CDL1\n   L6          ASM.AASMMAC1                                 Z1CDL1\n   L7          TCPIP.SEZACMAC                               Z1CT12\n   L8          TCPIP.SEZANMAC                               Z1CT12\n      SYSADATA ESA.PRJ.CBTEXP.ADATA                         USERL2  ASMIF\n      SYSLIN   ESA.PRJ.CBTEXP.OBJECT                        USER09  ASMIF\n      SYSPRINT ESA.PRJ.CBTEXP.COMPLIST                      USER0D  ASMIF\n      SYSTERM  RACF.COMPALL.JOB09204.D0000101.?\n\n  908448K allocated to Buffer Pool       Storage required   25372K\n       3 Primary Input Records Read       169287 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read              22313 Primary Print Records Written         0 Work File Writes\n     119 Object Records Written           115785 ADATA Records Written\n0Assembly Start Time: 10.56.14 Stop Time: 10.57.24 Processor Time: 00.00.00.9563\n Return Code 004\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CASMIF": {"ttr": 869, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTEXP.CPP(CASMIF)'                      07.01.13 11:00:19\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH\n                                  :DLL(NOCALLBACKANY)              ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH\n                                  :NOEXPMAC        NOEXPORTALL     NOFASTTEMPINC   FLAG(I)         GOFF            GONUMBER\n                                  :HALT(16)        NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32\n                                  :NOINITAUTO      NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP\n                                  :NOMARGINS       MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)\n                                  :OBJECT          OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)\n                                  :PLIST(HOST)     NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT\n                                  :ROSTRING        ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS\n                                  :SOURCE          SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              NOTEMPLATEREGISTRY\n                                  :TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)      TMPLPARSE(NO)   TUNE(7)\n                                  :UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64        NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :CSECT()\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1,\n                                   MU_STANDALONE=1,SAPI_NO=1,VSAM_NO=1)\n                                  :FLOAT(HEX,FOLD,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__)\n                                  :NOKEYWORD(char16_t,char32_t,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NODBCS,NODECLTYPE,NODELEGATINGCTORS,DEPENDENTBASELOOKUP,\n                                   NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,EXTERNTEMPLATE,ILLPTOM,\n                                   IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,NOOLDDIGRAPH,OLDFRIEND,\n                                   NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,TRAILENUM,TYPEDEFCLASS,\n                                   NOUCS,VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :XPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(NOSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410C0000\n                                  : __LIBREL__=0x410C0000\n                                  : __TARGET_LIB__=0x410C0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTEXP.CPP(CASMIF)'                      07.01.13 11:00:19\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 |\n             2 | /*******************************************************************************\n             3 | * Copyright ISIS Papyrus Technologies Limited\n             4 | *-------------------------------------------------------------------------------\n             5 | * File:              $Source: /data/cvs/src/mvs/casmif.cpp,v $\n             6 | *-------------------------------------------------------------------------------\n             7 | * Description:\n             8 | *   ???\n             9 | *******************************************************************************/\n            10 |\n            11 | #include \"isisdef.h\"\n            12 | #include <stdlib.h>\n            13 | #include <string.h>\n            14 | #include <strings.h>\n            15 |\n            16 | #if  defined(OWN_STDIO) == 1\n            17 | #include \"stdio.hpp\"\n            18 | //#include \"crctable.hpp\"\n            19 | #include \"filesys.hpp\"\n            20 | #endif\n            21 |\n            22 | #include \"casmif.hpp\"\n            23 | #include \"mchain.hpp\"\n            24 | #include \"merror.hpp\"\n            25 | #include \"mvsbase.hpp\"\n            26 | #include \"mvstime.hpp\"\n            27 | #if defined(CICSAPPL) == 0 && defined(MU_STANDALONE) == 0  //szm20050810\n            28 | #include \"isismisc.hpp\"\n            29 | #endif\n            30 | #include \"misc.hpp\"\n            31 | #include \"msgmgr.hpp\"\n            32 | #ifndef OWN_STDIO\n            33 | #include <assert.h>\n            34 | #endif\n            35 |\n            36 | ISIS_EXT_ASM unsigned int ASMIF(void *);\n            37 | static pMvsInterface  _mvsInterface\u00c4\u00dc = \u00e40,0,0,0,0,0,0,0\u00fc;\n            38 | static pcsul          _tcb\u00c4\u00dc         = \u00e40,0,0,0,0,0,0,0\u00fc;\n            39 | //szm20081215 zIIP\n            40 | bool MvsInterface::zIIP = getenv(\"ISIS_ZIIP_SUPPORT\")?true:false;\n            41 | pcsul  MvsInterface::wlmEnclave = 0;\n            42 | //szm20081215 zIIP\n            43 |\n            44 | //ZA030610 always 8\n            45 | static int            MAX_TCB        = 8;\n            46 | static char CRITICAL_MAJOR\u00c4\u00dc = \"ASM__MVS\";\n            47 | static char CRITICAL_MINOR\u00c4\u00dc = \"ASM__MVS__CRITICAL\";\n            48 | static char MSG_MAJOR\u00c4\u00dc      = \"ASM__MSG\";\n            49 | static char MSG_MINOR\u00c4\u00dc      = \"OMSMSGMN\";\n            50 | static char ASM_MAJOR\u00c4\u00dc      = \"OMS     \";\n            51 | static char ASM_MSG\u00c4\u00dc        = \"ASM_MSG\";\n            52 | static char WAIT_MAJOR\u00c4\u00dc     = \"ASM_WAIT\";\n            53 | static char POST_MAJOR\u00c4\u00dc     = \"ASM_POST\";\n            54 | #ifndef sym_init\n            55 | #define sym_init -1\n            56 | #endif\n            57 |\n            58 | //20060418MessageTEXT * messagetext = NULL; //szm2041120\n            59 |\n            60 | static int _init_messagetext = initMessageText();\n            61 |\n            62 | int  GlobalTraceFlag = getenv(\"TRACE\") ? atoi(getenv(\"TRACE\")):0;\n            63 | int  GlobalCicsFlag  = 0;\n            64 | static char* MSGQ    = getenv(\"MSGQ\") ? getenv(\"MSGQ\"):\"SASO\";\n            65 | static int   MvsTimer_status = 0;\n            66 |\n            67 | static void btracef(const char * text)\n            68 |  \u00e4\n            69 |  printf(\" %s \u00d6n\",text);\n            70 |  \u00fc\n            71 |\n            72 |\n            73 | static int CompareAndSwap(pcsul &p1,pcsul p2,void *p3)\n            74 |  \u00e4\n            75 |  // if ( p1 == *p3 ) *p3 = p2\n            76 |  // else p1 = *p3\n            77 |  return 1;\n            78 |  \u00fc\n            79 |\n            80 | #if (MEM_SUPPORT)\n            81 | //\n            82 | //------------------------------------------------------------------------------\n            83 | //\n            84 |\n            85 | void * OwnRealloc(void *a, size_t size)\n            86 |  \u00e4\n            87 |  if ( size == 0 )\n            88 |   return NULL;\n            89 |  else if ( a == NULL )\n            90 |   return (OwnMalloc(size));\n            91 |  void * n = OwnMalloc(size);\n            92 |  if ( NOT n ) return NULL;\n            93 |  size_t oldsize =*((int *)a-2)-16;\n            94 |  assert(oldsize > 0);\n            95 |  if ( oldsize < size )\n            96 |   memcpy(n,a,oldsize);\n            97 |  else\n            98 |   memcpy(n,a,size);\n            99 |  OwnFree(a);\n           100 |  return n;\n           101 |  \u00fc\n           102 | #endif\n           103 | /*-----------------------------------------------------------------\n           104 | MvsInterface\n           105 | ------------------------------------------------------------------*/\n           106 |\n           107 | void MvsInterface::trace(char * t)\n           108 |  \u00e4\n           109 |  if ( GlobalTraceFlag && file )\n           110 |   fprintf(file,\"%s\u00d6n\",t);\n           111 |  \u00fc\n           112 |\n           113 | void MvsInterface::tracedump(char * t,void * bv,int  bl)\n           114 |  \u00e4\n           115 |  if ( GlobalTraceFlag )\n           116 |   \u00e4\n           117 |   if ( file )\n           118 |    fprintf(file,\"%s === %p\u00d6n\",t,bv);\n           119 |   char p\u00c4512\u00dc;\n           120 |   char * b = (char *)bv;\n           121 |   for(int o = 0;o<=bl;o+=16)\n           122 |    \u00e4\n           123 |    dump(p,o,b,bl);\n           124 |    fprintf(file,\"%s %s \u00d6n\",DatetoString(),p);\n           125 |    \u00fc\n           126 |   \u00fc\n           127 |  \u00fc\n           128 |\n           129 | void MvsInterface::extractOper(char * text)\n           130 |  \u00e4\n           131 |  mvsSTRING s(text), p1, p2, st;\n           132 |  s.parse(p1,\"=\",st,\" \",p2);\n           133 |  while ( st.lengthOf() )\n           134 |   \u00e4\n           135 |   char* c = strchr((char *)st,'=');\n           136 |   if ( c )\n           137 |    *c = 0;\n           138 |   else\n           139 |    c = \" 1\";\n           140 |   if ( strcmp(st,\"TRACE\") == 0)\n           141 |    GlobalTraceFlag = atoi(getenv(\"TRACE\"));\n           142 |   s = p1+p2;\n           143 |   s.parse(p1,\" =\",st,\" \",p2);\n           144 |   \u00fc\n           145 |  strcpy(text,s);\n           146 |  \u00fc\n           147 |\n           148 | /*-----------------------------------------------------------------\n           149 | MvsStcInterface\n           150 | ------------------------------------------------------------------*/\n           151 |\n           152 | char * function_name_table\u00c4\u00dc  = \u00e4\n           153 |  \"CLEANUP\",\n           154 |  \"GETTOKEN\",\n           155 |  \"CREATETOKEN\",\n           156 |  \"DELETETOKEN\",\n           157 |  \"ALLOCATEPAGES\",\n           158 |  \"FREEPAGES\",\n           159 |  \"ENQ\",\n           160 |  \"DEQ\",\n           161 |  \"SLEEP\",\n           162 |  \"GETECB\",\n           163 |  \"WAIT\",\n           164 |  \"POST\",\n           165 |  \"RESET\",\n           166 |  \"SELECT\",\n           167 |  \"CONNECTSHMEM\",\n           168 |  \"DISCONNECTSHMEM\",\n           169 |  \"OPER\",\n           170 |  \"WTO\",\n           171 |  \"MALLOC\",\n           172 |  \"FREE\",\n           173 |  \"SVC\",\n           174 |  \"ATTCHMVS\",\n           175 |  \"CLOCK\",\n           176 |  \"TIMEUSED\",    //szm0050301\n           177 |  \"TDUMP\",       //szm20050325\n           178 |  \"LOGGER\",\n           179 |  \"VTOC\",\n           180 |  \"SRB\",\n           181 |  \"WLM\",\n           182 |  \"OBTAIN\",\n           183 |  \"TESTAUTH\",\n           184 |  \"DIAGNOSE\",\n           185 |  \"VSMLIST\",\n           186 |  NULL\n           187 |  \u00fc;\n           188 |\n           189 |\n           190 | MvsInterface::MvsInterface()\n           191 |  \u00e4\n           192 |  srb = false;\n           193 |  jobname\u00c48\u00dc = programname\u00c48\u00dc = 0x00;\n           194 |  if ( GlobalTraceFlag && NOT GlobalCicsFlag )\n           195 |   \u00e4\n           196 |   file  = fopen(\"SYSPRINT\",\"w\");\n           197 |   \u00fc\n           198 |  else file = 0;\n           199 |  CASMIF(sym_init);\n           200 |  memcpy(jobname,pASM->asm_jobname,8);\n           201 |  memcpy(programname,pASM->asm_programname,8);\n           202 |  // TRACE(4,Msg(9503)<<\">MvsInterface\"<<jobname<<programname<<eol);\n           203 |  \u00fc\n           204 |\n           205 | MvsInterface::\u00dfMvsInterface()\n           206 |  \u00e4\n           207 |  if ( file ) fclose(file);\n           208 |  CASMIF(sym_cleanup);\n           209 |  pASM = 0;\n           210 |  TRACE(4,SMsg(9501)<<\"<MvsInterface\"<<eol);\n           211 |  \u00fc\n           212 |\n           213 | int MvsInterface::TCPCALL(int      function,\n           214 |              void *   p0,void *   p1,void *   p2,void * p3,\n           215 |              void *   p4,void *   p5,void *   p6,void * p7)\n           216 |  \u00e4\n           217 |  CASMIF(function,p0,p1,p2,p3,\n           218 |   p4,p5,p6,p7);\n           219 | #if 0\n           220 |  if ( rc == -1 )\n           221 |   \u00e4\n           222 |   CASMIF(sym_lasterror);\n           223 |   TRACE(1,Msg(9502)<<\">Socket errror\"<<int(rc)<<eol);\n           224 |   MsgEnq();\n           225 |   Msg(9511)<<function_name_table\u00c4function\u00dc\n           226 |   <<\" code:\"<<rc<<eol;\n           227 |   MsgDeq();\n           228 |   return -1;\n           229 |   \u00fc\n           230 | #endif\n           231 |  return rc;\n           232 |  \u00fc\n           233 |\n           234 | int MvsInterface::CASMIF(int      function,\n           235 |              void * p0,void * p1,void * p2,void *p3,\n           236 |              void * p4,void * p5,void * p6,void *p7)\n           237 |  \u00e4\n           238 |  if (function == sym_init)\n           239 |   \u00e4\n           240 |   pASM = (pasm)ASMIF(0);\n           241 |   assert(pASM);\n           242 |   pASM->asm_mvs = this;\n           243 |   \u00fc\n           244 |  else\n           245 |   \u00e4\n           246 |   pASM->asm_function_code = char(function);\n           247 |   pASM->asm_parms\u00c40\u00dc= p0;\n           248 |   pASM->asm_parms\u00c41\u00dc= p1;\n           249 |   pASM->asm_parms\u00c42\u00dc= p2;\n           250 |   pASM->asm_parms\u00c43\u00dc= p3;\n           251 |   pASM->asm_parms\u00c44\u00dc= p4;\n           252 |   pASM->asm_parms\u00c45\u00dc= p5;\n           253 |   pASM->asm_parms\u00c46\u00dc= p6;\n           254 |   pASM->asm_parms\u00c47\u00dc= p7;\n           255 |   ASMIF(pASM);\n           256 |   rc = int(pASM->asm_rc);\n           257 |   reason = int(pASM->asm_reason);\n           258 |   //szm20030616 no check for ENQ/DEQ\n           259 |   if ( function NEQ sym_sleep &&  function NEQ sym_wait && function NEQ sym_attachmvs\n           260 |    && function NEQ sym_svc &&  function NEQ sym_clock && function NEQ sym_logger && function NEQ sym\n           260 | _wlm\n           261 |    && function NEQ sym_srb   // no check for SRB\n           262 |    &&function NEQ sym_obtain)\n           263 |    check(rc,function,\" CASMIF \");\n           264 |   else\n           265 |    return (rc);\n           266 |   \u00fc\n           267 |  return (rc==0);\n           268 |  \u00fc\n           269 | int MvsInterface::check(int r,char *function,char * action)\n           270 |  \u00e4\n           271 |  char hex\u00c49\u00dc;\n           272 |  sprintf(hex,\"%8.8x\",reason);\n           273 |  if ( GlobalTraceFlag == 4 )\n           274 |   TRACE(4,SMsg(9505)<<\" Checking \"<<rc<<hex<<function<<action<<eol);\n           275 |  if ( r )\n           276 |   \u00e4\n           277 |   MsgEnq();\n           278 |   Msg(9510)<<function<<action<<r<<eol;\n           279 |   MsgDeq();\n           280 |   \u00fc\n           281 |  return r;\n           282 |  \u00fc\n           283 |\n           284 |\n           285 | int MvsInterface::check(int r,int function,char * action)\n           286 |  \u00e4\n           287 |\n           288 |  char hex\u00c49\u00dc;\n           289 |  sprintf(hex,\"%8.8x\",reason);\n           290 |  char hexrsn\u00c49\u00dc;\n           291 |  sprintf(hexrsn,\"%8.8x\",pASM->asm_bpx1_rsncode);\n           292 |  if ( GlobalTraceFlag == 4 )\n           293 |   TRACE(4,SMsg(9505)<<\" Checking \"<<int(rc)<<hex<<\n           294 |   function_name_table\u00c4function\u00dc<<action<<eol);\n           295 |  if ( r )\n           296 |   \u00e4\n           297 |   switch(function)\n           298 |    \u00e4\n           299 |    case sym_select:      if ( r < 0 )\n           300 |     \u00e4\n           301 |     MsgEnq();\n           302 |     Msg(9510)<<function_name_table\u00c4function\u00dc<<\n           303 |      hex<<hexrsn<<eol;\n           304 |     MsgDeq();\n           305 |     \u00fc\n           306 |               break;\n           307 |    case sym_enq:         if ( r == -1 ) break;\n           308 |    case sym_wait:        if ( r == -1 ) break;\n           309 |    case sym_gettoken:    if ( r == 4 ) break;\n           310 |    case sym_deletetoken: if ( r == 4 ) break;\n           311 |    case sym_disconnectshmem: if ( r == 4 ) break;\n           312 |    case sym_vtoc:        if ( r ==4 ) break;\n           313 |    default:\n           314 |     MsgEnq();\n           315 |     Msg(9510)<<function_name_table\u00c4function\u00dc<<\n           316 |      r<<hex<<eol;\n           317 |     MsgDeq();\n           318 |    \u00fc\n           319 |   \u00fc\n           320 |  return r;\n           321 |  \u00fc\n           322 |\n           323 |\n           324 | pcsul MvsInterface::GetTCB()\n           325 |  \u00e4\n           326 |  return (*(pcsul *)PSATOLD);\n           327 |  \u00fc\n           328 |\n           329 | pcsul MvsInterface::GetASCB()\n           330 |  \u00e4\n           331 |  return(*(pcsul *)PSAAOLD);\n           332 |  \u00fc\n           333 |\n           334 | int MvsInterface::CheckASCB(pcsul ascb)\n           335 |  \u00e4\n           336 |  return(NOT (memcmp(\"ASCB\",(char *)ascb,4)));\n           337 |  \u00fc\n           338 |\n           339 | pcsul MvsInterface::GetToken(char * n)\n           340 |  \u00e4\n           341 |  TRACE(4,SMsg(9502)<<\">GetToken\"<<n<<eol);\n           342 |  if ( n  &&  CASMIF(sym_gettoken,n,wt))\n           343 |   \u00e4\n           344 |   TRACEDUMP(4,SMsg(9501)<<\"<GetToken\"<<eol,(void *)wt,sizeof(*wt));\n           345 |   return ((pcsul)wt);\n           346 |   \u00fc\n           347 |  return ((pcsul)NULL);\n           348 |  \u00fc\n           349 |\n           350 | pcsul MvsInterface::CreateToken(char *n,pcsul * v)\n           351 |  \u00e4\n           352 |  TRACE(4,SMsg(9502)<<\">CreateToken\"<<n<<eol);\n           353 |  wt\u00c40\u00dc = v\u00c40\u00dc;\n           354 |  wt\u00c41\u00dc = v\u00c41\u00dc;\n           355 |  wt\u00c42\u00dc = v\u00c42\u00dc;\n           356 |  wt\u00c43\u00dc = v\u00c43\u00dc;\n           357 |  rc = 16;\n           358 |  if ( n )\n           359 |   \u00e4\n           360 |   CASMIF(sym_createtoken,n,wt);\n           361 |   if ( rc == 4 )\n           362 |    \u00e4\n           363 |    CASMIF(sym_deletetoken,n);\n           364 |    CASMIF(sym_createtoken,n,wt);\n           365 |    \u00fc\n           366 |   \u00fc\n           367 |  TRACEDUMP(4,SMsg(9501)<<\">CreateToken\"<<eol,(void *)wt,sizeof(*wt));\n           368 |  return (rc==0);\n           369 |  \u00fc\n           370 |\n           371 | void MvsInterface::DeleteToken(char *n)\n           372 |  \u00e4\n           373 |  TRACEDUMP(4,SMsg(9501)<<\">DeleteToken\"<<eol,(void *)n,strlen(n));\n           374 |  CASMIF(sym_deletetoken,n);\n           375 |  TRACE(4,SMsg(9501)<<\"<DeleteToken\"<<eol);\n           376 |  \u00fc\n           377 |\n           378 |\n           379 | int MvsInterface::WaitEcb(pcsul  ms,\n           380 |              void * pecb0,void * pecb1,void * pecb2,void * pecb3)\n           381 |  \u00e4\n           382 |  TRACEDUMP(4,SMsg(9503)<<\">WaitEcb\"<<rc<<ms<<eol,pecb0,20);\n           383 |  CASMIF(sym_wait,(void *)ms,pecb0,pecb1,pecb2,pecb3);\n           384 |  TRACE(4,SMsg(9502)<<\"<WaitEcb\"<<rc<<eol);\n           385 |  return rc;\n           386 |  \u00fc\n           387 |\n           388 | int MvsInterface::PostEcb(void * pecb,pcsul code)\n           389 |  \u00e4\n           390 |  TRACE(3,SMsg(9502)<<\">PostEcb\"<<code<<eol);\n           391 |  CASMIF(sym_post,pecb,(void *)code);\n           392 |  TRACEDUMP(3,SMsg(9502)<<\"<PostEcb\"<<rc<<eol,pecb,20);\n           393 |  return rc;\n           394 |  \u00fc\n           395 |\n           396 | int MvsInterface::Enq(char * n,int ms)\n           397 |  \u00e4\n           398 |  TRACE(4,SMsg(9503)<<\">Enq\"<<n<<ms<<eol);\n           399 |  CASMIF(sym_enq,ASM_MAJOR,n,(void *)strlen(n),(void *)ms);\n           400 |  TRACE(4,SMsg(9502)<<\"<Enq\"<<rc<<eol);\n           401 |  if ( rc == 0 ) return 1;\n           402 |  else if ( rc < 0 ) return 0;\n           403 |  else return -1;\n           404 |  \u00fc\n           405 |\n           406 | int MvsInterface::Deq(char * n)\n           407 |  \u00e4\n           408 |  TRACE(4,SMsg(9502)<<\">Deq\"<<n<<eol);\n           409 |  CASMIF(sym_deq,ASM_MAJOR,n,(void *)strlen(n));\n           410 |  TRACE(4,SMsg(9503)<<\"<Deq\"<<rc<<n<<eol);\n           411 |  return (rc==0);\n           412 |  \u00fc\n           413 |\n           414 |\n           415 | int MvsInterface::Svc(int n, void *p)\n           416 |  \u00e4\n           417 |  TRACE(4,SMsg(9502)<<\">Svc\"<<n<<eol);\n           418 |  CASMIF(sym_svc,(void *)n,(void *)p);\n           419 |  TRACE(4,SMsg(9503)<<\"<Svc\"<<rc<<n<<eol);\n           420 |  return (rc);\n           421 |  \u00fc\n           422 |\n           423 | int MvsInterface::AttachMvs(const char * module,const char * parms)\n           424 |  \u00e4\n           425 |  size_t l_module= strlen(module);\n           426 |  size_t l_parms = strlen(parms);\n           427 |  TRACE(4,SMsg(9503)<<\">AttachMvs\"<<module<<parms<<eol);\n           428 |  CASMIF(sym_attachmvs,(void *)&l_module,(void *)module,(void *)&l_parms,(void *)parms);\n           429 |  TRACE(4,SMsg(9503)<<\"<AttachMvs\"<<rc<<module<<eol);\n           430 |  return (rc);\n           431 |  \u00fc\n           432 |\n           433 | void MvsInterface::Clock(void * stck)\n           434 |  \u00e4\n           435 |  CASMIF(sym_clock,stck);\n           436 |  \u00fc\n           437 |\n           438 | //szm20050301\n           439 | void MvsInterface::Timeused(void * time) //szm20050301\n           440 |  \u00e4\n           441 |  CASMIF(sym_timeused,time);\n           442 |  \u00fc\n           443 |\n           444 | long long clock_mvs()\n           445 |  \u00e4\n           446 |  long long here;\n           447 |  mvs()->Timeused(&here);\n           448 |  return here;\n           449 |  \u00fc\n           450 | //szm20050301\n           451 | //szm20050325\n           452 | int MvsInterface::Tdump(const char * n,const char *d,int dd = 0)\n           453 |  \u00e4\n           454 |  return (CASMIF(sym_tdump,(void *)n,(void *)d,(void *)dd));\n           455 |  \u00fc\n           456 |\n           457 | int tdump(const char *n, const char *d,int dd)\n           458 |  \u00e4\n           459 |  return mvs()->Tdump(n,d,dd);\n           460 |  \u00fc\n           461 |\n           462 | //szm20071005 get back reason code\n           463 | int mvsReasonCode()\n           464 |  \u00e4\n           465 |  return mvs()->getReasonCode();\n           466 |  \u00fc\n           467 | //szm20071005 get back reason code\n           468 |\n           469 |\n           470 | //szm20050325\n           471 |\n           472 | //szm20051118 LOGGER\n           473 | //szm20080421\n           474 | int MvsInterface::LoggerOpen(const char * stream)\n           475 |  \u00e4\n           476 |  char zeros\u00c417\u00dc = \"\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\";\n           477 |  char token\u00c417\u00dc = \"                \";\n           478 |  memcpy(token,stream,(strlen(stream)<16?strlen(stream):16));\n           479 |  pcsul  p =NULL;\n           480 |\n           481 |  if (strcmp(stream,(const char *)(pASM->asm_streamname))==0)\n           482 |   \u00e4\n           483 |   if (memcmp(pASM->asm_streamtoken,zeros,16)==0)\n           484 |    \u00e4\n           485 |    if (p=GetToken(token))\n           486 |     memcpy(pASM->asm_streamtoken,(char *)p,16);\n           487 |    else\n           488 |     if (CASMIF(sym_logger,(void *)0,(void *)stream,(void *)strlen(stream))==0)\n           489 |      CreateToken(token,(pcsul *)(pASM->asm_streamtoken));\n           490 |     else\n           491 |      return 0;\n           492 |    \u00fc\n           493 |   return 1;\n           494 |   \u00fc\n           495 |\n           496 |  if (CASMIF(sym_logger,(void *)0,(void *)stream,(void *)strlen(stream))|=0);\n           497 |  return 0;\n           498 |\n           499 |  CreateToken(token,(pcsul *)(pASM->asm_streamtoken));\n           500 |  return 1;\n           501 |  \u00fc\n           502 | int MvsInterface::Logger(const char * stream,size_t l)\n           503 |  \u00e4\n           504 |  return (CASMIF(sym_logger,(void *)1,(void *)stream,(void *)(l?l:strlen(stream)))==0);\n           505 |  \u00fc\n           506 | //szm20060113\n           507 | int MvsInterface::BrowseLogger(const char * & addr,size_t *  & length,int direction,int all,char * d\n           507 | ate_time)\n           508 |  \u00e4\n           509 |   if (direction ==0) //szm20100717\n           510 |    direction = 2;\n           511 |  return (CASMIF(sym_logger,(void *)(direction),(void *)&addr,(void *)&length,(void *)all,(void *)dat\n           511 | e_time));\n           512 |  \u00fc\n           513 |\n           514 | //szm20080421\n           515 | int MvsInterface::LoggerClose()\n           516 |  \u00e4\n           517 |  //return (CASMIF(sym_logger,(void *)-1)); szm20080421\n           518 |  // never close the logger\n           519 |  return 1;\n           520 |  \u00fc\n           521 | //szm20051118 LOGGER\n           522 | //szm20051121 VTOC\n           523 | int MvsInterface::VtocOpen(const char * ddname,const char * mask,char *dscb)\n           524 |  \u00e4\n           525 |  char _mask\u00c446\u00dc;\n           526 |  char _ddname\u00c49\u00dc;\n           527 |  memcpy(_mask+1,mask,44);\n           528 |  _mask\u00c445\u00dc = 0;\n           529 |  if (strchr(_mask+1,' '))\n           530 |   *strchr(_mask+1,' ')= 0;\n           531 |  _mask\u00c40\u00dc = strlen(_mask+1);\n           532 |  memset(_ddname,' ',8);\n           533 |  _ddname\u00c48\u00dc = 0;\n           534 |  memcpy(_ddname,ddname,(strlen(ddname)<=8)?strlen(ddname):8);\n           535 |  CASMIF(sym_vtoc,(void *)0,(void *)_ddname,(void *)_mask,(void *)dscb);\n           536 |  return rc;\n           537 |  \u00fc\n           538 | int MvsInterface::Vtoc(char * dscb)\n           539 |  \u00e4\n           540 |  CASMIF(sym_vtoc,(void *)1,(void *)0,(void *)0,(void *)dscb);\n           541 |  return rc;\n           542 |  \u00fc\n           543 | int MvsInterface::VtocClose()\n           544 |  \u00e4\n           545 |  return (CASMIF(sym_vtoc,(void *)-1));\n           546 |  \u00fc\n           547 | //szm20051121 VTOC\n           548 |\n           549 | //szm20081119\n           550 | int MvsInterface::initEnclave()\n           551 |   \u00e4\n           552 |  \treturn wlmEnclave;\n           553 |   \u00fc\n           554 |\n           555 | int MvsInterface::Srb()\n           556 |  \u00e4\n           557 |  if (srb)\n           558 |   \u00e4\n           559 |  CASMIF(sym_srb);\n           560 |  srb = false;\n           561 |  //printf(\" exit from SRB:%p %p srbFlag:%d\u00d6n\",pASM,this,pASM->asm_srb_mode);\n           562 |   \u00fc\n           563 |  else\n           564 |   \u00e4\n           565 |   //printf(\" entry to SRB:%p %p srbFlag:%d\u00d6n\",pASM,this,pASM->asm_srb_mode);\n           566 |   srb = true;\n           567 |   CASMIF(sym_srb);\n           568 |   \u00fc\n           569 |  return rc;\n           570 |  \u00fc\n           571 |\n           572 |\n           573 | int MvsInterface::Wlm(const char * subsys,const char * subsysnm)\n           574 |  \u00e4\n           575 |  /*\n           576 |  if (CASMIF(sym_wlm,(void *)subsys,(void *)subsysnm)|=0)\n           577 |   \u00e4\n           578 |   printf(\" WLM function:%8.8s rc:%d(%8.8x) rsn:%d(%8.8x)\u00d6n\",\n           579 |    pASM->asm_wlm_macro,pASM->asm_wlm_retcode,pASM->asm_wlm_retcode,\n           580 |    pASM->asm_wlm_rsncode,pASM->asm_wlm_rsncode);\n           581 |   return 8;\n           582 |   \u00fc\n           583 |  */\n           584 |\n           585 |  return 0;\n           586 |  \u00fc\n           587 |\n           588 | int MvsInterface::Obtain(const char * dsn, const char * volser,char * dscb)\n           589 | \u00e4\n           590 |  return (CASMIF(sym_obtain,(void *)dsn,(void *)volser,(void *)dscb));\n           591 | \u00fc\n           592 |\n           593 | int MvsInterface::Testauth()\n           594 | \u00e4\n           595 |  return (CASMIF(sym_testauth));\n           596 | \u00fc\n           597 |\n           598 | int MvsInterface::Diagnose(int function,void * reply)\n           599 | \u00e4\n           600 |  return(CASMIF(sym_diagnose,(void *)function,reply));\n           601 | \u00fc\n           602 |\n           603 |\n           604 | int MvsInterface::Vsmlist(void * ascb,void * address, int length )\n           605 | \u00e4\n           606 |  return(CASMIF(sym_vsmlist,ascb,address,(void *)length));\n           607 | \u00fc\n           608 |\n           609 | void MvsInterface::Chap(pcsul t,int p)\n           610 |  \u00e4\n           611 |  TRACE(4,SMsg(9503)<<\">Chap\"<<t<<long(p)<<eol);\n           612 | #ifdef __SASC_\n           613 |  CHAP(p,&t);\n           614 | #endif\n           615 |  TRACE(4,SMsg(9501)<<\"<Chap\"<<eol);\n           616 |  \u00fc\n           617 |\n           618 | pcsul MvsInterface::Attach(char * pgm,char ** param,pcsul ecb)\n           619 |  \u00e4\n           620 |  TRACE(4,SMsg(9502)<<\">Attach\"<<pgm<<eol);\n           621 |  pcsul tcb = 0;\n           622 |  *(pcsul *)ecb = 0;\n           623 |  pcsul lparam\u00c416\u00dc;\n           624 |  int i;\n           625 |  for(i =0;i<16 && param\u00c4i\u00dc;i++)lparam\u00c4i\u00dc = (pcsul)(param\u00c4i\u00dc);\n           626 |  lparam\u00c4i\u00dc = lparam\u00c4i\u00dc ] 0x80000000;\n           627 |  check(rc,\"Attach\",\"ATTACH\");\n           628 |  TRACE(4,SMsg(9501)<<\"<Attach\"<<eol);\n           629 |  return tcb;\n           630 |  \u00fc\n           631 |\n           632 | void MvsInterface::Detach(pcsul tcb)\n           633 |  \u00e4\n           634 |  TRACE(4,SMsg(9502)<<\">Detach\"<<tcb<<eol);\n           635 |  check(rc,\"Deatch\",\"DETACH\");\n           636 |  TRACE(4,SMsg(9501)<<\"<Detach\"<<eol);\n           637 |  \u00fc\n           638 |\n           639 | void MvsInterface::Sleep(int ms)\n           640 |  \u00e4\n           641 |  TRACE(4,SMsg(9502)<<\">Sleep\"<<ms<<eol);\n           642 |  if (ms) CASMIF(sym_sleep,(void *)ms);\n           643 |  TRACE(4,SMsg(9501)<<\"<Sleep\"<<eol);\n           644 |  \u00fc\n           645 |\n           646 | int MvsInterface::Oper(char *to,const size_t length)\n           647 |  \u00e4\n           648 |  TRACE(4,SMsg(9501)<<\">Oper\"<<eol);\n           649 |  memset(to,0,length);\n           650 |  CASMIF(sym_oper,(void *)to,(void *)length);\n           651 |  if ( rc == 0 ) extractOper(to);\n           652 |  TRACE(4,SMsg(9503)<<\"<Oper\"<<to<<rc<<eol);\n           653 |  return rc;\n           654 |  \u00fc\n           655 |\n           656 | void MvsInterface::Wto(const char *text,const int desc)\n           657 |  \u00e4\n           658 |  if ( text == 0 ) return;\n           659 |  TRACE(4,SMsg(9502)<<\">Wto\"<<text<<eol);\n           660 |  char  t\u00c4128\u00dc;\n           661 |  memset(t,0,sizeof(t));\n           662 |  strncpy(t,text,sizeof(t)-1);\n           663 |  for(char * ct = t;*ct;ct++) if( *ct == '\u00d6n') *ct = ' ';\n           664 |  CASMIF(sym_wto,(void *)t,(void *)strlen(t),(void *)desc);\n           665 |  TRACE(4,SMsg(9501)<<\"<Wto\"<<eol);\n           666 |  \u00fc\n           667 |\n           668 | void * MvsInterface::Malloc(size_t size)\n           669 |  \u00e4\n           670 |  void * a = 0;\n           671 |  CASMIF(sym_malloc,(void *)size,(void *)&a);\n           672 |  check(rc,\"Malloc\",\"MALLOC\");\n           673 |  return a;\n           674 |  \u00fc\n           675 |\n           676 | void  MvsInterface::Free(void * a)\n           677 |  \u00e4\n           678 |  CASMIF(sym_free,(void *)a);\n           679 |  check(rc,\"Free\",\"FREE\");\n           680 |  return ;\n           681 |  \u00fc\n           682 |\n           683 |\n           684 | int MvsInterface::Select(pcsul numfds,\n           685 |              void *rfds,void *wfds,void *efds,void *time)\n           686 |  \u00e4\n           687 |  CASMIF(sym_select,(void *)numfds,rfds,wfds,efds,time);\n           688 |  TRACE(4,SMsg(9502)<<\"<Select\"<<rc<<eol);\n           689 |  return rc;\n           690 |  \u00fc\n           691 |\n           692 | /*-----------------------------------------------------------------\n           693 | COMMON functions\n           694 | ------------------------------------------------------------------*/\n           695 |\n           696 | int isCics()\u00e4 return GlobalCicsFlag;\u00fc\n           697 |\n           698 |\n           699 | MvsInterface * getTcbUser()\n           700 |  \u00e4\n           701 |  pcsul  p = * (pcsul  * )PSATOLD;\n           702 |  pasm pASM = ((pasm)*(pasm *)(p+TCBUSER));\n           703 |  if (pASM)\n           704 |   return((MvsInterface *)(pASM->asm_mvs));\n           705 |  else\n           706 |   return((MvsInterface * )NULL);\n           707 |  \u00fc\n           708 |\n           709 |\n           710 | MvsInterface * mvs()\n           711 |  \u00e4\n           712 |  int i = 0;\n           713 |  for(;i<MAX_TCB && _mvsInterface\u00c4i\u00dc;i++)\n           714 |   if (_tcb\u00c4i\u00dc == *(pcsul *)PSATOLD) break;\n           715 |  assert(i<MAX_TCB);\n           716 |  if (_mvsInterface\u00c4i\u00dc && _tcb\u00c4i\u00dc == *(pcsul *)PSATOLD)\n           717 |   return(_mvsInterface\u00c4i\u00dc);\n           718 |  _tcb\u00c4i\u00dc = *(pcsul *)PSATOLD;\n           719 |  return (_mvsInterface\u00c4i\u00dc = (MvsInterface*)new MvsInterface());\n           720 |  \u00fc\n           721 |\n           722 | int MsgEnq()\n           723 |  \u00e4\n           724 |  int rc = 0;\n           725 |  rc = ( ENQ(MSG_MAJOR,MSG_MINOR,E,8,STEP,NONE) == 0);\n           726 |  return rc;\n           727 |  \u00fc\n           728 |\n           729 | int MsgDeq()\n           730 |  \u00e4\n           731 |  int rc = 0;\n           732 |  rc = ( DEQ(MSG_MAJOR,MSG_MINOR,8,STEP,NONE) == 0);\n           733 |  return rc;\n           734 |  \u00fc\n           735 |\n           736 | //KV20030515\n           737 | SyncVar::SyncVar(pcsul w)\n           738 |  \u00e4\n           739 |  var  = 0;\n           740 |  wait = w;\n           741 |  ecb  = 0;\n           742 |  \u00fc\n           743 |\n           744 | SyncVar::SyncVar(const SyncVar & v)\n           745 |  \u00e4\n           746 |  var  = v.var;\n           747 |  wait = v.wait;\n           748 |  ecb = 0;\n           749 |  \u00fc\n           750 | SyncVar::\u00dfSyncVar()\n           751 |  \u00e4\n           752 |  if (ecb&WAITcode)\n           753 |   mvs()->PostEcb(&ecb,0);\n           754 |  \u00fc\n           755 | SyncVar& SyncVar::operator=(pcsul t)\n           756 |  \u00e4\n           757 |  // printf(\" %p TCB %s %d\u00d6n\",*(pcsul *)PSATOLD,\">operator\",t);\n           758 |  // btrace(&btracef);\n           759 |  for(;;)\n           760 |   \u00e4\n           761 |   // if ( p1 == *p3 ) *p3 = p2\n           762 |   // else p1 = *p3\n           763 |   pcsul x = var;\n           764 |   if (CompareAndSwap(x,t,&var)==0)\n           765 |    break;\n           766 |   \u00fc\n           767 |  mvs()->PostEcb(&ecb,t);\n           768 |  //printf(\" %p TCB %s %p\u00d6n\",*(pcsul *)PSATOLD,\"<operator\",var);\n           769 |  return(*this);\n           770 |  \u00fc\n           771 |\n           772 | SyncVar::operator int()\n           773 |  \u00e4\n           774 |  //printf(\" %p TCB %s %p\u00d6n\",*(pcsul *)PSATOLD,\"init()\",var);\n           775 |  return int(var);\n           776 |  \u00fc\n           777 |\n           778 | pcsul waitSyncVar(SyncVar &s)\n           779 |  \u00e4\n           780 |  //printf(\" %p TCB  %s %p\u00d6n\",*(pcsul *)PSATOLD,\">wait\",s.var);\n           781 |  //szm20040624 avoid dumplicate wait on ECB's (S301)\n           782 |  if (int(s.ecb)&0x80000000)\n           783 |   mvs()->Sleep(100);\n           784 |  else\n           785 |   if (mvs()->WaitEcb(s.wait,&s.ecb) <0)\n           786 |    return (-1);\n           787 |  // printf(\" %p TCB  %s %p\u00d6n\",*(pcsul *)PSATOLD,\"<wait\",s.var);\n           788 |  return(s.var);\n           789 |  \u00fc\n           790 | pcsul waitSyncVars(SyncVar &s1,SyncVar &s2)\n           791 |  \u00e4\n           792 |  //printf(\" %p TCB %s %p %p\u00d6n\",*(pcsul *)PSATOLD,\">waits\",s1.var, s2.var);\n           793 |  //szm20040624 avoid dumplicate wait on ECB's (S301)\n           794 |  if (int(s1.ecb)&0x80000000 ]] int(s2.ecb)&0x80000000)\n           795 |   mvs()->Sleep(100);\n           796 |  else\n           797 |   if\n           798 |    (mvs()->WaitEcb((s1.wait<s2.wait?s1.wait:s2.wait),&s1.ecb,&s2.ecb) < 0)\n           799 |    return (-1);\n           800 |  //printf(\" %p TCB %s %p %p\u00d6n\",*(pcsul *)PSATOLD,\"<waits\",s1.var, s2.var);\n           801 |  return(1);\n           802 |  \u00fc\n           803 |\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTEXP.CPP(CASMIF)'                      07.01.13 11:00:19\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTEXP.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTEXP.HPP(CASMIF)'\n    10  =  //'ESA.PRJ.CBTEXP.HPP(ASMIF)'\n    11  =  //'CEE.SCEEH.H(STDIO)'\n    12  =  //'ESA.PRJ.CBTEXP.HPP(MCHAIN)'\n    13  =  //'ESA.PRJ.CBTEXP.HPP(MVSBASE)'\n    14  =  //'ESA.PRJ.CBTEXP.HPP(MERROR)'\n    15  =  //'ESA.PRJ.CBTEXP.HPP(DSNAMEUT)'\n    16  =  //'CEE.SCEEH.H(ASSERT)'\n    17  =  //'ESA.PRJ.CBTEXP.HPP(MVSTIME)'\n    18  =  //'CEE.SCEEH.H(TIME)'\n    19  =  //'ESA.PRJ.CBTEXP.HPP(MISC)'\n    20  =  //'ESA.PRJ.CBTEXP.HPP(MSGMGR)'\n    21  =  //'CEE.SCEEH.H(ASSERT)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.12 z/OS XL C++               //'ESA.PRJ.CBTEXP.CPP(CASMIF)'                      07.01.13 11:00:19\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DDNAMIBM": {"ttr": 833, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK62835)   Page    1\n-                                                                                            HLASM R6.0  2013/01/07 10.57\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2013/01/07 10.57\n0DDNAMIBM  SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00000229  00000001   06\n DDNAMIBM  LD 00000005 00000000           00000004   06\n CEESTART  ER 00000006                    00000001\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000000                00000000 00000229      1 DDNAMIBM CSECT                                                          00200000\n                                                2 DDNAMIBM RMODE ANY                                                      00201000\n                                                3 DDNAMIBM AMODE 31                                                       00201000\n                                                4 *\n                                                5 * 2002 09 30 new parm , give back member name                           00001006\n                                                6 **********************************************************************  00010000\n                                                7 *                                                                    *  00020000\n                                                8 * DDNAMIBM assembler routine to give back the datasetnames           *  00030006\n                                                9 * for a given DDNAME                                                 *  00040006\n                                               10 * The routines is called from IBM C++                                *  00050006\n                                               11 * DDNAMIBM(char * ddname,char * dsnames,int length,char *=0)         *  00060006\n                                               12 *                                                                    *  00070000\n                                               13 * In the dsnames area the routine will build a list of the           *  00080006\n                                               14 * datasetname strings for the ddname                                 *  00090006\n                                               15 *                                                                    *  00100000\n                                               16 * AMODE(31),RMODE(ANY),RENT,REUSE                                    *  00110000\n                                               17 *                                                                    *  00120000\n                                               18 * R11 program base                                                   *  00130006\n                                               19 * R12 CRAB                                                           *  00140000\n                                               20 * R13 DSA                                                            *  00150000\n                                               21 *                                                                    *  00160000\n                                               22 **********************************************************************  00180000\n                                               23          PRINT GEN                                                      00190000\n                                               24 *        CREGS USING              c type regs                           00210006\n                                               25          CREGS USING              c type regs                           00210006\n                         00000000              26+R0       EQU   0                                                        01-CREGS\n                         00000001              27+R1       EQU   1                                                        01-CREGS\n                         00000002              28+R2       EQU   2                                                        01-CREGS\n                         00000003              29+R3       EQU   3                                                        01-CREGS\n                         00000004              30+R4       EQU   4                                                        01-CREGS\n                         00000005              31+R5       EQU   5                                                        01-CREGS\n                         00000006              32+R6       EQU   6                                                        01-CREGS\n                         00000007              33+R7       EQU   7                                                        01-CREGS\n                         00000008              34+R8       EQU   8                                                        01-CREGS\n                         00000009              35+R9       EQU   9                                                        01-CREGS\n                         0000000A              36+R10      EQU   10                                                       01-CREGS\n                         0000000B              37+R11      EQU   11                                                       01-CREGS\n                         0000000C              38+R12      EQU   12                                                       01-CREGS\n                         0000000D              39+R13      EQU   13                                                       01-CREGS\n                         0000000D              40+RDSA     EQU   R13                DSA POINTER                           01-CREGS\n                     R:D 00000000              41+         USING DSA,R13                                                  01-CREGS\n                         0000000E              42+R14      EQU   14                                                       01-CREGS\n                         0000000F              43+R15      EQU   15                                                       01-CREGS\n                         00000000              44+FR0      EQU   0                                                        01-CREGS\n                         00000002              45+FR2      EQU   2                                                        01-CREGS\n                         00000004              46+FR4      EQU   4                                                        01-CREGS\n                         00000006              47+FR6      EQU   6                                                        01-CREGS\n                                               48 *        edcprlg usrDSAl=DSALEN,BASEreg=R11 type entry                  00220006\n                                               49          EDCPRLG USRDSAL=DSALEN,BASEREG=R11 type entry                  00221006\n                                               50+***--------------------------------------------------------------------\n 00000000                00000000 00000130     51+IHB0002DS DSECT                                                         01-EDCPRLG\n 00000000                                      52+         DS    D                                                        01-EDCPRLG\n 00000008                                      53+         DS    CL(120+DSALEN)                                           01-EDCPRLG\n 0000012C                0000012C 00000000     54+         ORG   IHB0002DS                                                01-EDCPRLG\n 00000000                                      55+         DS    CL(120+8)                                                01-EDCPRLG\n1                                                                                                               Page    4\n   Active Usings: DSA,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000080                00000080 0000012C     56+         ORG                                                            01-EDCPRLG\n 00000130                                      57+         DS    0D                                                       01-EDCPRLG\n                         00000128              58+IHB0002LG EQU   *-IHB0002DS-8                                           01-EDCPRLG\n 00000000                00000000 00000229     59+DDNAMIBM CSECT                                                          01-EDCPRLG\n                                               60+*--------------------------------------------------------------\n 00000000                                      61+         DS    0H                                                       01-EDCPRLG\n                     R:F 00000000              62+         USING *,15                                                     01-EDCPRLG\n 00000000 47F0 F044               00000044     63+         B     IHB0002B       branch around prologue's constant areas   01-EDCPRLG\n                                               64+* PPA1 constant area\n 00000004 14                                   65+         DC    AL1(IHB0002N+4-*)   offset to the name                   01-EDCPRLG\n 00000005 CE                                   66+         DC    X'CE' .             CEE signature                        01-EDCPRLG\n 00000006 A0                                   67+         DC    X'A0' .             CEE flags (ext proc, has DSA)        01-EDCPRLG\n 00000007 10                                   68+         DC    AL1(0+0+16)      .  member flags                         01-EDCPRLG\n 00000008 00000020                             69+         DC    AL4(IHB0002P) .       A(PPA2)                            01-EDCPRLG\n 0000000C 00000000                             70+         DC    AL4(0) .              A(PPA3) or zero                    01-EDCPRLG\n 00000010 00000128                             71+         DC    AL4(IHB0002LG)        total DSA length                   01-EDCPRLG\n 00000014 0008                                 72+IHB0002N DC    AL2(8)      .       length of name                       01-EDCPRLG\n 00000016 C4C4D5C1D4C9C2D4                     73+         DC    C'DDNAMIBM'         untruncated name                     01-EDCPRLG\n                                               74+*--------------------------------------------------------------\n                                               75+         EXTRN CEESTART                                                 01-EDCPRLG\n                                               76+*---------------------------------------------------------------\n                                               77+* PPA2 constant area\n 00000020                                      78+IHB0002P DS    0F                  force fwrd alignment                 01-EDCPRLG\n 00000020 03                                   79+         DC    X'03' .             member identifier (C)                01-EDCPRLG\n 00000021 00                                   80+         DC    X'00' .             member subid                         01-EDCPRLG\n 00000022 33                                   81+         DC    X'33'     .         plistfmt/runenv (nibbles)            01-EDCPRLG\n 00000023 00                                   82+         DC    X'00' .             CEE control block level              01-EDCPRLG\n 00000024 00000000                             83+         DC    AL4(CEESTART)                                            01-EDCPRLG\n 00000028 00000000                             84+         DC    AL4(0)                A(PPA4) or zero                    01-EDCPRLG\n 0000002C 00000030                             85+         DC    AL4(IHB0002T) .       A(time stamp) or zero              01-EDCPRLG\n                                               86+*\n                                               87+* Time stamp area\n 00000030                                      88+IHB0002T DS    0F                                                       01-EDCPRLG\n 00000030 F2F0F1F3                             89+         DC    CL4'2013'  .        yyyy                            @P1A 01-EDCPRLG\n 00000034 F0F1F0F7                             90+         DC    CL4'0107'   .       mmdd                                 01-EDCPRLG\n 00000038 F1F0F5F7F0F0                         91+         DC    CL6'105700'     .   hhmmss                               01-EDCPRLG\n 0000003E F0F1                                 92+         DC    CL2'01' .           version                              01-EDCPRLG\n 00000040 F0F1F0F0                             93+         DC    CL4'0100' .         release / modif level                01-EDCPRLG\n                                               94+*\n 00000044                                      95+IHB0002B DS    0H                                                       01-EDCPRLG\n                                               96+***--------------------------------------------------------------------\n 00000044 90EC D00C               0000000C     97+         STM   14,12,12(13) .      save Caller's registers              01-EDCPRLG\n                                               98+***--------------------------------------------------------------------\n 00000048 5820 D04C               0000004C     99+         L     2,76(,13)           get current NAB                      01-EDCPRLG\n 0000004C 5800 F010               00000010    100+         L     0,16(,15)           size of DSA                          01-EDCPRLG\n 00000050 1E02                                101+         ALR   0,2                 old NAB + DSA size = new NAB         01-EDCPRLG\n 00000052 5500 C00C               0000000C    102+         CL    0,12(,12)           check for stack overflow             01-EDCPRLG\n 00000056 47D0 F060               00000060    103+         BNH   *+10                branch if enough space               01-EDCPRLG\n 0000005A 58F0 C074               00000074    104+         L     15,116(,12)         load overflow rtn entry address      01-EDCPRLG\n 0000005E 05EF                                105+         BALR  14,15               invoke overflow routine              01-EDCPRLG\n                                              106+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000060 58F0 D048               00000048    107+         L     15,72(,13)                                               01-EDCPRLG\n 00000064 90F0 2048               00000048    108+         STM   15,0,72(2)                                               01-EDCPRLG\n 00000068 9210 2000      00000000             109+         MVI   0(2),X'10'                                               01-EDCPRLG\n 0000006C 50D0 2004               00000004    110+         ST    13,4(,2)            back chain DSA                       01-EDCPRLG\n1                                                                                                               Page    5\n   Active Usings: DSA,R13  DDNAMIBM,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000070 18D2                                111+         LR    13,2                activate this DSA                    01-EDCPRLG\n                                              112+***--------------------------------------------------------------------\n                                              113+         DROP  15                                                       01-EDCPRLG\n 00000072 05B0                                114+         BALR  R11,0                                                    01-EDCPRLG\n                     R:B 00000074             115+         USING *,R11                                                    01-EDCPRLG\n                                              116+***--------------------------------------------------------------------\n                     R:0 00000000             117          USING PSA,R0             base on PSA                           00230006\n                     R:D 00000000             118          USING DSA,R13            base on R13                           00231006\n 00000074 988A 1000               00000000    119          LM    R8,R10,0(R1)       get parms                             00240006\n 00000078 5871 000C               0000000C    120          L     R7,12(R1)          get mem pointer                       00241006\n 0000007C 58AA 0000               00000000    121          L     R10,0(R10)         get length 17/11/06\n 00000080 41A9 A000               00000000    122          LA    R10,0(R9,R10)      after the last byte                   00250006\n0                                             124 * prepare ddname in work area                                           00270006\n000000084 D207 D078 B1A4 00000078 00000218    126          MVC   DSADDNM,=CL8' '    init ddname                           00290006\n 0000008A 4110 D078               00000078    127          LA    R1,DSADDNM         get ddname addr                       00300006\n 0000008E 4120 0008               00000008    128          LA    R2,8               max counter                           00310006\n 00000092 9500 8000      00000000             129 DDNAMEL  CLI   0(R8),0            is it null                            00320006\n 00000096 4780 B038               000000AC    130          BE    DDNAMEOK           branch if over                        00330006\n 0000009A D600 1000 8000 00000000 00000000    131          OC    0(1,R1),0(R8)      move char                             00340006\n 000000A0 4110 1001               00000001    132          LA    R1,1(,R1)          incr r1                               00350006\n 000000A4 4188 0001               00000001    133          LA    R8,1(R8)           incr r8                               00360006\n 000000A8 4620 B01E               00000092    134          BCT   R2,DDNAMEL         try the next                          00370006\n 000000AC                                     135 DDNAMEOK DS    0H                                                       00380000\n 000000AC D701 9000 9000 00000000 00000000    136          XC    0(2,R9),0(R9)      clear a halfword                      00390006\n 000000B2 5810 021C               0000021C    137          L     R1,PSATOLD         get tcb addr                          00400006\n 000000B6 5811 000C               0000000C    138          L     R1,TCBTIO-TCB(R1)  get tiot addr                         00410006\n                     R:1 00001000             139          USING TIOT1,R1           base on tiot prefix                   00420006\n 000000BA 4130 1018               00001018    140          LA    R3,TIOENTRY        get first entry addr                  00430006\n 000000BE 5030 D0A8               000000A8    141          ST    R3,DSATIOTP\n                                              142          DROP  R1                                                       00440000\n                     R:3 00001018             143          USING TIOENTRY,R3        base on tiot entry                    00450006\n0                                             145 * go through the tiot list                                              00470006\n0000000C2 4120 0000               00000000    147          LA    R2,0               initial status                        00490006\n                     R:5 00000000             148          USING SWAEPA,R5          base on swa                           00500006\n 000000C6 4150 D084               00000084    149          LA    R5,DSASWAEPA       get EPA addr                          00510006\n 000000CA 5050 D080               00000080    150          ST    R5,DSASWAEPAP      set into the list                     00520006\n 000000CE 9500 3000      00001018             151 TIOTL    CLI   TIOELNGH,0         no more                               00530006\n 000000D2 4780 B15C               000001D0    152          BE    RET04              branch if not found                   00540006\n 000000D6 47F2 B066               000000DA    153          B     TIOTBR(R2)         branch on r2                          00550006\n 000000DA 47F0 B06E               000000E2    154 TIOTBR   B     TIOT00             initial search                        00560006\n 000000DE 47F0 B088               000000FC    155          B     TIOT04             concat search                         00570006\n 000000E2 9500 3000      00001018             156 TIOT00   CLI   TIOELNGH,0         no more                               00530006\n 000000E6 4780 B15C               000001D0    157          BE    RET04              branch if not found                   00540006\n 000000EA D507 3004 D078 0000101C 00000078    158          CLC   TIOEDDNM,DSADDNM   check nmae                            00580006\n 000000F0 4770 B09E               00000112    159          BNE   TIOTNEXT           branch if not our                     00590006\n 000000F4 4120 0004               00000004    160          LA    R2,4               set code to indicate in               00600006\n 000000F8 47F0 B0B4               00000128    161          B     DSNCOPY            branch to copy                        00610006\n 000000FC 9500 3000      00001018             162 TIOT04   CLI   TIOELNGH,0         no more                               00530006\n 00000100 4780 B156               000001CA    163          BE    RET00              branch if not found                   00540006\n 00000104 D507 3004 B1A4 0000101C 00000218    164          CLC   TIOEDDNM,=CL8' '   is it concat                          00620006\n 0000010A 4780 B0B4               00000128    165          BE    DSNCOPY            branch to copy if it is               00630006\n1                                                                                                               Page    6\n   Active Usings: PSA,R0  TIOENTRY,R3  SWAEPA,R5  DDNAMIBM+X'74',R11  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n00000010E 47F0 B156               000001CA    166          B     RET00              branch out                            00640006\n 00000112 1BFF                                167 TIOTNEXT SR    R15,R15             clear reg                            00650006\n 00000114 5830 D0A8               000000A8    168          L     R3,DSATIOTP\n 00000118 43F0 3000               00001018    169          IC    R15,TIOELNGH        get length                           00660006\n 0000011C 4133 F000               00000000    170          LA    R3,0(R3,R15)        incr addr                            00670006\n 00000120 5030 D0A8               000000A8    171          ST    R3,DSATIOTP\n 00000124 47F0 B05A               000000CE    172          B     TIOTL               try the next one                     00671006\n0                                             174 * copy a dsnmae into the list                                           00690006\n000000128 D71B 5000 5000 00000000 00000000    176 DSNCOPY  XC    SWAEPAX,SWAEPAX    clear area                            00710006\n 0000012E D202 5004 300C 00000004 00001024    177          MVC   SWVA,TIOEJFCB      set jfcb ttr addr                     00720006\n                                              178 *        SWAREQ FCODE=RL,EPA=DSASWAEPAP,MF=(E,DSASWAREQL),UNAUTH=YES    00730000\n                                              179          SWAREQ FCODE=RL,EPA=DSASWAEPAP,MF=(E,DSASWAREQL),UNAUTH=YES    00731000\n 00000134 4110 D0A0               000000A0    180+         LA    1,DSASWAREQL            PUT THE ADDRESS OF THE PARAMETER 01-SWAREQ\n                                              181+*                                      LIST IN REGISTER 1         @L2A\n 00000138 4100 B1AC               00000220    182+         LA    0,=CL2'RL'              GET ADDRESS OF FCODE       @L2A  01-SWAREQ\n 0000013C 5000 1004               00000004    183+         ST    0,4(,1)                 PUT ADDRESS OF FCODE IN THE      01-SWAREQ\n                                              184+*                                      2ND WORD OF PARAMETER LIST @L2A\n 00000140 4100 D080               00000080    185+         LA    0,DSASWAEPAP            GET ADDRESS OF EPAPTR      @L2A  01-SWAREQ\n 00000144 5000 1000               00000000    186+         ST    0,0(,1)                 PUT ADDRESS OF EPAPTR IN THE     01-SWAREQ\n                                              187+*                                      1ST WORD OF PARAMETER LIST @L2A\n 00000148 41D0 D000               00000000    188+         LA    13,0(,13)               PREPARE R13 FOR CALL       @L2A  01-SWAREQ\n 0000014C 58F0 0010               00000010    189+         L     15,CVTPTR               GET POINTER TO CVT         @L2A  01-SWAREQ\n ** ASMA309W Operand CVTPTR resolved to a displacement with no base register\n ** ASMA435I Record 722 in SYS1.MACLIB(SWAREQ) on volume: Z1CT12\n                     R:F 00000000             190+         USING CVTMAP,15                                          @L2A  01-SWAREQ\n 00000150 58F0 F128               00000128    191+         L     15,CVTJESCT             GET POINTER TO JESCT       @L2A  01-SWAREQ\n                     R:F 00000000             192+         USING JESCT,15                                           @L2A  01-SWAREQ\n 00000154 58F0 F064               00000064    193+         L     15,JESCTEXT             GET POINTER TO JESCTEXT    @L2A  01-SWAREQ\n                     R:F 00000000             194+         USING JESPEXT,15                                         @L2A  01-SWAREQ\n 00000158 58F0 F058               00000058    195+         L     15,JESQBSVA             GET ADDRESS OF UNAUTHORIZED     X01-SWAREQ\n                                                 +                                       SWA MANAGER                @T0A\n                                              196+         DROP  15                                                 @T0A  01-SWAREQ\n 0000015C 05EF                                197+         BALR  14,15                   BRANCH TO SWA MANAGER      @T0A  01-SWAREQ\n 0000015E 12FF                                198          LTR   R15,R15            test code                             00740006\n 00000160 4770 B174               000001E8    199          BNZ   RET08              branch if in error                    00750006\n 00000164 5840 5000               00000000    200          L     R4,SWBLKPTR        get pointer                           00760006\n                     R:4 00000000             201          USING IEFJFCBN,R4        base on jfcb                          00770006\n 00000168 8970 0001               00000001    202          SLL   R7,1\n 0000016C 8870 0001               00000001    203          SRL   R7,1               ZA030717 clear bit 0\n 00000170 1277                                204          LTR   R7,R7               test mem pointer                     00771006\n 00000172 4780 B11A               0000018E    205          BZ    DSNL_NM            branch if no                          00772006\n 00000176 D507 3004 B196 0000101C 0000020A    206          CLC   TIOEDDNM,BLANKS    concat DD                             00773006\n 0000017C 4780 B11A               0000018E    207          BE    DSNL_NM            branch if it is                       00774006\n 00000180 9500 3003      0000101B             208          CLI   TIOELINK,0         special device                        00774106\n 00000184 4770 B11A               0000018E    209          BNE   DSNL_NM            branch if it is                       00774207\n 00000188 D207 7000 402C 00000000 0000002C    210          MVC   0(8,R7),JFCBELNM   copy member                           00775006\n 0000018E                                     211 DSNL_NM DS 0H                                                           00776002\n 0000018E 41E0 4000               00000000    212          LA    R14,JFCBDSNM       get datasetname addr                  00780006\n 00000192 41F0 E02C               0000002C    213          LA    R15,44(,R14)       get amx length                        00790006\n 00000196 199A                                214 DSNL     CR    R9,R10             check addr                            00800006\n 00000198 47B0 B17C               000001F0    215          BNL   RET12              branch if no more space               00810006\n 0000019C 19EF                                216          CR    R14,R15            test dsname                           00820006\n 0000019E 47B0 B13C               000001B0    217          BNL   DSNLE              branch if not lower                   00830006\n1                                                                                                               Page    7\n   Active Usings: PSA,R0  TIOENTRY,R3  IEFJFCBN,R4  SWAEPA,R5  DDNAMIBM+X'74',R11  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0000001A2 D200 9000 E000 00000000 00000000    218          MVC   0(1,R9),0(R14)     move a byte                           00840006\n 000001A8 9540 9000      00000000             219          CLI   0(R9),C' '         blank                                 00850006\n 000001AC 4770 B14A               000001BE    220          BNE   DSNLMORE           branch if not                         00860006\n 000001B0 D701 9000 9000 00000000 00000000    221 DSNLE    XC    0(2,R9),0(R9)      set to null                           00870006\n 000001B6 4190 9001               00000001    222          LA    R9,1(,R9)          next ch                               00880006\n 000001BA 47F0 B09E               00000112    223          B     TIOTNEXT           branch for the next tiot entryto      00890006\n 000001BE 4190 9001               00000001    224 DSNLMORE LA    R9,1(,R9)          incr to pointer                       00900006\n 000001C2 41E0 E001               00000001    225          LA    R14,1(,R14)        incr from                             00910006\n 000001C6 47F0 B122               00000196    226          B     DSNL               try the next byte                     00920006\n0                                             228 * return points                                                         00940006\n0000001CA 1BFF                                230 RET00    SR    R15,R15            set null return code                  00960006\n 000001CC 47F0 B184               000001F8    231          B     RET                branch out                            00970006\n 000001D0 41F0 0004               00000004    232 RET04    LA    R15,4              set code                              00980006\n 000001D4 D506 B1AE D078 00000222 00000078    233          CLC   =C'STEPLIB',DSADDNM\n 000001DA 4770 B184               000001F8    234          BNE   RET\n 000001DE 0000\n 000001E0 00000000                            235          DC    a(0)\n 000001E4 47F0 B184               000001F8    236          B     RET                branch out                            00970006\n 000001E8 41F0 0008               00000008    237 RET08    LA    R15,8              set code                              00980006\n 000001EC 47F0 B184               000001F8    238          B     RET                branch out                            00970006\n 000001F0 41F0 000C               0000000C    239 RET12    LA    R15,12             set code                              00980006\n 000001F4 47F0 B184               000001F8    240          B     RET                branch out                            00970006\n                                              241 *ET      edcepil ,                epilog                                00990006\n                                              242 RET      EDCEPIL ,                epilog                                00991006\n 000001F8 58D0 D004               00000004    243+RET      L     13,4(,13)          address of caller's save area         01-EDCEPIL\n 000001FC 58E0 D00C               0000000C    244+         L     14,12(,13)         restore R14                           01-EDCEPIL\n 00000200 982C D01C               0000001C    245+         LM    2,12,28(13)        restore R2 - R12                      01-EDCEPIL\n 00000204 051E                                246+         BALR  1,14               return                                01-EDCEPIL\n 00000206 00000000                            247+         DC    AL4(DDNAMIBM)                                            01-EDCEPIL\n 0000020A 4040404040404040                    248 BLANKS   DC   CL8' '              blank                                 00992006\n 00000218                                     249          LTORG                                                          01000000\n 00000218 4040404040404040                    250                =CL8' '\n 00000220 D9D3                                251                =CL2'RL'\n 00000222 E2E3C5D7D3C9C2                      252                =C'STEPLIB'\n-\n-                                             254 * dsa area                                                              01020006\n                                              255 DSA      EDCDSAD ,                                                      01031000\n 00000000                00000000 000000AC    256+DSA      DSECT                                                          01-EDCDSAD\n 00000000                                     257+         DS    CL120                                                    01-EDCDSAD\n 00000078 4040404040404040                    258 DSADDNM    DC  CL8' '             ddname field                          01040006\n 00000080 00000000                            259 DSASWAEPAP DC  A(0)               pointer to SWA parms                  01050006\n 00000084 0000000000000000                    260 DSASWAEPA  DC  XL28'00'           parm for swa                          01060006\n                                              261 *SASWAREQL SWAREQ MF=L            list form                             01070006\n                                              262 DSASWAREQL SWAREQ MF=L            list form                             01071006\n 000000A0                                     263+DSASWAREQL DS  0F                      SWA MANAGER PARAMETER LIST @L2A  01-SWAREQ\n 000000A0                                     264+EPA@0006    DS A                       ADDR OF EPA FOR SWA MANAGER@L2A  01-SWAREQ\n 000000A4                                     265+FCD@0006    DS A                       ADDR OF FUNCTION CODE FOR  @L2A  01-SWAREQ\n                                              266+*                                      SWA MANAGER                @L2A\n 000000A8 00000000                            267 DSATIOTP   DC   A(0)\n1                                                                                                               Page    8\n   Active Usings: PSA,R0  TIOENTRY,R3  IEFJFCBN,R4  SWAEPA,R5  DDNAMIBM+X'74',R11  DSA,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                        000000AC             268 DSALEN     EQU  *-DSA             length of the dsa                     01080006\n                                              269          PRINT NOGEN                                                    01090000\n                                              270          PUSH  PRINT                                                    01100000\n                                              271          PRINT OFF                                                      01110000\n                                              468+         PRINT OFF                                                      01-CVT\n                                             1797+         PRINT OFF                                                      01-IHAPSA\n                                             3557+         PRINT OFF                                                      01-IKJTCB\n                                             5464+         PRINT OFF                                                      01-IEFJFCBN\n                                             6320          POP   PRINT                                                    01220000\n                                             6321          END                                                            01230000\n1                                                 Relocation Dictionary                                         Page    9\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2013/01/07 10.57\n0  00000004 00000004 00000008   A 4     +\n   00000004 00000004 0000002C   A 4     +\n   00000004 00000004 00000206   A 4     +\n   00000004 00000006 00000024   A 4     +\n1                                          Macro and Copy Code Source Summary                                   Page   10\n- Con Source                                        Volume    Members                        HLASM R6.0  2013/01/07 10.57\n0  L1 ESA.PRJ.CBTEXP.ASM                            USERL1    CREGS\n   L2 SYS1.MACLIB                                   Z1CT12    CVT      IEFJESCT IEFJFCBN IEFTIOT1 IEFZB505 IHAPSA\n                                                              IHAPSAE  IKJTCB   SWAREQ\n   L3 SYS1.MODGEN                                   Z1CT12    IEFJSSWA\n   L4 CEE.SCEEMAC                                   Z1CT12    EDCDSAD  EDCEPIL  EDCPRLG\n1                                                Dsect Cross Reference                                          Page   11\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.57\n0CVT      00000500  FFFFFFFD     473\n CVTVSTGX 00000050  FFFFFFFC    1586\n CVTXTNT1 0000000C  FFFFFFFB    1625\n CVTXTNT2 00000084  FFFFFFFA    1633\n DSA      000000AC  FFFFFFFE     256\n IEFJFCBN 000000B0  FFFFFFF2    5034\n IHB0002DS\n          00000130  FFFFFFFF      51\n JESCT    00000080  FFFFFFF6    4734\n JESPEXT  00000098  FFFFFFF5    4852\n PSA      00001040  FFFFFFF9    1800\n SSWA     00000009  FFFFFFF4    5010\n SSWAIFLD 00000001  FFFFFFF3    5026\n TCBFIX   00000178  FFFFFFF8    3561\n TCBXTNT2 00000020  FFFFFFF7    4352\n ZB505    0000001C  FFFFFFF1    6305\n1                                                      Using Map                                                Page   12\n-                                                                                            HLASM R6.0  2013/01/07 10.57\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0    41  00000000  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFE  13 00000        DSA,R13\n     62  00000000  00000004 USING  ORDINARY    00000000 00001000 00000004  15 00060    103 *,15\n    113  00000072  00000004 DROP                                           15              15\n    115  00000074  00000004 USING  ORDINARY    00000074 00001000 00000004  11 001AE    240 *,R11\n    117  00000074  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF9   0 0021C    137 PSA,R0\n    118  00000074  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFE  13 000A8    233 DSA,R13\n    139  000000BA  00000004 USING  ORDINARY    00001000 00001000 FFFFFFF9   1 00018    140 TIOT1,R1\n    142  000000C2  00000004 DROP                                            1              R1\n    143  000000C2  00000004 USING  ORDINARY    00001018 00001000 FFFFFFF9   3 0000C    208 TIOENTRY,R3\n    148  000000C6  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF1   5 00004    200 SWAEPA,R5\n    190  00000150  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  15 00128    191 CVTMAP,15\n    192  00000154  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF6  15 00064    193 JESCT,15\n    194  00000158  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF5  15 00058    195 JESPEXT,15\n    196  0000015C  00000004 DROP                                           15              15\n    201  00000168  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF2   4 0002C    212 IEFJFCBN,R4\n   1796  00000084  FFFFFFFA PUSH\n   1799  00000084  FFFFFFFA USING  ORDINARY    00000000 00001000 FFFFFFF9   0 00000        PSA,0\n   3182  00001000  FFFFFFF9 POP\n1                                   General Purpose Register Cross Reference                                    Page   13\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 10.57\n0    0(0)      97   100M  101M  102   108   117U  182M  183   185M  186  1799U\n     1(1)      97   119   120N  127M  131   132M  132   137M  138M  138N  139U  142D  180M  183   186   246M\n     2(2)      97    99M  101   108   109   110   111   128M  134M  147M  153N  160M  245M\n     3(3)      97   140M  141   143U  168M  170M  170N  171   245M\n     4(4)      97   200M  201U  245M\n     5(5)      97   148U  149M  150   245M\n     6(6)      97   245M\n     7(7)      97   120M  202M  203M  204M  204   210   245M\n     8(8)      97   119M  129   131   133M  133N  245M\n     9(9)      97   119M  122N  136   136   214   218   219   221   221   222M  222   224M  224   245M\n    10(A)      97   119M  121M  121N  122M  122   214   245M\n    11(B)      97   114M  115U  245M  922B  923B\n    12(C)      97   102   104   245M\n    13(D)      41U   97    99   107   110   111M  118U  188M  188   243M  243   244   245\n    14(E)      97   105M  197M  212M  213   216   218   225M  225   244M  246B\n    15(F)      62U   97   100   104M  105B  107M  108   113D  167M  167   169M  170   189M  190U  191M  192U  193M  194U  195M  196D\n              197B  198M  198   213M  216   230M  230   232M  237M  239M 1385M 1385\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   14\n-                                                                                            HLASM R6.0  2013/01/07 10.57\n0Statements Flagged\n0    189(L2:SWAREQ,722)\n\n       1 Statement  Flagged in this Assembly        4 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK62835\n0SYSTEM: z/OS 01.12.00              JOBNAME: COMPALL     STEPNAME: DDNAMIBM   PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTEXP.ASM                           USERL1  DDNAMIBM\n   L1 SYSLIB   ESA.PRJ.CBTEXP.ASM                           USERL1\n   L2          SYS1.MACLIB                                  Z1CT12\n   L3          SYS1.MODGEN                                  Z1CT12\n   L4          CEE.SCEEMAC                                  Z1CT12\n   L5          ASM.AASMMAC2                                 Z1CDL1\n   L6          ASM.AASMMAC1                                 Z1CDL1\n   L7          TCPIP.SEZACMAC                               Z1CT12\n   L8          TCPIP.SEZANMAC                               Z1CT12\n      SYSADATA ESA.PRJ.CBTEXP.ADATA                         USERL2  DDNAMIBM\n      SYSLIN   ESA.PRJ.CBTEXP.OBJECT                        USER09  DDNAMIBM\n      SYSPRINT ESA.PRJ.CBTEXP.COMPLIST                      USER0D  DDNAMIBM\n      SYSTERM  RACF.COMPALL.JOB09204.D0000102.?\n\n  908448K allocated to Buffer Pool       Storage required    1972K\n     161 Primary Input Records Read         8681 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read                454 Primary Print Records Written         0 Work File Writes\n      19 Object Records Written            10976 ADATA Records Written\n0Assembly Start Time: 10.57.47 Stop Time: 10.57.49 Processor Time: 00.00.00.0577\n Return Code 004\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MVSBASE": {"ttr": 865, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSBASE)'                      07.01.13 11:00:04\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH\n                                  :DLL(NOCALLBACKANY)              ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH\n                                  :NOEXPMAC        NOEXPORTALL     NOFASTTEMPINC   FLAG(I)         GOFF            GONUMBER\n                                  :HALT(16)        NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32\n                                  :NOINITAUTO      NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP\n                                  :NOMARGINS       MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)\n                                  :OBJECT          OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)\n                                  :PLIST(HOST)     NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT\n                                  :ROSTRING        ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS\n                                  :SOURCE          SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              NOTEMPLATEREGISTRY\n                                  :TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)      TMPLPARSE(NO)   TUNE(7)\n                                  :UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64        NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :CSECT()\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1,\n                                   MU_STANDALONE=1,SAPI_NO=1,VSAM_NO=1)\n                                  :FLOAT(HEX,FOLD,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__)\n                                  :NOKEYWORD(char16_t,char32_t,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NODBCS,NODECLTYPE,NODELEGATINGCTORS,DEPENDENTBASELOOKUP,\n                                   NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,EXTERNTEMPLATE,ILLPTOM,\n                                   IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,NOOLDDIGRAPH,OLDFRIEND,\n                                   NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,TRAILENUM,TYPEDEFCLASS,\n                                   NOUCS,VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :XPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(NOSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410C0000\n                                  : __LIBREL__=0x410C0000\n                                  : __TARGET_LIB__=0x410C0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSBASE)'                      07.01.13 11:00:04\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 |\n             2 | /*******************************************************************************\n             3 | * Copyright ISIS Papyrus Technologies Limited\n             4 | *-------------------------------------------------------------------------------\n             5 | * File:              $Source: /data/cvs/src/mvs/mvsbase.cpp,v $\n             6 | *-------------------------------------------------------------------------------\n             7 | * Description:\n             8 | *   ???\n             9 | *******************************************************************************/\n            10 |\n            11 |\n            12 | #include \"isisdef.h\"\n            13 | #include <stdlib.h>\n            14 | #include <string.h>\n            15 | #include <strings.h>\n            16 | #ifndef MU_STANDALONE\n            17 | #include \"pcsdll.hpp\"\n            18 | #include \"systems.hpp\" //szm20041028\n            19 | #else\n            20 | \t#ifndef stricmp\n            21 |     #define stricmp strcmpi\n            22 | \t#endif\n            23 | \t#ifndef strcmpi\n            24 | \t\t#define strcmpi strcasecmp\n            25 | \t#endif\n            26 | \t#define MVSBatch() 1\n            27 | \t#ifndef PCS_MAX_PATH\n            28 | \t\t#define PCS_MAX_PATH 1024\n            29 | \t#endif\n            30 | #endif\n            31 |\n            32 | #include \"mvsbase.hpp\"\n            33 | #if defined(CICSAPPL) == 0 && defined(MU_STANDALONE) == 0 //szm20050810\n            34 | #include \"isismisc.hpp\"\n            35 | #endif\n            36 | #include \"misc.hpp\"\n            37 | #ifdef CALL_TAG\n            38 | #include \"pphctags.hpp\"\n            39 | #endif\n            40 | #ifdef OWN_STDIO\n            41 | #include \"stdio.hpp\"\n            42 | #else\n            43 | #include <assert.h>\n            44 | #include <stdio.h>\n            45 | #endif\n            46 | #include <string.h>\n            47 | #include <stdlib.h>\n            48 | #include <strings.h>\n            49 | #include <ctype.h>\n            50 | #include <new.h>\n            51 |\n            52 | #if defined(ISIS_PF_HOST) ]] defined(ISIS_PF_MU)\n            53 |\n            54 | #include \"ibmdebug.hpp\"\n            55 | #if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU)\n            56 | #include <ctest.h>\n            57 | #endif\n            58 | #endif\n            59 |\n            60 | #define MVSBASE  0\n            61 | char mvsSTRING::parseSepCh=0 ; //szm20061218 mvsSTRING parse escape ch is null|||||||\n            62 |\n            63 | mvsSTRING nullstring(\"\"); //szm20050629\n            64 |\n            65 | //KV20050203 why not for ms,mu ??\n            66 | //#if defined(ISIS_PF_MS)==0 && defined(ISIS_PF_MU)==0\n            67 | void * memcpyp(void * target , const void * source, size_t tsize, size_t ssize, int pad)\n            68 | \t\u00e4\n            69 | \tif ( target == 0 ]] source == 0 ]] tsize <= 0) return NULL;\n            70 | \tif( tsize<=ssize)\n            71 | \t\tmemcpy(target,source,tsize);\n            72 | \telse\n            73 | \t\t\u00e4\n            74 | \t\tmemcpy(target,source,ssize);\n            75 | \t\tfor(;ssize<tsize;ssize++) *((char *)target+ssize) = char(pad);\n            76 | \t\t\u00fc\n            77 | \treturn target;\n            78 | \t\u00fc\n            79 |\n            80 | static const char * SAS_HFS = \"hfs\";\n            81 | static const char * IBM_HFS = \"///\";\n            82 | static const char * SAS_DSN = \"dsn\";\n            83 | static const char * IBM_DSN = \"//\";\n            84 | static const char * SAS_DDN = \"ddn\";\n            85 | static const char * IBM_DDN  = \"dd\";\n            86 | static const char * IBM_DDN_SLASH = \"//dd\";\n            87 | static const char * _MEM     = \"mem\"; //szm0040909\n            88 | static const char * IBM_OMS  = \"oms\"; //szm20080215 ToDo 17339\n            89 | static const char * IBM_HTTP = \"http\"; //szm20090709\n            90 | static const char * IBM_HTTPS = \"https\"; //szm20090709\n            91 |\n            92 |\n            93 | genOpenNameType genOpenType(const char *name)\n            94 | \t\u00e4\n            95 | \tchar  nm\u00c4256\u00dc;\n            96 | \tchar  np\u00c4256\u00dc;\n            97 | \tchar  pf\u00c432\u00dc;\n            98 | \tmemset(pf,0,sizeof(pf));\n            99 | \tgenOpenNameType t = ont_unknown;\n           100 |\n           101 | \tif (name == 0 ]] strlen(name) > sizeof(nm))\n           102 | \t\treturn(t);\n           103 |\n           104 | \tstrcpy(np,name);\n           105 | \tchar * n = (char *)np;\n           106 | \tchar * c = NULL;\n           107 | \tif ((c = strchr(n,int(':'))) NEQ NULL)\n           108 | \t\t\u00e4\n           109 | \t\t*c = 0;\n           110 | \t\tstrcpy(pf,n);\n           111 | \t\tn  =  c+1;\n           112 | \t\t\u00fc\n           113 | \tif (stricmp(pf,IBM_OMS))  //szm20080215 ToDo 17339\n           114 | \t\t\u00e4                       //szm20080215 ToDo 17339\n           115 | \t\tif (stricmp(pf,SAS_HFS) == 0) t = sas_hfs;\n           116 | \t\telse if (stricmp(pf,_MEM) == 0) t = ont_mem;   //szm0040909\n           117 | \t\telse if (stricmp(pf,IBM_DDN) == 0 ]] stricmp(pf,IBM_DDN_SLASH) == 0) t = ibm_ddn;\n           118 | \t\telse  if (stricmp(pf,SAS_DDN) == 0) t = sas_ddn;\n           119 | \t\telse if (stricmp(pf,SAS_DSN) == 0) t = sas_dsn;\n           120 |     else if (stricmp(pf,IBM_HTTP) == 0]]stricmp(pf,IBM_HTTPS) == 0) t = ibm_hfs; //szm20090709\n           121 | \t\telse\n           122 | \t\t\t\u00e4\n           123 |       if (strncasecmp   (np,IBM_HFS,strlen(IBM_HFS)) == 0 ]] (np\u00c40\u00dc == '/' && np\u00c41\u00dc-'/') ]](np\u00c40\u00dc ==\n           123 |  '.' && np\u00c41\u00dc=='/'))//szm20090709\n           124 | \t\t\t\tt = ibm_hfs;\n           125 | \t\t\telse if (strncasecmp   (np,IBM_DSN,strlen(IBM_DSN)) == 0) t = ibm_dsn;\n           126 | \t\t\t//KV20050419 in mvsbatch execution dataset names and ddnames don't need prefix\n           127 | \t\t\t// in unix execution such names are interpreted as unix file names\n           128 | \t\t\telse if(MVSBatch())\n           129 | \t\t\t\t\u00e4\n           130 | \t\t\t\tif (*n == '\"' ]] *n =='\u00d6'') t = ibm_dsn;\n           131 | \t\t\t\telse if (strchr(n,'(') && (strchr(n,'(')-n) <= 8 ) t = ont_ddn;\n           132 | \t\t\t\telse if (strchr(n,'.')) t = ont_dsn;\n           133 | \t\t\t\telse if (strlen(n) <= 8) t = ont_ddn;\n           134 | \t\t\t\telse if (strlen(n) <=18 && strchr(n,'(') && strchr(n,')')) t = ont_ddn;\n           135 | \t\t\t\telse\n           136 | \t\t\t\t\tt = ont_unknown;\n           137 | \t\t\t\t\u00fc\n           138 | \t\t\telse\n           139 | \t\t\t\t\u00e4\n           140 | \t\t\t\tt=ibm_hfs;\n           141 | \t\t\t\t\u00fc\n           142 | \t\t\t\u00fc\n           143 | \t\t\u00fc //szm20080215 ToDo 17339\n           144 | #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU) //ZA030711\n           145 | \t//  HOST_IBM_TRACE_sd(name,t);\n           146 | #endif\n           147 | \treturn t;\n           148 | \t\u00fc\n           149 |\n           150 |\n           151 | //KV20060329 buffer nm to avoid static variable\n           152 | char * onlyMemberName(const char * n, char* nm)\n           153 | \t\u00e4\n           154 | \tmvsSTRING s(n), p0, p1, p2;\n           155 | \ts.parse(p0,\"(\",p1,\")\",p2);\n           156 | \tstrcpy(nm,(char *)(p1));\n           157 | \treturn nm;\n           158 | \t\u00fc\n           159 |\n           160 | //KV20060329 buffer nm to avoid static variable\n           161 | char * stripMemberName(const char * n, char* nm)\n           162 | \t\u00e4\n           163 | \tmvsSTRING s(n), p0, p1, p2;\n           164 | \ts.parse(p0,\"(\",p1,\")\",p2);\n           165 | \tstrcpy(nm,(char *)(p0+p2));\n           166 | \treturn nm;\n           167 | \t\u00fc\n           168 |\n           169 | //KV20060329 buffer nm to avoid static variable\n           170 | ISIS_EXT_C\n           171 | char * genOpenName(const char *name,char *nm)\n           172 | \t\u00e4\n           173 | \tchar  np\u00c4256\u00dc;\n           174 | \tchar  pf\u00c432\u00dc;\n           175 | \tmemset(pf,0,sizeof(pf));\n           176 | \tgenOpenNameType t = ont_unknown;\n           177 |\n           178 | \tif (name == 0 ]] strlen(name) > PCS_MAX_PATH-1)\n           179 | \t\treturn(\"??invalid name??\");\n           180 |\n           181 | \tif (*name-'\"' && *name-'\u00d6'')\n           182 | \t\t\u00e4\n           183 | \t\tstrcpy(np,name);\n           184 | \t\t\u00fc\n           185 | \telse\n           186 | \t\t\u00e4\n           187 | \t\tstrcpy(np,name+1);\n           188 | \t\t//KV20030714: avoid deleting ending qoutes for //'datat.set.name'\n           189 | \t\tif (np\u00c4strlen(np)-1\u00dc == '\"' ]] np\u00c4strlen(np)-1\u00dc == '\u00d6'')\n           190 | \t\t\tnp\u00c4strlen(np)-1\u00dc  = 0;\n           191 | \t\t\u00fc\n           192 | \tfor(int i =strlen(np)-1;i>=0&&np\u00c4i\u00dc==' ';i--)np\u00c4i\u00dc=0;\n           193 | \tt = genOpenType(np);\n           194 |\n           195 | \tchar * n = (char *)np;\n           196 | \tchar * c = NULL;\n           197 | \tif ((c = strchr(n,int(':'))) NEQ NULL)\n           198 | \t\t\u00e4\n           199 | \t\t*c = 0;\n           200 | \t\tstrcpy(pf,n);\n           201 | \t\tn  =  c+1;\n           202 | \t\t\u00fc\n           203 |\n           204 | #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU) // IBM or UNIX (not SAS)szm20031030\n           205 | \tif (strcmp(\"(*)\",n+strlen(n)-3)==0) //szm 20100628 zOS 1.11 fopen difference\n           206 | \t\t*(n+strlen(n)-3) = 0;       //szm 20100628 zOS 1.11 fopen difference\n           207 | \tswitch(t)\n           208 | \t\t\u00e4\n           209 | \t\tcase ont_mem:         //szm0040909\n           210 | \t\t\tsprintf(nm,\"mem:%s\",n);\n           211 | \t\t\tbreak;\n           212 | \t\tcase ibm_dsn:\n           213 | \t\t\tif (*(n+2) - '\u00d6'')\n           214 | \t\t\t\tsprintf(nm,\"//'%s'\",n+2);\n           215 | \t\t\telse\n           216 | \t\t\t\tstrcpy(nm,n);\n           217 | \t\t\tbreak;\n           218 | \t\tcase sas_dsn:\n           219 | \t\tcase ont_dsn:\n           220 | \t\t\tif (*n - '\u00d6'')\n           221 | \t\t\t\tsprintf(nm,\"//'%s'\",n);\n           222 | \t\t\telse\n           223 | \t\t\t\tsprintf(nm,\"//%s\",n);\n           224 | \t\t\tbreak;\n           225 | \t\tcase ibm_ddn:\n           226 | \t\tcase sas_ddn:\n           227 | \t\tcase ont_ddn:\n           228 | \t\t\tsprintf(nm,\"//dd:%s\",n);\n           229 | \t\t\tbreak;\n           230 | \t\tcase sas_hfs:\n           231 | \t\t\tsprintf(nm,\"%s\",n);\n           232 | \t\t\tbreak;\n           233 | \t\tcase ibm_hfs:\n           234 | \t\tcase ont_unknown:\n           235 | \t\t\tsprintf(nm,\"%s\",n);\n           236 | \t\t\tbreak;\n           237 | \t\t\u00fc\n           238 | #else\n           239 | \tswitch(t)\n           240 | \t\t\u00e4\n           241 | \t\tcase ont_mem:         //szm0040909\n           242 | \t\t\tsprintf(nm,\"mem:%s\",n);\n           243 | \t\t\tbreak;\n           244 | \t\tcase ibm_dsn:\n           245 | \t\tcase sas_dsn:\n           246 | \t\tcase ont_dsn:\n           247 | \t\t\tsprintf(nm,\"dsn:%s\",n);\n           248 | \t\t\tbreak;\n           249 | \t\tcase ibm_ddn:\n           250 | \t\tcase sas_ddn:\n           251 | \t\tcase ont_ddn:\n           252 | \t\t\tsprintf(nm,\"ddn:%s\",n);\n           253 | \t\t\tbreak;\n           254 | \t\tcase ibm_hfs:\n           255 | \t\t\tsprintf(nm,\"hfs:%s\",nm+3);\n           256 | \t\t\tbreak;\n           257 | \t\tcase sas_hfs:\n           258 | \t\t\tsprintf(nm,\"hfs:%s\",n);\n           259 | \t\t\tbreak;\n           260 | \t\tcase ont_unknown:\n           261 | \t\t\tsprintf(nm,\"%s\",n);\n           262 | \t\t\tbreak;\n           263 | \t\t\u00fc\n           264 | #endif\n           265 | #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           266 | \tHOST_IBM_TRACE_sss(name,nm,n);\n           267 | #endif\n           268 | \treturn (nm);\n           269 | \t\u00fc\n           270 |\n           271 | USHORT  Ushort(int i)\n           272 | \t\u00e4 return ((unsigned short)i);\u00fc\n           273 | USHORT  Ushort(short s)\n           274 | \t\u00e4 return ((unsigned short)s);\u00fc\n           275 | USHORT  Ushort(char c)\n           276 | \t\u00e4 return ((unsigned short)c);\u00fc\n           277 |\n           278 |\n           279 | /*--------------------------------------------------------------+\n           280 | ]  mvsSTRING global class                                          ]\n           281 | ]                                                               ]\n           282 | ]                                                               ]\n           283 | +--------------------------------------------------------------*/\n           284 |\n           285 | /*\n           286 | FORMAT F_alcu(aLEFT,cUPPER);\n           287 | FORMAT F_alcw(aLEFT,cWORD);\n           288 | FORMAT F_arcu(aRIGHT,cUPPER);\n           289 | */\n           290 |\n           291 | mvsSTRING::mvsSTRING()\n           292 | \t\u00e4\n           293 | \tst.l = 1;\n           294 | \tst.c = new char\u00c41\u00dc;\n           295 | \tst.type = str::_VALID;\n           296 | \tst.ltype = str::VARIABLE;\n           297 | \t*st.c = null;\u00fc\n           298 | mvsSTRING::mvsSTRING(const char * y)\n           299 | \t\u00e4\n           300 | \tchar * x = (y ? (char *) y : \"\");\n           301 | \tst.l = (long int ) strlen(x);\n           302 | \tst.c = new char\u00c4st.l+1\u00dc;\n           303 | \tst.type = str::_VALID;\n           304 | \tst.ltype = str::VARIABLE;\n           305 | \tstrcpy(st.c,x);\n           306 | \t\u00fc\n           307 | mvsSTRING::mvsSTRING(const mvsSTRING & x )\n           308 | \t\u00e4\n           309 | \tst.l = x.st.l;\n           310 | \tst.c = new char\u00c4st.l+1\u00dc;\n           311 | \tst.type = x.st.type ;\n           312 | \tst.ltype = x.st.ltype ;\n           313 | \tmemcpy(st.c,x.st.c,st.l+1);\n           314 | \t\u00fc\n           315 | mvsSTRING::mvsSTRING(const char * y,long int xl )\n           316 | \t\u00e4\n           317 | \tchar * x = y ? (char *) y : \"\";\n           318 | \tst.l = xl;\n           319 | \tst.c = new char\u00c4st.l+1\u00dc;\n           320 | \tif ( memchr(x,xl+1,0) ) st.type = str::_INVALID ;\n           321 | \telse     \u00e4  st.type = str::_VALID ; st.c\u00c4st.l\u00dc = 0; \u00fc\n           322 | \tmemcpy(st.c,x,xl);\n           323 | \t\u00fc\n           324 | mvsSTRING::mvsSTRING(const char def ,const long int xl )\n           325 | \t\u00e4\n           326 | \tst.ltype = str::FIX ;\n           327 | \tst.type  = str::_VALID;\n           328 | \tst.l = xl;\n           329 | \tst.c = new char\u00c4st.l+1\u00dc;\n           330 | \tmemset(st.c,def,st.l);\n           331 | \tst.c\u00c4st.l\u00dc = 0;\n           332 | \t\u00fc\n           333 | mvsSTRING::\u00dfmvsSTRING()\n           334 | \t\u00e4\n           335 | \tif ( st.c) delete \u00c4\u00dc st.c;\n           336 | \tif ( st.lls) delete \u00c4\u00dc st.lls;\n           337 | \t\u00fc\n           338 |\n           339 | mvsSTRING& mvsSTRING::operator=(const char * y )\n           340 | \t\u00e4\n           341 | \tchar * x = (y ? (char *)y : \"\");\n           342 | \tif ( x NEQ st.c)\n           343 | \t\t\u00e4 if ( st.ltype == str::VARIABLE )\n           344 | \t\t\u00e4\n           345 | \t\tchar * sv = st.c;\n           346 | \t\tst.l = (long int ) strlen(x);\n           347 | \t\tst.c = new char \u00c4st.l+1\u00dc;\n           348 | \t\tstrcpy(st.c,x);\n           349 | \t\tif ( st.type == str::_VALID ]] st.type == str::_INVALID)\n           350 | \t\t\tdelete \u00c4\u00dc sv;\n           351 | \t\tst.type = str::_VALID;\n           352 | \t\t\u00fc\n           353 | \t\telse\n           354 | \t\t\t\u00e4\n           355 | \t\t\tlong int l =(strlen(x)<= st.l ? strlen(x) : st.l);\n           356 | \t\t\tmemcpy(st.c,x,l);\n           357 | \t\t\tmemset(st.c+l,' ',st.l-l);\n           358 | \t\t\u00fc\n           359 | \t\t\u00fc\n           360 | \treturn * this ;\n           361 | \t\u00fc\n           362 | mvsSTRING& mvsSTRING::operator=(const mvsSTRING &x)\n           363 | \t\u00e4\n           364 | \tif (x.st.c NEQ st.c)\n           365 | \t\tif (st.ltype == str::VARIABLE )\n           366 | \t\t\t\u00e4\n           367 | \t\t\tchar * sv = st.c;\n           368 | \t\t\tst.l = x.st.l;\n           369 | \t\t\tst.c = new char\u00c4st.l+1\u00dc;\n           370 | \t\t\tmemcpy(st.c,x.st.c,st.l+1);\n           371 | \t\t\tif ( st.type == str::_VALID ]] st.type == str::_INVALID)\n           372 | \t\t\t\tdelete \u00c4\u00dc sv ;\n           373 | \t\t\t//   st.type = x.st.type;     don't assign fix type\n           374 | \t\t\t\u00fc\n           375 | \t\telse\n           376 | \t\t\t\u00e4\n           377 | \t\t\tst.ltype =str::FIX ;\n           378 | \t\t\tlong int l =(x.st.l<= st.l ? x.st.l : st.l);\n           379 | \t\t\tmemcpy(st.c,x.st.c,l);\n           380 | \t\t\tmemset(st.c+l,' ',st.l-l);\n           381 | \t\t\t\u00fc\n           382 | \t\treturn * this;\n           383 | \t\u00fc\n           384 |\n           385 | mvsSTRING & mvsSTRING::operator=(const sLL & s)\n           386 | \t\u00e4\n           387 | \tchar * sv = st.c;\n           388 | \tst.ltype = str::VARIABLE;\n           389 | \tst.l = s.getLength();\n           390 | \tst.c = new char\u00c4st.l\u00dc;\n           391 | \tmemcpy(st.c,s.getStart(),st.l);\n           392 | \tdelete \u00c4\u00dc sv;\n           393 | \treturn *this;\n           394 | \t\u00fc\n           395 |\n           396 | long int operator==(const mvsSTRING & x, const mvsSTRING &y)\n           397 | \t\u00e4\n           398 | \tif (x.st.type == str::_VALID && y.st.type == str::_VALID)\n           399 | \t\treturn (strcmp(x.st.c,y.st.c) == 0);\n           400 | \telse if ( x.st.l == y.st.l)\n           401 | \t\treturn( memcmp(x.st.c,y.st.c,x.st.l) == 0 );\n           402 | \telse return 0;\n           403 | \t\u00fc\n           404 | long int operator |=(const mvsSTRING & x, const mvsSTRING &y)\n           405 | \t\u00e4\n           406 | \treturn ( NOT( x == y) );\n           407 | \t\u00fc\n           408 |\n           409 | mvsSTRING operator+(const mvsSTRING& s1, const mvsSTRING& s2)\n           410 | \t\u00e4\n           411 | \tmvsSTRING r = s1;\n           412 | \tr+=s2;\n           413 | \treturn r;\n           414 | \t\u00fc\n           415 | /*\n           416 | mvsSTRING mvsSTRING::operator+(const mvsSTRING & x)\n           417 | \u00e4\n           418 | if ( &x == 0) return * this;\n           419 | mvsSTRING r;\n           420 | r.st.l = st.l + x.st.l;\n           421 | r.st.c = new char \u00c4 r.st.l+1\u00dc;\n           422 | memcpy(r.st.c,st.c,st.l);\n           423 | memcpy(r.st.c+st.l,x.st.c,x.st.l+1);\n           424 | if (st.type == str::_VALID && x.st.type == str::_VALID)\n           425 | r.st.type = str::_VALID ;\n           426 | else r.st.type = str::_INVALID ;\n           427 | return r;\n           428 | \u00fc\n           429 | */\n           430 |\n           431 | mvsSTRING& mvsSTRING::operator+=(const mvsSTRING& x )\n           432 | \t\u00e4\n           433 | \tif ( &x == 0 ) return * this;\n           434 | \tif ( st.ltype == str::VARIABLE )\n           435 | \t\t\u00e4\n           436 | \t\tchar * save = st.c;\n           437 | \t\tlong int savel = st.l;\n           438 | \t\tst.l += x.st.l;\n           439 | \t\tst.c  = new char \u00c4st.l+1\u00dc;\n           440 | \t\tmemcpy(st.c,save,savel);\n           441 | \t\tmemcpy(st.c+savel,x.st.c,x.st.l+1);\n           442 | \t\tif ( st.type == str::_VALID ]] st.type == str::_INVALID)\n           443 | \t\t\tdelete \u00c4\u00dc save;\n           444 | \t\tif ( st.type NEQ str::_VALID ]] x.st.type NEQ str::_VALID)\n           445 | \t\t\tst.type = str::_INVALID ;\n           446 | \t\t\u00fc\n           447 | \telse perror(\" unable to add to a fix mvsSTRING\");\n           448 | \treturn * this ;\n           449 | \t\u00fc\n           450 |\n           451 | char& mvsSTRING::operator\u00c4\u00dc(int index)\n           452 | \t\u00e4\n           453 | \tif ( index < 0 ]] index > st.l)\n           454 | \t\t\u00e4perror(\" _INVALID index for \u00c4\u00dc operator \"); return st.c\u00c40\u00dc;\u00fc;\n           455 | \treturn st.c\u00c4index\u00dc;\n           456 | \t\u00fc\n           457 |\n           458 | char& mvsSTRING::byte(int index)\n           459 | \t\u00e4\n           460 | \tif ( index < 0 ]] index > st.l)\n           461 | \t\t\u00e4perror(\" _INVALID index for \u00c4\u00dc operator \"); return st.c\u00c40\u00dc;\u00fc;\n           462 | \treturn st.c\u00c4index\u00dc;\n           463 | \t\u00fc\n           464 |\n           465 |\n           466 | mvsSTRING mvsSTRING::operator()(const long int o,  long int l = 1 )\n           467 | \t\u00e4\n           468 | \tif ( o < 0 ]] o+l > st.l ]]  l < 0 )\n           469 | \t\t\u00e4perror(\" _INVALID STRING operation\");return * this ;\u00fc\n           470 | \treturn mvsSTRING((const char *)(st.c+o),l);\n           471 | \t\u00fc\n           472 |\n           473 | void mvsSTRING::operator<<(long int l)\n           474 | \t\u00e4\n           475 | \tif ( l <= 0 ]] l >= st.l) return ;\n           476 | \tchar * c = st.c;\n           477 | \tfor(long int i = 0;i<st.l;i++)\n           478 | \t\tif (i+l<st.l)\n           479 | \t\t\t\u00e4*(c+i) = *(c+i+l); *(c+i+l) = ' ';\u00fc\n           480 | \t\telse *(c+i) = ' ';\n           481 | \t\treturn ;\n           482 | \t\u00fc\n           483 |\n           484 | void mvsSTRING::operator>>(long int l)\n           485 | \t\u00e4\n           486 | \tif ( l <= 0 ]] l >= st.l) return ;\n           487 | \tchar * c = st.c;\n           488 | \tfor(long int i = st.l-1;i;i--)\n           489 | \t\tif (i-l>=0)\n           490 | \t\t\t\u00e4*(c+i)= *(c+i-l); *(c+i-l) = ' '; \u00fc\n           491 | \t\telse *(c+i) = ' ';\n           492 | \t\treturn ;\n           493 | \t\u00fc\n           494 |\n           495 | long int mvsSTRING::hashcode()\n           496 | \t\u00e4\n           497 | \tlong int r = 0;\n           498 | \tfor (long int i = st.l ;i;i--)\n           499 | \t\tr = (r<<1) \u00ac (st.c\u00c4i\u00dc) ;\n           500 | \treturn (r<0 ? -r:r);\n           501 | \t\u00fc\n           502 | char * mvsSTRING::nameOf()\n           503 | \t\u00e4\n           504 | \treturn \"mvsSTRING\" ;\n           505 | \t\u00fc\n           506 |\n           507 | /*\n           508 | long int    mvsSTRING::lengthOf()\n           509 | \u00e4\n           510 | return st.l;\n           511 | \u00fc;\n           512 | */\n           513 |\n           514 | void mvsSTRING::changeAll(char f,char t)\n           515 | \t\u00e4\n           516 | \tfor(char * c =st.c;*c;c++) if ( *c == f) *c = t;\n           517 | \t\u00fc\n           518 |\n           519 | void mvsSTRING::align(ALIGNTYPE falign)\n           520 | \t\u00e4\n           521 | \tlong int i , is , iz ;\n           522 | \tif ( st.type NEQ str::_VALID ) return ;\n           523 | \tswitch(falign)\n           524 | \t\t\u00e4\n           525 | \t\tcase aLEFT  :\n           526 | \t\t\tfor( i =0;i<st.l;i++)\n           527 | \t\t\t\tif (st.c\u00c4i\u00dc NEQ ' ') break ;\n           528 | \t\t\t*this<<i;\n           529 | \t\t\tbreak ;\n           530 | \t\tcase aRIGHT :\n           531 | \t\t\tfor( i=st.l-1;i;i--)\n           532 | \t\t\t\tif (st.c\u00c4i\u00dc NEQ ' ') break ;\n           533 | \t\t\t*this>>(st.l-1-i);\n           534 | \t\t\tbreak ;\n           535 | \t\tcase aCENTER:\n           536 | \t\t\tfor( is =0;is<st.l;is++)\n           537 | \t\t\t\tif (st.c\u00c4is\u00dc NEQ ' ') break ;\n           538 | \t\t\tfor( iz=st.l-1;iz;iz--)\n           539 | \t\t\t\tif (st.c\u00c4iz\u00dc NEQ ' ') break ;\n           540 | \t\t\tif ( is >= iz ) break ;\n           541 | \t\t\ti = (st.l-(iz-is))/2;\n           542 | \t\t\tif (i < is ) *this<<(is-i);\n           543 | \t\t\telse if( i>is) *this>>(i-is);\n           544 | \t\t\tbreak ;\n           545 | \t\tcase aASIS   :\n           546 | \t\tdefault :\n           547 | \t\t\treturn ;\n           548 | \t\t\u00fc\n           549 | \t\u00fc\n           550 | void mvsSTRING::caps(CAPSTYPE fcaps)\n           551 | \t\u00e4\n           552 | \tlong int i = st.l-1;\n           553 | \tif ( i <0 ]] st.type NEQ str::_VALID ) return ;\n           554 | \tlong int flag = 1;\n           555 | \tswitch(fcaps)\n           556 | \t\t\u00e4\n           557 | \t\tcase cUPPER :\n           558 | \t\t\twhile (i+1) st.c\u00c4i\u00dc = (char )toupper(st.c\u00c4i--\u00dc);\n           559 | \t\t\tbreak ;\n           560 | \t\tcase cLOWER :\n           561 | \t\t\twhile (i+1) st.c\u00c4i\u00dc = (char )tolower(st.c\u00c4i--\u00dc);\n           562 | \t\t\tbreak ;\n           563 | \t\tcase cWORD:\n           564 | \t\t\tfor(i=0;i<st.l;i++)\n           565 | \t\t\t\t\u00e4 if ( st.c\u00c4i\u00dc == ' ' ) flag = 1 ;\n           566 | \t\t\t\telse if (flag) \u00e4 flag = 0; st.c\u00c4i\u00dc =(char ) toupper(st.c\u00c4i\u00dc);\u00fc\n           567 | \t\t\t\telse st.c\u00c4i\u00dc = (char )tolower(st.c\u00c4i\u00dc); \u00fc\n           568 | \t\t\tbreak ;\n           569 | \t\tcase cASIS   :\n           570 | \t\tdefault :\n           571 | \t\t\treturn ;\n           572 | \t\t\u00fc\n           573 | \t\u00fc\n           574 |\n           575 | mvsSTRING& mvsSTRING::strip()\n           576 | \t\u00e4\n           577 | #if defined(ISIS_PF_HOST) ]] defined(ISIS_PF_MU)\n           578 | \tchar linefeed = '\u00d6x15';\n           579 | \tchar horizontaltab = '\u00d6x05';\n           580 | #else\n           581 | \tchar linefeed  = '\u00d6x0a';\n           582 | \tchar horizontaltab = '\u00d6x09';\n           583 | #endif\n           584 | \tlong int is , iz ;\n           585 | \tif ( st.type NEQ str::_VALID ]]\n           586 | \t\tst.ltype == str::FIX ) return *this;\n           587 | \tfor( is =0;is<st.l;is++)\n           588 | \t\tif (st.c\u00c4is\u00dc NEQ ' ') break ;\n           589 | \tfor( iz=st.l-1;iz;iz--)\n           590 | \t\tif (st.c\u00c4iz\u00dc NEQ ' ' && st.c\u00c4iz\u00dc NEQ linefeed && st.c\u00c4iz\u00dc NEQ horizontaltab) break ;\n           591 | \tif ( is > iz ) *this = \"\";\n           592 | \telse \u00e4 st.c\u00c4iz+1\u00dc = 0; st.ltype = str::VARIABLE ;\n           593 | \tif (is) *this = (char *)&(st.c\u00c4is\u00dc);\n           594 | \telse\n           595 | \t\t\u00e4\n           596 | \t\tchar * temp = new char\u00c4strlen(st.c)+1\u00dc;\n           597 | \t\tstrcpy(temp,st.c);\n           598 | \t\t* this = temp ;\n           599 | \t\tdelete \u00c4\u00dc temp;\n           600 | \t\t\u00fc\n           601 | \t\t\u00fc\n           602 | \treturn * this;\n           603 | \t\u00fc\n           604 |\n           605 | int mvsSTRING::isEmpty()\n           606 | \t\u00e4\n           607 | \tif ( st.l == 0 ) return 1;\n           608 | \tmvsSTRING t = *this;\n           609 | \tt.st.ltype = str::VARIABLE;\n           610 | \tt.strip();\n           611 | \tif ( t.lengthOf() == 0) return 1;\n           612 | \treturn 0;\n           613 | \t\u00fc\n           614 |\n           615 | mvsSTRING& mvsSTRING::stripmvsSTRING()\n           616 | \t\u00e4\n           617 | \tst.ltype = str::VARIABLE;\n           618 | \tstrip();\n           619 | \treturn *this;\n           620 | \t\u00fc\n           621 | void mvsSTRING::parse(mvsSTRING& s , char c, mvsSTRING &rest )\n           622 | \t\u00e4\n           623 |\n           624 | \tchar *p = NULL;\n           625 | \tbool off =false;\n           626 | \tfor(int i=0;p==NULL&&i<lengthOf();i++)\n           627 | \t\t\u00e4\n           628 | \t\tif (st.c\u00c4i\u00dc == parseSepCh && st.c\u00c4i+1\u00dc|=parseSepCh)\n           629 | \t\t\toff=|off;\n           630 | \t\tif (|off&&st.c\u00c4i\u00dc==c)\n           631 | \t\t\tp = st.c+i;\n           632 | \t\t\u00fc\n           633 | \tif ( p ) \u00e4 *p = '\u00d6x00'; rest = p+1; s = st.c ; *p = c; \u00fc\n           634 | \telse\n           635 | \t\t\u00e4\n           636 | \t\ts = st.c;\n           637 | \t\trest = \"\";\n           638 | \t\t\u00fc\n           639 |\n           640 | \t\u00fc\n           641 | void mvsSTRING::parse(mvsSTRING& s , char * c, mvsSTRING & rest)\n           642 | \t\u00e4\n           643 | \tchar * p = NULL;\n           644 | \tbool off =false;\n           645 | \tfor(int i=0;p==NULL&&i<lengthOf();i++)\n           646 | \t\t\u00e4\n           647 | \t\tif (st.c\u00c4i\u00dc == parseSepCh && st.c\u00c4i+1\u00dc|=parseSepCh)\n           648 | \t\t\toff=|off;\n           649 | \t\tif (|off&&memcmp(st.c+i,c,strlen(c))==0)\n           650 | \t\t\tp = st.c+i;\n           651 | \t\t\u00fc\n           652 |\n           653 | \tif ( p)\n           654 | \t\t\u00e4\n           655 | \t\t//KV20051205 if s==*this or rest == *this then st.c might be deleted in assignment operator\n           656 | \t\t// -> p must not be used after assignment\n           657 | \t\tmvsSTRING tmp(st.c,p-st.c);\n           658 | \t\trest = p+strlen(c);\n           659 | \t\ts = tmp;\n           660 | \t\t\u00fc\n           661 | \telse\n           662 | \t\t\u00e4\n           663 | \t\ts = *this;\n           664 | \t\trest = \"\";\n           665 | \t\t\u00fc\n           666 | \t\u00fc\n           667 |\n           668 | void mvsSTRING::parse(mvsSTRING& s1,char c1, mvsSTRING& s2, char c2,mvsSTRING& rest)\n           669 | \t\u00e4\n           670 | \tmvsSTRING re;\n           671 | \tchar * p = NULL;\n           672 | \tbool off =false;\n           673 | \tfor(int i=0;p==NULL&&i<lengthOf();i++)\n           674 | \t\t\u00e4\n           675 | \t\tif (st.c\u00c4i\u00dc == parseSepCh && st.c\u00c4i+1\u00dc|=parseSepCh)\n           676 | \t\t\toff|=off;\n           677 | \t\tif (|off&&st.c\u00c4i\u00dc==c1)\n           678 | \t\t\tp = st.c+i;\n           679 | \t\t\u00fc\n           680 |\n           681 | \tif (p)\n           682 | \t\t\u00e4\n           683 | \t\tparse(s1,c1,re);\n           684 |\n           685 | \t\tre.parse(s2,c2,rest);\n           686 | \t\t\u00fc\n           687 | \telse \u00e4 s1 = st.c; s2 = \"\"; rest = \"\"; \u00fc\n           688 |\n           689 | \t\u00fc\n           690 |\n           691 | void mvsSTRING::parse(mvsSTRING&s10, char * c1,\n           692 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30)\n           693 | \t\u00e4\n           694 | \tmvsSTRING rest;\n           695 | \tmvsSTRING s1 = \"\";\n           696 | \tmvsSTRING s2 = \"\";\n           697 | \tmvsSTRING s3 = \"\";\n           698 | \tthis->parse(s1,c1,rest);\n           699 | \tif ( NOT rest.isEmpty() )\n           700 | \t\t\u00e4\n           701 | \t\trest.parse(s2,c2,s3);\n           702 | \t\t\u00fc\n           703 | \ts10 = s1;\n           704 | \ts20 = s2;\n           705 | \ts30 = s3;\n           706 |\n           707 | \t\u00fc\n           708 |\n           709 | void mvsSTRING::split(mvsSTRING&s10, char * c1,\n           710 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30)\n           711 | \t\u00e4\n           712 | \tmvsSTRING rest;\n           713 | \tmvsSTRING s1 = \"\";\n           714 | \tmvsSTRING s2 = \"\";\n           715 | \tmvsSTRING s3 = \"\";\n           716 | \tstrip();\n           717 | \tparse(s1,c1,rest);\n           718 | \tif ( NOT rest.isEmpty() )\n           719 | \t\t\u00e4\n           720 | \t\trest.strip();\n           721 | \t\trest.parse(s2,c2,s3);\n           722 | \t\t\u00fc\n           723 | \ts10 = s1.strip();\n           724 | \ts20 = s2.strip();\n           725 | \ts30 = s3.strip();\n           726 |\n           727 | \t\u00fc\n           728 | void mvsSTRING::split(mvsSTRING&s10, char * c1,\n           729 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30,\n           730 | \t\t\t\t\t\t\t\t\t\t\tchar * c3, mvsSTRING&s40)\n           731 | \t\u00e4\n           732 | \tparse(s10,c1,s20,c2,s30,c3,s40);\n           733 | \t\u00fc\n           734 |\n           735 | void mvsSTRING::split(mvsSTRING&s10, char * c1,\n           736 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30,\n           737 | \t\t\t\t\t\t\t\t\t\t\tchar * c3, mvsSTRING&s40,\n           738 | \t\t\t\t\t\t\t\t\t\t\tchar * c4, mvsSTRING&s50)\n           739 |\n           740 | \t\u00e4\n           741 | \tmvsSTRING rest;\n           742 | \tmvsSTRING s1 = \"\";\n           743 | \tmvsSTRING s2 = \"\";\n           744 | \tmvsSTRING s3 = \"\";\n           745 | \tmvsSTRING s4 = \"\";\n           746 | \tmvsSTRING s5 = \"\";\n           747 |\n           748 | \tthis->parse(s1,c1,rest);\n           749 | \tif ( NOT rest.isEmpty() )\n           750 | \t\t\u00e4\n           751 | \t\trest.parse(s2,c2,s3,c3,s4,c4,s5);\n           752 | \t\t\u00fc\n           753 | \ts10 = s1.strip();\n           754 | \ts20 = s2.strip();\n           755 | \ts30 = s3.strip();\n           756 | \ts40 = s4.strip();\n           757 |   s50 = s5.strip();\n           758 | \t\u00fc\n           759 |\n           760 | void mvsSTRING::parse(mvsSTRING&s10, char * c1,\n           761 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2,\n           762 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s30, char * c3, mvsSTRING&s40)\n           763 | \t\u00e4\n           764 | \tmvsSTRING rest;\n           765 | \tmvsSTRING s1 = \"\";\n           766 | \tmvsSTRING s2 = \"\";\n           767 | \tmvsSTRING s3 = \"\";\n           768 | \tmvsSTRING s4 = \"\";\n           769 | \tthis->parse(s1,c1,rest);\n           770 | \tif ( NOT rest.isEmpty() )\n           771 | \t\t\u00e4\n           772 | \t\trest.parse(s2,c2,s3,c3,s4);\n           773 | \t\t\u00fc\n           774 | \ts10 = s1.strip();\n           775 | \ts20 = s2.strip();\n           776 | \ts30 = s3.strip();\n           777 | \ts40 = s4.strip();\n           778 | \t\u00fc\n           779 |\n           780 | void mvsSTRING::dump(const char * f,int l)\n           781 | \t\u00e4\n           782 | #if 0\n           783 | \tchar * use = \"mvsSTRING\";\n           784 | \t// if ( 0 ) //( __test__ )\n           785 | \t// ::dump((FILE *)f,use,st.c,st.l);\n           786 | \tchar _d\u00c41024\u00dc;\n           787 | \tsprintf(_d,\" File:%s Line:%d %s: %*s (%d %d %d) \u00d6n\",f,l,use,st.l,st.c,st.l,st.ltype,st.type);\n           788 | \tputs(_d);\n           789 | #endif\n           790 | \t\u00fc\n           791 |\n           792 | mvsSTRING& mvsSTRING::format(FORMAT * f)\n           793 | \t\u00e4\n           794 | \tcaps(f->fcaps);\n           795 | \talign(f->falign);\n           796 | \treturn * this ;\n           797 | \t\u00fc\n           798 |\n           799 | char * mvsSTRING::getLlmvsSTRING()\n           800 | \t\u00e4\n           801 | \tst.lls = new char\u00c4st.l+2\u00dc;\n           802 | \t*(short*)st.lls = short(st.l);\n           803 | \tmemcpy(st.lls+2,st.c,st.l);\n           804 | \treturn st.lls;\n           805 | \t\u00fc\n           806 |\n           807 |\n           808 |\n           809 |\n           810 | #if 0\n           811 |\n           812 | mvsSTRING patternchng(mvsSTRING  input,char *  mask,\n           813 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING  (*f)(mvsSTRING ))\n           814 | \t\u00e4\n           815 | \tchar * mv\u00c432\u00dc;\n           816 | \tlong int mflag = 1, mi = 0 ;\n           817 | \tlong int ml = strlen(mask);\n           818 | \tlong int i  , j ;\n           819 |\n           820 | \tfor(i=0;i<ml;i++)\n           821 | \t\t\u00e4  if ( *(mask+i) == '*' )\n           822 | \t\t\u00e4 *(mask+i ) = 0 ;\n           823 | \tmv\u00c4mi++\u00dc   = 0 ;\n           824 | \tmflag = 1;\n           825 | \t\t\u00fc\n           826 | \t\telse\n           827 | \t\t\tif (mflag)\n           828 | \t\t\t\t\u00e4 mflag = 0;\n           829 | \tmv\u00c4mi++\u00dc = mask+i ; \u00fc\n           830 | \t\t\u00fc\n           831 |\n           832 |\n           833 | \tlong int start = 0, stop = 0, offset = 0;\n           834 | \tmvsSTRING outputstr(\" \",0);\n           835 | \tmvsSTRING r = input ;\n           836 | \tchar * s ;\n           837 |\n           838 |\n           839 | \tfor(i=0;i<strlen(input);i++)\n           840 | \t\t\u00e4\n           841 | \t\tfor(j=0;j<mi;j++)\n           842 | \t\t\tif ( j == 0)\n           843 | \t\t\t\t\u00e4 if ( mv\u00c40\u00dc == 0)\n           844 | \t\t\t\t\u00e4 start = i ;  stop = strlen(input) ; \u00fc\n           845 | \t\t\t\telse if ( ( s = strstr(((char *)input)+i,mv\u00c40\u00dc) ) NEQ 0)\n           846 | \t\t\t\t\t\u00e4 start  = s - (char *)input ;  stop= start+strlen(mv\u00c40\u00dc);\n           847 | \t\toffset =stop-start ; \u00fc\n           848 | \t\t\t\telse \u00e4 stop = 0 ;break; \u00fc\n           849 | \t\t\t\t\u00fc\n           850 | \t\t\telse\n           851 |\n           852 | \t\t\t\t\u00e4\n           853 | \t\t\t\tif (  mv\u00c4j\u00dc == 0 ) \u00e4 stop =  strlen(input) ; continue ;\u00fc\n           854 |\n           855 | \t\t\t\telse if ( ( s = strstr((char *)input+start+offset,mv\u00c4j\u00dc)) NEQ 0 )\n           856 | \t\t\t\t\tstop = s-input+strlen(mv\u00c4j\u00dc);\n           857 | \t\t\t\telse \u00e4 stop = 0; break;\u00fc\n           858 | \t\t\t\t\u00fc\n           859 |\n           860 |\n           861 |\n           862 |\n           863 |\n           864 | \t\t\tif ( start < stop)\n           865 |\n           866 | \t\t\t\t\u00e4  outputstr  = outputstr + input(i,start-i);\n           867 | \t\t\tmvsSTRING t((char *)input+start,stop-start);\n           868 | \t\t\tr = input+stop;\n           869 | \t\t\toutputstr = outputstr + f(t) ;\n           870 | \t\t\ti =stop ;\n           871 | \t\t\tstart = stop = offset = 0;\n           872 | \t\t\t\t\u00fc\n           873 | \t\t\u00fc\n           874 | \toutputstr = outputstr+r;\n           875 | \treturn outputstr ;\n           876 |\n           877 | \t\u00fc\n           878 | #endif\n           879 |\n           880 |\n           881 | //#include <stdlib.h>\n           882 |\n           883 |\n           884 |\n           885 | sLLType  sLLTypeTable\u00c4\u00dc = \u00e4 sLLt0, sLLt1, sLLt2, sLLt3, sLLt4, sLLt0\u00fc;\n           886 |\n           887 | // Construtors:\n           888 | // default output\n           889 | //\n           890 |\n           891 |\n           892 | sLL::sLL(sLLType st , sLLUsage su,int l):mERROR()\n           893 | \t\u00e4\n           894 | \ttype = st;\n           895 | \tusage = su;\n           896 | \tstatus = sLLOk;\n           897 | \tallocl = 0;\n           898 |\n           899 | \tbase = child = (sLL*)0;\n           900 | \tllength = int(type);\n           901 |\n           902 | \tif ( usage NEQ sLLinput )\n           903 | \t\t\u00e4\n           904 | \t\tallocl = l;\n           905 | \t\tstart = new char \u00c4l\u00dc;\n           906 | \t\tstoredl = offset = llength;\n           907 | \t\tcursor = start+offset;\n           908 | \t\tlength = l;\n           909 | \t\tfromInt(start,length,llength);\n           910 | \t\t\u00fc\n           911 | \t\u00fc\n           912 |\n           913 | //\n           914 | // From a base sLL\n           915 | //\n           916 |\n           917 | sLL ::sLL (sLL  * b,int o,sLLType st):mERROR()\n           918 | \t\u00e4\n           919 | \tinit(b,o,st);\n           920 | \t\u00fc\n           921 |\n           922 | //\n           923 | // From a base SLL with offset\n           924 | //\n           925 |\n           926 | sLL::sLL(sLL * b,char  * s,\n           927 | \t\t\t\t sLLType st):mERROR()\n           928 | \t\u00e4\n           929 | \tinit(b,s-(b->start),st);\n           930 | \t\u00fc\n           931 |\n           932 | //\n           933 | // From a mvsSTRING\n           934 | //\n           935 |\n           936 | sLL ::sLL (char  * s,sLLType  st):mERROR()\n           937 | \t\u00e4\n           938 | \tallocl = 0;\n           939 | \tusage = sLLinput ;\n           940 | \ttype = st;\n           941 | \tstatus = sLLOk;\n           942 |\n           943 | \tbase = child =(sLL*)0;\n           944 | \tstoredl = llength = offset = int(st);\n           945 |\n           946 | \tlength = int(toInt(s,llength));\n           947 | \tstart = s;\n           948 | \tcursor = start+offset;\n           949 |\n           950 | \t\u00fc\n           951 |\n           952 | sLL :: sLL(char  * s, int ix):mERROR()\n           953 | \t\u00e4\n           954 | \tsLLType st = sLLTypeTable\u00c4ix\u00dc;\n           955 | \tusage = sLLinput ;\n           956 | \ttype = st;\n           957 | \tstatus = sLLOk;\n           958 |\n           959 | \tbase = child =(sLL*)0;\n           960 | \tstoredl =  llength = offset = int(st);\n           961 |\n           962 | \tlength = int(toInt(s,llength));\n           963 | \tstart = s;\n           964 | \tcursor = start+offset;\n           965 | \t\u00fc\n           966 |\n           967 | //\n           968 | // Copy constructor\n           969 | //\n           970 |\n           971 | sLL ::sLL (const sLL & f):mERROR()\n           972 | \t\u00e4\n           973 | \tallocl = f.allocl;\n           974 | \ttype   = f.type;\n           975 | \tusage  = f.usage;\n           976 | \tstatus = f.status;\n           977 |\n           978 | \tif ( usage NEQ sLLinput)\n           979 | \t\tstart = new char \u00c4f.allocl\u00dc;\n           980 | \telse\n           981 | \t\tstart = new char \u00c4f.length\u00dc;\n           982 |\n           983 | \tlength = f.length;\n           984 | \toffset = f.offset;\n           985 | \tllength = f.llength;\n           986 | \tstoredl = f.storedl;\n           987 | \tbase = NULL ;\n           988 | \tcursor = start+(f.cursor-f.start);\n           989 | \tmemcpy(start,f.start,length);\n           990 | \t\u00fc\n           991 |\n           992 | // Destructor\n           993 |\n           994 | sLL::\u00dfsLL()\n           995 | \t\u00e4\n           996 | \tif ( allocl ) delete \u00c4\u00dc start;\n           997 | \t\u00fc\n           998 |\n           999 | //\n          1000 | // Assignemnt operator\n          1001 | //\n          1002 |\n          1003 | sLL & sLL ::operator=(sLL  & from)\n          1004 | \t\u00e4\n          1005 | \tif ( &from == this ) return *this;\n          1006 |\n          1007 | \tif (allocl )\n          1008 | \t\t\u00e4\n          1009 | \t\tdelete \u00c4\u00dc start ;\n          1010 | \t\t\u00fc\n          1011 | \terr = from.err;\n          1012 | \tallocl = from.allocl ? from.allocl : from.length;\n          1013 | \tstart = new char \u00c4allocl\u00dc;\n          1014 | \tlength = from.length;\n          1015 |\n          1016 | \tusage = from.usage;\n          1017 | \ttype  = from.type;\n          1018 | \tstatus = from.status;\n          1019 | \tllength = from.llength;\n          1020 | \toffset = from.offset;\n          1021 | \tstoredl= from.storedl;\n          1022 | \tcursor = start+(from.cursor-from.start);\n          1023 |\n          1024 | \tbase = from.base;\n          1025 | \tchild = from.child;\n          1026 |\n          1027 | \tmemcpy(start,from.start,length);\n          1028 | \treturn * this;\n          1029 | \t\u00fc\n          1030 |\n          1031 | sLL::operator int()\n          1032 | \t\u00e4\n          1033 | \tif ( status == sLLOk && NOT iserror() )\n          1034 | \t\t\u00e4\n          1035 | \t\tif (usage == sLLinput) return  getRemainderLength() ;\n          1036 | \t\telse return storeOk(1);\n          1037 | \t\t\u00fc\n          1038 |\n          1039 | \telse\n          1040 | \t\treturn 0;\n          1041 | \t\u00fc\n          1042 |\n          1043 | char  & sLL::operator\u00c4\u00dc(int o)\n          1044 | \t\u00e4\n          1045 | \tif ( offset < length )\n          1046 | \t\treturn start\u00c4o\u00dc;\n          1047 |\n          1048 | \tstatus = sLLOf; markerror();\n          1049 | \treturn dummy;\n          1050 | \t\u00fc\n          1051 |\n          1052 | //\n          1053 | // Iterate on base - child structure\n          1054 | //\n          1055 |\n          1056 | sLL *sLL::iterate(sLLType st,int resetf)\n          1057 | \t\u00e4\n          1058 | \tsetUsage(sLLinput);\n          1059 | \tif ( resetf ) resetCursor();\n          1060 | \tchild = new sLL(this,cursor,st);\n          1061 | \tif (child->iserror()) return NULL;\n          1062 | \treturn child;\n          1063 | \t\u00fc\n          1064 |\n          1065 | //\n          1066 | // Get back the next child\n          1067 | //\n          1068 |\n          1069 | sLL  *sLL ::next()\n          1070 | \t\u00e4\n          1071 |\n          1072 | \tif ( child == 0 ]] iserror() )\n          1073 | \t\treturn (sLL *)0;\n          1074 | \tint    l  = child->getFullLength();\n          1075 | \tdelete child;\n          1076 |\n          1077 | \tif ( goCursor(l+type) )\n          1078 | \t\t\u00e4\n          1079 | \t\tcursor-=type;\n          1080 | \t\tchild = new sLL(this,cursor,type);\n          1081 | \t\treturn child;\n          1082 | \t\t\u00fc\n          1083 | \telse\n          1084 | \t\t\u00e4\n          1085 | \t\tchild = 0;\n          1086 | \t\treturn NULL;\n          1087 | \t\t\u00fc\n          1088 | \t\u00fc\n          1089 | void sLL::remove(sLL& o)\n          1090 | \t\u00e4\n          1091 |\n          1092 | \tsLL s(type,sLLoutputVar,storedl);\n          1093 | \tsLL * si = iterate(type);\n          1094 | \twhile ( si )\n          1095 | \t\t\u00e4\n          1096 | \t\tif ( si->getStart() NEQ o.getStart() )\n          1097 | \t\t\ts<<(*si);\n          1098 | \t\tsi = next();\n          1099 | \t\t\u00fc\n          1100 | \t*this = s;\n          1101 | \t\u00fc\n          1102 |\n          1103 | // Get info\n          1104 |\n          1105 |\n          1106 | sLL   * sLL ::getBase()\u00e4 return base;\u00fc\n          1107 | int     sLL ::getOffset()\u00e4 return offset;\u00fc\n          1108 | int     sLL ::getFullLength()\u00e4 return length;\u00fc\n          1109 | int     sLL ::getStoredLength()\u00e4 return storedl;\u00fc\n          1110 | int     sLL ::getRemainderLength()\n          1111 | \t\u00e4 if (status == sLLOk )\n          1112 | \treturn (length - (cursor - start) ) ;\n          1113 | return 0;\n          1114 | \t\u00fc\n          1115 | char  * sLL ::getCursor()\u00e4 return cursor;\u00fc\n          1116 | sLL   * sLL ::getChild()\u00e4 return child;\u00fc\n          1117 | void    sLL ::setBase(sLL *b)\u00e4 base = b;\u00fc\n          1118 | void    sLL ::setChild(sLL *c)\u00e4 child = c;\u00fc\n          1119 | void    sLL ::setUsage(sLLUsage u)\n          1120 | \t\u00e4\n          1121 | \tif ( u == usage ) return;\n          1122 |\n          1123 | \tif ( u == sLLinput )\n          1124 | \t\t\u00e4\n          1125 | \t\tsetLength();\n          1126 | \t\tlength = storedl;\n          1127 | \t\tresetCursor();\n          1128 | \t\t\u00fc\n          1129 | \telse\n          1130 | \t\t\u00e4\n          1131 | \t\tcursor = start+length;\n          1132 | \t\t\u00fc\n          1133 | \tstatus = sLLOk;\n          1134 | \tclearerror();\n          1135 | \tusage = u;\n          1136 | \t\u00fc\n          1137 | // Cursor\n          1138 |\n          1139 | void sLL::resetCursor()\n          1140 | \t\u00e4\n          1141 | \tstatus = sLLOk;\n          1142 | \tclearerror();\n          1143 | \tcursor = start+llength;\n          1144 | \tif ( usage NEQ sLLinput ) setLength();\n          1145 |\n          1146 | \t\u00fc\n          1147 |\n          1148 | char  * sLL::goCursor(int v)\n          1149 | \t\u00e4\n          1150 | \tchar * c = cursor+v;\n          1151 | \tif ( iserror() ]] status NEQ sLLOk ) return 0;\n          1152 | \tif ( (c-start) <= length && (c-start ) >= llength )\n          1153 | \t\t\u00e4\n          1154 | \t\tcursor = c;\n          1155 | \t\tif ( usage NEQ sLLinput) setLength();\n          1156 | \t\treturn cursor ;\n          1157 | \t\t\u00fc\n          1158 | \telse\n          1159 | \t\t\u00e4\n          1160 | \t\tstatus = sLLUf;\n          1161 | \t\tcursor = start +length;\n          1162 | \t\tmarkerror();\n          1163 | \t\treturn 0;\n          1164 | \t\t\u00fc\n          1165 | \t\u00fc\n          1166 |\n          1167 | void sLL::setLength()\n          1168 | \t\u00e4\n          1169 | \tstoredl = cursor-start;\n          1170 | \tfromInt(start,cursor-start,int(type));\n          1171 | \t\u00fc\n          1172 |\n          1173 | sLL& sLL::operator >>(int& i)\n          1174 | \t\u00e4\n          1175 | \tsetUsage(sLLinput);\n          1176 | \ti = int(toInt(cursor,sizeof(int)));\n          1177 | \tgoCursor(sizeof( int));\n          1178 | \treturn *this;\n          1179 | \t\u00fc\n          1180 |\n          1181 | sLL& sLL::operator>>(unsigned short& s )\n          1182 | \t\u00e4\n          1183 | \tsetUsage(sLLinput);\n          1184 | \ts =(unsigned short) toInt(cursor,sizeof(short));\n          1185 | \tgoCursor(sizeof(short));\n          1186 | \treturn *this;\n          1187 | \t\u00fc\n          1188 |\n          1189 | sLL& sLL::operator>>(short& s )\n          1190 | \t\u00e4\n          1191 | \tsetUsage(sLLinput);\n          1192 | \ts = short(toInt(cursor,sizeof(short)));\n          1193 | \tgoCursor(sizeof(short));\n          1194 | \treturn *this;\n          1195 | \t\u00fc\n          1196 |\n          1197 |\n          1198 | sLL& sLL::operator>>(char  & c)\n          1199 | \t\u00e4\n          1200 | \tsetUsage(sLLinput);\n          1201 | \tc = *cursor;\n          1202 | \tgoCursor(1);\n          1203 | \treturn *this;\n          1204 | \t\u00fc\n          1205 |\n          1206 | sLL& sLL::operator >>(char * & s)\n          1207 | \t\u00e4\n          1208 | \tsetUsage(sLLinput);\n          1209 | \ts =  cursor;\n          1210 | \treturn * this;\n          1211 | \t\u00fc\n          1212 |\n          1213 | sLL& sLL::operator>>(mvsSTRING & s)\n          1214 | \t\u00e4\n          1215 | \tsetUsage(sLLinput);\n          1216 | \ts = mvsSTRING(cursor,getRemainderLength());\n          1217 | \tgoCursor(getRemainderLength());\n          1218 | \treturn * this;\n          1219 | \t\u00fc\n          1220 |\n          1221 | sLL& sLL::operator >>(sLL& s)\n          1222 | \t\u00e4\n          1223 | \tsetUsage(sLLinput);\n          1224 | \tsLL ns(cursor,s.type);\n          1225 | \ts = ns;\n          1226 | \tgoCursor(s.length);\n          1227 |\n          1228 | \treturn * this;\n          1229 | \t\u00fc\n          1230 |\n          1231 | sLL& sLL::operator>>(INT3 & s)\n          1232 | \t\u00e4\n          1233 | \tsetUsage(sLLinput);\n          1234 | \ts = int(toInt(cursor,3));\n          1235 | \tgoCursor(3);\n          1236 | \treturn *this;\n          1237 | \t\u00fc\n          1238 |\n          1239 | sLL& sLL::operator>>(sLLskip & s)\n          1240 | \t\u00e4\n          1241 | \tsetUsage(sLLinput);\n          1242 | \tgoCursor(int(s));\n          1243 | \treturn *this;\n          1244 |\n          1245 | \t\u00fc\n          1246 |\n          1247 | sLL& sLL::operator<<(int i)\n          1248 | \t\u00e4\n          1249 | \tif ( storeOk(sizeof(int)) )\n          1250 |\n          1251 | \t\t\u00e4\n          1252 | \t\tfromInt(cursor,i,sizeof(i));\n          1253 | \t\tgoCursor(sizeof(int));\n          1254 | \t\t\u00fc\n          1255 | \treturn *this;\n          1256 | \t\u00fc\n          1257 |\n          1258 | sLL& sLL::operator<<(short i)\n          1259 | \t\u00e4\n          1260 | \tif ( storeOk(sizeof(short)) )\n          1261 |\n          1262 | \t\t\u00e4\n          1263 | \t\tfromInt(cursor,i,sizeof(i));\n          1264 | \t\tgoCursor(sizeof(short));\n          1265 | \t\t\u00fc\n          1266 | \treturn *this;\n          1267 | \t\u00fc\n          1268 |\n          1269 | sLL& sLL::operator<<(unsigned short i)\n          1270 | \t\u00e4\n          1271 | \tif ( storeOk(sizeof(short)) )\n          1272 |\n          1273 | \t\t\u00e4\n          1274 | \t\tfromInt(cursor,short(i),sizeof(i));\n          1275 | \t\tgoCursor(sizeof(short));\n          1276 | \t\t\u00fc\n          1277 | \treturn *this;\n          1278 | \t\u00fc\n          1279 |\n          1280 | sLL& sLL::operator<<(char  c)\n          1281 | \t\u00e4\n          1282 | \tif (storeOk(1))\n          1283 | \t\t\u00e4\n          1284 | \t\t*cursor=c;\n          1285 | \t\tgoCursor(1);\n          1286 | \t\t\u00fc\n          1287 | \treturn *this;\n          1288 | \t\u00fc\n          1289 |\n          1290 | sLL& sLL::operator<<(char  * str)\n          1291 | \t\u00e4\n          1292 | \tint l = strlen(str);\n          1293 | \tif ( storeOk(l) )\n          1294 | \t\t\u00e4\n          1295 | \t\tmemcpy(cursor,str,l);\n          1296 | \t\tgoCursor(l);\n          1297 | \t\t\u00fc\n          1298 | \treturn * this;\n          1299 | \t\u00fc\n          1300 |\n          1301 | sLL& sLL::operator<<(mvsSTRING & s)\n          1302 | \t\u00e4\n          1303 | \tint l = s.lengthOf();\n          1304 | \tif (storeOk(l) )\n          1305 | \t\t\u00e4\n          1306 | \t\tmemcpy(cursor,(char *)(s),l);\n          1307 | \t\tgoCursor(l);\n          1308 | \t\t\u00fc\n          1309 | \treturn * this;\n          1310 | \t\u00fc\n          1311 | sLL& sLL::operator<<(sLL & s)\n          1312 | \t\u00e4\n          1313 | \tint l = s.getLength();\n          1314 | \tif ( storeOk(l) )\n          1315 | \t\t\u00e4\n          1316 | \t\tmemcpy(cursor,s.getStart(),l);\n          1317 | \t\tgoCursor(l);\n          1318 | \t\t\u00fc\n          1319 | \treturn * this;\n          1320 | \t\u00fc\n          1321 |\n          1322 | sLL& sLL::operator<<(INT3& i)\n          1323 | \t\u00e4\n          1324 | \tif (storeOk(3)  )\n          1325 | \t\t\u00e4\n          1326 | \t\tfromInt(cursor,int(i),3);\n          1327 | \t\tgoCursor(3);\n          1328 | \t\t\u00fc\n          1329 | \treturn * this;\n          1330 | \t\u00fc\n          1331 |\n          1332 | sLL& sLL::operator<<(sLLskip& s)\n          1333 | \t\u00e4\n          1334 | \tif ( storeOk(int(s))  )\n          1335 | \t\t\u00e4\n          1336 | \t\tmemset(cursor,null,int(s));\n          1337 | \t\tgoCursor(int(s));\n          1338 | \t\t\u00fc\n          1339 | \treturn *this;\n          1340 | \t\u00fc\n          1341 |\n          1342 | sLL& sLL::store(char  * p,int l)\n          1343 | \t\u00e4\n          1344 | \tif ( l <= 0 ) return *this;\n          1345 | \tif ( storeOk(l) )\n          1346 | \t\t\u00e4\n          1347 | \t\tmemcpy(cursor,p,l);\n          1348 | \t\tgoCursor(l);\n          1349 | \t\t\u00fc\n          1350 | \treturn * this;\n          1351 | \t\u00fc\n          1352 |\n          1353 | //szm20050629\n          1354 | mvsSTRING sLL::getString()\n          1355 | \t\u00e4\n          1356 | \tif ( *(getCursor()+getRemainderLength()) == '\u00d6x00' )\n          1357 | \t\tstring = getCursor();\n          1358 | \telse\n          1359 | \t\t\u00e4\n          1360 | \t\tchar * c = new char\u00c4getRemainderLength()+1\u00dc;\n          1361 | \t\tc\u00c4getRemainderLength()\u00dc = null;\n          1362 | \t\tmemcpy(c,getCursor(),getRemainderLength());\n          1363 | \t\tstring = c;\n          1364 | \t\tdelete \u00c4\u00dc c;\n          1365 | \t\t\u00fc\n          1366 | \treturn string;\n          1367 | \t\u00fc\n          1368 | //szm20050629\n          1369 |\n          1370 | //\n          1371 | // Utilies\n          1372 | //\n          1373 |\n          1374 | void sLL::init(sLL * b,int o,sLLType st)\n          1375 | \t\u00e4\n          1376 | \ttype  = st;\n          1377 | \tusage = sLLinput;\n          1378 | \tstatus = sLLOk;\n          1379 | \tallocl = 0;\n          1380 | \tbase  = b;\n          1381 | \tchild = 0;\n          1382 | \tstart = (b->start)+o;\n          1383 |\n          1384 | \toffset = llength = int(st);\n          1385 | \tcursor = start+offset;\n          1386 | \tb->setChild(this);\n          1387 | \tif ( usage == sLLinput  ]] b  )\n          1388 | \t\tstoredl = length = int(toInt (start,llength));\n          1389 | \telse\n          1390 | \t\tstoredl = length = llength ;\n          1391 | \t\u00fc\n          1392 |\n          1393 | int sLL::storeOk(int l)\n          1394 | \t\u00e4\n          1395 | #if defined(OWN_STDIO) == 0\n          1396 | \tassert ( l >= 0 );\n          1397 | #endif\n          1398 | \tint r;\n          1399 | \tif ( usage == sLLinput )\n          1400 | \t\t\u00e4\n          1401 | \t\tcursor = start+length;\n          1402 | \t\tusage = sLLoutputVar;\n          1403 | \t\t\u00fc\n          1404 | \telse\n          1405 | \t\t\u00e4\n          1406 | \t\tr = allocl -(cursor-start);\n          1407 | \t\tif ( r >= l ) return 1;\n          1408 | \t\tif ( usage == sLLoutput )\n          1409 | \t\t\t\u00e4\n          1410 | \t\t\tstatus = sLLOf;\n          1411 | \t\t\treturn 0;\n          1412 | \t\t\t\u00fc\n          1413 | \t\t\u00fc\n          1414 | \tr =l+(cursor-start);\n          1415 | \tchar * n = new char \u00c4r\u00dc;\n          1416 |\n          1417 | \tint o = cursor-start;\n          1418 | \tmemcpy(n,start,o);\n          1419 | \tif ( allocl )\n          1420 | \t\tdelete \u00c4\u00dc start;\n          1421 | \tlength = allocl = r;\n          1422 | \tstart = n;\n          1423 | \tcursor = n+o;\n          1424 | \treturn 1;\n          1425 | \t\u00fc\n          1426 |\n          1427 | //\n          1428 | //\n          1429 | //\n          1430 |\n          1431 | void sLL::dump(const char *f,int ln)\n          1432 | \t\u00e4\n          1433 | #if 0\n          1434 | \tchar * use = (usage == sLLinput) ? \"Input\" : \"Output\" ;\n          1435 | \tint l   = (usage == sLLinput) ? length : storedl;\n          1436 | \tchar b\u00c41024\u00dc;\n          1437 | \tsprintf(b,\" File:%s Line:%d %s %d \u00d6n\",f,ln,use,l\n          1438 | \t\t);\n          1439 | \tputs(b);\n          1440 | \tstring.dump(f,ln);\n          1441 | #endif\n          1442 | \t\u00fc\n          1443 |\n          1444 |\n          1445 | int sLL::write(void * f)\n          1446 | \t\u00e4\n          1447 | \treturn fwrite(start,1,getLength(),(FILE *)f);\n          1448 | \t\u00fc\n          1449 |\n          1450 | sLL * readsLL(void* f,sLLType t)\n          1451 | \t\u00e4\n          1452 | \tint l;\n          1453 | \tchar lx\u00c44\u00dc;\n          1454 |\n          1455 | \tif ( fread(lx,1,int(t),(FILE *)f) )\n          1456 | \t\t\u00e4\n          1457 |\n          1458 | \t\tl = int(toInt(lx,int(t)));\n          1459 | \t\tchar * b = new char \u00c4l\u00dc;\n          1460 | \t\tmemcpy(b,lx,int(t));\n          1461 | \t\tsLL * ret = NULL;\n          1462 | \t\tif ( fread(b+int(t),1,l-int(t),(FILE *)f) )\n          1463 | \t\t\t\u00e4\n          1464 | \t\t\tsLL buff(b,t);\n          1465 | \t\t\tret = new sLL(buff);\n          1466 | \t\t\t\u00fc\n          1467 | \t\tdelete \u00c4\u00dcb;\n          1468 | \t\treturn ret;\n          1469 |\n          1470 | \t\t\u00fc\n          1471 | \telse return NULL;\n          1472 | \t\u00fc\n          1473 |\n          1474 | //--------------------------------------------------------------------\n          1475 | //--------------------------------------------------------------------\n          1476 | //--------------------------------------------------------------------\n          1477 |\n          1478 | /*\n          1479 | sLLTag class fix type sLLt2 ( two bytes length)\n          1480 | short code\n          1481 | ...\n          1482 | */\n          1483 |\n          1484 | void sLLTag::init(short c )\n          1485 | \t\u00e4\n          1486 | \t//printf(\"code :%d\u00d6n\",c);\n          1487 | \tcode = c ;\n          1488 | \tsearchcode = 0;\n          1489 | #ifdef CALL_TAG\n          1490 | \tname = TagCatalog\u00c4code\u00dc ?(char *)(TagCatalog\u00c4code\u00dc->name) :  \"???\";\n          1491 | #endif\n          1492 | \t//  printf(\"%s\u00d6n\",name);\n          1493 | \t\u00fc\n          1494 |\n          1495 | sLLTag::sLLTag():sLL(sLLt2,sLLoutputVar)\n          1496 | \t\u00e4\n          1497 | \tinit(0);\n          1498 | \t(*this)<<short(0);\n          1499 | \t\u00fc\n          1500 |\n          1501 | sLLTag::sLLTag(short c)\n          1502 | #ifdef CALL_TAG\n          1503 | :sLL(sLLt2,sLLoutputVar,TagCatalog\u00c4c\u00dc->maxlength+5)\n          1504 | #endif\n          1505 | \t\u00e4\n          1506 | \tinit(c);\n          1507 | \t(*this)<<c;\n          1508 | \t\u00fc\n          1509 |\n          1510 | sLLTag::sLLTag(char * s):sLL(s)\n          1511 | \t\u00e4\n          1512 | \t(*this)>>code;\n          1513 | \tinit(code);\n          1514 | \t\u00fc\n          1515 |\n          1516 | sLLTag::sLLTag(const sLLTag & s):sLL(s)\n          1517 | \t\u00e4\n          1518 | \tcode = s.code;\n          1519 | \tname = s.name;\n          1520 | \tsearchcode = s.searchcode;\n          1521 | \t\u00fc\n          1522 |\n          1523 | sLLTag::sLLTag(sLL * b,char  * s):sLL(b,s,sLLt2)\n          1524 | \t\u00e4\n          1525 | \t(*this)>>code;\n          1526 | \tinit(code);\n          1527 | \t\u00fc\n          1528 |\n          1529 | sLLTag& sLLTag::operator=(sLLTag&  from)\n          1530 | \t\u00e4\n          1531 |\n          1532 | \tif ( &from == this ) return *this;\n          1533 | \tthis->sLL::operator=(from);\n          1534 | \tcode   = from.code;\n          1535 | \tname   = from.name;\n          1536 | \tsearchcode = from.searchcode;\n          1537 | \treturn *this;\n          1538 | \t\u00fc\n          1539 |\n          1540 | sLLTag * sLLTag::search(short c)\n          1541 | \t\u00e4\n          1542 | \tsLLTag * s ;\n          1543 | \tsetUsage(sLLinput);\n          1544 | \tif ( c )\n          1545 | \t\t\u00e4\n          1546 | \t\tsearchcode = c;\n          1547 | \t\tresetCursor();\n          1548 | \t\ts = iterate();\n          1549 | \t\t\u00fc\n          1550 | \telse s = next();\n          1551 | \twhile( s && searchcode NEQ s->getCode() )\n          1552 | \t\t\u00e4\n          1553 | \t\ts = next();\n          1554 | \t\t\u00fc\n          1555 |\n          1556 | \tstatus = sLLOk;\n          1557 | \tclearerror();\n          1558 | \treturn (s);\n          1559 | \t\u00fc\n          1560 |\n          1561 | sLLTag * sLLTag::update(sLLTag & f )\n          1562 | \t\u00e4\n          1563 |\n          1564 | \tsLLTag * s = search(f.code);\n          1565 | \tif ( s )\n          1566 | \t\t\u00e4\n          1567 | \t\tremove(*s);\n          1568 | \t\t\u00fc\n          1569 | \t(*this)<<f;\n          1570 | \treturn s;\n          1571 | \t\u00fc\n          1572 |\n          1573 | void sLLTag::resetCursor()\n          1574 | \t\u00e4\n          1575 | \tsLL::resetCursor();\n          1576 | \tgoCursor(sizeof(short));\n          1577 | \t\u00fc\n          1578 |\n          1579 |\n          1580 | void sLLTag::remove(sLLTag& o)\n          1581 | \t\u00e4\n          1582 |\n          1583 | \tsLLTag s(code);\n          1584 | \tresetCursor();\n          1585 | \tsLLTag * si = iterate();\n          1586 | \twhile ( si )\n          1587 | \t\t\u00e4\n          1588 | \t\tif ( si->getStart() NEQ o.getStart() )\n          1589 | \t\t\ts<<(*si);\n          1590 | \t\tsi = next();\n          1591 | \t\t\u00fc\n          1592 | \t*this = s;\n          1593 | \t\u00fc\n          1594 |\n          1595 |\n          1596 | sLLTag *sLLTag::iterate()\n          1597 | \t\u00e4\n          1598 |\n          1599 | \tchild = new sLLTag(this,cursor);\n          1600 | \tif (child->iserror()) return NULL;\n          1601 | \t//child->dump(__FILE__,__LINE__);\n          1602 | \treturn ((sLLTag *)child);\n          1603 | \t\u00fc\n          1604 |\n          1605 | //\n          1606 | // Get back the next child\n          1607 | //\n          1608 |\n          1609 | sLLTag * sLLTag::next()\n          1610 | \t\u00e4\n          1611 |\n          1612 | \tif ( child == 0 ]] iserror() )\n          1613 | \t\treturn (sLLTag *)0;\n          1614 | \tint l  = child->getFullLength();\n          1615 | \tdelete child;\n          1616 |\n          1617 | \tif ( goCursor(l+type) )\n          1618 | \t\t\u00e4\n          1619 | \t\tcursor-=type;\n          1620 | \t\tchild = new sLLTag(this,cursor);\n          1621 | \t\t//child->dump(__FILE__,__LINE__);\n          1622 | \t\treturn ((sLLTag *)child);\n          1623 | \t\t\u00fc\n          1624 | \telse\n          1625 | \t\t\u00e4\n          1626 | \t\tchild = 0;\n          1627 | \t\treturn NULL;\n          1628 | \t\t\u00fc\n          1629 | \t\u00fc\n          1630 |\n          1631 | void sLLTag::dump(const char *f,int ln)\n          1632 | \t\u00e4\n          1633 | #if 0\n          1634 | \tchar b\u00c41024\u00dc;\n          1635 | \tsprintf(b,\" File:%s Line:%d Name:%s Code:%d \u00d6n\",f,ln,name,code);\n          1636 | \tputs(b);\n          1637 | \tsLL::dump(\"\",0);\n          1638 | #endif\n          1639 | \t\u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSBASE)'                      07.01.13 11:00:04\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTEXP.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTEXP.HPP(MVSBASE)'\n    10  =  //'ESA.PRJ.CBTEXP.HPP(MERROR)'\n    11  =  //'ESA.PRJ.CBTEXP.HPP(DSNAMEUT)'\n    12  =  //'CEE.SCEEH.H(ASSERT)'\n    13  =  //'CEE.SCEEH.H(STDIO)'\n    14  =  //'ESA.PRJ.CBTEXP.HPP(MISC)'\n    15  =  //'CEE.SCEEH.H(TIME)'\n    16  =  //'CEE.SCEEH.H(ASSERT)'\n    17  =  //'CEE.SCEEH.H(CTYPE)'\n    18  =  //'CEE.SCEEH.H(NEW)'\n    19  =  //'CEE.SCEEH(NEW)'\n    20  =  //'CEE.SCEEH(EXCEPTIO)'\n    21  =  //'CEE.SCEEH(XSTDDEF)'\n    22  =  //'CEE.SCEEH.H(YVALS)'\n    23  =  //'CEE.SCEEH(CSTDDEF)'\n    24  =  //'ESA.PRJ.CBTEXP.HPP(IBMDEBUG)'\n    25  =  //'CEE.SCEEH.H(CTEST)'\n-\n0                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSBASE)'                      07.01.13 11:00:04\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSTOOL": {"ttr": 885, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'                      07.01.13 11:01:28\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH\n                                  :DLL(NOCALLBACKANY)              ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH\n                                  :NOEXPMAC        NOEXPORTALL     NOFASTTEMPINC   FLAG(I)         GOFF            GONUMBER\n                                  :HALT(16)        NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32\n                                  :NOINITAUTO      NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP\n                                  :NOMARGINS       MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)\n                                  :OBJECT          OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)\n                                  :PLIST(HOST)     NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT\n                                  :ROSTRING        ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS\n                                  :SOURCE          SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              NOTEMPLATEREGISTRY\n                                  :TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)      TMPLPARSE(NO)   TUNE(7)\n                                  :UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64        NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :CSECT()\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1,\n                                   MU_STANDALONE=1,SAPI_NO=1,VSAM_NO=1)\n                                  :FLOAT(HEX,FOLD,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__)\n                                  :NOKEYWORD(char16_t,char32_t,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NODBCS,NODECLTYPE,NODELEGATINGCTORS,DEPENDENTBASELOOKUP,\n                                   NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,EXTERNTEMPLATE,ILLPTOM,\n                                   IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,NOOLDDIGRAPH,OLDFRIEND,\n                                   NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,TRAILENUM,TYPEDEFCLASS,\n                                   NOUCS,VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :XPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(NOSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410C0000\n                                  : __LIBREL__=0x410C0000\n                                  : __TARGET_LIB__=0x410C0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'                      07.01.13 11:01:28\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #pragma runopts(POSIX(ON),XPLINK(ON),ALL31(ON))\n             2 | #define _OPEN_SYS_EXT 1\n             3 | #define _OPEN_SOURCE 1\n             4 | #define ISIS_ALLOW_OS_FUNCTIONS 1\n             5 | #include \"isisdef.h\"\n             6 | #define _OPEN_SYS_EXT 1\n             7 | #define _OPEN_SOURCE 1\n             8 | #define _ISOC99_SOURCE\n             9 | #include \"mvstool.hpp\"\n            10 |\n            11 | char * strupr(char *s)\n            12 | \u00e4\n            13 | \tif (NOT s) return (NULL);\n            14 | \tfor(int i = 0;i<strlen(s);i++) s\u00c4i\u00dc = toupper(s\u00c4i\u00dc);\n            15 | \treturn s;\n            16 | \u00fc\n            17 |\n            18 | int memcmpi(const char * s1,const char * s2,int l)\n            19 | \u00e4\n            20 | \tfor(int i = 0; i<l; i++)\n            21 | \t\tif ( tolower(s1\u00c4i\u00dc) - tolower(s2\u00c4i\u00dc) )\n            22 | \t\t\treturn (tolower(s1\u00c4i\u00dc) - tolower(s2\u00c4i\u00dc));\n            23 | \treturn 0;\n            24 | \u00fc\n            25 |\n            26 | char * makeString(char * s,int l)\n            27 | \u00e4\n            28 | \tchar * c = (char *)malloc(l+1);\n            29 | \tmemcpy(c,s,l);\n            30 | \tc\u00c4l\u00dc = 0;\n            31 | \tfor(l;l;l--)\n            32 | \t\tif ( c\u00c4l-1\u00dc NEQ ' ')  break;\n            33 | \tc\u00c4l\u00dc = null;\n            34 | \treturn c;\n            35 | \u00fc\n            36 |\n            37 | int initTestCases(char * n,testRoutine f)\n            38 | \u00e4\n            39 | \tif (testCasesIndex==0)\n            40 | \t\tmemset(&testCases,0,sizeof(testCases));\n            41 | \ttestCases\u00c4testCasesIndex\u00dc.name = n;\n            42 | \ttestCases\u00c4testCasesIndex++\u00dc.addr = f;\n            43 | \treturn testCasesIndex;\n            44 | \u00fc\n            45 |\n            46 | typedef struct smf14 * smf14P;\n            47 | typedef struct smf30cas * smf30casP;\n            48 | typedef struct smf30id  * smf30idP;\n            49 | typedef struct smf30sap * smf30sapP;\n            50 | typedef struct smf30cmp * smf30cmpP;\n            51 | typedef struct smf30mse * smf30mseP;\n            52 | typedef struct smf30ud  * smf30udP;\n            53 | typedef struct smf30acs * smf30acsP;\n            54 | typedef struct smf30dr  * smf30drP;\n            55 | typedef struct smf30op  * smf30opP;\n            56 | typedef struct smf30ura * smf30uraP;\n            57 | typedef struct smf30ar  * smf30arP;\n            58 | typedef struct smf30exp * smf30expP;\n            59 | typedef struct smf30ops * smf30opsP;\n            60 | typedef struct smf30rm  * smf30rmP;\n            61 | typedef struct smf30prf * smf30prfP;\n            62 | typedef struct smfrcd30 * smfrcd30P;\n            63 | typedef struct smfrcd92 * smfrcd92P;\n            64 | typedef struct smf92fcl * smf92fclP;\n            65 | typedef struct smf92fop * smf92fopP;\n            66 | typedef struct smf92fsm * smf92fsmP;\n            67 | typedef struct smf92fsp * smf92fspP;\n            68 | typedef struct smf92fsr * smf92fsrP;\n            69 | typedef struct smf92fsu * smf92fsuP;\n            70 | typedef struct smf92fsv * smf92fsvP;\n            71 | typedef struct smf92id  * smf92idP;\n            72 | typedef struct smf92mmp * smf92mmpP;\n            73 | typedef struct smf92mun * smf92munP;\n            74 | typedef struct smf92sss * smf92sssP;\n            75 |\n            76 |\n            77 | const int     SMF_MAXBUFFER = 1024*1024;\n            78 | const char * SMF_FILE = \"//DD:SMF\";\n            79 | #define FT_DIR        1  //Directory File\n            80 | #define FT_CHARSPEC   2      //Character Special File\n            81 | #define FT_REGFILE    3      //Regular File\n            82 | #define FT_FIFO       4      //Named Pipe (FIFO) File\n            83 | #define FT_SYMLINK    5      //Symbolic link\n            84 | #define FT_SOCKET     7      //Socket File                  \u00baD2A\n            85 |\n            86 | #define sF(d,v) printf(\" %s:%#10.4f(sec)\u00d6n\",#d,float(p->v)/100);\n            87 | #define sI(d,v) printf(\" %s:%d\u00d6n\",#d,p->v);\n            88 |\n            89 | long long totalCPUsu = 0;\n            90 | long long indepCPUsu = 0;\n            91 |\n            92 | static int rst_14 = 0;\n            93 | static int rst_15 = 0;\n            94 | static int rst_30 = 0;\n            95 | static int rsd_14 = 0;\n            96 | static int rsd_15 = 0;\n            97 | static int rsd_30 = 0;\n            98 | static bool debugF = atoi(getenv(\"DEBUG_SMF\"));\n            99 | typedef struct\n           100 | \u00e4\n           101 | \tshort int     _smf14esl;     /* LENGTH OF SECTION IN EXTENDED INFORMATION @L1A */\n           102 | \tchar          _filler4;      /* RESERVED                                  @L1A */\n           103 | \tchar          _smf14sty;     /* SECTION TYPE                              @L1A */\n           104 | \tunsigned char _smf14xf1;     /* EXTENDED SEGMENT INDICATOR FLAG BYTE 1    @L1A */\n           105 | \tunsigned char _smf14xf2;     /* EXTENDED SEGMENT INDICATOR FLAG BYTE 2    @L1A */\n           106 | \tunsigned char _smf14cdl\u00c48\u00dc;  /* NUMBER OF BYTES OF COMPRESSED DATA READ   @L1A */\n           107 | \tunsigned char _smf14udl\u00c48\u00dc;  /* NUMBER OF BYTES OF DATA READ OR WRITTEN   @L1A */\n           108 | \tunsigned char _smf14cds\u00c48\u00dc;  /* COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C */\n           109 | \tunsigned char _smf14uds\u00c48\u00dc;  /* COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C */\n           110 | \tunsigned char _smf14cis\u00c44\u00dc;  /* PHYSICAL BLOCK SIZE OF COMPRESSED FORMAT  @02C */\n           111 | \tshort int     _smf14tkl;     /* DICTIONARY TOKEN LENGTH(NOT INCLUDING     @L1A */\n           112 | \tunsigned char _smf14tkn\u00c436\u00dc; /* DICTIONARY TOKEN FOR COMPRESSED FORMAT    @02C */\n           113 | \tunsigned char _filler5\u00c453\u00dc;\n           114 | \u00fc\n           115 | * smf14EISP;\n           116 |\n           117 | typedef struct\n           118 | \u00e4\n           119 | \tunsigned char _filler8\u00c44\u00dc;\n           120 | \tunsigned char _smf14spn\u00c48\u00dc;   /* STEP NAME                                 @L2A */\n           121 | \tunsigned char _smf14pgn\u00c48\u00dc;   /* ACTIVE PROGRAM NAME                       @L2A */\n           122 | \tunsigned char _filler9\u00c4113\u00dc;\n           123 | \u00fc\n           124 | * smf14STEP;\n           125 | char pstepname\u00c49\u00dc;\n           126 | char pprogname\u00c4256\u00dc;\n           127 | char stepname\u00c49\u00dc;\n           128 | int write_30 = 0;\n           129 | char jobname\u00c49\u00dc;\n           130 | char jobid\u00c49\u00dc = \"\";\n           131 | char username\u00c4128\u00dc;\n           132 | static int counters\u00c4256\u00dc;\n           133 | static int total_read = 0;\n           134 | static int total_write = 0;\n           135 | static int total_dir = 0;\n           136 | int printSMF(char * b,bool & idflag,size_t rl,int need30 = 1, int  need92 = 1)\n           137 | \u00e4\n           138 | \t//printf(\" LRECL:%5.5d %8.8x %8.8x %8.8x %8.8x \u00d6n\",l,*(int *)b,*(int *)(b+4),*(int *)(b+8),*(int *)\n           138 | (b+12));\n           139 | \tcounters\u00c4smfrcd30P(b)->smf30rty\u00dc++;\n           140 | \tswitch(smfrcd30P(b)->smf30rty)\n           141 | \t\u00e4\n           142 | \tcase 2:\n           143 | \t\t//printf(\" >>>start of dump>>>\u00d6n\");\n           144 | \t\tbreak;\n           145 | \tcase 3:\n           146 | \t\t//printf(\" >>>end of dump>>>\u00d6n\");\n           147 | \t\tbreak;\n           148 | \tcase 14:\n           149 | \tcase 15:\n           150 | \t\t\u00e4\n           151 | \t\t\tchar progname\u00c4256\u00dc;\n           152 | \t\t\tsmf14P smf14p = (smf14P)b;\n           153 | \t\t\tint sdc = smf14p->smf14sdc; //size of DCB segment\n           154 | \t\t\tint nuc = smf14p->smf14nuc; //no. of UCB sections\n           155 | \t\t\tint suc = smf14p->smf14suc; //size of each of UCB sections\n           156 | \t\t\tint excp = 0;\n           157 | \t\t\tmemcpy(&rst_15,smf14p->smf14rst,4);\n           158 | \t\t\tmemcpy(&rsd_15,smf14p->smf14rsd,4);\n           159 | \t\t\tif (rst_30 |= rst_15 ]] rsd_30 |= rsd_15 ]] memcmp(jobname,smf14p->smf14jbn,8))\n           160 | \t\t\t\tbreak;\n           161 | \t\t\tif (nuc > 0)\n           162 | \t\t\t\texcp = *(int*)smf14p->smfexcp;\n           163 | \t\t\tif (excp == 0)\n           164 | \t\t\t\tbreak;\n           165 | \t\t\tif (debugF)\n           166 | \t\t\t\t_dump(\" SMF 14 or 15 record dump\",b,rl);\n           167 | \t\t\t\u00e4\n           168 | \t\t\t\tunsigned char* dcbp = smf14p->smfdcbor; //DCB Section\n           169 | \t\t\t\tunsigned char* ucbp = smf14p->smfdcbor + sdc; //UCB Section\n           170 | \t\t\t\tunsigned char* eis1 = ucbp + nuc*suc; //Extended Information Section\n           171 | \t\t\t\tunsigned char* eisp = ucbp + nuc*suc;\n           172 | \t\t\t\tshort int smf14esll = ((smf14EISP)eisp)->_smf14esl-2; //length of all Extended Information Secti\n           172 | ons\n           173 | \t\t\t\tunsigned char* eispr = eisp + 2;\n           174 | \t\t\t\tshort int eispl = 1; //length of next Extended Information Section\n           175 | \t\t\t\tint write_14_15 = 0; //=0 do not write line\n           176 | \t\t\t\tchar stepname_14\u00c49\u00dc;\n           177 | \t\t\t\tchar progname_14\u00c49\u00dc;\n           178 | \t\t\t\twhile (smf14esll > 0 && eispl > 0)\n           179 | \t\t\t\t\u00e4\n           180 | \t\t\t\t\teispl = ((smf14EISP)eispr)->_smf14esl; //length of next Extended Information Section\n           181 | \t\t\t\t\tchar sty = ((smf14EISP)eispr)->_smf14sty; //Section type\n           182 | \t\t\t\t\tswitch(sty)\n           183 | \t\t\t\t\t\u00e4\n           184 | \t\t\t\t\tcase smf14stp:\n           185 | \t\t\t\t\t\tstrncpy(stepname_14,(char*)((smf14STEP)eispr)->_smf14spn,8);\n           186 | \t\t\t\t\t\tstrncpy(progname_14,(char*)((smf14STEP)eispr)->_smf14pgn,8);\n           187 | \t\t\t\t\t\tstepname_14\u00c48\u00dc = 0;\n           188 | \t\t\t\t\t\tprogname_14\u00c48\u00dc = 0;\n           189 | \t\t\t\t\t\tif (*pstepname == 0 && *pprogname == 0)\n           190 | \t\t\t\t\t\t\twrite_14_15 = 1;\n           191 | \t\t\t\t\t\telse if (*pstepname && |strcasecmp(stepname_14,pstepname))\n           192 | \t\t\t\t\t\t\twrite_14_15 = 1;\n           193 | \t\t\t\t\t\telse if (*pprogname && |strcasecmp(progname_14,pprogname))\n           194 | \t\t\t\t\t\t\twrite_14_15 = 1;\n           195 | \t\t\t\t\t\tbreak;\n           196 | \t\t\t\t\tdefault:\n           197 | \t\t\t\t\t\tbreak;\n           198 | \t\t\t\t\t\u00fc\n           199 | \t\t\t\t\tsmf14esll -= eispl;\n           200 | \t\t\t\t\teispr += eispl;\n           201 | \t\t\t\t\t//printf(\"smf14p=%p ucbp=%p eispr=%p eisp=%p smf14esll=%d\u00d6n\",smf14p,ucbp,eispr,eisp,smf14esll);\n           202 | \t\t\t\t\u00fc\n           203 | \t\t\t\tif (write_14_15)\n           204 | \t\t\t\t\u00e4\n           205 | \t\t\t\t\tchar dsname\u00c445\u00dc;\n           206 | \t\t\t\t\twrite_30 = 1; //write step sum\n           207 | \t\t\t\t\t/*\n           208 | \t\t\t\t\tif (*stepname == 0)\n           209 | \t\t\t\t\t\u00e4\n           210 | \t\t\t\t\tstrcpy(stepname,stepname_14);\n           211 | \t\t\t\t\tstrcpy(progname,progname_14);\n           212 | \t\t\t\t\tprintf(\" === Start stepname:'%s' progname:'%s' ===\u00d6n\",stepname,progname);\n           213 | \t\t\t\t\t\u00fc\n           214 | \t\t\t\t\t*/\n           215 | \t\t\t\t\tstrncpy(dsname,(const char*)smf14p->smfjfcb1,44);\n           216 | \t\t\t\t\tdsname\u00c444\u00dc = 0;\n           217 | \t\t\t\t\tprintf(\"%8.8s %s' excp=%8d \",smf14p->smftioe5,dsname,excp);\n           218 | \t\t\t\t\tif (smfrcd30P(b)->smf30rty == 14)\n           219 | \t\t\t\t\t\tprintf(\"input \");\n           220 | \t\t\t\t\telse\n           221 | \t\t\t\t\t\tprintf(\"output \");\n           222 | \t\t\t\t\tif (smf14p->smf14rin\u00c40\u00dc & (unsigned char)smf14dad)\n           223 | \t\t\t\t\t\tprintf(\"DASD \");\n           224 | \t\t\t\t\tif (smf14p->smf14rin\u00c40\u00dc & (unsigned char)smf14tds)\n           225 | \t\t\t\t\t\tprintf(\"Temporary \");\n           226 | \t\t\t\t\tif (smf14p->smf14rin\u00c40\u00dc & (unsigned char)smf14vio)\n           227 | \t\t\t\t\t\tprintf(\"VIO \");\n           228 | \t\t\t\t\tprintf(\"\u00d6n\");\n           229 | \t\t\t\t\u00fc\n           230 | \t\t\t\u00fc\n           231 | \t\t\u00fc\n           232 | \t\tbreak;\n           233 | \tcase 30:\n           234 | \t\t// Identification section\n           235 |\n           236 | \t\t//if (*(short *)(smfrcd30P(b)->smf30stp)|=5)\n           237 | \t\t//  break;\n           238 | \t\tswitch (*(short *)(smfrcd30P(b)->smf30stp))\n           239 | \t\t\u00e4\n           240 | \t\tcase 1:\n           241 | \t\t\tif (argv\u00c41\u00dc&&memcmp(argv\u00c41\u00dc,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jnm,8)==0)\n           242 | \t\t\t\u00e4\n           243 | \t\t\t\tmemcpy(jobid,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jnm,8);\n           244 | \t\t\t\tjobid\u00c48\u00dc = 0;\n           245 | \t\t\t\tmemcpy(jobname,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jbn,8);\n           246 | \t\t\t\tjobname\u00c48\u00dc = 0;\n           247 | \t\t\t\tmemcpy(username,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30usr,8);\n           248 | \t\t\t\tusername\u00c48\u00dc = 0;\n           249 | \t\t\t\trst_30 = smf30idP(b+smfrcd30P(b)->smf30iof)->smf30rst;\n           250 | \t\t\t\tmemcpy(&rsd_30,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30rsd,4);\n           251 | \t\t\t\u00fc\n           252 | \t\t\telse\n           253 | \t\t\t\treturn 0;\n           254 | \t\t\tbreak;\n           255 | \t\tcase 2:\n           256 | \t\t\treturn 0;\n           257 | \t\t\tbreak;\n           258 | \t\tcase 3:\n           259 | \t\t\treturn 0;\n           260 | \t\t\tbreak;\n           261 | \t\tcase 4:\n           262 | \t\t\tbreak;\n           263 | \t\tcase 5:\n           264 | \t\t\tbreak;\n           265 | \t\tcase 6:\n           266 | \t\t\tbreak;\n           267 | \t\tdefault:\n           268 | \t\t\tbreak;\n           269 | \t\t\u00fc\n           270 | \t\tif (memcmp(argv\u00c41\u00dc,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jnm,8))\n           271 | \t\t\tbreak;\n           272 | \t\tswitch (*(short *)(smfrcd30P(b)->smf30stp))\n           273 | \t\t\u00e4\n           274 | \t\tcase 1:\n           275 | \t\t\tprintf(\" ============================== J O B S T A R T ===================\u00d6n\");\n           276 | \t\t\tbreak;\n           277 | \t\tcase 4:\n           278 | \t\t\tprintf(\" ========================= S T E P T O T A L ======================\u00d6n\");\n           279 | \t\t\tbreak;\n           280 | \t\tcase 5:\n           281 | \t\t\tprintf(\" ====================== J O B T E R M I N A T I O N  =============\u00d6n\");\n           282 | \t\t\tbreak;\n           283 | \t\tcase 6:\n           284 | \t\t\tprintf(\" ===========System address space=====================================\u00d6n\");\n           285 | \t\t\tbreak;\n           286 | \t\tdefault:\n           287 | \t\t\tbreak;\n           288 | \t\t\u00fc\n           289 | \t\tint rest , v , ss, mm, hh;\n           290 | \t\trest = (*(int *)smfrcd30P(b)->smf30tme)%100;\n           291 | \t\tv =  (*(int *)smfrcd30P(b)->smf30tme)/100;\n           292 | \t\tss = v%60;\n           293 | \t\tv /= 60;\n           294 | \t\tmm = v%60;\n           295 | \t\thh = v/60;\n           296 |\n           297 | \t\tif (*(short *)(smfrcd30P(b)->smf30ion)&&|idflag)\n           298 | \t\t\u00e4\n           299 | \t\t\tsmf30idP p = smf30idP(b+smfrcd30P(b)->smf30iof);\n           300 | \t\t\tif (debugF)\n           301 | \t\t\t\u00e4\n           302 | \t\t\t\t_dump(\" SMF 30 record dump\",b,rl);\n           303 | \t\t\t\tprintf(\" Subsystem     :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30son));\n           304 | \t\t\t\tprintf(\" Identification :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30ion));\n           305 | \t\t\t\tprintf(\" I/O Activity :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30uon));\n           306 | \t\t\t\tprintf(\" Completion :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30ton));\n           307 | \t\t\t\tprintf(\" Processor  :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30con));\n           308 | \t\t\t\tprintf(\" Accounting :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30aon));\n           309 | \t\t\t\tprintf(\" Storage    :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30ron));\n           310 | \t\t\t\tprintf(\" Performance :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30pon));\n           311 | \t\t\t\tprintf(\" Operator   :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30oon));\n           312 | \t\t\t\tprintf(\" EXCP       :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30eon));\n           313 | \t\t\t\tprintf(\" APPC       :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30drn));\n           314 | \t\t\t\tprintf(\" OMVS       :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30opn));\n           315 | \t\t\t\tprintf(\" Usage      :%d\u00d6n\",*(short *)(smfrcd30P(b)->smf30udn));\n           316 | \t\t\t\u00fc\n           317 | \t\t\tprintf(\" Job:%8.8s JobId:%8.8s Step:%8.8s User:%20.20s RacfGrp:%8.8s RacfUsr:%8.8s\u00d6n\",\n           318 | \t\t\t\tp->smf30jbn,jobid,p->smf30stm,p->smf30usr,p->smf30grp,p->smf30rud);\n           319 | \t\t\tprintf(\" Program:%8.8s\",p->smf30pgm);\n           320 | \t\t\tidflag = true;\n           321 | \t\t\u00fc\n           322 | \t\tprintf(\" Record Created at:%2.2d:%2.2d:%2.2d:%2.2d\u00d6n\",hh,mm,ss,rest);\n           323 | \t\t// I/O activity\n           324 | \t\tif (*(short *)(smfrcd30P(b)->smf30uon))\n           325 | \t\t\u00e4\n           326 | \t\t\tsmf30uraP p = smf30uraP(b+smfrcd30P(b)->smf30uof);\n           327 | \t\t\tprintf(\" Accumplated EXCP count:%8.8d\u00d6n\",\n           328 | \t\t\t\tp->smf30tep);\n           329 | \t\t\u00fc\n           330 | \t\t// Processor cumulative CPU\n           331 | \t\tif (*(short *)(smfrcd30P(b)->smf30con))\n           332 | \t\t\u00e4\n           333 | \t\t\tsmf30casP p = smf30casP(b+smfrcd30P(b)->smf30cof);\n           334 | \t\t\tprintf(\" Total CPU time:%#10.4f(sec) SRB time:%#10.4f(sec)\u00d6n\",\n           335 | \t\t\t\tfloat(p->smf30cpt)/100,float(p->smf30cps)/100);\n           336 | \t\t\t/*\n           337 | \t\t\tsF(process I/O interrupts,smf30iip)\n           338 | \t\t\tsF(client and preempt SRB,smf30asr)\n           339 | \t\t\tsF(independent enclave,smf30enc)\n           340 | \t\t\tsF(dependent enclave,smf30det)\n           341 | \t\t\t*/\n           342 | \t\t\u00fc\n           343 | \t\t// EXCP section\n           344 | \t\tif (*(short *)(smfrcd30P(b)->smf30eon))\n           345 | \t\t\u00e4\n           346 | \t\t\tsmf30expP p = smf30expP(b+smfrcd30P(b)->smf30eof);\n           347 | \t\t\tfor(int i=0;i<*(short*)smfrcd30P(b)->smf30eon;i++)\n           348 | \t\t\t\u00e4\n           349 | \t\t\t\tif (p->smf30blk)\n           350 | \t\t\t\t\tprintf(\" Device(CUA):%2.2X%2.2X EXCP count:%8.8d\u00d6n\",\n           351 | \t\t\t\t\tp->smf30cua\u00c40\u00dc,p->smf30cua\u00c41\u00dc,p->smf30blk);\n           352 | \t\t\t\tp = smf30expP((char *)p+*(short *)smfrcd30P(b)->smf30eln);\n           353 | \t\t\t\u00fc\n           354 | \t\t\u00fc\n           355 | \t\t// Storage\n           356 | \t\tif (*(short *)(smfrcd30P(b)->smf30ron))\n           357 | \t\t\u00e4\n           358 | \t\t\tsmf30sapP p = smf30sapP(b+smfrcd30P(b)->smf30rof);\n           359 | \t\t\tprintf(\" Max Region Size:%8.8d(Mbyte) Max Allocated Storage:%8.8d(Mbyte)\u00d6n\",\n           360 | \t\t\t\t(*(int *)p->smf30rgn)/1024,p->smf30eur/(1024*1024));\n           361 | \t\t\u00fc\n           362 |\n           363 | \t\t// Performance\n           364 | \t\tif (*(short *)(smfrcd30P(b)->smf30pon))\n           365 | \t\t\u00e4\n           366 | \t\t\tsmf30prfP p = smf30prfP(b+smfrcd30P(b)->smf30pof);\n           367 | \t\t\tprintf(\" Total Service units:%8.8d CPU:%8.8d SRB:%8.8d I/O:%8.8d\u00d6n\",\n           368 | \t\t\t\tp->smf30srv,p->smf30csu,p->smf30srb,p->smf30io);\n           369 | \t\t\ttotalCPUsu  += p->smf30csu;\n           370 | \t\t\tindepCPUsu += p->smf30esu;\n           371 | \t\t\t/*\n           372 | \t\t\tsI(Independent enclave tansaction active,smf30eta);\n           373 | \t\t\tsI(Independent enclave CPU service uints,smf30esu);\n           374 | \t\t\tsI(Independent enclave trasnsaction count,smf30etc);\n           375 | \t\t\t*/\n           376 | \t\t\u00fc\n           377 |\n           378 | \t\t// Operator\n           379 | \t\tif (*(short *)(smfrcd30P(b)->smf30oon))\n           380 | \t\t\u00e4\n           381 | \t\t\tsmf30opsP p = smf30opsP(b+smfrcd30P(b)->smf30oof);\n           382 | \t\t\tif (p->smf30pdm]]p->smf30prd)\n           383 | \t\t\t\tprintf(\" Non Specific mounts :%8.8d Specific mounts:%8.8d\u00d6n\",\n           384 | \t\t\t\tp->smf30pdm,p->smf30prd);\n           385 | \t\t\tif (p->smf30mtm]]p->smf30msr)\n           386 | \t\t\t\tprintf(\" SMS Non Specific mounts:%8.8d Specific mounts:%8.8d\u00d6n\",\n           387 | \t\t\t\tp->smf30mtm,p->smf30msr);\n           388 |\n           389 | \t\t\u00fc\n           390 | \t\t// Open Edition\n           391 | \t\tif (*(short *)smfrcd30P(b)->smf30opn)\n           392 | \t\t\u00e4\n           393 | \t\t\tsmf30opP p = smf30opP(b+*(int *)smfrcd30P(b)->smf30opo);\n           394 | \t\t\tfor(int i=0;i<*(short*)smfrcd30P(b)->smf30opn;i++)\n           395 | \t\t\t\u00e4\n           396 | \t\t\t\tprintf(\" Process:%d Process group:%d User:%d Group:%d Session:%d\u00d6n\",\n           397 | \t\t\t\t\tp->smf30opi,p->smf30opg,p->smf30oui,p->smf30oug,p->smf30osi);\n           398 | \t\t\t\tprintf(\" CPU:%#10.2f(sec) Kernel Calls:%d \u00d6n\",\n           399 | \t\t\t\t\tfloat(p->smf30ost)/100,p->smf30osc);\n           400 | \t\t\t\tprintf(\" Directory Reads:%8.8d\u00d6n\",p->smf30odr);\n           401 | \t\t\t\tprintf(\" Regular file   :%8.8d %8.8d\u00d6n\",p->smf30ofr,p->smf30ofw);\n           402 | \t\t\t\tprintf(\" Pipe       :%8.8d %8.8d\u00d6n\",p->smf30opr,p->smf30opw);\n           403 | \t\t\t\tprintf(\" Special file :%8.8d %8.8d\u00d6n\",p->smf30osr,p->smf30osw);\n           404 | \t\t\t\tprintf(\" Path lookup :%8.8d %8.8d\u00d6n\",p->smf30oll,p->smf30olp);\n           405 | \t\t\t\tprintf(\" Path generation:%8.8d %8.8d\u00d6n\",p->smf30ogl,p->smf30ogp);\n           406 | \t\t\t\tprintf(\" Socket     :%8.8d %8.8d\u00d6n\",p->smf30okr,p->smf30okw);\n           407 | \t\t\t\tprintf(\" Message queue :%8.8d %8.8d\u00d6n\",p->smf30oms,p->smf30omr);\n           408 | \t\t\t\tp = smf30opP((char *)p+*(short *)smfrcd30P(b)->smf30opl);\n           409 | \t\t\t\u00fc\n           410 | \t\t\tprintf(\" Total_read : %8.8d\u00d6n\",total_read);\n           411 | \t\t\tprintf(\" Total_write : %8.8d\u00d6n\",total_write);\n           412 | \t\t\tprintf(\" Total_dir : %8.8d\u00d6n\",total_dir);\n           413 |\n           414 | \t\t\ttotal_read = total_write = total_dir = 0;\n           415 | \t\t\u00fc\n           416 | \t\tprintf(\" ====================================================================\u00d6n\");\n           417 | \t\tif (*(short *)(smfrcd30P(b)->smf30stp)==5)\n           418 | \t\t\treturn 5;\n           419 | \t\tbreak;\n           420 |\n           421 | \t\tbreak;\n           422 | \tcase 42:\n           423 | \t\tif (smfrcd92P(b)->smf92stp==6)\n           424 | \t\t\u00e4\n           425 | \t\t\t_dump(\" SMF 42 record dump\",b,rl);\n           426 | \t\t\tbreak;\n           427 | \t\t\u00fc\n           428 | \tcase 92:\n           429 | \t\tif (smfrcd92P(b)->smf92stp==5)\n           430 | \t\t\u00e4\n           431 | \t\t\t_dump(\" SMF 92 record dump\",b,rl);\n           432 | \t\t\tbreak;\n           433 | \t\t\u00fc\n           434 |\n           435 | \t\tif (smfrcd92P(b)->smf92ion)\n           436 | \t\t\u00e4\n           437 |\n           438 | \t\t\tsmf92idP pid = smf92idP(b+smfrcd92P(b)->smf92iof);\n           439 | \t\t\tif (|need92]](pid->smf92rst-rst_30)]]memcmp(pid->smf92rsd,(char *)&rsd_30,4)\n           440 | \t\t\t\t]]memcmp(jobname,pid->smf92jbn,8))\n           441 | \t\t\t\tbreak;\n           442 | \t\t\t//if (|need92]](strlen(argv\u00c41\u00dc)&&memcmp(jobid,argv\u00c41\u00dc,strlen(argv\u00c41\u00dc))))\n           443 | \t\t\tif (debugF)\n           444 | \t\t\t\t_dump(\" SMF 92 record dump\",b,rl);\n           445 | \t\t\tint rest , v , ss, mm, hh;\n           446 | \t\t\trest = smfrcd92P(b)->smf92tme%100;\n           447 | \t\t\tv = smfrcd92P(b)->smf92tme/100;\n           448 | \t\t\tss = v%60;\n           449 | \t\t\tv /= 60;\n           450 | \t\t\tmm = v%60;\n           451 | \t\t\thh = v/60;\n           452 | \t\t\tswitch (smfrcd92P(b)->smf92stp)\n           453 | \t\t\t\u00e4\n           454 | \t\t\tcase 11:\n           455 | \t\t\t\tif (smfrcd92P(b)->smf92don&&smfrcd92P(b)->smf92dln&&smfrcd92P(b)->smf92dof)\n           456 | \t\t\t\t\u00e4\n           457 | \t\t\t\t\tsmf92fclP p = smf92fclP(b+smfrcd92P(b)->smf92dof);\n           458 | \t\t\t\t\tfor(int i=0;i<smfrcd92P(b)->smf92don;i++)\n           459 | \t\t\t\t\t\u00e4\n           460 | \t\t\t\t\t\tchar name\u00c465\u00dc;\n           461 | \t\t\t\t\t\tname\u00c464\u00dc=0;\n           462 | \t\t\t\t\t\tif (p->smf92cty==FT_SOCKET)\n           463 | \t\t\t\t\t\t\tsprintf(name,\" SOCKET inode:%d device:%d\",p->smf92cin,p->smf92cdn);\n           464 | \t\t\t\t\t\telse\n           465 | \t\t\t\t\t\t\tmemcpy(name,p->smf92cpn,sizeof(p->smf92cpn));\n           466 | \t\t\t\t\t\t/*\n           467 | \t\t\t\t\t\tprintf(\" Job:%8.8s at:%2.2d:%2.2d:%2.2d:%2.2d closing:%s\u00d6n\",pid->smf92jbn,hh,mm,ss,rest,name);\n           468 | \t\t\t\t\t\tprintf(\" Process:%d User:%d Group:%d\u00d6n\",\n           469 | \t\t\t\t\t\tpid->smf92pid,pid->smf92uid,pid->smf92gid);\n           470 |\n           471 | \t\t\t\t\t\tif (p->smf92cdi)\n           472 | \t\t\t\t\t\tprintf(\" Directory I/O blocks :%8.8d\u00d6n\",p->smf92cdi);\n           473 | \t\t\t\t\t\tif (p->smf92cir]]p->smf92csr)\n           474 | \t\t\t\t\t\tprintf(\" I/O blocks read :%8.8d read calls :%d\u00d6n\",\n           475 | \t\t\t\t\t\tp->smf92cir,p->smf92csr);\n           476 | \t\t\t\t\t\tif (p->smf92ciw]]p->smf92csw)\n           477 | \t\t\t\t\t\tprintf(\" I/O blocks write :%8.8d write calls:%d\u00d6n\",\n           478 | \t\t\t\t\t\tp->smf92ciw,p->smf92csw);\n           479 | \t\t\t\t\t\t*/\n           480 | \t\t\t\t\t\tprintf(\"'%s' r:%8.8d w:%8.8d d:%8.8d pid:%d\u00d6n\",name,p->smf92cir,p->smf92ciw,p->smf92cdi,pid->s\n           480 | mf92pid);\n           481 | \t\t\t\t\t\ttotal_read +=p->smf92cir;\n           482 | \t\t\t\t\t\ttotal_write += p->smf92ciw;\n           483 | \t\t\t\t\t\ttotal_dir += p->smf92cdi;\n           484 | \t\t\t\t\t\tp = smf92fclP((char *)p+smfrcd92P(b)->smf92dln);\n           485 | \t\t\t\t\t\u00fc\n           486 | \t\t\t\t\u00fc\n           487 | \t\t\tcase 13:\n           488 | \t\t\t\t//if (*(short *)smfrcd92P(b)->smf92don)\n           489 | \t\t\t\tif (0)\n           490 | \t\t\t\t\u00e4\n           491 | \t\t\t\t\tsmf92munP p = smf92munP(b+smfrcd92P(b)->smf92dof);\n           492 | \t\t\t\t\tfor(int i=0;i<*(short*)smfrcd92P(b)->smf92don;i++)\n           493 | \t\t\t\t\t\u00e4\n           494 | \t\t\t\t\t\tif (p->smf92mutk)\n           495 | \t\t\t\t\t\t\tprintf(\" Memory map token:%8.8d size:%8.8d read:%8.8d write:%8.8d (I/O blocks)\u00d6n\",\n           496 | \t\t\t\t\t\t\tp->smf92mutk,p->smf92musz,p->smf92muir,p->smf92muiw);\n           497 | \t\t\t\t\t\tp = smf92munP((char *)p+smfrcd92P(b)->smf92dln);\n           498 | \t\t\t\t\t\u00fc\n           499 | \t\t\t\t\u00fc\n           500 | \t\t\tdefault:\n           501 | \t\t\t\tbreak;\n           502 | \t\t\t\u00fc\n           503 | \t\t\u00fc\n           504 | \t\tbreak;\n           505 | \tdefault:\n           506 | \t\t//  printf(\" invalid type\u00d6n\");\n           507 | \t\tbreak;\n           508 | \t\u00fc\n           509 | \treturn 0;\n           510 | \u00fc\n           511 |\n           512 | static time_t set_epoch()\n           513 | \u00e4\n           514 | \tunsigned long long t19720101 = (0x8126D60E46000000LL>>12)/1000000;\n           515 | \tstruct tm _tm;\n           516 | \tmemset(&_tm,0,sizeof(_tm));\n           517 | \t_tm.tm_year = 72;\n           518 | \t_tm.tm_isdst = 0;\n           519 | \t_tm.tm_mday = 0;\n           520 | \ttime_t r = mktime(&_tm);\n           521 | \tr = 63072000;\n           522 | \t//printf(\"epoch:%u r:%u diff:%u\u00d6n\",(unsigned long)t19720101,r,(unsigned long )(t19720101-r));\n           523 | \treturn (t19720101-r);\n           524 | \u00fc\n           525 |\n           526 | const  time_t epoch = set_epoch();\n           527 |\n           528 |\n           529 | char * formatTime(pULL tod)\n           530 | \u00e4\n           531 | \tstatic char w\u00c4128\u00dc;\n           532 | \tunsigned long t, rest, v, ss, mm, hh;\n           533 | \tULL tt = (*tod>>12)/1000;\n           534 | \tt =tt%(1000*60*60*24);\n           535 | \trest = t%1000;\n           536 | \tv = t/1000;\n           537 | \tss =  v%60;\n           538 | \tv /= 60;\n           539 | \tmm =  v%60;\n           540 | \thh =  v/60;\n           541 | \tsprintf(w,\"%2.2d:%2.2d:%2.2d.%3.3d\",hh,mm,ss,rest);\n           542 | \treturn w;\n           543 | \u00fc\n           544 |\n           545 |\n           546 |\n           547 | char * var(char * v0,int i0,char * v1 = NULL,int i1 = 0, char * v2 =NULL)\n           548 | \u00e4\n           549 | \tstatic char ret\u00c4256\u00dc;\n           550 | \tstrcpy(ret,v0);\n           551 | \tsprintf(ret+strlen(ret),\".%d\",i0);\n           552 | \tif (v1)\n           553 | \t\u00e4\n           554 | \t\tstrcat(ret,\".\");\n           555 | \t\tstrcat(ret,v1);\n           556 |\n           557 | \t\tif (v2)\n           558 | \t\t\u00e4\n           559 | \t\t\tsprintf(ret+strlen(ret),\".%d\",i1);\n           560 | \t\t\tstrcat(ret,\".\");\n           561 | \t\t\tstrcat(ret,v2);\n           562 | \t\t\u00fc\n           563 | \t\u00fc\n           564 | \treturn strupr(ret);\n           565 | \u00fc\n           566 |\n           567 | typedef struct dscb DSCB;\n           568 |\n           569 | struct ext\n           570 | \u00e4\n           571 | \tunsigned char flag ;\n           572 | \tunsigned char seq;\n           573 | \tshort        CC;\n           574 | \tshort        HH;\n           575 | \tshort        hCC;\n           576 | \tshort        hHH;\n           577 | \u00fc;\n           578 |\n           579 | typedef struct ext EXT;\n           580 |\n           581 | static char _date2Text\u00c480\u00dc;\n           582 |\n           583 | char * date2Text(unsigned int d)\n           584 | \u00e4\n           585 |\n           586 | \tint yy =d/0x10000;\n           587 | \tint tt =d%0x10000;\n           588 | \tint day\u00c4\u00dc = \u00e431,28,31,30,31,30,31,31,30,31,30,31\u00fc;\n           589 | \tif ( yy%4 == 0 )\n           590 | \t\tday\u00c41\u00dc = 29;\n           591 | \tint i = 0;\n           592 | \tfor(i;i<12;i++)\n           593 | \t\tif ((tt-day\u00c4i\u00dc)<0) break;\n           594 | \t\telse\n           595 | \t\t\ttt-=day\u00c4i\u00dc;\n           596 | \ti++;\n           597 | \tsprintf(_date2Text,\"%4.4d/%2.2d/%2.2d\",yy+1900,i,tt);\n           598 | \treturn _date2Text;\n           599 | \u00fc\n           600 |\n           601 | int allocated(EXT * e)\n           602 | \u00e4\n           603 | \tif (e->flag ==0 )\n           604 | \t\treturn 0;\n           605 | \telse\n           606 | \t\treturn((e->hCC*15+e->hHH)-(e->CC*15+e->HH)+1);\n           607 | \u00fc\n           608 |\n           609 | unsigned int bit24Int(char * c)\n           610 | \u00e4\n           611 | \treturn(*(unsigned int *)(c-1)&0x007FFFFF);\n           612 | \u00fc\n           613 |\n           614 | struct CatInfo\n           615 | \u00e4\n           616 | \tchar type;\n           617 | \tchar dsn\u00c444\u00dc;\n           618 | \tchar vol\u00c46\u00dc;\n           619 | \u00fc;\n           620 |\n           621 | typedef struct CatInfo CATINFO;\n           622 |\n           623 | struct ISPF_Stats\n           624 | \u00e4\n           625 | \tunsigned int ver:8;\n           626 | \tunsigned int mod:8;\n           627 | \tunsigned int flags:8;\n           628 | \tunsigned int mod_sec:8;\n           629 |\n           630 | \tunsigned int cr_date_rsv:8;\n           631 | \tunsigned int cr_date_y:8;\n           632 | \tunsigned int cr_date_d:12;\n           633 | \tunsigned int cr_date_f:4;\n           634 |\n           635 | \tunsigned int mod_date_rsv:8;\n           636 | \tunsigned int mod_date_y:8;\n           637 | \tunsigned int mod_date_d:12;\n           638 | \tunsigned int mod_date_f:4;\n           639 |\n           640 | \tunsigned int mod_hh:8;\n           641 | \tunsigned int mod_mm:8;\n           642 | \tshort lines;\n           643 |\n           644 | \tshort ilines;\n           645 | \tshort m_lines;\n           646 |\n           647 | \tchar user\u00c47\u00dc;\n           648 | \tchar rsvd\u00c43\u00dc;\n           649 | \u00fc;\n           650 |\n           651 | typedef struct ISPF_Stats ISPF;\n           652 |\n           653 | int _rexxlist()\n           654 | \u00e4\n           655 | \tchar mask\u00c445\u00dc;\n           656 | \tchar mmask\u00c49\u00dc;\n           657 | \tbool dir = false;\n           658 | \tbool migr = false;\n           659 | \tbool debug = false;\n           660 | \tbool exact = false;\n           661 | \tCATINFO catinfo;\n           662 |\n           663 | \tif (argc < 2 )\n           664 | \t\treturn -1;\n           665 | \tstrcpy(mask,strupr(argv\u00c41\u00dc));\n           666 | \tfor (int i =2;i<argc;i++)\n           667 | \t\u00e4\n           668 | \t\tif ( strcasecmp(argv\u00c4i\u00dc,\"DIR\")==0)\n           669 | \t\t\u00e4\n           670 | \t\t\tdir = true;\n           671 | \t\t\tif (i+1<argc)\n           672 | \t\t\t\tstrcpy(mmask,strupr(argv\u00c4++i\u00dc));\n           673 | \t\t\telse\n           674 | \t\t\t\tstrcpy(mmask,\"*\");\n           675 | \t\t\u00fc\n           676 | \t\telse\n           677 | \t\t\tif ( strcasecmp(argv\u00c4i\u00dc,\"EXACT\")==0)\n           678 | \t\t\t\u00e4\n           679 | \t\t\t\tdir = true;\n           680 | \t\t\t\texact = true;\n           681 | \t\t\t\tif (i+1<argc)\n           682 | \t\t\t\t\tstrcpy(mmask,strupr(argv\u00c4++i\u00dc));\n           683 | \t\t\t\telse\n           684 | \t\t\t\t\tstrcpy(mmask,\"*\");\n           685 | \t\t\t\u00fc\n           686 | \t\t\telse\n           687 | \t\t\t\tif (strcasecmp(argv\u00c4i\u00dc,\"MIGR\") == 0)\n           688 | \t\t\t\t\tmigr = true;\n           689 | \t\t\t\telse\n           690 | \t\t\t\t\tif (strcasecmp(argv\u00c4i\u00dc,\"DEBUG\") == 0)\n           691 | \t\t\t\t\t\tdebug = true;\n           692 |\n           693 | \t\u00fc\n           694 | \tREXXVAR rexx(debug);\n           695 | \tCmdService::debug = debug;\n           696 | \tif (debug)\n           697 | \t\tprintf(\" catalog:%s member:%s\u00d6n\",mask,mmask);\n           698 | \tDsnCmdService serv;\n           699 | \tint index = 0;\n           700 | \tint rc = serv.cmd(mask,(char *)&catinfo);\n           701 | \twhile(rc==1)\n           702 | \t\u00e4\n           703 | \t\tif (debug)\n           704 | \t\t\t_dump(\"catalog\",(char *)&catinfo,sizeof(catinfo));\n           705 | \t\tif ((catinfo.type == 'A' ]] catinfo.type == 'C'))\n           706 | \t\t\u00e4\n           707 | \t\t\tint online = memcmp(\"MIGRAT\",catinfo.vol,sizeof(catinfo.vol));\n           708 | \t\t\tindex++;\n           709 | \t\t\trexx.set(var(\"DS\",0),index);\n           710 | \t\t\trexx.set(var(\"DS\",index,\"dsn\"),catinfo.dsn,sizeof(catinfo.dsn));\n           711 | \t\t\trexx.set(var(\"DS\",index,\"vol\"),catinfo.vol,sizeof(catinfo.vol));\n           712 | \t\t\trexx.set(var(\"DS\",index,\"online\"),online);\n           713 | \t\t\trexx.set(var(\"DS\",index,\"member\"),0);\n           714 |\n           715 | \t\t\tif (online)\n           716 | \t\t\t\u00e4\n           717 | \t\t\t\tDSCB f1dscb;\n           718 | \t\t\t\tF3DSCB _f3dscb;\n           719 | \t\t\t\tmemset(&f1dscb,0,sizeof(f1dscb));\n           720 |\n           721 | \t\t\t\tmemcpy(f1dscb.ds1dsnam,(char *)catinfo.dsn,sizeof(catinfo.dsn));\n           722 | \t\t\t\tif (mvs()->Obtain((const char *)f1dscb.ds1dsnam,catinfo.vol,(char *)&f1dscb.ds1fmtid)==0)\n           723 | \t\t\t\t\u00e4\n           724 | \t\t\t\t\trexx.set(var(\"DS\",index,\"credt\"),date2Text(bit24Int((char *)f1dscb.ds1credt)));\n           725 | \t\t\t\t\trexx.set(var(\"DS\",index,\"expdt\"),date2Text(bit24Int((char *)f1dscb.ds1expdt)));\n           726 | \t\t\t\t\trexx.set(var(\"DS\",index,\"refdt\"),date2Text(bit24Int((char *)f1dscb.ds1refd)));\n           727 |\n           728 | \t\t\t\t\tif (f1dscb.ds1dsorg\u00c40\u00dc&ds1dsgps)\n           729 | \t\t\t\t\t\trexx.set(var(\"DS\",index,\"dsorg\"),\"PS\");\n           730 | \t\t\t\t\telse\n           731 | \t\t\t\t\t\tif (f1dscb.ds1dsorg\u00c40\u00dc&ds1dsgpo)\n           732 | \t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"dsorg\"),\"PO\");\n           733 | \t\t\t\t\t\telse\n           734 | \t\t\t\t\t\t\tif (f1dscb.ds1dsorg\u00c40\u00dc&ds1acbm)\n           735 | \t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"dsorg\"),\"VSAM\");\n           736 | \t\t\t\t\t\t\telse\n           737 | \t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"dsorg\"),\"????\");\n           738 | \t\t\t\t\tchar recfm\u00c4\u00dc = \" \";\n           739 | \t\t\t\t\tint ind = 0;\n           740 | \t\t\t\t\tif (f1dscb.ds1recfm==ds1recfu)\n           741 | \t\t\t\t\t\trecfm\u00c40\u00dc = 'U';\n           742 | \t\t\t\t\telse\n           743 | \t\t\t\t\t\u00e4\n           744 | \t\t\t\t\t\tif (f1dscb.ds1recfm&ds1recff)\n           745 | \t\t\t\t\t\t\trecfm\u00c40\u00dc = 'F';\n           746 | \t\t\t\t\t\telse\n           747 | \t\t\t\t\t\t\tif (f1dscb.ds1recfm&ds1recfv)\n           748 | \t\t\t\t\t\t\t\trecfm\u00c40\u00dc = 'V';\n           749 | \t\t\t\t\t\tif (f1dscb.ds1recfm&ds1recfb)\n           750 | \t\t\t\t\t\t\trecfm\u00c4++ind\u00dc = 'B';\n           751 | \t\t\t\t\t\tif (f1dscb.ds1recfm&ds1recfa)\n           752 | \t\t\t\t\t\t\trecfm\u00c4++ind\u00dc ='A';\n           753 | \t\t\t\t\t\telse\n           754 | \t\t\t\t\t\t\tif (f1dscb.ds1recfm&ds1recmc)\n           755 | \t\t\t\t\t\t\t\trecfm\u00c4++ind\u00dc ='M';\n           756 | \t\t\t\t\t\u00fc\n           757 | \t\t\t\t\trecfm\u00c4ind+1\u00dc = 0;\n           758 | \t\t\t\t\trexx.set(var(\"DS\",index,\"recfm\"),recfm);\n           759 | \t\t\t\t\trexx.set(var(\"DS\",index,\"blksize\"),int(*(short *)f1dscb.ds1blkl));\n           760 | \t\t\t\t\trexx.set(var(\"DS\",index,\"lrecl\"),int(*(short *)f1dscb.ds1lrecl));\n           761 | \t\t\t\t\tint alloc = allocated((EXT *)f1dscb.ds1ext1)+\n           762 | \t\t\t\t\t\tallocated((EXT *)f1dscb.ds1ext2)+\n           763 | \t\t\t\t\t\tallocated((EXT *)f1dscb.ds1ext3);\n           764 | \t\t\t\t\tmemcpy(_f3dscb.ds3ptrds,f1dscb.ds1ptrds,5);\n           765 | \t\t\t\t\tif (debug)\n           766 | \t\t\t\t\t\t_dump(\"F3DSCB addr\",(char *)&_f3dscb.ds3ptrds,5);\n           767 | \t\t\t\t\twhile (memcmp(_f3dscb.ds3ptrds,nulls,5)&&(mvs()->Obtain((const char *)_f3dscb.ds3ptrds,catinfo.\n           767 | vol,(char *)&_f3dscb)==0))\n           768 | \t\t\t\t\t\u00e4\n           769 | \t\t\t\t\t\tif (debug)\n           770 | \t\t\t\t\t\t\t_dump(\"F3DSCB\",(char *)&_f3dscb,sizeof(_f3dscb));\n           771 | \t\t\t\t\t\tEXT *  ext = (EXT * )&_f3dscb.ds3extnt;\n           772 | \t\t\t\t\t\tfor (int i =0;i<4;i++)\n           773 | \t\t\t\t\t\t\talloc+= allocated(ext+i);\n           774 | \t\t\t\t\t\text = (EXT * )&_f3dscb.ds3adext;\n           775 | \t\t\t\t\t\tfor (int i =0;i<9;i++)\n           776 | \t\t\t\t\t\t\talloc+= allocated(ext+i);\n           777 | \t\t\t\t\t\u00fc\n           778 | \t\t\t\t\trexx.set(var(\"DS\",index,\"alloc\"),alloc);\n           779 | \t\t\t\t\tif (dir&&(f1dscb.ds1dsorg\u00c40\u00dc&ds1dsgpo))\n           780 | \t\t\t\t\t\u00e4\n           781 | \t\t\t\t\t\tchar pattern\u00c4128\u00dc=\"//\";\n           782 | \t\t\t\t\t\tmemcpy(pattern+2,catinfo.dsn,sizeof(catinfo.dsn));\n           783 | \t\t\t\t\t\tpattern\u00c446\u00dc =0;\n           784 | \t\t\t\t\t\tif (strchr(pattern,' '))\n           785 | \t\t\t\t\t\t\t*strchr(pattern,' ') = 0;\n           786 |\n           787 | \t\t\t\t\t\tstrcat(pattern,\"(*)\");\n           788 | \t\t\t\t\t\t/*\n           789 | \t\t\t\t\t\tstrcat(pattern,\"(\");\n           790 | \t\t\t\t\t\tstrcat(pattern,mmask);\n           791 | \t\t\t\t\t\tstrcat(pattern,\")\");\n           792 | \t\t\t\t\t\t*/\n           793 | \t\t\t\t\t\tDSNINFO dsninfo;\n           794 | \t\t\t\t\t\tint mindex = 0;\n           795 | \t\t\t\t\t\tmemset(&dsninfo,0,sizeof(dsninfo));\n           796 | \t\t\t\t\t\tint rcd = osdfind(&dsninfo,pattern);\n           797 | \t\t\t\t\t\tif (debug)\n           798 | \t\t\t\t\t\t\u00e4\n           799 | \t\t\t\t\t\t\tprintf(\" osdfind:%s %d\u00d6n\",pattern,rcd);\n           800 | \t\t\t\t\t\t\t_dump(pattern,(char *)&dsninfo,sizeof(dsninfo));\n           801 | \t\t\t\t\t\t\u00fc\n           802 | \t\t\t\t\t\twhile(rcd>=0)\n           803 | \t\t\t\t\t\t\u00e4\n           804 | \t\t\t\t\t\t\tif ((|exact&&stcpma(dsninfo.mem,mmask))]](exact&&strcmp(dsninfo.mem,mmask)==0))\n           805 | \t\t\t\t\t\t\t\u00e4\n           806 | \t\t\t\t\t\t\t\tmindex++;\n           807 | \t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\"),mindex);\n           808 | \t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"name\"),dsninfo.mem);\n           809 | \t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"alias\"),dsninfo.alias);\n           810 |\n           811 | \t\t\t\t\t\t\t\tif (dsninfo.user_data_halfwords*2 == sizeof(ISPF))\n           812 | \t\t\t\t\t\t\t\t\u00e4\n           813 | \t\t\t\t\t\t\t\t\tISPF * ispf =(ISPF *)dsninfo.user_data;\n           814 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"size\"),ispf->lines);\n           815 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"user\"),ispf->user);\n           816 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"created\"),date2Text(cvb(ispf->cr_date_y,2)*0x10000\n           816 | +cvb(ispf->cr_date_d,3)));\n           817 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"modified\"),date2Text(cvb(ispf->mod_date_y,2)*0x100\n           817 | 00+cvb(ispf->mod_date_d,3)));\n           818 | \t\t\t\t\t\t\t\t\u00fc\n           819 | \t\t\t\t\t\t\t\telse\n           820 | \t\t\t\t\t\t\t\t\u00e4\n           821 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"size\"),\"\");\n           822 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"user\"),\"\");\n           823 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"created\"),\"\");\n           824 | \t\t\t\t\t\t\t\t\trexx.set(var(\"DS\",index,\"member\",mindex,\"modified\"),\"\");\n           825 | \t\t\t\t\t\t\t\t\u00fc\n           826 | \t\t\t\t\t\t\t\u00fc\n           827 | \t\t\t\t\t\t\trcd = osdnext(&dsninfo);\n           828 | \t\t\t\t\t\t\tif (debug)\n           829 | \t\t\t\t\t\t\t\u00e4\n           830 | \t\t\t\t\t\t\t\tprintf(\" osdnext:%s %d\u00d6n\",pattern,rcd);\n           831 | \t\t\t\t\t\t\t\t_dump(pattern,(char *)&dsninfo,sizeof(dsninfo));\n           832 | \t\t\t\t\t\t\t\u00fc\n           833 | \t\t\t\t\t\t\u00fc\n           834 | \t\t\t\t\t\tosdquit(&dsninfo);\n           835 | \t\t\t\t\t\u00fc\n           836 | \t\t\t\t\u00fc\n           837 | \t\t\t\telse\n           838 | \t\t\t\t\u00e4\n           839 | \t\t\t\t\trexx.set(var(\"DS\",index,\"credt\"),\"\");\n           840 | \t\t\t\t\trexx.set(var(\"DS\",index,\"expdt\"),\"\");\n           841 | \t\t\t\t\trexx.set(var(\"DS\",index,\"refdt\"),\"\");\n           842 | \t\t\t\t\trexx.set(var(\"DS\",index,\"dsorg\"),\"\");\n           843 | \t\t\t\t\trexx.set(var(\"DS\",index,\"recfm\"),\"\");\n           844 | \t\t\t\t\trexx.set(var(\"DS\",index,\"lrecl\"),\"\");\n           845 | \t\t\t\t\trexx.set(var(\"DS\",index,\"blksize\"),\"\");\n           846 | \t\t\t\t\trexx.set(var(\"DS\",index,\"alloc\"),\"\");\n           847 |\n           848 | \t\t\t\t\u00fc\n           849 | \t\t\t\u00fc\n           850 | \t\t\u00fc\n           851 | \t\trc = serv.cmd(NULL,(char *)&catinfo);\n           852 | \t\u00fc\n           853 | \u00fc\n ================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 853.1: CCN6101 (W) A return value of type \"int\" is expected.\n           854 |\n           855 | #define DEF_TAB_SIZE  128000\n           856 | class tablePull\n           857 | \u00e4\n           858 | private:\n           859 | \tchar tablename\u00c4256\u00dc;\n           860 | \tFILE * table;\n           861 | \tchar * t;\n           862 | \tchar * p ;\n           863 | \tsize_t rl;\n           864 | \tsize_t total ;\n           865 | \tsize_t offset;\n           866 | \tbool ok;\n           867 |\n           868 | public:\n           869 | \ttablePull(const char *n)\n           870 | \t\u00e4\n           871 | \t\tchar w\u00c4256\u00dc;\n           872 | \t\tok = false;\n           873 | \t\tstrcpy(tablename,n);\n           874 | \t\ttable = fopen(genOpenName(tablename,w),\"rb\");\n           875 | \t\tif (table==NULL)\n           876 | \t\t\u00e4\n           877 | \t\t\tprintf(\" unbale to open:%s\u00d6n\",tablename);\n           878 | \t\t\treturn ;\n           879 | \t\t\u00fc\n           880 | \t\tt  = (char *)malloc(DEF_TAB_SIZE);\n           881 | \t\tp = t;\n           882 | \t\ttotal = DEF_TAB_SIZE;\n           883 | \t\trl = total;\n           884 |\n           885 | \t\tif (t==NULL)\n           886 | \t\t\u00e4\n           887 | \t\t\tprintf(\" unbale to allocte:%s bytes\u00d6n\",total);\n           888 | \t\t\treturn ;\n           889 | \t\t\u00fc\n           890 | \t\tbool cont = true;\n           891 |\n           892 | \t\twhile(cont)\n           893 | \t\t\u00e4\n           894 | \t\t\tsize_t rlr =fread(p,1,rl,table);\n           895 | \t\t\tif (rlr>=0)\n           896 | \t\t\t\ttotal +=rlr;\n           897 | \t\t\tif (feof(table)]]rlr<rl)\n           898 | \t\t\t\tcont = false;\n           899 | \t\t\telse\n           900 | \t\t\t\u00e4\n           901 | \t\t\t\tt =(char *)realloc(t,total*2);\n           902 | \t\t\t\tp = t+rl;\n           903 | \t\t\t\trl = total;\n           904 | \t\t\t\ttotal*=2;\n           905 | \t\t\t\tif (t==NULL)\n           906 | \t\t\t\t\u00e4\n           907 | \t\t\t\t\tprintf(\" unbale to allocte:%s bytes\u00d6n\",total);\n           908 | \t\t\t\t\treturn ;\n           909 | \t\t\t\t\u00fc\n           910 | \t\t\t\u00fc\n           911 | \t\t\u00fc\n           912 | \t\tfclose(table);\n           913 | \t\toffset = 0;\n           914 | \t\tok = true;\n           915 | \t\tp = t;\n           916 | \t\u00fc\n           917 |\n           918 | \tunsigned short getShort()\n           919 | \t\u00e4\n           920 | \t\tif  ((total-offset)>sizeof(short))\n           921 | \t\t\u00e4\n           922 | \t\t\tunsigned short r = *(unsigned short *)p;\n           923 | \t\t\tp+=sizeof(short);\n           924 | \t\t\toffset-=sizeof(short);\n           925 | \t\t\treturn r;\n           926 | \t\t\u00fc\n           927 | \t\telse\n           928 | \t\t\treturn -1;\n           929 | \t\u00fc\n           930 |\n           931 | \tchar * getString(size_t l)\n           932 | \t\u00e4\n           933 | \t\tif  ((total-offset)>l)\n           934 | \t\t\u00e4\n           935 | \t\t\tchar * c = (char *)malloc(l+1);\n           936 | \t\t\tmemcpy(c,p,l);\n           937 | \t\t\tc\u00c4l\u00dc = 0;\n           938 | \t\t\tp+=l;\n           939 | \t\t\toffset-=l;\n           940 | \t\t\treturn c;\n           941 | \t\t\u00fc\n           942 | \t\telse\n           943 | \t\t\tabort();\n           944 | \t\treturn NULL;\n           945 | \t\u00fc\n           946 |\n           947 | \tbool isOk()\n           948 | \t\u00e4\n           949 | \t\treturn ok;\n           950 | \t\u00fc\n           951 | \u00fc;\n           952 |\n           953 | int _rexx4tab()\n           954 | \u00e4\n           955 | \tbool debug = false;\n           956 | \tfor (int i =3;i<argc;i++)\n           957 | \t\u00e4\n           958 | \t\tif (strcasecmp(argv\u00c4i\u00dc,\"DEBUG\") == 0)\n           959 | \t\t\tdebug = true;\n           960 |\n           961 | \t\u00fc\n           962 | \tREXXVAR rexx(debug);\n           963 | \tchar * variables\u00c4256\u00dc;\n           964 | \tchar  table\u00c49\u00dc;\n           965 | \tsize_t numrows = 0;\n           966 | \tmemset(&variables,0,sizeof(variables));\n           967 | \ttablePull pull(argc<2?\"//DD:TABLE\":argv\u00c41\u00dc);\n           968 | \t//tablePull pull(\"//esa.maint.isptlib(infocust)\");\n           969 |\n           970 | \tchar * tablename = (argc<3?\"TABLE\":argv\u00c42\u00dc);\n           971 | \tif (|pull.isOk())\n           972 | \t\treturn 8;\n           973 | \tchar * head =pull.getString(pull.getShort());\n           974 | \tmemcpy(table,head+10,8);\n           975 | \tnumrows = *(size_t *)(head+32);\n           976 | \tshort temp = pull.getShort();\n           977 | \tchar * cols = pull.getString(temp);\n           978 | \tsize_t numcols = temp/16;\n           979 | \trexx.set(var(tablename,0),numrows);\n           980 | \trexx.set(var(tablename,0,\"TABLE\"),table);\n           981 | \trexx.set(var(tablename,0,\"COLS\",0),numcols);\n           982 | \tfor (int o =0 , i=0;cols\u00c4o\u00dc;o+=16,i++)\n           983 | \t\u00e4\n           984 | \t\tvariables\u00c4i\u00dc =(char *) malloc(9);\n           985 | \t\tmemset(variables\u00c4i\u00dc,0,9);\n           986 | \t\tfor (int j=0;j<8&&(*(cols+o+2+j)-' ');j++)\n           987 | \t\t\t*(variables\u00c4i\u00dc+j) = *(cols+o+2+j);\n           988 | \t\trexx.set(var(tablename,0,\"COLS\",i+1,\"NAME\"),variables\u00c4i\u00dc);\n           989 | \t\u00fc\n           990 | \tshort rl = 0;\n           991 | \tsize_t rowindex = 0;\n           992 | \twhile((rl=pull.getShort()) >0&& rowindex<numrows)\n           993 | \t\u00e4\n           994 | \t\tchar * row = pull.getString(rl);\n           995 | \t\tshort numvar = *(short *)(row+4);\n           996 | \t\tfree(row);\n           997 | \t\tshort rowDataLength =pull.getShort();\n           998 | \t\tchar * rowdata =pull.getString(rowDataLength);\n           999 | \t\trowindex++;\n          1000 | \t\tfor(int i =0;i<numvar;i++)\n          1001 | \t\t\u00e4\n          1002 | \t\t\tshort offset = (*(short *)(rowdata+i*2))-22;\n          1003 | \t\t\tif (offset>0&&offset<rowDataLength)\n          1004 | \t\t\t\u00e4\n          1005 | \t\t\t\tshort length = *(short *)(rowdata+offset);\n          1006 | \t\t\t\tif (length > 0&& (offset+length)<rowDataLength)\n          1007 | \t\t\t\t\u00e4\n          1008 | \t\t\t\t\tchar * value =(char *)malloc(length+1);\n          1009 | \t\t\t\t\tmemcpy(value,rowdata+offset+2,length);\n          1010 | \t\t\t\t\tvalue\u00c4length\u00dc = 0;\n          1011 | \t\t\t\t\trexx.set(var(tablename,rowindex,variables\u00c4i\u00dc),value,length);\n          1012 | \t\t\t\t\tfree(value);\n          1013 | \t\t\t\t\u00fc\n          1014 | \t\t\t\telse\n          1015 | \t\t\t\t\trexx.set(var(tablename,rowindex,variables\u00c4i\u00dc),\"\");\n          1016 | \t\t\t\u00fc\n          1017 | \t\t\telse\n          1018 | \t\t\t\trexx.set(var(tablename,rowindex,variables\u00c4i\u00dc),\"\");\n          1019 |\n          1020 | \t\t\u00fc\n          1021 | \t\tfree(rowdata);\n          1022 | \t\tfree(row);\n          1023 | \t\u00fc\n          1024 | \u00fc\n ================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1024.1: CCN6101 (W) A return value of type \"int\" is expected.\n          1025 | int intDebug = 0;\n          1026 |\n          1027 | char * cmdnext(UssCmdService &cmd,char * w=NULL)\n          1028 | \u00e4\n          1029 | \tchar * c =cmd.next(w);\n          1030 | \t//  if (intDebug)\n          1031 | \t//  printf(\"%s\u00d6n\",c);\n          1032 | \treturn c;\n          1033 | \u00fc\n          1034 | _browselogger()\n          1035 | \u00e4\n          1036 | \tprintf(\" Browse %s loggerstream %s direction\u00d6n\",argv\u00c42\u00dc,(atoi(argv\u00c43\u00dc)==0?\"oldtoyoung\":\"youngtoold\"\n          1036 | ));\n          1037 | \tint rc = mvs()->LoggerOpen(argv\u00c42\u00dc);\n          1038 | \tconst char * pointer = NULL;\n          1039 | \tchar date\u00c432\u00dc;\n          1040 | \t*(int *)date =(13*3600+1*60+1)*100;\n          1041 | \tstrcpy(date+4,\"2010242\");\n          1042 | \tsize_t length = 0;\n          1043 | \tsize_t * lP   = &length;\n          1044 | \tpasm PASM = NULL;\n          1045 | \t//BrowseLogger(const char * & addr,size_t & length,int direction,int all,char * date_time)\n          1046 | \t//return (CASMIF(sym_logger,(void *)(direction),(void *)&addr,(void *)&length,(void *)all,(void *)d\n          1046 | ate_time));\n          1047 |\n          1048 | \t/* 18/11/05 LOGGER support\n          1049 | \t* 13/01/06 browse logger\n          1050 | \t*---------------------------------------------------------------------*\n          1051 | \t* LOGGER support                                                     *\n          1052 | \t* +0 0 connect to logger stream                                      *\n          1053 | \t*  -1 discoonect                                                     *\n          1054 | \t*   1 log a request                                                  *\n          1055 | \t*   2 read logger from oldtoyoung                                    *\n          1056 | \t*   3 read log from youngtoold (parm+8 contain addr , length)        *\n          1057 | \t*   a stream to log                                                  *\n          1058 | \t* +4 stream or logger name address                                   *\n          1059 | \t* +8 length of the stream                                            *\n          1060 | \t* +c time stemp field pointer                                        *\n          1061 | \t*   +0 binary time value in .01 sec                                  *\n          1062 | \t*   +4 DATE in YYYYDDD    char format                                *\n          1063 | \t*---------------------------------------------------------------------*/\n          1064 |\n          1065 | \twhile (rc=mvs()->BrowseLogger(pointer,lP,atoi(argv\u00c43\u00dc),atoi(argv\u00c44\u00dc),NULL)==0)\n          1066 | \t\u00e4\n          1067 | \t\tPASM = mvs()->getpasm();\n          1068 | \t\t//if (debugF)\n          1069 |\n          1070 | \t\tif (0)\n          1071 | \t\t\u00e4\n          1072 | \t\t\t_dump(\"logger rc\",(char *)&(PASM->asm_rc),256);\n          1073 | \t\t\t_dump(\"asm logger\",(char *)&(PASM->asm_logger_length),\n          1074 | \t\t\t\t(char *)&(PASM->asm_logger_stck)-(char *)&(PASM->asm_logger_length));\n          1075 | \t\t\t_dump(\" ASM LOGGER\",(char *)PASM->asm_logger_buffer,int(PASM->asm_logger_bufflen));\n          1076 | \t\t\t_dump(\" ASM ansarea\",(char *)PASM->asm_ansarea,40);\n          1077 | \t\t\tprintf(\" RC:%d REASON:%d(%8.8x)\u00d6n\",PASM->asm_rc,PASM->asm_reason,PASM->asm_reason);\n          1078 | \t\t\u00fc\n          1079 | \t\tunsigned short ubl = *(unsigned short *)pointer;\n          1080 | \t\tint bl = ubl;\n          1081 | \t\tbl-=4;\n          1082 | \t\t//if (debugF)\n          1083 |\n          1084 | \t\tif (0)\n          1085 | \t\t\tprintf(\"length:%u bl:%d ubl:%u\u00d6n\",length,bl,ubl);\n          1086 | \t\tchar * p = (char *)pointer+4;\n          1087 | \t\twhile(bl>0)\n          1088 | \t\t\u00e4\n          1089 | \t\t\tunsigned short url;\n          1090 | \t\t\turl = *(unsigned short *)p;\n          1091 | \t\t\tint rl = url;\n          1092 | \t\t\t//  if (debugF)\n          1093 | \t\t\t//    printf(\"head length:%u\u00d6n\",rl);\n          1094 | \t\t\tif (rl==72)\n          1095 | \t\t\t\u00e4\n          1096 | \t\t\t\t//  if (debugF)\n          1097 | \t\t\t\t//    _dump(\"head\",p,rl);\n          1098 | \t\t\t\tp+=rl;\n          1099 | \t\t\t\tbl-=rl;\n          1100 | \t\t\t\tlength-=rl;\n          1101 | \t\t\t\trl = *(short *)p;\n          1102 | \t\t\t\tif (bl >0 && rl>0 && bl>rl)\n          1103 | \t\t\t\t\u00e4\n          1104 | \t\t\t\t\t//  if (debugF)\n          1105 | \t\t\t\t\t//  printf(\"rec length:%u (bl:%d)\u00d6n\",rl,bl);\n          1106 | \t\t\t\t\t//  if (debugF)\n          1107 | \t\t\t\t\t//    _dump(\"SMF rec\",p,rl);\n          1108 | \t\t\t\t\tbool idflag = false;\n          1109 | \t\t\t\t\tif (printSMF(p,idflag,rl)==5)\n          1110 | \t\t\t\t\t\treturn 0;\n          1111 | \t\t\t\t\tp+=rl;\n          1112 | \t\t\t\t\tbl-=rl;\n          1113 | \t\t\t\t\tlength=-rl;\n          1114 | \t\t\t\t\u00fc\n          1115 | \t\t\t\telse\n          1116 | \t\t\t\t\tbl = 0;\n          1117 | \t\t\t\u00fc\n          1118 | \t\t\telse\n          1119 | \t\t\t\u00e4\n          1120 | \t\t\t\tbl = 0;\n          1121 | \t\t\t\u00fc\n          1122 | \t\t\u00fc\n          1123 | \t\t//printf(\" rc:%d p:%p l:%d\u00d6n\",rc,pointer,length);\n          1124 | \t\u00fc\n          1125 | \t//printf(\" rc:%d p:%p l:%d\u00d6n\",rc,pointer,length);\n          1126 | \tif (debugF)\n          1127 | \t\u00e4\n          1128 | \t\t_dump(\"asm logger\",(char *)&(PASM->asm_logger_length),\n          1129 | \t\t\t(char *)&(PASM->asm_logger_stck)-(char *)&(PASM->asm_logger_length));\n          1130 | \t\t_dump(\" ASM LOGGER\",(char *)PASM->asm_logger_buffer,int(PASM->asm_logger_bufflen));\n          1131 | \t\t_dump(\" ASM ansarea\",(char *)PASM->asm_ansarea,40);\n          1132 | \t\tprintf(\" RC:%d REASON:%d(%8.8x)\u00d6n\",PASM->asm_rc,PASM->asm_reason,PASM->asm_reason);\n          1133 | \t\u00fc\n          1134 | \tmvs()->LoggerClose();\n          1135 | \tfor(int i =0;i<255;i++)\n          1136 | \t\tif (counters\u00c4i\u00dc)\n          1137 | \t\t\tprintf(\" SMF type:%d, records:%d\u00d6n\",i,counters\u00c4i\u00dc);\n          1138 | \treturn 0;\n          1139 | \u00fc\n          1140 |\n          1141 | int _rct()\n          1142 | \u00e4\n          1143 | \tcvtP      cvt = *(cvtP* )0x10;\n          1144 | \trmctP   rmct = (rmctP)cvt->cvtopctp;\n          1145 | \tcctP     cct  = (cctP)rmct->rmctcct;\n          1146 | \tictP     ict  = (ictP)rmct->rmctict;\n          1147 | \tmctP     mct  = (mctP)rmct->rmctmct;\n          1148 | \tchar buff\u00c4256\u00dc;\n          1149 | \tbuff\u00c40\u00dc =0;\n          1150 | \tFILE * reply = popen(\"uname -Ia\",\"r\");\n          1151 | \tif (reply==NULL]]fgets(buff,sizeof(buff),reply)<=0)\n          1152 | \t\tprintf(\" popen error %s\u00d6n\",strerror(errno));\n          1153 | \telse\n          1154 | \t\tfclose(reply);\n          1155 |\n          1156 | \tprintf(\"System:%s Online CPU Count:%d RealStorage Size:%d (Mbyte)\u00d6n\",buff,cct->ccvrcpct,cvt->cvtrls\n          1156 | tg/1024);\n          1157 | \tint lihb = ict->icvslihb;\n          1158 | \tint pib = ict->iccend._icvtpib;\n          1159 | \tfor(int i =0;i<6;i++)\n          1160 | \t\u00e4\n          1161 | \t\tsleep(10);\n          1162 | \t\tchar tt\u00c432\u00dc;\n          1163 | \t\tchar fm\u00c4\u00dc = \"%H:%M:%S \";\n          1164 | \t\tformatTime(tt,sizeof(tt),fm);\n          1165 | \t\tprintf(\" %s ======================================\u00d6n CPU utilization:%d %% Available Frame Count:%\n          1165 | d \u00d6n\",tt,cct->ccvutilp,cct->ccvlgfmc);\n          1166 | \t\tprintf(\" I/O interrupt rates:: % d %d\u00d6n\",ict->icvslihb-lihb,ict->iccend._icvtpib-pib);\n          1167 | \t\tprintf(\" Paging Rate:%d\u00d6n\",mct->mcvsipr);\n          1168 | \t\t_dump(\"CCT\",(char *)cct,sizeof(*cct));\n          1169 | \t\tlihb = ict->icvslihb;\n          1170 | \t\tpib = ict->iccend._icvtpib;\n          1171 | \t\u00fc\n          1172 | \treturn 0;\n          1173 | \u00fc\n          1174 |\n          1175 | int _spawn()\n          1176 | \u00e4\n          1177 | \tpid_t child;\n          1178 | \tstruct inheritance inherit;\n          1179 | \tmemset(&inherit,0,sizeof(inherit));\n          1180 | \tint fd_count =  0;\n          1181 | \tint fd_map\u00c41\u00dc ;\n          1182 |\n          1183 | \tconst char *c_argv\u00c410\u00dc, *c_envp\u00c410\u00dc;\n          1184 | \tc_argv\u00c40\u00dc=\"mvsproc\";\n          1185 | \tint i = 0;\n          1186 | \tfor (i =1;i<=argc&&i<10;i++)\n          1187 | \t\tc_argv\u00c4i\u00dc = argv\u00c4i\u00dc;\n          1188 | \tc_argv\u00c4++i\u00dc = 0;\n          1189 | \tchar w\u00c4256\u00dc;\n          1190 | \tsprintf(w,\"_BPX_ACCOUNT=%s\",argv\u00c41\u00dc);\n          1191 | \tc_envp\u00c40\u00dc=w;\n          1192 | \tc_envp\u00c41\u00dc=\"_BPX_SHAREAS=NO\";\n          1193 | \tc_envp\u00c42\u00dc=\"_BPX_JOBNAME=TTTTTTTT\";\n          1194 | \tc_envp\u00c43\u00dc=NULL;\n          1195 |\n          1196 | \t/* Spawn the child process */\n          1197 | \tchild=spawnp(\"mvsproc\", fd_count, NULL, &inherit, c_argv, c_envp);\n          1198 | \tif(child==-1)\n          1199 | \t\u00e4\n          1200 | \t\tprintf(\"spawn error:%s\u00d6n\",strerror(errno));\n          1201 | \t\treturn(8);\n          1202 | \t\u00fc\n          1203 | \tprintf(\" child:%d\u00d6n\",child);\n          1204 | \tint status = 0;\n          1205 | \tif (wait(&status)==-1)\n          1206 | \t\tprintf(\" wait error:%s\",strerror(errno));\n          1207 | \treturn 0;\n          1208 | \u00fc\n          1209 |\n          1210 | int _spawned()\n          1211 | \u00e4\n          1212 | \t//FILE *fp=fopen(\"spawntest.out\",\"w\");\n          1213 | \tint i = 0;\n          1214 | \tprintf( \"Environment:\u00d6n\");\n          1215 | \tchar *e = 0;\n          1216 | \tchar **env=environ;\n          1217 |\n          1218 | \twhile(e=env\u00c4i++\u00dc)\n          1219 | \t\tprintf( \"%s\u00d6n\", e);\n          1220 | \tprintf( \"\u00d6n\u00d6n\");\n          1221 | \ti=0;\n          1222 | \tprintf(\"Args:\u00d6n\");\n          1223 | \twhile(e=argv\u00c4i++\u00dc)\n          1224 | \t\tprintf(\"%s\u00d6n\", e);\n          1225 | \tprintf(\"\u00d6n\u00d6n\");\n          1226 | \treturn 0;\n          1227 |\n          1228 | \u00fc\n          1229 |\n          1230 | int _brsmf()\n          1231 | \u00e4\n          1232 | \treturn _browselogger();\n          1233 | \u00fc\n          1234 |\n          1235 |\n          1236 | typedef struct r79cchnl * R79celem;\n          1237 | typedef struct smf79pro * Smf79pro;\n          1238 | typedef struct r79cchnl   R79cchnl;\n          1239 | typedef struct r793     * R793;\n          1240 | #if (0)\n          1241 | '00'X='00X:UNKNOWN'                              /*UNDEF*/\n          1242 | '01'X='01X:PARALLEL BLOCK MPX'                   /*BLOCK*/\n          1243 | '02'X='02X:PARALLEL BYTE MPX'                    /*BYTE*/\n          1244 | '03'X='03X:ESCON POINT TO POINT'                 /*CNC_P*/\n          1245 | '04'X='04X:ESCON SWITCHED OR POINT TO POINT'     /*CNC_?*/\n          1246 | '05'X='05X:ESCON SWITCHED POINT TO POINT'        /*CNC_S*/\n          1247 | '06'X='06X:ESCON PATH TO A BLOCK CONVERTER'      /*CVC*/\n          1248 | '07'X='07X:NATIVE INTERFACE'                     /*NTV*/\n          1249 | '08'X='08X:CTC POINT TO POINT'                   /*CTC_P*/\n          1250 | '09'X='09X:CTC SWITCHED POINT TO POINT'          /*CTC_S*/\n          1251 | '0A'X='0AX:CTC SWITCHED OR POINT TO POINT'       /*CTC_?*/\n          1252 | '0B'X='0BX:COUPLING FACILITY SENDER'             /*CFS*/\n          1253 | '0C'X='0CX:COUPLING FACILITY RECEIVER'           /*CFR*/\n          1254 | '0D'X='0DX:UNKNOWN'                              /*UNDEF*/\n          1255 | '0E'X='0EX:UNKNOWN'                              /*UNDEF*/\n          1256 | '0F'X='0FX:ESCON PATH TO A BYTE CONVERTER'       /*CBY*/\n          1257 | '10'X='10X:OSA EXPRESS'                          /*OSE*/\n          1258 | '11'X='11X:OSA DIRECT EXPRESS'                   /*OSD*/\n          1259 | '12'X='12X:OSA CHANNEL'                          /*OSA*/\n          1260 | '13'X='13X:INTERNAL SYSTEM DEVICE'               /*ISD*/\n          1261 | '14'X='14X:HSSI OPEN SYSTEM ADAPTER CHANNEL'     /*OSC*/\n          1262 | '15'X='15X:ETHERNET OPEN SYSTEM ADAPTER CHANL'   /*OSN*/\n          1263 | '16'X='16X:CLUSTER BUS SENDER'                   /*CBS*/\n          1264 | '17'X='17X:CLUSTER BUS RECEIVER'                 /*CBR*/\n          1265 | '18'X='18X:INTERNAL COUPLING ISC SENDER'         /*ICS*/\n          1266 | '19'X='19X:INTERNAL COUPLING ISC RECEIVER'       /*ICR*/\n          1267 | '1A'X='1AX:FICON POINT TO POINT'                 /*FC */\n          1268 | '1B'X='1BX:FICON SWITCHED'                       /*FC_S*/\n          1269 | '1C'X='1CX:FICON TO ESCON BRIDGE'                /*FCV*/\n          1270 | '1D'X='1DX:FICON INCOMPLETE'                     /*FC_?*/\n          1271 | '1E'X='1EX:DIRECT SYSTEM DEVICE'                 /*DSD */\n          1272 | '1F'X='1FX:EMULATED I/O'                         /*EIO */\n          1273 | '20'X='20X:RESERVED'                             /*UNDEF*/\n          1274 | '21'X='21X:INTEGRATED CLUSTER BUS PEER'          /*CBP*/\n          1275 | '22'X='22X:COUPLING FACILITY PEER'               /*CFP*/\n          1276 | '23'X='23X:INTERNAL COUPLING PEER'               /*ICP*/\n          1277 | '24'X='24X:INTERNAL QUEUED DIRECT COMM'          /*IQD*/\n          1278 | '25'X='25X:FCT CHANNEL'                          /*FCP*/\n          1279 | '26'X='26X:COUPLING OVER INFINIBAND'             /*CIB*/\n          1280 | '30'X='30X:OSA ZBX DATA'                         /*OSX*/\n          1281 | '31'X='31X:OSA ZBX MANAGEMENT'                   /*OSM*/\n          1282 | #endif\n          1283 | #define UINTF(n) (*(unsigned int *)(n))\n          1284 | #define INTF(n) (*(signed int *)(n))\n          1285 |\n          1286 | //============================================================================\n          1287 |\n          1288 | class line;\n          1289 | class dataset;\n          1290 | class jesJcl;\n          1291 | class DD;\n          1292 | class DDs;\n          1293 | class STEP;\n          1294 |\n          1295 | static const int k32 = 32768;\n          1296 | static const int k1  = 1024;\n          1297 |\n          1298 | enum lineType\n          1299 | \u00e4\n          1300 | \tunknown        =0,\n          1301 | \texecStmt      =1,\n          1302 | \tsteplibStmt    =2,\n          1303 | \tsteplibStmtConcat =3,\n          1304 | \tddStmt        =4,\n          1305 | \tddStmtConcat  =5,\n          1306 | \tinlineStmt    =6,\n          1307 | \tinlineData    =7,\n          1308 | \tsysoutStmt    =8\n          1309 | \u00fc;\n          1310 |\n          1311 |\n          1312 | static const char * JCL_COMMENT        = \"//*\";\n          1313 | static const char * JCL_COMMENT_XX    = \"XX*\";\n          1314 | static const char * JCL_JES2          = \"/*\";\n          1315 | static const char * JCL_EXEC_PGM      = \"PGM=\";\n          1316 | static const char * JCL_EXEC_PARM     = \"PARM=\";\n          1317 | static const char * JCL_PROC          = \"++\";\n          1318 | static const char * JCL_SUBSTITUTION  = \"IEFC653I SUBSTITUTION JCL - \";\n          1319 | static const char * JCL_DD_STMT       = \"DD\";\n          1320 | static const char * JCL_EXEC_STMT     = \"EXEC\";\n          1321 | static const char * JCL_STEPLIB_STMT  = \"STEPLIB\";\n          1322 | static const char * JCL_SYSIN         = \"*\";\n          1323 | static const char * JCL_SYSIN_DATA    = \"DATA\";\n          1324 | static const char * JCL_SYSIN_DATA_DLM= \"DATA,DLM=\";\n          1325 | static const char * JCL_SYSOUT        = \"SYSOUT=\";\n          1326 |\n          1327 | const char * lineTypeText\u00c4\u00dc =\n          1328 | \u00e4\n          1329 | \t\"unknown\",\n          1330 | \t\"execStmt\",\n          1331 | \t\"steplibStmt\",\n          1332 | \t\"steplibStmtConcat\",\n          1333 | \t\"ddStmt\",\n          1334 | \t\"ddStmtConcat\",\n          1335 | \t\"inlineStmt\",\n          1336 | \t\"inlineData\",\n          1337 | \t\"sysoutStmt\"\n          1338 | \u00fc;\n          1339 |\n          1340 | const char * datasetStatusText\u00c4\u00dc=\n          1341 | \u00e4\n          1342 | \t\"unknown\",\n          1343 | \t\"dumpOk\",\n          1344 | \t\"restoreOk\",\n          1345 | \t\"markedForDump\",\n          1346 | \t\"markedForRestore\",\n          1347 | \t\"error\"\n          1348 | \u00fc;\n          1349 |\n          1350 | const  char *  datasetDispText\u00c4\u00dc =\n          1351 | \u00e4\n          1352 | \t\"unknownDisp\",\n          1353 | \t\"temporary\",\n          1354 | \t\"input\",\n          1355 | \t\"output\",\n          1356 | \t\"jes2\",\n          1357 | \t\"instream\",\n          1358 | \t\"included\",\n          1359 | \t\"excluded\"\n          1360 | \t\"errorDisp\",\n          1361 | \tNULL\n          1362 | \u00fc;\n          1363 |\n          1364 |\n          1365 | struct _jclType \u00e4\n          1366 | \tchar * n;\n          1367 | \tint   t;\n          1368 | \u00fc;\n          1369 |\n          1370 | typedef struct _jclType jclType;\n          1371 | jclType jclTypes\u00c4\u00dc=\u00e4\n          1372 | \t\u00e4\"JOB\",0\u00fc,\n          1373 | \t\u00e4\"OUTPUT\",1\u00fc,\n          1374 | \t\u00e4\"SET\",2\u00fc,\n          1375 | \t\u00e4\"INCLUDE\",3\u00fc,\n          1376 | \t\u00e4\"JCLLIB\",4\u00fc,\n          1377 | \t\u00e4\"IF\",5\u00fc,\n          1378 | \t\u00e4\"ENDIF\",6\u00fc,\n          1379 | \t\u00e4\"ELSE\",7\u00fc,\n          1380 | \t\u00e4\"COMMAND\",8\u00fc,\n          1381 | \t\u00e4\"JOBLIB\",9\u00fc,\n          1382 | \t\u00e4\"CTL\",10\u00fc,\n          1383 | \t\u00e4\"ENDCTL\",11\u00fc,\n          1384 | \t\u00e4\"XMIT\",12\u00fc,\n          1385 | \t\u00e4\"PROC\",13\u00fc,\n          1386 | \t\u00e4\"PEND\",14\u00fc,\n          1387 | \t\u00e4\"EXEC\",20\u00fc,\n          1388 | \t\u00e4\"DD\",24\u00fc,\n          1389 | \t\u00e4NULL,-1\u00fc\n          1390 | \u00fc;\n          1391 |\n          1392 | static const int TYPE_EXEC = 20;\n          1393 | static const int TYPE_DD   = 24;\n          1394 | static const int oS = 10;\n          1395 | static const int oN = 12;\n          1396 |\n          1397 | static char actualStepName\u00c49\u00dc;\n          1398 | static char actualProcstepName\u00c49\u00dc;\n          1399 | static STEP * actualStep;\n          1400 |\n          1401 | class line:public chainE\n          1402 | \u00e4\n          1403 | private:\n          1404 | \tDD * ddP;\n          1405 | \tdataset * datasetP;\n          1406 | \tlineType type;\n          1407 | public:\n          1408 | \tline(const char *);\n          1409 | \t\u00dfline()\n          1410 | \t\u00e4\u00fc\n          1411 | \tlineType getLineType()\n          1412 | \t\u00e4\n          1413 | \t\treturn type;\n          1414 | \t\u00fc\n          1415 | \tchar * getLine()\n          1416 | \t\u00e4\n          1417 | \t\treturn chainEid;\n          1418 | \t\u00fc\n          1419 | \tDD * getDD()\n          1420 | \t\u00e4\n          1421 | \t\treturn ddP;\n          1422 | \t\u00fc\n          1423 | \tdataset * getDataset()\n          1424 | \t\u00e4\n          1425 | \t\treturn datasetP;\n          1426 | \t\u00fc\n          1427 | \u00fc;\n          1428 |\n          1429 | class DD:public chainE\n          1430 | \u00e4\n          1431 | private:\n          1432 | \tint index;\n          1433 | \tline *   lineP;\n          1434 | \tchar *   member;\n          1435 | public:\n          1436 | \tDD(char * n,int i = 0,line * l = NULL):chainE(n)\n          1437 | \t\u00e4\n          1438 | \t\tJOBENV::DEBUG(1,\"DD:\",n);\n          1439 | \t\tindex = i;\n          1440 | \t\tlineP = l;\n          1441 | \t\tmember = NULL;\n          1442 | \t\u00fc\n          1443 | \t\u00dfDD()\u00e4\u00fc\n          1444 | \tvoid setMember(const char * m)\n          1445 | \t\u00e4\n          1446 | \t\tmember = strdup(m);\n          1447 | \t\u00fc\n          1448 | \tchar * getMember()\n          1449 | \t\u00e4\n          1450 | \t\treturn member;\n          1451 | \t\u00fc\n          1452 | \tint getIndex()\n          1453 | \t\u00e4\n          1454 | \t\treturn index;\n          1455 | \t\u00fc\n          1456 | \tvoid setIndex(int i)\n          1457 | \t\u00e4\n          1458 | \t\tindex = i;\n          1459 | \t\u00fc\n          1460 | \tchar * put(char * b)\n          1461 | \t\u00e4\n          1462 | \t\tsprintf(b,\"%s Type:%s Concat:%d Member:%s \",\n          1463 | \t\t\tchainEid,\n          1464 | \t\t\tlineTypeText\u00c4int(lineP->getLineType())\u00dc,\n          1465 | \t\t\tindex,\n          1466 | \t\t\t(member?member:\"\"));\n          1467 | \t\treturn b;\n          1468 | \t\u00fc\n          1469 | \tline * getLine()\n          1470 | \t\u00e4\n          1471 | \t\treturn lineP;\n          1472 | \t\u00fc\n          1473 | \u00fc;\n          1474 |\n          1475 | class DDs:public mCHAIN\n          1476 | \u00e4\n          1477 | public:\n          1478 | \tstatic char lastdd\u00c49\u00dc;\n          1479 | \tstatic  int concatIndex;\n          1480 | \tDDs():mCHAIN()\n          1481 | \t\u00e4\n          1482 | \t\tmemset(lastdd,0,sizeof(lastdd));\n          1483 | \t\tconcatIndex = 0;\n          1484 | \t\u00fc\n          1485 | \t\u00dfDDs()\u00e4\u00fc\n          1486 | \u00fc;\n          1487 |\n          1488 |\n          1489 | class dataset:public chainE\n          1490 | \u00e4\n          1491 | public:\n          1492 | \tenum datasetDisp\n          1493 | \t\u00e4\n          1494 | \t\tunknownDisp,\n          1495 | \t\ttemporary,\n          1496 | \t\tinput,\n          1497 | \t\toutput,\n          1498 | \t\tjes2,\n          1499 | \t\tinstream,\n          1500 | \t\tincluded,\n          1501 | \t\texcludedDisp,\n          1502 | \t\terrorDisp\n          1503 | \t\u00fc;\n          1504 | \tenum datasetStatus\n          1505 | \t\u00e4\n          1506 | \t\tunknown,\n          1507 | \t\tdumpOk,\n          1508 | \t\trestoreOk,\n          1509 | \t\tmarkedForDump,\n          1510 | \t\tmarkedForRestore,\n          1511 | \t\terror\n          1512 | \t\u00fc;\n          1513 | private:\n          1514 | \tDD * ddList\u00c4256\u00dc;\n          1515 | \tint iDdnames;\n          1516 | \tdatasetDisp  disp;\n          1517 | \tdatasetStatus status;\n          1518 | \tchar * newDsn;\n          1519 | \tlong long size;\n          1520 |\n          1521 | public:\n          1522 | \tstatic datasetStatus name2Status(const char * n)\n          1523 | \t\u00e4\n          1524 | \t\tif (strcasecmp(n,\"unknown\")==0)\n          1525 | \t\t\treturn unknown;\n          1526 | \t\telse\n          1527 | \t\t\tif (strcasecmp(n,\"dumpOk\")==0)\n          1528 | \t\t\t\treturn dumpOk;\n          1529 | \t\t\telse\n          1530 | \t\t\t\tif (strcasecmp(n,\"restoreOk\")==0)\n          1531 | \t\t\t\t\treturn restoreOk;\n          1532 | \t\t\t\telse\n          1533 | \t\t\t\t\tif (strcasecmp(n,\"markedForDump\")==0)\n          1534 | \t\t\t\t\t\treturn markedForDump;\n          1535 | \t\t\t\t\telse\n          1536 | \t\t\t\t\t\tif (strcasecmp(n,\"markedForRestore\")==0)\n          1537 | \t\t\t\t\t\t\treturn markedForRestore;\n          1538 | \t\t\t\t\t\telse\n          1539 | \t\t\t\t\t\t\treturn error;\n          1540 | \t\u00fc\n          1541 |\n          1542 | \tstatic datasetDisp name2Disp(const char *n)\n          1543 | \t\u00e4\n          1544 | \t\tif (strcasecmp(n,\"unknown\")==0)\n          1545 | \t\t\treturn unknownDisp;\n          1546 | \t\telse\n          1547 | \t\t\tif (strcasecmp(n,\"temporary\")==0)\n          1548 | \t\t\t\treturn temporary;\n          1549 | \t\tif (strcasecmp(n,\"input\")==0)\n          1550 | \t\t\treturn input;\n          1551 | \t\telse\n          1552 | \t\t\tif (strcasecmp(n,\"output\")==0)\n          1553 | \t\t\t\treturn output;\n          1554 | \t\t\telse\n          1555 | \t\t\t\tif (strcasecmp(n,\"jes2\")==0)\n          1556 | \t\t\t\t\treturn jes2;\n          1557 | \t\t\t\telse\n          1558 | \t\t\t\t\tif (strcasecmp(n,\"instream\")==0)\n          1559 | \t\t\t\t\t\treturn instream;\n          1560 | \t\t\t\t\telse\n          1561 | \t\t\t\t\t\tif (strcasecmp(n,\"included\")==0)\n          1562 | \t\t\t\t\t\t\treturn included;\n          1563 | \t\t\t\t\t\telse\n          1564 | \t\t\t\t\t\t\tif (strcasecmp(n,\"excluded\")==0)\n          1565 | \t\t\t\t\t\t\t\treturn excludedDisp;\n          1566 |\n          1567 | \t\t\t\t\t\t\telse\n          1568 | \t\t\t\t\t\t\t\treturn errorDisp;\n          1569 | \t\u00fc\n          1570 |\n          1571 | \tdataset(const char * n):chainE(n)\n          1572 | \t\u00e4\n          1573 | \t\tJOBENV::DEBUG(1,\"dataset:\",(char *)n);\n          1574 | \t\tstatus = unknown;\n          1575 | \t\tdisp = unknownDisp;\n          1576 | \t\tmemset(ddList,0,256*4);\n          1577 | \t\tiDdnames = 0;\n          1578 | \t\tsize = 0;\n          1579 | \t\tnewDsn = \"\";\n          1580 | \t\u00fc\n          1581 | \t\u00dfdataset()\n          1582 | \t\u00e4\u00fc\n          1583 | \tvoid setNextDd(DD *d)\n          1584 | \t\u00e4\n          1585 | \t\tddList\u00c4iDdnames++\u00dc = d;\n          1586 | \t\tif (iDdnames>255)\n          1587 | \t\t\tabort();\n          1588 | \t\u00fc\n          1589 | \tvoid setStatus(datasetStatus s)\n          1590 | \t\u00e4\n          1591 | \t\tstatus = s;\n          1592 | \t\u00fc\n          1593 | \tvoid setDisp(datasetDisp d)\n          1594 | \t\u00e4\n          1595 | \t\tdisp=d;\n          1596 | \t\u00fc\n          1597 | \tDD * getFirstDd()\n          1598 | \t\u00e4\n          1599 | \t\tiDdnames = 0;\n          1600 | \t\treturn ddList\u00c4iDdnames++\u00dc;\n          1601 | \t\u00fc\n          1602 | \tDD * getNextDd()\n          1603 | \t\u00e4\n          1604 | \t\treturn ddList\u00c4iDdnames++\u00dc;\n          1605 | \t\u00fc\n          1606 | \tdatasetStatus getStatus()\n          1607 | \t\u00e4\n          1608 | \t\treturn status;\n          1609 | \t\u00fc\n          1610 | \tdatasetDisp getDisp()\n          1611 | \t\u00e4\n          1612 | \t\treturn disp;\n          1613 | \t\u00fc\n          1614 | \tchar * getDsn()\n          1615 | \t\u00e4\n          1616 | \t\treturn chainEid;\n          1617 | \t\u00fc\n          1618 | \tchar * getNewDsn()\n          1619 | \t\u00e4\n          1620 | \t\treturn newDsn;\n          1621 | \t\u00fc\n          1622 | \tvoid setNewDsn(const char * n)\n          1623 | \t\u00e4\n          1624 | \t\tnewDsn = strdup(n);\n          1625 | \t\u00fc\n          1626 | \tlong long getSize()\n          1627 | \t\u00e4\n          1628 | \t\treturn size;\n          1629 | \t\u00fc\n          1630 | \tvoid setSize(long long s)\n          1631 | \t\u00e4\n          1632 | \t\tsize = s;\n          1633 | \t\u00fc\n          1634 | \tchar * put(char *b)\n          1635 | \t\u00e4\n          1636 | \t\tsprintf(b,\"%s Status:%s Disp:%s NewName:%s DDnames:\",chainEid,\n          1637 | \t\t\tdatasetStatusText\u00c4int(status)\u00dc,\n          1638 | \t\t\tdatasetDispText\u00c4int(disp)\u00dc,\n          1639 | \t\t\tnewDsn);\n          1640 | \t\tfor(int i =0;i<iDdnames;i++)\n          1641 | \t\t\tsprintf(b+strlen(b),\" %s \",ddList\u00c4i\u00dc->chainEid);\n          1642 | \t\treturn b;\n          1643 | \t\u00fc\n          1644 | \tbool excluded()\n          1645 | \t\u00e4\n          1646 | \t\tint r = 0;\n          1647 | \t\treturn ((r>0)?true:false);\n          1648 | \t\u00fc\n          1649 | \tbool restore()\n          1650 | \t\u00e4\n          1651 | \t\treturn true;\n          1652 | \t\u00fc\n          1653 | \tbool rename()\n          1654 | \t\u00e4\n          1655 | \t\treturn true;\n          1656 | \t\u00fc\n          1657 | \u00fc;\n          1658 |\n          1659 |\n          1660 | class datasets:public mCHAIN\n          1661 | \u00e4\n          1662 | public:\n          1663 | \tdatasets():mCHAIN()\n          1664 | \t\u00e4\u00fc\n          1665 | \t\u00dfdatasets()\n          1666 | \t\u00e4\u00fc\n          1667 | \tvoid restored(const char * ,int);\n          1668 | \tvoid dumped(const char *,int);\n          1669 | \tvoid setSize(const char *,long long);\n          1670 | \u00fc;\n          1671 |\n          1672 |\n          1673 |\n          1674 | class STEP:public chainE\n          1675 | \u00e4\n          1676 | private:\n          1677 | \tchar * pgm;\n          1678 | \tchar * parm;\n          1679 | \tDDs * dds;\n          1680 | \tchar * step;\n          1681 | \tchar * procstep;\n          1682 | public:\n          1683 | \tSTEP(const char * stepName,const char * procstepName,const char * _pgm,const char * _parm)\n          1684 | \t\t:chainE(key(stepName,procstepName))\n          1685 | \t\u00e4\n          1686 | \t\tJOBENV::DEBUG(1,\"STEP\",chainEid);\n          1687 | \t\tif (_pgm)\n          1688 | \t\t\tpgm=strdup(_pgm);\n          1689 | \t\tif (_parm)\n          1690 | \t\t\tparm = strdup(_parm);\n          1691 | \t\tJOBENV::DEBUG(1,\"PGM:\",pgm);\n          1692 | \t\tJOBENV::DEBUG(1,\"PARM:\",parm);\n          1693 | \t\tif (stepName)\n          1694 | \t\t\tstep = strdup(stepName);\n          1695 | \t\tif (procstepName)\n          1696 | \t\t\tprocstep = strdup(procstepName);\n          1697 | \t\tdds = new DDs;\n          1698 | \t\u00fc\n          1699 | \t\u00dfSTEP()\n          1700 | \t\u00e4\n          1701 | \t\tif (pgm)\n          1702 | \t\t\tfree(pgm);\n          1703 | \t\tif (parm)\n          1704 | \t\t\tfree(parm);\n          1705 | \t\tif (step)\n          1706 | \t\t\tfree(step);\n          1707 | \t\tif (procstep)\n          1708 | \t\t\tfree(procstep);\n          1709 | \t\t//  if (dds)\n          1710 | \t\t//    delete dds;\n          1711 | \t\u00fc\n          1712 | \tvoid addDD(DD * dd)\n          1713 | \t\u00e4\n          1714 | \t\tdds->addlast(dd);\n          1715 | \t\u00fc\n          1716 | \tvoid print()\n          1717 | \t\u00e4\n          1718 | \t\tprintf(\"%s PGM:%s PARM:%s\u00d6n\",chainEid,pgm,parm);\n          1719 | \t\tDD * dd = (DD *)dds->goFirst();\n          1720 | \t\twhile(dd)\n          1721 | \t\t\u00e4\n          1722 | \t\t\tprintf(\" %s dsn:%s\u00d6n\",dd->chainEid,dd->getLine()->getDataset()->getDsn());\n          1723 | \t\t\tdd = (DD *)dds->goNext();\n          1724 | \t\t\u00fc\n          1725 | \t\u00fc\n          1726 | \tchar * getPgm()\n          1727 | \t\u00e4\n          1728 | \t\treturn pgm;\n          1729 | \t\u00fc\n          1730 | \tchar *getParm()\n          1731 | \t\u00e4\n          1732 | \t\treturn parm;\n          1733 | \t\u00fc\n          1734 | \tDDs * getDDs()\n          1735 | \t\u00e4\n          1736 | \t\treturn dds;\n          1737 | \t\u00fc\n          1738 | \tchar * getStep()\n          1739 | \t\u00e4\n          1740 | \t\treturn step;\n          1741 | \t\u00fc\n          1742 | \tchar * getProcstep()\n          1743 | \t\u00e4\n          1744 | \t\treturn procstep;\n          1745 | \t\u00fc\n          1746 | private:\n          1747 | \tchar * key(const char * s,const char * ps)\n          1748 | \t\u00e4\n          1749 | \t\tchar _key\u00c418\u00dc;\n          1750 | \t\tmemset(_key,0,sizeof(_key));\n          1751 | \t\tsprintf(_key,\"%s.%s\",s?s:\"\",ps?ps:\"\");\n          1752 | \t\treturn _key;\n =======================================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1752.24: CCN6103 (W) The address of a local variable or temporary is used in a return\n expression.\n          1753 | \t\u00fc\n          1754 | \u00fc;\n          1755 |\n          1756 | class STEPs:public mCHAIN\n          1757 | \u00e4\n          1758 | public:\n          1759 | \tSTEPs():mCHAIN()\n          1760 | \t\u00e4  \u00fc\n          1761 | \t\u00dfSTEPs()\n          1762 | \t\u00e4\u00fc\n          1763 | \tvoid   print()\n          1764 | \t\u00e4\n          1765 | \t\tSTEP * step = (STEP *)goFirst();\n          1766 | \t\twhile(step)\n          1767 | \t\t\u00e4\n          1768 | \t\t\tstep->print();\n          1769 | \t\t\tstep = (STEP *)goNext();\n          1770 | \t\t\u00fc\n          1771 | \t\u00fc\n          1772 | \u00fc;\n          1773 |\n          1774 | DDs dds;\n          1775 | STEPs steps;\n          1776 | datasets datasetList;\n          1777 |\n          1778 |\n          1779 | line::line(const char *b):chainE(b)\n          1780 | \u00e4\n          1781 | \tddP = NULL;\n          1782 | \tdatasetP = NULL;\n          1783 | \ttype = unknown;\n          1784 | \tJOBENV::DEBUG(1,\"line:\",(char *)b);\n          1785 |\n          1786 | \tmvsSTRING lin(b), prefix, label, stmt, rest, dsn, member, disp, rest1, rest2;\n          1787 | \tlin.split(label,\" \",stmt,\" \",rest);\n          1788 | \tprefix = label,(0,2);\n          1789 | \tlabel = label(2,strlen(label)-2);\n          1790 |\n          1791 | \tif (strcmp(stmt,JCL_EXEC_STMT)==0)\n          1792 | \t\u00e4\n          1793 | \t\ttype = execStmt;\n          1794 | \t\tconst char *pgmO = strstr((const char *)rest,JCL_EXEC_PGM);\n          1795 | \t\tif (pgmO)\n          1796 | \t\t\u00e4\n          1797 | \t\t\t/*\n          1798 | \t\t\tif (strcmp(prefix,JCL_PROC) == 0)\n          1799 | \t\t\tstrcpy(actualProcstepName,label);\n          1800 | \t\t\telse\n          1801 | \t\t\tstrcpy(actualStepName,label);\n          1802 | \t\t\t*/\n          1803 | \t\t\tchar pgm\u00c49\u00dc;\n          1804 | \t\t\tmemset(pgm,0,sizeof(pgm));\n          1805 | \t\t\tfor(int i=0;i<9&&rest\u00c4strlen(JCL_EXEC_PGM)+i\u00dc-' '&&rest\u00c4strlen(JCL_EXEC_PGM)+i\u00dc-',';i++)\n          1806 | \t\t\t\tpgm\u00c4i\u00dc=rest\u00c4strlen(JCL_EXEC_PGM)+i\u00dc;\n          1807 | \t\t\tconst char * parmO = strstr((const char *)rest,JCL_EXEC_PARM);\n          1808 | \t\t\tchar parm\u00c4256\u00dc;\n          1809 | \t\t\tmemset(parm,0,sizeof(parm));\n          1810 | \t\t\tchar apost=0x7D;\n          1811 | \t\t\tif (parmO)\n          1812 | \t\t\t\u00e4\n          1813 | \t\t\t\tchar term= *(parmO+strlen(JCL_EXEC_PARM));\n          1814 | \t\t\t\tif (term == '(')\n          1815 | \t\t\t\t\tterm = ')';\n          1816 | \t\t\t\telse\n          1817 | \t\t\t\t\tif (term == '\u00d6'')\n          1818 | \t\t\t\t\t\tterm = '\u00d6'';\n          1819 | \t\t\t\t\telse\n          1820 | \t\t\t\t\t\tterm = ' ';\n          1821 | \t\t\t\tbool cont = true;\n          1822 | \t\t\t\tint j =(parmO-rest)+strlen(JCL_EXEC_PARM);\n          1823 | \t\t\t\tint jl = strlen((char *)rest+j);\n          1824 | \t\t\t\tfor(int i = 0;cont&&(i<255)&&(j<jl);i++,j++)\n          1825 | \t\t\t\t\u00e4\n          1826 | \t\t\t\t\tif (term == ' ' &&(rest\u00c4j\u00dc==' ']]rest\u00c4j\u00dc==','))\n          1827 | \t\t\t\t\t\tcont = false;\n          1828 | \t\t\t\t\telse\n          1829 | \t\t\t\t\t\u00e4\n          1830 | \t\t\t\t\t\t//if (term== '\u00d6'' && rest\u00c4j\u00dc==term&&rest\u00c4j+1\u00dc-term)\n          1831 | \t\t\t\t\t\tif (term== apost && rest\u00c4j\u00dc==term&&rest\u00c4j+1\u00dc-term)\n          1832 | \t\t\t\t\t\t\tcont = false;\n          1833 | \t\t\t\t\t\telse\n          1834 | \t\t\t\t\t\t\tparm\u00c4i\u00dc=rest\u00c4j\u00dc;\n          1835 | \t\t\t\t\t\u00fc\n          1836 | \t\t\t\t\u00fc\n          1837 | \t\t\t\u00fc\n          1838 | \t\t\tactualStep = new STEP(actualStepName,actualProcstepName,pgm,parm);\n          1839 | \t\t\tsteps.addlast(actualStep);\n          1840 | \t\t\u00fc\n          1841 | \t\u00fc\n          1842 | \telse\n          1843 | \t\tif (strcmp(stmt,JCL_DD_STMT)==0)\n          1844 | \t\t\u00e4\n          1845 | \t\t\ttype = ddStmt;\n          1846 | \t\t\tif (strlen(label))\n          1847 | \t\t\t\u00e4\n          1848 | \t\t\t\tDDs::concatIndex = 0;\n          1849 | \t\t\t\tstrcpy(DDs::lastdd,label);\n          1850 | \t\t\t\tif (strcmp(label,JCL_STEPLIB_STMT)==0)\n          1851 | \t\t\t\t\ttype = steplibStmt;\n          1852 | \t\t\t\u00fc\n          1853 | \t\t\telse\n          1854 | \t\t\t\u00e4\n          1855 | \t\t\t\tif (strcmp(DDs::lastdd,JCL_STEPLIB_STMT))\n          1856 | \t\t\t\t\ttype = ddStmtConcat;\n          1857 | \t\t\t\telse\n          1858 | \t\t\t\t\ttype = steplibStmtConcat;\n          1859 | \t\t\t\tDDs::concatIndex++;\n          1860 | \t\t\t\u00fc\n          1861 | \t\t\tddP = new DD(DDs::lastdd,DDs::concatIndex,this);\n          1862 | \t\t\tdds.addlast(ddP);\n          1863 |\n          1864 | \t\t\tif (actualStep)\n          1865 | \t\t\t\tactualStep->addDD(ddP);\n          1866 |\n          1867 | \t\t\tif (strcmp(rest,JCL_SYSIN)==0]]strcmp(rest,JCL_SYSIN_DATA)==0]]\n          1868 | \t\t\t\tmemcmp(JCL_SYSIN_DATA_DLM,(char *)rest,strlen(JCL_SYSIN_DATA_DLM)-1)==0)\n          1869 | \t\t\t\ttype = inlineStmt;\n          1870 | \t\t\telse\n          1871 | \t\t\t\tif (strstr((char *)rest,JCL_SYSOUT))\n          1872 | \t\t\t\t\ttype = sysoutStmt;\n          1873 | \t\t\t\telse\n          1874 | \t\t\t\t\u00e4\n          1875 | \t\t\t\t\trest.parse(rest1,\"DSN=\",dsn,\",\",rest2);\n          1876 | \t\t\t\t\tif (strlen(dsn))\n          1877 | \t\t\t\t\t\u00e4\n          1878 | \t\t\t\t\t\t//ToDo GDG handling\n          1879 | \t\t\t\t\t\tdsn.parse(dsn,\"(\",member,\")\",rest1);\n          1880 | \t\t\t\t\t\tif (strlen(member))\n          1881 | \t\t\t\t\t\t\tddP->setMember(member);\n          1882 | \t\t\t\t\t\tdatasetP = (dataset *)datasetList.search(dsn);\n          1883 | \t\t\t\t\t\tif (datasetP==NULL)\n          1884 | \t\t\t\t\t\t\u00e4\n          1885 | \t\t\t\t\t\t\tdatasetP = new dataset(dsn);\n          1886 | \t\t\t\t\t\t\tdatasetList.addlast(datasetP);\n          1887 | \t\t\t\t\t\t\tif (strstr((char *)rest,\"DISP=SHR\")]]strstr((char *)rest,\"DISP=MOD\")]]strstr((char *)rest,\"DI\n          1887 | SP=KEEP\"))\n          1888 | \t\t\t\t\t\t\t\tdatasetP->setDisp(dataset::input);\n          1889 | \t\t\t\t\t\t\telse\n          1890 | \t\t\t\t\t\t\t\tif (dsn\u00c40\u00dc=='&')\n          1891 | \t\t\t\t\t\t\t\t\tdatasetP->setDisp(dataset::temporary);\n          1892 | \t\t\t\t\t\t\t\telse\n          1893 | \t\t\t\t\t\t\t\t\tdatasetP->setDisp(dataset::output);\n          1894 | \t\t\t\t\t\t\u00fc\n          1895 | \t\t\t\t\t\tdatasetP->setNextDd(ddP);\n          1896 | \t\t\t\t\t\u00fc\n          1897 | \t\t\t\t\telse\n          1898 | \t\t\t\t\t\ttype = unknown;\n          1899 | \t\t\t\t\u00fc\n          1900 | \t\t\u00fc\n          1901 | \u00fc\n          1902 |\n          1903 | jesJcl * jesjcl = NULL;\n          1904 |\n          1905 | class jesJcl\n          1906 | \u00e4\n          1907 | private:\n          1908 | \tmCHAIN lines;\n          1909 | \tlineType type;\n          1910 | \tbool    req;\n          1911 | \tchar b\u00c4k32\u00dc;\n          1912 | \tchar bw\u00c4k32\u00dc;\n          1913 | \tint bOffset;\n          1914 | \tFILE * file;\n          1915 | \tint  t;\n          1916 | \tint count ;\n          1917 |\n          1918 | public:\n          1919 | \tjesJcl(FILE *f)\n          1920 | \t\u00e4\n          1921 | \t\tJOBENV::DEBUG(1,\"JESJCL construct\");\n          1922 | \t\tfile = f;\n          1923 | \t\tt = -1;\n          1924 | \t\tbOffset = 0;\n          1925 | \t\tcount = 0;\n          1926 | \t\treq = true;\n          1927 | \t\u00fc\n          1928 | \t\u00dfjesJcl()\n          1929 | \t\u00e4\n          1930 | \t\tif (file)\n          1931 | \t\t\tfclose(file);\n          1932 | \t\u00fc\n          1933 | \tint parse();\n          1934 | \tint generate(FILE *);\n          1935 | private:\n          1936 | \tvoid put(const char * format, ...)\n          1937 | \t\u00e4\n          1938 | \t\tva_list args;\n          1939 | \t\tva_start(args,format);\n          1940 | \t\tvsprintf(bw,format,args);\n          1941 | \t\tif (strchr(bw,'\u00d6n'))\n          1942 | \t\t\t*strchr(bw,'\u00d6n')=0;\n          1943 | \t\tif (file)\n          1944 | \t\t\tfprintf(file,\"%s\u00d6n\",bw);\n          1945 | \t\tJOBENV::DEBUG(1,\" jcl:\",bw);\n          1946 | \t\tMsg(8120)<<bw<<eol;\n          1947 | \t\tva_end(args);\n          1948 | \t\u00fc\n          1949 | \tvoid splitLine(char * l)\n          1950 | \t\u00e4\n          1951 | \t\tif (strlen(l)<70)\n          1952 | \t\t\tput(\"//%s\",l);\n          1953 | \t\telse\n          1954 | \t\t\u00e4\n          1955 | \t\t\tchar * c = strchr(l,',');\n          1956 | \t\t\tchar sc;\n          1957 | \t\t\tif (c)\n          1958 | \t\t\t\u00e4\n          1959 | \t\t\t\tsc = *(c+1);\n          1960 | \t\t\t\t*(c+1) = 0;\n          1961 | \t\t\t\u00fc\n          1962 | \t\t\tput(\"//%s\",l);\n          1963 | \t\t\tif (c)\n          1964 | \t\t\t\u00e4\n          1965 | \t\t\t\t*(c+1)=sc;\n          1966 | \t\t\t\t*c =' ';\n          1967 | \t\t\t\u00fc\n          1968 | \t\t\tsplitLine(c);\n          1969 | \t\t\u00fc\n          1970 | \t\u00fc\n          1971 | \tchar * get(char *buf,size_t l)\n          1972 | \t\u00e4\n          1973 | \t\tchar * r = fgets(buf,l,file);\n          1974 | \t\tJOBENV::DEBUG(1,buf);\n          1975 | \t\treturn r;\n          1976 | \t\u00fc\n          1977 | \u00fc;\n          1978 |\n          1979 | int jesJcl::generate(FILE *f)\n          1980 | \u00e4\n          1981 | \t/*\n          1982 | \tfile = f;\n          1983 | \tCHAINITER iter(lines);\n          1984 | \tput(\"//* \");\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1984.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          1985 | \tput(\"//* JOB     :%s\",reqJobname);\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1985.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          1986 | \tput(\"//* JOBNUMBER:%s\",reqJobnumber);\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1986.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          1987 | \tput(\"//* STEP    :%s\",reqStepname);\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1987.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          1988 | \tput(\"//* PROCSTEP :%s\",reqProcstep);\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1988.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          1989 | \tchar tt\u00c432\u00dc;\n          1990 | \tchar fm\u00c4\u00dc = \"%Y:%m:%d %H:%M:%S \";\n          1991 | \tformatTime(tt,sizeof(tt),fm);\n          1992 | \tput(\"//* AT      :%s\",tt);\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 1992.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          1993 | \tbool ok = true;\n          1994 | \tline * l = NULL;\n          1995 | \twhile(ok&&(l=(line *)iter.next()))\n          1996 | \t\u00e4\n          1997 | \tstrcpy(b,l->chainEid);\n          1998 | \tJOBENV::DEBUG(1,b);\n          1999 | \tswitch(l->getLineType())\n          2000 | \t\u00e4\n          2001 | \tcase execStmt:\n          2002 | \t\u00e4\n          2003 | \tb\u00c40\u00dc = b\u00c41\u00dc = '/';\n          2004 | \tif (strlen(b)>72)\n          2005 | \t\u00e4\n          2006 | \tchar * c = strstr(b,\"PARM=\");\n          2007 | \tif (c)\n          2008 | \t\u00e4\n          2009 | \t*c = 0;\n          2010 | \tput(\"%s\",b);\n          2011 | \t*c ='P';\n          2012 | \tcount++;\n          2013 | \tput(\"// %s\",c);\n          2014 | \t\u00fc\n          2015 | \telse\n          2016 | \tput(\"%s\",b);\n          2017 | \tcount++;\n          2018 | \t\u00fc\n          2019 | \tbreak;\n          2020 | \tcase steplibStmt:\n          2021 | \tcase steplibStmtConcat:\n          2022 | \tcase ddStmt:\n          2023 | \tcase ddStmtConcat:\n          2024 | \tif (l->getDD()&&l->getDataset())\n          2025 | \tif (|l->getDataset()->excluded())\n          2026 | \t\u00e4\n          2027 | \tchar w0\u00c4128\u00dc;\n          2028 | \tchar wm\u00c4128\u00dc;\n          2029 | \tchar wc\u00c4128\u00dc;\n          2030 | \tif (l->getDD()->getMember())\n          2031 | \tsprintf(wm,\"(%s)\",l->getDD()->getMember());\n          2032 | \telse\n          2033 | \twm\u00c40\u00dc = 0;\n          2034 | \tDD * dd = l->getDataset()->getFirstDd();\n          2035 | \tif (dd->getIndex())\n          2036 | \t//szm20080929    sprintf(wc,\"C%7.7d\",dd->getIndex());\n          2037 | \t//szm20090812    sprintf(wc,\".C%7.7d\",dd->getIndex());\n          2038 |\n          2039 | \tsprintf(wc,\"C%7.7d\",dd->getIndex());\n          2040 | \telse\n          2041 | \twc\u00c40\u00dc = 0;\n          2042 | \t//put(\"//* %s\",l->getDataset()->chainEid);\n =================================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 2042.18: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          2043 | \tif (strlen(wc))\n          2044 | \tsprintf(w0,\"%s.%s\",dd->chainEid,wc);\n          2045 | \telse\n          2046 | \tsprintf(w0,\"%s\",dd->chainEid);\n          2047 | \tl->getDataset()->setNewDsn(w0);\n          2048 | \tif (l->getLineType()==steplibStmt]]l->getLineType()==ddStmt)\n          2049 | \tput(\"//%s DD DISP=SHR,DSN=%s..%s%s\",l->getDD()->chainEid,parm\u00c4restHQ\u00dc,w0,wm);\n          2050 | \telse\n          2051 | \tput(\"// DD DISP=SHR,DSN=%s..%s%s\",parm\u00c4restHQ\u00dc,w0,wm);\n          2052 | \tcount++;\n          2053 | \t\u00fc\n          2054 | \telse\n          2055 | \t//if (l->getDataset()->getDisp()==dataset::temporary)\n          2056 | \tsplitLine(b+2);\n          2057 | \tbreak;\n          2058 | \tcase sysoutStmt:\n          2059 | \t//put(\"//* %s\",l->getDataset()->chainEid);\n =================================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 2059.18: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          2060 | \tput(\"//%s DD %s\",l->getDD()->chainEid,parm\u00c4restSysout\u00dc);\n          2061 | \tcount++;\n          2062 | \tbreak;\n          2063 | \tcase inlineStmt:\n          2064 | \tcase inlineData:\n          2065 | \t\u00e4\n          2066 | \tchar w\u00c4128\u00dc;\n          2067 | \tput(\"//* %s\",b);\n ===============================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 2067.16: CCN5804 (W) The characters \"/*\" are detected in a comment.\n          2068 | \tput(\"%s\",b);\n          2069 | \tsprintf(w,\"%s(JESJCLIN)\",parm\u00c4workFileName\u00dc);\n          2070 | \tFILE * jesJclinFile = fopen(genOpenName(w,b),\"r\");\n          2071 | \tif (jesJclinFile)\n          2072 | \t\u00e4\n          2073 | \tint ok = 1;\n          2074 | \tJOBENV::DEBUG(1,\"JESJCLIN read\");\n          2075 | \twhile(ok>0&&fgets(b,sizeof(b),jesJclinFile))\n          2076 | \t\u00e4\n          2077 | \tJOBENV::DEBUG(1,b);\n          2078 | \tswitch (ok)\n          2079 | \t\u00e4\n          2080 | \tcase 1:\n          2081 | \t\u00e4\n          2082 | \tmvsSTRING lin,label , stmt, rest;\n          2083 | \tif (memcmp(b,\"//\",2)==0&&b\u00c42\u00dc-'*')\n          2084 | \t\u00e4\n          2085 | \tlin = b+2;\n          2086 | \tlin.split(label,\" \",stmt,\" \",rest);\n          2087 | \t\u00fc\n          2088 | \tif (strcmp(label,reqStepname)==0 && strcmp(stmt,\"EXEC\")==0)\n          2089 | \tok = 2;\n          2090 | \t\u00fc\n          2091 | \tbreak;\n          2092 | \tcase 2:\n          2093 | \t\u00e4\n          2094 | \tmvsSTRING lin,label , stmt, rest;\n          2095 | \tif (memcmp(b,\"//\",2)==0&&b\u00c42\u00dc-'*')\n          2096 | \t\u00e4\n          2097 | \tlin = b+2;\n          2098 | \tlin.split(label,\" \",stmt,\" \",rest);\n          2099 | \t\u00fc\n          2100 | \tif (strcmp(label,l->getDD()->chainEid)==0 && strcmp(stmt,\"DD\")==0)\n          2101 | \tok = 3;\n          2102 | \t\u00fc\n          2103 | \tbreak;\n          2104 | \tcase 3:\n          2105 | \tif (memcmp(b,\"//\",2))\n          2106 | \tput(\"%s\",b);\n          2107 | \telse\n          2108 | \tok = 0;\n          2109 | \tbreak;\n          2110 | \t\u00fc\n          2111 | \t\u00fc\n          2112 | \tfclose(jesJclinFile);\n          2113 | \t\u00fc\n          2114 | \tbreak;\n          2115 | \t\u00fc\n          2116 | \tdefault:\n          2117 | \tbreak;\n          2118 | \t\u00fc\n          2119 | \t\u00fc\n          2120 | \t\u00fc\n          2121 | \treturn count;\n          2122 | \t*/\n          2123 | \u00fc\n ================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 2123.1: CCN6101 (W) A return value of type \"int\" is expected.\n          2124 |\n          2125 | int jesJcl::parse()\n          2126 | \u00e4\n          2127 | \tchar c\u00c4k32\u00dc;\n          2128 | \twhile(get(c,sizeof(c)))\n          2129 | \t\u00e4\n          2130 | \t\tif (memcmp(c+oS,JCL_COMMENT,strlen(JCL_COMMENT))==0]]\n          2131 | \t\t\tmemcmp(c+oS,JCL_COMMENT_XX,strlen(JCL_COMMENT_XX))==0]]\n          2132 | \t\t\tmemcmp(c+oS,JCL_JES2,strlen(JCL_JES2))==0)\n          2133 | \t\t\tcontinue;\n          2134 |\n          2135 | \t\tc\u00c4oS-1\u00dc = 0;\n          2136 | \t\tint seq = atoi(c);\n          2137 | \t\tchar name\u00c49\u00dc;\n          2138 | \t\tchar stmt\u00c49\u00dc;\n          2139 | \t\tint i=0;\n          2140 | \t\tint j=0;\n          2141 | \t\tint o=0;\n          2142 | \t\tchar stepName\u00c49\u00dc;\n          2143 | \t\tchar procStep\u00c49\u00dc;\n          2144 |\n          2145 | \t\tif (seq)\n          2146 | \t\t\u00e4\n          2147 | \t\t\tif (bOffset>0)\n          2148 | \t\t\t\u00e4\n          2149 | \t\t\t\tlines.addlast(new line(b));\n          2150 | \t\t\t\tbOffset = 0;\n          2151 | \t\t\t\u00fc\n          2152 | \t\t\tfor(i=0;c\u00c4oN+i\u00dc-' '&&i<8;i++)\n          2153 | \t\t\t\tname\u00c4i\u00dc=c\u00c4oN+i\u00dc;\n          2154 | \t\t\tname\u00c4i\u00dc =0;\n          2155 | \t\t\tfor(;c\u00c4oN+i\u00dc==' '&&i<70;i++);\n          2156 | \t\t\tif (i>16)\n          2157 | \t\t\t\tcontinue;\n          2158 | \t\t\tfor(o=oN+i,j=0;c\u00c4o+j\u00dc-' '&&j<8;j++)\n          2159 | \t\t\t\tstmt\u00c4j\u00dc=c\u00c4o+j\u00dc;\n          2160 | \t\t\tstmt\u00c4j\u00dc = 0;\n          2161 | \t\t\tt = -1;\n          2162 | \t\t\tfor(i=0;jclTypes\u00c4i\u00dc.t>=0&&strcmp(stmt,jclTypes\u00c4i\u00dc.n);i++);\n          2163 | \t\t\tt = jclTypes\u00c4i\u00dc.t;\n          2164 |\n          2165 | \t\t\tif(jclTypes\u00c4i\u00dc.t<20)\n          2166 | \t\t\t\tcontinue;\n          2167 |\n          2168 | \t\t\tif (t==TYPE_EXEC)\n          2169 | \t\t\t\u00e4\n          2170 | \t\t\t\tprocStep\u00c40\u00dc = 0;\n          2171 | \t\t\t\tfor(i=o+j;i<o+j+8&&c\u00c4i\u00dc==' ';i++);\n          2172 | \t\t\t\tif (memcmp(c+oS,\"++\",2)&&memcmp(c+oS,\"XX\",2))\n          2173 | \t\t\t\t\tstrcpy(stepName,name);\n          2174 | \t\t\t\telse\n          2175 | \t\t\t\t\tstrcpy(procStep,name);\n          2176 | \t\t\t\t//stop = req;\n          2177 | \t\t\t\tJOBENV::DEBUG(1,\"step:\",stepName);\n          2178 | \t\t\t\tJOBENV::DEBUG(1,\"procStep:\",procStep);\n          2179 | \t\t\t\tstrcpy(actualStepName,stepName);\n          2180 | \t\t\t\tstrcpy(actualProcstepName,procStep);\n          2181 | \t\t\t\u00fc\n          2182 | \t\t\tstrcpy(b,c+oS);\n          2183 | \t\t\tbOffset=strlen(b);\n          2184 | \t\t\tif (bOffset>0&&(memcmp(c+oS,\"++\",2)&&memcmp(c+oS,\"XX\",2)))\n          2185 | \t\t\t\u00e4\n          2186 | \t\t\t\tlines.addlast(new line(b));\n          2187 | \t\t\t\tbOffset = 0;\n          2188 | \t\t\t\u00fc\n          2189 | \t\t\u00fc\n          2190 | \t\telse\n          2191 | \t\t\u00e4\n          2192 | \t\t\tif (memcmp(c+oS,JCL_SUBSTITUTION,strlen(JCL_SUBSTITUTION))==0)\n          2193 | \t\t\t\u00e4\n          2194 | \t\t\t\tif (t==TYPE_EXEC)\n          2195 | \t\t\t\t\u00e4\n          2196 | \t\t\t\t\tsprintf(b,\"//%s EXEC %s\",name,c+oS+strlen(JCL_SUBSTITUTION));\n          2197 | \t\t\t\t\twhile(*(c+strlen(c)-1)==','&&get(c,sizeof(c)))\n          2198 | \t\t\t\t\t\tsprintf(b+strlen(b),\"%s\",c+oS);\n          2199 | \t\t\t\t\tlines.addlast(new line(b));\n          2200 | \t\t\t\t\tbOffset = 0;\n          2201 | \t\t\t\t\u00fc\n          2202 | \t\t\t\telse\n          2203 | \t\t\t\t\tif (t==TYPE_DD)\n          2204 | \t\t\t\t\t\u00e4\n          2205 | \t\t\t\t\t\tsprintf(b,\"//%s DD %s\",name,c+oS+strlen(JCL_SUBSTITUTION));\n          2206 | \t\t\t\t\t\twhile((*c+strlen(c)-1)==','&&get(c,sizeof(c)))\n          2207 | \t\t\t\t\t\t\tsprintf(b+strlen(b),\"%s\",c+oS);\n          2208 | \t\t\t\t\t\tlines.addlast(new line(b));\n          2209 | \t\t\t\t\t\tbOffset = 0;\n          2210 | \t\t\t\t\t\u00fc\n          2211 | \t\t\t\u00fc\n          2212 | \t\t\telse\n          2213 | \t\t\t\tsprintf(b+strlen(b),\"%s\",c+oS);\n          2214 | \t\t\u00fc\n          2215 | \t\u00fc\n          2216 | \tif (bOffset>0)\n          2217 | \t\tlines.addlast(new line(b));\n          2218 | \treturn 1;\n          2219 | \u00fc\n          2220 |\n          2221 | char DDs::lastdd\u00c49\u00dc;\n          2222 | int  DDs::concatIndex;\n          2223 |\n          2224 | int _rexxjcl()\n          2225 | \u00e4\n          2226 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          2227 | \t//printf(\"starting rexxjcl\");\n          2228 | \tchar filename\u00c416\u00dc;\n          2229 | \tsprintf(filename,\"//DD:%s\",argv\u00c41\u00dc);\n          2230 | \tREXXVAR rexx(JOBENV::debug);\n          2231 | \tint stepC = 0;\n          2232 | \trexx.set(var(\"JCL\",0),stepC);\n          2233 | \tFILE * jclFile = fopen(filename,\"r,noseek\");\n          2234 | \tif (jclFile)\n          2235 | \t\u00e4\n          2236 | \t\tjesjcl = new jesJcl(jclFile);\n          2237 | \t\tif (|jesjcl->parse())\n          2238 | \t\t\tprintf(\" parse error\");\n          2239 | \t\telse\n          2240 | \t\t\tif (JOBENV::debug)\n          2241 | \t\t\t\tsteps.print();\n          2242 | \t\tfclose(jclFile);\n          2243 | \t\u00fc\n          2244 | \telse\n          2245 | \t\tprintf(\"file open error\");\n          2246 | \tSTEP * step = (STEP *)steps.goFirst();\n          2247 |\n          2248 | \twhile (step)\n          2249 | \t\u00e4\n          2250 | \t\tstepC++;\n          2251 | \t\trexx.set(var(\"JCL\",stepC,\"STEP\"),step->getStep());\n          2252 | \t\trexx.set(var(\"JCL\",stepC,\"PROCSTEP\"),step->getProcstep());\n          2253 | \t\trexx.set(var(\"JCL\",stepC,\"PGM\"),step->getPgm());\n          2254 | \t\trexx.set(var(\"JCL\",stepC,\"PARM\"),step->getParm());\n          2255 | \t\tDDs * dds = step->getDDs();\n          2256 | \t\tint ddC = 0;\n          2257 | \t\tif (dds)\n          2258 | \t\t\u00e4\n          2259 | \t\t\tDD * dd = (DD *)dds->goFirst();\n          2260 | \t\t\twhile(dd)\n          2261 | \t\t\t\u00e4\n          2262 | \t\t\t\tddC++;\n          2263 | \t\t\t\trexx.set(var(\"JCL\",stepC,\"DD\",ddC,\"DDNAME\"),dd->chainEid);\n          2264 | \t\t\t\trexx.set(var(\"JCL\",stepC,\"DD\",ddC,\"DSN\"),dd->getLine()->getDataset()->getDsn());\n          2265 | \t\t\t\tdd = (DD *)dds->goNext();\n          2266 | \t\t\t\u00fc\n          2267 | \t\t\trexx.set(var(\"JCL\",stepC,\"DD\",0),ddC);\n          2268 | \t\t\u00fc\n          2269 | \t\tstep = (STEP *)steps.goNext();\n          2270 | \t\u00fc\n          2271 | \trexx.set(var(\"JCL\",0),stepC);\n          2272 | \tif (JOBENV::debug)\n          2273 | \t\u00e4\n          2274 | \t\tprintf(\"printing ddds\u00d6n\");\n          2275 | \t\tdds.print_all_ids();\n          2276 | \t\tprintf(\"printing steps\u00d6n\");\n          2277 | \t\tsteps.print_all_ids();\n          2278 | \t\tprintf(\"printing datasetList\u00d6n\");\n          2279 | \t\tdatasetList.print_all_ids();\n          2280 | \t\tprintf(\"ending rexxjcl\");\n          2281 | \t\u00fc\n          2282 | \treturn 0;\n          2283 | \u00fc\n          2284 |\n          2285 | char * rexxSMFTimeDate(int &time, int &date)\n          2286 | \u00e4\n          2287 | \tstatic char w\u00c4128\u00dc= \"\";\n          2288 | \tint _date\u00c42\u00dc;\n          2289 | \t_date\u00c40\u00dc = 0;\n          2290 | \t_date\u00c41\u00dc = date;\n          2291 | \tint dateI = __cvb((char *)_date);\n          2292 | \tint rest , v , ss, mm, hh;\n          2293 | \trest = time%100;\n          2294 | \tv  =  time/100;\n          2295 | \tss =  v%60;\n          2296 | \tv /= 60;\n          2297 | \tmm =  v%60;\n          2298 | \thh =  v/60;\n          2299 | \tint d =dateI/1000;\n          2300 | \tsprintf(w,\" %d.%d \",(dateI/1000)+1900,dateI%1000);\n          2301 | \tsprintf(w+strlen(w),\"%2.2d:%2.2d:%2.2d:%2.2d\u00d6n\",hh,mm,ss,rest);\n          2302 | \treturn w;\n          2303 | \u00fc\n          2304 |\n          2305 | typedef struct cvtxtnt2 * cvtxtnt2P;\n          2306 |\n          2307 | const char * rexxSMFtod(pULL tod,char * format=NULL)\n          2308 | \u00e4\n          2309 | \tstatic char w\u00c4128\u00dc;\n          2310 | \tstruct tm *  p_tm;\n          2311 | \ttime_t     t;\n          2312 | \tunsigned long  rest;\n          2313 | \tunsigned long long microsec = (*tod>>12);\n          2314 | \tt      = microsec/1000000-epoch;\n          2315 | \tp_tm = localtime(&t);\n          2316 |\n          2317 | \trest =  microsec%1000000;\n          2318 | \tif (format)\n          2319 | \t\tstrftime(w,sizeof(w),format,p_tm);\n          2320 | \telse\n          2321 | \t\u00e4\n          2322 | \t\tstrftime(w,sizeof(w),\"%FT%T\",p_tm);\n          2323 | \t\tsprintf(w+strlen(w),\".%6.6d\",rest);\n          2324 | \t\u00fc\n          2325 | \treturn ((const char *)w);\n          2326 | \u00fc\n          2327 |\n          2328 | class Smf2Job :public chainE\n          2329 | \u00e4\n          2330 | private:\n          2331 | \tchar jobname\u00c49\u00dc;\n          2332 | \tchar jobid\u00c49\u00dc;\n          2333 | \tchar userid\u00c49\u00dc;\n          2334 | public:\n          2335 | \tSmf2Job(const char *p,const char * jp,const  char * ip,char * up):chainE(p)\n          2336 | \t\u00e4\n          2337 | \t\tstrcpy(jobname,jp);\n          2338 | \t\tstrcpy(jobid,ip);\n          2339 | \t\tstrcpy(userid,up);\n          2340 | \t\u00fc\n          2341 | \tvirtual \u00dfSmf2Job()\n          2342 | \t\u00e4\u00fc\n          2343 |\n          2344 | \tconst char * getJobname()\n          2345 | \t\u00e4\n          2346 | \t\treturn ((const char *)jobname);\n          2347 | \t\u00fc\n          2348 |\n          2349 | \tconst char * getJobid()\n          2350 | \t\u00e4\n          2351 | \t\treturn ((const char *)jobid);\n          2352 | \t\u00fc\n          2353 | \tconst char * getUserid()\n          2354 | \t\u00e4\n          2355 | \t\treturn ((const char *)userid);\n          2356 | \t\u00fc\n          2357 |\n          2358 | \u00fc;\n          2359 |\n          2360 | SORTEDmCHAIN * Smf2Jobs = new SORTEDmCHAIN();\n          2361 |\n          2362 | int rexxSMF(REXXVAR & rexx ,int & index,char * b,bool & idflag,size_t rl,int need30 = 1, int  need92\n          2362 |  = 1, int need102 = 1)\n          2363 | \u00e4\n          2364 | \tchar recordQual\u00c416\u00dc;\n          2365 | \tcounters\u00c4smfrcd30P(b)->smf30rty\u00dc++;\n          2366 | \tswitch(smfrcd30P(b)->smf30rty)\n          2367 | \t\u00e4\n          2368 | \tcase 14:\n          2369 | \tcase 15:\n          2370 | \t\t\u00e4\n          2371 | \t\t\tchar progname\u00c4256\u00dc;\n          2372 | \t\t\tsmf14P smf14p = (smf14P)b;\n          2373 | \t\t\tint sdc = smf14p->smf14sdc; //size of DCB segment\n          2374 | \t\t\tint nuc = smf14p->smf14nuc; //no. of UCB sections\n          2375 | \t\t\tint suc = smf14p->smf14suc; //size of each of UCB sections\n          2376 | \t\t\tint excp = 0;\n          2377 | \t\t\tmemcpy(&rst_15,smf14p->smf14rst,4);\n          2378 | \t\t\tmemcpy(&rsd_15,smf14p->smf14rsd,4);\n          2379 | \t\t\tif ((rst_30 |= rst_15 ]] rsd_30 |= rsd_15 ]] memcmp(jobname,smf14p->smf14jbn,8))&&strcasecmp(\"rex\n          2379 | xsmf\",argv\u00c40\u00dc)==0)\n          2380 | \t\t\t\tbreak;\n          2381 | \t\t\tif (nuc > 0)\n          2382 | \t\t\t\texcp = *(int*)smf14p->smfexcp;\n          2383 | \t\t\tif (excp == 0)\n          2384 | \t\t\t\tbreak;\n          2385 | \t\t\tif (JOBENV::debug)\n          2386 | \t\t\t\t_dump(\" SMF 14 or 15 record dump\",b,rl);\n          2387 | \t\t\tunsigned char* dcbp = smf14p->smfdcbor; //DCB Section\n          2388 | \t\t\tunsigned char* ucbp = smf14p->smfdcbor + sdc; //UCB Section\n          2389 | \t\t\tunsigned char* eis1 = ucbp + nuc*suc; //Extended Information Section\n          2390 | \t\t\tunsigned char* eisp = ucbp + nuc*suc;\n          2391 | \t\t\tshort int smf14esll = ((smf14EISP)eisp)->_smf14esl-2; //length of all Extended Information Sectio\n          2391 | ns\n          2392 | \t\t\tunsigned char* eispr = eisp + 2;\n          2393 | \t\t\tshort int eispl = 1; //length of next Extended Information Section\n          2394 | \t\t\tint write_14_15 = 0; //=0 do not write line\n          2395 | \t\t\tchar stepname_14\u00c49\u00dc;\n          2396 | \t\t\tchar progname_14\u00c49\u00dc;\n          2397 | \t\t\twhile (smf14esll > 0 && eispl > 0)\n          2398 | \t\t\t\u00e4\n          2399 | \t\t\t\teispl = ((smf14EISP)eispr)->_smf14esl; //length of next Extended Information Section\n          2400 | \t\t\t\tchar sty = ((smf14EISP)eispr)->_smf14sty; //Section type\n          2401 | \t\t\t\tswitch(sty)\n          2402 | \t\t\t\t\u00e4\n          2403 | \t\t\t\tcase smf14stp:\n          2404 | \t\t\t\t\tstrncpy(stepname_14,(char*)((smf14STEP)eispr)->_smf14spn,8);\n          2405 | \t\t\t\t\tstrncpy(progname_14,(char*)((smf14STEP)eispr)->_smf14pgn,8);\n          2406 | \t\t\t\t\tstepname_14\u00c48\u00dc = 0;\n          2407 | \t\t\t\t\tprogname_14\u00c48\u00dc = 0;\n          2408 | \t\t\t\t\tif (*pstepname == 0 && *pprogname == 0)\n          2409 | \t\t\t\t\t\twrite_14_15 = 1;\n          2410 | \t\t\t\t\telse if (*pstepname && |strcasecmp(stepname_14,pstepname))\n          2411 | \t\t\t\t\t\twrite_14_15 = 1;\n          2412 | \t\t\t\t\telse if (*pprogname && |strcasecmp(progname_14,pprogname))\n          2413 | \t\t\t\t\t\twrite_14_15 = 1;\n          2414 | \t\t\t\t\tbreak;\n          2415 | \t\t\t\tdefault:\n          2416 | \t\t\t\t\tbreak;\n          2417 | \t\t\t\t\u00fc\n          2418 | \t\t\t\tsmf14esll -= eispl;\n          2419 | \t\t\t\teispr += eispl;\n          2420 | \t\t\t\u00fc\n          2421 | \t\t\t//printf(\"smf14p=%p ucbp=%p eispr=%p eisp=%p smf14esll=%d\u00d6n\",smf14p,ucbp,eispr,eisp,smf14esll);\n          2422 | \t\t\tif (write_14_15)\n          2423 | \t\t\t\u00e4\n          2424 | \t\t\t\tchar dsname\u00c4128\u00dc;\n          2425 | \t\t\t\twrite_30 = 1; //write step sum\n          2426 | \t\t\t\tif (*stepname == 0)\n          2427 | \t\t\t\t\u00e4\n          2428 | \t\t\t\t\tstrcpy(stepname,stepname_14);\n          2429 | \t\t\t\t\tstrcpy(progname,progname_14);\n          2430 | \t\t\t\t\u00fc\n          2431 | \t\t\t\tstrncpy(dsname,(const char*)smf14p->smfjfcb1,44);\n          2432 | \t\t\t\tdsname\u00c444\u00dc = 0;\n          2433 | \t\t\t\tif (smf14p->smfjfcb1\u00c444\u00dc-' ')\n          2434 | \t\t\t\t\u00e4\n          2435 | \t\t\t\t\tint i = 0;\n          2436 | \t\t\t\t\tint j = 0;\n          2437 | \t\t\t\t\tfor(;dsname\u00c4i\u00dc-' '&&dsname\u00c4i\u00dc-0;i++);\n          2438 | \t\t\t\t\tdsname\u00c4i++\u00dc= '(';\n          2439 | \t\t\t\t\tfor(;j<8&&smf14p->smfjfcb1\u00c444+j\u00dc>='A';j++)\n          2440 | \t\t\t\t\t\tdsname\u00c4i+j\u00dc=smf14p->smfjfcb1\u00c444+j\u00dc;\n          2441 | \t\t\t\t\tdsname\u00c4i+j\u00dc=')';\n          2442 | \t\t\t\t\tdsname\u00c4i+j+1\u00dc=0;\n          2443 | \t\t\t\t\u00fc\n          2444 | \t\t\t\tif (strcasecmp(\"rexxdsmf\",argv\u00c40\u00dc)==0&&stcpma(dsname,argv\u00c41\u00dc)==0)\n          2445 | \t\t\t\t\tbreak;\n          2446 |\n          2447 | \t\t\t\tif (smf14p->smf14rty == 14)\n          2448 | \t\t\t\t\tstrcpy(recordQual,\"SMF14\");\n          2449 | \t\t\t\telse\n          2450 | \t\t\t\t\tstrcpy(recordQual,\"SMF15\");\n          2451 | \t\t\t\tindex++;\n          2452 | \t\t\t\tif (strcasecmp(\"rexxdsmf\",argv\u00c40\u00dc)==0)\n          2453 | \t\t\t\t\u00e4\n          2454 | \t\t\t\t\tchar smf2job\u00c417\u00dc;\n          2455 | \t\t\t\t\tmemcpy(smf2job,smf14p->smf14jbn,16);\n          2456 | \t\t\t\t\tsmf2job\u00c416\u00dc = 0;\n          2457 | \t\t\t\t\tSmf2Job * pjob = (Smf2Job *)Smf2Jobs->search(smf2job);\n          2458 | \t\t\t\t\tif (pjob)\n          2459 | \t\t\t\t\t\u00e4\n          2460 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"JOBNAME\"),pjob->getJobname());\n          2461 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"JOBID\"),pjob->getJobid());\n          2462 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"USERID\"),(char *)smf14p->smf14uid,8);\n          2463 |\n          2464 | \t\t\t\t\t\u00fc\n          2465 | \t\t\t\t\u00fc\n          2466 | \t\t\t\trexx.set(var(\"SMF\",index,\"TYPE\"),recordQual);\n          2467 | \t\t\t\trexx.set(var(\"SMF\",index,\"DD\"),(char *)smf14p->smftioe5,8);\n          2468 | \t\t\t\trexx.set(var(\"SMF\",index,\"TIME\"),rexxSMFTimeDate(*(int *)smf14p->smf14tme,*(int *)smf14p->smf14d\n          2468 | te));\n          2469 | \t\t\t\trexx.set(var(\"SMF\",index,\"DD\"),(char *)smf14p->smftioe5,8);\n          2470 | \t\t\t\trexx.set(var(\"SMF\",index,\"DSN\"),dsname);\n          2471 | \t\t\t\trexx.set(var(\"SMF\",index,\"EXCP\"),excp);\n          2472 | \t\t\t\trexx.set(var(\"SMF\",index,\"STEP\"),stepname);\n          2473 | \t\t\t\trexx.set(var(\"SMF\",index,\"PROCSTEP\"),pstepname);\n          2474 | \t\t\t\trexx.set(var(\"SMF\",index,\"PROGRAM\"),progname);\n          2475 |\n          2476 |\n          2477 | \t\t\t\tchar work\u00c410\u00dc = \"\";\n          2478 | \t\t\t\tif (smf14p->smf14rin\u00c40\u00dc & (unsigned char)smf14dad)\n          2479 | \t\t\t\t\tstrcpy(work,\"DASD\");\n          2480 | \t\t\t\tif (smf14p->smf14rin\u00c40\u00dc & (unsigned char)smf14tds)\n          2481 | \t\t\t\t\tstrcpy(work,\"Temporary\");\n          2482 | \t\t\t\tif (smf14p->smf14rin\u00c40\u00dc & (unsigned char)smf14vio)\n          2483 | \t\t\t\t\tstrcpy(work,\"VIO \");\n          2484 | \t\t\t\trexx.set(var(\"SMF\",index,\"DSTYPE\"),work);\n          2485 |\n          2486 | \t\t\t\u00fc\n          2487 | \t\t\u00fc\n          2488 | \t\tbreak;\n          2489 | \tcase 30:\n          2490 | \t\t\u00e4\n          2491 |\n          2492 | \t\t\tswitch (*(short *)(smfrcd30P(b)->smf30stp))\n          2493 | \t\t\t\u00e4\n          2494 | \t\t\tcase 1:\n          2495 | \t\t\t\tif ((argv\u00c41\u00dc&&memcmp(argv\u00c41\u00dc,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jnm,8)==0)]]strcasecmp(arg\n          2495 | v\u00c40\u00dc,\"rexxdsmf\")==0)\n          2496 | \t\t\t\t\u00e4\n          2497 | \t\t\t\t\tmemcpy(jobid,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jnm,8);\n          2498 | \t\t\t\t\tjobid\u00c48\u00dc = 0;\n          2499 | \t\t\t\t\tmemcpy(jobname,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jbn,8);\n          2500 | \t\t\t\t\tjobname\u00c48\u00dc = 0;\n          2501 | \t\t\t\t\tmemcpy(username,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30usr,8);\n          2502 | \t\t\t\t\tusername\u00c48\u00dc = 0;\n          2503 | \t\t\t\t\trst_30 = smf30idP(b+smfrcd30P(b)->smf30iof)->smf30rst;\n          2504 | \t\t\t\t\tmemcpy(&rsd_30,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30rsd,4);\n          2505 | \t\t\t\t\tif (strcasecmp(\"rexxdsmf\",argv\u00c40\u00dc)==0)\n          2506 | \t\t\t\t\t\u00e4\n          2507 | \t\t\t\t\t\tchar smf2job\u00c417\u00dc;\n          2508 | \t\t\t\t\t\tmemcpy(smf2job,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jbn,8);\n          2509 | \t\t\t\t\t\tmemcpy(smf2job+8,(char *)&(smf30idP(b+smfrcd30P(b)->smf30iof)->smf30rst),4);\n          2510 | \t\t\t\t\t\tmemcpy(smf2job+12,(char *)&(smf30idP(b+smfrcd30P(b)->smf30iof)->smf30rsd),4);\n          2511 | \t\t\t\t\t\tsmf2job\u00c416\u00dc = 0;\n          2512 | \t\t\t\t\t\tSmf2Jobs->add(new Smf2Job(smf2job,jobname,jobid,username));\n          2513 | \t\t\t\t\t\u00fc\n          2514 | \t\t\t\t\u00fc\n          2515 | \t\t\t\telse\n          2516 | \t\t\t\t\treturn 0;\n          2517 | \t\t\t\tbreak;\n          2518 | \t\t\tcase 2:\n          2519 | \t\t\t\treturn 0;\n          2520 | \t\t\t\tbreak;\n          2521 | \t\t\tcase 3:\n          2522 | \t\t\t\treturn 0;\n          2523 | \t\t\t\tbreak;\n          2524 | \t\t\tcase 4:\n          2525 | \t\t\t\tbreak;\n          2526 | \t\t\tcase 5:\n          2527 | \t\t\t\tbreak;\n          2528 | \t\t\tcase 6:\n          2529 | \t\t\t\tbreak;\n          2530 | \t\t\tdefault:\n          2531 | \t\t\t\tbreak;\n          2532 | \t\t\t\u00fc\n          2533 | \t\t\tif (strcasecmp(argv\u00c40\u00dc,\"rexxdsmf\")==0)\n          2534 | \t\t\t\tbreak;\n          2535 | \t\t\tif (memcmp(argv\u00c41\u00dc,smf30idP(b+smfrcd30P(b)->smf30iof)->smf30jnm,8))\n          2536 | \t\t\t\tbreak;\n          2537 | \t\t\tif (JOBENV::debug)\n          2538 | \t\t\t\t_dump(\" SMF 30 record dump\",b,rl);\n          2539 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30ion)&&|idflag)\n          2540 | \t\t\t\u00e4\n          2541 | \t\t\t\tsmf30idP p = smf30idP(b+smfrcd30P(b)->smf30iof);\n          2542 | \t\t\t\tstrcpy(recordQual,\"SMF30\");\n          2543 | \t\t\t\trexx.set(var(\"SMF\",0,\"JOBNAME\"),(char *)p->smf30jbn,8);\n          2544 | \t\t\t\trexx.set(var(\"SMF\",0,\"JOBID\"),jobid);\n          2545 | \t\t\t\trexx.set(var(\"SMF\",0,\"USER\"),(const char *)p->smf30usr);\n          2546 | \t\t\t\trexx.set(var(\"SMF\",index,\"TIME\"),rexxSMFTimeDate(*(int *)smfrcd30P(b)->smf30tme,*(int *)smfrcd30\n          2546 | P(b)->smf30dte));\n          2547 | \t\t\t\tidflag = true;\n          2548 | \t\t\t\u00fc\n          2549 | \t\t\telse\n          2550 | \t\t\t\u00e4\n          2551 | \t\t\t\tsmf30idP p = smf30idP(b+smfrcd30P(b)->smf30iof);\n          2552 | \t\t\t\tindex++;\n          2553 | \t\t\t\tstrcpy(recordQual,\"SMF30\");\n          2554 | \t\t\t\trexx.set(var(\"SMF\",index,\"TYPE\"),recordQual);\n          2555 | \t\t\t\trexx.set(var(\"SMF\",index,\"PROGRAM\"),(char *)p->smf30pgm,8);\n          2556 | \t\t\t\trexx.set(var(\"SMF\",index,\"TIME\"),rexxSMFTimeDate(*(int *)smfrcd30P(b)->smf30tme,*(int *)smfrcd30\n          2556 | P(b)->smf30dte));\n          2557 | \t\t\t\trexx.set(var(\"SMF\",index,\"STEP\"),stepname);\n          2558 | \t\t\t\trexx.set(var(\"SMF\",index,\"PROCSTEP\"),pstepname);\n          2559 | \t\t\t\u00fc\n          2560 | \t\t\t// I/O activity\n          2561 |\n          2562 |\n          2563 | \t\t\tint excp = 0;\n          2564 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30uon))\n          2565 | \t\t\t\texcp = smf30uraP(b+smfrcd30P(b)->smf30uof)->smf30tep;\n          2566 | \t\t\trexx.set(var(\"SMF\",index,\"EXCP\"),excp);\n          2567 |\n          2568 | \t\t\t// Processor cumulative CPU\n          2569 | \t\t\tdouble cpu = 0;\n          2570 | \t\t\tdouble srb = 0;\n          2571 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30con))\n          2572 | \t\t\t\u00e4\n          2573 | \t\t\t\tsmf30casP p = smf30casP(b+smfrcd30P(b)->smf30cof);\n          2574 | \t\t\t\tcpu = float(p->smf30cpt)/100;\n          2575 | \t\t\t\tsrb = float(p->smf30cps)/100;\n          2576 | \t\t\t\u00fc\n          2577 | \t\t\trexx.set(var(\"SMF\",index,\"CPU\"),cpu);\n          2578 | \t\t\trexx.set(var(\"SMF\",index,\"SRB\"),cpu);\n          2579 |\n          2580 | \t\t\t// EXCP section\n          2581 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30eon))\n          2582 | \t\t\t\u00e4\n          2583 | \t\t\t\t/*\n          2584 | \t\t\t\tsmf30expP p = smf30expP(b+smfrcd30P(b)->smf30eof);\n          2585 | \t\t\t\tfor(int i=0;i<*(short*)smfrcd30P(b)->smf30eon;i++)\n          2586 | \t\t\t\t\u00e4\n          2587 | \t\t\t\tif (p->smf30blk)\n          2588 | \t\t\t\tprintf(\" Device(CUA):%2.2X%2.2X EXCP count:%8.8d\u00d6n\",\n          2589 | \t\t\t\tp->smf30cua\u00c40\u00dc,p->smf30cua\u00c41\u00dc,p->smf30blk);\n          2590 | \t\t\t\tp = smf30expP((char *)p+*(short *)smfrcd30P(b)->smf30eln);\n          2591 | \t\t\t\t\u00fc\n          2592 | \t\t\t\t*/\n          2593 | \t\t\t\u00fc\n          2594 | \t\t\tint storage = 0;\n          2595 | \t\t\tint region = 0;\n          2596 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30ron))\n          2597 | \t\t\t\u00e4\n          2598 | \t\t\t\tsmf30sapP p = smf30sapP(b+smfrcd30P(b)->smf30rof);\n          2599 | \t\t\t\tregion = (*(int *)p->smf30rgn)/1024;\n          2600 | \t\t\t\tstorage =  p->smf30eur/(1024*1024);\n          2601 | \t\t\t\u00fc\n          2602 | \t\t\trexx.set(var(\"SMF\",index,\"REGION\"),region);\n          2603 | \t\t\trexx.set(var(\"SMF\",index,\"STORAGE\"),storage);\n          2604 |\n          2605 | \t\t\tint totalsu = 0;\n          2606 | \t\t\tint cpusu = 0;\n          2607 | \t\t\tint srbsu = 0;\n          2608 | \t\t\tint iosu = 0;\n          2609 | \t\t\t// Performance\n          2610 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30pon))\n          2611 | \t\t\t\u00e4\n          2612 | \t\t\t\tsmf30prfP p = smf30prfP(b+smfrcd30P(b)->smf30pof);\n          2613 | \t\t\t\ttotalsu =   p->smf30srv;\n          2614 | \t\t\t\tcpusu = p->smf30csu;\n          2615 | \t\t\t\tsrbsu = p->smf30srb;\n          2616 | \t\t\t\tiosu = p->smf30io;\n          2617 | \t\t\t\u00fc\n          2618 | \t\t\trexx.set(var(\"SMF\",index,\"TOTALSU\"),totalsu);\n          2619 | \t\t\trexx.set(var(\"SMF\",index,\"CPUSU\"),cpusu);\n          2620 | \t\t\trexx.set(var(\"SMF\",index,\"SRBSU\"),srbsu);\n          2621 | \t\t\trexx.set(var(\"SMF\",index,\"IOSU\"),iosu);\n          2622 | \t\t\tif (*(short *)(smfrcd30P(b)->smf30stp)==5)\n          2623 | \t\t\t\treturn 5;\n          2624 | \t\t\u00fc\n          2625 | \t\tbreak;\n          2626 | \tcase 92:\n          2627 | \t\tif (smfrcd92P(b)->smf92ion)\n          2628 | \t\t\u00e4\n          2629 | \t\t\tsmf92idP pid = smf92idP(b+smfrcd92P(b)->smf92iof);\n          2630 | \t\t\tif (|need92]](pid->smf92rst-rst_30)]]memcmp(pid->smf92rsd,(char *)&rsd_30,4)\n          2631 | \t\t\t\t]]memcmp(jobname,pid->smf92jbn,8))\n          2632 | \t\t\t\tbreak;\n          2633 | \t\t\tif (JOBENV::debug)\n          2634 | \t\t\t\t_dump(\" SMF 92 record dump\",b,rl);\n          2635 | \t\t\tstrcpy(recordQual,\"SMF92\");\n          2636 | \t\t\tswitch (smfrcd92P(b)->smf92stp)\n          2637 | \t\t\t\u00e4\n          2638 | \t\t\tcase 11:\n          2639 | \t\t\t\tif (smfrcd92P(b)->smf92don&&smfrcd92P(b)->smf92dln&&smfrcd92P(b)->smf92dof)\n          2640 | \t\t\t\t\u00e4\n          2641 | \t\t\t\t\tsmf92fclP p = smf92fclP(b+smfrcd92P(b)->smf92dof);\n          2642 | \t\t\t\t\tfor(int i=0;i<smfrcd92P(b)->smf92don;i++)\n          2643 | \t\t\t\t\t\u00e4\n          2644 | \t\t\t\t\t\tchar name\u00c465\u00dc;\n          2645 | \t\t\t\t\t\tname\u00c464\u00dc=0;\n          2646 | \t\t\t\t\t\tif (p->smf92cty==FT_SOCKET)\n          2647 | \t\t\t\t\t\t\tsprintf(name,\" SOCKET inode:%d device:%d\",p->smf92cin,p->smf92cdn);\n          2648 | \t\t\t\t\t\telse\n          2649 | \t\t\t\t\t\t\tmemcpy(name,p->smf92cpn,sizeof(p->smf92cpn));\n          2650 | \t\t\t\t\t\tindex++;\n          2651 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"READ\"),p->smf92cir);\n          2652 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"WRITE\"),p->smf92ciw);\n          2653 |\n          2654 | \t\t\t\t\t\tp = smf92fclP((char *)p+smfrcd92P(b)->smf92dln);\n          2655 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"TYPE\"),recordQual);\n          2656 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"TIME\"),rexxSMFTimeDate(smfrcd92P(b)->smf92tme,smfrcd92P(b)->smf92dte\n          2656 | ));\n          2657 | \t\t\t\t\t\t/*    rexx.set(var(\"SMF\",index,\"TIME\"),rexxSMFtod(pULL(p->smf92ctc)));*/\n          2658 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"PATH\"),name);\n          2659 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STEP\"),stepname);\n          2660 | \t\t\t\t\t\trexx.set(var(\"SMF\",index,\"PROCSTEP\"),pstepname);\n          2661 |\n          2662 | \t\t\t\t\t\u00fc\n          2663 | \t\t\t\t\u00fc\n          2664 | \t\t\t\tbreak;\n          2665 | \t\t\tdefault:\n          2666 | \t\t\t\tbreak;\n          2667 | \t\t\t\u00fc\n          2668 | \t\t\u00fc\n          2669 | \t\tbreak;\n          2670 | \tcase 100:\n          2671 | \t\t//_dump(\" SMF 100 record dump\",b,rl);\n          2672 | \t\tbreak;\n          2673 | \tcase 101:\n          2674 | \t\t//_dump(\" SMF 101 record dump\",b,rl);\n          2675 | \t\tbreak;\n          2676 | \tcase 102:\n          2677 | \t\t\u00e4\n          2678 | \t\t\ttypedef struct sm102 * sm102P;\n          2679 | \t\t\ttypedef struct qwt0 * qwt0P;\n          2680 | \t\t\ttypedef struct qwhs * qwhsP;\n          2681 | \t\t\ttypedef struct qwhc * qwhcP;\n          2682 | \t\t\tqwt0P qwt0p = qwt0P(b+sizeof(struct sm102)-1);\n          2683 | \t\t\tint pso = int(qwt0p->qwt02pso);\n          2684 | \t\t\tint psl = *(short *)(qwt0p->qwt02psl);\n          2685 | \t\t\tint psn = *(short *)(qwt0p->qwt02psn);\n          2686 | \t\t\tbool our = false;\n          2687 | \t\t\tsm102P sm102p = sm102P(b);\n          2688 | \t\t\tqwhcP qwhcp = qwhcP(b+pso);\n          2689 | \t\t\tqwhsP qwhsp = NULL;\n          2690 | \t\t\twhile (|our&&(char *)qwhcp<(b+pso+psl))\n          2691 | \t\t\t\u00e4\n          2692 | \t\t\t\tif (qwhcp->qwhctyp == 1)\n          2693 | \t\t\t\t\tqwhsp = (qwhsP)qwhcp;\n          2694 | \t\t\t\tif (qwhcp->qwhctyp == 2 && strcmp((const char *)(qwhcp->qwhccv),jobid) ==0 )\n          2695 | \t\t\t\t\tour = true;\n          2696 | \t\t\t\tqwhcp = qwhcP((char *)qwhcp+*(short *)qwhcp->qwhclen);\n          2697 | \t\t\t\u00fc\n          2698 | \t\t\tif (|need102 ]] |our ]] |qwhsp)\n          2699 | \t\t\t\tbreak;\n          2700 | \t\t\tif (JOBENV::debug)\n          2701 | \t\t\t\t_dump(\" SMF 102 record dump\",b,rl);\n          2702 |\n          2703 |\n          2704 | \t\t\tchar ssid\u00c45\u00dc;\n          2705 | \t\t\tmemcpy(ssid,qwhsp->qwhsssid,4);\n          2706 | \t\t\tssid\u00c44\u00dc = 0;\n          2707 | \t\t\tstrcpy(recordQual,\"SMF102\");\n          2708 | \t\t\tchar work\u00c41024*32\u00dc;\n          2709 | \t\t\tfor(int i = 0;i<qwhsp->qwhsnsda-1;i++)\n          2710 | \t\t\t\u00e4\n          2711 | \t\t\t\tqwt0P datasection = qwt0P((char *)qwt0p+i*8+8);\n          2712 | \t\t\t\tint offset = int(datasection->qwt02pso);\n          2713 | \t\t\t\tint length = *(short *)(datasection->qwt02psl);\n          2714 | \t\t\t\tint count = *(short *)(datasection->qwt02psn);\n          2715 | \t\t\t\tchar * start = b+offset;\n          2716 | \t\t\t\t//for(int j = 0;j<count;j++)\n          2717 | \t\t\t\t\u00e4\n          2718 | \t\t\t\t\tindex++;\n          2719 | \t\t\t\t\trexx.set(var(\"SMF\",index,\"STEP\"),stepname);\n          2720 | \t\t\t\t\trexx.set(var(\"SMF\",index,\"PROCSTEP\"),pstepname);\n          2721 | \t\t\t\t\trexx.set(var(\"SMF\",index,\"TIME\"),rexxSMFTimeDate(*(int *)sm102p->sm102tme,*(int *)sm102p->sm102\n          2721 | dte));\n          2722 | \t\t\t\t\trexx.set(var(\"SMF\",index,\"TYPE\"),recordQual);\n          2723 | \t\t\t\t\trexx.set(var(\"SMF\",index,\"ON\"),ssid);\n          2724 |\n          2725 | \t\t\t\t\tswitch(*(short *)qwhsp->qwhsiid)\n          2726 | \t\t\t\t\t\u00e4\n          2727 | \t\t\t\t\tcase 22:\n          2728 | \t\t\t\t\t\t\u00e4\n          2729 | \t\t\t\t\t\t\ttypedef struct qw0022 * qw0022P;\n          2730 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0022 THE MINI-PLANS GENERATED\");\n          2731 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),(const char *)qw0022P(start)->qw0022tn,18);\n          2732 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),(const char *)qw0022P(start)->qw0022pg,8);\n          2733 | \t\t\t\t\t\t\u00fc\n          2734 | \t\t\t\t\t\tbreak;\n          2735 | \t\t\t\t\tcase 53:\n          2736 | \t\t\t\t\t\t\u00e4\n          2737 | \t\t\t\t\t\t\ttypedef struct qw0053 * qw0053P;\n          2738 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0053 END OF DESCRIBE SQL COMMIT, ROLLBACK, ERROR CONDITION\n          2738 | \");\n          2739 | \t\t\t\t\t\t\tif (memcmp(qw0053P(start)->qw0053sq,\"SQLCA\",5) == 0)\n          2740 | \t\t\t\t\t\t\t\u00e4\n          2741 | \t\t\t\t\t\t\t\tif (*(int *)(qw0053P(start)->qw0053sq+12) == 0 )\n          2742 | \t\t\t\t\t\t\t\t\u00e4\n          2743 | \t\t\t\t\t\t\t\t\tstrcpy(work,\"SQLOK\");\n          2744 | \t\t\t\t\t\t\t\t\u00fc\n          2745 | \t\t\t\t\t\t\t\telse\n          2746 | \t\t\t\t\t\t\t\t\u00e4\n          2747 | \t\t\t\t\t\t\t\t\tERROR_MESSAGE error_message;\n          2748 | \t\t\t\t\t\t\t\t\terror_message.error_len = 10*72;\n          2749 | \t\t\t\t\t\t\t\t\tint rc = DSNTIAR(qw0053P(start)->qw0053sq,&error_message,&data_len);\n          2750 | \t\t\t\t\t\t\t\t\tif ( rc )\n          2751 | \t\t\t\t\t\t\t\t\t\tsprintf(work,\"DSNTIAR rc:%d\",rc);\n          2752 | \t\t\t\t\t\t\t\t\telse\n          2753 | \t\t\t\t\t\t\t\t\t\u00e4\n          2754 | \t\t\t\t\t\t\t\t\t\twork\u00c40\u00dc =0;\n          2755 | \t\t\t\t\t\t\t\t\t\tfor(int i = 0;i<data_dim;i++)\n          2756 | \t\t\t\t\t\t\t\t\t\t\tsprintf(work+strlen(work),\"<p>%72.72s\",error_message.error_text\u00c4i\u00dc);\n          2757 | \t\t\t\t\t\t\t\t\t\u00fc\n          2758 | \t\t\t\t\t\t\t\t\u00fc\n          2759 | \t\t\t\t\t\t\t\u00fc\n          2760 | \t\t\t\t\t\t\telse\n          2761 | \t\t\t\t\t\t\t\u00e4\n          2762 | \t\t\t\t\t\t\t\tsprintf(work,\"Rows:%llu Inserted:%llu Updated:%llu Deleted:%llu\",\n          2763 | \t\t\t\t\t\t\t\t\t*(long long *)qw0053P(start)->qw0053rq,\n          2764 | \t\t\t\t\t\t\t\t\t*(long long *)qw0053P(start)->qw0053in,\n          2765 | \t\t\t\t\t\t\t\t\t*(long long *)qw0053P(start)->qw0053up,\n          2766 | \t\t\t\t\t\t\t\t\t*(long long *)qw0053P(start)->qw0053de);\n          2767 | \t\t\t\t\t\t\t\u00fc\n          2768 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2769 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2770 | \t\t\t\t\t\t\u00fc\n          2771 | \t\t\t\t\t\tbreak;\n          2772 | \t\t\t\t\tcase 55:\n          2773 | \t\t\t\t\t\tindex--;\n          2774 | \t\t\t\t\t\tbreak;\n          2775 | \t\t\t\t\tcase 58:\n          2776 | \t\t\t\t\t\t\u00e4\n          2777 | \t\t\t\t\t\t\ttypedef struct qw0058 * qw0058P;\n          2778 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0058 END SQL STATEMENT EXECUTION\");\n          2779 | \t\t\t\t\t\t\tif (memcmp(qw0058P(start)->qw0058sq,\"SQLCA\",5) == 0)\n          2780 | \t\t\t\t\t\t\t\u00e4\n          2781 | \t\t\t\t\t\t\t\tif (*(int *)(qw0058P(start)->qw0058sq+12) == 0 )\n          2782 | \t\t\t\t\t\t\t\t\u00e4\n          2783 | \t\t\t\t\t\t\t\t\tstrcpy(work,\"SQLOK\");\n          2784 | \t\t\t\t\t\t\t\t\u00fc\n          2785 | \t\t\t\t\t\t\t\telse\n          2786 | \t\t\t\t\t\t\t\t\u00e4\n          2787 | \t\t\t\t\t\t\t\t\tERROR_MESSAGE error_message;\n          2788 | \t\t\t\t\t\t\t\t\terror_message.error_len = 10*72;\n          2789 | \t\t\t\t\t\t\t\t\tint rc = DSNTIAR(qw0058P(start)->qw0058sq,&error_message,&data_len);\n          2790 | \t\t\t\t\t\t\t\t\tif ( rc )\n          2791 | \t\t\t\t\t\t\t\t\t\tsprintf(work,\"DSNTIAR rc:%d\",rc);\n          2792 | \t\t\t\t\t\t\t\t\telse\n          2793 | \t\t\t\t\t\t\t\t\t\u00e4\n          2794 | \t\t\t\t\t\t\t\t\t\twork\u00c40\u00dc =0;\n          2795 | \t\t\t\t\t\t\t\t\t\tfor(int i = 0;i<data_dim;i++)\n          2796 | \t\t\t\t\t\t\t\t\t\t\tsprintf(work+strlen(work),\"<p>%72.72s\",error_message.error_text\u00c4i\u00dc);\n          2797 | \t\t\t\t\t\t\t\t\t\u00fc\n          2798 | \t\t\t\t\t\t\t\t\u00fc\n          2799 | \t\t\t\t\t\t\t\u00fc\n          2800 | \t\t\t\t\t\t\telse\n          2801 | \t\t\t\t\t\t\t\u00e4\n          2802 | \t\t\t\t\t\t\t\tsprintf(work,\"Rows:%llu Inserted:%llu Updated:%llu Deleted:%llu\",\n          2803 | \t\t\t\t\t\t\t\t\t*(long long *)qw0058P(start)->qw0058rp,\n          2804 | \t\t\t\t\t\t\t\t\t*(long long *)qw0058P(start)->qw0058in,\n          2805 | \t\t\t\t\t\t\t\t\t*(long long *)qw0058P(start)->qw0058up,\n          2806 | \t\t\t\t\t\t\t\t\t*(long long *)qw0058P(start)->qw0058de);\n          2807 | \t\t\t\t\t\t\t\u00fc\n          2808 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2809 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2810 | \t\t\t\t\t\t\u00fc\n          2811 | \t\t\t\t\t\tbreak;\n          2812 | \t\t\t\t\tcase 59:\n          2813 | \t\t\t\t\t\t\u00e4\n          2814 | \t\t\t\t\t\t\ttypedef struct qw0059 * qw0059P;\n          2815 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0059 FETCH SQL STATEMENT EXECUTION START\");\n          2816 | \t\t\t\t\t\t\tsprintf(work,\"Cursor:%*.*s Sensitive:%c Orientation:%c\",\n          2817 | \t\t\t\t\t\t\t\t*(short*)qw0059P(start)->qw0059cl,*(short*)qw0059P(start)->qw0059cl,qw0059P(start)->qw0059cn\n          2817 | ,qw0059P(start)->qw0059fs,qw0059P(start)->qw0059fo);\n          2818 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2819 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2820 | \t\t\t\t\t\t\u00fc\n          2821 | \t\t\t\t\t\tbreak;\n          2822 | \t\t\t\t\tcase 60:\n          2823 | \t\t\t\t\t\t\u00e4\n          2824 | \t\t\t\t\t\t\ttypedef struct qw0060 * qw0060P;\n          2825 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0060 SELECT SQL STATEMENT EXECUTION START\");\n          2826 | \t\t\t\t\t\t\tsprintf(work,\"Isolation:%c\",\n          2827 | \t\t\t\t\t\t\t\tqw0060P(start)->qw0060i);\n          2828 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2829 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2830 | \t\t\t\t\t\t\u00fc\n          2831 | \t\t\t\t\t\tbreak;\n          2832 | \t\t\t\t\tcase 61:\n          2833 | \t\t\t\t\t\t\u00e4\n          2834 | \t\t\t\t\t\t\ttypedef struct qw0061 * qw0061P;\n          2835 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0061 FETCH SQL STATEMENT START - INSERT, UPDATE, DELETE\");\n          2836 | \t\t\t\t\t\t\tchar type\u00c432\u00dc;\n          2837 | \t\t\t\t\t\t\tif (qw0061P(start)->qw0061st = 0x10)\n          2838 | \t\t\t\t\t\t\t\tstrcpy(type,\"INSERT\");\n          2839 | \t\t\t\t\t\t\telse\n          2840 | \t\t\t\t\t\t\t\tif (qw0061P(start)->qw0061st = 0x20)\n          2841 | \t\t\t\t\t\t\t\t\tstrcpy(type,\"UPDATE NON CURSOR\");\n          2842 | \t\t\t\t\t\t\t\telse\n          2843 | \t\t\t\t\t\t\t\t\tif (qw0061P(start)->qw0061st = 0x21)\n          2844 | \t\t\t\t\t\t\t\t\t\tstrcpy(type,\"UPDATE CURSOR\");\n          2845 | \t\t\t\t\t\t\t\t\telse\n          2846 | \t\t\t\t\t\t\t\t\t\tif (qw0061P(start)->qw0061st = 0x30)\n          2847 | \t\t\t\t\t\t\t\t\t\t\tstrcpy(type,\"MERGE\");\n          2848 | \t\t\t\t\t\t\t\t\t\telse\n          2849 | \t\t\t\t\t\t\t\t\t\t\tif (qw0061P(start)->qw0061st = 0x41)\n          2850 | \t\t\t\t\t\t\t\t\t\t\t\tstrcpy(type,\"DELETE CURSOR\");\n          2851 | \t\t\t\t\t\t\t\t\t\t\telse\n          2852 | \t\t\t\t\t\t\t\t\t\t\t\tif (qw0061P(start)->qw0061st = 0x50)\n          2853 | \t\t\t\t\t\t\t\t\t\t\t\t\tstrcpy(type,\"TRUNCATE\");\n          2854 | \t\t\t\t\t\t\tsprintf(work,\"Cursor:%*.*s Type:%s\",\n          2855 | \t\t\t\t\t\t\t\t*(short*)qw0061P(start)->qw0061cl,*(short*)qw0061P(start)->qw0061cl,qw0061P(start)->qw0061cn\n          2855 | ,type);\n          2856 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2857 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2858 | \t\t\t\t\t\t\u00fc\n          2859 | \t\t\t\t\t\tbreak;\n          2860 | \t\t\t\t\tcase 62:\n          2861 | \t\t\t\t\t\t\u00e4\n          2862 | \t\t\t\t\t\t\ttypedef struct qw0062 * qw0062P;\n          2863 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0062 RECORDS DLL EXECUTION STATEMENT START\");\n          2864 | \t\t\t\t\t\t\tsprintf(work,\"Object:%*.*s type:%c\",\n          2865 | \t\t\t\t\t\t\t\t*(short*)qw0062P(start)->qw0062ol,*(short*)qw0062P(start)->qw0062ol,qw0062P(start)->qw0062on\n          2865 | ,qw0062P(start)->qw0062st);\n          2866 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2867 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2868 | \t\t\t\t\t\t\u00fc\n          2869 | \t\t\t\t\t\tbreak;\n          2870 | \t\t\t\t\tcase 63:\n          2871 | \t\t\t\t\t\t\u00e4\n          2872 | \t\t\t\t\t\t\ttypedef struct qw0063 * qw0063P;\n          2873 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0063 THE SQL STATEMENTT\");\n          2874 | \t\t\t\t\t\t\tsprintf(work,\"%*.*s\",\n          2875 | \t\t\t\t\t\t\t\t*(short*)qw0063P(start)->qw0063ll,*(short*)qw0063P(start)->qw0063ll,(char *)&qw0063P(start)-\n          2875 | >qw0063st);\n          2876 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2877 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2878 | \t\t\t\t\t\t\u00fc\n          2879 | \t\t\t\t\t\tbreak;\n          2880 | \t\t\t\t\tcase 64:\n          2881 | \t\t\t\t\t\t\u00e4\n          2882 | \t\t\t\t\t\t\ttypedef struct qw0064 * qw0064P;\n          2883 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0064 PREPARE STATEMET START\");\n          2884 | \t\t\t\t\t\t\tsprintf(work,\"Cursor:%*.*s\",\n          2885 | \t\t\t\t\t\t\t\t*(short*)qw0064P(start)->qw0064cl,*(short*)qw0064P(start)->qw0064cl,qw0064P(start)->qw0064cn\n          2885 | );\n          2886 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2887 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2888 | \t\t\t\t\t\t\u00fc\n          2889 | \t\t\t\t\t\tbreak;\n          2890 | \t\t\t\t\tcase 65:\n          2891 | \t\t\t\t\t\t\u00e4\n          2892 | \t\t\t\t\t\t\ttypedef struct qw0065 * qw0065P;\n          2893 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0065 OPEN CURSOR STATEMENT START\");\n          2894 | \t\t\t\t\t\t\tsprintf(work,\"Cursor:%*.*s Sensitive:%c Isolation:%c\",\n          2895 | \t\t\t\t\t\t\t\t*(short*)qw0065P(start)->qw0065cl,*(short*)qw0065P(start)->qw0065cl,qw0065P(start)->qw0065cn\n          2895 | ,\n          2896 | \t\t\t\t\t\t\t\tqw0065P(start)->qw0065sv,qw0065P(start)->qw0065i);\n          2897 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2898 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2899 | \t\t\t\t\t\t\u00fc\n          2900 | \t\t\t\t\t\tbreak;\n          2901 | \t\t\t\t\tcase 66:\n          2902 | \t\t\t\t\t\t\u00e4\n          2903 | \t\t\t\t\t\t\ttypedef struct qw0066 * qw0066P;\n          2904 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0066 OPEN CURSOR STATEMENT START\");\n          2905 | \t\t\t\t\t\t\tsprintf(work,\"Cursor:%*.*s\",\n          2906 | \t\t\t\t\t\t\t\t*(short*)qw0066P(start)->qw0066cl,*(short*)qw0066P(start)->qw0066cl,qw0066P(start)->qw0066cn\n          2906 | );\n          2907 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2908 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2909 | \t\t\t\t\t\t\u00fc\n          2910 | \t\t\t\t\t\tbreak;\n          2911 | \t\t\t\t\tcase 92:\n          2912 | \t\t\t\t\t\t\u00e4\n          2913 | \t\t\t\t\t\t\ttypedef struct qw0092 * qw0092P;\n          2914 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0092 AN AMS COMMAND START\");\n          2915 | \t\t\t\t\t\t\tsprintf(work,\"Command:%*.*s\",\n          2916 | \t\t\t\t\t\t\t\t*(short*)qw0092P(start)->qw0092pl,*(short*)qw0092P(start)->qw0092pl,qw0092P(start)->qw0092p1\n          2916 | );\n          2917 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2918 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2919 | \t\t\t\t\t\t\u00fc\n          2920 | \t\t\t\t\t\tbreak;\n          2921 | \t\t\t\t\tcase 96:\n          2922 | \t\t\t\t\t\t\u00e4\n          2923 | \t\t\t\t\t\t\ttypedef struct qw0096 * qw0096P;\n          2924 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0096 RECORDS SORT ENDED\");\n          2925 | \t\t\t\t\t\t\tsprintf(work,\"Records:%d DataSize:%d KeySize:%d\",\n          2926 | \t\t\t\t\t\t\t\tqw0096P(start)->qw0096nr,qw0096P(start)->qw0096dl,qw0096P(start)->qw0096kl);\n          2927 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2928 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2929 | \t\t\t\t\t\t\u00fc\n          2930 | \t\t\t\t\t\tbreak;\n          2931 | \t\t\t\t\tcase 97:\n          2932 | \t\t\t\t\t\t\u00e4\n          2933 | \t\t\t\t\t\t\ttypedef struct qw0097 * qw0097P;\n          2934 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0097 AMS COMMAND COMPLETION\");\n          2935 | \t\t\t\t\t\t\tsprintf(work,\"Command:%*.*s ReturnCode:%d\",\n          2936 | \t\t\t\t\t\t\t\t*(short*)qw0097P(start)->qw0097pl,*(short*)qw0097P(start)->qw0097pl,qw0097P(start)->qw0097p1\n          2936 | ,\n          2937 | \t\t\t\t\t\t\t\tqw0097P(start)->qw0097rc);\n          2938 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2939 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2940 | \t\t\t\t\t\t\u00fc\n          2941 | \t\t\t\t\t\tbreak;\n          2942 | \t\t\t\t\tcase 112:\n          2943 | \t\t\t\t\t\t\u00e4\n          2944 | \t\t\t\t\t\t\ttypedef struct qw0112 * qw0112P;\n          2945 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0112 THE ATTRIBUTES FOR THE PLAN\");\n          2946 | \t\t\t\t\t\t\tsprintf(work,\"Plan:%8.8s Isolation:%2.2s Aqu:%c Rel:%c Keep:%c Prot:%c\",\n          2947 | \t\t\t\t\t\t\t\tqw0112P(start)->qw0112pn,qw0112P(start)->qw0112i,\n          2948 | \t\t\t\t\t\t\t\tqw0112P(start)->qw0112q,qw0112P(start)->qw0112r,\n          2949 | \t\t\t\t\t\t\t\tqw0112P(start)->qw0112kd,qw0112P(start)->qw0112pr);\n          2950 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2951 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2952 | \t\t\t\t\t\t\u00fc\n          2953 | \t\t\t\t\t\tbreak;\n          2954 | \t\t\t\t\tcase 173:\n          2955 | \t\t\t\t\t\tindex--;\n          2956 | \t\t\t\t\t\tbreak;\n          2957 | \t\t\t\t\tcase 177:\n          2958 | \t\t\t\t\t\t\u00e4\n          2959 | \t\t\t\t\t\t\ttypedef struct qw0177 * qw0177P;\n          2960 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0177 FOR SUCCESSFUL PACKAGE ALLOCATION\");\n          2961 | \t\t\t\t\t\t\tsprintf(work,\"Package:%126.126s\",\n          2962 | \t\t\t\t\t\t\t\t(char *)&(qw0177P(start)->qw0177pk));\n          2963 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2964 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2965 | \t\t\t\t\t\t\u00fc\n          2966 | \t\t\t\t\t\tbreak;\n          2967 | \t\t\t\t\tcase 233:\n          2968 | \t\t\t\t\t\t\u00e4\n          2969 | \t\t\t\t\t\t\ttypedef struct qw0233 * qw0233P;\n          2970 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0233 START OR END OF A CALL TO A USER ROUTINE\");\n          2971 | \t\t\t\t\t\t\tsprintf(work,\"Routine:18.18s\",\n          2972 | \t\t\t\t\t\t\t\tqw0233P(start)->qw0233pr);\n          2973 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2974 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2975 | \t\t\t\t\t\t\u00fc\n          2976 | \t\t\t\t\t\tbreak;\n          2977 | \t\t\t\t\tcase 237:\n          2978 | \t\t\t\t\t\t\u00e4\n          2979 | \t\t\t\t\t\t\ttypedef struct qw0237 * qw0237P;\n          2980 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0237 AT EXECUTION of SET CURRENT DEGREE\");\n          2981 | \t\t\t\t\t\t\tsprintf(work,\"Prev:%3.3s New:%3.3s Status:%c\",\n          2982 | \t\t\t\t\t\t\t\tqw0237P(start)->qw0237oi,qw0237P(start)->qw0237ni,\n          2983 | \t\t\t\t\t\t\t\tqw0237P(start)->qw0237st);\n          2984 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2985 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2986 | \t\t\t\t\t\t\u00fc\n          2987 | \t\t\t\t\t\tbreak;\n          2988 | \t\t\t\t\tcase 250:\n          2989 | \t\t\t\t\t\tindex--;\n          2990 | \t\t\t\t\t\tbreak;\n          2991 | \t\t\t\t\tcase 272:\n          2992 | \t\t\t\t\t\t\u00e4\n          2993 | \t\t\t\t\t\t\ttypedef struct qw0272 * qw0272P;\n          2994 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0272 ASSOCIATE LOCATORS\");\n          2995 | \t\t\t\t\t\t\tsprintf(work,\"StoredProc:%*.*s\",\n          2996 | \t\t\t\t\t\t\t\tqw0272P(start)->qw0272pl,qw0272P(start)->qw0272pl,qw0272P(start)->qw0272pn);\n          2997 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          2998 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          2999 | \t\t\t\t\t\t\u00fc\n          3000 | \t\t\t\t\t\tbreak;\n          3001 | \t\t\t\t\tcase 273:\n          3002 | \t\t\t\t\t\t\u00e4\n          3003 | \t\t\t\t\t\t\ttypedef struct qw0273 * qw0273P;\n          3004 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"NOTES\"),\"0273 ALLOCATE CURSOR\");\n          3005 | \t\t\t\t\t\t\tsprintf(work,\"Cursor:%*.*s\",\n          3006 | \t\t\t\t\t\t\t\tqw0273P(start)->qw0273cl,qw0273P(start)->qw0273cl,qw0273P(start)->qw0273cn);\n          3007 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"STATS\"),work);\n          3008 | \t\t\t\t\t\t\trexx.set(var(\"SMF\",index,\"INFO\"),\"\");\n          3009 | \t\t\t\t\t\t\u00fc\n          3010 | \t\t\t\t\t\tbreak;\n          3011 | \t\t\t\t\tcase 325:\n          3012 | \t\t\t\t\t\tindex--;\n          3013 | \t\t\t\t\t\tbreak;\n          3014 | \t\t\t\t\tdefault:\n          3015 | \t\t\t\t\t\tbreak;\n          3016 | \t\t\t\t\t\u00fc\n          3017 | \t\t\t\t\tif (offset)\n          3018 | \t\t\t\t\t\tstart +=offset;\n          3019 | \t\t\t\t\telse\n          3020 | \t\t\t\t\t\tstart += *(short *)start;\n          3021 | \t\t\t\t\u00fc\n          3022 | \t\t\t\u00fc\n          3023 | \t\t\u00fc\n          3024 | \t\tbreak;\n          3025 | \tdefault:\n          3026 | \t\tbreak;\n          3027 | \t\u00fc\n          3028 | \treturn 0;\n          3029 | \u00fc\n          3030 |\n          3031 | _rexxsmf()\n          3032 | \u00e4\n          3033 | \t//printf(\" Browse %s loggerstream %s direction\u00d6n\",argv\u00c42\u00dc,(atoi(argv\u00c43\u00dc)==0?\"oldtoyoung\":\"youngtool\n          3033 | d\"));\n          3034 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          3035 | \tint rc = mvs()->LoggerOpen(argv\u00c42\u00dc);\n          3036 | \tconst char * pointer = NULL;\n          3037 | \tchar date\u00c432\u00dc;\n          3038 | \tchar * dateP = NULL;\n          3039 | \tif (argc >= 4 && argv\u00c44\u00dc)\n          3040 | \t\u00e4\n          3041 | \t\tchar * p = strchr(argv\u00c44\u00dc,',');\n          3042 | \t\tif (p)\n          3043 | \t\t\t*(int *)date = atoi(p+1);\n          3044 | \t\tmemcpy(date+4,argv\u00c44\u00dc,7);\n          3045 | \t\tdateP = date;\n          3046 | \t\u00fc\n          3047 |\n          3048 | \tsize_t length = 0;\n          3049 | \tsize_t * lP   = &length;\n          3050 | \tpasm PASM = NULL;\n          3051 | \tREXXVAR rexx(JOBENV::debug);\n          3052 | \tbool idflag = false;\n          3053 | \tint index = 0;\n          3054 | \twhile (rc=mvs()->BrowseLogger(pointer,lP,atoi(argv\u00c43\u00dc),0,dateP)==0)\n          3055 | \t\u00e4\n          3056 | \t\tPASM = mvs()->getpasm();\n          3057 | \t\tif (JOBENV::debug)\n          3058 | \t\t\u00e4\n          3059 | \t\t\t/*\n          3060 | \t\t\t_dump(\"logger rc\",(char *)&(PASM->asm_rc),256);\n          3061 | \t\t\t_dump(\"asm logger\",(char *)&(PASM->asm_logger_length),\n          3062 | \t\t\t(char *)&(PASM->asm_logger_stck)-(char *)&(PASM->asm_logger_length));\n          3063 | \t\t\t_dump(\" ASM LOGGER\",(char *)PASM->asm_logger_buffer,int(PASM->asm_logger_bufflen));\n          3064 | \t\t\t_dump(\" ASM ansarea\",(char *)PASM->asm_ansarea,40);\n          3065 | \t\t\tprintf(\" RC:%d REASON:%d(%8.8x)\u00d6n\",PASM->asm_rc,PASM->asm_reason,PASM->asm_reason);\n          3066 | \t\t\t*/\n          3067 | \t\t\u00fc\n          3068 | \t\tunsigned short ubl = *(unsigned short *)pointer;\n          3069 | \t\tint bl = ubl;\n          3070 | \t\tbl-=4;\n          3071 | \t\tchar * p = (char *)pointer+4;\n          3072 | \t\twhile(bl>0)\n          3073 | \t\t\u00e4\n          3074 | \t\t\tunsigned short url;\n          3075 | \t\t\turl = *(unsigned short *)p;\n          3076 | \t\t\tint rl = url;\n          3077 | \t\t\tif (rl==72)\n          3078 | \t\t\t\u00e4\n          3079 | \t\t\t\tp+=rl;\n          3080 | \t\t\t\tbl-=rl;\n          3081 | \t\t\t\tlength-=rl;\n          3082 | \t\t\t\trl = *(short *)p;\n          3083 | \t\t\t\tif (bl >0 && rl>0 && bl>rl)\n          3084 | \t\t\t\t\u00e4\n          3085 | \t\t\t\t\tif (rexxSMF(rexx,index,p,idflag,rl)==5)\n          3086 | \t\t\t\t\t\u00e4\n          3087 | \t\t\t\t\t\trexx.set(var(\"SMF\",0),index);\n          3088 | \t\t\t\t\t\treturn 0;\n          3089 | \t\t\t\t\t\u00fc\n          3090 | \t\t\t\t\tp+=rl;\n          3091 | \t\t\t\t\tbl-=rl;\n          3092 | \t\t\t\t\tlength=-rl;\n          3093 | \t\t\t\t\u00fc\n          3094 | \t\t\t\telse\n          3095 | \t\t\t\t\tbl = 0;\n          3096 | \t\t\t\u00fc\n          3097 | \t\t\telse\n          3098 | \t\t\t\u00e4\n          3099 | \t\t\t\tbl = 0;\n          3100 | \t\t\t\u00fc\n          3101 | \t\t\u00fc\n          3102 | \t\u00fc\n          3103 | \tmvs()->LoggerClose();\n          3104 |\n          3105 | \tif (index>0)\n          3106 | \t\trexx.set(var(\"SMF\",0),index);\n          3107 | \telse\n          3108 | \t\tfor(int i =0;i<255;i++)\n          3109 | \t\t\tif (counters\u00c4i\u00dc)\n          3110 | \t\t\t\tprintf(\" SMF type:%d, records:%d\u00d6n\",i,counters\u00c4i\u00dc);\n          3111 | \treturn 0;\n          3112 | \u00fc\n          3113 |\n          3114 | _rexxdsmf()\n          3115 | \u00e4\n          3116 | \t//printf(\" Browse %s loggerstream %s direction\u00d6n\",argv\u00c42\u00dc,(atoi(argv\u00c43\u00dc)==0?\"oldtoyoung\":\"youngtool\n          3116 | d\"));\n          3117 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          3118 | \tint rc = mvs()->LoggerOpen(argv\u00c42\u00dc);\n          3119 | \tconst char * pointer = NULL;\n          3120 | \tchar date\u00c432\u00dc;\n          3121 | \tchar * dateP = NULL;\n          3122 | \tif (argc >= 4 && argv\u00c44\u00dc)\n          3123 | \t\u00e4\n          3124 | \t\tchar * p = strchr(argv\u00c44\u00dc,',');\n          3125 | \t\tif (p)\n          3126 | \t\t\t*(int *)date = atoi(p+1);\n          3127 | \t\tmemcpy(date+4,argv\u00c44\u00dc,7);\n          3128 | \t\tdateP = date;\n          3129 | \t\u00fc\n          3130 |\n          3131 | \tsize_t length = 0;\n          3132 | \tsize_t * lP   = &length;\n          3133 | \tpasm PASM = NULL;\n          3134 | \tREXXVAR rexx(JOBENV::debug);\n          3135 | \tbool idflag = false;\n          3136 | \tint index = 0;\n          3137 | \twhile (rc=mvs()->BrowseLogger(pointer,lP,atoi(argv\u00c43\u00dc),0,dateP)==0)\n          3138 | \t\u00e4\n          3139 | \t\tPASM = mvs()->getpasm();\n          3140 | \t\tunsigned short ubl = *(unsigned short *)pointer;\n          3141 | \t\tint bl = ubl;\n          3142 | \t\tbl-=4;\n          3143 | \t\tchar * p = (char *)pointer+4;\n          3144 | \t\twhile(bl>0)\n          3145 | \t\t\u00e4\n          3146 | \t\t\tunsigned short url;\n          3147 | \t\t\turl = *(unsigned short *)p;\n          3148 | \t\t\tint rl = url;\n          3149 | \t\t\tif (rl==72)\n          3150 | \t\t\t\u00e4\n          3151 | \t\t\t\tp+=rl;\n          3152 | \t\t\t\tbl-=rl;\n          3153 | \t\t\t\tlength-=rl;\n          3154 | \t\t\t\trl = *(short *)p;\n          3155 | \t\t\t\tif (bl >0 && rl>0 && bl>rl)\n          3156 | \t\t\t\t\u00e4\n          3157 | \t\t\t\t\tif (rexxSMF(rexx,index,p,idflag,rl)==5)\n          3158 | \t\t\t\t\t\u00e4\n          3159 | \t\t\t\t\t\trexx.set(var(\"SMF\",0),index);\n          3160 | \t\t\t\t\t\treturn 0;\n          3161 | \t\t\t\t\t\u00fc\n          3162 | \t\t\t\t\tp+=rl;\n          3163 | \t\t\t\t\tbl-=rl;\n          3164 | \t\t\t\t\tlength=-rl;\n          3165 | \t\t\t\t\u00fc\n          3166 | \t\t\t\telse\n          3167 | \t\t\t\t\tbl = 0;\n          3168 | \t\t\t\u00fc\n          3169 | \t\t\telse\n          3170 | \t\t\t\u00e4\n          3171 | \t\t\t\tbl = 0;\n          3172 | \t\t\t\u00fc\n          3173 | \t\t\u00fc\n          3174 | \t\u00fc\n          3175 | \tmvs()->LoggerClose();\n          3176 |\n          3177 | \tif (index>0)\n          3178 | \t\trexx.set(var(\"SMF\",0),index);\n          3179 | \telse\n          3180 | \t\tfor(int i =0;i<255;i++)\n          3181 | \t\t\tif (counters\u00c4i\u00dc)\n          3182 | \t\t\t\tprintf(\" SMF type:%d, records:%d\u00d6n\",i,counters\u00c4i\u00dc);\n          3183 | \treturn 0;\n          3184 | \u00fc\n          3185 |\n          3186 | extern dump(FILE *,char *,char *,int);\n          3187 |\n          3188 | int _dumpfile()\n          3189 | \u00e4\n          3190 | \tchar w\u00c41024\u00dc;\n          3191 | \tchar b\u00c432756\u00dc;\n          3192 | \tFILE * f =fopen(genOpenName(argv\u00c41\u00dc,w),\"rb,type=record\");\n          3193 | \tint l = 0;\n          3194 | \tif (f)\n          3195 | \t\u00e4\n          3196 | \t\tint count = 0;\n          3197 | \t\twhile((l = fread(b,1,sizeof(b),f))>0)\n          3198 | \t\t\u00e4\n          3199 | \t\t\tcount++;\n          3200 | \t\t\tsprintf(w,\"record:%d in %d length\",count,l);\n          3201 | \t\t\tdump(stdout,w,b,l);\n          3202 | \t\t\u00fc\n          3203 | \t\tfclose(f);\n          3204 | \t\u00fc\n          3205 | \treturn 0;\n          3206 | \u00fc\n          3207 |\n          3208 |\n          3209 | int _listfile()\n          3210 | \u00e4\n          3211 | \tchar buff\u00c432760\u00dc;\n          3212 | \tFILE * file = NULL;\n          3213 | \tsize_t l = 0;\n          3214 | \tsize_t max = argv\u00c42\u00dc?atoi(argv\u00c42\u00dc):99999999;\n          3215 | \tif (argv\u00c41\u00dc&&(file=fopen(genOpenName(argv\u00c41\u00dc,buff),\"rb,type=record,noseek\")))\n          3216 | \t\u00e4\n          3217 | \t\twhile ((l=fread(buff,1,sizeof(buff),file))>0&&--max>0)\n          3218 | \t\t\tprintf(\"%*.*s\u00d6n\",l,l,buff);\n          3219 | \t\tfclose(file);\n          3220 | \t\u00fc\n          3221 | \telse\n          3222 | \t\tprintf(\"<h1>unable to open %s (%s)\u00d6n\",argv\u00c41\u00dc,strerror(errno));\n          3223 | \treturn 0;\n          3224 | \u00fc\n          3225 | typedef struct ensg * ENSGP;\n          3226 | typedef struct enf70 * ENF70P;\n          3227 | typedef struct hdlogrec * HDLOGRECP;\n          3228 | typedef struct sdwa * SDWAP;\n          3229 | typedef struct adsrcmps * ADSRCMPSP;\n          3230 |\n          3231 |\n          3232 | static char *  logrec_types\u00c4255\u00dc;\n          3233 | int logrec_types_init()\n          3234 | \u00e4\n          3235 | \tlogrec_types\u00c40x10\u00dc =  \"Machine Check Handler\";\n          3236 | \tlogrec_types\u00c40x13\u00dc =  \"Machine Check in the System\";\n          3237 | \tlogrec_types\u00c40x23\u00dc =  \"Subchannel Logout Handler\";\n          3238 | \tlogrec_types\u00c40x25\u00dc =  \"Channel Record Word\";\n          3239 | \tlogrec_types\u00c40x30\u00dc =  \"Outboard\";\n          3240 | \tlogrec_types\u00c40x34\u00dc =  \"Outboard TCAM\";\n          3241 | \tlogrec_types\u00c40x36\u00dc =  \"Outboard VTAM\";\n          3242 | \tlogrec_types\u00c40x3a\u00dc =  \"Outboard DPA\";\n          3243 | \tlogrec_types\u00c40x40\u00dc =  \"Software-detected software error\";\n          3244 | \tlogrec_types\u00c40x42\u00dc =  \"Hardware-detected software error\";\n          3245 | \tlogrec_types\u00c40x44\u00dc =  \"Operator-detected error\";\n          3246 | \tlogrec_types\u00c40x48\u00dc =  \"Hardware-detected hardware error\";\n          3247 | \tlogrec_types\u00c40x4c\u00dc =  \"Symptom record\";\n          3248 | \tlogrec_types\u00c40x4F\u00dc =  \"Lost record summary\";\n          3249 | \tlogrec_types\u00c40x50\u00dc =  \"IPL\";\n          3250 | \tlogrec_types\u00c40x60\u00dc =  \"DDR\";\n          3251 | \tlogrec_types\u00c40x70\u00dc =  \"MIH\";\n          3252 | \tlogrec_types\u00c40x80\u00dc =  \"EOD\";\n          3253 | \tlogrec_types\u00c40x81\u00dc =  \"System-initiated end\";\n          3254 | \tlogrec_types\u00c40x84\u00dc =  \"EOD from IOS\";\n          3255 | \tlogrec_types\u00c40xA1\u00dc =  \"ETR\";\n          3256 | \tlogrec_types\u00c40xa2\u00dc =    \"LMI\";\n          3257 | \tlogrec_types\u00c40xa3\u00dc =  \"SIM\";\n          3258 | \tlogrec_types\u00c40xc2\u00dc =  \"DPSV\";\n          3259 | \treturn 1;\n          3260 | \u00fc\n          3261 | int _logrec_types = logrec_types_init();\n          3262 |\n          3263 | static char * enf70_qualifier_list\u00c4\u00dc=\n          3264 | \u00e4\n          3265 | \tNULL,\n          3266 | \t/* Values for field \"enf70_qualifier\" */\n          3267 | \t\"Job was selected\",\n          3268 | \t\"Job was processed\",\n          3269 | \t\"Job queued to new phase\",\n          3270 | \t\"Job was purged\"\n          3271 | \u00fc;\n          3272 |\n          3273 | static char * enf70_comp_list\u00c4\u00dc =\n          3274 | \u00e4\n          3275 | \t/* Values for field \"enf70_comp\" */\n          3276 | #define enf70_cab        0x80 /* ABEND CODE                       */\n          3277 | #define enf70_ccc        0x40 /* Completion code                  */\n          3278 | \t\"No completion info\",\n          3279 | \t\"Job ended normally\",\n          3280 | \t\"Job ended by cc\",\n          3281 | \t\"Job had a JCL error\",\n          3282 | \t\"Job was canceled\",\n          3283 | \t\"Job ABENDed\",\n          3284 | \t\"Converter ABENDed\",\n          3285 | \t\"Security error\",\n          3286 | \t\"Job ABENDed in end of\"\n          3287 | \u00fc;\n          3288 |\n          3289 | /* Values for field \"enf70_queue\" */\n          3290 | static char * enf70_queue_list\u00c4138\u00dc =\n          3291 | \u00e4\n          3292 | \t/*'#define enf70_q_none     0   .*/ \"  No previous queue (job create)  \",\n          3293 | \tNULL,\n          3294 | \t/*'#define enf70_q_convert  2   .*/ \"  Conversion                      \",\n          3295 | \t/*'#define enf70_q_pscbat   3   .*/ \"  Postscan (batch)                \",\n          3296 | \t/*'#define enf70_q_pscdsl   4   .*/ \"  Postscan (demand select)        \",\n          3297 | \t/*'#define enf70_q_fetch    5   .*/ \"  Volume fetch                    \",\n          3298 | \t/*'#define enf70_q_volwt    6   .*/ \"  Start Setup                     \",\n          3299 | \t/*'#define enf70_q_syssel   7   .*/ \"  MDS system select processing    \",\n          3300 | \t/*'#define enf70_q_alloc    8   .*/ \"  resource allocation             \",\n          3301 | \t/*'#define enf70_q_voluav   9   .*/ \"  unavailable VOL(s)              \",\n          3302 | \t/*'#define enf70_q_verify   10  .*/ \"  volume mounts                   \",\n          3303 | \t/*'#define enf70_q_sysver   11  .*/ \"  MDS system verify processing    \",\n          3304 | \t/*'#define enf70_q_error    12  .*/ \"  Demand Select                   \",\n          3305 | \t/*'#define enf70_q_select   13  .*/ \"  Execution                       \",\n          3306 | \t/*'#define enf70_q_onmain   14  .*/ \"  Execution                       \",\n          3307 | \tNULL,\n          3308 | \tNULL,\n          3309 | \t/*'#define enf70_q_brkdwn   17  .*/ \"  Breakdown                       \",\n          3310 | \t/*'#define enf70_q_restrt   18  .*/ \"  MDS restart proc                \",\n          3311 | \t/*'#define enf70_q_done     19  .*/ \"  Main and MDS proc. complete     \",\n          3312 | \t/*'#define enf70_q_output   20  .*/ \"  Output service                  \",\n          3313 | \t/*'#define enf70_q_outque   21  .*/ \"  Output service WTR              \",\n          3314 | \t/*'#define enf70_q_oswait   22  .*/ \"  Awaiting rsvd services          \",\n          3315 | \t/*'#define enf70_q_cmplt    23  .*/ \"  Output service complete         \",\n          3316 | \t/*'#define enf70_q_demsel   24  .*/ \"  Demand Select                   \",\n          3317 | \t/*'#define enf70_q_efwait   25  .*/ \"  Ending function rq waiting      \",\n          3318 | \t/*'#define enf70_q_efbad    26  .*/ \"  Ending function rq not Processed\"\n          3319 | \u00fc;\n          3320 | int init_const()\n          3321 | \u00e4\n          3322 | \tenf70_queue_list\u00c4128\u00dc=\n          3323 | \t\t/*'#define enf70_q_input    128 .*/ \"  Input queue (pre-execution)     \";\n          3324 | \tenf70_queue_list\u00c4136\u00dc=\n          3325 | \t\t/*'#define enf70_q_receiver 136 .*/ \"  Input queue (post-execution)    \";\n          3326 | \tenf70_queue_list\u00c4132\u00dc=\n          3327 | \t\t/*'#define enf70_q_spin     132 .*/ \"  Spin queue                      \";\n          3328 | \tenf70_queue_list\u00c4134\u00dc=\n          3329 | \t\t/*'#define enf70_q_purge    134 .*/ \"  Purge queue                     \";\n          3330 | \tenf70_queue_list\u00c4137\u00dc=\n          3331 | \t\t/*'#define enf70_q_xmit     137 .*/ \"  NJE transmission queue          \";\n          3332 | \treturn 0;\n          3333 | \u00fc\n          3334 |\n          3335 | int _init_const = init_const();\n          3336 |\n          3337 | typedef struct pfswrec PFSWREC;\n          3338 | typedef struct dumpxrec DUMPXREC;\n          3339 | typedef struct mpfxrec MPFXREC;\n          3340 |\n          3341 | char * pfswrec_types\u00c423\u00dc;\n          3342 | int _rexxenfs()\n          3343 | \u00e4\n          3344 | \t// argv\u00c42\u00dc = logstream name\n          3345 | \t// argv\u00c43\u00dc = direction (seems 3 youngtoold)\n          3346 | \t// argv\u00c44\u00dc = recordcount (default 1000?)\n          3347 | \t// argv\u00c45\u00dc = TZ envar\n          3348 | \tif (argc > 4 )\n          3349 | \t\tsetenv(\"TZ\",argv\u00c45\u00dc,1);\n          3350 | \tchar w\u00c432760\u00dc;\n          3351 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          3352 | \tREXXVAR rexx(JOBENV::debug);\n          3353 | \tpfswrec_types\u00c41\u00dc = \"Update\";\n          3354 | \tpfswrec_types\u00c42\u00dc = \"Delete\";\n          3355 | \tpfswrec_types\u00c43\u00dc = \"Rename\";\n          3356 | \tpfswrec_types\u00c411\u00dc = \"Add member\";\n          3357 | \tpfswrec_types\u00c412\u00dc = \"Delete_member\";\n          3358 | \tpfswrec_types\u00c413\u00dc = \"Rename_member\";\n          3359 | \tpfswrec_types\u00c421\u00dc = \"Update path\";\n          3360 | \tpfswrec_types\u00c422\u00dc = \"Delete path\";\n          3361 | \tpfswrec_types\u00c423\u00dc = \"Rename path\";\n ======================================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 3361.23: CCN8907 (W) The subscript 23 is out of range. The valid range is 0 to 22.\n          3362 |\n          3363 | \tif (JOBENV::debug)\n          3364 | \t\tprintf(\" Browse %s loggerstream %s direction\u00d6n\",argv\u00c42\u00dc,(atoi(argv\u00c43\u00dc)==0?\"oldtoyoung\":\"youngtoold\n          3364 | \"));\n          3365 | \tint rc = mvs()->LoggerOpen(argv\u00c42\u00dc);\n          3366 | \tif (rc)\n          3367 | \t\u00e4\n          3368 | \t\trexx.set(var(\"ENF\",0),0);\n          3369 | \t\trexx.set(var(\"ENF_ERROR\",0),sprintf(w,\" unable to open %s logstream\",argv\u00c42\u00dc));\n          3370 | \t\treturn 8;\n          3371 | \t\u00fc\n          3372 | \tsize_t length = 0;\n          3373 | \tsize_t * lP   = &length;\n          3374 | \tpasm PASM = NULL;\n          3375 | \tchar * pointer = NULL;\n          3376 | \tint max = (argc>3)?atoi(argv\u00c44\u00dc):100;\n          3377 |\n          3378 | \tbool idflag = false;\n          3379 | \tint index = 1;\n          3380 | \twhile (rc=mvs()->BrowseLogger((const char * &)pointer,lP,atoi(argv\u00c43\u00dc),NULL,NULL)==0 && max>=index)\n          3381 | \t\u00e4\n          3382 | \t\tPASM = mvs()->getpasm();\n          3383 |\n          3384 | \t\tint rl = *(int *)pointer;\n          3385 | \t\tPFSWREC * pfswrec =(PFSWREC *)(pointer +4);\n          3386 | \t\tif (JOBENV::debug)\n          3387 | \t\t\t_dump(\" logger\",pointer,rl);\n          3388 | \t\tbool need = false;\n          3389 | \t\tENSGP ensgP = ENSGP(pointer-8);\n          3390 | \t\tHDLOGRECP hdlogrecP = HDLOGRECP((char *)pointer+ifbenf36_header_length+sizeof(*ensgP)-8);\n          3391 | \t\tSDWAP sdwaP=NULL;\n          3392 | \t\tif (JOBENV::debug)\n          3393 | \t\t\u00e4\n          3394 | \t\t\t_dump(\" ensg\",(char *)ensgP,128);\n          3395 | \t\t\tprintf(\" ENF code:%d\u00d6n \",ensgP->ensg_event_code);\n          3396 | \t\t\u00fc\n          3397 | \t\tswitch(ensgP->ensg_event_code)\n          3398 | \t\t\u00e4\n          3399 | \t\tcase 0:\n          3400 | \t\t\t\u00e4\n          3401 | \t\t\t\tneed = true;\n          3402 | \t\t\t\tswitch(pfswrec->pfswrec_type)\n          3403 | \t\t\t\t\u00e4\n          3404 | \t\t\t\tcase pfswrec_type_update:\n          3405 | \t\t\t\tcase pfswrec_type_delete:\n          3406 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"DSN\"),(char *)pfswrec->pfswrec_dsn,44);\n          3407 | \t\t\t\t\tbreak;\n          3408 | \t\t\t\tcase pfswrec_type_rename:\n          3409 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"DSN\"),(char *)pfswrec->pfswrec_newdsn,44);\n          3410 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"OLD_DSN\"),(char *)pfswrec->pfswrec_dsn,44);\n          3411 | \t\t\t\t\tbreak;\n          3412 | \t\t\t\tcase pfswrec_type_add_member:\n          3413 | \t\t\t\tcase pfswrec_type_delete_member:\n          3414 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"DSN\"),(char *)pfswrec->pfswrec_dsn,44);\n          3415 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"MEMBER\"),(char *)pfswrec->pfswrec_member,8);\n          3416 | \t\t\t\t\tbreak;\n          3417 | \t\t\t\tcase pfswrec_type_rename_member:\n          3418 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"DSN\"),(char *)pfswrec->pfswrec_newdsn,44);\n          3419 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"OLD_DSN\"),(char *)pfswrec->pfswrec_dsn,44);\n          3420 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"MEMBER\"),(char *)pfswrec->pfswrec_member,8);\n          3421 | \t\t\t\t\tbreak;\n          3422 | \t\t\t\tcase pfswrec_type_update_path:\n          3423 | \t\t\t\tcase pfswrec_type_delete_path:\n          3424 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"PATH\"),(char *)pfswrec->pfswrec_path,64);\n          3425 | \t\t\t\t\tbreak;\n          3426 | \t\t\t\tcase pfswrec_type_rename_path:\n          3427 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"PATH\"),(char *)pfswrec->pfswrec_newpath,64);\n          3428 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"OLD_PATH\"),(char *)pfswrec->pfswrec_path,64);\n          3429 | \t\t\t\t\tbreak;\n          3430 |\n          3431 | \t\t\t\t\u00fc\n          3432 | \t\t\t\u00fc\n          3433 | \t\t\tbreak;\n          3434 | \t\tcase 1:\n          3435 | \t\t\t\u00e4\n          3436 | \t\t\t\tDUMPXREC * rec =(DUMPXREC *)pointer;\n          3437 | \t\t\t\tneed = true;\n          3438 | \t\t\t\trexx.set(var(\"ENF\",index,\"TIME\"),rexxSMFtod(pULL(rec->dumpxrec_dumpxrec_stck)));\n          3439 | \t\t\t\trexx.set(var(\"ENF\",index,\"SYSTEM\"),(char *)rec->dumpxrec_dumpxrec_prdsname,4);\n          3440 | \t\t\t\trexx.set(var(\"ENF\",index,\"JOBNAME\"),(char *)rec->dumpxrec_dumpxrec_sdepljob,8);\n          3441 | \t\t\t\trexx.set(var(\"ENF\",index,\"CHANGE\"),\"Dump created\");\n          3442 | \t\t\t\trexx.set(var(\"ENF\",index,\"DSN\"),(char *)rec->dumpxrec_dumpxrec_prddsnam,40);\n          3443 | \t\t\t\trexx.set(var(\"ENF\",index,\"SIGNAL\"),1);\n          3444 |\n          3445 | \t\t\t\u00fc\n          3446 | \t\t\tbreak;\n          3447 | \t\tcase 2:\n          3448 | \t\t\t\u00e4\n          3449 | \t\t\t\tMPFXREC  * rec =(MPFXREC *)pointer;\n          3450 | \t\t\t\tneed = true;\n          3451 | \t\t\t\trexx.set(var(\"ENF\",index,\"TIME\"),rexxSMFtod(pULL(rec->mpfxrec_mpfxrec_stck)));\n          3452 | \t\t\t\trexx.set(var(\"ENF\",index,\"SYSTEM\"),(char *)rec->mpfxrec_mpfxrec_sysname,4);\n          3453 | \t\t\t\trexx.set(var(\"ENF\",index,\"JOBNAME\"),(char *)rec->mpfxrec_mpfxrec_jobname,8);\n          3454 | \t\t\t\trexx.set(var(\"ENF\",index,\"JOBID\"),(char *)rec->mpfxrec_mpfxrec_jobid,8);\n          3455 | \t\t\t\tsprintf(w,\"%4.4X\",*(short *)rec->mpfxrec_mpfxrec_asid);\n          3456 | \t\t\t\trexx.set(var(\"ENF\",index,\"ASID\"),w\t);\n          3457 | \t\t\t\trexx.set(var(\"ENF\",index,\"CHANGE\"),\"critical message\");\n          3458 | \t\t\t\trexx.set(var(\"ENF\",index,\"MSG\"),(char *)rec->mpfxrec_mpfxrec_ctxttmsg,126);\n          3459 |\n          3460 | \t\t\t\u00fc\n          3461 | \t\t\tbreak;\n          3462 |\n          3463 | \t\tcase 36:\n          3464 | \t\t\tneed = true;\n          3465 | \t\t\trexx.set(var(\"ENF\",index,\"LOGRECTYPE\"),logrec_types\u00c4hdlogrecP->hdrtyp\u00dc);\n          3466 | \t\t\tswitch(hdlogrecP->hdrtyp)\n          3467 | \t\tcase 0x40:\n          3468 | \t\tdefault:\n          3469 | \t\t\t\u00e4\n          3470 | \t\t\t\tsdwaP = SDWAP((char *)hdlogrecP+sizeof(*hdlogrecP));\n          3471 | \t\t\t\trexx.set(var(\"ENF\",index,\"JOBNAME\"),(char *)sdwaP,8);\n          3472 | \t\t\t\tsdwaP = SDWAP((char *)sdwaP+8);\n          3473 | \t\t\t\tunsigned int cc = *(int *)&(sdwaP->sdwafiob.sdwaabcc);\n          3474 | \t\t\t\tif ((cc&0x00FFF000)>>12)\n          3475 | \t\t\t\t\tsprintf(w,\"S%3.3X\",(cc&0x00FFF000)>>12);\n          3476 | \t\t\t\telse\n          3477 | \t\t\t\t\tsprintf(w,\"U%3.3X\",cc&0x00000FFF);\n          3478 | \t\t\t\trexx.set(var(\"ENF\",index,\"CMPC\"),w);\n          3479 | \t\t\t\trexx.set(var(\"ENF\",index,\"MODULE\"),(char *)sdwaP->sdwamodn,8);\n          3480 | \t\t\t\u00fc\n          3481 | \t\t\tbreak;\n          3482 | \t\tcase 0x4c:\n          3483 | \t\t\tbreak;\n          3484 | \t\tcase 29:\n          3485 | \t\tcase 30:\n          3486 | \t\tcase 55:\n          3487 | \t\tcase 67:\n          3488 | \t\t\tneed = true;\n          3489 | \t\t\tbreak;\n          3490 | \t\tcase 70:\n          3491 | \t\t\t//need = true;\n          3492 | \t\t\tENF70P enf70P = ENF70P(pointer+sizeof(*ensgP)-8);\n          3493 | \t\t\t/*\n          3494 | \t\t\tif (enf70P->enf70_queue == enf70_q_onmain && enf70P->enf70_qualifier == enf70_deselect &&\n          3495 | \t\t\t(enf70P->enf70_comp&enf70_cab]]enf70P->enf70_comp==enf70_cabn]]enf70P->enf70_comp==enf70_ccab]]en\n          3495 | f70P->enf70_comp==enf70_csec]]enf70P->enf70_comp==enf70_ceom))\n          3496 | \t\t\t*/\n          3497 | \t\t\tif (enf70P->enf70_comp&&enf70P->enf70_queue == enf70_q_onmain)\n          3498 | \t\t\t\u00e4\n          3499 | \t\t\t\tneed = true;\n          3500 | \t\t\t\trexx.set(var(\"ENF\",index,\"JOBNAME\"),(char *)enf70P->enf70_jobname,sizeof(enf70P->enf70_jobname))\n          3500 | ;\n          3501 | \t\t\t\trexx.set(var(\"ENF\",index,\"JOBID\"),(char *)enf70P->enf70_jobid,sizeof(enf70P->enf70_jobid));\n          3502 | \t\t\t\tif (isprint(*enf70P->enf70_srvclass))\n          3503 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"SRVCLASS\"),(char *)enf70P->enf70_srvclass,sizeof(enf70P->enf70_srvcla\n          3503 | ss));\n          3504 | \t\t\t\telse\n          3505 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"SRVCLASS\"),\" \");\n          3506 | \t\t\t\trexx.set(var(\"ENF\",index,\"COMP\"),int(enf70P->enf70_comp));\n          3507 | \t\t\t\tsprintf(w,\"%8.8x\",*(int *)&(enf70P->enf70_comp)&0x00FFFFFF);\n          3508 | \t\t\t\trexx.set(var(\"ENF\",index,\"CODE\"),w);\n          3509 | \t\t\t\u00fc\n          3510 | \t\t\tbreak;\n          3511 | \t\t\u00fc\n          3512 | \t\tif (need)\n          3513 | \t\t\u00e4\n          3514 | \t\t\trexx.set(var(\"ENF\",0),index);\n          3515 | \t\t\trexx.set(var(\"ENF\",index,\"SIGNAL\"),ensgP->ensg_event_code);\n          3516 | \t\t\tif (ensgP->ensg_event_code > 2)\n          3517 | \t\t\t\u00e4\n          3518 | \t\t\t\trexx.set(var(\"ENF\",index,\"TIME\"),rexxSMFtod(pULL((char *)&(ensgP->ensg_source_system_slot)+4)));\n          3519 | \t\t\t\tsprintf(w,\"%8.8X\",*(int *)(ensgP->ensg_qual));\n          3520 | \t\t\t\trexx.set(var(\"ENF\",index,\"QUAL\"),w);\n          3521 | \t\t\t\tsprintf(w,\"%8.8X\",*(int *)(ensgP->ensg_bitmap_qual));\n          3522 | \t\t\t\trexx.set(var(\"ENF\",index,\"BITQUAL\"),w);\n          3523 | \t\t\t\trexx.set(var(\"ENF\",index,\"SYSTEM\"),(char *)ensgP->ensg_source_system_name,sizeof(ensgP->ensg_sou\n          3523 | rce_system_name));\n          3524 | \t\t\t\u00fc\n          3525 | \t\t\telse\n          3526 | \t\t\t\tif (ensgP->ensg_event_code == 0)\n          3527 | \t\t\t\t\u00e4\n          3528 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"TIME\"),rexxSMFtod(pULL(pfswrec->pfswrec_stck)));\n          3529 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"SYSTEM\"),(char *)pfswrec->pfswrec_id_system,4);\n          3530 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"JOBNAME\"),(char *)pfswrec->pfswrec_id_jobname,8);\n          3531 | \t\t\t\t\trexx.set(var(\"ENF\",index,\"CHANGE\"),pfswrec_types\u00c4pfswrec->pfswrec_type\u00dc);\n          3532 | \t\t\t\t\u00fc\n          3533 | \t\t\t\tindex++;\n          3534 | \t\t\u00fc\n          3535 | \t\u00fc\n          3536 | \treturn 0;\n          3537 | \u00fc\n          3538 |\n          3539 | struct MSGXBUF_T\n          3540 | \u00e4\n          3541 | \ttime_t     mtime;   // Time and date message was sent\n          3542 | \tuid_t      muid;    // Sender's effective user ID\n          3543 | \tgid_t      mgid;    // Sender's effective group ID\n          3544 | \tpid_t      mpid;    // Sender's process ID\n          3545 | \tlong int   mtype;   // Message type\n          3546 | \tint        mtext\u00c4256\u00dc; // Message text\n          3547 | \u00fc ;\n          3548 |\n          3549 | typedef struct MSGXBUF_T msgxbuf_t;\n          3550 |\n          3551 | struct LOGSTREAM_T\n          3552 | \u00e4\n          3553 | \tint length;\n          3554 | \tint type;\n          3555 | \tint  mtext\u00c4256\u00dc;\n          3556 | \u00fc;\n          3557 |\n          3558 |\n          3559 |\n          3560 | int _dump(char * id,char * p,int l)\n          3561 | \u00e4\n          3562 | \tunsigned char ATOE\u00c4256\u00dc =\n          3563 | \t\u00e4\n          3564 | \t\t0, 0x1, 0x2, 0x3, 0x37, 0x2d, 0x2e, 0x2f,\n          3565 | \t\t0x16, 0x5, 0x25, 0xb, 0xc, 0xd, 0xe, 0xf,\n          3566 | \t\t0x10, 0x11, 0x12, 0x13, 0x3c, 0x3d, 0x32, 0x26,\n          3567 | \t\t0x18, 0x19, 0x3f, 0x27, 0x1c, 0x1d, 0x1e, 0x1f,\n          3568 | \t\t0x40, 0x4f, 0x7f, 0x7b, 0x5b, 0x6c, 0x50, 0x7d,\n          3569 | \t\t0x4d, 0x5d, 0x5c, 0x4e, 0x6b, 0x60, 0x4b, 0x61,\n          3570 | \t\t0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,\n          3571 | \t\t0xf8, 0xf9, 0x7a, 0x5e, 0x4c, 0x7e, 0x6e, 0x6f,\n          3572 | \t\t0xb5, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7,\n          3573 | \t\t0xc8, 0xc9, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6,\n          3574 | \t\t0xd7, 0xd8, 0xd9, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6,\n          3575 | \t\t0xe7, 0xe8, 0xe9, 0x63, 0xec, 0xfc, 0x5f, 0x6d,\n          3576 | \t\t0x79, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n          3577 | \t\t0x88, 0x89, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96,\n          3578 | \t\t0x97, 0x98, 0x99, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6,\n          3579 | \t\t0xa7, 0xa8, 0xa9, 0x43, 0xbb, 0xdc, 0x59, 0x7,\n          3580 | \t\t0x68, 0xd0, 0x51, 0x42, 0xc0, 0x44, 0x47, 0x48,\n          3581 | \t\t0x52, 0x53, 0x54, 0x57, 0x56, 0x58, 0x4a, 0x67,\n          3582 | \t\t0x71, 0x9c, 0x9e, 0xcb, 0x6a, 0xcd, 0xdb, 0xdd,\n          3583 | \t\t0xdf, 0xe0, 0x5a, 0x70, 0xb1, 0x80, 0xbf, 0xff,\n          3584 | \t\t0x45, 0x55, 0xce, 0xde, 0x49, 0x69, 0x9a, 0x9b,\n          3585 | \t\t0xab, 0xaf, 0xba, 0xb8, 0xb7, 0xaa, 0x8a, 0x8b,\n          3586 | \t\t0xff, 0xff, 0xff, 0xff, 0xff, 0x65, 0x62, 0x64,\n          3587 | \t\t0xb4, 0xff, 0xff, 0xff, 0xff, 0xb0, 0xb2, 0xff,\n          3588 | \t\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x46, 0x66,\n          3589 | \t\t0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f,\n          3590 | \t\t0x8c, 0xac, 0x72, 0x73, 0x74, 0xff, 0x75, 0x76,\n          3591 | \t\t0x77, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x78, 0xff,\n          3592 | \t\t0xee, 0xa1, 0xeb, 0xed, 0xcf, 0xef, 0xa0, 0x8e,\n          3593 | \t\t0xae, 0xfe, 0xfb, 0xfd, 0x8d, 0xad, 0xbc, 0xbe,\n          3594 | \t\t0xca, 0x8f, 0xff, 0xb9, 0xb6, 0x7c, 0xe1, 0x9d,\n          3595 | \t\t0x90, 0xbd, 0xb3, 0xda, 0xfa, 0xea, 0xff, 0x41\n          3596 | \t\u00fc;\n          3597 | \tint i , o;\n          3598 | \tprintf(\"%s at:%x(%d)\u00d6n\u00d6n\",id,p,l);\n          3599 | \tif (p)\n          3600 | \t\tfor(o = 0;o <((l/16)+1)*16;o+=16)\n          3601 | \t\t\u00e4\n          3602 | \t\t\tprintf(\"%4.4lx:\",o);\n          3603 | \t\t\tfor(i = o;i<o+16;i++)\n          3604 | \t\t\t\u00e4\n          3605 | \t\t\t\tif ( i < l )\n          3606 | \t\t\t\t\u00e4\n          3607 | \t\t\t\t\tprintf(\"%2.2x\",p\u00c4i\u00dc& 0xFF );\n          3608 | \t\t\t\t\tif (i%4 == 3) printf(\" \");\n          3609 |\n          3610 | \t\t\t\t\u00fc\n          3611 |\n          3612 | \t\t\t\telse\n          3613 | \t\t\t\t\u00e4\n          3614 | \t\t\t\t\tif ( i%4 == 3) printf(\" \");\n          3615 | \t\t\t\t\tprintf(\" \");\n          3616 | \t\t\t\t\u00fc\n          3617 | \t\t\t\u00fc\n          3618 | \t\t\tprintf(\" \");\n          3619 | \t\t\tfor(i = o;i<o+16;i++)\n          3620 | \t\t\t\tif ( i < l )\n          3621 | \t\t\t\t\tprintf(\"%c\",isprint(p\u00c4i\u00dc)? p\u00c4i\u00dc:'.');\n          3622 | \t\t\t\telse printf(\" \");\n          3623 | \t\t\t\tprintf(\" \");\n          3624 | \t\t\t\tfor(i = o;i<o+16;i++)\n          3625 | \t\t\t\t\tif ( i < l )\n          3626 | \t\t\t\t\t\tprintf(\"%c\",isprint(ATOE\u00c4p\u00c4i\u00dc\u00dc)?ATOE\u00c4p\u00c4i\u00dc\u00dc:'.');  printf(\"\u00d6n\");\n          3627 |\n          3628 | \t\t\u00fc\n          3629 | \t\treturn l;\n          3630 | \u00fc\n          3631 |\n          3632 | static iconv_t cpconv = 0;\n          3633 | char    msgbuf\u00c41024\u00dc;\n          3634 |\n          3635 | char* translate(char* input, char* tbl)\n          3636 | \u00e4\n          3637 | \tchar *outbuf = msgbuf;\n          3638 | \tchar *limit  = input + 1023;\n          3639 | \toutbuf\u00c41023\u00dc = '\u00d60';\n          3640 |\n          3641 | \tif (cpconv == 0)\n          3642 | \t\u00e4\n          3643 | \t\tsize_t  i,   il, ol;\n          3644 | \t\tchar   *pe_to_a, *pa_to_e, c\u00c4256\u00dc, *pc = c;\n          3645 |\n          3646 | \t\tfor (i=0; i<256; ++i) c\u00c4i\u00dc = i;\n          3647 |\n          3648 | \t\tcpconv = iconv_open(\"ISO8859-1\", \"IBM-273\");\n          3649 | \t\tpc = c; pe_to_a = e_to_a; pa_to_e = a_to_e; il = ol = 256;\n          3650 | \t\ticonv(cpconv, &pc, &il, &pe_to_a, &ol);\n          3651 |\n          3652 | \t\tcpconv = iconv_open(\"IBM-273\", \"ISO8859-1\");\n          3653 | \t\tpc = c; pe_to_a = e_to_a; pa_to_e = a_to_e; il = ol = 256;\n          3654 | \t\ticonv(cpconv, &pc, &il, &pa_to_e, &ol);\n          3655 | \t\u00fc\n          3656 | \twhile ((input < limit) && (*outbuf = tbl\u00c4*input\u00dc))\n          3657 | \t\u00e4\n          3658 | \t\t++input; ++outbuf;\n          3659 | \t\u00fc\n          3660 | \treturn msgbuf;\n          3661 | \u00fc\n          3662 |\n          3663 |\n          3664 |\n          3665 |\n          3666 |\n          3667 |\n          3668 |\n          3669 |\n          3670 | typedef struct r79cchnl * R79celem;\n          3671 | typedef struct smf79pro * Smf79pro;\n          3672 | typedef struct r79cchnl   R79cchnl;\n          3673 | typedef struct r793     * R793;\n          3674 | #define UINTF(n) (*(unsigned int *)(n))\n          3675 | #define INTF(n) (*(signed int *)(n))\n          3676 | static R79cchnl channels\u00c4256\u00dc;\n          3677 | typedef struct r792elem R792elem;\n          3678 | typedef struct r79chl R79chl;\n          3679 | typedef struct smf79hdr  SMF79hdr;\n          3680 | typedef struct smf79pro  SMF79pro;\n          3681 | typedef struct ascb * ascbP;\n          3682 | typedef struct asvt * asvtP;\n          3683 |\n          3684 | int _rexxrmf2()\n          3685 | \u00e4\n          3686 | \tchar w\u00c432760\u00dc;\n          3687 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          3688 | \tREXXVAR rexx(JOBENV::debug);\n          3689 |\n          3690 | \tcvtP      cvt = *(cvtP* )0x10;\n          3691 | \tasvtP    asvt = asvtP(cvt->cvtasvt);\n          3692 | \tunsigned char * *  asvtEntryP   =(unsigned char * *)&(asvt->asvtenty);\n          3693 | \tif (JOBENV::debug)\n          3694 | \t\t_dump(\"ASVT\",(char *)asvtEntryP,4096);\n          3695 |\n          3696 | \trexx.set(var(\"RMF2\",0),0);\n          3697 |\n          3698 | \tERB2XDGS_Addr Get_SMF_Record_79 = (ERB2XDGS_Addr) NULL;\n          3699 | \t/* This program's ERB2XDGS default parameters */\n          3700 |\n          3701 | \tAnswerAreaAddress MyDgsAnswerAreaAddress = 0;\n          3702 | \tALET             MyDgsAnswerAreaALET    = 0;\n          3703 | \tunsigned long int MyDgsAnswerAreaLength = 1048576;\n          3704 |\n          3705 | \tSystemName       MySystemName           ;\n          3706 | \tmemcpy(MySystemName,\"*ALL\",sizeof(MySystemName));\n          3707 |\n          3708 | \tDataGatheringParm MyDataGatheringParm   = \u00e4 79, 2, \"\" \u00fc;\n          3709 | \tDataGatheringPLen MyDataGatheringPLen   = 4;\n          3710 |\n          3711 | \tExitName         MyExitName             ;\n          3712 | \tmemcpy(MyExitName,\"ERB2XSMF\",sizeof(MyExitName));\n          3713 | \tExitParm         MyExitParm             = \"\";\n          3714 | \tExitParmLength   MyExitParmLength       = 0;\n          3715 |\n          3716 | \tunsigned long int MyDgsTimeOut          = 30;\n          3717 |\n          3718 | \tunsigned long int MyDgsReturnCode       = 0;\n          3719 | \tunsigned long int MyDgsReasonCode       = 0;\n          3720 |\n          3721 | \t/* Get ERB2XDGS Answer Area storage */\n          3722 |\n          3723 | \tif ( ( MyDgsAnswerAreaAddress\n          3724 | \t\t= (AnswerAreaAddress) malloc( MyDgsAnswerAreaLength ) ) == (AnswerAreaAddress) NULL )\n          3725 | \t\u00e4\n          3726 | \t\trexx.set(\"RMF2_ERROR\",sprintf( w,\"\u00d6nERB2XDGS Answer Area allocation failed.\u00d6n\" ));\n          3727 | \t\treturn( 8 );\n          3728 | \t\u00fc;\n          3729 |\n          3730 | \t/* Load RMF callable services ... */\n          3731 |\n          3732 | \tif ( ( Get_SMF_Record_79 = (ERB2XDGS_Addr)fetch(\"ERB2XDGS\")) == (ERB2XDGS_Addr) NULL )\n          3733 | \t\u00e4\n          3734 | \t\trexx.set(\"RMF2_ERROR\",sprintf(w, \"\u00d6nERB2XDGS fetch failed.\u00d6n\" ));\n          3735 | \t\treturn( 8 );\n          3736 | \t\u00fc;\n          3737 |\n          3738 | \t/* Now invoke RMF callable service ... */\n          3739 |\n          3740 |\n          3741 | \t(*Get_SMF_Record_79)( &MyDgsAnswerAreaAddress,\n          3742 | \t\t&MyDgsAnswerAreaALET,\n          3743 | \t\t&MyDgsAnswerAreaLength,\n          3744 | \t\t&MySystemName,\n          3745 | \t\t&MyDataGatheringParm,\n          3746 | \t\t&MyDataGatheringPLen,\n          3747 | \t\t&MyExitName,\n          3748 | \t\tMyExitParm,\n          3749 | \t\t&MyExitParmLength,\n          3750 | \t\t&MyDgsTimeOut,\n          3751 | \t\t&MyDgsReturnCode,\n          3752 | \t\t&MyDgsReasonCode );\n          3753 |\n          3754 |\n          3755 | \t/* Work with the returned RMF Monitor II data ... */\n          3756 | \tif (MyDgsReturnCode == 0)\n          3757 | \t\u00e4\n          3758 |\n          3759 | \t\t//printf(\" Answer area:%p\u00d6n\",MyDgsAnswerAreaAddress);\n          3760 |\n          3761 | \t\tAnswerAreaHeader * h = (AnswerAreaHeader *)MyDgsAnswerAreaAddress;\n          3762 | \t\tSystemListEntry * s = (SystemListEntry * )\n          3763 | \t\t\t((char *)h+h->SystemListOffset);\n          3764 | \t\t/* Release Answer Area storage */\n          3765 | \t\tsprintf(w,\"%8.8s\",h->SysplexName);\n          3766 | \t\trexx.set(\"RMF2_SYSPLEX_NAME\",w);\n          3767 |\n          3768 | \t\trexx.set(var(\"RMF2_SYSPLEX\",0),int(h->SystemListEntryNumber));\n          3769 | \t\tfor (int i =0;i <h->SystemListEntryNumber;i++)\n          3770 | \t\t\u00e4\n          3771 | \t\t\tsprintf(w,\"%8.8s\",s->MVSSystemName);\n          3772 | \t\t\trexx.set(var(\"RMF2_SYSPLEX\",i+1,\"SYSTEM_NAME\"),w);\n          3773 | \t\t\tsprintf(w,\"%4.4s\",s->SMFSystemID);\n          3774 | \t\t\trexx.set(var(\"RMF2_SYSPLEX\",i+1,\"SYSTEM_SMFID\"),w);\n          3775 | \t\t\ts =(SystemListEntry *)((char *)s+h->SystemListEntryLength);\n          3776 | \t\t\u00fc\n          3777 | \t\tMonitor2DataEntry * d = (Monitor2DataEntry *)((char *)h+h->DataOffset);\n          3778 | \t\tSMF79hdr * hdr       =(SMF79hdr *)((char *)d+d->Monitor2HeaderLength);\n          3779 |\n          3780 | \t\t//printf(\" SMF79hdr:%d SMF79pro:%d R79chl:%d\u00d6n\",\n          3781 | \t\t//  sizeof(SMF79hdr),sizeof(SMF79pro),sizeof(R79chl));\n          3782 |\n          3783 | \t\tR792elem * r = (R792elem *)((char *)hdr+hdr->smf79ass);\n          3784 | \t\trexx.set(\"RMF2_CPU\",int(d->Monitor2DataSystemCpuUtilization));\n          3785 | \t\t/*\n          3786 | \t\tif (argv\u00c41\u00dc)\n          3787 | \t\tprintf(\" %s (%d)\u00d6n\",argv\u00c41\u00dc,strlen(argv\u00c41\u00dc));\n          3788 | \t\t*/\n          3789 | \t\tint count = 0;\n          3790 | \t\tfor (int i =0;i<hdr->smf79asn;i++)\n          3791 | \t\t\u00e4\n          3792 | \t\t\t//if (argv\u00c41\u00dc==0]]memcmpi((const char *)(r->r792jbn),argv\u00c41\u00dc,strlen(argv\u00c41\u00dc))==0)\n          3793 | \t\t\t\u00e4\n          3794 | \t\t\t\tcount++;\n          3795 | \t\t\t\tsprintf(w,\"%4.4X\",*(short *)r->r792asid);\n          3796 | \t\t\t\trexx.set(var(\"RMF2\",count,\"ASID\"),w);\n          3797 | \t\t\t\trexx.set(var(\"RMF2\",count,\"JOBID\"),\"\");\n          3798 | \t\t\t\t//if ((unsigned char )((*asvtEntryP\u00c4(*(short *)r->r792asid)\u00dc)-1)&(unsigned char)0x80==0)\n          3799 | \t\t\t\t\u00e4\n          3800 | \t\t\t\t\tascbP myascb = (ascbP)asvtEntryP\u00c4((*(short *)r->r792asid))-1\u00dc;\n          3801 | \t\t\t\t\tassbP myassb = (assbP)myascb->ascbassb;\n          3802 | \t\t\t\t\tiazjsabP myjsab = (iazjsabP)myassb->assbjsab;\n          3803 | \t\t\t\t\tif (JOBENV::debug)\n          3804 | \t\t\t\t\t\u00e4\n          3805 | \t\t\t\t\t\t_dump(\"ASCB\",(char *)myascb,1024);\n          3806 | \t\t\t\t\t\t_dump(\"ASSB\",(char *)myassb,sizeof(*myassb));\n          3807 | \t\t\t\t\t\t_dump(\"JSAB\",(char *)myjsab,sizeof(*myjsab));\n          3808 | \t\t\t\t\t\u00fc\n          3809 |\n          3810 | \t\t\t\t\tif (myjsab&&myjsab->jsabjbid\u00c40\u00dc)\n          3811 | \t\t\t\t\t\u00e4\n          3812 | \t\t\t\t\t\tsprintf(w,\"%8.8s\",myjsab->jsabjbid);\n          3813 | \t\t\t\t\t\trexx.set(var(\"RMF2\",count,\"JOBID\"),w);\n          3814 | \t\t\t\t\t\u00fc\n          3815 |\n          3816 | \t\t\t\t\u00fc\n          3817 | \t\t\t\tsprintf(w,\"%8.8s\",r->r792jbn);\n          3818 | \t\t\t\trexx.set(var(\"RMF2\",count,\"JOBNAME\"),w);\n          3819 | \t\t\t\trexx.set(var(\"RMF2\",count,\"DOMAIN\"),*(short *)r->r792jbn);\n          3820 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PERFORMANCE_GROUP\"),*(short*)r->r792npg);\n          3821 | \t\t\t\trexx.set(var(\"RMF2\",count,\"CURRENT_LOCATION\"),*(short*)r->r792cl);\n          3822 | \t\t\t\trexx.set(var(\"RMF2\",count,\"TRANSACTION_COUNT\"),*(short *)r->r792trc);\n          3823 | \t\t\t\trexx.set(var(\"RMF2\",count,\"TRANSACTION_TIME\"),(*(int *)r->r792trc)/1000);\n          3824 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PRIVATE_FRAMES\"),*(int *)r->r792prfx);\n          3825 | \t\t\t\trexx.set(var(\"RMF2\",count,\"SRM_SERVICE_RATE\"),*(int *)r->r792svar);\n          3826 | \t\t\t\trexx.set(var(\"RMF2\",count,\"TCB_CPU\"),(*(int *)r->r792tcpu)/1000);\n          3827 | \t\t\t\trexx.set(var(\"RMF2\",count,\"TOTAL_CPU\"),(*(int *)r->r792ejst)/1000);\n          3828 | \t\t\t\trexx.set(var(\"RMF2\",count,\"TOTAL_SRM\"),*(int *)r->r792tsrm);\n          3829 | \t\t\t\trexx.set(var(\"RMF2\",count,\"STEP_RESIDENT_TIME\"),*(int *)r->r792rtm);\n          3830 | \t\t\t\trexx.set(var(\"RMF2\",count,\"EXCP_COUNT\"),*(int *)r->r792excp);\n          3831 |\n          3832 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_COMMON\"),*(int *)r->r792cmni);\n          3833 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_NONVIO\"),*(int *)r->r792pnv);\n          3834 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_VIO\"),*(int *)r->r792pvio);\n          3835 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_FIXED\"),*(int *)r->r792fxbl);\n          3836 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_SWAPPED_IN\"),*(int *)r->r792pswp);\n          3837 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_LPA_SWAPPED_IN\"),*(int *)r->r792lpai);\n          3838 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_CSA_SWAPPED_IN\"),*(int *)r->r792csai);\n          3839 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_FIXED_LSQA\"),*(int *)r->r792cmni);\n          3840 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_FIXED_NONLSQA\"),*(int *)r->r792cmni);\n          3841 | \t\t\t\trexx.set(var(\"RMF2\",count,\"DEVICE_CONNECT\"),*(int *)r->r792tdev);\n          3842 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGE_IN\"),*(int *)r->r792pin);\n          3843 | \t\t\t\trexx.set(var(\"RMF2\",count,\"TRANSACTION_RESIDENCY\"),(*(int *)r->r792trtm)/1000);\n          3844 | \t\t\t\trexx.set(var(\"RMF2\",count,\"LSQA_REAL\"),*(int *)r->r792lsqr);\n          3845 | \t\t\t\trexx.set(var(\"RMF2\",count,\"LSQA_EXTENDED\"),*(int *)r->r792lsqe);\n          3846 | \t\t\t\trexx.set(var(\"RMF2\",count,\"REAL_FRAME_AVERAGE\"),*(int *)r->r792ars);\n          3847 | \t\t\t\trexx.set(var(\"RMF2\",count,\"SRM_TARGET_WORKINGSET\"),*(int *)r->r792twss);\n          3848 | \t\t\t\trexx.set(var(\"RMF2\",count,\"HIPERSPACE_PAGES\"),*(int *)r->r792phsp);\n          3849 | \t\t\t\trexx.set(var(\"RMF2\",count,\"PAGES_COMMONT\"),*(int *)r->r792cmni);\n          3850 | \t\t\t\tsprintf(w,\"%8.8s\",r->r792scl);\n          3851 | \t\t\t\trexx.set(var(\"RMF2\",count,\"SERVICE_CLASS\"),w);\n          3852 | \t\t\t\trexx.set(var(\"RMF2\",count,\"SERVICE_CLASS_PERIOD\"),*(short *)r->r792scp);\n          3853 | \t\t\t\tsprintf(w,\"%8.8s\",r->r792wkld);\n          3854 | \t\t\t\trexx.set(var(\"RMF2\",count,\"WORKLOAD_NAME\"),w);\n          3855 | \t\t\t\tsprintf(w,\"%8.8s\",r->r792rgrp);\n          3856 | \t\t\t\trexx.set(var(\"RMF2\",count,\"RESOURCE_GROUP\"),w);\n          3857 | \t\t\t\u00fc\n          3858 | \t\t\tr =(R792elem *)((char *)r+hdr->smf79asl);\n          3859 |\n          3860 | \t\t\u00fc\n          3861 | \t\trexx.set(var(\"RMF2\",0),count);\n          3862 | \t\u00fc\n          3863 | \telse\n          3864 | \t\u00e4\n          3865 | \t\tsprintf(w,\" ERB2XDGS rc:%d reason:%d\u00d6n\",MyDgsReturnCode,MyDgsReasonCode);\n          3866 | \t\trexx.set(\"RMF2_ERROR\",w);\n          3867 | \t\u00fc\n          3868 | \tfree( MyDgsAnswerAreaAddress );\n          3869 |\n          3870 | \treturn( MyDgsReturnCode );\n          3871 |\n          3872 | \u00fc;\n          3873 |\n          3874 | const int Mbyte = 1024*1024;\n          3875 | char vsmlist\u00c4Mbyte\u00dc;\n          3876 | cvtP      cvt = *(cvtP* )0x10;\n          3877 | asvtP    asvt = asvtP(cvt->cvtasvt);\n          3878 | unsigned char * *  asvtEntryP   =(unsigned char * *)&(asvt->asvtenty);\n          3879 | int procVsmlist(char *);\n          3880 |\n          3881 | class  asData\n          3882 | \u00e4\n          3883 | public:\n          3884 | \tascbP ascb;\n          3885 | \tshort asid;\n          3886 | \tchar jobname\u00c49\u00dc;\n          3887 | \tchar jobid\u00c49\u00dc;\n          3888 | \tDBLWRD cpu;\n          3889 | \tDBLWRD cpuOld;\n          3890 | \tDBLWRD * ejst;\n          3891 | \tDBLWRD * srbt;\n          3892 | \tint stor;\n          3893 | \tint storDiff;\n          3894 | \tDBLWRD * iosx;\n          3895 | \tDBLWRD  excp;\n          3896 | \tDBLWRD  excpDiff;\n          3897 | \tchar time\u00c430\u00dc;\n          3898 | \tint times;\n          3899 | public:\n          3900 | \tasData(const char * );\n          3901 | \tasData(int id)\n          3902 | \t\u00e4\n          3903 | \t\tif ((unsigned char )(*asvtEntryP\u00c4id\u00dc)&(unsigned char)0x80==0)\n          3904 | \t\t\tascb = (ascbP)asvtEntryP\u00c4id\u00dc;\n          3905 | \t\tinit();\n          3906 | \t\u00fc\n          3907 | \tint set();\n          3908 | \tvoid print();\n          3909 | \tint printRexx(REXXVAR *);\n          3910 | \tvoid get();\n          3911 | \tvoid printTitle()\n          3912 | \t\u00e4\n          3913 | \t\tprintf(\" %s %s\u00d6n\",jobname,jobid);\n          3914 | \t\tprintf(\"    Cpu     CpuD      Stor      StorD      Excp    ExcpD \u00d6n\");\n          3915 | \t\u00fc\n          3916 | private:\n          3917 | \tascbP search(const char *);\n          3918 | \tvoid init();\n          3919 | \u00fc ;\n          3920 |\n          3921 | asData::asData(const char * name)\n          3922 | \u00e4\n          3923 | \tif (ascb = search(name))\n          3924 | \t\tinit();\n          3925 | \u00fc\n          3926 |\n          3927 | ascbP asData::search(const char * name)\n          3928 | \u00e4\n          3929 | \tascbP a = NULL;\n          3930 | \tunsigned char * pascb =(unsigned char *)&(asvt->asvtenty);\n          3931 | \tfor (int i =0;i<asvt->asvtmaxi;i++,pascb+=4)\n          3932 | \t\u00e4\n          3933 | \t\tif ((*pascb&(unsigned char)0x80)==0)\n          3934 | \t\t\u00e4\n          3935 | \t\t\ta = *(ascbP *)pascb;\n          3936 | \t\t\tif (a)\n          3937 | \t\t\t\u00e4\n          3938 | \t\t\t\tif (a->ascbjbni)\n          3939 | \t\t\t\t\u00e4\n          3940 | \t\t\t\t\tif (memcmp(name,a->ascbjbni,strlen(name))==0)\n          3941 | \t\t\t\t\t\tbreak;\n          3942 | \t\t\t\t\u00fc\n          3943 | \t\t\t\telse\n          3944 | \t\t\t\t\tif  (memcmp(name,a->ascbjbns,strlen(name))==0)\n          3945 | \t\t\t\t\t\tbreak;\n          3946 | \t\t\t\u00fc\n          3947 | \t\t\u00fc\n          3948 | \t\u00fc\n          3949 | \tif (JOBENV::debug)\n          3950 | \t\t_dump(\"ASCB\",(char *)a,1024);\n          3951 | \treturn a;\n          3952 | \u00fc\n          3953 |\n          3954 | void asData::init()\n          3955 | \u00e4\n          3956 | \tasid  = ascb->ascbasid;\n          3957 | \tif (ascb->ascbjbni)\n          3958 | \t\tsprintf(jobname,\"%8.8s\",ascb->ascbjbni);\n          3959 | \telse\n          3960 | \t\tsprintf(jobname,\"%8.8s\",ascb->ascbjbns);\n          3961 | \tfor(int i =0;i<8;i++)\n          3962 | \t\tif (jobname\u00c4i\u00dc == ' ')\n          3963 | \t\t\tjobname\u00c4i\u00dc = 0;\n          3964 |\n          3965 | \tassbP assb = (assbP)ascb->ascbassb;\n          3966 | \tiazjsabP jsab = (iazjsabP)assb->assbjsab;\n          3967 | \tif (jsab->jsabjbid\u00c40\u00dc)\n          3968 | \t\tsprintf(jobid,\"%8.8s\",jsab->jsabjbid);\n          3969 | \telse\n          3970 | \t\tjobid\u00c40\u00dc =0;\n          3971 | \tejst = (DBLWRD *)&(ascb->ascbejst);\n          3972 | \tsrbt = (DBLWRD *)&(ascb->ascbsrbt);\n          3973 | \tcpu = *ejst+*srbt;\n          3974 | \tcpuOld = cpu;\n          3975 | \tiosx = (DBLWRD *)&(ascb->ascbiosx);\n          3976 | \texcp = *iosx;\n          3977 | \texcpDiff = excp;\n          3978 | \tif (mvs()->Vsmlist(ascb,vsmlist,sizeof(vsmlist)))\n          3979 | \t\tstor = procVsmlist(vsmlist);\n          3980 | \telse\n          3981 | \t\tstor = 0;\n          3982 | \tstorDiff = stor;\n          3983 | \ttimes = 0;\n          3984 | \tformatTime(time,sizeof(time),\"%H:%M:%S\");\n          3985 | \tif (JOBENV::debug)\n          3986 | \t\t_dump(\"asData\",(char *)this,sizeof(asData));\n          3987 | \u00fc;\n          3988 |\n          3989 | int  asData::set()\n          3990 | \u00e4\n          3991 | \ttimes +=   (argv\u00c42\u00dc?atoi(argv\u00c42\u00dc):60);\n          3992 | \tassbP assb = (assbP)ascb->ascbassb;\n          3993 | \tiazjsabP jsab = (iazjsabP)assb->assbjsab;\n          3994 |\n          3995 | \tif (((ascb->ascbjbni&&memcmp(jobname,ascb->ascbjbni,8)==0)]]\n          3996 | \t\tmemcmp(jobname,ascb->ascbjbns,8)==0)&&\n          3997 | \t\tmemcmp(jobid,jsab->jsabjbid,8)==0)\n          3998 | \t\u00e4\n          3999 | \t\tcpuOld = cpu;\n          4000 | \t\tcpu = *ejst+*srbt;\n          4001 | \t\texcpDiff = *iosx-excp;\n          4002 | \t\texcp = *iosx;\n          4003 | \t\tif (mvs()->Vsmlist(ascb,vsmlist,sizeof(vsmlist)))\n          4004 | \t\t\u00e4\n          4005 | \t\t\tint _stor = procVsmlist(vsmlist);\n          4006 | \t\t\tstorDiff = _stor-stor;\n          4007 | \t\t\tstor = _stor;\n          4008 | \t\t\u00fc\n          4009 | \t\telse\n          4010 | \t\t\tstor = storDiff =0;\n          4011 | \t\tformatTime(time,sizeof(time),\"%H:%M:%S\");\n          4012 | \t\tif (JOBENV::debug)\n          4013 | \t\t\t_dump(\"asData\",(char *)this,sizeof(asData));\n          4014 | \t\treturn 1;\n          4015 | \t\u00fc\n          4016 | \telse\n          4017 | \t\treturn 0;\n          4018 | \u00fc\n          4019 |\n          4020 | void asData::print()\n          4021 | \u00e4\n          4022 | \tint _cpu = ((cpu>>12)+500)/1000;\n          4023 | \tint _cpuOld = ((cpuOld>>12)+500)/1000;\n          4024 | \tprintf(\"%d %d %d %d %d %llu  %llu\u00d6n\",times,\n          4025 | \t\t_cpu,_cpu-_cpuOld,\n          4026 | \t\tstor,storDiff,\n          4027 | \t\texcp,excpDiff);\n          4028 | \u00fc\n          4029 |\n          4030 | int asData::printRexx(REXXVAR * rexx)\n          4031 | \u00e4\n          4032 | \tint _cpu = ((cpu>>12)+500)/1000;\n          4033 | \tint _excp = excp/1024;\n          4034 | \t/*\n          4035 | \trexx->set(var(jobname,0,\"CPU\"),_cpu);\n          4036 | \trexx->set(var(jobname,0,\"EXCP\"),_excp);\n          4037 | \trexx->set(var(jobname,0,\"VSTOR\"),stor);\n          4038 | \t*/\n          4039 | \treturn stor;\n          4040 | \u00fc\n          4041 |\n          4042 | int procVsmlist(char * pList)\n          4043 | \u00e4\n          4044 | \tif (JOBENV::debug)\n          4045 | \t\t_dump(\"vsmList\",pList,4096);\n          4046 | \tint size = 0;\n          4047 | \tint *p   = (int *)pList;\n          4048 | \tint  tcbcount = *p++;\n          4049 | \twhile (tcbcount--)\n          4050 | \t\u00e4\n          4051 | \t\tbool need = true;\n          4052 | \t\tint tcb    =  *p++;\n          4053 | \t\tint spcount = *p++;\n          4054 | \t\twhile(spcount--)\n          4055 | \t\t\u00e4\n          4056 | \t\t\tint subpool = (*p>>8&0x000000FF);\n          4057 | \t\t\tp+=1;\n          4058 | \t\t\tneed = (tcb == *p++);\n          4059 | \t\t\tint bcount = *p++;\n          4060 | \t\t\twhile(bcount--)\n          4061 | \t\t\t\u00e4\n          4062 | \t\t\t\tif ((*p&0x7F000000)&&need&&subpool-229&&subpool-230&&subpool-236&&subpool-237)\n          4063 | \t\t\t\t\u00e4\n          4064 | \t\t\t\t\tif (JOBENV::debug)\n          4065 | \t\t\t\t\t\tprintf(\" %p  \",*p);\n          4066 | \t\t\t\t\tp+=1;\n          4067 | \t\t\t\t\tif (JOBENV::debug)\n          4068 | \t\t\t\t\t\tprintf(\" %p\",*p);\n          4069 | \t\t\t\t\tsize +=*p++;\n          4070 | \t\t\t\t\tif (JOBENV::debug)\n          4071 | \t\t\t\t\t\tprintf(\" size:%d subpool:%d\u00d6n\",size,subpool);\n          4072 | \t\t\t\t\u00fc\n          4073 | \t\t\t\telse\n          4074 | \t\t\t\t\tp+=2;\n          4075 | \t\t\t\tint fcount = *p++;\n          4076 | \t\t\t\twhile(fcount--)\n          4077 | \t\t\t\t\u00e4\n          4078 | \t\t\t\t\tif ((*p&0x7F000000)&&need&&subpool-229&&subpool-230&&subpool-236&&subpool-237)\n          4079 | \t\t\t\t\t\u00e4\n          4080 | \t\t\t\t\t\tif (JOBENV::debug)\n          4081 | \t\t\t\t\t\t\tprintf(\" %p  \",*p);\n          4082 | \t\t\t\t\t\tp+=1;\n          4083 | \t\t\t\t\t\tif (JOBENV::debug)\n          4084 | \t\t\t\t\t\t\tprintf(\" %p\",*p);\n          4085 | \t\t\t\t\t\tsize -=*p++;\n          4086 | \t\t\t\t\t\tif (JOBENV::debug)\n          4087 | \t\t\t\t\t\t\tprintf(\" size:%d subpool:%d\u00d6n\",size,subpool);\n          4088 | \t\t\t\t\t\u00fc\n          4089 | \t\t\t\t\telse\n          4090 | \t\t\t\t\t\tp+=2;\n          4091 | \t\t\t\t\u00fc\n          4092 | \t\t\t\u00fc\n          4093 | \t\t\u00fc\n          4094 | \t\u00fc\n          4095 | \treturn (size+512)/1024;\n          4096 | \u00fc\n          4097 |\n          4098 |\n          4099 | int _vsmlist()\n          4100 | \u00e4\n          4101 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          4102 | \tasData * as = new asData(argv\u00c41\u00dc);\n          4103 | \tas->printTitle();\n          4104 | \tint count= argv\u00c43\u00dc?atoi(argv\u00c42\u00dc):10;\n          4105 | \tfor(int i = 0;i<count;i++)\n          4106 | \t\u00e4\n          4107 | \t\tsleep(argv\u00c42\u00dc?atoi(argv\u00c42\u00dc):60);\n          4108 | \t\tas->set();\n          4109 | \t\tas->print();\n          4110 | \t\u00fc\n          4111 | \treturn 0;\n          4112 | \u00fc\n          4113 |\n          4114 | int _rexxvsm()\n          4115 | \u00e4\n          4116 | \tREXXVAR rexx(JOBENV::debug);\n          4117 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          4118 | \tasData * as = new asData(argv\u00c41\u00dc);\n          4119 | \treturn as->printRexx(&rexx);\n          4120 | \u00fc\n          4121 | #define GIM_FREE      \"FREE    \"\n          4122 | #define GIM_QUERY     \"QUERY   \"\n          4123 | #define GIM_VERSION   \"VERSION \"\n          4124 | #define APILANG   \"ENU\"\n          4125 | #define TXT_VER   \"VER\"\n          4126 | #define LEN_ETYPE        12\n          4127 | #define LEN_ENAME         8\n          4128 | #define LEN_ZNAME         7\n          4129 | #define LEN_VERNUM        3\n          4130 | #define LEN_TXTVER        3\n          4131 | #define LEN_MSG         256\n          4132 | typedef void APIPGM(char *,void *,void *,char *,long *,long  *, char *);\n          4133 | typedef void cfunc();\n          4134 | #pragma linkage(APIPGM,OS)\n =======================================\u00ac\n \"//'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'\", line 4134.24: CCN6404 (W) The parameter \"OS\" specified for \"pragma linkage\" is not valid. The\n pragma is ignored.\n          4135 |\n          4136 | static void errprint(char *, long, long, ITEM_LIST *,REXXVAR &);\n          4137 | static char *valprint(ITEM_LIST *);\n          4138 | static void resprint(ENTRY_LIST *,REXXVAR & );\n          4139 |\n          4140 | int _rexxgim()\n          4141 | \u00e4\n          4142 | \tchar w\u00c432760\u00dc;\n          4143 | \tjobEnv = new JOBENV(argv\u00c40\u00dc);\n          4144 | \tREXXVAR rexx(JOBENV::debug);\n          4145 | \tlong  rc,cc;\n          4146 | \tQUERY_PARMS qparms;\n          4147 | \tP_QUERY_PARMS pqparms = &qparms;\n          4148 | \tENTRY_LIST  *qreslt;\n          4149 | \tITEM_LIST   *msgbuff;\n          4150 | \tAPIPGM      *gimapi;\n          4151 | \tAPI_VERSION pgmversion;\n          4152 | \tAPI_VERSION *apiversion;\n          4153 |\n          4154 | \tchar csi\u00c445\u00dc;\n          4155 | \tchar zone\u00c4100\u00dc;\n          4156 | \tchar ent\u00c4100\u00dc;\n          4157 | \tchar subent\u00c4100\u00dc;\n          4158 | \tchar filter\u00c41024\u00dc;\n          4159 |\n          4160 | \trc = 0;\n          4161 | \tcc = 0;\n          4162 |\n          4163 | \t/******************************************************************/\n          4164 | \t/* Initialize pgmversion to API version used when program was     */\n          4165 | \t/* written.  This is compared with the version returned from a    */\n          4166 | \t/* call to GIMAPI with the VERSION command.                       */\n          4167 | \t/******************************************************************/\n          4168 |\n          4169 | \tstrncpy((char *)&pgmversion,\"01090500\",8);\n          4170 |\n          4171 | \t/***********************************************/\n          4172 | \t/* Load the GIMAPI load module for use later   */\n          4173 | \t/***********************************************/\n          4174 | \tgimapi = (APIPGM *) fetch(\"GIMAPI\");\n          4175 | \trexx.set(var(\"GIM\",0),0);\n          4176 | \trexx.set(\"GIM_ERROR\",\"\");\n          4177 | \t/****************************************************************/\n          4178 | \t/* Call GIMAPI with VERSION to check if compatible with version */\n          4179 | \t/* used when program was written.                               */\n          4180 | \t/****************************************************************/\n          4181 | \tgimapi(GIM_VERSION,0,(void**) &apiversion,APILANG,&rc,&cc,(char *)&msgbuff);\n          4182 |\n          4183 | \tif (rc|=0)\n          4184 | \t\u00e4\n          4185 | \t\terrprint(GIM_VERSION, rc, cc, msgbuff,rexx);\n          4186 | \t\tif (rc>4) goto EXIT;\n          4187 | \t\u00fc\n          4188 |\n          4189 | \tif (strncmp((const char *)&pgmversion,(const char *)apiversion,8)>0)\n          4190 | \t\u00e4\n          4191 | \t\tprintf(\"Incompatible Versions of the API\u00d6n\");\n          4192 | \t\tprintf(\"  API Version: %.8s\u00d6n\",apiversion);\n          4193 | \t\tprintf(\"  Pgm Version: %.8s\u00d6n\",&pgmversion);\n          4194 | \t\tgoto EXIT;\n          4195 | \t\u00fc\n          4196 | \tsprintf(w,\"%.2s %.2s %.2s %.2s\",apiversion->apiver,apiversion->apirel,apiversion->apimod,apiversion\n          4196 | ->apiptf);\n          4197 | \trexx.set(\"GIM_VERSION\",w);\n          4198 | \t/*\n          4199 | \tprintf(\"API Version Used:\u00d6n\");\n          4200 | \tprintf(\"  Version: %.2s\u00d6n\",apiversion->apiver);\n          4201 | \tprintf(\"  Release: %.2s\u00d6n\",apiversion->apirel);\n          4202 | \tprintf(\"  Mod    : %.2s\u00d6n\",apiversion->apimod);\n          4203 | \tprintf(\"  PTF    : %.2s\u00d6n\u00d6n\",apiversion->apiptf);\n          4204 | \t*/\n          4205 | \t/*****************************************************/\n          4206 | \t/* Create the QUERY. Put the parameter strings into  */\n          4207 | \t/* variables and put the addresses of those variables*/\n          4208 | \t/* in the query parameter structure along with the   */\n          4209 | \t/* length of those strings.                          */\n          4210 | \t/*****************************************************/\n          4211 | \tstrcpy(csi,rexx.fetch(\"GIM_CSI\"));\n          4212 | \tstrcpy(zone,rexx.fetch(\"GIM_ZONE\"));\n          4213 | \tstrcpy(ent,rexx.fetch(\"GIM_ENTRY\"));\n          4214 | \tstrcpy(subent,rexx.fetch(\"GIM_SUBENTRY\"));\n          4215 | \tstrcpy(filter,rexx.fetch(\"GIM_FILTER\"));\n          4216 |\n          4217 | \tqparms.csi          = csi;\n          4218 | \tqparms.csilen       = strlen(csi);\n          4219 | \tqparms.zone         = zone;\n          4220 | \tqparms.zonelen      = strlen(zone);\n          4221 | \tqparms.entrytype    = ent;\n          4222 | \tqparms.entrylen     = strlen(ent);\n          4223 | \tqparms.subentrytype = subent;\n          4224 | \tqparms.subentrylen  = strlen(subent);\n          4225 | \tqparms.filter       = filter;\n          4226 | \tqparms.filterlen    = strlen(filter);\n          4227 |\n          4228 | \tgimapi(GIM_QUERY,&pqparms,(void**) &qreslt,APILANG,&rc,&cc,(char *)&msgbuff);\n          4229 |\n          4230 | \tif (rc|=0)\n          4231 | \t\u00e4\n          4232 | \t\terrprint(GIM_QUERY, rc, cc, msgbuff,rexx);\n          4233 | \t\tif (rc>4) goto EXIT;\n          4234 | \t\u00fc\n          4235 |\n          4236 | \t/******************************************/\n          4237 | \t/* Call routine to print results of query */\n          4238 | \t/******************************************/\n          4239 | \tresprint(qreslt,rexx);\n          4240 |\n          4241 | EXIT:\n          4242 | \t/****************************************/\n          4243 | \t/* Free storage returned from the QUERY */\n          4244 | \t/****************************************/\n          4245 | \tgimapi(GIM_FREE,0,0,APILANG,&rc,&cc,(char *)&msgbuff);\n          4246 | \treturn 0;\n          4247 | \t//release ((cfunc*)gimapi); ????????????????\n          4248 | \u00fc\n          4249 |\n          4250 | /******************************/\n          4251 | /* Print results of the query */\n          4252 | /******************************/\n          4253 | static void resprint(ENTRY_LIST *head,REXXVAR &rexx)\n          4254 | \u00e4\n          4255 | \tENTRY_LIST  *curetype;\n          4256 | \tCSI_ENTRY   *curentry;\n          4257 | \tSUBENTRY    *cursubent;\n          4258 | \tVER         *curver;\n          4259 | \tSUBENTRY    *curversub;\n          4260 | \tchar        etype\u00c413\u00dc;\n          4261 | \tchar        vernumber\u00c413\u00dc;\n          4262 | \tchar        versubtype\u00c413\u00dc;\n          4263 | \tchar        stEname\u00c4LEN_ENAME+1\u00dc;\n          4264 | \tchar        stZname\u00c4LEN_ZNAME+1\u00dc;\n          4265 | \tchar w\u00c432760\u00dc;\n          4266 | \t/********************************/\n          4267 | \t/* Loop through each entry type */\n          4268 | \t/********************************/\n          4269 | \tint index = 0;\n          4270 | \tfor (curetype=head; curetype|=0 ; curetype=curetype->next)\n          4271 | \t\u00e4\n          4272 | \t\t/********************************************/\n          4273 | \t\t/* Print name of entry type being processed */\n          4274 | \t\t/********************************************/\n          4275 |\n          4276 | \t\tstrncpy(etype,curetype->type,LEN_ETYPE);\n          4277 | \t\tetype\u00c4LEN_ETYPE\u00dc = '\u00d60';\n          4278 | \t\trexx.set(var(\"GIM\",++index,\"ETYPE\"),etype);\n          4279 |\n          4280 | \t\t/********************************************************/\n          4281 | \t\t/* Loop through each entry printing the ename and zone  */\n          4282 | \t\t/* then the list of subentry values.                    */\n          4283 | \t\t/********************************************************/\n          4284 | \t\tfor (curentry=curetype->entries;\n          4285 | \t\t\tcurentry|=0;\n          4286 | \t\t\tcurentry=curentry->next)\n          4287 | \t\t\u00e4\n          4288 | \t\t\tstrncpy(stEname,curentry->entryname,LEN_ENAME);\n          4289 | \t\t\tstEname\u00c4LEN_ENAME\u00dc='\u00d60';\n          4290 | \t\t\tstrncpy(stZname,curentry->zonename,LEN_ZNAME);\n          4291 | \t\t\tstZname\u00c4LEN_ZNAME\u00dc='\u00d60';\n          4292 |\n          4293 | \t\t\trexx.set(var(\"GIM\",index,\"ENAME\"),stEname);\n          4294 | \t\t\trexx.set(var(\"GIM\",index,\"ZONE\"),stZname);\n          4295 | \t\t\tint vindex= 0;\n          4296 | \t\t\tfor (cursubent=curentry->subentries;\n          4297 | \t\t\t\tcursubent|=0;\n          4298 | \t\t\t\tcursubent=cursubent->next)\n          4299 | \t\t\t\u00e4\n          4300 | \t\t\t\tstrncpy(etype,cursubent->type,LEN_ETYPE);\n          4301 | \t\t\t\tetype\u00c4LEN_ETYPE\u00dc = '\u00d60';\n          4302 | \t\t\t\tchar * val ;\n          4303 | \t\t\t\tif ((strncmp(etype,TXT_VER,LEN_TXTVER)) == 0)\n          4304 | \t\t\t\t\u00e4\n          4305 | \t\t\t\t\tfor (curver=(P_VER) cursubent->subentrydata;\n          4306 | \t\t\t\t\t\tcurver|=0;\n          4307 | \t\t\t\t\t\tcurver=curver->next)\n          4308 | \t\t\t\t\t\u00e4\n          4309 | \t\t\t\t\t\tstrncpy(vernumber,curver->vernum,LEN_VERNUM);\n          4310 | \t\t\t\t\t\tvernumber\u00c4LEN_VERNUM\u00dc='\u00d60';\n          4311 | \t\t\t\t\t\tfor (curversub=curver->verdata;\n          4312 | \t\t\t\t\t\t\tcurversub|=0;\n          4313 | \t\t\t\t\t\t\tcurversub=curversub->next)\n          4314 | \t\t\t\t\t\t\u00e4\n          4315 |\n          4316 | \t\t\t\t\t\t\t/*********************************/\n          4317 | \t\t\t\t\t\t\t/* Now print ver subentry values */\n          4318 | \t\t\t\t\t\t\t/*********************************/\n          4319 | \t\t\t\t\t\t\tstrncpy(versubtype,curversub->type,LEN_ETYPE);\n          4320 | \t\t\t\t\t\t\tversubtype\u00c4LEN_ETYPE\u00dc='\u00d60';\n          4321 | \t\t\t\t\t\t\tsprintf(w,\"%.6s.%s\",versubtype,vernumber);\n          4322 | \t\t\t\t\t\t\tval = valprint((ITEM_LIST *)curversub->subentrydata);\n          4323 | \t\t\t\t\t\t\trexx.set(var(\"GIM\",index,w),val);\n          4324 | \t\t\t\t\t\t\trexx.set(var(\"GIM\",index,\"VAR\",++vindex,\"TYPE\"),w);\n          4325 | \t\t\t\t\t\t\trexx.set(var(\"GIM\",index,\"VAR\",vindex,\"VALUE\"),val);\n          4326 | \t\t\t\t\t\t\u00fc\n          4327 | \t\t\t\t\t\u00fc\n          4328 | \t\t\t\t\u00fc\n          4329 | \t\t\t\telse\n          4330 | \t\t\t\t\u00e4\n          4331 | \t\t\t\t\tval = valprint((ITEM_LIST *)cursubent->subentrydata);\n          4332 | \t\t\t\t\trexx.set(var(\"GIM\",index,etype),val);\n          4333 | \t\t\t\t\trexx.set(var(\"GIM\",index,\"VAR\",++vindex,\"TYPE\"),etype);\n          4334 | \t\t\t\t\trexx.set(var(\"GIM\",index,\"VAR\",vindex,\"VALUE\"),val);\n          4335 | \t\t\t\t\u00fc\n          4336 | \t\t\t\u00fc\n          4337 | \t\t\trexx.set(var(\"GIM\",index,\"VAR\",0,\"VALUE\"),vindex);\n          4338 | \t\t\u00fc\n          4339 | \t\u00fc\n          4340 | \trexx.set(var(\"GIM\",0),index);\n          4341 | \u00fc\n          4342 |\n          4343 | static char * valprint(ITEM_LIST *item1)\n          4344 | \u00e4\n          4345 | \tstatic char w\u00c41024*1024\u00dc;\n          4346 | \tchar        databuff\u00c41024*128\u00dc;\n          4347 | \tITEM_LIST   *curitem;\n          4348 | \tw\u00c40\u00dc = 0;\n          4349 | \tfor (curitem=item1;\n          4350 | \t\tcuritem|=0;\n          4351 | \t\tcuritem=curitem->next)\n          4352 | \t\u00e4\n          4353 | \t\tstrncpy(databuff,curitem->data,curitem->datalen);\n          4354 | \t\tdatabuff\u00c4curitem->datalen\u00dc = '\u00d60';\n          4355 | \t\tsprintf(w+strlen(w),\"%s \",databuff);\n          4356 | \t\u00fc   return w;\n          4357 | \u00fc\n          4358 |\n          4359 | static void errprint(char *cmd, long rc, long cc, ITEM_LIST *msgs,REXXVAR & rexx)\n          4360 | \u00e4\n          4361 | \tchar   msgout\u00c4LEN_MSG+1\u00dc;\n          4362 | \tITEM_LIST *curmsg;\n          4363 | \tunsigned short i;\n          4364 | \tchar w\u00c41024\u00dc;\n          4365 | \tsprintf(w,\"Error processing command: %s. RC=%d CC=%d\u00d6n\",\n          4366 | \t\tcmd,rc,cc);\n          4367 | \trexx.set(\"GIM_ERROR\",w);\n          4368 | \tint index= 1;\n          4369 | \t/*************************************************/\n          4370 | \t/* Loop through a linked list of error messages  */\n          4371 | \t/* printing them out.                            */\n          4372 | \t/*************************************************/\n          4373 | \tfor (curmsg=msgs; curmsg|=0; curmsg=curmsg->next)\n          4374 | \t\u00e4\n          4375 | \t\tstrncpy(msgout,curmsg->data,curmsg->datalen);\n          4376 | \t\tmsgout\u00c4curmsg->datalen\u00dc = '\u00d60';\n          4377 | \t\trexx.set(var(\"GIM_ERR\",index),msgout);\n          4378 | \t\u00fc\n          4379 | \trexx.set(var(\"GIM_ERR\",0),index);\n          4380 | \u00fc\n          4381 |\n          4382 |\n          4383 | int main(int argC,char * argV\u00c4\u00dc)\n          4384 | \u00e4\n          4385 | \tconst static char *version=ISIS_VERSION;\n          4386 | \tconst static char *compileDate=ISIS_VERSION_DATE;\n          4387 | \tif (strcmp(argV\u00c40\u00dc,\"MVSTOOL\")==0)\n          4388 | \t\tprintf(\" MVSTOOL tester %s %s Version:%s Compiled:%s\u00d6n\",ISIS_PF_SID,ISIS_PF_NAME,version,compileDa\n          4388 | te);\n          4389 | \tint j = 0;\n          4390 | \tint count = 1;\n          4391 | \tfor (j= 0;testCases\u00c4j\u00dc.addr;j++)\n          4392 | \t\tif (memcmpi(testCases\u00c4j\u00dc.name,argV\u00c40\u00dc,strlen(argV\u00c40\u00dc))==0)\n          4393 | \t\t\tbreak;\n          4394 | \tif (testCases\u00c4j\u00dc.addr==NULL)\n          4395 | \t\u00e4\n          4396 | \t\tfor (int i = 0;i<argC;i++)\n          4397 | \t\t\u00e4\n          4398 | \t\t\tif (memcmpi(argV\u00c4i\u00dc,\"-t\",2)==0)\n          4399 | \t\t\t\u00e4\n          4400 | \t\t\t\tfor (j= 0;testCases\u00c4j\u00dc.addr;j++)\n          4401 | \t\t\t\t\tif (memcmpi(testCases\u00c4j\u00dc.name,argV\u00c4i\u00dc+2,strlen(argV\u00c4i\u00dc)-2)==0)\n          4402 | \t\t\t\t\t\tbreak;\n          4403 | \t\t\t\tif (testCases\u00c4j\u00dc.addr==NULL)\n          4404 | \t\t\t\t\u00e4\n          4405 | \t\t\t\t\tprintf(\"Invalid test case, %s\u00d6n\",argV\u00c4i\u00dc+2);\n          4406 | \t\t\t\t\tfor(j=0;testCases\u00c4j\u00dc.addr;j++)\n          4407 | \t\t\t\t\t\tprintf(\"  %s\u00d6n\",testCases\u00c4j\u00dc.name);\n          4408 | \t\t\t\t\texit(8);\n          4409 | \t\t\t\t\u00fc\n          4410 | \t\t\t\u00fc\n          4411 | \t\t\t/*\n          4412 | \t\t\telse if (memcmpi(argV\u00c4i\u00dc,\"-r\",2)==NULL)\n          4413 | \t\t\t\u00e4\n          4414 | \t\t\tcount = atoi(argV\u00c4i\u00dc+2);\n          4415 | \t\t\tif (count==0)\n          4416 | \t\t\tcount = 1;\n          4417 | \t\t\t\u00fc\n          4418 | \t\t\t*/\n          4419 | \t\t\telse\n          4420 | \t\t\t\u00e4\n          4421 | \t\t\t\targv\u00c4argc++\u00dc = argV\u00c4i\u00dc;\n          4422 | \t\t\t\tif (strcmp(argV\u00c40\u00dc,\"MVSTOOL\")==0)\n          4423 | \t\t\t\t\tprintf(\"arg\u00c4%d\u00dc:%s\u00d6n\",argc-1,argv\u00c4argc-1\u00dc);\n          4424 | \t\t\t\u00fc\n          4425 | \t\t\u00fc\n          4426 | \t\u00fc\n          4427 | \telse\n          4428 | \t\u00e4\n          4429 | \t\tfor (int i =0;i<argC;i++)\n          4430 | \t\t\targv\u00c4argc++\u00dc = argV\u00c4i\u00dc;\n          4431 | \t\tif (strcmp(argV\u00c40\u00dc,\"MVSTOOL\")==0)\n          4432 | \t\t\tprintf(\"arg\u00c4%d\u00dc:%s\u00d6n\",argc-1,argv\u00c4argc-1\u00dc);\n          4433 | \t\u00fc\n          4434 | \tif (strcmp(argV\u00c40\u00dc,\"MVSTOOL\")==0)\n          4435 | \t\u00e4\n          4436 | \t\tprintf(\" Starting %s %d times(argc:%d)\u00d6n\u00d6n\u00d6n\",testCases\u00c4j\u00dc.name,count,argc);\n          4437 | \t\tfor(;count;count--)\n          4438 | \t\t\u00e4\n          4439 | \t\t\tif (strcmp(argV\u00c40\u00dc,\"MVSTOOL\")==0)\n          4440 | \t\t\t\tprintf(\" ended with %d\u00d6n\",testCases\u00c4j\u00dc.addr());\n          4441 | \t\t\u00fc\n          4442 | \t\treturn 0;\n          4443 | \t\u00fc\n          4444 | \telse\n          4445 | \t\treturn (testCases\u00c4j\u00dc.addr());\n          4446 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'                      07.01.13 11:01:28\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTEXP.HPP(ISISDEF)'\n     2  =  //'ESA.PRJ.CBTEXP.HPP(MVSTOOL)'\n     3  =  //'CEE.SCEEH.H(STDARG)'\n     4  =  //'CEE.SCEEH.H(FEATURES)'\n     5  =  //'ESA.PRJ.CBTEXP.HPP(VERSINFO)'\n     6  =  //'ESA.PRJ.CBTEXP.HPP(OSMFIND)'\n     7  =  //'ESA.PRJ.CBTEXP.HPP(OS)'\n     8  =  //'CEE.SCEEH.H(STDLIB)'\n     9  =  //'CEE.SCEEH.H(BUILTINS)'\n    10  =  //'CEE.SCEEH.H(STDDEF)'\n    11  =  //'CEE.SCEEH.H(STRING)'\n    12  =  //'ESA.PRJ.CBTEXP.HPP(MCHAIN)'\n    13  =  //'ESA.PRJ.CBTEXP.HPP(MVSBASE)'\n    14  =  //'ESA.PRJ.CBTEXP.HPP(MERROR)'\n    15  =  //'ESA.PRJ.CBTEXP.HPP(DSNAMEUT)'\n    16  =  //'CEE.SCEEH.H(ASSERT)'\n    17  =  //'CEE.SCEEH.H(STDIO)'\n    18  =  //'CEE.SCEEH.SYS.H(TYPES)'\n    19  =  //'ESA.PRJ.CBTEXP.HPP(FILETYPE)'\n    20  =  //'CEE.SCEEH.H(SIGNAL)'\n    21  =  //'CEE.SCEEH.H(LOCALE)'\n    22  =  //'CEE.SCEEH.H(DLL)'\n    23  =  //'CEE.SCEEH.H(LIMITS)'\n    24  =  //'CEE.SCEEH.H(UNISTD)'\n    25  =  //'CEE.SCEEH.H(INTTYPES)'\n    26  =  //'CEE.SCEEH.H(STDINT)'\n    27  =  //'CEE.SCEEH.H(ICONV)'\n    28  =  //'CEE.SCEEH.H(PWD)'\n    29  =  //'CEE.SCEEH.H(ASSERT)'\n    30  =  //'CEE.SCEEH.H(CTYPE)'\n    31  =  //'CEE.SCEEH.H(STRINGS)'\n    32  =  //'CEE.SCEEH.H(DIRENT)'\n    33  =  //'CEE.SCEEH.H(FCNTL)'\n    34  =  //'CEE.SCEEH.SYS.H(MODES)'\n    35  =  //'CEE.SCEEH.SYS.H(STAT)'\n    36  =  //'CEE.SCEEH.SYS.H(MNTENT)'\n    37  =  //'CEE.SCEEH.SYS.H(STAT)'\n    38  =  //'CEE.SCEEH.SYS.H(WAIT)'\n    39  =  //'CEE.SCEEH.SYS.H(SOCKET)'\n    40  =  //'CEE.SCEEH.SYS.H(UIO)'\n    41  =  //'CEE.SCEEH.SYS.H(TIME)'\n    42  =  //'CEE.SCEEH.SYS.H(MSG)'\n    43  =  //'CEE.SCEEH.SYS.H(IPC)'\n    44  =  //'CEE.SCEEH.ARPA.H(INET)'\n    45  =  //'CEE.SCEEH.H(NETDB)'\n    46  =  //'CEE.SCEEH.H(ERRNO)'\n    47  =  //'CEE.SCEEH.H(SPAWN)'\n    48  =  //'CEE.SCEEH.H(ASSERT)'\n    49  =  //'ESA.PRJ.CBTEXP.HPP(IBMDEBUG)'\n    50  =  //'CEE.SCEEH.H(CTEST)'\n    51  =  //'ESA.PRJ.CBTEXP.HPP(MISC)'\n    52  =  //'CEE.SCEEH.H(TIME)'\n    53  =  //'ESA.PRJ.CBTEXP.HPP(CASMIF)'\n    54  =  //'ESA.PRJ.CBTEXP.HPP(ASMIF)'\n    55  =  //'ESA.PRJ.CBTEXP.HPP(MSGMGR)'\n    56  =  //'ESA.PRJ.CBTEXP.HPP(JOBENV)'\n    57  =  //'ESA.PRJ.CBTEXP.HPP(STRSERV)'\n    58  =  //'ESA.PRJ.CBTEXP.HPP(REXXVAR)'\n    59  =  //'ESA.PRJ.CBTEXP.HPP(SHVBLOCK)'\n    60  =  //'ESA.PRJ.CBTEXP.HPP(IGGCSI00)'\n    61  =  //'ESA.PRJ.CBTEXP.HPP(SUBTASK)'\n    62  =  //'CEE.SCEEH.NETINET.H(IN)'\n    63  =  //'ESA.PRJ.CBTEXP.HPP(SYMBP)'\n    64  =  //'ESA.PRJ.CBTEXP.HPP(SMF)'\n    65  =  //'ESA.PRJ.CBTEXP.HPP(SMF30CAS)'\n    66  =  //'ESA.PRJ.CBTEXP.HPP(SMF30ID)'\n    67  =  //'ESA.PRJ.CBTEXP.HPP(SMF30SAP)'\n    68  =  //'ESA.PRJ.CBTEXP.HPP(SMF14)'\n    69  =  //'ESA.PRJ.CBTEXP.HPP(SMF30CMP)'\n    70  =  //'ESA.PRJ.CBTEXP.HPP(SMF30MSE)'\n    71  =  //'ESA.PRJ.CBTEXP.HPP(SMF30PRF)'\n    72  =  //'ESA.PRJ.CBTEXP.HPP(SMF30UD)'\n    73  =  //'ESA.PRJ.CBTEXP.HPP(SMF30ACS)'\n    74  =  //'ESA.PRJ.CBTEXP.HPP(SMF30DR)'\n    75  =  //'ESA.PRJ.CBTEXP.HPP(SMF30OP)'\n    76  =  //'ESA.PRJ.CBTEXP.HPP(SMF30URA)'\n    77  =  //'ESA.PRJ.CBTEXP.HPP(SMF30AR)'\n    78  =  //'ESA.PRJ.CBTEXP.HPP(SMF30EXP)'\n    79  =  //'ESA.PRJ.CBTEXP.HPP(SMF30OPS)'\n    80  =  //'ESA.PRJ.CBTEXP.HPP(SMF30RM)'\n    81  =  //'ESA.PRJ.CBTEXP.HPP(SMFRCD30)'\n    82  =  //'ESA.PRJ.CBTEXP.HPP(SMFRCD92)'\n    83  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FCL)'\n    84  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FOP)'\n    85  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FSM)'\n    86  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FSP)'\n    87  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FSR)'\n    88  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FSU)'\n    89  =  //'ESA.PRJ.CBTEXP.HPP(SMF92FSV)'\n    90  =  //'ESA.PRJ.CBTEXP.HPP(SMF92ID)'\n    91  =  //'ESA.PRJ.CBTEXP.HPP(SMF92MMP)'\n    92  =  //'ESA.PRJ.CBTEXP.HPP(SMF92MUN)'\n    93  =  //'ESA.PRJ.CBTEXP.HPP(SMF92SSS)'\n    94  =  //'ESA.PRJ.CBTEXP.HPP(ERMDSMP0)'\n    95  =  //'ESA.PRJ.CBTEXP.HPP(R79FIRML)'\n    96  =  //'ESA.PRJ.CBTEXP.HPP(R79EDS)'\n    97  =  //'ESA.PRJ.CBTEXP.HPP(R79ECPD)'\n    98  =  //'ESA.PRJ.CBTEXP.HPP(R79ECS)'\n    99  =  //'ESA.PRJ.CBTEXP.HPP(R79EGD)'\n   100  =  //'ESA.PRJ.CBTEXP.HPP(R79DDS)'\n   101  =  //'ESA.PRJ.CBTEXP.HPP(R79CCHNL)'\n   102  =  //'ESA.PRJ.CBTEXP.HPP(R79CCNTL)'\n   103  =  //'ESA.PRJ.CBTEXP.HPP(R79BELEM)'\n   104  =  //'ESA.PRJ.CBTEXP.HPP(R79BCNTL)'\n   105  =  //'ESA.PRJ.CBTEXP.HPP(R79AELEM)'\n   106  =  //'ESA.PRJ.CBTEXP.HPP(R799ELEM)'\n   107  =  //'ESA.PRJ.CBTEXP.HPP(R798ELEM)'\n   108  =  //'ESA.PRJ.CBTEXP.HPP(R797ELEM)'\n   109  =  //'ESA.PRJ.CBTEXP.HPP(R796ELEM)'\n   110  =  //'ESA.PRJ.CBTEXP.HPP(R795ELEM)'\n   111  =  //'ESA.PRJ.CBTEXP.HPP(R794)'\n   112  =  //'ESA.PRJ.CBTEXP.HPP(R793)'\n   113  =  //'ESA.PRJ.CBTEXP.HPP(R792ELEM)'\n   114  =  //'ESA.PRJ.CBTEXP.HPP(R791ELEM)'\n   115  =  //'ESA.PRJ.CBTEXP.HPP(R79CHL)'\n   116  =  //'ESA.PRJ.CBTEXP.HPP(SMF79HDR)'\n   117  =  //'ESA.PRJ.CBTEXP.HPP(SMF79PRO)'\n   118  =  //'ESA.PRJ.CBTEXP.HPP(OSMF)'\n   119  =  //'ESA.PRJ.CBTEXP.HPP(PFSWREC)'\n   120  =  //'ESA.PRJ.CBTEXP.HPP(MVSSTR)'\n   121  =  //'ESA.PRJ.CBTEXP.HPP(IHAPSA)'\n   122  =  //'ESA.PRJ.CBTEXP.HPP(IHACVT)'\n   123  =  //'ESA.PRJ.CBTEXP.HPP(IHASCVT)'\n   124  =  //'ESA.PRJ.CBTEXP.HPP(IKJTCB)'\n   125  =  //'ESA.PRJ.CBTEXP.HPP(IHALDA)'\n   126  =  //'ESA.PRJ.CBTEXP.HPP(IHAECVT)'\n   127  =  //'ESA.PRJ.CBTEXP.HPP(IHAASCB)'\n   128  =  //'ESA.PRJ.CBTEXP.HPP(IHAASSB)'\n   129  =  //'ESA.PRJ.CBTEXP.HPP(CSVDLCB)'\n   130  =  //'ESA.PRJ.CBTEXP.HPP(IHALLT)'\n   131  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOCVT)'\n   132  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOPNT)'\n   133  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOCVE)'\n   134  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMAR)'\n   135  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMARA)'\n   136  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMARL)'\n   137  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMARR)'\n   138  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESB)'\n   139  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESD)'\n   140  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESL)'\n   141  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESN)'\n   142  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESP)'\n   143  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESR)'\n   144  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESX)'\n   145  =  //'ESA.PRJ.CBTEXP.HPP(IGWDST)'\n   146  =  //'ESA.PRJ.CBTEXP.HPP(SMDE)'\n   147  =  //'ESA.PRJ.CBTEXP.HPP(SMDEFD)'\n   148  =  //'ESA.PRJ.CBTEXP.HPP(SMDENAME)'\n   149  =  //'ESA.PRJ.CBTEXP.HPP(SMDENLST)'\n   150  =  //'ESA.PRJ.CBTEXP.HPP(SMDEPNAM)'\n   151  =  //'ESA.PRJ.CBTEXP.HPP(SMDETOKN)'\n   152  =  //'ESA.PRJ.CBTEXP.HPP(TSVT)'\n   153  =  //'ESA.PRJ.CBTEXP.HPP(TJDSECTD)'\n   154  =  //'ESA.PRJ.CBTEXP.HPP(TVDSECTD)'\n   155  =  //'ESA.PRJ.CBTEXP.HPP(DCUOUTH)'\n   156  =  //'ESA.PRJ.CBTEXP.HPP(F1DSCB)'\n   157  =  //'ESA.PRJ.CBTEXP.HPP(F2DSCB)'\n   158  =  //'ESA.PRJ.CBTEXP.HPP(F3DSCB)'\n   159  =  //'ESA.PRJ.CBTEXP.HPP(MXDT)'\n   160  =  //'ESA.PRJ.CBTEXP.HPP(MXIS)'\n   161  =  //'ESA.PRJ.CBTEXP.HPP(MXIREQ)'\n   162  =  //'ESA.PRJ.CBTEXP.HPP(PGTHA)'\n   163  =  //'ESA.PRJ.CBTEXP.HPP(PGTHB)'\n   164  =  //'ESA.PRJ.CBTEXP.HPP(PGTHC)'\n   165  =  //'ESA.PRJ.CBTEXP.HPP(PGTHD)'\n   166  =  //'ESA.PRJ.CBTEXP.HPP(PGTHE)'\n   167  =  //'ESA.PRJ.CBTEXP.HPP(PGTHF)'\n   168  =  //'ESA.PRJ.CBTEXP.HPP(PGTHG)'\n   169  =  //'ESA.PRJ.CBTEXP.HPP(PGTHH)'\n   170  =  //'ESA.PRJ.CBTEXP.HPP(PGTHJ)'\n   171  =  //'ESA.PRJ.CBTEXP.HPP(PGTHK)'\n   172  =  //'ESA.PRJ.CBTEXP.HPP(PGPS)'\n   173  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOTCB)'\n   174  =  //'ESA.PRJ.CBTEXP.HPP(BPXZTHLI)'\n   175  =  //'ESA.PRJ.CBTEXP.HPP(BPXZPRLI)'\n   176  =  //'ESA.PRJ.CBTEXP.HPP(BPXYOPNF)'\n   177  =  //'ESA.PRJ.CBTEXP.HPP(RMCT)'\n   178  =  //'ESA.PRJ.CBTEXP.HPP(CSD)'\n   179  =  //'ESA.PRJ.CBTEXP.HPP(PCCA)'\n   180  =  //'ESA.PRJ.CBTEXP.HPP(PCCAVT)'\n   181  =  //'ESA.PRJ.CBTEXP.HPP(SMCABASE)'\n   182  =  //'ESA.PRJ.CBTEXP.HPP(IHAASVT)'\n   183  =  //'ESA.PRJ.CBTEXP.HPP(MNTE)'\n   184  =  //'ESA.PRJ.CBTEXP.HPP(MNTEH)'\n   185  =  //'ESA.PRJ.CBTEXP.HPP(TRVT)'\n   186  =  //'ESA.PRJ.CBTEXP.HPP(TBVT)'\n   187  =  //'ESA.PRJ.CBTEXP.HPP(TTE)'\n   188  =  //'ESA.PRJ.CBTEXP.HPP(CEECAA)'\n   189  =  //'ESA.PRJ.CBTEXP.HPP(CEEMCH)'\n   190  =  //'ESA.PRJ.CBTEXP.HPP(CEEDSAHP)'\n   191  =  //'ESA.PRJ.CBTEXP.HPP(CEEDSA)'\n   192  =  //'ESA.PRJ.CBTEXP.HPP(CEEPCB)'\n   193  =  //'ESA.PRJ.CBTEXP.HPP(CEECEDB)'\n   194  =  //'ESA.PRJ.CBTEXP.HPP(CEECDLL)'\n   195  =  //'ESA.PRJ.CBTEXP.HPP(PA1H)'\n   196  =  //'ESA.PRJ.CBTEXP.HPP(PA2H)'\n   197  =  //'ESA.PRJ.CBTEXP.HPP(PA1EPNM)'\n   198  =  //'ESA.PRJ.CBTEXP.HPP(IHASTCB)'\n   199  =  //'ESA.PRJ.CBTEXP.HPP(IHAASXB)'\n   200  =  //'ESA.PRJ.CBTEXP.HPP(CCT)'\n   201  =  //'ESA.PRJ.CBTEXP.HPP(ICT)'\n   202  =  //'ESA.PRJ.CBTEXP.HPP(MCT)'\n   203  =  //'ESA.PRJ.CBTEXP.HPP(EZBYPTHA)'\n   204  =  //'ESA.PRJ.CBTEXP.HPP(EZBCTHDR)'\n   205  =  //'ESA.PRJ.CBTEXP.HPP(PCOMS83)'\n   206  =  //'ESA.PRJ.CBTEXP.HPP(RFIS)'\n   207  =  //'ESA.PRJ.CBTEXP.HPP(RFIM)'\n   208  =  //'ESA.PRJ.CBTEXP.HPP(IOCC)'\n   209  =  //'ESA.PRJ.CBTEXP.HPP(IAZJSAB)'\n   210  =  //'ESA.PRJ.CBTEXP.HPP(CVTXTNT1)'\n   211  =  //'ESA.PRJ.CBTEXP.HPP(CVTXTNT2)'\n   212  =  //'ESA.PRJ.CBTEXP.HPP(DB2STR)'\n   213  =  //'ESA.PRJ.CBTEXP.HPP(QW0325)'\n   214  =  //'ESA.PRJ.CBTEXP.HPP(QW0273)'\n   215  =  //'ESA.PRJ.CBTEXP.HPP(QW0272)'\n   216  =  //'ESA.PRJ.CBTEXP.HPP(QW0250Z)'\n   217  =  //'ESA.PRJ.CBTEXP.HPP(QW0250X)'\n   218  =  //'ESA.PRJ.CBTEXP.HPP(QW0250DS)'\n   219  =  //'ESA.PRJ.CBTEXP.HPP(QW0250CN)'\n   220  =  //'ESA.PRJ.CBTEXP.HPP(QW0250HE)'\n   221  =  //'ESA.PRJ.CBTEXP.HPP(QW0237)'\n   222  =  //'ESA.PRJ.CBTEXP.HPP(QW0233)'\n   223  =  //'ESA.PRJ.CBTEXP.HPP(QW0177)'\n   224  =  //'ESA.PRJ.CBTEXP.HPP(QW0173)'\n   225  =  //'ESA.PRJ.CBTEXP.HPP(QW0112)'\n   226  =  //'ESA.PRJ.CBTEXP.HPP(QW0097)'\n   227  =  //'ESA.PRJ.CBTEXP.HPP(QW0096)'\n   228  =  //'ESA.PRJ.CBTEXP.HPP(QW0092)'\n   229  =  //'ESA.PRJ.CBTEXP.HPP(QW0066)'\n   230  =  //'ESA.PRJ.CBTEXP.HPP(QW0065)'\n   231  =  //'ESA.PRJ.CBTEXP.HPP(QW0064)'\n   232  =  //'ESA.PRJ.CBTEXP.HPP(QW0063)'\n   233  =  //'ESA.PRJ.CBTEXP.HPP(QW0062)'\n   234  =  //'ESA.PRJ.CBTEXP.HPP(QW0061)'\n   235  =  //'ESA.PRJ.CBTEXP.HPP(QW0060)'\n   236  =  //'ESA.PRJ.CBTEXP.HPP(QW0059)'\n   237  =  //'ESA.PRJ.CBTEXP.HPP(QW0058)'\n   238  =  //'ESA.PRJ.CBTEXP.HPP(QW0055)'\n   239  =  //'ESA.PRJ.CBTEXP.HPP(QW0053)'\n   240  =  //'ESA.PRJ.CBTEXP.HPP(QW0022)'\n   241  =  //'ESA.PRJ.CBTEXP.HPP(QWHD)'\n   242  =  //'ESA.PRJ.CBTEXP.HPP(QWHU)'\n   243  =  //'ESA.PRJ.CBTEXP.HPP(QWHT)'\n   244  =  //'ESA.PRJ.CBTEXP.HPP(QWHC)'\n   245  =  //'ESA.PRJ.CBTEXP.HPP(QWHA)'\n   246  =  //'ESA.PRJ.CBTEXP.HPP(QWHS)'\n   247  =  //'ESA.PRJ.CBTEXP.HPP(QWT0)'\n   248  =  //'ESA.PRJ.CBTEXP.HPP(SM102)'\n   249  =  //'ESA.PRJ.CBTEXP.HPP(ENFSERV)'\n   250  =  //'ESA.PRJ.CBTEXP.HPP(AREN)'\n   251  =  //'ESA.PRJ.CBTEXP.HPP(DACH)'\n   252  =  //'ESA.PRJ.CBTEXP.HPP(DCCD)'\n   253  =  //'ESA.PRJ.CBTEXP.HPP(DCCDARRY)'\n   254  =  //'ESA.PRJ.CBTEXP.HPP(DLENF)'\n   255  =  //'ESA.PRJ.CBTEXP.HPP(ENFCT)'\n   256  =  //'ESA.PRJ.CBTEXP.HPP(ENFP)'\n   257  =  //'ESA.PRJ.CBTEXP.HPP(ENF067)'\n   258  =  //'ESA.PRJ.CBTEXP.HPP(ENF2)'\n   259  =  //'ESA.PRJ.CBTEXP.HPP(ENF37)'\n   260  =  //'ESA.PRJ.CBTEXP.HPP(ENF40)'\n   261  =  //'ESA.PRJ.CBTEXP.HPP(ENF45)'\n   262  =  //'ESA.PRJ.CBTEXP.HPP(ENF51C)'\n   263  =  //'ESA.PRJ.CBTEXP.HPP(ENF55)'\n   264  =  //'ESA.PRJ.CBTEXP.HPP(ENF58)'\n   265  =  //'ESA.PRJ.CBTEXP.HPP(ENF58EXT)'\n   266  =  //'ESA.PRJ.CBTEXP.HPP(ENF64)'\n   267  =  //'ESA.PRJ.CBTEXP.HPP(ENF70)'\n   268  =  //'ESA.PRJ.CBTEXP.HPP(ENF70EXT)'\n   269  =  //'ESA.PRJ.CBTEXP.HPP(ENSG)'\n   270  =  //'ESA.PRJ.CBTEXP.HPP(EUNLD)'\n   271  =  //'ESA.PRJ.CBTEXP.HPP(E63R)'\n   272  =  //'ESA.PRJ.CBTEXP.HPP(EVARY)'\n   273  =  //'ESA.PRJ.CBTEXP.HPP(IFBENF36)'\n   274  =  //'ESA.PRJ.CBTEXP.HPP(IFBNLOG)'\n   275  =  //'ESA.PRJ.CBTEXP.HPP(IFBNTKN)'\n   276  =  //'ESA.PRJ.CBTEXP.HPP(IXGENF)'\n   277  =  //'ESA.PRJ.CBTEXP.HPP(IXLYCFSE)'\n   278  =  //'ESA.PRJ.CBTEXP.HPP(SIV1V2V3)'\n   279  =  //'ESA.PRJ.CBTEXP.HPP(SI00)'\n   280  =  //'ESA.PRJ.CBTEXP.HPP(SI11V1)'\n   281  =  //'ESA.PRJ.CBTEXP.HPP(SI22V1)'\n   282  =  //'ESA.PRJ.CBTEXP.HPP(SI22V2)'\n   283  =  //'ESA.PRJ.CBTEXP.HPP(SI22V3)'\n   284  =  //'ESA.PRJ.CBTEXP.HPP(SRMENF1)'\n   285  =  //'ESA.PRJ.CBTEXP.HPP(TTRENF60)'\n   286  =  //'ESA.PRJ.CBTEXP.HPP(WLMENF1)'\n   287  =  //'ESA.PRJ.CBTEXP.HPP(WLMENF56)'\n   288  =  //'ESA.PRJ.CBTEXP.HPP(WLMENF57)'\n   289  =  //'ESA.PRJ.CBTEXP.HPP(WLMENF61)'\n   290  =  //'ESA.PRJ.CBTEXP.HPP(SDWA)'\n   291  =  //'ESA.PRJ.CBTEXP.HPP(ADSRCMPS)'\n   292  =  //'ESA.PRJ.CBTEXP.HPP(HDLOGREC)'\n   293  =  //'ESA.PRJ.CBTEXP.HPP(DUMPXREC)'\n   294  =  //'ESA.PRJ.CBTEXP.HPP(MPFXREC)'\n   295  =  //'ESA.PRJ.CBTEXP.HPP(GIMHC370)'\n   296  =  //'CEE.SCEEH.H(MATH)'\n-\n                                  * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(MVSTOOL)'                      07.01.13 11:01:28\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n    15           0         0           0         15            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXXRACF": {"ttr": 889, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK62835)   Page    1\n-                                                                                            HLASM R6.0  2013/01/07 11.11\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2013/01/07 11.11\n0          SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00000000  00000001   00\n REXXRACF  SD 00000005\n B_IDRL    ED 00000006                    00000005\n B_PRV     ED 00000007                    00000005\n B_TEXT    ED 00000008 00000000 0000074C  00000005   06\n REXXRACF  LD 00000009 00000000           00000008   06\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                               1          MACRO\n                                                2          YREGS\n                                                3 R0       EQU   0\n                                                4 R1       EQU   1\n                                                5 R2       EQU   2\n                                                6 R3       EQU   3\n                                                7 R4       EQU   4\n                                                8 R5       EQU   5\n                                                9 R6       EQU   6\n                                               10 R7       EQU   7\n                                               11 R8       EQU   8\n                                               12 R9       EQU   9\n                                               13 R10      EQU   10\n                                               14 R11      EQU   11\n                                               15 R12      EQU   12\n                                               16 R13      EQU   13\n                                               17 R14      EQU   14\n                                               18 R15      EQU   15\n                                               19          MEND\n                                               20          COPY  IEABRC\n                                               21=*********************************************************************** 00050000\n                                               22=*                                                                     * 00100000\n                                               23=*01* MACRO-NAME = IEABRC                                              * 00150000\n                                               24=*                                                                     * 00200000\n                                               25=*01* DESCRIPTIVE-NAME = RELATIVE BRANCH MACROS                        * 00250000\n                                               26=*                                                                     * 00300000\n                                               27=*01*  COPYRIGHT =                                                     * 00350000\n                                               28=*       LICENSED MATERIALS - PROPERTY OF IBM                          * 00400000\n                                               29=*       5694-A01 COPYRIGHT IBM CORP. 2000, 2008                       * 00500006\n                                               30=*                                                                     * 00550000\n                                               31=*01* STATUS = HBB7750                                                 * 00600000\n                                               32=*                                                                     * 00650000\n                                               33=*01* EXTERNAL CLASSIFICATION: PI                                      * 00700000\n                                               34=*01* END OF EXTERNAL CLASSIFICATION:                                  * 00750000\n                                               35=*                                                                     * 00800000\n                                               36=*01* FUNCTION = Allow use of OS/390 macros within an assembler        * 00806800\n                                               37=*       routine that uses relative branching                          * 00813600\n                                               38=*       It defines macros to intercept and change various             * 00820400\n                                               39=*       base-displacement branch instructions to their                * 00827200\n                                               40=*       relative branch equivalents.                                  * 00834000\n                                               41=*                                                                     * 00835100\n                                               42=*       Specify SYSSTATE ARCHLVL=x where x is a supported value       * 00836200\n                                               43=*       other than 0, when using IEABRC. This lets macro expansions   * 00837300\n                                               44=*       take advantage of the knowledge of the availability of        * 00838400\n                                               45=*       relative branching.                                           * 00839500\n                                               46=*                                                                     * 00840800\n                                               47=*02* METHOD OF INVOCATION                                             * 00847600\n                                               48=*       COPY  IEABRC                                                  * 00854400\n                                               49=*       placed prior to any base/displacement branch that needs       * 00861200\n                                               50=*       to be converted to a relative branch.                         * 00868000\n                                               51=*                                                                     * 00869000\n                                               52=*       This will automatically \"enable\" the conversion.              * 00870000\n                                               53=*                                                                     * 00871005\n                                               54=*       It is now recommended that instead of this approach you       * 00872005\n                                               55=*       invoke IEABRCX DEFINE as that will allow you to take          * 00873005\n1                                                                                                               Page    4\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                              56=*       better advantage of the IEABRCX DISABLE | ENABLE functions.   * 00874005\n                                               57=*                                                                     * 00874800\n                                               58=*02* NOTES:                                                           * 00881600\n                                               59=*       Branch condition instructions are converted to                * 00888400\n                                               60=*       relative branch condition instructions except when:           * 00895200\n                                               61=*       - The branch target ends with \")\" and                         * 00902000\n                                               62=*         a \"(\" in 2nd or subsequent characters of the branch         * 00908800\n                                               63=*         target is not preceded by \"+\" or \"-\".                       * 00915600\n                                               64=*       For example,                                                  * 00922400\n                                               65=*         B   X(15)          -- remains base/displacement branch      * 00929200\n                                               66=*         B   X+(15)         -- converted to relative branch          * 00936000\n                                               67=*         B   X+Y            -- converted to relative branch          * 00942800\n                                               68=*                                                                     * 00950000\n                                               69=*01* MODULE-TYPE = MACRO                                              * 01000000\n                                               70=*                                                                     * 01050000\n                                               71=*02* PROCESSOR = HLASM                                                * 01100000\n                                               72=*                                                                     * 01150000\n                                               73=*01* MACROS = NONE                                                    * 01200000\n                                               74=*                                                                     * 01250000\n                                               75=*01* PARAMETERS:                                                      * 01300000\n                                               76=*        Same as used within assembler instructions                   * 01350000\n                                               77=*                                                                     * 01400000\n                                               78=*01* CHANGE-ACTIVITY =                                                * 01450000\n                                               79=*                                                                     * 01500000\n                                               80=*   $L0=64BITSUP HBB7703  980106  PD00XB: 64-BIT ROUTINES             * 01550000\n                                               81=*   $L1=ME10226  HBB7750  070501  PD00XB: Enable/Disable              * 01560006\n                                               82=*                                                                     * 01600000\n                                               83=*01* MNOTES = NONE                                                    * 01650000\n                                               84=*                                                                     * 01700000\n                                               85=*01* COMPONENT = SC1C5 (SUPERVISOR CONTROL)                           * 01750000\n                                               86=*                                                                     * 01800000\n                                               87=*01*  DISTRIBUTION-LIBRARY = AMACLIB                                  * 01850000\n                                               88=*                                                                     * 01900000\n                                               89=*********************************************************************** 01950000\n                                               90=B_       OPSYN B                                                        02000000\n                                               91=BAL_     OPSYN BAL                                                      02200000\n                                               92=BAS_     OPSYN BAS                                                      02250000\n                                               93=BC_      OPSYN BC                                                       02252600\n                                               94=BCT_     OPSYN BCT                                                      02255200\n                                               95=BE_      OPSYN BE                                                       02257800\n                                               96=BH_      OPSYN BH                                                       02260400\n                                               97=BL_      OPSYN BL                                                       02263000\n                                               98=BM_      OPSYN BM                                                       02265600\n                                               99=BNE_     OPSYN BNE                                                      02268200\n                                              100=BNH_     OPSYN BNH                                                      02270800\n                                              101=BNL_     OPSYN BNL                                                      02273400\n                                              102=BNM_     OPSYN BNM                                                      02276000\n                                              103=BNO_     OPSYN BNO                                                      02278600\n                                              104=BNP_     OPSYN BNP                                                      02281200\n                                              105=BNZ_     OPSYN BNZ                                                      02283800\n                                              106=BO_      OPSYN BO                                                       02286400\n                                              107=BP_      OPSYN BP                                                       02289000\n                                              108=BXH_     OPSYN BXH                                                      02291600\n                                              109=BXLE_    OPSYN BXLE                                                     02294200\n                                              110=BZ_      OPSYN BZ                                                       02296800\n1                                                                                                               Page    5\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                             111=*                                                                       02300000\n                                              112=         MACRO                                                          02350000\n                                              113=&NAME    B     &WHERE                                                   02400000\n                                              114=&NAME    BC    15,&WHERE                                                02450000\n                                              115=         MEND                                                           02500000\n                                              116=         MACRO                                                          02550000\n                                              117=&NAME    BE    &WHERE                                                   02600000\n                                              118=&NAME    BC    8,&WHERE                                                 02650000\n                                              119=         MEND                                                           02700000\n                                              120=         MACRO                                                          02750000\n                                              121=&NAME    BL    &WHERE                                                   02800000\n                                              122=&NAME    BC    4,&WHERE                                                 02850000\n                                              123=         MEND                                                           02900000\n                                              124=         MACRO                                                          02950000\n                                              125=&NAME    BH    &WHERE                                                   03000000\n                                              126=&NAME    BC    2,&WHERE                                                 03050000\n                                              127=         MEND                                                           03100000\n                                              128=         MACRO                                                          03150000\n                                              129=&NAME    BM    &WHERE                                                   03200000\n                                              130=&NAME    BC    4,&WHERE                                                 03250000\n                                              131=         MEND                                                           03300000\n                                              132=         MACRO                                                          03350000\n                                              133=&NAME    BNE   &WHERE                                                   03400000\n                                              134=&NAME    BC    7,&WHERE                                                 03450000\n                                              135=         MEND                                                           03500000\n                                              136=         MACRO                                                          03550000\n                                              137=&NAME    BNH   &WHERE                                                   03600000\n                                              138=&NAME    BC    13,&WHERE                                                03650000\n                                              139=         MEND                                                           03700000\n                                              140=         MACRO                                                          03750000\n                                              141=&NAME    BNL   &WHERE                                                   03800000\n                                              142=&NAME    BC    11,&WHERE                                                03850000\n                                              143=         MEND                                                           03900000\n                                              144=         MACRO                                                          03950000\n                                              145=&NAME    BNM   &WHERE                                                   04000000\n                                              146=&NAME    BC    11,&WHERE                                                04050000\n                                              147=         MEND                                                           04100000\n                                              148=         MACRO                                                          04150000\n                                              149=&NAME    BNO   &WHERE                                                   04200000\n                                              150=&NAME    BC    14,&WHERE                                                04250000\n                                              151=         MEND                                                           04300000\n                                              152=         MACRO                                                          04350000\n                                              153=&NAME    BNP   &WHERE                                                   04400000\n                                              154=&NAME    BC    13,&WHERE                                                04450000\n                                              155=         MEND                                                           04500000\n                                              156=         MACRO                                                          04550000\n                                              157=&NAME    BNZ   &WHERE                                                   04600000\n                                              158=&NAME    BC    7,&WHERE                                                 04650000\n                                              159=         MEND                                                           04700000\n                                              160=         MACRO                                                          04750000\n                                              161=&NAME    BO    &WHERE                                                   04800000\n                                              162=&NAME    BC    1,&WHERE                                                 04850000\n                                              163=         MEND                                                           04900000\n                                              164=         MACRO                                                          04950000\n                                              165=&NAME    BP    &WHERE                                                   05000000\n1                                                                                                               Page    6\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                             166=&NAME    BC    2,&WHERE                                                 05050000\n                                              167=         MEND                                                           05100000\n                                              168=         MACRO                                                          05150000\n                                              169=&NAME    BZ    &WHERE                                                   05200000\n                                              170=&NAME    BC    8,&WHERE                                                 05250000\n                                              171=         MEND                                                           05300000\n                                              172=         MACRO                                                          05350000\n                                              173=&NAME    BC    &COND,&WHERE                                             05400000\n                                              174=         LCLA  &I,&X                                                    05450000\n                                              175=         LCLC  &C                                                       05500000\n                                              176=&I       SETA  2                                                        05550000\n                                              177=&X       SETA  K'&WHERE                                                 05600000\n                                              178=&C       SETC  '&WHERE'(&X,1)                                           05650000\n                                              179=         AIF   ('&C.' NE ')').NEW                                       05700000\n                                              180=.LOOP    ANOP                                                           05750000\n                                              181=         AIF   (&I GE &X).NEW                                           05800000\n                                              182=         AIF   ('&WHERE'(&I,1) NE '(').NEXT                             05850000\n                                              183=         AIF   ('&WHERE'(&I-1,1) EQ '+').NEXT                           05900000\n                                              184=         AIF   ('&WHERE'(&I-1,1) NE '-').OLD                            05950000\n                                              185=.NEXT    ANOP                                                           06000000\n                                              186=&I       SETA  &I+1                                                     06050000\n                                              187=         AGO   .LOOP                                                    06100000\n                                              188=.NEW     ANOP                                                           06150000\n                                              189=&C       SETC  '  (&SYSMAC(1))'                                         06166600\n                                              190=         AIF   ('&C' NE '  (OPEN CODE)').OC                             06183200\n                                              191=&C       SETC  ' '                                                      06199800\n                                              192=.OC      ANOP                                                           06216400\n                                              193=&NAME    BRC   &COND,&WHERE&C                                           06233000\n                                              194=         MEXIT                                                          06250000\n                                              195=.OLD     ANOP                                                           06300000\n                                              196=&NAME    BC_   &COND,&WHERE                                             06350000\n                                              197=         MEND                                                           06400000\n                                              198=*                                                                       06450000\n                                              199=         MACRO                                                          06500000\n                                              200=&NAME    BCT   &REG,&WHERE                                              06550000\n                                              201=         LCLA  &I,&X                                                    06600000\n                                              202=         LCLC  &C                                                       06650000\n                                              203=&I       SETA  2                                                        06700000\n                                              204=&X       SETA  K'&WHERE                                                 06750000\n                                              205=&C       SETC  '&WHERE'(&X,1)                                           06800000\n                                              206=         AIF   ('&C.' NE ')').NEW                                       06850000\n                                              207=.LOOP    ANOP                                                           06900000\n                                              208=         AIF   (&I GE &X).NEW                                           06950000\n                                              209=         AIF   ('&WHERE'(&I,1) NE '(').NEXT                             07000000\n                                              210=         AIF   ('&WHERE'(&I-1,1) EQ '+').NEXT                           07050000\n                                              211=         AIF   ('&WHERE'(&I-1,1) NE '-').OLD                            07100000\n                                              212=.NEXT    ANOP                                                           07150000\n                                              213=&I       SETA  &I+1                                                     07200000\n                                              214=         AGO   .LOOP                                                    07250000\n                                              215=.NEW     ANOP                                                           07300000\n                                              216=&C       SETC  '  (&SYSMAC(1))'                                         07316600\n                                              217=         AIF   ('&C' NE '  (OPEN CODE)').OC                             07333200\n                                              218=&C       SETC  ' '                                                      07349800\n                                              219=.OC      ANOP                                                           07366400\n                                              220=&NAME    BRCT  &REG,&WHERE&C                                            07383000\n1                                                                                                               Page    7\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                             221=         MEXIT                                                          07400000\n                                              222=.OLD     ANOP                                                           07450000\n                                              223=&NAME    BCT_  &REG,&WHERE                                              07500000\n                                              224=         MEND                                                           07550000\n                                              225=*                                                                       07600000\n                                              226=         MACRO                                                          07650000\n                                              227=&NAME    BXLE  &REG,&REG2,&WHERE                                        07700000\n                                              228=         LCLA  &I,&X                                                    07750000\n                                              229=         LCLC  &C                                                       07800000\n                                              230=&I       SETA  2                                                        07850000\n                                              231=&X       SETA  K'&WHERE                                                 07900000\n                                              232=&C       SETC  '&WHERE'(&X,1)                                           07950000\n                                              233=         AIF   ('&C.' NE ')').NEW                                       08000000\n                                              234=.LOOP    ANOP                                                           08050000\n                                              235=         AIF   (&I GE &X).NEW                                           08100000\n                                              236=         AIF   ('&WHERE'(&I,1) NE '(').NEXT                             08150000\n                                              237=         AIF   ('&WHERE'(&I-1,1) EQ '+').NEXT                           08200000\n                                              238=         AIF   ('&WHERE'(&I-1,1) NE '-').OLD                            08250000\n                                              239=.NEXT    ANOP                                                           08300000\n                                              240=&I       SETA  &I+1                                                     08350000\n                                              241=         AGO   .LOOP                                                    08400000\n                                              242=.NEW     ANOP                                                           08450000\n                                              243=&C       SETC  '  (&SYSMAC(1))'                                         08466600\n                                              244=         AIF   ('&C' NE '  (OPEN CODE)').OC                             08483200\n                                              245=&C       SETC  ' '                                                      08499800\n                                              246=.OC      ANOP                                                           08516400\n                                              247=&NAME    BRXLE &REG,&REG2,&WHERE&C                                      08533000\n                                              248=         MEXIT                                                          08550000\n                                              249=.OLD     ANOP                                                           08600000\n                                              250=&NAME    BXLE_ &REG,&REG2,&WHERE                                        08650000\n                                              251=         MEND                                                           08700000\n                                              252=*                                                                       08750000\n                                              253=         MACRO                                                          08800000\n                                              254=&NAME    BXH   &REG,&REG2,&WHERE                                        08850000\n                                              255=         LCLA  &I,&X                                                    08900000\n                                              256=         LCLC  &C                                                       08950000\n                                              257=&I       SETA  2                                                        09000000\n                                              258=&X       SETA  K'&WHERE                                                 09050000\n                                              259=&C       SETC  '&WHERE'(&X,1)                                           09100000\n                                              260=         AIF   ('&C.' NE ')').NEW                                       09150000\n                                              261=.LOOP    ANOP                                                           09200000\n                                              262=         AIF   (&I GE &X).NEW                                           09250000\n                                              263=         AIF   ('&WHERE'(&I,1) NE '(').NEXT                             09300000\n                                              264=         AIF   ('&WHERE'(&I-1,1) EQ '+').NEXT                           09350000\n                                              265=         AIF   ('&WHERE'(&I-1,1) NE '-').OLD                            09400000\n                                              266=.NEXT    ANOP                                                           09450000\n                                              267=&I       SETA  &I+1                                                     09500000\n                                              268=         AGO   .LOOP                                                    09550000\n                                              269=.NEW     ANOP                                                           09600000\n                                              270=&C       SETC  '  (&SYSMAC(1))'                                         09616600\n                                              271=         AIF   ('&C' NE '  (OPEN CODE)').OC                             09633200\n                                              272=&C       SETC  ' '                                                      09649800\n                                              273=.OC      ANOP                                                           09666400\n                                              274=&NAME    BRXH  &REG,&REG2,&WHERE&C                                      09683000\n                                              275=         MEXIT                                                          09700000\n1                                                                                                               Page    8\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                             276=.OLD     ANOP                                                           09750000\n                                              277=&NAME    BXH_  &REG,&REG2,&WHERE                                        09800000\n                                              278=         MEND                                                           09850000\n                                              279=*                                                                       09900000\n                                              280=         MACRO                                                          09950000\n                                              281=&NAME    BAL   &REG,&WHERE                                              10000000\n                                              282=         LCLA  &I,&X                                                    10050000\n                                              283=         LCLC  &C                                                       10100000\n                                              284=&I       SETA  2                                                        10150000\n                                              285=&X       SETA  K'&WHERE                                                 10200000\n                                              286=&C       SETC  '&WHERE'(&X,1)                                           10250000\n                                              287=         AIF   ('&C.' NE ')').NEW                                       10300000\n                                              288=.LOOP    ANOP                                                           10350000\n                                              289=         AIF   (&I GE &X).NEW                                           10400000\n                                              290=         AIF   ('&WHERE'(&I,1) NE '(').NEXT                             10450000\n                                              291=         AIF   ('&WHERE'(&I-1,1) EQ '+').NEXT                           10500000\n                                              292=         AIF   ('&WHERE'(&I-1,1) NE '-').OLD                            10550000\n                                              293=.NEXT    ANOP                                                           10600000\n                                              294=&I       SETA  &I+1                                                     10650000\n                                              295=         AGO   .LOOP                                                    10700000\n                                              296=.NEW     ANOP                                                           10750000\n                                              297=&C       SETC  '  (&SYSMAC(1))'                                         10766600\n                                              298=         AIF   ('&C' NE '  (OPEN CODE)').OC                             10783200\n                                              299=&C       SETC  ' '                                                      10799800\n                                              300=.OC      ANOP                                                           10816400\n                                              301=&NAME    BRAS  &REG,&WHERE&C                                            10833000\n                                              302=         MEXIT                                                          10850000\n                                              303=.OLD     ANOP                                                           10900000\n                                              304=&NAME    BAL_  &REG,&WHERE                                              10950000\n                                              305=         MEND                                                           11000000\n                                              306=*                                                                       11050000\n                                              307=         MACRO                                                          11100000\n                                              308=&NAME    BAS   &REG,&WHERE                                              11150000\n                                              309=         LCLA  &I,&X                                                    11200000\n                                              310=         LCLC  &C                                                       11250000\n                                              311=&I       SETA  2                                                        11300000\n                                              312=&X       SETA  K'&WHERE                                                 11350000\n                                              313=&C       SETC  '&WHERE'(&X,1)                                           11400000\n                                              314=         AIF   ('&C.' NE ')').NEW                                       11450000\n                                              315=.LOOP    ANOP                                                           11500000\n                                              316=         AIF   (&I GE &X).NEW                                           11550000\n                                              317=         AIF   ('&WHERE'(&I,1) NE '(').NEXT                             11600000\n                                              318=         AIF   ('&WHERE'(&I-1,1) EQ '+').NEXT                           11650000\n                                              319=         AIF   ('&WHERE'(&I-1,1) NE '-').OLD                            11700000\n                                              320=.NEXT    ANOP                                                           11750000\n                                              321=&I       SETA  &I+1                                                     11800000\n                                              322=         AGO   .LOOP                                                    11850000\n                                              323=.NEW     ANOP                                                           11900000\n                                              324=&C       SETC  '  (&SYSMAC(1))'                                         11916600\n                                              325=         AIF   ('&C' NE '  (OPEN CODE)').OC                             11933200\n                                              326=&C       SETC  ' '                                                      11949800\n                                              327=.OC      ANOP                                                           11966400\n                                              328=&NAME    BRAS  &REG,&WHERE&C                                            11983000\n                                              329=         MEXIT                                                          12000000\n                                              330=.OLD     ANOP                                                           12050000\n1                                                                                                               Page    9\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                             331=&NAME    BAS_  &REG,&WHERE                                              12100000\n                                              332=         MEND                                                           12150000\n                                              333          YREGS                    REGISTER EQUATES\n                         00000000             334+R0       EQU   0                                                        01-\n                         00000001             335+R1       EQU   1                                                        01-\n                         00000002             336+R2       EQU   2                                                        01-\n                         00000003             337+R3       EQU   3                                                        01-\n                         00000004             338+R4       EQU   4                                                        01-\n                         00000005             339+R5       EQU   5                                                        01-\n                         00000006             340+R6       EQU   6                                                        01-\n                         00000007             341+R7       EQU   7                                                        01-\n                         00000008             342+R8       EQU   8                                                        01-\n                         00000009             343+R9       EQU   9                                                        01-\n                         0000000A             344+R10      EQU   10                                                       01-\n                         0000000B             345+R11      EQU   11                                                       01-\n                         0000000C             346+R12      EQU   12                                                       01-\n                         0000000D             347+R13      EQU   13                                                       01-\n                         0000000E             348+R14      EQU   14                                                       01-\n                         0000000F             349+R15      EQU   15                                                       01-\n1                                                                                                               Page   10\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n000000000                00000000 0000074C    351 REXXRACF CSECT ESTABLISH CSECT\n                                              352 REXXRACF AMODE 31\n                                              353 REXXRACF RMODE ANY\n                                              354          SAVE  (14,12),,REXXRACF-&SYSDATE-&SYSTIME\n 00000000 47F0 F01C               0000001C    358+         BC_   15,28(0,15)                                              03-\n 00000004 17                                  359+         DC    AL1(23)                           LENGTH OF IDENTIFIER   01-SAVE\n 00000005 D9C5E7E7D9C1C3C6                    360+         DC    CL8'REXXRACF'                     IDENTIFIER             01-SAVE\n 0000000D 60F0F161F0F761F1                    361+         DC    CL8'-01/07/1'                     IDENTIFIER             01-SAVE\n 00000015 F360F1F14BF1F1                      362+         DC    CL7'3-11.11'                      IDENTIFIER             01-SAVE\n 0000001C 90EC D00C               0000000C    363+         STM   14,12,12(13)                      SAVE REGISTERS         01-SAVE\n 00000020 18CF                                364          LR    R12,R15            LOAD R12 W/EPA ADDRESS\n                     R:C 00000000             365          USING REXXRACF,R12\n 00000022 1891                                366          LR    R9,R1              SAVE R1\n                                              367          GETMAIN RU,LV=WORKLEN\n 00000024                                     369+         CNOP  0,4                                                      01-GETMAIN\n 00000024 A7F4 0006               00000030    372+         BRC   15,IHB0006C  (B)                                         03-\n 00000028 000004AC                            373+IHB0006L DC    A(WORKLEN)         LENGTH                                01-GETMAIN\n 0000002C 00                                  374+IHB0006F DC    BL1'00000000'                         Flags.        @L7C 01-GETMAIN\n 0000002D 00                                  375+         DC    AL1(0)             RESERVED                              01-GETMAIN\n 0000002E 00                                  376+         DC    AL1(0)             SUBPOOL                               01-GETMAIN\n 0000002F 02                                  377+         DC    BL1'00000010'                 MODE BYTE         @G860P30 01-GETMAIN\n 00000030                                     378+IHB0006C DS     0H                                                      01-GETMAIN\n 00000030 5800 C028               00000028    379+         L     0,IHB0006L         LOAD LENGTH                           01-GETMAIN\n 00000034 58F0 C02C               0000002C    380+         L     15,IHB0006F                       LOAD GETMAIN PARMS     01-GETMAIN\n 00000038 1B11                                381+         SR    1,1                     ZERO RESERVED REG 1              01-GETMAIN\n 0000003A 0A78                                382+         SVC   120                     ISSUE GETMAIN SVC                01-GETMAIN\n 0000003C 1881                                383          LR    R8,R1\n 0000003E 18A1                                384          LR    R10,R1             SAVE POINTER IN R8 AND IN R10\n 00000040 1819                                385          LR    R1,R9              SAVE BACK R1\n 00000042 C040 0000 012F          000002A0    386          LARL  R4,INTOWORK        MOVE TO WORKAREA\n 00000048 4150 04AC               000004AC    387          LA    R5,WORKLEN\n 0000004C 1895                                388          LR    R9,R5              LENGTH IN BOTH REGS\n 0000004E 0E84                                389          MVCL  R8,R4              INITIALIZE WORKAREA\n                     R:8 00000000             390          USING WORKAREA,R8\n 00000050 188A                                391          LR    R8,R10             SAVE BACK R8\n 00000052 41F0 8000               00000000    392          LA    R15,SAVEAREA       LOAD ADDR OF SAVEAREA\n 00000056 50F0 D008               00000008    393          ST    R15,8(,R13)        MY SAVEAREA ADDR INTO CALLER'S\n 0000005A 50D0 F004               00000004    394          ST    R13,4(,R15)        CALLER SAVEAREA ADDR INTO MINE\n 0000005E 18DF                                395          LR    R13,R15            LOAD MY SAVEAREA ADDR\n 00000060 5820 1000               00000000    396          L     R2,0(,R1)\n 00000064 4830 2000               00000000    397          LH    R3,0(,R2)          PICK LENGTH OF STRING\n 00000068 1233                                398          LTR   R3,R3\n 0000006A A724 0007               00000078    399          BRP   STRLOPM1           LENGTH POSITIV\n 0000006E C021 0000 0FA0          00000000    400          LGFI  R2,NOPARM          NO PARAMETER, LENGTH NOT POSITIV\n 00000074 A7F4 00E2               00000238    401          BRU   RETURN             NO PARAMETER\n 00000078 4120 2001               00000001    402 STRLOPM1 LA    R2,1(0,R2)         ADDRESS OF STRING - 1\n 0000007C 1B44                                403          SR    R4,R4\n 0000007E                                     404 STRLOP   DS    0H\n 0000007E 4120 2001               00000001    405          LA    R2,1(,R2)\n 00000082 9540 2000      00000000             406          CLI   0(R2),C' '         IS IT BLANK ?\n 00000086 A774 0009               00000098    407          BRNE  STRLOP01           1-ST NO-BLANK FOUND\n 0000008A A736 FFFA               0000007E    408          BRCT  R3,STRLOP\n 0000008E C021 0000 0FA0          00000000    409          LGFI  R2,NOPARM          NO PARAMETER\n 00000094 A7F4 00D2               00000238    410          BRU   RETURN             NO PARAMETER\n                                              411 * LEADING BLANKS SKIPPED R2 POINTS TO 1-ST NON-BLANK\n1                                                                                                               Page   11\n   Active Usings: WORKAREA,R8  REXXRACF,R12\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n000000098                                     412 STRLOP01 DS    0H\n 00000098 1862                                413          LR    R6,R2              SAVE START POSITION\n 0000009A 0620                                414          BCTR  R2,R0\n 0000009C 4150 8248               00000248    415          LA    R5,ENTYNAME\n 000000A0 0650                                416          BCTR  R5,R0\n 000000A2                                     417 STRLOP02 DS    0H\n 000000A2 4120 2001               00000001    418          LA    R2,1(,R2)\n 000000A6 9540 2000      00000000             419          CLI   0(R2),C' '         IS IT BLANK?\n 000000AA A784 000F               000000C8    420          BRE   STRLOP03           1-ST BLANK FOUND\n 000000AE 4340 2000               00000000    421          IC    R4,0(,R2)          PICK NEXT CHARACTER\n 000000B2 4150 5001               00000001    422          LA    R5,1(,R5)\n 000000B6 4240 5000               00000000    423          STC   R4,0(,R5)\n 000000BA A736 FFF4               000000A2    424          BRCT  R3,STRLOP02\n 000000BE C021 0000 0FA1          00000000    425          LGFI  R2,ONEPARM         ONE PARAMETER\n 000000C4 A7F4 00BA               00000238    426          BRU   RETURN\n                                              427 * 1-ST PARAMETER COPIED\n 000000C8                                     428 STRLOP03 DS    0H\n 000000C8 1B62                                429          SR    R6,R2\n 000000CA 1066                                430          LPR   R6,R6              PARAMETER LENGTH IN R6\n 000000CC C26D 0000 0080          00000000    431          CFI   R6,MAXLN1          1-ST PAR MAX LENGTH\n 000000D2 A7D4 0007               000000E0    432          BRNH  STRLOP35\n 000000D6 C021 0000 0FA4          00000000    433          LGFI  R2,LNGPARM1        1-ST PARM TOO LONG\n 000000DC A7F4 00AE               00000238    434          BRU   RETURN\n 000000E0 0620                                435 STRLOP35 BCTR  R2,R0              SUBTRACT 1\n 000000E2                                     436 STRLOP04 DS    0H\n 000000E2 4120 2001               00000001    437          LA    R2,1(,R2)          PICK NEXT CHARACTER\n 000000E6 9540 2000      00000000             438          CLI   0(R2),C' '         IS IT BLANK ?\n 000000EA A774 0009               000000FC    439          BRNE  STRLOP05           OUT IF NOT\n 000000EE A736 FFFA               000000E2    440          BRCT  R3,STRLOP04\n 000000F2 C021 0000 0FA1          00000000    441          LGFI  R2,ONEPARM         ONE PARAMETER\n 000000F8 A7F4 00A0               00000238    442          BRU   RETURN             NO PARAMETER\n                                              443 * BLANKS BETWEEN 1-ST AND 2-ND PARAMETER SKIPPED\n 000000FC                                     444 STRLOP05 DS    0H\n 000000FC 1852                                445          LR    R5,R2              SAVE START POSITION OF 2-ND PARM\n 000000FE 0620                                446          BCTR  R2,R0\n 00000100                                     447 STRLOP06 DS    0H\n 00000100 4120 2001               00000001    448          LA    R2,1(,R2)          PICK NEXT CHARACTER\n 00000104 9540 2000      00000000             449          CLI   0(R2),C' '         IS IT BLANK ?\n 00000108 A784 0009               0000011A    450          BRE   STRLOP07           OUT IF YES\n 0000010C A736 FFFA               00000100    451          BRCT  R3,STRLOP06\n 00000110 C021 0000 0FA2          00000000    452          LGFI  R2,TWOPARM         TWO PARAMETER\n 00000116 A7F4 0091               00000238    453          BRU   RETURN\n 0000011A                                     454 STRLOP07 DS    0H\n 0000011A 1865                                455          LR    R6,R5              SAVE START ADDR USED IN EXCHKATR\n 0000011C 1B52                                456          SR    R5,R2\n 0000011E 1055                                457          LPR   R5,R5              IN R5 LENGTH OF 2-ND OPERAND\n 00000120 C070 0000 00A4          00000268    458          LARL  R7,ATTRTABL        ATTRIBUTE TABLE ADDRESS\n                     R:7 00000000             459          USING ATTRDSCT,R7\n 00000126                                     460 STRLOP08 DS    0H\n 00000126 D509 C290 7000 00000290 00000000    461          CLC   ATTRTBND(TABENTLN),ATTRLEN ARE WE AT END OF TABLE\n 0000012C A774 0007               0000013A    462          BRNE  STRLOP85           NOT END\n 00000130 C021 0000 0FA3          00000000    463          LGFI  R2,INVPARM         INVALID 2-ND PARAMETER\n 00000136 A7F4 0081               00000238    464          BRU   RETURN             YES, ARG2 IN ERROR, INVALID\n 0000013A 1BFF                                465 STRLOP85 SR    R15,R15            CLEAR R15 FOR IC\n 0000013C 43F0 7000               00000000    466          IC    R15,ATTRLEN        ELSE GET LENGTH OF EBCDIC ENTRY\n1                                                                                                               Page   12\n   Active Usings: ATTRDSCT,R7  WORKAREA,R8  REXXRACF,R12\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n000000140 195F                                467          CR    R5,R15             IS THE SAME LENGTH\n 00000142 A774 0007               00000150    468          BRNE  STRLOP09           NO, TAKE NEXT PARM\n 00000146 06F0                                469          BCTR  R15,R0             DECREMENT R15 FOR EXECUTE\n 00000148 44F0 C260               00000260    470          EX    R15,EXCHKATR       EXECUTE CLC OF ARG3 TO TABLE ENTRY\n 0000014C A784 0006               00000158    471          BRE   STRLOP10           IF MATCH, GET ATTR BYTE\n 00000150                                     472 STRLOP09 DS    0H\n 00000150 4170 700A               0000000A    473          LA    R7,TABENTLN(,R7)   ELSE BUMP TO NEXT TABLE ENTRY\n 00000154 A7F4 FFE9               00000126    474          BRU   STRLOP08           LOOP TO CHECK NEXT TABLE ENTRY\n 00000158                                     475 STRLOP10 DS    0H\n 00000158 1B55                                476          SR    R5,R5              CLEAR REGISTER\n 0000015A 4350 7009               00000009    477          IC    R5,ATTRHEX         INSERT ATTR VALUE\n                                              478 *        DROP  R7\n 0000015E 0620                                479          BCTR  R2,R0\n 00000160                                     480 STRLOP11 DS    0H\n 00000160 4120 2001               00000001    481          LA    R2,1(,R2)          PICK NEXT CHARACTER\n 00000164 9540 2000      00000000             482          CLI   0(R2),C' '         IS IT BLANK ?\n 00000168 A774 0009               0000017A    483          BRNE  STRLOP12           OUT IF NO\n 0000016C A736 FFFA               00000160    484          BRCT  R3,STRLOP11\n 00000170 C021 0000 0FA2          00000000    485          LGFI  R2,TWOPARM         TWO PARAMETER\n 00000176 A7F4 0061               00000238    486          BRU   RETURN\n                                              487 * BLANKS BETWEEN 2-ND AND 3-RD PARAMETER SKIPPED\n 0000017A                                     488 STRLOP12 DS    0H\n 0000017A 1872                                489          LR    R7,R2              SAVE START POSITION\n 0000017C 4160 8349               00000349    490          LA    R6,CLASSNAM        COPY HIER\n 00000180 0620                                491          BCTR  R2,R0              SUBTRACT 1\n 00000182 0660                                492          BCTR  R6,R0              SUBTRACT 1\n 00000184                                     493 STRLOP13 DS    0H\n 00000184 4120 2001               00000001    494          LA    R2,1(,R2)\n 00000188 4160 6001               00000001    495          LA    R6,1(,R6)\n 0000018C 9540 2000      00000000             496          CLI   0(R2),C' '         IS IT BLANK ?\n 00000190 A784 000A               000001A4    497          BRE   STRLOP14           OUT IF YES\n 00000194 4340 2000               00000000    498          IC    R4,0(,R2)\n 00000198 4240 6000               00000000    499          STC   R4,0(,R6)          STORE\n 0000019C A736 FFF4               00000184    500          BRCT  R3,STRLOP13\n 000001A0 4120 2001               00000001    501          LA    R2,1(,R2)          SO THAT LENGTH OK IF NO TRAIL BLANK\n 000001A4                                     502 STRLOP14 DS    0H\n 000001A4 1B27                                503          SR    R2,R7              LENGTH OF 3-RD PARAM\n 000001A6 4220 8348               00000348    504          STC   R2,CLASSLEN\n 000001AA C22D 0000 0008          00000000    505          CFI   R2,MAXLN3          LENGTH MAX 8 BYTE\n 000001B0 A7D4 0007               000001BE    506          BRNH  SETREGS\n 000001B4 C021 0000 0FA5          00000000    507          LGFI  R2,LNGPARM3        3-RD PARAM TOO LONG\n 000001BA A7F4 003F               00000238    508          BRU   RETURN\n 000001BE                                     509 SETREGS  DS    0H\n 000001BE 4130 8048               00000048    510          LA    R3,RACFWKA         LOAD A(RACF WORKAREA) FOR RACROUTE\n 000001C2 4140 8248               00000248    511          LA    R4,ENTYNAME        LOAD A(ENTITY NAME) FOR RACROUTE\n 000001C6 4160 8348               00000348    512          LA    R6,CLASSLEN        LOAD A(LEN,CLASS NAME) FOR RACROUTE\n 000001CA 4110 844C               0000044C    513          LA    R1,RACROUTE        LOAD PARAMETER ADDRESS FOR RACROUTE\n 000001CE A7F4 000E               000001EA    514          BRU   CHEKAUTH           JUMP OVER CONST\n 000001D2 F1F1F1F1F1F1F2F2                    515          DC    C'11111122222222333333333'\n 000001EA                                     516 CHEKAUTH DS    0H\n                                              517          RACROUTE REQUEST=AUTH,WORKA=(R3),ATTR=(R5),                   X\n                                                                 ENTITY=((R4)),CLASS=(R6),                               X\n                                                                 MF=(E,(R1))\n 000001EA 1811                                519+         LR    1,R1                              LOAD PARAMETER REG 1   02-IHBINNRA\n 000001EC 5031 0018               00000018    523+         ST    R3,24(1)                                                 02-ICHMM\n1                                                                                                               Page   13\n   Active Usings: ATTRDSCT,R7  WORKAREA,R8  REXXRACF,R12\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0000001F0 18E1                                529+         LR    14,1                 SAVE RACROUTE LIST ADDR             01-RACROUTE\n 000001F2 5A11 0024               00000024    531+         A     1,36(1)        POINT REG 1 AT RACHECK LIST          @T1A 02-RACHECK\n 000001F6 94DF 100C      0000000C             532+         NI    12(1),B'11011111'     TURN OFF PROFILE BIT          @Q7A 02-RACHECK\n 000001FA 94D7 1004      00000004             533+         NI    4(1),B'11010111'                                         02-RACHECK\n 000001FE 9608 1004      00000004             534+         OI    4(1),B'00001000'                                 FLAGS   02-RACHECK\n 00000202 5041 0024               00000024    535+         ST    (R4),36(1)                STORE ENTITY NAME ADDRESS @M3C 02-RACHECK\n 00000206 4251 0008               00000008    536+         STC   R5,8(1)       - STORE ATTR VALUE IN LIST FORM            02-RACHECK\n 0000020A 5061 0028               00000028    537+         ST    R6,40(1)          STORE CLASS NAME ADDRESS          @T1A 02-RACHECK\n 0000020E 181E                                538+         LR    1,14                 RESTORE ADDRESSABILITY TO PARM LIST 01-RACROUTE\n 00000210 58F0 0010               00000010    539+         L     15,16(0,0)           ADDRESS OF CVT                      01-RACROUTE\n 00000214 BFFF F0F8               000000F8    540+         ICM   15,B'1111',248(15)   ADDRESS OF SAF VECTOR TABLE         01-RACROUTE\n 00000218 A774 0006               00000224    543+         BRC   7,IHB0010D  (BNZ)                                        03-\n 0000021C 41F0 0004               00000004    544+         LA    15,4                 SAF ROUTER NOT AVAILABLE IN SYSTEM  01-RACROUTE\n 00000220 A7F4 000B               00000236    547+         BRC   15,IHB0010E  (B)                                         03-\n 00000224                                     548+IHB0010D DS    0H                                                       01-RACROUTE\n 00000224 BFFF F00C               0000000C    549+         ICM   15,B'1111',12(15)    PICK UP ADDRESS OF SAF ROUTER  @R4C 01-RACROUTE\n 00000228 A774 0006               00000234    552+         BRC   7,IHB0010H  (BNZ)                                        03-\n 0000022C 41F0 0004               00000004    553+         LA    15,4                 SAF ROUTER NOT AVAILABLE       @R4A 01-RACROUTE\n 00000230 A7F4 0003               00000236    556+         BRC   15,IHB0010E  (B)                                         03-\n 00000234                                     557+IHB0010H DS    0H                                                  @R4A 01-RACROUTE\n 00000234 05EF                                558+         BALR  14,15                BRANCH TO SAF ROUTER                01-RACROUTE\n 00000236                                     559+IHB0010E DS    0H                                                       01-RACROUTE\n 00000236 122F                                560          LTR   R2,R15             SAVE RETURN CODE\n 00000238                                     561 RETURN   DS    0H\n 00000238 58D0 8004               00000004    562          L     R13,SAVEAREA+4     LOAD R13 W/ADDR OF CALLERS S/A\n                                              563          FREEMAIN RU,LV=WORKLEN,A=(R8)\n 0000023C                                     565+         CNOP  0,4                                                      01-FREEMAIN\n 0000023C A7F4 0006               00000248    568+         BRC   15,*+12-4*0-2*0  (B)                                     03-\n 00000240 000004AC                            569+         DC    A(WORKLEN)                        LENGTH                 01-FREEMAIN\n 00000244 00                                  570+IHB0029F DC    BL1'00000000'            Flags              @O2A         01-FREEMAIN\n 00000245 00                                  571+         DC    AL1(0)                            RESERVED               01-FREEMAIN\n 00000246 00                                  572+         DC    AL1(0)                            SUBPOOL NUMBER         01-FREEMAIN\n 00000247 03                                  573+         DC    BL1'00000011'                     MODE BYTE              01-FREEMAIN\n 00000248 5800 C240               00000240    574+         L     0,*-8+2*0                         LOAD LENGTH            01-FREEMAIN\n 0000024C 1818                                575+         LR    1,R8                              LOAD AREA ADDRESS      01-FREEMAIN\n 0000024E 58F0 C244               00000244    576+         L     15,IHB0029F                       LOAD PARAMETERS        01-FREEMAIN\n 00000252 0A78                                577+         SVC   120                               ISSUE FREEMAIN SVC     01-FREEMAIN\n 00000254 18F2                                578          LR    R15,R2             LOAD BACK RETURN CODE\n                                              579          RETURN (14,12),RC=(15)   RETURN TO OS WITH RETCODE IN R15\n 00000256 58E0 D00C               0000000C    581+         L     14,12(0,13)                       RESTORE REG 14    @L1C 01-RETURN\n 0000025A 980C D014               00000014    582+         LM    0,12,20(13)                       RESTORE THE REGISTERS  01-RETURN\n 0000025E 07FE                                583+         BR    14                                RETURN                 01-RETURN\n                                              584 * FROM HIER CONSTANTS\n 00000260 D500 7001 6000 00000001 00000000    585 EXCHKATR CLC   ATTRVAL(0),0(R6)   EXECUTED CLC OF ARG3 TO TABLE ENTRY\n 00000268                                     586 ATTRTABL DS    0F                 ATTRIBUTE TABLE---------------]\n                                              587 *ATTRDFLT DC    AL1(1),CL8'B       ',X'01'   DEFAULT ATTR ]\n 00000268 04D9C5C1C4404040                    588 ATTRDFLT DC    AL1(4),CL8'READ    ',X'02'   DEFAULT ATTR ]\n 00000272 06E4D7C4C1E3C540                    589          DC    AL1(6),CL8'UPDATE  ',X'04'                ]\n 0000027C 07C3D6D5E3D9D6D3                    590          DC    AL1(7),CL8'CONTROL ',X'08'                ]\n 00000286 05C1D3E3C5D94040                    591          DC    AL1(5),CL8'ALTER   ',X'80'                ]\n 00000290 FFFFFFFFFFFFFFFF                    592 ATTRTBND DC    X'FF',8X'FF',X'FF' END OF TABLE INDICATOR ]\n                         0000000A             593 TABENTLN EQU   *-ATTRTBND    LENGTH OF A TABLE ENTRY-----]\n 000002A0                                     594          LTORG\n                                              595 * CONSTANTS COPIED INTO WORKAREA\n 000002A0                                     596 INTOWORK DS    0F                 COPY INTO WORKAREA\n1                                                                                                               Page   14\n   Active Usings: ATTRDSCT,R7  WORKAREA,R8  REXXRACF,R12\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0000002A0 0000000200000002                    597          DC    18F'2'             SHOULD BE FIRST IN WORKAREA\n 000002E8 4040404040404040                    598          DC    512X'40'           RACROUTE WORK AREA\n 000004E8 4040404040404040                    599          DC    CL256' '           ENTITY NAME\n 000005E8 00                                  600          DC    AL1(L'CLASSNAM)    CLASSNAME LENGTH\n 000005E9 4040404040404040                    601          DC    CL256' '           CLASSNAME\n                                              602 * CONSTANTS END\n                                              603 *        RACROUTE REQUEST=AUTH,RACFIND=YES,MF=L\n                                              604          RACROUTE REQUEST=AUTH,RACFIND=YES,MF=L\n 000006EC                                     605+         DS    0F                                                       01-RACROUTE\n                         000006EC             606+IHB0035A EQU   *                                                        01-RACROUTE\n 000006EC 00000000                            607+         DC    F'0'                 RACF OR INSTALL EXIT RETURN CODE    01-RACROUTE\n 000006F0 00000000                            608+         DC    F'0'                 RACF OR INSTALL EXIT REASON CODE    01-RACROUTE\n 000006F4 0028                                609+         DC    AL2(40)              LENGTH OF LIST IN BYTES             01-RACROUTE\n 000006F6 00                                  610+         DC    AL1(0)             SET VER/REL FLAG TO 1.9 OR PREV  @N4A 01-RACROUTE\n 000006F7 00                                  611+         DC    AL1(0)               RESERVED                       @N4C 01-RACROUTE\n 000006F8 0001                                612+         DC    AL2(1)               REQUEST BYTE                        01-RACROUTE\n 000006FA 00                                  613+         DC    B'00000000'                                  FLAGS  @L8A 01-RACROUTE\n 000006FB 00                                  614+         DC    AL1(0)               MESSAGE SUBPOOL                @L8A 01-RACROUTE\n 000006FC 00000000                            616+         DC    A(0)                                                     02-ICHMM\n 00000700 00000000                            618+         DC    A(0)                                                     02-ICHMM\n 00000704 00000000                            620+         DC    A(0)                                                     02-ICHMM\n 00000708 00000000                            621+         DC    A(0)                 MESSAGE RETURN ADDRESS              01-RACROUTE\n 0000070C 00000000                            622+         DC    A(0)                 RESVD                               01-RACROUTE\n 00000710 00000028                            623+         DC    A(IHB0035C-IHB0035A) OFFSET TO RACF PARAMETER LIST       01-RACROUTE\n 00000714                                     625+         DS    0F                                                @L4A   02-RACHECK\n                         00000714             626+ICH00039    EQU *                                                       02-RACHECK\n 00000714 38                                  627+IHB0035C DC    AL1(56)          LENGTH OF RACHECK PARAMETER LIST   @L7A 02-RACHECK\n 00000715 000000                              628+         DC    AL3(0)                                              @T1A 02-RACHECK\n 00000718 C8                                  629+         DC    B'11001000'                                              02-RACHECK\n 00000719 000000                              630+         DC    AL3(0)                                              @T1A 02-RACHECK\n 0000071C 02                                  631+         DC    B'00000010'                                         @Q1C 02-RACHECK\n 0000071D 000000                              632+         DC    AL3(0)                                              @T1A 02-RACHECK\n 00000720 00                                  633+         DC    B'00000000'                              3RD FLAGS  @P1C 02-RACHECK\n 00000721 000000                              634+         DC    AL3(0)                                              @T1A 02-RACHECK\n 00000724 00000000                            635+         DC    A(0) -       OLD VOLSER ADDR FIELD              @PC002PY 02-RACHECK\n 00000728 00000000                            636+         DC    A(0)     - APPL ADDRESS                         @PC003PY 02-RACHECK\n 0000072C 00000000                            637+         DC    A(0)     - ACEE ADDRESS                         @PC003PY 02-RACHECK\n 00000730 00000000                            638+         DC    A(0)     - OWNER ADDRESS.                         @L4A   02-RACHECK\n 00000734 00000000                            639+         DC    A(0)            ADDRESS OF INSTALLATION DATA        @T1A 02-RACHECK\n 00000738 00000000                            640+         DC    A(0)             ENTITY OR PROFILE ADDRESS FIELD    @T1A 02-RACHECK\n 0000073C 00000000                            641+         DC    A(0)            CLASS NAME ADDRESS FIELD            @T1A 02-RACHECK\n 00000740 00000000                            642+         DC    A(0)            VOLSER ADDR FIELD                   @T1A 02-RACHECK\n 00000744 00000000                            643+         DC    A(0)     - ACCESS VALUE ADDRESS.                  @L5A   02-RACHECK\n 00000748 00000000                            644+         DC    A(0)     - 2ND ACCESS ADDRESS.                    @L5A   02-RACHECK\n                         000004AC             645 WORKLEN  EQU   *-INTOWORK         SO LONG WILL BE COPIED\n                         00000FA0             646 NOPARM   EQU   4000               NO PARAMETER SPECIFIED\n                         00000FA1             647 ONEPARM  EQU   4001               1  PARAMETER SPECIFIED\n                         00000FA2             648 TWOPARM  EQU   4002               2  PARAMETER SPECIFIED\n                         00000FA3             649 INVPARM  EQU   4003               2-ND PARM INVALID\n                         00000FA4             650 LNGPARM1 EQU   4004               1-ST PARM TOO LONG\n                         00000FA5             651 LNGPARM3 EQU   4005               3-RD PARM TOO LONG\n                         00000080             652 MAXLN1   EQU   128                MAX LENGTH 1-ST PARM\n                         00000008             653 MAXLN3   EQU   8                  MAX LENGTH 3-RD PARM\n                                              654 *\n 00000000                00000000 000004AC    655 WORKAREA DSECT                    WORK AREA\n1                                                                                                               Page   15\n   Active Usings: ATTRDSCT,R7  WORKAREA,R8  REXXRACF,R12\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 11.11\n0                                             656 * CONSTANTS COPIED FROM INTOWORK\n 00000000                                     657 SAVEAREA DS    18F                SHOULD BE FIRST IN WORKAREA\n 00000048 4040404040404040                    658 RACFWKA  DC    512X'40'           RACROUTE WORK AREA\n 00000248 4040404040404040                    659 ENTYNAME DC    CL256' '           ENTITY NAME\n 00000348 00                                  660 CLASSLEN DC    AL1(L'CLASSNAM)    CLASSNAME LENGTH\n 00000349 4040404040404040                    661 CLASSNAM DC    CL256' '           CLASSNAME\n                                              662 * CONSTANTS END COPIED FROM INTOWORK\n                                              663 *RACROUTE RACROUTE REQUEST=AUTH,RACFIND=YES,MF=L\n                                              664 RACROUTE RACROUTE REQUEST=AUTH,RACFIND=YES,MF=L\n 0000044C                                     665+RACROUTE DS    0F                                                       01-RACROUTE\n                         0000044C             666+IHB0040A EQU   *                                                        01-RACROUTE\n 0000044C 00000000                            667+         DC    F'0'                 RACF OR INSTALL EXIT RETURN CODE    01-RACROUTE\n 00000450 00000000                            668+         DC    F'0'                 RACF OR INSTALL EXIT REASON CODE    01-RACROUTE\n 00000454 0028                                669+         DC    AL2(40)              LENGTH OF LIST IN BYTES             01-RACROUTE\n 00000456 00                                  670+         DC    AL1(0)             SET VER/REL FLAG TO 1.9 OR PREV  @N4A 01-RACROUTE\n 00000457 00                                  671+         DC    AL1(0)               RESERVED                       @N4C 01-RACROUTE\n 00000458 0001                                672+         DC    AL2(1)               REQUEST BYTE                        01-RACROUTE\n 0000045A 00                                  673+         DC    B'00000000'                                  FLAGS  @L8A 01-RACROUTE\n 0000045B 00                                  674+         DC    AL1(0)               MESSAGE SUBPOOL                @L8A 01-RACROUTE\n 0000045C 00000000                            676+         DC    A(0)                                                     02-ICHMM\n 00000460 00000000                            678+         DC    A(0)                                                     02-ICHMM\n 00000464 00000000                            680+         DC    A(0)                                                     02-ICHMM\n 00000468 00000000                            681+         DC    A(0)                 MESSAGE RETURN ADDRESS              01-RACROUTE\n 0000046C 00000000                            682+         DC    A(0)                 RESVD                               01-RACROUTE\n 00000470 00000028                            683+         DC    A(IHB0040C-IHB0040A) OFFSET TO RACF PARAMETER LIST       01-RACROUTE\n 00000474                                     685+         DS    0F                                                @L4A   02-RACHECK\n                         00000474             686+ICH00044    EQU *                                                       02-RACHECK\n 00000474 38                                  687+IHB0040C DC    AL1(56)          LENGTH OF RACHECK PARAMETER LIST   @L7A 02-RACHECK\n 00000475 000000                              688+         DC    AL3(0)                                              @T1A 02-RACHECK\n 00000478 C8                                  689+         DC    B'11001000'                                              02-RACHECK\n 00000479 000000                              690+         DC    AL3(0)                                              @T1A 02-RACHECK\n 0000047C 02                                  691+         DC    B'00000010'                                         @Q1C 02-RACHECK\n 0000047D 000000                              692+         DC    AL3(0)                                              @T1A 02-RACHECK\n 00000480 00                                  693+         DC    B'00000000'                              3RD FLAGS  @P1C 02-RACHECK\n 00000481 000000                              694+         DC    AL3(0)                                              @T1A 02-RACHECK\n 00000484 00000000                            695+         DC    A(0) -       OLD VOLSER ADDR FIELD              @PC002PY 02-RACHECK\n 00000488 00000000                            696+         DC    A(0)     - APPL ADDRESS                         @PC003PY 02-RACHECK\n 0000048C 00000000                            697+         DC    A(0)     - ACEE ADDRESS                         @PC003PY 02-RACHECK\n 00000490 00000000                            698+         DC    A(0)     - OWNER ADDRESS.                         @L4A   02-RACHECK\n 00000494 00000000                            699+         DC    A(0)            ADDRESS OF INSTALLATION DATA        @T1A 02-RACHECK\n 00000498 00000000                            700+         DC    A(0)             ENTITY OR PROFILE ADDRESS FIELD    @T1A 02-RACHECK\n 0000049C 00000000                            701+         DC    A(0)            CLASS NAME ADDRESS FIELD            @T1A 02-RACHECK\n 000004A0 00000000                            702+         DC    A(0)            VOLSER ADDR FIELD                   @T1A 02-RACHECK\n 000004A4 00000000                            703+         DC    A(0)     - ACCESS VALUE ADDRESS.                  @L5A   02-RACHECK\n 000004A8 00000000                            704+         DC    A(0)     - 2ND ACCESS ADDRESS.                    @L5A   02-RACHECK\n 00000000                00000000 00000000    705          DSECT\n 00000000                00000000 0000000A    706 ATTRDSCT DSECT                    ATTRTABL MAPPING\n 00000000                                     707 ATTRLEN  DS    AL1                LENGTH OF EBCDIC ATTR\n 00000001                                     708 ATTRVAL  DS    CL8                EBCDIC ATTR VALUE\n 00000009                                     709 ATTRHEX  DS    X                  HEX EQUIVALENT OF EBCDIC ATTR\n 00000000                00000000 00000000    710          DSECT\n                                              711          END\n1                                          Macro and Copy Code Source Summary                                   Page   16\n- Con Source                                        Volume    Members                        HLASM R6.0  2013/01/07 11.11\n0     PRIMARY INPUT                                           B        BAL      BAS      BC       BCT      BE       BH\n                                                              BL       BM       BNE      BNH      BNL      BNM      BNO\n                                                              BNP      BNZ      BO       BP       BXH      BXLE     BZ\n                                                              YREGS\n   L2 SYS1.MACLIB                                   Z1CT12    FREEMAIN GETMAIN  ICHMM    IEABRC   IHBINNRA RACHECK\n                                                              RACROUTE RETURN   SAVE     SYSSTATE\n1                                                Dsect Cross Reference                                          Page   17\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 11.11\n0ATTRDSCT 0000000A  FFFFFFFD     706\n WORKAREA 000004AC  FFFFFFFF     655\n1                                                      Using Map                                                Page   18\n-                                                                                            HLASM R6.0  2013/01/07 11.11\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0   365  00000022  00000008 USING  ORDINARY    00000000 00001000 00000008  12 00290    576 REXXRACF,R12\n    390  00000050  00000008 USING  ORDINARY    00000000 00001000 FFFFFFFF   8 0044C    562 WORKAREA,R8\n    459  00000126  00000008 USING  ORDINARY    00000000 00001000 FFFFFFFD   7 00009    585 ATTRDSCT,R7\n1                                   General Purpose Register Cross Reference                                    Page   19\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 11.11\n0    0(0)     363   379M  574M  582M\n     1(1)     363   366   381M  381   383   384   385M  396   513M  519M  519   523N  529   531M  531N  532   533   534   535N  536N\n              537N  538M  575M  582M\n     2(2)     363   396M  397   400M  402M  402   405M  405   406   409M  413   414M  418M  418   419   421   425M  429   433M  435M\n              437M  437   438   441M  445   446M  448M  448   449   452M  456   463M  479M  481M  481   482   485M  489   491M  494M\n              494   496   498   501M  501   503M  504   505   507M  560M  578   582M\n     3(3)     363   397M  398M  398   408M  424M  440M  451M  484M  500M  510M  523   582M\n     4(4)     363   386M  389M  403M  403   421M  423   498M  499   511M  535   582M\n     5(5)     363   387M  388   389M  415M  416M  422M  422   423   445M  455   456M  457M  457   467   476M  476   477M  536   582M\n     6(6)     363   413M  429M  430M  430   431   455M  490M  492M  495M  495   499   512M  537   582M  585\n     7(7)     363   458M  459U  473M  473   489M  503   582M\n     8(8)     363   383M  389M  390U  391M  575   582M\n     9(9)     363   366M  385   388M  389M  582M\n    10(A)     363   384M  391   582M\n    11(B)     363   582M\n    12(C)     363   364M  365U  582M\n    13(D)     363   393   394   395M  562M  581   582\n    14(E)     363   529M  538   558M  581M  583B\n    15(F)     358   363   364   380M  392M  393   394   395   465M  465   466M  467   469M  470   539M  540M  540   544M  549M  549\n              553M  558B  560   576M  578M\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   20\n-                                                                                            HLASM R6.0  2013/01/07 11.11\n0     No Statements Flagged in this Assembly\n HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK62835\n0SYSTEM: z/OS 01.12.00              JOBNAME: COMPALL     STEPNAME: REXXRACF   PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTEXP.ASM                           USERL1  REXXRACF\n   L1 SYSLIB   ESA.PRJ.CBTEXP.ASM                           USERL1\n   L2          SYS1.MACLIB                                  Z1CT12\n   L3          SYS1.MODGEN                                  Z1CT12\n   L4          CEE.SCEEMAC                                  Z1CT12\n   L5          ASM.AASMMAC2                                 Z1CDL1\n   L6          ASM.AASMMAC1                                 Z1CDL1\n   L7          TCPIP.SEZACMAC                               Z1CT12\n   L8          TCPIP.SEZANMAC                               Z1CT12\n      SYSADATA ESA.PRJ.CBTEXP.ADATA                         USERL2  REXXRACF\n      SYSLIN   ESA.PRJ.CBTEXP.OBJECT                        USER09  REXXRACF\n      SYSPRINT ESA.PRJ.CBTEXP.COMPLIST                      USER0D  REXXRACF\n      SYSTERM  RACF.COMPALL.JOB09215.D0000101.?\n\n  908304K allocated to Buffer Pool       Storage required     948K\n     221 Primary Input Records Read        10127 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read                847 Primary Print Records Written         0 Work File Writes\n      39 Object Records Written             1301 ADATA Records Written\n0Assembly Start Time: 11.11.21 Stop Time: 11.11.21 Processor Time: 00.00.00.0378\n Return Code 002\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXXVAR": {"ttr": 873, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(REXXVAR)'                      07.01.13 11:00:33\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH\n                                  :DLL(NOCALLBACKANY)              ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH\n                                  :NOEXPMAC        NOEXPORTALL     NOFASTTEMPINC   FLAG(I)         GOFF            GONUMBER\n                                  :HALT(16)        NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32\n                                  :NOINITAUTO      NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP\n                                  :NOMARGINS       MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)\n                                  :OBJECT          OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)\n                                  :PLIST(HOST)     NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT\n                                  :ROSTRING        ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS\n                                  :SOURCE          SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              NOTEMPLATEREGISTRY\n                                  :TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)      TMPLPARSE(NO)   TUNE(7)\n                                  :UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64        NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :CSECT()\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1,\n                                   MU_STANDALONE=1,SAPI_NO=1,VSAM_NO=1)\n                                  :FLOAT(HEX,FOLD,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__)\n                                  :NOKEYWORD(char16_t,char32_t,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NODBCS,NODECLTYPE,NODELEGATINGCTORS,DEPENDENTBASELOOKUP,\n                                   NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,EXTERNTEMPLATE,ILLPTOM,\n                                   IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,NOOLDDIGRAPH,OLDFRIEND,\n                                   NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,TRAILENUM,TYPEDEFCLASS,\n                                   NOUCS,VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :XPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(NOSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410C0000\n                                  : __LIBREL__=0x410C0000\n                                  : __TARGET_LIB__=0x410C0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(REXXVAR)'                      07.01.13 11:00:33\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #include \"isisdef.h\"\n             2 | #include \"versinfo.h\"\n             3 | #include \"osmfind.hpp\"\n             4 | #define _XOPEN_SOURCE 500\n             5 | #define _LARGE_FILES 1\n             6 | #ifndef _SHR_ENVIRON\n             7 | #define _SHR_ENVIRON 1\n             8 | #endif\n             9 | #define _SHARE_EXT_VARS 1\n            10 | #define  environ  (*(__Envn()))\n            11 | #include <signal.h>\n            12 | #include <dll.h>\n            13 | #include <limits.h>\n            14 | #include <unistd.h>\n            15 | #include <stdlib.h>\n            16 | #include <stdlib.h>\n            17 | #include <stdio.h>\n            18 | #include <assert.h>\n            19 | #include <ctype.h>\n            20 | #include <string.h>\n            21 | #include <strings.h>\n            22 | #include <fcntl.h>\n            23 | #include <sys/types.h>\n            24 | #include <sys/stat.h>\n            25 | #include \"ibmdebug.hpp\"\n            26 |\n            27 | #include \"misc.hpp\"\n            28 | #include \"osmfind.hpp\"\n            29 | #include \"jesi.hpp\"\n            30 | #include \"caljesi.hpp\"\n            31 | #include \"mchain.hpp\"\n            32 | #include \"casmif.hpp\"\n            33 | #include \"msgmgr.hpp\"\n            34 | #include \"jobenv.hpp\"\n            35 | #include \"rexxvar.hpp\"\n            36 |\n            37 | //#include \"mvssamp.hpp\"\n            38 |\n            39 | int _dump(char * id,char * p,int l)\n            40 | \u00e4\n            41 | \tunsigned char ETOA\u00c4256\u00dc =\n            42 | \t\u00e4\n            43 | \t\t0, 0x1, 0x2, 0x3, 0xff, 0x9, 0xff, 0x7f,\n            44 | \t\t0xff, 0xff, 0xff, 0xb, 0xc, 0xd, 0xe, 0xf,\n            45 | \t\t0x10, 0x11, 0x12, 0x13, 0xff, 0xff, 0x8, 0xff,\n            46 | \t\t0x18, 0x19, 0xff, 0xff, 0x1c, 0x1d, 0x1e, 0x1f,\n            47 | \t\t0xff, 0xff, 0xff, 0xff, 0xff, 0xa, 0x17, 0x1b,\n            48 | \t\t0xff, 0xff, 0xff, 0xff, 0xff, 0x5, 0x6, 0x7,\n            49 | \t\t0xff, 0xff, 0x16, 0xff, 0xff, 0xff, 0xff, 0x4,\n            50 | \t\t0xff, 0xff, 0xff, 0xff, 0x14, 0x15, 0xff, 0x1a,\n            51 | \t\t0x20, 0xff, 0x83, 0x7b, 0x85, 0xa0, 0xc6, 0x86,\n            52 | \t\t0x87, 0xa4, 0x8e, 0x2e, 0x3c, 0x28, 0x2b, 0x21,\n            53 | \t\t0x26, 0x82, 0x88, 0x89, 0x8a, 0xa1, 0x8c, 0x8b,\n            54 | \t\t0x8d, 0x7e, 0x9a, 0x24, 0x2a, 0x29, 0x3b, 0x5e,\n            55 | \t\t0x2d, 0x2f, 0xb6, 0x5b, 0xb7, 0xb5, 0xc7, 0x8f,\n            56 | \t\t0x80, 0xa5, 0x94, 0x2c, 0x25, 0x5f, 0x3e, 0x3f,\n            57 | \t\t0x9b, 0x90, 0xd2, 0xd3, 0xd4, 0xd6, 0xd7, 0xd8,\n            58 | \t\t0xde, 0x60, 0x3a, 0x23, 0xf5, 0x27, 0x3d, 0x22,\n            59 | \t\t0x9d, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            60 | \t\t0x68, 0x69, 0xae, 0xaf, 0xd0, 0xec, 0xe7, 0xf1,\n            61 | \t\t0xf8, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70,\n            62 | \t\t0x71, 0x72, 0xa6, 0xa7, 0x91, 0xf7, 0x92, 0xcf,\n            63 | \t\t0xe6, 0xe1, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,\n            64 | \t\t0x79, 0x7a, 0xad, 0xa8, 0xd1, 0xed, 0xe8, 0xa9,\n            65 | \t\t0xbd, 0x9c, 0xbe, 0xfa, 0xb8, 0x40, 0xf4, 0xac,\n            66 | \t\t0xab, 0xf3, 0xaa, 0x7c, 0xee, 0xf9, 0xef, 0x9e,\n            67 | \t\t0x84, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,\n            68 | \t\t0x48, 0x49, 0xf0, 0x93, 0xdd, 0x95, 0xa2, 0xe4,\n            69 | \t\t0x81, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50,\n            70 | \t\t0x51, 0x52, 0xfb, 0x96, 0x7d, 0x97, 0xa3, 0x98,\n            71 | \t\t0x99, 0xf6, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\n            72 | \t\t0x59, 0x5a, 0xfd, 0xe2, 0x5c, 0xe3, 0xe0, 0xe5,\n            73 | \t\t0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n            74 | \t\t0x38, 0x39, 0xfc, 0xea, 0x5d, 0xeb, 0xe9, 0xff\n            75 | \t\u00fc;\n            76 | \tint i , o;\n            77 | \tprintf(\"%s at:%x(%d)\u00d6n\u00d6n\",id,p,l);\n            78 | \tif (p)\n            79 | \t\tfor(o = 0;o <((l/16)+1)*16;o+=16)\n            80 | \t\t\u00e4\n            81 | \t\t\tprintf(\"%4.4lx:\",o);\n            82 | \t\t\tfor(i = o;i<o+16;i++)\n            83 | \t\t\t\u00e4\n            84 | \t\t\t\tif ( i < l )\n            85 | \t\t\t\t\u00e4\n            86 | \t\t\t\t\tprintf(\"%2.2x\",p\u00c4i\u00dc& 0xFF );\n            87 | \t\t\t\t\tif (i%4 == 3) printf(\" \");\n            88 |\n            89 | \t\t\t\t\u00fc\n            90 |\n            91 | \t\t\t\telse\n            92 | \t\t\t\t\u00e4\n            93 | \t\t\t\t\tif ( i%4 == 3) printf(\" \");\n            94 | \t\t\t\t\tprintf(\" \");\n            95 | \t\t\t\t\u00fc\n            96 | \t\t\t\u00fc\n            97 | \t\t\tprintf(\" \");\n            98 | \t\t\tfor(i = o;i<o+16;i++)\n            99 | \t\t\t\tif ( i < l )\n           100 | \t\t\t\t\tprintf(\"%c\",isprint(p\u00c4i\u00dc)? p\u00c4i\u00dc:'.');\n           101 | \t\t\t\telse printf(\" \");\n           102 | \t\t\t\tprintf(\" \");\n           103 | \t\t\t\tfor(i = o;i<o+16;i++)\n           104 | \t\t\t\t\tif ( i < l )\n           105 | \t\t\t\t\tprintf(\"%c\",isprint(ETOA\u00c4p\u00c4i\u00dc\u00dc)?ETOA\u00c4p\u00c4i\u00dc\u00dc:'.');  printf(\"\u00d6n\");\n           106 | //\t\t\t\tprintf(\"%c\",isprint(ATOE\u00c4p\u00c4i\u00dc\u00dc)?ATOE\u00c4p\u00c4i\u00dc\u00dc:'.');  printf(\"\u00d6n\");\n           107 |\n           108 |\n           109 | \t\t\u00fc\n           110 | \t\treturn l;\n           111 | \u00fc\n           112 |\n           113 |\n           114 | bool debug = false;\n           115 | static const int  TSVEUPDT = 2;\n           116 | static const int  TSVERETR = 1;\n           117 |\n           118 | char * REXXVAR::fetch(const char * name)\n           119 | \u00e4\n           120 | \tshv.shvnext = NULL;\n           121 | \tshv.shvuser = 0;\n           122 | \tshv.shvcode = shvfetch;\n           123 | \tshv.shvbufl = bufflength;\n           124 | \tshv.shvnama = (void *)name;\n           125 | \tshv.shvnaml = strlen(name);\n           126 | \tshv.shvvala = to;\n           127 | \tshv.shvvall = 0;\n           128 | \tmemset(to,' ',bufflength);\n           129 | \trc = 0;\n           130 | \tirxexcom(\"IRXEXCOM\",&rc,&rc,&shv,&envaddr,&rc);\n           131 | \t/*\n           132 | \tetc = -1;\n           133 | \tnext = 0;\n           134 | \trc = ikjct441(&TSVERETR,(char * *)&name,&shv.shvnaml,&to,&shv.shvvall,&token,&etc,&next,&rc);\n           135 | \t*/\n           136 | \tif (rc==0&&shv.shvvall)\n           137 | \t\u00e4\n           138 | \t\tto\u00c4shv.shvvall\u00dc = 0;\n           139 | \t\tif (debug)\n           140 | \t\t\t_dump((char *)name,to,strlen(to));\n           141 |\n           142 | \t\treturn to;\n           143 | \t\u00fc\n           144 | \telse\n           145 | \t\tfprintf(stderr,\" REXX var fetch error for %s code:%d\u00d6n\",name,rc);\n           146 | \treturn NULL;\n           147 | \u00fc\n           148 |\n           149 | size_t REXXVAR::set(const char * name,const char * from,size_t length)\n           150 | \u00e4\n           151 | \tshv.shvnext = NULL;\n           152 | \tshv.shvuser = 0;\n           153 | \tshv.shvcode = shvstore;\n           154 | \tshv.shvbufl = bufflength;\n           155 | \tshv.shvnama = (void *)name;\n           156 | \tshv.shvnaml = strlen(name);\n           157 | \tshv.shvvala = (void *)from;\n           158 | \tshv.shvvall = length?length:strlen(from);\n           159 | \trc = 0;\n           160 | \tif (debug)\n           161 | \t\t_dump((char *)name,(char *)from,shv.shvvall);\n           162 |\n           163 | \tirxexcom(\"IRXEXCOM\",&rc,&rc,&shv,&envaddr,&rc);\n           164 | \t/*\n           165 | \tetc = -1;\n           166 | \tnext = 0;\n           167 | \trc = ikjct441(&TSVEUPDT,(char * *)&name,&shv.shvnaml,(char * *)&from,&shv.shvvall,&token,&etc,&next\n           167 | ,&rc);\n           168 | \t*/\n           169 | \tif (rc==0)\n           170 | \t\u00e4\n           171 | \t\tif (debug)\n           172 | \t\t\tfprintf(stderr,\" Set %s %*.*s\u00d6n\",name,shv.shvvall,shv.shvvall,from);\n           173 | \t\treturn shv.shvvall;\n           174 | \t\u00fc\n           175 | \telse\n           176 | \t\tfprintf(stderr,\" REXX var set error for %s code:%d\u00d6n\",name,rc);\n           177 | \treturn 0;\n           178 |\n           179 | \u00fc\n           180 |\n           181 | size_t REXXVAR::setStem(const char * name,int &index ,const char * from,size_t length)\n           182 | \u00e4\n           183 | \tchar varName\u00c41024\u00dc;\n           184 | \tsprintf(varName,\"%s.%d\",name,++index);\n           185 | \treturn (set(varName,from,length));\n           186 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(REXXVAR)'                      07.01.13 11:00:33\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTEXP.HPP(ISISDEF)'\n     2  =  //'ESA.PRJ.CBTEXP.HPP(VERSINFO)'\n     3  =  //'ESA.PRJ.CBTEXP.HPP(OSMFIND)'\n     4  =  //'ESA.PRJ.CBTEXP.HPP(OS)'\n     5  =  //'CEE.SCEEH.H(STDLIB)'\n     6  =  //'CEE.SCEEH.H(FEATURES)'\n     7  =  //'CEE.SCEEH.H(BUILTINS)'\n     8  =  //'CEE.SCEEH.H(STDDEF)'\n     9  =  //'CEE.SCEEH.H(STRING)'\n    10  =  //'ESA.PRJ.CBTEXP.HPP(MCHAIN)'\n    11  =  //'ESA.PRJ.CBTEXP.HPP(MVSBASE)'\n    12  =  //'ESA.PRJ.CBTEXP.HPP(MERROR)'\n    13  =  //'ESA.PRJ.CBTEXP.HPP(DSNAMEUT)'\n    14  =  //'CEE.SCEEH.H(ASSERT)'\n    15  =  //'CEE.SCEEH.H(STDIO)'\n    16  =  //'CEE.SCEEH.SYS.H(TYPES)'\n    17  =  //'ESA.PRJ.CBTEXP.HPP(FILETYPE)'\n    18  =  //'CEE.SCEEH.H(SIGNAL)'\n    19  =  //'CEE.SCEEH.H(TIME)'\n    20  =  //'CEE.SCEEH.H(DLL)'\n    21  =  //'CEE.SCEEH.H(LIMITS)'\n    22  =  //'CEE.SCEEH.H(UNISTD)'\n    23  =  //'CEE.SCEEH.H(INTTYPES)'\n    24  =  //'CEE.SCEEH.H(STDINT)'\n    25  =  //'CEE.SCEEH.H(ASSERT)'\n    26  =  //'CEE.SCEEH.H(CTYPE)'\n    27  =  //'CEE.SCEEH.H(STRINGS)'\n    28  =  //'CEE.SCEEH.H(FCNTL)'\n    29  =  //'CEE.SCEEH.SYS.H(MODES)'\n    30  =  //'CEE.SCEEH.SYS.H(STAT)'\n    31  =  //'CEE.SCEEH.SYS.H(MNTENT)'\n    32  =  //'CEE.SCEEH.SYS.H(STAT)'\n    33  =  //'ESA.PRJ.CBTEXP.HPP(IBMDEBUG)'\n    34  =  //'CEE.SCEEH.H(CTEST)'\n    35  =  //'ESA.PRJ.CBTEXP.HPP(MISC)'\n    36  =  //'ESA.PRJ.CBTEXP.HPP(JESI)'\n    37  =  //'ESA.PRJ.CBTEXP.HPP(PPDECVT)'\n    38  =  //'ESA.PRJ.CBTEXP.HPP(JES)'\n    39  =  //'ESA.PRJ.CBTEXP.HPP(SSS2)'\n    40  =  //'ESA.PRJ.CBTEXP.HPP(SAPISEL)'\n    41  =  //'ESA.PRJ.CBTEXP.HPP(SAPIINFO)'\n    42  =  //'ESA.PRJ.CBTEXP.HPP(IOQE)'\n    43  =  //'ESA.PRJ.CBTEXP.HPP(CALJESI)'\n    44  =  //'ESA.PRJ.CBTEXP.HPP(DEFJESI)'\n    45  =  //'ESA.PRJ.CBTEXP.HPP(DLLDEF)'\n    46  =  //'ESA.PRJ.CBTEXP.HPP(CASMIF)'\n    47  =  //'ESA.PRJ.CBTEXP.HPP(ASMIF)'\n    48  =  //'ESA.PRJ.CBTEXP.HPP(MSGMGR)'\n    49  =  //'ESA.PRJ.CBTEXP.HPP(JOBENV)'\n    50  =  //'ESA.PRJ.CBTEXP.HPP(REXXVAR)'\n    51  =  //'ESA.PRJ.CBTEXP.HPP(SHVBLOCK)'\n0\"//'ESA.PRJ.CBTEXP.HPP(SSS2)'\", line 142.58: CCN5804 (W) The characters \"/*\" are detected in a comment.\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(REXXVAR)'                      07.01.13 11:00:33\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     1           0         0           0          1            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SSQLASM": {"ttr": 835, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK62835)   Page    1\n-                                                                                            HLASM R6.0  2013/01/07 10.57\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2013/01/07 10.57\n0          SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00000000  00000001   00\n DSNALI    SD 00000005\n B_IDRL    ED 00000006                    00000005\n B_PRV     ED 00000007                    00000005\n B_TEXT    ED 00000008 00000000 000002BF  00000005   06\n DSNALI    LD 00000009 00000000           00000008   06\n CEESTART  ER 0000000A                    00000005\n DSNHLI    SD 0000000B\n B_IDRL    ED 0000000C                    0000000B\n B_PRV     ED 0000000D                    0000000B\n B_TEXT    ED 0000000E 000002C0 00000144  0000000B   06\n DSNHLI    LD 0000000F 000002C0           0000000E   06\n DSNTIAR   SD 00000010\n B_IDRL    ED 00000011                    00000010\n B_PRV     ED 00000012                    00000010\n B_TEXT    ED 00000013 00000408 00000144  00000010   06\n DSNTIAR   LD 00000014 00000408           00000013   06\n SQLASM    SD 00000015\n B_IDRL    ED 00000016                    00000015\n B_PRV     ED 00000017                    00000015\n B_TEXT    ED 00000018 00000550 000002C8  00000015   06\n SQLASM    LD 00000019 00000550           00000018   06\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                               1 *30/03/06 addr in r5\n                                                2 *30/03/06 load RRS or CAF module\n                                                3          PRINT    GEN\n1         SQLASM SQL IBM interface module                                                                       Page    4\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                               5 *        CREGS USING\n                                                6          CREGS USING\n                         00000000               7+R0       EQU   0                                                        01-CREGS\n                         00000001               8+R1       EQU   1                                                        01-CREGS\n                         00000002               9+R2       EQU   2                                                        01-CREGS\n                         00000003              10+R3       EQU   3                                                        01-CREGS\n                         00000004              11+R4       EQU   4                                                        01-CREGS\n                         00000005              12+R5       EQU   5                                                        01-CREGS\n                         00000006              13+R6       EQU   6                                                        01-CREGS\n                         00000007              14+R7       EQU   7                                                        01-CREGS\n                         00000008              15+R8       EQU   8                                                        01-CREGS\n                         00000009              16+R9       EQU   9                                                        01-CREGS\n                         0000000A              17+R10      EQU   10                                                       01-CREGS\n                         0000000B              18+R11      EQU   11                                                       01-CREGS\n                         0000000C              19+R12      EQU   12                                                       01-CREGS\n                         0000000D              20+R13      EQU   13                                                       01-CREGS\n                         0000000D              21+RDSA     EQU   R13                DSA POINTER                           01-CREGS\n                     R:D 00000000              22+         USING DSA,R13                                                  01-CREGS\n                         0000000E              23+R14      EQU   14                                                       01-CREGS\n                         0000000F              24+R15      EQU   15                                                       01-CREGS\n                         00000000              25+FR0      EQU   0                                                        01-CREGS\n                         00000002              26+FR2      EQU   2                                                        01-CREGS\n                         00000004              27+FR4      EQU   4                                                        01-CREGS\n                         00000006              28+FR6      EQU   6                                                        01-CREGS\n                                               29 *        IEANTASM\n                                               30          IEANTASM\n                                               31+*** START OF SPECIFICATIONS ******************************************\n                                               32+****PROPRIETARY_STATEMENT*********************************************\n                                               33+*01* PROPRIETARY-STATEMENT********************************************\n                                               34+*                                                                    *\n                                               35+* LICENSED MATERIALS - PROPERTY OF IBM                               *\n                                               36+* THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                        *\n                                               37+* 5694-A01 (C) COPYRIGHT IBM CORP. 1991,2002                         *\n                                               38+*                                                                    *\n                                               39+*****END_OF_PROPRIETARY_STATEMENT*************************************\n                                               40+*                                                                    *\n                                               41+*01* Status: HBB7706                                                 *\n                                               42+*                                                                    *\n                                               43+*01* Descriptive Name: Name/Token Service Assembler Declares         *\n                                               44+*02*  Acronym: N/A                                                   *\n                                               45+*                                                                    *\n                                               46+*01* Macro-name: IEANTASM                                            *\n                                               47+*                                                                    *\n                                               48+*01* DSECT-name: N/A                                                 *\n                                               49+*                                                                    *\n                                               50+*01* Component: Supervisor Control (SC1C5)                           *\n                                               51+*                                                                    *\n                                               52+*01* External Classification: GUPI                                   *\n                                               53+*01* End of External Classification:                                 *\n                                               54+*                                                                    *\n                                               55+*01* Eye-catcher: N/A                                                *\n                                               56+*02* Offset: N/A                                                     *\n                                               57+*02* Length: N/A                                                     *\n                                               58+*                                                                    *\n                                               59+*01* Storage-attributes: N/A                                         *\n1         SQLASM SQL IBM interface module                                                                       Page    5\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                              60+*02* Main-Storage: N/A                                               *\n                                               61+*02* Virtual-Storage: N/A                                            *\n                                               62+*02* Auxiliary-Storage: N/A                                          *\n                                               63+*02* Subpool: N/A                                                    *\n                                               64+*02* Key: N/A                                                        *\n                                               65+*02* Data-space: N/A                                                 *\n                                               66+*02* Residency: N/A                                                  *\n                                               67+*                                                                    *\n                                               68+*01* Size: N/A                                                       *\n                                               69+*                                                                    *\n                                               70+*01* Created-by: N/A                                                 *\n                                               71+*                                                                    *\n                                               72+*01* Pointed-to-by: N/A                                              *\n                                               73+*                                                                    *\n                                               74+*01* Serialization: N/A                                              *\n                                               75+*                                                                    *\n                                               76+*                                                                    *\n                                               77+*01* Function:                                                       *\n                                               78+*02* IEANTASM defines types, related constants, and external entry   *\n                                               79+*    declarations for the use of Name Token/Services from 390        *\n                                               80+*    Assembly Language                                               *\n                                               81+*                                                                    *\n                                               82+*01* Method-of-access:                                               *\n                                               83+*02* Include IEANTASM                                                *\n                                               84+*                                                                    *\n                                               85+*01* Notes:                                                          *\n                                               86+*    The Name/Token services do not use a null character to          *\n                                               87+*    terminate strings. All of the services expect name and token    *\n                                               88+*    data to be a fixed-length 16-byte type. Name data cannot        *\n                                               89+*    begin with or be composed entirely of null characters. However, *\n                                               90+*    token data may be any valid hex or EBCDIC string including      *\n                                               91+*    null characters.                                                *\n                                               92+*                                                                    *\n                                               93+*01* Change-Activity:                                                *\n                                               94+*    $L0=TOKEN,   JBB4422, 910308, PD16JV: Name/Token Support        *\n                                               95+*    $P1=PKI0261, JBB4422, 910517, PD16JV: Authorized levels         *\n                                               96+*    $P2=PKI0302, JBB4422, 910621, PD16JV: Copyright info            *\n                                               97+*    $P3=PKB0276, HBB4430, 920108, PD16CU: Convert to a macro        *\n                                               98+*    $L1=R69885   HBB7703, 991010, PD00XB: Checkpoint support        *\n                                               99+*                                                                    *\n                                              100+*** END OF SPECIFICATIONS ********************************************\n                                              101+*\n                                              102+**********************************************************************\n                                              103+*      Fixed Service Parameter and Return Code Defines               *\n                                              104+**********************************************************************\n                                              105+*\n                                              106+**********************************************************************\n                                              107+*                   Name/Token Level Constants                       *\n                                              108+**********************************************************************\n                         00000001             109+IEANT_TASK_LEVEL       EQU     1                                        01-IEANTASM\n                         00000002             110+IEANT_HOME_LEVEL       EQU     2                                        01-IEANTASM\n                         00000003             111+IEANT_PRIMARY_LEVEL    EQU     3                                        01-IEANTASM\n                         00000004             112+IEANT_SYSTEM_LEVEL     EQU     4                                        01-IEANTASM\n                         0000000B             113+IEANT_TASKAUTH_LEVEL   EQU     11                              /*@P1A*/ 01-IEANTASM\n                         0000000C             114+IEANT_HOMEAUTH_LEVEL   EQU     12                              /*@P1A*/ 01-IEANTASM\n1         SQLASM SQL IBM interface module                                                                       Page    6\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                        0000000D             115+IEANT_PRIMARYAUTH_LEVEL EQU    13                              /*@P1A*/ 01-IEANTASM\n                                              116+*\n                                              117+**********************************************************************\n                                              118+*                     Name/Token Persistence                         *\n                                              119+**********************************************************************\n                         00000000             120+IEANT_NOPERSIST        EQU     0                                        01-IEANTASM\n                         00000001             121+IEANT_PERSIST          EQU     1                                        01-IEANTASM\n                                              122+*\n                                              123+**********************************************************************\n                                              124+*                     Name/Token Checkpoint                          *\n                                              125+**********************************************************************\n                         00000000             126+IEANT_NOCHECKPOINT     EQU     0                                  @L1A  01-IEANTASM\n                         00000002             127+IEANT_CHECKPOINTOK     EQU     2                                  @L1A  01-IEANTASM\n                                              128+*\n                                              129+**********************************************************************\n                                              130+*                      Service Return Codes                          *\n                                              131+**********************************************************************\n                         00000000             132+IEANT_OK               EQU     0                                        01-IEANTASM\n                         00000004             133+IEANT_DUP_NAME         EQU     4                                        01-IEANTASM\n                         00000004             134+IEANT_NOT_FOUND        EQU     4                                        01-IEANTASM\n                         00000008             135+IEANT_24BITMODE        EQU     8                                        01-IEANTASM\n                         00000010             136+IEANT_NOT_AUTH         EQU     16                                       01-IEANTASM\n                         00000014             137+IEANT_SRB_MODE         EQU     20                                       01-IEANTASM\n                         00000018             138+IEANT_LOCK_HELD        EQU     24                                       01-IEANTASM\n                         0000001C             139+IEANT_LEVEL_INVALID    EQU     28                                       01-IEANTASM\n                         00000020             140+IEANT_NAME_INVALID     EQU     32                                       01-IEANTASM\n                         00000024             141+IEANT_PERSIST_INVALID  EQU     36                                       01-IEANTASM\n                         00000028             142+IEANT_AR_INVALID       EQU     40                                       01-IEANTASM\n                         0000002C             143+IEANT_NOT_AMODE64      EQU     44                                       01-IEANTASM\n                         00000040             144+IEANT_UNEXPECTED_ERR   EQU     64                                       01-IEANTASM\n                                              145+*\n                                              146+**********************************************************************\n                                              147+*   End of Name/Token Services Include                               *\n                                              148+**********************************************************************\n                                              149          MACRO\n                                              150 &LABEL   STUB &INDEX=0,&LOAD=\n                                              151          LCLC &LNAME,&LRRS\n                                              152          AIF  ('&LOAD' EQ '').SETDEF\n                                              153 &LNAME   SETC '&LOAD'\n                                              154          AGO  .SETOK\n                                              155 .SETDEF  ANOP\n                                              156 &LNAME   SETC '&LABEL'\n                                              157 .SETOK   AIF   ('&LNAME' NE 'DSNALI').NALI\n                                              158 &LRRS    SETC  'DSNRLI'\n                                              159          AGO   .RRSOK\n                                              160 .NALI    AIF   ('&LNAME' NE 'DSNHLI2').NHLI\n                                              161 &LRRS    SETC  'DSNHLIR'\n                                              162          AGO   .RRSOK\n                                              163 .NHLI    ANOP\n                                              164 &LRRS    SETC  'DSNTIAR'\n                                              165 .RRSOK   ANOP\n                                              166 &LABEL   CSECT\n                                              167 &LABEL   AMODE 31\n                                              168 &LABEL   RMODE ANY\n                                              169 *label.E edcprlg basereg=r9,dsalen=dsalen\n1         SQLASM SQL IBM interface module                                                                       Page    7\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                             170 &LABEL.E EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                              171 .LOK     ANOP\n                                              172          L     R7,=A(LEVEL)       get const darr\n                                              173          USING LEVEL,R7           base on const\n                                              174          LR    R2,R1              save pointer\n                                              175          L     R15,X'10'           CVT\n                                              176          L     R15,X'220'(,R15)     CSR table address\n                                              177          L     R15,X'14'(,R15)      offset\n                                              178          L     R15,X'08'(,R15)      IEANTRNT\n                                              179 *        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               *\n                                                                 MF=(E,CALLLIST)\n                                              180          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,RETCODE),               *\n                                                                 MF=(E,CALLLIST)\n                                              181          CHI   R15,4               check code\n                                              182          JL    OK&SYSNDX           if retrieve ok\n                                              183          XC    LOADLIST(LOADLISTL),LOADLIST clear list\n                                              184 *        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n                                              185          LOAD  EP=USERRS,ERRET=NORRS&SYSNDX,SF=(E,LOADLIST)\n                                              186 *        load  ep=&LRRS\n                                              187          LOAD  EP=&LRRS\n                                              188          LR    R5,R0               get addr\n                                              189          J     DOC&SYSNDX\n                                              190 NORRS&SYSNDX DS 0H\n                                              191 *30/03/06 addr in r5\n                                              192 *        load  ep=&LNAME\n                                              193          LOAD  EP=&LNAME\n                                              194          LR    R5,R0               into r5\n                                              195          J     DOC&SYSNDX          jump to call\n                                              196 OK&SYSNDX DS   0H\n                                              197           L   R15,TOKENDATA+&INDEX get proper addr\n                                              198           LR  R5,R15               save here\n                                              199 DOC&SYSNDX DS  0H\n                                              200          AIF   ('&LABEL' NE 'DSNALI').NODSNALI\n                                              201          ICM   R3,15,0(R2)         get fists parm\n                                              202          JZ    NOPARM&SYSNDX       jump if no parm\n                                              203          MVC   CALLCODE,0(R3)      save call code\n                                              204          CLC   =C'IDENTIFY',0(R3)  RRS IDENTIFY (i.e connect)\n                                              205          JE    CONN&SYSNDX         connect request\n                                              206          CLC   =C'CONNECT',0(R3)   CAF connect request\n                                              207          JNE   GOON&SYSNDX         if not CAF connect\n                                              208 CONN&SYSNDX  DS 0H\n                                              209          BAS   R14,RETR&SYSNDX     call to retrieve token\n                                              210          LTR   R15,R15             test code\n                                              211          JZ    ALREADY&SYSNDX      jump if already\n                                              212 * start to connect\n                                              213          LR    R1,R2               back pointer\n                                              214          LR    R15,R5              back module addr\n                                              215          BASR  R14,R15             call it to connect\n                                              216          LTR   R15,R15             test rc\n                                              217          JNZ   RET&SYSNDX          jump if not o.k.\n                                              218 * connection was o.k, so create token\n                                              219          BAS   R14,CREA&SYSNDX     create token\n                                              220          LTR   R15,R15             check code\n                                              221          JNZ   ERRTKN&SYSNDX       name token error\n                                              222          J     RET&SYSNDX\n1         SQLASM SQL IBM interface module                                                                       Page    8\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                             223 NOPARM&SYSNDX DS 0H\n                                              224          L     R15,=F'-2'         parm error\n                                              225          J     RET&SYSNDX         jump out\n                                              226 ERRTKN&SYSNDX DS 0H\n                                              227          L     R15,=F'-3'         token error\n                                              228          J     RET&SYSNDX         jump out\n                                              229 ALREADY&SYSNDX L R15,=F'-1'       already connectedo\n                                              230          J     RET&SYSNDX         jump out\n                                              231 .NODSNALI  ANOP\n                                              232 GOON&SYSNDX DS 0H\n                                              233          LR    R1,R2               back pointer\n                                              234          LR    R15,R5              back module addr\n                                              235          BASR  R14,R15             call it\n                                              236          AIF   ('&LABEL' NE 'DSNALI').NODSNAL1\n                                              237          LR    R5,R15              save rc\n                                              238          CLC   =C'TERMINATE',CALLCODE terminate RRS\n                                              239          JE    DELDO&SYSNDX        jump if it is\n                                              240          CLC   =C'DISCONN',CALLCODE terminate CAF\n                                              241          JNE   RET&SYSNDX\n                                              242 DELDO&SYSNDX DS 0H\n                                              243          BAS   R14,DELTK&SYSNDX    call to delete\n                                              244          CHI   R15,4               check code\n                                              245          JH    ERRT&SYSNDX         name/token error\n                                              246          LR    R15,R5              back\n                                              247 .NODSNAL1 ANOP\n                                              248 RET&SYSNDX DS  0H\n                                              249 *        edcepil\n                                              250          EDCEPIL\n                                              251          AIF   ('&LABEL' NE 'DSNALI').NODSNAL2\n                                              252 RETR&SYSNDX BAKR R14,0\n                                              253          L     R15,X'10'           CVT\n                                              254          L     R15,X'220'(,R15)    CSR table address\n                                              255          L     R15,X'14'(,R15)     offset\n                                              256          L     R15,X'08'(,R15)     IEANTRNT\n                                              257 *        CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              258          CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              259          PR    ,\n                                              260 DELTK&SYSNDX BAKR R14,0\n                                              261          L     R15,X'10'           CVT\n                                              262          L     R15,X'220'(,R15)     CSR table address\n                                              263          L     R15,X'14'(,R15)       offset\n                                              264          L     R15,X'0C'(,R15)       IEANTDL delete token\n                                              265 *        CALL  (15),(conn_LEVEL,conn_tokenname,RETCODE),MF=(E,CALLLIST)\n                                              266          CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,RETCODE),MF=(E,CALLLIST)\n                                              267          PR    ,\n                                              268 CREA&SYSNDX BAKR R14,0             in stack\n                                              269          L     R15,X'10'           CVT\n                                              270          L     R15,X'220'(,R15)    CSR table address\n                                              271          L     R15,X'14'(,R15)     offset\n                                              272          L     R15,X'04'(,R15)     IEANTCR\n                                              273 *        CALL  (15),(conn_level,conn_tokenname,tokendata,              *\n                                                                 NOPERSIST,RETCODE),MF=(E,CALLLIST)\n                                              274          CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,              *\n1         SQLASM SQL IBM interface module                                                                       Page    9\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                                                NOPERSIST,RETCODE),MF=(E,CALLLIST)\n                                              275          PR    ,\n                                              276 ERRT&SYSNDX LR R5,R15              get code\n                                              277 *        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              278          ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              279 .NODSNAL2 ANOP\n                                              280          LTORG\n                                              281          MEND\n                                              282          MACRO\n                                              283 &LABEL   RSQL\n                                              284 *        EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                              285          EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                              286 .RLOK    ANOP\n                                              287          L     R7,=A(LEVEL)       get const darr\n                                              288          L     R15,X'10'           CVT\n                                              289          L     R15,X'220'(,R15)    CSR table address\n                                              290          L     R15,X'14'(,R15)     offset\n                                              291          L     R15,X'08'(,R15)     IEANTRNT\n                                              292 *        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n                                              293          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n                                              294          CHI   R15,4               check code\n                                              295          JE    LOAD                if new token\n                                              296 *        JL    DELETE              if already exits, delete\n                                              297          JH    ERRTKN              name/token err\n                                              298 * already exists, check if rrs was\n                                              299          SR    R15,R15             no rrs\n                                              300          OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS\n                                              301          JZ    RETRN               no rrs\n                                              302          LA    R15,4               indicate rrs\n                                              303          J     RETRN               if already exits, o.k.\n                                              304 DELETE   OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS\n                                              305          BZ    DNORRS              DELETE NORRS\n                                              306 *        delete ep=userrs          delete userrs\n                                              307          DELETE EP=USERRS          delete userrs\n                                              308 *        delete ep=dsnhlir         delete dsnhlir\n                                              309          DELETE EP=DSNHLIR         delete dsnhlir\n                                              310 *        delete ep=dsnrli          delete dsnrli\n                                              311          DELETE EP=DSNRLI          delete dsnrli\n                                              312          B     DCLEAR\n                                              313 DNORRS   DS    0H\n                                              314 *        delete ep=dsnhli2\n                                              315          DELETE EP=DSNHLI2\n                                              316 *        delete ep=dsnali\n                                              317          DELETE EP=DSNALI\n                                              318 DCLEAR   DS    0H                  clear addresses\n                                              319          L     R15,X'10'           CVT\n                                              320          L     R15,X'220'(,R15)     CSR table address\n                                              321          L     R15,X'14'(,R15)       offset\n                                              322          L     R15,X'0C'(,R15)       IEANTDL delete token\n                                              323 *        CALL  (15),(LEVEL,tokenname,RETCODE),MF=(E,CALLLIST)\n                                              324          CALL  (15),(LEVEL,TOKENNAME,RETCODE),MF=(E,CALLLIST)\n                                              325          CHI   R15,4               check code\n                                              326          BH    ERRTKN              name/token error\n                                              327          B     RETRN\n                                              328 LOAD     DS    0H\n1         SQLASM SQL IBM interface module                                                                       Page   10\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                             329 *        LOAD  EP=DSNTIAR          get addr\n                                              330          LOAD  EP=DSNTIAR          get addr\n                                              331          ST    R0,TOKENDATA+8      save addr\n                                              332          MVI   TOKENDATA+12,1      assume RRS\n                                              333          XC    LOADLIST(LOADLISTL),LOADLIST clear list\n                                              334 *        load  ep=userrs,erret=norrs,sf=(e,loadlist)\n                                              335          LOAD  EP=USERRS,ERRET=NORRS,SF=(E,LOADLIST)\n                                              336 *        load  ep=dsnrli\n                                              337          LOAD  EP=DSNRLI\n                                              338          ST    R0,TOKENDATA        save addr\n                                              339          LOAD  EP=DSNHLIR          get addr\n                                              340          ST    R0,TOKENDATA+4      save addr\n                                              341          LA    R15,4               indicate rrs\n                                              342          B     CTOKEN              branch to create token\n                                              343 NORRS    XC    TOKENDATA+12(4),TOKENDATA+12 use CAF\n                                              344          LOAD  EP=DSNALI           get addr\n                                              345          ST    R0,TOKENDATA        save addr\n                                              346 *        LOAD  EP=DSNHLI2          get addr\n                                              347          LOAD  EP=DSNHLI2          get addr\n                                              348          ST    R0,TOKENDATA+4      save addr\n                                              349          SR    R15,R15             no RRS\n                                              350 CTOKEN   LR    R5,R15              save rc\n                                              351          L     R15,X'10'           CVT\n                                              352          L     R15,X'220'(,R15)    CSR table address\n                                              353          L     R15,X'14'(,R15)     offset\n                                              354          L     R15,X'04'(,R15)     IEANTCR\n                                              355 *        CALL  (15),(LEVEL,tokenname,tokendata,nopersist,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              356          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,NOPERSIST,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              357          LTR   R15,R15             check code\n                                              358          JNZ   ERRTKN              name token error\n                                              359          LR    R15,R5              back rc\n                                              360          J     RETRN               jump out\n                                              361          LTORG\n                                              362 LEVEL    DC    A(IEANT_TASK_LEVEL)      Task level\n                                              363 *LEVEL    DC    A(IEANT_HOME_LEVEL)     Home level\n                                              364 NOPERSIST DC   A(IEANT_NOPERSIST)      nopersist option\n                                              365 TOKENNAME DC   CL16'ISIS_DB2CAF_TOKEN' Token name\n                                              366 CONN_LEVEL DC  A(IEANT_TASK_LEVEL)      task level\n                                              367 CONN_TOKENNAME DC   CL16'ISIS_DBCONN_TOKEN' Token name\n                                              368 ERRTKN   LR    R5,R15              get code\n                                              369 *        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              370          ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              371          SPACE 1\n                                              372 *--------------------------------------------------------------------*\n                                              373 * RETURN point                                                       *\n                                              374 *--------------------------------------------------------------------*\n                                              375 RETRN    DS    0H\n                                              376 *exit    edcepil\n                                              377 EXIT     EDCEPIL\n                                              378 .RRLOK   ANOP\n                                              379          MEND\n0                                             381 *--------------------------------------------------------------------*\n1         SQLASM SQL IBM interface module                                                                       Page   11\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                             382 *RSQLASM : ASM stub routine to provide access to the SQL functions   *\n                                              383 *          from the SASC/C modules with CAF and RRS                  *\n                                              384 *                                                                    *\n                                              385 * Entry points :                                                     *\n                                              386 *         SQLASM standard init entry point                           *\n                                              387 *         if the address =0 then                                     *\n                                              388 *         load the DSN.. modules and store the address list          *\n                                              389 *         in the C address list                                      *\n                                              390 *         if the address <>0 then                                    *\n                                              391 *         delete the DSN.. modules and set the address list to zero  *\n                                              392 *         in the C address list                                      *\n                                              393 * The program tries to load the DSNRL interface, andif it can        *\n                                              394 *     set a flag to indicate the use of the RRS                      *\n                                              395 * RRS entry points:                                                  *\n                                              396 *         DSNRLI  standard SQL entry point to call the DSNRLI module *\n                                              397 *         DSNHLIR SQL call entry point                               *\n                                              398 * CAF entry points:                                                  *\n                                              399 *         DSNHLI2 standard SQL entry point to call the DSNHLI module *\n                                              400 *         DSNALI standard SQL entry to call the DSNALI module        *\n                                              401 * Common :                                                           *\n                                              402 *         DSNTIAR to call the standard SQL message edit nodule       *\n                                              403 *                                                                    *\n                                              404 *                                                                    *\n                                              405 * Calling: The module is called via the standard MVS convention :    *\n                                              406 *          R1 points to the parameters list :                        *\n                                              407 *          +0  address list pointer                                  *\n                                              408 *            +0 DSNALI or DSNRLI address                             *\n                                              409 *            +4 DSNHLI2 or DSNHLIR address                           *\n                                              410 *            +8 DSNTIAR address                                      *\n                                              411 *            +c RRS or CAF flag                                      *\n                                              412 * Processing:                                                        *\n                                              413 * Return : The module returns the primary return code in R15         *\n                                              414 *                                                                    *\n                                              415 * AMODE  : 31                                                        *\n                                              416 * RMODE  : ANY                                                       *\n                                              417 * rent/reus                                                          *\n                                              418 *--------------------------------------------------------------------*\n                                              419 DSNALI   STUB  INDEX=0            stub DSNALI\n 00000000                00000000 000002BF    420+DSNALI   CSECT                                                          01-\n                                              421+DSNALI   AMODE 31                                                       01-\n                                              422+DSNALI   RMODE ANY                                                      01-\n                                              423+*label.E edcprlg basereg=r9,dsalen=dsalen\n                                              425+***--------------------------------------------------------------------\n 00000000                00000000 000000E0    426+IHB0004DS DSECT                                                         02-EDCPRLG\n 00000000                                     427+         DS    D                                                        02-EDCPRLG\n 00000008                                     428+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000    429+         ORG   IHB0004DS                                                02-EDCPRLG\n 00000000                                     430+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC    431+         ORG                                                            02-EDCPRLG\n 000000E0                                     432+         DS    0D                                                       02-EDCPRLG\n                         000000D8             433+IHB0004LG EQU   *-IHB0004DS-8                                           02-EDCPRLG\n 00000000                00000000 000002BF    434+DSNALI   CSECT                                                          02-EDCPRLG\n                                              435+*--------------------------------------------------------------\n 00000000                                     436+         DS    0H                                                       02-EDCPRLG\n                     R:F 00000000             437+         USING *,15                                                     02-EDCPRLG\n1         SQLASM SQL IBM interface module                                                                       Page   12\n   Active Usings: DSA,R13  DSNALI,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000000 47F0 F044               00000044    438+DSNALIE  B     IHB0004B       branch around prologue's constant areas   02-EDCPRLG\n                                              439+* PPA1 constant area\n 00000004 14                                  440+         DC    AL1(IHB0004N+4-*)   offset to the name                   02-EDCPRLG\n 00000005 CE                                  441+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 00000006 A0                                  442+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n 00000007 10                                  443+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 00000008 00000020                            444+         DC    AL4(IHB0004P) .       A(PPA2)                            02-EDCPRLG\n 0000000C 00000000                            445+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 00000010 000000D8                            446+         DC    AL4(IHB0004LG)        total DSA length                   02-EDCPRLG\n 00000014 0007                                447+IHB0004N DC    AL2(7)      .       length of name                       02-EDCPRLG\n 00000016 C4E2D5C1D3C9C5                      448+         DC    C'DSNALIE'          untruncated name                     02-EDCPRLG\n                                              449+*--------------------------------------------------------------\n                                              450+         EXTRN CEESTART                                                 02-EDCPRLG\n                                              451+*---------------------------------------------------------------\n                                              452+* PPA2 constant area\n 00000020                                     453+IHB0004P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 00000020 03                                  454+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 00000021 00                                  455+         DC    X'00' .             member subid                         02-EDCPRLG\n 00000022 33                                  456+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 00000023 00                                  457+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 00000024 00000000                            458+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 00000028 00000000                            459+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 0000002C 00000030                            460+         DC    AL4(IHB0004T) .       A(time stamp) or zero              02-EDCPRLG\n                                              461+*\n                                              462+* Time stamp area\n 00000030                                     463+IHB0004T DS    0F                                                       02-EDCPRLG\n 00000030 F2F0F1F3                            464+         DC    CL4'2013'  .        yyyy                            @P1A 02-EDCPRLG\n 00000034 F0F1F0F7                            465+         DC    CL4'0107'   .       mmdd                                 02-EDCPRLG\n 00000038 F1F0F5F7F0F0                        466+         DC    CL6'105700'     .   hhmmss                               02-EDCPRLG\n 0000003E F0F1                                467+         DC    CL2'01' .           version                              02-EDCPRLG\n 00000040 F0F1F0F0                            468+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                              469+*\n 00000044                                     470+IHB0004B DS    0H                                                       02-EDCPRLG\n                                              471+***--------------------------------------------------------------------\n 00000044 90EC D00C               0000000C    472+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                              473+***--------------------------------------------------------------------\n 00000048 5820 D04C               0000004C    474+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 0000004C 5800 F010               00000010    475+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 00000050 1E02                                476+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n 00000052 5500 C00C               0000000C    477+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 00000056 47D0 F060               00000060    478+         BNH   *+10                branch if enough space               02-EDCPRLG\n 0000005A 58F0 C074               00000074    479+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 0000005E 05EF                                480+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                              481+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000060 58F0 D048               00000048    482+         L     15,72(,13)                                               02-EDCPRLG\n 00000064 90F0 2048               00000048    483+         STM   15,0,72(2)                                               02-EDCPRLG\n 00000068 9210 2000      00000000             484+         MVI   0(2),X'10'                                               02-EDCPRLG\n 0000006C 50D0 2004               00000004    485+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 00000070 18D2                                486+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                              487+***--------------------------------------------------------------------\n                                              488+         DROP  15                                                       02-EDCPRLG\n 00000072 0590                                489+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 00000074             490+         USING *,R9                                                     02-EDCPRLG\n                                              491+***--------------------------------------------------------------------\n 00000074 5870 9224               00000298    492+         L     R7,=A(LEVEL)       get const darr                        01-\n1         SQLASM SQL IBM interface module                                                                       Page   13\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                    R:7 000007BC             493+         USING LEVEL,R7           base on const                         01-\n 00000078 1821                                494+         LR    R2,R1              save pointer                          01-\n 0000007A 58F0 0010               00000010    495+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 35 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 0000007E 58F0 F220               00000220    496+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000082 58F0 F014               00000014    497+         L     R15,X'14'(,R15)      offset                              01-\n 00000086 58F0 F008               00000008    498+         L     R15,X'08'(,R15)      IEANTRNT                            01-\n                                              499+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                                 +               MF=(E,CALLLIST)\n 0000008A                                     502+         DS    0H                                                       02-CALL\n 0000008A 4110 D090               00000090    507+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000008E 4100 7000               000007BC    508+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000092 5000 1000               00000000    509+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000096 4100 7008               000007C4    510+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000009A 5000 1004               00000004    511+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000009E 4100 D0B0               000000B0    512+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000000A2 5000 1008               00000008    513+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000000A6 4100 D0C0               000000C0    514+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000000AA 5000 100C               0000000C    515+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000000AE 05EF                                516+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000000B0 A7FE 0004               00000004    517+         CHI   R15,4               check code                           01-\n 000000B4 A744 0035               0000011E    518+         JL    OK0003              if retrieve ok                       01-\n 000000B8 D70F D080 D080 00000080 00000080    519+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n                                              520+*        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n 000000BE 0700                                525+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 000000C0 4110 D080               00000080    526+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 000000C4 4100 9058               000000CC    527+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 000000C8 47F0 9060               000000D4    528+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 000000CC E4E2C5D9D9E24040                    529+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 000000D4 5000 1000               00000000    530+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n 000000D8 9620 100A      0000000A             531+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 000000DC 41F0 0009               00000009    532+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000000E0 0A7A                                533+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000000E2 12FF                                534+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000000E4 4770 908E               00000102    535+         BNZ   NORRS0003        GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                              536+*        load  ep=&LRRS\n 000000E8                                     539+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000E8 4DF0 9080               000000F4    540+         BAS   15,LOAD2_0015      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000EC                                     541+LD2_0015    DS 0H                                                       02-LOAD\n 000000EC C4E2D5D9D3C94040                    542+LE2_0015    DC CL8'DSNRLI'        ENTRY POINT NAME                      02-LOAD\n 000000F4                                     543+LOAD2_0015    DS 0H                                                     02-LOAD\n 000000F4 4100 F000               00000000    544+         LA    0,LE2_0015-LD2_0015(,15)         ADDR OF PARAMETER       02-LOAD\n 000000F8 1B11                                545+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000FA 0A08                                546+         SVC   8                                                        02-LOAD\n 000000FC 1850                                547+         LR    R5,R0               get addr                             01-\n 000000FE A7F4 0013               00000124    548+         J     DOC0003                                                  01-\n 00000102                                     549+NORRS0003    DS 0H                                                      01-\n                                              550+*30/03/06 addr in r5\n                                              551+*        load  ep=&LNAME\n 00000102 0700                                554+         CNOP  0,4                                                 @L2P 02-LOAD\n 00000104 4DF0 909C               00000110    555+         BAS   15,LOAD2_0017      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000108                                     556+LD2_0017    DS 0H                                                       02-LOAD\n 00000108 C4E2D5C1D3C94040                    557+LE2_0017    DC CL8'DSNALI'        ENTRY POINT NAME                      02-LOAD\n 00000110                                     558+LOAD2_0017    DS 0H                                                     02-LOAD\n1         SQLASM SQL IBM interface module                                                                       Page   14\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000110 4100 F000               00000000    559+         LA    0,LE2_0017-LD2_0017(,15)         ADDR OF PARAMETER       02-LOAD\n 00000114 1B11                                560+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000116 0A08                                561+         SVC   8                                                        02-LOAD\n 00000118 1850                                562+         LR    R5,R0               into r5                              01-\n 0000011A A7F4 0005               00000124    563+         J     DOC0003             jump to call                         01-\n 0000011E                                     564+OK0003    DS   0H                                                       01-\n 0000011E 58F0 D0B0               000000B0    565+          L   R15,TOKENDATA+0      get proper addr                      01-\n 00000122 185F                                566+          LR  R5,R15               save here                            01-\n 00000124                                     567+DOC0003    DS  0H                                                       01-\n 00000124 BF3F 2000               00000000    568+         ICM   R3,15,0(R2)         get fists parm                       01-\n 00000128 A784 0021               0000016A    569+         JZ    NOPARM0003          jump if no parm                      01-\n 0000012C D20F D0C4 3000 000000C4 00000000    570+         MVC   CALLCODE,0(R3)      save call code                       01-\n 00000132 D507 921C 3000 00000290 00000000    571+         CLC   =C'IDENTIFY',0(R3)  RRS IDENTIFY (i.e connect)           01-\n 00000138 A784 0007               00000146    572+         JE    CONN0003            connect request                      01-\n 0000013C D506 9234 3000 000002A8 00000000    573+         CLC   =C'CONNECT',0(R3)   CAF connect request                  01-\n 00000142 A774 0020               00000182    574+         JNE   GOON0003            if not CAF connect                   01-\n 00000146                                     575+CONN0003     DS 0H                                                      01-\n 00000146 4DE0 914A               000001BE    576+         BAS   R14,RETR0003        call to retrieve token               01-\n 0000014A 12FF                                577+         LTR   R15,R15             test code                            01-\n 0000014C A784 0017               0000017A    578+         JZ    ALREADY0003         jump if already                      01-\n                                              579+* start to connect\n 00000150 1812                                580+         LR    R1,R2               back pointer                         01-\n 00000152 18F5                                581+         LR    R15,R5              back module addr                     01-\n 00000154 0DEF                                582+         BASR  R14,R15             call it to connect                   01-\n 00000156 12FF                                583+         LTR   R15,R15             test rc                              01-\n 00000158 A774 002A               000001AC    584+         JNZ   RET0003             jump if not o.k.                     01-\n                                              585+* connection was o.k, so create token\n 0000015C 4DE0 91BA               0000022E    586+         BAS   R14,CREA0003        create token                         01-\n 00000160 12FF                                587+         LTR   R15,R15             check code                           01-\n 00000162 A774 0008               00000172    588+         JNZ   ERRTKN0003          name token error                     01-\n 00000166 A7F4 0023               000001AC    589+         J     RET0003                                                  01-\n 0000016A                                     590+NOPARM0003    DS 0H                                                     01-\n 0000016A 58F0 9228               0000029C    591+         L     R15,=F'-2'         parm error                            01-\n 0000016E A7F4 001F               000001AC    592+         J     RET0003            jump out                              01-\n 00000172                                     593+ERRTKN0003    DS 0H                                                     01-\n 00000172 58F0 922C               000002A0    594+         L     R15,=F'-3'         token error                           01-\n 00000176 A7F4 001B               000001AC    595+         J     RET0003            jump out                              01-\n 0000017A 58F0 9230               000002A4    596+ALREADY0003    L R15,=F'-1'       already connectedo                    01-\n 0000017E A7F4 0017               000001AC    597+         J     RET0003            jump out                              01-\n 00000182                                     598+GOON0003    DS 0H                                                       01-\n 00000182 1812                                599+         LR    R1,R2               back pointer                         01-\n 00000184 18F5                                600+         LR    R15,R5              back module addr                     01-\n 00000186 0DEF                                601+         BASR  R14,R15             call it                              01-\n 00000188 185F                                602+         LR    R5,R15              save rc                              01-\n 0000018A D508 923B D0C4 000002AF 000000C4    603+         CLC   =C'TERMINATE',CALLCODE terminate RRS                     01-\n 00000190 A784 0007               0000019E    604+         JE    DELDO0003           jump if it is                        01-\n 00000194 D506 9244 D0C4 000002B8 000000C4    605+         CLC   =C'DISCONN',CALLCODE terminate CAF                       01-\n 0000019A A774 0009               000001AC    606+         JNE   RET0003                                                  01-\n 0000019E                                     607+DELDO0003    DS 0H                                                      01-\n 0000019E 4DE0 9186               000001FA    608+         BAS   R14,DELTK0003       call to delete                       01-\n 000001A2 A7FE 0004               00000004    609+         CHI   R15,4               check code                           01-\n 000001A6 A724 0066               00000272    610+         JH    ERRT0003            name/token error                     01-\n 000001AA 18F5                                611+         LR    R15,R5              back                                 01-\n 000001AC                                     612+RET0003    DS  0H                                                       01-\n                                              613+*        edcepil\n1         SQLASM SQL IBM interface module                                                                       Page   15\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0000001AC 58D0 D004               00000004    615+         L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 000001B0 58E0 D00C               0000000C    616+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 000001B4 982C D01C               0000001C    617+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 000001B8 051E                                618+         BALR  1,14               return                                02-EDCEPIL\n 000001BA 00000000                            619+         DC    AL4(DSNALIE)                                             02-EDCEPIL\n 000001BE B240 00E0                           620+RETR0003    BAKR R14,0                                                  01-\n 000001C2 58F0 0010               00000010    621+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 115 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 000001C6 58F0 F220               00000220    622+         L     R15,X'220'(,R15)    CSR table address                    01-\n 000001CA 58F0 F014               00000014    623+         L     R15,X'14'(,R15)     offset                               01-\n 000001CE 58F0 F008               00000008    624+         L     R15,X'08'(,R15)     IEANTRNT                             01-\n                                              625+*        CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,RETCODE),     X\n                                                 +               MF=(E,CALLLIST)\n 000001D2                                     628+         DS    0H                                                       02-CALL\n 000001D2 4110 D090               00000090    633+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 000001D6 4100 7018               000007D4    634+         LA    0,CONN_LEVEL       PICKUP  PARAMETER                     03-IHBOPLTX\n 000001DA 5000 1000               00000000    635+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001DE 4100 701C               000007D8    636+         LA    0,CONN_TOKENNAME   PICKUP  PARAMETER                     03-IHBOPLTX\n 000001E2 5000 1004               00000004    637+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001E6 4100 D0B0               000000B0    638+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000001EA 5000 1008               00000008    639+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001EE 4100 D0C0               000000C0    640+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000001F2 5000 100C               0000000C    641+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001F6 05EF                                642+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000001F8 0101                                643+         PR    ,                                                        01-\n 000001FA B240 00E0                           644+DELTK0003    BAKR R14,0                                                 01-\n 000001FE 58F0 0010               00000010    645+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 125 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 00000202 58F0 F220               00000220    646+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000206 58F0 F014               00000014    647+         L     R15,X'14'(,R15)       offset                             01-\n 0000020A 58F0 F00C               0000000C    648+         L     R15,X'0C'(,R15)       IEANTDL delete token               01-\n                                              649+*        CALL  (15),(conn_LEVEL,conn_tokenname,RETCODE),MF=(E,CALLLIST)\n 0000020E                                     652+         DS    0H                                                       02-CALL\n 0000020E 4110 D090               00000090    657+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 00000212 4100 7018               000007D4    658+         LA    0,CONN_LEVEL       PICKUP  PARAMETER                     03-IHBOPLTX\n 00000216 5000 1000               00000000    659+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000021A 4100 701C               000007D8    660+         LA    0,CONN_TOKENNAME   PICKUP  PARAMETER                     03-IHBOPLTX\n 0000021E 5000 1004               00000004    661+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000222 4100 D0C0               000000C0    662+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 00000226 5000 1008               00000008    663+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000022A 05EF                                664+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 0000022C 0101                                665+         PR    ,                                                        01-\n 0000022E B240 00E0                           666+CREA0003    BAKR R14,0             in stack                             01-\n 00000232 58F0 0010               00000010    667+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 133 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 00000236 58F0 F220               00000220    668+         L     R15,X'220'(,R15)    CSR table address                    01-\n 0000023A 58F0 F014               00000014    669+         L     R15,X'14'(,R15)     offset                               01-\n 0000023E 58F0 F004               00000004    670+         L     R15,X'04'(,R15)     IEANTCR                              01-\n                                              671+*        CALL  (15),(conn_level,conn_tokenname,tokendata,              X\n                                                 +               NOPERSIST,RETCODE),MF=(E,CALLLIST)\n 00000242                                     674+         DS    0H                                                       02-CALL\n 00000242 4110 D090               00000090    679+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n1         SQLASM SQL IBM interface module                                                                       Page   16\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000246 4100 7018               000007D4    680+         LA    0,CONN_LEVEL       PICKUP  PARAMETER                     03-IHBOPLTX\n 0000024A 5000 1000               00000000    681+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000024E 4100 701C               000007D8    682+         LA    0,CONN_TOKENNAME   PICKUP  PARAMETER                     03-IHBOPLTX\n 00000252 5000 1004               00000004    683+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000256 4100 D0B0               000000B0    684+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000025A 5000 1008               00000008    685+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000025E 4100 7004               000007C0    686+         LA    0,NOPERSIST        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000262 5000 100C               0000000C    687+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000266 4100 D0C0               000000C0    688+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 0000026A 5000 1010               00000010    689+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000026E 05EF                                690+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000270 0101                                691+         PR    ,                                                        01-\n 00000272 185F                                692+ERRT0003    LR R5,R15              get code                             01-\n                                              693+*        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n 00000274                                     696+         DS    0H                                                       02-ABEND\n 00000274 1815                                699+         LR    1,R5                              LOAD PARAMETER REG 1   03-IHBINNRR\n 00000276 8910 0014               00000014    700+         SLL   1,20(0)            SHIFT OFF HIGH ORDER 20 BITS @G860P1F 02-ABEND\n 0000027A 8810 0008               00000008    701+         SRL   1,8(0)             CODE IN SYSTEM POSITION               02-ABEND\n 0000027E 18F3                                702+         LR    15,R3              LOAD REG15 WITH REASON CODE  @G860P1F 02-ABEND\n 00000280 4100 0084               00000084    703+         LA    0,132(0,0)         DUMP/STEP/DUMPOPTS/REASON    @G860P1F 02-ABEND\n 00000284 8900 0018               00000018    704+         SLL   0,24(0)            SHIFT TO HIGH ORDER                   02-ABEND\n 00000288 1610                                705+         OR    1,0                OR IN WITH COMPCODE                   02-ABEND\n 0000028A 0A0D                                706+         SVC   13                 LINK TO ABEND ROUTINE                 02-ABEND\n 00000290                                     707+         LTORG                                                          01-\n 00000290 C9C4C5D5E3C9C6E8                    708                =C'IDENTIFY'\n 00000298 000007BC                            709                =A(LEVEL)\n 0000029C FFFFFFFE                            710                =F'-2'\n 000002A0 FFFFFFFD                            711                =F'-3'\n 000002A4 FFFFFFFF                            712                =F'-1'\n 000002A8 C3D6D5D5C5C3E3                      713                =C'CONNECT'\n 000002AF E3C5D9D4C9D5C1E3                    714                =C'TERMINATE'\n 000002B8 C4C9E2C3D6D5D5                      715                =C'DISCONN'\n                                              716 DSNHLI   STUB  INDEX=4,LOAD=DSNHLI2 stub DSNHLI2\n 000002C0                000002C0 00000144    717+DSNHLI   CSECT                                                          01-\n                                              718+DSNHLI   AMODE 31                                                       01-\n                                              719+DSNHLI   RMODE ANY                                                      01-\n                                              720+*label.E edcprlg basereg=r9,dsalen=dsalen\n                                              722+***--------------------------------------------------------------------\n 00000000                00000000 000000E0    723+IHB0043DS DSECT                                                         02-EDCPRLG\n 00000000                                     724+         DS    D                                                        02-EDCPRLG\n 00000008                                     725+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000    726+         ORG   IHB0043DS                                                02-EDCPRLG\n 00000000                                     727+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC    728+         ORG                                                            02-EDCPRLG\n 000000E0                                     729+         DS    0D                                                       02-EDCPRLG\n                         000000D8             730+IHB0043LG EQU   *-IHB0043DS-8                                           02-EDCPRLG\n 000002C0                000002C0 00000144    731+DSNHLI   CSECT                                                          02-EDCPRLG\n                                              732+*--------------------------------------------------------------\n 000002C0                                     733+         DS    0H                                                       02-EDCPRLG\n                     R:F 000002C0             734+         USING *,15                                                     02-EDCPRLG\n 000002C0 47F0 F044               00000304    735+DSNHLIE  B     IHB0043B       branch around prologue's constant areas   02-EDCPRLG\n                                              736+* PPA1 constant area\n 000002C4 14                                  737+         DC    AL1(IHB0043N+4-*)   offset to the name                   02-EDCPRLG\n 000002C5 CE                                  738+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 000002C6 A0                                  739+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n1         SQLASM SQL IBM interface module                                                                       Page   17\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13  DSNHLI,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0000002C7 10                                  740+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 000002C8 000002E0                            741+         DC    AL4(IHB0043P) .       A(PPA2)                            02-EDCPRLG\n 000002CC 00000000                            742+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 000002D0 000000D8                            743+         DC    AL4(IHB0043LG)        total DSA length                   02-EDCPRLG\n 000002D4 0007                                744+IHB0043N DC    AL2(7)      .       length of name                       02-EDCPRLG\n 000002D6 C4E2D5C8D3C9C5                      745+         DC    C'DSNHLIE'          untruncated name                     02-EDCPRLG\n                                              746+*--------------------------------------------------------------\n                                              747+* PPA2 constant area\n 000002E0                                     748+IHB0043P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 000002E0 03                                  749+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 000002E1 00                                  750+         DC    X'00' .             member subid                         02-EDCPRLG\n 000002E2 33                                  751+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 000002E3 00                                  752+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 000002E4 00000000                            753+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 000002E8 00000000                            754+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 000002EC 000002F0                            755+         DC    AL4(IHB0043T) .       A(time stamp) or zero              02-EDCPRLG\n                                              756+*\n                                              757+* Time stamp area\n 000002F0                                     758+IHB0043T DS    0F                                                       02-EDCPRLG\n 000002F0 F2F0F1F3                            759+         DC    CL4'2013'  .        yyyy                            @P1A 02-EDCPRLG\n 000002F4 F0F1F0F7                            760+         DC    CL4'0107'   .       mmdd                                 02-EDCPRLG\n 000002F8 F1F0F5F7F0F0                        761+         DC    CL6'105700'     .   hhmmss                               02-EDCPRLG\n 000002FE F0F1                                762+         DC    CL2'01' .           version                              02-EDCPRLG\n 00000300 F0F1F0F0                            763+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                              764+*\n 00000304                                     765+IHB0043B DS    0H                                                       02-EDCPRLG\n                                              766+***--------------------------------------------------------------------\n 00000304 90EC D00C               0000000C    767+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                              768+***--------------------------------------------------------------------\n 00000308 5820 D04C               0000004C    769+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 0000030C 5800 F010               00000010    770+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 00000310 1E02                                771+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n 00000312 5500 C00C               0000000C    772+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 00000316 47D0 F060               00000320    773+         BNH   *+10                branch if enough space               02-EDCPRLG\n 0000031A 58F0 C074               00000074    774+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 0000031E 05EF                                775+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                              776+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000320 58F0 D048               00000048    777+         L     15,72(,13)                                               02-EDCPRLG\n 00000324 90F0 2048               00000048    778+         STM   15,0,72(2)                                               02-EDCPRLG\n 00000328 9210 2000      00000000             779+         MVI   0(2),X'10'                                               02-EDCPRLG\n 0000032C 50D0 2004               00000004    780+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 00000330 18D2                                781+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                              782+***--------------------------------------------------------------------\n                                              783+         DROP  15                                                       02-EDCPRLG\n 00000332 0590                                784+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 00000334             785+         USING *,R9                                                     02-EDCPRLG\n                                              786+***--------------------------------------------------------------------\n 00000334 5870 90CC               00000400    787+         L     R7,=A(LEVEL)       get const darr                        01-\n                     R:7 000007BC             788+         USING LEVEL,R7           base on const                         01-\n 00000338 1821                                789+         LR    R2,R1              save pointer                          01-\n 0000033A 58F0 0010               00000010    790+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 35 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 0000033E 58F0 F220               00000220    791+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000342 58F0 F014               00000014    792+         L     R15,X'14'(,R15)      offset                              01-\n1         SQLASM SQL IBM interface module                                                                       Page   18\n   Active Usings: LEVEL,R7  DSNHLI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n000000346 58F0 F008               00000008    793+         L     R15,X'08'(,R15)      IEANTRNT                            01-\n                                              794+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                                 +               MF=(E,CALLLIST)\n 0000034A                                     797+         DS    0H                                                       02-CALL\n 0000034A 4110 D090               00000090    802+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000034E 4100 7000               000007BC    803+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000352 5000 1000               00000000    804+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000356 4100 7008               000007C4    805+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000035A 5000 1004               00000004    806+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000035E 4100 D0B0               000000B0    807+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000362 5000 1008               00000008    808+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000366 4100 D0C0               000000C0    809+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 0000036A 5000 100C               0000000C    810+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000036E 05EF                                811+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000370 A7FE 0004               00000004    812+         CHI   R15,4               check code                           01-\n 00000374 A744 0035               000003DE    813+         JL    OK0042              if retrieve ok                       01-\n 00000378 D70F D080 D080 00000080 00000080    814+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n                                              815+*        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n 0000037E 0700                                820+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 00000380 4110 D080               00000080    821+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 00000384 4100 9058               0000038C    822+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 00000388 47F0 9060               00000394    823+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 0000038C E4E2C5D9D9E24040                    824+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 00000394 5000 1000               00000000    825+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n 00000398 9620 100A      0000000A             826+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 0000039C 41F0 0009               00000009    827+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000003A0 0A7A                                828+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000003A2 12FF                                829+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000003A4 4770 908E               000003C2    830+         BNZ   NORRS0042        GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                              831+*        load  ep=&LRRS\n 000003A8                                     834+         CNOP  0,4                                                 @L2P 02-LOAD\n 000003A8 4DF0 9080               000003B4    835+         BAS   15,LOAD2_0054      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000003AC                                     836+LD2_0054    DS 0H                                                       02-LOAD\n 000003AC C4E2D5C8D3C9D940                    837+LE2_0054    DC CL8'DSNHLIR'       ENTRY POINT NAME                      02-LOAD\n 000003B4                                     838+LOAD2_0054    DS 0H                                                     02-LOAD\n 000003B4 4100 F000               00000000    839+         LA    0,LE2_0054-LD2_0054(,15)         ADDR OF PARAMETER       02-LOAD\n 000003B8 1B11                                840+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000003BA 0A08                                841+         SVC   8                                                        02-LOAD\n 000003BC 1850                                842+         LR    R5,R0               get addr                             01-\n 000003BE A7F4 0013               000003E4    843+         J     DOC0042                                                  01-\n 000003C2                                     844+NORRS0042    DS 0H                                                      01-\n                                              845+*30/03/06 addr in r5\n                                              846+*        load  ep=&LNAME\n 000003C2 0700                                849+         CNOP  0,4                                                 @L2P 02-LOAD\n 000003C4 4DF0 909C               000003D0    850+         BAS   15,LOAD2_0056      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000003C8                                     851+LD2_0056    DS 0H                                                       02-LOAD\n 000003C8 C4E2D5C8D3C9F240                    852+LE2_0056    DC CL8'DSNHLI2'       ENTRY POINT NAME                      02-LOAD\n 000003D0                                     853+LOAD2_0056    DS 0H                                                     02-LOAD\n 000003D0 4100 F000               00000000    854+         LA    0,LE2_0056-LD2_0056(,15)         ADDR OF PARAMETER       02-LOAD\n 000003D4 1B11                                855+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000003D6 0A08                                856+         SVC   8                                                        02-LOAD\n 000003D8 1850                                857+         LR    R5,R0               into r5                              01-\n 000003DA A7F4 0005               000003E4    858+         J     DOC0042             jump to call                         01-\n 000003DE                                     859+OK0042    DS   0H                                                       01-\n 000003DE 58F0 D0B4               000000B4    860+          L   R15,TOKENDATA+4      get proper addr                      01-\n1         SQLASM SQL IBM interface module                                                                       Page   19\n   Active Usings: LEVEL,R7  DSNHLI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0000003E2 185F                                861+          LR  R5,R15               save here                            01-\n 000003E4                                     862+DOC0042    DS  0H                                                       01-\n 000003E4                                     863+GOON0042    DS 0H                                                       01-\n 000003E4 1812                                864+         LR    R1,R2               back pointer                         01-\n 000003E6 18F5                                865+         LR    R15,R5              back module addr                     01-\n 000003E8 0DEF                                866+         BASR  R14,R15             call it                              01-\n 000003EA                                     867+RET0042    DS  0H                                                       01-\n                                              868+*        edcepil\n 000003EA 58D0 D004               00000004    870+         L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 000003EE 58E0 D00C               0000000C    871+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 000003F2 982C D01C               0000001C    872+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 000003F6 051E                                873+         BALR  1,14               return                                02-EDCEPIL\n 000003F8 000002C0                            874+         DC    AL4(DSNHLIE)                                             02-EDCEPIL\n 00000400                                     875+         LTORG                                                          01-\n 00000400 000007BC                            876                =A(LEVEL)\n                                              877 DSNTIAR  STUB  INDEX=8            stub dsntiar\n 00000408                00000408 00000144    878+DSNTIAR  CSECT                                                          01-\n                                              879+DSNTIAR  AMODE 31                                                       01-\n                                              880+DSNTIAR  RMODE ANY                                                      01-\n                                              881+*label.E edcprlg basereg=r9,dsalen=dsalen\n                                              883+***--------------------------------------------------------------------\n 00000000                00000000 000000E0    884+IHB0060DS DSECT                                                         02-EDCPRLG\n 00000000                                     885+         DS    D                                                        02-EDCPRLG\n 00000008                                     886+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000    887+         ORG   IHB0060DS                                                02-EDCPRLG\n 00000000                                     888+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC    889+         ORG                                                            02-EDCPRLG\n 000000E0                                     890+         DS    0D                                                       02-EDCPRLG\n                         000000D8             891+IHB0060LG EQU   *-IHB0060DS-8                                           02-EDCPRLG\n 00000408                00000408 00000144    892+DSNTIAR  CSECT                                                          02-EDCPRLG\n                                              893+*--------------------------------------------------------------\n 00000408                                     894+         DS    0H                                                       02-EDCPRLG\n                     R:F 00000408             895+         USING *,15                                                     02-EDCPRLG\n 00000408 47F0 F044               0000044C    896+DSNTIARE B     IHB0060B       branch around prologue's constant areas   02-EDCPRLG\n                                              897+* PPA1 constant area\n 0000040C 14                                  898+         DC    AL1(IHB0060N+4-*)   offset to the name                   02-EDCPRLG\n 0000040D CE                                  899+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 0000040E A0                                  900+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n 0000040F 10                                  901+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 00000410 00000428                            902+         DC    AL4(IHB0060P) .       A(PPA2)                            02-EDCPRLG\n 00000414 00000000                            903+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 00000418 000000D8                            904+         DC    AL4(IHB0060LG)        total DSA length                   02-EDCPRLG\n 0000041C 0008                                905+IHB0060N DC    AL2(8)      .       length of name                       02-EDCPRLG\n 0000041E C4E2D5E3C9C1D9C5                    906+         DC    C'DSNTIARE'         untruncated name                     02-EDCPRLG\n                                              907+*--------------------------------------------------------------\n                                              908+* PPA2 constant area\n 00000428                                     909+IHB0060P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 00000428 03                                  910+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 00000429 00                                  911+         DC    X'00' .             member subid                         02-EDCPRLG\n 0000042A 33                                  912+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 0000042B 00                                  913+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 0000042C 00000000                            914+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 00000430 00000000                            915+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 00000434 00000438                            916+         DC    AL4(IHB0060T) .       A(time stamp) or zero              02-EDCPRLG\n                                              917+*\n1         SQLASM SQL IBM interface module                                                                       Page   20\n   Active Usings: LEVEL,R7  DSNHLI+X'74',R9  DSA,R13  DSNTIAR,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                             918+* Time stamp area\n 00000438                                     919+IHB0060T DS    0F                                                       02-EDCPRLG\n 00000438 F2F0F1F3                            920+         DC    CL4'2013'  .        yyyy                            @P1A 02-EDCPRLG\n 0000043C F0F1F0F7                            921+         DC    CL4'0107'   .       mmdd                                 02-EDCPRLG\n 00000440 F1F0F5F7F0F0                        922+         DC    CL6'105700'     .   hhmmss                               02-EDCPRLG\n 00000446 F0F1                                923+         DC    CL2'01' .           version                              02-EDCPRLG\n 00000448 F0F1F0F0                            924+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                              925+*\n 0000044C                                     926+IHB0060B DS    0H                                                       02-EDCPRLG\n                                              927+***--------------------------------------------------------------------\n 0000044C 90EC D00C               0000000C    928+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                              929+***--------------------------------------------------------------------\n 00000450 5820 D04C               0000004C    930+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 00000454 5800 F010               00000010    931+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 00000458 1E02                                932+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n 0000045A 5500 C00C               0000000C    933+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 0000045E 47D0 F060               00000468    934+         BNH   *+10                branch if enough space               02-EDCPRLG\n 00000462 58F0 C074               00000074    935+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 00000466 05EF                                936+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                              937+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000468 58F0 D048               00000048    938+         L     15,72(,13)                                               02-EDCPRLG\n 0000046C 90F0 2048               00000048    939+         STM   15,0,72(2)                                               02-EDCPRLG\n 00000470 9210 2000      00000000             940+         MVI   0(2),X'10'                                               02-EDCPRLG\n 00000474 50D0 2004               00000004    941+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 00000478 18D2                                942+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                              943+***--------------------------------------------------------------------\n                                              944+         DROP  15                                                       02-EDCPRLG\n 0000047A 0590                                945+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 0000047C             946+         USING *,R9                                                     02-EDCPRLG\n                                              947+***--------------------------------------------------------------------\n 0000047C 5870 90CC               00000548    948+         L     R7,=A(LEVEL)       get const darr                        01-\n                     R:7 000007BC             949+         USING LEVEL,R7           base on const                         01-\n 00000480 1821                                950+         LR    R2,R1              save pointer                          01-\n 00000482 58F0 0010               00000010    951+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 35 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 00000486 58F0 F220               00000220    952+         L     R15,X'220'(,R15)     CSR table address                   01-\n 0000048A 58F0 F014               00000014    953+         L     R15,X'14'(,R15)      offset                              01-\n 0000048E 58F0 F008               00000008    954+         L     R15,X'08'(,R15)      IEANTRNT                            01-\n                                              955+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                                 +               MF=(E,CALLLIST)\n 00000492                                     958+         DS    0H                                                       02-CALL\n 00000492 4110 D090               00000090    963+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 00000496 4100 7000               000007BC    964+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 0000049A 5000 1000               00000000    965+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000049E 4100 7008               000007C4    966+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 000004A2 5000 1004               00000004    967+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000004A6 4100 D0B0               000000B0    968+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000004AA 5000 1008               00000008    969+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000004AE 4100 D0C0               000000C0    970+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000004B2 5000 100C               0000000C    971+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000004B6 05EF                                972+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000004B8 A7FE 0004               00000004    973+         CHI   R15,4               check code                           01-\n 000004BC A744 0035               00000526    974+         JL    OK0059              if retrieve ok                       01-\n 000004C0 D70F D080 D080 00000080 00000080    975+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n1         SQLASM SQL IBM interface module                                                                       Page   21\n   Active Usings: LEVEL,R7  DSNTIAR+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                             976+*        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n 000004C6 0700                                981+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 000004C8 4110 D080               00000080    982+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 000004CC 4100 9058               000004D4    983+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 000004D0 47F0 9060               000004DC    984+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 000004D4 E4E2C5D9D9E24040                    985+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 000004DC 5000 1000               00000000    986+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n 000004E0 9620 100A      0000000A             987+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 000004E4 41F0 0009               00000009    988+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000004E8 0A7A                                989+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000004EA 12FF                                990+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000004EC 4770 908E               0000050A    991+         BNZ   NORRS0059        GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                              992+*        load  ep=&LRRS\n 000004F0                                     995+         CNOP  0,4                                                 @L2P 02-LOAD\n 000004F0 4DF0 9080               000004FC    996+         BAS   15,LOAD2_0071      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000004F4                                     997+LD2_0071    DS 0H                                                       02-LOAD\n 000004F4 C4E2D5E3C9C1D940                    998+LE2_0071    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 000004FC                                     999+LOAD2_0071    DS 0H                                                     02-LOAD\n 000004FC 4100 F000               00000000   1000+         LA    0,LE2_0071-LD2_0071(,15)         ADDR OF PARAMETER       02-LOAD\n 00000500 1B11                               1001+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000502 0A08                               1002+         SVC   8                                                        02-LOAD\n 00000504 1850                               1003+         LR    R5,R0               get addr                             01-\n 00000506 A7F4 0013               0000052C   1004+         J     DOC0059                                                  01-\n 0000050A                                    1005+NORRS0059    DS 0H                                                      01-\n                                             1006+*30/03/06 addr in r5\n                                             1007+*        load  ep=&LNAME\n 0000050A 0700                               1010+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000050C 4DF0 909C               00000518   1011+         BAS   15,LOAD2_0073      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000510                                    1012+LD2_0073    DS 0H                                                       02-LOAD\n 00000510 C4E2D5E3C9C1D940                   1013+LE2_0073    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 00000518                                    1014+LOAD2_0073    DS 0H                                                     02-LOAD\n 00000518 4100 F000               00000000   1015+         LA    0,LE2_0073-LD2_0073(,15)         ADDR OF PARAMETER       02-LOAD\n 0000051C 1B11                               1016+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000051E 0A08                               1017+         SVC   8                                                        02-LOAD\n 00000520 1850                               1018+         LR    R5,R0               into r5                              01-\n 00000522 A7F4 0005               0000052C   1019+         J     DOC0059             jump to call                         01-\n 00000526                                    1020+OK0059    DS   0H                                                       01-\n 00000526 58F0 D0B8               000000B8   1021+          L   R15,TOKENDATA+8      get proper addr                      01-\n 0000052A 185F                               1022+          LR  R5,R15               save here                            01-\n 0000052C                                    1023+DOC0059    DS  0H                                                       01-\n 0000052C                                    1024+GOON0059    DS 0H                                                       01-\n 0000052C 1812                               1025+         LR    R1,R2               back pointer                         01-\n 0000052E 18F5                               1026+         LR    R15,R5              back module addr                     01-\n 00000530 0DEF                               1027+         BASR  R14,R15             call it                              01-\n 00000532                                    1028+RET0059    DS  0H                                                       01-\n                                             1029+*        edcepil\n 00000532 58D0 D004               00000004   1031+         L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 00000536 58E0 D00C               0000000C   1032+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 0000053A 982C D01C               0000001C   1033+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 0000053E 051E                               1034+         BALR  1,14               return                                02-EDCEPIL\n 00000540 00000408                           1035+         DC    AL4(DSNTIARE)                                            02-EDCEPIL\n 00000548                                    1036+         LTORG                                                          01-\n 00000548 000007BC                           1037                =A(LEVEL)\n 00000550                00000550 000002C8   1038 SQLASM   CSECT\n                                             1039 SQLASM   AMODE 31\n1         SQLASM SQL IBM interface module                                                                       Page   22\n   Active Usings: LEVEL,R7  DSNTIAR+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                            1040 SQLASM   RMODE ANY\n                                             1041          RSQL\n                                             1042+*        EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                             1044+***--------------------------------------------------------------------\n 00000000                00000000 000000E0   1045+IHB0077DS DSECT                                                         02-EDCPRLG\n 00000000                                    1046+         DS    D                                                        02-EDCPRLG\n 00000008                                    1047+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000   1048+         ORG   IHB0077DS                                                02-EDCPRLG\n 00000000                                    1049+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC   1050+         ORG                                                            02-EDCPRLG\n 000000E0                                    1051+         DS    0D                                                       02-EDCPRLG\n                         000000D8            1052+IHB0077LG EQU   *-IHB0077DS-8                                           02-EDCPRLG\n 00000550                00000550 000002C8   1053+SQLASM   CSECT                                                          02-EDCPRLG\n                                             1054+*--------------------------------------------------------------\n 00000550                                    1055+         DS    0H                                                       02-EDCPRLG\n                     R:F 00000550            1056+         USING *,15                                                     02-EDCPRLG\n ** ASMA303W Multiple address resolutions may result from this USING and the USING on statement number 949\n ** ASMA435I Record 103 in CEE.SCEEMAC(EDCPRLG) on volume: Z1CT12\n 00000550 47F0 F040               00000590   1057+         B     IHB0077B       branch around prologue's constant areas   02-EDCPRLG\n                                             1058+* PPA1 constant area\n 00000554 14                                 1059+         DC    AL1(IHB0077N+4-*)   offset to the name                   02-EDCPRLG\n 00000555 CE                                 1060+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 00000556 A0                                 1061+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n 00000557 10                                 1062+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 00000558 0000056C                           1063+         DC    AL4(IHB0077P) .       A(PPA2)                            02-EDCPRLG\n 0000055C 00000000                           1064+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 00000560 000000D8                           1065+         DC    AL4(IHB0077LG)        total DSA length                   02-EDCPRLG\n 00000564 0006                               1066+IHB0077N DC    AL2(6)      .       length of name                       02-EDCPRLG\n 00000566 E2D8D3C1E2D4                       1067+         DC    C'SQLASM'           untruncated name                     02-EDCPRLG\n                                             1068+*--------------------------------------------------------------\n                                             1069+* PPA2 constant area\n 0000056C                                    1070+IHB0077P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 0000056C 03                                 1071+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 0000056D 00                                 1072+         DC    X'00' .             member subid                         02-EDCPRLG\n 0000056E 33                                 1073+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 0000056F 00                                 1074+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 00000570 00000000                           1075+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 00000574 00000000                           1076+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 00000578 0000057C                           1077+         DC    AL4(IHB0077T) .       A(time stamp) or zero              02-EDCPRLG\n                                             1078+*\n                                             1079+* Time stamp area\n 0000057C                                    1080+IHB0077T DS    0F                                                       02-EDCPRLG\n 0000057C F2F0F1F3                           1081+         DC    CL4'2013'  .        yyyy                            @P1A 02-EDCPRLG\n 00000580 F0F1F0F7                           1082+         DC    CL4'0107'   .       mmdd                                 02-EDCPRLG\n 00000584 F1F0F5F7F0F0                       1083+         DC    CL6'105700'     .   hhmmss                               02-EDCPRLG\n 0000058A F0F1                               1084+         DC    CL2'01' .           version                              02-EDCPRLG\n 0000058C F0F1F0F0                           1085+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                             1086+*\n 00000590                                    1087+IHB0077B DS    0H                                                       02-EDCPRLG\n                                             1088+***--------------------------------------------------------------------\n 00000590 90EC D00C               0000000C   1089+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                             1090+***--------------------------------------------------------------------\n 00000594 5820 D04C               0000004C   1091+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 00000598 5800 F010               00000010   1092+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 0000059C 1E02                               1093+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n1         SQLASM SQL IBM interface module                                                                       Page   23\n   Active Usings: LEVEL,R7  DSNTIAR+X'74',R9  DSA,R13  SQLASM,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n00000059E 5500 C00C               0000000C   1094+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 000005A2 47D0 F05C               000005AC   1095+         BNH   *+10                branch if enough space               02-EDCPRLG\n 000005A6 58F0 C074               00000074   1096+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 000005AA 05EF                               1097+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                             1098+* at this point R0 has the new NAB, R2 has the newly acquired address\n 000005AC 58F0 D048               00000048   1099+         L     15,72(,13)                                               02-EDCPRLG\n 000005B0 90F0 2048               00000048   1100+         STM   15,0,72(2)                                               02-EDCPRLG\n 000005B4 9210 2000      00000000            1101+         MVI   0(2),X'10'                                               02-EDCPRLG\n 000005B8 50D0 2004               00000004   1102+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 000005BC 18D2                               1103+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                             1104+***--------------------------------------------------------------------\n                                             1105+         DROP  15                                                       02-EDCPRLG\n 000005BE 0590                               1106+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 000005C0            1107+         USING *,R9                                                     02-EDCPRLG\n ** ASMA303W Multiple address resolutions may result from this USING and the USING on statement number 949\n ** ASMA435I Record 174 in CEE.SCEEMAC(EDCPRLG) on volume: Z1CT12\n                                             1108+***--------------------------------------------------------------------\n 000005C0 5870 91F8               000007B8   1109+         L     R7,=A(LEVEL)       get const darr                        01-\n 000005C4 58F0 0010               00000010   1110+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 154 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 000005C8 58F0 F220               00000220   1111+         L     R15,X'220'(,R15)    CSR table address                    01-\n 000005CC 58F0 F014               00000014   1112+         L     R15,X'14'(,R15)     offset                               01-\n 000005D0 58F0 F008               00000008   1113+         L     R15,X'08'(,R15)     IEANTRNT                             01-\n                                             1114+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n 000005D4                                    1117+         DS    0H                                                       02-CALL\n 000005D4 4110 D090               00000090   1122+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 000005D8 4100 7000               000007BC   1123+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 000005DC 5000 1000               00000000   1124+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005E0 4100 7008               000007C4   1125+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 000005E4 5000 1004               00000004   1126+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005E8 4100 D0B0               000000B0   1127+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000005EC 5000 1008               00000008   1128+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005F0 4100 D0C0               000000C0   1129+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000005F4 5000 100C               0000000C   1130+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005F8 05EF                               1131+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000005FA A7FE 0004               00000004   1132+         CHI   R15,4               check code                           01-\n 000005FE A784 0055               000006A8   1133+         JE    LOAD                if new token                         01-\n                                             1134+*        JL    DELETE              if already exits, delete\n 00000602 A724 00F3               000007E8   1135+         JH    ERRTKN              name/token err                       01-\n                                             1136+* already exists, check if rrs was\n 00000606 1BFF                               1137+         SR    R15,R15             no rrs                               01-\n 00000608 D603 D0BC D0BC 000000BC 000000BC   1138+         OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS                01-\n 0000060E A784 00FA               00000802   1139+         JZ    RETRN               no rrs                               01-\n 00000612 41F0 0004               00000004   1140+         LA    R15,4               indicate rrs                         01-\n 00000616 A7F4 00F6               00000802   1141+         J     RETRN               if already exits, o.k.               01-\n 0000061A D603 D0BC D0BC 000000BC 000000BC   1142+DELETE   OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS                01-\n 00000620 4780 9092               00000652   1143+         BZ    DNORRS              DELETE NORRS                         01-\n                                             1144+*        delete ep=userrs          delete userrs\n 00000624 4500 9070               00000630   1146+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000628 E4E2C5D9D9E24040                   1147+         DC    CL8'USERRS'                       EP SYMBOL              02-DELETE\n 00000630 0A09                               1148+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n                                             1149+*        delete ep=dsnhlir         delete dsnhlir\n 00000632 4500 907E               0000063E   1151+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000636 C4E2D5C8D3C9D940                   1152+         DC    CL8'DSNHLIR'                      EP SYMBOL              02-DELETE\n1         SQLASM SQL IBM interface module                                                                       Page   24\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n00000063E 0A09                               1153+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n                                             1154+*        delete ep=dsnrli          delete dsnrli\n 00000640 4500 908C               0000064C   1156+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000644 C4E2D5D9D3C94040                   1157+         DC    CL8'DSNRLI'                       EP SYMBOL              02-DELETE\n 0000064C 0A09                               1158+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 0000064E 47F0 90AE               0000066E   1159+         B     DCLEAR                                                   01-\n 00000652                                    1160+DNORRS   DS    0H                                                       01-\n                                             1161+*        delete ep=dsnhli2\n 00000652 4500 909E               0000065E   1163+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000656 C4E2D5C8D3C9F240                   1164+         DC    CL8'DSNHLI2'                      EP SYMBOL              02-DELETE\n 0000065E 0A09                               1165+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n                                             1166+*        delete ep=dsnali\n 00000660 4500 90AC               0000066C   1168+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000664 C4E2D5C1D3C94040                   1169+         DC    CL8'DSNALI'                       EP SYMBOL              02-DELETE\n 0000066C 0A09                               1170+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 0000066E                                    1171+DCLEAR   DS    0H                  clear addresses                      01-\n 0000066E 58F0 0010               00000010   1172+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 185 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 00000672 58F0 F220               00000220   1173+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000676 58F0 F014               00000014   1174+         L     R15,X'14'(,R15)       offset                             01-\n 0000067A 58F0 F00C               0000000C   1175+         L     R15,X'0C'(,R15)       IEANTDL delete token               01-\n                                             1176+*        CALL  (15),(LEVEL,tokenname,RETCODE),MF=(E,CALLLIST)\n 0000067E                                    1179+         DS    0H                                                       02-CALL\n 0000067E 4110 D090               00000090   1184+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 00000682 4100 7000               000007BC   1185+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000686 5000 1000               00000000   1186+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000068A 4100 7008               000007C4   1187+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000068E 5000 1004               00000004   1188+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000692 4100 D0C0               000000C0   1189+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 00000696 5000 1008               00000008   1190+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000069A 05EF                               1191+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 0000069C A7FE 0004               00000004   1192+         CHI   R15,4               check code                           01-\n 000006A0 4720 702C               000007E8   1193+         BH    ERRTKN              name/token error                     01-\n 000006A4 47F0 7046               00000802   1194+         B     RETRN                                                    01-\n 000006A8                                    1195+LOAD     DS    0H                                                       01-\n                                             1196+*        LOAD  EP=DSNTIAR          get addr\n 000006A8                                    1199+         CNOP  0,4                                                 @L2P 02-LOAD\n 000006A8 4DF0 90F4               000006B4   1200+         BAS   15,LOAD2_0095      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000006AC                                    1201+LD2_0095    DS 0H                                                       02-LOAD\n 000006AC C4E2D5E3C9C1D940                   1202+LE2_0095    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 000006B4                                    1203+LOAD2_0095    DS 0H                                                     02-LOAD\n 000006B4 4100 F000               00000000   1204+         LA    0,LE2_0095-LD2_0095(,15)         ADDR OF PARAMETER       02-LOAD\n 000006B8 1B11                               1205+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000006BA 0A08                               1206+         SVC   8                                                        02-LOAD\n 000006BC 5000 D0B8               000000B8   1207+         ST    R0,TOKENDATA+8      save addr                            01-\n 000006C0 9201 D0BC      000000BC            1208+         MVI   TOKENDATA+12,1      assume RRS                           01-\n 000006C4 D70F D080 D080 00000080 00000080   1209+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n                                             1210+*        load  ep=userrs,erret=norrs,sf=(e,loadlist)\n 000006CA 0700                               1215+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 000006CC 4110 D080               00000080   1216+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 000006D0 4100 9118               000006D8   1217+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 000006D4 47F0 9120               000006E0   1218+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 000006D8 E4E2C5D9D9E24040                   1219+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 000006E0 5000 1000               00000000   1220+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n1         SQLASM SQL IBM interface module                                                                       Page   25\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0000006E4 9620 100A      0000000A            1221+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 000006E8 41F0 0009               00000009   1222+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000006EC 0A7A                               1223+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000006EE 12FF                               1224+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000006F0 4770 916C               0000072C   1225+         BNZ   NORRS            GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                             1226+*        load  ep=dsnrli\n 000006F4                                    1229+         CNOP  0,4                                                 @L2P 02-LOAD\n 000006F4 4DF0 9140               00000700   1230+         BAS   15,LOAD2_0101      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000006F8                                    1231+LD2_0101    DS 0H                                                       02-LOAD\n 000006F8 C4E2D5D9D3C94040                   1232+LE2_0101    DC CL8'DSNRLI'        ENTRY POINT NAME                      02-LOAD\n 00000700                                    1233+LOAD2_0101    DS 0H                                                     02-LOAD\n 00000700 4100 F000               00000000   1234+         LA    0,LE2_0101-LD2_0101(,15)         ADDR OF PARAMETER       02-LOAD\n 00000704 1B11                               1235+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000706 0A08                               1236+         SVC   8                                                        02-LOAD\n 00000708 5000 D0B0               000000B0   1237+         ST    R0,TOKENDATA        save addr                            01-\n 0000070C                                    1240+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000070C 4DF0 9158               00000718   1241+         BAS   15,LOAD2_0103      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000710                                    1242+LD2_0103    DS 0H                                                       02-LOAD\n 00000710 C4E2D5C8D3C9D940                   1243+LE2_0103    DC CL8'DSNHLIR'       ENTRY POINT NAME                      02-LOAD\n 00000718                                    1244+LOAD2_0103    DS 0H                                                     02-LOAD\n 00000718 4100 F000               00000000   1245+         LA    0,LE2_0103-LD2_0103(,15)         ADDR OF PARAMETER       02-LOAD\n 0000071C 1B11                               1246+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000071E 0A08                               1247+         SVC   8                                                        02-LOAD\n 00000720 5000 D0B4               000000B4   1248+         ST    R0,TOKENDATA+4      save addr                            01-\n 00000724 41F0 0004               00000004   1249+         LA    R15,4               indicate rrs                         01-\n 00000728 47F0 91A6               00000766   1250+         B     CTOKEN              branch to create token               01-\n 0000072C D703 D0BC D0BC 000000BC 000000BC   1251+NORRS    XC    TOKENDATA+12(4),TOKENDATA+12 use CAF                     01-\n 00000732 0700                               1254+         CNOP  0,4                                                 @L2P 02-LOAD\n 00000734 4DF0 9180               00000740   1255+         BAS   15,LOAD2_0105      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000738                                    1256+LD2_0105    DS 0H                                                       02-LOAD\n 00000738 C4E2D5C1D3C94040                   1257+LE2_0105    DC CL8'DSNALI'        ENTRY POINT NAME                      02-LOAD\n 00000740                                    1258+LOAD2_0105    DS 0H                                                     02-LOAD\n 00000740 4100 F000               00000000   1259+         LA    0,LE2_0105-LD2_0105(,15)         ADDR OF PARAMETER       02-LOAD\n 00000744 1B11                               1260+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000746 0A08                               1261+         SVC   8                                                        02-LOAD\n 00000748 5000 D0B0               000000B0   1262+         ST    R0,TOKENDATA        save addr                            01-\n                                             1263+*        LOAD  EP=DSNHLI2          get addr\n 0000074C                                    1266+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000074C 4DF0 9198               00000758   1267+         BAS   15,LOAD2_0107      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000750                                    1268+LD2_0107    DS 0H                                                       02-LOAD\n 00000750 C4E2D5C8D3C9F240                   1269+LE2_0107    DC CL8'DSNHLI2'       ENTRY POINT NAME                      02-LOAD\n 00000758                                    1270+LOAD2_0107    DS 0H                                                     02-LOAD\n 00000758 4100 F000               00000000   1271+         LA    0,LE2_0107-LD2_0107(,15)         ADDR OF PARAMETER       02-LOAD\n 0000075C 1B11                               1272+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000075E 0A08                               1273+         SVC   8                                                        02-LOAD\n 00000760 5000 D0B4               000000B4   1274+         ST    R0,TOKENDATA+4      save addr                            01-\n 00000764 1BFF                               1275+         SR    R15,R15             no RRS                               01-\n 00000766 185F                               1276+CTOKEN   LR    R5,R15              save rc                              01-\n 00000768 58F0 0010               00000010   1277+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 217 in ESA.PRJ.CBTEXP.ASM(SSQLASM) on volume: USERL1\n 0000076C 58F0 F220               00000220   1278+         L     R15,X'220'(,R15)    CSR table address                    01-\n 00000770 58F0 F014               00000014   1279+         L     R15,X'14'(,R15)     offset                               01-\n 00000774 58F0 F004               00000004   1280+         L     R15,X'04'(,R15)     IEANTCR                              01-\n                                             1281+*        CALL  (15),(LEVEL,tokenname,tokendata,nopersist,RETCODE),     X\n1         SQLASM SQL IBM interface module                                                                       Page   26\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                                +               MF=(E,CALLLIST)\n 00000778                                    1284+         DS    0H                                                       02-CALL\n 00000778 4110 D090               00000090   1289+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000077C 4100 7000               000007BC   1290+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000780 5000 1000               00000000   1291+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000784 4100 7008               000007C4   1292+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000788 5000 1004               00000004   1293+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000078C 4100 D0B0               000000B0   1294+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000790 5000 1008               00000008   1295+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000794 4100 7004               000007C0   1296+         LA    0,NOPERSIST        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000798 5000 100C               0000000C   1297+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000079C 4100 D0C0               000000C0   1298+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000007A0 5000 1010               00000010   1299+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000007A4 05EF                               1300+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000007A6 12FF                               1301+         LTR   R15,R15             check code                           01-\n 000007A8 A774 0020               000007E8   1302+         JNZ   ERRTKN              name token error                     01-\n 000007AC 18F5                               1303+         LR    R15,R5              back rc                              01-\n 000007AE A7F4 002A               00000802   1304+         J     RETRN               jump out                             01-\n 000007B8                                    1305+         LTORG                                                          01-\n 000007B8 000007BC                           1306                =A(LEVEL)\n 000007BC 00000001                           1307+LEVEL    DC    A(IEANT_TASK_LEVEL)      Task level                      01-\n                                             1308+*LEVEL    DC    A(IEANT_HOME_LEVEL)     Home level\n 000007C0 00000000                           1309+NOPERSIST DC   A(IEANT_NOPERSIST)      nopersist option                 01-\n 000007C4 C9E2C9E26DC4C2F2                   1310+TOKENNAME DC   CL16'ISIS_DB2CAF_TOKEN' Token name                       01-\n 000007D4 00000001                           1311+CONN_LEVEL DC  A(IEANT_TASK_LEVEL)      task level                      01-\n 000007D8 C9E2C9E26DC4C2C3                   1312+CONN_TOKENNAME DC   CL16'ISIS_DBCONN_TOKEN' Token name                  01-\n 000007E8 185F                               1313+ERRTKN   LR    R5,R15              get code                             01-\n                                             1314+*        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n 000007EA                                    1317+         DS    0H                                                       02-ABEND\n 000007EA 1815                               1320+         LR    1,R5                              LOAD PARAMETER REG 1   03-IHBINNRR\n 000007EC 8910 0014               00000014   1321+         SLL   1,20(0)            SHIFT OFF HIGH ORDER 20 BITS @G860P1F 02-ABEND\n 000007F0 8810 0008               00000008   1322+         SRL   1,8(0)             CODE IN SYSTEM POSITION               02-ABEND\n 000007F4 18F3                               1323+         LR    15,R3              LOAD REG15 WITH REASON CODE  @G860P1F 02-ABEND\n 000007F6 4100 0084               00000084   1324+         LA    0,132(0,0)         DUMP/STEP/DUMPOPTS/REASON    @G860P1F 02-ABEND\n 000007FA 8900 0018               00000018   1325+         SLL   0,24(0)            SHIFT TO HIGH ORDER                   02-ABEND\n 000007FE 1610                               1326+         OR    1,0                OR IN WITH COMPCODE                   02-ABEND\n 00000800 0A0D                               1327+         SVC   13                 LINK TO ABEND ROUTINE                 02-ABEND\n0                                            1329+*--------------------------------------------------------------------*\n                                             1330+* RETURN point                                                       *\n                                             1331+*--------------------------------------------------------------------*\n 00000802                                    1332+RETRN    DS    0H                                                       01-\n                                             1333+*exit    edcepil\n 00000802 58D0 D004               00000004   1335+EXIT     L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 00000806 58E0 D00C               0000000C   1336+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 0000080A 982C D01C               0000001C   1337+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 0000080E 051E                               1338+         BALR  1,14               return                                02-EDCEPIL\n 00000810 00000550                           1339+         DC    AL4(SQLASM)                                              02-EDCEPIL\n 00000818                                    1340          LTORG\n                                             1341 DSA      CEEDSA SECTYPE=OS         DSA\n                                             1342+*\n                                             1343+**********************************************************************\n                                             1344+*   D Y N A M I C   S T O R A G E   A R E A    ( D S A )             *\n                                             1345+**********************************************************************\n                                             1346+*\n1         SQLASM SQL IBM interface module                                                                       Page   27\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n0                                            1347+*\n 00000000                00000000 000000D4   1348+DSA      DSECT 0D         SECTYPE=OS, &LABEL is Provided                01-CEEDSA\n 00000000                                    1349+CEEDSA   DS    0D         Just keep the same label for formulae         01-CEEDSA\n                                             1350+*\n 00000000                                    1351+CEEDSAFLAGS DS XL2                  DSA flags                           01-CEEDSA\n                         00001000            1352+CEEDSALNGC EQU X'1000'                C library DSA                     01-CEEDSA\n                         00000800            1353+CEEDSALNGP EQU X'0800'                PL/I library DSA                  01-CEEDSA\n                         00000008            1354+CEEDSAEXIT EQU X'0008'                An Exit DSA                       01-CEEDSA\n 00000002                                    1355+CEEDSAMEMD DS  XL2                  Member defined                      01-CEEDSA\n 00000004                                    1356+CEEDSABKC DS   A                    Addr of DSA of caller               01-CEEDSA\n 00000008                                    1357+CEEDSAFWC DS   A                    Addr of DSA of last called rtn      01-CEEDSA\n 0000000C                                    1358+CEEDSAR14 DS   F                    Save area for register 14           01-CEEDSA\n 00000010                                    1359+CEEDSAR15 DS   F                    Save area for register 15           01-CEEDSA\n 00000014                                    1360+CEEDSAR0 DS    F                    Save area for register 0            01-CEEDSA\n 00000018                                    1361+CEEDSAR1 DS    F                    Save area for register 1            01-CEEDSA\n 0000001C                                    1362+CEEDSAR2 DS    F                    Save area for register 2            01-CEEDSA\n 00000020                                    1363+CEEDSAR3 DS    F                    Save area for register 3            01-CEEDSA\n 00000024                                    1364+CEEDSAR4 DS    F                    Save area for register 4            01-CEEDSA\n 00000028                                    1365+CEEDSAR5 DS    F                    Save area for register 5            01-CEEDSA\n 0000002C                                    1366+CEEDSAR6 DS    F                    Save area for register 6            01-CEEDSA\n 00000030                                    1367+CEEDSAR7 DS    F                    Save area for register 7            01-CEEDSA\n 00000034                                    1368+CEEDSAR8 DS    F                    Save area for register 8            01-CEEDSA\n 00000038                                    1369+CEEDSAR9 DS    F                    Save area for register 9            01-CEEDSA\n 0000003C                                    1370+CEEDSAR10 DS   F                    Save area for register 10           01-CEEDSA\n 00000040                                    1371+CEEDSAR11 DS   F                    Save area for register 11           01-CEEDSA\n 00000044                                    1372+CEEDSAR12 DS   F                    Save area for register 12           01-CEEDSA\n 00000048                                    1373+CEEDSALWS DS   A                    Addr of PL/I Language Working Space 01-CEEDSA\n 0000004C                                    1374+CEEDSANAB DS   A                    Addr of next available byte         01-CEEDSA\n 00000050                                    1375+CEEDSAPNAB DS  A                    Addr of end-of-prolog NAB           01-CEEDSA\n 00000054                                    1376+           DS  4F                                                       01-CEEDSA\n 00000064                                    1377+CEEDSATRAN DS  0A                   HPL TxArea or                       01-CEEDSA\n 00000064                                    1378+CEEDSARENT DS  A                    Program reentry address-IPAT        01-CEEDSA\n 00000068                                    1379+CEEDSACILC DS  A                    C to Fortran ILC save area          01-CEEDSA\n 0000006C                                    1380+CEEDSAMODE DS  A                    Return address of module that       01-CEEDSA\n                                             1381+*                                   caused the last mode switch\n 00000070                                    1382+           DS  2F                                                       01-CEEDSA\n 00000078                                    1383+CEEDSARMR  DS  A                    Addr of language specific           01-CEEDSA\n                                             1384+*                                   exception handler\n                                             1385+*\n 0000007C                                    1386+           DS  F                    Reserved                            01-CEEDSA\n 00000080                                    1387+CEEDSAAUTO DS  0D                   Automatic storage starts here       01-CEEDSA\n 00000080                                    1388+CEEDSAEND  DS  0D                   End of DSA                          01-CEEDSA\n                         00000080            1389+CEEDSASZ EQU   CEEDSAEND-CEEDSA     Size of DSA                         01-CEEDSA\n                         00000000            1390+CEEDSA_STDCEEDSA  EQU   X'0000'     flag values of standard CEE DSA     01-CEEDSA\n                                             1391+*\n                                             1392+*\n                                             1393+*\n 00000080                00000000 000000D4   1394+DSA      DSECT  ,              &LABEL is Provided                       01-CEEDSA\n                                             1395 *oadlist load sf=l                 load list form\n                                             1396 LOADLIST LOAD SF=L                 load list form\n 00000080                                    1400+         CNOP  0,4                                            @G381P2A  02-IHBINNRX\n 00000080 00000000                           1401+LOADLIST DC    A(0)               ADDRESS OF EP OR DE PARAMETER         02-IHBINNRX\n 00000084 00000000                           1402+         DC    AL4(0)             DCB ADDRESS PARAMETER       @G381P2A  02-IHBINNRX\n 00000088 00                                 1403+         DC    AL1(0)             PARAMETER LIST FORMAT NUMBER          02-IHBINNRX\n 00000089 00                                 1404+         DC    AL1(0)             RESERVED                    @G381P2A  02-IHBINNRX\n1         SQLASM SQL IBM interface module                                                                       Page   28\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2013/01/07 10.57\n00000008A 00                                 1405+         DC    B'00000000'                                   OPTIONS    02-IHBINNRX\n 0000008B 00                                 1406+         DC    B'00000000'                         OPTIONS        @L2C  02-IHBINNRX\n 0000008C 00000000                           1407+         DC    A(0)               EXPLICIT LOAD, LOADPT, EXTINFO  @L1C  02-IHBINNRX\n                         00000010            1408 LOADLISTL EQU *-LOADLIST           list length\n 00000090 0000000000000000                   1409 CALLLIST  DC   8A(0)               call list form\n                         00000020            1410 CALLLISTL EQU  *-CALLLIST          cal list length\n 000000B0 0000000000000000                   1411 TOKENDATA DC   4A(0)               token data\n 000000C0 00000000                           1412 RETCODE  DC    A(0)                    Return code\n 000000C4 4040404040404040                   1413 CALLCODE DC    CL16' '             save callcode here\n                         000000D4            1414 DSALEN   EQU   *-DSA               DSECT length\n                                             1415          END\n1                                                 Relocation Dictionary                                         Page   29\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2013/01/07 10.57\n0  00000008 00000008 00000008   A 4     +\n   00000008 00000008 0000002C   A 4     +\n   00000008 00000008 000001BA   A 4     +\n   00000008 0000000A 00000024   A 4     +\n   00000008 00000018 00000298   A 4     +\n   0000000E 0000000A 000002E4   A 4     +\n   0000000E 0000000E 000002C8   A 4     +\n   0000000E 0000000E 000002EC   A 4     +\n   0000000E 0000000E 000003F8   A 4     +\n   0000000E 00000018 00000400   A 4     +\n   00000013 0000000A 0000042C   A 4     +\n   00000013 00000013 00000410   A 4     +\n   00000013 00000013 00000434   A 4     +\n   00000013 00000013 00000540   A 4     +\n   00000013 00000018 00000548   A 4     +\n   00000018 0000000A 00000570   A 4     +\n   00000018 00000018 00000558   A 4     +\n   00000018 00000018 00000578   A 4     +\n   00000018 00000018 000007B8   A 4     +\n   00000018 00000018 00000810   A 4     +\n1                                          Macro and Copy Code Source Summary                                   Page   30\n- Con Source                                        Volume    Members                        HLASM R6.0  2013/01/07 10.57\n0     PRIMARY INPUT                                           RSQL     STUB\n   L1 ESA.PRJ.CBTEXP.ASM                            USERL1    CREGS\n   L2 SYS1.MACLIB                                   Z1CT12    ABEND    CALL     DELETE   IEANTASM IHBINNRR IHBINNRX\n                                                              IHBOPLTX LOAD     SYSSTATE\n   L4 CEE.SCEEMAC                                   Z1CT12    CEEDSA   EDCEPIL  EDCPRLG\n1                                                Dsect Cross Reference                                          Page   31\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2013/01/07 10.57\n0DSA      00000080  FFFFFFFB    1348\n IHB0004DS\n          000000E0  FFFFFFFF     426\n IHB0043DS\n          000000E0  FFFFFFFE     723\n IHB0060DS\n          000000E0  FFFFFFFD     884\n IHB0077DS\n          000000E0  FFFFFFFC    1045\n1                                                      Using Map                                                Page   32\n-                                                                                            HLASM R6.0  2013/01/07 10.57\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0    22  00000000  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFB  13 000C4   1298 DSA,R13\n    437  00000000  00000008 USING  ORDINARY    00000000 00001000 00000008  15 00060    478 *,15\n    488  00000072  00000008 DROP                                           15              15\n    490  00000074  00000008 USING  ORDINARY    00000074 00001000 00000008   9 00244    608 *,R9\n    493  00000078  00000008 USING  ORDINARY    000007BC 00001000 00000018   7 0001C    686 LEVEL,R7\n    734  000002C0  0000000E USING  ORDINARY    000002C0 00001000 0000000E  15 00060    773 *,15\n    783  00000332  0000000E DROP                                           15              15\n    785  00000334  0000000E USING  ORDINARY    00000334 00001000 0000000E   9 000CC    850 *,R9\n    788  00000338  0000000E USING  ORDINARY    000007BC 00001000 00000018   7 00008    805 LEVEL,R7\n    895  00000408  00000013 USING  ORDINARY    00000408 00001000 00000013  15 00060    934 *,15\n    944  0000047A  00000013 DROP                                           15              15\n    946  0000047C  00000013 USING  ORDINARY    0000047C 00001000 00000013   9 000CC   1011 *,R9\n    949  00000480  00000013 USING  ORDINARY    000007BC 00001000 00000018   7 00046   1296 LEVEL,R7\n   1056  00000550  00000018 USING  ORDINARY    00000550 00001000 00000018  15 0005C   1095 *,15\n   1105  000005BE  00000018 DROP                                           15              15\n   1107  000005C0  00000018 USING  ORDINARY    000005C0 00001000 00000018   9 001F8   1267 *,R9\n1                                   General Purpose Register Cross Reference                                    Page   33\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2013/01/07 10.57\n0    0(0)     472   475M  476M  477   483   508M  509   510M  511   512M  513   514M  515   527M  530   544M  547   559M  562   620\n              634M  635   636M  637   638M  639   640M  641   644   658M  659   660M  661   662M  663   666   680M  681   682M  683\n              684M  685   686M  687   688M  689   703M  704M  705   767   770M  771M  772   778   803M  804   805M  806   807M  808\n              809M  810   822M  825   839M  842   854M  857   928   931M  932M  933   939   964M  965   966M  967   968M  969   970M\n              971   983M  986  1000M 1003  1015M 1018  1089  1092M 1093M 1094  1100  1123M 1124  1125M 1126  1127M 1128  1129M 1130\n             1146M 1151M 1156M 1163M 1168M 1185M 1186  1187M 1188  1189M 1190  1204M 1207  1217M 1220  1234M 1237  1245M 1248  1259M\n             1262  1271M 1274  1290M 1291  1292M 1293  1294M 1295  1296M 1297  1298M 1299  1324M 1325M 1326\n     1(1)     472   494   507M  509   511   513   515   526M  530   531   545M  545   560M  560   580M  599M  618M  620   633M  635\n              637   639   641   644   657M  659   661   663   666   679M  681   683   685   687   689   699M  700M  701M  705M  767\n              789   802M  804   806   808   810   821M  825   826   840M  840   855M  855   864M  873M  928   950   963M  965   967\n              969   971   982M  986   987  1001M 1001  1016M 1016  1025M 1034M 1089  1122M 1124  1126  1128  1130  1184M 1186  1188\n             1190  1205M 1205  1216M 1220  1221  1235M 1235  1246M 1246  1260M 1260  1272M 1272  1289M 1291  1293  1295  1297  1299\n             1320M 1321M 1322M 1326M 1338M\n     2(2)     472   474M  476   483   484   485   486   494M  568   580   599   617M  620   643M  644   665M  666   691M  767   769M\n              771   778   779   780   781   789M  864   872M  928   930M  932   939   940   941   942   950M 1025  1033M 1089  1091M\n             1093  1100  1101  1102  1103  1337M\n     3(3)     472   568M  570   571   573   617M  620   643M  644   665M  666   691M  702   767   872M  928  1033M 1089  1323  1337M\n     4(4)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n     5(5)     472   547M  562M  566M  581   600   602M  611   617M  620   643M  644   665M  666   691M  692M  699   767   842M  857M\n              861M  865   872M  928  1003M 1018M 1022M 1026  1033M 1089  1276M 1303  1313M 1320  1337M\n     6(6)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n     7(7)     472   492M  493U  617M  620   643M  644   665M  666   691M  767   787M  788U  872M  928   948M  949U 1033M 1089  1109M\n             1337M\n     8(8)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n     9(9)     472   489M  490U  617M  620   643M  644   665M  666   691M  767   784M  785U  872M  928   945M  946U 1033M 1089  1106M\n             1107U 1337M\n    10(A)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n    11(B)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n    12(C)     472   477   479   617M  620   643M  644   665M  666   691M  767   772   774   872M  928   933   935  1033M 1089  1094\n             1096  1337M\n    13(D)      22U  472   474   482   485   486M  615M  615   616   617   620   643M  644   665M  666   691M  767   769   777   780\n              781M  870M  870   871   872   928   930   938   941   942M 1031M 1031  1032  1033  1089  1091  1099  1102  1103M 1335M\n             1335  1336  1337\n    14(E)     472   480M  516M  576M  582M  586M  601M  608M  616M  618B  620   620   642M  643M  644   644   664M  665M  666   666\n              690M  691M  767   775M  811M  866M  871M  873B  928   936M  972M 1027M 1032M 1034B 1089  1097M 1131M 1191M 1300M 1336M\n             1338B\n    15(F)     437U  472   475   479M  480B  482M  483   488D  495M  496M  496   497M  497   498M  498   516B  517   532M  534M  534\n              540M  544   555M  559   565M  566   577M  577   581M  582B  583M  583   587M  587   591M  594M  596M  600M  601B  602\n              609   611M  620   621M  622M  622   623M  623   624M  624   642B  644   645M  646M  646   647M  647   648M  648   664B\n              666   667M  668M  668   669M  669   670M  670   690B  692   702M  734U  767   770   774M  775B  777M  778   783D  790M\n              791M  791   792M  792   793M  793   811B  812   827M  829M  829   835M  839   850M  854   860M  861   865M  866B  895U\n              928   931   935M  936B  938M  939   944D  951M  952M  952   953M  953   954M  954   972B  973   988M  990M  990   996M\n             1000  1011M 1015  1021M 1022  1026M 1027B 1056U 1089  1092  1096M 1097B 1099M 1100  1105D 1110M 1111M 1111  1112M 1112\n             1113M 1113  1131B 1132  1137M 1137  1140M 1172M 1173M 1173  1174M 1174  1175M 1175  1191B 1192  1200M 1204  1222M 1224M\n             1224  1230M 1234  1241M 1245  1249M 1255M 1259  1267M 1271  1275M 1275  1276  1277M 1278M 1278  1279M 1279  1280M 1280\n             1300B 1301M 1301  1303M 1313  1323M\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   34\n-                                                                                            HLASM R6.0  2013/01/07 10.57\n0Statements Flagged\n0    495(P1,35), 621(P1,115), 645(P1,125), 667(P1,133), 790(P1,35), 951(P1,35), 1056(L4:EDCPRLG,103),\n     1107(L4:EDCPRLG,174), 1110(P1,154), 1172(P1,185), 1277(P1,217)\n\n      11 Statements Flagged in this Assembly        4 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK62835\n0SYSTEM: z/OS 01.12.00              JOBNAME: COMPALL     STEPNAME: SSQLASM    PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTEXP.ASM                           USERL1  SSQLASM\n   L1 SYSLIB   ESA.PRJ.CBTEXP.ASM                           USERL1\n   L2          SYS1.MACLIB                                  Z1CT12\n   L3          SYS1.MODGEN                                  Z1CT12\n   L4          CEE.SCEEMAC                                  Z1CT12\n   L5          ASM.AASMMAC2                                 Z1CDL1\n   L6          ASM.AASMMAC1                                 Z1CDL1\n   L7          TCPIP.SEZACMAC                               Z1CT12\n   L8          TCPIP.SEZANMAC                               Z1CT12\n      SYSADATA ESA.PRJ.CBTEXP.ADATA                         USERL2  SSQLASM\n      SYSLIN   ESA.PRJ.CBTEXP.OBJECT                        USER09  SSQLASM\n      SYSPRINT ESA.PRJ.CBTEXP.COMPLIST                      USER0D  SSQLASM\n      SYSTERM  RACF.COMPALL.JOB09204.D0000103.?\n\n  908448K allocated to Buffer Pool       Storage required     532K\n     305 Primary Input Records Read         2807 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read               1629 Primary Print Records Written         0 Work File Writes\n      69 Object Records Written             2666 ADATA Records Written\n0Assembly Start Time: 10.57.51 Stop Time: 10.57.52 Processor Time: 00.00.00.0317\n Return Code 004\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STRSERV": {"ttr": 877, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(STRSERV)'                      07.01.13 11:00:48\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH\n                                  :DLL(NOCALLBACKANY)              ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH\n                                  :NOEXPMAC        NOEXPORTALL     NOFASTTEMPINC   FLAG(I)         GOFF            GONUMBER\n                                  :HALT(16)        NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32\n                                  :NOINITAUTO      NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP\n                                  :NOMARGINS       MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)\n                                  :OBJECT          OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)\n                                  :PLIST(HOST)     NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT\n                                  :ROSTRING        ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS\n                                  :SOURCE          SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              NOTEMPLATEREGISTRY\n                                  :TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)      TMPLPARSE(NO)   TUNE(7)\n                                  :UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64        NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :CSECT()\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1,\n                                   MU_STANDALONE=1,SAPI_NO=1,VSAM_NO=1)\n                                  :FLOAT(HEX,FOLD,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__)\n                                  :NOKEYWORD(char16_t,char32_t,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NODBCS,NODECLTYPE,NODELEGATINGCTORS,DEPENDENTBASELOOKUP,\n                                   NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,EXTERNTEMPLATE,ILLPTOM,\n                                   IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,NOOLDDIGRAPH,OLDFRIEND,\n                                   NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,TRAILENUM,TYPEDEFCLASS,\n                                   NOUCS,VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :XPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(NOSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410C0000\n                                  : __LIBREL__=0x410C0000\n                                  : __TARGET_LIB__=0x410C0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(STRSERV)'                      07.01.13 11:00:48\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #pragma runopts(POSIX(ON),XPLINK(ON))\n             2 |\n             3 | #define ISIS_ALLOW_OS_FUNCTIONS 1\n             4 | #define _XOPEN_SOURCE_EXTENDED 1\n             5 | #define  _OPEN_SYS             1\n             6 | #define  _OPEN_THREADS         1\n             7 | #define _XOPEN_SOURCE 500\n             8 | #define _LARGE_FILES 1\n             9 | #ifndef _SHR_ENVIRON\n            10 | #define _SHR_ENVIRON 1\n            11 | #endif\n            12 | #define _SHARE_EXT_VARS 1\n            13 | #define  environ  (*(__Envn()))\n            14 |\n            15 | #include \"isisdef.h\"\n            16 | #include \"versinfo.h\"\n            17 | #include \"osmfind.hpp\"\n            18 |\n            19 | #include <signal.h>\n            20 | #include <dll.h>\n            21 | #include <limits.h>\n            22 | #include <unistd.h>\n            23 | #include <stdlib.h>\n            24 | #include <pwd.h>\n            25 | #include <assert.h>\n            26 | #include <ctype.h>\n            27 | #include <string.h>\n            28 | #include <strings.h>\n            29 | #include <dirent.h>\n            30 | #include <fcntl.h>\n            31 | #include <sys/types.h>\n            32 | #include <sys/stat.h>\n            33 | #include <sys/wait.h>\n            34 | #include <errno.h>\n            35 | #include <stdarg.h>\n            36 | #include <stdlib.h>\n            37 | #include <stdio.h>\n            38 | #include <assert.h>\n            39 | #include <ctype.h>\n            40 | #include <fcntl.h>\n            41 | #include <stdlib.h>\n            42 | #include <string.h>\n            43 | #include <sys/socket.h>\n            44 | #include <sys/time.h>\n            45 | #include <arpa/inet.h>\n            46 | #include <netdb.h>\n            47 | #include <fcntl.h>\n            48 | #include <errno.h>\n            49 | #include <netinet/in.h>\n            50 | #include <errno.h>\n            51 |\n            52 | int _edc_add_errno2   = setenv(\"_EDC_ADD_ERRNO2\",\"1\",1);  //szm20040129 byteseek set\n            53 |\n            54 | #include \"misc.hpp\"\n            55 | #include \"osmfind.hpp\"\n            56 | #include \"jesi.hpp\"\n            57 | #include \"caljesi.hpp\"\n            58 | #include \"mchain.hpp\"\n            59 | #include \"casmif.hpp\"\n            60 | #include \"msgmgr.hpp\"\n            61 | #include \"jobenv.hpp\"\n            62 | #include \"rexxvar.hpp\"\n            63 | #include \"strserv.hpp\"\n            64 | #include \"misc.hpp\"\n            65 | #include \"caljesi.hpp\"\n            66 | #include \"jesi.hpp\"\n            67 | #include \"mchain.hpp\"\n            68 | #include \"casmif.hpp\"\n            69 | #include \"msgmgr.hpp\"\n            70 | #include \"jobenv.hpp\"\n            71 | #include \"mvsbase.hpp\"\n            72 | #include \"msgmgr.hpp\"\n            73 | #include \"strnode.hpp\"\n            74 | #include \"mvsstr.hpp\"\n            75 |\n            76 | int _dump(char * ,char * ,int );\n            77 |\n            78 | timeval    tcpipClient::timeout\t\t= \u00e4300,0\u00fc;\n            79 | int        tcpipClient::connwait\t= 5;\n            80 | char       tcpipClient::URL\u00c4255\u00dc  = \"\";\n            81 | bool       CmdService::debug = false;\n            82 |\n            83 | #ifndef ERROR_CODE\n            84 | #define ERROR_CODE -1\n            85 | #endif\n            86 |\n            87 | static const char * REXXCMD     =  \"STRREXX\" ;\n            88 | static const char * CALLBACK_PROGRAM    =  \"MVSSERVB\";\n            89 | static const char * SERVER      =  \"MVSSERVS\";\n            90 | static const char * AUTHSERVER  =  \"MVSSERVA\";\n            91 | static const char * SPOOL       =  \"SPOOL\";\n            92 | static const int    PRINTBUFF_MAX = 1024*256;\n            93 | static const char * ISFIN       =  \"//DD:ISFIN   \";\n            94 | static const char * ISFOUT      =  \"//DD:ISFOUT  \";\n            95 | static const char * MX_COMMAND  =  \"COMMAND\";\n            96 | static const char * MX_USERID   =  \"USER\";\n            97 | static const char * MX_GROUPID  =  \"GROUP\";\n            98 | static const char * MX_MQS      =  \"MQS\";\n            99 | static const char * MX_DB2      =  \"DB2\";\n           100 | static const char * RESULT_STEM = \"STRRESULTSTEM\";\n           101 | static const short  MX_PORT\t\t\t\t\t=  8001;\n           102 | static const short  REXXSERVER_PORT =  8002;\n           103 | static const char * REXXSERVER_TYPE =\t\t\"TYPE\";\n           104 | static const char * REXXSERVER_COMMAND= \"COMMAND\";\n           105 | static const char * REXXSERVER_REPLYID= \"REPLYID\";\n           106 | static const char * WD4Z              = \"WD4Z\";\n           107 | typedef struct\n           108 | \u00e4\n           109 | \tchar type\u00c410\u00dc;\n           110 | \tchar replyid\u00c486\u00dc;\n           111 | \tchar command\u00c44000\u00dc;\n           112 | \u00fc REXXSERVER_REQUEST;\n           113 |\n           114 | BPXWDYN  * CmdService::dyn  = (BPXWDYN *)fetch(\"BPXWDYN \");\n           115 |\n           116 | FILE * _cgitrace = fopen(\"//dd:cgitrace\",\"w\");\n           117 | FILE * cgitrace = CmdService::debug?(_cgitrace?_cgitrace:stderr):NULL;\n           118 |\n           119 | class keyvalue\n           120 | \u00e4\n           121 | public:\n           122 | \tmvsSTRING * key;\n           123 | \tmvsSTRING * value;\n           124 | \tkeyvalue(mvsSTRING *k,mvsSTRING *v)\n           125 | \t\u00e4\n           126 | \t\tkey\t\t= k;\n           127 | \t\tvalue = v;\n           128 | \t\u00fc\n           129 | \u00fc;\n           130 |\n           131 | keyvalue ** parse(const char * com,const char *sep=\",\")\n           132 | \u00e4\n           133 | \tif (com&&strlen(com))\n           134 | \t\u00e4\n           135 | \t\tstatic keyvalue * kv\u00c4256\u00dc;\n           136 | \t\tmvsSTRING s(com);\n           137 | \t\ts.strip();\n           138 | \t\tsize_t ind = 0;\n           139 | \t\twhile (strlen(s)>0)\n           140 | \t\t\u00e4\n           141 | \t\t\tmvsSTRING key , value , rest;\n           142 | \t\t\ts.strip().parse(key,\"=\",value,(char *)sep,rest);\n           143 | \t\t\tkey.strip();\n           144 | \t\t\tvalue.strip();\n           145 | \t\t\tif (value\u00c40\u00dc == '\u00d6'' ]] value\u00c40\u00dc == '\"')\n           146 | \t\t\t\tvalue = value(1,strlen(value)-2);\n           147 | \t\t\tif (CmdService::debug)\n           148 | \t\t\t\tprintf(\"string:%s key:%s value:%s rest:%s\u00d6n\",(char *)s,(char *)key,(char *)value,(char *)rest);\n           149 | \t\t\tkv\u00c4ind++\u00dc = new keyvalue(new mvsSTRING(key),new mvsSTRING(value));\n           150 | \t\t\ts = rest;\n           151 | \t\t\tkv\u00c4ind\u00dc = NULL;\n           152 | \t\t\u00fc\n           153 | \t\treturn kv;\n           154 | \t\u00fc\n           155 | \telse\n           156 | \t\treturn NULL;\n           157 | \u00fc\n           158 |\n           159 | tcpipClient::tcpipClient(short p):port(p)\n           160 | \u00e4\n           161 | \tsocket = ERROR_CODE;\n           162 | \tconnected = false;\n           163 | \tmemset(&sockaddr,0,sizeof(sockaddr));\n           164 | \tmemset(&sockaddrUnix,0,sizeof(sockaddrUnix));\n           165 | \tFD_ZERO(&readSockets);\n           166 | \tFD_ZERO(&writeSockets);\n           167 | \tFD_ZERO(&exceptionSockets);\n           168 | \tsockaddr.sin_family = AF_INET;\n           169 | \tsockaddrUnix.sun_family = AF_UNIX;\n           170 | \tunsigned long addr  = 0;\n           171 | \tif (port)\n           172 | \t\u00e4\n           173 | \t\tif (strlen(URL)==0)\n           174 | \t\t\tgethostname(URL,sizeof(URL));\n           175 | \t\tif (isdigit(URL\u00c40\u00dc))\n           176 | \t\t\taddr = inet_addr(URL);\n           177 | \t\telse\n           178 | \t\t\u00e4\n           179 | \t\t\thostent * he = gethostbyname(URL);\n           180 | \t\t\tif ( he == 0 )\n           181 | \t\t\t\u00e4\n           182 | \t\t\t\tdiag(\"gethostbyname\");\n           183 | \t\t\t\treturn;\n           184 | \t\t\t\u00fc\n           185 | \t\t\telse\n           186 | \t\t\t\taddr =*((unsigned*)(he->h_addr));\n           187 | \t\t\u00fc\n           188 | \t\tsockaddr.sin_addr.s_addr = addr;\n           189 | \t\tsockaddr.sin_port   =(unsigned short)htons(port);\n           190 | \t\tsocket = ::socket(AF_INET,SOCK_STREAM,0);\n           191 | \t\u00fc\n           192 | \telse\n           193 | \t\u00e4\n           194 | \t\tsockaddrUnix.sun_len = strlen(URL);\n           195 | \t\tstrcpy(sockaddrUnix.sun_path,URL);\n           196 | \t\tsocket = ::socket(AF_UNIX,SOCK_STREAM,0);\n           197 | \t\tif (JOBENV::debug)\n           198 | \t\t\t_dump(\" sockAddrUnix\",(char *)&sockaddrUnix,sizeof(sockaddrUnix));\n           199 | \t\u00fc\n           200 | \tif (socket == ERROR_CODE )\n           201 | \t\u00e4\n           202 | \t\tdiag(\"socket\");\n           203 | \t\treturn;\n           204 | \t\u00fc\n           205 |\n           206 | \tvoid * addrPointer = NULL;\n           207 | \tsize_t addrLength = 0;\n           208 | \tif (port)\n           209 | \t\u00e4\n           210 | \t\taddrPointer = &sockaddr;\n           211 | \t\taddrLength = sizeof(sockaddr);\n           212 | \t\u00fc\n           213 | \telse\n           214 | \t\u00e4\n           215 | \t\taddrPointer = &sockaddrUnix;\n           216 | \t\taddrLength = sizeof(sockaddrUnix);\n           217 | \t\u00fc\n           218 |\n           219 |\n           220 | \twhile(connect(socket,(struct sockaddr*)addrPointer,addrLength)== ERROR_CODE)\n           221 | \t\u00e4\n           222 | \t\tif ( errno == EWOULDBLOCK )\n           223 | \t\t\u00e4\n           224 | \t\t\tFD_SET(socket,&writeSockets);\n           225 | \t\t\tif (select(socket+1,NULL,&writeSockets,NULL,&timeout) |=   1)\n           226 | \t\t\t\u00e4\n           227 | \t\t\t\tdiag(\"connect\");\n           228 | \t\t\t\treturn;\n           229 | \t\t\t\u00fc\n           230 | \t\t\u00fc\n           231 | \t\telse if ( errno == ECONNREFUSED)\n           232 | \t\t\u00e4\n           233 | \t\t\tstatic startToSleep = 0;\n           234 | \t\t\tif ( | startToSleep)\n           235 | \t\t\t\u00e4\n           236 | \t\t\t\tstartToSleep = 1;\n           237 | \t\t\t\tprintf(\" Waiting for connection URL:%s port:%d for %d seconds \u00d6n\",URL,port,connwait);\n           238 | \t\t\t\u00fc\n           239 | \t\t\tsleep(connwait);\n           240 | \t\t\u00fc\n           241 | \t\telse\n           242 | \t\t\u00e4\n           243 | \t\t\tdiag(\"connect\");\n           244 | \t\t\treturn;\n           245 | \t\t\u00fc\n           246 | \t\u00fc\n           247 | \tconnected = true;\n           248 |\n           249 | \u00fc\n           250 |\n           251 | tcpipClient::\u00dftcpipClient()\n           252 | \u00e4\n           253 | \tif (socket|=ERROR_CODE)\n           254 | \t\tif (close(socket) == ERROR_CODE)\n           255 | \t\t\tdiag(\"close\");\n           256 | \tsocket = ERROR_CODE;\n           257 |\n           258 | \u00fc\n           259 |\n           260 | int tcpipClient::send(char * from,size_t len)\n           261 | \u00e4\n           262 | \tchar * off = from;\n           263 | \tsize_t snd = 0;\n           264 | \tsize_t l   = 0;\n           265 | \tif (|connected)\n           266 | \t\treturn 0;\n           267 | \tFD_SET(socket,&writeSockets);\n           268 | \twhile(select(socket+1,NULL,&writeSockets,NULL,&timeout) == 1 && len >0)\n           269 | \t\u00e4\n           270 | \t\tif ( (l = ::send(socket,off,len,0)) > 0)\n           271 | \t\t\u00e4\n           272 | \t\t\tsnd += l;\n           273 | \t\t\toff += l;\n           274 | \t\t\tlen -= l;\n           275 | \t\t\u00fc\n           276 | \t\telse return(diag(\"send\"));\n           277 | \t\u00fc\n           278 | \tif (len > 0)\n           279 | \t\treturn(diag(\"select send\"));\n           280 | \tif (CmdService::debug)\n           281 | \t\tprintf(\" tcpipClint send:%s\",from);\n           282 |\n           283 | \treturn snd;\n           284 | \u00fc\n           285 |\n           286 | int tcpipClient::receive(char * buf,size_t max)\n           287 | \u00e4\n           288 | \tif (|connected)\n           289 | \t\treturn 0;\n           290 | \tchar * borig = buf;\n           291 | \tsize_t l\t\t\t= max;\n           292 | \tsize_t rcv   = 0;\n           293 | \twhile(l&&max)\n           294 | \t\u00e4\n           295 | \t\tFD_SET(socket,&readSockets);\n           296 | \t\tif (select(socket+1,&readSockets,NULL,NULL,&timeout) == 1)\n           297 | \t\t\u00e4\n           298 | \t\t\tif ( (l = ::recv(socket,buf,max,0)) >= 0)\n           299 | \t\t\t\u00e4\n           300 | \t\t\t\tbuf += l;\n           301 | \t\t\t\tmax -= l;\n           302 | \t\t\t\trcv += l;\n           303 | \t\t\t\u00fc\n           304 | \t\t\telse\n           305 | \t\t\t\treturn(diag(\"recv\"));\n           306 | \t\t\u00fc\n           307 | \t\telse\n           308 | \t\t\treturn(diag(\"select receive\"));\n           309 | \t\u00fc\n           310 | \tif (CmdService::debug)\n           311 | \t\u00e4\n           312 | \t\tprintf(\" tcpipClint receive:%s\",borig);\n           313 | \t\tdump(cgitrace,\"Received tcpip client\",borig,rcv);\n           314 | \t\u00fc\n           315 | \tif (l==0)\n           316 | \t\trcv = -rcv;\n           317 | \treturn rcv;\n           318 | \u00fc\n           319 |\n           320 | int tcpipClient::diag(char * t)\n           321 | \u00e4\n           322 | \tprintf(\" %s %d %s\u00d6n\",t,errno,strerror(errno));\n           323 | \treturn 0;\n           324 | \u00fc\n           325 |\n           326 | /*\n           327 | int CmdService::printf(const char * format,...)\n           328 | \u00e4\n           329 | char w\u00c4PRINTBUFF_MAX\u00dc;\n           330 | va_list arg_ptr;\n           331 | va_start(arg_ptr,format);\n           332 |\n           333 | int l = vsprintf(w,format, arg_ptr);\n           334 | if (print)\n           335 | print->addBuff(w,l);\n           336 | else\n           337 | puts(w);\n           338 | va_end(arg_ptr);\n           339 | return l;\n           340 | \u00fc\n           341 | */\n           342 |\n           343 | int CmdService::backFromRexx()\n           344 | \u00e4\n           345 | \tchar w\u00c41024\u00dc;\n           346 | \tsprintf(w,\"%s.0\",RESULT_STEM);\n           347 | \tif (imax=atoi(rexx->fetch(w)))\n           348 | \t\tfor(int i=1;i<=imax;i++)\n           349 | \t\t\u00e4\n           350 | \t\t\tsprintf(w,\"%s.%d\",RESULT_STEM,i);\n           351 | \t\t\tchar * c = rexx->fetch(w);\n           352 | \t\t\tif (c)\n           353 | \t\t\t\u00e4\n           354 | \t\t\t\tprintf(\"%s\u00d6n\",c);\n           355 | \t\t\t\u00fc\n           356 | \t\t\u00fc\n           357 | \t\treturn imax;\n           358 | \u00fc\n           359 |\n           360 | TsoCmdService::TsoCmdService(reply p):CmdService(\"TsoCmdService\",p)\n           361 | \u00e4\n           362 | \ttsi = (IKJEFTSI *)fetch(\"IKJEFTSI\");\n           363 | \ttsr = (IKJEFTSR *)fetch(\"IKJEFTSR\");\n           364 | \ttst = (IKJEFTST *)fetch(\"IKJEFTST\");\n           365 | \ttso = (IKJTSOEV *)fetch(\"IKJTSOEV\");\n           366 |\n           367 | \tmemset(token,0,sizeof(token));\n           368 | \tmemset(cppl,0,sizeof(cppl));\n           369 | \tflag=etc=resv=length=program_parm=cpplTso=0;\n           370 | \tetc = -1;\n           371 | \tif (rc = tso(&resv,&rc,&abend,&reason,&cpplTso))\n           372 | \t\u00e4\n           373 | \t\tdiag(\"IKJTSOEV\");\n           374 | \t\u00fc\n           375 | \telse\n           376 | \t\u00e4\n           377 | \t\tif (rc = tsi(&etc,&resv,token,&rc,&abend,&reason))\n           378 | \t\t\u00e4\n           379 | \t\t\tdiag(\"IKJEFTSI\");\n           380 | \t\t\u00fc\n           381 | \t\telse\n           382 | \t\t\tok = 1;\n           383 | \t\u00fc\n           384 | \u00fc\n           385 |\n           386 | TsoCmdService::\u00dfTsoCmdService()\n           387 | \u00e4\n           388 | \tif (ok)\n           389 | \t\tif (rc = tst(&etc,&resv,token,&rc,&abend,&reason))\n           390 | \t\t\u00e4\n           391 | \t\t\tdiag(\"IKJEFTSV\");\n           392 | \t\t\u00fc\n           393 | \t\telse\n           394 | \t\t\tok = 0;\n           395 | \u00fc\n           396 |\n           397 | int TsoCmdService::cmd(char *input)\n           398 | \u00e4\n           399 | \tif (ok&&input)\n           400 | \t\u00e4\n           401 | \t\tchar w\u00c432000\u00dc;\n           402 | \t\tsprintf(w,\"%s %d %s\",REXXCMD,this,input);\n           403 | \t\tflag = 1*256*256+debug*256+1;\n           404 | \t\tlength = strlen(w);\n           405 | \t\tabend=reason = 0;\n           406 | \t\trc =  tsr(&flag,w,&length,&rc,&abend,&reason,&program_parm,cppl,token);\n           407 | \t\tif (rc>0&&(abend]]reason))\n           408 | \t\t\tdiag(input);\n           409 | \t\tprintf(\" %s cmd ended with %d, generated %d lines\u00d6n\",input,rc,imax);\n           410 | \t\treturn rc;\n           411 | \t\u00fc\n           412 | \telse\n           413 | \t\treturn -1;\n           414 | \u00fc\n           415 |\n           416 | SdsfCmdService::SdsfCmdService(reply p):CmdService(\"SdsfCmdService\",p)\n           417 | \u00e4\n           418 | \tsdsf = (SDSF *)fetch(\"SDSF\");\n           419 | \tif (sdsf)\n           420 | \t\tok = 1;\n           421 | \u00fc\n           422 |\n           423 | SdsfCmdService::\u00dfSdsfCmdService()\n           424 | \u00e4\n           425 | \u00fc\n           426 |\n           427 | int SdsfCmdService::cmd(char *)\n           428 | \u00e4\n           429 | \trc = -1;\n           430 | \tif (ok)\n           431 | \t\u00e4\n           432 | \t\tstrcpy(arg.arg_v,\"++250,180\");\n           433 | \t\targ.arg_l = strlen(arg.arg_v);\n           434 | \t\tvoid * argp\t\t= (void *)&arg;\n           435 | \t\tvoid * argpp  = (void *)(unsigned(argp)+unsigned(0x80000000));\n           436 | \t\trc = sdsf(argp);\n           437 | \t\u00fc\n           438 | \treturn rc;\n           439 | \u00fc\n           440 |\n           441 | UssCmdService::UssCmdService(reply p):CmdService(\"UssCmdService\",p)\n           442 | \u00e4\u00fc\n           443 |\n           444 | UssCmdService::\u00dfUssCmdService()\n           445 | \u00e4\n           446 | \tif (replyFile)\n           447 | \t\tfclose(replyFile);\n           448 | \u00fc\n           449 |\n           450 | int UssCmdService::cmd(char *input)\n           451 | \u00e4\n           452 | \treplyFile = popen(input,\"r\");\n           453 | \tif (replyFile)\n           454 | \t\u00e4\n           455 | \t\timax = 0;\n           456 | \t\trc = 0;\n           457 | \t\twhile(fgets(buff,sizeof(buff),replyFile))\n           458 | \t\t\u00e4\n           459 | \t\t\timax++;\n           460 | \t\t\tprintf(\" %s\u00d6n\",buff);\n           461 | \t\t\u00fc\n           462 | \t\tfclose (replyFile);\n           463 | \t\tprintf(\" %s cmd ended with %d, generated %d lines\u00d6n\",input,rc,imax);\n           464 | \t\u00fc\n           465 | \telse\n           466 | \t\u00e4\n           467 | \t\trc = -1;\n           468 | \t\tprintf(\" popen error %s\u00d6n\",strerror(errno));\n           469 | \t\u00fc\n           470 | \treturn rc;\n           471 | \u00fc\n           472 |\n           473 |\n           474 | char * UssCmdService::next(char *input)\n           475 | \u00e4\n           476 | \tif (input)\n           477 | \t\treplyFile = popen(input,\"rt\");\n           478 | \tif(replyFile)\n           479 | \t\u00e4\n           480 | \t\tif (fgets(buff,sizeof(buff)-1,replyFile))\n           481 | \t\t\treturn buff;\n           482 | \t\telse\n           483 | \t\t\u00e4\n           484 | \t\t\tif (replyFile)\n           485 | \t\t\t\tfclose(replyFile);\n           486 | \t\t\treplyFile = NULL;\n           487 | \t\t\treturn NULL;\n           488 | \t\t\u00fc\n           489 | \t\u00fc\n           490 | \telse\n           491 | \t\treturn NULL;\n           492 | \u00fc\n           493 |\n           494 | JesCmdService::JesCmdService(reply p):CmdService(\"JesCmdSErvice\",p)\n           495 | \u00e4\u00fc\n           496 | JesCmdService::\u00dfJesCmdService()\n           497 | \u00e4\u00fc\n           498 |\n           499 | int JesCmdService::cmd(char * input)\n           500 | \u00e4\n           501 | #ifndef SAPI_NO\n           502 | \tmvsSTRING from(input);\n           503 | \tfrom.strip();\n           504 | \tchar w\u00c41024\u00dc;\n           505 | \tFILE * iFile = fopen(genOpenName(from,w),\"r\");\n           506 | \t/*\n           507 | \tFILE * jesSpool = fopen(genOpenName(SPOOL,w),\"w\");\n           508 | \tif (|jesSpool)\n           509 | \t\u00e4\n           510 | \tprintf(\" open error for %s, %s\u00d6n\",SPOOL,strerror(errno));\n           511 | \treturn -1;\n           512 | \t\u00fc\n           513 | \t*/\n           514 | \tif (|iFile)\n           515 | \t\u00e4\n           516 | \t\tprintf(\" open error for %s, %s\u00d6n\",input,strerror(errno));\n           517 | \t\treturn -1;\n           518 | \t\u00fc\n           519 |\n           520 |\n           521 | \tJES * jes = _X_initJESI();\n           522 | \trc = _X_initINTR(jes);\n           523 | \tpIOQE ioqe = pIOQE((char *)jes->jes_ioqe-8);\n           524 |\n           525 | \tif (rc)\n           526 | \t\u00e4\n           527 | \t\tprintf(\" initINTR error, rc:%d SAPI message:'%s'\u00d6n\",rc,ioqe->ioqe_qsambuf+6);\n           528 | \t\treturn 8;\n           529 | \t\u00fc\n           530 |\n           531 | \tchar   jobid\u00c49\u00dc;\n           532 | \tchar * jobcard =\tNULL;\n           533 | \tchar * jobname  = NULL;\n           534 | \twhile(fgets(buff,sizeof(buff),iFile))\n           535 | \t\u00e4\n           536 | \t\tif (strchr(buff,'\u00d6n'))\n           537 | \t\t\t*strchr(buff,'\u00d6n') = 0;\n           538 | \t\tchar * jcl = buff;\n           539 | \t\tif (|jobcard)\n           540 | \t\t\u00e4\n           541 | \t\t\tjobcard = strdup(jcl);\n           542 | \t\t\tif (strchr(jobcard,' '))\n           543 | \t\t\t\t*strchr(jobcard,' ') = 0;\n           544 | \t\t\tjobname = jobcard +2;\n           545 | \t\t\u00fc\n           546 | \t\tif (strlen(jcl)<80)\n           547 | \t\t\tmemset(jcl+strlen(jcl),' ',80-strlen(jcl));\n           548 | \t\tjcl\u00c480\u00dc = 0;\n           549 | \t\trc = _X_nextINTR(jes,jcl);\n           550 | \t\tif (rc)\n           551 | \t\t\u00e4\n           552 | \t\t\tprintf(\" nextINTR error, rc:%d\u00d6n\",rc);\n           553 | \t\t\treturn 8;\n           554 | \t\t\u00fc\n           555 | \t\u00fc\n           556 | \tfclose(iFile);\n           557 | \tstrcpy(jobid,_X_termINTR(jes));\n           558 | \tjobid\u00c48\u00dc  = 0;\n           559 | \t//if (debug)\n           560 | \tprintf(\" SUBMITTED %s(%s)\u00d6n\",jobname,jobid);\n           561 |\n           562 | \tchar select\u00c41024\u00dc;\n           563 | \tsprintf(select,\" SAPI JOBID(%s) \",jobid);\n           564 | \tSAPI sapi;\n           565 | \t//if (debug)\n           566 | \tprintf(\" SAPI output selection:%s\u00d6n\",select);\n           567 | \tvoid  * ECB = NULL;\n           568 |\n           569 | \trc = _X_initSAPI(jes,select,strlen(select),&sapi,(void *)&ECB,\"JES2\",NULL);\n           570 | \trc = _X_nextSAPI(jes);\n           571 |\n           572 | \twhile (rc==4)\n           573 | \t\u00e4\n           574 | \t\trc = _X_waitSAPI(jes);\n           575 | \t\trc = _X_nextSAPI(jes);\n           576 | \t\u00fc\n           577 |\n           578 | \tif (rc)\n           579 | \t\u00e4\n           580 | \t\tioqe = pIOQE((char *)jes->jes_ioqe-8);\n           581 | \t\tprintf(\" SAPI rc : %d message:'%s'\u00d6n\",rc,ioqe->ioqe_qsambuf+6);\n           582 | \t\treturn 8;\n           583 | \t\u00fc\n           584 |\n           585 | \twhile (rc==0)\n           586 | \t\u00e4\n           587 | \t\tprintf(\" Job:%8.8s JobId:%8.8s Step:%8.8s DDname:%8.8s in SYSOUT class:%c\u00d6n\",\n           588 | \t\t\tsapi.sss2->sss2jobr,sapi.sss2->sss2jbir,sapi.sss2->sss2stpd,sapi.sss2->sss2ddnd,sapi.sss2->sss2cl\n           588 | ar);\n           589 | \t\tprintf(\" Step:%8.8s DDname=%8.8s\u00d6n\",sapi.sss2->sss2stpd,sapi.sss2->sss2ddnd);\n           590 | \t\tFILE * spool = fopen(sapi.ddname,\"rb,type=record\");\n           591 |\n           592 | \t\tif (spool)\n           593 | \t\t\u00e4\n           594 |\n           595 | \t\t\tsize_t len=fread(buff,1,32768,spool);\n           596 | \t\t\twhile(len>0)\n           597 | \t\t\t\u00e4\n           598 | \t\t\t\tprintf(\" %*.*s\u00d6n\",len,len,buff);\n           599 | \t\t\t\tmemset(buff,0,sizeof(buff));\n           600 | \t\t\t\tlen=fread(buff,1,sizeof(buff),spool);\n           601 | \t\t\t\u00fc\n           602 | \t\t\tfclose(spool);\n           603 | \t\t\u00fc\n           604 | \t\telse\n           605 | \t\t\u00e4\n           606 | \t\t\tprintf(\" Unable to open %s spool file\u00d6n\",sapi.ddname);\n           607 | \t\t\treturn 8;\n           608 | \t\t\u00fc\n           609 | \t\trc = _X_nextSAPI(jes);\n           610 | \t\tif (rc>4)\n           611 | \t\t\u00e4\n           612 | \t\t\t//if (*(int *)ioqe->ioqe_qsambuf)\n           613 | \t\t\tprintf(\" SAPI error rc:%d message:'%s'\u00d6n\",rc,ioqe->ioqe_qsambuf+6);\n           614 | \t\t\treturn 8;\n           615 | \t\t\u00fc\n           616 | \t\telse\n           617 | \t\t\tif (rc==4)\n           618 | \t\t\t\tbreak;\n           619 | \t\u00fc\n           620 | \t/*\n           621 | \tif (jesSpool)\n           622 | \tfclose(jesSpool);\n           623 | \t*/\n           624 | \t_X_termSAPI(jes);\n           625 | \t_X_cleanupJESI(jes);\n           626 | \t//_exit(0);\n           627 | #endif\n           628 | \treturn 0;\n           629 | \u00fc\n           630 |\n           631 | DsnCmdService::DsnCmdService(reply rep):CmdService(\"DsnCmdService\",rep)\n           632 | \u00e4\n           633 | \tcsi = (IGGCSI00*)fetch(\"IGGCSI00\");\n           634 | \tif (csi==NULL)\n           635 | \t\u00e4\n           636 | \t\tprintf(\" unable to load IGGCSI00\u00d6n\");\n           637 | \t\tabort();\n           638 | \t\u00fc\n           639 | \tasasymbm = (ASASYMBM*)fetch(\"ASASYMBM\");\n           640 | \tif (asasymbm==NULL)\n           641 | \t\u00e4\n           642 | \t\tprintf(\" unable to load ASASYMBM\u00d6n\");\n           643 | \t\tabort();\n           644 | \t\u00fc\n           645 | \tmemset(&symbp,0,sizeof(symbp));\n           646 | \tcwork = (char *)malloc(CWORK_SIZE);\n           647 | \tif (cwork==NULL)\n           648 | \t\u00e4\n           649 | \t\tprintf(\" unable to allocate in %d\u00d6n\",CWORK_SIZE);\n           650 | \t\tabort();\n           651 | \t\u00fc\n           652 | \tmemset((void *) &(retinfo_st), 0, sizeof(CSIRetInfo));\n           653 | \tmemset((void *) &(selfields_st), ' ', sizeof(CSISelFields));\n           654 |\n           655 | \tselfields_st.csicldi_c = 'Y';\n           656 | \tselfields_st.csiresum_c = ' ';\n           657 | \tselfields_st.csis1cat_c = 'Y';\n           658 | \tselfields_st.csioptns_c = ' ';\n           659 | \tmemset(selfields_st.csicatnm_ac,' ',sizeof(selfields_st.csicatnm_ac));\n           660 | \tselfields_st.csinumen_us\t  = 3;\n           661 | \tmemcpy( selfields_st.csifldnm,\"VOLSER  NAME    TYPE    \",24);\n           662 | \tmemset((void *) cwork, 0,CWORK_SIZE);\n           663 | \tcsirwork_pst = (CSIWorkData *) cwork;\n           664 | \tcsirwork_pst->csiusrln_ul = CWORK_SIZE;\n           665 | \tp = NULL;\n           666 | \u00fc\n           667 |\n           668 | DsnCmdService::\u00dfDsnCmdService()\n           669 | \u00e4\n           670 | \tif (cwork)\n           671 | \t\tfree(cwork);\n           672 | \tcwork = NULL;\n           673 | \u00fc\n           674 |\n           675 | int DsnCmdService::cmd(char * pattern,char * reply)\n           676 | \u00e4\n           677 | \tint csiret_i = 0;\n           678 | \tint i,j;\n           679 |\n           680 | \tif (pattern)\n           681 | \t\tmemcpy( selfields_st.csifiltk_ac,pattern, strlen(pattern));\n           682 |\n           683 | \t//printf(\" CSIEntryData %46.46s \u00d6n\",p);\n           684 | \tchar key\u00c451\u00dc;\n           685 | \tunsigned char  assoctype;\n           686 | \tchar assocname\u00c444\u00dc;\n           687 | \tchar volser\u00c46\u00dc;\n           688 | \tif (CmdService::debug)\n           689 | \t\t_dump(\" Dsn pattern\",pattern,strlen(pattern));\n           690 | \tdo\n           691 | \t\u00e4\n           692 | \t\tif (p==NULL]]\n           693 | \t\t\t(((unsigned long)((char *)p-cwork)>=csirwork_pst->csiusdln_ul)&&selfields_st.csiresum_c == 'Y'))\n           694 | \t\t\u00e4\n           695 | \t\t\tcsiret_i = csi((void *)&retinfo_st,(void *)&selfields_st,(void *)cwork);\n           696 | \t\t\tif (csiret_i==0)\n           697 | \t\t\t\u00e4\n           698 | \t\t\t\tif (short(*(short *)(cwork+CSINUMFD))==0)\n           699 | \t\t\t\t\u00e4\n           700 | \t\t\t\t\treturn 0;\n           701 | \t\t\t\t\u00fc\n           702 | \t\t\t\tp = (CSIEntryData *)(cwork+sizeof(CSIWorkData));\n           703 | \t\t\t\u00fc\n           704 | \t\t\telse\n           705 | \t\t\t\u00e4\n           706 | \t\t\t\tprintf(\" Catalog search error, for %s \u00d6n    rc: %d reason code %8x\u00d6n\"\n           707 | \t\t\t\t\t,pattern,csiret_i,retinfo_st);\n           708 | \t\t\t\treturn 0;\n           709 | \t\t\t\u00fc\n           710 | \t\t\u00fc\n           711 | \t\tif\t((unsigned long)((char *)p-cwork)>=csirwork_pst->csiusdln_ul)\n           712 | \t\t\treturn 0;\n           713 | \t\tchar  *f = (char *)p+sizeof(CSIEntryData);\n           714 | \t\tmemset(key,' ',50);\n           715 | \t\tkey\u00c450\u00dc = 0;\n           716 | \t\tassoctype = ' ';\n           717 | \t\tmemset(assocname,' ',44);\n           718 | \t\tmemset(volser,' ',6);\n           719 | \t\tif (p->csietype-'0')\n           720 | \t\t\u00e4\n           721 | \t\t\tif (p->_union._csiel.csielvol)\n           722 | \t\t\t\u00e4\n           723 | \t\t\t\tmemcpy(volser,f,6);\n           724 | \t\t\t\tf +=p->_union._csiel.csielvol;\n           725 | \t\t\t\u00fc\n           726 | \t\t\tif (p->_union._csiel.csielnam)\n           727 | \t\t\t\u00e4\n           728 | \t\t\t\tmemcpy(assocname,f,44);\n           729 | \t\t\t\tf +=p->_union._csiel.csielnam;\n           730 | \t\t\t\u00fc\n           731 | \t\t\tif (p->_union._csiel.csieltyp)\n           732 | \t\t\t\u00e4\n           733 | \t\t\t\tassoctype = *f;\n           734 | \t\t\t\tf +=p->_union._csiel.csieltyp;\n           735 | \t\t\t\u00fc\n           736 | \t\t\u00fc\n           737 | \t\telse\n           738 | \t\t\tf -=6; //if it is a catalog record\n           739 |\n           740 | \t\tif (volser\u00c40\u00dc == '&')\n           741 | \t\t\u00e4\n           742 | \t\t\tvoid * pointer = &symbp;\n           743 | \t\t\tchar rvolser\u00c46\u00dc;\n           744 | \t\t\tint rvolser_length = 6;\n           745 | \t\t\tint symbp_return = 0;\n           746 | \t\t\tchar timestamp\u00c432\u00dc;\n           747 | \t\t\tsymbp.symbppatternaddr = (void *)volser;\n           748 | \t\t\tsymbp.symbppatternlength = 6;\n           749 | \t\t\tsymbp.symbptargetaddr        = (void *)rvolser;\n           750 | \t\t\tsymbp.symbptargetlengthaddr  = &rvolser_length;\n           751 | \t\t\tsymbp.symbpreturncodeaddr    = &symbp_return;\n           752 | \t\t\tsymbp.symbptimestampaddr = timestamp;\n           753 | \t\t\tsymbp.symbpsymboltableaddr = NULL;\n           754 | \t\t\tsymbp_return = asasymbm(volser,6,rvolser,&rvolser_length,NULL,timestamp,&symbp_return);\n           755 | \t\t\tif (symbp_return == 0)\n           756 | \t\t\t\tmemcpy(&volser,&rvolser,6);\n           757 | \t\t\telse\n           758 | \t\t\t\tprintf(\" ASASYMBP return code:%d\u00d6n\",symbp_return);\n           759 | \t\t\u00fc\n           760 | \t\tswitch(p->csietype)\n           761 | \t\t\u00e4\n           762 | \t\tcase '0':\n           763 | \t\t\tbreak;\n           764 | \t\tcase 'A':\n           765 | \t\tcase 'C':\n           766 | \t\tcase 'G':\n           767 | \t\tcase 'I':\n           768 | \t\tcase 'R':\n           769 | \t\tcase 'D':\n           770 |\n           771 | \t\t\tmemcpy(key,p->csiename,44);\n           772 | \t\t\tif (key\u00c40\u00dc==0)\n           773 | \t\t\t\tmemset(key,'0',44);\n           774 | \t\t\tmemcpy(key+44,volser,6);\n           775 | \t\t\tkey\u00c450\u00dc = 0;\n           776 | \t\t\tif (reply==NULL)\n           777 | \t\t\t\tprintf(\" %s %s %c\u00d6n\",key,volser,p->csietype);\n           778 | \t\t\telse\n           779 | \t\t\t\u00e4\n           780 | \t\t\t\treply\u00c40\u00dc=p->csietype;\n           781 | \t\t\t\tmemcpy(reply+1,key,50);\n           782 | \t\t\t\tp = (CSIEntryData *)f;\n           783 | \t\t\t\treturn 1;\n           784 | \t\t\t\u00fc\n           785 | \t\t\tbreak;\n           786 | \t\tdefault:\n           787 | \t\t\tbreak;\n           788 | \t\t\u00fc\n           789 | \t\tp = (CSIEntryData *)f;\n           790 | \t\u00fc  while ((char *)p<(cwork+csirwork_pst->csiusdln_ul));\n           791 | \treturn 1;\n           792 | \u00fc\n           793 |\n           794 | void CmdService::diag(const char * cmd)\n           795 | \u00e4\n           796 | \tprintf(\" Error in %s, command:%s rc:%d abend:%d reason:%d\u00d6n\",\n           797 | \t\tservice,cmd,rc,abend,reason);\n           798 | \u00fc\n           799 | static const char * MXI_TABLE_HEAD\t= \"<table border='1' ='blue' bordercolor='black' class=sortable>\"\n           799 | ;\n           800 | static const char * MXI_TABLE_TRAIL = \"</table>\";\n           801 | static char * refMxi\u00c464\u00dc;\n           802 | static int    initRefMxi()\n           803 | \u00e4\n           804 | #define mxiattr(v,name,link) static const int name = v;\u00d6\n           805 | \trefMxi\u00c4v\u00dc = link;\n           806 | \tmxiattr(0x01,input_pas_dataset,NULL)\n           807 | \t\tmxiattr(0x02,output_attr_text,NULL)\n           808 | \t\tmxiattr(0x03,output_attr_exception,NULL)\n           809 | \t\tmxiattr(0x04,output_attr_warning,NULL)\n           810 | \t\tmxiattr(0x05,field_labels,NULL)\n           811 | \t\tmxiattr(0x06,outputattr_field_normal,NULL)\n           812 | \t\tmxiattr(0x07,outputattr_field_inactive,NULL)\n           813 | \t\tmxiattr(0x08,field_column_headings,NULL)\n           814 | \t\tmxiattr(0x09,outputattr_field_high,NULL)\n           815 | \t\t/*\n           816 | \t\tmxiattr(0x0a,reserved)\n           817 | \t\tmxiattr(0x0b,reserved)\n           818 | \t\tmxiattr(0x0c,reserved)\n           819 | \t\t*/\n           820 | \t\tmxiattr(0x0d,refdslist,\"REFDSLIST %s\")\n           821 | \t\tmxiattr(0x0e,refdslist_volser,\"<a href='vol.sh?%s'>%s</a>\")\n           822 | \t\tmxiattr(0x10,refdasd_volser,\"<a href='vol.sh?%s'>%s</a>\")\n           823 | \t\tmxiattr(0x11,refdataset_name,\"<a href='dataset.sh?DATASET=%s'>%s</a>\")\n           824 | \t\tmxiattr(0x12,refsvc,\"<a href='mxicmd.sh?SVC %s'>%s</a>\")\n           825 | \t\tmxiattr(0x13,refaddress_mem,\"<a href='mxicmd.sh?MEM %s'>%s</a>\")\n           826 | \t\tmxiattr(0x14,refsubsystem_name,\"\")\n           827 | \t\tmxiattr(0x15,reftape_unit,\"\")\n           828 | \t\tmxiattr(0x16,refdasd_unit,\"\")\n           829 | \t\tmxiattr(0x17,refunit_name,\"\")\n           830 | \t\tmxiattr(0x18,refxcf_structure,\"<a href='mxicmd.sh?XCF %s'>%s</a>\")\n           831 | \t\tmxiattr(0x19,refsp,\"<a href='mxicmd.sh?SP %s'>%s</a>\")\n           832 | \t\tmxiattr(0x1a,refagrp,\"<a href='mxicmd.sh?AGRP %s'>%s</a>\")\n           833 | \t\tmxiattr(0x1b,refsrvc,\"<a href='mxicmd.sh?SRVC %s'>%s</a>\")\n           834 | \t\tmxiattr(0x1c,refrcls,\"<a href='mxicmd.sh?RCLS %s'>%s</a>\")\n           835 | \t\tmxiattr(0x1d,refrl,\"<a href='mxicmd.sh?RL %s'>%s</a>\")\n           836 | \t\tmxiattr(0x1e,refemcs,\"<a href='mxicmd.sh?EMCS %s'>%s</a>\")\n           837 | \t\tmxiattr(0x1f,refmcs,\"<a href='mxicmd.sh?MCS %s'>%s</a>\")\n           838 | \t\tmxiattr(0x21,refsgrp,\"<a href='mxicmd.sh?SGRP %s'>%s</a>\")\n           839 | \t\tmxiattr(0x22,refdae,\"<a href='mxicmd.sh?DAE %s'>%s</a>\")\n           840 | \t\tmxiattr(0x23,refcf,\"<a href='mxicmd.sh?RL %s'>%s</a>\")\n           841 | \t\tmxiattr(0x24,refscls,\"<a href='mxicmd.sh?SCLS %s'>%s</a>\")\n           842 | \t\tmxiattr(0x25,refmcls,\"<a href='mxicmd.sh?CF %s'>%s</a>\")\n           843 | \t\tmxiattr(0x26,refmxi_command,\"\")\n           844 | \t\tmxiattr(0x27,refdcls,\"<a href='mxicmd.sh?DCLS %s'>%s</a>\")\n           845 | \t\tmxiattr(0x28,reflls,\"<a href='mxicmd.sh?LLS %s'>%s</a>\")\n           846 | \t\tmxiattr(0x29,refjobname_da,\"<a href='mxicmd.sh?DA %s'>%s</a>\")\n           847 | \t\tmxiattr(0x2a,reflx,\"<a href='mxicmd.sh?LX %s'>%s</a>\")\n           848 | \t\tmxiattr(0x2b,refwlmg,\"<a href='mxicmd.sh?WLMG %s'>%s</a>\")\n           849 | \t\tmxiattr(0x2c,refuserid_rl,\"<a href='mxicmd.sh?RL %s'>%s</a>\")\n           850 | \t\tmxiattr(0x2d,refhfs,\"<a href='mxicmd.sh?HFS %s'>%s</a>\")\n           851 | \t\tmxiattr(0x2e,refpid,\"<a href='mxicmd.sh?PID %s'>%s</a>\")\n           852 | \t\tmxiattr(0x2f,refwlma,\"<a href='mxicmd.sh?WLMA %s'>%s</a>\")\n           853 | \t\tmxiattr(0x30,refasid,\"<a href='mxicmd.sh?DA A=%s'>%s</a>\")\n           854 | \t\tmxiattr(0x31,refwlms,\"<a href='mxicmd.sh?WLMS %s'>%s</a>\")\n           855 | \t\tmxiattr(0x32,reflla,\"<a href='mxicmd.sh?LLA %s'>%s</a>\")\n           856 | \t\tmxiattr(0x33,refrsys,\"<a href='mxicmd.sh?RSYS %s'>%s</a>\")\n           857 | \t\tmxiattr(0x34,refenc,\"<a href='mxicmd.sh?ENC %s'>%s</a>\")\n           858 | \t\tmxiattr(0x35,reflogr,\"<a href='mxicmd.sh?LOGR %s'>%s</a>\")\n           859 | \t\tmxiattr(0x36,refcon,\"\")\n           860 | \t\tmxiattr(0x37,refmqq,\"\")\n           861 | \t\tmxiattr(0x38,refmq,\"\")\n           862 | \t\tmxiattr(0x39,refmqc,\"\")\n           863 | \t\tmxiattr(0x3a,refmqcs,\"\")\n           864 | \t\tmxiattr(0x3b,refdb,\"\")\n           865 | \t\tmxiattr(0x3c,refdbda,\"\")\n           866 | \t\tmxiattr(0x3d,refdbbp,\"\")\n           867 | \t\tmxiattr(0x3e,refcommand_group,\"\")\n           868 | \t\tmxiattr(0x20,found_string,\"\")\n           869 | \t\treturn 0;\n           870 | \u00fc\n           871 | static int    _initRefMxi = initRefMxi();\n           872 |\n           873 | /*\n           874 | MXPS3PT4  EQU  X'0D'             Point-and-shoot DSLIST\n           875 | MXPSVTOC  EQU  X'0E'             Point-and-shoot DSLIST Volser\n           876 | MXPSVOL   EQU  X'10'             point-and-shoot DASD Volser\n           877 | MXPSDSN   EQU  X'11'             point-and-shoot Dataset name\n           878 | MXPSSVC   EQU  X'12'             point-and-shoot SVC\n           879 | MXPSADDR  EQU  X'13'             point-and-shoot Address (MEM)\n           880 | MXPSSSI   EQU  X'14'             point-and-shoot Subsystem name\n           881 | MXPSTUNT  EQU  X'15'             point-and-shoot TAPE Unit\n           882 | MXPSDUNT  EQU  X'16'             point-and-shoot DASD unit\n           883 | MXPSUNTN  EQU  X'17'             point-and-shoot UNIT name\n           884 | MXPSXCFS  EQU  X'18'             point-and-shoot XCF structure\n           885 | MXPSSP    EQU  X'19'             point-and-shoot SP\n           886 | MXPSAGRP  EQU  X'1A'             Point-and-shoot AGRP\n           887 | MXPSSRVC  EQU  X'1B'             Point-and-shoot SRVC\n           888 | MXPSRCLS  EQU  X'1C'             Point-and-shoot RCLS\n           889 | MXPSRL    EQU  X'1D'             Point-and-shoot RL\n           890 | MXPSEMCS  EQU  X'1E'             Point-and-shoot EMCS\n           891 | MXPSMCS   EQU  X'1F'             Point-and-shoot MCS\n           892 | MXPSSGRP  EQU  X'21'             point-and-shoot SGRP\n           893 | MXPSDAE   EQU  X'22'             point-and-shoot DAE\n           894 | MXPSCF    EQU  X'23'             point-and-shoot CF\n           895 | MXPSSCLS  EQU  X'24'             point-and-shoot SCLS\n           896 | MXPSMCLS  EQU  X'25'             point-and-shoot MCLS\n           897 | MXPSCMD   EQU  X'26'             point-and-shoot MXI Command\n           898 | MXPSDCLS  EQU  X'27'             point-and-shoot DCLS\n           899 | MXPSLLS   EQU  X'28'             point-and-shoot LLS\n           900 | MXPSJOBN  EQU  X'29'             point-and-shoot Jobname (DA)\n           901 | MXPSLX    EQU  X'2A'             point-and-shoot LX\n           902 | MXPSWLMG  EQU  X'2B'             point-and-shoot WLMG\n           903 | MXPSUSER  EQU  X'2C'             point-and-shoot USERID (RL)\n           904 | MXPSHFS   EQU  X'2D'             point-and-shoot HFS\n           905 | MXPSPID   EQU  X'2E'             point-and-shoot PID\n           906 | MXPSWLMA  EQU  X'2F'             point-and-shoot WLMA\n           907 | MXPSASID  EQU  X'30'             point-and-shoot ASID\n           908 | MXPSWLMS  EQU  X'31'             point-and-shoot WLMS\n           909 | MXPSLLA   EQU  X'32'             point-and-shoot LLA\n           910 | MXPSRSYS  EQU  X'33'             point-and-shoot RSYS\n           911 | MXPSENC   EQU  X'34'             point-and-shoot ENC\n           912 | MXPSLOGR  EQU  X'35'             point-and-shoot LOGR\n           913 | MXPSCON   EQU  X'36'             point-and-shoot CON\n           914 | MXPSMQQ   EQU  X'37'             point-and-shoot MQQ\n           915 | MXPSMQ    EQU  X'38'             point-and-shoot MQ\n           916 | MXPSMQC   EQU  X'39'             point-and-shoot MQC\n           917 | MXPSMQCS  EQU  X'3A'             point-and-shoot MQCS\n           918 | MXPSDB    EQU  X'3B'             point-and-shoot DB\n           919 | MXPSDBDA  EQU  X'3C'             point-and-shoot DBDA\n           920 | MXPSDBBP  EQU  X'3D'             point-and-shoot DBBP\n           921 | MXPSCGRP  EQU  X'3E'             point-and-shoot Command Group\n           922 | */\n           923 |\n           924 |\n           925 | MxServerCmdService::MxServerCmdService(reply p):CmdService(\"MxServerCmdService\",p),tcpipClient(MX_PO\n           925 | RT)\n           926 | \u00e4\n           927 | \tif (socket>=0)\n           928 | \t\tok = 1;\n           929 | \u00fc\n           930 |\n           931 | MxServerCmdService::\u00dfMxServerCmdService()\n           932 | \u00e4\u00fc\n           933 |\n           934 | char * nextResult(char * &p)\n           935 | \u00e4\n           936 | \tstatic char w\u00c4512\u00dc;\n           937 | \tif (*p >= ' ' ]]*p==0)\n           938 | \t\treturn NULL;\n           939 | \tchar * text = refMxi\u00c4int(*p)\u00dc;\n           940 | \tint i =1;\n           941 | \tfor(;i<80&&p\u00c4i\u00dc>=' ';i++);\n           942 | \tchar control = p\u00c4i\u00dc;\n           943 | \tp\u00c4i\u00dc = 0;\n           944 | \tif (text&&strlen(text))\n           945 | \t\tsprintf(w,text,p+1,p+1);\n           946 | \telse\n           947 | \t\tstrcpy(w,p+1);\n           948 | \tp\u00c4i\u00dc = control;\n           949 | \tp+=i;\n           950 | \tbool empty = true;\n           951 | \tfor (i=0;i<strlen(w)&&empty;i++)\n           952 | \t\tempty&=(w\u00c4i\u00dc==' ');\n           953 | \tif (empty)\n           954 | \t\tstrcpy(w,\"&nbsp;\");\n           955 | \treturn w;\n           956 | \u00fc\n           957 |\n           958 | int MxServerCmdService::cmd(char * command)\n           959 | \u00e4\n           960 | \tkeyvalue ** kv = NULL;\n           961 | \tchar * title   = NULL;\n           962 | \tif (ok&&command&&(kv=parse(command)))\n           963 | \t\u00e4\n           964 | \t\tmxireq r;\n           965 | \t\tmemset(&r,' ',sizeof(r));\n           966 | \t\tmemcpy(r.mxireq_operating_sys,\"MVS\",3);\n           967 | \t\tfor(int i =0;kv\u00c4i\u00dc;i++)\n           968 | \t\t\u00e4\n           969 | \t\t\tchar * from = *(kv\u00c4i\u00dc->value);\n           970 | \t\t\tif (strcasecmp(*(kv\u00c4i\u00dc->key),MX_COMMAND)==0)\n           971 | \t\t\t\u00e4\n           972 | \t\t\t\ttitle = from;\n           973 | \t\t\t\tsize_t l = strlen(from)<sizeof(r.mxireq_command)?strlen(from):sizeof(r.mxireq_command);\n           974 | \t\t\t\tr.mxireq_command_length = (unsigned char)l;\n           975 | \t\t\t\tmemcpy(r.mxireq_command,from,l);\n           976 | \t\t\t\u00fc\n           977 | \t\t\tif (strcasecmp(*(kv\u00c4i\u00dc->key),MX_USERID)==0)\n           978 | \t\t\t\u00e4\n           979 | \t\t\t\tsize_t l = strlen(from)<sizeof(r.mxireq_userid)?strlen(from):sizeof(r.mxireq_userid);\n           980 | \t\t\t\tr.mxireq_userid_length = (unsigned char)l;\n           981 | \t\t\t\tmemcpy(r.mxireq_userid,from,l);\n           982 | \t\t\t\u00fc\n           983 | \t\t\tif (strcasecmp(*(kv\u00c4i\u00dc->key),MX_GROUPID)==0)\n           984 | \t\t\t\u00e4\n           985 | \t\t\t\tsize_t l = strlen(from)<sizeof(r.mxireq_group_name)?strlen(from):sizeof(r.mxireq_group_name);\n           986 | \t\t\t\tr.mxireq_group_length = (unsigned char)l;\n           987 | \t\t\t\tmemcpy(r.mxireq_group_name,from,l);\n           988 | \t\t\t\u00fc\n           989 | \t\t\tif (strcasecmp(*(kv\u00c4i\u00dc->key),MX_MQS)==0)\n           990 | \t\t\t\u00e4\n           991 | \t\t\t\tsize_t l = strlen(from)<sizeof(r.mxireq_mqs_ssid)?strlen(from):sizeof(r.mxireq_mqs_ssid);\n           992 | \t\t\t\tmemcpy(r.mxireq_mqs_ssid,from,l);\n           993 | \t\t\t\u00fc\n           994 | \t\t\tif (strcasecmp(*(kv\u00c4i\u00dc->key),MX_DB2)==0)\n           995 | \t\t\t\u00e4\n           996 | \t\t\t\tsize_t l = strlen(from)<sizeof(r.mxireq_db2_ssid)?strlen(from):sizeof(r.mxireq_db2_ssid);\n           997 | \t\t\t\tmemcpy(r.mxireq_db2_ssid,from,l);\n           998 | \t\t\t\u00fc\n           999 | \t\t\u00fc\n          1000 | \t\tif (send((char *)&r,sizeof(r)))\n          1001 | \t\t\u00e4\n          1002 | \t\t\tmxis m;\n          1003 | \t\t\tchar * msg = (char *)&m;\n          1004 | \t\t\tif (receive((char *)&m,sizeof(m))|=sizeof(m))\n          1005 | \t\t\t\u00e4\n          1006 | \t\t\t\tprintf(\" MX message %24.24s (%70.70s)\u00d6n\u00d6n\u00d6n\",(char *)msg+4,msg+28);\n          1007 | \t\t\t\treturn 0;\n          1008 | \t\t\t\u00fc\n          1009 | \t\t\telse\n          1010 | \t\t\t\u00e4\n          1011 | \t\t\t\tbool table = (m.mxissnum&&(memcmp(m.mxispanm,\"MXIPANEL\",8)==0));\n          1012 | \t\t\t\tmxdt t;\n          1013 | \t\t\t\tif (receive((char *)&t,sizeof(t)-1)==0)\n          1014 | \t\t\t\t\u00e4\n          1015 | \t\t\t\t\tprintf(\" MX message error\u00d6n\");\n          1016 | \t\t\t\t\treturn 0;\n          1017 | \t\t\t\t\u00fc\n          1018 | \t\t\t\telse\n          1019 | \t\t\t\t\u00e4\n          1020 | \t\t\t\t\tif (CmdService::debug)\n          1021 | \t\t\t\t\t\tdump(cgitrace,\"Received mxis:\",&m,sizeof(m));\n          1022 | \t\t\t\t\t/*\n          1023 | \t\t\t\t\tprintf(\"<title>%s</title><meta http-equiv=\u00d6\"pragma\u00d6\" content=\u00d6\"no-cache\u00d6\"><body BGCOLOR=\u00d6\"#0000\n          1023 | 00\u00d6\" TEXT=\u00d6\"#00FFFF\u00d6\"><pre>\u00d6n\",title);\n          1024 | \t\t\t\t\tprintf(\"%80.80s\u00d6n%80.80s\u00d6n%80.80s\u00d6n\",t.mxdtttl,t.mxdtlb2,t.mxdtlb3);\n          1025 | \t\t\t\t\t*/\n          1026 | \t\t\t\t\tsize_t resultLen = t.mxdtsiz+1-sizeof(t);\n          1027 | \t\t\t\t\tchar * result = new char\u00c4resultLen+1\u00dc;\n          1028 | \t\t\t\t\tmemset(result,0,resultLen+1);\n          1029 | \t\t\t\t\tif ((receive(result,resultLen))==0)\n          1030 | \t\t\t\t\t\u00e4\n          1031 | \t\t\t\t\t\tprintf(\" MX result error\u00d6n\");\n          1032 | \t\t\t\t\t\treturn 0;\n          1033 | \t\t\t\t\t\u00fc\n          1034 | \t\t\t\t\telse\n          1035 | \t\t\t\t\t\u00e4\n          1036 | \t\t\t\t\t\tint colspan = 0;\n          1037 | \t\t\t\t\t\tif (CmdService::debug)\n          1038 | \t\t\t\t\t\t\tdump(cgitrace,\"Received result:\",result,resultLen);\n          1039 | \t\t\t\t\t\tif (table)\n          1040 | \t\t\t\t\t\t\u00e4\n          1041 | \t\t\t\t\t\t\tprintf(\"%s\u00d6n\",MXI_TABLE_HEAD);\n          1042 | \t\t\t\t\t\t\tprintf(\"<tr>\u00d6n\");\n          1043 | \t\t\t\t\t\t\tfor(int i =1;i<=m.mxissnum;i++)\n          1044 | \t\t\t\t\t\t\t\tprintf(\"<th align=left>%8.8s</th>\u00d6n\",m.mxissf1+(i-1)*16+1);\n          1045 | \t\t\t\t\t\t\tprintf(\"</tr>\u00d6n\");\n          1046 | \t\t\t\t\t\t\u00fc\n          1047 | \t\t\t\t\t\telse\n          1048 | \t\t\t\t\t\t\u00e4\n          1049 | \t\t\t\t\t\t\tprintf(\"%s\u00d6n\",MXI_TABLE_HEAD);\n          1050 | \t\t\t\t\t\t\tfor(int i=0,j=1;i<resultLen&&j<=t.mxdtnum;i+=80,j++)\n          1051 | \t\t\t\t\t\t\t\u00e4\n          1052 | \t\t\t\t\t\t\t\tchar w\u00c481\u00dc;\n          1053 | \t\t\t\t\t\t\t\tmemcpy(w,result+i,80);\n          1054 | \t\t\t\t\t\t\t\tw\u00c480\u00dc =0;\n          1055 | \t\t\t\t\t\t\t\tint cs = 0;\n          1056 | \t\t\t\t\t\t\t\tfor(int k =0;k<80;k++)\n          1057 | \t\t\t\t\t\t\t\t\tif (w\u00c4k\u00dc<' '&&w\u00c4k\u00dc)\n          1058 | \t\t\t\t\t\t\t\t\t\tcs++;\n          1059 | \t\t\t\t\t\t\t\tif (cs>colspan)\n          1060 | \t\t\t\t\t\t\t\t\tcolspan = cs;\n          1061 | \t\t\t\t\t\t\t\u00fc\n          1062 | \t\t\t\t\t\t\u00fc\n          1063 | \t\t\t\t\t\tfor(int i=0,j=1;i<resultLen&&j<=t.mxdtnum;i+=80,j++)\n          1064 | \t\t\t\t\t\t\u00e4\n          1065 | \t\t\t\t\t\t\tif (table]]1)\n          1066 | \t\t\t\t\t\t\t\tif (j%2 == 1)\n          1067 | \t\t\t\t\t\t\t\t\tprintf(\"<tr class='odd'>\u00d6n\");\n          1068 | \t\t\t\t\t\t\t\telse\n          1069 | \t\t\t\t\t\t\t\t\tprintf(\"<tr>\u00d6n\");\n          1070 | \t\t\t\t\t\t\telse\n          1071 | \t\t\t\t\t\t\t\tprintf(\"<p>\");\n          1072 | \t\t\t\t\t\t\tchar w\u00c481\u00dc;\n          1073 | \t\t\t\t\t\t\tmemcpy(w,result+i,80);\n          1074 | \t\t\t\t\t\t\tw\u00c480\u00dc =0;\n          1075 | \t\t\t\t\t\t\tchar * next = w;\n          1076 | \t\t\t\t\t\t\tchar * print = NULL ;\n          1077 | \t\t\t\t\t\t\t//if (*next==0)\n          1078 | \t\t\t\t\t\t\t//\tbreak;\n          1079 | \t\t\t\t\t\t\tbool first = true;\n          1080 | \t\t\t\t\t\t\tint col = 0;\n          1081 | \t\t\t\t\t\t\twhile(print = nextResult(next))\n          1082 | \t\t\t\t\t\t\t\u00e4\n          1083 | \t\t\t\t\t\t\t\tcol++;\n          1084 | \t\t\t\t\t\t\t\tbool lastcol = true;\n          1085 | \t\t\t\t\t\t\t\tfor(int k=0;next\u00c4k\u00dc;k++)\n          1086 | \t\t\t\t\t\t\t\t\tif (next\u00c4k\u00dc<' ')\n          1087 | \t\t\t\t\t\t\t\t\t\tlastcol = false;\n          1088 | \t\t\t\t\t\t\t\tif (table]]1)\n          1089 | \t\t\t\t\t\t\t\t\u00e4\n          1090 | \t\t\t\t\t\t\t\t\tif (colspan&&lastcol)\n          1091 | \t\t\t\t\t\t\t\t\t\tprintf(\"<td colspan='%d'>\",colspan-col+1);\n          1092 | \t\t\t\t\t\t\t\t\telse\n          1093 | \t\t\t\t\t\t\t\t\t\tprintf(\"<td>\");\n          1094 | \t\t\t\t\t\t\t\t\tfirst = false;\n          1095 | \t\t\t\t\t\t\t\t\u00fc\n          1096 | \t\t\t\t\t\t\t\tprintf(\"%s\",print);\n          1097 | \t\t\t\t\t\t\t\tif (table]]1)\n          1098 | \t\t\t\t\t\t\t\t\tprintf(\"</td>\");\n          1099 | \t\t\t\t\t\t\t\u00fc;\n          1100 | \t\t\t\t\t\t\tif (table]]1)\n          1101 | \t\t\t\t\t\t\t\tprintf(\"</tr>\u00d6n\");\n          1102 | \t\t\t\t\t\t\u00fc\n          1103 | \t\t\t\t\t\tif (table]]1)\n          1104 | \t\t\t\t\t\t\tprintf(\"%s\u00d6n\",MXI_TABLE_TRAIL);\n          1105 | \t\t\t\t\t\u00fc\n          1106 | \t\t\t\t\tif (result)\n          1107 | \t\t\t\t\t\tdelete result;\n          1108 | \t\t\t\t\u00fc\n          1109 | \t\t\t\u00fc\n          1110 | \t\t\u00fc\n          1111 | \t\u00fc\n          1112 | \treturn 0;\n          1113 | \u00fc\n          1114 |\n          1115 |\n          1116 |\n          1117 | RexxServerCmdService::RexxServerCmdService(reply p):CmdService(\"RexxServerCmdService\",p),tcpipClient\n          1117 | (REXXSERVER_PORT)\n          1118 | \u00e4\n          1119 | \tif (socket>=0)\n          1120 | \t\tok = 1;\n          1121 | \u00fc\n          1122 |\n          1123 | RexxServerCmdService::\u00dfRexxServerCmdService()\n          1124 | \u00e4\u00fc\n          1125 |\n          1126 | int RexxServerCmdService::cmd(char * command)\n          1127 | \u00e4\n          1128 | \tkeyvalue ** kv = NULL;\n          1129 | \tif (ok&&command&&(kv=parse(command)))\n          1130 | \t\u00e4\n          1131 | \t\tREXXSERVER_REQUEST r;\n          1132 | \t\tmemset(&r,' ',sizeof(r));\n          1133 | \t\tfor(int i =0;kv\u00c4i\u00dc;i++)\n          1134 | \t\t\u00e4\n          1135 | \t\t\tchar * from = *(kv\u00c4i\u00dc->value);\n          1136 | \t\t\tint    l    = strlen(from);\n          1137 | \t\t\tif (strcasecmp(*(kv\u00c4i\u00dc->key),REXXSERVER_COMMAND)==0)\n          1138 | \t\t\t\u00e4\n          1139 | \t\t\t\tl = l<sizeof(r.command)?l:sizeof(r.command);\n          1140 | \t\t\t\tmemcpy(r.command,from,l);\n          1141 | \t\t\t\u00fc\n          1142 | \t\t\telse\tif (strcasecmp(*(kv\u00c4i\u00dc->key),REXXSERVER_TYPE)==0)\n          1143 | \t\t\t\u00e4\n          1144 | \t\t\t\tl = l<sizeof(r.type)?l:sizeof(r.type);\n          1145 | \t\t\t\tmemcpy(r.type,from,l);\n          1146 | \t\t\t\u00fc\n          1147 | \t\t\telse if (strcasecmp(*(kv\u00c4i\u00dc->key),REXXSERVER_REPLYID)==0)\n          1148 | \t\t\t\u00e4\n          1149 | \t\t\t\tl = l<sizeof(r.replyid)?l:sizeof(r.replyid);\n          1150 | \t\t\t\tmemcpy(r.replyid,from,l);\n          1151 | \t\t\t\u00fc\n          1152 | \t\t\u00fc\n          1153 | \t\tif (send((char *)&r,sizeof(r)))\n          1154 | \t\t\u00e4\n          1155 | \t\t\tchar b\u00c432000\u00dc;\n          1156 | \t\t\tint rc = 0;\n          1157 | \t\t\tif ((rc=receive((char *)b,sizeof(b))-1)==0)\n          1158 | \t\t\t\u00e4\n          1159 | \t\t\t\tprintf(\" REXXSERVER error, nothing received\u00d6n\");\n          1160 | \t\t\t\treturn 0;\n          1161 | \t\t\t\u00fc\n          1162 | \t\t\telse\n          1163 | \t\t\t\twhile(rc)\n          1164 | \t\t\t\t\u00e4\n          1165 | \t\t\t\t\tif (rc<0)\n          1166 | \t\t\t\t\t\trc=-rc;\n          1167 | \t\t\t\t\tint bc=0;\n          1168 | \t\t\t\t\tfor(int i =0;i<rc;i++)\n          1169 | \t\t\t\t\t\tif (b\u00c4i\u00dc < ' ' && b\u00c4i\u00dc-'\u00d6n')\n          1170 | \t\t\t\t\t\t\u00e4\n          1171 | \t\t\t\t\t\t\tb\u00c4i\u00dc = ' ';\n          1172 | \t\t\t\t\t\t\tbc++;\n          1173 | \t\t\t\t\t\t\u00fc\n          1174 | \t\t\t\t\t\tif (CmdService::debug)\n          1175 | \t\t\t\t\t\t\u00e4\n          1176 | \t\t\t\t\t\t\tprintf(\" REXXSERVER:%s\",b);\n          1177 | \t\t\t\t\t\t\tdump(cgitrace,\"Received\",b,rc);\n          1178 | \t\t\t\t\t\t\u00fc\n          1179 |\n          1180 |\n          1181 | \t\t\t\t\t\tb\u00c4rc\u00dc=0;\n          1182 | \t\t\t\t\t\t//if (bc<rc)\n          1183 | \t\t\t\t\t\tprintf(\" %s\",b);\n          1184 | \t\t\t\t\t\trc=receive((char *)b,sizeof(b)-1);\n          1185 | \t\t\t\t\u00fc\n          1186 | \t\t\u00fc\n          1187 | \t\u00fc\n          1188 | \treturn 0;\n          1189 | \u00fc\n          1190 |\n          1191 | /*\n          1192 | OperCmdService::OperCmdService(reply p):CmdService(\"OperCmdService\",p)\n          1193 | \u00e4\u00fc\n          1194 | OperCmdService::\u00dfOperCmdService()\n          1195 | \u00e4\u00fc\n          1196 | int OperCmdService::cmd(char *c)\n          1197 | \u00e4\n          1198 | printf(\" Oper command %s\u00d6n\",c);\n          1199 | return 0;\n          1200 | \u00fc\n          1201 | */\n          1202 |\n          1203 |\n          1204 | OperCmdService::OperCmdService(reply p):CmdService(\"OperCmdService\",p),tcpipClient(REXXSERVER_PORT)\n          1205 | \u00e4\n          1206 | \tif (socket>=0)\n          1207 | \t\tok = 1;\n          1208 | \u00fc\n          1209 |\n          1210 | OperCmdService::\u00dfOperCmdService()\n          1211 | \u00e4\u00fc\n          1212 |\n          1213 | int OperCmdService::cmd(char * command)\n          1214 | \u00e4\n          1215 | \tkeyvalue ** kv = NULL;\n          1216 | \tif (ok&&command&&(kv=parse(command)))\n          1217 | \t\u00e4\n          1218 | \t\tREXXSERVER_REQUEST r;\n          1219 | \t\tmemset(&r,' ',sizeof(r));\n          1220 | \t\tmemcpy(r.command,command,strlen(command));\n          1221 | \t\tmemcpy(r.type,WD4Z,strlen(WD4Z));\n          1222 | \t\tif (send((char *)&r,sizeof(r)))\n          1223 | \t\t\u00e4\n          1224 | \t\t\tchar b\u00c432000\u00dc;\n          1225 | \t\t\tint rc = 0;\n          1226 | \t\t\tif ((rc=receive((char *)b,sizeof(b))-1)==0)\n          1227 | \t\t\t\u00e4\n          1228 | \t\t\t\tprintf(\" REXXSERVER error, nothing received\u00d6n\");\n          1229 | \t\t\t\treturn 0;\n          1230 | \t\t\t\u00fc\n          1231 | \t\t\telse\n          1232 | \t\t\t\twhile(rc)\n          1233 | \t\t\t\t\u00e4\n          1234 | \t\t\t\t\tif (rc<0)\n          1235 | \t\t\t\t\t\trc=-rc;\n          1236 | \t\t\t\t\tint bc=0;\n          1237 | \t\t\t\t\t/*\n          1238 | \t\t\t\t\tfor(int i =0;i<rc;i++)\n          1239 | \t\t\t\t\tif (b\u00c4i\u00dc==0x25)\n          1240 | \t\t\t\t\tb\u00c4i\u00dc = '\u00d6n';\n          1241 | \t\t\t\t\t*/\n          1242 | \t\t\t\t\tif (CmdService::debug)\n          1243 | \t\t\t\t\t\u00e4\n          1244 | \t\t\t\t\t\tprintf(\" REXXSERVER:%s\",b);\n          1245 | \t\t\t\t\t\tdump(cgitrace,\"Received\",b,rc);\n          1246 | \t\t\t\t\t\u00fc\n          1247 |\n          1248 |\n          1249 | \t\t\t\t\tb\u00c4rc\u00dc=0;\n          1250 | \t\t\t\t\t//if (bc<rc)\n          1251 | \t\t\t\t\tprintf(\" %s\",b);\n          1252 | \t\t\t\t\trc=receive((char *)b,sizeof(b)-1);\n          1253 | \t\t\t\t\u00fc\n          1254 | \t\t\u00fc\n          1255 | \t\u00fc\n          1256 | \treturn 0;\n          1257 | \u00fc\n          1258 |\n          1259 | //int main(int argc,char * argv\u00c4\u00dc)??????????????????\n          1260 | int mainX(int argc,char * argv\u00c4\u00dc)\n          1261 |\n          1262 | \u00e4\n          1263 | \tmvsSTRING::parseSepCh='\u00d6''; //szm20061218 mvsSTRING parse escape ch set here to apostrophe , all ot\n          1263 | her cases null|||||||\n          1264 | \t//FILE * reopen_stdout = freopen(\"//dd:sysprint\",\"w,recfm=VB,lrecl=32756,blksize=32760\",stdout);\n          1265 |\n          1266 | \tTsoCmdService *\t\t\t\ttso =  NULL;\n          1267 | \tUssCmdService\t*\t\t\t\tunix = NULL;\n          1268 | \tJesCmdService *   \t\tjes  = NULL;\n          1269 | \tDsnCmdService *  \t\t\tdsn  = NULL;\n          1270 | \tOperCmdService *\t\t\toper = NULL;\n          1271 | \tSdsfCmdService *\t\t\tsdsf = NULL;\n          1272 | \tMxServerCmdService *  mx  = NULL;\n          1273 | \tRexxServerCmdService *rs  = NULL;\n          1274 |\n          1275 | \tconst static char *version=ISIS_VERSION;\n          1276 | \tconst static char *compileDate=ISIS_VERSION_DATE;\n          1277 | #if 0\n          1278 | \tvoid * * R1 = __osplist;\n          1279 | \tchar * argv\u00c42\u00dc = \u00e4 \"MVSSERVS\",NULL\u00fc;\n          1280 | \tint    argc    = 2;\n          1281 | \tchar _b\u00c432700\u00dc;\n          1282 | \tint l\t\t\t= *(int *)*(R1+1);\n          1283 | \tchar * c  = *(char **)*R1;\n          1284 | \tmemcpy(_b,c,l);\n          1285 | \t_b\u00c4l\u00dc = 0;\n          1286 | \targv\u00c41\u00dc = _b;\n          1287 | #endif\n          1288 | \tif (CmdService::debug)\n          1289 | \t\tprintf(\" %s tester %s %s Version:%s Compiled:%s\u00d6n\",argv\u00c40\u00dc,ISIS_PF_SID,ISIS_PF_NAME,version,compil\n          1289 | eDate);\n          1290 | \tif (strcasecmp(argv\u00c40\u00dc,CALLBACK_PROGRAM)==0)\n          1291 | \t\u00e4\n          1292 | \t\tCmdService * cmd = (CmdService *)(atoi(argv\u00c41\u00dc));\n          1293 | \t\tif (cmd)\n          1294 | \t\t\u00e4\n          1295 | \t\t\tcmd->backFromRexx();\n          1296 | \t\t\u00fc\n          1297 | \t\telse\n          1298 | \t\t\tprintf(\" Callbak address zero\u00d6n\");\n          1299 | \t\u00fc\n          1300 | \telse\n          1301 | \t\u00e4\n          1302 | \t\tmvsSTRING b;\n          1303 | \t\tchar buff\u00c432700\u00dc;\n          1304 | \t\tbuff\u00c40\u00dc = 0;\n          1305 | \t\tif (argc>1)\n          1306 | \t\t\u00e4\n          1307 | \t\t\tif (CmdService::debug)\n          1308 | \t\t\t\tprintf(\" argc:%d\u00d6n\",argc);\n          1309 | \t\t\tfor (int i =1;i<=argc;i++)\n          1310 | \t\t\t\u00e4\n          1311 | \t\t\t\tif (CmdService::debug)\n          1312 | \t\t\t\t\tprintf(\"argv\u00c4%d\u00dc:%s\u00d6n\",i,argv\u00c4i\u00dc);\n          1313 | \t\t\t\tstrcpy(buff+strlen(buff),argv\u00c4i\u00dc);\n          1314 | \t\t\t\tstrcat(buff,\" \");\n          1315 |\n          1316 | \t\t\t\u00fc\n          1317 |\n          1318 | \t\t\tif (strchr(buff,'\u00d6n'))\n          1319 | \t\t\t\t*strchr(buff,'\u00d6n') = 0;\n          1320 | \t\t\tfor(int i=0;i<strlen(buff);i++)\n          1321 | \t\t\t\u00e4\n          1322 | \t\t\t\tif (buff\u00c4i\u00dc=='+')\n          1323 | \t\t\t\t\tbuff\u00c4i\u00dc = ' ';\n          1324 | \t\t\t\telse\n          1325 | \t\t\t\t\tif (buff\u00c4i\u00dc=='-')\n          1326 | \t\t\t\t\t\tbuff\u00c4i\u00dc = '+';\n          1327 | \t\t\t\t\telse\n          1328 | \t\t\t\t\t\tif (buff\u00c4i\u00dc=='_')\n          1329 | \t\t\t\t\t\t\tbuff\u00c4i\u00dc = '%';\n          1330 |\n          1331 | \t\t\t\u00fc\n          1332 | \t\t\tb =buff+1;\n          1333 | \t\t\tif (CmdService::debug)\n          1334 | \t\t\t\tprintf(\">>%s\u00d6n\",buff);\n          1335 | \t\t\tb.strip();\n          1336 | \t\t\u00fc\n          1337 | \t\telse\n          1338 | \t\t\tbuff\u00c40\u00dc = 'S';\n          1339 |\n          1340 | \t\tswitch (buff\u00c40\u00dc)\n          1341 | \t\t\u00e4\n          1342 | \t\tcase 'r':\n          1343 | \t\tcase 'R':\n          1344 | \t\tcase 't':\n          1345 | \t\tcase 'T':\n          1346 | \t\t\tif (strcasecmp(argv\u00c40\u00dc,AUTHSERVER))\n          1347 | \t\t\t\u00e4\n          1348 | \t\t\t\tif (|tso)\n          1349 | \t\t\t\t\ttso = new TsoCmdService();\n          1350 | \t\t\t\ttso->cmd(b);\n          1351 | \t\t\t\u00fc\n          1352 | \t\t\telse\n          1353 | \t\t\t\tprintf(\" We can't start TSO in auth environment\u00d6n\");\n          1354 | \t\t\tbreak;\n          1355 | \t\tcase 'u':\n          1356 | \t\tcase 'U':\n          1357 | \t\t\tif (|unix)\n          1358 | \t\t\t\tunix = new UssCmdService();\n          1359 | \t\t\tunix->cmd(b);\n          1360 | \t\t\tbreak;\n          1361 | \t\tcase 'j':\n          1362 | \t\tcase 'J':\n          1363 | \t\t\tif (strcasecmp(argv\u00c40\u00dc,SERVER))\n          1364 | \t\t\t\u00e4\n          1365 | \t\t\t\tif (|jes)\n          1366 | \t\t\t\t\tjes = new JesCmdService();\n          1367 | \t\t\t\tjes->cmd(b);\n          1368 | \t\t\t\u00fc\n          1369 | \t\t\telse\n          1370 | \t\t\t\tprintf(\" We can't start JES in Unauth environment\u00d6n\");\n          1371 | \t\t\tbreak;\n          1372 | \t\tcase 'd':\n          1373 | \t\tcase 'D':\n          1374 | \t\t\tif (|dsn)\n          1375 | \t\t\t\tdsn = new DsnCmdService();\n          1376 | \t\t\tdsn->cmd(b,NULL);\n          1377 | \t\t\tbreak;\n          1378 | \t\tcase 'o':\n          1379 | \t\tcase 'O':\n          1380 | \t\t\tif (|oper)\n          1381 | \t\t\t\toper = new OperCmdService();\n          1382 | \t\t\toper->cmd(b);\n          1383 | \t\t\tbreak;\n          1384 | \t\tcase 's':\n          1385 | \t\tcase 'S':\n          1386 | \t\t\tif (|sdsf)\n          1387 | \t\t\t\tsdsf = new SdsfCmdService();\n          1388 | \t\t\tsdsf->cmd(b);\n          1389 | \t\t\tbreak;\n          1390 | \t\tcase 'm':\n          1391 | \t\tcase 'M':\n          1392 | \t\t\tif (|mx)\n          1393 | \t\t\t\tmx = new MxServerCmdService();\n          1394 | \t\t\tmx->cmd(b);\n          1395 | \t\t\tbreak;\n          1396 |\n          1397 | \t\tcase 'x':\n          1398 | \t\tcase 'X':\n          1399 | \t\t\tif (|rs)\n          1400 | \t\t\t\trs = new RexxServerCmdService();\n          1401 | \t\t\trs->cmd(b);\n          1402 | \t\t\tbreak;\n          1403 |\n          1404 | \t\tdefault:\n          1405 | \t\t\tprintf(\"?? %s\u00d6n\",buff);\n          1406 | \t\t\u00fc\n          1407 | \t\tif (tso)\n          1408 | \t\t\tdelete tso;\n          1409 | \t\tif (unix)\n          1410 | \t\t\tdelete unix;\n          1411 | \t\tif (jes)\n          1412 | \t\t\tdelete jes;\n          1413 | \t\tif (dsn)\n          1414 | \t\t\tdelete dsn;\n          1415 | \t\tif (sdsf)\n          1416 | \t\t\tdelete sdsf;\n          1417 | \t\tif (mx)\n          1418 | \t\t\tdelete mx;\n          1419 | \t\tif (rs)\n          1420 | \t\t\tdelete rs;\n          1421 |\n          1422 | \t\u00fc\n          1423 |\n          1424 | \treturn 0;\n          1425 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(STRSERV)'                      07.01.13 11:00:48\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTEXP.HPP(ISISDEF)'\n     2  =  //'ESA.PRJ.CBTEXP.HPP(VERSINFO)'\n     3  =  //'ESA.PRJ.CBTEXP.HPP(OSMFIND)'\n     4  =  //'ESA.PRJ.CBTEXP.HPP(OS)'\n     5  =  //'CEE.SCEEH.H(STDLIB)'\n     6  =  //'CEE.SCEEH.H(FEATURES)'\n     7  =  //'CEE.SCEEH.H(BUILTINS)'\n     8  =  //'CEE.SCEEH.H(STDDEF)'\n     9  =  //'CEE.SCEEH.H(STRING)'\n    10  =  //'ESA.PRJ.CBTEXP.HPP(MCHAIN)'\n    11  =  //'ESA.PRJ.CBTEXP.HPP(MVSBASE)'\n    12  =  //'ESA.PRJ.CBTEXP.HPP(MERROR)'\n    13  =  //'ESA.PRJ.CBTEXP.HPP(DSNAMEUT)'\n    14  =  //'CEE.SCEEH.H(ASSERT)'\n    15  =  //'CEE.SCEEH.H(STDIO)'\n    16  =  //'CEE.SCEEH.SYS.H(TYPES)'\n    17  =  //'ESA.PRJ.CBTEXP.HPP(FILETYPE)'\n    18  =  //'CEE.SCEEH.H(SIGNAL)'\n    19  =  //'CEE.SCEEH.H(TIME)'\n    20  =  //'CEE.SCEEH.H(DLL)'\n    21  =  //'CEE.SCEEH.H(LIMITS)'\n    22  =  //'CEE.SCEEH.H(UNISTD)'\n    23  =  //'CEE.SCEEH.H(INTTYPES)'\n    24  =  //'CEE.SCEEH.H(STDINT)'\n    25  =  //'CEE.SCEEH.H(PWD)'\n    26  =  //'CEE.SCEEH.H(ASSERT)'\n    27  =  //'CEE.SCEEH.H(CTYPE)'\n    28  =  //'CEE.SCEEH.H(STRINGS)'\n    29  =  //'CEE.SCEEH.H(DIRENT)'\n    30  =  //'CEE.SCEEH.SYS.H(STAT)'\n    31  =  //'CEE.SCEEH.SYS.H(MODES)'\n    32  =  //'CEE.SCEEH.SYS.H(MNTENT)'\n    33  =  //'CEE.SCEEH.SYS.H(STAT)'\n    34  =  //'CEE.SCEEH.H(FCNTL)'\n    35  =  //'CEE.SCEEH.SYS.H(WAIT)'\n    36  =  //'CEE.SCEEH.H(ERRNO)'\n    37  =  //'CEE.SCEEH.H(STDARG)'\n    38  =  //'CEE.SCEEH.H(ASSERT)'\n    39  =  //'CEE.SCEEH.SYS.H(SOCKET)'\n    40  =  //'CEE.SCEEH.SYS.H(UIO)'\n    41  =  //'CEE.SCEEH.NETINET.H(IN)'\n    42  =  //'CEE.SCEEH.SYS.H(TIME)'\n    43  =  //'CEE.SCEEH.ARPA.H(INET)'\n    44  =  //'CEE.SCEEH.H(NETDB)'\n    45  =  //'ESA.PRJ.CBTEXP.HPP(MISC)'\n    46  =  //'ESA.PRJ.CBTEXP.HPP(JESI)'\n    47  =  //'ESA.PRJ.CBTEXP.HPP(PPDECVT)'\n    48  =  //'ESA.PRJ.CBTEXP.HPP(JES)'\n    49  =  //'ESA.PRJ.CBTEXP.HPP(SSS2)'\n    50  =  //'ESA.PRJ.CBTEXP.HPP(SAPISEL)'\n    51  =  //'ESA.PRJ.CBTEXP.HPP(SAPIINFO)'\n    52  =  //'ESA.PRJ.CBTEXP.HPP(IOQE)'\n    53  =  //'ESA.PRJ.CBTEXP.HPP(CALJESI)'\n    54  =  //'ESA.PRJ.CBTEXP.HPP(DEFJESI)'\n    55  =  //'ESA.PRJ.CBTEXP.HPP(DLLDEF)'\n    56  =  //'ESA.PRJ.CBTEXP.HPP(CASMIF)'\n    57  =  //'ESA.PRJ.CBTEXP.HPP(ASMIF)'\n    58  =  //'ESA.PRJ.CBTEXP.HPP(MSGMGR)'\n    59  =  //'ESA.PRJ.CBTEXP.HPP(JOBENV)'\n    60  =  //'ESA.PRJ.CBTEXP.HPP(REXXVAR)'\n    61  =  //'ESA.PRJ.CBTEXP.HPP(SHVBLOCK)'\n    62  =  //'ESA.PRJ.CBTEXP.HPP(STRSERV)'\n    63  =  //'ESA.PRJ.CBTEXP.HPP(IBMDEBUG)'\n    64  =  //'CEE.SCEEH.H(CTEST)'\n    65  =  //'ESA.PRJ.CBTEXP.HPP(IGGCSI00)'\n    66  =  //'ESA.PRJ.CBTEXP.HPP(SUBTASK)'\n    67  =  //'CEE.SCEEH.SYS.H(MSG)'\n    68  =  //'CEE.SCEEH.SYS.H(IPC)'\n    69  =  //'CEE.SCEEH.SYS.H(@@GETIPC)'\n    70  =  //'ESA.PRJ.CBTEXP.HPP(SYMBP)'\n    71  =  //'ESA.PRJ.CBTEXP.HPP(STRNODE)'\n    72  =  //'ESA.PRJ.CBTEXP.HPP(MVSSTR)'\n    73  =  //'ESA.PRJ.CBTEXP.HPP(IHAPSA)'\n    74  =  //'ESA.PRJ.CBTEXP.HPP(IHACVT)'\n    75  =  //'ESA.PRJ.CBTEXP.HPP(IHASCVT)'\n    76  =  //'ESA.PRJ.CBTEXP.HPP(IKJTCB)'\n    77  =  //'ESA.PRJ.CBTEXP.HPP(IHALDA)'\n    78  =  //'ESA.PRJ.CBTEXP.HPP(IHAECVT)'\n    79  =  //'ESA.PRJ.CBTEXP.HPP(IHAASCB)'\n    80  =  //'ESA.PRJ.CBTEXP.HPP(IHAASSB)'\n    81  =  //'ESA.PRJ.CBTEXP.HPP(CSVDLCB)'\n    82  =  //'ESA.PRJ.CBTEXP.HPP(IHALLT)'\n    83  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOCVT)'\n    84  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOPNT)'\n    85  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOCVE)'\n    86  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMAR)'\n    87  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMARA)'\n    88  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMARL)'\n    89  =  //'ESA.PRJ.CBTEXP.HPP(IEWPMARR)'\n    90  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESB)'\n    91  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESD)'\n    92  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESL)'\n    93  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESN)'\n    94  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESP)'\n    95  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESR)'\n    96  =  //'ESA.PRJ.CBTEXP.HPP(IGWDESX)'\n    97  =  //'ESA.PRJ.CBTEXP.HPP(IGWDST)'\n    98  =  //'ESA.PRJ.CBTEXP.HPP(SMDE)'\n    99  =  //'ESA.PRJ.CBTEXP.HPP(SMDEFD)'\n   100  =  //'ESA.PRJ.CBTEXP.HPP(SMDENAME)'\n   101  =  //'ESA.PRJ.CBTEXP.HPP(SMDENLST)'\n   102  =  //'ESA.PRJ.CBTEXP.HPP(SMDEPNAM)'\n   103  =  //'ESA.PRJ.CBTEXP.HPP(SMDETOKN)'\n   104  =  //'ESA.PRJ.CBTEXP.HPP(TSVT)'\n   105  =  //'ESA.PRJ.CBTEXP.HPP(TJDSECTD)'\n   106  =  //'ESA.PRJ.CBTEXP.HPP(TVDSECTD)'\n   107  =  //'ESA.PRJ.CBTEXP.HPP(DCUOUTH)'\n   108  =  //'ESA.PRJ.CBTEXP.HPP(F1DSCB)'\n   109  =  //'ESA.PRJ.CBTEXP.HPP(F2DSCB)'\n   110  =  //'ESA.PRJ.CBTEXP.HPP(F3DSCB)'\n   111  =  //'ESA.PRJ.CBTEXP.HPP(MXDT)'\n   112  =  //'ESA.PRJ.CBTEXP.HPP(MXIS)'\n   113  =  //'ESA.PRJ.CBTEXP.HPP(MXIREQ)'\n   114  =  //'ESA.PRJ.CBTEXP.HPP(PGTHA)'\n   115  =  //'ESA.PRJ.CBTEXP.HPP(PGTHB)'\n   116  =  //'ESA.PRJ.CBTEXP.HPP(PGTHC)'\n   117  =  //'ESA.PRJ.CBTEXP.HPP(PGTHD)'\n   118  =  //'ESA.PRJ.CBTEXP.HPP(PGTHE)'\n   119  =  //'ESA.PRJ.CBTEXP.HPP(PGTHF)'\n   120  =  //'ESA.PRJ.CBTEXP.HPP(PGTHG)'\n   121  =  //'ESA.PRJ.CBTEXP.HPP(PGTHH)'\n   122  =  //'ESA.PRJ.CBTEXP.HPP(PGTHJ)'\n   123  =  //'ESA.PRJ.CBTEXP.HPP(PGTHK)'\n   124  =  //'ESA.PRJ.CBTEXP.HPP(PGPS)'\n   125  =  //'ESA.PRJ.CBTEXP.HPP(BPXZOTCB)'\n   126  =  //'ESA.PRJ.CBTEXP.HPP(BPXZTHLI)'\n   127  =  //'ESA.PRJ.CBTEXP.HPP(BPXZPRLI)'\n   128  =  //'ESA.PRJ.CBTEXP.HPP(BPXYOPNF)'\n   129  =  //'ESA.PRJ.CBTEXP.HPP(RMCT)'\n   130  =  //'ESA.PRJ.CBTEXP.HPP(CSD)'\n   131  =  //'ESA.PRJ.CBTEXP.HPP(PCCA)'\n   132  =  //'ESA.PRJ.CBTEXP.HPP(PCCAVT)'\n   133  =  //'ESA.PRJ.CBTEXP.HPP(SMCABASE)'\n   134  =  //'ESA.PRJ.CBTEXP.HPP(IHAASVT)'\n   135  =  //'ESA.PRJ.CBTEXP.HPP(MNTE)'\n   136  =  //'ESA.PRJ.CBTEXP.HPP(MNTEH)'\n   137  =  //'ESA.PRJ.CBTEXP.HPP(TRVT)'\n   138  =  //'ESA.PRJ.CBTEXP.HPP(TBVT)'\n   139  =  //'ESA.PRJ.CBTEXP.HPP(TTE)'\n   140  =  //'ESA.PRJ.CBTEXP.HPP(CEECAA)'\n   141  =  //'ESA.PRJ.CBTEXP.HPP(CEEMCH)'\n   142  =  //'ESA.PRJ.CBTEXP.HPP(CEEDSAHP)'\n   143  =  //'ESA.PRJ.CBTEXP.HPP(CEEDSA)'\n   144  =  //'ESA.PRJ.CBTEXP.HPP(CEEPCB)'\n   145  =  //'ESA.PRJ.CBTEXP.HPP(CEECEDB)'\n   146  =  //'ESA.PRJ.CBTEXP.HPP(CEECDLL)'\n   147  =  //'ESA.PRJ.CBTEXP.HPP(PA1H)'\n   148  =  //'ESA.PRJ.CBTEXP.HPP(PA2H)'\n   149  =  //'ESA.PRJ.CBTEXP.HPP(PA1EPNM)'\n   150  =  //'ESA.PRJ.CBTEXP.HPP(IHASTCB)'\n   151  =  //'ESA.PRJ.CBTEXP.HPP(IHAASXB)'\n   152  =  //'ESA.PRJ.CBTEXP.HPP(CCT)'\n   153  =  //'ESA.PRJ.CBTEXP.HPP(ICT)'\n   154  =  //'ESA.PRJ.CBTEXP.HPP(MCT)'\n   155  =  //'ESA.PRJ.CBTEXP.HPP(EZBYPTHA)'\n   156  =  //'ESA.PRJ.CBTEXP.HPP(EZBCTHDR)'\n   157  =  //'ESA.PRJ.CBTEXP.HPP(PCOMS83)'\n   158  =  //'ESA.PRJ.CBTEXP.HPP(RFIS)'\n   159  =  //'ESA.PRJ.CBTEXP.HPP(RFIM)'\n   160  =  //'ESA.PRJ.CBTEXP.HPP(IOCC)'\n   161  =  //'ESA.PRJ.CBTEXP.HPP(IAZJSAB)'\n   162  =  //'ESA.PRJ.CBTEXP.HPP(CVTXTNT1)'\n   163  =  //'ESA.PRJ.CBTEXP.HPP(CVTXTNT2)'\n0\"//'ESA.PRJ.CBTEXP.HPP(SSS2)'\", line 142.58: CCN5804 (W) The characters \"/*\" are detected in a comment.\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.12 z/OS XL C++              //'ESA.PRJ.CBTEXP.CPP(STRSERV)'                      07.01.13 11:00:48\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     1           0         0           0          1            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT888/CBT.V500.FILE888.PDS/COMPLIST.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT888/CBT.V500.FILE888.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}