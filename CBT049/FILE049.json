{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011131000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE049.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE049.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x0c'", "DS1TRBAL": "b'H\\xa6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00_\\x00\\x01\\x00_\\x00\\x08\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01 \\x7f\\x01\\x01 \\x7f\\x18\\x17\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-26T00:00:00", "modifydate": "2001-07-26T18:17:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 438    FILE:  049\n\n    ORIGINAL DSNAME:  WCBT.CBT438.FILE049\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 3,406 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/26/01    18:17:50    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE049": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x99\\x08?\\x01\\x01\\x19?\\x17Q\\x00p\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "2001-07-12T17:51:00", "lines": 112, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 049 is an old program from Bruce Leland called STATS.     *   FILE 049\n//*           This program reports statistics on the internal       *   FILE 049\n//*           structure of partitioned datasets and other dataset   *   FILE 049\n//*           types.  Its original place was from File 213 of the   *   FILE 049\n//*           old CBT Tapes, before Arnie made his wholesale        *   FILE 049\n//*           deletions.  (This program came from CBT Tape Version  *   FILE 049\n//*           249.)                                                 *   FILE 049\n//*                                                                 *   FILE 049\n//*           This program is still extremely relevant to us,       *   FILE 049\n//*           after lo these many years....                         *   FILE 049\n//*                                                                 *   FILE 049\n//*           The program is extremely easy to run, and gives       *   FILE 049\n//*           you a lot of info.                                    *   FILE 049\n//*                                                                 *   FILE 049\n//*           email address:   bleland@serena.com                   *   FILE 049\n//*                                                                 *   FILE 049\n//*       Description:  This program formats information on         *   FILE 049\n//*           several types of disk data sets.  It reads            *   FILE 049\n//*           through the entire data set and outputs disk          *   FILE 049\n//*           track usage, record sizes, counts and other           *   FILE 049\n//*           statistics.                                           *   FILE 049\n//*                                                                 *   FILE 049\n//*           In addition, several data set validity checks are     *   FILE 049\n//*           performed during input processing to insure that      *   FILE 049\n//*           the data set will be usable by the system for         *   FILE 049\n//*           non-EXCP processing.                                  *   FILE 049\n//*                                                                 *   FILE 049\n//*           If any errors are encountered, the Return Code is     *   FILE 049\n//*           set to 4095 (or the program abends); otherwise,       *   FILE 049\n//*           the Return Code is set to the minimum of 4094 and     *   FILE 049\n//*           the number of tracks which should compress out        *   FILE 049\n//*           for partitioned data sets.                            *   FILE 049\n//*                                                                 *   FILE 049\n//*       Definitions (for Partitioned Data Sets):                  *   FILE 049\n//*                                                                 *   FILE 049\n//*           a.  Real Member - a non-alias member name which       *   FILE 049\n//*               is present in the directory.                      *   FILE 049\n//*           b.  Gas Member - a member of a partitioned data       *   FILE 049\n//*               set which has been replaced or deleted from       *   FILE 049\n//*               the data set.  A gas member does not have an      *   FILE 049\n//*               entry in the directory pointing to it; disk       *   FILE 049\n//*               storage occupied by gas members is made           *   FILE 049\n//*               usable for other members by an IEBCOPY            *   FILE 049\n//*               compress operation.                               *   FILE 049\n//*                                                                 *   FILE 049\n//*               Note: Gas members can be resurrected by the       *   FILE 049\n//*               TSO PDS command if it is given the beginning      *   FILE 049\n//*               TTR address and a member name.                    *   FILE 049\n//*                                                                 *   FILE 049\n//*       Program PARM (only the first parm character is            *   FILE 049\n//*                     significant; at most one of the             *   FILE 049\n//*                     following may be specified):                *   FILE 049\n//*                                                                 *   FILE 049\n//*           a.  Labelonly  - Label information is to be           *   FILE 049\n//*                            formatted but no data set reads      *   FILE 049\n//*                            are to be performed (except the      *   FILE 049\n//*                            read for any ISAM Format 2           *   FILE 049\n//*                            DSCB).                               *   FILE 049\n//*           b.  Nogas      - No gas member report is to be        *   FILE 049\n//*                            provided for partitioned data        *   FILE 049\n//*                            sets.                                *   FILE 049\n//*           c.  Errorsonly - Only error messages are to be        *   FILE 049\n//*                            output.                              *   FILE 049\n//*           d.  Allextents - All extents of the data set are      *   FILE 049\n//*                            to be read regardless of the         *   FILE 049\n//*                            DS1LSTAR setting.                    *   FILE 049\n//*       Operation:                                                *   FILE 049\n//*                                                                 *   FILE 049\n//*           a.  The program performs a RDJFCB to get the          *   FILE 049\n//*               DSName and volume name; an OBTAIN to get the      *   FILE 049\n//*               Format 1 DSCB; a DEVTYPE to get the device        *   FILE 049\n//*               characteristics; and an OPEN to initialize        *   FILE 049\n//*               the data set's Data Extent Block (DEB)            *   FILE 049\n//*               information.                                      *   FILE 049\n//*           b.  The program formats and outputs DEB and DSCB      *   FILE 049\n//*               information.                                      *   FILE 049\n//*           c.  The program then reads through the data set       *   FILE 049\n//*               and outputs disk track usage, record sizes,       *   FILE 049\n//*               counts and other statistics.                      *   FILE 049\n//*           d.  Additional processing:                            *   FILE 049\n//*               1. For Physical Sequential, Direct or VSAM        *   FILE 049\n//*                  data sets, no additional processing is         *   FILE 049\n//*                  performed.                                     *   FILE 049\n//*               2. For ISAM data sets, the program reads          *   FILE 049\n//*                  through the entire data set (there may be      *   FILE 049\n//*                  several files of data) and reports on each     *   FILE 049\n//*                  file.  also, the program inputs the ISAM       *   FILE 049\n//*                  label (Format Two DSCB) record and             *   FILE 049\n//*                  provides a data set profile which includes     *   FILE 049\n//*                  data set reorganization data and data set      *   FILE 049\n//*                  characteristics.                               *   FILE 049\n//*               3. For Partitioned Data Sets, if the data set     *   FILE 049\n//*                  name and a member name is allocated to the     *   FILE 049\n//*                  input data set, the member is processed        *   FILE 049\n//*                  like a sequential data set.                    *   FILE 049\n//*               4. For other Partitioned Data Sets, the           *   FILE 049\n//*                  program compares directory TTR's against       *   FILE 049\n//*                  actual disk addresses to provide a report      *   FILE 049\n//*                  by gas member:                                 *   FILE 049\n//*                  a.  For load libraries, the linkage-edit       *   FILE 049\n//*                      date and the names of the first few        *   FILE 049\n//*                      CSECTs are provided.                       *   FILE 049\n//*                  b.  For other libraries, the first 79          *   FILE 049\n//*                      characters of each gas member is           *   FILE 049\n//*                      output.                                    *   FILE 049\n//*                  Statistics are maintained on the size of       *   FILE 049\n//*                  gas and real members and the number of         *   FILE 049\n//*                  alias members.  STATS checks for aliases       *   FILE 049\n//*                  which have no real entries and apparent        *   FILE 049\n//*                  aliases (two real members with the same        *   FILE 049\n//*                  TTR).                                          *   FILE 049\n//*                                                                 *   FILE 049\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTJCL": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x821\\x8f\\x00\\x821\\x8f\\x165\\x00\\x13\\x00\\x13\\x00\\x00\\xc8\\xc1\\xc2\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-11-14T00:00:00", "modifydate": "1982-11-14T16:35:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "HABL"}, "text": "//CBT811T JOB 527TSO000S0008,TEC,CLASS=J,MSGCLASS=5,NOTIFY=TX15500\n//COM          EXEC PGM=ASMBLR,REGION=1024K,\n//             PARM='LOAD,LINECNT=76,NODECK,SYSPARM=CBT'\n//SYSLIB       DD   DISP=SHR,DSN=SYS1.AMODGEN,DCB=BLKSIZE=19040\n//             DD   DISP=SHR,DSN=SYS1.MACLIB\n//             DD   DISP=SHR,DSN=CBT.MACLIB\n//SYSPRINT     DD   SYSOUT=6,COPIES=1,\n//             DCB=(RECFM=FBM,LRECL=121,BLKSIZE=12221)\n//SYSPUNCH     DD   SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=12240)\n//MACREF       DD   DUMMY    PUT IN HERE BY ARNIE\n//SYSUT1       DD   UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SYSUT2       DD   UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SYSUT3       DD   UNIT=SYSDA,SPACE=(CYL,(30,2))\n//SYSGO        DD   DSN=&LOADSET,UNIT=SYSDA,SPACE=(CYL,(5,1)),\n//             DISP=(MOD,PASS),DCB=BLKSIZE=12240\n//SYSABEND  DD SYSOUT=A\n//SYSIN DD DSN=TX15500.CBT811T.PDS(STATS),DISP=SHR\n// EXEC TESTLINK,SO=6,LIB='SYS2.MLINKLIB',\n// NAME=CBT811T\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STATS": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x821\\x8f\\x00\\x821\\x8f\\x165\\tN\\tN\\x00\\x00\\xc8\\xc1\\xc2\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-11-14T00:00:00", "modifydate": "1982-11-14T16:35:00", "lines": 2382, "newlines": 2382, "modlines": 0, "user": "HABL"}, "text": "STATS TITLE 'VERSION 2.0 --DISK DATA SET STATISTICS--  A. BRUCE LELAND'\n* DATA SET STATS AT LEVEL 2 AS OF  6/15/82  (ABL - MORE STATS)        *\n* DATA SET STATS AT LEVEL 1 AS OF  9/23/77  (ORIGINAL VERSION)        *\n*                                                                     *\n*                                                                     *\n* PROGRAMMER:  A. BRUCE LELAND                                        *\n*                                                                     *\n*                                                                     *\n* DESCRIPTION:  THIS PROGRAM FORMATS INFORMATION ON ANY DISK DATA     *\n*     SET.  IT READS THROUGH THE ENTIRE DATA SET AND OUTPUTS DISK     *\n*     TRACK USAGE, RECORD SIZES, COUNTS AND OTHER STATISTICS.         *\n*                                                                     *\n*     IN ADDITION, SEVERAL DATA SET VALIDITY CHECKS ARE PERFORMED     *\n*     DURING INPUT PROCESSING TO INSURE THAT THE DATA SET WILL BE     *\n*     USABLE BY THE SYSTEM FOR NON-EXCP PROCESSING.                   *\n*                                                                     *\n*     IF ANY ERRORS ARE ENCOUNTERED, THE RETURN CODE IS SET TO 4095   *\n*     (OR THE PROGRAM ABENDS); OTHERWISE, THE RETURN CODE IS SET      *\n*     TO THE MINIMUM OF 4094 AND THE NUMBER OF TRACKS WHICH SHOULD    *\n*     COMPRESS OUT FOR PARTITIONED DATA SETS.                         *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* DEFINITIONS (FOR PARTITIONED DATA SETS):                            *\n*                                                                     *\n*     A.  REAL MEMBER - A NON-ALIAS MEMBER NAME WHICH IS PRESENT IN   *\n*         THE DIRECTORY.                                              *\n*                                                                     *\n*     B.  GAS MEMBER - A MEMBER OF A PARTITIONED DATA SET WHICH HAS   *\n*         BEEN REPLACED OR DELETED FROM THE DATA SET.  A GAS MEMBER   *\n*         DOES NOT HAVE AN ENTRY IN THE DIRECTORY POINTING TO IT;     *\n*         DISK STORAGE OCCUPIED BY GAS MEMBERS IS MADE USABLE FOR     *\n*         OTHER MEMBERS BY AN IEBCOPY COMPRESS OPERATION.             *\n*                                                                     *\n*         NOTE: GAS MEMBERS CAN BE RESURRECTED BY THE TSO PDS COMMAND *\n*         IF IT IS GIVEN THE BEGINNING TTR ADDRESS AND A MEMBER NAME. *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* PROGRAM PARM (ONLY THE FIRST PARM CHARACTER IS SIGNIFICANT;         *\n*               AT MOST ONE OF THE FOLLOWING MAY BE SPECIFIED):       *\n*                                                                     *\n*     A.  LABELONLY  - LABEL INFORMATION IS TO BE FORMATTED BUT NO    *\n*                      DATA SET READS ARE TO BE PERFORMED (EXCEPT     *\n*                      THE READ FOR ANY ISAM FORMAT 2 DSCB).          *\n*                                                                     *\n*     B.  NOGAS      - NO GAS MEMBER REPORT IS TO BE PROVIDED FOR     *\n*                      PARTITIONED DATA SETS.                         *\n*                                                                     *\n*     C.  ERRORSONLY - ONLY ERROR MESSAGES ARE TO BE OUTPUT.          *\n*                                                                     *\n*     D.  ALLEXTENTS - ALL EXTENTS OF THE DATA SET ARE TO BE READ     *\n*                      REGARDLESS OF THE DS1LSTAR SETTING.            *\n*                                                                     *\n         EJECT                                                        *\n*                                                                     *\n* OPERATION:                                                          *\n*                                                                     *\n*     A.  THE PROGRAM PERFORMS A RDJFCB TO GET THE DSNAME AND VOLUME  *\n*         NAME; AN OBTAIN TO GET THE FORMAT 1 DSCB; A DEVTYPE TO GET  *\n*         THE DEVICE CHARACTERISTICS; AND AN OPEN TO INITIALIZE THE   *\n*         DATA SET'S DATA EXTENT BLOCK (DEB) INFORMATION.             *\n*                                                                     *\n*     B.  THE PROGRAM FORMATS AND OUTPUTS DEB AND DSCB INFORMATION.   *\n*                                                                     *\n*     C.  THE PROGRAM THEN READS THROUGH THE DATA SET AND OUTPUTS     *\n*         DISK TRACK USAGE, RECORD SIZES, COUNTS AND OTHER STATISTICS.*\n*                                                                     *\n*     D.  ADDITIONAL PROCESSING:                                      *\n*                                                                     *\n*         1. FOR PHYSICAL SEQUENTIAL, DIRECT OR VSAM DATA SETS, NO    *\n*            ADDITIONAL PROCESSING IS PERFORMED.                      *\n*                                                                     *\n*         2. FOR ISAM DATA SETS, THE PROGRAM READS THROUGH THE        *\n*            ENTIRE DATA SET (THERE MAY BE SEVERAL FILES OF DATA)     *\n*            AND REPORTS ON EACH FILE.  ALSO, THE PROGRAM INPUTS      *\n*            THE ISAM LABEL (FORMAT TWO DSCB) RECORD AND PROVIDES     *\n*            A DATA SET PROFILE WHICH INCLUDES DATA SET               *\n*            REORGANIZATION DATA AND DATA SET CHARACTERISTICS.        *\n*                                                                     *\n*         3. FOR PARTITIONED DATA SETS, IF THE DATA SET NAME AND A    *\n*            MEMBER NAME IS ALLOCATED TO THE INPUT DATA SET, THE      *\n*            MEMBER IS PROCESSED LIKE A SEQUENTIAL DATA SET.          *\n*                                                                     *\n*         4. FOR OTHER PARTITIONED DATA SETS, THE PROGRAM COMPARES    *\n*            DIRECTORY TTR'S AGAINST ACTUAL DISK ADDRESSES TO         *\n*            PROVIDE A REPORT BY GAS MEMBER:                          *\n*            A.  FOR LOAD LIBRARIES, THE LINKAGE-EDIT DATE AND THE    *\n*                NAMES OF THE FIRST FEW CSECTS ARE PROVIDED.          *\n*            B.  FOR OTHER LIBRARIES, THE FIRST 79 CHARACTERS OF      *\n*                EACH GAS MEMBER IS OUTPUT.                           *\n*            STATISTICS ARE MAINTAINED ON THE SIZE OF GAS AND REAL    *\n*            MEMBERS AND THE NUMBER OF ALIAS MEMBERS.  STATS CHECKS   *\n*            FOR ALIASES WHICH HAVE NO REAL ENTRIES AND APPARENT      *\n*            ALIASES (TWO REAL MEMBERS WITH THE SAME TTR).            *\n*                                                                     *\n*                                                                     *\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n*                                                                     *\n* PLEASE REPORT ANY PROBLEMS, ENHANCEMENTS, SUGGESTIONS OR COMMENTS   *\n* CONCERNING THE STATS PROGRAM TO:                                    *\n*                                                                     *\n*     A. BRUCE LELAND           OR         A. BRUCE LELAND            *\n*     HITACHI AMERICA, LTD.                6084 CRIMSON DRIVE         *\n*     1800 BERING DRIVE                    SAN JOSE, CALIF 95120      *\n*     SAN JOSE, CALIF. 95112                                          *\n*     (408) 292-6404                       (408) 997-2366             *\n*                                                                     *\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n         EJECT\n*                                                                     *\n*   CHANGE SECTION:                                                   *\n*                                                                     *\n*     VERSION 1.0: STATS WAS WRITTEN FOR A UCLA PROGRAMMING CLASS     *\n*                                                                     *\n*     VERSION 1.1: MODIFIED TO ALLOW 3000 MEMBERS (INSTEAD OF 1000)   *\n*                                                                     *\n*     VERSION 2.0: ADDED MORE STATISTICS:                             *\n*                                                                     *\n*       A.  ADDED THE ALLEXTENTS AND ERRORSONLY PARM CONTROLS         *\n*                                                                     *\n*       B.  ADDED VSAM SUPPORT                                        *\n*                                                                     *\n*       C.  ADDED RECORD SIZE DISTRIBUTION OUTPUTS                    *\n*                                                                     *\n*       D.  ADDED LRECL STATISTICS AND VALIDITY CHECKS.               *\n*                                                                     *\n*       E.  ADDED CREATION, EXPIRATION AND LAST USE DATES.            *\n*                                                                     *\n*       F.  SUPPORTED DISK DEVICES: 2305-1, 2305-2, 2314,             *\n*           3330, 3330-1, 3340, 3350, 3375 AND 3380.                  *\n*                                                                     *\n*       G.  ADDED MORE INFORMATION FOR I/O AND OTHER ERROR CONDITIONS.*\n*                                                                     *\n*       H.  ADDED SUPPORT FOR TRACK OVERFLOW DATA SETS.               *\n*                                                                     *\n*       I.  UNPRINTABLE CHARACTERS (FOR A 3270-TYPE DEVICE) IN THE    *\n*           OUTPUT ARE TRANSLATED TO PERIODS.                         *\n*                                                                     *\n*                                                                     *\n*       J.  MADE THE FOLLOWING CHANGES FOR PARTITIONED DATA SETS:     *\n*                                                                     *\n*           1.  ADDED GAS MODULE LINKAGE-EDIT DATE AND CSECT NAMES    *\n*                                                                     *\n*           2.  FIXED A BUG: THE REPORTED TTR OF GAS MEMBERS WAS      *\n*               SOMETIMES INCORRECT (A TRACK SWITCH CHECK WAS MISSED).*\n*                                                                     *\n*           3.  ENHANCED THE COMPRESS ALGORITHM: INSTEAD OF ESTI-     *\n*               MATING POTENTIAL FREE TRACKS FROM (TOTAL GAS SIZE)/   *\n*               (AVERAGE BYTES ON A TRACK); A COMPRESS IS NOW SIMU-   *\n*               LATED.  THE FORMER CALCULATION WORKED WELL ONLY FOR   *\n*               LIBRARIES WITH BLOCKSIZES WHICH DID NOT VARY.         *\n*                                                                     *\n*           4.  ADDED DIRECTORY BLOCK STATISTICS.                     *\n*                                                                     *\n*           5.  ADDED A CHECK FOR APPARENT ALIAS MEMBERS (TWO REAL    *\n*               MEMBERS WITH THE SAME TTR).                           *\n*                                                                     *\n*           6.  ADDED REAL AND GAS MEMBER TOTAL BYTE COUNTS.          *\n*                                                                     *\n*           7.  THE MEMBER TABLE IS NOW DYNAMICALLY ALLOCATED; ITS    *\n*               SIZE IS DOUBLED EACH TIME IT IS EXCEEDED.             *\n*                                                                     *\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n         EJECT\n         MACRO\n&LBL     OUTPT   &R0,&R1,&ERR=RTN   OUTPUT MACRO -- NUMBER AND STRING\n&LBL     LA      R1,&R1             STRING TO FOLLOW\n         LA      R15,L'&R1          LENGTH OF STRING\n         AIF     ('&R0' EQ 'R0').NOR0\n         L       R0,&R0             NUMBER TO BE OUTPUT\n.NOR0    BAL     R14,OUT&ERR        OUTPUT ROUTINE\n         AIF     ('&R1' NE 'WORK').MEND\n         MVC     WORK(80),BLANKS    BLANK THE WORK AREA\n.MEND    MEND\n         SPACE 3\n         MACRO\n&LBL     OUTSTR  &R1,&LN=0,&ERR=RTN OUTPUT MACRO -- CHARACTER STRING\n&LBL     LA      R1,&R1             STRING TO FOLLOW\n         AIF     ('&LN' EQ '0').LENR1\n         LA      R15,L'&LN          LENGTH OF STRING\n         AGO     .BAL\n.LENR1   LA      R15,L'&R1          LENGTH OF STRING\n.BAL     BAL     R14,OUT&ERR.S      OUTPUT ROUTINE\n         AIF     ('&R1' NE 'WORK').MEND\n         MVC     WORK(80),BLANKS    BLANK THE WORK AREA\n.MEND    MEND\n         SPACE 3\n         MACRO\n&LBL     TTRMBB  &TTR,&MBB=DOUBLE  TTR TO MBBCCHHR CONVERSION MACRO\n&LBL     STM     R14,R12,12(R13)\n         ICM     R0,7,&TTR         GET FIRST THREE BYTES\n         SLL     R0,8              ADJUST\n         L       R1,DCBDEBAD       DEB ADDRESS\n         LA      R2,&MBB           RESULT ADDRESS\n         LR      R3,R13            SAVE SAVEAREA REGISTER\n         L       R15,16            CVT POINTER\n         L       R15,28(,R15)      TTRN->MBBCCHHR ROUTINE ADDRESS\n         BALR    R14,R15\n         LR      R13,R3\n         LM      R14,R12,12(R13)\n         MEND\n         EJECT\n         MACRO\n&LBL     MBBTTR  &MBB,&TTR=TEMP    MBBCCHHR TO TTR CONVERSION MACRO\n&LBL     STM     R14,R12,12(R13)\n         LA      R2,&MBB           MBBCCHHR TO CONVERT\n         L       R1,DCBDEBAD       DEB ADDRESS\n         LR      R3,R13            SAVE SAVEAREA REGISTER\n         L       R15,16            CVT POINTER\n         L       R15,32(,R15)      MBBCCHHR->TTRN ROUTINE ADDRESS\n         BALR    R14,R15\n         LR      R13,R3\n         ST      R0,12+4+4(,R13)   SAVE R0\n         LM      R14,R12,12(R13)\n         ST      R0,&TTR           SAVE RESULT TTRN\n         MEND\n         SPACE 3\n         MACRO\n&LBL     HEXES   &SRC,&NUM,&OUT     OUTPUT LOOKS LIKE C1.C2.C3 . . .\n         LCLC    &ONE                    FOR NUM SOURCE CHARACTERS\n&ONE     SETC    'HX'.'&SYSNDX'\n&LBL     SR      R15,R15\n         LA      R14,&NUM\n         LR      R1,R14\n         BCTR    R1,0\n         LA      R1,&NUM.(R1,R1)    LAST PERIOD AT (N-1)*3+1\n         LA      R1,&OUT.-2(R1)     OUTPUT START LOCATION\n&ONE     LA      R15,&SRC           SOURCE BASE ADDRESS\n         SR      R0,R0\n         BCTR    R15,0\n         IC      R0,0(R14,R15)      INPUT CHARACTER\n         LR      R15,R0\n         N       R15,=F'15'\n         IC      R15,HEXTBL(R15)\n         STC     R15,2(,R1)         LOW NIBBLE\n         LR      R15,R0\n         SRL     R15,4\n         IC      R15,HEXTBL(R15)\n         STC     R15,1(,R1)         HIGH NIBBLE\n         C       R14,=F'1'          LAST DIGIT?\n         BE      *+8                YES, BRANCH\n         MVI     0(R1),C'.'         SEPARATOR\n         SH      R1,=H'3'           BACK UP 3 IN OUTPUT ADDRESS\n         BCT     R14,&ONE           DO PREVIOUS INPUT CHARACTER\n         MEND\n         EJECT\n         PRINT NOGEN\nSTATS    CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SAVE  (14,12),,*\n         LR    R9,R15\n         LA    R12,2048\n         LA    R10,2048(R9,R12)\n         LA    R11,2048(R10,R12)\n         LA    R12,2048(R11,R12)\n         USING STATS,R9,R10,R11,R12\n         ST    R13,SAVE+4\n         LR    R2,R13\n         LA    R13,SAVE\n         ST    R13,8(R2)\n         LA    R8,IN\n         USING IHADCB,R8\n         L     R2,0(,R1)            PARM ADDRESS\n         LH    R3,0(,R2)\n         LTR   R3,R3                IS LENGTH ZERO?\n         BZ    OPENIT               YES, BRANCH\n         SPACE 2\n         CLI   2(R2),C'N'           GAS RECORDS DESIRED?\n         BNE   *+8                  YES, BRANCH\n         NI    FLAGS,255-GAS        NO, TURN OFF GAS RECORDS\n         SPACE 1\n         CLI   2(R2),C'A'           ALL EXTENTS DESIRED?\n         BNE   *+8                  YES, BRANCH\n         OI    FLAGS,ALLXTNT        NO, TURN ON ALLXTNT\n         SPACE 1\n         CLI   2(R2),C'E'           ERROR MESSAGES ONLY?\n         BNE   *+8                  YES, BRANCH\n         OI    FLAGS,ERRONLY        NO, TURN ON ERRONLY\n         SPACE 1\n         CLI   2(R2),C'L'           LABEL INFORMATION ONLY?\n         BNE   *+8                  NO, BRANCH\n         OI    FLAGS,LABELS         YES, SET THE LABELONLY FLAG\n         EJECT\nOPENIT   BAL   R14,OPENIN           OPEN THE INPUT FILE\n         OUTSTR PROGRAM             PROGRAM NAME AND PURPOSE\n         SPACE 1\n         LTR   R3,R3                ANY PARM?\n         BZ    OPENIT2              NO, BRANCH\n         OUTSTR BLANKS\n         BCTR  R3,0                 MACHINE LENGTH\n         MVC   WORK+5(5),=C'PARM='  PARM IDENTIFIER\n         MVC   WORK+10(*-*),2(R2)   <<EXECUTED>>\n         EX    R3,*-6               MOVE IN THE PARM FIELD\n         CLI   FLAGS,GAS            FLAGS CHANGED?\n         BNE   *+10                 YES, BRANCH\n         MVC   WORK+24(32),=C'(INVALID, DEFAULTS WILL BE USED)'\n         OUTSTR WORK\nOPENIT2  OUTSTR BLANKS\n         OUTSTR BLANKS\n         SPACE 1\n         DEVTYPE INDD,DEVAREA,DEVTAB  GET DEVICE CHARACTERISTICS\n         SPACE 2\n         MVC   WORK(12),=C'//IN DD DSN='\n         MVC   WORK+12(44),JFCBDSNM DATA SET NAME\n         LA    R1,WORK+12\n         SPACE 1\n         A     R1,=F'1'             SCAN FOR\n         CLI   0(R1),X'40'                  FINAL\n         BNE   *-8                               BLANK\n         SPACE 1\n         TM    DS1DSORG,DS1DSGPO    PARTITIONED DATA SET ORGANIZATION?\n         BNO   NOELMENT             NO, BRANCH\n         CLI   JFCBELNM,X'40'       ANY PDS MEMBER NAME\n         BE    NOELMENT             NO, BRANCH\n         MVI   DS1DSORG,DS1DSGPS    CHANGE DSORG TO SEQUENTIAL\n         MVC   BLDLMEM,JFCBELNM     MEMBER NAME\n         MVI   0(R1),C'('           FIRST PARENTHESIS\n         MVC   1(8,R1),BLDLMEM      MEMBER NAME\n         SPACE 1\n         A     R1,=F'1'             SCAN FOR\n         CLI   0(R1),X'40'                  FINAL\n         BNE   *-8                               BLANK\n         SPACE 1\n         MVI   0(R1),C')'           LAST PARENTHESIS\n         A     R1,=F'1'             ALLOW FOR IT\nNOELMENT MVC   0(9,R1),=CL9',VOL=SER='\n         MVC   9(6,R1),JFCBVOLS     ADD THE VOLUME SERIAL\n         LA    R1,9(,R1)            SKIP OVER ,VOL=SER=\n         SPACE 1\n         A     R1,=F'1'             SCAN FOR\n         CLI   0(R1),X'40'                  FINAL\n         BNE   *-8                               BLANK\n         SPACE 1\n         MVI   0(R1),C','\n         OUTSTR WORK\n         EJECT\n         MVC   WORK(2),=C'//'      FORMAT THE DCB INFORMATION\n         MVC   WORK+8(12),=CL12'DCB=(RECFM=*'\n         LA    R1,WORK+8+11\n         TM    DS1RECFM,X'C0'     RECFM=U?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'U'\n         B     DCBCONVA\n         TM    DS1RECFM,X'80'     RECFM=F?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'F'\n         B     DCBCONVA\n         TM    DS1RECFM,X'40'     RECFM=V?\n         BNO   *+8                NO, BRANCH\n         MVI   0(R1),C'V'\n         SPACE  1\nDCBCONVA A     R1,=F'1'\n         TM    DS1RECFM,X'10'     RECFM=.B?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'B'\n         A     R1,=F'1'\n         TM    DS1RECFM,X'08'     RECFM=.S?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'S'\n         A     R1,=F'1'\n         TM    DS1RECFM,X'20'     RECFM=.T?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'T'\n         A     R1,=F'1'\n         TM    DS1RECFM,X'04'     RECFM=.A?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'A'\n         A     R1,=F'1'\n         TM    DS1RECFM,X'02'     RECFM=.M?\n         BNO   *+12               NO, BRANCH\n         MVI   0(R1),C'M'\n         A     R1,=F'1'\n         SPACE 1\n         TM    DS1RECFM,X'C0'     RECFM=U?\n         BO    DCBCONVC           YES, NO LRECL MESSAGE\n         MVC   0(7,R1),=CL7',LRECL='\n         LA    R1,7(,R1)\n         LH    R15,DS1LRECL\n         CVD   R15,DOUBLE\n         UNPK  DOUBLE(5),DOUBLE+5(3)\n         LA    R15,DOUBLE-1\n         A     R15,=F'1'          SCAN\n         CLI   0(R15),C'0'            PAST LAST\n         BE    *-8                             LEADING ZERO\n         OI    DOUBLE+4,X'F0'\nDCBCONVB MVC   0(1,R1),0(R15)     MOVE IN EACH CHARACTER\n         A     R1,=F'1'\n         A     R15,=F'1'\n         TM    0(R15),X'F0'       NEXT CHARACTER NUMERIC?\n         BO    DCBCONVB           NO, BRANCH\n         EJECT\nDCBCONVC MVC   0(9,R1),=CL9',BLKSIZE='\n         LA    R1,9(,R1)\n         LH    R15,DS1BLKL\n         CVD   R15,DOUBLE\n         UNPK  DOUBLE(5),DOUBLE+5(3)\n         LA    R15,DOUBLE-1\n         A     R15,=F'1'          SCAN\n         CLI   0(R15),C'0'            PAST LAST\n         BE    *-8                             LEADING ZERO\n         OI    DOUBLE+4,X'F0'\nDCBCONVD MVC   0(1,R1),0(R15)     MOVE IN EACH CHARACTER\n         A     R1,=F'1'\n         A     R15,=F'1'\n         TM    0(R15),X'F0'       NEXT CHARACTER NUMERIC?\n         BO    DCBCONVD           NO, BRANCH\n         SPACE 1\n         SR    R0,R0\n         ICM   R0,1,DS1KEYL       KEYLENGTH=0?\n         BZ    DCBCONVG           YES, BRANCH\n         MVC   0(8,R1),=CL8',KEYLEN='\n         LA    R1,8(,R1)\n         CVD   R0,DOUBLE\n         UNPK  DOUBLE(5),DOUBLE+5(3)\n         LA    R15,DOUBLE-1\n         A     R15,=F'1'          SCAN\n         CLI   0(R15),C'0'            PAST LAST\n         BE    *-8                             LEADING ZERO\n         OI    DOUBLE+4,X'F0'\nDCBCONVE MVC   0(1,R1),0(R15)     MOVE IN EACH CHARACTER\n         A     R1,=F'1'\n         A     R15,=F'1'\n         TM    0(R15),X'F0'       NEXT CHARACTER NUMERIC?\n         BO    DCBCONVE           NO, BRANCH\n         SPACE 1\n         MVC   0(5,R1),=CL5',RKP='\n         LA    R1,5(,R1)\n         ICM   R0,3,DS1RKP\n         CVD   R0,DOUBLE\n         UNPK  DOUBLE(5),DOUBLE+5(3)\n         LA    R15,DOUBLE-1\n         A     R15,=F'1'          SCAN\n         CLI   0(R15),C'0'            PAST LAST\n         BE    *-8                             LEADING ZERO\n         OI    DOUBLE+4,X'F0'\nDCBCONVF MVC   0(1,R1),0(R15)     MOVE IN EACH CHARACTER\n         A     R1,=F'1'\n         A     R15,=F'1'\n         TM    0(R15),X'F0'       NEXT CHARACTER NUMERIC?\n         BO    DCBCONVF           NO, BRANCH\n         EJECT\nDCBCONVG MVC   0(9,R1),=CL9',DSORG=**'\n         LA    R1,7(,R1)\n         TM    DS1DSORG,DS1DSGPS  PS?\n         BNO   *+10               NO, BRANCH\n         MVC   0(2,R1),=CL2'PS'\n         TM    DS1DSORG,DS1DSGPO  PO?\n         BNO   *+10               NO, BRANCH\n         MVC   0(2,R1),=CL2'PO'\n         TM    DS1DSORG,DS1DSGDA  DA?\n         BNO   *+10               NO, BRANCH\n         MVC   0(2,R1),=CL2'DA'\n         TM    DS1DSORG,DS1DSGIS  IS?\n         BNO   *+10               NO, BRANCH\n         MVC   0(2,R1),=CL2'IS'\n         TM    DS1DSORG+1,DS1ACBM VSAM?\n         BNO   *+10               NO, BRANCH\n         MVC   0(2,R1),=CL2'VS'\n         TM    DS1DSORG,DS1DSGU   UNMOVEABLE?\n         BNO   *+12               NO, BRANCH\n         MVI   2(R1),C'U'\n         A     R1,=F'1'\n         MVI   2(R1),C')'\n         OUTSTR WORK\n         EJECT\n         OUTSTR BLANKS\n         OUTSTR DATEHDR\n         OUTSTR DATEUND\n         LA    R1,DS1CREDT\n         BAL   R14,CONVLABL\n         MVC   WORK+10(8),0(R1)\n         LA    R1,DS1EXPDT\n         BAL   R14,CONVLABL\n         MVC   WORK+20(8),0(R1)\n         LA    R1,DS1REFD\n         BAL   R14,CONVLABL\n         MVC   WORK+31(8),0(R1)\n         MVC   WORK+42(2),=C'ON'  ASSUME DATA SET IS CHANGED\n         TM    DS1DSIND,DS1DSCHA  CORRECT?\n         BO    *+10               YES, BRANCH\n         MVC   WORK+42(3),=C'OFF' NO, SAY UPDATE BIT IS OFF\n         MVC   WORK+55(4),=C'NONE'  ASSUME NO SECURITY\n         TM    DS1DSIND,DS1IND40+DS1IND10+DS1IND04  CORRECT?\n         BZ    DATEWORK                             YES, BRANCH\n         MVC   WORK+55(12),=C'RACF DEFINED'         ASSUME RACF-DEFINED\n         TM    DS1DSIND,DS1IND40                    CORRECT?\n         BO    DATEWORK                             YES, BRANCH\n         MVC   WORK+55(15),=C'WRITE PROTECTED'      ASSUME WRITE PROT.\n         TM    DS1DSIND,DS1IND10+DS1IND04           CORRECT?\n         BO    DATEWORK                             YES, BRANCH\n         MVC   WORK+55(20),=C'READ/WRITE PROTECTED' NO, READ AND WRITE\nDATEWORK OUTSTR WORK\n         OUTSTR BLANKS\n         L     R1,DCBDEBAD\n         L     R14,NUMEXT           NUMBER OF EXTENTS\n         SR    R0,R0\n         AH    R0,46(,R1)           TRACKS IN THE EXTENT\n         LA    R1,16(,R1)           OFFSET BETWEEN EXTENTS\n         BCT   R14,*-8              REPEAT FOR EACH EXTENT\n         ST    R0,TOTALTRK          SAVE TRACK TOTAL\n         LH    R2,DS1LSTAR          LAST TT USED\n         CLI   DS1LSTAR+2,X'00'     LAST TRACK ACTUALLY USED?\n         BE    *+8                  NO, BRANCH\n         A     R2,=F'1'             YES, ADD ONE MORE TRACK\n         SR    R0,R2                AVAILABLE SPACE\n         ST    R0,AVAILTRK\n         TTRMBB DS1LSTAR,MBB=LASTMBB      LAST USED MBBCCHHR\n         OUTPT TOTALTRK,NUMTRKS\n         TM    DS1DSORG,DS1DSGIS          ISAM DATA SET?\n         BO    ALLOC1                     YES, BRANCH\n         TM    DS1DSORG+1,DS1ACBM         VSAM DATA SET?\n         BO    ALLOC1                     YES, BRANCH\n         ICM   R0,15,AVAILTRK             ANY AVAILABLE TRACKS?\n         BZ    FREENONE                   NO, BRANCH\n         OUTPT R0,FRETRKS                 NUMBER OF FREE TRACKS\n         B     FREESOME\nFREENONE OUTSTR FRENONE                   NO FREE TRACKS\n         EJECT\nFREESOME SR    R0,R0\n         ICM   R0,3,DS1TRBAL\n         OUTPT R0,TRBALS                  BYTES LEFT ON LAST USED TRACK\nALLOC1   TM    DS1SCALO,X'C0'                         CYLINDER ALLOC?\n         BNO   *+14                                   NO, BRANCH\n         MVC   SCALOS+25(9),=CL9'CYLINDERS'           YES\n         B     ALLOCS\n         SPACE 1\n         BNZ   *+14                                   ABS. TRACKS\n         MVC   SCALOS+25(15),=CL15'ABSOLUTE TRACKS'   YES\n         B     ALLOCS\n         SPACE 1\n         TM    DS1SCALO,X'80'                         TRACKS?\n         BO    ALLOCS                                 YES, BRANCH\n         SPACE 1\n         MVC   SCALOS+25(6),=CL6'BLOCKS'              BLOCKS\n         TM    DS1SCALO,X'01'                         ROUND TO CYL?\n         BNO   ALLOCS                                 NO, BRANCH\n         MVC   SCALOS+32(12),=CL12'(WITH ROUND)'      YES\n         SPACE 2\nALLOCS   OUTSTR SCALOS\n         SR    R0,R0\n         ICM   R0,7,DS1SCALO+1    ANY SECONDARIES ALLOCATED?\n         BNZ   SECS               YES, BRANCH\n         OUTSTR NOSEC             NO, MESSAGE\n         B     ALLSECS\nSECS     OUTPT R0,EXTENTS\n         SPACE 2\nALLSECS  HEXES DS1LSTAR,3,LSTAR+12  TTR FORM\n         CVD   R2,DOUBLE            TRACKS ACTUALLY USED\n         MVC   LSTAR+26+1(5),=X'2020202120'\n         ED    LSTAR+26(6),DOUBLE+5\n         OUTSTR LSTAR\n         OUTSTR BLANKS\n         EJECT\n         OUTSTR EXTHDR\n         OUTSTR EXTUND\n         L     R2,DCBDEBAD\n         L     R3,NUMEXT\n         SR    R4,R4              EXTENT NUMBER\n         SR    R5,R5              BEGINNING TT OF TTR\n         SPACE 2\nHEXAGN   CVD   R4,DOUBLE\n         A     R4,=F'1'           NEXT EXTENT\n         MVC   WORK+1(5),=X'2020202120'\n         ED    WORK(6),DOUBLE+5\n         L     R1,32(R2)          UCB ADDRESS\n         MVC   WORK+08(3),13(R1)  UCB\n         MVC   WORK+13(6),28(R1)  VOLUME SERIAL\n         LH    R6,46(,R2)         NUMBER OF TRACKS IN THIS EXTENT\n         LR    R0,R5              START OF THIS EXTENT\n         AR    R5,R6              START OF NEXT EXTENT\n         LA    R1,1\n         SLL   R1,24\n         SLDL  R0,8\n         ST    R0,TEMP            TTR WHERE R=01\n         HEXES TEMP+1,3,WORK+21   CONVERT TO TT.TT.RR\n         LR    R0,R5              START OF NEXT EXTENT\n         BCTR  R0,0               START OF NEXT EXTENT -1\n         LA    R1,X'FF'           RR=X'FF'\n         SLL   R1,24\n         SLDL  R0,8\n         ST    R0,TEMP            TTR WHERE R=FF\n         HEXES TEMP+1,3,WORK+31   CONVERT TO TT.TT.RR\n         CVD   R6,DOUBLE          TRACKS IN THIS EXTENT\n         MVC   WORK+41+1(5),=X'2020202120'\n         ED    WORK+41(6),DOUBLE+5\n         HEXES 38(R2),4,WORK+49   FIRST CC.HH FOR THIS EXTENT\n         HEXES 42(R2),4,WORK+62   SECOND CC.HH FOR THIS EXTENT\n         MVC   WORK+75(3),=C'YES' ASSUME CYLINDER BOUNDARIES\n         CLC   40(2,R2),=H'0'     FIRST HHHH=0?\n         BE    *+10               YES, BRANCH\n         MVC   WORK+75(3),=C'NO ' NOT CYLINDER BOUNDARIES\n         LH    R1,44(,R2)         SECOND HHHH\n         A     R1,=F'1'           PLUS ONE\n         CH    R1,DEVTRKCY        HHHH=MAXIMUM FOR DEVICE?\n         BE    *+10               YES, BRANCH\n         MVC   WORK+75(3),=C'NO ' NOT CYLINDER BOUNDARIES\n         OUTSTR WORK\n         LA    R2,16(,R2)         NEXT EXTENT DISPLACEMENT\n         BCT   R3,HEXAGN\n         EJECT\n         TM    FLAGS,LABELS       LABELONLY DESIRED?\n         BO    END2               YES, DO NOT DO ANY READS\n         OUTSTR BLANKS\n         OUTSTR BLANKS\n         TM    DS1DSORG,DS1DSGPO  PARTITIONED DATA SET?\n         BO    PO                 YES, BRANCH\n         CLI   BLDLMEM,X'40'      ANY MEMBER NAME ENTERED?\n         BE    INPUTS             NO, BRANCH\n         BLDL  IN,BLDLPARM        GET THE TTR FOR THIS MEMBER\n         LTR   R15,R15            FIND IT?\n         BZ    MEMBER2            YES, BRANCH\n         MVC   MEMBERNO(8),BLDLMEM  MEMBER NAME\n         OUTSTR MEMBERNO,ERR=ERR\n         ABEND 13\n         SPACE 2\nMEMBER2  TTRMBB BLDLTTR,MBB=IOBSEEK  CONVERT TTR TO MBBCCHHR\n         L     R1,DCBDEBAD        DEB ADDRESS\n         LA    R1,16(,R1)         CURRENT EXTENT POINTER - 16\n         SPACE 1\n         SR    R15,R15\nMEMBER4  LA    R1,16(,R1)         NEXT EXTENT POINTER\n         CLM   R15,1,IOBSEEK      THIS EXTENT?\n         LA    R15,1(,R15)\n         BNE   MEMBER4            NO, BRANCH\n         SPACE 2\n         ST    R1,CUREXT          UPDATE FOR LATER\n         SR    R0,R0\n         IC    R0,IOBSEEK+7       REDUCE\n         S     R0,=F'1'                 INITIAL RECORD\n         STC   R0,IOBSEEK+7                           NUMBER\n         LA    R15,4              EARLY EXIT FLAG\n         ST    R15,EXCPR15        SAVE FOR EXCP ROUTINE\n         LA    R14,INPUTS         RETURN ADDRESS\n         ST    R14,EXCPR14        SAVE FOR EXCP ROUTINE\n         B     INITREAD\n         EJECT\nINPUTS   BAL   R14,EXCPSTAT       READ EACH BLOCK AND COLLECT STATS\n         LTR   R15,R15            END OF FILE?\n         BZ    INPUTS             NO, CONTINUE READING\n         LR    R2,R15             SAVE FOR LATER\n         OUTSTR EOFSS\n         TM    FLAGS,ALLXTNT      ALL EXTENTS DESIRED?\n         BO    INPUTS2            YES, BRANCH\n         TM    DS1DSORG,DS1DSGIS  ISAM DATA SET?\n         BNO   ENDDATA            NO, BRANCH -- END OF DATA SET\n         SPACE 1\nINPUTS2  CLC   MINBLKI,=F'33000'  EVER CHANGED?\n         BNE   *+10               YES, BRANCH\n         SR    R14,R14            NO, RESET TO ZERO\n         ST    R14,MINBLKI\n         OUTPT MINBLKI,STATBLKS\n         LA    R14,1\n         C     R14,READTOTI\n         BH    *+8\n         L     R14,READTOTI       TAKE MAX OF READTOTI AND 1\n         L     R1,READTOTI\n         SRL   R1,1\n         A     R1,BYTECNTI\n         SR    R0,R0\n         DR    R0,R14             AVG BLK= (BYTECNTI + READTOTI/2) /\n         LR    R0,R1                        MAX( READTOTI, 1)\n         OUTPT R0,STATBLKS\n         OUTPT MAXBLKI,STATBLKS\n         OUTPT READTOTI,NUMBLKS\n         MVC   STATBLKS+7(7),=C'MINIMUM'  RESET THE MESSAGE TEXT\n         MVC   MINBLKI,=F'33000'  RESET\n         SR    R14,R14                 THE\n         ST    R14,READTOTI               FILE\n         ST    R14,MAXBLKI                    STATISTICS\n         ST    R14,BYTECNTI                             VARIABLES\n         CH    R2,=H'4'           END OF DATA SET?\n         BH    ENDDATA            YES, BRANCH\n         OUTSTR BLANKS\n         B     INPUTS             NO, REPORT ON NEXT SEGMENT\n*\nENDDATA  OUTSTR BLANKS\n         L     R0,READTOT\n         LTR   R0,R0              ANY RECORDS READ?\n         BP    ENDDSET            YES, NORMAL DATA SET\n         OUTSTR NULL              NO RECORDS IN THE DATA SET\n         B     END2               QUIT\n         EJECT\nPO       OI    FLAGS,DIRECTOR       TURN ON THE \"IN DIRECTORY\" FLAG\n         SR    R0,R0\n         ICM   R0,1,DS1NOBDB        LAST DIRECTORY BLOCK IN USE?\n         BZ    GETMTBL              NO, BRANCH\n         OUTPT R0,NOBDBS\n         OUTSTR BLANKS\n         SPACE 2\nGETMTBL  L     R0,MBRCOUNT          ELEMENTS IN THE MEMBER TABLE\n         SLL   R0,4                 16 WIDE\n         GETMAIN R,LV=(0)\n         SH    R1,=H'16'            BACK UP ONE ENTRY\n         ST    R1,SAVETBL           SAVE TABLE START -16\n         LR    R5,R1                INITIALIZE R5\n         SPACE 2\nNEXTMBR  BAL   R14,MEMBERS          GET THE NEXT MEMBER\n         B     *+4(R15)             BRANCH TABLE\n         B     GOODMBR              SUCCESSFUL\n         B     MBREOF               EOF IN DIRECTORY\n         B     LASTUSED             LAST USED ENTRY FOUND\n         B     NOTDIREC             NOT A DIRECTORY RECORD\n*\nGOODMBR  LA    R2,ALIASES\n         OI    0(R1),X'40'           INSURE SECOND BIT IS ON\n         TM    11(R1),X'80'          ALIAS ENTRY?\n         BO    *+12                  YES, BRANCH\n         LA    R2,REALMBR            NO, A REAL ENTRY --\n         NI    0(R1),X'FF'-X'40'         TURN OFF THE SECOND BIT\n         L     R14,0(,R2)\n         A     R14,=F'1'             INCREMENT ALIASES OR REALMBR\n         ST    R14,0(,R2)\n         LR    R2,R1\n         TTRMBB 8(R1),MBB=DOUBLE     CONVERT TTR TO MBBCCHHR\n         L     R1,SAVETBL\nTBLINC   LA    R1,16(,R1)\n         CR    R1,R5                 EMPTY TABLE ENTRY?\n         BH    INSERT                YES, BRANCH\n         CLC   8(8,R1),DOUBLE        IS IT THIS ENTRY?\n         BNE   TBLINC                NO, CHECK NEXT ENTRY\n         TM    11(R2),X'80'          ALIAS?\n         BO    NEXTMBR               YES, BRANCH\n         MVC   ALIASERR(8),0(R1)     ASSUME ALIAS ERROR\n         MVC   0(8,R1),0(R2)         USE THE REAL MEMBER NAME\n         TM    ALIASERR,X'40'        ALIAS ENTRY?\n         BO    NEXTMBR               YES, BRANCH\n         MVC   ALIASERR+13(8),0(R2)  OTHER MEMBER NAME\n         OI    ALIASERR,X'40'        MAKE PRINTABLE\n         OI    ALIASERR+13,X'40'     MAKE PRINTABLE\n         OUTSTR ALIASERR,ERR=ERR     APPARENT ALIASES BUT NO ALIAS FLAG\n         OUTSTR BLANKS                 FOR EITHER MEMBER\n         B     NEXTMBR\n         SPACE 5\nINSERT   MVC   0(8,R1),0(R2)         INSERT THE NAME\n         MVC   8(8,R1),DOUBLE        INSERT THE MBBCCHHR\n         LR    R5,R1                 SAVE THE HIGH-TABLE USE ENTRY\n         L     R1,REALENT\n         A     R1,=F'1'              COUNT THE NUMBER OF TABLE ENTRIES\n         ST    R1,REALENT\n         C     R1,MBRCOUNT\n         BL    NEXTMBR\n         L     R0,MBRCOUNT           TRY AGAIN WITH TWICE AS MANY\n         SLL   R0,1                  ENTRIES*2\n         ST    R0,MBRCOUNT\n         L     R1,SAVETBL            START OF OLD MEMBER TABLE -16\n         AH    R1,=H'16'             START OF OLD MEMBER TABLE\n         SLL   R0,3                  ENTRIES*8 (*2 ABOVE)\n         FREEMAIN R,LV=(0),A=(1)     RELEASE THIS STORAGE\n         SR    R0,R0\n         ST    R0,READTOT            BLOCKS READ\n         ST    R0,TRACKNUM           CURRENT TRACK NUMBER\n         ST    R0,BYTECNT            BYTE COUNT\n         ST    R0,DIRPTRS+4+4        REINITIALIZE MEMBERS POINTER (R1)\n         ST    R0,TOTENTRY           NUMBER OF MEMBERS\n         MVI   MINENTRY+3,X'FF'      MINIMUM NUMBER OF ENTRIES\n         MVI   CURENTRY+3,X'FF'      CURRENT NUMBER OF ENTRIES\n         ST    R0,LASTR              LAST RECORD ON THIS TRACK\n         ST    R0,CURBYTE            LAST BYTE ON THIS TRACK\n         ST    R0,TRKBYTE            TOTAL BYTES READ\n         ST    R0,ALIASES            TOTAL ALIASES\n         ST    R0,REALMBR            TOTAL REAL MEMBERS\n         ST    R0,REALENT            MEMBER TABLE ENTRIES\n         ST    R0,COMPR              COMPRESS RECORDS ON TRACK\n         MVC   COMPTRK,=F'1'         COMPRESS OUTPUT TRACK\n         ST    R0,COMPTRBL           COMPRESS TRACK BALANCE\n         XC    MBBCCHH(7),MBBCCHH    CLEAR THE SAVED DISK ADDRESS\n         B     GETMTBL               TRY AGAIN\n         SPACE 2\nNOTDIREC SR    R15,R15               SIMULATED END OF FILE (GOOD READ)\nMBREOF   L     R1,READTOT            END OF FILE IN DIRECTORY\n         ST    R1,USEDBLK            USED COUNT\n         B     PRESORT\n         SPACE 2\nLASTUSED L     R0,READTOT            END OF USED ENTRIES IN DIRECTORY\n         ST    R0,USEDBLK\nRPTEXCP  BAL   R14,EXCPSTAT          READ AND COLLECT STATISTICS\n         LTR   R15,R15\n         BZ    RPTEXCP\n         EJECT\nPRESORT  SR    R0,R0\n         NI    FLAGS,X'FF'-DIRECTOR  TURN OFF THE \"IN DIRECTORY\" FLAG\n         LR    R6,R15                SAVE FOR LATER\n         L     R1,TRACKNUM           TRACKS READ TO THIS POINT\n         CLI   CURMBB+7,X'01'        EOF ONLY ON THIS TRACK (SO FAR)?\n         BNE   *+8                   NO, BRANCH\n         S     R1,=F'1'              YES, USE THE PREVIOUS TRACK NUMBER\n         ST    R1,TRACKDIR           TRACKS USED IN THE DIRECTORY\n         L     R1,READTOT            ALLOCATED BLOCK COUNT\n         ST    R1,ALLOCBLK           ALLOCATED COUNT\n         ST    R0,READTOT            REINITIALIZE READTOT\n         ST    R0,MAXBLK                                 MAXBLK\n         ST    R0,BYTECNT                                      BYTECNT\n         ST    R0,BLKDIST            DO NOT USE DIRECTORY ENTRIES\n         MVC   MINBLK(4),=F'33000'   REINITIALIZE MINBLK\n         SPACE 1\n*\n*     SORT THE MEMBER ARRAY BY MBBCCHHR  (USES A SHELLSORT)\n*\n         L     R2,REALENT           NUMBER OF ELEMENTS TO SORT\n         SLA   R2,4                 GAP IS  16 * ELEMENTS\n         L     R3,SAVETBL           TABLE BASE ADDRESS\n         LR    R0,R2                N=GAP\nSHELLG   SRL   R2,5                 GAP=GAP/2  (DROP FRACTION BITS)\n         SLA   R2,4                 GAP LESS THAN ONE?\n         BZ    SORTED               YES, DONE\n         LR    R4,R2                I=GAP\nSHELLI   LA    R4,16(,R4)           I=I+1   (TABLE WIDTH IS 16)\n         CR    R4,R0                I<=N?\n         BH    SHELLG               NO, HALVE THE GAP\n         LR    R1,R4                YES, J=I\nSHELLJ   SR    R1,R2                J=J-GAP\n         BNP   SHELLI               IF J<=0, INCREMENT I\n         LA    R15,0(R3,R1)         ADDRESS OF SAVETBL(J)\n         LA    R14,0(R2,R1)         JG=J+GAP\n         LA    R14,0(R3,R14)        ADDRESS OF SAVETBL(JG)\n         CLC   8(8,R15),8(R14)      MBBCCHHR(J) <= MBBCCHHR(JG)\n         BNH   SHELLI               YES, INCREMENT I\n         XC    0(16,R14),0(R15)     INTERCHANGE\n         XC    0(16,R15),0(R14)                SAVETBL ENTRIES\n         XC    0(16,R14),0(R15)                               J AND JG\n         B     SHELLJ               INCREMENT J\n         EJECT\nSORTED   ST    R5,LASTREF           SAVE FOR LATER\n         L     R3,REALENT\n         L     R2,SAVETBL\n         CR    R5,R2                ANY MEMBERS?\n         BE    NULLPDS              NO, BRANCH\nTRYAGN   LA    R2,16(,R2)\n         TM    0(R2),X'40'          ALIAS (IN THE TABLE)?\n         BNO   REALAGN              NO, BRANCH\n         MVC   ALNOREAL(8),0(R2)    YES, ALIAS WITH NO REAL\n         OUTSTR ALNOREAL\n         OUTSTR BLANKS\nREALAGN  BCT   R3,TRYAGN\n         SPACE 2\n         L     R2,SAVETBL\n         MVC   LASTMEMS(8),0(R5)    LAST MEMBER IN THE PDS\n         OI    LASTMEMS,X'40'       MAKE PRINTABLE (IF REAL NAME)\n         OUTSTR LASTMEMS\n         OUTSTR BLANKS\n         SPACE 2\nNULLPDS  OUTPT ALLOCBLK,ALLBLK\n         OUTPT USEDBLK,USEBLK\n         L     R0,ALLOCBLK          ALLOCATED BLOCKS\n         SLL   R0,8                 TIMES 256\n         OUTPT R0,DIRBYTES          BYTES USED FOR THE DIRECTORY\n         OUTPT TRACKDIR,DIRTRACK\n         OUTSTR BLANKS\n         OUTPT MINENTRY,STATDIR\n         L     R15,USEDBLK\n         SRL   R15,1\n         A     R15,TOTENTRY         (TOTAL MEMBERS + BLOCKS/2) / BLOCKS\n         SR    R14,R14\n         D     R14,USEDBLK\n         LR    R0,R15\n         OUTPT R0,STATDIR\n         OUTPT MAXENTRY,STATDIR\n         OUTPT TOTENTRY,USENAME\n         ICM   R0,15,ALIASES\n         BZ    NOTALIAS\n         OUTPT R0,ALSNAME\nNOTALIAS OUTSTR BLANKS\n         LR    R15,R6               RESTORE THE RETURN CODE\n         TM    DS1RECFM,X'C0'       RECFM=U?\n         BNO   NXTREAL              NO, BRANCH\n         MVC   GASMEM+28(15),=C'THIS MEMBER WAS'\n         EJECT\nNXTREAL  LA    R2,16(,R2)            LAST MEMBER WAS REAL\nNXTONE   L     R0,BYTECNT            LAST MEMBER WAS GAS\n         ST    R0,SAVETOT            SAVE FOR LATER\n         CH    R15,=H'8'             END OF DATA SET?\n         BE    LASTMTCH              YES, BRANCH\n         OI    FLAGS,REALONE         ASSUME A REAL MEMBER\n         MVC   CURRMBR(8),0(R2)      SAVE THE CURRENT MEMBER NAME\n         CLC   8(8,R2),IOBSEEK       NEXT MBBCCHHR IN THE TABLE?\n         BE    REALRD                YES, BRANCH TO READ LOOP\n         BH    NOTREAL               NO, HIGHER -- A GAS MEMBER\n         C     R2,LASTREF            BEYOND MEMBER TABLE ENTRIES\n         BH    NOTREAL               YES,       -- A GAS MEMBER\n         OUTSTR TTRISLOW,ERR=ERR\n         OUTSTR DSBAD,ERR=ERR        DATA SET IS PROBABLY DESTROYED\n         ABEND 13            **  TABLED TTR < CURRENT TTR  **\nNOTREAL  L     R1,GASCNT             A GAS MEMBER\n         A     R1,=F'1'\n         ST    R1,GASCNT             ADD ONE TO THE GAS MEMBER COUNT\n         XI    FLAGS,REALONE         TURN OFF THE ACTUAL MEMBER FLAG\n         SPACE 1\n         TM    FLAGS,GAS             GAS RECORDS DESIRED?\n         BNO   GASRD                 NO, BRANCH\n         MBBTTR IOBSEEK,TEMP         CONVERT MBBCCHHR TO TTR\n         HEXES TEMP,3,GASMEM+18\n         OUTSTR BLANKS\n         OUTSTR GASMEM               OUTPUT A HEADER\n         TM    DS1RECFM,X'C0'        LRECL=U?\n         BNO   DODATA                NO, BRANCH\n         OI    FLAGS,DORECFMU        YES, SET A FLAG\n         MVC   WORK(43),=C'LINKAGE-EDITED ON ??/??/??; CSECTS ARE:  ??'\n         LA    R7,WORK+38            START OF CSECT DATA\n         B     GASRD\n         SPACE 2\nDODATA   BAL   R14,EXCPSTAT          INPUT THE NEXT REAL BLOCK\n         MVC   WORK(13),=C'(NULL MEMBER)' ASSUME NULL\n         LTR   R6,R15                     GOOD READ?\n         BNZ   GASWRITE                   NO, BRANCH\n         MVC   WORK(80),BLANKS            CLEAR THE WORK AREA\n         ICM   R15,15,LSBLK               CURRENT LENGTH OK?\n         BNZ   *+8                        YES, BRANCH\n         L     R15,=F'1'                  NO, USE 1 BYTE\n         CH    R15,=H'79'                 BEYOND 79 BYTES?\n         BNH   *+8                        NO, BRANCH\n         LH    R15,=H'79'                 YES, USE 79 BYTES\n         S     R15,=F'1'                  REDUCE FOR EXECUTE\n         MVC   WORK(*-*),BUFFER           <<EXECUTED>>\n         EX    R15,*-6                    MOVE IN THE BUFFER DATA\n         OUTSTR WORK\n         LR    R15,R6                RESTORE RETURN CODE\n         B     GASRD+4               SKIP THE FIRST READ (ALREADY DONE)\n         SPACE 1\nGASRD    BAL   R14,EXCPSTAT          GAS MEMBER\n         L     R1,GASRDS\n         A     R1,=F'1'              ADD ONE TO THE GAS RECORD COUNT\n         LTR   R15,R15               END OF FILE OR ERROR?\n         BP    *+8                   YES, BRANCH\n         ST    R1,GASRDS\n         TM    FLAGS,DORECFMU        RECORD FORMAT=U?\n         BNO   GASRDF                NO, BRANCH\n         LTR   R6,R15                GOOD READ?\n         BZ    GASLOADM              YES, BRANCH\n         CLI   WORK+41,C'?'          NULL MEMBER?\n         BNE   GASWRITE              NO, BRANCH\n         MVC   WORK(80),BLANKS       CLEAR THE LINE\n         MVC   WORK(4),=C'NULL'      NULL IDENTIFIER\n         B     GASWRITE\nGASLOADM CLI   WORK+41,C'?'          FIRST TIME HERE?\n         BNE   *+8                   NO, BRANCH\n         MVI   WORK+41,X'40'         YES, BLANK THE FIRST ? MARK\n         CLI   BUFFER,X'40'          TEST SYM RECORD?\n         BE    GASRDR6               YES, IGNORE THIS RECORD\n         CLI   BUFFER,X'20'          CESD RECORD?\n         BNE   GASIDR                NO, BRANCH\n         LA    R3,BUFFER+8           START OF ESD DATA\n         LH    R5,BUFFER+6           LENGTH OF DATA IN BUFFER\n         AR    R5,R3\n         LA    R4,16                 LENGTH OF ONE ENTRY\n         SR    R5,R4\n         SPACE 2\n         USING ESDNAME,R3\nESDSCAN  IC    R0,ESDTYPE\n         LA    R1,CODESEG            CHECK FOR SEGTAB/ENTAB\n         NI    ESDTYPE,X'0F'\n         NR    R0,R1\n         CR    R0,R1                 THIS SEGTAB/ENTAB ENTRY?\n         BE    ESDUSE1               YES, BRANCH\n         SPACE\n         CLI   ESDTYPE,CODESD        SD ENTRY?\n         BNE   NEXTESD               NO, BRANCH\n         SPACE 1\nESDUSE1  LA    R0,WORK               START OF OUTPUT MESSAGE\n         LR    R15,R7                CURRENT OUTPUT POSTION\n         SR    R15,R0                LENGTH OF MESSAGE SO FAR\n         MVC   0(5,R7),=C', ...'     COMMA AND SPACE FOR ESD ENTRIES\n         MVI   WORK+38,C':'          RESTORE THE FIRST COLON\n         CH    R15,=H'64'            MORE THAN 64 BYTES?\n         BH    GASRDR6               YES, BRANCH\n         MVC   2(8,R7),ESDNAME       NO, ADD ANOTHER ENTRY\n         A     R7,=F'1'              SKIP OVER COMMA\n         SPACE 1\n         A     R7,=F'1'              SCAN\n         CLI   0(R7),X'40'               FOR FIRST\n         BNE   *-8                                NON-BLANK\n         SPACE 1\nNEXTESD  BXLE  R3,R4,ESDSCAN         GET ALL ESD'S IN THIS RECORD\n         DROP  R3\n         B     GASRDR6               GET NEXT ESD RECORD\n         SPACE 2\nGASIDR   CLI   BUFFER,X'80'          IDR RECORD?\n         BNE   GASWRITE              NO, LINKAGE-EDIT DATE NOT FOUND\n         NI    BUFFER+2,X'0F'        CLEAR MISCELLANEOUS FLAGS\n         CLI   BUFFER+2,X'02'        LINKAGE-EDITOR IDR RECORD?\n         BNE   GASRDR6               NO, NOT YET\n         LA    R1,BUFFER+15          ADDRESS OF DATE\n         BAL   R14,CONVDATE          CONVERT THE LINKAGE-EDIT DATE\n         MVC   WORK+18(8),0(R1)      MOVE INTO MESSAGE LINE\n         SPACE 1\nGASWRITE OUTSTR WORK                 OUTPUT THE DATA ACCUMULATED\n         NI    FLAGS,X'FF'-DORECFMU  OUTPUT FOR RECFM=U IS DONE\nGASRDR6  LR    R15,R6                RESTORE REG 15\nGASRDF   LTR   R15,R15               GOOD READ?\n         BZ    GASRD                 YES, BRANCH\n         SPACE 2\n         L     R0,BYTECNT\n         S     R0,SAVETOT            GAS BYTES THIS MEMBER\n         L     R1,GASBYTE\n         AR    R1,R0\n         ST    R1,GASBYTE            TOTAL GAS BYTES\n         C     R0,MAXGAS\n         BNH   *+8\n         ST    R0,MAXGAS             MAX BYTES/GAS MEMBER\n         C     R0,MINGAS\n         BNL   *+8\n         ST    R0,MINGAS             MIN BYTES/GAS MEMBER\n         B     NXTONE\n         SPACE 3\nREALRD   BAL   R14,EXCPSTAT          REAL MEMBER\n         SPACE 1\n         LTR   R15,R15               END OF FILE?\n         BZ    REALRD                NO, CONTINUE\n         L     R0,BYTECNT\n         S     R0,SAVETOT\n         L     R1,RELBYTE\n         AR    R1,R0\n         ST    R1,RELBYTE            TOTAL BYTES FOR REAL MEMBERS\n         C     R0,MAXREL\n         BNH   *+8\n         ST    R0,MAXREL             MAX BYTES/REAL MEMBER\n         C     R0,MINREL\n         BNL   *+8\n         ST    R0,MINREL             MIN BYTES/REAL MEMBER\n         B     NXTREAL\n         EJECT\nLASTMTCH C     R2,LASTREF         ALL MEMBERS ACCOUNTED FOR?\n         BH    ENDDSET            YES, BRANCH\n         OUTSTR BLANKS\n         OUTSTR NOTFOUND,ERR=ERR\n         SPACE 1\nLOSTMBR  MVC   NOMEMBER(8),0(R2)  MEMBER NAME\n         OI    NOMEMBER,X'40'     MAKE PRINTABLE\n         MBBTTR 8(R2),TEMP        CONVERT MBBCCHHR TO TTR\n         HEXES  TEMP,3,NOMEMBER+16\n         OUTSTR NOMEMBER,ERR=ERR\n         LA    R2,16(,R2)         NEXT MEMBER\n         C     R2,LASTREF         LAST ONE?\n         BNH   LOSTMBR            NO, BRANCH\n         SPACE 2\n         OUTSTR BLANKS\n         OUTSTR LSTARBAD,ERR=ERR\n         OUTSTR RERUN,ERR=ERR\n         ABEND 19           **  SOME MEMBERS IN THE TABLE NOT FOUND  **\n         EJECT\nENDDSET  ICM    R0,15,GASRDS      ANY GAS MEMBERS FOUND?\n         BNP    ENDDSET2          NO, BRANCH\n         OUTSTR BLANKS            YES, OUTPUT ANOTHER BLANK LINE\n         SPACE 1\nENDDSET2 OUTSTR BLANKS\n         SPACE 1\n         OUTSTR STATTRKH\n         OUTSTR STATTRKU\n         MVC   WORK(13),=C'RECORDS/TRACK'\n         L     R15,TRACKNUM\n         SRL   R15,1\n         A     R15,ALLR           (ALLR + TRACKNUM/2) / TRACKNUM\n         SR    R14,R14\n         D     R14,TRACKNUM       AVERAGE RECORDS PER TRACK\n         L     R1,MINR\n         CVD   R1,DOUBLE\n         MVC   WORK+20+1(5),=X'2020202120'\n         ED    WORK+20(6),DOUBLE+5\n         CVD   R15,DOUBLE\n         MVC   WORK+31+1(5),=X'2020202120'\n         ED    WORK+31(6),DOUBLE+5\n         L     R1,MAXR\n         CVD   R1,DOUBLE\n         MVC   WORK+42+1(5),=X'2020202120'\n         ED    WORK+42(6),DOUBLE+5\n         OUTSTR WORK\n         MVC   WORK(11),=C'BYTES/TRACK'\n         L     R15,TRACKNUM\n         SRL   R15,1\n         A     R15,TRKBYTE        (TRKBYTE + TRACKNUM/2) / TRACKNUM\n         SR    R14,R14\n         D     R14,TRACKNUM       AVERAGE BYTES PER TRACK\n         ST    R15,AVGBTRK\n         L     R1,MINBYTE\n         CVD   R1,DOUBLE\n         MVC   WORK+20+1(5),=X'2020202120'\n         ED    WORK+20(6),DOUBLE+5\n         CVD   R15,DOUBLE\n         MVC   WORK+31+1(5),=X'2020202120'\n         ED    WORK+31(6),DOUBLE+5\n         L     R1,MAXBYTE\n         CVD   R1,DOUBLE\n         MVC   WORK+42+1(5),=X'2020202120'\n         ED    WORK+42(6),DOUBLE+5\n         OUTSTR WORK\n         OUTSTR BLANKS\n         OUTSTR BLANKS\n         EJECT\nLRECL0   TM    DS1RECFM,X'C0'     RECFM=U OR NO RECFM?\n         BNM   LRECL1             YES, DON'T DO LRECL RANGES\n         TM    DS1RECFM,X'80'     RECFM=F?\n         BO    LRECL1             YES, DON'T DO LRECL RANGES\n         L     R0,MINLRECL\n         C     R0,=F'33000'       EVER CHANGED?\n         BNE   *+6                YES, BRANCH\n         SR    R0,R0              NO, RESET TO ZERO\n         OUTPT R0,STATLREC\n         LA    R14,1\n         C     R14,TOTLRECL\n         BH    *+8\n         L     R14,TOTLRECL    TAKE MAX OF TOTLRECL AND 1\n         L     R1,TOTLRECL\n         SRL   R1,1\n         A     R1,ALLLRECL\n         SR    R0,R0\n         DR    R0,R14          AVG LRECL=(ALLLRECL + TOTLRECL/2) /\n         LR    R0,R1                     MAX(TOTLRECL, 1)\n         OUTPT R0,STATLREC\n         OUTPT MAXLRECL,STATLREC\nLRECL1   OUTPT TOTLRECL,TOTLRECM\n         OUTSTR BLANKS\n         SPACE 1\nLRECL2   ICM   R0,15,EXCEEDBL       ANY RECORD LENGTHS EXCEED BLKSIZE?\n         BZ    LRECL3               NO, BRANCH\n         OUTPT R0,EXCEEDMS,ERR=ERR  YES, SAY HOW MANY\n         OUTSTR BLANKS\n         SPACE 1\nLRECL3   ICM   R0,15,DIVIDEBL       ALL RECORD SIZES DIVISIBLE/LRECL?\n         BZ    LRECL4               YES, BRANCH\n         OUTPT R0,DIVIDEMS,ERR=ERR  NO, SAY HOW MANY\n         OUTSTR BLANKS\n         SPACE 1\nLRECL4   ICM   R0,15,INVBLOCK       ANY INVALID BLOCK HEADERS?\n         BZ    LRECL5               NO, BRANCH\n         OUTPT R0,INVBLOCM,ERR=ERR  YES, SAY HOW MANY\n         OUTSTR BLANKS\n         SPACE 1\nLRECL5   ICM   R0,15,OVRLRECL       ANY ACTUAL LRECL EXCEED MAXIMUM?\n         BZ    ALLBYTES             NO, BRANCH\n         OUTPT R0,OVRLRECM,ERR=ERR  YES, SAY HOW MANY\n         OUTSTR BLANKS\n         EJECT\nALLBYTES OUTSTR BLANKS\n         L     R0,TRKBYTE         BYTES FOR ALL TRACKS\n         L     R1,ALLOCBLK        ALLOCATED DIRECTORY BLOCKS (IF ANY)\n         SLL   R1,8               IN BYTES\n         SR    R0,R1              BYTES FOR ALL TRACKS LESS DIRECTORY\n         OUTPT R0,TOTBYTS         TOTAL DATA BYTES LESS DIRECTORY\n         OUTPT TRACKNUM,TOTTRKS   TOTAL TRACKS READ\n         SPACE 2\n         OUTSTR BLANKS\n         L     R0,MINBLK\n         C     R0,=F'33000'       EVER CHANGED?\n         BNE   *+6                YES, BRANCH\n         SR    R0,R0              NO, RESET TO ZERO\n         OUTPT R0,STATBLKS\n         LA    R14,1\n         C     R14,READTOT\n         BH    *+8\n         L     R14,READTOT     TAKE MAX OF READTOT AND 1\n         L     R1,READTOT\n         SRL   R1,1\n         A     R1,BYTECNT\n         SR    R0,R0\n         DR    R0,R14          AVG BLK= (BYTECNT + READTOT/2) /\n         LR    R0,R1                     MAX( READTOT, 1)\n         OUTPT R0,STATBLKS\n         OUTPT MAXBLK,STATBLKS\n         OUTSTR BLANKS\n         OUTSTR BLANKS\n         EJECT\n         ICM   R0,15,READTOT    ANY RECORDS READ?\n         BZ    TOTALR           NO, BRANCH\n         OUTSTR RECSIZE\n         SR    R2,R2            OFFSET\n         LA    R3,65            ENTRIES IN BLKSIZE TABLE\n         LA    R4,BLKDIST       FIRST ENTRY\n         L     R5,READTOT\n         A     R5,=F'1'         (READTOT+1)/2 FOR ROUNDING\n         SRL   R5,1\n         SPACE 1\nNEXT500  CVD   R2,DOUBLE        FIRST NUMBER IN RANGE\n         LA    R2,499(,R2)      NEXT NUMBER IN RANGE\n         ICM   R1,15,0(R4)      ANY DATA?\n         BNP   NEXT1            NO, BRANCH\n         UNPK  WORK(5),DOUBLE+5(3)\n         OI    WORK+4,X'F0'     MAKE PRINTABLE\n         MVI   WORK+5,C'-'\n         CVD   R2,DOUBLE        SECOND NUMBER IN RANGE\n         UNPK  WORK+6(5),DOUBLE+5(3)\n         OI    WORK+6+4,X'F0'   MAKE PRINTABLE\n         M     R0,=F'100'\n         AR    R1,R5\n         D     R0,READTOT       OCCURANCES*100 + (TOTALIO/2) / TOTALIO\n         C     R1,=F'100'          IS PERCENT ROUNDED\n         BNH   *+8\n         L     R1,=F'100'       MAXIMUM PERCENT IS 100\n         LR    R14,R1\n         A     R14,=F'1'\n         SRA   R14,1            PERCENT/2 ROUNDED = ZERO?\n         BNZ   *+8              NO, BRANCH\n         L     R14,=F'1'        YES, USE ONE\n         MVC   WORK+12(*-*),BLKPER  <<EXECUTED>>\n         EX    R14,*-6          MOVE IN THE PERCENT LINE\n         LA    R14,WORK+12(R14) POINT TO LAST CHARACTER MOVED\n         MVI   0(R14),C'>'      ADD A TERMINATOR\n         CVD   R1,DOUBLE        PERCENT\n         MVC   2(4,R14),=X'2021206C'\n         ED    1(4,R14),DOUBLE+6\n         L     R1,0(,R4)\n         CVD   R1,DOUBLE        OCCURANCES\n         MVC   8(5,R14),=X'2020202120'\n         ED    7(6,R14),DOUBLE+5\n         OUTSTR WORK\nNEXT1    A     R2,=F'1'         NEXT ONE\n         LA    R4,4(,R4)        NEXT TABLE ENTRY\n         BCT   R3,NEXT500       DO ALL ENTRIES\n         OUTSTR BLANKS\n         OUTSTR BLANKS\nTOTALR   OUTPT READTOT,NUMBLKS\n         TM    DS1DSORG,DS1DSGPO  PARTITIONED DATA SET?\n         BNO   END2               NO, BRANCH\n         EJECT\n         ICM   R0,15,GASRDS       ANY GAS RECORDS?\n         BNZ   SOMEGAS            YES, BRANCH\n         OUTSTR NOGASBLK          NO, MESSAGE\n         B     NONEGAS\nSOMEGAS  OUTPT R0,GASBLKS\nNONEGAS  OUTPT EOFS,ENDMBR\n         ICM   R0,15,GASCNT       ANY GAS MEMBERS?\n         BZ    NOGASM             NO, BRANCH\n         OUTPT R0,GASMBR\n         OUTSTR BLANKS\n         OUTPT MINGAS,STATGAS     MIN BYTES PER GAS MEMBER\n         L     R15,GASCNT\n         SRL   R15,1\n         A     R15,GASBYTE\n         SR    R14,R14\n         D     R14,GASCNT\n         LR    R0,R15\n         OUTPT R0,STATGAS         AVG BYTES PER GAS MEMBER\n         OUTPT MAXGAS,STATGAS     MAX BYTES PER GAS MEMBER\n         OUTPT GASBYTE,STATGAST   TOTAL GAS BYTES\n         TM    DS1RECFM,DCBRECTO  TRACK OVERFLOW DATA SET?\n         BO    NOGASM             YES, BRANCH\n         OUTSTR BLANKS\n         L     R1,TOTALTRK        TRACKS IN THIS DATA SET\n         S     R1,COMPTRK         FREE TRACKS AFTER COMPRESS\n         S     R1,AVAILTRK        TRACKS WHICH WOULD COMPRESS OUT\n         M     R0,=F'1000'        COMPRESS TRACKS *1000\n         L     R15,COMPTRBL       ESTIMATED NEW DS1TRBAL\n         SR    R14,R14\n         ICM   R14,3,DS1TRBAL     CURRENT BYTES LEFT ON LAST TRACK\n         SR    R15,R14            GAIN OR LOSS IN BYTES\n         M     R14,=F'1000'       GAIN OR LOSS *1000\n         SR    R2,R2\n         ICM   R2,3,DEVMAXT       MAXIMUM TRACK LENGTH\n         DR    R14,R2             -999 TO +999 (FOR -0.999 TO +0.999)\n         AR    R1,R15             ADD THE PARTIAL TRACKS -- VALID?\n         BNM   *+6                YES, BRANCH\n         SR    R1,R1              NO, USE ZERO\n         AH    R1,=H'5'           ROUND TO NEAREST HUNDREDTH\n         CVD   R1,DOUBLE\n         D     R0,=F'1000'        WHOLE TRACKS COMPRESS OUT\n         CH    R1,=H'4094'        ABOVE MAXIMUM?\n         BNH   *+8                NO, BRANCH\n         LH    R1,=H'4094'        YES, USE THE MAXIMUM\n         CLI   RETURNCD+3,0       ANY ERRORS YET?\n         BNE   *+8                YES, BRANCH\n         ST    R1,RETURNCD        NO, SAVE FOR RETURN CODE\n         ED    GASTRK(12),DOUBLE+3  MAX OUTPUT IS 999,999.99X TRACKS\n         MVI   GASTRK+11,X'40'    CLEAR THE THOUSANDTHS DIGIT\n         LA    R1,GASTRK\n         A     R1,=F'1'           SCAN FOR\n         CLI   0(R1),X'40'                FIRST\n         BE    *-8                             NON-BLANK\n         OUTSTR 0(R1),LN=GASTRK   OUTPUT GAS TRACK TOTAL\n         EJECT\nNOGASM   OUTSTR BLANKS\n         SPACE 1\n         L     R0,EOFS\n         S     R0,GASCNT\n         BNP   NOREAL\n         ST    R0,TEMP\n         OUTPT MINREL,STATREAL    MIN BYTES PER REAL MEMBER\n         L     R15,TEMP\n         SRL   R15,1\n         A     R15,RELBYTE\n         SR    R14,R14\n         D     R14,TEMP\n         LR    R0,R15\n         OUTPT R0,STATREAL        AVG BYTES PER MEMBER\n         OUTPT MAXREL,STATREAL    MAX BYTES PER MEMBER\n         OUTPT RELBYTE,STATRELT   TOTAL BYTES FOR REAL MEMBERS\n         B     END1\n         SPACE 1\nNOREAL   OUTSTR NOREALS\n         SPACE 2\nEND1     L     R1,SAVETBL         START OF MEMBER TABLE -16\n         AH    R1,=H'16'          START OF MEMBER TABLE\n         L     R0,MBRCOUNT        NUMBER OF MEMBER ENTRIES\n         SLL   R0,4               TABLE WIDTH IS 16\n         FREEMAIN R,LV=(0),A=(1)  YES, ALIAS WITH NO REAL\n         SPACE 2\nEND2     OUTSTR BLANKS\n         OUTSTR BLANKS\n         TM    FLAGS,ALLXTNT        ALL EXTENTS TO HAVE BEEN READ?\n         BZ    END3                 NO, BRANCH\n         MBBTTR CURMBB,TTR=TEMP     LAST GOOD READ ADDRESS\n         HEXES TEMP,3,LASTREAD+32   CONVERT TO TT.TT.RR\n         OUTSTR LASTREAD            OUTPUT\n         OUTSTR BLANKS\n         L     R0,TOTALTRK          TOTAL TRACKS IN THE DATA SET\n         S     R0,TRACKNUM          ANY NOT READ?\n         BNP   END3                 NO, BRANCH\n         OUTPT R0,NOTREAD,ERR=ERR   TOTAL TRACKS NOT READ\n         OUTSTR BLANKS\n         EJECT\nEND3     CLOSE IN                 END POINT IF DSORG=PO, PS OR DA\n         TM    DS1DSORG,DS1DSGIS  ISAM DATA SET?\n         BNO   END4               NO, BRANCH\n         OI    JFCBTSDM,X'08'     PREVENT REVERSE MERGE TO JFCB\n         MVI   JFCBDSNM,X'04'     SET-UP DSNAME FOR\n         MVC   JFCBDSNM+1(43),JFCBDSNM             FORMAT 4 DSCB\n         OPEN  (IN,INPUT),TYPE=J  DO AN OPEN JFCB\n         TM    DCBOFLGS,X'10'     OPENED CORRECTLY?\n         BZ    ABE42              NO, QUIT\n         BAL   R14,REREAD\n         MVC   IOBSEEK+3(5),DS1PTRDS  POINTER TO FORMAT 2 DSCB\n         BAL   R14,EXCP           READ THE FORMAT 2 DSCB\n         LTR   R15,R15\n         BZ    NOABE11\n         OUTSTR NODSCB2,ERR=ERR   FORMAT 2 DSCB NOT READ CORRECTLY\n         ABEND 11\nNOABE11  OUTSTR BLANKS\n         OUTSTR DSCB2\n         SR    R0,R0\n         IC    R0,DS2NOLEV\n         OUTPT R0,DSSNOLEV         INDEX LEVELS\n         IC    R0,DS2DVIND\n         OUTPT R0,DSSDVIND         TRACKS FOR MASTER INDEX\n         IC    R0,DS2CYLOV\n         OUTPT R0,DSSCYLOV         TRACKS OF CYL. OVERFLOW PER CYLINDER\n         ICM   R0,3,DS2TAGDT\n         OUTPT R0,DSSTAGDT         TAGGED FOR DELETION\n         ICM   R0,7,DS2RORG3\n         OUTPT R0,DSSRORG3         OVERFLOW RECORD ACCESSES\n         LH    R0,DS2NOBYT\n         OUTPT R0,DSSNOBYT         CORE TO HOLD THE HIGHEST INDEX\n         SR    R0,R0\n         IC    R0,DS2NOTRK\n         OUTPT R0,DSSNOTRK         TRACKS OCCUPIED BY THE HIGHEST INDEX\n         ICM   R0,15,DS2PRCTR\n         OUTPT R0,DSSPRCTR         RECORDS IN THE PRIME AREA\n         LH    R0,DS2BYOVL\n         OUTPT R0,DSSBYOVL         BYTES LEFT ON CUR. IND. OVER. TRACK\n         LH    R0,DS2RORG2\n         OUTPT R0,DSSRORG2         TRACKS LEFT IN IND. OVERFLOW AREA\n         LH    R0,DS2OVRCT\n         OUTPT R0,DSSOVRCT         RECORDS IN THE OVERFLOW AREA\n         LH    R0,DS2RORG1\n         OUTPT R0,DSSRORG1         CYLINDER OVERFLOW AREAS (FULL)\n         CLOSE IN\n         OUTSTR BLANKS\n         EJECT\nEND4     ICM   R0,15,TOTALIO        ANY I/O ERRORS?\n         BZ    END5                 NO, BRANCH\n         OUTPT R0,TOTALIOS,ERR=ERR  YES, SAY HOW MANY\n         OUTSTR BLANKS\n         SPACE 2\nEND5     L     R2,RETURNCD\n         CVD   R2,DOUBLE\n         MVC   WORK+5(5),=X'2020202120'\n         ED    WORK+4(6),DOUBLE+5\n         LA    R1,WORK\n         SPACE 1\n         A     R1,=F'1'            SCAN\n         CLI   3(R1),X'40'              FOR FIRST\n         BE    *-8                               NON-BLANK\n         SPACE 1\n         MVC   0(3,R1),=C'RC='\n         OUTSTR 0(R1),LN=DOUBLE\n         CLOSE OUT\n         L     R13,4(,R13)\n         LR    R15,R2\n         RETURN (14,12),RC=(15)\n         EJECT\nEXCPSTAT ST    R14,STATR14    ISSUES EXCP'S AND GATHERS STATISTICS\nEXCPBAL  BAL   R14,EXCP\n         B     *+4(R15)\n         B     R15IS0             GOOD READ\n         B     R15IS4             END OF FILE OR END OF MEMBER\n         B     R15IS8             END OF DATA SET\nR15IS12  L     R14,TOTALIO        I/O OR OTHER DISK ERROR\n         A     R14,=F'1'          UPDATE TOTAL NUMBER OF ERRORS\n         ST    R14,TOTALIO\n         L     R14,INAROW         I/O OR OTHER DISK ERROR\n         A     R14,=F'1'          UPDATE NUMBER OF CONSECUTIVE ERRORS\n         ST    R14,INAROW\n         CH    R14,=H'10'         ALLOW ONLY 10 CONSECUTIVE ERRORS\n         BL    CONTINUE\n         OUTSTR TOOMANY,ERR=ERR   TOO MANY CONSECUTIVE ERRORS\n         ABEND 999\nCONTINUE HEXES SAVECB,1,IOERROR+16    ECB ERROR CODE\n         HEXES CURMBB+3,5,IOERROR+26  CURRENT DISK CCHHR\n         MBBTTR CURMBB,TTR=TEMP       CONVERT TO TTR\n         HEXES TEMP,3,IOERROR+49      CURRENT DISK TTR\n         OUTSTR IOERROR,ERR=ERR\n         TM    DS1DSORG,DS1DSGPO  PARTITIONED DATA SET?\n         BNO   BLKNUM             NO, BRANCH\n         TM    FLAGS,DIRECTOR     ERROR IN THE DIRECTORY?\n         BO    DIRERR             YES, BRANCH\n         TM    FLAGS,REALONE      ACTUAL MEMBER?\n         BNO   GASERR             NO, BRANCH\n         OI    CURRMBR,X'40'      MAKE PRINTABLE\n         OUTSTR CURRMBR,ERR=ERR   OUTPUT THE CURRENT MEMBER NAME\n         B     R15IS4$\nGASERR   OUTSTR GASERRS,ERR=ERR   ERROR IN READING GAS DATA\n         B     R15IS4$\nDIRERR   OUTSTR DIRERRS,ERR=ERR   DIRECTORY I/O ERROR (IGNORE BLOCK)\nBLKNUM   L     R0,READTOT         RECORDS READ SO FAR\n         A     R0,=F'1'           THIS RECORD NUMBER\n         OUTPT R0,BLKNUMS,ERR=ERR ERROR MESSAGE\n         B     EXCPBAL            CONTINUE--USING THE NEXT BLOCK\n         SPACE 1\nR15IS8   SR    R0,R0              END OF DATA SET\n         ST    R0,LSTRK           UPDATE THE RECORD LENGTH\n         CLC   MBBCCHH(7),CURMBB  SAME TRACK?\n         BNE   NEWTRACK           NO, BRANCH\n         B     TRKNOINC           FINISH UP PROCESSING\n         SPACE 2\nR15IS4   XC    INAROW,INAROW      END OF MEMBER\nR15IS4$  LA    R15,4              TREAT AS AN END OF MEMBER CONDITION\n         L     R1,EOFS\n         A     R1,=F'1'           END OF MEMBER COUNTER\n         ST    R1,EOFS\n         SR    R0,R0              DATA LENGTH IS ZERO\n         ST    R0,LSTRK           UPDATE THE RECORD LENGTH TOO\n         B     CHECKTRK           CHECK FOR A TRACK SWITCH\n         EJECT\nR15IS0   XC    INAROW,INAROW      GOOD READ\nR15IS0$  L     R1,READTOT\n         A     R1,=F'1'\n         ST    R1,READTOT         COUNT OF BLOCKS READ\n         L     R1,LSBLK           CURRENT BLOCK LENGTH\n         ST    R1,LSTRK           CURRENT LENGTH ON TRACK\n         SPACE 3\n         TM    DS1RECFM,DCBRECTO  TRACK OVERFLOW DATA SET?\n         BNO   OVERTRK            NO, BRANCH\n         CLI   IOBSEEK+7,2        NEXT R OF CCHHR = 2?\n         BNE   OVERTRK            NO, BRANCH\n         CLI   CURMBB+7,1         THIS R OF CCHHR = 1?\n         BE    OVERTRK            YES, BRANCH\n         SPACE 2\n*  TRACK OVERFLOW RECORDS READ OK; HOWEVER, THE LENGTH OF AN OVERFLOW\n*    RECORD IS INCORRECT (IT EQUALS THE FIRST PART OF THE RECORD).\n         SPACE 1\n         A     R1,CURBYTE\n         ST    R1,CURBYTE         ACCUMULATE TRACK BYTE COUNT\n         L     R1,LASTR\n         A     R1,=F'1'\n         ST    R1,LASTR           ACCUMULATE RECORD COUNT/TRACK\n         MVC   LSBLK(2),DATALN    SAVE NEXT DATA LENGTH\n         MVI   IOBSEEK+7,0        WANT TO GET R=1 LENGTH\n         LA    R15,4              EARLY EXIT FROM READ\n         ST    R15,EXCPR15        SAVE FOR ROUTINE USE\n         LA    R14,OVERNXT        RETURN ADDRESS\n         ST    R14,EXCPR14        SAVE FOR ROUTINE USE\n         B     INITREAD           READ THE FIRST RECORD OF THIS TRACK\n         SPACE 2\nOVERNXT  SR    R1,R1              RETURN FROM TRACK OVERFLOW READ\n         MVC   CURMBB,IOBSEEK     CHANGE CURRENT MBBCCHHR TO NEXT TRACK\n         ICM   R1,3,DATALN        DATA LENGTH OF R =1\n         MVC   DATALN(2),LSBLK    RESTORE NEXT LENGTH\n         MVI   IOBSEEK+7,2        RESET R OF NEXT CCHHR BACK TO 2\n         ST    R1,LSTRK           DATA LENGTH OF R =1\n         AH    R1,LSBLK+2         ADDED TO PREVIOUS PART\n         ST    R1,LSBLK           FIX BLOCKSIZE\n         EJECT\nOVERTRK  LR    R0,R1              SAVE FOR LATER\n         C     R1,MINBLK\n         BH    *+8\n         ST    R1,MINBLK          MINIMUM LENGTH BLOCK READ\n         C     R1,MAXBLK\n         BL    *+8\n         ST    R1,MAXBLK          MAXIMUM LENGTH BLOCK READ\n         A     R1,BYTECNT\n         ST    R1,BYTECNT         TOTAL NUMBER OF BYTES READ\n         L     R1,READTOTI    *** FOR SUMMARY BY FILE INFORMATION\n         A     R1,=F'1'\n         ST    R1,READTOTI        COUNT OF BLOCKS READ\n         LR    R1,R0              CURRENT BLKSIZE\n         C     R1,MINBLKI\n         BH    *+8\n         ST    R1,MINBLKI         MINIMUM LENGTH BLOCK READ\n         C     R1,MAXBLKI\n         BL    *+8\n         ST    R1,MAXBLKI         MAXIMUM LENGTH BLOCK READ\n         A     R1,BYTECNTI\n         ST    R1,BYTECNTI        TOTAL NUMBER OF BYTES READ\n         LR    R15,R0             CURRENT BLKSIZE\n         SR    R14,R14\n         D     R14,=F'500'        SEPARATE BY INTERVALS OF 500\n         SLL   R15,2              RESULT *4\n         L     R14,BLKDIST(R15)\n         A     R14,=F'1'          ADD 1 TO PROPER SLOT\n         ST    R14,BLKDIST(R15)\n         TM    FLAGS,DIRECTOR     IN THE DIRECTORY?\n         BO    NOBLKCHK           YES, BRANCH\n         CH    R0,DS1BLKL         RECORD SIZE EXCEEDING BLKSIZE?\n         BNH   DIVIDECK           NO, BRANCH\n         L     R14,EXCEEDBL       RECORD SIZE\n         A     R14,=F'1'                     EXCEEDED\n         ST    R14,EXCEEDBL                          BLKSIZE\n         SPACE 1\nDIVIDECK SR    R14,R14\n         L     R15,=F'1'          ASSUME COUNTING RECFM=U LRECL'S\n         TM    DS1RECFM,X'C0'     RECFM=U OR NO RECFM?\n         BNM   LRECLCNT           YES, BRANCH\n         TM    DS1RECFM,X'40'     RECFM=V?\n         BO    CHECKV             YES, BRANCH\n         SR    R14,R14            MUST BE RECFM=F\n         LR    R15,R0             CURRENT BLKSIZE\n         LH    R1,DS1LRECL        LRECL FROM THE LABEL\n         LTR   R1,R1              ZERO?\n         BZ    DIVIDECT           YES, BRANCH\n         DR    R14,R1             DIVIDE\n         EJECT\nLRECLCNT A     R15,TOTLRECL       COUNT\n         ST    R15,TOTLRECL            LOGICAL RECORDS\n         LTR   R14,R14            DIVIDE EVENLY?\n         BZ    NOBLKCHK           YES, BRANCH\n         SPACE 2\nDIVIDECT L     R14,DIVIDEBL       RECORD SIZE\n         A     R14,=F'1'                     NOT DIVISIBLE\n         ST    R14,DIVIDEBL                               BY LRECL\n         B     NOBLKCHK           DONE                    BY LRECL\n         SPACE 2\nCHECKV   CLC   BUFFER+2(2),=H'0'  VALID BLOCK HEADER?\n         BNE   BADBLOCK           NO, BRANCH\n         CH    R0,BUFFER          LENGTH EQUAL TO READ LENGTH?\n         BE    CHECKV1            YES, BRANCH\nBADBLOCK L     R1,INVBLOCK\n         A     R1,=F'1'\n         ST    R1,INVBLOCK        UPDATE BAD RECFM=V BLOCK FORMAT COUNT\n         B     NOBLKCHK\n         SPACE 1\nCHECKV1  LR    R1,R0              BUFFER LENGTH\n         LA    R14,BUFFER+4       START OF LOGICAL RECORDS\n         AR    R1,R14             END OF BUFFER ADDRESS +4\n         SH    R1,=H'5'           END OF BUFFER ADDRESS -1\n         SPACE 1\nCHECKV2  SR    R0,R0\n         ICM   R0,3,0(R14)        GET LOGICAL RECORD LENGTH\n         L     R15,ALLLRECL       TOTAL LOGICAL RECORD LENGTHS\n         AR    R15,R0             ADD THIS ONE\n         ST    R15,ALLLRECL       UPDATE\n         L     R15,TOTLRECL       ANOTHER LOGICAL RECORD\n         A     R15,=F'1'\n         ST    R15,TOTLRECL       UPDATE LRECL COUNT\n         L     R15,OVRLRECL       ASSUME LONGER THAN THE LRECL\n         A     R15,=F'1'\n         CH    R0,DS1LRECL              EXCEED THE DATA SET LRECL?\n         BNH   *+8                      NO, BRANCH\n         ST    R15,OVRLRECL             YES, INCREMENT INVALID COUNT\n         C     R0,MINLRECL\n         BH    *+8\n         ST    R0,MINLRECL              MINIMUM LOGICAL RECORD LENGTH\n         C     R0,MAXLRECL\n         BL    *+8\n         ST    R0,MAXLRECL              MAXIMUM LOGICAL RECORD LENGTH\n         LTR   R0,R0                    ACTUAL RECORD?\n         BP    *+8                      YES, BRANCH\n         LA    R0,4                     NO, USE THE HEADER ONLY\n         BXLE  R14,R0,CHECKV2           SKIP TO NEXT RECORD\n         L     R0,LSBLK                 RESET R0\n         EJECT\nNOBLKCHK SR    R15,R15            RESET RETURN CODE\nCHECKTRK CLC   MBBCCHH(7),CURMBB  SAME MBBCCHH?\n         BNE   NEWTRACK           NO, BRANCH\n         A     R0,CURBYTE\n         ST    R0,CURBYTE         ACCUMULATE TRACK BYTE COUNT\n         L     R1,LASTR\n         A     R1,=F'1'\n         ST    R1,LASTR           ACCUMULATE RECORD COUNT/TRACK\n         B     COMPRESS\n         SPACE 2\nNEWTRACK L     R1,TRACKNUM        SWITCH TRACKS --\n         A     R1,=F'1'\n         ST    R1,TRACKNUM        ACTUAL TRACKS USED\n         SPACE 2\nTRKNOINC MVC   MBBCCHH(7),CURMBB  SAVE CURRENT TRACK NUMBER\n         L     R0,CURBYTE\n         MVC   CURBYTE,LSTRK\n         L     R1,TRKBYTE\n         AR    R1,R0\n         ST    R1,TRKBYTE         COUNT OF ALL CHARACTERS READ\n         L     R1,LASTR\n         MVC   LASTR,=F'1'\n         L     R14,ALLR\n         AR    R14,R1\n         ST    R14,ALLR           COUNT OF ALL READS\n         LTR   R1,R1              FIRST TRACK?\n         BZ    NOMINS             YES, BRANCH\n         C     R0,MINBYTE\n         BNL   *+8\n         ST    R0,MINBYTE         MIN BYTES/TRACK\n         C     R1,MINR\n         BNL   *+8\n         ST    R1,MINR            MIN RECORD NUMBER/TRACK\nNOMINS   C     R0,MAXBYTE\n         BNH   *+8\n         ST    R0,MAXBYTE         MAX BYTES/TRACK\n         C     R1,MAXR\n         BNH   *+8\n         ST    R1,MAXR            MAX RECORD NUMBER/TRACK\n         EJECT\nCOMPRESS TM    DS1DSORG,DS1DSGPO  PARTITIONED DATA SET?\n         BNO   RETURNS            NO, BRANCH\n         TM    DS1RECFM,DCBRECTO  TRACK OVERFLOW DATA SET?\n         BO    RETURNS            YES, BRANCH\n         SPACE 1\n         TM    FLAGS,REALONE+DIRECTOR  REAL MEMBER OR DIRECTORY ENTRY?\n         BZ    RETURNS                 NO, GAS MEMBER\n         CLC   CURMBB,LASTMBB     PAST THE DS1LSTAR MARKER?\n         BH    RETURNS            YES, CANNOT COMPRESS ANY MORE\n         ST    R15,TEMP           SAVE RETURN CODE FOR LATER\n         SPACE 3\nCOMPREC  L     R0,COMPR\n         A     R0,=F'1'           CURRENT COMPRESS RECORDS ON TRACK\n         ST    R0,COMPR\n         L     R0,LSBLK           LENGTH OF RECORD IN RKDD (DD)\n         SPACE 1\n         TM    FLAGS,DIRECTOR     IN THE DIRECTORY?\n         BNO   COMPCALL           NO, BRANCH (KEYLENGTH IS ZERO)\n         OC    LSBLK,LSBLK        END OF FILE?\n         BNZ   COMPADD8           NO, BRANCH\n         NI    FLAGS,X'FF'-DIRECTOR  TURN OFF THE \"IN DIRECTORY\" FLAG\n         CLC   COMPTRK,TRACKNUM   SAME TRACK NUMBER?\n         BNE   COMPSWCH           NO, BRANCH\n         B     COMPCALL           YES, GET THE RECORD NUMBER\n         SPACE 1\nCOMPADD8 ICM   R0,B'1100',=H'8'   KEYLENGTH IN RKDD (K)\nCOMPCALL ICM   R0,B'1000',COMPR+3 RECORD NUMBER IN RKDD (R)\n         SPACE 2\n         TRKCALC FUNCTN=TRKBAL,TYPE=DEVTYPE+3,REGSAVE=YES,             X\n               BALANCE=COMPTRBL+2,RKDD=(0)\n         SPACE 2\n         LTR   R15,R15            FIT ON CURRENT TRACK?\n         BZ    COMPADD            YES, BRANCH\n         SPACE 2\nCOMPSWCH L     R1,COMPTRK\n         A     R1,=F'1'           START A NEW TRACK IN OUTPUT\n         ST    R1,COMPTRK\n         MVI   COMPR+3,0          RECORD ZERO\n         B     COMPREC            TRY AGAIN\n         SPACE 1\nCOMPADD  ST    R0,COMPTRBL        SAVE THE TRACK BALANCE\n         L     R15,TEMP           RESTORE THE RETURN CODE\n         SPACE 2\nRETURNS  L     R14,STATR14\n         BR    R14\n         EJECT\n*\n*   MEMBER INPUT ROUTINE\n*\nMEMBERS  ST    R14,MEMBR14\n         LM    R15,R1,DIRPTRS     PICK UP ADDR, INCR, LIMIT\n         LTR   R1,R1              INITIALIZED?\n         BNZ   DEBLOCK            YES, BRANCH\n         BAL   R14,REREAD         OPEN IN FOR INPUT OF THE DIRECTORY\nGETBLK   BAL   R14,EXCPSTAT       GET A DIRECTORY BLOCK\n         L     R14,CURENTRY       ENTRIES IN PREVIOUS BLOCK\n         C     R14,MINENTRY       LESS THAN MINIMUM?\n         BNL   *+8                NO, BRANCH\n         ST    R14,MINENTRY       YES, NEW MINIMUM\n         LTR   R15,R15            END OF FILE?\n         BP    MBRDONE            YES, END OF FILE INDICATION\n         CLC   LSBLK+2(2),=H'256' GOOD DIRECTORY BLOCK?\n         BNE   NODIRBLK           NO, BRANCH\n         LA    R0,2               INCREMENT IS 2 FIRST\n         LH    R1,BUFFER          LENGTH HALFWORD\n         LA    R1,BUFFER-1(R1)    LIMIT\n         LA    R15,BUFFER         START\n         XC    CURENTRY,CURENTRY  CLEAR THE ENTRY COUNTER\nDEBLOCK  BXH   R15,R0,GETBLK\n         IC    R14,11(,R15)\n         N     R14,=XL4'0000001F' GET LENGTH BITS\n         LA    R0,12(R14,R14)     LENGTH * 2  +  12\n         STM   R15,R1,DIRPTRS     SAVE FOR LATER\n         CLI   0(R15),X'FF'       LAST MEMBER\n         BNE   MEMNAME            NO, BRANCH\n         LA    R15,8              LAST MEMBER USED INDICATION\n         L     R14,CURENTRY       ENTRIES IN THIS BLOCK\n         C     R14,MINENTRY       LESS THAN MINIMUM?\n         BNL   *+8                NO, BRANCH\n         ST    R14,MINENTRY       YES, NEW MINIMUM\n         B     MBRDONE\n         SPACE 1\nMEMNAME  LR    R1,R15             ADDRESS OF MEMBER NAME (RETURNED)\n         SR    R15,R15            GOOD READ INDICATION\n         L     R14,TOTENTRY       ENTRY COUNT\n         A     R14,=F'1'\n         ST    R14,TOTENTRY\n         L     R14,CURENTRY       CURRENT ENTRY IN THIS BLOCK\n         A     R14,=F'1'\n         ST    R14,CURENTRY\n         C     R14,MAXENTRY       ABOVE PREVIOUS MAXIMUM?\n         BNH   MBRDONE            NO, BRANCH\n         ST    R14,MAXENTRY       YES, NEW MAXIMUM\n         B     MBRDONE\n         SPACE 1\nNODIRBLK OUTSTR EOFSIMS,ERR=ERR   RECORD LENGTH IS NOT 256\n         OUTPT LSBLK,BLOCKLEN,ERR=ERR  CURRENT LRECL\n         LA    R15,12             ERROR INDICATION\nMBRDONE  L     R14,MEMBR14        RETURN ADDRESS\n         BR    R14\n         EJECT\n*   EXCP SUBROUTINES  (OPENIN, REREAD AND EXCP)\n*\nOPENIN   ST    R14,EXCPR14                  OPEN THE INPUT FILE\n         RDJFCB (IN)                        GET DSN AND VOLUME SERIAL\n         LTR   R15,R15                      SUCCESSFUL?\n         BZ    NOABE40                      YES, BRANCH\nABE40    OUTSTR NOTOPENR,ERR=ERR\n         ABEND 40                  ** RDJFCB FAILED **\nABE41    OUTSTR NOTOPENB,ERR=ERR\n         ABEND 41                  ** OBTAIN FAILED **\nABE42    OUTSTR NOTOPENO,ERR=ERR\n         ABEND 42                  ** OPEN FAILED **\nNOABE40  OBTAIN MYLABEL                     READ IN THE FORMAT 1 DSCB\n         LTR   R15,R15                      SUCCESSFUL?\n         BNZ   ABE41                        NO, ERROR\n         OPEN  (IN,INPUT)\n         TM    DCBOFLGS,X'10'               IN OPEN?\n         BZ    ABE42                        NO, ERROR\n         L     R14,EXCPR14\n*\n*   ENTRY TO REREAD THE OPEN DATA SET (DDNAME IS IN)\n*\nREREAD   ST    R14,EXCPR14\n         L     R1,DCBDEBAD\n         MVC   NUMEXT+3(1),16(R1)           NUMBER OF EXTENTS\n         LA    R14,16(R1)                   CURRENT EXTENT POINTER - 16\n         ST    R14,CUREXT                   SAVE FOR LATER\n         MVI   IOBSEEK,X'00'                RESET THE EXTENT NUMBER\n         LA    R15,4                        EARLY EXIT FLAG\n         L     R1,32(,R1)                   UCB ADDRESS (FIRST EXTENT)\n         CLI   19(R1),X'08'                 2314 DISK DRIVE?\n         BNE   FIRSTONE                     NO, BRANCH\n         LA    R1,CCW1                      FIRST CCW IS\n         ST    R1,STARTCCW                              SEARCH ID EQUAL\n         NI    CCW4+4,X'FF'-X'40'           TURN OFF COMMAND CHAINING\n         B     FIRSTONE                     DO THE INITIAL EXTENT\n*\n*\n*    FOR EACH EXTENT, INITIALIZE CCHHR, SECTOR NUMBER AND READ IN THE\n*        LENGTH OF THE FIRST RECORD.\n*\nEACHXTNT SR    R1,R1              AFTER THE FIRST EXTENT --\n         IC    R1,IOBSEEK\n         A     R1,=F'1'\n         STC   R1,IOBSEEK         INCREMENT THE EXTENT NUMBER\n         C     R1,NUMEXT          PAST LAST EXTENT?\n         BNL   EOF$DS             YES, NO END OF DATA SET RECORDED\n         EJECT\nFIRSTONE ST    R15,EXCPR15                  SAVE ENTRY CODE FOR LATER\n         L     R1,CUREXT\n         LA    R1,16(R1)                    CURRENT EXTENT ENTRY\n         MVC   IOBSEEK+3(4),6(R1)           INITIAL CCHH\n         ST    R1,CUREXT                    UPDATE FOR LATER\n         MVI   IOBSEEK+7,0                  WANT LENGTH OF RECORD 1\n         MVI   SNO,0                        SET SECTOR NUMBER=ZERO\n         SPACE 1\nINITREAD LA    1,CCW1A                      INITIALIZATION\n         ST    1,CPADDR                                   CCW\n         EXCP  IOB\n         WAIT  ECB=ECB\n         CLI   ECB,X'7F'                    GOOD READ?\n         BE    NOABE30                      YES, BRANCH\n         OUTSTR FIRSTRD,ERR=ERR\n         ABEND 30          **  FIRST READ OF EXTENT DID NOT WORK  **\nNOABE30  MVC   CPADDR,STARTCCW              RESET THE CCW ADDRESS\n         L     R15,EXCPR15\n         L     R14,EXCPR14                  RETURN ADDRESS FOR OPENIN,\n*                                           REREAD OR EOF (NEW EXTENT)\n         LTR   R15,R15                      EARLY EXIT DESIRED?\n         BNZR  R14                          YES, RETURN\n*\n*   ENTRY FOR EACH EXCP TO BE PERFORMED\n*\nEXCP     ST    R14,EXCPR14\n         CLI   ECB,X'42'                    EXTENT VIOLATION LAST TIME?\n         BE    EACHXTNT                     YES, DO THE NEXT EXTENT\n         MVC   CURMBB(8),IOBSEEK  SAVE THE DISK ADDRESS OF THIS RECORD\n         MVC   LSBLK+2(2),DATALN  SAVE THE BLOCK LENGTH FOR THIS READ\n         EXCP  IOB\n         WAIT  ECB=ECB\n         SR    R15,R15            GOOD READ FLAG\n         CLI   ECB,X'42'          EXTENT VIOLATION (NEXT TIME)?\n         BE    ENDEXCP            YES, QUIT\n         TM    FLAGS,ALLXTNT      READ ALL EXTENTS?\n         BO    EXCP7F             YES, IGNORE DS1LSTAR FOR DATA SET\n         TM    DS1DSORG+1,DS1ACBM VSAM DATA SET?\n         BO    EXCP7F             YES, IGNORE DS1LSTAR CHECK FOR VSAM\n         TM    DS1DSORG,DS1DSGIS  ISAM DATA SET?\n         BO    EXCP7F             YES, IGNORE DS1LSTAR CHECK FOR ISAM\n         CLC   CURMBB,LASTMBB     IN THE CURRENT DATA SET?\n         BNL   EOF$DS             NO, END OF DATA SET\nEXCP7F   CLI   ECB,X'7F'          GOOD READ?\n         BE    ENDEXCP            YES, QUIT\n         SPACE 1\n         CLI   ECB,X'41'          PERMANENT ERROR?\n         BE    NOABE10            YES, BRANCH\n         OUTSTR BLANKS\n         OUTSTR BADERROR,ERR=ERR\n         B     SOMERR         **  BAD ERROR; ECB NOT HEX 41, 42 OR 7F\n         EJECT\nNOABE10  TM    CSW+4,X'01'        ACTUALLY EOF?\n         BO    EOF\n         CLC   CSW+4(4),=X'00200000'  NULL MEMBER OR DATA SET?\n         BE    EOF                    YES, BRANCH\n         OUTSTR BLANKS\n         OUTSTR PERMERR,ERR=ERR\nSOMERR   LA    R15,12         **  PERMANENT ERROR--NOT END OF FILE  **\n         XC    LSBLK,LSBLK                 NO CHARACTERS READ\n         B     REISSUE\n*\nEOF      TM    FLAGS,ALLXTNT               READ ALL EXTENTS?\n         BO    EOF2                        YES, NO END OF FILE CHECK\n         TM    DS1DSORG,DS1DSGPS+DS1DSGDA  SEQUENTIAL OR DIRECT?\n         BM    EOF$DS                      YES, END DATA SET\n         TM    DS1DSORG+1,DS1ACBM          VSAM DATA SET?\n         BO    EOF$DS                      YES, END OF DATA SET\n         SPACE 1\nEOF2     LA    R15,4              END OF MEMBER FLAG\n         CLC   =H'0',DATALN       NEXT BLOCK LENGTH = 0?\n         BNE   ENDEXCP            NO, BRANCH\nREISSUE  ST    R15,EXCPR15\n         MVC   SAVECB(1),ECB      SAVE ECB CODE FOR LATER\n         LA    R1,CCW1A           NEED TO REISSUE THE INITIALIZATION\n         ST    R1,CPADDR            EXCP TO GET LENGTH AND ADDRESS\n         EXCP  IOB                  OF THE NEXT BLOCK\n         WAIT  ECB=ECB\n         L     R15,EXCPR15        READ ERROR (12) OR END OF MEMBER (4)\n         MVC   CPADDR,STARTCCW    RESET THE CCW ADDRESS\n         CLI   ECB,X'42'          EXTENT VIOLATION?\n         BE    EACHXTNT           YES, DO THE NEXT EXTENT -- EARLY EXIT\n         CLI   ECB,X'7F'          GOOD READ?\n         BE    ENDEXCP            YES, QUIT\n         CLI   ECB,X'41'          PERMANENT ERROR?\n         BE    NOABE70            YES, CHECK EOF\nABE70    OUTSTR BLANKS            SOME UNDEFINED READ ERROR\n         OUTSTR BADERROR,ERR=ERR\n         HEXES SAVECB,1,IOERROR+16    ECB ERROR CODE\n         HEXES CURMBB+3,5,IOERROR+26  CURRENT DISK CCHHR\n         MBBTTR CURMBB,TTR=TEMP       CONVERT TO TTR\n         HEXES TEMP,3,IOERROR+49      CURRENT DISK TTR\n         OUTSTR IOERROR,ERR=ERR\n         ABEND 70             **  SOME OTHER BAD ERROR  **\nNOABE70  TM    CSW+4,X'01'        NULL MEMBER (ANOTHER EOF)?\n         BO    ENDEXCP\nABE80    OUTSTR BLANKS            PERMANENT I/O ERROR\n         OUTSTR PERMERR,ERR=ERR\n         HEXES SAVECB,1,IOERROR+16    ECB ERROR CODE\n         HEXES CURMBB+3,5,IOERROR+26  CURRENT DISK CCHHR\n         MBBTTR CURMBB,TTR=TEMP       CONVERT TO TTR\n         HEXES TEMP,3,IOERROR+49      CURRENT DISK TTR\n         OUTSTR IOERROR,ERR=ERR\n         ABEND 80             **  PERMANENT ERROR AFTER EOF  **\nEOF$DS   LA    R15,8              END OF FILE AND DATA SET FLAG\nENDEXCP  L     R14,EXCPR14        RETURN ADDRESS\n         BR    R14\n         EJECT\n* OUTPUT ROUTINES:\n*   A. OUTRTNS -- OUTPUTS A STRING ONLY\n*   B. OUTERRS -- OUTPUTS A STRING ONLY PRECEEDED BY ***\n*   C. OUTRTN  -- OUTPUTS A NUMERIC VALUE AND A STRING\n*   D. OUTERR  -- OUTPUTS A NUMERIC VALUE AND A STRING PRECEEDED BY ***\n*\n*      NOTE: R0 NUMBER TO OUTPUT\n*            R1 CONTAINS THE ADDRESS OF THE STRING TO OUTPUT\n*            R14 CONTAINS THE RETURN ADDRESS\n*            R15 CONTAINS THE LENGTH OF THE STRING\n         SPACE 2\nOUTRTNS  TM    FLAGS,ERRONLY          ERROR MESSAGES ONLY?\n         BOR   R14                    YES, RETURN\n         MVI   ERRORIND,C'N'          NOT AN ERROR MESSAGE\n         SPACE 1\nOUTERRS  STM   R14,R1,OUTR14R1        SAVE R14 THROUGH R1\n         B     OUTSTMT                BRANCH INTO MAIN ROUTINE\n         SPACE 2\nOUTRTN   TM    FLAGS,ERRONLY          ERROR MESSAGES ONLY?\n         BOR   R14                    YES, RETURN\n         MVI   ERRORIND,C'N'          NOT AN ERROR MESSAGE\n         SPACE 1\nOUTERR   STM   R14,R1,OUTR14R1        SAVE R14 THROUGH R1\n         CVD   R0,DOUBLE\n         MVC   OUTLINE+8(11),=X'2020206B2020206B202120'\n         ED    OUTLINE+7(12),DOUBLE+3 OUTPUT UP TO 9 NUMERIC DIGITS\nOUTSTMT  BCTR  R15,0                  MACHINE LENGTH\n         MVC   OUTLINE+20(*-*),0(R1)  <<EXECUTED>>\n         EX    R15,*-6                MOVE IN THE STRING\n         LA    R15,OUTLINE+17\n         SPACE 1\nOUTSCAN  S     R15,=F'1'              SCAN BACKWARDS\n         CLC   0(4,R15),=CL4' '                     FOR FOUR\n         BNE   OUTSCAN                                      BLANKS\n         SPACE 1\n         LA    R0,4(,R15)             POINT TO FIRST NON-BLANK\n         CLI   ERRORIND,C'*'          ERROR MESSAGE?\n         BNE   OUTRESET               NO, BRANCH\n         MVC   0(3,R15),=C'***'       ERROR IDENTIFIER\n         LR    R0,R15                 POINT TO FIRST NON-BLANK\n         MVC   RETURNCD+2(2),=H'4095' RETURN CODE=4095\nOUTRESET MVI   ERRORIND,C'*'              ASSUME AN ERROR NEXT TIME\n         TM    DCBOFLGS-IHADCB+OUT,X'10'  OUT OPEN?\n         BO    OUTOPEN                    YES, BRANCH TO PUT\n         ST    R0,OUTR14R1+4              SAVE R0 IN R15 SLOT\n         OPEN  (OUT,OUTPUT)               OPEN\n         L     R0,OUTR14R1+4              RESTORE R0\n         TM    DCBOFLGS-IHADCB+OUT,X'10'  OPEN NOW?\n         BO    OUTOPEN                    YES, BRANCH\n         WTO   'DDNAME OUT COULD NOT BE OPENED',ROUTCDE=(11)\n         ABEND 101           ** OUTPUT FILE DID NOT OPEN  **\n         EJECT\nOUTOPEN  TR    OUTLINE+20(80),TRLINE  TRANSLATE UNPRINTABLES TO PERIODS\n         TM    DCBRECFM-IHADCB+OUT,X'04'  RECFM=..A?\n         BNO   *+8                        NO, BRANCH\n         S     R0,=F'1'                   YES, USE A BLANK ASA BYTE\n         PUT   OUT,(0)                OUTPUT THE LINE\n         MVC   OUTLINE+1(159),OUTLINE BLANK IT\n         LM    R14,R1,OUTR14R1        RESTORE REGISTERS\n         CLC   7(7,R1),=C'AVERAGE'    AVERAGE IN TEXT?\n         BNE   *+10                   NO, BRANCH\n         MVC   7(7,R1),=C'MAXIMUM'    YES, MOVE IN MAXIMUM\n         CLC   7(7,R1),=C'MINIMUM'    MINIMUM IN TEXT?\n         BNE   *+10                   NO, BRANCH\n         MVC   7(7,R1),=C'AVERAGE'    YES, MOVE IN AVERAGE\n         BR    R14\n         SPACE 3\nOUTEXIT  LH    R15,DCBLRECL-IHADCB+OUT\n         CH    R15,=H'133'                ABOVE MAXIMUM ALLOWED?\n         BH    DCBBAD                     YES, BRANCH\n         TM    DCBRECFM-IHADCB+OUT,X'FF'  ANY RECFM?\n         BM    *+8                        YES, BRANCH\n         MVI   DCBRECFM-IHADCB+OUT,X'90'  RECFM=FB IS THE DEFAULT\n         TM    DCBRECFM-IHADCB+OUT,X'C0'  RECFM=U?\n         BO    OUTEXIT2                   YES, THAT IS OK\n         TM    DCBRECFM-IHADCB+OUT,X'40'  RECFM=V?\n         BO    DCBBAD                     YES, ERROR\nOUTEXIT2 TM    DCBRECFM-IHADCB+OUT,X'02'  RECFM=..M?\n         BO    DCBBAD                     YES, ERROR\n         LTR   R15,R15                    ANY LRECL?\n         BNZ   *+8                        YES, USE IT\n         LH    R15,=H'80'                 LRECL=80 IS THE DEFAULT\n         LH    R1,DCBBLKSI-IHADCB+OUT     BLOCKSIZE\n         LTR   R1,R1                      BLKSIZE SPECIFIED?\n         BP    *+8                        YES, BRANCH\n         LH    R1,=H'6233'                DEFAULT BLKSIZE=6233\n         SR    R0,R0\n         DR    R0,R15                     COMPUTE BLOCKING FACTOR\n         LTR   R1,R1                      LRECL > BLKSIZE?\n         BP    *+8                        NO, BRANCH\n         L     R1,=F'1'                   YES, USE BLKSIZE=LRECL\n         MR    R0,R15\n         STH   R1,DCBBLKSI-IHADCB+OUT     UPDATE BLKSIZE\n         STH   R15,DCBLRECL-IHADCB+OUT    UPDATE LRECL\n         BR    R14\n         SPACE 2\nDCBBAD   WTO   'DDNAME OUT HAS AN INVALID DCB',ROUTCDE=(11)\n         ABEND 102           ** OUTPUT FILE DID NOT OPEN  **\n         EJECT\n* DATE CONVERT ROUTINES:\n*  A. CONVLABL CONVERTS A DATE FROM BYBDDD (WHERE BY IS BINARY YEAR\n*              AND BDDD IS BINARY DATE) TO YYDDDF FORMAT\n*  B. CONVDATE EXPECTS A DATE IN YYDDDF FORMAT\n*\n*      NOTE: R14 CONTAINS THE RETURN ADDRESS\n*            R1 ON EXIT POINTS TO RESULT IN MM/DD/YY FORMAT\n         SPACE 2\nCONVLABL ST    R14,CONVR14\n         SR    R15,R15               CLEAR R15\n         ICM   R15,7,0(R1)           ZERO HIGH BYTE\n         ST    R15,CONVWORK          SAVE FOR LATER\n         SRL   R15,16                SHIFT FOR YEAR ONLY\n         MH    R15,=H'1000'          SHIFT FOR ADD\n         AH    R15,CONVWORK+2        GET DDDD\n         CVD   R15,CONVWORK          IN PACKED FORM\n         MVC   CONVEDIT(4),CONVWORK+4  IN 00YYDDDF FORMAT NOW\n         LA    R1,CONVEDIT+1         GET YEAR IN BINARY\n         L     R14,CONVR14\n         SPACE 2\nCONVDATE ST    R14,CONVR14\n         LA    R15,CONVEDIT+9\n         XC    CONVWORK,CONVWORK\n         SR    R14,R14               SETUP FOR LEAP YEAR TEST\n         IC    R14,0(,R1)\n         SLL   R14,4\n         ST    R14,CONVWORK+4\n         OI    CONVWORK+7,X'0F'\n         LR    R14,R1\n         CVB   R0,CONVWORK           GET YEAR IN BINARY\n         SR    R1,R1\n         SRDL  R0,2                SHIFT OFF REMAINDER OF YEAR/4\n         SPACE 1\n         MVI   DAYTABLE+1,28       FEB USUALLY HAS 28 DAYS\n         LTR   R1,R1               THIS A LEAP YEAR?\n         BNZ   *+8                 NO, BRANCH\n         MVI   DAYTABLE+1,29       YES, FEB HAS 29 DAYS\n         SPACE 1\n         MVC   2(1,R15),0(R14)     YEAR RECORD CREATED\n         MVC   CONVWORK+6(2),1(R14)\n         CLI   CONVWORK+7,0        BAD DATE?\n         BE    DAYSKIP             YES, DON'T 0C7\n         CVB   R1,CONVWORK         GET RELATIVE DAYS IN BINARY\n         LA    R14,DAYTABLE\n         SR    R0,R0\n         SPACE 1\nDAYLOOP  IC    R0,0(R14)           DAYS THIS MONTH\n         SR    R1,R0               WITHIN THIS MONTH?\n         BNP   DAYNOW\n         A     R14,=F'1'\n         B     DAYLOOP\n         SPACE 3\nDAYNOW   AR    R1,R0               GET DAY OF THE MONTH\n         LA    R0,10\n         MR    R0,R0\n         CVD   R1,CONVWORK\n         MVC   1(1,R15),CONVWORK+6\n         LTR   R1,R1               DAY=0?\n         BZ    MONZERO             YES, USE MONTH=0 TOO\n         LA    R1,DAYTABLE-1\n         SR    R14,R1\n         LA    R1,10\n         MR    R0,R14\n         CVD   R1,CONVWORK\nMONZERO  MVC   0(1,R15),CONVWORK+6\n         SPACE 1\nDAYSKIP  MVC   CONVEDIT(9),=X'402120612020612020'\n         ED    CONVEDIT(9),0(R15)\n         LA    R1,CONVEDIT+1\n         L     R14,CONVR14\n         BR    R14\n         SPACE 3\nDAYTABLE DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31)\n         SPACE 2\nCONVR14  DC    F'0'\nCONVEDIT DC    CL16' '\nCONVWORK DC    D'0'\n         EJECT\nCCW1A    CCW   X'31',IOBSEEK+3,X'60',5      SEARCH ID EQUAL (CCHHR)\nCCW2A    CCW   X'08',*-8,X'60',1            TIC\nCCW3A    CCW   X'92',IOBSEEK+3,X'20',8      MT READ NEXT COUNT\n         SPACE 1\nCCW0     CCW   X'23',SNO,X'60',1            SET SECTOR\nCCW1     CCW   X'31',IOBSEEK+3,X'60',5      SEARCH ID EQUAL (CCHHR)\nCCW2     CCW   X'08',*-8,X'60',1            TIC\nCCW3     CCW   X'06',BUFFER,X'60',32760     READ DATA\nCCW4     CCW   X'92',IOBSEEK+3,X'60',8      MT READ NEXT COUNT\nCCW5     CCW   X'22',SNO,X'20',1            READ SECTOR NUMBER\n         SPACE 1\nIOB      DC    X'C2000000'    IOB FLAGS\n         DC    A(ECB)         ECB ADDRESS\nCSW      DC    2A(0)          CHANNEL STATUS\nCPADDR   DC    A(CCW1)        CCW CHAIN ADDRESS (CCW1A, CCW0 OR CCW1)\n         DC    A(IN),2A(0)    DCB ADDRESS, 8 FILL CHARACTERS\nIOBSEEK  DC    2A(0)          NEXT MBBCCHHR ADDRESS\nKEYLN    DS    X              NEXT KEYLENGTH\nDATALN   DS    2X             NEXT RECORD LENGTH\nSNO      DC    X'00'          NEXT SECTOR NUMBER\n*\nCURMBB   DC    CL8' '         CURRENT MBBCCHHR ADDRESS\nMBBCCHH  DC    CL7' '         SAVE AREA FOR MBBCCHH\n         SPACE 1\nERRORIND DC    C'*'           ERROR INDICATION FOR OUTPUT ROUTINES\nINDD     DC    CL8'IN'        IN DDNAME FOR DEVTYPE MACRO\n         SPACE 2\nBLDLPARM DC    H'1',H'12'     ONE MEMBER NAME, 12 BYTES OF INFORMATION\nBLDLMEM  DC    CL8' '         MEMBER NAME\nBLDLTTR  DC    XL4'00'        TTR OF THIS MEMBER\n         SPACE 2\nHEXTBL   DC    CL16'0123456789ABCDEF'\nSAVECB   DC    X'00'                      SAVE AREA FOR ECB\n         SPACE 3\nFLAGS    DC    X'01'              *** FLAG BYTE\nGAS      EQU   X'01'                      GAS RECORDS DESIRED (DEFAULT)\nLABELS   EQU   X'02'                      LABELS ONLY (NO DATA READ)\nALLXTNT  EQU   X'04'                      READ ALL EXTENTS OF DATA SET\nERRONLY  EQU   X'08'                      OUTPUT ONLY ERROR MESSAGES\nDORECFMU EQU   X'10'                      OUTPUT A MESSAGE FOR RECFM=U\nREALONE  EQU   X'20'                      CURRENTLY IN A REAL MEMBER\nDIRECTOR EQU   X'40'                      CURRENTLY IN THE DIRECTORY\n         EJECT\nSAVE     DC    18F'0'                    SAVE AREA\nLASTR    DC    F'0'                      CURRENT NUMBER OF RECORDS/TRK\nLASTREF  DC    F'0'                      LAST MEMBER TABLE REFERENCE\nEXCPR14  DC    F'0'                      RETURN REGISTER FOR EXCP\nEXCPR15  DC    F'0'                      EXIT FLAG REGISTER SAVEAREA\nSTATR14  DC    F'0'                      RETURN REGISTER FOR EXCPSTAT\nCUREXT   DC    F'0'                      ADDRESS OF THE CURRENT EXTENT\nNUMEXT   DC    F'0'                      TOTAL EXTENTS IN THE DATA SET\n         SPACE 2\nREADTOT  DC    F'0'                      TOTAL RECORDS READ\nMINBLK   DC    F'33000'                  MINIMUM LENGTH BLOCK\nMAXBLK   DC    F'0'                      MAXIMUM LENGTH BLOCK\nBYTECNT  DC    F'0'                      TOTAL BYTES READ\nREADTOTI DC    F'0'                      TOTAL RECORDS READ (ISAM)\nMINBLKI  DC    F'33000'                  MINIMUM LENGTH BLOCK (ISAM)\nMAXBLKI  DC    F'0'                      MAXIMUM LENGTH BLOCK (ISAM)\nBYTECNTI DC    F'0'                      TOTAL BYTES READ (ISAM)\n         SPACE 2\nTEMP     DC    F'0'                      WORK STORAGE\nGASBYTE  DC    F'0'                      TOTAL BYTES IN GAS MEMBERS\nRELBYTE  DC    F'0'                      TOTAL BYTES IN REAL MEMBERS\nMINGAS   DC    X'7F000000'               MIN BYTES IN GAS MEMBERS\nMAXGAS   DC    F'0'                      MAX BYTES IN GAS MEMBERS\nMINREL   DC    X'7F000000'               MIN BYTES IN REAL MEMBERS\nMAXREL   DC    F'0'                      MAX BYTES IN REAL MEMBERS\nSAVETOT  DC    F'0'                      STARTING BYTE COUNT HOLD\n         SPACE 2\nMAXR     DC    F'0'                      MAXIMUM RECORDS/TRACK\nMINR     DC    F'255'                    MINIMUM RECORDS/TRACK\nTRKBYTE  DC    F'0'                      SUM OF ALL BLOCKSIZES\nINAROW   DC    F'0'                      NUMBER OF CONSECUTIVE ERRORS\nTOTALIO  DC    F'0'                      TOTAL RECOVERED I/O ERRORS\nALLR     DC    F'0'                      SUM OF ALL RECORDS READ\nCURBYTE  DC    F'0'                      CURRENT TRACK BYTE COUNT\nMAXBYTE  DC    F'0'                      MAXIMUM BYTES/TRACK\n         SPACE 2\nMINBYTE  DC    X'7F000000'               MINIMUM BYTES/TRACK\nTRACKNUM DC    F'0'                      ACTUAL COUNT OF TRACKS USED\nEOFS     DC    F'0'                      COUNT OF END OF FILES\nGASCNT   DC    F'0'                      NUMBER OF GAS MEMBERS\nGASRDS   DC    F'0'                      NUMBER OF GAS RECORDS\nAVGBTRK  DC    F'0'                      AVERAGE BYTES PER TRACK\nAVAILTRK DC    F'0'                      FREE TRACKS\nTOTALTRK DC    F'0'                      TOTAL TRACKS\n         EJECT\nALIASES  DC    F'0'                      ALIASES IN THE DIRECTORY\nREALMBR  DC    F'0'                      REAL ENTRIES (DIRECTORY)\nREALENT  DC    F'0'                      MEMBER TABLE ENTRIES\nALLOCBLK DC    F'0'                      DIRECTORY BLOCKS ALLOCATED\nUSEDBLK  DC    F'0'                      DIRECTORY BLOCKS USED\nTRACKDIR DC    F'0'                      TRACKS USED FOR DIRECTORY\nRETURNCD DC    F'0'                      FINAL RETURN CODE\n         SPACE 2\nDIRPTRS  DC    3A(0)                     MEMBERS -- CURRENT POINTERS\nMEMBR14  DC    A(0)                      MEMBERS -- RETURN REGISTER\nMINENTRY DC    F'255'                    MEMBERS -- MIN ENTRIES/BLOCK\nCURENTRY DC    F'255'                    MEMBERS -- CURRENT ENTRY\nMAXENTRY DC    F'0'                      MEMBERS -- MAX ENTRIES/BLOCK\nTOTENTRY DC    F'0'                      MEMBERS -- TOTAL ENTRIES\n         SPACE 2\nCOMPR    DC    F'0'                      COMPRESS -- RECORDS ON TRACK\nCOMPTRK  DC    F'1'                      COMPRESS -- OUTPUT TRACK #\nCOMPTRBL DC    F'0'                      COMPRESS -- TRACK BALANCE\nEXCEEDBL DC    F'0'                      RECORDS WHICH EXCEED BLOCKSIZE\nDIVIDEBL DC    F'0'                      BLOCKSIZE/LRECL NOT EVEN\nMBRCOUNT DC    F'3000'                   INITIAL MEMBER TABLE SIZE\nOUTR14R1 DC    4A(0)                     SAVEAREA FOR OUTPUT ROUTINES\nSTARTCCW DC    A(CCW0)                   CCW1 FOR 2314 DEVICES\n         SPACE 2\nECB      DC    F'0'                      ECB\nLSBLK    DC    F'0'                      BLKSIZE OF THE CURRENT RECORD\nLSTRK    DC    F'0'                      LENGTH OF THE CURRENT RECORD\nSAVETBL  DC    A(0)                      MEMBER TABLE START -16\nMINLRECL DC    F'33000'                  MINIMUM LENGTH LRECL\nMAXLRECL DC    F'0'                      MAXIMUM LENGTH LRECL\nOVRLRECL DC    F'0'                      ACTUAL LRECL EXCEEDS MAXIMUM\nTOTLRECL DC    F'0'                      TOTAL LOGICAL RECORDS\n         SPACE 2\nINVBLOCK DC    F'0'                      TOTAL INVALID V BLOCK HEADERS\nALLLRECL DC    F'0'                      BYTE COUNT OF LOGICAL RECORDS\nBLKDIST  DC    65F'0'                    BLKSIZE DISTRIBUTION TABLE\n         SPACE 2\nDEVAREA  DC    5F'0'                     DEVTYPE RESULT AREA\nDEVTYPE  EQU   DEVAREA,4                 DEVTYPE UCBTYP FIELD\nDEVMAXB  EQU   DEVAREA+4,4               DEVTYPE MAXIMUM BLKSIZE\nDEVCYLS  EQU   DEVAREA+8,2               DEVTYPE TOTAL CYLINDERS\nDEVTRKCY EQU   DEVAREA+10,2              DEVTYPE TRACKS/CYLINDER\nDEVMAXT  EQU   DEVAREA+12,2              DEVTYPE MAXIMUM TRACK LENGTH\nDEVBLKOV EQU   DEVAREA+14,1 (OR 2)       DEVTYPE KEYED BLOCK OVERHEAD\nDEVBLNOK EQU   DEVAREA+16,1              DEVTYPE BLOCK OVERHEAD-NO KEY\nDEVFLAGS EQU   DEVAREA+17,1              DEVTYPE DEVICE FLAGS\nDEVTOL   EQU   DEVAREA+18,2              DEVTYPE TOLERANCE/BLK OVERHEAD\n         EJECT\nPROGRAM  DC  C'STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM'\nNODSCB2  DC    C'THE ISAM LABEL RECORD COULD NOT BE INPUT'\nDSCB2    DC    C'THE FOLLOWING DATA IS FROM THE ISAM LABEL RECORD:'\nDSSNOLEV DC    C'INDEX LEVELS PRESENT IN THIS DATA SET'\nDSSDVIND DC    C'TRACKS FOR EACH MASTER INDEX'\nDSSCYLOV DC    C'TRACKS OF CYLINDER OVERFLOW AREA ON EACH CYLINDER'\nDSSTAGDT DC    C'RECORDS TAGGED FOR DELETION'\nDSSRORG3 DC    C'OVERFLOW ACCESSES (NOT COUNTING FIRST IN CHAIN)'\n         SPACE 2\nDSSNOBYT DC    C'BYTES NEEDED TO HOLD THE HIGHEST INDEX IN CORE'\nDSSNOTRK DC    C'TRACKS OCCUPIED BY THE HIGHEST-LEVEL INDEX'\nDSSPRCTR DC    C'RECORDS IN THE PRIME AREA'\nDSSBYOVL DC    C'BYTES LEFT ON CURRENT INDEPENDENT OVERFLOW TRACK'\nDSSRORG2 DC    C'TRACKS REMAINING IN THE INDEPENDENT OVERFLOW AREA'\nDSSOVRCT DC    C'RECORDS IN THE OVERFLOW AREA'\nDSSRORG1 DC    C'CYLINDER OVERFLOW AREAS ARE FULL'\nEXCEEDMS DC    C'RECORDS EXCEEDED THE DATA SET BLOCKSIZE'\n         SPACE 2\nDIVIDEMS DC    C'RECORD BLOCKSIZES ARE NOT EVENLY DIVISIBLE BY THE LRECX\n               L'\nSTATGAS  DC    C'IS THE MINIMUM NUMBER OF BYTES IN A GAS MEMBER'\nSTATGAST DC    C'IS THE TOTAL NUMBER OF BYTES IN GAS MEMBERS'\nSTATREAL DC    C'IS THE MINIMUM NUMBER OF BYTES IN A REAL MEMBER'\nSTATRELT DC    C'IS THE TOTAL NUMBER OF BYTES IN REAL MEMBERS'\nSTATBLKS DC    C'IS THE MINIMUM BLOCK LENGTH'\nSTATDIR  DC   C'IS THE MINIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY X\n               BLOCK'\n         SPACE 2\nNOREALS  DC    C'NO MEMBERS ARE IN THIS PARTITIONED DATA SET'\nNOGASBLK DC    C'NONE OF THESE ARE GAS BLOCKS'\nTOTBYTS  DC    C'DATA BYTES ARE IN THIS DATA SET'\nTOTTRKS  DC    C'TRACKS WERE READ IN THIS DATA SET'\nNUMBLKS  DC    C'DATA BLOCKS ARE IN THIS DATA SET'\nGASBLKS  DC    C'OF THESE ARE GAS BLOCKS'\nEOFSS    DC    C'END OF FILE'\nENDMBR   DC    C'END OF MEMBER INDICATORS (FILE MARKS) ARE RECORDED'\n         SPACE 2\nGASMBR   DC    C'OF THESE ARE FOR GAS MEMBERS'\nALLBLK   DC    C'DIRECTORY BLOCKS ARE ALLOCATED'\nUSEBLK   DC    C'OF THESE ARE IN USE'\nUSENAME  DC    C'MEMBER NAMES ARE IN THE DIRECTORY'\nALSNAME  DC    C'OF THESE ARE ALIASES'\nNUMTRKS  DC    C'TRACKS ARE ALLOCATED FOR THIS DATA SET'\nEXTENTS  DC    C'IS THE SECONDARY ALLOCATION QUANTITY'\nNOSEC    DC    C'NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL'\n         EJECT\nFRENONE  DC    C'ALL OF THESE ARE IN USE'\nFRETRKS  DC    C'OF THESE ARE NOT IN USE'\nALNOREAL DC    C'12345678 IS AN ALIAS WHICH HAS NO CORRESPONDING REAL EX\n               NTRY'\nALIASERR DC   C'12345678 AND 12345678 ARE APPARENT ALIASES BUT NEITHER X\n               HAS AN ALIAS BIT SET'\nSCALOS   DC    C'DATA SET IS ALLOCATED IN TRACKS              '\nNOBDBS   DC    C'BYTES ARE USED IN THE LAST PDS DIRECTORY BLOCK'\n         SPACE 2\nTRBALS   DC    C'BYTES ARE AVAILABLE ON THE LAST USED TRACK'\nIOERROR  DC    C'READ ERROR--ECB=12; CCHHR=12.45.78.01.34  OR TTR=TT.TTX\n               .RR '\nTOOMANY  DC    C'TOO MANY CONSECUTIVE I/O ERRORS (10)'\nTOTALIOS DC    C'I/O ERRORS WERE ENCOUNTERED'\nNOTOPENR DC    C'RDJFCB FOR DDNAME IN FAILED'\nNOTOPENB DC    C'OBTAIN FOR DDNAME IN FAILED'\nNOTOPENO DC    C'OPEN FOR DDNAME IN FAILED'\n         SPACE 2\nFIRSTRD  DC    C'FIRST READ OF AN EXTENT WAS NOT SUCCESSFUL'\nTTRISLOW DC    C'TTR IN MEMBER TABLE IS LESS THAN THE CURRENT TTR'\nDSBAD    DC    C'THIS DATA SET MAY HAVE BEEN DESTROYED BY A COMPRESS'\nNOTFOUND DC    C'THE FOLLOWING MEMBERS WERE NOT FOUND:'\nNOMEMBER DC    C'12345678 AT TTR=TT.TT.RR '\nLSTARBAD DC    C'THE DS1LSTAR INDICATOR MAY BE INCORRECT'\nRERUN    DC    C'RETRY STATS WITH PARM=ALLEXTENTS'\nBADERROR DC    C'UNDEFINED READ ERROR'\n         SPACE 2\nPERMERR  DC    C'PERMANENT I/O ERROR'\nSTATLREC DC    C'IS THE MINIMUM LOGICAL RECORD LENGTH'\nTOTLRECM DC    C'LOGICAL RECORDS ARE IN THIS DATA SET'\nOVRLRECM DC    C'LOGICAL RECORD LENGTHS EXCEED THE MAXIMUM LRECL'\nINVBLOCM DC    C'VARIABLE BLOCK HEADER RECORDS ARE INVALID'\n         SPACE 2\nEOFSIMS  DC    C'BAD DIRECTORY RECORD -- RECORD LENGTH IS NOT 256'\nBLOCKLEN DC    C'IS THE BLOCK LENGTH -- END OF DIRECTORY SIMULATED'\nDIRERRS  DC    C'READ ERROR IN THE DIRECTORY'\nBLKNUMS  DC    C'IS THE BLOCK NUMBER -- BLOCK IGNORED'\nGASERRS  DC    C'ERROR IN A GAS MEMBER -- END OF MEMBER SIMULATED'\nCURRMBR  DC    C'12345678 IS THE MEMBER -- END OF MEMBER SIMULATED'\nLASTMEMS DC    C'12345678 IS THE LAST MEMBER IN THE DATA SET'\nNULL     DC    C'EMPTY DATA SET'\n         EJECT\n*                                            THIS MEMBER WAS\nGASMEM   DC    C'GAS MEMBER AT TTR TT.TT.RR, DATA:           '\nLASTREAD DC    C'LAST SUCCESSFUL READ WAS AT TTR TT.TT.RR '\nNOTREAD  DC    C'TRACKS WERE NOT READ'\nEXTHDR   DC    C'EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CCX\n               .HH.HH--CC.CC.HH.HH  CYLB'\nEXTUND   DC    C'------  ---  ------  --------  --------  ------  -----X\n               ------  -----------  ----'\n         SPACE 2\nDATEHDR  DC   C'DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   X\n               SECURITY'\nDATEUND  DC   C'           -------   -------   --------   ----------   X\n               --------'\nSTATTRKH DC    C'TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM'\nSTATTRKU DC    C'                   -------    -------    -------'\nDIRTRACK DC    C'TRACKS ARE ALLOCATED FOR THE DIRECTORY'\nDIRBYTES DC    C'BYTES ARE ALLOCATED FOR THE DIRECTORY'\nMEMBERNO DC    C'12345678 IS NOT IN THIS DATA SET'\n         SPACE 2\nLSTAR    DC    C'DS1LSTAR IS TT.TT.RR  (FOR 12345 TRACKS IN USE)'\nRECSIZE  DC    C'RECORD SIZE DISTRIBUTION:'\nBLKPER   DC    C' ----1----2----3----4----5----6----7----8----9----0'\nGASTRK   DC    C' 123,456.78XTRACKS COULD BE REGAINED BY COMPRESSING',CX\n               L8' '        8 PADDING CHARACTERS\n         ORG   GASTRK\n         DC    X'40202020',C',',X'202120',C'.',X'202020'\n         ORG   ,\n         SPACE 2\nBLANKS   DC    CL80' '\nOUTLINE  DC    CL160' '\n         EJECT\n***      TRANSLATE TABLE TO CONVERT UNPRINTABLES TO PERIODS\nTRLINE   DC    256C'.'            ASSUME ALL UNPRINTABLE FIRST\n         ORG   TRLINE+C' '\n         DC    1X'40'             BLANK IS OK\n         ORG   TRLINE+C'\u00a2'\n         DC    C'\u00a2.<(+|&&'        \u00a2.<(+|&  ARE OK\n         ORG   TRLINE+C'!'\n         DC    C'!$*);\u00ac-/'        !$*);\u00ac-/  ARE OK\n         ORG   TRLINE+C','\n         DC    C',%_>?'           ,%_>?  ARE OK\n         ORG   TRLINE+C':'\n         DC    C':#@''=\"'         :#@'=\"  ARE OK\n         ORG   TRLINE+X'81'       LOWER-CASE ABCDEFGHI\n         DC    X'818283848586878889'\n         ORG   TRLINE+X'91'       LOWER-CASE JKLMONPQR\n         DC    X'919293949596979899'\n         ORG   TRLINE+X'A2'       LOWER-CASE STUVWXYZ\n         DC    X'A2A3A4A5A6A7A8A9'\n         ORG   TRLINE+C'A'\n         DC    C'ABCDEFGHI'       ABCDEFGHI  ARE OK\n         ORG   TRLINE+C'J'\n         DC    C'JKLMNOPQR'       JKLMNOPQR  ARE OK\n         ORG   TRLINE+C'S'\n         DC    C'STUVWXYZ'        STUVWXYZ  ARE OK\n         ORG   TRLINE+C'0'\n         DC    C'0123456789'      0123456789  ARE OK\n         ORG   ,\n         SPACE 3\nWORK     DC    CL80' '\nDOUBLE   DS    D\nLASTMBB  DS    D\nJFCBXIT  DC    X'87',AL3(JFCB)            JFCB BLOCK\nJFCB     DS    0D\n         IEFJFCBN                         JFCB MAPPING MACRO\n*\nIN       DCB DDNAME=IN,DSORG=PS,MACRF=E,EXLST=JFCBXIT\nOUT      DCB DDNAME=OUT,DSORG=PS,MACRF=PM,EXLST=OUTCHECK\nOUTCHECK DC  X'85',AL3(OUTEXIT)\n         SPACE 3\n         PRINT GEN\nMYLABEL  CAMLST SEARCH,JFCBDSNM,JFCBVOLS,WORKAREA\n         EJECT\nWORKAREA DS    0D,CL148\n         ORG   WORKAREA-44    RECORD KEY IS NOT INPUT\n         IECSDSL1 (1)         FORMAT 1 DSCB\n         ORG   ,\n         SPACE 3\n         LTORG\n         EJECT\nBUFFER   DS    0D,32760X      MAXIMUM RECORD SIZE FOR 3380 DEVICES\n         ORG   BUFFER-44      RECORD KEY IS NOT INPUT\n         IECSDSL1 (2)         FORMAT 2 DSCB\n         ORG   ,\n         SPACE 3\nESDENTRY DSECT\nESDNAME  DS    CL8            NAME OF EXTERNAL SYMBOL\nESDTYPE  DS    X              ESD TYPE\nCODESD   EQU   X'00'          ENTERNAL DEFINITION\nCODELR   EQU   X'03'          EXTERNAL REFERENCE\nCODEPC   EQU   X'04'          PRIVATE CODE DEFINITION\nCODECM   EQU   X'05'          COMMON BLOCK\nCODESEG  EQU   X'14'          OVERLAY SEGMENT TABLE\nCODEENTB EQU   CODESEG        OVERLAY ENTRY TABLE\nESDADDR  DS    XL3            RELATIVE OFFSET\nESDSEG#  DS    X              SEGMENT NUMBER\nESDLEN   DS    XL3            LENGTH OF SD ENTRY\nLENESD1  EQU   *-ESDNAME      LENGTH OF ESD DATA\n         SPACE 3\n         PRINT NOGEN\n         DCBD  DSORG=PS,DEVD=DA\n         END   STATS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STATSAMP": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x821\\x8f\\x00\\x821\\x8f\\x165\\x036\\x036\\x00\\x00\\xc8\\xc1\\xc2\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-11-14T00:00:00", "modifydate": "1982-11-14T16:35:00", "lines": 822, "newlines": 822, "modlines": 0, "user": "HABL"}, "text": "1***  SAMPLE  *** ***  SEQUENTIAL DATA SET\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=HABL.CBTAPE.DATA,VOL=SER=HTSO02,\n //      DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PS)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n            1/27/82   0/00/00   10/06/82   ON           NONE\n\n 63 TRACKS ARE ALLOCATED FOR THIS DATA SET\n ALL OF THESE ARE IN USE\n 865 BYTES ARE AVAILABLE ON THE LAST USED TRACK\n DATA SET IS ALLOCATED IN TRACKS\n 5 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 00.3E.04  (FOR    63 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  258  HTSO02  00.00.01  00.3E.FF      63  02.C4.00.02  02.C7.00.07  NO\n\n\n END OF FILE\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            4          4          4\n BYTES/TRACK          11760      12469      12480\n\n\n 9,819 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 785,520 DATA BYTES ARE IN THIS DATA SET\n 63 TRACKS WERE READ IN THIS DATA SET\n\n 2,400 IS THE MINIMUM BLOCK LENGTH\n 3,117 IS THE AVERAGE BLOCK LENGTH\n 3,120 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 02000-02499  >   0%      1\n 03000-03499  ----1----2----3----4----5----6----7----8----9----> 100%    251\n\n\n 252 DATA BLOCKS ARE IN THIS DATA SET\n\n\n RC=0\n1***  SAMPLE  *** ***  SEQUENTIAL DATA SET (MEMBER OF A PARTITIONED DATA SET)\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=HABL.LIB.ASM(STATS),VOL=SER=HSCR01,\n //      DCB=(RECFM=FB,LRECL=80,BLKSIZE=12960,DSORG=PS)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n            8/09/82   0/00/00    0/00/00   ON           NONE\n\n 760 TRACKS ARE ALLOCATED FOR THIS DATA SET\n 123 OF THESE ARE NOT IN USE\n 4,974 BYTES ARE AVAILABLE ON THE LAST USED TRACK\n DATA SET IS ALLOCATED IN CYLINDERS\n 10 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 02.7C.02  (FOR   637 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  25F  HSCR01  00.00.01  02.F7.FF     760  00.93.00.00  00.BA.00.12  YES\n\n\n END OF FILE\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            1          1          1\n BYTES/TRACK           8960      12693      12960\n\n\n 2,380 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 190,400 DATA BYTES ARE IN THIS DATA SET\n 15 TRACKS WERE READ IN THIS DATA SET\n\n 8,960 IS THE MINIMUM BLOCK LENGTH\n 12,693 IS THE AVERAGE BLOCK LENGTH\n 12,960 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 08500-08999  --->   7%      1\n 12500-12999  ----1----2----3----4----5----6----7----8----9->  93%     14\n\n\n 15 DATA BLOCKS ARE IN THIS DATA SET\n\n\n RC=0\n1***  SAMPLE  *** ***  PARTITIONED DATA SET\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=HABL.LIB.CLIST,VOL=SER=HTSO01,\n //      DCB=(RECFM=VB,LRECL=255,BLKSIZE=3120,DSORG=PO)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n           12/21/81   0/00/00   10/11/82   ON           NONE\n\n 19 TRACKS ARE ALLOCATED FOR THIS DATA SET\n 6 OF THESE ARE NOT IN USE\n 1,223 BYTES ARE AVAILABLE ON THE LAST USED TRACK\n DATA SET IS ALLOCATED IN CYLINDERS\n 1 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 00.0C.32  (FOR    13 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  158  HTSO01  00.00.01  00.12.FF      19  00.FF.00.00  00.FF.00.12  YES\n\n\n DYNAOLD  IS AN ALIAS WHICH HAS NO CORRESPONDING REAL ENTRY\n\n STATSCAP IS THE LAST MEMBER IN THE DATA SET\n\n 80 DIRECTORY BLOCKS ARE ALLOCATED\n 10 OF THESE ARE IN USE\n 20,480 BYTES ARE ALLOCATED FOR THE DIRECTORY\n 3 TRACKS ARE ALLOCATED FOR THE DIRECTORY\n\n 5 IS THE MINIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 12 IS THE AVERAGE NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 20 IS THE MAXIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 120 MEMBER NAMES ARE IN THE DIRECTORY\n 2 OF THESE ARE ALIASES\n\n\n GAS MEMBER AT TTR 00.09.17, DATA:\n ........00000010PROC 1 LIB....00000020FREE DD(SYSUT1,SYSUT2,SYSIN,SYSPRINT)....\n\n GAS MEMBER AT TTR 00.0A.02, DATA:\n ........00010001PROC 1 MEMBER....00020001SPF CMD(%ISPEXEC EDIT DATASET('HABL.LI\n\n GAS MEMBER AT TTR 00.0A.12, DATA:\n ........00010000PROC 1 LIBRARY....00020000  WRITE NOTE:DISASMS CLIST --  LIBRAR\n\n GAS MEMBER AT TTR 00.0A.1C, DATA:\n ........00000010PROC 0 MEMBER(NPDSTEST)....00000020ALIAS PDSTEST &MEMBER....000\n\n GAS MEMBER AT TTR 00.0B.18, DATA:\n .O......00010000TEST 'SYS1.LINKHIT(PDSSPF)' CP....00020000PDS LIB.CLIST....0003\n\n GAS MEMBER AT TTR 00.0B.1A, DATA:\n ........00010000PROC 0  PARM1(OPER) PARM2()....00020000WRITE *** ASMTEST, SYSPA\n\n GAS MEMBER AT TTR 00.0B.24, DATA:\n .$......00010000TEST 'SYS1.LINKHIT(PDSNEW)' CP....00020000PDS LIB.CLIST....0003\n\n *** (NOTE: SEVERAL LINES WERE DELETED HERE) ***\n\n GAS MEMBER AT TTR 00.0C.21, DATA:\n ........00010001PROC 1 MEMBER....00020001SPF CMD(ISPEXEC EDIT DATASET('HABL.LIB\n\n GAS MEMBER AT TTR 00.0C.2B, DATA:\n ........00010000PROC 1 FROMDSN TODSN....00020000FREEALL....00030000ALLOC F(SYSI\n\n GAS MEMBER AT TTR 00.0C.2F, DATA:\n ........00000010PROC 2 DSNAME MEMBER....00000020FREEALL....00000030ALLOC F(IN)\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            8         29         49\n BYTES/TRACK           5167       8265      10911\n\n\n 5 IS THE MINIMUM LOGICAL RECORD LENGTH\n 42 IS THE AVERAGE LOGICAL RECORD LENGTH\n 255 IS THE MAXIMUM LOGICAL RECORD LENGTH\n 2,074 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 86,970 DATA BYTES ARE IN THIS DATA SET\n 13 TRACKS WERE READ IN THIS DATA SET\n\n 42 IS THE MINIMUM BLOCK LENGTH\n 580 IS THE AVERAGE BLOCK LENGTH\n 3,112 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  ----1----2----3----4----5----6->  64%     96\n 00500-00999  ----1----2->  23%     35\n 01000-01499  ->   4%      6\n 01500-01999  ->   3%      4\n 02000-02499  >   1%      1\n 02500-02999  >   1%      2\n 03000-03499  ->   4%      6\n\n\n 150 DATA BLOCKS ARE IN THIS DATA SET\n 27 OF THESE ARE GAS BLOCKS\n 146 END OF MEMBER INDICATORS (FILE MARKS) ARE RECORDED\n 27 OF THESE ARE FOR GAS MEMBERS\n\n 91 IS THE MINIMUM NUMBER OF BYTES IN A GAS MEMBER\n 198 IS THE AVERAGE NUMBER OF BYTES IN A GAS MEMBER\n 693 IS THE MAXIMUM NUMBER OF BYTES IN A GAS MEMBER\n 5,338 IS THE TOTAL NUMBER OF BYTES IN GAS MEMBERS\n\n 1.21 TRACKS COULD BE REGAINED BY COMPRESSING\n\n 0 IS THE MINIMUM NUMBER OF BYTES IN A REAL MEMBER\n 686 IS THE AVERAGE NUMBER OF BYTES IN A REAL MEMBER\n 13,015 IS THE MAXIMUM NUMBER OF BYTES IN A REAL MEMBER\n 81,632 IS THE TOTAL NUMBER OF BYTES IN REAL MEMBERS\n\n\n RC=1\n1***  SAMPLE  *** ***  PARTITIONED DATA SET (LOAD LIBRARY)\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=SYS1.LINKHIT,VOL=SER=HTSO02,\n //      DCB=(RECFM=U,BLKSIZE=13030,DSORG=PO)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n            8/09/82   0/00/00    0/00/00   ON           NONE\n\n 760 TRACKS ARE ALLOCATED FOR THIS DATA SET\n 342 OF THESE ARE NOT IN USE\n 8,263 BYTES ARE AVAILABLE ON THE LAST USED TRACK\n DATA SET IS ALLOCATED IN CYLINDERS\n 10 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 01.A1.03  (FOR   418 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  258  HTSO02  00.00.01  02.F7.FF     760  02.60.00.00  02.87.00.12  YES\n\n\n JULIAN   IS AN ALIAS WHICH HAS NO CORRESPONDING REAL ENTRY\n\n INCORZAP IS AN ALIAS WHICH HAS NO CORRESPONDING REAL ENTRY\n\n PDSNEW2  IS THE LAST MEMBER IN THE DATA SET\n\n 80 DIRECTORY BLOCKS ARE ALLOCATED\n 43 OF THESE ARE IN USE\n 20,480 BYTES ARE ALLOCATED FOR THE DIRECTORY\n 3 TRACKS ARE ALLOCATED FOR THE DIRECTORY\n\n 5 IS THE MINIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 6 IS THE AVERAGE NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 7 IS THE MAXIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 276 MEMBER NAMES ARE IN THE DIRECTORY\n 23 OF THESE ARE ALIASES\n\n\n GAS MEMBER AT TTR 01.3B.07, THIS MEMBER WAS\n LINKAGE-EDITED ON  8/31/82; CSECTS ARE: BLKDISK, BLKPCL\n\n GAS MEMBER AT TTR 01.44.07, THIS MEMBER WAS\n LINKAGE-EDITED ON  9/10/82; CSECTS ARE: PDS, PCLMAIN, PCLLIST, PCLFIND, ...\n\n GAS MEMBER AT TTR 01.47.04, THIS MEMBER WAS\n LINKAGE-EDITED ON  3/29/78; CSECTS ARE: TAPESCAN, DATE, EVS\n\n GAS MEMBER AT TTR 01.48.05, THIS MEMBER WAS\n NULL\n\n GAS MEMBER AT TTR 01.49.04, THIS MEMBER WAS\n NULL\n\n GAS MEMBER AT TTR 01.4C.04, THIS MEMBER WAS\n NULL\n\n GAS MEMBER AT TTR 01.4C.0D, THIS MEMBER WAS\n LINKAGE-EDITED ON  9/14/82; CSECTS ARE: STATS\n\n GAS MEMBER AT TTR 01.55.04, THIS MEMBER WAS\n LINKAGE-EDITED ON  9/15/82; CSECTS ARE: PDS, PCLMAIN, PCLLIST, PCLFIND, ...\n\n *** (NOTE: SEVERAL LINES WERE DELETED HERE) ***\n\n GAS MEMBER AT TTR 01.9B.04, THIS MEMBER WAS\n LINKAGE-EDITED ON 10/08/82; CSECTS ARE: PDS, PCLMAIN, PCLLIST, PCLFIND, ...\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            1          8         38\n BYTES/TRACK            310       9360      13024\n\n\n 3,061 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 3,891,881 DATA BYTES ARE IN THIS DATA SET\n 418 TRACKS WERE READ IN THIS DATA SET\n\n 4 IS THE MINIMUM BLOCK LENGTH\n 1,271 IS THE AVERAGE BLOCK LENGTH\n 13,024 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  ----1----2----3----4----5----6----7---->  79%   2416\n 00500-00999  >   1%     43\n 01000-01499  >   2%     72\n 01500-01999  >   1%     25\n 02000-02499  >   1%     38\n 02500-02999  >   1%     23\n 03000-03499  >   1%     25\n 03500-03999  >   1%     23\n 04000-04499  >   2%     48\n 04500-04999  >   1%     23\n 05000-05499  >   1%     26\n 05500-05999  >   1%     24\n 06000-06499  >   2%     53\n 06500-06999  >   0%      6\n 07000-07499  >   1%     17\n 07500-07999  >   1%     18\n 08000-08499  >   1%     33\n 08500-08999  >   0%     12\n 09000-09499  >   0%      7\n 09500-09999  >   0%     10\n 10000-10499  >   0%     10\n 10500-10999  >   0%     11\n 11000-11499  >   0%     10\n 11500-11999  >   0%     12\n 12000-12499  >   2%     75\n 13000-13499  >   0%      1\n\n\n 3,061 DATA BLOCKS ARE IN THIS DATA SET\n 291 OF THESE ARE GAS BLOCKS\n 282 END OF MEMBER INDICATORS (FILE MARKS) ARE RECORDED\n 26 OF THESE ARE FOR GAS MEMBERS\n\n 0 IS THE MINIMUM NUMBER OF BYTES IN A GAS MEMBER\n 21,775 IS THE AVERAGE NUMBER OF BYTES IN A GAS MEMBER\n 26,330 IS THE MAXIMUM NUMBER OF BYTES IN A GAS MEMBER\n 566,144 IS THE TOTAL NUMBER OF BYTES IN GAS MEMBERS\n\n 64.00 TRACKS COULD BE REGAINED BY COMPRESSING\n\n 374 IS THE MINIMUM NUMBER OF BYTES IN A REAL MEMBER\n 12,991 IS THE AVERAGE NUMBER OF BYTES IN A REAL MEMBER\n 208,059 IS THE MAXIMUM NUMBER OF BYTES IN A REAL MEMBER\n 3,325,737 IS THE TOTAL NUMBER OF BYTES IN REAL MEMBERS\n\n\n RC=64\n1***  SAMPLE  *** ***  PARTITIONED DATA SET (WITH I/O ERRORS)\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=HABL.TEST.JCL,VOL=SER=HCAT01,\n //      DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PO)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n           12/28/81   0/00/00    9/28/82   ON           NONE\n\n 50 TRACKS ARE ALLOCATED FOR THIS DATA SET\n 12 OF THESE ARE NOT IN USE\n 2,313 BYTES ARE AVAILABLE ON THE LAST USED TRACK\n DATA SET IS ALLOCATED IN TRACKS\n 10 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 00.25.0B  (FOR    38 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  159  HCAT01  00.00.01  00.09.FF      10  00.00.00.01  00.00.00.0A  NO\n      1  159  HCAT01  00.0A.01  00.13.FF      10  01.C9.00.00  01.C9.00.09  NO\n      2  159  HCAT01  00.14.01  00.1D.FF      10  01.C9.00.0A  01.CA.00.00  NO\n      3  159  HCAT01  00.1E.01  00.27.FF      10  01.CA.00.01  01.CA.00.0A  NO\n      4  159  HCAT01  00.28.01  00.31.FF      10  02.19.00.0B  02.1A.00.01  NO\n\n\n *** PAN2PAN  AND TEMP     ARE APPARENT ALIASES BUT NEITHER HAS AN ALIAS BIT SET\n\n BMPEXTM  IS THE LAST MEMBER IN THE DATA SET\n\n 20 DIRECTORY BLOCKS ARE ALLOCATED\n 14 OF THESE ARE IN USE\n 5,120 BYTES ARE ALLOCATED FOR THE DIRECTORY\n 1 TRACKS ARE ALLOCATED FOR THE DIRECTORY\n\n 1 IS THE MINIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 12 IS THE AVERAGE NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 21 IS THE MAXIMUM NUMBER OF MEMBER ENTRIES IN A DIRECTORY BLOCK\n 169 MEMBER NAMES ARE IN THE DIRECTORY\n\n\n *** PERMANENT I/O ERROR\n *** READ ERROR--ECB=41; CCHHR=01.CA.00.00.04  OR TTR=00.1D.04\n *** IMSX739  IS THE MEMBER -- END OF MEMBER SIMULATED\n\n GAS MEMBER AT TTR 00.1D.09, DATA:\n //HJBCL    JOB (01,02,142,JAI,SEXT),'RELOAD IMSB DATA',\n\n GAS MEMBER AT TTR 00.1D.17, DATA:\n\n *** PERMANENT I/O ERROR\n *** READ ERROR--ECB=41; CCHHR=01.CA.00.00.17  OR TTR=00.1D.17\n *** ERROR IN A GAS MEMBER -- END OF MEMBER SIMULATED\n (NULL MEMBER)\n\n GAS MEMBER AT TTR 00.25.0A, DATA:\n (NULL MEMBER)\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            5         11         25\n BYTES/TRACK           7440      10514      11920\n\n\n 4,930 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 394,400 DATA BYTES ARE IN THIS DATA SET\n 38 TRACKS WERE READ IN THIS DATA SET\n\n 80 IS THE MINIMUM BLOCK LENGTH\n 1,869 IS THE AVERAGE BLOCK LENGTH\n 3,120 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  --->   8%     16\n 00500-00999  ----1--->  17%     35\n 01000-01499  ----1--->  17%     36\n 01500-01999  ----1>  12%     26\n 02000-02499  ----1-->  15%     31\n 02500-02999  ---->  10%     22\n 03000-03499  ----1----2>  21%     45\n\n\n 211 DATA BLOCKS ARE IN THIS DATA SET\n 2 OF THESE ARE GAS BLOCKS\n 171 END OF MEMBER INDICATORS (FILE MARKS) ARE RECORDED\n 3 OF THESE ARE FOR GAS MEMBERS\n\n 0 IS THE MINIMUM NUMBER OF BYTES IN A GAS MEMBER\n 1,467 IS THE AVERAGE NUMBER OF BYTES IN A GAS MEMBER\n 4,400 IS THE MAXIMUM NUMBER OF BYTES IN A GAS MEMBER\n 4,400 IS THE TOTAL NUMBER OF BYTES IN GAS MEMBERS\n\n 0.42 TRACKS COULD BE REGAINED BY COMPRESSING\n\n 0 IS THE MINIMUM NUMBER OF BYTES IN A REAL MEMBER\n 2,321 IS THE AVERAGE NUMBER OF BYTES IN A REAL MEMBER\n 15,920 IS THE MAXIMUM NUMBER OF BYTES IN A REAL MEMBER\n 390,000 IS THE TOTAL NUMBER OF BYTES IN REAL MEMBERS\n\n\n *** 2 I/O ERRORS WERE ENCOUNTERED\n\n RC=4095\n1***  SAMPLE  *** ***  ISAM DATA SET\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=HABL.LIB.ISAM1,VOL=SER=HTSO02,\n //      DCB=(RECFM=FB,LRECL=110,BLKSIZE=2750,KEYLEN=8,RKP=1,DSORG=IS)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n           10/11/82   0/00/00    0/00/00   ON           NONE\n\n 76 TRACKS ARE ALLOCATED FOR THIS DATA SET\n DATA SET IS ALLOCATED IN CYLINDERS\n NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL\n DS1LSTAR IS 00.00.00  (FOR     0 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  258  HTSO02  00.00.01  00.4B.FF      76  00.68.00.00  00.6B.00.12  YES\n\n\n END OF FILE\n 10 IS THE MINIMUM BLOCK LENGTH\n 1,613 IS THE AVERAGE BLOCK LENGTH\n 2,750 IS THE MAXIMUM BLOCK LENGTH\n 94 DATA BLOCKS ARE IN THIS DATA SET\n\n END OF FILE\n 6,300 IS THE MINIMUM BLOCK LENGTH\n 6,300 IS THE AVERAGE BLOCK LENGTH\n 6,300 IS THE MAXIMUM BLOCK LENGTH\n 7 DATA BLOCKS ARE IN THIS DATA SET\n\n END OF FILE\n 9,400 IS THE MINIMUM BLOCK LENGTH\n 9,400 IS THE AVERAGE BLOCK LENGTH\n 9,400 IS THE MAXIMUM BLOCK LENGTH\n 37 DATA BLOCKS ARE IN THIS DATA SET\n\n END OF FILE\n 10 IS THE MINIMUM BLOCK LENGTH\n 7,611 IS THE AVERAGE BLOCK LENGTH\n 9,400 IS THE MAXIMUM BLOCK LENGTH\n 21 DATA BLOCKS ARE IN THIS DATA SET\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            1          2         40\n BYTES/TRACK              0       9255      12600\n\n\n 6,364 LOGICAL RECORDS ARE IN THIS DATA SET\n\n *** 61 RECORDS EXCEEDED THE DATA SET BLOCKSIZE\n\n *** 104 RECORD BLOCKSIZES ARE NOT EVENLY DIVISIBLE BY THE LRECL\n\n\n 703,380 DATA BYTES ARE IN THIS DATA SET\n 76 TRACKS WERE READ IN THIS DATA SET\n\n 10 IS THE MINIMUM BLOCK LENGTH\n 4,424 IS THE AVERAGE BLOCK LENGTH\n 9,400 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  ----1----2--->  27%     43\n 02500-02999  ----1----2----3-->  35%     55\n 06000-06499  ->   4%      7\n 09000-09499  ----1----2----3->  34%     54\n\n\n 159 DATA BLOCKS ARE IN THIS DATA SET\n\n\n\n THE FOLLOWING DATA IS FROM THE ISAM LABEL RECORD:\n 1 INDEX LEVELS PRESENT IN THIS DATA SET\n 0 TRACKS FOR EACH MASTER INDEX\n 0 TRACKS OF CYLINDER OVERFLOW AREA ON EACH CYLINDER\n 0 RECORDS TAGGED FOR DELETION\n 0 OVERFLOW ACCESSES (NOT COUNTING FIRST IN CHAIN)\n 72 BYTES NEEDED TO HOLD THE HIGHEST INDEX IN CORE\n 0 TRACKS OCCUPIED BY THE HIGHEST-LEVEL INDEX\n 1,364 RECORDS IN THE PRIME AREA\n 13,165 BYTES LEFT ON CURRENT INDEPENDENT OVERFLOW TRACK\n 18 TRACKS REMAINING IN THE INDEPENDENT OVERFLOW AREA\n 0 RECORDS IN THE OVERFLOW AREA\n 0 CYLINDER OVERFLOW AREAS ARE FULL\n\n RC=4095\n1***  SAMPLE  *** ***  ISAM DATA SET\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=HABL.LIB.ISAM2,VOL=SER=HTSO03,\n //      DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,KEYLEN=5,RKP=1,DSORG=IS)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n           10/11/82   0/00/00    0/00/00   ON           NONE\n\n 95 TRACKS ARE ALLOCATED FOR THIS DATA SET\n DATA SET IS ALLOCATED IN CYLINDERS\n NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL\n DS1LSTAR IS 00.00.00  (FOR     0 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  25E  HTSO03  00.00.01  00.12.FF      19  01.38.00.00  01.38.00.12  YES\n      1  25E  HTSO03  00.13.01  00.25.FF      19  01.46.00.00  01.46.00.12  YES\n      2  25E  HTSO03  00.26.01  00.38.FF      19  01.BD.00.00  01.BD.00.12  YES\n      3  25E  HTSO03  00.39.01  00.5E.FF      38  02.89.00.00  02.8A.00.12  YES\n\n\n END OF FILE\n 10 IS THE MINIMUM BLOCK LENGTH\n 645 IS THE AVERAGE BLOCK LENGTH\n 3,120 IS THE MAXIMUM BLOCK LENGTH\n 49 DATA BLOCKS ARE IN THIS DATA SET\n\n END OF FILE\n 133 IS THE MINIMUM BLOCK LENGTH\n 822 IS THE AVERAGE BLOCK LENGTH\n 3,993 IS THE MAXIMUM BLOCK LENGTH\n 109 DATA BLOCKS ARE IN THIS DATA SET\n\n END OF FILE\n 133 IS THE MINIMUM BLOCK LENGTH\n 1,176 IS THE AVERAGE BLOCK LENGTH\n 6,400 IS THE MAXIMUM BLOCK LENGTH\n 597 DATA BLOCKS ARE IN THIS DATA SET\n\n END OF FILE\n 10 IS THE MINIMUM BLOCK LENGTH\n 5,547 IS THE AVERAGE BLOCK LENGTH\n 6,400 IS THE MAXIMUM BLOCK LENGTH\n 39 DATA BLOCKS ARE IN THIS DATA SET\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            1          8         49\n BYTES/TRACK              0      10945      12800\n\n\n 12,571 LOGICAL RECORDS ARE IN THIS DATA SET\n\n *** 153 RECORDS EXCEEDED THE DATA SET BLOCKSIZE\n\n *** 712 RECORD BLOCKSIZES ARE NOT EVENLY DIVISIBLE BY THE LRECL\n\n\n 1,039,771 DATA BYTES ARE IN THIS DATA SET\n 95 TRACKS WERE READ IN THIS DATA SET\n\n 10 IS THE MINIMUM BLOCK LENGTH\n 1,310 IS THE AVERAGE BLOCK LENGTH\n 6,400 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  ----1----2----3----4----5----6----7---->  79%    630\n 01500-01999  >   0%      1\n 03000-03499  >   1%     10\n 03500-03999  >   2%     19\n 06000-06499  ----1--->  17%    134\n\n\n 794 DATA BLOCKS ARE IN THIS DATA SET\n\n\n\n THE FOLLOWING DATA IS FROM THE ISAM LABEL RECORD:\n 1 INDEX LEVELS PRESENT IN THIS DATA SET\n 0 TRACKS FOR EACH MASTER INDEX\n 0 TRACKS OF CYLINDER OVERFLOW AREA ON EACH CYLINDER\n 0 RECORDS TAGGED FOR DELETION\n 0 OVERFLOW ACCESSES (NOT COUNTING FIRST IN CHAIN)\n 75 BYTES NEEDED TO HOLD THE HIGHEST INDEX IN CORE\n 0 TRACKS OCCUPIED BY THE HIGHEST-LEVEL INDEX\n 354 RECORDS IN THE PRIME AREA\n 13,165 BYTES LEFT ON CURRENT INDEPENDENT OVERFLOW TRACK\n 18 TRACKS REMAINING IN THE INDEPENDENT OVERFLOW AREA\n 0 RECORDS IN THE OVERFLOW AREA\n 0 CYLINDER OVERFLOW AREAS ARE FULL\n\n RC=4095\n1***  SAMPLE  *** ***  DIRECT DATA SET\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=SYS1.BRODCAST,VOL=SER=HRES01,\n //      DCB=(RECFM=F,LRECL=129,BLKSIZE=129,KEYLEN=1,RKP=0,DSORG=DA)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n           11/04/81   0/00/00   10/11/82   ON           NONE\n\n 19 TRACKS ARE ALLOCATED FOR THIS DATA SET\n ALL OF THESE ARE IN USE\n 4 BYTES ARE AVAILABLE ON THE LAST USED TRACK\n DATA SET IS ALLOCATED IN BLOCKS (WITH ROUND)\n NO SECONDARY ALLOCATION QUANTITY IS IN THE LABEL\n DS1LSTAR IS 00.12.29  (FOR    19 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  259  HRES01  00.00.01  00.12.FF      19  00.A0.00.00  00.A0.00.12  YES\n\n\n END OF FILE\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK           41         41         41\n BYTES/TRACK           5289       5289       5289\n\n\n 779 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 100,491 DATA BYTES ARE IN THIS DATA SET\n 19 TRACKS WERE READ IN THIS DATA SET\n\n 129 IS THE MINIMUM BLOCK LENGTH\n 129 IS THE AVERAGE BLOCK LENGTH\n 129 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  ----1----2----3----4----5----6----7----8----9----> 100%    779\n\n\n 779 DATA BLOCKS ARE IN THIS DATA SET\n\n\n RC=0\n1***  SAMPLE  *** ***  VSAM DATA SET (INDEX PORTION)\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=IMSB.C33JCORD.IX,VOL=SER=HIMSTS,\n //      DCB=(RECFM=U,BLKSIZE=4096,DSORG=VS)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n            8/11/82  12/31/99    0/00/00   OFF          NONE\n\n 19 TRACKS ARE ALLOCATED FOR THIS DATA SET\n DATA SET IS ALLOCATED IN CYLINDERS\n 1 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 00.00.00  (FOR     0 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  15B  HIMSTS  00.00.01  00.12.FF      19  00.C0.00.00  00.C0.00.12  YES\n\n\n END OF FILE\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            1          2          3\n BYTES/TRACK            160       6224      12288\n\n\n 4 LOGICAL RECORDS ARE IN THIS DATA SET\n\n\n 12,448 DATA BYTES ARE IN THIS DATA SET\n 2 TRACKS WERE READ IN THIS DATA SET\n\n 160 IS THE MINIMUM BLOCK LENGTH\n 3,112 IS THE AVERAGE BLOCK LENGTH\n 4,096 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 00000-00499  ----1----2-->  25%      1\n 04000-04499  ----1----2----3----4----5----6----7-->  75%      3\n\n\n 4 DATA BLOCKS ARE IN THIS DATA SET\n\n\n RC=0\n1***  SAMPLE  *** ***  VSAM DATA SET (DATA PORTION)\n\n STATS VERSION 2.0  --  DISK DATA SET STATISTICS PROGRAM\n\n\n //IN DD DSN=IMSB.C33JCORD.DATA,VOL=SER=HIMSTS,\n //      DCB=(RECFM=U,BLKSIZE=1024,DSORG=VS)\n\n DATA SET:  CREATED   EXPIRES   LAST USE   UPDATE BIT   SECURITY\n            -------   -------   --------   ----------   --------\n            8/11/82  12/31/99    0/00/00   OFF          NONE\n\n 19 TRACKS ARE ALLOCATED FOR THIS DATA SET\n DATA SET IS ALLOCATED IN CYLINDERS\n 1 IS THE SECONDARY ALLOCATION QUANTITY\n DS1LSTAR IS 00.00.00  (FOR     0 TRACKS IN USE)\n\n EXTENT  UCB  VOLUME  TT.TT.RR--TT.TT.RR  TRACKS  CC.CC.HH.HH--CC.CC.HH.HH  CYLB\n ------  ---  ------  --------  --------  ------  -----------  -----------  ----\n      0  15B  HIMSTS  00.00.01  00.12.FF      19  00.BF.00.00  00.BF.00.12  YES\n\n\n END OF FILE\n\n\n TRACK USAGE:       MINIMUM    AVERAGE    MAXIMUM\n                    -------    -------    -------\n RECORDS/TRACK            3         11         11\n BYTES/TRACK          11264      11318      12288\n\n\n 201 LOGICAL RECORDS ARE IN THIS DATA SET\n\n *** 3 RECORDS EXCEEDED THE DATA SET BLOCKSIZE\n\n\n 215,040 DATA BYTES ARE IN THIS DATA SET\n 19 TRACKS WERE READ IN THIS DATA SET\n\n 1,024 IS THE MINIMUM BLOCK LENGTH\n 1,070 IS THE AVERAGE BLOCK LENGTH\n 4,096 IS THE MAXIMUM BLOCK LENGTH\n\n\n RECORD SIZE DISTRIBUTION:\n 01000-01499  ----1----2----3----4----5----6----7----8----9---->  99%    198\n 04000-04499  >   1%      3\n\n\n 201 DATA BLOCKS ARE IN THIS DATA SET\n\n\n RC=4095\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STATSASM": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x821\\x8f\\x00\\x821\\x8f\\x165\\x00\\x12\\x00\\x12\\x00\\x00\\xc8\\xc1\\xc2\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-11-14T00:00:00", "modifydate": "1982-11-14T16:35:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "HABL"}, "text": "//HABLS  JOB ...\n//ONE   EXEC  PGM=ASMBLR,REGION=2048K,\n//             PARM=(NORLD,TERM,NOSTMT,'LINECOUNT(55)',\n//             'XREF(SHORT),BUFSIZE(MAX)')\n//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))\n//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(,PASS),DSN=&&X\n//SYSPRINT DD  SYSOUT=*\n//SYSTERM  DD  SYSOUT=*\n//SYSIN    DD  DSN=SOURCE.LIBRARY(STATS),DISP=SHR  *****  <-----\n//LK1    EXEC  PGM=IEWL,PARM='MAP',COND=(5,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&&X,DISP=(OLD,DELETE)\n//SYSLMOD  DD  DISP=OLD,DSN=AUTO.LINKLIB(STATS)    *****  <-----\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STATSDOC": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x821\\x8f\\x00\\x821\\x8f\\x165\\x00%\\x00%\\x00\\x00\\xc8\\xc1\\xc2\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-11-14T00:00:00", "modifydate": "1982-11-14T16:35:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "HABL"}, "text": "\n\n  FOLLOWING IS A LIST OF MEMBER NAMES INCLUDED FOR THE STATS PROGRAM:\n\n\n\n      STATSDOC -  THIS MEMBER\n\n\n\n      STATS    -  ASSEMBLY SOURCE FOR THE STATS PROGRAM (VERSION 2.0).\n\n\n\n      STATSAMP -  SAMPLE STATS OUTPUT FOR THE FOLLOWING DIFFERENT TYPES\n                  OF DATA SETS (NOTE - THIS DATA HAS ASA CONTROLS):\n\n                     SEQUENTIAL DATA SET\n                     SEQUENTIAL DATA SET (A MEMBER OF A PDS)\n                     PARTITIONED DATA SET (RECFM=VB)\n                     PARTITIONED DATA SET (LOAD LIBRARY)\n                     PARTITIONED DATA SET (WITH I/O ERRORS)\n                     ISAM DATA SET\n                     DIRECT DATA SET\n                     VSAM DATA SET (INDEX PORTION)\n                     VSAM DATA SET (DATA PORTION)\n\n\n\n      STATSASM -  SAMPLE IFOX ASSEMBLY AND LINK JCL.\n\n\n\n      STATSXEQ -  SAMPLE EXECUTION JCL.\n\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STATSXEQ": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x821\\x8f\\x00\\x821\\x8f\\x16F\\x00\\x04\\x00\\x04\\x00\\x00\\xc8\\xc1\\xc2\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-11-14T00:00:00", "modifydate": "1982-11-14T16:46:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "HABL"}, "text": "//HABLB  JOB ...\n//A   EXEC  PGM=STATS\n//IN        DD  DSN=HABL.LIB.LOAD,DISP=SHR\n//OUT       DD  SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT049/FILE049.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT049", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}