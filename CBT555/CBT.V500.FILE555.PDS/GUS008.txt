***********************************************
*                                             *
*  PARMS:                                     *
*       YYYYMMDD1 = PIC 9(8)                  *
*       YYYYMMDD2 = PIC 9(8)                  *
*       # OF DAYS = PIC 9(6) COMP-3           *
*           NO. OF DAYS BETWEEN PARM1 & PARM2 *
*       RC     = 1F BINARY RETURNED OPTIONAL  *
*  REGISTERS ON RETURN:                       *
*     1 - 14   AS IS                          *
*     15       RETURN CODE                    *
*              0 NORMAL                       *
*              8 INPUT DATE IS INVALID        *
*                                             *
***********************************************
GUS008   EPA   'COMPUTES THE NO. OF DAYS BETWEEN 2 DATES'
         LR    12,15               12 IS BASE REGISTER
         USING GUS008,12           TELL ASSEMBLER
         USING WORKSTG,11
         USING LINKAGE,10
         LR    10,1
         LA    0,WKLEN
         GETMAIN R,LV=(0)          ALLOC VS FOR WS STORAGE
         LR    11,1
         ST    13,STACK+4          SAVE CALLER'S SVAREA ADDRESS
         LA    9,STACK             LOAD SAVE AREA JUST IN CASE
         ST    9,8(,13)            SET BACKWARD CHAIN
         LR    13,9                SET FORWARD CHAIN
         L     2,IEFIN1
         LA    3,DAYS1
         BAL   9,DAYCALC
         L     2,IEFIN2            GET NEXT PARM
         LA    3,DAYS2
         BAL   9,DAYCALC
         L     8,IEFOUT            GET CALLERS RESULT FIELD
GETDIFF  SP    DAYS1(8),DAYS2(8)   GET DIFFERENCE OF DATES
         ZAP   0(4,8),DAYS1(8)     PUT IT IN RESULT FIELD
         OI    3(8),X'0F'          PACK RESULT UNSIGNED
EXIT     LR    9,15                SAVE RETURN CODE
         TM    IEFOUT,X'80'        LAST PARM ?
         BO    *+12                YEAH
         L     8,IEFRC             GET RC ADDRESS
         ST    9,0(,8)             PASS RC IF REQUESTED
         L     13,STACK+4
         LA    0,WKLEN
         FREEMAIN R,LV=(0),A=(11)
         LR    15,9                SET RC
         RETURN (14,12),,RC=(15)   RESTORE AND QUIT
*
* REGISTERS TO BE USED ON THE DAYCALC SUBROUTINE:
* R2---POINTER TO INPUT PARAMETER
* R3---POINTER TO NO. OF DAYS IN PARM POINTED TO BY R2
* R9---POINTER TO DAYCALC RETURN ADDRESS
*
DAYCALC  EQU   *                   DAYCALC SUBROUTINE
         PACK  WORK(8),0(4,2)      SET UP YYYY PART
         DP    WORK(8),=P'4'       CHECK IF DIVISIBLE BY 4
         MVI   LYI,C'0'            DEFAULT = NOT LEAP YEAR
         CP    WORK+7(1),=P'0'     LEAP YEAR ?
         BNE   SETYY               NO
         MVI   LYI,C'1'            SET TO LEAP YEAR
         PACK  WORK(8),0(4,2)      SET UP YYYY PART
         DP    WORK(8),=P'100'     CHECK IF DIVISIBLE BY 100
         CP    WORK+6(2),=P'0'     CENTURY YEAR ?
         BNE   SETYY               NO
         MVI   LYI,C'0'            SET TO NOT LEAP YEAR
         PACK  WORK(8),0(4,2)      SET UP YYYY PART
         DP    WORK(8),=P'400'     CHECK IF DIVISIBLE BY 400
         CP    WORK+6(2),=P'0'     CENTURY LEAP YEAR ?
         BNE   SETYY               NO
         MVI   LYI,C'1'            CENTURY IS A LEAP YEAR
SETYY    PACK  WORK(8),0(4,2)      SET UP COUNTER PART
         SP    WORK(8),=P'1'       MINUS 1 YEAR
         MP    WORK(8),=P'36525'   GET JULIAN DAY
         DP    WORK(8),=P'100'     DISCARD DECIMAL PART
         ZAP   WORK2(8),WORK(6)
         PACK  WORK(8),4(2,2)      GET MONTH
         LA    6,TBL1-2            DATE ARRAY
         CLI   LYI,C'0'
         BE    F1
         LA    6,TBL2-2            DATE ARRAY
F1       CVB   4,WORK              LOAD INDEX REGISTER
         AR    4,4                 FIX OFFSET
         LH    7,0(4,6)            GET MM(IX) WHERE IX=R4
         CVD   7,WORK
         AP    WORK2(8),WORK(8)
         PACK  WORK(8),6(2,2)      GET DAY FIELD
         AP    WORK2(8),WORK(8)
         ZAP   0(8,3),WORK2(8)     SAVE IT
         BR    9                   RETURN TO CALLER
TBL1     DS    0H                  HALFWORD ALIGN
         DC    AL2(0)              DAYS TABLE FOR NON LEAP YEARS
         DC    AL2(31)
         DC    AL2(59)
         DC    AL2(90)
         DC    AL2(120)
         DC    AL2(151)
         DC    AL2(181)
         DC    AL2(212)
         DC    AL2(243)
         DC    AL2(273)
         DC    AL2(304)
         DC    AL2(334)
TBL2     DC    AL2(0)              DAYS TABLE FOR LEAP YEARS
         DC    AL2(31)
         DC    AL2(60)
         DC    AL2(91)
         DC    AL2(121)
         DC    AL2(152)
         DC    AL2(182)
         DC    AL2(213)
         DC    AL2(244)
         DC    AL2(274)
         DC    AL2(305)
         DC    AL2(335)
         LTORG
WORKSTG  DSECT
STACK    DS    18F
         DS    0D                  DOUBLE WORD ALIGN
WORK     DS    1F                  /* WE NEED 2 8-BYTE WORK
         DS    1F                  /* FIELDS SO THAT WE WILL NOT
WORK2    DS    1F                  /* HAVE OVERFLOWS IN OUR MULTIPLY
         DS    1F                  /* PACKED INSTRUCTIONS
LYI      DS    CL1                 LEAP YEAR INDICATOR
DAYS1    DS    PL8
DAYS2    DS    PL8
WKLEN    EQU   *-WORKSTG
LINKAGE  DSECT
IEFIN1   DS    A                   INPUT DATE1
IEFIN2   DS    A                   INPUT DATE2
IEFOUT   DS    A                   RESULT FIELD
IEFRC    DS    A
         END
