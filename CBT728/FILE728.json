{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012656000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE728.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE728.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x10'", "DS1TRBAL": "b'*\\x80'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xfc\\x00\\x04\\x04\\xfc\\x00\\x06\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04F\\x00\\x00\\x01\\x051\\x1f\\x01\\x051\\x1f\\x073\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf0@@@'", "ispf": {"version": "04.70", "flags": 0, "createdate": "2005-11-07T00:00:00", "modifydate": "2005-11-07T07:33:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-470"}, "text": "REGULAR CBT TAPE - VERSION 470    FILE:  728\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT470.FILE728\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 4 MEMBERS COUNTED; CUMULATIVE SIZE IS 436 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/07/05    07:33:45    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x051\\x1f\\x01\\x051\\x1f\\x073\\x00\\t\\x00\\n\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2005-11-07T00:00:00", "modifydate": "2005-11-07T07:33:16", "lines": 9, "newlines": 10, "modlines": 0, "user": "SBGOLOB"}, "text": "David.Jousma@53.com\n\nSam.\n\nHere is a single source member for RACF exit ICHPWX01.\n\n\nThanks, Dave\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE728": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04F\\x00\\x00\\x01\\x051\\x1f\\x01\\x051\\x1f\\x073\\x00\\x05\\x00\\x05\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf0@@@'", "ispf": {"version": "04.70", "flags": 0, "createdate": "2005-11-07T00:00:00", "modifydate": "2005-11-07T07:33:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "CBT-470"}, "text": "//***FILE 728 is from Dave Jousma and contains a RACF Password      *   FILE 728\n//*           Quality Exit, ICHPWX01.                               *   FILE 728\n//*                                                                 *   FILE 728\n//*           email:  David.Jousma@53.com                           *   FILE 728\n//*                                                                 *   FILE 728\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ICHPWX01": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x051\\x1f\\x01\\x051\\x1f\\x07\\x11\\x01\\x9a\\x01\\x9a\\x00\\x00\\xd1\\xd6\\xe4\\xe2\\xd4\\xc1@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2005-11-07T00:00:00", "modifydate": "2005-11-07T07:11:00", "lines": 410, "newlines": 410, "modlines": 0, "user": "JOUSMA"}, "text": "//ichpwx01 JOB ,'MRAC006',MSGCLASS=3,CLASS=1\n/*ROUTE    PRINT LOCAL\n/*JOBPARM  ROOM=#044,LINES=9999,TIME=1440\n//ASMVMX1  EXEC  ASMACL,\n//         PARM.C='RENT,OBJECT,NODECK',\n//         PARM.L='RENT,REUS,XREF,LIST,MAP'\n//C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//C.SYSIN DD *\n TITLE 'ICHPWX01 - RACF Password Quality Exit'\n***********************************************************************\n*                                                                     *\n* MODULE NAME         =  ICHPWX01                                     *\n*                                                                     *\n* DESCRIPTIVE NAME    =  RACF Password Quality Exit                   *\n*                                                                     *\n* FUNCTION =                                                          *\n*    The password quality rules are:                                  *\n*                                                                     *\n*    1) Password must be 8 characters in length. This rule is         *\n*       enforced externally via RACF specifications.                  *\n*    2) Password must contain at least one non-alphabetic character.  *\n*       This rule is enforced by this exit.                           *\n*    3) The first and last characters of the password must be non-    *\n*       numeric. This rule is enforced by this exit.                  *\n*       NOTE: This test is currently turned off as it is not a        *\n*             part of our standards.                                  *\n*    4) Password must not be the same as your 10 previous passwords.  *\n*       This rule is enforced externally via RACF specifications.     *\n*    5) Password must not contain 4 consecutive characters of your    *\n*       previous password. This rule is enforced in this exit.        *\n*    6) Password must not contain 3 identical adjacent characters.    *\n*       This rule is enforced by this exit.                           *\n*    7) Password must not contain your User ID. This rule is enforced *\n*       by this exit.                                                 *\n*    8) Password must not contain certain keywords.  This rule is     *\n*       enforced by this exit.                                        *\n*                                                                     *\n* ATTRIBUTES          =  REENTRANT, REUSABLE, AMODE 31, RMODE ANY     *\n*                                                                     *\n* AUTHOR              =  Dave Jousma, and others                      *\n*                                                                     *\n***********************************************************************\nICHPWX01 CSECT ,\nICHPWX01 AMODE 31                  31-bit addressing mode\nICHPWX01 RMODE ANY                 31-bit residence\n         SAVE  (14,12),,*          Save the registers\n         LR    R12,R15             Load base register\n         USING ICHPWX01,R12    *** Synchronize base register\n         LR    R10,R1              Load PWXPL address\n         USING PWXPL,R10       *** Synchronize PWXPL DSECT\n         GETMAIN R,LV=X01WKLEN     Acquire working storage\n         LR    R2,R1               Save address of working storage\n         LR    R0,R1               Zero out area using MVCL\n         LA    R1,X01WKLEN         (same)\n         XR    R15,R15             (same)\n         MVCL  R0,R14              (same)\n         ST    R2,8(,R13)          Chain save areas together\n         ST    R13,4(,R2)          (same)\n         LR    R13,R2              Load R13 with work area address\n         USING X01WK,R13       *** Synchronize X01WK DSECT\n\n**********************************************************************\n* We must first determine who is calling us. We can be called from   *\n* RACINIT processing, the PASSWORD command, or the ALTUSER command.  *\n* We only want to control passwords for RACINIT processing and       *\n* the PASSWORD command.                                              *\n**********************************************************************\nX01A010  DS    0H\n         L     R3,PWXCALLR               Load caller flag\n         CLI   0(R3),PWXRINIT            Called by RACINIT?\n         BE    X01A100                   yes, continue\n         CLI   0(R3),PWXPWORD            Called by PASSWORD?\n         BE    X01A100                   yes, continue\n         B     X01A900                   anything else, ok, and exit\n\n**********************************************************************\n* Check if New Password Specified                               *\n**********************************************************************\nX01A100  DS    0H\n         ICM   R0,B'1111',PWXNEWPW Point to new password field\n         BZ    X01A900             Branch if no new password\n\n**********************************************************************\n* Enforce Rule #2 - At Least One Non-Alpha Character                 *\n**********************************************************************\nX01A200  DS    0H\n         L     R3,PWXNEWPW         Point to new password field\n         XR    R1,R1               Get length of new password\n         IC    R1,0(,R3)           (same)\n         BCTR  R1,0                Make relative to zero\n         TRT   1(*-*,R3),X01NALPH  Test for non-alphabetic\n         EX    R1,*-6              (same)\n         BZ    X01BPW02            Password violates rule #2\n\n**********************************************************************\n* Enforce Rule #3 - First & Last Chars Non-Numeric                   *\n**********************************************************************\nX01A300  DS    0H\n         B     X01A400             skip this test, not a part of stds\n*\n         L     R3,PWXNEWPW         Point to new password field\n         CLI   1(R3),C'0'          First char numeric ?\n         BL    X01A310             Branch if not\n         CLI   1(R3),C'9'          First char numeric ?\n         BNH   X01BPW03            Branch if yes (violates #3)\nX01A310  DS    0H\n         XR    R1,R1               Get length of new password\n         IC    R1,0(,R3)           (same)\n         AR    R3,R1               Point to last character\n         CLI   0(R3),C'0'          Last char numeric ?\n         BL    X01A400             Branch if not\n         CLI   0(R3),C'9'          Last char numeric ?\n         BNH   X01BPW03            Branch if yes (violates #3)\n\n**********************************************************************\n* Enforce Rule #5 - Not Four Consecutive Chars of Previous           *\n**********************************************************************\nX01A400  DS    0H\n         L     R3,PWXNEWPW         Point to new password field\n         XR    R4,R4               Get length of new password\n         IC    R4,0(,R3)           (same)\n         SH    R4,=H'4'            Compute length - 4\n         BNP   X01A500             Branch if not > 4 chars\n         ICM   R5,B'1111',PWXCURPW Point to old password field\n         BZ    X01A500             Branch if no old password\n         XR    R6,R6               Get length of old password\n         IC    R6,0(,R5)           (same)\n         SH    R6,=H'4'            Compute length - 4\n         BNP   X01A500             Branch if not > 4 chars\nX01A410  DS    0H\n         LR    R1,R5               Get old pw address\n         LR    R0,R6               Get old pw length - 4\nX01A420  DS    0H\n         CLC   1(4,R3),1(R1)       Four characters match ?\n         BE    X01BPW05            Branch if yes (violates #5)\n         LA    R1,1(,R1)           Advance old pw pointer\n         BCT   R0,X01A420          Continue comparisons\n         LA    R3,1(,R3)           Advance new pw pointer\n         BCT   R4,X01A410          Continue comparisons\n\n**********************************************************************\n* Enforce Rule #6 - Not The Consecutive Equal Chars                  *\n**********************************************************************\nX01A500  DS    0H\n         L     R3,PWXNEWPW         Point to new password field\n         XR    R0,R0               Get length of new password\n         IC    R0,0(,R3)           (same)\n         SH    R0,=H'3'            Compute length - 3\n         BNP   X01A600             Branch if not > 3 chars\nX01A510  DS    0H\n         CLC   1(1,R3),2(R3)       Two characters match ?\n         BNE   X01A520             Branch if not\n         CLC   1(1,R3),3(R3)       Three characters match ?\n         BE    X01BPW06            Branch if yes (violates #6)\nX01A520  DS    0H\n         LA    R3,1(,R3)           Advance pointer\n         BCT   R0,X01A510          Continue comparisons\n\n**********************************************************************\n* Enforce Rule #7 - Password Does not Contain User ID                *\n**********************************************************************\nX01A600  DS    0H\n         L     R3,PWXNEWPW         Point to new password field\n         XR    R4,R4               Get length of new password\n         IC    R4,0(,R3)           (same)\n         ICM   R5,B'1111',PWXUSRID Point to user ID field\n         BZ    X01A700             Branch if user ID unknown\n         XR    R6,R6               Get length of user ID\n         IC    R6,0(,R5)           (same)\n         SR    R4,R6               Get pw length - user ID length\n         BM    X01A700             Branch if password is shorter\n         BCTR  R6,0                User ID length rel. to zero\nX01A610  DS    0H\n         CLC   1(*-*,R5),1(R3)     User ID found in password ?\n         EX    R6,*-6              (same)\n         BE    X01BPW07            Branch if yes (violates #7)\n         LA    R3,1(,R3)           Advance pointer\n         SH    R4,=H'1'            Decrement length remaining\n         BP    X01A610             Branch if more to check\n\n**********************************************************************\n*  Enforce Rule #8 - Password Does not Contain Rsv'd words           *\n**********************************************************************\nX01A700  DS    0H\n         LA    R6,PASSTAB          Point to start of table\n         SLR   R7,R7               Clear register\n         LH    R7,=AL2(PASSNOE)    Get number of entries\nX01A710  BAS   R14,X01A740         Find length of entry\n         L     R3,PWXNEWPW         Point to new password field\n         XR    R4,R4               Get length of new password\n         IC    R4,0(,R3)           (same)\n         CR    R1,R4               Compare lengths\n         BH    X01A730             If entry > new password\n         SR    R4,R1               Subtract for find limit\n         LA    R5,1(,R3)           Point to new password\n         BCTR  R1,0                Prepare for execute\n         LA    R4,1(,R4)           Adjust For Rel.\nX01A720  EX    R1,CHECKPW          String found in password ?\n         BE    X01BPW08            Yes, exit with RC=4\nX01A730  LA    R6,8(R6)            Bump up table entry\n         BCT   R7,X01A710          Branch back round\n         B     X01A900             Passed all entries, exit\nX01A740  DS    0H\n         SLR   R1,R1               Clear register\n         LR    R15,R6              Point to start of entry\n         LA    R2,8                Set maximum count\nX01A750  CLI   0(R15),C' '         Do we have space ?\n         BE    X01A760             Yes, get out\n         LA    R15,1(,R15)         Bump up byte\n         LA    R1,1(,R1)           Increment counter\n         BCT   R2,X01A750          Loop back round\nX01A760  BR    R14                 Go back to caller\n\n**********************************************************************\n* Executed Instructions                                              *\n**********************************************************************\nCHECKPW  CLC   0(*-*,R5),0(R6)     Compare password to string\n\n**********************************************************************\n* Accept New Password                                                *\n**********************************************************************\nX01A900  DS    0H\n         L     R15,4(,R13)         Point to caller's save area\n         MVC   16(4,R15),=F'0'     Set zero return code\n         B     X01Z900             Return\n\n**********************************************************************\n* Reject New Password                                                *\n**********************************************************************\nX01BPW02 DS    0H\n         WTO   'ICHPWX02 Password must contain at least one non-alphabe+\n               tic character',ROUTCDE=(11)\n         B     X01Z100             Continue\nX01BPW03 DS    0H\n         WTO   'ICHPWX03 First and last characters of new password must+\n                be non-numeric',ROUTCDE=(11)\n         B     X01Z100             Continue\nX01BPW05 DS    0H\n         WTO   'ICHPWX05 Password must not contain 4 consecutive charac+\n               ters of previous password',ROUTCDE=(11)\n         B     X01Z100             Continue\nX01BPW06 DS    0H\n         WTO   'ICHPWX06 Password must not contain 3 identical adjacent+\n                characters',ROUTCDE=(11)\n         B     X01Z100             Continue\nX01BPW07 DS    0H\n         WTO   'ICHPWX07 Password must not contain your User ID',      +\n               ROUTCDE=(11)\n         B     X01Z100             Continue\nX01BPW08 DS    0H\n         WTO   'ICHPWX08 Password has invalid character combination',  +\n               ROUTCDE=(11)\n         B     X01Z100             Continue\n\nX01Z100  DS    0H\n         L     R15,4(,R13)         Point to caller's save area\n         MVC   16(4,R15),=F'4'     Set return code = '4'\n         B     X01Z900             Return\n\n**********************************************************************\n* Free Work Area and Return                                          *\n**********************************************************************\nX01Z900  DS    0H\n         L     R2,4(,R13)          Load caller's save area address\n         FREEMAIN R,LV=X01WKLEN,   Free work area                      +\n               A=(13)              (same)\n         LR    R13,R2              Place save area address in R13\n         RETURN (14,12)            Return to caller\n         EJECT ,\n**********************************************************************\n* Constants                                                          *\n**********************************************************************\nX01NALPH DC    256AL1(*-X01NALPH)  Non-alphabetic table\n         ORG   X01NALPH+C'A'       Uppercase 'A'-'I' set to x'00'\n         DC    9X'00'              (same)\n         ORG   X01NALPH+C'J'       Uppercase 'J'-'R' set to x'00'\n         DC    9X'00'              (same)\n         ORG   X01NALPH+C'S'       Uppercase 'S'-'Z' set to x'00'\n         DC    8X'00'              (same)\n         ORG   X01NALPH+C'a'       Lowercase 'a'-'i' set to x'00'\n         DC    9X'00'              (same)\n         ORG   X01NALPH+C'j'       Lowercase 'j'-'r' set to x'00'\n         DC    9X'00'              (same)\n         ORG   X01NALPH+C's'       Lowercase 's'-'z' set to x'00'\n         DC    8X'00'              (same)\n         ORG   ,\n**********************************************************************\n* This is the Restricted Password table and contains entries that are*\n* deemed to be of poor quality.                                      *\n**********************************************************************\nPASSTAB  DS    0D\n         DC    CL8'JAN     '\n         DC    CL8'FEB     '\n         DC    CL8'MAR     '\n         DC    CL8'APR     '\n         DC    CL8'MAY     '\n         DC    CL8'JUN     '\n         DC    CL8'JUL     '\n         DC    CL8'AUG     '\n         DC    CL8'SEP     '\n         DC    CL8'OCT     '\n         DC    CL8'NOV     '\n         DC    CL8'DEC     '\n         DC    CL8'DEMO    '\n         DC    CL8'GAME    '\n         DC    CL8'IBM     '\n         DC    CL8'LOG     '\n         DC    CL8'NET     '\n         DC    CL8'NEW     '\n         DC    CL8'PASS    '\n         DC    CL8'SIGN    '\n         DC    CL8'SYS     '\n         DC    CL8'TEST    '\n         DC    CL8'USER    '\n         DC    CL8'VALID   '\n         DC    CL8'XXX     '\n         DC    CL8'1234    '\n         DC    CL8'FIRS    '\n         DC    CL8'SECO    '\n         DC    CL8'THIR    '\n         DC    CL8'FOUR    '\n         DC    CL8'FIFTH   '\n         DC    CL8'SIX     '\n         DC    CL8'SEVEN   '\n         DC    CL8'EIGHT   '\n         DC    CL8'NINE    '\n         DC    CL8'TENTH   '\n         DC    CL8'MON     '\n         DC    CL8'TUE     '\n         DC    CL8'WED     '\n         DC    CL8'THU     '\n         DC    CL8'FRI     '\n         DC    CL8'SAT     '\n         DC    CL8'SUN     '\n         DC    CL8'ABCD    '\n         DC    CL8'XYZ     '\n         DC    CL8'$PART   '\n         DC    CL8'SPART   '\n         DC    CL8'SPTN    '\n         DC    CL8'QWERTY  '\n         DC    CL8'GROC    '\n         DC    CL8'MEAT    '\n         DC    CL8'DAIRY   '\n         DC    CL8'PROD    '\n         DC    CL8'FROZ    '\n         DC    CL8'PLYM    '\n         DC    CL8'GRAND   '\n         DC    CL8'MAUM    '\n         DC    CL8'FOOD    '\nPASSNOE  EQU   ((*-PASSTAB)/8)\n**********************************************************************\n* Dummy Control Sections and EQUates                                 *\n**********************************************************************\nX01WK    DSECT ,                   Module Work Area\nX01WKSAV DS    18F                 Standard save area\n         DS    0D                  Align to doubleword\nX01WKLEN EQU   *-X01WK             Length of work area\n         ICHPWXP ,                 PWXPL\n         YREGS ,                   Registers\n         END   ICHPWX01\n/*\n//L.SYSLMOD DD DSN=SYS1.ZOS14.LINKLIB(ICHPWX01),DISP=OLD\n//SYSIN    DD  *\n      IDENTIFY ICHPWX01('MRAC006')\n      NAME ICHPWX01(R)\n/*\n//SMPAPPLY EXEC SMPE,CSI='IBM1.SMPE.ZOS14.GLOBAL.CSI'\n//SMPHOLD   DD  DUMMY\n//SMPOUT   DD  SYSOUT=*\n//SMPLOG   DD  SYSOUT=*\n//SMPLOGA  DD  SYSOUT=*\n//SMPLIST  DD  SYSOUT=*\n//SMPRPT   DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSIN     DD  *\n  SET BDY(GLOBAL).\n    REJECT   SELECT(MRAC006) BYPASS (APPCHK ACCCHK).\n    RECEIVE LIST.\n    RESETRC.\n  SET BDY(MVSTZN).\n    APPLY S(MRAC006) .\n  SET BDY(TECH2TG).\n    RESTORE  SELECT(MRAC006) .\n    APPLY S(MRAC006) .\n  SET BDY(TECH1TG).\n    RESTORE  SELECT(MRAC006) .\n    APPLY S(MRAC006) .\n  SET BDY(PROD1TG).\n    APPLY S(MRAC006) .\n  SET BDY(PROD2TG).\n    APPLY S(MRAC006) .\n/*\n//SMPPTFIN  DD  DATA,DLM=ZZ\n++USERMOD (MRAC006) .\n++VER (Z038) FMID(HRF7707) .\n++MOD (ICHPWX01) DISTLIB(ESALINK) LKLIB(ESALINK) .\n++JCLIN .\n//SG13 EXEC LINKS,\n//  PARM='NCAL,LIST,XREF,LET,REUS,RENT',\n//  UNIT='3390',SER=,N=SYS1,NAME=LPALIB,P1=' ',\n//  MOD=,P2=' ',OBJ=OBJPDS01,CLASS=X\n//SYSLIN DD *\n INCLUDE ESALINK(ICHPWX01)\n ENTRY   ICHPWX01\n NAME    ICHPWX01(R)\n/*\nZZ\n/*\n//ESALINK   DD DSN=SYS1.ZOS14.LINKLIB,DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT728/FILE728.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT728", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}