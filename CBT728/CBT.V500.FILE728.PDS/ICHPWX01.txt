//ichpwx01 JOB ,'MRAC006',MSGCLASS=3,CLASS=1
/*ROUTE    PRINT LOCAL
/*JOBPARM  ROOM=#044,LINES=9999,TIME=1440
//ASMVMX1  EXEC  ASMACL,
//         PARM.C='RENT,OBJECT,NODECK',
//         PARM.L='RENT,REUS,XREF,LIST,MAP'
//C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB
//          DD DISP=SHR,DSN=SYS1.MODGEN
//C.SYSIN DD *
 TITLE 'ICHPWX01 - RACF Password Quality Exit'
***********************************************************************
*                                                                     *
* MODULE NAME         =  ICHPWX01                                     *
*                                                                     *
* DESCRIPTIVE NAME    =  RACF Password Quality Exit                   *
*                                                                     *
* FUNCTION =                                                          *
*    The password quality rules are:                                  *
*                                                                     *
*    1) Password must be 8 characters in length. This rule is         *
*       enforced externally via RACF specifications.                  *
*    2) Password must contain at least one non-alphabetic character.  *
*       This rule is enforced by this exit.                           *
*    3) The first and last characters of the password must be non-    *
*       numeric. This rule is enforced by this exit.                  *
*       NOTE: This test is currently turned off as it is not a        *
*             part of our standards.                                  *
*    4) Password must not be the same as your 10 previous passwords.  *
*       This rule is enforced externally via RACF specifications.     *
*    5) Password must not contain 4 consecutive characters of your    *
*       previous password. This rule is enforced in this exit.        *
*    6) Password must not contain 3 identical adjacent characters.    *
*       This rule is enforced by this exit.                           *
*    7) Password must not contain your User ID. This rule is enforced *
*       by this exit.                                                 *
*    8) Password must not contain certain keywords.  This rule is     *
*       enforced by this exit.                                        *
*                                                                     *
* ATTRIBUTES          =  REENTRANT, REUSABLE, AMODE 31, RMODE ANY     *
*                                                                     *
* AUTHOR              =  Dave Jousma, and others                      *
*                                                                     *
***********************************************************************
ICHPWX01 CSECT ,
ICHPWX01 AMODE 31                  31-bit addressing mode
ICHPWX01 RMODE ANY                 31-bit residence
         SAVE  (14,12),,*          Save the registers
         LR    R12,R15             Load base register
         USING ICHPWX01,R12    *** Synchronize base register
         LR    R10,R1              Load PWXPL address
         USING PWXPL,R10       *** Synchronize PWXPL DSECT
         GETMAIN R,LV=X01WKLEN     Acquire working storage
         LR    R2,R1               Save address of working storage
         LR    R0,R1               Zero out area using MVCL
         LA    R1,X01WKLEN         (same)
         XR    R15,R15             (same)
         MVCL  R0,R14              (same)
         ST    R2,8(,R13)          Chain save areas together
         ST    R13,4(,R2)          (same)
         LR    R13,R2              Load R13 with work area address
         USING X01WK,R13       *** Synchronize X01WK DSECT

**********************************************************************
* We must first determine who is calling us. We can be called from   *
* RACINIT processing, the PASSWORD command, or the ALTUSER command.  *
* We only want to control passwords for RACINIT processing and       *
* the PASSWORD command.                                              *
**********************************************************************
X01A010  DS    0H
         L     R3,PWXCALLR               Load caller flag
         CLI   0(R3),PWXRINIT            Called by RACINIT?
         BE    X01A100                   yes, continue
         CLI   0(R3),PWXPWORD            Called by PASSWORD?
         BE    X01A100                   yes, continue
         B     X01A900                   anything else, ok, and exit

**********************************************************************
* Check if New Password Specified                               *
**********************************************************************
X01A100  DS    0H
         ICM   R0,B'1111',PWXNEWPW Point to new password field
         BZ    X01A900             Branch if no new password

**********************************************************************
* Enforce Rule #2 - At Least One Non-Alpha Character                 *
**********************************************************************
X01A200  DS    0H
         L     R3,PWXNEWPW         Point to new password field
         XR    R1,R1               Get length of new password
         IC    R1,0(,R3)           (same)
         BCTR  R1,0                Make relative to zero
         TRT   1(*-*,R3),X01NALPH  Test for non-alphabetic
         EX    R1,*-6              (same)
         BZ    X01BPW02            Password violates rule #2

**********************************************************************
* Enforce Rule #3 - First & Last Chars Non-Numeric                   *
**********************************************************************
X01A300  DS    0H
         B     X01A400             skip this test, not a part of stds
*
         L     R3,PWXNEWPW         Point to new password field
         CLI   1(R3),C'0'          First char numeric ?
         BL    X01A310             Branch if not
         CLI   1(R3),C'9'          First char numeric ?
         BNH   X01BPW03            Branch if yes (violates #3)
X01A310  DS    0H
         XR    R1,R1               Get length of new password
         IC    R1,0(,R3)           (same)
         AR    R3,R1               Point to last character
         CLI   0(R3),C'0'          Last char numeric ?
         BL    X01A400             Branch if not
         CLI   0(R3),C'9'          Last char numeric ?
         BNH   X01BPW03            Branch if yes (violates #3)

**********************************************************************
* Enforce Rule #5 - Not Four Consecutive Chars of Previous           *
**********************************************************************
X01A400  DS    0H
         L     R3,PWXNEWPW         Point to new password field
         XR    R4,R4               Get length of new password
         IC    R4,0(,R3)           (same)
         SH    R4,=H'4'            Compute length - 4
         BNP   X01A500             Branch if not > 4 chars
         ICM   R5,B'1111',PWXCURPW Point to old password field
         BZ    X01A500             Branch if no old password
         XR    R6,R6               Get length of old password
         IC    R6,0(,R5)           (same)
         SH    R6,=H'4'            Compute length - 4
         BNP   X01A500             Branch if not > 4 chars
X01A410  DS    0H
         LR    R1,R5               Get old pw address
         LR    R0,R6               Get old pw length - 4
X01A420  DS    0H
         CLC   1(4,R3),1(R1)       Four characters match ?
         BE    X01BPW05            Branch if yes (violates #5)
         LA    R1,1(,R1)           Advance old pw pointer
         BCT   R0,X01A420          Continue comparisons
         LA    R3,1(,R3)           Advance new pw pointer
         BCT   R4,X01A410          Continue comparisons

**********************************************************************
* Enforce Rule #6 - Not The Consecutive Equal Chars                  *
**********************************************************************
X01A500  DS    0H
         L     R3,PWXNEWPW         Point to new password field
         XR    R0,R0               Get length of new password
         IC    R0,0(,R3)           (same)
         SH    R0,=H'3'            Compute length - 3
         BNP   X01A600             Branch if not > 3 chars
X01A510  DS    0H
         CLC   1(1,R3),2(R3)       Two characters match ?
         BNE   X01A520             Branch if not
         CLC   1(1,R3),3(R3)       Three characters match ?
         BE    X01BPW06            Branch if yes (violates #6)
X01A520  DS    0H
         LA    R3,1(,R3)           Advance pointer
         BCT   R0,X01A510          Continue comparisons

**********************************************************************
* Enforce Rule #7 - Password Does not Contain User ID                *
**********************************************************************
X01A600  DS    0H
         L     R3,PWXNEWPW         Point to new password field
         XR    R4,R4               Get length of new password
         IC    R4,0(,R3)           (same)
         ICM   R5,B'1111',PWXUSRID Point to user ID field
         BZ    X01A700             Branch if user ID unknown
         XR    R6,R6               Get length of user ID
         IC    R6,0(,R5)           (same)
         SR    R4,R6               Get pw length - user ID length
         BM    X01A700             Branch if password is shorter
         BCTR  R6,0                User ID length rel. to zero
X01A610  DS    0H
         CLC   1(*-*,R5),1(R3)     User ID found in password ?
         EX    R6,*-6              (same)
         BE    X01BPW07            Branch if yes (violates #7)
         LA    R3,1(,R3)           Advance pointer
         SH    R4,=H'1'            Decrement length remaining
         BP    X01A610             Branch if more to check

**********************************************************************
*  Enforce Rule #8 - Password Does not Contain Rsv'd words           *
**********************************************************************
X01A700  DS    0H
         LA    R6,PASSTAB          Point to start of table
         SLR   R7,R7               Clear register
         LH    R7,=AL2(PASSNOE)    Get number of entries
X01A710  BAS   R14,X01A740         Find length of entry
         L     R3,PWXNEWPW         Point to new password field
         XR    R4,R4               Get length of new password
         IC    R4,0(,R3)           (same)
         CR    R1,R4               Compare lengths
         BH    X01A730             If entry > new password
         SR    R4,R1               Subtract for find limit
         LA    R5,1(,R3)           Point to new password
         BCTR  R1,0                Prepare for execute
         LA    R4,1(,R4)           Adjust For Rel.
X01A720  EX    R1,CHECKPW          String found in password ?
         BE    X01BPW08            Yes, exit with RC=4
X01A730  LA    R6,8(R6)            Bump up table entry
         BCT   R7,X01A710          Branch back round
         B     X01A900             Passed all entries, exit
X01A740  DS    0H
         SLR   R1,R1               Clear register
         LR    R15,R6              Point to start of entry
         LA    R2,8                Set maximum count
X01A750  CLI   0(R15),C' '         Do we have space ?
         BE    X01A760             Yes, get out
         LA    R15,1(,R15)         Bump up byte
         LA    R1,1(,R1)           Increment counter
         BCT   R2,X01A750          Loop back round
X01A760  BR    R14                 Go back to caller

**********************************************************************
* Executed Instructions                                              *
**********************************************************************
CHECKPW  CLC   0(*-*,R5),0(R6)     Compare password to string

**********************************************************************
* Accept New Password                                                *
**********************************************************************
X01A900  DS    0H
         L     R15,4(,R13)         Point to caller's save area
         MVC   16(4,R15),=F'0'     Set zero return code
         B     X01Z900             Return

**********************************************************************
* Reject New Password                                                *
**********************************************************************
X01BPW02 DS    0H
         WTO   'ICHPWX02 Password must contain at least one non-alphabe+
               tic character',ROUTCDE=(11)
         B     X01Z100             Continue
X01BPW03 DS    0H
         WTO   'ICHPWX03 First and last characters of new password must+
                be non-numeric',ROUTCDE=(11)
         B     X01Z100             Continue
X01BPW05 DS    0H
         WTO   'ICHPWX05 Password must not contain 4 consecutive charac+
               ters of previous password',ROUTCDE=(11)
         B     X01Z100             Continue
X01BPW06 DS    0H
         WTO   'ICHPWX06 Password must not contain 3 identical adjacent+
                characters',ROUTCDE=(11)
         B     X01Z100             Continue
X01BPW07 DS    0H
         WTO   'ICHPWX07 Password must not contain your User ID',      +
               ROUTCDE=(11)
         B     X01Z100             Continue
X01BPW08 DS    0H
         WTO   'ICHPWX08 Password has invalid character combination',  +
               ROUTCDE=(11)
         B     X01Z100             Continue

X01Z100  DS    0H
         L     R15,4(,R13)         Point to caller's save area
         MVC   16(4,R15),=F'4'     Set return code = '4'
         B     X01Z900             Return

**********************************************************************
* Free Work Area and Return                                          *
**********************************************************************
X01Z900  DS    0H
         L     R2,4(,R13)          Load caller's save area address
         FREEMAIN R,LV=X01WKLEN,   Free work area                      +
               A=(13)              (same)
         LR    R13,R2              Place save area address in R13
         RETURN (14,12)            Return to caller
         EJECT ,
**********************************************************************
* Constants                                                          *
**********************************************************************
X01NALPH DC    256AL1(*-X01NALPH)  Non-alphabetic table
         ORG   X01NALPH+C'A'       Uppercase 'A'-'I' set to x'00'
         DC    9X'00'              (same)
         ORG   X01NALPH+C'J'       Uppercase 'J'-'R' set to x'00'
         DC    9X'00'              (same)
         ORG   X01NALPH+C'S'       Uppercase 'S'-'Z' set to x'00'
         DC    8X'00'              (same)
         ORG   X01NALPH+C'a'       Lowercase 'a'-'i' set to x'00'
         DC    9X'00'              (same)
         ORG   X01NALPH+C'j'       Lowercase 'j'-'r' set to x'00'
         DC    9X'00'              (same)
         ORG   X01NALPH+C's'       Lowercase 's'-'z' set to x'00'
         DC    8X'00'              (same)
         ORG   ,
**********************************************************************
* This is the Restricted Password table and contains entries that are*
* deemed to be of poor quality.                                      *
**********************************************************************
PASSTAB  DS    0D
         DC    CL8'JAN     '
         DC    CL8'FEB     '
         DC    CL8'MAR     '
         DC    CL8'APR     '
         DC    CL8'MAY     '
         DC    CL8'JUN     '
         DC    CL8'JUL     '
         DC    CL8'AUG     '
         DC    CL8'SEP     '
         DC    CL8'OCT     '
         DC    CL8'NOV     '
         DC    CL8'DEC     '
         DC    CL8'DEMO    '
         DC    CL8'GAME    '
         DC    CL8'IBM     '
         DC    CL8'LOG     '
         DC    CL8'NET     '
         DC    CL8'NEW     '
         DC    CL8'PASS    '
         DC    CL8'SIGN    '
         DC    CL8'SYS     '
         DC    CL8'TEST    '
         DC    CL8'USER    '
         DC    CL8'VALID   '
         DC    CL8'XXX     '
         DC    CL8'1234    '
         DC    CL8'FIRS    '
         DC    CL8'SECO    '
         DC    CL8'THIR    '
         DC    CL8'FOUR    '
         DC    CL8'FIFTH   '
         DC    CL8'SIX     '
         DC    CL8'SEVEN   '
         DC    CL8'EIGHT   '
         DC    CL8'NINE    '
         DC    CL8'TENTH   '
         DC    CL8'MON     '
         DC    CL8'TUE     '
         DC    CL8'WED     '
         DC    CL8'THU     '
         DC    CL8'FRI     '
         DC    CL8'SAT     '
         DC    CL8'SUN     '
         DC    CL8'ABCD    '
         DC    CL8'XYZ     '
         DC    CL8'$PART   '
         DC    CL8'SPART   '
         DC    CL8'SPTN    '
         DC    CL8'QWERTY  '
         DC    CL8'GROC    '
         DC    CL8'MEAT    '
         DC    CL8'DAIRY   '
         DC    CL8'PROD    '
         DC    CL8'FROZ    '
         DC    CL8'PLYM    '
         DC    CL8'GRAND   '
         DC    CL8'MAUM    '
         DC    CL8'FOOD    '
PASSNOE  EQU   ((*-PASSTAB)/8)
**********************************************************************
* Dummy Control Sections and EQUates                                 *
**********************************************************************
X01WK    DSECT ,                   Module Work Area
X01WKSAV DS    18F                 Standard save area
         DS    0D                  Align to doubleword
X01WKLEN EQU   *-X01WK             Length of work area
         ICHPWXP ,                 PWXPL
         YREGS ,                   Registers
         END   ICHPWX01
/*
//L.SYSLMOD DD DSN=SYS1.ZOS14.LINKLIB(ICHPWX01),DISP=OLD
//SYSIN    DD  *
      IDENTIFY ICHPWX01('MRAC006')
      NAME ICHPWX01(R)
/*
//SMPAPPLY EXEC SMPE,CSI='IBM1.SMPE.ZOS14.GLOBAL.CSI'
//SMPHOLD   DD  DUMMY
//SMPOUT   DD  SYSOUT=*
//SMPLOG   DD  SYSOUT=*
//SMPLOGA  DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN     DD  *
  SET BDY(GLOBAL).
    REJECT   SELECT(MRAC006) BYPASS (APPCHK ACCCHK).
    RECEIVE LIST.
    RESETRC.
  SET BDY(MVSTZN).
    APPLY S(MRAC006) .
  SET BDY(TECH2TG).
    RESTORE  SELECT(MRAC006) .
    APPLY S(MRAC006) .
  SET BDY(TECH1TG).
    RESTORE  SELECT(MRAC006) .
    APPLY S(MRAC006) .
  SET BDY(PROD1TG).
    APPLY S(MRAC006) .
  SET BDY(PROD2TG).
    APPLY S(MRAC006) .
/*
//SMPPTFIN  DD  DATA,DLM=ZZ
++USERMOD (MRAC006) .
++VER (Z038) FMID(HRF7707) .
++MOD (ICHPWX01) DISTLIB(ESALINK) LKLIB(ESALINK) .
++JCLIN .
//SG13 EXEC LINKS,
//  PARM='NCAL,LIST,XREF,LET,REUS,RENT',
//  UNIT='3390',SER=,N=SYS1,NAME=LPALIB,P1=' ',
//  MOD=,P2=' ',OBJ=OBJPDS01,CLASS=X
//SYSLIN DD *
 INCLUDE ESALINK(ICHPWX01)
 ENTRY   ICHPWX01
 NAME    ICHPWX01(R)
/*
ZZ
/*
//ESALINK   DD DSN=SYS1.ZOS14.LINKLIB,DISP=SHR
