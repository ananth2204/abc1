NIMEXST  TITLE 'Started task existence checking    BY M.SCHMUTZOK'
*PROCESS USING(WARN(15))
         ACONTROL CPAT(NOSYSL,NOCASE)
**********************************************************************
*  (C)   Copyright Shands HealthCare, 2009                           *
*  Program was written by:                                           *
*    Michael Schmutzok                                               *
*    Sr. Systems Programmer                                          *
*    Shands HealthCare                                               *
*    Information Services                                            *
*    1329 SW 16th St, Room 3150                                      *
*    Gainesville, FL  32608-1128                                     *
*    mailto:schmum@shands.ufl.edu                                    *
*    352.265.7982          (fax)                                     *
*    352.265.8317  x85465  (voice)                                   *
**********************************************************************
*                                                                    *
*  MODULE NAME:  NIMEXST                                             *
*                                                                    *
*                                                                    *
*  DESCRIPTIVE NAME:  SNMP SUBAGENT FOR NIMBUS                       *
*                                                                    *
*  FUNCTION: THIS SUBTASK WILL RUN THE ASCB CHAIN AND VERIFY THE     *
*            EXISTENCE OF SELECT STARTED TASKS/JOBS WHICH ARE        *
*            DEFINED WITHIN A TABLE. THE STATUS OF THE MONITORED     *
*            STC/JOB CAN BE QUERIED BY NIMBUS (1=UP, 2=DOWN). IN     *
*            ADDITION, THIS MODULE WILL PROCESS 'MAINT' REQUESTS.    *
*            IF A MAINT COMMAND IS RECEIVED VIA A MOODIFY            *
*            COMMAND, THIS MODULE WILL SET THE STATUS OF THE         *
*            OBJECT TO A 3. THIS DOES NOT SET OFF AN ALERT. IT       *
*            CAN BE USED FOR MAINTENANCE WITHOUT WORRY OF NIMBUS     *
*            ALERTS GOING OFF DURING THE DOWNTIME.                   *
*            CURRENTLY, THE FOLLOWING OBJECTS ARE MONITORED:         *
*                                                                    *
*            CICS REGIONS:                                           *
*              SMSPROD, SMS2PRD, SMSEADP, HISPRD, HISRS              +
*              SMSTEST, SMS2TST, SMSEADT, HISTEST, CSFP              *
*            DB2 REGIONS:                                            *
*              DSNPMSTR, DSNPDBM1, DSNPDIST, IRLMPROC                *
*              DSNHMSTR, DSNHDBM1, DSNHDIST, IRLMPROH                *
*            STARTED TASKS:                                          *
*              UC4, XPTRMAIN, NIMBEMCS, PSYNC                        *
*                                                                    *
*  OPERATION: THE FOLLOWING ACTIONS ARE TAKEN BY THIS MODULE:        *
*      1) INITIALIZE THE SUB-TASK CONTROL BLOCK                      *
*      2) ESTABLISH THE ESTAE ENVIRONMENT                            *
*      3) SET THE TIMER                                              *
*      4) WAIT FOR TIMER POP OR AGENT POST                           *
*      5) RUN THE ASCB CHAIN AND LOOK FOR EXISTENCE OF SELECTED      *
*         JOBS/STCS                                                  *
*      6) UPDATE THE MIB VALUES                                      *
*                                                                    *
*  DEPENDENCIES: IF USING THE SNAP FUNCTION FOR DEBUGGING, MAKE      *
*                SURE THE PCCSSNAP MODULE IS IN THE STEPLIB OR       *
*                LINKLIST TO PREVENT S806 ABEND                      *
*                                                                    *
*  RESTRICTIONS: NONE                                                *
*                                                                    *
*  REGISTER CONVENTIONS:                                             *
*                                                                    *
*          STANDARD ENTRY LINKAGE                                    *
*                                                                    *
*          R0 AND R1 USED FOR SYSTEM SERVICE INVOCATION              *
*          R2 THROUGH R6 ARE WORK REGISTERS                          *
*          R7 AGCB ADDRESSING                                        *
*          R8 THROUGH R9 ARE WORK REGISTERS                          *
*          R10 AGCB ADDRESSING                                       *
*          R11 IS A WORK REGISTERS                                   *
*          R12 IS THE BASE REGISTER                                  *
*                                                                    *
*                                                                    *
*  INPUT:  None                                                      *
*                                                                    *
*  OUTPUT: UPDATED MIB VALUES                                        *
*                                                                    *
*  RETURN CODES = 0  NORMAL TERMINATION                              *
*                                                                    *
**********************************************************************
         SPACE 1
         PRINT ON,GEN,NODATA
         SPACE 1
NIMEXST  CSECT ,                   Establish the NIMEXST csect
         SPACE 1
         USING *,R15
         SPACE 1
NIMEXST  MODID                     Est. module identification
         STM   R14,R12,12(R13)     Save the caller's registers
         LR    R12,R15             Setup the local base register
         DROP  R15
         USING NIMEXST,R12         Est. code addressability
         LR    R7,R1               Save the AGCB address
         USING AGCB,R7             Establish AGCB addr.
         LA    R15,NIMX000         Prepare for the BSM
         O     R15,=X'80000000'    Indicate AMODE=31
         BSM   R0,R15              Set the AMODE, continue on
NIMX000  DS    0H
         MODESET KEY=NZERO,        Get into supervisor state           C
               MODE=SUP
         GETMAIN RC,               Allocate STCB                       C
               LV=STCBLEN,                                             C
               SP=230,                                                 C
               LOC=ANY
         LTR   R15,R15             Successful GETMAIN ...
         BZ    NIMX010              Yes, skip ABEND and continue
         ABEND 666,,,USER          Terminate the subtask (not the FSS)
NIMX010  DS    0H
         LR    R10,R1              Set STCB addressability
         USING STCB,R10            Establish global addr. for          C
                                    the STCB
         LR    R2,R10              Zero the
         LA    R3,STCBLEN           new subtask
         MVCL  R2,R14                control block
         MVC   STCBID,=C'STCB'     Set the eye catcher
         MVC   STCBMN,=C'NIMEXST ' Set the module name
         SPACE 1
         ST    R7,STCBAGCB         Save the AGCB address
         LA    R15,STCBSAVE        Perform
         ST    R13,4(,R15)           save
         ST    R15,8(,R13)             area
         LR    R13,R15                   linkage
***********************************************************************
*        SET UP ESTAE ROUTINE                                         *
***********************************************************************
         MVC   STCBMPL(NIMEPLL),NIMEPL    Copy list form ESTAE
         L     R2,=V(NIMESTA)      Get the ESTAE routine address
         ESTAE (2),                Establish the ESTAE exit            C
               MF=(E,STCBMPL),                                         C
               PARAM=(R10)
         MVC   STCBMPL(MSG100IL),MSG100I Copy the WPL for message 1
         WTO   MF=(E,STCBMPL)      Issue message to operator
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
         LA    R4,CICSMET          point to start of exist table
         LA    R5,CICSVNUM         get number of table entries
LOOPC    DS    0H
         MVC   0(3,R4),=X'010001'  stc status - dsply strng, len=1
         LA    R4,4(R4)            point to next table entry
         BCT   R5,LOOPC            do until done
         LA    R4,DB2MET           point to start of exist table
         LA    R5,DB2VNUM          get number of table entries
LOOPD    DS    0H
         MVC   0(3,R4),=X'010001'  db2 status - dsply strng, len=1
         LA    R4,4(R4)            point to next table entry
         BCT   R5,LOOPD            do until done
         LA    R4,STCMET           point to start of exist table
         LA    R5,STCVNUM          get number of table entries
LOOPE    DS    0H
         MVC   0(3,R4),=X'010001'   stc status - dsply strng, len=1
         LA    R4,4(R4)            point to next table entry
         BCT   R5,LOOPE            do until done
         MVC   HSMSTAT(3),=X'010001' hsm status - dsply strng, len=1
LOOPF    DS    0H
         OI    INITFLAG,EXSTBIT    indicate to mother that we're done
***********************************************************************
*        SET UP TIMER                                                 *
***********************************************************************
TIMESET  DS    0H
         XC    STCBTECB,STCBTECB       Clear the timer ECB
         TM    STCBFLG1,STCB1TIM       STIMERM set?
         BO    WAIT                      yes, go finish wait
         MVC   STCBMPL(NIMTPLL),NIMTPL Copy list form STIMERM
         LA    R4,STCBTMID             Point to STIMERD id word area
         LA    R5,AGCBXINT             Get the timer interval address
         LA    R6,STCBTECB             Get addr of ECB addr
         ST    R6,STCBCOMA             Save it
         OI    STCBFLG1,STCB1TIM       Indicate timer outstanding ...
         STIMERM SET,                  Set/reset NPRO timer            C
               DINTVL=(R5),                                            C
               ID=(R4),                                                C
               EXIT=TIMEXIT,                                           C
               PARM=STCBCOMA,                                          C
               MF=(E,STCBMPL)
         LTR   R15,R15                 STIMER set ok?
         BNZ   ERROR                     no, go tell
         B     ECHK000                 go do initial check
***********************************************************************
*        WAIT FOR TIMER POP OR POST FROM AGENT                        *
***********************************************************************
WAIT     DS    0H
         XI    MODFLAG,MAINTBIT        clear modify bit
         XC    AGCBECBX,AGCBECBX       clear ecb
         LA    R4,STCBTECB             Point to timer ECB
         ST    R4,STCBTEP              Save it in list
         LA    R4,AGCBECBX             Point to communication ECB
         ST    R4,STCBCEP              Save it in list
         OI    STCBCEP,X'80'           Indicate end of ECB list
         WAIT  1,                      Wait for something to post      C
               ECBLIST=STCBECBL,                                       C
               LONG=YES
         TM    AGCBECBX,X'40'          Did we get posted by the agent?
         BO    CMDCHK                   Yes, go see what's wanted
         TM    STCBTECB,X'40'          Did the timer pop?
         BZ    WAIT                     No, don't know, go wait again
         XI    STCBFLG1,STCB1TIM       Clear timer flag
ECHK000  DS    0H
         LA    R6,CICSMET              Start of CICS metrics table
         LA    R11,CICSTAB             Start of CICS name table
         LA    R8,CICSVNUM             Number of table entries
         BAL   R14,ECHK010             go check for existence
         LA    R6,DB2MET               Start of DB2 metrics table
         LA    R11,DB2TAB              Start of DB2 name table
         LA    R8,DB2VNUM              Number of table entries
         BAL   R14,ECHK010             go check for existence
         LA    R6,STCMET               Start of STC metrics table
         LA    R11,STCTAB              Start of STC name table
         LA    R8,STCVNUM              Number of table entries
         BAL   R14,ECHK010             go check for existence
         LA    R6,HSMMET1              Start of HSM metrics table
         LA    R11,HSMTAB              Start of HSM name table
         LA    R8,HSMVNUM1             Number of table entries
         BAL   R14,ECHK010             go check for existence
         B     TIMESET                 Go wait for next timer pop
***********************************************************************
*        Modify commands                                              *
*        F NIMAGENT,MAINT,    <cics_region)                           *
*                         ON,                                         *
*                         OFF,                                        *
***********************************************************************
CMDCHK   DS    0H
         TM    MODFLAG,SHUTBIT         shutdown command given?
         BO    EXIT                      yes, go exit
         LA    R6,AGCBCOMM+6           Point to command area + maint
         TM    MODFLAG,MAINTBIT        maintenance mode requested?
         BO    MNTMODE                   yes, go process
         MVC   STCBMPL(MSG200EL),MSG200E  COPY LIST FORM
         LA    R5,STCBMPL              point to message area
         MVC   MSG200CM(8,R5),AGCBCOMM move in 8 bytes of command
         WTO   MF=(E,STCBMPL)          issue message to operator
         B     WAIT                    wait for next event post
MNTMODE  DS    0H
         CLC   0(2,R6),=C'ON'          maint mode "ON"
         BE    MNTON                     yes, go set it on
MNTOFF   DS    0H
         LA    R6,4(R6)                point to object
         BAL   R14,GETLNGTH            go get object name length
         SH    R11,=H'1'               decrement one for move/checks
         BAL   R14,OBJCHK              go see if it exists
         LA    R2,CICSMET              Start of CICS metrics table
         LA    R3,CICSTAB              Start of CICS name table
         LA    R8,CICSVNUM             Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTOFF                    yes, go turn off
         LA    R2,DB2MET               Start of DB2 metrics table
         LA    R3,DB2TAB               Start of DB2 name table
         LA    R8,DB2VNUM              Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTOFF                    yes, go turn off
         LA    R2,STCMET               Start of STC metrics table
         LA    R3,STCTAB               Start of STC name table
         LA    R8,STCVNUM              Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTOFF                    yes, go turn off
         LA    R2,HSMMET1              Start of HSM metrics table
         LA    R3,HSMTAB               Start of HSM name table
         LA    R8,HSMVNUM1             Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTOFF                    yes, go turn off
         B     BADOBJ                    no, go issue error message
GOTOFF   DS    0H
         MVI   3(R2),X'01'             turn off maintenance mode
         XI    EXSTFLG,METFND          clear 'found' flag
         LA    R3,STCBMPL              point to message area
         MVC   STCBMPL(MSG102IL),MSG102I  copy list form
         EX    R11,MVC3
         WTO   MF=(E,STCBMPL)          Issue message to operator
         B     WAIT                    wait for next event post
MNTON    DS    0H
         LA    R6,3(R6)                point to object
         BAL   R14,GETLNGTH            go get object name length
         SH    R11,=H'1'               decrement one for move/checks
         BAL   R14,OBJCHK              go see if it exists
         LA    R2,CICSMET              Start of CICS metrics table
         LA    R3,CICSTAB              Start of CICS name table
         LA    R8,CICSVNUM             Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTON                     yes, go turn off
         LA    R2,DB2MET               Start of DB2 metrics table
         LA    R3,DB2TAB               Start of DB2 name table
         LA    R8,DB2VNUM              Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTON                     yes, go turn off
         LA    R2,STCMET               Start of STC metrics table
         LA    R3,STCTAB               Start of STC name table
         LA    R8,STCVNUM              Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTON                     yes, go turn off
         LA    R2,HSMMET1              Start of HSM metrics table
         LA    R3,HSMTAB               Start of HSM name table
         LA    R8,HSMVNUM1             Number of table entries
         BAL   R14,GETOID              go find oid to modify
         TM    EXSTFLG,METFND          did we find it?
         BO    GOTON                     yes, go turn off
         B     BADOBJ                    no, go issue error message
GOTON    DS    0H
         MVI   3(R2),X'03'             set maintenance mode
         XI    EXSTFLG,METFND          clear 'found' flag
         LA    R3,STCBMPL              point to message area
         MVC   STCBMPL(MSG101IL),MSG101I  copy list form
         EX    R11,MVC1
         WTO   MF=(E,STCBMPL)          Issue message to operator
         B     WAIT                    wait for next event post
OBJCHK   DS    0H
         LA    R3,CICSTAB              point to start of object table
         LA    R4,NUMENT               number of entries
OBJCHKLP DS    0H
         EX    R11,CLC1
         BER   R14                       yes, return
         LA    R3,8(R3)                point to next entry
         BCT   R4,OBJCHKLP             do until found or not
BADOBJ   DS    0H
         LA    R3,STCBMPL              point to message area
         MVC   STCBMPL(MSG201EL),MSG201E  copy list form
         EX    R11,MVC2
         WTO   MF=(E,STCBMPL)          Issue message to operator
         B     WAIT                    wait for next event post
GETLNGTH DS    0H
         LR    R3,R6                   save start of object
         LA    R4,8                    max length
         XR    R11,R11                 clear counter
GETLOOP  DS    0H
         CLI   0(R3),X'00'             end of object?
         BER   R14                       yes, return with length
         LA    R3,1(R3)                point to next byte
         LA    R11,1(R11)              add one to counter
         BCT   R4,GETLOOP              do until done
         BR    R14                     return with object length
GETOID   DS    0H
         OI    EXSTFLG,METFND          assume we'll find it here
         EX    R11,CLC2                found the entry?
         BER   R14                       yes, return
         LA    R2,4(R2)                next metric entry
         LA    R3,8(R3)                next entry in name table
         BCT   R8,GETOID               do until done
         XI    EXSTFLG,METFND          remove 'found' flag
         BR    R14                     return
CLC1     CLC   0(0,R3),0(R6)           object = table entry?
CLC2     CLC   0(0,R3),0(R6)           object = table entry?
MVC1     MVC   MSG101NM(0,R3),0(R6)    move object name to msg
MVC2     MVC   MSG201NM(0,R3),0(R6)    move object name to msg
MVC3     MVC   MSG102NM(0,R3),0(R6)    move object name to msg
***********************************************************************
*        EXISTENCE CHECKING                                           *
***********************************************************************
ECHK010  DS    0H
         CLI   3(R6),X'03'             maint mode?
         BE    ECHK060                 GO DO NEXT ENTRY
         L     R2,CVTPTR               POINT TO CVT  - X'10'
         USING CVT,R2                  MAP CVT
         L     R2,CVTASVT              POINT TO ASVT
         DROP  R2                      STOP USING R2 FOR CVT
         USING ASVT,R2                 MAP ASVT
         LA    R4,ASVTENTY             POINT TO FIRST ENTRY IN TABLE
         L     R3,ASVTMAXU             LOAD MAX NUMBER OF ENTRIES
ECHK020  DS    0H
         TM    0(R4),ASVTAVAL          IS THIS AN ASCB ADDRESS?
         BNO   ECHK030                 YES, BRANCH
         LA    R4,4(,R4)               NO, POINT TO NEXT ENTRY IN ASVT
         BCT   R3,ECHK020              GO CHECK NEXT ASVT ENTRY
         MVI   3(R6),X'02'             SET CURRENT STATUS
         B     ECHK060                 GO DO NEXT ENTRY
ECHK030  DS    0H
         L     R9,0(R4)                POINT TO ASCB
         USING ASCB,R9                 MAP IT
         L     R5,ASCBJBNI             POINT TO JOBNAME
         CL    R5,=F'0'                WAS THIS A START/MOUNT/LOGON?
         BE    ECHK040                 YES, BRANCH
         CLC   0(8,R11),0(R5)          IS IT THE ASCB OF JOB IN TABLE?
         BE    ECHK050                 YES, BRANCH
         LA    R4,4(,R4)               NO, POINT TO NEXT ENTRY IN ASVT
         BCT   R3,ECHK020              GO CHECK NEXT ASVT ENTRY
         MVI   3(R6),X'02'             SET CURRENT STATUS
         B     ECHK060                 GO DO NEXT ENTRY
ECHK040  DS    0H
         L     R5,ASCBJBNS             POINT TO START/MOUNT/LOGON NAME
         CLC   0(8,R11),0(R5)          IS IT THE ASCB OF JOB IN TABLE?
         BE    ECHK050                 YES, BRANCH
         LA    R4,4(,R4)               NO, POINT TO NEXT ENTRY IN ASVT
         BCT   R3,ECHK020              GO CHECK NEXT ASVT ENTRY
         MVI   3(R6),X'02'             SET CURRENT STATUS
         B     ECHK060                 GO SEE IF TRAP NEEDS TO BE SENT
ECHK050  DS    0H
         MVI   3(R6),X'01'             SET CURRENT STATUS
ECHK060  DS    0H
         LA    R6,4(R6)                point to next metric entry
         LA    R11,8(R11)              point to next name entry
         BCT   R8,ECHK010              do until all checked
         BR    R14                     return
         DROP  R2,R9
***********************************************************************
*        TIMER EXIT                                                   *
***********************************************************************
TIMEXIT  DS    0H
         STM   R14,R12,4(R13)
         LR    R4,R1                   SAVE PARAMETER
         L     R5,4(R1)                POINT TO TIMEECB
         POST  (R5)
         LM    R14,R12,4(R13)
         BR    R14
*****************************
*****   EXIT ROUTINES   *****
*****************************
ERROR    DS    0H
         WTO   'NMEX202E STIMER SET UP ERROR DETECTED, MODULE SHUTTING C
               DOWN',ROUTCDE=(1,10)
EXIT     DS    0H
         MVC   STCBMPL(NIMTPLL),NIMTPL Copy list form STIMERM
         LA    R4,STCBTMID             Point to STIMERD id word area
         STIMERM CANCEL,               Cancel timer                    C
               ID=(R4),                                                C
               MF=(E,STCBMPL)
         MVC   STCBMPL(MSG199IL),MSG199I Copy the WPL for message 2
         WTO   MF=(E,STCBMPL)      Issue message to operator
         L     R9,4(,R13)          Get high save (last SACB reference)
         FREEMAIN RU,              Free the STCB                       C
               LV=STCBLEN,                                             C
               A=(10),                                                 C
               SP=230
         LR    R13,R9              Get high save area address
         RETURN (14,12),RC=0       Return to MVS, terminate sub task
******************************
*****   ERROR ROUTINES   *****
******************************
*SNAPRTN  DS    0H
*         STM   R2,R5,REGSAVE
*         LA    R2,CICSMET
*         LA    R3,NAME
*         MVC   STCBMPL(NIMLPLL),NIMLPL  COPY LIST FORM LINK
*         LINK  EP=PCCSSNAP,PARAM=((R2),(R3)),VL=1,
*               MF=(E,STCBMPL)
*         LM    R2,R5,REGSAVE
*         BR    R14
         EJECT
**************************************************
***   S T O R A G E    D E F I N I T I O N S   ***
**************************************************
         EJECT
R0       EQU   0                   Register
R1       EQU   1                     equates
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
CICSTAB  EQU   *
         DC    CL8'SMSPROD'
         DC    CL8'SMS2PRD'
         DC    CL8'SMSEADP'
         DC    CL8'HISPRD'
         DC    CL8'HISRS'
         DC    CL8'SMSTEST'
         DC    CL8'SMS2TST'
         DC    CL8'SMSEADT'
         DC    CL8'HISTEST'
         DC    CL8'CSFP'
DB2TAB   EQU   *
         DC    CL8'DSNPMSTR'
         DC    CL8'DSNPDBM1'
         DC    CL8'DSNPDIST'
         DC    CL8'IRLMPROC'
         DC    CL8'DSNHMSTR'
         DC    CL8'DSNHDBM1'
         DC    CL8'DSNHDIST'
         DC    CL8'IRLMPROH'
STCTAB   EQU   *
         DC    CL8'UC4'
         DC    CL8'XPTRMAIN'
         DC    CL8'NIMBCONS'
         DC    CL8'PSYNC'
HSMTAB   EQU   *
         DC    CL8'DFHSM'
NUMENT   EQU   (*-CICSTAB)/8
NIMLPL   LINK  EP=PCCSSNAP,SF=L
NIMLPLL  EQU   *-NIMLPL
NIMEPL   ESTAE *-*,TERM=YES,       List form ESTAE parmlist            C
               RECORD=YES,PARAM=*-*,MF=L
NIMEPLL  EQU   *-NIMEPL
NIMTPL   STIMERM SET,MF=L
NIMTPLL  EQU   *-NIMTPL
MSG100I  WTO   'NMEX100I EXISTENCE PROBE INITIALIZATION COMPLETE',ROUTCC
               DE=(1,10),MF=L
MSG100IL EQU   *-MSG100I
MSG101I  WTO   'NMEX101I          HAS BEEN PLACED INTO MAINTENANCE MODEC
               .',ROUTCDE=(1,10),MF=L
MSG101IL EQU   *-MSG101I
MSG101NM EQU   WPLTXT-WPL+9,8
MSG102I  WTO   'NMEX102I          HAS BEEN TAKEN OUT OF MAINTENANCE MODC
               E.',ROUTCDE=(1,10),MF=L
MSG102IL EQU   *-MSG102I
MSG102NM EQU   WPLTXT-WPL+9,8
MSG199I  WTO   'NMEX199I EXISTENCE PROBE TERMINATION COMPLETE',ROUTCDE=C
               (1,10),MF=L
MSG199IL EQU   *-MSG199I
MSG200E  WTO   'NMEX200E UNKNOWN MODIFY COMMAND FOUND:         ',ROUTCDC
               E=(1,10),MF=L
MSG200EL EQU   *-MSG200E
MSG200CM EQU   WPLTXT-WPL+39,8
MSG201E  WTO   'NMEX201E OBJECT OF MAINT MODE COMMAND NOT FOUND:       C
                 ',ROUTCDE=(1,10),MF=L
MSG201EL EQU   *-MSG201E
MSG201NM EQU   WPLTXT-WPL+49,8
         LTORG
         EJECT
*************************
*** DYNAMIC WORK AREA ***
*************************
         TITLE 'SUB TASK APPLICATION CONTROL BLOCK'
         NIMSTCB ,                 GENERATE SAMPLE FSA STCB DSECT
         TITLE 'AGENT CONTROL BLOCK (AGCB)'
         NIMAGCB ,                 GENERATE SAMPLE FSS SSCB DSECT
         IEZWPL ,                  Generate MVS WPL dsect
         CVT DSECT=YES
         IHAECVT
         IHAASVT
         IHAASCB
         EJECT
NIMEXSTL EQU   *-NIMEXST
         END NIMEXST
