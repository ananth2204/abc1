NIMDASD  TITLE 'DASD subtask for the sub-agent     BY M.SCHMUTZOK'
*PROCESS USING(WARN(15))
         ACONTROL CPAT(NOSYSL,NOCASE)
**********************************************************************
*  (C)   Copyright Shands HealthCare, 2009                           *
*  Program was written by:                                           *
*    Michael Schmutzok                                               *
*    Sr. Systems Programmer                                          *
*    Shands HealthCare                                               *
*    Information Services                                            *
*    1329 SW 16th St, Room 3150                                      *
*    Gainesville, FL  32608-1128                                     *
*    mailto:schmum@shands.ufl.edu                                    *
*    352.265.7982          (fax)                                     *
*    352.265.8317  x85465  (voice)                                   *
**********************************************************************
*                                                                    *
*  MODULE NAME:  NIMDASD                                             *
*                                                                    *
*                                                                    *
*  DESCRIPTIVE NAME:  SNMP SUBAGENT FOR NIMBUS                       *
*                                                                    *
*  FUNCTION: THIS MODULE IS UNDER CONSTRUCTION. FUTURE USES MAY      *
*            INCLUDE:                                                *
*                                                                    *
*            - STATUS CHECKS FOR THE V2X AND V2X2                    *
*            - FLASHCOPY STATUS OF VOLUMES                           *
*            - V2X/V2X1 ERRORS                                       *
*            - STORAGE POOL FREESPACE LEVELS                         *
*                                                                    *
*  OPERATION: THE FOLLOWING ACTIONS ARE TAKEN BY THIS MODULE:        *
*      1) INITIALIZE THE SUB-TASK CONTROL BLOCK                      *
*      2) ESTABLISH THE ESTAE ENVIRONMENT                            *
*      3) SET THE TIMER                                              *
*      4) WAIT FOR TIMER POP OR AGENT POST                           *
*      5) UPDATE THE MIB VALUES                                      *
*                                                                    *
*  DEPENDENCIES: IF USING THE SNAP FUNCTION FOR DEBUGGING, MAKE      *
*                SURE THE PCCSSNAP MODULE IS IN THE STEPLIB OR       *
*                LINKLIST TO PREVENT S806 ABEND                      *
*                                                                    *
*  RESTRICTIONS: NONE                                                *
*                                                                    *
*  REGISTER CONVENTIONS:                                             *
*                                                                    *
*          STANDARD ENTRY LINKAGE                                    *
*                                                                    *
*          R0 AND R1 USED FOR SYSTEM SERVICE INVOCATION              *
*          R2 THROUGH R6 ARE WORK REGISTERS                          *
*          R7 AGCB ADDRESSING                                        *
*          R8 THROUGH R9 ARE WORK REGISTERS                          *
*          R10 AGCB ADDRESSING                                       *
*          R11 IS A WORK REGISTERS                                   *
*          R12 IS THE BASE REGISTER                                  *
*                                                                    *
*                                                                    *
*  INPUT:  None                                                      *
*                                                                    *
*  OUTPUT: UPDATED MIB VALUES                                        *
*                                                                    *
*  RETURN CODES = 0  NORMAL TERMINATION                              *
*                                                                    *
**********************************************************************
         SPACE 1
         PRINT ON,GEN,NODATA
         SPACE 1
NIMDASD  CSECT ,                   Establish the NIMDASD csect
         SPACE 1
         USING *,R15
         SPACE 1
NIMDASD  MODID                     Est. module identification
         STM   R14,R12,12(R13)     Save the caller's registers
         LR    R12,R15             Setup the local base register
         DROP  R15
         USING NIMDASD,R12         Est. code addressability
         LR    R7,R1               Save the AGCB address
         USING AGCB,R7             Establish AGCB addr.
         LA    R15,NIMD000         Prepare for the BSM
         O     R15,=X'80000000'    Indicate AMODE=31
         BSM   R0,R15              Set the AMODE, continue on
NIMD000  DS    0H
         MODESET KEY=NZERO,        Get into supervisor state           C
               MODE=SUP
         GETMAIN RC,               Allocate STCB                       C
               LV=STCBLEN,                                             C
               SP=230,                                                 C
               LOC=ANY
         LTR   R15,R15             Successful GETMAIN ...
         BZ    NIMD010              Yes, skip ABEND and continue
         ABEND 666,,,USER          Terminate the subtask (not the FSS)
NIMD010  DS    0H
         LR    R10,R1              Set STCB addressability
         USING STCB,R10            Establish global addr. for          C
                                    the STCB
         LR    R2,R10              Zero the
         LA    R3,STCBLEN           new subtask
         MVCL  R2,R14                control block
         MVC   STCBID,=C'STCB'     Set the eye catcher
         MVC   STCBMN,=C'NIMDASD ' Set the module name
         SPACE 1
         ST    R7,STCBAGCB         Save the AGCB address
         LA    R15,STCBSAVE        Perform
         ST    R13,4(,R15)           save
         ST    R15,8(,R13)             area
         LR    R13,R15                   linkage
***********************************************************************
*        SET UP ESTAE ROUTINE                                         *
***********************************************************************
         MVC   STCBMPL(NIMEPLL),NIMEPL    Copy list form ESTAE
         L     R2,=V(NIMESTA)      Get the ESTAE routine address
         ESTAE (2),                Establish the ESTAE exit            C
               MF=(E,STCBMPL),                                         C
               PARAM=(R10)
         MVC   STCBMPL(WTO1L),WTO1 Copy the WPL for message 1
         WTO   MF=(E,STCBMPL)      Issue message to operator
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
         MVC   DASDMET(3),=X'090001'   V2X1 status - DspStr, len=1
         MVC   DASDMET+4(3),=X'090001' V2X2 status - DspStr, len=1
         OI    INITFLAG,DASDBIT
***********************************************************************
*        SET UP TIMER                                                 *
***********************************************************************
TIMESET  DS    0H
         XC    STCBTECB,STCBTECB       Clear the timer ECB
         TM    STCBFLG1,STCB1TIM       STIMERM set?
         BO    WAIT                      yes, go finish wait
         MVC   STCBMPL(NIMTPLL),NIMTPL Copy list form STIMERM
         LA    R4,STCBTMID             Point to STIMERD id word area
         LA    R5,AGCBDINT             Get the timer interval address
         LA    R6,STCBTECB             Get addr of ECB addr
         ST    R6,STCBCOMA             Save it
         OI    STCBFLG1,STCB1TIM       Indicate timer outstanding ...
         STIMERM SET,                  Set/reset NPRO timer            C
               DINTVL=(R5),                                            C
               ID=(R4),                                                C
               EXIT=TIMEXIT,                                           C
               PARM=STCBCOMA,                                          C
               MF=(E,STCBMPL)
***********************************************************************
*        WAIT FOR TIMER POP OR POST FROM AGENT                        *
***********************************************************************
WAIT     DS    0H
         LA    R6,STCBTECB             Point to timer ECB
         ST    R6,STCBTEP              Save it in list
         LA    R6,AGCBECBD             Point to communication ECB
         ST    R6,STCBCEP              Save it in list
         OI    STCBCEP,X'80'           Indicate end of ECB list
         WAIT  1,                      Wait for something to post      C
               ECBLIST=STCBECBL,                                       C
               LONG=YES
         TM    AGCBECBD,X'40'          Did we get posted by the agent?
         BO    EXIT                     Yes, assume shutdown for now
         TM    STCBTECB,X'40'          Did the timer pop?
         BZ    TIMESET                  No, don't know, go wait again
***********************************************************************
*        MIB UPDATE                                                   *
***********************************************************************
MIBUPDT  DS    0H
*        WTO   'DASD METRICS ROUTINE'
         XI    STCBFLG1,STCB1TIM       Clear timer flag
         B     TIMESET                 Go wait for next interval
***********************************************************************
*        TIMER EXIT                                                   *
***********************************************************************
TIMEXIT  DS    0H
         STM   R14,R12,4(R13)          Save regs
         LR    R4,R1                   Save parameter
         L     R5,4(R1)                Point to timer ECB
         POST  (R5)                    Post the ECB
         LM    R14,R12,4(R13)          Restore regs
         BR    R14                     Return
*****************************
*****   EXIT ROUTINES   *****
*****************************
EXIT     DS    0H
         MVC   STCBMPL(NIMTPLL),NIMTPL Copy list form STIMERM
         LA    R4,STCBTMID             Point to STIMERD id word area
         STIMERM CANCEL,               Cancel timer                    C
               ID=(R4),                                                C
               MF=(E,STCBMPL)
         MVC   STCBMPL(WTO2L),WTO2 Copy the WPL for message 2
         WTO   MF=(E,STCBMPL)      Issue message to operator
         L     R9,4(,R13)          Get high save (last SACB reference)
         FREEMAIN RU,              Free the STCB                       C
               LV=STCBLEN,                                             C
               A=(10),                                                 C
               SP=230
         LR    R13,R9              Get high save area address
         RETURN (14,12),RC=0       Return to MVS, terminate sub task
******************************
*****   ERROR ROUTINES   *****
******************************
*SNAPRTN  DS    0H
*         STM   R2,R3,REGSAVE
*         LA    R2,STCBTECB
*         LA    R3,STCBCEP
*         LA    R4,AGCBDTCB
*         LA    R5,AGCBECBD
*         MVC   STCBMPL(NIMLPLL),NIMLPL  COPY LIST FORM LINK
*         LINK  EP=PCCSSNAP,PARAM=((R2),(R3),(R4),(R5)),VL=1,
*              MF=(E,STCBMPL)
*         LM    R2,R3,REGSAVE
*         BR    R8
         EJECT
**************************************************
***   S T O R A G E    D E F I N I T I O N S   ***
**************************************************
         EJECT
R0       EQU   0                   Register
R1       EQU   1                     equates
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
NIMLPL   LINK  EP=PCCSSNAP,SF=L
NIMLPLL  EQU   *-NIMLPL
NIMEPL   ESTAE *-*,TERM=YES,       List form ESTAE parmlist            C
               RECORD=YES,PARAM=*-*,MF=L
NIMEPLL  EQU   *-NIMEPL
NIMTPL   STIMERM SET,MF=L
NIMTPLL  EQU   *-NIMTPL
WTO1     WTO   'NMDA100I DASD PROBE INITIALIZATION COMPLETE',ROUTCDE=(1C
               ,10),MF=L
WTO1L    EQU   *-WTO1
WTO2     WTO   'NMDA199I DASD PROBE TERMINATION COMPLETE',ROUTCDE=(1,10C
               ),MF=L
WTO2L    EQU   *-WTO2
         LTORG
         EJECT
*************************
*** DYNAMIC WORK AREA ***
*************************
         TITLE 'SUB TASK APPLICATION CONTROL BLOCK'
         NIMSTCB ,                 GENERATE STCB DSECT
         TITLE 'AGENT CONTROL BLOCK (AGCB)'
         NIMAGCB ,                 GENERATE AGCB DSECT
         EJECT
NIMDASDL EQU   *-NIMDASD
         END NIMDASD
