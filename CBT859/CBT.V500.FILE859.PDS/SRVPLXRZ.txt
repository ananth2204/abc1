*---------------------------------------------------------------------*
*  Copyright 2011 by Clemson University Research Foundation           *
*                                                                     *
*  Licensed under the Apache License, Version 2.0 (the "License");    *
*  you may not use this file except in compliance with the License.   *
*  You may obtain a copy of the License in this library as member     *
*  $LICENSE, or from                                                  *
*                                                                     *
*      http://www.apache.org/licenses/LICENSE-2.0                     *
*                                                                     *
*  Unless required by applicable law or agreed to in writing,         *
*  software distributed under the License is distributed on an "AS    *
*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either    *
*  express or implied.  See the License for the specific language     *
*  governing permissions and limitations under the License.           *
*---------------------------------------------------------------------*
//SRVPLXRZ JOB TIME=(,6)
/*JOBPARM LINES=9
//  EXEC  ASMPCL,COPT=',RENT',LOPT=',RENT,REUS,REFR',
//    PDS='SYSTEMS.SRV.LOAD',NAME=SRVPLXRZ,MAC=SYSTEMS
//P.SYSIN  DD  *
     SMLIST CONVERT=YES
SRVPLXRZ     TITLE 'Exerciser For Print_Line Service Processor'
*---------------------------------------------------------------------*
*
*  Copyright (C) 1989 Clemson University
*
*  Program     SRVPLXRZ
*
*  Abstract    xxx
*              xxx
*              xxx
*
*  Inputs:
*      Parameters  xxxxx
*      Files       xxxxx
*      Other       None
*
*  Outputs:
*      Returncodes xxxxx
*      Messages    xxxxx
*      Files       xxxxx
*      Other       None
*
*  PROGRAM     Reentrant, problem key and state, standard linkage,
*  ATTRIBUTES  non-authorized, AMODE(24), RMODE(24)
*
*  Special     xxx
*  Notes       xxx
*
*  Change
*  History     09/15/89 ___ - New
*              __/__/__ ___
*              __/__/__ ___
*
*  Method of   xxx
*  Operation   xxx
*
*
*---------------------------------------------------------------------*
         EJECT
     print off
     copy  srvesmac
     print on,gen
     copy  srvplmac
     eject
 block name=SRVPLXRZ,type=program,options=(*pwa,xa,mode,erraddr),      *
               amode=31,                                               *
               rmode=any
     eject
  es_id id=es,esva=pwa_esv_address,                                    +
               spepa=pwa_es_epa,                                       +
               sptoken=pwa_es_token
     space 3
  pl_id        id=pl,esva=pwa_esv_address,                             *
               esid=es,                                                *
               spepname=&PRINT_LINE,                                   *
               spepa=pwa_epa,                                          *
               sptoken=pwa_pl_token,                                   *
               sizelength=3
     eject
  es_MVS_load id=ES
  ES_Start id=ES
  ES_Load_Module id=ES,spid=PL
  errexit (treg,r15,nz)
  PL_Start     ID=PL,                                                  *
               DDNAME=stcddnam,                                        *
               PageSize=60,                                            *
               MaxLnSz=121,    options=fold,                           *
               sizelength=3
  errexit (treg,r15,nz)
  PL_Set_Header ID=PL,                                                 *
               Line=10,                                                *
               string=stcheader1
  errexit (treg,r15,nz)
  PL_Set_Formatted_Header ID=PL,                                       *
               Line=20,                                                *
               control="  Header line 2. This page starts with line {I}*
               , and is page {I}.",                                    *
               Pagenum=2,                                              *
               Source=(pwa_counter,pwapage#)
  errexit (treg,r15,nz)
* PL_Reserve_Footer ID=PL,
*              Lines=5
* errexit (treg,r15,nz)
* PL_Set_Footer ID=PL,
*              Line=10,
*              string=stcfooter1
* errexit (treg,r15,nz)
* PL_Set_Formatted_Footer ID=PL,
*              Line=20,
*              control="  Footer line 2. This page ends with line {I},
*              and is page {I}.",
*              Pagenum=2,
*              Source=(pwa_counter,pwapage#2)
* errexit (treg,r15,nz)
  la    r7,1
  loop  until
    st    r7,pwa_counter
    pl_query_lines_left  id=PL,lines=pwa_lines_on_page
    errexit  (treg,r15,nz)
    if    (clc,pwa_lines_on_page,eq,=f'0')
     pl_page_break id=PL
*              string=" This line should force a page eject."
     pl_query_lines_left  id=PL,lines=pwa_lines_on_page
     errexit  (treg,r15,nz)
    endif
    PL_Print_Formatted id=PL,                                          *
               control=" {I}:  There are {I} lines left on this page.",*
               Source=(pwa_counter,pwa_lines_on_page)
    errexit (treg,r15,nz)
    la    r7,1(r7)
  endloop until,(ch,r7,gt,=h'200')
     eject
  PL_Terminate   ID=PL
     eject
 endblk
 block type=errexit
* *-------------------------------------------------------------------*
* * Save module/offset, registers, return-code.
* *-------------------------------------------------------------------*
  st    r15,pwa_reason                | Save possible return-code.
  stm   r0,r15,gdiregs                | Save registers at time of error
  la    r0,4(,r12)                    | Point to module identification.
  st    r0,gdimodid                   | Save in general debug area.
  mvc   gdirc,0(r14)                  | Copy return code.
  slr   r14,r12                       | Calculate offset at time of err
  sth   r14,gdioffst                  | Save in debug area.
  l     r2,pwa_esv_address            | Point r2 to ESV.
  using esv,r2                        | Establish base for ESV.
  callx esvesepa,(esvestkn,&es_save_debug_info,&es_debug_id_gdi,gdi)
  es_display_debug_info_and_abend id=es
 endblk
     psd   ,
stcddnam dc   cl8'sysprint'
stctestfmt  dc c" This is data line number {I}, I think."
stctestfmt2 dc c" This is an associated data line with a different leng*
               th."
stcheader1  dc c"1 Header line 1, which should cause a page eject."
stcheader2  dc c"  Header line 2, which should print below the first he*
               ader line initially."
stcheader2a dc c" This is the inserted second header line, which should*
                appear between header lines 1 and 3."
stcheader3  dc c"  Header line 3, which should follow header 2."
stcfooter1  dc c"0 Footer line 1, which should appear at the bottom of *
               the current page."
stcfooter2a dc c" This is the inserted second footer line, which should*
                appear between footer lines 1 and 3."
     endpsd ,
     es_esv ,
     pwa   ,
pwa_reason  ds f
pwap1    ds    f
pwap2    ds    f
pwap3    ds    f
pwapage# ds    f
pwapage#2 ds   f
pwaline# ds    f
pwa_counter ds f
pwa_lines_on_page ds   f
pwa_esv_address   ds   f                     *
pwa_epa           ds   f                          *
pwa_es_epa        ds   f                          *
pwa_pl_token      ds   f
pwa_es_token      ds   f
     es_gdi dsect=no
     endpwa ,
     end   ,
//C.SYSLIB DD
//         DD
//         DD DSN=SYSTEMS.SRV.DONTEDIT,DISP=SHR
