*---------------------------------------------------------------------*
*  Copyright 2011 by Clemson University Research Foundation           *
*                                                                     *
*  Licensed under the Apache License, Version 2.0 (the "License");    *
*  you may not use this file except in compliance with the License.   *
*  You may obtain a copy of the License in this library as member     *
*  $LICENSE, or from                                                  *
*                                                                     *
*      http://www.apache.org/licenses/LICENSE-2.0                     *
*                                                                     *
*  Unless required by applicable law or agreed to in writing,         *
*  software distributed under the License is distributed on an "AS    *
*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either    *
*  express or implied.  See the License for the specific language     *
*  governing permissions and limitations under the License.           *
*---------------------------------------------------------------------*
//SRVXRZDV JOB (H2803302,&SYSROOM,,3),'DIV Exerciser',TIME=(,2),
//        MSGCLASS=A
/*JOBPARM Q=H
//DISCARD OUTPUT CLASS=*,DEFAULT=YES
//LASER   OUTPUT DEST=LASER,UCS=PR12,CHARS=PR12,FCB=85@8
//STEP1   EXEC ASMPCL,PDS='SYSTEMS.SRV.LOAD',NAME=SRVXRZDV,
//        COPT=',RENT',LOPT=',RENT,LET,NCAL',SYSOUT='(,)'
//P.SYSPRINT DD SYSOUT=A,OUTPUT=*.LASER
//P.SYSIN DD   *
SRVXRZDV TITLE 'Data In Virtual Service Processor Exerciser'
         SMLIST CONVERT=YES           |
*---------------------------------------------------------------------*
*
*  CSECT: SRVXRZDV
*
*  COPYRIGHT: (C) Copyright Clemson University 1989
*
*  ABSTRACT: This program is used to as a test driver for the
*            Data in Virtual Service Processor.
*
*  MODULE ACTIVITY:  MGG 03/02/89 New
*
*---------------------------------------------------------------------*
         SPACE 2                      |
 block type=program,name=mggtest,options=(*pwa,xa),subopts=*swa,       $
               amode=31,rmode=any
  copy  srvesmac
  copy  srvdvmac
* *-------------------------------------------------------------------*
* *  Load and start Environment Support Module.
* *------------------------------------------------------------------*
  load  eploc==c&mvs_environment_support
  st    r0,pwaes
  callx pwaes,(pwaestkn,&start,pwaaesv)
astes    ds   0h
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Load and start DIV Service Processor.
* *------------------------------------------------------------------*
  callx pwaes,(pwaestkn,&es_load_module,&mvs_div_manager,pwadv)
alddv    ds   0h
  errexit (treg,r15,nz)
  callx pwadv,(pwadvtkn,&start,pwaaesv,psd_ddname,"U",pwa_size)
astdv    ds   0h
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  If size is zero, get 5 blocks; otherwise, get storage required.
* *-------------------------------------------------------------------*
  l32   r2,pwa_size
  if z
   la    r2,5
   st    r2,pwa_size
  endif
  sla   r2,12
  st    r2,pwa_size_bytes
  callx pwaes,(pwaestkn,&es_obtain_storage,pwa_size_bytes,0,           $
               &es_page_boundary,                                      $
               &es_location_any,                                       $
               pwa_area)
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Open window.
* *-------------------------------------------------------------------*
  callx pwadv,(pwadvtkn,&dv_open_window,pwa_area,pwa_size,,"N")
aopwd    ds   0h
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Make a change.
* *-------------------------------------------------------------------*
  l     r1,pwa_area
  mvc  0(50,r1),=cl50"THIS IS MOVED TO THE WINDOW."
* *-------------------------------------------------------------------*
* *  Save the changes.
* *-------------------------------------------------------------------*
  callx pwadv,(pwadvtkn,&dv_save)
asave    ds   0h
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Move something else to the window.
* *-------------------------------------------------------------------*
  l     r1,pwa_area
  mvc  0(50,r1),=cl50"SOMETHING ELSE TO THE WINDOW."
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Reset this change.
* *-------------------------------------------------------------------*
  callx pwadv,(pwadvtkn,&dv_reset)
areset   ds   0h
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Save again.
* *-------------------------------------------------------------------*
  callx pwadv,(pwadvtkn,&dv_save)
asave2   ds   0h
  errexit (treg,r15,nz)
skip equ *
* *-------------------------------------------------------------------*
* *  Terminate service processors.
* *-------------------------------------------------------------------*
  callx pwadv,(pwadvtkn,&terminate)
  errexit (treg,r15,nz)
  callx pwaes,(pwaestkn,&es_release_storage,pwa_size_bytes,0,          $
               pwa_area)
  errexit (treg,r15,nz)
  callx pwaes,(pwaestkn,&terminate)
  errexit (treg,r15,nz)
* *-------------------------------------------------------------------*
* *  Unload service manager and environment support module.
* *-------------------------------------------------------------------*
  delete eploc==c&mvs_environment_support
* *-------------------------------------------------------------------*
 endblk block=mggtest                 |
 space 2
 block type=errexit
  callx pwaes,(pwaestkn,&es_display_debug_info_and_abend)
 endblk
 space 2
         psd
psd_ddname dc  al1(6),c"LINEAR"
         ltorg ,
         endpsd
         title "Program Work Area"    |
         pwa                          |
pwaaesv  ds    a     address of service processor global area
pwaestkn ds    a     environment support token
pwaes    ds    a     environment support entry point address
pwadvtkn ds    a     div service processor for testing
pwadv    ds    a     div entry point address
pwa_size ds    f
pwa_size_bytes ds f
pwa_area ds    a
         endpwa                       |
         end   ,                      |
//C.SYSLIB DD
//         DD
//         DD DSN=SYSTEMS.SRV.SOURCE,DISP=SHR
