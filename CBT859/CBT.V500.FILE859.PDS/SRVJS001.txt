*---------------------------------------------------------------------*
*  Copyright 2011 by Clemson University Research Foundation           *
*                                                                     *
*  Licensed under the Apache License, Version 2.0 (the "License");    *
*  you may not use this file except in compliance with the License.   *
*  You may obtain a copy of the License in this library as member     *
*  $LICENSE, or from                                                  *
*                                                                     *
*      http://www.apache.org/licenses/LICENSE-2.0                     *
*                                                                     *
*  Unless required by applicable law or agreed to in writing,         *
*  software distributed under the License is distributed on an "AS    *
*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either    *
*  express or implied.  See the License for the specific language     *
*  governing permissions and limitations under the License.           *
*---------------------------------------------------------------------*
 eject
***********************************************************************
*                                                                     *
*  Subroutine: OPEN_FILE                                              *
*  Abstract:   Set up for writing a jobstream to the system.          *
*                                                                     *
***********************************************************************
 BLOCK NAME=OPEN_FILE,TYPE=SUBROUTINE,AMODE=31
*---------------------------------------------------------------------*
*  Dynamically allocate an internal reader.
*---------------------------------------------------------------------*
   LA    R6,O_DDNAME                | R6 -> DDNAME Text Unit.
   USING S99TUNIT,R6                | Establish addressability.
   MVC   S99TUKEY,=AL2(DALRTDDN)    |   Set return-ddname action key.
   MVC   S99TUNUM,=H'1'             |   Set number of parameters = 1.
   MVC   S99TULNG,=H'8'             |   Set length of return-area.
*                                   |
   LA    R7,O_RB                    | R7 -> Dynalloc request block.
   USING S99RB,R7                   | Establish addressability.
   FILL  O_RB,X'00'                 |   Clear request block to zeros.
   MVI   S99RBLN,S99RBEND-S99RB     |   Set request block's length.
   MVI   S99VERB,S99VRBAL           |   Set verb to 'allocate'.
   PLIST (O_CLASS,O_PROGRAM,O_FREE,O_DDNAME),VL,PL=O_TXTPTRS
   ST    R1,S99TXTPP                |   Set address of text unit plist.
*                                   |
   PLIST (O_RB),VL                  | R1 -> Request Block plist.
   DYNALLOC                         | Invoke the DYNALLOC SVC.
*                                   |
   IF (TREG,R15,Z),THEN             | If dynamic allocation succeeded.
     SBIT   PWA_F_ALLOCATED         |   Set allocated flag.
     FILL   PWA_DDNAME,C' '         |   Blank out DDNAME in the PWA.
     L16    R15,S99TULNG            |   R15 := length of DDNAME.
     IF     NZ,THEN                 |   If a non-null DDNAME.
       BCTR R15,0                   |     Subtract 1 for EX instr.
       EXI  R15,(MVC,PWA_DDNAME(0),S99TUPAR)  Copy DDNAME to the PWA.
     ENDIF                          |   EndIf.
   ELSE                             | Else, check error/reason codes.
     MVC PWA_S99ERROR,S99ERROR      | Remember the dynalloc error code.
     IF  (CLC,S99ERROR,EQ,=X'0204') | If Storage not available.
       CALLSUB MESSAGE,(JS00009)    |   Issue specific message.
     ELSEIF (CLC,S99ERROR,EQ,=X'0214') ElseIf No internal reader avail.
       CALLSUB MESSAGE,(JS00003)    |   Issue specific message.
     ELSEIF (CLC,S99ERROR,EQ,=X'0238') ElseIf TIOT is full.
       CALLSUB MESSAGE,(JS00020)    |   Issue specific message.
     ELSEIF (CLC,S99ERROR,EQ,=X'0470') ElseIf NOJCL userid.
       CALLSUB MESSAGE,(JS00019)    |   Issue specific message.
     ELSE                           | Else.
       CALLSUB MESSAGE,(JS00004,S99ERROR,S99INFO) Generic message.  @C2
     ENDIF                          | EndIf.
     DROP    R6,R7                  | Drop O_RB and Text Unit.
   ENDIF                            | EndIf.
*---------------------------------------------------------------------*
* Build an Access Control Block (ACB).
*---------------------------------------------------------------------*
   BLOCK AMODE=24,TYPE=INLINE       | Switch to amode 24.
     GENCB  BLK=ACB,DDNAME=(*,PWA_DDNAME),MF=(G,PWA_ACBPL,PWA_ACBal_L),+
               MACRF=(ADR,SEQ,OUT),WAREA=(S,PWA_ACB),LENGTH=PWA_ACB_L
     ST     R15,PWA_RC              |  Save return-code.
   ENDBLK                           | Switch back to amode 31.
*                                   |
   IF (CLC,PWA_RC,NE,=F'0')         | If ACB generation failed, then.
     CALLSUB MESSAGE,(JS00005,PWA_RC)   Issue an error message.
   ELSE                             | Else.
     SBIT    PWA_F_ACB              |   Mark ACB as valid.
   ENDIF                            | EndIf.
*---------------------------------------------------------------------*
* Open the internal reader.
*---------------------------------------------------------------------*
   PLIST  (PWA_ACB),VL              | R1 -> 1 entry paramter list.
   BLOCK AMODE=24,TYPE=INLINE       | Switch to amode 24.
     OPEN   MF=(E,(1))              |   Open the internal reader.
     ST     R15,PWA_RC              |   Save return-code.
   ENDBLK                           | Switch back to amode 31.
*                                   |
   IF (CLC,PWA_RC,NE,=F'0')         | If OPEN failed, then.
     ST      R15,PWA_RC             |   Save bad return-code.
     CALLSUB MESSAGE,(JS00006,PWA_RC)   Issue an error message.
   ELSE                             | Else.
     SBIT    PWA_F_OPENED           |   Mark file as OPEN.
   ENDIF                            | EndIf.
*---------------------------------------------------------------------*
* Build the Request Parameter List (RPL).
*---------------------------------------------------------------------*
   BLOCK AMODE=24,TYPE=INLINE       | Switch to amode 24.
     GENCB  BLK=RPL,WAREA=(S,PWA_RPL),LENGTH=PWA_Ral_L,                +
               ACB=(S,PWA_ACB),OPTCD=(ADR,SEQ,SYN,NUP),                +
               AREA=(S,PWA_LINE),RECLEN=L'PWA_LINE,                    +
               MSGAREA=(S,PWA_MSG),MSGLEN=L'PWA_MSG,                   +
               MF=(G,PWA_RPLPL,PWA_RPLal_L)
     ST     R15,PWA_RC              |   Save return-code.
   ENDBLK                           | Switch back to amode 31.
*                                   |
   IF (CLC,PWA_RC,NE,=F'0')         | If RPL generation failed, then.
     CALLSUB MESSAGE,(JS00008,PWA_RC)   Issue an error message.
   ELSE                             | Else.
     SBIT    PWA_F_RPL              |   Mark RPL as valid.
   ENDIF                            | EndIf.
*                                   |
   MVC  pwa_job_sequence#,=F'1'     | Processing first JOB in stream.
   MVC  PWA_JOBID,=CL8'*NULL*'      | No job identifier assigned.
 ENDBLK BLOCK=OPEN_FILE
*---------------------------------------------------------------------*
*  Static data for opening a new jobstream file.
*---------------------------------------------------------------------*
             SSD
O_CLASS      DC   AL2(DALSYSOU,1,1),C'A'        | SYSOUT=(A,...
O_PROGRAM    DC   AL2(DALSPGNM,1,6),C'INTRDR'   |        ...INTRDR)
O_FREE       DC   AL2(DALCLOSE,0)               | FREE=CLOSE
             ENDSSD
*---------------------------------------------------------------------*
*  Working Storage for opening a new jobstream file.
*---------------------------------------------------------------------*
             SWA
O_RB         DS  CL(S99RBEND-S99RB)  | Dynalloc request block.
O_TXTPTRS    DS  CL(4*4)             | Parmlist for Text Unit Pointers.
O_DDNAME     DS  CL14                | TextUnit for returned DDNAME.
             ENDSWA
 EJECT
***********************************************************************
*                                                                     *
*  SUBROUTINE: WRITELINE                                              *
*  ABSTRACT:   Write the next line to the opened jobstream.           *
*                                                                     *
***********************************************************************
 BLOCK NAME=WRITELINE,TYPE=SUBROUTINE,AMODE=31
*---------------------------------------------------------------------*
*  Validate the current file status and the parameter list.
*---------------------------------------------------------------------*
   IF (TBIT,PWA_F_OPENED,OFF)       | If file is not opened.
     MESSAGE (JS00012,'WRITELINE',9)    Issue an error message.
   ELSEIF (TBIT,PWA_F_RPL,OFF)      | ElseIf RPL not built.
     MESSAGE (JS00012,'WRITELINE',9)    Issue an error message.
   ELSEIF (CLI,&PWA.MODE,NE,&FI_OC_OUTPUT)
     MESSAGE (JS00013)
   ENDIF                            | EndIf.
*                                   |
   SBIT PWA_F_IN_PROGRESS           | A non-ended job is in progress.
   MVC  PWA_JOBID,=CL8'*NULL*'      | No job identifier assigned.
*---------------------------------------------------------------------*
*  Copy the output line to the RPL line-buffer.
*---------------------------------------------------------------------*
   LM   R0,R1,FI_WL_LINE            | R0 -> Text, R1 -> length.
   L    R1,0(,R1)                   | R1 := length.
   LA   R14,PWA_LINE                | R14 -> Output line area.
   LA   R15,L'PWA_LINE              | R15 := Length of area.
   ICM  R1,B'1000',=C' '            | Pad copy with blanks.
   RBIT PWA_F_TRUNCATED             | Nothing truncated yet.
   MVCL R14,R0                      | Copy output line to area.
   IF   CC4,THEN                    | If it was truncated, then.
     SBIT    PWA_F_TRUNCATED        |   Remember line truncated.
   ENDIF                            | EndIf.
*---------------------------------------------------------------------*
*  Write the line to the internal reader and, if truncated, issue msg.
*---------------------------------------------------------------------*
   BLOCK AMODE=24,TYPE=INLINE       | Switch to amode 24.
     PUT RPL=PWA_RPL                |   Write the new jobstream line.
     ST  R15,PWA_RC                 |   Save return code.
   ENDBLK                           | Switch back to amode 31.
*                                   |
   IF (CLC,PWA_RC,NE,=F'0')         | If write failed, then.
     ST      R15,PWA_RC             |   Save bad return code.
     CALLSUB MESSAGE,(JS00017,PWA_RC)   Issue an error message.
   ENDIF                            | EndIf.
*                                   |
   IF (TBIT,PWA_F_TRUNCATED)        | If line was truncated, then.
     CALLSUB MESSAGE,(JS00201,80)   |   Issue a warning message.
   ENDIF                            | EndIf.
 ENDBLK BLOCK=WRITELINE
 EJECT
***********************************************************************
*                                                                     *
*  SUBROUTINE: SET_STATUS                                             *
*  ABSTRACT:   Set some item of the file's status.                    *
*                                                                     *
***********************************************************************
 BLOCK TYPE=SUBROUTINE,NAME=SET_STATUS
   L       R2,FI_SS_FUNCTION         | R2 -> Status code to set.
   L       R1,0(,R2)                 | R1 := Status code.
   CASEBLK REG=R1,MULT=1             | Case on status code.
     CASE &FI_SS_END_OF_FILE         |   Set end-of-file status.
       CALLSUB ISSUE_ENDREQ          |     Tell JES about it.
       IF (CLC,PWA_JOBID,NE,=CL8'*NULL*')  If a job submitted.
         CALLSUB MESSAGE,(JS00200,PWA_JOBID) Issue submitted message.
       ENDIF                         |     EndIf.
     CASE OTHER                      |   Invalid status sub-code.
       CALLSUB MESSAGE,(JS00018,0(R2))     Issue an error message.
   ENDCASE                           | EndCase
 ENDBLK BLOCK=SET_STATUS
 EJECT
***********************************************************************
*                                                                     *
*  SUBROUTINE: ISSUE_ENDREQ                                           *
*  ABSTRACT:   Write the current line to the internal reader.         *
*                                                                     *
***********************************************************************
 BLOCK TYPE=SUBROUTINE,NAME=ISSUE_ENDREQ,AMODE=31
*---------------------------------------------------------------------*
*  Issue an ENDREQ to signify to JES that this is the end of the job.
*---------------------------------------------------------------------*
   LA     R7,PWA_RPL                 | R7 -> Request Parameter List.
   USING  IFGRPL,R7                  | Establish addressability.
*                                    |
   BLOCK  AMODE=24,TYPE=INLINE       | Switch to amode 24.
     ENDREQ RPL=(7)                  |   Tell JES this is end-of-job.
     ST     R15,PWA_RC               |   Save return code.
   ENDBLK                            | Switch back to amode 31.
*                                    |
   RBIT PWA_F_IN_PROGRESS            | No jobs currently in progress.
   MVC  PWA_JOBID,RPLRBAR            | Copy system-assigned jobid.
*                                    |
   L    R1,pwa_job_sequence#         | R1 := number of jobs submitted.
   A    R1,=F'1'                     | Increment.
   ST   R1,pwa_job_sequence#         | Save back in the PWA.
 ENDBLK BLOCK=ISSUE_ENDREQ
