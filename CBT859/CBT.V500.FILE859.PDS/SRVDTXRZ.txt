*---------------------------------------------------------------------*
*  Copyright 2011 by Clemson University Research Foundation           *
*                                                                     *
*  Licensed under the Apache License, Version 2.0 (the "License");    *
*  you may not use this file except in compliance with the License.   *
*  You may obtain a copy of the License in this library as member     *
*  $LICENSE, or from                                                  *
*                                                                     *
*      http://www.apache.org/licenses/LICENSE-2.0                     *
*                                                                     *
*  Unless required by applicable law or agreed to in writing,         *
*  software distributed under the License is distributed on an "AS    *
*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either    *
*  express or implied.  See the License for the specific language     *
*  governing permissions and limitations under the License.           *
*---------------------------------------------------------------------*
//SRVDTXRZ JOB TIME=(,8)
/*JOBPARM LINES=25
//  EXEC  ASMPCL,COPT=',RENT',LOPT=',RENT,REUS,REFR',
//    PDS='SYSTEMS.SRV.LOAD',NAME=SRVDTXRZ,MAC=SYSTEMS
//P.SYSIN  DD  *
     SMLIST CONVERT=YES               |
SRVDTXRZ     TITLE 'Exerciser For Message Service Processor'
*---------------------------------------------------------------------*
*
*  Copyright (C) 1989 Clemson University
*
*  Program     SRVDTXRZ
*
*  Abstract    This is an exerciser routine for functions of the Date/
*              Time Service Processor (SRVDT).  Feel free to add tests
*              for SRVDT as development progesses.
*
*  Inputs:
*      Parameters  None
*      Files       None
*      Other       Terminal (uses TGET for input)
*
*  Outputs:
*      Returncodes None
*      Messages    Various
*      Files       SYSPRINT (used by Printline service processor)
*      Other       Terminal (uses TPUT too)
*
*  PROGRAM     Reentrant, problem key and state, standard linkage,
*  ATTRIBUTES  non-authorized, AMODE(31), RMODE(24)
*
*  Special
*  Notes       None
*
*  Change
*  History     12/01/89 JCB - New
*              __/__/__ ___
*              __/__/__ ___
*
*  Method of   SRVDTXRZ is a series of tests, each consisting of:
*  Operation     . Prompt for the test ('enter any char for test, or
*                  null line for next test')
*                . Test, usually coded as loop within a subroutine
*              Note that SRVDT errors are expected, and shouldn't cause
*              the exerciser to terminate. A 'Callsub DT_Error' will
*              print the debug information without terminating.
*
*---------------------------------------------------------------------*
         EJECT                        |
     copy  srvdtmac                   |
     print off                        |
     copy  srvesmac                   |
     copy  srvplmac                   |
     print on,gen                     |
     eject                            |
 block name=SRVDTXRZ,type=program,    |                                *
               options=(*pwa,xa,mode,long,novl),                       *
               amode=31,              |                                *
               subopts=(*swa,loadbase),                                *
               basereg=(r12,r10),     |                                *
               rmode=24               |
     eject                            |
  es_id id=es,esva=pwa_esv_address,   |                                +
               spepa=pwa_es_epa,      |                                +
               sptoken=pwa_es_token   |
      space 1                         |
  pl_id id=pl,esva=pwa_esv_address,   |                                *
               esid=es,               |                                *
               spepname=&PRINT_LINE,  |                                *
               sizelength=2           |
      space 1                         |
  dt_id id=DT,spepname=&DateTime_Services
     eject                            |
  es_MVS_load id=ES                   |
  ES_Start id=ES                      |
  ES_Load_Module id=ES,spid=DT        |
  if    (treg,r15,nz)                 |
   ex    0,*                          |
  endif                               |
  ES_Load_Module id=ES,spid=PL        |
  if    (treg,r15,nz)                 |
   ex    0,*                          |
  endif                               |
  PL_Start     ID=PL,                 |                                *
               DDname='SYSPRINT',     |                                *
               PageSize=12,           |                                *
               MaxLnSz=121            |
  errexit (treg,r15,nz)               |
  DT_Start     ID=DT                  | /* options=european */
  errexit (treg,r15,nz)               |
        eject                         |
* *-------------------------------------------------------------------*
* *  DT_Get_Current Testing
* *-------------------------------------------------------------------*
  ES_Get_Time  id=ES,                 |                                *
               Date=pwa_es_date,      |                                *
               Time=pwa_es_time       |
* *-------------------------------------------------------------------*
* callsub get_current_test            |
* *-------------------------------------------------------------------*
         eject                        |
* *-------------------------------------------------------------------*
* *  DT_Convert testing for dates.
* *-------------------------------------------------------------------*
* callsub conversion_test             |
* *-------------------------------------------------------------------*
* callsub general_input_test          |
* *-------------------------------------------------------------------*
  callsub add_test                    |
* *-------------------------------------------------------------------*
  callsub subtract_test               |
* *-------------------------------------------------------------------*
  callsub duration_test               |
* *-------------------------------------------------------------------*
  DT_Terminate ID=DT                  |
  PL_Terminate ID=PL                  |
* *-------------------------------------------------------------------*
 endblk                               |
     eject                            |
**--------------------------------------------------------------------*
**
** Get_Current_Test issues the DT_Get_Current function.
**
**--------------------------------------------------------------------*
 block name=get_current_test,type=subroutine
  tput  get_current_header,l'get_current_header
  tput  get_current_prompt,l'get_current_prompt
  tget  pwa_answer,l'pwa_answer       |
  oi    pwa_answer,c' '               |
  leave block=*,(cli,pwa_answer,eq,c' ')
  pl_print id=PL,string=" DT_Get_Current testing:"
  errexit  (treg,r15,nz)              |
  DT_Get_Current ID=DT,Date=(pwa_date,&dt_es_format)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_date,pwa_date+4),              *
               control=" ES_Format Date = X''{XL4}'', ES_Format Time = *
               X''{XL4}''"            |
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
  DT_Get_Current ID=DT,Date=(pwa_date,&dt_juliand),                    *
               Time=(pwa_time,&dt_hhmmssth)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_date,pwa_time),                *
               control=" Juliand Date = C''{CL8}'', HHMMSSTH Time = C''*
               {CL11}''"              |
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
  DT_Get_Current ID=DT,Date=(pwa_date,&dt_gregorian)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_date),                         *
               control=" Gregorian Date = C''{CL10}''"
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
  DT_Get_Current ID=DT,Time=(pwa_time,&dt_hhmmssth)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_time),                         *
               control=" HHMMSSTH Time = C''{CL11}''"
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
  DT_Get_Current ID=DT,Time=(pwa_time,&dt_hours)
  errexit (treg,r15,nz)               |
  DT_Get_Current ID=DT,Time=(pwa_time2,&dt_phours)
  errexit (treg,r15,nz)               |
  DT_Get_Current ID=DT,Time=(pwa_time3,&dt_ihours)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_time,pwa_time2,pwa_time3),     *
               control=" DT_Hours = C''{CL2}'', DT_Phours = X''{XL2}'',*
                DT_Ihours = X''{XL2}''."
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
  DT_Get_Current ID=DT,Time=(pwa_time,&dt_minutes)
  errexit (treg,r15,nz)               |
  DT_Get_Current ID=DT,Time=(pwa_time2,&dt_pminutes)
  errexit (treg,r15,nz)               |
  DT_Get_Current ID=DT,Time=(pwa_time3,&dt_iminutes)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_time,pwa_time2,pwa_time3),     *
               control=" DT_Minutes = C''{CL2}'', DT_Pminutes = X''{XL2*
               }'', DT_Iminutes = X''{XL2}''."
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
  DT_Get_Current ID=DT,Time=(pwa_time,&dt_seconds)
  errexit (treg,r15,nz)               |
  DT_Get_Current ID=DT,Time=(pwa_time2,&dt_pseconds)
  errexit (treg,r15,nz)               |
  DT_Get_Current ID=DT,Time=(pwa_time3,&dt_iseconds)
  errexit (treg,r15,nz)               |
  pl_print_formatted  id=PL,source=(pwa_time,pwa_time2,pwa_time3),     *
               control=" DT_seconds = C''{CL2}'', DT_Pseconds = X''{XL2*
               }'', DT_Iseconds = X''{XL2}''."
  errexit (treg,r15,nz)               |
* *-------------------------------------------------------------------*
 endblk                               |
    eject                             |
**--------------------------------------------------------------------*
**
** Conversion_Test issues the DT_Convert function.
**
**--------------------------------------------------------------------*
 block name=conversion_test,type=subroutine
  tput  =c' ',1                       |
  tput  conversion_header,l'conversion_header
  loop  until                         |
   fill  pwa_answer,c' '              |
   fill  pwa_date,c' '                |
   tput  conversion_prompt,l'conversion_prompt
   tget  pwa_answer,l'pwa_answer      |
   oc    pwa_answer,=cl32' '          |
   leave loop=*,(cli,pwa_answer,eq,c' ')
* *-------------------------------------------------------------------*
   block name=individual_date_conversions
    DT_Convert  ID=DT,Fromdate=(pwa_answer,&dt_gregorian),             *
               Todate=(pwa_date,&dt_gregorian),                        *
               Totime=(pwa_time,&dt_hhmmssth)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Gregorian -> Gregorian = C''{CL10}''"
    errexit (treg,r15,nz)             |
    pl_print_formatted id=PL,source=(pwa_time),                        *
               control="   Null time -> HHMMSSTH = C''{CL11}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    fill  pwa_date2,c' '
    DT_Convert  ID=DT,Fromtime=('12:31:15.20',&dt_hhmmssth),           *
               Todate=(pwa_date2,&dt_text),                            *
               Totime=(pwa_time,&dt_hhmmssth)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date2),                       *
               control="   Null date -> Text = C''{CL18 T}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_gregorian),               *
               Todate=(pwa_date,&dt_julian)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Gregorian -> Julian = C''{CL7}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_julian),                  *
               Todate=(pwa_date,&dt_juliand)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Julian -> Juliand = C''{CL8}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_juliand),                 *
               Todate=(pwa_date,&dt_normal)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Juliand -> Normal = C''{CL11}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_normal),                  *
               Todate=(pwa_date,&dt_text)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Normal -> Text = C''{CL18 T}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_text),                    *
               Todate=(pwa_date,&dt_number_of_days)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Text -> Number-Of-Days = I''{IL4}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_number_of_days),          *
               Todate=(pwa_date,&dt_textd)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Number-Of-Days -> Textd = C''{CL28}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_textd),                   *
               Todate=(pwa_date,&dt_sortdate)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Textd -> Sortdate = C''{CL10}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromdate=(pwa_date,&dt_sortdate),                *
               Totime=(pwa_date,&dt_todclock)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   Sortdate -> TODclock = X''{XL8}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert  ID=DT,Fromtime=(pwa_date,&dt_todclock),                *
               Todate=(pwa_date,&dt_gregorian)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date),                        *
               control="   TODclock -> Gregorian = C''{CL10}''"
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    pl_print id=PL,string='0*** Short date formats: ***'
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date2,&dt_days)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date3,&dt_pdays)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date4,&dt_idays)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date2,pwa_date3,pwa_date4),   *
               control="   DT_Days = {CL2}, DT_Pdays = X""{XL2}"", DT_I*
               days = H""{IL2}""."    |
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date2,&dt_month)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date3,&dt_pmonth)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date4,&dt_imonth)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date2,pwa_date3,pwa_date4),   *
               control="   DT_Month = {CL2}, DT_Pmonth = X""{XL2}"", DT*
               Imonth = H""{IL2}""."  |
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date2,&dt_weekday)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date3,&dt_weekday3)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date2,pwa_date3),             *
               control="   DT_Weekday = {CL9 T}, DT_Weekday3 = {CL3}."
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date2,&dt_monthname)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date3,&dt_monthname3)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,source=(pwa_date2,pwa_date3,pwa_date4),   *
               control="   DT_Monthname = {CL9 T}, DT_Monthname3 = {CL3*
               }."                    |
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date2,&dt_year)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date3,&dt_year2)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date4,&dt_pyear)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    DT_Convert ID=DT,Fromdate=(pwa_date,&dt_gregorian),                *
               Todate=(pwa_date5,&dt_iyear)
    if    (treg,r15,nz)               |
     callsub dt_error                 |
     leave block=*                    |
    endif                             |
    pl_print_formatted id=PL,         |                                *
               source=(pwa_date2,pwa_date3,pwa_date4,pwa_date5),       *
               control="   DT_Year = {CL4}, DT_Year2 = {CL2}, DT_Pyear *
               = X""{XL4}"", DT_Iyear = H""{IL2}""."
    errexit (treg,r15,nz)             |
* *-------------------------------------------------------------------*
   endblk                             |
  endloop until,leave                 |
 endblk                               |
 eject                                |
**--------------------------------------------------------------------*
**
** General_Input_Test exercises the DT_General_Input format.
**
**--------------------------------------------------------------------*
 block name=general_input_test,type=subroutine
  tput  =c' ',1                       |
  tput  general_header,l'general_header
  loop  until                         |
   fill  pwa_answer,c' '              |
   fill  pwa_date,c' '                |
   fill  pwa_time,c' '                |
   tput  general_prompt,l'general_prompt
   tget  pwa_answer,l'pwa_answer      |
   leave loop=*,(cli,pwa_answer,eq,c' ')
   tput  general_prompt2,l'general_prompt2
   tget  pwa_time,l'pwa_time          |
* *-------------------------------------------------------------------*
   block name=individual_general_format
    DT_Convert  ID=DT,Fromdate=(pwa_answer,&dt_general_input),         *
               fromtime=(pwa_time,&dt_general_input),                  *
               Totime=(pwa_time2,&dt_todclock)
    if    (treg,r15,nz)               |
     if    (%dt_invalid_date_format)  |
      tput  general_invalid,l'general_invalid
     else                             |
      callsub dt_error                |
     endif                            |
     leave block=*                    |
    endif                             |
    PL_Print_Formatted id=PL,         |                                *
               control=" DT_Todclock format of date is X''{XL8}.''",   *
               source=(pwa_time2)     |
   endblk                             |
  endloop until,leave                 |
  leave block=*  <<<<<<<<<
  loop  until                         |
   fill  pwa_answer,c' '              |
   fill  pwa_date,c' '                |
   tput  general_prompt2,l'general_prompt2
   tget  pwa_answer,l'pwa_answer      |
   leave loop=*,(cli,pwa_answer,eq,c' ')
* *-------------------------------------------------------------------*
   block name=individual_general_format2
    DT_Convert  ID=DT,Fromtime=(pwa_answer,&dt_general_input),         *
               Totime=(pwa_time,&dt_civilian)
    if    (treg,r15,nz)               |
     if    (%dt_invalid_time_format)  |
      tput  general_invalid,l'general_invalid
     else                             |
      callsub dt_error                |
     endif                            |
     leave block=*                    |
    endif                             |
    PL_Print_Formatted id=PL,         |                                *
               control=" DT_Civilian format of time is {CL11}.",       *
               source=(pwa_time)      |
   endblk                             |
  endloop until,leave                 |
 endblk                               |
   eject                              |
**--------------------------------------------------------------------*
**
** Add_Test exercises the DT_Add function.
**
**--------------------------------------------------------------------*
 block name=add_test,type=subroutine  |
  tput  =c' ',1                       |
  tput  add_header,l'add_header       |
  callsub add_single_test,            |                                *
               ("days",4,&dt_days,&dt_pdays,&dt_idays)
  callsub add_single_test,            |                                *
               ("hours",5,&dt_hours,&dt_phours,&dt_ihours)
  callsub add_single_test,            |                                *
               ("minutes",7,&dt_minutes,&dt_pminutes,&dt_iminutes)
  callsub add_single_test,            |                                *
               ("seconds",7,&dt_seconds,&dt_pseconds,&dt_iseconds)
  callsub add_delta_test
 endblk                               |
* *-------------------------------------------------------------------*
 block name=add_single_test,type=subroutine
  lm    r2,r6,0(r1)                   |
  loop  until                         |
   PL_Print_Formatted id=PL,          |                                *
               control="   Enter number of {CL?} to add to current date*
               , or null line for next test.",                         *
               source=(0(r2),2(r3))   |
   errexit (treg,r15,nz)              |
   fill  pwa_answer,c' '              |
   tget  pwa_answer,l'pwa_answer      |
   leave loop=*,(cli,pwa_answer,eq,c' ')
   callsub copy_digits,(pwa_answer,pwa_interval)
   fill  pwa_date,c' '
   fill  pwa_time,c' '
   DT_Get_Current id=DT,              |                                *
               date=(pwa_date,&dt_normal),                             *
               time=(pwa_time,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
    leave loop=*                      |
   endif                              |
   PL_Print id=PL,string="   Character format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   DT_Add      id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_interval,(r4)),                           *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time + interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
   PL_Print id=PL,string="   Packed-decimal format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   xc    pwa_d,pwa_d                  |
   pack  pwa_d+5(3),pwa_interval(5)   |
   DT_Add      id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_d+4,(r5)),                                *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time + interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
   PL_Print id=PL,string="   Integer format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   cvb   r1,pwa_d                     |
   sth   r1,pwa_d                     |
   DT_Add      id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_d,(r6)), |                                *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time + interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
  endloop until,leave                 |
 endblk                               |
* *-------------------------------------------------------------------*
   eject                              |
 block name=add_delta_test,type=subroutine
  lm    r2,r6,0(r1)                   |
  loop  until                         |
   PL_Print    id=PL,                                                  *
               string="   Enter delta value to add to current date, or *
               null line for next test."
   errexit (treg,r15,nz)              |
   fill  pwa_answer,c' '              |
   tget  pwa_answer,l'pwa_answer      |
   leave loop=*,(cli,pwa_answer,eq,c' ')
   fill  pwa_date,c' '
   fill  pwa_time,c' '
   DT_Get_Current id=DT,              |                                *
               date=(pwa_date,&dt_normal),                             *
               time=(pwa_time,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
    leave loop=*                      |
   endif                              |
   PL_Print id=PL,string="   Delta format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   DT_Add      id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_answer,&dt_delta),                        *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time + interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
  endloop until,leave                 |
 endblk                               |
* *-------------------------------------------------------------------*
   eject                              |
**--------------------------------------------------------------------*
**
** Subtract_Test exercises the DT_Subtract function.
**
**--------------------------------------------------------------------*
 block name=Subtract_test,type=subroutine
  tput  =c' ',1                       |
  tput  Subtract_header,l'Subtract_header
  callsub Subtract_single_test,       |                                *
               ("days",4,&dt_days,&dt_pdays,&dt_idays)
  callsub Subtract_single_test,       |                                *
               ("hours",5,&dt_hours,&dt_phours,&dt_ihours)
  callsub Subtract_single_test,       |                                *
               ("minutes",7,&dt_minutes,&dt_pminutes,&dt_iminutes)
  callsub Subtract_single_test,       |                                *
               ("seconds",7,&dt_seconds,&dt_pseconds,&dt_iseconds)
  callsub subtract_delta_test         |
 endblk                               |
* *-------------------------------------------------------------------*
 block name=Subtract_single_test,type=subroutine
  lm    r2,r6,0(r1)                   |
  loop  until                         |
   PL_Print_Formatted id=PL,          |                                *
               control="   Enter number of {CL?} to subtract from curre*
               nt date, or null line for next test.",                  *
               source=(0(r2),2(r3))   |
   errexit (treg,r15,nz)              |
   fill  pwa_answer,c' '              |
   tget  pwa_answer,l'pwa_answer      |
   leave loop=*,(cli,pwa_answer,eq,c' ')
   callsub copy_digits,(pwa_answer,pwa_interval)
   fill  pwa_date,c' '
   fill  pwa_time,c' '
   DT_Get_Current id=DT,              |                                *
               date=(pwa_date,&dt_normal),                             *
               time=(pwa_time,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
    leave loop=*                      |
   endif                              |
   PL_Print id=PL,string="   Character format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   DT_Subtract id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_interval,(r4)),                           *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time - interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
   PL_Print id=PL,string="   Packed-decimal format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   xc    pwa_d,pwa_d                  |
   pack  pwa_d+5(3),pwa_interval(5)   |
   DT_Subtract id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_d+4,(r5)),                                *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time - interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
   PL_Print id=PL,string="   Integer format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   cvb   r1,pwa_d                     |
   sth   r1,pwa_d                     |
   DT_Subtract id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_d,(r6)), |                                *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time - interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
  endloop until,leave                 |
 endblk                               |
 block name=subtract_delta_test,type=subroutine
  loop  until                         |
   PL_Print    id=PL,                                                  *
               string="   Enter delta value to subtract from current da*
               te, or null line for next test."
   errexit (treg,r15,nz)              |
   fill  pwa_answer,c' '              |
   tget  pwa_answer,l'pwa_answer      |
   leave loop=*,(cli,pwa_answer,eq,c' ')
   fill  pwa_date,c' '
   fill  pwa_time,c' '
   DT_Get_Current id=DT,              |                                *
               date=(pwa_date,&dt_normal),                             *
               time=(pwa_time,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
    leave loop=*                      |
   endif                              |
   PL_Print id=PL,string="   Delta format interval:"
   errexit (treg,r15,nz)              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   fill  pwa_time2,c' '               |
   DT_subtract id=DT,                 |                                *
               datein=(pwa_date,&dt_normal),                           *
               timein=(pwa_time,&dt_hhmmssth),                         *
               interval=(pwa_answer,&dt_delta),                        *
               dateout=(pwa_date2,&dt_normal),                         *
               timeout=(pwa_time2,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_date2,pwa_time2),             *
               control="     Current date/time - interval = {CL16 T}, {*
               CL16 T}."                  |
    errexit (treg,r15,nz)             |
   endif                              |
* *-------------------------------------------------------------------*
  endloop until,leave                 |
 endblk                               |
* *-------------------------------------------------------------------*
   eject                              |
* *-------------------------------------------------------------------*
 space 1                              |
 block name=copy_digits,type=subroutine Parms = (from,to)
  lm    r2,r3,0(r1)                   | Get parms
  lr    r1,r2                         | Make a copy(from) to tear up
  lr    r4,r2                         |  and one to preserve
  fill  0(r3),c'0',length=5           | Init. "to" field to c'0's
  loop  while,(cli,0(r2),ne,c' ')     |
   la    r2,1(r2)                     |
  endloop while                       |
  sr    r2,r1                         | R2 = length of input
  la    r14,5                         |
  sr    r14,r2                        |
  la    r15,0(r3,r14)                 |
  bctr  r2,0                          |
  exi   r2,(mvc,0(0,r15),0(r4))       |
 endblk                               |
   eject                              |
 block name=duration_test,type=subroutine
  PL_Print  id=PL,string=" *** Duration test ***"
  errexit (treg,r15,nz)               |
  loop  until                         |
   PL_Print  id=PL,string=" Enter general-format date, or null line to *
               terminate test."       |
   errexit (treg,r15,nz)              |
   fill  pwa_date2,c' '               |
   tget  pwa_date2,l'pwa_date2        |
   leave loop=*,(cli,pwa_date2,eq,c' ')
   PL_Print  id=PL,string=" Enter general-format time, or null line."
   errexit (treg,r15,nz)              |
   fill  pwa_time2,c' '               |
   tget  pwa_time2,l'pwa_time2        |
   if    (cli,pwa_time2,eq,c' ')      |
    mvc   pwa_time2(11),=c'00:00:00.00'
   endif                              |
   fill  pwa_date,c' '                |
   fill  pwa_time,c' '                |
   DT_Get_Current id=DT,              |                                *
               date=(pwa_date,&dt_normal),                             *
               time=(pwa_time,&dt_hhmmssth)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
    leave loop=*                      |
   endif                              |
   PL_Print_Formatted id=PL,source=(pwa_date,pwa_time),                *
               control="     Current date and time are {CL16 T}, {CL16 *
               T}."                   |
   errexit (treg,r15,nz)              |
   DT_Duration id=DT,                 |                                *
               date1=(pwa_date,&dt_general_input),                     *
               time1=(pwa_time,&dt_general_input),                     *
               date2=(pwa_date2,&dt_general_input),                    *
               time2=(pwa_time2,&dt_general_input),                    *
               duration=(pwa_interval,&dt_days)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_interval),                    *
               control=" Difference is {CL5} days."
    errexit (treg,r15,nz)             |
   endif                              |
   DT_Duration id=DT,                 |                                *
               date1=(pwa_date,&dt_general_input),                     *
               time1=(pwa_time,&dt_general_input),                     *
               date2=(pwa_date2,&dt_general_input),                    *
               time2=(pwa_time2,&dt_general_input),                    *
               duration=(pwa_interval,&dt_hours)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_interval),                    *
               control=" Difference is {CL5} hours."
    errexit (treg,r15,nz)             |
   endif                              |
   DT_Duration id=DT,                 |                                *
               date1=(pwa_date,&dt_general_input),                     *
               time1=(pwa_time,&dt_general_input),                     *
               date2=(pwa_date2,&dt_general_input),                    *
               time2=(pwa_time2,&dt_general_input),                    *
               duration=(pwa_interval,&dt_minutes)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_interval),                    *
               control=" Difference is {CL5} minutes."
    errexit (treg,r15,nz)             |
   endif                              |
   DT_Duration id=DT,                 |                                *
               date1=(pwa_date,&dt_general_input),                     *
               time1=(pwa_time,&dt_general_input),                     *
               date2=(pwa_date2,&dt_general_input),                    *
               time2=(pwa_time2,&dt_general_input),                    *
               duration=(pwa_interval,&dt_delta)
   if   (treg,r15,nz)                 |
    callsub dt_error                  |
   else                               |
    PL_Print_Formatted id=PL,source=(pwa_interval),                    *
               control=" Difference is delta-format {CL20 T}."
    errexit (treg,r15,nz)             |
   endif                              |
  endloop until,leave                 |
 endblk                               |
 block type=errexit                   |
* ex    0,*
  es_display_debug_info_and_abend id=es
 endblk                               |
 block name=dt_error,type=subroutine  |
* ex    0,*
  es_display_debug_info id=es         |
 endblk                               |
     psd   ,                          |
psd_sysprint   dc  c'sysprint'        |
get_current_header dc c"*** DT_Get_Current Testing ***"
get_current_prompt dc c"Enter any character for DT_Get_Current test, or*
                null line for next test."
conversion_header dc c"*** DT_Convert Testing ***"
conversion_prompt dc c"Enter Gregorian date to convert, or a null line *
               for next test."        |
general_header    dc c"*** DT_General_Input Testing ***"
general_prompt    dc c"Enter any format date value, or a null line for *
               time format test."     |
general_prompt2   dc c"Enter any format time value, or a null line for *
               next test."            |
general_invalid dc  c"*** Format could not be determined. ***"
add_header   dc c"*** DT_Add function testing ***"
subtract_header dc c"*** DT_Subtract function testing ***"
     pwa   ,                          |
pwa_d             ds   d              |
pwa_es_date       ds   f              |
pwa_es_time       ds   f              |
pwa_esv_address   ds   f              |
pwa_es_epa        ds   f              |
pwa_es_token      ds   f              |
pwa_format        ds   f              |
pwa_answer        ds   cl32           |
pwa_date          ds   cl32           |
pwa_date2         ds   cl16           |
pwa_date3         ds   cl16           |
pwa_date4         ds   cl16           |
pwa_date5         ds   cl16           |
pwa_time          ds   cl16           |
pwa_time2         ds   cl16           |
pwa_time3         ds   cl16           |
pwa_time4         ds   cl16           |
pwa_time5         ds   cl16           |
pwa_text_format   ds   cl16           |
pwa_interval      ds   cl20           |
     endpwa ,                         |
     end   ,                          |
//C.SYSLIB DD
//         DD
//         DD DSN=SYSTEMS.SRV.SOURCE,DISP=SHR
