*---------------------------------------------------------------------*
*  Copyright 2011 by Clemson University Research Foundation           *
*                                                                     *
*  Licensed under the Apache License, Version 2.0 (the "License");    *
*  you may not use this file except in compliance with the License.   *
*  You may obtain a copy of the License in this library as member     *
*  $LICENSE, or from                                                  *
*                                                                     *
*      http://www.apache.org/licenses/LICENSE-2.0                     *
*                                                                     *
*  Unless required by applicable law or agreed to in writing,         *
*  software distributed under the License is distributed on an "AS    *
*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either    *
*  express or implied.  See the License for the specific language     *
*  governing permissions and limitations under the License.           *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*        Cheap Calculator Service Processor Symbols And Macros
*---------------------------------------------------------------------*
*  Service processor module name.
*---------------------------------------------------------------------*
   GBLC   &CHEAP_CALCULATOR
&CHEAP_CALCULATOR  SETC   '''SRVCC   '''
*---------------------------------------------------------------------*
*  Function symbols.
*---------------------------------------------------------------------*
   GBLA   &CC_START
   GBLA   &CC_TERMINATE
   GBLA   &CC_ADD
   GBLA   &CC_SUBTRACT
   GBLA   &CC_MULTIPLY
   GBLA   &CC_DIVIDE
   GBLA   &CC_CLEAR
&CC_START      SETA  1
&CC_TERMINATE  SETA  2
&CC_ADD        SETA  3
&CC_SUBTRACT   SETA  4
&CC_MULTIPLY   SETA  5
&CC_DIVIDE     SETA  6
&CC_CLEAR      SETA  7
*---------------------------------------------------------------------*
*  Return code symbols.
*---------------------------------------------------------------------*
  GBLA    &CC_INVALID_CC_ID
  GBLA    &CC_INVALID_NUMBER_OF_PARMS
  GBLA    &CC_INVALID_FUNCTION
  GBLA    &CC_OVERFLOW
  GBLA    &CC_PARAMETER_MISSING
&CC_INVALID_CC_ID           SETA  1
&CC_INVALID_NUMBER_OF_PARMS SETA  2
&CC_INVALID_FUNCTION        SETA  3
&CC_OVERFLOW                SETA  4
&CC_PARAMETER_MISSING       SETA  5
*---------------------------------------------------------------------*
* DEFUCOND macros to facilitate checking return codes.
*---------------------------------------------------------------------*
   DEFUCOND MACRO=SRV##RC,NAME=CC_INVALID_CC_ID
   DEFUCOND MACRO=SRV##RC,NAME=CC_INVALID_NUMBER_OF_PARMS
   DEFUCOND MACRO=SRV##RC,NAME=CC_INVALID_FUNCTION
   DEFUCOND MACRO=SRV##RC,NAME=CC_OVERFLOW
   DEFUCOND MACRO=SRV##RC,NAME=CC_PARAMETER_MISSING
*---------------------------------------------------------------------*
*
*  CC_ID Macro: Establish default values for a specific service
*               processor and associate them with the specified ID
*               name.  The values are stored in the following created
*               global variables, which are used by the other macros:
*
*    Variable Name                     Description
*    -------------  -----------------------------------------------
*    #$&ID.$#IDMAC  Name of macro that created the ID: CC_ID.
*    #$&ID.$#ESID   Service processor's Environment Support ID.
*    #$&ID.$#EPN    Tag for Service processor's Entry Point Name.
*    #$&ID.$#EPA    Tag for Service processor's Entry Point Address.
*    #$&ID.$#TKN    Tag for Service processor's Entry Point Token.
*
*---------------------------------------------------------------------
         MACRO
         CC_ID &ID=,&ESVA=,&SPEPNAME=,&SPEPA=,&SPTOKEN=,&ESID=,        *
               &SIZELENGTH=
.*
.* Invoke SRV##ID to create globals used by all ID's.
.*
         SRV##ID SET,                                                  +
               ID=&ID.,IDMAC=CC_ID,ESID=&ESID.,SPEPNAME=&SPEPNAME,     +
               SPEPA=&SPEPA,SPTOKEN=&SPTOKEN.
         MEND
*---------------------------------------------------------------------*
*  CC_START Macro.
*  Format:    CC_START  ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address               (*)
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_START &ID=,&SPEPA=,&SPTOKEN=,&ESVA=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_START                  SETC in open code.
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
         MVC   &#_IDTKN,=F'0'            Set token to 0 before START.
.*
.* Generate the CC_START call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_START
         ##PLIST PARM,&#_IDESVA
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
.MEXIT   MEND
*---------------------------------------------------------------------*
*  CC_Terminate Macro.
*  Format:    CC_TERMINATE  ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address               (*)
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_TERMINATE &ID=,&SPEPA=,&SPTOKEN=,&ESVA=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_TERMINATE
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
.*
.* Generate the CC_TERMINATE call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_TERMINATE
         ##PLIST PARM,&#_IDESVA
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
.MEXIT   MEND
*---------------------------------------------------------------------*
*  CC_Add Macro.
*  Format:    CC_ADD    ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address,              (*)
*                       VALUE=address | constant | register,
*                       DISPLAY=address | register
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_ADD  &ID=,&SPEPA=,&SPTOKEN=,&ESVA=,                        +
               &VALUE=,&DISPLAY=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_ADD
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
.*
.* Ensure required parameters are present.
.*
         AIF  ('&VALUE' EQ '').MISSING
         AIF  ('&DISPLAY' EQ '').MISSING
         AIF  (T'&DISPLAY EQ 'N').BADDISP
.*
.* Generate the CC_ADD call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_ADD
         ##PLIST PARM,&#_IDESVA
         ##PLIST PARM,&VALUE
         ##PLIST PARM,&DISPLAY
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
         MEXIT
.MISSING MNOTE 8,'Required parameter(s) missing.'
         MEXIT
.BADDISP MNOTE 8,'Invalid address of ''&DISPLAY'' for DISPLAY.'
.MEXIT   MEND
*---------------------------------------------------------------------*
*  CC_Subtract Macro.
*  Format:    CC_SUBTRACT ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address,              (*)
*                       VALUE=address | constant | register,
*                       DISPLAY=address | register
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_SUBTRACT &ID=,&SPEPA=,&SPTOKEN=,&ESVA=,                    +
               &VALUE=,&DISPLAY=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_SUBTRACT
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
.*
.* Ensure required parameters are present.
.*
         AIF  ('&VALUE' EQ '').MISSING
         AIF  ('&DISPLAY' EQ '').MISSING
         AIF  (T'&DISPLAY EQ 'N').BADDISP
.*
.* Generate the CC_SUBTRACT call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_SUBTRACT
         ##PLIST PARM,&#_IDESVA
         ##PLIST PARM,&VALUE
         ##PLIST PARM,&DISPLAY
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
         MEXIT
.MISSING MNOTE 8,'Required parameter(s) missing.'
         MEXIT
.BADDISP MNOTE 8,'Invalid address of ''&DISPLAY'' for DISPLAY.'
.MEXIT   MEND
*---------------------------------------------------------------------*
*  CC_Multiply Macro.
*  Format:    CC_MULTIPLY ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address,              (*)
*                       VALUE=address | constant | register,
*                       DISPLAY=address | register
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_MULTIPLY &ID=,&SPEPA=,&SPTOKEN=,&ESVA=,                    +
               &VALUE=,&DISPLAY=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_MULTIPLY
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
.*
.* Ensure required parameters are present.
.*
         AIF  ('&VALUE' EQ '').MISSING
         AIF  ('&DISPLAY' EQ '').MISSING
         AIF  (T'&DISPLAY EQ 'N').BADDISP
.*
.* Generate the CC_MULTIPLY call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_MULTIPLY
         ##PLIST PARM,&#_IDESVA
         ##PLIST PARM,&VALUE
         ##PLIST PARM,&DISPLAY
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
         MEXIT
.MISSING MNOTE 8,'Required parameter(s) missing.'
         MEXIT
.BADDISP MNOTE 8,'Invalid address of ''&DISPLAY'' for DISPLAY.'
.MEXIT   MEND
*---------------------------------------------------------------------*
*  CC_Divide Macro.
*  Format:    CC_DIVIDE ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address,              (*)
*                       VALUE=address | constant | register,
*                       DISPLAY=address | register
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_DIVIDE &ID=,&SPEPA=,&SPTOKEN=,&ESVA=,                      +
               &VALUE=,&DISPLAY=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_DIVIDE
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
.*
.* Ensure required parameters are present.
.*
         AIF  ('&VALUE' EQ '').MISSING
         AIF  ('&DISPLAY' EQ '').MISSING
         AIF  (T'&DISPLAY EQ 'N').BADDISP
.*
.* Generate the CC_DIVIDE call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_DIVIDE
         ##PLIST PARM,&#_IDESVA
         ##PLIST PARM,&VALUE
         ##PLIST PARM,&DISPLAY
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
         MEXIT
.MISSING MNOTE 8,'Required parameter(s) missing.'
         MEXIT
.BADDISP MNOTE 8,'Invalid address of ''&DISPLAY'' for DISPLAY.'
.MEXIT   MEND
*---------------------------------------------------------------------*
*  CC_Clear Macro.
*  Format:    CC_CLEAR ID=CC,
*                       SPEPA=CC_entry_point_address,  (*)
*                       SPTOKEN=CC_token_address,      (*)
*                       ESVA=ESV_address               (*)
*  (*) - These may be defaulted to values set or generated by CC_ID.
*---------------------------------------------------------------------*
         MACRO
         CC_CLEAR &ID=,&SPEPA=,&SPTOKEN=,&ESVA=
         GBLC  &#_IDCODE,&#_IDMAC,&#_IDESID,&#_IDESVA
         GBLC  &#_IDEPN,&#_IDEPA,&#_IDTKN
         GBLA  &CC_CLEAR
.*
.* Obtain service processor ID values.
.*
         SRV##ID GET,REQUIRED=(SPEPA,SPTOKEN,ESVA),                    +
               ID=&ID,IDMAC=CC_ID,SPEPA=&SPEPA,SPTOKEN=&SPTOKEN,       +
               ESVA=&ESVA.
         AIF  ('&#_IDCODE' NE 'SUCCESS').MEXIT
.*
.* Generate the CC_CLEAR call.
.*
.PARMLIST ANOP ,
         ##PLIST START
         ##PLIST PARM,&#_IDTKN
         ##PLIST PARM,&CC_CLEAR
         ##PLIST PARM,&#_IDESVA
.PLEND   ##PLIST END,VL
         CALLX  &#_IDEPA
.MEXIT   MEND
