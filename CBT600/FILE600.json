{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012434000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1528436, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE600.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE600.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x18\\n'", "DS1TRBAL": "b'\\x0fF'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04c\\x00\\x0b\\x04e\\x00\\x05\\x00\\x19'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04G\\x00\\x00\\x01\\x06\\x05/\\x01\\x06\\x05/\\x10\\x01\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf1@@@'", "ispf": {"version": "04.71", "flags": 0, "createdate": "2006-02-21T00:00:00", "modifydate": "2006-02-21T10:01:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-471"}, "text": "REGULAR CBT TAPE - VERSION 471    FILE:  600\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT471.FILE600\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 16 MEMBERS COUNTED; CUMULATIVE SIZE IS 14,081 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/21/06    10:01:21    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x04\\x04/\\x01\\x04\\x04/\\x17\\x16\\x006\\x006\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-11T00:00:00", "modifydate": "2004-02-11T17:16:14", "lines": 54, "newlines": 54, "modlines": 0, "user": "AWCPAW"}, "text": "From: Wells, Paul A\nSent: Wed 11/02/2004 16:02\nTo: 'sbgolob@cbttape.org'\nSubject: CBT file 600 update\n\nSam,\n\n\n\nPlease find the attached update to CBT file 600.  The changes are\nas follows.\n\n\n\n    * Update to FTPC119 for TCPIP APAR PQ80090.\n\n    * Documentation and JCL updated to include option to use z/OS\n      1.2 C compiler for FTPC118/119.  The z/OS 1.2 compiler is\n      now the default for FTPC119.\n\n    * New C program NICKNC.  This is a piece of fun designed to\n      generate English nicknames.\n\n    * The following new programs are included.\n\no ANFUXMSG (ASM) An improved WTO message exit for IBM Infoprint\nServer.\n\no HPNSTST (ASM) A program to 'IVP' TCPIP HPNS API.\n\no RXMAILER (REXX) A bulk emailer which opens a connection to an\nSMTP server and transmits SMTP format input data.  This is\nsimilar in many ways to UDSMTP, but RXMAILER has some interesting\nfeatures.  It can simulate the sending of emails to stress test\nan SMTP server and it can generate parts of the SMTP commands,\nSMTP header and mail data at run-time from symbolics (including\ninterpreted REXX) in the input file.\n\n    *   Minor update to doc and comments including tidy up of\n        formatting in $DOCFTPC to reduce file size.\n    *   Recompile of C programs to remove TEST option and\n        decrease object module size.\n\n\n\nBest regards,\n\nPaul Wells\nCOD/Enterprise Servers Division\nSaudi Aramco\n( +966-3-873-3155\npaul.wells@aramco.com\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE2": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x06\\x05/\\x01\\x06\\x05/\\tI\\x00\\x13\\x00\\x13\\x00\\x00\\xe3\\xd6\\xd4\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2006-02-21T00:00:00", "modifydate": "2006-02-21T09:49:34", "lines": 19, "newlines": 19, "modlines": 0, "user": "TOMKINS"}, "text": "Subject:     HPNSTST Fix\nFrom:        mjt6@daimlerchrysler.com\nDate:        Mon, 20 Feb 2006 11:35:09 -0500\nTo:          sbgolob@cbttape.org\n\nHi Sam,\n\nIt was a pleasure speaking with you.\n\nThe below attachments contain the assembler source and the SUPERC\noutput list for the HPNSTST program from Paul Wells.  I didn't\nadd any comments to the prolog in the source regarding the\nchange.\n\nWarmest Regards, Mike\n\nNOTE from S.GOLOB.  The fix required the changing around of R2 with\n                    R9 in a few places.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$README": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00D\\x01\\x02)/\\x01\\x04\\x04/\\x153\\x00\\xac\\x00\\x01\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "2002-10-19T00:00:00", "modifydate": "2004-02-11T15:33:44", "lines": 172, "newlines": 1, "modlines": 0, "user": "AWCPAW"}, "text": "\n                          CBT Tape File 600\n\n                 (userid).CBTxxx.FILE600.PDS($$README)\n\n------------------------------------------------------------------------\n\nThe contents of this CBT tape submission are categorised as follows.\n\n 1) FTPC118 and FTPC119\n 2) Assembler stuff\n 3) REXX stuff\n\n\nFTPC118 and FTPC119\n-------------------\nThe two programs (FTPC118 and FTPC119) are written in\nthe C language to process SMF type 118/119 records from the FTP\ncomponent of TCPIP on IBM's OS/390 and z/OS operating systems.\n\nThe programs operate in two modes: SMF exit mode and TEST mode.\n\nIn SMF exit mode the programs are installed as operating system SMF\nexits and invoked by the system each time an SMF record is written. In\nthis mode the programs select FTP SMF records and issue formatted WTO\n(Write to Operator) messages for each FTP related record.\n\nIn TEST mode the programs run in batch against an input file of SMF data\nand print FTP related records to a file.\n\nThe primary motivation for the creation of these programs was to enable\nan installation to log FTP activity in real-time for tracking, audit and\nautomation purposes and also to report on historical FTP activity. The\nsecondary motivation was to show how the C language could be used for\noperating system exits on OS/390. The documentation (in PDF format)\nincludes some tips on using Systems Programming C (SPC) for system\nexits.\n\nA minimum operating system level of OS/390 2.5 is required for these\nprograms.\n\n\nAssembler Stuff\n---------------\n\nA couple of additional assembler programs are included. These are\nsummarised as follows.\n\n       ANFUXMSG - An message exit for IBM's Infoprint Server Software.\n                  The exit writes all messages out to WTO but does\n                  so in way which takes into account the message\n                  content, so as to avoid splitting long strings\n                  over multiple lines of an MLWTO.\n       HPNSTST  - An assembler HPNS socket program which makes\n                  various TCPIP socket calls and reports the results\n                  to verify that the TCPIP HPNS socket interface\n                  is alive and well.\n\nREXX Stuff\n----------\n\nREXX programs as follows.\n\n       RXMAILER - A REXX bulk emailer which opens a socket connection\n                  to an SMTP server and transmits SMTP format input\n                  data. This is similar in many ways to UDSMTP.\n\n\n------------------------------------------------------------------------\n\n\nQuick Review\n------------\nFor a quick review of the source materials, execute the\nRECV member of this PDS to receive the 4 constituent PDSes. i.e.\n\n         (userid).CBTxxx.FILE600.ASM.PDS\n         (userid).CBTxxx.FILE600.C.PDS\n         (userid).CBTxxx.FILE600.OBJ.PDS\n         (userid).CBTxxx.FILE600.REXX.PDS\n\nInstallation\n------------\n\nThe 'assembler stuff' is contained in (userid).CBTxxx.FILE600.ASM.PDS\nand can be assembled and link edited individually as required.\nDocumentation for these programs is contained in the program source.\nThe same comment applies to the 'REXX stuff' in\n(userid).CBTxxx.FILE600.REXX.PDS.\n\nTo install the FTPC118/119 C programs, obtain the full installation\ninstructions by downloading the $DOCFTPC member of this\nPDS to a workstation. e.g. using an FTP command line client\non your workstation:-\n\n    C:\\> ftp hostname\n    User (hostname): userid\n    Password: ********\n    ftp> bin\n    ftp> get 'userid.CBTxxx.FILE600.PDS($DOCFTPC)' FTPCSMF.pdf\n    ftp> qui\n\nThe documentation is in PDF format and readable via the free Adobe\nAcrobat Reader at http://www.adobe.com/products/acrobat/alternate.html\n\nInstallation PDS Contents\n-------------------------\n$DOCFTPC - Comprehensive documentation of C language FTP C SMF exit\n           and print programs. Also includes some tips on usage\n           of SPC for system exits.\nRECV     - REXX EXEC to reload all 3 datasets via TSO RECEIVE command.\nXMITPDSA - XMIT unload of the ASM PDS (FB80). Contents as follows:-\n           ANFUXMSG - Improved WTO message exit for IBM\n                      Infoprint Server.\n           EDCXFGS  - Assembler source for storage\n                      allocation routines in SPC.\n           FTPCTST  - Assembler source for FTPCTST - an assembler\n                      program to invoke FTPC118/FTPC119 directly to\n                      simulate the SMF exit mode of operation\n                      for these programs.\n           HPNSTST  - Assembler source for HPNSTST - A program to 'IVP'\n                      the TCPIP HPNS API.\n           MLWTO    - Assembler source for MLWTO - a C\n                      function to issue WTOs (single or multi-line).\n           SPRNTLL  - Assembler source for SPRNTLL - a C\n                      function to format a 64 bit signed integer.\nXMITPDSC - XMIT unload of the C PDS (VB255). Contents as follows:-\n           CSQ      - An edit macro to switch between the different\n                      forms of square brackets used in C code.\n           FTPC118  - C program source for SMF type 118 (FTP)\n                      batch print and SMF exit WTO program.\n           FTPC119  - C program source for SMF type 119 (FTP)\n                      batch print and SMF exit WTO program.\n           NICKNC   - C program source for NICKNC -\n                      an English nicknames generating program.\n           SPRNTLLT - C program source which tests\n                      and demonstrates the function\n                      of the sprntll assembler function.\n           WTOT     - C program source which tests\n                      and demonstrates the function\n                      of the mlwto assembler function.\nXMITPDSO - XMIT unload of the object PDS.\nXMITPDSR - XMIT unload of the REXX PDS (FB80). Contents as follows:-\n           RXMAILER - A REXX bulk emailer which opens a socket connection\n                      to an SMTP server and transmits SMTP format input\n                      data. This is similar in many ways to UDSMTP.\n\nBoring Stuff\n------------\nUse of this material is subject to the standard CBT Tape\ndisclaimer viewable at http://www.cbttape.org/disclaimer.htm\n\nThis material may be copied, distributed, modified and executed freely.\nHowever in doing so, headers and comments indicating the source\nof the material should not be removed. In addition, this material\nmust not be sold on for profit, either in part or as a whole, without\nthe consent of the author.\n\nThe author appreciates feedback as to good uses to which this material\nis being put, and would give due consideration to any suggestions for\ncorrections, clarifications or enhancements. The author can be contacted\nas follows.\n\nName:         Paul Wells\nAddress:      Saudi Aramco Box 12959\n              Dhahran 31311\n              Saudi Arabia\nTelephone:    +966 3 873 3155 (Work - direct line)\nFax:          +966 3 873 8958 (Work)\nEmail:        Paul.Wells@aramco.com\nY! Messenger: PaulWells_technogold\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CHANGES": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01(\\x00W\\x01\\x02)/\\x01\\x06\\x05/\\x10\\x00\\x00H\\x00\\x00\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.40", "flags": 0, "createdate": "2002-10-19T00:00:00", "modifydate": "2006-02-21T10:00:57", "lines": 72, "newlines": 0, "modlines": 0, "user": "SBGOLOB"}, "text": "Date       Who   Details\n-----      ---   -------\n2006/02/21 MT  - Mike Tomkins fixed HPNSTST assembly.\n2005/06/06 PW  - Update to the RECV REXX exec to generate datestamped\n                 dataset names and include the unpacking of the REXX\n                 library.\n2005/06/05 PW  - Update to FTPC119 for APAR PK01634. See doc for\n                 details.\n2004/06/20 PW  - Update to FTPC118 for APAR PQ83055. See doc for\n                 details.\n               - Update to FTPC118L/FTPC119L jobs\n                 to add SCEELKED library after prolonged argument\n                 with IBM support over whether an z/OS 1.4 version\n                 of APAR PQ42591 is needed. I said yes, they said\n                 yes, they won. PQ42591 section in the doc was\n                 updated.\n2004/03/22 PW  - Change to FTPC119 to detect an error in the server\n                 transfer duration field for transfers spanning\n                 midnight prior to the fix for APAR PQ87028. Update\n                 to documentation for this APAR.\n2004/03/07 PW  - The compile JCL for FTCP119 was changed to specify\n                 RENT for the FTPT119 (TESTMODE) object. This ensures\n                 C writable static storage is supported when\n                 the load modules comes from an APF authorised\n                 linklist library.\n2004/03/01 PW  - Fixed a bug in the MLWTO and ANFUXMSG ASM programs\n                 which caused the WTO line length to be incorrect\n                 if the last line is exactly 71 chars and ends in a\n                 space. FTPC118/119 need to be relinked to pick\n                 up this fix.\n               - A very minor fix to FTPC118 which was highlighted\n                 during testing of the line length problem (above).\n               - Update to FTPC119 for addition of a program switch\n                 which enables IP domain name resolution when run\n                 in batch SMF print mode (TESTMODE).\n2004/02/11 PW  - Update to FTPC119 for APAR PQ80090.\n               - The z/OS 1.2 compiler is now the default for FTPC119.\n               - New C program NICKNC. This is a piece of fun designed\n                 to generate English nicknames.\n               - Minor update to contact details.\n               - The following new programs are included.\n                   - ANFUXMSG (ASM) An improved WTO message exit for\n                     IBM Infoprint Server.\n                   - HPNSTST (ASM) A program to 'IVP' TCPIP HPNS API.\n                   - RXMAILER (REXX) A bulk emailer which opens a\n                     socket connection to an SMTP server and transmits\n                     SMTP format input data. This is similar in many\n                     ways to UDSMTP, but RXMAILER has some interesting\n                     features. It can simulate the sending of emails\n                     to stress test an SMTP server and it can generate\n                     parts of the SMTP commands, SMTP header and mail\n                     data at run-time from symbolics (including\n                     interpreted REXX) in the input file.\n               - Minor update to doc and comments including tidy\n                 up of formatting in $DOCFTPC to reduce file size.\n               - Recompile of C programs to remove TEST option and\n                 decrease object module size.\n               - Documentation and JCL updated to include option\n                 to use z/OS 1.2 C compiler for FTPC118/119.\n               - Updated RECV exec to warn about replacing existing\n                 libraries before executing RECEIVE command.\n\n2002/10/30 PW  - Fixed a bug in fmtdsn() function of FTPC119.\n               - Comments and doc updated to reflect FILE600 of CBT\n                 Tape.\n\n2002/10/27 PW  - Original CBT submission. Includes:-\n                   - C source: FTPC118, FTPC119, SPRNTLLT, WTOT\n                   - ASM source: MLWTO, SPRNTLL, FTPCTST, EDCXFGS\n                   - Object: MLWTO, SPRNTLL, EDCXFGS, FTPC118, FTPC119\n                   - Supporting JCL\n                   - PDF format documentation in $DOCFTPC\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CONTACT": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x005\\x01\\x02'_\\x01\\x05\\x15o\\x12X\\x00:\\x00$\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "2002-10-02T00:00:00", "modifydate": "2005-06-05T12:58:35", "lines": 58, "newlines": 36, "modlines": 0, "user": "AWCPAW"}, "text": "\nAuthor contact details as follows.\n\nName      : Paul Wells\n\nAddress   : Saudi Aramco Box 12959\n            Dhahran 31311\n            Saudi Arabia\n\nTelephone : +966 3 873 3155 (Work - direct line)\n\nFax       : +966 3 873 8958 (Work)\n\nEmail     : Paul.Wells@aramco.com\n\n\nAnyone who thinks they remember me from places where I have worked\nin the past, and wish to renew acquaintances, please do.\nMy brief history as an MVS sysprog (since 1987) is as follows.\n\n2000-present : Saudi Aramco, Dhahran, Saudi Arabia.\n               OS/390 2.5/2.9, z/OS 1.2, z/OS 1.4\n\n1998-2000    : Ladbroke Racing, Rayners Lane, London, UK.\n               MVS 4.2/5.1, OS/390 2.5\n\n1996-1998    : Cap Gemini, Wandsworth Road, London, UK.\n               MVS 4.3, MVS 5.2.2, OS/390 2.4\n\n1994-1996    : ECSoft Synapse, Berkhamsted, UK.\n               Customer sites:-\n\n             : TNT Worldwide, Atherstone, UK.\n               MVS 4.3, OS/390 1.1\n\n             : Polygram, Romford, UK.\n               MVS 4.3/5.2.2\n\n             : Whitbread, Luton, UK.\n               MVS 4.3\n\n             : NPI, Tunbridge Wells, UK.\n               MVS 4.3\n\n1987-1994    : Tesco Stores, Cheshunt, UK.\n               MVS 2.1.7/2.2/3.1.3/4.3\n\n1985-1986    : Whitbread, Reading, UK.\n\n\nFootnote\n--------\nMy employer's mainframe is due to be decommissioned at the end of 2006.\nAfter this time, I will most likely be unable to maintain the\nsubmissions for CBT tape file 600. It will be with sadness and regret\nthat I bid farewell to the venerable mainframe which has been my\nbread and butter for nearly 20 years!\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DOCFTPC": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x013\\x00B\\x01\\x02)/\\x01\\x05\\x15o\\x129\\x0e\\x1c\\x00\\x00\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.51", "flags": 0, "createdate": "2002-10-19T00:00:00", "modifydate": "2005-06-05T12:39:42", "lines": 3612, "newlines": 0, "modlines": 0, "user": "AWCPAW"}, "mimetype": "application/pdf", "datatype": "binary", "extension": ".pdf"}, "$INDEX": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x002\\x01\\x02(\\x9f\\x01\\x04\\x04/\\x15\"\\x007\\x00)\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "2002-10-16T00:00:00", "modifydate": "2004-02-11T15:22:32", "lines": 55, "newlines": 41, "modlines": 0, "user": "AWCPAW"}, "text": "INDEX OF MEMBERS IN AWCPAW.CBT.FILE600.PDS\n------------------------------------------\n\n$$README - Overview and quick start guide.\n$CHANGES - Summary of changes\n$CONTACT - Contact details for the author\n$DOCFTPC - Comprehensive documentation of C language FTP C SMF exit\n           and print programs. Also includes some tips on usage\n           of SPC for system exits.\n$INDEX   - This member\nFTPDOC   - JCL to FTP documentation to a workstation.\nPACKAGEJ - JCL to package datasets for CBT.\nRECV     - REXX EXEC to reload all 3 datasets via TSO RECEIVE command.\nXMITPDSA - XMIT unload of the ASM PDS (FB80). Contents as follows:-\n           ANFUXMSG - Improved WTO message exit for IBM\n                      Infoprint Server.\n           EDCXFGS  - Assembler source for storage\n                      allocation routines in SPC.\n           FTPCTST  - Assembler source for FTPCTST - an assembler\n                      program to invoke FTPC118/FTPC119 directly to\n                      simulate the SMF exit mode of operation\n                      for these programs.\n           HPNSTST  - Assembler source for HPNSTST - A program to 'IVP'\n                      the TCPIP HPNS API.\n           MLWTO    - Assembler source for MLWTO - a C\n                      function to issue WTOs (single or multi-line).\n           SPRNTLL  - Assembler source for SPRNTLL - a C\n                      function to format a 64 bit signed integer.\nXMITPDSC - XMIT unload of the C PDS (VB255). Contents as follows:-\n           CSQ      - An edit macro to switch between the different\n                      forms of square brackets used in C code.\n           FTPC118  - C program source for SMF type 118 (FTP)\n                      batch print and SMF exit WTO program.\n           FTPC119  - C program source for SMF type 119 (FTP)\n                      batch print and SMF exit WTO program.\n           NICKNC   - C program source for NICKNC -\n                      an English nicknames generating program.\n           SPRNTLLT - C program source which tests\n                      and demonstrates the function\n                      of the sprntll assembler function.\n           WTOT     - C program source which tests\n                      and demonstrates the function\n                      of the mlwto assembler function.\nXMITPDSO - XMIT unload of the object PDS.\nXMITPDSR - XMIT unload of the REXX PDS (FB80). Contents as follows:-\n           RXMAILER - A bulk emailer which opens a                      n\n                      socket connection to an SMTP server and transmits\n                      SMTP format input data. This is similar in many\n                      ways to UDSMTP, but RXMAILER has some interesting\n                      features. It can simulate the sending of emails\n                      to stress test an SMTP server and it can generate\n                      parts of the SMTP commands, SMTP header and mail\n                      data at run-time from symbolics (including\n                      interpreted REXX) in the input file.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE600": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04H\\x00 \\x01\\x06\\x05/\\x01\\x15\"\\x8f\\x136\\x00A\\x00A\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "04.72", "flags": 0, "createdate": "2006-02-21T00:00:00", "modifydate": "2015-08-16T13:36:20", "lines": 65, "newlines": 65, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 600 is from Paul Wells, and contains C Language programs  *   FILE 600\n//*           which format SMF TCP/IP records (types 118 and 119).  *   FILE 600\n//*                                                                 *   FILE 600\n//*           Name      : Paul Wells                                *   FILE 600\n//*                                                                 *   FILE 600\n//*           Address   : Saudi Aramco Box 12959                    *   FILE 600\n//*                       Dhahran 31311                             *   FILE 600\n//*                       Saudi Arabia                              *   FILE 600\n//*                                                                 *   FILE 600\n//*           Telephone : +966 3 873 3155 (Work - direct line)      *   FILE 600\n//*                                                                 *   FILE 600\n//*           Fax       : +966 3 873 8958 (Work)                    *   FILE 600\n//*                                                                 *   FILE 600\n//*           Email     : Paul.Wells@aramco.com                     *   FILE 600\n//*                                                                 *   FILE 600\n//*           Yahoo     : paulwells_technogold                      *   FILE 600\n//*                                                                 *   FILE 600\n//*      Contained herein are two programs (FTPC118 and FTPC119)    *   FILE 600\n//*      written in the C language to process SMF type 118/119      *   FILE 600\n//*      records from the FTP component of TCPIP on IBM's OS/390    *   FILE 600\n//*      and z/OS operating systems.  A minimum operating system    *   FILE 600\n//*      level of OS/390 2.5 is required.                           *   FILE 600\n//*                                                                 *   FILE 600\n//*      The programs operate in two modes: SMF exit mode and       *   FILE 600\n//*      TEST mode.                                                 *   FILE 600\n//*                                                                 *   FILE 600\n//*      In SMF exit mode the programs are installed as             *   FILE 600\n//*      operating system SMF exits and invoked by the system       *   FILE 600\n//*      each time an SMF record is written. In this mode the       *   FILE 600\n//*      programs select FTP SMF records and issue formatted WTO    *   FILE 600\n//*      (Write to Operator) messages for each FTP related          *   FILE 600\n//*      record.                                                    *   FILE 600\n//*                                                                 *   FILE 600\n//*      In TEST mode the programs run in batch against an input    *   FILE 600\n//*      file of SMF data and print FTP related records to a        *   FILE 600\n//*      file.                                                      *   FILE 600\n//*                                                                 *   FILE 600\n//*      The primary motivation for the creation of these           *   FILE 600\n//*      programs was to enable an installation to log FTP          *   FILE 600\n//*      activity in real-time for tracking, audit and              *   FILE 600\n//*      automation purposes and also to report on historical       *   FILE 600\n//*      FTP activity. The secondary motivation was to show that    *   FILE 600\n//*      the C language could be used for operating system exits    *   FILE 600\n//*      on OS/390.                                                 *   FILE 600\n//*                                                                 *   FILE 600\n//*      There are a few other programs in this file as follows.    *   FILE 600\n//*                                                                 *   FILE 600\n//*      RXMAILER (REXX) - A REXX bulk emailer which opens a        *   FILE 600\n//*                        socket connection to an SMTP server      *   FILE 600\n//*                        and transmits SMTP format input data.    *   FILE 600\n//*                        It is similar in function to UDSMTP,     *   FILE 600\n//*                        but RXMAILER has many additional         *   FILE 600\n//*                        features.                                *   FILE 600\n//*      HPNSTST (ASM)   - A program to exercise to TCP/IP HPNS     *   FILE 600\n//*                        API.                                     *   FILE 600\n//*         NOTE:  Fixed by Mike Tomkins (2006/Feb)                 *   FILE 600\n//*         ----   email: mjt6@daimlerchrysler.com                  *   FILE 600\n//*                                                                 *   FILE 600\n//*      ANFUXMSG (ASM)  - A message exit for IBM's Infoprint       *   FILE 600\n//*                        Server which generates formatted single  *   FILE 600\n//*                        or multi-line WTOs.                      *   FILE 600\n//*      NICKNC (C)      - A fun program which generates combines   *   FILE 600\n//*                        common English language phonetic sounds  *   FILE 600\n//*                        to generate random nicknames.            *   FILE 600\n//*                                                                 *   FILE 600\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FTPDOC": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00W\\x01\\x02)\\x9f\\x01\\x020\\x8f\\x082\\x00\\x1d\\x00\\x17\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2002-10-26T00:00:00", "modifydate": "2002-11-04T08:32:57", "lines": 29, "newlines": 23, "modlines": 0, "user": "AWCPAW"}, "text": "//AWCPAWFT JOB (AWC),TOSD-MSG,CLASS=M,MSGCLASS=X,\n//          NOTIFY=&SYSUID\n//*\n//* (userid).CBTxxx.FILE600.PDS(FTPDOC)\n//* FTP documentation to workstation (requires FTP server on\n//* workstation)\n//* If you don't have an FTP server, I recommend http://www.warftp.org/\n//* for Windows.\n//*\n//* CUSTOMISATION\n//*   1) Change all AWCPAW to your HLQ\n//*   2) Change bc199340 to DNS name or IP address of your workstation\n//*   3) Customise or remove cd in FTP input\n//*   4) Change lcd target to name of this PDS\n//*\n//*\n//FTP1     EXEC PGM=FTP,DYNAMNBR=500,\n//          PARM='-v -e -i bc199340'\n//SYSPRINT DD  SYSOUT=*\n//OUTPUT   DD  SYSOUT=*\n//NETRC    DD  DISP=SHR,DSN=AWCPAW.NETRC\n//INPUT    DD  *\n sendsite\n bin\n cd /c/temp\n lcd '(userid).CBTxxx.FILE600.PDS'\n put $DOCFTPC FTPCSMF.pdf\n quit\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PACKAGEJ": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01!\\x00H\\x01\\x02(\\x9f\\x01\\x04\\x06/\\tE\\x00^\\x00)\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.33", "flags": 0, "createdate": "2002-10-16T00:00:00", "modifydate": "2004-03-02T09:45:48", "lines": 94, "newlines": 41, "modlines": 0, "user": "AWCPAW"}, "text": "//AWCPAWXM JOB (AWC),TOSD-MSG,CLASS=M,MSGCLASS=X,\n//          NOTIFY=&SYSUID\n//*\n//* (userid).CBTxxx.FILE600.PDS(PACKAGEJ)\n//* PACKAGE DATASETS FOR CBT\n//*\n//*\n//DEL1     EXEC PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n DEL 'AWCPAW.XMITA'\n DEL 'AWCPAW.XMITC'\n DEL 'AWCPAW.XMITO'\n DEL 'AWCPAW.XMITR'\n DEL 'AWCPAW.CBT.FILE600.XMIT'\n SET MAXCC=0\n//*\n//TSO1     EXEC PGM=IKJEFT1B,DYNAMNBR=500,COND=(0,NE)\n//SYSTSPRT DD  SYSOUT=*\n//SYSTSIN  DD  *\n XMIT SAOTEST.AWCPAW DS('AWCPAW.CBT.FILE600.ASM.PDS') +\n  OUTDS('AWCPAW.XMITA')\n XMIT SAOTEST.AWCPAW DS('AWCPAW.CBT.FILE600.C.PDS') +\n  OUTDS('AWCPAW.XMITC')\n XMIT SAOTEST.AWCPAW DS('AWCPAW.CBT.FILE600.OBJ.PDS') +\n  OUTDS('AWCPAW.XMITO')\n XMIT SAOTEST.AWCPAW DS('AWCPAW.CBT.FILE600.REXX.PDS') +\n  OUTDS('AWCPAW.XMITR')\n//*\n//FTP1     EXEC PGM=FTP,DYNAMNBR=500,COND=(0,NE),\n//          PARM='-v -e -i bc331172'\n//SYSPRINT DD  SYSOUT=*\n//OUTPUT   DD  SYSOUT=*\n//NETRC    DD  DISP=SHR,DSN=AWCPAW.NETRC\n//INPUT    DD  *\n sendsite\n bin\n cd /D/Documents and Settings/wellspa/My Documents/mf/cbt/pw\n lcd 'AWCPAW.CBT.FILE600.PDS'\n get FTPCSMF.pdf $DOCFTPC (REPLACE\n cd /c/temp\n put 'AWCPAW.XMITA' XMITPDSA.xmi\n put 'AWCPAW.XMITC' XMITPDSC.xmi\n put 'AWCPAW.XMITO' XMITPDSO.xmi\n put 'AWCPAW.XMITR' XMITPDSR.xmi\n get XMITPDSA.xmi XMITPDSA (REPLACE\n get XMITPDSC.xmi XMITPDSC (REPLACE\n get XMITPDSO.xmi XMITPDSO (REPLACE\n get XMITPDSR.xmi XMITPDSR (REPLACE\n quit\n//*\n//TSO2     EXEC PGM=IKJEFT1B,DYNAMNBR=500,COND=(0,NE)\n//SYSTSPRT DD  SYSOUT=*\n//SYSTSIN  DD  *\n DEL 'AWCPAW.XMITA'\n DEL 'AWCPAW.XMITC'\n DEL 'AWCPAW.XMITO'\n DEL 'AWCPAW.XMITR'\n XMIT SAOTEST.AWCPAW DS('AWCPAW.CBT.FILE600.PDS') +\n  OUTDS('AWCPAW.CBT.FILE600.XMIT')\n//*\n//FTP2     EXEC PGM=FTP,DYNAMNBR=500,COND=(0,NE),\n//          PARM='-v -e -i bc331172'\n//SYSPRINT DD  SYSOUT=*\n//OUTPUT   DD  SYSOUT=*\n//NETRC    DD  DISP=SHR,DSN=AWCPAW.NETRC\n//INPUT    DD  *\n sendsite\n bin\n cd /D/Documents and Settings/wellspa/My Documents/mf/cbt/pw\n put 'AWCPAW.CBT.FILE600.XMIT' FILE600.XMI\n quit\n//*\n//TSO3     EXEC PGM=IKJEFT1B,DYNAMNBR=500,COND=(0,NE)\n//SYSTSPRT DD  SYSOUT=*\n//SYSTSIN  DD  *\n DEL 'AWCPAW.CBT.FILE600.XMIT'\n//*\n//CMPRS    EXEC PGM=IEBCOPY,COND=(0,NE)\n//I1       DD  DISP=SHR,DSN=AWCPAW.CBT.FILE600.PDS\n//I2       DD  DISP=SHR,DSN=AWCPAW.CBT.FILE600.ASM.PDS\n//I3       DD  DISP=SHR,DSN=AWCPAW.CBT.FILE600.C.PDS\n//I4       DD  DISP=SHR,DSN=AWCPAW.CBT.FILE600.OBJ.PDS\n//I5       DD  DISP=SHR,DSN=AWCPAW.CBT.FILE600.REXX.PDS\n//I6       DD  DISP=SHR,DSN=AWCPAW.CBT.FILE600.LOAD\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n COPY I=I1,O=I1,LIST=NO\n COPY I=I2,O=I2,LIST=NO\n COPY I=I3,O=I3,LIST=NO\n COPY I=I4,O=I4,LIST=NO\n COPY I=I5,O=I5,LIST=NO\n COPY I=I6,O=I6,LIST=NO\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RECV": {"ttr": 2305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x18\\x01\\x02(\\x9f\\x01\\x05\\x15\\x7f\\x12E\\x00y\\x002\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "2002-10-16T00:00:00", "modifydate": "2005-06-06T12:45:18", "lines": 121, "newlines": 50, "modlines": 0, "user": "AWCPAW"}, "text": "/*rexx*/\n/**********************************************************************\n*\n* Name: RECV (REXX exec)\n*\n* Abstract:\n*\n*    REXX exec to unload PDS files encompassing FTPC118/119 programs.\n*    Also allocates a load library dataset for link-edits.\n*\n* Invocation:\n*\n*    Execute in TSO as a REXX exec e.g.\n*    EX '(userid).CBTxxx.FILE600.PDS(RECV)'\n*\n* Author: Paul Wells\n*         Saudi Aramco Box 12959\n*         Dhahran\n*         Saudi Arabia\n*\n* Email:  paul.wells@aramco.com\n*\n* History:\n*\n*    PW 06/Jun/2005 - Add REXX library (oops I forgot it!).\n*                   - Generated automatic datestamped dataset\n*                     names if intended dataset names already exist.\n*    PW 30/Mar/2003 - Warn about exisitng libraries before executing\n*                     RECEIVE command.\n*    PW 18/Sep/2002 - Original\n*\n*\n***********************************************************************/\n\n parse source . . s3 . s5 .\n say;say s3\" begins...\";say\n address TSO\n errflag = 0\n pr = prompt(\"ON\")\n ms = msg(\"ON\")\n /* Use TSO prefix first then userid to behave like TSO RECEIVE */\n dsnpre = sysvar(\"SYSPREF\")\n if dsnpre = \"\" then dsnpre = sysvar(\"SYSUID\")\n\n call recds \"CBT.FILE600.ASM.PDS\" \"XMITPDSA\"\n call recds \"CBT.FILE600.C.PDS\" \"XMITPDSC\"\n call recds \"CBT.FILE600.OBJ.PDS\" \"XMITPDSO\"\n call recds \"CBT.FILE600.REXX.PDS\" \"XMITPDSR\"\n\n say\n /* Allocate a load library */\n dsn1 = dsnpre\".CBT.FILE600.LOAD\"\n if sysdsn(\"'\"dsn1\"'\") = \"DATASET NOT FOUND\" then do\n   \"ALLOC DA('\"dsn1\"') NEW CATALOG\",\n    \"SP(30 15) DIR(44) DSORG(PO)\",\n    \"RECFM(U) LRECL(0) BLKSIZE(32760)\"\n   if RC = 0 then do\n     x = prompt(\"OFF\")\n     x = msg(\"OFF\")\n     \"FREE DA('\"dsn1\"')\"\n     say s3\" has allocated load library '\"dsn1\"'\"\n   end\n   else do\n     say s3\" failed to allocate load library '\"dsn1\"' (RC=\"RC\")\"\n     errflag = 1\n   end\n end\n else ,\n  say s3\" detected that load library '\"dsn1\"' already exists\"\n\n say\n if \u00ac(errflag) then do\n   say s3\" completed successfully...\"\n   say;say \"Please refer to member $DOCFTPC (PDF\",\n    \"format) for FTP SMF related material and\"\n   say \"the $INDEX members\",\n    \"of the received PDSes for other material\";say\n end\n else do\n   say s3\" did not complete successfully...\"\n   say;say \"Please check prior error messages and run \"s3\" again.\"\n end\n x = prompt(pr)\n x = msg(ms)\n\nexit 0\n\n\nrecds:\n\n parse arg rdss rdmem\n\n \"newstack\"\n\n rds = dsnpre\".\"rdss\n if sysdsn(\"'\"rds\"'\") = \"OK\" then do\n   rdstim = time()\n   rdsstr = \"D\"substr(date(\"S\"),3)\".T\"substr(rdstim,1,2)||,\n    substr(rdstim,4,2)||substr(rdstim,7,2)\n   rdsdso = dsnpre\".\"rdss\".\"rdsstr\n   say;say \"*Warning* \"rds\" already exists so\",\n    rdsdso\" will be used for the output dataset.\"\n   xmitstr = \"ds('\"rdsdso\"')\"\n   rdsnotfy = \" to '\"rdsdso\"'\"\n end\n else do\n   xmitstr = \" \"\n   rdsnotfy = \"\"\n end\n\n say;say \"Receiving '\"rds\"'\"rdsnotfy;say\n queue xmitstr\n \"receive inda('\"s5\"(\"rdmem\")')\"\n if RC \u00ac= 0 then do\n   say \"Receive '\"rds\"' was not successful\";say\n   errflag = 1\n end\n\n \"delstack\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XMITPDSA": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01'\\x00\\x00\\x01\\x06\\x05/\\x01\\x06\\x05/\\tR\\x0cO\\x0cO\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.39", "flags": 0, "createdate": "2006-02-21T00:00:00", "modifydate": "2006-02-21T09:52:00", "lines": 3151, "newlines": 3151, "modlines": 0, "user": "SBGOLOB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "XMITPDSC": {"ttr": 3589, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&\\x00\\x00\\x01\\x020\\x0f\\x01\\x05\\x15\\x7f\\x13\\x03\\t\\xee\\x08\\x1e\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.38", "flags": 0, "createdate": "2002-10-27T00:00:00", "modifydate": "2005-06-06T13:03:00", "lines": 2542, "newlines": 2078, "modlines": 0, "user": "AWCPAW"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "XMITPDSO": {"ttr": 4614, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&\\x00\\x00\\x01\\x020\\x0f\\x01\\x05\\x15\\x7f\\x13\\x03\\x06\\xdf\\x08\\x98\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.38", "flags": 0, "createdate": "2002-10-27T00:00:00", "modifydate": "2005-06-06T13:03:00", "lines": 1759, "newlines": 2200, "modlines": 0, "user": "AWCPAW"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "XMITPDSR": {"ttr": 5381, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00@\\x01\\x04\\x04/\\x01\\x05\\x15\\x7f\\x13\\x03\\x08\\xda\\x08\\xd5\\x00\\x00\\xc1\\xe6\\xc3\\xd7\\xc1\\xe6@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2004-02-11T00:00:00", "modifydate": "2005-06-06T13:03:40", "lines": 2266, "newlines": 2261, "modlines": 0, "user": "AWCPAW"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT600/FILE600.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT600", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}