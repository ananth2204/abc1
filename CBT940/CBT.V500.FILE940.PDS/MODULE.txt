         MACRO
         MODULE &CNAME,&AMODE=31,&RMODE=ANY,&LOC=,&BASE0=11,&BASE1=,   X
               &BASE2=,&PARM=,&TEXT=' '
.**********************************************************************
.*       BEGIN MODULE WITH THIS MACRO
.*       &CNAME    - NAME OF MODULE (8 CHARACTERS OR LESS)
.*       &AMODE    - "24" OR "31"
.*       &RMODE    - "24" OR "ANY"
.*       &LOC      - "BELOW" IF STORAGE TO BE GETMAINED BELOW 16M
.*       &BASE0    - 1ST BASE REGISTER (NOT R1,R2 OR R13)
.*       &BASE1    - 2ND BASE REGISTER (NOT R1,R2 OR R13)
.*       &BASE2    - 3RD BASE REGISTER (NOT R1,R2 OR R13)
.*       &PARM     - REGISTER TO SAVE PARM REG (R1)
.*       &TEXT     - COMMENT THAT IS ASSEMBLED INTO OBJECT CODE
.**********************************************************************
.*
         LCLB  &E1
         LCLC  &BEGIN,&TXT
.**************************************
.*       CHECK ERROR CONDITIONS       *
.**************************************
.*
&E1      SETB  0
         AIF   (T'&CNAME NE '0').OK1
         MNOTE 8,'MODULE NAME IS REQUIRED'
&E1      SETB  1
.OK1     ANOP
         AIF   (K'&CNAME LE 8).OK2
         MNOTE 8,'MODULE NAME MUST BE FROM 1-8 CHARACTERS'
&E1      SETB  1
.OK2     ANOP
         AIF   (&BASE0 GT 2 AND &BASE0 LT 13).OK3
         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERED'
&E1      SETB  1



.OK3     ANOP
         AIF   (&BASE1 EQ 0).OK4
         AIF   (&BASE1 GT 2 AND &BASE1 LT 13).OK4
         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERED'
&E1      SETB  1
.OK4     ANOP
         AIF   (&BASE2 EQ 0).OK5
         AIF   (&BASE2 GT 2 AND &BASE2 LT 13).OK5
         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERED'
&E1      SETB  1
.OK5     ANOP
         AIF   (&PARM EQ 0).OK6
         AIF   (&PARM GT 5 AND &PARM LT 11).OK6
         MNOTE 8,'ONLY REGISTERS 6 THROUGH 10 CAN BE USED FOR PARM'
&E1      SETB  1
.OK6     ANOP
         AIF   (&E1).MEND
.*
.**************************************
.*       SET GLOBAL SYMBOLS           *
.**************************************
&BEGIN   SETC  'BEG'.'&SYSNDX'
&TXT     SETC  '&TEXT'
         AIF   ('&TXT'(1,1) EQ '''').STRIP
         AIF   ('&TXT'(1,1) EQ '(').STRIP
         AGO   .NOSTRIP
.STRIP   ANOP
&TXT     SETC  '&TXT'(2,K'&TXT-2)
.NOSTRIP ANOP
.**************************************
.*       BEGIN OF CODE                *
.**************************************
&CNAME   CSECT
&CNAME   AMODE &AMODE
&CNAME   RMODE &RMODE
         USING &CNAME,15             SET ADDRESSING ON ENTRY POINT
         B     &BEGIN                BRANCH AROUND EYECATCHER
         DC    C' &CNAME '           NAME OF CSECT
         DC    C' &SYSDATE '         DATE OF ASSEMBLY
         DC    C' &SYSTIME '         TIME OF ASSEMBLY
         DC    C' &TXT  '            OPTIONAL TEXT
&BEGIN   BAKR  14,0
         LR    &BASE0,15             LOAD BASE REG WITH ENTRY POINT
         AIF   (&PARM EQ 0).DROP15
         LR    &PARM,1               SAVE PARM REGISTER
.DROP15  ANOP
         DROP  15                    DROP ADDRESSING ON ENTRY POINT
         AIF   (&BASE1 EQ 0).NO2ND
         LA    &BASE1,2048(,&BASE0)
         LA    &BASE1,2048(,&BASE1)  SECOND BASE REGISTER
         AIF   (&BASE2 EQ 0).NO3RD
         LA    &BASE2,2048(,&BASE1)
         LA    &BASE2,2048(,&BASE2)  THIRD  BASE REGISTER
         USING &CNAME,&BASE0,&BASE1,&BASE2



         AGO   .STOROBT
.NO2ND   ANOP
         USING &CNAME,&BASE0
         AGO   .STOROBT
.NO3RD   ANOP
         USING &CNAME,&BASE0,&BASE1
.STOROBT ANOP
         AIF   (T'&LOC EQ '0').NOLOC
         STORAGE OBTAIN,LENGTH=L@LOCALN,LOC=&LOC,COND=YES
         AGO   .INITLDA
.NOLOC   ANOP
         STORAGE OBTAIN,LENGTH=L@LOCALN,COND=YES
.INITLDA ANOP
.**************************************
.*       INITIALIZE LOCAL DATA AREA   *
.**************************************
         LR    R2,R1                          STORAGE ADDRESS IN R2
         L     R3,=A(L@LOCALN)                LOAD STORAGE LENGTH
         XR    R4,R4                          NO SOURCE AREA
         XR    R5,R5                          SET PAD BYTE
         ICM   R5,B'1000',=X'40'              SET PAD BYTE (BLANK)
         MVCL  R2,R4                          INIT THE LDA
*
         LR    R13,R1                         USE R13 FOR LDA
         USING L#LOCAL,R13                    ESTABLISH ADDRESSABILITY
         MVC   L#SAVHSA,=C'F1SA'              LINKAGE STACK USED
L#LOCAL  DSECT
L#SAVPLI DS    F                              USED BY PL/I ONLY
L#SAVHSA DS    F                              ADDR. OF PREV SAVE AREA
L#SAVLSA DS    F                              ADDR. OF NEXT SAVE AREA
L#SAVR14 DS    F                              R14 - RETURN ADDRESS
L#SAVR15 DS    F                              R15 - ENTRY POINT ADDRESS
L#SAVR0  DS    F                              R0
L#SAVR1  DS    F                              R1
L#SAVR2C DS    11F                            R2 - 12
&CNAME   CSECT
.MEND    MEND
