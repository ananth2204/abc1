         TITLE 'PRINT NAMES OF ALL LLA MANAGED LIBRARIES'
*---------------------------------------------------------------------*
*                                                                     *
* Title:      LLAPRINT                                                *
*                                                                     *
* Function:   PRINTS DATASET NAME, VOLSER, DDNAME AND SOME OTHER      *
*             INFORMATION OF ALL LLA MANAGED LIBRARIES                *
*                                                                     *
* Originator: M. Schmidt, "Winterthur" Insurance Switzerland          *
*             Paulstrasse 12, CH-8401 Winterthur                      *
*             Phone: (0041) 52 261 39 88   Fax: (0041) 52 261 66 15   *
*             IBMMAIL : CHWINMSC AT IBMMAIL                           *
*             Internet: chwinmsc@ibmmail.com                          *
*                                                                     *
* Date:       January 1996                                            *
*                                                                     *
* Updated:    March 2016      Sam Golob   sbgolob@cbttape.org         *
*                                                                     *
* Reference : OW06194                                                 *
* Material                                                            *
*                                                                     *
* SCP-Level : MVS/ESA SP 4.3.0 (HBB4430)                              *
*             MVS/ESA SP 5.2.2 (JBB5522) - no modifications necessary *
*             z/OS 2.2 (HBB77A0)                                      *
*                                                                     *
* Dependenc.: none                                                    *
*                                                                     *
* Parameters: none                                                    *
*                                                                     *
* Special:    LLAPRINT and LLASAC must                                *
*             both be authorised by an entry in IKJTSOxx parmlib      *
*             member (AUTHCMD) when called in TSO                     *
*                                                                     *
* Attributes: AMODE=31, RMODE=ANY, RENT,   REUS, AC(1).               *
*                                                                     *
* Mapping macros:  CVT, IHALLCB, IHAASCB                              *
*                                                                     *
* Inputs:          NONE                                               *
*                                                                     *
* Outputs:         LIST OF LLA MANAGED LIBRARIES TO SYSPRINT          *
*                  R15- RETURN CODE                                   *
*                   0 - LLA managed libraries information written.    *
*                   4 - LLA services not available                    *
*                   8 - LLDR address zero                             *
*                  12 - Error in load of secondary space routine.     *
*                  16 - Error in secondary space routine.             *
*                  20 - Program is running unauthorized               *
*                  24 - OPEN for SYSPRINT failed                      *
*                                                                     *
* Program logic:                                                      *
*      1) CHECK FOR ACTIVE LLA                                        *
*      2) Get LLDR control block address                              *
*      3) Load secondary space module into pageable CSA.              *
*      2) USING ASID FROM TARGET ASCB, SET TARGET AS SECONDARY SPACE. *
*      3) BRANCH INTO MODULE LOADED INTO CSA.                         *
*         THIS CODE MOVES THE NAMES OF LLA MANAGED LIBRARIES INTO     *
*         A TABLE IN THIS ADDRESS SPACE                               *
*      6) RESTORE ORIGINAL SASN AND AX.                               *
*      7) PRINT LLA MANAGED LIBARIES INFORMATION                      *
*                                                                     *
* Control blocks:                                                     *
*                                                                     *
* !---------!   !---------!     !---------!                           *
* !   CVT   !   !  LLCB   !     !  ASCB   !                           *
* ! +X'24'  !   ! +X'C'   !---->!  (LLA)  !                           *
* ! CVTLLCB !-->! +X'60'  !---- ! +X'24'  !                           *
* !         !   ! +X'88'  !-! ! ! ASCBASID!                           *
* !         !   !         ! ! ! !         !                           *
* !---------!   !---------! ! ! !---------!                           *
*                           ! !                                       *
*                           ! !>!------------------------!            *
*                           !   !   LLT (Linklist Table) !            *
*                           !   !------------------------!            *
*                           !                                         *
*                           !                                         *
* !---------------- LLA's private -----------------------------------!*
* !                           !---------------------!                !*
* !                           !                     v                !*
* ! !---------!   !---------!-- !---------!   !---------!            !*
* ! !  LLDR   !   !  LLDS   !   !  LLLS   !   !  LLDB   !    MEMBER1 !*
* ! ! +X'C'   !-->! +X'1C'  !-->!         !   !         !--> MEMBER2 !*
* ! !         !   !  .....  !-! !         !   !         !    MEMBER3 !*
* ! !---------!   !---------! ! !---------!   !---------!    ....... !*
* !                           !> .........    ..........             !*
* !-------------------------------------------------------------------*
*                                                                     *
* Register usage:  R0 - REASON CODES                                  *
*                  R1 - * WORK *                                      *
*                  R2 - * WORK *                                      *
*                  R3 - * WORK *                                      *
*                  R4 - * WORK *                                      *
*                  R5 - * WORK *                                      *
*                  R6 - * UNUSED *                                    *
*                  R7 - * UNUSED *                                    *
*                  R8 - * UNUSED *                                    *
*                  R9 - * UNUSED *                                    *
*                  R10- * UNUSED *                                    *
*                  R11- BASE register                                 *
*                  R12- Return code                                   *
*                  R13- Local data area                               *
*                  R14- RETURN ADDRESS                                *
*                  R15- RETURN CODES                                  *
*                                                                     *
* Change activity: 01/23/96 - 1st version                             *
*---------------------------------------------------------------------*
         MODULE LLAPRINT,AMODE=31,RMODE=ANY,BASE0=11,LOC=BELOW
*
         MVC   YPRINT,SYSPRINT                Move static to dyn. DCB
         MVC   DCBEDYN(DCBEMINL),PRDCB31      Move static to dyn. DCBE
         MVC   YOPOUT,OPOUPARM                Move OPEN  parameter list
         MVC   YCLOS,CLOSPARM                 Move CLOSE parameter list
         OPEN  (YPRINT,(OUTPUT)),MF=(E,YOPOUT)  OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+YPRINT,DCBOFOPN  OPEN successful ?
         BO    OUTOPEN
         WTO   'DDNAME SYSPRINT COULD NOT BE OPENED.',ROUTCDE=(11)
         B     EXIT18
OUTOPEN  DS    0H
*---------------------------------------------------------------------*
* CHECK AUTHORITY (PROGRAM MUST BE LINK EDITED WITH AC=1              *
*---------------------------------------------------------------------*
         TESTAUTH FCTN=1                      Check authority
         LTR   R15,R15                        Authority OK ?
         BNZ   EXIT14                         No; terminate with RC=20
*---------------------------------------------------------------------*
* CHECK FOR ACTIVE LLA                                                *
*---------------------------------------------------------------------*
         L     R4,CVTPTR                      -> CVT
         L     R4,CVTLLCB-CVT(,R4)            -> LLCB
         USING LLCB,R4
         TM    LLCBFLGS,LLCBAVAL              LLA services available ?
         BNO   EXIT04                         No-issue message (RC=4)
*---------------------------------------------------------------------*
* Get LLDR address                                                    *
*---------------------------------------------------------------------*
         ICM   R1,B'1111',LLCBLLDR            -> LLDR
         BZ    EXIT08                         Zero ? Exit with RC=8
         ST    R1,LLDRADDR                    store LLDR addr. to parm.
*---------------------------------------------------------------------*
* LOAD MODULE THAT WILL RUN IN SECONDARY SPACE MODE INTO CSA          *
*---------------------------------------------------------------------*
         MODESET MODE=SUP,KEY=ZERO            go into supervisor mode
         LOAD  EP=LLASAC,GLOBAL=(YES,P),      load into pageable CSA   +
               ERRET=EXIT0C,                  error routine            +
               EOM=NO                         delete module at end of
*                                             task
         ST    R0,CSAADDR                     store modules EP
*---------------------------------------------------------------------*
* SET SECONDARY ASN TO TARGET ADDRESS SPACE                           *
*---------------------------------------------------------------------*
         LA    R0,1                           AX=1
         AXSET AX=(R0)                        Get AX
         ST    R0,OLDAX                       Save old AX
         ESAR  R2                             extract SASN
         ST    R2,OLDSASN                     save old SASN
         L     R2,LLCBASCB                    Load addr. off LLA's ASCB
         LH    R2,ASCBASID-ASCB(,R2)          get LLA's ASID
         SSAR  R2                             set AS secondary address
*                                             space
*---------------------------------------------------------------------*
* Invoke LLA information gatherer routine that runs in secondary      *
* space mode                                                          *
*---------------------------------------------------------------------*
         L     R15,CSAADDR                    load modules EP
         LA    R1,PARMLIST                    address of parmlist to R1
         BASSM R14,R15                        invoke the routine
         LTR   R15,R15                        RC = 0 ?
         BNZ   EXIT10                         No; exit with error
*---------------------------------------------------------------------*
* RESTORE ORIGINAL SASN AND AX                                        *
*---------------------------------------------------------------------*
         L     R2,OLDSASN                     Restore..
         SSAR  R2                             original SASN
         L     R0,OLDAX                       Restore..
         AXSET AX=(R0)                        old AX
         MODESET MODE=PROB,KEY=NZERO          go back to problem state
         DELETE EP=LLASAC                     delete routine from CSA
*---------------------------------------------------------------------*
* Output information                                                  *
*---------------------------------------------------------------------*
         MVC   LINE,LLAJOBN
         MVC   LINE+42(L'LLCBNAME),LLCBNAME   LLA jobname
         PUT   YPRINT,LINE
         MVC   LINE,PARMLIB
         MVC   LINE+42(L'LLCBPARM),LLCBPARM   CSVLLAxx parm. mem. suff.
         PUT   YPRINT,LINE
         MVC   LINE,EXIT1
         TM    LLCBFLGS,LLCBX1OK              Exit 1 called ?
         BO    EXITOK
         MVC   LINE+42(3),=C'NO '
EXITOK   DS    0H
         PUT   YPRINT,LINE
         MVC   LINE,SINGENT
         CLI   PARMFLGS+1,X'80'               LNKLST a single entitiy ?
         BNE   NOTSINGL
         MVC   LINE+42(3),=C'YES'
NOTSINGL DS    0H
         PUT   YPRINT,LINE
         DROP  R4                             DROP LLCB addressability
         MVC   LINE,BLANKS
         PUT   YPRINT,LINE
         MVC   LINE,HEADER
         PUT   YPRINT,LINE
         MVC   LINE,HEADER2
         PUT   YPRINT,LINE
         MVC   LINE,BLANKS
         L     R2,DSNENUM                     Number of LLA man. libs
         LA    R3,DSNLIST                     -> return area
         USING DSNLIST,R3                     address return area
OUTPLOOP DS    0H          <----------------!
         MVC   LINE(L'DDN),DDN              ! DDNAME
         MVC   LINE+9(L'VOLSER),VOLSER      ! Volume serial
         MVC   LINE+16(L'DSN),DSN           ! Dataset name
* Check LLDS flag bytes                     !
         MVC   LINE+62(6),=C'LNKLST'        ! Indicate DSN in LNKLST
         TM    LLDSBITS,X'80'               ! Linklist dataset ?
         BO    *+10                         ! Yes
         MVC   LINE+62(7),=C'Private'       !
         MVC   LINE+71(6),=C'Freeze'        ! Indicate FREEZE mode
         TM    LLDSBITS+1,X'40'             ! Is it FREEZE mode ?
         BO    *+10                         ! Yes
         MVC   LINE+71(8),=C'NoFreeze'      ! Indicate NOFREEZE mode
         PUT   YPRINT,LINE                  !
         MVC   LINE,BLANKS                  !
* Convert TOD value to Date / Time the library was added/updated
         STCKCONV STCKVAL=ADDTOD,CONVVAL=TODCONV,DATETYPE=YYYYMMDD,    +
               MF=(E,STCKCONV)              !
         MVC   OUT-1(L'TIMEMSK1),TIMEMSK1   ! move mask
         ED    OUT(16),TODCONV              !
         CLI   OUT,X'20'                    !
         BNE   *+8                          !
         MVI   OUT,X'F0'                    !
         MVC   LINE+20(11),OUT              !
         MVC   OUT-1(L'DATEMSK1),DATEMSK1   ! move mask
         ED    OUT(13),TODCONV+8            !
         MVC   LINE(10),OUT                 !
         PUT   YPRINT,LINE                  !
*                                           !
         MVC   LINE,BLANKS                  !
         LA    R3,DSNENTL(,R3)              ! Skip 1 table entry
         BCT   R2,OUTPLOOP ------------------
         DROP  R3                             DROP DSNLIST address.
*---------------------------------------------------------------------*
* EXIT ROUTINES                                                       *
*---------------------------------------------------------------------*
EXIT00   DS    0H
         MVC   LINE,BLANKS
         LA    R12,X'00'
         B     EXIT
EXIT04   DS    0H
         MVC   LINE,ERROR04
         LA    R12,X'04'
         B     EXIT
EXIT08   DS    0H
         MVC   LINE,ERROR08
         LA    R12,X'08'
         B     EXIT
EXIT0C   DS    0H
         MVC   LINE,ERROR0C
         LA    R12,X'0C'
         B     EXIT
EXIT10   DS    0H
         MVC   LINE,ERROR10
         LA    R12,X'10'
         B     EXIT
EXIT14   DS    0H
         MVC   LINE,ERROR14
         LA    R12,X'14'
         B     EXITCLOS
EXIT18   DS    0H
         LA    R12,X'18'
         B     EXITREL
*---------------------------------------------------------------------*
* COMMON EXIT                                                         *
*---------------------------------------------------------------------*
EXIT     DS    0H
         MODESET MODE=PROB
EXITCLOS DS    0H
         PUT   YPRINT,LINE
         CLOSE YPRINT,MF=(E,YCLOS),MODE=31
EXITREL  DS    0H
         STORAGE RELEASE,LENGTH=L@LOCALN,ADDR=(R13),COND=YES
         LR    R15,R12                        Set RC
         PR                                   RETURN TO CALLER
***********************************************************************
* STATIC WORK AREA (Literal pool)                                     *
***********************************************************************
DATEMSK1 DC    X'4020202020612020612020'
TIMEMSK1 DC    X'4020204B20204B20204B2020' TIME-PATTERN
LLAJOBN  DC    CL80'LLA jobname                             : ........'
PARMLIB  DC    CL80'CSVLLAxx parmlib member used            : ..'
EXIT1    DC    CL80'CSVLLIX1 called                         : YES'
SINGENT  DC    CL80'LNKLST treated as a single entity by LLA: NO '
BLANKS   DC    CL80' '
HEADER   DC    CL80'DDNAME   Volser Library name                       +
                          Type     Mode'
HEADER2  DC    CL80'---------------------------------------------------+
               ----------------------------'
ERROR04  DC    CL80'LLA is currently not active.'
ERROR08  DC    CL80'LLDR pointer is zero.'
ERROR0C  DC    CL80'Error in load of secondary space routine.'
ERROR10  DC    CL80'Error in secondary space routine.'
ERROR14  DC    CL80'LLAPRINT is running unauthorized.'
* DCB / OPEN,CLOSE parameter list
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,             +
               LRECL=80,BLKSIZE=8000,DCBE=PRDCB31
XPRINT   EQU   *,*-SYSPRINT
PRDCB31  DCBE  RMODE31=BUFF
*
OPOUPARM OPEN  (,(OUTPUT)),MODE=31,MF=L
XOPOUT   EQU   *,*-OPOUPARM
CLOSPARM CLOSE (,),MODE=31,MF=L
XCLOS    EQU   *,*-CLOSPARM
***********************************************************************
*        LOCAL DATA AREA                                              *
***********************************************************************
L#LOCAL  DSECT
         DS    0D
YPRINT   DS    CL(L'XPRINT)
         DS    0D
YOPOUT   DS    CL(L'XOPOUT)
         DS    0D
YCLOS    DS    CL(L'XCLOS)
DCBEDYN  DCBE  RMODE31=BUFF                   BUFFERS ABOVE THE LINE
         DS    CL2
OUT      DS    CL16                           Date/Time conversion area
TODCONV  DS    4F                             STCKCONV work area
STCKCONV STCKCONV MF=L                        STCKCONV MACRO EXPANSION
CSAADDR  DS    F
LINE     DS    CL80
*---------------------------------------------------------------------*
* PARMLIST WE PASS TO ROUTINE RUNNING IN SECONDARY SPACE MODE         *
*---------------------------------------------------------------------*
PARMLIST DS    0F
OLDAX    DS    F
OLDSASN  DS    F
LLDRADDR DS    A                              LLDR address
PARMFLGS DS    BL4                            Flags
DSNENUM  DS    F                              Number of LLA man. ds
DSNLIST  DS    200CL(DSNENTL)                 List of managed libraries
         ORG   DSNLIST                        Describe 1 entry ...
VOLSER   DS    CL6                            ..consisting of VOLSER
DSN      DS    CL44                           ..Dataset name
DDN      DS    CL8                            ..and LLA's DDNAME for it
LLDSBITS DS    BL2                            ..and flag bits from LLDS
ADDTOD   DS    XL4                            ..and TOD lib added-LLLS
DSNENTL  EQU   *-VOLSER                       Length of 1 entry
         ORG   ,
*---------------------------------------------------------------------*
L@LOCALN EQU   *-L#LOCAL                      LENGTH OF LOCAL AREA
         YREGS
*----------------------------------------------------------------------
*        CVT   - COMMUNICATION VECTOR TABLE                           -
*----------------------------------------------------------------------
         CVT     LIST=NO,DSECT=YES
*----------------------------------------------------------------------
*        LLCB  - LINKLIST LOOKASIDE CONTROL BLOCK                     -
*----------------------------------------------------------------------
         IHALLCB
*----------------------------------------------------------------------
*        ASCB  - ADDRESS SPACE CONTROL BLOCK                          -
*----------------------------------------------------------------------
         IHAASCB LIST=NO
*----------------------------------------------------------------------
*        DCB   -                                                      -
*----------------------------------------------------------------------
         DCBD  DSORG=PS,DEVD=DA
*----------------------------------------------------------------------
*        DCBE                                                         -
*----------------------------------------------------------------------
         IHADCBE
         END   LLAPRINT
