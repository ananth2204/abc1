*---------------------------------------------------------------------*
*                                                                     *
* Title:      LLASAC                                                  *
*                                                                     *
* Function:   CHAINS THROUGH LLA'S CONTROL BLOCKS RESIDING IN ITS     *
*             PRIVATE TO OBTAIN LLA MANAGED LIBRARY NAMES             *
*                                                                     *
* Originator: M. Schmidt, "Winterthur" Insurance Switzerland          *
*             Paulstrasse 12, CH-8401 Winterthur                      *
*             Phone: (0041) 52 261 39 88   Fax: (0041) 52 261 66 15   *
*             IBMMAIL : CHWINMSC AT IBMMAIL                           *
*             Internet: chwinmsc@ibmmail.com                          *
*                                                                     *
* Date:       January 1996                                            *
*                                                                     *
* Updated:    March 2016      Sam Golob   sbgolob@cbttape.org         *
*                                                                     *
* Ref. books: MVS/ESA data areas volumes 1-4                          *
*                                                                     *
* SCP-Level : MVS/ESA SP 4.3.0 (HBB4430)                              *
*             MVS/ESA SP 5.2.2 (JBB5522) - no modifications necessary *
*             z/OS 2.2 (HBB77A0) - add 7 fullwords before LLDSENT     *
*                                                                     *
* Dependenc.: NONE                                                    *
*                                                                     *
* Parameters: Parameter list passed in Register 1                     *
*                                                                     *
* Attributes: AMODE=31, RMODE=ANY, RENT,   REUS                       *
*                                                                     *
* Mapping macros:                                                     *
*                                                                     *
* Inputs:                                                             *
*                  R1 - PARMLIST                                      *
*                  CALLER HAS SET SECONDARY ADDRESS SPACE             *
*                                                                     *
* Outputs:         LLA MANAGED LIBRARY  DATASET NAMES,VOLSER,DDNAME   *
*                  R15- RETURN CODE                                   *
*                   0 - SUCCESSFUL COMPLETION                         *
*                   8 - LLDR acronym not found                        *
*                  12 - LLDS pointer zero                             *
*                  16 - LLDS acronym not found                        *
*                  20 - LLLS acronym not found                        *
*                                                                     *
* Program logic:                                                      *
*      1) GO INTO SECONDARY SPACE MODE.                               *
*      2) CHAIN THROUGH LLAS MEMORY                                   *
*      3) GO BACK TO PRIMARY SPACE MODE.                              *
*                                                                     *
* Register usage:  R0 - REASON CODES                                  *
*                  R1 - * WORK *                                      *
*                  R2 - LLDS flag bytes                               *
*                  R3 - LLDR addressability                           *
*                  R4 - LLDS addressability                           *
*                  R5 - LLDS entry count                              *
*                  R6 - LLLS addressability                           *
*                  R7 - Return area addressability                    *
*                  R8 - LLDS entry addressability                     *
*                  R9 - Copy length for MVCP                          *
*                  R10- Parameter list                                *
*                  R11- Base register                                 *
*                  R12- LLLS entry counter                            *
*                  R13- Local data area                               *
*                  R14- return address                                *
*                  R15- return codes                                  *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*---------------------------------------------------------------------*
         MODULE LLASAC,AMODE=31,RMODE=ANY,BASE0=11,PARM=10
         USING PARMLIST,R10
         LA    R7,DSNLIST                -> LLAPRINT return area
         L     R3,LLDRADDR               -> LLDR
         USING LLDR,R3
         SAC   256
*---------------------------------------------------------------------*
* !!!!!!!!! THE FOLLOWING CODE RUNS IN SECONDARY SPACE MODE !!!!!!!!! *
*---------------------------------------------------------------------*
         CLC   LLDRNAME,=C'LLDR'         really the LLDR ?
         BNE   EXIT08                    No; exit immediately
         ICM   R4,B'1111',LLDRLLDS       -> LLDS
         BZ    EXIT0C                    Zero ? Exit with RC=12
         USING LLDS,R4
         CLC   LLDSNAME,=C'LLDS'         really the LLDS ?
         BNE   EXIT10                    No; exit immediately
         LH    R2,LLDSFLG1               Get Flag bytes
         ICM   R5,B'1111',LLDSNUM        Number of LLDS entries
         BZ    LLDSFINI
         ICM   R1,B'0001',=X'00'         PSW key mask for MVCP
         XR    R12,R12                   Zero the entry counter
         LA    R8,LLDSENT                -> 1ST LLDS entry
         DROP  R4
         USING LLDSENT,R8                LLDS entry addressability
LLDSLOOP DS    0H          <------------
         ICM   R6,B'1111',LLDSLLLS     ! -> LLLS
         BZ    LLDSZERO                ! Zero; bypass entry
         USING LLLS,R6                 !
         CLC   LLLSNAME,=C'LLLS'       ! really an LLLS ?
         BNE   EXIT14                  ! NO; exit with RC=20
         LA    R9,DSNENTL-L'LLDSBITS-L'ADDTOD
         MVCP  0(R9,R7),LLLSVOL,R1     ! Move VOLSER,DSN,DDN
         LA    R9,L'LLDSBITS           ! Length to copy
         MVCP  58(R9,R7),LLDSFLG3,R1   ! Move 2 Flag bytes
         LA    R9,L'ADDTOD             ! Length to copy
         MVCP  60(R9,R7),LLLSTOD,R1    ! Move TOD library added to LLA
         LA    R12,1(,R12)             ! Increment counter
         LA    R7,DSNENTL(,R7)         ! -> next return area entry
LLDSZERO DS    0H                      !
         LA    R8,LLDSELEN(,R8)        ! Skip 1 LLDS entry
         BCT   R5,LLDSLOOP -------------
LLDSFINI DS    0H
*---------------------------------------------------------------------*
* !!!!!!!!! END OF SECONDARY SPACE MODE CODE !!!!!!!!!!!!!!!!!!!!!!!! *
*---------------------------------------------------------------------*
         SAC   0
         ST    R12,DSNENUM               Store number of entries copied
         STH   R2,PARMFLGS               Store LLDS flags into parmlist
         B     EXIT00
         DROP  R10                       DROP parmlist addressability
         DROP  R3                        DROP LLDR addressability
         DROP  R8                        DROP LLDS addressability
         DROP  R6                        DROP LLLS addressability
*---------------------------------------------------------------------*
* EXIT ROUTINES                                                       *
*---------------------------------------------------------------------*
EXIT00   DS    0H
         LA    R15,X'00'                 Set RC=0
         B     EXIT
EXIT08   DS    0H                        LLDR acronym not found
         LA    R15,X'08'                 Set RC=8
         B     EXIT
EXIT0C   DS    0H                        LLDS pointer zero
         LA    R15,X'0C'                 Set RC=12
         B     EXIT
EXIT10   DS    0H                        LLDS acronym not found
         LA    R15,X'10'                 Set RC=16
         B     EXIT
EXIT14   DS    0H                        LLLS acronym not found
         LA    R15,X'14'                 Set RC=20
         B     EXIT
*---------------------------------------------------------------------*
* COMMON EXIT                                                         *
*---------------------------------------------------------------------*
EXIT     DS    0H
         STORAGE RELEASE,LENGTH=L@LOCALN,ADDR=(R13)
         PR                                   RETURN TO CALLER
**********************************************************************
* STATIC WORK AREA                                                   *
**********************************************************************
         LTORG
         YREGS                                Register equates
***********************************************************************
*        L#LOCAL LOCAL DATA AREA                                      *
***********************************************************************
L#LOCAL  DSECT
*---------------------------------------------------------------------*
* PARMLIST WE PASS TO ROUTINE RUNNING IN SECONDARY SPACE MODE         *
*---------------------------------------------------------------------*
PARMLIST DS    0F
OLDAX    DS    F
OLDSASN  DS    F
LLDRADDR DS    A                              LLDR address
PARMFLGS DS    BL4                            Flags
DSNENUM  DS    F                              Number of LLA man. ds
DSNLIST  DS    200CL(DSNENTL)                 List of managed libraries
         ORG   DSNLIST                        Describe 1 entry ...
VOLSER   DS    CL6                            ..consisting of VOLSER
DSN      DS    CL44                           ..Dataset name
DDN      DS    CL8                            ..and LLA's DDNAME for it
LLDSBITS DS    BL2                            ..and flag bits from LLDS
ADDTOD   DS    XL4                            ..and TOD lib added-LLLS
DSNENTL  EQU   *-VOLSER                       Length of 1 entry
         ORG   ,
L@LOCALN EQU   *-L#LOCAL                      LENGTH OF LOCAL AREA
*
LLDR     DSECT
LLDRNAME DS    CL4'LLDR'                      LLDR acronym
         DS    XL2                            Flags ?
LLDRLEN  DS    H                              control block len (X'18')
         DS    F                              Reserved (x'00') ?
LLDRLLDS DS    A                              LLDS pointer
         DS    F                              Reserved (x'00') ?
LLDRTOD  DS    A                              TOD LLA start ?
*
LLDS     DSECT
LLDSNAME DS    CL4'LLDS'       X'00'          LLDS acronym
LLDSFLG1 DS    B               X'04'          Version level, X'02'?
LLDSFLG2 DS    B               X'05'          Flag byte
LLDSLTSE EQU   X'80'                          1=LNKLST treated as a
*                                             single entity by LLA
*                                             (see APAR OW06194)
LLDSLEN  DS    H               X'06'          LLDS control block length
LLDSTOD  DS    XL4             X'08'          LLA start time ?
         DS    F               X'0C'
         DS    A               X'10'          ?
         DS    A               X'14'          Pointer to First LLDSENT
LLDSNUM  DS    F               X'18'          Number of LLDS entries
         DS    F               X'1C'
         DS    F               X'20'
         DS    F               X'24'
         DS    F               X'28'
         DS    F               X'2C'
         DS    F               X'30'
         DS    F               X'34'          End of LLDS header
LLDSENT  DS    0C        32-bytes in length
LLDSUCB  DS    A                              UCB Pointer
         DS    BL4                            Flag bytes ???
         DS    A                              Pointer to other entries?
LLDSLLDB DS    A                              LLDB Pointer
LLDSLLLS DS    A                              LLLS Pointer
LLDSFLG3 DS    B                              Flag byte
LLDSLNK  EQU   X'80'                          On=LNKLST, Off=PRIVATE
LLDSFLG4 DS    B                              Flag byte
LLDSNOFR EQU   X'80'                          On=NOFREEZE
LLDSFREZ EQU   X'40'                          On=FREEZE
         DS    XL10                           Reserved ??? (X'00')
LLDSELEN EQU   *-LLDSENT                      LLDS entry length (32)
*
LLLS     DSECT
LLLSNAME DS    CL4'LLLS'                      LLLS acronym
         DS    BL4                            Flags ???
LLLSTOD  DS    XL4                            TOD library added
         DS    A
         DS    15F                            Reserved ???
         DS    XL2
LLLSVOL  DS    CL6                            Volume serial
LLLSDSN  DS    CL44                           Dataset name
LLLSDDN  DS    CL8                            LLA's DDNAME
         DS    A                              Pointer (LLLS+X'A0')
         DS    A                              Pointer (LLLS+X'F8')
         DS    6F                             Reserved ???
         DS    BL4                            Flags ???
         END   LLASAC
