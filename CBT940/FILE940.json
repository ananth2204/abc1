{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013527000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE940.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE940.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\r'", "DS1TRBAL": "b'06'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\t\\xa7\\x00\\x07\\t\\xa7\\x00\\n\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04[\\x00\\x18\\x01\\x16\\x08?\\x01\\x16\\x08?\\x13\\x03\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf1@@@'", "ispf": {"version": "04.91", "flags": 0, "createdate": "2016-03-23T00:00:00", "modifydate": "2016-03-23T13:03:18", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-491"}, "text": "REGULAR CBT TAPE - VERSION 491    FILE:  940\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT491.FILE940\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 10 MEMBERS COUNTED; CUMULATIVE SIZE IS 989 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/23/16    13:03:18    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x001\\x01\\x16\\x08/\\x01\\x16\\x08/ )\\x00,\\x00.\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2016-03-22T00:00:00", "modifydate": "2016-03-22T20:29:31", "lines": 44, "newlines": 46, "modlines": 0, "user": "SBGOLOB"}, "text": "             Notes on the LLAPRINT program\n             ----- -- --- -------- -------\n\nThis is a program to list the libraries that LLA controls.\n\nThe original author of this program was M. Schmidt from\nSwitzerland.  The program came to me through Gilbert Saint-flour,\nafter I looked in his libraries.\n\nIt is an old program, but it uses an undocumented IBM interface,\nso therefore it must be customized for the z/OS or OS/390\noperating system release.  Currently it was tested on z/OS 2.2.\n\nThe program as written, has two parts, LLAPRINT and LLASAC.\nBoth have to be APF authorized.  LLAPRINT does a LOAD for LLASAC.\nIn the current packaging, the two programs have to be assembled\nseparately.  You execute LLAPRINT, and it loads LLASAC to do its\n\"heavy work\".\n\nOne \"kludgey\" part of the program, which depends on the level of\nthe operating system, is the undocumented extension to the IHALLCB\nmacro, which describes the extension to the LLCB control block.\n\nAnother \"level-dependent\" part of the program is the format of\nthe LLDS dsect.  This dsect apparently changes, and has a \"type\"\nlevel to determine its format.\n\nI added 7 extra fullwords to account for the additions to\nthe LLDS header, apparently between version 1 and version 2.\nYou can see the LLDS format inside the LLASAC source code.\n\n\n\n               Installation Instructions\n               ------------ ------------\n\nYou need to do assembly of the two source programs, into an\nAPF-authorized load library.  Assemble both programs using the\ntwo jobs:  ASLLAPRT, and ASLLASAC.\n\nRun the program, once it is installed, using job:  RUNPRINT\nas a model.\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE940": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04[\\x00\\x07\\x01\\x16\\x08?\\x01\\x16\\x08?\\x13\\x03\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf1@@@'", "ispf": {"version": "04.91", "flags": 0, "createdate": "2016-03-23T00:00:00", "modifydate": "2016-03-23T13:03:07", "lines": 14, "newlines": 14, "modlines": 0, "user": "CBT-491"}, "text": "//***FILE 940 is from Sam Golob by way of Gilbert Saint-flour       *   FILE 940\n//*           and its original author, M. Schmidt of Switzerland.   *   FILE 940\n//*                                                                 *   FILE 940\n//*           This program lists all the libraries controlled       *   FILE 940\n//*           by LLA (Linklist Lookaside).                          *   FILE 940\n//*                                                                 *   FILE 940\n//*           This program has been tested on z/OS 2.2, but it is   *   FILE 940\n//*           dependent on the type of some undocumented IBM        *   FILE 940\n//*           control blocks, and must be fitted to older releases  *   FILE 940\n//*           of the operating system.                              *   FILE 940\n//*                                                                 *   FILE 940\n//*           email:  sbgolob@cbttape.org    or                     *   FILE 940\n//*                   sbgolob@attglobal.net                         *   FILE 940\n//*                                                                 *   FILE 940\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASLLAPRT": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x12\\x01\\x16\\x08/\\x01\\x16\\x08/\\x19\\x12\\x00\\x1e\\x00\\x1d\\x00\\x00\\xc1\\xe2\\xd4\\xd1\\xc3\\xd3@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2016-03-22T00:00:00", "modifydate": "2016-03-22T19:12:12", "lines": 30, "newlines": 29, "modlines": 0, "user": "ASMJCL"}, "text": "//SBGOLOBM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.CBT491.FILE940\n//         DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.CBT491.FILE940\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT491.FILE940(LLAPRINT)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ORDER LLAPRINT\n SETSSI  CB491940\n SETCODE AC(1)\n NAME    LLAPRINT(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASLLASAC": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\"\\x01\\x16\\x08/\\x01\\x16\\x08/\\x19\\x12\\x00\\x1e\\x00\\x1d\\x00\\x00\\xc1\\xe2\\xd4\\xd1\\xc3\\xd3@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2016-03-22T00:00:00", "modifydate": "2016-03-22T19:12:22", "lines": 30, "newlines": 29, "modlines": 0, "user": "ASMJCL"}, "text": "//SBGOLOBM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.CBT491.FILE940\n//         DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.CBT491.FILE940\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT491.FILE940(LLASAC)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ORDER LLASAC\n SETSSI  CB491940\n SETCODE AC(1)\n NAME    LLASAC(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IHALLCB": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00U\\x01\\x16\\x08/\\x01\\x16\\x08/\\x19\\x17\\x00x\\x00x\\x00\\x00\\xc4\\xc1\\xe3\\xc1@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2016-03-22T00:00:00", "modifydate": "2016-03-22T19:17:55", "lines": 120, "newlines": 120, "modlines": 0, "user": "DATA"}, "text": "         MACRO\n         IHALLCB  ,\nLLCB     DSECT                         Library lookaside control block.\n         DS    0D                      Double word aligned.\nLLCBID   DS    CL4                     Control block id ('LLCB').\nLLCBLVEL DS    X                       Level number of this LLCB.\nLLCBFLGS DS    X                       Flags.\nLLCBAVAL EQU   X'80'                   The LLA search services are\n*                                      available. LLCBAVAL is turned on\n*                                      by LLA directory build to\n*                                      activate a new directory. It is\n*                                      initially off, and LLA turns it\n*                                      off when it terminates.\n*                                      LLA's recovery exit CSVLLESCH\n*                                      and BLDL's ESTAE IGCT0018 turn\n*                                      off LLCBAVAL if serious errors\n*                                      occur in the LLA search service.\nLLCBSTOP EQU   X'40'                   LLA was terminated by the\n*                                      operator. This flag inhibits\n*                                      automatic re-START processing.\nLLCBFAIL EQU   X'20'                   LLA's memory termination\n*                                      resource manager turns on\n*                                      LLCBFAIL when it issues an\n*                                      internal START command to\n*                                      automatically re-start LLA.\n*                                      LLA turns off LLCBFAIL when it\n*                                      completes building a new\n*                                      directory. LLA's memory resource\n*                                      termination manager turns off\n*                                      LLCBFAIL if the re-START fails.\nLLCBX1OK EQU   X'10'                   was LLCBX1OK\nLLCBTLNK EQU   X'08'                   The LNKLST concatenation was\n*                                      truncated when it was opened\n*                                      during NIP processing. LLA\n*                                      re-informs the operator and\n*                                      turns off this flag.\nLLCBTLPA EQU   X'04'                   The LPALST concatenation was\n*                                      truncated when it was opened\n*                                      during NIP processing. LLA\n*                                      re-informs the operator and\n*                                      turns off this flag.\nLLCBLNKL EQU   X'02'                   LLA is managing entire\n*                                      LNKLST\nLLCBRSV2 EQU   X'01'                   Reserved.\nLLCBRSV3 DS    CL1                     Reserved.\nLLCB_CS_FLAGS DS X                     Defined only in PL/X\nLLCBRSCD DS    F                       Component reason code. Copied\n*                                      from SDWAHRC if SDWARCF is on.\n*                                      Valid only if LLCBRSOK is on.\nLLCBASCB DS    F                       Address of the ASCB of the LLA\n*                                      address space. Used to denote\n*                                      ownership of the LLCB and to\n*                                      abnormally terminate LLA\n*                                      if there is an error while\n*                                      searching the LLA directory.\nLLCBTCB  DS    F                       Address of TCB of LLA's jobstep\n*                                      task. Used to abnormally\n*                                      terminate LLA if an error occurs\n*                                      during LLA's directory search\n*                                      processing.\n         DS    F                       Reserved\n         DS    F                       Reserved\nLLCBNXT1 DS    F                       Address of the instruction\n*                                      following the MVCK instruction\n*                                      which stores data from the LLA\n*                                      directory into the user's\n*                                      parameter list. Used to\n*                                      determine whether program checks\n*                                      in LLA are due to invalid user\n*                                      user parameters passed in to\n*                                      BLDL.\n*\nLLCBDOM  DS    F                       WTO id used to delete LLA's\n*                                      error messages (CSV218E or\n*                                      CSV226E) from the operator's\n*                                      screen.\nLLCBABCC DS    CL4                     Abend completion code copied\n*                                      from SDWAABCC or ASCBMCC.\n         ORG   LLCBABCC\nLLCBCMPF DS    CL1                     Flag bits in completion code.\nLLCBRSOK EQU   X'04'                   LLCBRSCD is valid.\nLLCBCMPC DS    CL3                     System completion code (1st 12\n*                                      bits) and user completion code\n*                                      (2nd 12 bits).\nLLCBXXLN DS    CL2                     Suffix of the \"LNKLSTnn\"\n*                                      parmlib member being processed\n*                                      when NIP truncated the LNKLST.\n*                                      LLCBTLNK is also turned on.\nLLCBXXLP DS    CL2                     Suffix of the \"LPALSTnn\"\n*                                      parmlib member being processed\n*                                      when NIP truncated the LPALST.\n*                                      LLCBTLPA is also turned on.\n*\n* UNDOCUMENTED PART OF LLCB\n*\n         DS    A\n         DS    A                              TCB ADDRESS ????\n         DS    F\n         DS    F                              CSVLLTCH ADDRESS\n         DS    F\n         DS    F                              FLAGS ????\n         DS    F\n         DS    F\n         DS    F\n         DS    F\n         DS    F\n         DS    A                              LLCB START POINTER\n         DS    A                              LLCB END   POINTER\nLLCBLLT  DS    A                              LLT POINTER\n         DS    A                              MASTER ASCB ADDRESS ???\n         DS    A                              LPAT POINTER\n         DS    A                              LPAT LAST ENTRY POINTER\n         DS    6F                             RESERVED ???\nLLCBLLDR DS    A                              LLDR POINTER\n         DS    A                              LLDR POINTER ???\nLLCBPARM DS    CL2                            CSVLLA PARMLIB SUFFIX\n         DS    XL2\n         DS    A                              TCB ADDRESS ???\nLLCBNAME DS    CL8                            LLA ADDRESS SPACE NAME\n         MEND  ,                                                     */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LLAPRINT": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00Y\\x00\\x96\\x06\\x0f\\x01\\x16\\x08?\\x12V\\x01s\\x01\\x9d\\x00\\x00\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1996-02-29T00:00:00", "modifydate": "2016-03-23T12:56:59", "lines": 371, "newlines": 413, "modlines": 0, "user": "SOURCE"}, "text": "         TITLE 'PRINT NAMES OF ALL LLA MANAGED LIBRARIES'\n*---------------------------------------------------------------------*\n*                                                                     *\n* Title:      LLAPRINT                                                *\n*                                                                     *\n* Function:   PRINTS DATASET NAME, VOLSER, DDNAME AND SOME OTHER      *\n*             INFORMATION OF ALL LLA MANAGED LIBRARIES                *\n*                                                                     *\n* Originator: M. Schmidt, \"Winterthur\" Insurance Switzerland          *\n*             Paulstrasse 12, CH-8401 Winterthur                      *\n*             Phone: (0041) 52 261 39 88   Fax: (0041) 52 261 66 15   *\n*             IBMMAIL : CHWINMSC AT IBMMAIL                           *\n*             Internet: chwinmsc@ibmmail.com                          *\n*                                                                     *\n* Date:       January 1996                                            *\n*                                                                     *\n* Updated:    March 2016      Sam Golob   sbgolob@cbttape.org         *\n*                                                                     *\n* Reference : OW06194                                                 *\n* Material                                                            *\n*                                                                     *\n* SCP-Level : MVS/ESA SP 4.3.0 (HBB4430)                              *\n*             MVS/ESA SP 5.2.2 (JBB5522) - no modifications necessary *\n*             z/OS 2.2 (HBB77A0)                                      *\n*                                                                     *\n* Dependenc.: none                                                    *\n*                                                                     *\n* Parameters: none                                                    *\n*                                                                     *\n* Special:    LLAPRINT and LLASAC must                                *\n*             both be authorised by an entry in IKJTSOxx parmlib      *\n*             member (AUTHCMD) when called in TSO                     *\n*                                                                     *\n* Attributes: AMODE=31, RMODE=ANY, RENT,   REUS, AC(1).               *\n*                                                                     *\n* Mapping macros:  CVT, IHALLCB, IHAASCB                              *\n*                                                                     *\n* Inputs:          NONE                                               *\n*                                                                     *\n* Outputs:         LIST OF LLA MANAGED LIBRARIES TO SYSPRINT          *\n*                  R15- RETURN CODE                                   *\n*                   0 - LLA managed libraries information written.    *\n*                   4 - LLA services not available                    *\n*                   8 - LLDR address zero                             *\n*                  12 - Error in load of secondary space routine.     *\n*                  16 - Error in secondary space routine.             *\n*                  20 - Program is running unauthorized               *\n*                  24 - OPEN for SYSPRINT failed                      *\n*                                                                     *\n* Program logic:                                                      *\n*      1) CHECK FOR ACTIVE LLA                                        *\n*      2) Get LLDR control block address                              *\n*      3) Load secondary space module into pageable CSA.              *\n*      2) USING ASID FROM TARGET ASCB, SET TARGET AS SECONDARY SPACE. *\n*      3) BRANCH INTO MODULE LOADED INTO CSA.                         *\n*         THIS CODE MOVES THE NAMES OF LLA MANAGED LIBRARIES INTO     *\n*         A TABLE IN THIS ADDRESS SPACE                               *\n*      6) RESTORE ORIGINAL SASN AND AX.                               *\n*      7) PRINT LLA MANAGED LIBARIES INFORMATION                      *\n*                                                                     *\n* Control blocks:                                                     *\n*                                                                     *\n* !---------!   !---------!     !---------!                           *\n* !   CVT   !   !  LLCB   !     !  ASCB   !                           *\n* ! +X'24'  !   ! +X'C'   !---->!  (LLA)  !                           *\n* ! CVTLLCB !-->! +X'60'  !---- ! +X'24'  !                           *\n* !         !   ! +X'88'  !-! ! ! ASCBASID!                           *\n* !         !   !         ! ! ! !         !                           *\n* !---------!   !---------! ! ! !---------!                           *\n*                           ! !                                       *\n*                           ! !>!------------------------!            *\n*                           !   !   LLT (Linklist Table) !            *\n*                           !   !------------------------!            *\n*                           !                                         *\n*                           !                                         *\n* !---------------- LLA's private -----------------------------------!*\n* !                           !---------------------!                !*\n* !                           !                     v                !*\n* ! !---------!   !---------!-- !---------!   !---------!            !*\n* ! !  LLDR   !   !  LLDS   !   !  LLLS   !   !  LLDB   !    MEMBER1 !*\n* ! ! +X'C'   !-->! +X'1C'  !-->!         !   !         !--> MEMBER2 !*\n* ! !         !   !  .....  !-! !         !   !         !    MEMBER3 !*\n* ! !---------!   !---------! ! !---------!   !---------!    ....... !*\n* !                           !> .........    ..........             !*\n* !-------------------------------------------------------------------*\n*                                                                     *\n* Register usage:  R0 - REASON CODES                                  *\n*                  R1 - * WORK *                                      *\n*                  R2 - * WORK *                                      *\n*                  R3 - * WORK *                                      *\n*                  R4 - * WORK *                                      *\n*                  R5 - * WORK *                                      *\n*                  R6 - * UNUSED *                                    *\n*                  R7 - * UNUSED *                                    *\n*                  R8 - * UNUSED *                                    *\n*                  R9 - * UNUSED *                                    *\n*                  R10- * UNUSED *                                    *\n*                  R11- BASE register                                 *\n*                  R12- Return code                                   *\n*                  R13- Local data area                               *\n*                  R14- RETURN ADDRESS                                *\n*                  R15- RETURN CODES                                  *\n*                                                                     *\n* Change activity: 01/23/96 - 1st version                             *\n*---------------------------------------------------------------------*\n         MODULE LLAPRINT,AMODE=31,RMODE=ANY,BASE0=11,LOC=BELOW\n*\n         MVC   YPRINT,SYSPRINT                Move static to dyn. DCB\n         MVC   DCBEDYN(DCBEMINL),PRDCB31      Move static to dyn. DCBE\n         MVC   YOPOUT,OPOUPARM                Move OPEN  parameter list\n         MVC   YCLOS,CLOSPARM                 Move CLOSE parameter list\n         OPEN  (YPRINT,(OUTPUT)),MF=(E,YOPOUT)  OPEN SYSPRINT\n         TM    DCBOFLGS-IHADCB+YPRINT,DCBOFOPN  OPEN successful ?\n         BO    OUTOPEN\n         WTO   'DDNAME SYSPRINT COULD NOT BE OPENED.',ROUTCDE=(11)\n         B     EXIT18\nOUTOPEN  DS    0H\n*---------------------------------------------------------------------*\n* CHECK AUTHORITY (PROGRAM MUST BE LINK EDITED WITH AC=1              *\n*---------------------------------------------------------------------*\n         TESTAUTH FCTN=1                      Check authority\n         LTR   R15,R15                        Authority OK ?\n         BNZ   EXIT14                         No; terminate with RC=20\n*---------------------------------------------------------------------*\n* CHECK FOR ACTIVE LLA                                                *\n*---------------------------------------------------------------------*\n         L     R4,CVTPTR                      -> CVT\n         L     R4,CVTLLCB-CVT(,R4)            -> LLCB\n         USING LLCB,R4\n         TM    LLCBFLGS,LLCBAVAL              LLA services available ?\n         BNO   EXIT04                         No-issue message (RC=4)\n*---------------------------------------------------------------------*\n* Get LLDR address                                                    *\n*---------------------------------------------------------------------*\n         ICM   R1,B'1111',LLCBLLDR            -> LLDR\n         BZ    EXIT08                         Zero ? Exit with RC=8\n         ST    R1,LLDRADDR                    store LLDR addr. to parm.\n*---------------------------------------------------------------------*\n* LOAD MODULE THAT WILL RUN IN SECONDARY SPACE MODE INTO CSA          *\n*---------------------------------------------------------------------*\n         MODESET MODE=SUP,KEY=ZERO            go into supervisor mode\n         LOAD  EP=LLASAC,GLOBAL=(YES,P),      load into pageable CSA   +\n               ERRET=EXIT0C,                  error routine            +\n               EOM=NO                         delete module at end of\n*                                             task\n         ST    R0,CSAADDR                     store modules EP\n*---------------------------------------------------------------------*\n* SET SECONDARY ASN TO TARGET ADDRESS SPACE                           *\n*---------------------------------------------------------------------*\n         LA    R0,1                           AX=1\n         AXSET AX=(R0)                        Get AX\n         ST    R0,OLDAX                       Save old AX\n         ESAR  R2                             extract SASN\n         ST    R2,OLDSASN                     save old SASN\n         L     R2,LLCBASCB                    Load addr. off LLA's ASCB\n         LH    R2,ASCBASID-ASCB(,R2)          get LLA's ASID\n         SSAR  R2                             set AS secondary address\n*                                             space\n*---------------------------------------------------------------------*\n* Invoke LLA information gatherer routine that runs in secondary      *\n* space mode                                                          *\n*---------------------------------------------------------------------*\n         L     R15,CSAADDR                    load modules EP\n         LA    R1,PARMLIST                    address of parmlist to R1\n         BASSM R14,R15                        invoke the routine\n         LTR   R15,R15                        RC = 0 ?\n         BNZ   EXIT10                         No; exit with error\n*---------------------------------------------------------------------*\n* RESTORE ORIGINAL SASN AND AX                                        *\n*---------------------------------------------------------------------*\n         L     R2,OLDSASN                     Restore..\n         SSAR  R2                             original SASN\n         L     R0,OLDAX                       Restore..\n         AXSET AX=(R0)                        old AX\n         MODESET MODE=PROB,KEY=NZERO          go back to problem state\n         DELETE EP=LLASAC                     delete routine from CSA\n*---------------------------------------------------------------------*\n* Output information                                                  *\n*---------------------------------------------------------------------*\n         MVC   LINE,LLAJOBN\n         MVC   LINE+42(L'LLCBNAME),LLCBNAME   LLA jobname\n         PUT   YPRINT,LINE\n         MVC   LINE,PARMLIB\n         MVC   LINE+42(L'LLCBPARM),LLCBPARM   CSVLLAxx parm. mem. suff.\n         PUT   YPRINT,LINE\n         MVC   LINE,EXIT1\n         TM    LLCBFLGS,LLCBX1OK              Exit 1 called ?\n         BO    EXITOK\n         MVC   LINE+42(3),=C'NO '\nEXITOK   DS    0H\n         PUT   YPRINT,LINE\n         MVC   LINE,SINGENT\n         CLI   PARMFLGS+1,X'80'               LNKLST a single entitiy ?\n         BNE   NOTSINGL\n         MVC   LINE+42(3),=C'YES'\nNOTSINGL DS    0H\n         PUT   YPRINT,LINE\n         DROP  R4                             DROP LLCB addressability\n         MVC   LINE,BLANKS\n         PUT   YPRINT,LINE\n         MVC   LINE,HEADER\n         PUT   YPRINT,LINE\n         MVC   LINE,HEADER2\n         PUT   YPRINT,LINE\n         MVC   LINE,BLANKS\n         L     R2,DSNENUM                     Number of LLA man. libs\n         LA    R3,DSNLIST                     -> return area\n         USING DSNLIST,R3                     address return area\nOUTPLOOP DS    0H          <----------------!\n         MVC   LINE(L'DDN),DDN              ! DDNAME\n         MVC   LINE+9(L'VOLSER),VOLSER      ! Volume serial\n         MVC   LINE+16(L'DSN),DSN           ! Dataset name\n* Check LLDS flag bytes                     !\n         MVC   LINE+62(6),=C'LNKLST'        ! Indicate DSN in LNKLST\n         TM    LLDSBITS,X'80'               ! Linklist dataset ?\n         BO    *+10                         ! Yes\n         MVC   LINE+62(7),=C'Private'       !\n         MVC   LINE+71(6),=C'Freeze'        ! Indicate FREEZE mode\n         TM    LLDSBITS+1,X'40'             ! Is it FREEZE mode ?\n         BO    *+10                         ! Yes\n         MVC   LINE+71(8),=C'NoFreeze'      ! Indicate NOFREEZE mode\n         PUT   YPRINT,LINE                  !\n         MVC   LINE,BLANKS                  !\n* Convert TOD value to Date / Time the library was added/updated\n         STCKCONV STCKVAL=ADDTOD,CONVVAL=TODCONV,DATETYPE=YYYYMMDD,    +\n               MF=(E,STCKCONV)              !\n         MVC   OUT-1(L'TIMEMSK1),TIMEMSK1   ! move mask\n         ED    OUT(16),TODCONV              !\n         CLI   OUT,X'20'                    !\n         BNE   *+8                          !\n         MVI   OUT,X'F0'                    !\n         MVC   LINE+20(11),OUT              !\n         MVC   OUT-1(L'DATEMSK1),DATEMSK1   ! move mask\n         ED    OUT(13),TODCONV+8            !\n         MVC   LINE(10),OUT                 !\n         PUT   YPRINT,LINE                  !\n*                                           !\n         MVC   LINE,BLANKS                  !\n         LA    R3,DSNENTL(,R3)              ! Skip 1 table entry\n         BCT   R2,OUTPLOOP ------------------\n         DROP  R3                             DROP DSNLIST address.\n*---------------------------------------------------------------------*\n* EXIT ROUTINES                                                       *\n*---------------------------------------------------------------------*\nEXIT00   DS    0H\n         MVC   LINE,BLANKS\n         LA    R12,X'00'\n         B     EXIT\nEXIT04   DS    0H\n         MVC   LINE,ERROR04\n         LA    R12,X'04'\n         B     EXIT\nEXIT08   DS    0H\n         MVC   LINE,ERROR08\n         LA    R12,X'08'\n         B     EXIT\nEXIT0C   DS    0H\n         MVC   LINE,ERROR0C\n         LA    R12,X'0C'\n         B     EXIT\nEXIT10   DS    0H\n         MVC   LINE,ERROR10\n         LA    R12,X'10'\n         B     EXIT\nEXIT14   DS    0H\n         MVC   LINE,ERROR14\n         LA    R12,X'14'\n         B     EXITCLOS\nEXIT18   DS    0H\n         LA    R12,X'18'\n         B     EXITREL\n*---------------------------------------------------------------------*\n* COMMON EXIT                                                         *\n*---------------------------------------------------------------------*\nEXIT     DS    0H\n         MODESET MODE=PROB\nEXITCLOS DS    0H\n         PUT   YPRINT,LINE\n         CLOSE YPRINT,MF=(E,YCLOS),MODE=31\nEXITREL  DS    0H\n         STORAGE RELEASE,LENGTH=L@LOCALN,ADDR=(R13),COND=YES\n         LR    R15,R12                        Set RC\n         PR                                   RETURN TO CALLER\n***********************************************************************\n* STATIC WORK AREA (Literal pool)                                     *\n***********************************************************************\nDATEMSK1 DC    X'4020202020612020612020'\nTIMEMSK1 DC    X'4020204B20204B20204B2020' TIME-PATTERN\nLLAJOBN  DC    CL80'LLA jobname                             : ........'\nPARMLIB  DC    CL80'CSVLLAxx parmlib member used            : ..'\nEXIT1    DC    CL80'CSVLLIX1 called                         : YES'\nSINGENT  DC    CL80'LNKLST treated as a single entity by LLA: NO '\nBLANKS   DC    CL80' '\nHEADER   DC    CL80'DDNAME   Volser Library name                       +\n                          Type     Mode'\nHEADER2  DC    CL80'---------------------------------------------------+\n               ----------------------------'\nERROR04  DC    CL80'LLA is currently not active.'\nERROR08  DC    CL80'LLDR pointer is zero.'\nERROR0C  DC    CL80'Error in load of secondary space routine.'\nERROR10  DC    CL80'Error in secondary space routine.'\nERROR14  DC    CL80'LLAPRINT is running unauthorized.'\n* DCB / OPEN,CLOSE parameter list\nSYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,             +\n               LRECL=80,BLKSIZE=8000,DCBE=PRDCB31\nXPRINT   EQU   *,*-SYSPRINT\nPRDCB31  DCBE  RMODE31=BUFF\n*\nOPOUPARM OPEN  (,(OUTPUT)),MODE=31,MF=L\nXOPOUT   EQU   *,*-OPOUPARM\nCLOSPARM CLOSE (,),MODE=31,MF=L\nXCLOS    EQU   *,*-CLOSPARM\n***********************************************************************\n*        LOCAL DATA AREA                                              *\n***********************************************************************\nL#LOCAL  DSECT\n         DS    0D\nYPRINT   DS    CL(L'XPRINT)\n         DS    0D\nYOPOUT   DS    CL(L'XOPOUT)\n         DS    0D\nYCLOS    DS    CL(L'XCLOS)\nDCBEDYN  DCBE  RMODE31=BUFF                   BUFFERS ABOVE THE LINE\n         DS    CL2\nOUT      DS    CL16                           Date/Time conversion area\nTODCONV  DS    4F                             STCKCONV work area\nSTCKCONV STCKCONV MF=L                        STCKCONV MACRO EXPANSION\nCSAADDR  DS    F\nLINE     DS    CL80\n*---------------------------------------------------------------------*\n* PARMLIST WE PASS TO ROUTINE RUNNING IN SECONDARY SPACE MODE         *\n*---------------------------------------------------------------------*\nPARMLIST DS    0F\nOLDAX    DS    F\nOLDSASN  DS    F\nLLDRADDR DS    A                              LLDR address\nPARMFLGS DS    BL4                            Flags\nDSNENUM  DS    F                              Number of LLA man. ds\nDSNLIST  DS    200CL(DSNENTL)                 List of managed libraries\n         ORG   DSNLIST                        Describe 1 entry ...\nVOLSER   DS    CL6                            ..consisting of VOLSER\nDSN      DS    CL44                           ..Dataset name\nDDN      DS    CL8                            ..and LLA's DDNAME for it\nLLDSBITS DS    BL2                            ..and flag bits from LLDS\nADDTOD   DS    XL4                            ..and TOD lib added-LLLS\nDSNENTL  EQU   *-VOLSER                       Length of 1 entry\n         ORG   ,\n*---------------------------------------------------------------------*\nL@LOCALN EQU   *-L#LOCAL                      LENGTH OF LOCAL AREA\n         YREGS\n*----------------------------------------------------------------------\n*        CVT   - COMMUNICATION VECTOR TABLE                           -\n*----------------------------------------------------------------------\n         CVT     LIST=NO,DSECT=YES\n*----------------------------------------------------------------------\n*        LLCB  - LINKLIST LOOKASIDE CONTROL BLOCK                     -\n*----------------------------------------------------------------------\n         IHALLCB\n*----------------------------------------------------------------------\n*        ASCB  - ADDRESS SPACE CONTROL BLOCK                          -\n*----------------------------------------------------------------------\n         IHAASCB LIST=NO\n*----------------------------------------------------------------------\n*        DCB   -                                                      -\n*----------------------------------------------------------------------\n         DCBD  DSORG=PS,DEVD=DA\n*----------------------------------------------------------------------\n*        DCBE                                                         -\n*----------------------------------------------------------------------\n         IHADCBE\n         END   LLAPRINT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LLASAC": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x96\\x06\\x0f\\x01\\x16\\x08?\\x12V\\x00\\xe7\\x01\\x02\\x00\\x00\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1996-02-29T00:00:00", "modifydate": "2016-03-23T12:56:00", "lines": 231, "newlines": 258, "modlines": 0, "user": "SOURCE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n* Title:      LLASAC                                                  *\n*                                                                     *\n* Function:   CHAINS THROUGH LLA'S CONTROL BLOCKS RESIDING IN ITS     *\n*             PRIVATE TO OBTAIN LLA MANAGED LIBRARY NAMES             *\n*                                                                     *\n* Originator: M. Schmidt, \"Winterthur\" Insurance Switzerland          *\n*             Paulstrasse 12, CH-8401 Winterthur                      *\n*             Phone: (0041) 52 261 39 88   Fax: (0041) 52 261 66 15   *\n*             IBMMAIL : CHWINMSC AT IBMMAIL                           *\n*             Internet: chwinmsc@ibmmail.com                          *\n*                                                                     *\n* Date:       January 1996                                            *\n*                                                                     *\n* Updated:    March 2016      Sam Golob   sbgolob@cbttape.org         *\n*                                                                     *\n* Ref. books: MVS/ESA data areas volumes 1-4                          *\n*                                                                     *\n* SCP-Level : MVS/ESA SP 4.3.0 (HBB4430)                              *\n*             MVS/ESA SP 5.2.2 (JBB5522) - no modifications necessary *\n*             z/OS 2.2 (HBB77A0) - add 7 fullwords before LLDSENT     *\n*                                                                     *\n* Dependenc.: NONE                                                    *\n*                                                                     *\n* Parameters: Parameter list passed in Register 1                     *\n*                                                                     *\n* Attributes: AMODE=31, RMODE=ANY, RENT,   REUS                       *\n*                                                                     *\n* Mapping macros:                                                     *\n*                                                                     *\n* Inputs:                                                             *\n*                  R1 - PARMLIST                                      *\n*                  CALLER HAS SET SECONDARY ADDRESS SPACE             *\n*                                                                     *\n* Outputs:         LLA MANAGED LIBRARY  DATASET NAMES,VOLSER,DDNAME   *\n*                  R15- RETURN CODE                                   *\n*                   0 - SUCCESSFUL COMPLETION                         *\n*                   8 - LLDR acronym not found                        *\n*                  12 - LLDS pointer zero                             *\n*                  16 - LLDS acronym not found                        *\n*                  20 - LLLS acronym not found                        *\n*                                                                     *\n* Program logic:                                                      *\n*      1) GO INTO SECONDARY SPACE MODE.                               *\n*      2) CHAIN THROUGH LLAS MEMORY                                   *\n*      3) GO BACK TO PRIMARY SPACE MODE.                              *\n*                                                                     *\n* Register usage:  R0 - REASON CODES                                  *\n*                  R1 - * WORK *                                      *\n*                  R2 - LLDS flag bytes                               *\n*                  R3 - LLDR addressability                           *\n*                  R4 - LLDS addressability                           *\n*                  R5 - LLDS entry count                              *\n*                  R6 - LLLS addressability                           *\n*                  R7 - Return area addressability                    *\n*                  R8 - LLDS entry addressability                     *\n*                  R9 - Copy length for MVCP                          *\n*                  R10- Parameter list                                *\n*                  R11- Base register                                 *\n*                  R12- LLLS entry counter                            *\n*                  R13- Local data area                               *\n*                  R14- return address                                *\n*                  R15- return codes                                  *\n*                                                                     *\n* CHANGE ACTIVITY:                                                    *\n*---------------------------------------------------------------------*\n         MODULE LLASAC,AMODE=31,RMODE=ANY,BASE0=11,PARM=10\n         USING PARMLIST,R10\n         LA    R7,DSNLIST                -> LLAPRINT return area\n         L     R3,LLDRADDR               -> LLDR\n         USING LLDR,R3\n         SAC   256\n*---------------------------------------------------------------------*\n* !!!!!!!!! THE FOLLOWING CODE RUNS IN SECONDARY SPACE MODE !!!!!!!!! *\n*---------------------------------------------------------------------*\n         CLC   LLDRNAME,=C'LLDR'         really the LLDR ?\n         BNE   EXIT08                    No; exit immediately\n         ICM   R4,B'1111',LLDRLLDS       -> LLDS\n         BZ    EXIT0C                    Zero ? Exit with RC=12\n         USING LLDS,R4\n         CLC   LLDSNAME,=C'LLDS'         really the LLDS ?\n         BNE   EXIT10                    No; exit immediately\n         LH    R2,LLDSFLG1               Get Flag bytes\n         ICM   R5,B'1111',LLDSNUM        Number of LLDS entries\n         BZ    LLDSFINI\n         ICM   R1,B'0001',=X'00'         PSW key mask for MVCP\n         XR    R12,R12                   Zero the entry counter\n         LA    R8,LLDSENT                -> 1ST LLDS entry\n         DROP  R4\n         USING LLDSENT,R8                LLDS entry addressability\nLLDSLOOP DS    0H          <------------\n         ICM   R6,B'1111',LLDSLLLS     ! -> LLLS\n         BZ    LLDSZERO                ! Zero; bypass entry\n         USING LLLS,R6                 !\n         CLC   LLLSNAME,=C'LLLS'       ! really an LLLS ?\n         BNE   EXIT14                  ! NO; exit with RC=20\n         LA    R9,DSNENTL-L'LLDSBITS-L'ADDTOD\n         MVCP  0(R9,R7),LLLSVOL,R1     ! Move VOLSER,DSN,DDN\n         LA    R9,L'LLDSBITS           ! Length to copy\n         MVCP  58(R9,R7),LLDSFLG3,R1   ! Move 2 Flag bytes\n         LA    R9,L'ADDTOD             ! Length to copy\n         MVCP  60(R9,R7),LLLSTOD,R1    ! Move TOD library added to LLA\n         LA    R12,1(,R12)             ! Increment counter\n         LA    R7,DSNENTL(,R7)         ! -> next return area entry\nLLDSZERO DS    0H                      !\n         LA    R8,LLDSELEN(,R8)        ! Skip 1 LLDS entry\n         BCT   R5,LLDSLOOP -------------\nLLDSFINI DS    0H\n*---------------------------------------------------------------------*\n* !!!!!!!!! END OF SECONDARY SPACE MODE CODE !!!!!!!!!!!!!!!!!!!!!!!! *\n*---------------------------------------------------------------------*\n         SAC   0\n         ST    R12,DSNENUM               Store number of entries copied\n         STH   R2,PARMFLGS               Store LLDS flags into parmlist\n         B     EXIT00\n         DROP  R10                       DROP parmlist addressability\n         DROP  R3                        DROP LLDR addressability\n         DROP  R8                        DROP LLDS addressability\n         DROP  R6                        DROP LLLS addressability\n*---------------------------------------------------------------------*\n* EXIT ROUTINES                                                       *\n*---------------------------------------------------------------------*\nEXIT00   DS    0H\n         LA    R15,X'00'                 Set RC=0\n         B     EXIT\nEXIT08   DS    0H                        LLDR acronym not found\n         LA    R15,X'08'                 Set RC=8\n         B     EXIT\nEXIT0C   DS    0H                        LLDS pointer zero\n         LA    R15,X'0C'                 Set RC=12\n         B     EXIT\nEXIT10   DS    0H                        LLDS acronym not found\n         LA    R15,X'10'                 Set RC=16\n         B     EXIT\nEXIT14   DS    0H                        LLLS acronym not found\n         LA    R15,X'14'                 Set RC=20\n         B     EXIT\n*---------------------------------------------------------------------*\n* COMMON EXIT                                                         *\n*---------------------------------------------------------------------*\nEXIT     DS    0H\n         STORAGE RELEASE,LENGTH=L@LOCALN,ADDR=(R13)\n         PR                                   RETURN TO CALLER\n**********************************************************************\n* STATIC WORK AREA                                                   *\n**********************************************************************\n         LTORG\n         YREGS                                Register equates\n***********************************************************************\n*        L#LOCAL LOCAL DATA AREA                                      *\n***********************************************************************\nL#LOCAL  DSECT\n*---------------------------------------------------------------------*\n* PARMLIST WE PASS TO ROUTINE RUNNING IN SECONDARY SPACE MODE         *\n*---------------------------------------------------------------------*\nPARMLIST DS    0F\nOLDAX    DS    F\nOLDSASN  DS    F\nLLDRADDR DS    A                              LLDR address\nPARMFLGS DS    BL4                            Flags\nDSNENUM  DS    F                              Number of LLA man. ds\nDSNLIST  DS    200CL(DSNENTL)                 List of managed libraries\n         ORG   DSNLIST                        Describe 1 entry ...\nVOLSER   DS    CL6                            ..consisting of VOLSER\nDSN      DS    CL44                           ..Dataset name\nDDN      DS    CL8                            ..and LLA's DDNAME for it\nLLDSBITS DS    BL2                            ..and flag bits from LLDS\nADDTOD   DS    XL4                            ..and TOD lib added-LLLS\nDSNENTL  EQU   *-VOLSER                       Length of 1 entry\n         ORG   ,\nL@LOCALN EQU   *-L#LOCAL                      LENGTH OF LOCAL AREA\n*\nLLDR     DSECT\nLLDRNAME DS    CL4'LLDR'                      LLDR acronym\n         DS    XL2                            Flags ?\nLLDRLEN  DS    H                              control block len (X'18')\n         DS    F                              Reserved (x'00') ?\nLLDRLLDS DS    A                              LLDS pointer\n         DS    F                              Reserved (x'00') ?\nLLDRTOD  DS    A                              TOD LLA start ?\n*\nLLDS     DSECT\nLLDSNAME DS    CL4'LLDS'       X'00'          LLDS acronym\nLLDSFLG1 DS    B               X'04'          Version level, X'02'?\nLLDSFLG2 DS    B               X'05'          Flag byte\nLLDSLTSE EQU   X'80'                          1=LNKLST treated as a\n*                                             single entity by LLA\n*                                             (see APAR OW06194)\nLLDSLEN  DS    H               X'06'          LLDS control block length\nLLDSTOD  DS    XL4             X'08'          LLA start time ?\n         DS    F               X'0C'\n         DS    A               X'10'          ?\n         DS    A               X'14'          Pointer to First LLDSENT\nLLDSNUM  DS    F               X'18'          Number of LLDS entries\n         DS    F               X'1C'\n         DS    F               X'20'\n         DS    F               X'24'\n         DS    F               X'28'\n         DS    F               X'2C'\n         DS    F               X'30'\n         DS    F               X'34'          End of LLDS header\nLLDSENT  DS    0C        32-bytes in length\nLLDSUCB  DS    A                              UCB Pointer\n         DS    BL4                            Flag bytes ???\n         DS    A                              Pointer to other entries?\nLLDSLLDB DS    A                              LLDB Pointer\nLLDSLLLS DS    A                              LLLS Pointer\nLLDSFLG3 DS    B                              Flag byte\nLLDSLNK  EQU   X'80'                          On=LNKLST, Off=PRIVATE\nLLDSFLG4 DS    B                              Flag byte\nLLDSNOFR EQU   X'80'                          On=NOFREEZE\nLLDSFREZ EQU   X'40'                          On=FREEZE\n         DS    XL10                           Reserved ??? (X'00')\nLLDSELEN EQU   *-LLDSENT                      LLDS entry length (32)\n*\nLLLS     DSECT\nLLLSNAME DS    CL4'LLLS'                      LLLS acronym\n         DS    BL4                            Flags ???\nLLLSTOD  DS    XL4                            TOD library added\n         DS    A\n         DS    15F                            Reserved ???\n         DS    XL2\nLLLSVOL  DS    CL6                            Volume serial\nLLLSDSN  DS    CL44                           Dataset name\nLLLSDDN  DS    CL8                            LLA's DDNAME\n         DS    A                              Pointer (LLLS+X'A0')\n         DS    A                              Pointer (LLLS+X'F8')\n         DS    6F                             Reserved ???\n         DS    BL4                            Flags ???\n         END   LLASAC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MODULE": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x00\\x96\\x06\\x0f\\x00\\x96\\x06\\x0f\\x14B\\x00\\x83\\x00\\x83\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-02-29T00:00:00", "modifydate": "1996-02-29T14:42:59", "lines": 131, "newlines": 131, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n         MODULE &CNAME,&AMODE=31,&RMODE=ANY,&LOC=,&BASE0=11,&BASE1=,   X\n               &BASE2=,&PARM=,&TEXT=' '\n.**********************************************************************\n.*       BEGIN MODULE WITH THIS MACRO\n.*       &CNAME    - NAME OF MODULE (8 CHARACTERS OR LESS)\n.*       &AMODE    - \"24\" OR \"31\"\n.*       &RMODE    - \"24\" OR \"ANY\"\n.*       &LOC      - \"BELOW\" IF STORAGE TO BE GETMAINED BELOW 16M\n.*       &BASE0    - 1ST BASE REGISTER (NOT R1,R2 OR R13)\n.*       &BASE1    - 2ND BASE REGISTER (NOT R1,R2 OR R13)\n.*       &BASE2    - 3RD BASE REGISTER (NOT R1,R2 OR R13)\n.*       &PARM     - REGISTER TO SAVE PARM REG (R1)\n.*       &TEXT     - COMMENT THAT IS ASSEMBLED INTO OBJECT CODE\n.**********************************************************************\n.*\n         LCLB  &E1\n         LCLC  &BEGIN,&TXT\n.**************************************\n.*       CHECK ERROR CONDITIONS       *\n.**************************************\n.*\n&E1      SETB  0\n         AIF   (T'&CNAME NE '0').OK1\n         MNOTE 8,'MODULE NAME IS REQUIRED'\n&E1      SETB  1\n.OK1     ANOP\n         AIF   (K'&CNAME LE 8).OK2\n         MNOTE 8,'MODULE NAME MUST BE FROM 1-8 CHARACTERS'\n&E1      SETB  1\n.OK2     ANOP\n         AIF   (&BASE0 GT 2 AND &BASE0 LT 13).OK3\n         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERED'\n&E1      SETB  1\n\n\n\n.OK3     ANOP\n         AIF   (&BASE1 EQ 0).OK4\n         AIF   (&BASE1 GT 2 AND &BASE1 LT 13).OK4\n         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERED'\n&E1      SETB  1\n.OK4     ANOP\n         AIF   (&BASE2 EQ 0).OK5\n         AIF   (&BASE2 GT 2 AND &BASE2 LT 13).OK5\n         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERED'\n&E1      SETB  1\n.OK5     ANOP\n         AIF   (&PARM EQ 0).OK6\n         AIF   (&PARM GT 5 AND &PARM LT 11).OK6\n         MNOTE 8,'ONLY REGISTERS 6 THROUGH 10 CAN BE USED FOR PARM'\n&E1      SETB  1\n.OK6     ANOP\n         AIF   (&E1).MEND\n.*\n.**************************************\n.*       SET GLOBAL SYMBOLS           *\n.**************************************\n&BEGIN   SETC  'BEG'.'&SYSNDX'\n&TXT     SETC  '&TEXT'\n         AIF   ('&TXT'(1,1) EQ '''').STRIP\n         AIF   ('&TXT'(1,1) EQ '(').STRIP\n         AGO   .NOSTRIP\n.STRIP   ANOP\n&TXT     SETC  '&TXT'(2,K'&TXT-2)\n.NOSTRIP ANOP\n.**************************************\n.*       BEGIN OF CODE                *\n.**************************************\n&CNAME   CSECT\n&CNAME   AMODE &AMODE\n&CNAME   RMODE &RMODE\n         USING &CNAME,15             SET ADDRESSING ON ENTRY POINT\n         B     &BEGIN                BRANCH AROUND EYECATCHER\n         DC    C' &CNAME '           NAME OF CSECT\n         DC    C' &SYSDATE '         DATE OF ASSEMBLY\n         DC    C' &SYSTIME '         TIME OF ASSEMBLY\n         DC    C' &TXT  '            OPTIONAL TEXT\n&BEGIN   BAKR  14,0\n         LR    &BASE0,15             LOAD BASE REG WITH ENTRY POINT\n         AIF   (&PARM EQ 0).DROP15\n         LR    &PARM,1               SAVE PARM REGISTER\n.DROP15  ANOP\n         DROP  15                    DROP ADDRESSING ON ENTRY POINT\n         AIF   (&BASE1 EQ 0).NO2ND\n         LA    &BASE1,2048(,&BASE0)\n         LA    &BASE1,2048(,&BASE1)  SECOND BASE REGISTER\n         AIF   (&BASE2 EQ 0).NO3RD\n         LA    &BASE2,2048(,&BASE1)\n         LA    &BASE2,2048(,&BASE2)  THIRD  BASE REGISTER\n         USING &CNAME,&BASE0,&BASE1,&BASE2\n\n\n\n         AGO   .STOROBT\n.NO2ND   ANOP\n         USING &CNAME,&BASE0\n         AGO   .STOROBT\n.NO3RD   ANOP\n         USING &CNAME,&BASE0,&BASE1\n.STOROBT ANOP\n         AIF   (T'&LOC EQ '0').NOLOC\n         STORAGE OBTAIN,LENGTH=L@LOCALN,LOC=&LOC,COND=YES\n         AGO   .INITLDA\n.NOLOC   ANOP\n         STORAGE OBTAIN,LENGTH=L@LOCALN,COND=YES\n.INITLDA ANOP\n.**************************************\n.*       INITIALIZE LOCAL DATA AREA   *\n.**************************************\n         LR    R2,R1                          STORAGE ADDRESS IN R2\n         L     R3,=A(L@LOCALN)                LOAD STORAGE LENGTH\n         XR    R4,R4                          NO SOURCE AREA\n         XR    R5,R5                          SET PAD BYTE\n         ICM   R5,B'1000',=X'40'              SET PAD BYTE (BLANK)\n         MVCL  R2,R4                          INIT THE LDA\n*\n         LR    R13,R1                         USE R13 FOR LDA\n         USING L#LOCAL,R13                    ESTABLISH ADDRESSABILITY\n         MVC   L#SAVHSA,=C'F1SA'              LINKAGE STACK USED\nL#LOCAL  DSECT\nL#SAVPLI DS    F                              USED BY PL/I ONLY\nL#SAVHSA DS    F                              ADDR. OF PREV SAVE AREA\nL#SAVLSA DS    F                              ADDR. OF NEXT SAVE AREA\nL#SAVR14 DS    F                              R14 - RETURN ADDRESS\nL#SAVR15 DS    F                              R15 - ENTRY POINT ADDRESS\nL#SAVR0  DS    F                              R0\nL#SAVR1  DS    F                              R1\nL#SAVR2C DS    11F                            R2 - 12\n&CNAME   CSECT\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RUNPRINT": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\t\\x01\\x16\\x08/\\x01\\x16\\x08/\\x19\\x14\\x00\\x06\\x00\\x03\\x00\\x00\\xd9\\xe4\\xd5\\xd1\\xc3\\xd3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2016-03-22T00:00:00", "modifydate": "2016-03-22T19:14:09", "lines": 6, "newlines": 3, "modlines": 0, "user": "RUNJCL"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//RUN     EXEC PGM=LLAPRINT\n//STEPLIB   DD DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSPRINT  DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT940/FILE940.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT940", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}