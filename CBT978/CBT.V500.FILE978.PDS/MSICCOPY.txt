/* We first need rexx in comment if compiled or read from SYSPROC. */
rexx_msiccopy:
  rexxpgm_version = "01.01"          /* Set with 'ver 1' and 'lev 2'. */

  PARSE ARG vdef_hostdsn vdef_sysexec

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This code drives Initialization, Process, and Termination routines.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
rexx_Main_Code:
  return_code = Initialization_routine()
  If (return_code = 0) Then Do
    return_code = Process_routine()
  End
  return_code = Termination_routine()
  Return return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  Contact:  "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
  Overview: This is an ISPF dialog program called to define a
            WISHLIST data set.

  Syntax:   Called from #INSTALL.


=======================================================================

  History of Modifications
  ------------------------
vv.mm When     Who  /  What you did
----- -------- --------------------------------------------------------
01.01 20180207 "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Ensure vdef_sysexec exists.
----- -------- --------------------------------------------------------
01.00 20180122 "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original code started.
----- -------- --------------------------------------------------------

=======================================================================

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine initializes constants and variables.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Initialization_routine:
  return_code = 0
  ADDRESS ISPEXEC "LMINIT DATAID(DSNIN) DATASET('"vdef_hostdsn"')"
  function_rc = RC
  IF (function_rc <> 0) THEN DO
    ZERRALRM = "YES"
    ZERRHLP = ""
    ZERRSM = DSNIN "LMINIT RC("function_rc")"
    ZERRLM = "LMINIT FAILED ON" vdef_hostdsn"."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = function_rc
    Return return_code
  END
  listdsi_rc = LISTDSI("'"vdef_sysexec"'")
  IF (listdsi_rc <> 0) THEN DO
    ZERRALRM = "YES"
    ZERRHLP = ""
    ZERRSM = "SYSEXEC not found"
    ZERRLM = "DSN('"vdef_sysexec"') was not found."
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = listdsi_rc
    RETURN return_code
  END
  ADDRESS ISPEXEC "LMINIT DATAID(DSNOT) DATASET('"vdef_sysexec"')"
  function_rc = RC
  IF (function_rc <> 0) THEN DO
    ZERRALRM = "YES"
    ZERRHLP = ""
    ZERRSM = DSNIN "LMINIT RC("function_rc")"
    ZERRLM = "LMINIT FAILED ON" vdef_sysexec
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = function_rc
    Return return_code
  END
  Return return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does the processing.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Process_routine:
  ADDRESS ISPEXEC "LMCOPY FROMID("DSNIN") TODATAID("DSNOT")" ,
    "FROMMEM(GENIE) REPLACE"
  function_rc = RC
  IF (function_rc <> 0) THEN DO
    ZERRALRM = "YES"
    ZERRHLP = ""
    ZERRSM = DSNIN "LMCOPY RC("function_rc")"
    ZERRLM = "LMCOPY FAILED ON GENIE"
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = function_rc
    Return return_code
  END
  ADDRESS ISPEXEC "LMCOPY FROMID("DSNIN") TODATAID("DSNOT")" ,
    "FROMMEM(GENIEBLD) REPLACE"
  function_rc = RC
  IF (function_rc <> 0) THEN DO
    ZERRALRM = "YES"
    ZERRHLP = ""
    ZERRSM = DSNIN "LMCOPY RC("function_rc")"
    ZERRLM = "LMCOPY FAILED ON GENIE"
    ADDRESS ISPEXEC "SETMSG MSG(ISRZ002)"
    return_code = function_rc
    Return return_code
  END
  return return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 This routine does any pre-termination cleanup.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
Termination_routine:
  ADDRESS ISPEXEC "LMCLOSE DATAID("DSNIN")"
  ADDRESS ISPEXEC "LMCLOSE DATAID("DSNOT")"
  Return return_code

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Convert string to lowercase.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
To_Lowercase: Parse arg myarg
  defined_state = Symbol(uppercase_letters)
  If (defined_state = "LIT") Then Do
    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
  End
  Return Translate(myarg,lowercase_letters,uppercase_letters)

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 Convert string to uppercase.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
To_Uppercase: Parse arg myarg
  defined_state = Symbol(uppercase_letters)
  If (defined_state = "LIT") Then Do
    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
  End
  Return Translate(myarg,uppercase_letters,lowercase_letters)

/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
=======================================================================
 End of code.
=======================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
