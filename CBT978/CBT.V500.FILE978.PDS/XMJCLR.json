{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "KTOMIAK", "INMTNODE": "ANYNODE", "INMTUID": "KTOMIAK", "INMFTIME": "20180524155559000000", "INMNUMF": 2}, "INMR02": {"1": {"INMUTILN": "INMCOPY", "INMSIZE": 646646, "INMDSORG": "PS", "INMLRECL": 251, "INMBLKSZ": 3120, "INMRECFM": "VB", "numfile": 1}, "2": {"INMUTILN": "IEBCOPY", "INMSIZE": 1881152, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 81, "INMBLKSZ": 27945, "INMRECFM": "FB", "INMDIR": 57, "INMDSNAM": "VENDOR.GENIE.WISHLIST", "INMMEMBR": "VENDOR.GENIE.WISHLIST", "numfile": 2}, "3": {"INMUTILN": "INMCOPY", "INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 2}}, "INMR03": {"1": {"INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}, "2": {"INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "message": {"file": "b'@\\x7f\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5@\\xe3\\x96\\x94\\x89\\x81\\x92\\x7fL\\xc3\\xc2\\xe3m\\xd2\\x85\\x95|\\xd2\\xe3\\x96\\x94\\x89\\x81\\x92K\\x82\\x89\\xa9n\\xe4K\\xe2K\\xc1K@\\xc3\\xc3z@\\xc1\\xd5\\xe8\\xd5\\xd6\\xc4\\xc5@a\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\\xd2K@\\xe3\\x96\\x94\\x89\\x81\\x92@@@@@@@@@@@@@@@@@@@@@@\\xe2\\xe3\\xc1\\xd5\\xc4\\xc1\\xd9\\xc4@\\xc7\\xd3\\xd6\\xc2\\xc1\\xd3@\\xc4\\xc9\\xe2\\xc3\\xd3\\xc1\\xc9\\xd4\\xc5\\xd9``````````````````````````\\xe3\\x88\\x85@\\x81\\xa4\\xa3\\x88\\x96\\x99@\\x85\\xa7\\x97\\x93\\x89\\x83\\x89\\xa3\\x93\\xa8@\\x84\\x89\\xa2\\x81\\xa5\\x96\\xa6\\xa2@\\x81\\x95\\xa8@\\x83\\x93\\x81\\x89\\x94@\\xa6\\x88\\x81\\xa3\\xa2\\x96\\x85\\xa5\\x85\\x99@\\x81\\x82\\x96\\xa4\\xa3@\\xa3\\x88\\x85\\x83\\x96\\x99\\x99\\x85\\x83\\xa3\\x95\\x85\\xa2\\xa2@\\x96\\x99@\\x86\\xa4\\x95\\x83\\xa3\\x89\\x96\\x95\\x81\\x93\\x89\\xa3\\xa8@\\x96\\x86@\\xa3\\x88\\x89\\xa2@\\x97\\x99\\x96\\x87\\x99\\x81\\x94k@\\x81\\x95\\x84@\\x84\\x89\\xa2\\x83\\x93\\x81\\x89\\x94\\xa2@\\x93\\x89\\x81\\x82\\x89\\x93\\x89\\xa3\\xa8\\x86\\x96\\x99@\\x81\\x95\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x81\\x95\\x84@\\x85\\xa5\\x85\\x99\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x82\\x81\\x84@\\xa3\\x88\\x81\\xa3@\\x94\\x89\\x87\\x88\\xa3@\\x88\\x81\\x97\\x97\\x85\\x95@\\x89\\x95@\\x83\\x96\\x95\\x95\\x85\\x83\\xa3\\x89\\x96\\x95@\\xa6\\x89\\xa3\\x88k\\x82\\x85\\x86\\x96\\x99\\x85k@\\x84\\xa4\\x99\\x89\\x95\\x87k@\\x96\\x99@\\x81\\x86\\xa3\\x85\\x99@\\xa4\\xa2\\x89\\x95\\x87@\\x89\\xa3K@\\xc9@\\x88\\x81\\xa5\\x85@\\xa3\\x99\\x89\\x85\\x84@\\xa3\\x96@\\x94\\x81\\x92\\x85@\\x89\\xa3@\\xa6\\x96\\x99\\x92@\\x99\\x89\\x87\\x88\\xa3k\\x81\\x95\\x84@\\xc9@\\x81\\x94@\\x97\\x85\\x99\\xa2\\x96\\x95\\x81\\x93\\x93\\xa8@\\x97\\x99\\x85\\xa3\\xa3\\xa8@\\x83\\x96\\x95\\x86\\x89\\x84\\x85\\x95\\xa3@\\xa3\\x88\\x81\\xa3@\\x89\\xa3@\\x84\\x96\\x85\\xa2k@\\x82\\xa4\\xa3@\\x85\\xa5\\x85\\x99\\xa8\\x82\\x96\\x84\\xa8@\\x94\\x81\\x92\\x85\\xa2\\x94\\x89\\xa2\\xa3\\x81\\x92\\x85\\xa2k@\\xa2\\x96@\\x89\\x86@\\xa8\\x96\\xa4@\\xa4\\xa2\\x85@\\x89\\xa3k@\\xa8\\x96\\xa4@\\x84\\x96@\\xa2\\x96@\\x81\\xa3@\\xa8\\x96\\xa4\\x99@\\x96\\xa6\\x95@\\x99\\x89\\xa2\\x92K@\\xe2\\x89\\x95\\x83\\x85\\x99\\x85\\x93\\xa8@\\xa8\\x96\\xa4\\x99\\xa2k\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5K@\\xe3\\x96\\x94\\x89\\x81\\x92@'", "lrecl": 80, "text": " \"Kenneth E Tomiak\"<CBT_Ken@KTomiak.biz>U.S.A. CC: ANYNODE /KTOMIAK   K. Tomiak\n                     STANDARD GLOBAL DISCLAIMER--------------------------The aut\nhor explicitly disavows any claim whatsoever about thecorrectness or functionali\nty of this program, and disclaims liabilityfor anything and everything bad that\nmight happen in connection with,before, during, or after using it. I have tried\nto make it work right,and I am personally pretty confident that it does, but eve\nrybody makesmistakes, so if you use it, you do so at your own risk. Sincerely yo\nurs,Kenneth E. Tomiak\n"}, "file": {"VENDOR.GENIE.WISHLIST": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27945, "DS1LRECL": 81, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12304, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3000, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "180144", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x002'", "DS1LSTAR": "b'\\x00\\xe3\\x03'", "DS1TRBAL": "b';\\xc4'"}, "COPYR2": {"deb": "b'\\x05\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x90\\x00\\x04z\\xcb\\xc8'", "extents": ["b'\\x05\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x90\\x00\\x04z\\xcb\\xc8'", "b'X}Ch\\x00\\x00\\x0b\\xa8\\x00\\x05\\x0b\\xb7\\x00\\x0e\\x00\\xeb'", "b'X}Ch\\x00\\x00\\x08M\\x00\\x03\\x08N\\x00\\x02\\x00\\x0f'", "b'X}Ch\\x00\\x00\\x06W\\x00\\r\\x06[\\x00\\x02\\x002'", "b'X}Ch\\x00\\x00\\x07\\x9d\\x00\\x00\\x07\\xa0\\x00\\x04\\x002'", "b'X}Ch\\x00\\x00\\x07\\xa0\\x00\\x05\\x07\\xa3\\x00\\t\\x002'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"JCLR": {"ttr": 57099, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x14O\\x11@\\x00#\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-24T11:40:55", "lines": 35, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR\nKJOB EXEC DD OUTPUT JCLLIB SET IF ELSE ENDIF JECL INCLUDE\nKPROC PEND\nTz/OS MVS JCL Reference\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180524-114055\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nBiea2b6b1.pdf: SA22-7597-16\nBz/OS MVS JCL Reference\nN\nNJob Control Language\nN--------------------\nNA form of scripting language that asks the operating system\nNto process a sequence (one or more steps) of commands. The\nNbasic trinity of statements are JOB, EXEC, and DD.\nN\nNThe JOB statement identifies the activity.\nN\nNThe EXEC step identify the program to be executed using\nNthe PGM= keyword. The PARM= keyword is used to pass parameters\nNto the program.\nN\nNThe DD statement maps file descriptors (DDNAME) to files (DSNAME).\nNSome platforms require the use of parameters to map file names\nNto their file descriptor or hardcode file names in the program.\nNThe DD statement serves this function with the advantage of\nNkeeping the mapping of file name external to the command.\nN\nMOther statements exist and are shown in their respective chapters.\nM\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR01": {"ttr": 49669, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x13\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x8f\\x14Q\\x00\\x1c\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-18T14:51:13", "lines": 28, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR01\nKPSFC08 PSF aps\nTJCL Reference\nT-Chapter 1. Job Control Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-145113\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 1. Job Control Statements\nN---------------------------------\nNThis chapter lists all but one of the statements in the\nNMVS Job Control Language (JCL), and all of the Job Entry Control\nNLanguage (JECL) statements for the JES2 and JES3 subsystems,\nNtogether with the purpose of each statement. Later chapters\nNdescribe each statement in detail.\nM\nMPRINTDEV\nM--------\nMThe PRINTDEV JCL statement, for use by the person starting the\nMPrint Services Facility (PSF), is documented in manual:\nMS550-0427-00 Print Services Facility for z/OS - Customization\nMVersion 4, Release 1.0.\nI\nISee WISH TOPIC PSFC for the PRINTDEV JCL statement.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0101": {"ttr": 49671, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x009\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x8f\\x14R\\x00J\\x00H\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-18T14:52:39", "lines": 74, "newlines": 72, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0101\nKPRINTDEV\nTJCL Reference\nT-Chapter 1.\nT-JCL Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-145239\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 1. Job Control Statements\nN---------------------------------\nIJCL Statements\nI--------------\nNThis chapter lists all but one of the statements in the MVS Job Control\nNLanguage (JCL), and all of the Job Entry Control Language (JECL)\nNstatements for the JES2 and JES3 subsystems, together with the purpose\nNof each statement. Later chapters describe each statement in detail.\nN\nD// command\nD// COMMAND\nD//* comment\nD// CNTL\nD// DD\nD/* (Delimiter)\nD// ENDCNTL\nD// EXEC\nD// IF .. THEN\nD// ELSE\nD// ENDIF\nD// INCLUDE\nD// JCLLIB\nD// JOB\nD// (Null)\nD// OUTPUT\nD// PEND\nD// PRINTDEV  *See Kenneth Tomiak remark below.\nD// PROC\nD// SET\nD// XMIT\nN\nMKenneth Tomiak remark:\nMA small extract from the PSF Customization manual follows.\nI\nIPRINTDEV\nI--------\nIThe PRINTDEV JCL statement, for use by the Print Services Facility, is\nIdocumented in the manual PSF for z/OS: Customization. See:\nIS550-0427-00 Print Services Facility for z/OS - Customization\nIVersion 4, Release 1.0.\nN\nD//PR1     CNTL *                       /* A channel attached printer */\nD//PR1 PRINTDEV BUFNO=1,              /* NUMBER OF WRITE DATA BUFFERS */\nD//             CHARS=60D8,                    /* DEVICE DEFAULT FONT */\nD//             DATACK=UNBLOCK,                /* UNBLOCK DATA CHECKS */\nD//             DSHDR=*.DSHDR,           /* DATA SET HEADER SEPARATOR */\nD//             FDEFDD=*.FDEF01,                /* FORMDEF LIBRARY DD */\nD//             FONTDD=*.FONT01,           /* DEFAULT FONT LIBRARY DD */\nD//             FONTPATH=*.DOF1,       /* DATA OBJECT FONT LIBRARY DD */\nD//             FORMDEF=A10110,             /* DEVICE FORMDEF DEFAULT */\nD//             JOBHRD=*.JOBHD,        /* JOB HEADER SEPARATOR OUTPUT */\nD//             JOBTRLR=*.JOBTL,      /* JOB TRAILER SEPARATOR OUTPUT */\nD//             MESSAGE=*.MSGDS,           /* MESSAGE DATA SET OUTPUT */\nD//             OVLYDD=*.OLAY01,        /* DEFAULT OVERLAY LIBRARY DD */\nD//             PAGEDEF=A08682,             /* DEVICE PAGEDEF DEFAULT */\nD//             PDEFDD=*.PDEF01,                /* PAGEDEF LIBRARY DD */\nD//             PIMSG=(YES,16),       /* ACCUMULATE DATA SET MESSAGES */\nD//             PSEGDD=*.PSEG01,        /* DEFAULT SEGMENT LIBRARY DD */\nD//             SETUP=FORMS,                         /* SETUP MESSAGE */\nD//             TRACE=YES                     /* BUILD INTERNAL TRACE */\nD//PR1  ENDCNTL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0102": {"ttr": 49673, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x8f\\x14S\\x007\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-18T14:53:35", "lines": 55, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0102\nTJCL Reference\nT-Chapter 1.\nT-JECL Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-145335\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 1. Job Control Statements\nN---------------------------------\nNJECL Statements\nN---------------\nIInternal Reader (Chapter 27)\nI----------------------------\nD/*DEL\nD/*EOF\nD/*PURGE\nD/*SCAN\nN\nIJES2\nI----\nD/*$command\nD/*JOBPARM\nD/*MESSAGE\nD/*NETACCT\nD/*NOTIFY\nD/*OUTPUT\nD/*PRIORITY\nD/*ROUTE\nD/*SETUP\nD/*SIGNOFF\nD/*SIGNON\nD/*XEQ\nD/*XMIT\nN\nIJES3\nI----\nD//**command-verb\nD//*DATASET\nD//*ENDDATASET\nD//*ENDPROCESS\nD//*FORMAT\nD//*MAIN\nD//*NET\nD//*NETACCT\nD//*OPERATOR\nD//**PAUSE\nD//*PROCESS\nD//*ROUTE\nD/*SIGNOFF\nD/*SIGNON\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR02": {"ttr": 49675, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x8f\\x14U\\x00\\x1c\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-18T14:55:41", "lines": 28, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR02\nTJCL Reference\nT-Chapter 2. Job Control Tasks\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-145541\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 2. Job Control Tasks\nN----------------------------\nNFor your program to execute on the computer and perform the work you\nNdesigned it to do, your program must be processed by your operating\nNsystem.\nN\nNYour operating system consists of an MVS base control program (BCP)\nNwith a job entry subsystem (JES2 or JES3) and DFSMSdfp installed\nNwith it.\nN\nNFor the operating system to process a program, programmers must\nNperform certain job control tasks. These tasks are performed\nNthrough the job control statements, which consist of:\nN\nN-> JCL statements\nN-> JES2 control statements\nN-> JES3 control statements\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0201": {"ttr": 49679, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x11\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\\x03\\x00\\x1e\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:03:11", "lines": 30, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0201\nTJCL Reference\nT-Chapter 2.\nT-Entering Jobs\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-150311\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 2. Job Control Tasks\nN----------------------------\nNEntering Jobs\nN-------------\nNJob Steps\nN---------\nNYou enter a program into the operating system as a job step. A job\nNstep consists of the job control statements that request and control\nNexecution of a program and request the resources needed to run the\nNprogram. A job step is identified by an EXEC statement. The job step\nNcan also contain data needed by the program. The operating system\nNdistinguishes job control statements from data by the contents of\nNthe records.\nN\nNJobs\nN----\nNA job is a collection of related job steps. A job is identified by\nNa JOB statement.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0202": {"ttr": 49677, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\\x02\\x00\\x15\\x00\\x15\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:02:45", "lines": 21, "newlines": 21, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0202\nTJCL Reference\nT-Chapter 2.\nT-Processing Jobs\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-150245\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 2. Job Control Tasks\nN----------------------------\nNProcessing Jobs\nN---------------\nNThe operating system performs many job control tasks automatically.\nNYou can influence the way your job is processed by the JCL and JES2\nNor JES3 parameters you code. For example, the job entry subsystem\nNselects jobs for execution, but you can speed up or delay selection\nNof your job by the parameters you code.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0203": {"ttr": 50447, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x18\\x13\\x8f\\x01\\x18\\x14\\x0f\\x14C\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-20T14:43:41", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0203\nTJCL Reference\nT-Chapter 2.\nT-Requesting Resources\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-144341\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 2. Job Control Tasks\nN----------------------------\nNRequesting Resources\nN--------------------\nNData Set Resources\nN------------------\nTo execute a program, you must request the data sets needed to supply\nNdata to the program and to receive output records from the program.\nN\nNSysout Data Set Resources\nN-------------------------\nNA sysout data set is a system-handled output data set. This data set\nNis placed temporarily on direct access storage. Later, at the\nNconvenience of the system, the system prints it, punches it, or sends\nNit to a specified location. Because sysout data sets are processed\nNby the system, the programmer can specify many parameters to control\nNthat processing.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR03": {"ttr": 49681, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x8f\\x15\\t\\x00\\x11\\x00I\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-18T15:09:08", "lines": 17, "newlines": 73, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR03\nTJCL Reference\nT-Chapter 3. Format of Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-150908\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 3. Format of Statements\nN-------------------------------\nNFormat of Statements\nN--------------------\nNThis chapter describes the fields in JCL, JES2, and JES3 statements.\nNIt ends with the conventions for continuing statements.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0301": {"ttr": 49683, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\\x10\\x00\\x19\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:10:08", "lines": 25, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0301\nTJCL Reference\nT-Chapter 3.\nT-JCL Statement Fields\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-151008\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 3. Format of Statements\nN-------------------------------\nNFormat of Statements\nN--------------------\nNJCL Statement Fields\nN--------------------\nNEach JCL statement is logically divided into the following five fields:\nN\nN-> Identifier field\nN-> Name field\nN-> Operation field\nN-> Parameter, or operand field\nN-> Comments field\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0302": {"ttr": 49921, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\\x13\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:13:15", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0302\nTJCL Reference\nT-Chapter 3.\nT-JES2 Control Statement Fields\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-151315\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 3. Format of Statements\nN-------------------------------\nNFormat of Statements\nN--------------------\nNJES2 Control Statement Fields\nN-----------------------------\nNThe rules for coding JES2 control statements are the same as the rules\nNfor JCL statements, with the following additions:\nN\nN-> Columns 1 and 2 always contain the characters /*. Columns 73-80\nN   are ignored by z/OS and are typically used for sequence numbers.\nN\nN-> Do not code comments on any JES2 statements. Where comments are\nN   needed, code a JCL comment statement.\nN\nN-> If you code the same parameter on the same statement more than\nN   once, JES2 uses the value in the last parameter.\nN\nNWhen coding a JES2 control statement more than once, be aware of the\nNfollowing JES2 actions:\nN\nN-> If the same parameter appears on more than one statement, JES2\nN   uses the value coded on the last statement.\nN\nN-> If the statements contain different parameters, JES2 uses all\nN   parameters combined.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0303": {"ttr": 49923, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\\x16\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:16:38", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0303\nTJCL Reference\nT-Chapter 3.\nT-JES3 Control Statement Fields\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-151638\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 3. Format of Statements\nN-------------------------------\nNFormat of Statements\nN--------------------\nNJES3 Control Statement Fields\nN-----------------------------\nNThe rules for coding JES3 control statements are the same as the rules\nNfor JCL statements, with the following additions:\nN\nN-> Columns 1, 2, and 3 generally contain the characters //*\nN   (slash-slash-asterisk). Some JES3 control statements may contain,\nN   and certain other JES3 control statements must contain only a\nN   single slash-asterisk (/*) in columns 1 and 2.\nN\nN-> Columns 3 and 4 must not be blank.\nN\nN-> To code a comment on a JES3 control statement, code a blank after\nN   the control statement, and end the comment before column 72.\nN   Columns 73-80 are ignored by z/OS and are typically used for\nN   sequence numbers.\nN\nM   Sequence numbers were relevant in the days of punched cards.\nM   Nowadays, they can help track changes via columns 79 and 80.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0304": {"ttr": 49925, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\\x17\\x00=\\x00=\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:17:48", "lines": 61, "newlines": 61, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0304\nTJCL Reference\nT-Chapter 3.\nT-Continuation\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-151748\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 3. Format of Statements\nN-------------------------------\nNFormat of Statements\nN--------------------\nNContinuation\nN------------\nNIf you break after a parameter just go onto the next card.\nNDo try to break after a parameter to avoid using column 72.\nN\nN//GOOD      DD DISP=(NEW,DELETE),DSN=&SYSUID..LEVEL2.GROUP3,\nN//             UNIT=SYSALLDA,SPACE=(TRK,(80,15)),\nN//             DCB=(RECFM=FB,BLKSIZE=0,LRECL=120)\nI\nIContinuing the difficult way:\nN\nN//POOR      DD DISP=(NEW,PASS),DSNAME=&SYSUID..LEVEL2.GROUP3,UNIT=3390,\nN//             SPACE=(TRK,(80,15)),DCB=(RECFM=FB,\nN//             BLKSIZE=0,\nN//             LRECL=120)\nN\nNContinuing Parameter Fields Enclosed in Apostrophes\nN---------------------------------------------------\nN1. Extend the parameter to column 71. Do not code an apostrophe in\nN   column 71 of a JCL statement that is continued. The system\nN   interprets the apostrophe in column 71 as the final character in\nN   the statement and ignores the continuation.\nN\nN2. Code // in columns 1 and 2 of the following statement.\nN\nN3. Continue the parameter in column 16 of the following statement\nN   even if this splits the parameter. Trailing blanks or commas within\nN   the apostrophes do not indicate a continued statement; the system\nN   treats them as part of the parameter.\nN\nNThe following example shows the specification of a long file name in\nNthe PARM field. The plus sign (+) in column 72 is ignored. It is used\nNto draw attention to where column 72 is.\nN\nN//*\nI//ST01#02 EXEC PGM=IEFBR14,PARM=(PARM1,'/DIR1/DIR2/lowercase-directory/+\nI//             DIR3/DIR4/DIR5/DIR6/DIR7/DIR8/DIR9/DIR10/DIR11/DIR12/Dir+\nI//             13/file')\nN//*\nN//ST02#02 EXEC PGM=IEFBR14,PARM=(PARM1,'/DIR1/DIR2/lowercase-directory/\nN//             DIR3/DIR4/DIR5/DIR6/DIR7/DIR8/DIR9/DIR10/DIR11/DIR12/Dir\nN//             13/file')\nM\nMThe length of the PARM subparameter passed must NOT exceed\nN100 characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR04": {"ttr": 49927, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x8f\\x15\\x19\\x00\"\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-18T15:19:11", "lines": 34, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR04\nTJCL Reference\nT-Chapter 4. Syntax of Parameters\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-151911\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 4. Syntax of Parameters\nN-------------------------------\nNSyntax of Parameters\nN--------------------\nNSyntax rules\nN------------\nNSyntax rules define how to code the fields and parameters on job\nNcontrol statements. The syntax indicates:\nN\nN->What the system requires.\nN\nN->What is optional for the specific purpose or process you are\nN  requesting.\nN\nN->How the parameters are to appear.\nI\nIThe syntax rules apply to all job control statements: JCL\nIstatements, JES2 control statements, and JES3 control statements.\nN\nNBackward References\nN-------------------\nNMany parameters in job control statements can use a backward\nNreference to fill in information.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0401": {"ttr": 49935, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00R\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x9f\\x07#\\x009\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-19T07:23:52", "lines": 57, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0401\nTJCL Reference\nT-Chapter 4.\nT-Notation Used to Show Syntax\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180519-072352\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 4. Syntax of Parameters\nN-------------------------------\nNNotation Used to Show Syntax\nN----------------------------\nNThe syntax of the job control statements and of their parameters\nNappear in the chapters that describe the statements. These conventions\nNapply fully to what you see in the manual and partially to what GENIE\nN can show you on a 3270 display.\nN\nN-> Uppercase letters, words, and characters: Code uppercase letters,\nN   words, and the following characters exactly as they appear in the\nN   syntax.\nN\nN-> Lowercase letters, words, and symbols: Lowercase letters, words,\nN   and symbols in the syntax represent variables. Substitute specific\nN   information for them.\nN\nN-> | (vertical bar): A vertical bar indicates an exclusive OR. Never\nN   code | on a control statement. It is used between choices within\nN   braces or brackets; it indicates that you code only one of the\nN   items within the braces or brackets.\nN\nN-> { } (braces): Braces surround required, related items and indicate\nN   that you must code one of the enclosed items. Never code { or } on\nN   a control statement.\nN\nN-> \u00dd \u00a8 (brackets): Brackets surround an optional item or items and\nN   indicate that you can code one or none of the enclosed items.\nN   Never code \u00dd or \u00a8 on a control statement.\nN\nN-> { , } or \u00dd , \u00a8: One of the items in braces or brackets can be a\nN   comma. Code the comma when you do not code any of the other items\nN   in the braces or brackets but you are coding a following part of\nN   the parameter.\nN\nN-> __ (underline): An underline indicates the default that the system\nN   uses when you do not code a subparameter.\nN\nN-> ... (ellipsis): An ellipsis follows an item that you can code more\nN   than once. Never code ... on a control statement.\nN\nN-> .. (two consecutive periods): Two consecutive periods indicate\nN   that a parameter consists of a symbolic parameter followed by a\nN   period and then by other code, so that only part of the parameter\nN   is variable.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0402": {"ttr": 49939, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x9f\\x07F\\x00)\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-19T07:46:16", "lines": 41, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0402\nTJCL Reference\nT-Chapter 4.\nT-Character Sets\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180519-074616\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 4. Syntax of Parameters\nN-------------------------------\nNCharacter Sets\nN--------------\nNCharacter Set Contents           Remarks\nN------------- ------------------ ----------------------------------\nNAlphanumeric  Alphabetic         Capital A through Z\nN              Numeric            0 through 9\nN------------- ------------------ ----------------------------------\nNNational      \"At\" sign          @ X'7C'\nN              Dollar sign        $ X'5B'\nN              Pound sign         # X'7B'\nN------------- ------------------ ----------------------------------\nNSpecial       Comma              , X'6B'\nN              Period             . X'4B'\nN              Slash              / X'61'\nN              Apostrophe         ' X'7D'\nN              Left parenthesis   ( X'4D'\nN              Right parenthesis  ) X'5D'\nN              Asterisk           * X'5C'\nN              Ampersand          & X'50'\nN              Plus sign          + X'4E'\nN              Hyphen             - X'60'\nN              Equal sign         = X'7E'\nN              Blank                C'40'\nN------------- ------------------ ----------------------------------\nNEBCDIC text   EBCDIC printable   Characters that can be represented\nN              character set      by hexadecimal X'40' through X'FE'\nN------------- ------------------ ----------------------------------\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0403": {"ttr": 49937, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00(\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x9f\\x07E\\x00\\x14\\x004\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-19T07:45:28", "lines": 20, "newlines": 52, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0403\nTJCL Reference\nT-Chapter 4.\nT-Syntax Notes\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180519-074528\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 4. Syntax of Parameters\nN-------------------------------\nNSyntax Notes\nN------------\nNJCL positional parameters and keywords can have at most two levels of\nNsubparameters. Therefore, when parentheses are used to delimit a list\nNof subparameters, a maximum of two levels of parenthesis nesting is\nNpermitted. This restriction applies even if the parentheses are empty.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0404": {"ttr": 49941, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x13\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x9f\\x07W\\x00R\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-19T07:57:13", "lines": 82, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0404\nTJCL Reference\nT-Chapter 4.\nT-Backward References\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180519-075713\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 4. Syntax of Parameters\nN-------------------------------\nNBackward References\nN-------------------\nNMany parameters in job control statements can use a backward reference\nNto fill in information. A backward reference is a reference to an\nNearlier statement in the job or in a cataloged or in-stream procedure\nNcalled by a job step. A backward reference is in the form:\nN\nN-> *.name or *.ddname where name or ddname is the name field of the\nN   referenced statement.\nN\nN-> *.stepname.name or *.stepname.ddname where the referenced statement,\nN   name or ddname, is in an earlier step, stepname, in the same job.\nN\nN-> *.stepname.procstepname.name or *.stepname.procstepname.ddname where\nN   this job step or an earlier job step, stepname, calls a procedure;\nN   the procedure contains procedure step, procstepname, which contains\nN   the referenced statement, name or ddname.\nN\nNIf stepname is specified without a procstepname, it identifies an EXEC\nNstatement that contains a PGM parameter, not one that invokes a\nNprocedure. Similarly, if stepname.procstepname is coded, procstepname\nNidentifies an EXEC statement containing the PGM parameter in the\nNprocedure invoked by stepname.\nN\nNThe backward reference lets you copy previously coded information or\nNrefer to an earlier statement. The following parameters can make\nNbackward references:\nN\nN-> DD CNTL refers to earlier CNTL statement.\nN\nN-> DD DCB refers to earlier DD statement to copy its DCB parameter.\nN\nN-> DD DSNAME refers to earlier DD statement to copy its DSNAME\nN   parameter, whether or not the data set is a partitioned data set,\nN   and whether or not the data set is a temporary data set.\nN\nN-> DD OUTPUT refers to earlier OUTPUT JCL statement.\nN\nN-> DD REFDD refers to earlier DD statement to copy its data set\nN   attributes.\nN\nN-> DD VOLUME=REF refers to earlier DD statement to use the same\nN   volume(s). The LABEL label type subparameter is also copied from\nN   the referenced DD statement.\nN\nN-> EXEC PGM refers to an earlier DD statement that defines the program\nN   to be executed as a member of a partitioned data set.\nN\nNThe following statements cannot be referenced:\nN\nN-> DD * statement in DCB, DSNAME, or VOLUME parameter.\nN\nN-> DD DATA statement in DCB, DSNAME, or VOLUME parameter.\nN\nN-> DD DUMMY statement in VOLUME or UNIT parameter. The referring DD\nN   statement acquires a dummy status.\nN\nN-> DD DYNAM statement.\nN\nN-> DD statement containing FREE=CLOSE in VOLUME or UNIT parameters.\nN\nN-> Nested procedure statements.\nN\nN-> Sysout DD statement.\nN\nN-> DD statement that is the target of a DDNAME= reference.\nN\nN-> A DD statement containing a PATH parameter.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0411": {"ttr": 49931, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15#\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:23:15", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0411\nTJCL Reference\nT-Chapter 4.\nT-Example 1: Backward References\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180518-152315\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 4. Syntax of Parameters\nN-------------------------------\nNExample 1: Backward References\nN------------------------------\nD//jobname  JOB ...\nD//* Dataset: &SYSUID..JCL.CNTL(jobname)\nD//ST01#01 EXEC ...\nD//DD1       DD disp=shr,DSN=&SYSUID..REPORT\nI..\nD//DD4       DD disp=shr,DSN=*.DD1\nD//*\nD//* End of Job jobname.\nD//\nN\nNThe referring and referenced DD statements are in the same step.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0412": {"ttr": 49929, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15\"\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:22:14", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0412\nTz/OS JCL Reference -Syntax of Parameters\nT-Example 2: Backward References\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNSyntax of Parameters\nN====================\nNExample 2: Backward References\nN------------------------------\nD//jobname  JOB ...\nD//* Dataset: &SYSUID..JCL.CNTL(jobname)\nD//ST01#02 EXEC ...\nD//DDA       DD disp=shr,DSN=D58.POK.PUBS01\nI..\nD//ST02#02 EXEC ...\nD//DDB       DD disp=old,DSN=*.ST01#02.DDA\nD//*\nD//* End of Job jobname.\nD//\nN\nNThe referring and referenced DD statements are in different\nNsteps in the same job.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0413": {"ttr": 49933, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x8f\\x01\\x18\\x13\\x8f\\x15$\\x004\\x004\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-18T00:00:00", "modifydate": "2018-05-18T15:24:09", "lines": 52, "newlines": 52, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0413\nTz/OS JCL Reference -Syntax of Parameters\nT-Example 3: Backward References\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNSyntax of Parameters\nN====================\nNExample 3: Backward References\nN------------------------------\nICataloged procedure proc@id contains:\nN\nI//proc@id PROC\nI//* Dataset: &SYSUID..JCL.PROCLIB(proc@id)\nI//PS01#03 EXEC ...\nI..\nI//PS02#03 EXEC ...\nI//DS1       DD disp=shr,DSN=DATA1\nI//PS03#03 EXEC ...\nI//DS2       DD disp=shr,DSN=DATA2\nI.\nI//*\nI//* End of Proc proc@id.\nI//*       PEND\nN\nNThe job contains:\nN\nD//JOBNAME  JOB ...\nD//* Dataset: &SYSUID..JCL.CNTL(jobname)\nD//ST01#02 EXEC PROC=proc@id\nD//REFBACK1  DD DSN=*.ST01#02.PS03#03.DS2\nD//ST02#02 EXEC ...\nD//REFBACK2  DD DSN=*.ST01#02.PS02#03.DS1\nD.\nD//*\nD//* End of Job jobname.\nD//\nN\nN->DD statement REFBACK1 in the calling step refers to DD statement\nN  DS2 in procedure step PS03#03.\nN\nN->DD statement REFBACK2 in a step after the calling step refers to\nN  DD statement DS1 in procedure step PS02#03.\nN\nI->Note that the entire procedure is processed when the calling\nI  EXEC statement is processed; therefore, all DD statements\nI  in the procedure are earlier than all DD statements in the\nI  calling step.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR05": {"ttr": 49943, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00I\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x9f\\x08&\\x00\\x10\\x00R\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-19T08:26:49", "lines": 16, "newlines": 82, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR05\nTJCL Reference\nT-Chapter 5. Procedures and Symbols\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180519-082649\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNThis chapter describes how to use procedures, including nested\nNprocedures. It also explains how to use JCL symbols and system\nNsymbols.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0510": {"ttr": 50177, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x13\\x01\\x18\\x13\\x9f\\x01\\x18\\x14\\x0f\\x05 \\x00e\\x00W\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2018-05-19T00:00:00", "modifydate": "2018-05-20T05:20:13", "lines": 101, "newlines": 87, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0510\nTJCL Reference\nT-Chapter 5.\nT-Cataloged and in-stream procedures\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052013\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNCataloged and in-stream procedures\nN----------------------------------\nNIn-stream procedures\nN--------------------\nNWhen you place a procedure in the job input stream, it is\nNcalled an in-stream procedure.\nN\nNAn in-stream procedure must begin with a PROC statement, end with a\nNPEND statement, and include only the following other JCL statements:\nN\nN-> CNTL\nN-> comment\nN-> DD\nN-> ENDCNTL\nN-> EXEC\nN-> IF/THEN/ELSE/ENDIF\nN-> INCLUDE\nN-> OUTPUT\nN-> SET\nN\nN//jobname  JOB\nN//* Dataset: &SYSUID..JCL.CNTL(jobname)\nN//proc@id PROC symbol='default-value',...\nN//* Dataset: INSTREAM\nN//PS01#01 EXEC PGM=....\nN//SYSPRINT  DD SYSOUT=*\nN//*\nN//* End of Proc proc@id.\nN//proc@id PEND\nN//*\nN//ST01#01 EXEC PROC=proc@id,symbol='override value'\nN//PS01#01.SYSPRINT DD DISP=SHR,DSN=&SYSUID..REPORTS(+1)\nN//*\nN//* End of Job jobname.\nN//\nN\nNCataloged Procedures\nN--------------------\nMIBM-ese:\nNA procedure that you catalog in a library is called a cataloged\nNprocedure.\nN\nMTomiak-ese:\nMA procedure stored as a member in a system defined PROCLIB or\nMpulled from your JCLLIB definition.\nN\nNOptionally, a cataloged procedure can begin with a PROC statement and\nNend with a PEND statement. If coded, PROC must be the first statement\nNin the procedure.\nN\nNA cataloged procedure may consist of these JCL statements:\nN\nN-> CNTL\nN-> comment\nN-> DD\nN-> ENDCNTL\nN-> EXEC\nN-> IF/THEN/ELSE/ENDIF\nN-> INCLUDE\nN-> OUTPUT\nN-> SET\nN\nNHere is the same instream procedure stored in\nI&SYSUID..JCL.PROCLIB(proc@id):\nN\nN//proc@id PROC symbol='default-value',...\nN//* Dataset: &SYSUID..JCL.PROCLIB(proc@id)\nN//PS01#01 EXEC PGM=....\nN//SYSPRINT  DD SYSOUT=*\nN//*\nN//* End of Proc proc@id.\nN//*       PEND\nN\nNUsing a Procedure\nN-----------------\nNAnd the JCL to invoke it:\nN//jobname  JOB\nN//* Dataset: &SYSUID..JCL.CNTL(jobname)\nN//PROCS JCLLIB ORDER=(&SYSUID..JCL.PROCLIB)\nN//ST01#01 EXEC PROC=proc@id,symbol='override value'\nN//PS01#01.SYSPRINT DD DISP=SHR,DSN=&SYSUID..REPORTS(+1)\nN//*\nN//* End of Job jobname.\nN\nNTesting a Procedure\nN-------------------\nNCode it as an instream procedure or store it as a JCLLIB member.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0520": {"ttr": 50179, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00%\\x01\\x18\\x13\\x9f\\x01\\x18\\x14\\x0f\\x05 \\x00\\x15\\x00\\\\\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-19T00:00:00", "modifydate": "2018-05-20T05:20:25", "lines": 21, "newlines": 92, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0520\nTJCL Reference\nT-Chapter 5.\nT-Cataloged and in-stream procedures\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052025\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNModifying Procedures\nN--------------------\nNThere are two ways you can modify a procedure:\nN\nN-> Using system symbols (started tasks only) and JCL symbols\nN\nN-> Using overrides.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0521": {"ttr": 50181, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05 \\x000\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:20:32", "lines": 48, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0521\nTJCL Reference\nT-Chapter 5.\nT-Example 1: Invoke a procedure\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052032\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNModifying Procedures\nN--------------------\nNExamples of procedures\nN----------------------\nNExample 1: Invoke a procedure\nN-----------------------------\nNIn the input stream:\nN\nD//jobname  JOB ACCT23,?G. HILL?\nD//* Dataset: &SYSUID..JCL.CNTL(jobname)\nD//ST01#01 EXEC PROC=proc@id\nD//PS01#01.INDS DD *\nI.\nI(data)\nI.\nD/*\nD//*\nD//* End of Job jobname.\nD//\nN\nNIn SYS1.PROCLIB member proc@id:\nN\nN//proc@id PROC\nN//* Dataset: &SYSUID..JCL.PROCLIB(proc@id)\nN//PS01#01 EXEC PGM=WRIT22\nN//OUTDS     DD SYSOUT=A\nN//*\nN//* End of Proc proc@id.\nN//*       PEND\nN\nNIn this example, the EXEC statement STEPA calls the cataloged\nNprocedure named REP and supplies in-stream data. The procedure\nNexecutes a program named WRIT22. The output from the program\nNwill appear in the sysout class A data set.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0522": {"ttr": 52225, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x14/\\x15B\\x00l\\x00f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-22T15:42:23", "lines": 108, "newlines": 102, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0522\nTJCL Reference\nT-Chapter 5.\nT-Example 2: Procedures and overrides (OUTPUT and DD)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180522-154223\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNModifying Procedures\nN--------------------\nNExamples of procedures\nN----------------------\nNExample 2: Procedures and overrides (OUTPUT and DD)\nN---------------------------------------------------\nMKenneth found the IBM example poorly written and offers\nMthis 'testable' alternative, though nothing was ever\nMrouted to the named destinations nor was anything ever\nMprinted to prove whether carriage control and copies\nMproduced the desired results.\nN\nNIn this JOB example the JCL statements are:\nN\nN  jobname, which is a JOB statement, identifies the job.\nD//jobname  JOB ,'H.H. MORRILL'\nN\nN  Dataset: identifies where this JCL is stored. See KTPM03.\nD//* Dataset: &SYSUID..JCL.CNTL(jobname)\nN\nN  JB1O, which is an OUTPUT JCL statement, added at the job level.\nD//JB1O  OUTPUT COPIES=2,DEST=HERE\nN\nN  An INSTREAM procedure follows:\nD//PROC@ID PROC\nD//* Dataset: INSTREAM\nD//*\nD//PS01#02 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSUT1    DD DDNAME=DSE\nD//PS1O  OUTPUT CONTROL=PROGRAM\nD//SYSPRINT  DD SYSOUT=*,OUTPUT=(*.JB1O)\nD//SYSUT2    DD SYSOUT=D,OUTPUT=*.PS1O\nD//*\nD//PS02#02 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=A\nD//SYSUT1    DD DATA\nDThis is instream data.\nD// with a JCL looking statement in it.\nDIt shows you can now put control cards in a procedure.\nD\nDHowever, you need to use DLM if you want to include\nDEOD (/*) and EOJ (//) statements.\nD/*\nD//SYSUT2    DD SYSOUT=*,DEST=NOWHERE\nD//*\nD//* End of Proc proc@id.\nD//       PEND\nN\nN  ST01#01, which is an EXEC statement, invokes the PROC.\nD//ST01#01 EXEC PROC=PROC@ID\nN\nN  PS02#02.PS2O, which is an OUTPUT JCL statement, adds to\nN  procedure step PS02#02.\nD//PS01#02.PS2O OUTPUT CONTROL=DOUBLE,COPIES=5\nN\nN  PS01#02.SYSUT2, which is a DD statement, overrides the\nN  step level OUTPUT statement used.\nD//PS01#02.SYSUT2 DD OUTPUT=*.PS2O\nN\nN  PS01#02.DSE, which is an in-stream data set, adds to procedure\nN  step PS01#02 and is referred to from SYSUT1. A silly\nN  thing to here.\nD//PS01#02.DSE DD *\nD.\nD(data)\nD.\nD/*\nN\nN  PS02#02.PS3O, which is an OUTPUT statement, adds a step level\nN  DEFAULT for routing sysout and punch to a destination.\nD//PS02#02.PS3O OUTPUT DEFAULT=YES,DEST=STL\nD//*\nD//* End of Job jobname.\nD//\nN\nNSnippet of output on the JES2 SPOOL using SDSF:\nN-----------------------------------------------\nICheck out the DEST column:\nN\nNDDNAME   StepName ProcStep DsID Owner    C Dest               Rec-Cnt\nNJESJCLIN                      1 KTOMIAK  X                         30\nNJESMSGLG JES2                 2 KTOMIAK  X LOCAL                   19\nNJESJCL   JES2                 3 KTOMIAK  X LOCAL                   47\nNJESYSMSG JES2                 4 KTOMIAK  X LOCAL                   36\nN$INTTEXT JES2                 5 KTOMIAK  A                         18\nNEVENTLOG JES2                 8 KTOMIAK  A                          6\nNSYSUT1   ST01#01  PS02#02   101 KTOMIAK  X                          6\nNSYSUT1   ST01#01  PS01#02   102 KTOMIAK  X                          3\nNSYSPRINT ST01#01  PS01#02   103 KTOMIAK  X HERE                     4\nNSYSUT2   ST01#01  PS01#02   104 KTOMIAK  D LOCAL                    3\nNSYSPRINT ST01#01  PS02#02   105 KTOMIAK  A STL                      4\nNSYSUT2   ST01#01  PS02#02   106 KTOMIAK  X NOWHERE                  6\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0523": {"ttr": 50183, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00R\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05 \\x00@\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:20:52", "lines": 64, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0523\nTJCL Reference\nT-Chapter 5.\nT-Example 3: Adding COND= and RD= and then nullify EXPDT=\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052052\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNModifying Procedures\nN--------------------\nNExamples of procedures\nN----------------------\nNExample 3: Adding COND= and RD= and then nullify EXPDT=\nN-------------------------------------------------------\nMKenneth found the IBM example verbose and suggests using\nM  IF..THEN/ELSE/ENDIF\nMinstead of COND. Plus, other than for testing, the PROC should be\nMbetter written to NOT need overrides when &SYMBOLS may be\nMused instead.\nI\nIPhysical tape is becoming a rarity and therefore the only\nIgood use for EXPDT is to get Catalog Control retention\nIfrom your Tape Management System (TMS). And that should be a\nIsystem-level default!\nN\nNBelow is the IBM example as shown in the manual.\nN\nN //JOBB JOB ACCT23, G. HILL\nN //STEPB EXEC PROC=WRIT35,COND.PSTEP3=(4,GT,PSTEP1),RD=R\nN //PSTEP1.DD1 DD VOLUME=SER=,UNIT=SYSDA,DISP=(NEW,CATLG)\nN //PSTEP1.INDS DD *\nN ..\nN (data)\nN .\nN /*\nN //PSTEP2.DD3 DD DISP=(OLD,KEEP)\nN //PSTEP3.DD5 DD DUMMY\nN //PSTEP3.DD6 DD DSNAME=A.B.C\nN //PSTEP3.DD8 DD EXPDT=\nN\nN In SYS1.PROCLIB member WRIT35:\nN\nN // PROC\nN //PSTEP1 EXEC PGM=WT1,TIME=(,50)\nN //DD1 DD DSNAME=DATA1,DISP=(NEW,DELETE),SPACE=(TRK,(10,2)),\nN // UNIT=3330,VOL=SER=1095\nN //DD2 DD DSNAME=&&WORK,UNIT=SYSDA,SPACE=(CYL,(10,1)),\nN // DISP=(,PASS)\nN //PSTEP2 EXEC PGM=WT2,TIME=(,30)\nN //DD3 DD DSNAME=*.PSTEP1.DD2,DISP=(OLD,DELETE)\nN //PSTEP3 EXEC PGM=UPDT,TIME=(,45),RD=RNC\nN //DD4 DD SYSOUT=*\nN //DD5 DD DSNAME=DATA3,UNIT=3340,DISP=OLD,\nN // VOLUME=SER=335006\nN //DD6 DD DSNAME=QOUT,UNIT=3400-5\nN //DD7 DD SYSOUT=H\nN //DD8 DD DSNAME=A.B,DISP=(NEW,CATLG,DELETE),\nN // SPACE=(TRK,(1)),EXPDT=92365,UNIT=SYSDA\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0530": {"ttr": 50185, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x007\\x01\\x18\\x13\\x9f\\x01\\x18\\x14\\x0f\\x05!\\x00\\x14\\x00T\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-19T00:00:00", "modifydate": "2018-05-20T05:21:37", "lines": 20, "newlines": 84, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0530\nTJCL Reference\nT-Chapter 5.\nT-Nested procedures\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052137\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNNested procedures\nN-----------------\nNCataloged and in-stream procedures can invoke other procedures\nN(up to 15 levels of nesting). In a procedure, an EXEC statement can\nNinvoke another procedure, which can contain an EXEC statement to\nNinvoke another procedure, and so on.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0531": {"ttr": 50187, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05\"\\x00\\x1d\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:22:33", "lines": 29, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0531\nTJCL Reference\nT-Chapter 5.\nT-Example 4: Nesting procedures\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052233\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNModifying Procedures\nN--------------------\nNExamples of procedures\nN----------------------\nNExample 4: Nesting procedures\nN-----------------------------\nNYou can nest up to 15 levels.\nM\nMKenneth asks, 'why would you?' Now think again and\nMshow some intelligence this time. KISS!\nIK = Keep\nII = It\nIS = Smartly\nIS = Simple\nI!\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0532": {"ttr": 50189, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05&\\x00\\x1d\\x00\\x15\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:26:10", "lines": 29, "newlines": 21, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0532\nTJCL Reference\nT-Chapter 5.\nT-Example 5: Nested procedures overrides\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052610\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNNested procedures\nN-----------------\nNModifying nested procedures\nN---------------------------\nNExamples of Modifying Nested Procedures\nN---------------------------------------\nNExample 5: Nested procedures overrides\nN--------------------------------------\nMSince Kenneth believes you would be an idiot to nest\nMprocedures and then further aggravate the KISS principle by\nMwanting (or worse 'needing') overrides that he has omitted\nMthe IBM example from the wishes.\nI\nIIf you look at the IBM manual and the alternative you quickly see\nIhow avoiding the PROC invocations is much easier to maintain.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0540": {"ttr": 50191, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x009\\x01\\x18\\x13\\x9f\\x01\\x18\\x14\\x0f\\x05&\\x00T\\x00P\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-05-19T00:00:00", "modifydate": "2018-05-20T05:26:39", "lines": 84, "newlines": 80, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0540\nTJCL Reference\nT-Chapter 5.\nT-Using System Symbols and JCL symbols\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052639\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNUsing System Symbols and JCL symbols\nN------------------------------------\nNSystem symbols and JCL symbols are character strings that represent\nNvariable information in JCL. They allow you to modify JCL statements\nNin a job easily. A symbol-defining string is limited to eight\nNcharacters, not including an identifying & (ampersand) character.\nN\nNWhat are System Symbols?\nN------------------------\nNSystem symbols represent values that are unique to each system. A\nNsystem replaces those symbols with its own values when it processes\nNstarted task JCL (jobs and procedures read from a procedure library)\nNand TSO logons. (A started task is a task resulting from JCL that is\nNprocessed immediately as a result of a START command.\nN\nNWhat are JCL Symbols?\nN---------------------\nNJCL symbols differ from system symbols in that you must define them in\nNstarted task JCL before you can use them in that JCL. The JCL symbols\nNthat you define are valid only for the current job. Conversely, there\nNis no need to define system symbols; they are either defined to MVS or\nNdefined by your installation, and you can use them in any set of\nNstarted task JCL.\nN\nNCoding symbols in JCL\nN---------------------\nNJCL symbols and system symbols can represent parameters,\nNsubparameters, or values in procedures or in the parameter field of\nNstatements; those that vary each time a job runs are good candidates\nNto be coded as symbols.\nN\nNDetermining equivalent JCL\nN--------------------------\nNWhen you submit JCL that specifies symbols, the system responds as if\nNyou had coded the equivalent JCL (without symbols) produced by the\nNfollowing sequence of operations:\nN\nN1. Determine the substitution texts.\nN\nN2. Substitute all symbols.\nN\nNExamples of Defining and Coding Symbols in JCL\nN----------------------------------------------\nNExample 1: Override the coded value.\nN------------------------------------\nN//jobname  JOB ...\nN//         SET OUTCLASS='*'\nN//LOCPROC PROC LOC='POK'\nN//PS01#01 EXEC PGM=WRITER,ACCT=('&SYSUID.',CBT,JCL,'2017-001')\nN//DSA       DD SYSOUT=&OUTCLASS,DEST=&LOC\nN//        PEND\nN//ST01#01 EXEC PROC=LOCPROC,LOC=NYC\nN//\nNExample 2: Nullify the &NUMBER JCL symbol.\nN------------------------------------------\nN//jobname  JOB ...\nN//         SET OUTCLASS='*'\nN//LOCPROC PROC LOC='POK',NUMBER=3350\nN//PS01#01 EXEC PGM=...\nN//PIN DD DSNAME=REPORT,DISP=(OLD,KEEP),UNIT=&NUMBER\nN//POUT DD SYSOUT=A,DEST=&LOC\nN//        PEND\nN//ST01#01 EXEC PROC=LOCPROC,NUMBER=,LOC=NYC\nN//\nN\nNUsing Symbols in Nested Procedures\nN----------------------------------\nN\nNExamples of Coding Symbols in Nested Procedures\nN-----------------------------------------------\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0541": {"ttr": 50195, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00H\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x053\\x00\\x1f\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:33:48", "lines": 31, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0541\nKIEASYM00\nTJCL Reference\nT-Chapter 5.\nT-System Symbols\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-053348\n*\n@Kenneth Tomiak\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNUsing System Symbols and JCL symbols\nN------------------------------------\nNWhat are System Symbols?\nN------------------------\nNSystem symbols represent values that are unique to each\nNsystem. A system replaces those symbols with its own values\nNwhen it processes started task JCL (jobs and procedures read\nNfrom a procedure library) and TSO logons.\nN\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* These SET statements mimic the zosname system's values on zdate.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nRsystem_symbols\nxzosname = mvsvar_sysname\nxzdate = zdate\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0542": {"ttr": 50193, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00)\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05)\\x00a\\x00_\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:29:29", "lines": 97, "newlines": 95, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0542\nTJCL Reference\nT-Chapter 5.\nT-Example 6: Using JCL symbols\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-052929\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 5. Procedures and Symbols\nN---------------------------------\nNUsing System Symbols and JCL symbols\nn------------------------------------\nNExample 6: Using JCL symbols\nN----------------------------\nMIgnoring the IBM examples, JCL Symbols may well have begun with\nMprocedures (PROC), added &SYSUID. as the only system-wide System\nMSymbol, and includes user defined Job symbols using the SET statement.\nM\nMThe bulk of the system-defined System Symbol set may only be used\nMby TSU and in *STARTED* tasks and jobs. A *STARTED* job is not the\nMjob you submit thru INTRDR. For that reason I create one unique per\nMsystem SYS1.PROCLIB(IEASYM00) member replicating the System Symbols\nMas JCL Symbols (SET).\nN\nD//jobname  JOB (),...\nD//* Dataset: hlq.JCL.CNTL(jobname)\nD//JB1S     SET HOME='LOCAL',WORK='REMOTE'\nD//PROC@ID PROC HOME='HERE',WORK='LOCAL'\nD//* Dataset: INSTREAM\nD//PS01#01 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=*,DEST=&HOME\nD//SYSUT1    DD DATA\nI...\nI(data)\nI...\nD/*\nD//SYSUT2    DD SYSOUT=*,DEST=&WORK\nD//*\nD//* End of Proc PROC@ID.\nD//        PEND\nD//*\nD//ST01#04 EXEC PROC=PROC@ID\nD//JB2S     SET HOME='ND'\nD//ST02#04 EXEC PROC=PROC@ID,HOME=&WORK\nD//ST03#04 EXEC PROC=PROC@ID\nD//JB4S     SET HOME='ND',WORK=HI\nD//ST04#04 EXEC PROC=PROC@ID,WORK=&WORK,HOME=&HOME\nN\nN->Step ST01#04 uses the defaults assigned on PROC@ID.\nN\nN->Step ST02#04 overrides the PROC JCL Symbol HOME to\nN  use the Job JCL Symbol WORK value.\nN\nN->Step ST03#04 uses the defaults assigned on PROC@ID.\nN\nN->Step ST04#04 overrides the PROC JCL Symbol WORK to HI\nN  and the PROC JCL Symbol HOME to ND.\nI\nIThe drilling ever deeper screen snippets below show how the\nIvalue of the JCL Symbols used on the DEST parameter were\nIresolved.\nI\nNJOBNAME  JobID    Owner    Prty Queue      C\nNKTOMIAKJ JOB07846 KTOMIAK     1 PRINT      A\nN\nINotice that HERE has 8 records.\nN\nNJOBNAME  JobID    Owner    Prty C Forms    Dest                 Rec-Cnt\nNKTOMIAKJ JOB07846 KTOMIAK   144 X 0        LOCAL                    212\nNKTOMIAKJ JOB07846 KTOMIAK   144 X 0        HERE                       8\nNKTOMIAKJ JOB07846 KTOMIAK   144 X 0        REMOTE                     4\nNKTOMIAKJ JOB07846 KTOMIAK   144 X 0        ND                         4\nNKTOMIAKJ JOB07846 KTOMIAK   144 X 0        HI                         3\nN\nINotice that HERE now appears twice with 4 records in each.\nN\nNDDNAME   StepName ProcStep DsID Owner    C Dest               Rec-Cnt\nNJESJCLIN                      1 KTOMIAK  X                         53\nNJESMSGLG JES2                 2 KTOMIAK  X LOCAL                   21\nNJESJCL   JES2                 3 KTOMIAK  X LOCAL                  113\nNJESYSMSG JES2                 4 KTOMIAK  X LOCAL                   69\nN$INTTEXT JES2                 5 KTOMIAK  A                         29\nNEVENTLOG JES2                 8 KTOMIAK  A                         10\nNSYSPRINT ST01#04  PS01#01   102 KTOMIAK  X HERE                     4\nNSYSUT2   ST01#04  PS01#01   103 KTOMIAK  X LOCAL                    3\nNSYSPRINT ST02#04  PS01#01   104 KTOMIAK  X REMOTE                   4\nNSYSUT2   ST02#04  PS01#01   105 KTOMIAK  X LOCAL                    3\nNSYSPRINT ST03#04  PS01#01   106 KTOMIAK  X HERE                     4\nNSYSUT2   ST03#04  PS01#01   107 KTOMIAK  X LOCAL                    3\nNSYSUT1   ST04#04  PS01#01   101 KTOMIAK  X                          3\nNSYSPRINT ST04#04  PS01#01   108 KTOMIAK  X ND                       4\nNSYSUT2   ST04#04  PS01#01   109 KTOMIAK  X HI                       3\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR06": {"ttr": 50433, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x058\\x00B\\x00?\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:38:18", "lines": 66, "newlines": 63, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR06\nTJCL Reference\nT-Chapter 6. Job Control Statements on the Output Listing\nTz/OS JCL Reference -Job Control Statements on the Output Listing\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-053818\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 6. Job Control Statements on the Output Listing\nN-------------------------------------------------------\nNUse the JOB statement MSGLEVEL parameter to request that job control\nNstatements be printed in the job log output listing. Code\nN  MSGLEVEL=(1,1)\nNto receive the maximum amount of information, in the following order:\nN\nN->JES messages and job statistics.\nN\nN->All job control statements in the input stream and procedures.\nN\nN->Messages about job control statements.\nN\nN->JES and operator messages about the job's processing: allocation of\nN  devices and volumes, execution and termination of job steps and the\nN  job, and disposition of data sets.\nN\nNJob Control Statements in the Input Stream\nN------------------------------------------\nN1-3 Type of Statement\nN=== =================================================================\nN//  JCL statement\nN//* Job control statement that is not a JCL comment statement but one\nN    that the system considers to contain only comments\nN//* JES2 statement\nN//* JES3 statement\nN/*  Certain JES3 control statements\nN//* JCL comment statement\nN\nNCataloged Procedure Statements\nN------------------------------\nN1-3 Type of Statement\nN=== =================================================================\nNXX DD statement that was not overridden and all other JCL statements,\nN      except the JCL comment statement. Each statement appears in the\nN      listing exactly as it appears in the procedure.\nNX/ DD statement that was overridden (preceded by the overriding DD\nN      statement).\nNXX* Job control statement that is not a JCL comment statement but one\nN      that the system considers to contain only comments.\nNXX* JCL comment statement.\nN\nNIn-Stream Procedure Statements\nN------------------------------\nN1-3 Type of Statement\nN=== =================================================================\nN++ DD statement that was not overridden and all other JCL statements,\nN      except the JCL comment statement. Each statement appears in the\nN      listing exactly as it appears in the procedure.\nN+/ DD statement that was overridden (preceded by the overriding DD\nN      statement).\nN++* Job control statement that is not a JCL comment statement but one\nN      that the system considers to contain only comments.\nN++* JCL comment statement.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0601": {"ttr": 50435, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00&\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05D\\x01\\x0f\\x01)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:44:26", "lines": 271, "newlines": 297, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0601\nTJCL Reference\nT-Chapter 6.\nT-Example 1. Output from JCLR0601\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-054426\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 6. Job Control Statements on the Output Listing\nN-------------------------------------------------------\nNSome of the possible Output listing characters sppear below.\nN\nNThe following JCL produces the left hand side of the output listing\nNthat follows after. Due to a 79 character restriction of the GENIE WISH\nNfile format some right hand side is truncated. That is the JOB\nNStatement item #1 wrapped into a contiguous string minus the\nNcommented NOTIFY parameter. See IEFC653I SUBSTITUTION JCL in the\nNoutput much further down.\nN\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//*\nD//* Dataset: &SYSUID..CBT.CNTL(JCLR0601)\nD//* Purpose: This job will help show the JCL output listing syntax.\nD//*\nD//* -------------------------------------------------------------------\nD//*\nD//* History of Modifications\nD//* ========================\nD//* vv.mm When     Who / What you did ... (Newest change at the top.)\nD//* ----- -------- ----------------------------------------------------\nD//* 01.00 20170506 KTOMIAK \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nD//*                1) Original base code.\nD//* ----- -------- ----------------------------------------------------\nD//*\nD//* -------------------------------------------------------------------\nD//*\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//*\nD//PROCS JCLLIB ORDER=(&SYSUID..CBT.PROCLIB)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* JB1O is a job level OUTPUT Statement.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//JB1O  OUTPUT COPIES=2,DEST=HERE\nD//*\nD//PROC@ID PROC\nD//* Dataset: INSTREAM\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* In this first procstep you pass data to be generated to //SYSUT2.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//PS01#02 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSUT1    DD DDNAME=DSE\nD//PS1O  OUTPUT CONTROL=PROGRAM\nD//SYSPRINT  DD SYSOUT=*,OUTPUT=(*.JB1O)\nD//SYSUT2    DD SYSOUT=D,OUTPUT=*.PS1O\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* In this second procstep the instream data is generated to //SYSUT2.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//PS02#02 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=A\nD//SYSUT1    DD DATA\nDThis is instream data.\nD// with a JCL looking statement in it.\nDIt shows you can now put control cards in a procedure.\nD\nDHowever, you need to use DLM if you want to include\nDEOD (/*) and EOJ (//) statements.\nD/*\nD//SYSUT2    DD SYSOUT=*,DEST=NOWHERE\nD//*\nD//* End of Proc proc@id.\nD//       PEND\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* This first step invokes an instream proc of two steps.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#03 EXEC PROC=PROC@ID\nD//PS01#02.PS2O OUTPUT CONTROL=DOUBLE,COPIES=5\nD//PS01#02.SYSUT2 DD OUTPUT=*.PS2O\nD//PS01#02.DSE DD *\nD.\nD(data)\nD.\nD/*\nD//PS02#02.PS3O OUTPUT DEFAULT=YES,DEST=STL\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* This second step invokes a PROC from JCLLIB.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST02#03 EXEC PROC=JCLR06P\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* This third step is from an INCLUDE pulled from the JCLLIB.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST03 INCLUDE MEMBER=JCLR06I\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//* End of Job JCLR0601.\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//\nN\nNExample 1. Output from JCLR0601\nN-------------------------------\nIJCL Statement follows:\nI 1 //KTOMIAKJ JOB (FB3,SYS1,KTOMIAK,60,9999,0,,1,,60),\nI   //             'NAME=KEN TOMIAK',\nI   //             CLASS=A,\nI   //             MSGCLASS=X,\nI   //             NOTIFY=&SYSUID.,\nI   //             REGION=32M,\nMComment Statement follows:\nI   //*             RESTART=STxx#yy,   <-- Uncomment if you use it.\nI   //             TIME=1440\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* ===================================================================\nI   //*\nI   //* Dataset: &SYSUID..CBT.CNTL(JCLR0601)\nI   //* Doclib:  &SYSUID..CBT.DOCLIB(JCLR0601)\nI   //* Purpose: This job will help show the JCL output listing syntax.\nI   //*\nI   //* -------------------------------------------------------------------\nI   //*\nI   //* History of Modifications\nI   //* ========================\nI   //* vv.mm When     Who / What you did ... (Newest change at the top.)\nI   //* ----- -------- ----------------------------------------------------\nI   //* 01.00 20170506 KTOMIAK \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nI   //*                1) Original base code.\nI   //* ----- -------- ----------------------------------------------------\nI   //*\nI   //* -------------------------------------------------------------------\nI   //*\nI   //* ===================================================================\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI   //*\nMSystem message follows:\nI   IEFC653I SUBSTITUTION JCL - (FB3,SYS1,KTOMIAK,60,9999,0,,1,,60),'NAME=K\nI   NOTIFY=KTOMIAK,REGION=32M,TIME=1440\nI 2 //PROCS JCLLIB ORDER=(&SYSUID..CBT.PROCLIB)\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* JB1O is a job level OUTPUT Statement.\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI   IEFC653I SUBSTITUTION JCL - ORDER=(KTOMIAK.CBT.PROCLIB)\nI 3 //JB1O  OUTPUT COPIES=2,DEST=HERE\nI   //*\nI 4 //PROC@ID PROC\nI   //* Dataset: INSTREAM\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* In this first procstep you pass data to be generated to //SYSUT2.\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI   //PS01#02 EXEC PGM=IEBGENER\nI   //SYSIN     DD DUMMY\nI   //SYSUT1    DD DDNAME=DSE\nI   //PS1O  OUTPUT CONTROL=PROGRAM\nI   //SYSPRINT  DD SYSOUT=*,OUTPUT=(*.JB1O)\nI   //SYSUT2    DD SYSOUT=D,OUTPUT=*.PS1O\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* In this second procstep the instream data is generated to //SYSUT2.\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI   //PS02#02 EXEC PGM=IEBGENER\nI   //SYSIN     DD DUMMY\nI   //SYSPRINT  DD SYSOUT=A\nI   //SYSUT1    DD DATA\nI   //SYSUT2    DD SYSOUT=*,DEST=NOWHERE\nI   //*\nI   //* End of Proc proc@id.\nI   //       PEND\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* This first step invokes an instream proc of two steps.\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI 5 //ST01#03 EXEC PROC=PROC@ID\nMInstream procedure expanded follows:\nI 6 ++PROC@ID PROC\nI   ++* Dataset: INSTREAM\nI   ++*\nI   ++* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   ++* In this first procstep you pass data to be generated to //SYSUT2.\nI   ++* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI 7 ++PS01#02 EXEC PGM=IEBGENER\nI 8 ++SYSIN     DD DUMMY\nI 9 ++SYSUT1    DD DDNAME=DSE\nI10 ++PS1O  OUTPUT CONTROL=PROGRAM\nI11 ++SYSPRINT  DD SYSOUT=*,OUTPUT=(*.JB1O)\nI12 //PS01#02.SYSUT2 DD OUTPUT=*.PS2O\nMInstream procedure expanded DD overridden follows:\nI   +/SYSUT2    DD SYSOUT=D,OUTPUT=*.PS1O\nI   ++*\nI   ++* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   ++* In this second procstep the instream data is generated to //SYSUT2.\nI   ++* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI13 //PS01#02.PS2O OUTPUT CONTROL=DOUBLE,COPIES=5\nI14 //PS01#02.DSE DD *\nI15 ++PS02#02 EXEC PGM=IEBGENER\nI16 ++SYSIN     DD DUMMY\nI17 ++SYSPRINT  DD SYSOUT=A\nI18 ++SYSUT1    DD DATA\nI19 ++SYSUT2    DD SYSOUT=*,DEST=NOWHERE\nI   ++*\nI   ++* End of Proc proc@id.\nI20 //PS02#02.PS3O OUTPUT DEFAULT=YES,DEST=STL\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* This second step invokes a PROC from JCLLIB.\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI21 //ST02#03 EXEC PROC=JCLR06P\nMCatalogued procedure expanded follows:\nI22 XXJCLR06P PROC OUTCLASS='*',OUTDEF=''\nI   XX*\nI   XX* Dataset: &SYSUID..CBT.PROCLIB(JCLR06P)\nI   XX* Setup:   OUTCLASS specifies the SYSOUT class for //SYSUT2.\nI   XX*          OUTDEF   optionally allows you to point to // OUTPUT.\nI   XX*\nI   XX* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   XX* Sequential Copy/Generate Data Set Program.\nI   XX* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI23 XXPS01#01 EXEC PGM=IEBGENER\nI24 XXSYSIN     DD DUMMY\nI25 XXSYSPRINT  DD SYSOUT=Z,DEST=NOWHERE\nI26 XXSYSUT1    DD DATA\nI27 XXSYSUT2    DD SYSOUT=(&OUTCLASS)&OUTDEF\nI   XX*\nI   XX* END OF PROC JCLR06P.\nI   IEFC653I SUBSTITUTION JCL - SYSOUT=(*)\nI28 XX       PEND\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* This third step is from an INCLUDE pulled from the JCLLIB.\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI29 //ST03 INCLUDE MEMBER=JCLR06I\nMINCLUDE expanded follows:\nI30 XXJCLR06I  SET OUTCLASS='*',OUTDEF=''\nI   XX*\nI   XX* Dataset: &SYSUID..CBT.PROCLIB(JCLR06I)\nI   XX* Setup:   OUTCLASS specifies the SYSOUT class for //SYSUT2.\nI   XX*          OUTDEF   optionally allows you to point to // OUTPUT.\nI   XX*\nI   XX* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   XX* Sequential Copy/Generate Data Set Program.\nI   XX* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI31 XXST##@## EXEC PGM=IEBGENER\nI32 XXSYSIN     DD DUMMY\nI33 XXSYSPRINT  DD SYSOUT=Z,DEST=NOWHERE\nI34 XXSYSUT1    DD DATA\nI35 XXSYSUT2    DD SYSOUT=(&OUTCLASS)&OUTDEF\nI   XX*\nI   XX* END OF INCLUDE JCLR06I.\nI   //*\nI   //* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI   //* ===================================================================\nI   //* End of Job JCLR0601.\nI   //* ===================================================================\nI   //* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI   IEFC653I SUBSTITUTION JCL - SYSOUT=(*)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR07": {"ttr": 50437, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05H\\x00\\x1c\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:48:19", "lines": 28, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR07\nTJCL Reference\nT-Chapter 7. Started Tasks\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-054818\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 7. Started Tasks\nN------------------------\nNThis chapter describes the decisions your system programmer needs to\nNmake in order for your installation to use started tasks, and the steps\nNa person with operator authority (the \"you\" in this chapter ) will need\nNto perform if the decision is to use started tasks.\nM\nMKenneth Tomiak remark:\nMThe \"you\" is very unlikely to be YOU. The target audience of the JCL\nMReference manual is Application Developers/Programmers, System\nMProgrammers/Administrators/Engineers, and the generically titled\nMProduction Control/Job Scheduler team.\nM\nMThe role of the Computer Operator (a person with operator authority)\nMhas typically been automated using Automation Operation and Job\nMScheduling software. That is now the de-facto standard method for the\nMstarting of system task control (STC) and for the submission of JOBs.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0701": {"ttr": 50439, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x14\\x0f\\x01\\x18\\x14\\x0f\\x05R\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-20T00:00:00", "modifydate": "2018-05-20T05:52:15", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0701\nTJCL Reference\nT-Chapter 7.\nT-See the manual for details on Started Tasks\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-055215\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 7. Started Tasks\nN------------------------\nNSee the manual for details on Started Tasks.\nN\nNDetermining Whether to Use a Started Task\nN-----------------------------------------\nN\nNDetermining the Source JCL for the Started Task\nN-----------------------------------------------\nN\nNDetermining System Services for a Started Task\nN----------------------------------------------\nN\nNCoding the JCL\nN--------------\nN\nNNaming a Started Task (Source JCL is a Job)\nN-------------------------------------------\nN\nNSetting Up Operator Education for Your Started Task\nN---------------------------------------------------\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR08": {"ttr": 50441, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x05U\\x00\\x15\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T05:55:30", "lines": 21, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR08\nTJCL Reference\nT-Chapter 8. JCL Command Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-055530\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 8. JCL Command Statement\nN-------------------------------------------------------\nNUse the JCL command statement to enter an MVS operator\nNcommand through the input stream on a JES2 system.\nI\nIHowever, the COMMAND statement is the preferred way within the\nIjob control language to specify MVS and JES commands.\nM\nMKenneth Tomiak remark:\nMThere are few reasons to blindly issue commands from a job.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0801": {"ttr": 50443, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x14\\x0f\\x06\\x04\\x00)\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-20T06:04:36", "lines": 41, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0801\nTJCL Reference\nT-Chapter 8.\nT-Description\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-060436\n*\n@IBM Corporation\n*\nNz/OS MVS JCL Reference\nN----------------------\nNChapter 8. JCL Command Statement\nN--------------------------------\nNDescription\nN-----------\nNSyntax\nN------\nN\nD// command \u00ddparameter\u00a8 \u00ddcomments\u00a8\nI  command: Precede and follow the command with one or more blanks. It\nI    can begin in any column.\nN\nI  parameter: Code any required parameters. When more than one\nI    parameter is coded, separate them with commas.\nN\nI  comments: The comments field follows the parameter field after at\nI    least one intervening blank. The system removes the comments field\nI    from the command before processing the command.\nN\nNLocation\nN--------\nNA command statement can appear anywhere after a JOB statement and\nNbefore the end of the job. If a command statement appears between\nNjobs, it is ignored. A command statement should not be placed before\nNthe first JOB statement in an input stream.\nN\nNIf a command statement contains errors, it is not executed. If the\nNerroneous statement is between two jobs in the input stream, the\nNsystem does not issue a message to indicate that the command is not\nNexecuted.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0811": {"ttr": 50449, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00S\\x01\\x18\\x14\\x0f\\x01\\x18\\x14\\x0f\\x14C\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-20T00:00:00", "modifydate": "2018-05-20T14:43:53", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0811\nTz/OS JCL Reference\nT-JCL Command Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180520-144353\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJCL Command Statement\nN=====================\nNTwo ways to control command authority are through\nNJES initialization parameters and RACF.\nN\nNPurpose: Use the JCL command statement to enter an MVS operator\nNcommand through the input stream on a JES2 system.\nN\nIHowever, the COMMAND statement is the preferred way within the\nIjob control language to specify MVS and JES commands.\nN\nNThis statement should no longer be used.\nNIf you find it in use than be intelligent and change it.\nN\nN// command \u00ddparameter\u00a8 \u00ddcomments\u00a8\nN\nNAs you can see, if your parameters contain a space then using\nNthis statement will fail. What follows the space becomes a\nNcomment.\nN\nD// DISPLAY TS,LIST\nD// D TS,L\nN\nN The long and short form to display active TSO users.\nN\nN// F CICS,CEMT INQ TRAN(*)\nN\nIThe modify command will fail to display transactions as the\nIparameter ends at the space and all that CICS will receive is\nIthe CEMT transaction identifier.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR09": {"ttr": 32773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:07", "lines": 30, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR09\nTz/OS JCL Reference\nT-COMMAND Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNCOMMAND Statement\nN=================\nNUse the COMMAND statement to specify an MVS or JES\nNcommand that the system issues when the submitted JCL\nNis converted.\nN\nNThis is a replacement to the JES JECL statement (/*$cmd) and\nNthe out-dated JCL Command Statement (// cmd parameter).\nM\nMKenneth Tomiak remark:\nMThere is little cause to blindly issue commands from a job.\nN\nD//\u00ddname\u00a8 COMMAND ?command command-operand? \u00ddcomments\u00a8\nN\nNThe COMMAND statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (COMMAND),\nN->?command command-operand?, and\nN->comments.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR0901": {"ttr": 32775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:08", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR0901\nTz/OS MVS JCL Reference\nT-COMMAND Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nI\nNz/OS MVS JCL Reference\nN-COMMAND Statement\nN\nNPurpose:\nNUse the COMMAND statement to specify an MVS or JES command that the\nNsystem issues when the submitted JCL is converted.\nN\nN    'command' Issued during conversion\nN\nD//ST01#01 EXEC\nD//     COMMAND 'command'\nN\nN                                                          (column 71) |\nD//          COMMAND 'START XYZ,PARM='ABC,DEF,GHI,JK',TIME=1440,REGION=4\nD//             096K'\nN               | (column 16)\nN\nD//     COMMAND 'SEND ''This message will be sent to user SCOTTC when th+\nD//             is job is converted'',USER=(SCOTTC)'\nN\nNAnd the working modify CICS command that failed in JCLR0801:\nD//     COMMAND 'F CICS,CEMT INQ TRANS(*)'\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR10": {"ttr": 52227, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00!\\x01\\x18\\x13\\x7f\\x01\\x18\\x14/\\x15D\\x00\\x84\\x00\\x84\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-22T15:44:21", "lines": 132, "newlines": 132, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR10\nTz/OS JCL Reference\nT-Comment Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180522-154421\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNz/OS JCL Reference\nNComment Statement\nN-----------------\nNUse the comment statement to enter a comment on the\nNoutput listing. The comment statement is used primarily to\nNdocument a job and its resource requirements.\nN\nD//*comments\nN\nNThe comment statement consists of the characters //* in columns 1,\nN2, and 3 and one field:\nN->comments.\nM\nMKenneth Tomiak remark:\nMComments are used PRIMARILY to convey information above and\nMbeyond what the JCL constructs show. Just what that information\nMis will vary to meet the desires at each installation.\nM\nMThe 'Kenneth Tomiak Programming Method' (KTPM03) recommends\nMplacing documentation in a separate library (DOCLIB). It is not\nMunusual to have a run-book that contains the documentation about a\nMjob.\nI\nIInformation Technology Infrastructure Library (ITIL) implemented at\nIits worst:\nM\nMPicture yourself wanting to correct a spelling mistake in a\nMcomment and learning you must then follow proper change control\nMprocedures. That can get to be a time-consuming activity when\nMyou have to:\nM\nM->Estimate how much time is required to complete the activity.\nM  The saying 'Time is money' alludes to budget considerations.\nM  * See my Dilbert footnote.\nM\nM--Prepare a 'management presentation' of why the change is\nM  necessary and beneficial. Include a 'Risk Assessment' and\nM  how you plan to mitigate those impacts.\nM\nM->Get buy-in to make the change from all parties impacted.\nM  <Sarcasm>\nM  Be prepared to explain to the end user (business unit) how\nM  important their agreeing to change NOT to NOTE really is.\nM  </Sarcasm>\nM\nM->Create your test cases,  validation plan, implementation\nM  plan, and backout plan.\nM\nM->Create the 'request for change' ticket and wait for management\nM  approval.\nM\nM->Present your justification of doing the change to the \"Change\nM  Advisory Board\" (CAB).\nM\nM->Wait for CAB approval.\nM\nM->Copy the production JCL to the development environment.\nM\nM->Make the change.\nM\nM->Execute and document all of the test cases required for the JOB(s).\nM  You might have changed a PROCedure and need to test several.\nM\nM->Follow your change control process to move the change forward.\nM  What happens next is highly dependent on your change process.\nM\nM  ->You may need someone in another department to review the\nM    change(s) you made.\nM\nM  ->You may need someone to review your test case(s) and\nM    the result(s).\nM\nM  ->You may need to provide a job (that itself was thoroughly\nM    tested) to promote the change to the next level, or prepare\nM    a request in a separate system that does so.\nM\nM  ->A 'Performance and Capacity' group might study your change to\nM    discern if there are any negative impacts on the overall system.\nM\nM  ->The change may pass through a 'Quality Assurance' group that\nM    verifies the change meets or exceeds the installations standards.\nM    * Be prepared to learn some part you never touched must be\nM      fixed before the change can move on. This will blow your\nM      time and budget estimate.\nM\nM  ->End user (business unit) approval may be required to move forward.\nM\nM->Meet with the implementer(s) and review the implementation\nM  plan and backout plan.\nM\nM->Attend a pre-implementation Change Meeting to entertain questions.\nM\nM->Wait for approval.\nM  What happens next is highly dependent on your change process.\nM\nM  ->Logon during the maintenance window and validate your change.\nM    Capture the result(s).\nM\nM  ->Assist the end-user (business unit) to get their sign-off\nM    the change is correct.\nM\nM  ->Update the ticket.\nM    * Be prepared to have the change backed out when some piece you\nM      never touched fails.\nM\nM  ->Be prepared for the backlash when the production control staff\nM    flounder because the documentation still says NOT instead of NOTE\nM    when they RESTART using the backed out JCL.\nM\nMITIL would still have you do a change to a DOCLIB member, but gone\nMare the steps important to an actual JCL statement. And for those\nMthinking 'but we have exemptions...\", gone are proving to the\nMauditors those exemptions were justified even though the JOB failed\nMon its next scheduled execution for reasons unrelated to the backed\nMout change.\nI\nI* Dilbert footnote:\nIPointy haired boss tells Dilbert he will need a plan to justify the\nIresources to change their software. Dilbert responds that he can make\nIthose changes in ten seconds and declares 'Done'. The boss\nIcongratulates Dilbert with 'Good Work. Now all we need is that plan'.\nIhttp://dilbert.com/strip/1998-11-10\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1001": {"ttr": 32777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00F\\x00F\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:08", "lines": 70, "newlines": 70, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1001\nTz/OS JCL Reference\nT-Comment Statement Example\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNComment Statement\nN=================\nNExample: How to add comments to JCL.\nN\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Put something meaningful here.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nM\nD//*comment\nM\nI//*On a JES3 system you need to avoid starting with a JES3 keyword.\nM\nD//*While the manual says you can go out to column 80, do not use\nD//*column 72 to continue your comment. Instead just code more\nD//*comment cards.\nM\nMThe //*comment statement is not the same as the comment field found\nMon other JCL statements. In the EXEC example below you can see the\nMcomment field was spread over three statements before a comment\nMstatement was used.\nNI have seen too many JCL errors because a comment went to column 72.\nM\nD//POORLY  EXEC PGM=IEFBR14     Which is different from                 +\nD//                             continuing comments from another JCL    +\nD//                             statement. But really, there is no      +\nD//                             reason to work hard at continuing a     +\nD//                             comment when there is a better way.\nN\nD//BETTER  EXEC PGM=IEFBR14     Which is different from continuing\nD//*                            comments from another JCL statement. But\nD//*                            really, there is no good reason not to\nD//*                            just use //*.\nN\nNIn some previous IBM examples you will find the time-consuming flower\nNbox kind of comment. A flower-box looked pretty in the days we printed\nNlistings, but they have a heavy price in the time it takes to carefully\nNconstruct it and the time it takes later when a change is made that\nNdisrupts the flow of material inside it.\nI\nIIf you follow the 'Programming Using The Kenneth Tomiak Method' (PUTKTM)\nIthen you will know to avoid the silly practice. You may still use a three\nIsided annotation box. And use different sub-markers to denote levels.\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//* The string of less than (<) characters shows the start of a comment\nD//* block. The first string of equal sign (=) characters shows this is\nD//* a major comment. It might be used to describe a job or a multi-step\nD//* procedure. Next comes the actual comment.\nD//* -------------------------------------------------------------------\nD//* The first string of dash (-) characters shows the start of a minor\nD//* block. Followed by the actual comment. PUTKTM uses these for steps\nd//* and sub-routines in program code. The first string of dash (-)\nD//* characters shows the end of the minor block.\nD//* -------------------------------------------------------------------\nD//* The second string of equal sign (=) characters shows the end of the\nD//* major block.\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1002": {"ttr": 32779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:08", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1002\nTz/OS JCL\nT-Comment Statement Example: JOB\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@Kenneth Tomiak\n*\nNProgramming Using The Kenneth Tomiak Method (PUTKTM-JCL)\nN========================================================\nNComment Statement Example: JOB\nN------------------------------\nN\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//*\nD//* Dataset: ...CNTL(memberid)\nI             ... = the name of the data set where this JCL is stored.\nD//* Doclib:  ...doclib(memberid)\nI             ... = the name of the data set where the 'run-book' lives.\nI             Some installations like to clutter the JCL with the tasks\nI             that need to be done to restart the job after a failure.\nI             By following PUTKTM-JCL you may place simple RESTART\nI             instructions as comments with the JCL, but anything more\nI             than 'restart at the prior step' should be fully\nI             documented in a document library.\nN//* Setup:   1) Change JCL symbol abc to ...\nN//*          2) ...\nI                List everything that should be temporarily touched\nI                before the job is submitted for execution.\nD//* Purpose: This job will ...\nI                           briefly tell what this job is for,\nD//*\nD//* -------------------------------------------------------------------\nD//*\nD//* History of Modifications\nD//* ========================\nD//* vv.mm When     Who / What you did ... (Newest change at the top.)\nD//* ----- -------- ----------------------------------------------------\nD//* 01.00 20170417 KTOMIAK \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nI                   Name names - your USERID of today could be gone\nI                   tomorrow, so put your full name to identify who are.\nD//*                1) Original base code.\nI                      When making changes: number them so others know\nI                      how many changes you made, describe what you\nI                      changed, and the reason you changed it.\nD//* ----- -------- ----------------------------------------------------\nD//*\nD//* -------------------------------------------------------------------\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR11": {"ttr": 32781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00*\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:09", "lines": 42, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR11\nKPRINTDEV ENDCNTL PSF\nTz/OS JCL Reference\nT-CNTL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNCNTL Statement\nN==============\nNUse the CNTL statement to mark the beginning of program control\nNstatements in the input stream. Program control statements\nNspecify control information for a subsystem. The program control\nNstatements are ended by an ENDCNTL statement and are called a\nNCNTL/ENDCNTL group.\nN\nD//label CNTL \u00dd * comments\u00a8\nN\nNThe CNTL statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->label,\nN->operation (CNTL),\nN->parameter (*), and\nN->comments.\nIThe * parameter is required only when comments follow.\nM\nMKenenth E. Tomiak remark:\nIThe only subsystem mentioned in this chapter is Print Services\nIFacility (PSF). And there is where the only JCL Statement not\nIdocumented in the JCL Reference is located. Considering that\nIthe CNTL/PRINTDEV/ENDCNTL set of statements are all related,\nIit is IBM's territorial division of support that led to hiding\nIthe PRINTDEV in some other manual but left CNTL/ENDCNTL here.\nM\nMThe right answer is to put ALL of the JCL Statements in the JCL\nMReference. Allow the different groups to work together. No\nMreason to fix that problem now, the number of installations\nMdoing actual printing has dwindled and it is improbable a\nMnew installation needing to code PRINDEV will pop up.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1101": {"ttr": 32783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00R\\x00R\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:09", "lines": 82, "newlines": 82, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1101\nKPRINTDEV ENDCNTL PSF AFP\nTz/OS JCL Reference -CNTL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNz/OS JCL Reference\nN==================\nNCNTL Statement\nN--------------\nN\nD//prefix.label   CNTL *               comments\nN\nNUsed in conjunction with the ENDCNTL statement.\nN\nNPrint Services Facility (PSF) appears to be the only subsystem that\nNmakes use of the CNTL/ENDCNTL statements as they delineate PRINTDEV\nNstatements. PRINTDEV is documented in manual:\nIS550-0427-00 Print Services Facility for z/OS - Customization\nIVersion 4, Release 1.0.\nN\nN->prefix is optional and follows the same rules as label.\nN  It does not mean the same as a DD statement override.\nN\nN->label consists of 1 to 8 alphanumeric or national characters.\nM  label is usually coded as a printer-id, e.g. //PRT2 CNTL\nN  The first character must be alphabetic or a national character.\nM  Alphabetic = A through Z.\nN  Numeric = 0 through 9.\nN  National characters in the USA are @,#,$.\nN\nN->The asterisk is required if you code comments.\nN\nIThe CNTL statement terminates with the ENDCNTL statement.\nN\nNExample 1: Direct to UNIT from PGM.\nN-----------------------------------\nNThe PSF subsystem uses the BUFNO, PIMSG, and DATACK options of the\nNPRINTDEV control statement to print the data set for DD statement\nNAGAR on an AFP printer.\nN\nD//ST01#01 EXEC PGM=PRINT\nD//PRC     CNTL *      PRINDEV STATEMENT FOLLOWS\nD//PR1 PRINTDEV BUFNO=20,PIMSG=YES,DATACK=BLOCK\nD//PRC  ENDCNTL\nD//AGAR      DD UNIT=AFP1,CNTL=*.PRC\nN\nNExample 2: PSF Defind printer.\nN------------------------------\nN\nD//PSF     PROC\nD//PS01#01 EXEC PGM=...\nD//MSGDS OUTPUT FORMDEF=A10110\nD//FDEF01    DD DISP=SHR,DSN=SYS1.FDEFLIB  /* SYSTEM FORMDEFS       */\nD//          DD DISP=SHR,DSN=USER.FDEFLIB  /* YOUR   FORMDEFS       */\nD//FONT      DD DISP=SHR,DSN=SYS1.FONTLIB  /* SYSTEM FONTS          */\nD//          DD DISP=SHR,DSN=SYS1.FONTLIBB /* SYSTEM FONTS          */\nD//PSEG01    DD DISP=SHR,DSN=SYS1.PSEGLIB  /* SYSTEM PAGE SEGMENTS  */\nD//          DD DISP=SHR,DSN=USER.PSEGLIB  /* YOUR   PAGE SEGMENTS  */\nD//OLAY01    DD DISP=SHR,DSN=SYS1.OVERLIB  /* SYSTEM OVERLAYS       */\nD//          DD DISP=SHR,DSN=USER.OVERLIB  /* YOUR   OVERLAYS       */\nD//PDEF01    DD DISP=SHR,DSN=SYS1.PDEFLIB  /* SYSTEM PAGEDEFS       */\nD//          DD DISP=SHR,DSN=USER.PDEFLIB  /* YOUR   PAGEDEFS       */\nD//*\nD//PRC     CNTL\nD//PR1 PRINTDEV BUFNO=5,              /* NUMBER OF WRITE DATA BUFFER*/\nD//             FDEFDD=*.FDEF01,           /* FORMDEF LIBRARY DD    */\nD//             FORMDEF=A10110,  /* <---- COMMENT THIS OUT FOR 3800 */\nD//             FONTDD=*.FONT,             /* FONT LIBRARY DD       */\nD//             MESSAGE=*.MSGDS,         /* MESSAGE DATA SET OUTPUT */\nD//             OVLYDD=*.OLAY01,           /* OVERLAY LIBRARY DD    */\nD//             PAGEDEF=A06462,  /* <---- COMMENT THIS OUT FOR 3800 */\nD//             PIMSG=YES,            /* ACCUMULATE DATA SET MESSAGE*/\nD//             PDEFDD=*.PDEF01,           /* PAGEDEF LIBRARY DD    */\nD//             PSEGDD=*.PSEG01,           /* SEGMENT LIBRARY DD    */\nD//             TRACE=NO                   /* TRACE FLAG            */\nD//PRC  ENDCNTL\nD//        PEND\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR12": {"ttr": 32785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:09", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR12\nTz/OS JCL Reference -DD Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNUse the DD (data definition) statement to describe a data set and to\nNspecify the input and output resources needed for the data set.\nN\nD//\u00ddddname \u00a8 DD \u00ddpositional-parameter\u00a8\u00dd,keyword-parameter\u00a8...\u00ddcomments\u00a8\nD//\u00ddprocstepname.ddname\u00a8\nD//\u00ddddname \u00a8 DD\nD//\u00ddprocstepname.ddname\u00a8\nN\nNThe DD statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (DD),\nN->parameter, and\nN->comments.\nIDo not code comments if the parameter field is blank.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1201": {"ttr": 33025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00|\\x00|\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:09", "lines": 124, "newlines": 124, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1201\nKFILE\nTz/OS JCL Reference -DD Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDataset Definition, ties a DDNAME to a file description.\nI\nD//........ DD  ......\nN\nN//\u00ddddname\u00a8  DD <positional-parameter><,keyword-parameter>...<comments>\nN//<procstepname.ddname> DD\nD//          DD ....             Concatenated DD  gets no ddname.\nN\nN->The ddname must begin in column 3.\nN\nN->The ddname is 1 through 8 alphanumeric (A-Z and 0-9)\nN  or national ($, #, @) characters.\nN\nN->The first character must be alphabetic or national ($, #, @).\nN\nN->The ddname must be followed by at least one blank.\nN\nN->The procstepname must be a valid stepname. See EXEC.\nN\nNThe parameters you will use most are:\nN\nN  DISP=\nN  DSN=\nN  UNIT=\nN  SPACE=\nN  DCB=\nN\nMLIMITATIONS\nN-----------\nMMaximum of 3,273 DD statements per job step based on a 64K TIOT size.\nMThe default is a 32K TIOT size. Okay, subsystems like DB2 do some funky\nMthings to get around this.\nN\nMA JES3 system may reduce the maximum number even further.\nN\nNUse of System Managed Storage is highly recommended. In fact, if you\nNare not using it then you are a fool. Okay, there is an exception,\nNlike the z/OS SYSRES set, but otherwise stop running like it was 1975!\nN\nNThe only time an output DD statement may be concatenated is for ISAM.\nNBut, now really, who uses that anymore. Support was dropped\nNwith z/OS 1.7.\nN\nNPOSITIONAL PARAMETERS\nN---------------------\nN\nN//\u00ddddname\u00a8 DD  *\nN//\u00ddddname\u00a8 DD  DATA\nN//\u00ddddname\u00a8 DD  DUMMY\nN//\u00ddddname\u00a8 DD  DYNAM\nN\nNKEYWORD PARAMETERS\nN------------------\nN\nN//\u00ddddname\u00a8  DD ACCODE= ISO/ANSI/FIPS V3 or ISO/ANSI V4 tape access\nN//\u00ddddname\u00a8  DD AMP=\nN//\u00ddddname\u00a8  DD AVGREC=\nN//\u00ddddname\u00a8  DD BLKSIZE=\nN//\u00ddddname\u00a8  DD BLKSZLIM=\nN//\u00ddddname\u00a8  DD BURST=\nN//\u00ddddname\u00a8  DD CCSID=\nN//\u00ddddname\u00a8  DD CHARS=\nN//\u00ddddname\u00a8  DD CHKPT=\nN//\u00ddddname\u00a8  DD CNTL=\nN//\u00ddddname\u00a8  DD COPIES=\nN//\u00ddddname\u00a8  DD DATACLAS=\nN//\u00ddddname\u00a8  DD DCB=\nN//\u00ddddname\u00a8  DD DDNAME=\nN//\u00ddddname\u00a8  DD DEST=\nN//\u00ddddname\u00a8  DD DISP=\nN//\u00ddddname\u00a8  DD DLM=\nN//\u00ddddname\u00a8  DD DSID=\nN//\u00ddddname\u00a8  DD DSNAME=      ALSO coded as DSN=\nN//\u00ddddname\u00a8  DD DSNTYPE=\nN//\u00ddddname\u00a8  DD EXPDT=\nN//\u00ddddname\u00a8  DD FCB=\nN//\u00ddddname\u00a8  DD FILEDATA=\nN//\u00ddddname\u00a8  DD FLASH=\nN//\u00ddddname\u00a8  DD FREE=\nN//\u00ddddname\u00a8  DD HOLD\nN//\u00ddddname\u00a8  DD KEYLEN=\nN//\u00ddddname\u00a8  DD KEYOFF=\nN//\u00ddddname\u00a8  DD LABEL=\nN//\u00ddddname\u00a8  DD LGSTREAM=\nN//\u00ddddname\u00a8  DD LIKE=\nN//\u00ddddname\u00a8  DD LRECL=\nN//\u00ddddname\u00a8  DD MGMTCLAS=\nN//\u00ddddname\u00a8  DD MODIFY=\nN//\u00ddddname\u00a8  DD OUTLIM=\nN//\u00ddddname\u00a8  DD OUTPUT=\nN//\u00ddddname\u00a8  DD PATH=\nN//\u00ddddname\u00a8  DD PATHDISP=\nN//\u00ddddname\u00a8  DD PATHMODE=\nN//\u00ddddname\u00a8  DD PATHOPTS=\nN//\u00ddddname\u00a8  DD PROTECT\nN//\u00ddddname\u00a8  DD QNAME=\nN//\u00ddddname\u00a8  DD RECFM=\nN//\u00ddddname\u00a8  DD RECORG=\nN//\u00ddddname\u00a8  DD REFDD=\nN//\u00ddddname\u00a8  DD RETPD=\nN//\u00ddddname\u00a8  DD RLS=\nN//\u00ddddname\u00a8  DD SECMODEL=\nN//\u00ddddname\u00a8  DD SEGMENT=\nN//\u00ddddname\u00a8  DD SPACE=\nN//\u00ddddname\u00a8  DD SPIN=\nN//\u00ddddname\u00a8  DD STORCLAS=\nN//\u00ddddname\u00a8  DD SUBSYS=\nN//\u00ddddname\u00a8  DD SYSOUT=\nN//\u00ddddname\u00a8  DD TERM=\nN//\u00ddddname\u00a8  DD UCS=\nN//\u00ddddname\u00a8  DD UNIT=\nN//\u00ddddname\u00a8  DD VOLUME=\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1210": {"ttr": 33027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00a\\x00a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:10", "lines": 97, "newlines": 97, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1210\nKAsterisk Star DATA\nTz/OS JCL Reference -DD Statement\nT-* Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nN* Parameter\nN-----------\nNUse the * (asterisk) parameter to begin an in-stream data set. The\nNdata records immediately follow the DD * statement; the records\nNmay be in any code such as EBCDIC. The data records end when one\nNof the following is found:\nN\nN->/* in the input stream\nN\nN->// to indicate another JCL statement\nN\nN->The two-character delimiter specified by a DLM parameter on\nN  this DD statement\nN\nN->The input stream runs out of card images\nI\nIUse a DATA parameter instead of the * parameter if any of the\nIdata records start with //.\nN\nD//\u00ddddname\u00a8  DD *\u00dd,parameter\u00a8... \u00ddcomments\u00a8\nN\nNAllowable parameters are:\nN\nN  DCB=BLKSIZE\nN  DCB=BUFNO\nN  DCB=LRECL\nN  DCB=DIAGNS\nN  DCB=MODE=C\nN  DLM\nN  DSID\nN  DSNAME\nN  LIKE\nN  LRECL\nN  REFDD\nN  VOLUME=SER\nN\nNExample 1:\nN----------\nNThis example defines two groups of data in the input stream.\nN\nD//INPUT1 DD *\nD..\nDdata\nD.\nD//INPUT2 DD *\nD..\nDdata\nD.\nD/*\nN\nNExample 2:\nN----------\nNThis example defines an in-stream data set with INP3 as the\nNlast qualifier of the system-generated data set name. A name\nNsuch as &SYSUID..jobname.jobid.Ddsnumber.INP3 is generated.\nN\nD//INPUT3 DD *,DSNAME=&&INP3\nD.\nDdata\nD.\nD/*\nN\nN\nNExample 3:\nN----------\nNThis example defines two groups of data in the input stream.\nNThe input data defined by DD statement SETUP.INPUT1 is to be\nNused by the cataloged procedure step named SETUP. The input\nNdata defined by DD statement PRINT.INP is to be used by the\nNcataloged procedure step named PRINT.\nN\nD//ST01#01 EXEC PROC=FRESH\nD//SETUP.WORK DD UNIT=3400-6,LABEL=(,NSL)\nD//SETUP.INPUT1 DD *\nD..\nDdata\nD.\nD/*\nD//PRINT.FRM DD UNIT=180\nD//PRINT.INP DD *\nD..\nDdata\nD.\nD/*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1211": {"ttr": 33029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16Q\\x00/\\x00/\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:51:10", "lines": 47, "newlines": 47, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1211\nKTAPE LABEL ISO ANSI FIPS\nTz/OS JCL Reference -dd sTATEMENT\nT-ACCODE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNACCODE Parameter\nN----------------\nNUse the ACCODE parameter to specify or change an\nNaccessibility code for an ISO/ANSI/FIPS Version 3 or ISO/ANSI\nNVersion 4 tape output data set. An installation-written file-access\nNexit routine verifies the code after the code is written to tape.\nNIf the code is authorized, the job step?s program can use the data\nNset; if not, the system issues messages and may abnormally terminate\nNthe job step.\nN\nNA data set protected by an accessibility code should reside only on\nNa volume protected by RACF or a volume accessibility code. The\nNvolume should not contain any unprotected data sets.\nN\nNExample:\nN--------\nD//            ACCODE=access-code\nN\nD//TAPE     DD UNIT=2400,VOLUME=SER=T49850,DSNAME=TAPEDS,\nD//            LABEL=(,AL),ACCODE=Z\nN\nNIn this example, the DD statement ACCODE parameter specifies an\nNaccessibility code of Z for tape volume T49850. The volume has\nNISO/ANSI/FIPS Version 3 or ISO/ANSI Version 4 labels. The data\nNset TAPEDS is first on the tape.\nM\nMKenneth Tomiak remark:\nMPhysical tape is becoming a rarity these days (2017 and diminishing\nMbeyond this date) and therefore the probability of you running\nMacross a system that would use this is extremely low.\nI\nINote the use of a model 2400 tape device in the UNIT parameter as\nIsome proof how unlikely it is for anyone outside of a museum\nIhaving the hardware to try this.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1212": {"ttr": 33031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00\\xa4\\x00\\xa4\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:02", "lines": 164, "newlines": 164, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1212\nTz/OS JCL Reference -DD Statement\nT-AMP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-165202\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNAMP Parameter\nN-------------\nNUse the AMP parameter to complete information in an Access Method\nNControl Block (ACB) - VSAM.\nN\nINote: With SMS, you can create new VSAM data sets with JCL DD\nIstatements. See the DATACLAS parameter and the RECORG parameter.\nN\nD//             AMP=(subparameter)\nD//             AMP=('subparameter{,subparameter}...')\nN\nNsubparameters\nN-------------\nN                    ACCBIAS= {DO} | {DW} | {SO} | {SW} |\nN                             {SYSTEM} | {USER}\nI                      Override record access bias in the data\nI                      class in order to use System-Managed\nI                      Buffering (SMB).\nI                      USER is the default.\nI                        {DO}     SMB with direct optimization.\nI                        {DW}     SMB weighted for direct processing.\nI                                 This option provides the capability\nI                                 to use hiperspace.\nI                        {SO}     SMB with sequential optimization.\nI                        {SW}     SMB weighted for sequential\nI                                 processing.\nI                        {SYSTEM} Force SMB and let the system\nI                                 determine the buffering\nI                                 technique based on the ACB MACRF\nI                                 and storage class specification.\nI                        {USER}   Obtain buffers the same way the\nI                                 system would without SMB.\nN                    AMORG\nI                      Indicates that the DD statement describes\nI                      a VSAM data set.\nN                    BUFND=number of data buffers\nI                      Specifies the number of I/O buffers that\nI                      VSAM is to use for data records.\nN                    BUFNI=number of index buffers\nI                      Specifies the number of I/O buffers that\nI                      VSAM is to use for index records.\nN                    BUFSP=bytes of buffer space\nI                      Specifies the maximum number of bytes for\nI                      the data and index buffers in the user area.\nN                    CROPS={NCK} | {NRC} | {NRE} | {RCK}\nI                      Requests a checkpoint/restart option.\nI                      If the CROPS subparameter is omitted,\nI                      RCK is the default.\nI                        {NCK} Requests no data set post-checkpoint\nI                              modification tests.\nI                        {NRC} Requests neither a data-erase test nor\nI                              data set post-checkpoint modification\nI                              tests.\nI                        {NRE} Requests no data-erase test.\nI                        {RCK} Requests a data-erase test and data set\nI                              post-checkpoint modification tests.\nN                    FRLOG= {NONE} |{REDO}\nI                      Specifies if VSAM batch logging will be performed\nI                      for your VSAM data set.\nI                      If FRLOG is omitted, the catalog value will\nI                      be used.\nI                        {NONE} Disables the VSAM batch logging function\nI                               for your VSAM data set.\nI                        {REDO} Enables the VSAM batch logging function\nI                               for you VSAM data set.\nN                    MSG=SMBBIAS\nI                      The system issues message IEC161I to indicate\nI                      which access bias SMB has chosen.\nN                    OPTCD= {I} | {L} | {IL}   *Obsolete as of z/OS 1.7*\nM                      IndicateD how the ISAM interface program was to\nM                      process records that the step's processing\nM                      program flags for deletion.\nM                        {I}  Ignore keeping records marked for\nM                             deletion.\nM                        {L}  Load records marked for deletion (KEEP).\nM                        {IL} Ignore keeping records marked for\nM                             deletion.\nN                    RECFM=\nM                      Identifies the ISAM record format used by the\nM                      processing program.\nM                      If no RECFM is specified in the AMP parameter or\nM                      in the DCB, V is the default.\nM                        {F}  FIXED\nN                        {FB} FIXED-BLOCKED\nN                        {V}  VARIABLE\nN                        {VB} VARIABLE-BLOCKED\nN                    RMODE31={ALL} | {BUFF} | {CB} | {NONE}\nI                      Designate the residency for buffers and\nI                      control blocks.\nI                      If you omit RMODE31, the default is BUFF.\nI                        {ALL}  Control blocks and buffers above\nI                               the line.\nI                        {BUFF} Buffers (only) above the line.\nI                        {CB}   Control blocks (only) above the line.\nI                        {NONE} Control blocks and buffers below\nI                               the line.\nN                    SMBDFR= {Y | N}\nI                      With direct optimization, use this subparameter\nI                      to instruct VSAM whether to defer writing of\nI                      changed buffers to the medium until either the\nI                      data set is closed or the buffers are required\nI                      for some other request.\nN                    SMBHWT= nn\nI                      Specify a requirement for hiperspace where nn\nI                      is an integer from 0 to 99. Zero is the default.\nN                    SMBVSP= {nnK | nnM}\nI                      Specify the amount of virtual buffer space to\nI                      acquire for direct optimized processing when\nI                      opening the data set, where nn is 1 to 2048000\nI                      kilobytes or 1 to 2048 megabytes.\nN                    STRNO=number of strings\nI                      Indicates the number of request parameter lists\nI                      the processing program uses concurrently.\nN                    SYNAD=modulename\nI                      Names a SYNAD exit routine.\nN                    TRACE=(subparameter\u00dd,subparameter\u00a8...)\nI                      Indicates that the generalized trace facility\nI                      (GTF) executes with your job to gather\nI                      information about the opening, closing, and\nI                      end-of-volume processing for the data set defined\nI                      on this DD statement.\nN\nNExample 1:\nN----------\nNIn this example, the DD statement defines the size of the user area\nNfor data and index buffers, specifies the number of data and index\nNbuffers, specifies the number of requests that require concurrent\nNdata set positioning, and specifies an error exit routine named ERROR.\nN\nD//VSAMDS1   DD DISP=SHR,DSN=DSM.CLASS,\nD//             AMP=('BUFND=2,BUFNI=3,BUFSP=200,STRNO=4,SYNAD=ERROR')\nN\nNExample 2:\nN----------\nNIn this example, the DD statement defines the values for BUFSP,\nNBUFNI, STRNO, and SYNAD, as in the previous example. It also\nNspecifies that a data set post-checkpoint modification test is not\nNto be performed when restarting at a checkpoint and that GTF is to\nNprovide a trace of specified data areas.\nN\nD//VSAMDS2   DD DISP=SHR,DSN=DSM.CLASS,\nD//             AMP=('BUFND=5,BUFNI=10,BUFSP=23456,CROPS=NCK',\nD//             'KEY=ABCDEF,STRNO=6,SYNAD=ERROR2',\nD//             'TRACE=(PARM1=F00203000010)')\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM) recommends\nMcoding parameters in alphabetic sequence. For that reason these\nMIBM examples have been sorted appropriately.\nM\nMIBM botched using alphabetic ordering when they added some SMB\nmrelated parameters. I have them in the proper sequence.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1213": {"ttr": 33033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00*\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:03", "lines": 42, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1213\nTz/OS JCL Reference\nT-DD Statement -AVGREC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNAVGREC Parameter\nN----------------\nNSpecifies a record request and the quantity of primary and secondary\nNspace specified on the SPACE parameter.\nN\nNWith SMS only:\nD//             AVGREC= {U} | {K} | {M}\nI                 {U} space specified in records\nI                 {K} space specified in thousands of records\nI                 {M} space specified in millions of records\nN\nNExample 1:\nN----------\nNIn the example, the space allocation defined in the DCLAS03 data class\nNis overridden by the SPACE and AVGREC parameters, which indicate an\nNaverage record length of 128 bytes, a primary quantity of 5K (5,120)\nNrecords, and a secondary quantity of 2K (2,048) records.\nN\nD//SMSDS3    DD DISP=(NEW,KEEP),DSN=MYDS3.PGM,\nD//             AVGREC=K,DATACLAS=DCLAS03,\nD//             SPACE=(128,(5,2))\nN\nNExample 2:\nN----------\nNIn the example, the space allocation defined in the DCLAS03A data\nNclass is overridden by the AVGREC parameter, which indicates that\nNthe primary and secondary quantity represents thousands of records.\nN\nD//SMSDS3A   DD DISP=(NEW,KEEP),DSN=MYDS3.PGM,\nD//             AVGREC=K,DATACLAS=DCLAS03A\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1214": {"ttr": 33035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:03", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1214\nTz/OS JCL Reference\nT-DD Statement -BLKSIZE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNBLKSIZE Parameter\nN-----------------\nNCode the BLKSIZE parameter to specify the maximum length of a block.\nN\nD//             BLKSIZE= {value} | {valueK} | {valueM} | {valueG}\nN\nIHALF TRACK IS OFTEN THE BEST. IDEALLY YOUR SYSTEM IS CONFIGURED\nITO DETERMINE THIS. CODE:\nD//             BLKSIZE=0\nN\nNCommon 3390 logical record lengths to blksize:\nN LRECL   BLKSIZE  FACTOR\nN    80    27920     349\nN   121    27951     231\nN   133    27930     210\nN   147    27930     190  (YES, THE SAME BLKSIZE AS FOR 133)\nN\nILOADLIBS ARE A SPECIAL CASE, THE BINDER KNOWS HOW TO USE THE DISK\nITO ITS BEST ADVANTAGE SO IT IS COMMON TO USE 32760.\nN\nNExample KTomiak 1: Allocate a regular pds.\nNOkay, but traditionally they get wrapped under DCB.\nN\nD//LOADLIB   DD DISP=(NEW,CATLG),DSN=&SYSUID..CBT.LOADLIB,\nD//             UNIT=SYSDA,\nD//             SPACE=(CYL,(10,5,25)),\nD//             RECFM=U,BLKSIZE=32760,LRECL=0\nN\nNExample KTomiak 1: Allocate a pds/e (COBOL V6 requirement).\nN\nD//LOADLIB   DD DISP=(NEW,CATLG),DSN=&SYSUID..CBT.LOADLIBE,\nD//             UNIT=SYSDA, vol=ser=volser,\nD//             SPACE=(CYL,(10,5,1)),DSNTYPE=LIBRARY,\nD//             DCB=(RECFM=U,BLKSIZE=4096,LRECL=32760)\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM-JCL) recommends\nMusing the DCB Parameter and subparameters form.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1215": {"ttr": 33037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00J\\x00J\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:03", "lines": 74, "newlines": 74, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1215\nTz/OS JCL Reference\nT-DD Statement -BLKSZLIM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNBLKSZLIM Parameter\nN------------------\nNUse the BLKSZLIM parameter to specify an upper limit on a data set's\nNblock size if BLKSIZE is omitted from all sources and the system\nNdetermines the block size for the data set. If a BLKSIZE value is\nNavailable from any source (such as the DD statement, data set label,\nNor the program), then the block size limit has no effect. The\nNBLKSZLIM parameter is useful mainly when writing new magnetic tape\nNdata sets with programs that can handle blocks longer than\nN32,760 bytes. Currently the maximum block size supported on any\nNtape is 256 KB. You can safely code a larger value for BLKSZLIM.\nNThe BLKSZLIM value does not have to be a multiple of the LRECL\nNvalue. For more information, see z/OS DFSMS Using Data Sets.\nN\nD//             BLKSZLIM= {value} | {valueK} | {valueM} | {valueG}\nI//                       {VALUE} Specifies in bytes an upper limit\nI//                               on a data sets's block size if\nI//                               BLKSIZE is omitted from all sources\nI//                               and the system determines the block\nI//                               size for the data set.\nI//                             ->The maximum value is 2,147,483,648\nI//                               bytes (two gigabytes).\nI//                             ->The minimum value is 32K (32,768\nI//                               bytes).\nN\nNExample 1: Coding BLKZSLIM to prove you can\nN-------------------------------------------\nNDD statement DD1B defines a new data set named EVER on a 3390 DASD. The\nNDD keywords RECFM and LRECL contain the information necessary to\nNcomplete the data control block. BLKSZLIM places an upper limit on the\nNblock size to be determined by the system.\nN\nD//DD1BB     DD DISP=(NEW,KEEP),DSN=EVER,\nD//             UNIT=3390,SPACE=(23472,(200,40)),\nD//             RECFM=FB,BLKSZLIM=32760,LRECL=326\nN\nNExample 2: BLKZSLIM when your program can handle more than 32,760\nN-----------------------------------------------------------------\nNDD statement DD2B defines a new data set named NEVER on a 3590\nNTAPE device. The DD keywords RECFM and LRECL contain the\nNinformation necessary to complete the data control block.\nNBLKSZLIM places an upper limit on the block size to be determined\nNby the system.\nN\nD//DD2B      DD DISP=(NEW,KEEP),DSN=NEVER,\nD//             UNIT=3590,\nD//             RECFM=FB,BLKSZLIM=40K,LRECL=80\nM\nMKenneth Tomiak remark:\nMExample 1 is horrible as half track blocking on DASD is the\nM'Best Practice'. To get that you code BLKSIZE=0. Further,\nMin the SPACE parameter the example is looking for blocks of\nM23,472 bytes. Why then suggest the system choose a block size?\nM\nMFor reasons too detailed to go into, if the system does choose\nMa better block size then the primary and secondary quantities\nMmay be over-allocating and RLSE should have been specified.\nM\nMOne more blunder to consider: Data sets on DASD, other than\nMpurely temporary data sets, should be catalogued and named\nMwith more than on level. Thus //DD1BB \"EVER\" should NEVER be\nMused as coded.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1216": {"ttr": 33282, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:04", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1216\nTz/OS JCL Reference\nT-DD Statement -BURST Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNBURST Parameter\nN---------------\nNUse the BURST parameter to specify that the output for this sysout\nNdata set printed on a continuous-forms AFP printer is to go to:\nN\nN->The burster-trimmer-stacker, to be burst into separate sheets.\nN->The continuous forms stacker, to be left in continuous fanfold.\nN\nD//             BURST= {YES} | {Y}  YES or Y: burster-trimmer-stacker\nI                      {NO} | {N}   NO  or N: continuous forms stacker\nN\nNExample 1: Bursting\nN-------------------\nNIn this example, the DD statement requests that JES send the output\nNto the burster-trimmer-stacker of the AFP printer. The stacker\nNseparates the printed output into separate sheets instead of stacking\nNit in a continuous fanfold.\nN\nD//RECORD     DD SYSOUT=A,BURST=Y\nM\nMKenneth Tomiak remark:\nMAssumes output class 'A' is for the AFP printer. While less printing\nMis done compared to the 1980s, installations with LINE Printers\nMoften sent output class 'A' to the LINE Printer and setup a\nMdifferent output class for AFP printing.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1217": {"ttr": 33284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00_\\x00_\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:04", "lines": 95, "newlines": 95, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1217\nTz/OS JCL Reference\nT-DD Statement -CCSID Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNCCSID Parameter\nN---------------\nNYou can request the access method to convert data between the coded\nNcharacter set identifier (CCSID) specified on the JOB or EXEC statement\nNand the CCSID specified on the DD statement. Data conversion is\nNsupported on access to ISO/ANSI Version 4 tapes using access methods\nNBSAM or QSAM, but not using EXCP.\nN\nD//             CCSID=nnnnn         1 - 65535 Default=367\nM\nMKenneth Tomiak remark:\nMThese multi-step \u00ddTomiak modified\u00a8 examples cover more than you would\nMever likely use. I ask - who still creates a physical tape of an unusal\nMformat and allows it to be sent to another installation when\nMsecure file transfer over communication lines is faster and safer?\nN\nNExample 1: DD Statement level conversion\nN----------------------------------------\nNSee the step level comments for what takes place.\nN\nD//JOB1     JOB (123456)\nD//*\nD//* Convert DISP=NEW from EBCDIC to 7-bit ASCII.\nD//* Default operation for ISO/ANSI/FIPS Version 3 and\nD//*                       ISO/ANSI Version 4 tapes.\nD//* Warning: Data loss can occur.\nD//ST01#08 EXEC PGM=MYPGM\nD//DD1       DD DISP=NEW,DSN=A,\nD//             UNIT=3590,VOL=SER=T00001,\nD//             LABEL=AL\nD//*\nD//* Convert DISP=OLD from 7-bit ASCII to EBCDIC.\nI    Assuming the CCSID in the header is 7-bit ASCII.\nD//ST02#08 EXEC PGM=MYPGM\nD//DD1       DD DISP=OLD,DSN=A,\nD//             UNIT=3590,VOL=SER=T00001,LABEL=AL\nD//*\nD//* No conversion on DISP=NEW and CCSID=65535.\nD//ST03#08 EXEC PGM=MYPGM\nD//DD1       DD DISP=NEW,DSN=A,\nD//             UNIT=3590,VOL=SER=T00003,LABEL=AL,\nD//             CCSID=65535\nD//*\nD//* No conversion on DISP=OLD and CCSID=65535.\nD//ST04#08 EXEC PGM=MYPGM\nD//DD1       DD DISP=OLD,DSN=A,\nD//             UNIT=3590,VOL=SER=T00004,LABEL=AL,\nD//             CCSID=65535\nD//*\nD//* End of Job\nN\nNExample 2: JOB, EXEC, and DD Statement level conversion\nN-------------------------------------------------------\nNSee the step level comments for what takes place.\nN\nD//JOB2     JOB (123456),CCSID=37\nD//*\nD//* Convert from JOB CCSID 37 to DISP=NEW CCSID 437.\nD//ST05#08 EXEC PGM=MYPGM1\nD//DD1       DD DISP=NEW,DSN=A,\nD//             UNIT=3590,VOL=SER=T00005,LABEL=(,AL),\nD//             CCSID=437\nD//*\nD//* Convert from DISP=OLD CCSID 437 to JOB CCSID 37.\nD//ST06#08 EXEC PGM=MYPGM2\nD//DD1       DD DISP=OLD,DSN=A,\nD//             UNIT=3590,VOL=SER=T00006,\nD//             CCSID=437\nD//*\nD//* Convert from tape label 437 to JOB CCSID 37.\nM    It is technically correct to state convert from whatever the\nM    tape label CCSID is to JOB CCSID 37, not imply only 437.\nI    Assumes the ISO/ANSI labeled tape had a recorded CCSID of 437.\nD//ST07#08 EXEC PGM=MYPGM2\nD//DD1       DD DISP=OLD,DSN=A,\nD//             UNIT=3590,VOL=SER=T00007\nD//*\nD//* No conversion on EXEC CCSID=65535.\nD//ST08#08  EXEC PGM=MYPGM2,CCSID=65535\nD//DD1        DD DISP=NEW,DSN=B,\nD//              UNIT=3590,VOL=SER=T00009,LABEL=(,AL)\nD//*\nD//* End of Job\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1218": {"ttr": 33286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:04", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1218\nTz/OS JCL Reference\nT-DD Statement -CHARS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNCHARS Parameter\nN---------------\nNUse the CHARS parameter to specify the name of one or more\nNcoded fonts for printing this sysout data set on an AFP printer.\nN\nNote: CHARS applies only for an output data set that is either\nNprinted on an AFP printer or processed by Infoprint Server.\nN\nNReferences\nN----------\nNFor more information on coded font names, see:\nNS544-5633-02 Font Summary for AFP Font Collection\nN\nD//             CHARS= {(DUMP{,table-name}...) }\nI                      {DUMP} Requests a high-density dump of\nI                             204-character print lines from a 3800.\nI                             If more than one font-name is coded,\nI                             DUMP must be first.\nI                      {,table-name} 1 - 4 table-name subparameters:\nI                      {table-name}  1 - 4 alphanumeric or\nI                                          NLS characters (@, #, $).\nN\nNExample 1: Specifying CHARS on SYSOUT\nN-------------------------------------\nNIn this example, the CHARS parameter specifies two fonts to be used\nNwhen printing the data set: GT10 and GB12.\nN\nD//DD1 DD SYSOUT=A,CHARS=(GT10,GB12)\nN\nNExample 2: Directing a DUMP to UNIT 3800\nN----------------------------------------\nNThe CHARS parameter on this SYSABEND DD statement specifies a\nNhigh-density dump with 204 characters per line. The FCB parameter\nNrequests the dump output at 8 lines per inch.\nN\nINote: This example pertains only to 3800 printers.\nN\nD//SYSABEND  DD UNIT=3800,CHARS=DUMP,FCB=STD3\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1219": {"ttr": 33288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00E\\x00E\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:04", "lines": 69, "newlines": 69, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1219\nTz/OS JCL Reference\nT-DD Statement -CHKPT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN------------\nNCHKPT Parameter\nN---------------\nNUse the CHKPT parameter to request that a checkpoint be written when\nNeach end-of-volume is reached on the multivolume data set defined by\nNthis DD statement. Checkpoints are written for all volumes except the\nNlast. Checkpoints can be requested for input or output data sets.\nN\nD//             CHKPT=EOV\nN\nIRelationship to the SYSCKEOV DD Statement\nI-----------------------------------------\nIIf you specify CHKPT, you must also provide a SYSCKEOV DD statement in\nIthe job or step.\nN\nNExample 1: Input data set checkpoints\nN-------------------------------------\nNIn this example, the DD statement defines data set INDS, a multivolume\nNQSAM or BSAM data set for which a checkpoint is to be written twice:\nN->once when end-of-volume is reached on TAPE01 and\nN->once when end-of-volume is reached on TAPE02.\nN\nD//DS1       DD DISP=OLD,DSN=INDS,\nD//             CHKPT=EOV,\nD//             UNIT=SYSSQ,VOLUME=SER=(TAPE01,TAPE02,TAPE03)\nN\nNExample 2: Output data set checkpoints\nN--------------------------------------\nNIn this example, OUTDS is a multivolume data set that is being created.\nNThe data set requires eight volumes. Seven checkpoints will be written:\nN->when the end-of-volume is reached on volumes one through seven.\nN\nD//DS2       DD DISP=(NEW,KEEP),DSN=OUTDS,\nD//             CHKPT=EOV,\nD//             UNIT=SYSDA,VOLUME=(,,,8)\nM\nMKenneth Tomiak remark:\nMSome clarification for Example 2 is desirable regarding the VOLUME\nMspecification of 8. From the VOLUME parameter we see that:\nI\nIVolume Count for Tape Data Sets:\nI--------------------------------\nICode a volume count when a new data set will reside on\nI6 or more volumes.\nMThat step knew it would create more than 6 so the author coded the\nMexpected actual number. The system does not enforce using no more\nMthan 8. In fact it could use up to 20 and fail if a 21st tape\nMis needed.\nIIf you omit the volume count or if you specify 1 through 5, the\nIsystem allows up to five volumes; if you specify 6 through 20,\nIthe system allows 20 volumes; if you specify a count greater than\nI20, the system allows 5 plus a multiple of 15 volumes. You can\nIoverride the maximum volume count in data class by using the\nIvolume-count subparameter. The maximum volume count for an\nISMS-managed mountable tape data set or a Non-managed tape\nIdata set is 255.\nM\nMSee the VOLUME Parameter for a range chart.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1220": {"ttr": 33290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00:\\x00:\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:05", "lines": 58, "newlines": 58, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1220\nTz/OS JCL Reference\nT-DD Statement -CNTL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNCNTL Parameter\nN--------------\nNUse the CNTL parameter to reference a CNTL statement that appears\nNearlier in the job. The reference causes the subsystem to execute\nNthe program control statements within the referenced CNTL/ENDCNTL\nNgroup.\nN\nNThe system searches for an earlier CNTL statement with a label that\nNmatches the label in the CNTL parameter. If the system finds no\nNmatch, the system issues an error message.\nM\nD//             CNTL= {*.label }\nI               {*.stepname.label }\nI               {*.stepname.procstepname.label}\nM\nMKenneth Tomiak remark:\nMIBM has silly examples in the manual showing how to refer to\nMa previously defined CNTL Statement missing from their examples.\nMKenneth provides the one example below.\nN\nNExample 1: Direct to UNIT from PGM.\nN-----------------------------------\nNThe PSF subsystem uses the BUFNO, PIMSG, and DATACK options of the\nNPRINTDEV control statement to print the data set for DD statement\nNAGAR on an AFP printer.\nN\nD//ST01#03 EXEC PGM=PRINT\nD//PRC1    CNTL *      PRINDEV STATEMENT FOLLOWS\nD//PR1 PRINTDEV BUFNO=20,PIMSG=YES,DATACK=BLOCK\nD//PRC1 ENDCNTL\nD//AGAR      DD UNIT=AFP1,CNTL=*.PRC\nD//*\nD//PROC@ID PROC\nD//PS01#01 EXEC PGM=PRINT\nD//PRC2    CNTL *      PRINDEV STATEMENT FOLLOWS\nD//PR3 PRINTDEV BUFNO=20,PIMSG=YES,DATACK=BLOCK\nD//PRC2 ENDCNTL\nD//AGAR      DD UNIT=AFP1,CNTL=*.PRC\nD//PROC@ID PEND\nD//*\nD//ST02#03 EXEC PROC=PROCID\nD//AGAR      DD UNIT=AFP1,CNTL=*.ST01#03.PRC\nD//*\nD//ST03#03 EXEC PGM=PRINT\nD//AGAR      DD UNIT=AFP1,CNTL=*.ST02#03.PS01#01.PRC\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1221": {"ttr": 33292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00B\\x00B\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:05", "lines": 66, "newlines": 66, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1221\nTz/OS JCL Reference\nT-DD Statement -COPIES Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNCOPIES Parameter\nN----------------\nNUse the COPIES parameter to specify how many copies of this sysout\nNdata set are to be printed. The printed output is in page sequence\nNfor each copy.\nN\nNFor printing on an AFP printer, this parameter can instead specify\nNhow many copies of each page are to be printed before the next page\nNis printed.\nN\nD//             COPIES= {nnn }\nI                       {(nnn,(group-value{,group-value}...))}\nI                       {(,(group-value{,group-value}...)) }\nI\nI               nnn (JES2): 1 - 255\nI               nnn (JES3): 1 - 254\nI               1 - 8 group-values (JES2): 1 - 255\nI               1 - 8 group values (JES3): 1 - 254\nN\nNExample 1: Specify 32 copies when printed.\nN------------------------------------------\nNThis example requests 32 copies of the data set defined by DD statement\nNRECORD1 when printing on an impact printer or an AFP printer.\nN\nD//SYSPRINT  DD SYSOUT=A,COPIES=32\nN\nNExample 2: Repeated pages and copies on AFP.\nN--------------------------------------------\nNIn this example, when printing on an AFP printer, six copies of the\nNdata set are printed in three groups. The first group contains one copy\nNof each page, the second group contains three copies of each page, and\nNthe last group contains two copies of each page.\nN\nNWhen the output device is not an AFP printer, the system prints eight\nNcollated copies.\nN\nD//SYSPRINT  DD SYSOUT=A,COPIES=(8,(1,3,2))\nM\nMKenneth Tomiak remark:\nMI am confused why someone would ask for 8 collated non-AFP copies or 6\nMAFP copies. It would make more sense had it been coded as:\nM//SYSPRINT  DD SYSOUT=A,COPIES=(6,(1,3,2))\nM\nMPerhaps the IBM author was totally clueless and meant each page will\nMbe printed six times on the AFP printer and 8 times on the non-AFP\nMprinter. Sill confusing to specify 8 but get 6.\nM\nMThen explain there will be 3 sets, not groups, where set 1 contains\nM1 copy of each page, set 2 has 3 copies of each page, and set 3 has 2\nMcopies of each page.\nMThe result is rather bizarre anyway, leading me to ask anyone to give\nMa realistic example of producing multiple copies of pages in an\nMuncollated set. As well as a realistic example where 8 collated is\nMas useful as the 3 sets of varying copies of each page.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1222": {"ttr": 33294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00e\\x00e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:05", "lines": 101, "newlines": 101, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1222\nTz/OS JCL Reference\nT-DD Statement -DATA Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDATA Parameter\nN--------------\nNUse the DATA parameter to begin an in-stream data set that may contain\nNstatements with // in columns 1 and 2. The data records immediately\nNfollow the DD DATA statement; the records may be in any code, such as\nNEBCDIC. The data records end when:\nN\nN->An EBCDIC /* or the two-character delimiter specified by a DLM\nN  parameter on this DD statement is found in the input stream, or\nN\nN->The input stream runs out of card images.\nN\nINote that, unlike a DD * statement, the data is not ended by the //\nIthat indicates another JCL statement.\nN\nD//\u00ddddname\u00a8 DD DATA\u00dd,parameter\u00a8... \u00ddcomments\u00a8\nN\nNAllowable parameters are:\nN\nN  DCB=BLKSIZE\nN  DCB=BUFNO\nN  DCB=LRECL\nN  DCB=DIAGNS\nN  DCB=MODE=C\nN  DLM\nN  DSID\nN  DSNAME\nN  LIKE\nN  LRECL\nN  REFDD\nN  VOLUME=SER\nN\nNExample 1: INSTREAM DATA.\nN-------------------------\nNThis example defines two groups of data in the input stream.\nN\nD//ST01#01 EXEC PGM=...\nD//GROUP1    DD DATA\nI..\nIdata\nI.\nD/*\nD//GROUP2    DD DATA\nI.\nI.\nIdata\nI.\nD/*\nN\nNExample 2: Specify LLQ on temporary dsname.\nN-------------------------------------------\nNThis example defines an in-stream data set with GRP3 as the last\nNqualifier of the system-generated data set name. A name such as:\nIuserid.jobname.jobid.Ddsnumber.GRP3\nNis generated.\nN\nD//GROUP3 DD DATA,DSNAME=&&GRP3\nI..\nIdata\nI.\nD/*\nN\nNExample 3: When DATA contains /*.\nN---------------------------------\nNThis example shows the first in stream group having JCL up to\nNthe end of data (/*) and the second in stream using DLM to\nNallow end of data (/*) as part of the data.\nN\nD//ST01#01 EXEC PGM=...\nD//GROUP1    DD DATA\nD//jobname JOB (),'name field'\nD//ST01#01 EXEC PGM=...\nD//SOMEDATA  DD DATA\nD.// not in column 1\nDinstream instream data\nD// in column 1\nD/*\nD//GROUP2    DD DATA,DLM=$$\nD//jobname JOB (),'name field'\nD//ST01#01 EXEC PGM=...\nD//SOMEDATA  DD *\nD.\nDinstream instream data\nD.\nD/*\nI.\nIdata\nI.\nD$$\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1223": {"ttr": 33296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x003\\x003\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:05", "lines": 51, "newlines": 51, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1223\nTz/OS JCL Reference\nT-DD Statement -DATACLAS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDATACLAS Parameter\nN------------------\nNUse the DATACLAS parameter to specify a data class for a new data\nNset. The storage administrator at your installation defines the\nNnames of the data classes you can code on the DATACLAS parameter.\nI\nISMS must be running to use DATACLAS.\nN\nD//             DATACLAS=data_class_name,\nN\nNA data class defines the following data set allocation attributes:\nN\nN->Block size limit\nN->Compaction\nN->Data set organization\nN  ->Record organization (RECORG) or\nN  ->Record format (RECFM)\nN->Key length (KEYLEN)\nN->Key offset (KEYOFF)\nN->Record length (LRECL)\nN->Retention period (RETPD) or expiration date (EXPDT)\nN->Space allocation (AVGREC and SPACE)\nN->Space constraint relief\nN->Type, PDS, PDSE, basic format, extended format, large format, or\nN  HFS (DSNTYPE)\nN->Media interchange type\nN->Volume-count (VOLUME)\nN->For VSAM data sets (IMBED or REPLICATE, CISIZE, FREESPACE,\nN  SHAREOPTIONS, REUSE, INITIAL LOAD, SPANNED/NONSPANNED, BWO\nN  (backup while open), and LOGGING OPTIONS)\nN\nNExample 1: DISP,DSN,DATACLAS\nN----------------------------\nNIn the example, the attributes in the data class named DCLAS01 are\nNused by SMS to handle the data set. Note that installation-written\nNACS routines may select a management class and storage class and\nNcan override the specified data class.\nN\nD//SMSDS1    DD DISP=(NEW,KEEP),DSN=MYDS1.PGM,DATACLAS=DCLAS01\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1224": {"ttr": 33537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00\\xae\\x00\\xae\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:06", "lines": 174, "newlines": 174, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1224\nTz/OS JCL Reference\nT-DD Statement -DCB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDCB Parameter\nN-------------\nNUse the DCB parameter to complete during execution the data set\nNinformation in the data control block (DCB).\nN\nNThe data control block is constructed by the DCB macro instruction\nNin assembler language programs or by file definition (FD) statements\nNor language-defined defaults in programs in other languages.\nN\nIAlternatives are using LIKE= and DATACLAS=.\nN\nD// DCB=(subparameter{,subparameter}...)\nD// DCB= ( {dsname } )\nD//      ( {*.ddname } )\nD//      ( {*.stepname.ddname } )\nD//      ( {*.stepname.procstepname.ddname} )\nD//      ( {,subparameter}... )\nM\nD//     BFALN=F|D      Buffer Alignment F=Fullword, D=Doubleword\nD//     BFTEK=R     BDAM   R=Variable Length Spanned Records\nD//           D     BTAM   D=Dynamic Buffering\nD//           S     QSAM   S=Simple buffering\nD//           A     QSAM   A=Locate mode logical (used with VS or VBS)\nD//     BLKSIZE=value|valueK|valueM|valueG     DASD max=32,760 Tape=2GB\nD//                                                  (2GB=2,147,483,648)\nD//     BUFIN=1|value  Input buffers for line\nD//     BUFL=bytes     bytes in the buffer pool 32,760 max\nD//     BUFMAX=buffers  (2-15) maximum # of buffers assigned to a line\nD//     BUFNO=buffers    255 is normally the maximum\nD//     BUFOFF=n|L     n=length, L=4\nD//     BUFOUT=buffers Output buffers for line\nD//     BUFSIZE=bytes (31-65535) length of each buffer used for all lines\nD//     CPRI=\nD//          R   Receive has priority over Send\nD//          E   Equal priority\nD//          S   Send has priority over Receive\nD//     CYLOFL=tracks  99 is maximum\nD//     DEN=\nD//         1 = 7-Track 556 bits-per-inch\nD//         2 = 7-Track 800 bpi or 9-Track 800 bpi NRZI\nD//         3 =                    9-Track 1600 bpi PE\nD//         4 =                    9-Track 6260 bpi GDR\nD//     DIAGNS=TRACE    if GTF is running\nD//     DSORG=\nD//           PS = Physical Sequential\nD//           PSU = PS unmovable\nD//           DA = Direct Access\nD//           DAU = DA unmovable\nD//           IS = Indexed Sequential\nD//           ISU = IS unmovable\nD//           PO = Partitioned Data Set (PDS oe PDSE)\nD//           POU = PO unmovable\nD//           CX = Communication line group\nD//           GS = Graphic data control block\nD//           * unmovable means there is location dependent data in file\nD//     EROPT=\nD//           T  BTAM = BTAM on-line terminal test option\nD//           ACC  QSAM = Accept bad blocks\nD//           SKP  QSAM = Skip bad blocks\nD//           ABE  QSAM = Abend if a bad block  (Default)\nD//     FUNC=            For 2505 Card reader or 3525 Card punch\nD//          I = punching and printing\nD//          R = reading                    (default for input)\nD//          P = punching                   (default for output)\nD//          W = printing\nD//          D = protected for punching\nD//          X = punching and printing\nD//          T = two line print\nD//     GNCP=n       number of I/O macro instructions before a WAIT\nD//     INTVL=n|0    seconds to wait between passes through an invitation\nD//     IPLTXID=membername  member to load into a 3704/3705 Comm Cnltr\nD//     KEYLEN=bytes       length of key\nD//     LIMCT=blocks|tracks if relative block addressing is used\nD//     LRECL=bytes|X      logical record length\nD//     MODE=C O  Card image optional mark read mode\nD//          E R  EBCDIC mode read column eliminate\nD//     NCP=1-99     maximum read or write before CHECK\nD//     NTM=tracks  number of tracks for a cylinder index\nD//     OPTCD=\nD//           A        BDAM A = actual devaddrin read and write\nD//           R             R = relative block addresses\nD//             E             = extended search (see LIMCT)\nD//               F           = feedback can be requested\nD//                 W         = requests validity check on writes\nD//           L        BISAM  = deleted records when first byte all ones\nD//             R             = put reorganization data in dcb\nD//               W           = requests validity check on writes\nD//           C        BPAM   = has no effect\nD//           W               = requests validity check on writes\nD//           CW              = requests validity check on writ\nD//           B        BSAM and QSAM = ignore EOF on tape\nD//           C                      = chained scheduling\nD//           H                      = empty hopper exit\nD//           J                      = TRC in output for AFP printer\nD//           Q                      = ASCII data\nD//           T                      = requests user totaling facility\nD//           U                      = UCS for 1403 or 3211 printer,\nD//                                    permit data checks on 3800\nD//           W                      = requests validity check on writes\nD//           Z                      = only 5 errors on magnetic reel input\nD//           I        QISAM = use overflow area\nD//           L              = delete records when first byte all ones\nD//           M              = master index as per NTM\nD//           R              = put reorganization data in dcb\nD//           U              = accumulate track index entries by track\nD//           W              = requests validity check on writes\nD//           Y              = use cylinder overflow area\nD//           c        TCAM = one byte tells first, middle, last segments\nD//           U             = work unit is a message\nD//     PCI=N,N            whether PCI is used to allocate and free buffers\nD//         R,R\nD//         A,A\nD//         X,X\nD//     PRTSP=0-3           Line spacing if not RECFM=A|M ignored by JES2\nD//     RECFM=\nD//     RESERVE=(bytes,bytes)\nD//     RKP=number           relative key position\nD//     STACK=1-2            which stacker on pucn gets card\nD//     THRESH=nn            percent of nonreusabl disk msg queue records\nD//     TRTCH=               Recording technique for 7-Track tape\nD//           C     =    data conversion,  odd parity, no translation\nD//           E     = no data conversion, even parity, no translation\nD//           T     = no data conversion,  odd parity, BCD / EBCDIC\nD//           ET    = no data conversion, even parity, BCD / EBCDIC\nD//         default = no data conversion,  odd parity, no translation\nD//           COMP  = data compaction\nD//           NOCOMP = no data compaction\nN\nNExample 1: New tape data set\nN----------------------------\nNDD statement DD1 defines a new data set named ALP. The DCB parameter\nNcontains the information necessary to complete the data control block.\nN\nD//DD1       DD DISP=(NEW,KEEP),DSN=ALP,\nD//             UNIT=3400-6,   /* VOLUME=SER=44321, */\nI                              Your tape management system should\nI                              choose an available volser.\nD//             DCB=(RECFM=FB,BLKSIZE=960,LRECL=240,DEN=1,TRTCH=C)\nI               BLKSIZE=960 uses a poor blocking factor.\nN\nNExample 2-3: DCB=refer\nN----------------------\nN\nD//DD2A      DD DISP=(NEW,KEEP),DSN=EVER,\nD//             UNIT=3380,SPACE=(23472,(200,40)),\nD//             DCB=(RECFM=FB,BLKSIZE=23472,LRECL=326)\nI               This example requests space based on a specific\nI               blocking size, thus the value in the SPACE\nI               subparameter and DCB BLKSIZE ought to match.\nD//DD2B      DD DISP=OLD,DSN=BAL\nI               DCB information will come from the VTOC.\nD//DD2C      DD DISP=(,CATLG,DELETE),DSN=CNANN,\nD//             UNIT=3400-6,   /* VOLUME=SER=663488 */\nD//             LABEL=(1,SL),\nD//             DCB=*.DD2B\nI               DCB information will come from the //DD2B\nI               referenced data set (VTOC).\nM\nMKenneth Tomiak remark:\nMIt is a poor practice to code DCB on a pre-existing data set. For\nMthat reason I have chosen to not include the IBM examples that\nMdo so.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1225": {"ttr": 33539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:06", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1225\nTz/OS JCL Reference\nT-DD Statement -DDNAME Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDDNAME Parameter\nN----------------\nNUse the DDNAME parameter to postpone defining a data set until later\nNin the same job step. A DDNAME parameter on a DD statement in a\nNcataloged or in-stream procedure allows you to postpone defining the\nNdata set until a job step calls the procedure; the data set must be\nNdefined in the calling job step.\nN\nD//*\nD//MYPROC  PROC\nD//PS01#01 EXEC PGM=IEFBR14\nD//MYDD      DD DDNAME=YOURDD\nD//        PEND\nD//*\nD//ST01#02 EXEC PROC=MYPROC\nD//PS01#01.YOURDD DD *                 <== DELAYED DDNAME\nDmy instream data\nD/*\nD//ST02#02 EXEC PROC=MYPROC\nD//PS01#01.MYDD  DD  *                 <== OVERRIDE\nDmy instream data\nD/*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1226": {"ttr": 33541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00F\\x00F\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:06", "lines": 70, "newlines": 70, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1226\nTz/OS JCL Reference\nT-DD Statement -DEST Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDEST Parameter\nN--------------\nNUse the DEST parameter to specify a destination for a sysout data\nNset. The DEST parameter can send a sysout data set to a remote or\nNlocal terminal, a node, a node and remote workstation, a local\nNdevice or group of devices, or a node and userid.\nN\nD//             DEST=destination as defined by your installation\nM\nN                 destination (JES2):\nN                    LOCAL\nN                    name\nN                    Nnnnnn\nN                    NnRmmmmm to NnnnnnRm (node,remote)\nN                    Rnnnnn or RMnnnnn or RMTnnnnn\nN                    Unnnnn\nN                    (node,userid)\nM\nN                 destination (JES3):\nN                    ANYLOCAL\nN                    device-name\nN                    device-number\nN                    group-name\nN                    nodename\nN                    (node,userid)\nM\nN->nnnnn = 1 - 32767\nN->(node,userid): node (1 - 8 alphanumeric or $, #, @ characters) and\nN  TSO/E userid (1 - 7 alphanumeric or $, #, @ characters) or VM userid\nN  (1 - 8 alphanumeric or $, #, @ characters)\nN\nNExample 1:\nN------------------\nNIn this example, the system sends the sysout data set defined by\nNDD statement DEBIT to the work station that submitted the job, the\nNdata set defined by DD statement CALIF to the remote terminal 555,\nNand the data set defined by DD statement FLORIDA to VM userid 9212U28\nNat node BOCA.\nN\nD//JOBNAME1 JOB ,'MAE BIRD',MSGCLASS=B\nD//ST01#01 EXEC PGM=INTEREST\nD//DEBIT     DD SYSOUT=A\nD//CALIF     DD SYSOUT=A,DEST=R555\nD//FLORIDA   DD SYSOUT=A,DEST=(BOCA,'9212U28')\nM\nMKenneth Tomiak remark:\nMWe can deduce the node (system) BOCA is not an MVS system as the\nMuserid starts with a number. The output from DEBIT will appear\nMwith LOCAL if it was submitted on the machine it runs on. And while\nMR555 does match the naming convention that ought to be a remote\nMsystem, we know nothing about that system. It might even have\nMbeen defined as a LRS/VPS printer. What we do know is that the output\nMwill be transported elsewhere if there is anything setup to\nMreceive it.\nM\nMKenneth Tomiak remark:\nMYUCK on the JOB level MSGCLASS=B when \"B\" is often defined as a\nMPUNCH card output class.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1227": {"ttr": 33543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00f\\x00f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:06", "lines": 102, "newlines": 102, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1227\nTz/OS JCL Reference\nT-DD Statement -DISP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDISP Parameter\nN--------------\nNUse the DISP parameter to describe the status of a data set to the\nNsystem and tell the system what to do with the data set after\nNtermination of the step or job. You can specify one disposition for\nNnormal termination and another for abnormal termination.\nN\nNNote that if an abend occurs within a step, the step itself may\nNterminate normally or abnormally, depending on whether an ESTAE\nN(or ESPIE routine) intercepts the abend and requests that processing\nNcontinue. Normal termination of a step is indicated by the presence\nNof message IEF142I; abnormal termination of a step is indicated by\nNthe presence of message IEF472I.\nI\nINote: Disposition of the data set is controlled solely by the DISP\nIparameter; disposition of the volume(s) on which the data set resides\nIis a function of the volume status when the volume is demounted. If\nIthe UNIT parameter specifies a device, such as a printer or\nItelecommunications device, that does not involve a data set, do not\nIcode the DISP parameter.\nN\nD//\u00ddddname\u00a8  dd DISP=({initial},{normal-end},{abnormal-end}),dsn=....\nN               {initial} {NEW | MOD | OLD | SHR}\nI                 defaults to NEW.\nN               {normal-end} \u00ddCATLG | DELETE | KEEP | PASS | UNCATLG }\nI                 on NEW defaults to DELETE,\nI                 on MOD, OLD, and SHR defaults to KEEP.\nN               {abnormal-end} \u00ddCATLG | DELETE | KEEP | UNCATLG }\nI                 defaults to the normal-end disposition unless PASS\nI                 on NEW then gets DELETE\nI                 on MOD|OLD|SHR get KEEP.\nN\nN'Programming Using The Kenneth Tomiak Method' (PUTKTM-JCL) recommends\nNthat you make it clear what should happen by coding as many\nNsubparameters as needed, even when they are the defaults. Not every\nNcombination ought to be used in real world scenarios. You may need to\nNlook at what did get written to that NEW data set when your program\nNabends. The choices below are all that you ought to be using.\nN\nN//             DISP=(NEW,CATLG),\nN//             DISP=(NEW,DELETE,CATLG),\nN//             DISP=MOD,\nI                 PUTKTM-JCL recommends avoiding MOD.\nN//             DISP=OLD,\nN//             DISP=(OLD,DELETE),\nN//             DISP=(OLD,DELETE,KEEP),\nN//             DISP=SHR,\nN\nNExample 1: Proper use of DISP and avoiding MOD.\nN-----------------------------------------------\nNA program typically gets input from somewhere, we can imagine from\nNa data base management (dbms) subsystem or an existing sequential\nNinput. The program acts upon that data. The program outputs some data\nNto be used by some other program, in this job or another.\nN\nD//\u00ddjobname\u00a8 JOB ...\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Combine (DISP=MOD) two input files into one.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#02 EXEC PGM=IDCAMS\nD//SYSIN     DD *\nD  REPRO INFILE(INPUT1) OUTFILE(OUTPUT1)\nD  REPRO INFILE(INPUT2) OUTFILE(OUTPUT1)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//INPUT1    DD DISP=SHR,DSN=&SYSUID..DATA.GDG(-0)\nD//INPUT2    DD DISP=SHR,DSN=&SYSUID..DATA.ADD\nD//OUTPUT1   DD DISP=(MOD,CATLG),DSN=&SYSUID..DATA.GDG(+1),\nD//             UNIT=3390,VOL=SER=VPWRKA,\nD//             SPACE=(TRK,(2,1)),\nD//             DCB=&SYSUID..DATA.ADD\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Copy the input to SYSOUT.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//IF1       IF (ST01#02.RC = 0) THEN\nD//ST02#02 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DISP=SHR,DSN=&SYSUID..DATA.GDG(+1)\nD//SYSUT2    DD SYSOUT=*\nD//*\nD//IF1    ENDIF (ST01#02.RC = 0)\nD//* End of Job \u00ddjobname\u00a8.\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1228": {"ttr": 33545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00F\\x00F\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:07", "lines": 70, "newlines": 70, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1228\nTz/OS JCL Reference\nT-DD Statement -DLM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDLM Parameter\nN-------------\nNUse the DLM parameter to specify a delimiter to terminate this\nNin-stream data set. When the DLM parameter assigns a different\nNdelimiter, the in-stream data records can include standard delimiters,\nN such as /* and //, in the data.\nN\nNIn a JES2 system, when the DLM delimiter appears on a DD * statement,\nNeither the assigned delimiter or // ends the input data set. When the\nNDLM delimiter appears on a DD DATA statement, only the assigned\nNdelimiter ends the input data set.\nN\nNIn a JES3 system, when the DLM delimiter appears on either a DD * or\nNDD DATA statement, only the assigned delimiter ends the input data set.\nN\nINote: When the DLM delimiter overrides any implied delimiter, you must\nIterminate the data with the DLM characters. Otherwise, the system keeps\nIreading until the reader is empty.\nN\nNExcept for the JES2 /*SIGNON and /*SIGNOFF statements, the system does\nNnot recognize JES2 and JES3 statements in an input stream between the\nNDLM parameter and the delimiter it assigns. The JES2 /*SIGNON and\nN/*SIGNOFF statements are processed by the remote work station\nNregardless of any DLM delimiter.\nN\nD//             DLM=delimiter\nI                   If the specified delimiter contains any special\nI                   characters, enclose it in apostrophes. In this case,\nI                   a special character is any character that is neither\nI                   alphanumeric nor national (@, #, $).\nN\nNExamples:\nN---------\nD//          DD DATA,DLM=@@\nN..data..\nD@@\nD//          DD DATA,DLM=##\nN//\u00ddJOB\u00a8\nN//..MORE jcl..\nN//INPUT     DD *\nN..INSTREAM DATA..\nN/*\nN//STEP\nD//\nD$$\nD//          DD DATA,DLM=$$\nN..data..\nD@@\nD//          DD DATA,DLM='*/'\nN/* NEW RECORD\nN..data..\nN/* NEW RECORD\nN..data..\nD*/\nN\nMKenneth Tomiak remark:\nMThere is no harm in putting data into a sequential file and avoid\nMusing instream data that contains the End Of File (/*) Statement.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1229": {"ttr": 33547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:07", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1229\nTz/OS JCL Reference\nT-DD Statement -DSID Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDSID Parameter\nN--------------\nNUse the DSID parameter to specify the data set identifier of an input\nNor output data set on a diskette of the 3540 Diskette Input/Output\nNUnit.\nIHow obscure are these?\nN\nD//             DSID={ID}\nD//                  {ID,V}\nN\nNExample 1: 3540 input and output:\nN---------------------------------\nNIn this example, the SYSIN DD statement indicates that the input is\nNon diskette 123456 in data set ABLE and must be verified. The\nNoutput will be written on a diskette in data set BAKER.\nN\nD//JOBNAME1 JOB ,,MSGLEVEL=(1,1)\nD//ST01#01 EXEC PGM=AION\nD//SYSIN     DD *,DSID=(ABLE,V),VOLUME=SER=123456,\nD//             DCB=LRECL=80\nD//SYSPRINT  DD SYSOUT=E,DCB=LRECL=128,DSID=BAKER\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1230": {"ttr": 33549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:07", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1230\nKNULLFILE DUMMY\nTz/OS JCL Reference\nT-DD Statement -DSNAME Parameter (DSN)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDSNAME Parameter (DSN)\nN----------------------\nNUse the DSNAME parameter to specify the name of a data set. For a\nNnew data set, the specified name is assigned to the data set; for\nNan existing data set, the system uses the name to locate the\nNdata set.\nN\nD//          DD  DISP=....,DSN={dsname}\nN                         {DSNAME=}\nN             {dsname(member-name) }\nN             {dsname(generation-number) }\nN             {dsname(area-name) }\nN             {&&dsname }\nN             {&&dsname(member-name) }\nN             {&&dsname(area-name) }\nN             {*.ddname }\nN             {*.stepname.ddname }\nN             {*.stepname.procstepname.ddname}\nN             {NULLFILE }\nN\nN\nNmember-name: member in PDS or PDSE\nN\nNgeneration-number: 0 or signed integer\nN\nNarea-name: INDEX, PRIME, or OVFLOW area in indexed sequential data set\nN\nN&&dsname: temporary data set name\nN\nN*.ddname: copy dsname from earlier DD\nN\nNstepname: DD in named step\nN\nNprocstepname: step in named procedure\nN\nNNULLFILE: dummy data set\nN\nNExamples: None\nN--------------\nIRefer to your installation's  naming standards.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1231": {"ttr": 33793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00c\\x00c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:07", "lines": 99, "newlines": 99, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1231\nTz/OS JCL Reference\nT-DD Statement -DSNTYPE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDSNTYPE Parameter\nN-----------------\nNUse the DSNTYPE parameter to specify:\nN->A new partitioned data set (PDS)\nN->A new partitioned data set extended (PDSE), which is also\nN  called a library\nN->A new hierarchical file system (HFS) data set\nN->A first-in first-out (FIFO) special file, which is also\nN  called a named pipe\nN->A new basic format data set\nN->A new large format data set\nN->A new extended format data set\nN\nNAlso use the DSNTYPE parameter to override the DSNTYPE\nNattribute defined in the data class of the new data set.\nN\nD//             DSNTYPE=   {BASIC} | {EXTPREF} | {EXTREQ} | {HFS} |\nD                          {LARGE} | {LIBRARY} | {PDS}    | {PIPE}\nI                 BASIC:   The system will select basic format if the\nI                          data set is sequential (DSORG=PS or PSU) or\nI                          DSORG is omitted from all sources and the\nI                          data set is not VSAM.\nI                 EXTPREF: Specifies that you prefer the data set be\nI                          extended format if the data set is VSAM,\nI                          sequential, or DSORG is omitted from all\nI                          sources. If extended format is not possible,\nI                          the system will select basic format.\nI                 EXTREQ:  Specifies that the data set be extended\nI                          format if the data set is VSAM, sequential,\nI                          or DSORG is omitted from all sources.\nI                 HFS:     Specifies an hierarchical file system (HFS)\nI                          data set.\nI                 LARGE:   The system will select large format if the\nI                          data set is sequential (DSORG=PS or PSU) or\nI                          DSORG is omitted from all sources and the\nI                          data set is not VSAM.\nI                 LIBRARY: Specifies a DFSMS-managed partitioned data\nI                          set extended (PDSE). A PDSE can contain\nI                          data and problem object members.\nI                 PDS:     Specifies a partitioned data set (PDS). A\nI                          PDS can contain data and load module members.\nI                 PIPE:    Specifies a FIFO special file. Specify\nI                          PIPE only when the DD statement also\nI                          specifies a PATH parameter.\nN\nNExamples:\nN--------------------\nNThe \u00ddddname\u00a8 specifies which one it is.\nN\nD//BASIC     DD DISP=(NEW,CATLG),DSN=&SYSUID.DSNTYPE.BASIC,   <=Normal\nD//             UNIT=SYSDA,DSNTYPE=BASIC,\nD//             SPACE=(TRK,(10,1)),\nD//             DCB=(DSORG=PS,RECFM=VB,BLKSIZE=0,LRECL=255)\nD//EXTPREF   DD DISP=(NEW,CATLG),DSN=&SYSUID.DSNTYPE.EXTPREF, <=EAV\nD//             UNIT=SYSDA,DSNTYPE=(EXTPREF,2),EATTR=OPT,\nD//             SPACE=(TRK,(10,1)),\nD//             DCB=(DSORG=PS,RECFM=VB,BLKSIZE=0,LRECL=255)\nI               EXTPREF means extended area preferred\nD//EXTREQ    DD DISP=(NEW,CATLG),DSN=&SYSUID.DSNTYPE.EXTREQ,  <=EAV\nD//             UNIT=SYSDA,DSNTYPE=(EXTREQ,2),EATTR=OPT,\nD//             SPACE=(TRK,(10,1)),\nD//             DCB=(DSORG=PS,RECFM=VB,BLKSIZE=0,LRECL=255)\nI               EXTREQ means extended area required.\nD//HFS       DD DISP=(NEW,CATLG),DSN=&SYSUID.DSNTYPE.HFS,     <=USS\nD//             UNIT=SYSDA,DSNTYPE=HFS,\nD//             SPACE=(TRK,(100,0,1))\nI               You really want to create a zFS.\nD//LARGE     DD disp=(new,catlg),DSN=BIGPROJ.BIGDATA,         <=cyl\nD//             UNIT=SYSDA,DSNTYPE=LARGE,\nD//             SPACE=(TRK,(80000,40000))\nD//LIBRARY   DD DISP=(NEW,CATLG),DSN=&SYSUID.DSNTYPE.LIBRARY, <=PDSE\nD//             UNIT=SYSDA,DSNTYPE=(LIBRARY,2),\nD//             SPACE=(TRK,(10,1,1)),\nD//             DCB=(DSORG=P),RECFM=FB,BLKSIZE=4096,LRECL=80)\nD//PDS       DD DISP=(NEW,CATLG),DSN=&SYSUID.DSNTYPE.PDS,     <=pds\nD//             UNIT=SYSDA,DSNTYPE=PDS,\nD//             SPACE=(TRK,(10,1,89)),\nI                                89 = 44 + (45 * n) = 2 trks\nI                                10 - 2 = 8 trks for data\nD//             DCB=(DSORG=PO),RECFM=FB,BLKSIZE=0,LRECL=80)\nI                   BLKSIZE=0 begets 27920 / 80 = 698 records/block\nI                             not including end-of-member markers.\nD//PIPE      DD PATHDISP=(KEEP,DELETE),\nD//             PATH='/u/payroll/buffer',\nD//             PATHMODE=(SIWUSR,SIRGRP),\nD//             PATHOPTS=(OWRONLY,OEXCL,OCREAT),\nD//             DSNTYPE=PIPE\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1232": {"ttr": 33795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00<\\x00<\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:08", "lines": 60, "newlines": 60, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1232\nKNULLFILE JCLR1230\nTz/OS JCL Reference\nT-DD Statement -DUMMY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDUMMY Parameter\nN---------------\nNUse the DUMMY parameter to specify that:\nN\nN->No device or external storage space is to be allocated to\nN  the data set.\nN->No disposition processing is to be performed on the\nN  data set.\nN->For BSAM and QSAM, no input or output operations are to be\nN  performed on the data set.\nN\nMAlso see DSN=NULLFILE in JCLR1230.\nN\nD//\u00ddddname\u00a8  DD DUMMY\u00dd,parameter\u00a8...\nI\nI               All parameters coded on a DD DUMMY statement must be\nI               syntactically correct. The system checks their syntax.\nN\nNExample 1: Temporary ignore allocation\nN--------------------------------------\nNDD statement OUTPUT1 defines a dummy data set. The other parameters\nNcoded on the statement are checked for syntax but not used.\nN\nD//ST01#02 EXEC PGM=IDCAMS\nD//SYSIN     DD *\nD  REPRO INFILE(INPUT1) OUTFILE(OUTPUT1)\nD  REPRO INFILE(INPUT2) OUTFILE(OUTPUT1)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//INPUT1    DD *\nD  This is one record from the first input file.\nD/*\nD//INPUT2    DD *\nD  This is one record from the second input file.\nD  File 2 has 2 records.\nD  Tribute to Monty Python - three records.\nD  And only 3.\nD/*\nD//OUTPUT1   DD DUMMY,DISP=(MOD,CATLG),DSNAME=&SYSUID..X.X.Z,\nD//             UNIT=SYSDA,VOL=SER=VPWRKA,\nD//             SPACE=(TRK,(10,2)),\nD//             DCB=(DSORG=PS,RECFM=FB,BLKSIZE=0,LRECL=80)\nN\nNThis step will show a count of records without actually doing\nNthe copy. Later you can remove 'DUMMY,' and execute it for real.\nNThe fake execution is handy to get record counts if you then\nNcalculate how much space you really need.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1233": {"ttr": 33797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:08", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1233\nTz/OS JCL Reference\nT-DD Statement -DYNAM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNDYNAM Parameter\nN---------------\nNUse the DYNAM parameter to increase by one the control value for\nNdynamically allocated resources held for reuse. Even when DYNAM is\nNnot coded, the system normally holds resources in anticipation of\nNreuse. The DYNAM parameter is supported to provide compatibility\nNwith older systems.\nN\nD//          DD DYNAM  {COMMENTS}\nM\nMKenneth Tomiak remark:\nMIBM failed to mention what the older systems are. What I glean from\nMthe purpose is that you have no reason to use this.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1234": {"ttr": 33799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:08", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1234\nTz/OS JCL Reference\nT-DD Statement -EATTR Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNEATTR Parameter\nN---------------\nNUse the EATTR parameter to indicate whether the data set can support\nNextended attributes (format 8 and 9 DSCBs) or not. To create such\nNdata sets, you can include extended address volumes (EAVs) in specific\nNstorage groups or specify an EAV on the request or direct the\nNAllocation to an esoteric containing EAV devices.\nN\nD//\u00ddddname\u00a8  DD disp=...,dsn=...,\nD//             EATTR= {OPT} | {NO}\nN\nNExample 1: Allocate in the Extended Address Space (EAS) of a Disk\nN-----------------------------------------------------------------\nNThe DD statement defines a new partitioned data set. The system\nNallocates 10000 cylinders to the data set, of which one hundred\nN256-byte records are for a directory. When the CONTIG subparameter\nNis coded, the system allocates 10,000 contiguous cylinders on the\nNvolume.\nN\nNEATTR=OPT indicates that the data set might be created with extended\nNattributes. With this option, the data set can reside in the extended\nNaddress space (EAS) of the volume.\nIIf it does, then it will allocate 10,017 cylinders.\nN\nD//DD2       DD DISP=(new,catlg),DSN=PDS12,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(CYL,(10000,,100),,CONTIG),\nD//             EATTR=OPT\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1235": {"ttr": 33801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16R\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:52:08", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1235\nTz/OS JCL Reference\nT-DD Statement -EXPDT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNEXPDT Parameter\nN---------------\nNUse the EXPDT parameter to specify the expiration date for a new data\nNset. On and after the expiration date, the data set can be deleted or\nNwritten over by another data set.\nN\nD//             EXPDT= {yyddd }\nD//                    {yyyy/ddd}\nN\nNyyddd: expiration date (yy: 2-digit year, ddd: day 001-366)\nN\nNyyyy/ddd: expiration date (yyyy: 4-digit year, ddd: day 001-366)\nN\nIEXPDT=99365 AND EXPDT=99366 are reserved for never-scratch. Though\nIyour tape management system should treat 99365 as catalog control\nIand be the system default, negating your use if this parameter.\nN\nNExample 1: Foolishly setting a Disk data set exipiration date.\nN--------------------------------------------------------------\nNIn this example, the data set is not eligible for being deleted or\nNwritten over until February 2, 2026.\nN\nD//DD7       DD DISP=(NEW,catlg),DSN=BOB1,\nD//             UNIT=SYSDA,\nD//             SPACE=(TRK,(1,1)),\nD//             EXPDT=2026/033\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1236": {"ttr": 33803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00F\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16S\\x00I\\x00I\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:53:46", "lines": 73, "newlines": 73, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1236\nTz/OS JCL Reference\nT-DD Statement -FCB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-165346\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNFCB Parameter\nN-------------\nNUse the FCB parameter to specify:\nN\nN-<The forms control buffer (FCB) image JES is to use to guide printing\nN  of this sysout data set by a 1403 Printer, 3211 Printer, 3203\nN  Printer Model 5, 3800 Printing Subsystem, 4245 Printer, 4248 Printer,\nN  or by a printer supported by systems network architecture (SNA)\nN  remote job entry (RJE).\nN\nN->The carriage control tape JES is to use to control printing of this\nN  sysout data set by a 1403 Printer or by a printer supported by\nN  SNA RJE.\nN\nN->The data-protection image JES is to use to control output of this\nN  sysout data set by a 3525 Card Punch.\nN\nN->The name of a page definition to be used by PSF in formatting a print\nN  data set.\nN\nNThe FCB image specifies how many lines are to be printed per inch and\nNthe length of the form. JES loads the image into the printer's forms\nNcontrol buffer. The FCB image is stored in SYS1.IMAGELIB. IBM provides\nNthree standard FCB images:\nN\nN->STD1, which specifies 6 lines per inch on an 8.5-inch-long form.\nN  (3211 and 3203-2 only)\nN\nN->STD2, which specifies 6 lines per inch on an 11-inch-long form.\nN  (3211 and 3203-2 only)\nN\nN->STD3, which specifies 8 lines per inch for a dump on an 11-inch\nN  form. (3800 only)\nN\nD//             FCB= {fcb-name }\nD//                  {(fcb-name {,ALIGN } ) }\nD//                             {,VERIFY }\nNExample 1 + 2: use IMG2 and show image first:\nN---------------------------------------------\nNThis sysout DD statement specifies output class V. Output class V\nNroutes output to a printer having the forms control buffer feature,\nNJES loads the FCB image IMG2 into the forms control buffer. If the\nNprinter does not have the forms control buffer feature, the operator\nNreceives a message to mount the carriage control tape IMG2 on the\nNprinter.\nN\nNBecause VERIFY is coded, the system displays the FCB image on the\nNprinter before printing the data set.\nN\nD//DD2       DD SYSOUT=V,FCB=(IMG2,VERIFY)\nN\nNExample 3: Prompt to align the form:\nN------------------------------------\nNin this example, the DD statement defines an output data set to be\nNprinted via output class A. The FCB parameter requests that the data\nNset be printed under control of the FCB image named FCB6. Because ALIGN\nNis coded, the system issues a message to the operator requesting that\nNthe alignment of the printer forms be checked before the data set\nNis printed.\nN\nD//OUTDDS     DD SYSOUT=A,FCB=(FCB6,ALIGN)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1237": {"ttr": 33805, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16S\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:53:47", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1237\nKPATH USS\nTz/OS JCL Reference\nT-DD Statement -FILEDATA Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNFILEDATA Parameter\nN------------------\nNUse the FILEDATA keyword to describe the content type of\nNa z/OS UNIX file so that the system can determine how to\nNprocess the file.\nN\nD//             FILEDATA= {BINARY} | {RECORD\u00a8 | {TEXT }\nI                         BINARY: byte-stream file\nI                         RECORD: Indicates that the data consists of\nI                                 records with prefixes. The record\nI                                 prefix contains the length of the\nI                                 record that follows. On output, the\nI                                 access method inserts a record prefix\nI                                 at the beginning of each record.\nM                                 Mimics RECFM=V processing.\nI                         TEXT: delimited by the EBCDIC\nI                               newline character (x'15') stripped off\nI                               for input and added for output.\nN\nNExample 1:Using a normal text type file.\nN----------------------------------------\nNIn this example, the DD statement identifies a hierarchical file and\nNinforms the system that this file contains records delimited by the\nNnewline character.\nN\nD//DD1       DD PATH='/u/d89pek1/new',FILEDATA=TEXT,\nD//             PATHMODE=(SIRWXU,SISUID),PATHOPTS=(ORDONLY,OCREAT)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1238": {"ttr": 33807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16S\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:53:47", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1238\nTz/OS JCL Reference\nT-DD Statement -FLASH Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNFLASH Parameter\nN---------------\nNUse the FLASH parameter to identify the forms overlay to be used in\nNprinting this sysout data set on a 3800 Printing Subsystem and,\nNoptionally, to specify the number of copies on which the forms\nNoverlay is to be printed.\nI\nINote: FLASH applies only for a data set printed on a 3800.\nN\nD//             FLASH= {(overlay-name{,count})} | {NONE }\nI                      overlay-name: forms overlay frame\nI                        (1 - 4 alphanumeric or $, #, @ characters)\nI                      count: copies with overlay (0 - 255)\nI                      NONE: suppresses flashing\nN\nExample 1: 5 + 5 = 10\nN--------------------\nNIn this example, JES issues a message to the operator requesting\nNthat the forms-overlay frame named ABCD be inserted into the printer.\nNThen JES prints the first five copies of the data set with the\nNforms-overlay and the last five copies without.\nN\nD//DD1       DD SYSOUT=A,COPIES=10,FLASH=(ABCD,5)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1239": {"ttr": 33809, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:10", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1239\nTz/OS JCL Reference\nT-DD Statement -FREE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-165410\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNFREE Parameter\nN--------------\nNUse the FREE parameter to specify when the system is to\nNunallocate the resources used for this DD statement's data set.\nNThe resources can be devices, volumes, or exclusive use of a data set.\nI\nINote: Specifying FREE will not release the enqueue on the data\nIset until the last step that requires the data set completes\nIprocessing.\nN\nD//             FREE= {CLOSE} | {END}\nI                      CLOSE: unallocate when data set is closed\nI                      END: unallocate at end of last step\nI                           <== The default\nN\nNExample 3: When FREE takes effect\nN---------------------------------\nNIn this example, data set A is passed by ST01#03 to ST02#03. FREE=END\nNon DD statement DD1 is ignored because the disposition is PASS.\nNFREE=END on DD statement DD2 causes data set A to be unallocated at\nNthe end of ST02#03, when it is also cataloged.\nN\nD//ST01#03 EXEC PGM=ABLE1\nD//DD1       DD DISP=(new,PASS),DSN=A,FREE=END,   <=Ignored\nD//             unit=sysda,\nD//             space=(typ,(pri,sec),rlse),\nD//             dcb=(dsorg=org,recfm=fb,blksize=0,lrecl=recsize)\nD//ST02#03 EXEC PGM=ABLE2\nD//DD2       DD DISP=(OLD,CATLG),DSN=A,FREE=END\nI               Without FREE=END the DISP=OLD enqueue would be held\nI               until ST03#03 and the JOB ended.\nD//ST03#03 EXEC PGM=LONGRUN\nD//DD1       DD DISP=(NEW,CATLG),DSN=B,\nD//             unit=sysda,\nD//             space=(typ,(pri,sec),rlse),\nD//             dcb=(dsorg=org,recfm=fb,blksize=0,lrecl=recsize)\nD//REPORT    DD SYSOUT=*\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1240": {"ttr": 33811, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13o\\x01\\x18\\x13\\x7f\\x16T\\x00+\\x00+\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-16T00:00:00", "modifydate": "2018-05-17T16:54:11", "lines": 43, "newlines": 43, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1240\nTz/OS JCL Reference\nT-DD Statement -FREEVOL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180516-231439\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNFREEVOL Parameter\nN-----------------\nNRequests that when reading a multivolume data set, the system finish\nNreading the current volume and then dequeue the volume serial number\nNand demount the volume. This makes the volume immediately available to\nNanother job in another system. An attempt by the same task to\nNreprocess the volume using the same JCL DD statement will result in\nNan abnormal end.\nN\nD//             FREEVOL={END} | {EOV}\nI                        END: Requests that volumes be dequeued at the\nI                             end of the job step.\nI                             FREEVOL=END is the default. Even when\nI                             incorrectly coded.\nI                        EOV: Requests that when reading a multivolume\nI                             data set, the system finish reading the\nI                             current volume and then dequeue the volume\nI                             serial number and demount the volume.\nM\nMKenneth Tomiak remark:\nMIncorrectly coding the FREEVOL Parameter does not result in a\nMWarning message as alluded to in the manual, you get an (inaccurately\nMused) Informational message followed by a JCL ERROR termination.\nN\nNExample 1: EOV is the obvious use for FREEVOL\nN---------------------------------------------\nNThis example assumes you are not re-using the tape data set within the\nNJOB. And that includes not re-opening it within the same step.\nN\nD//FREEVOL   DD DISP=SHR,DSN=&SYSUID..MULTIVOL.TAPEDSN, <==SHR required\nD//             FREEVOL=EOV\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1241": {"ttr": 33813, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:11", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1241\nTz/OS JCL Reference\nT-DD Statement -HOLD Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNHOLD Parameter\nN--------------\nNUse the HOLD parameter to tell the system to hold a sysout data set\nNuntil it is released by the system operator.\nN\nD//             HOLD= {YES|Y} | {NO|N}\nI                      YES|Y: Overrides a non-held output class to\nI                             hold for manual release.\nI                      NO|N:  Overrides a held output class to not\nI                             require manual release.\nN\nNExample 1: Hold for manual release:\nN-----------------------------------\nNIn this example, sysout data set DD1 from JOB01 is held on a queue\nNuntil the TSO/E user at RMT6 asks the system operator to release the\nNdata set.\nN\nD//JOBNAME1 JOB ,'RJE OUTPUT',MSGLEVEL=1\nD//ST01#01 EXEC PGM=EXAMPLE\nD//DD1       DD SYSOUT=R,DEST=RMT6,HOLD=YES\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1242": {"ttr": 34050, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x007\\x007\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:11", "lines": 55, "newlines": 55, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1242\nKKEYLABL2 Encryption Key encrypting\nTz/OS JCL Reference\nT-DD Statement -KEYLABL1 Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNKEYLABL1 Parameter\nN------------------\nNUse the KEYLABL1 to specify the label for the key encrypting key used\nNby the Encryption Key Manager. The key encrypting key is used to\nNencrypt the data (encryption) key.\nI\nIIf you specify the KEYLABL1 parameter on a DD statement, you must also\nIcode the KEYENCD1 parameter.\nN\nNCode the KEYLABL1 parameter when you want to:\nN\nN->Specify the label for the key encrypting key used by the Encryption\nN  Key Manager, or\nN\nN->Override the label for the key encrypting key defined in the data\nN  class of the data set.\nN\nNSpecification of the key labels does not by itself enable encryption.\nNEncryption must be enabled by a data class that specifies an\nNencryption format, for example dataclas=EEFMT2.\nN\nD//             KEYLABL1='mykeylabel1'\nI                 mykeylabel1: Specifies the KEYLABL1 for the key\nI                              encrypting key used by the Encryption\nI                              Key Manager. The key label can be up\nI                              to 64 characters in length.\nN\nNExample 1: Label encoding:\nN--------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL1='LABELQ1.LABELQ2.LABELQ3',KEYENCD1=L,\nD//             storclas=atl,dataclas=ENCRYPT\nN\nNExample 2: Hash encoding:\nN-------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL1='LABELQ1.LABELQ2.LABELQ3',KEYENCD1=H,\nD//             storclas=atl,dataclas=ENCRYPT\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1243": {"ttr": 34052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x007\\x007\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:11", "lines": 55, "newlines": 55, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1243\nKKEYLABL1 Encryption Key encrypting\nTz/OS JCL Reference\nT-DD Statement -KEYLABL2 Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNKEYLABL2 Parameter\nN------------------\nNUse the KEYLABL2 to specify the label for the key encrypting key used\nNby the Encryption Key Manager. The key encrypting key is used to\nNencrypt the data (encryption) key.\nI\nIIf you specify the KEYLABL2 parameter on a DD statement, you must also\nIcode the KEYENCD2 parameter.\nN\nNCode the KEYLABL2 parameter when you want to:\nN\nN->Specify the label for the key encrypting key used by the Encryption\nN  Key Manager, or\nN\nN->Override the label for the key encrypting key defined in the data\nN  class of the data set.\nN\nNSpecification of the key labels does not by itself enable encryption.\nNEncryption must be enabled by a data class that specifies an\nNencryption format, for example dataclas=EEFMT2.\nN\nD//             KEYLABL2='mykeylabel1'\nI                 mykeylabel2: Specifies the KEYLABL2 for the key\nI                              encrypting key used by the Encryption\nI                              Key Manager. The key label can be up\nI                              to 64 characters in length.\nN\nNExample 1: Label encoding:\nN--------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL2='LABELQ1.LABELQ2.LABELQ3',KEYENCD2=L,\nD//             storclas=atl,dataclas=ENCRYPT\nN\nNExample 2: Hash encoding:\nN-------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL2='LABELQ1.LABELQ2.LABELQ3',KEYENCD2=H,\nD//             storclas=atl,dataclas=ENCRYPT\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1244": {"ttr": 34054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x001\\x001\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:12", "lines": 49, "newlines": 49, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1244\nKKEYLABL2 Encryption Key encrypting\nTz/OS JCL Reference\nT-DD Statement -KEYENCD1 Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNKEYENCD1 Parameter\nN------------------\nNUse the KEYENCD1 parameter to specify how the label for the key\nNencrypting key specified by the key label 1 is encoded by the\nNEncryption Key Manager and stored on the tape cartridge.\nN\nNCode the KEYENCD1 parameter when you want to specify how the label\nNfor the key encrypting key specified by the key label 1 is encoded\nNby the Encryption Key Manager and stored on the tape cartridge.\nN\nNSpecification of the key labels does not by itself enable encryption.\nNEncryption must be enabled by a data class that specifies an\nNencryption format, for example dataclas=EEFMT2.\nN\nD//             KEYENCD1= {H} | {L}\nI                 H: Indicates that a hash of the public key referenced\nI                    by key label 1 will be stored on the cartridge\nI                    rather than the key label.\nI                 L: Indicates that the key label 1 will be stored as\nI                    part of the EEDK structure on the tape cartridge.\nN\nNExample 1: Label encoding:\nN--------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL1='LABELQ1.LABELQ2.LABELQ3',KEYENCD1=L,\nD//             storclas=atl,dataclas=ENCRYPT\nN\nNExample 2: Hash encoding:\nN-------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL1='LABELQ1.LABELQ2.LABELQ3',KEYENCD1=H,\nD//             storclas=atl,dataclas=ENCRYPT\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1245": {"ttr": 34056, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x001\\x001\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:12", "lines": 49, "newlines": 49, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1245\nKKEYLABL2 Encryption Key encrypting\nTz/OS JCL Reference\nT-DD Statement -KEYENCD2 Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNKEYENCD2 Parameter\nN------------------\nNUse the KEYENCD2 parameter to specify how the label for the key\nNencrypting key specified by the key label 2 is encoded by the\nNEncryption Key Manager and stored on the tape cartridge.\nN\nNCode the KEYENCD2 parameter when you want to specify how the label\nNfor the key encrypting key specified by the key label 2 is encoded\nNby the Encryption Key Manager and stored on the tape cartridge.\nN\nNSpecification of the key labels does not by itself enable encryption.\nNEncryption must be enabled by a data class that specifies an\nNencryption format, for example dataclas=EEFMT2.\nN\nD//             KEYENCD2= {H} | {L}\nI                 H: Indicates that a hash of the public key referenced\nI                    by key label 1 will be stored on the cartridge\nI                    rather than the key label.\nI                 L: Indicates that the key label 1 will be stored as\nI                    part of the EEDK structure on the tape cartridge.\nN\nNExample 1: Label encoding:\nN--------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL2='LABELQ1.LABELQ2.LABELQ3',KEYENCD2=L,\nD//             storclas=atl,dataclas=ENCRYPT\nN\nNExample 2: Hash encoding:\nN-------------------------\nNAssumes dataclas=ENCRYPT enables encryption.\nN\nD//DD1       DD DISP=(NEW,CATLG),DSN=DSN5,\nD//             KEYLABL2='LABELQ1.LABELQ2.LABELQ3',KEYENCD2=H,\nD//             storclas=atl,dataclas=ENCRYPT\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1246": {"ttr": 34058, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00G\\x00G\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:12", "lines": 71, "newlines": 71, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1246\nKKEYOFF\nTz/OS JCL Reference\nT-DD Statement -KEYLEN Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nD============\nNKEYLEN Parameter\nN----------------\nNUse the KEYLEN parameter to specify the length of the keys used in a\nNnew data set.\nN\nNCode the KEYLEN parameter when you want to:\nN\nN->Specify a key length for the data set or\nN\nN->With SMS, override the key length defined in the data class of the\nN  data set.\nN\nNThe key length can be supplied from the data set label (or data class\nNwith SMS). If a key length is not specified or supplied, input or\nNoutput requests must not require keys.\nN\nIKEYLEN applies to data sets with the BDAM, BPAM, BSAM, EXCP, and QISAM\nIaccess methods, and, with SMS, to VSAM data sets.\nM\nMKenneth Tomiak remark:\nMI have only seen this used with the PASSWORD dataset. Any security\nMpackage is far better than relying on the PASSWORD dataset. However,\nMthere might some other type of data set you can cause yourself trouble\nMwith by using this. So, if you must use this then also see KEYOFF.\nN\nD//             KEYLEN=bytes,keyoff=offset\nI                 bytes: Specifies the length, in bytes, of the keys\nI                        used in the data set.\nI\nI                        The number of bytes is:\nI                          Note: Use only 0 for a member of a\nI                          partitioned data set extended (PDSE).\nI                          Use 0 or 8 to perform input operations on the\nI                          directory of a PDSE.\nI                        ->0 to 255 for non-VSAM data sets. The key\nI                          length must be less than or equal to the\nI                          record length.\nI                        ->1 to 255 for VSAM key-sequenced (RECORG=KS)\nI                          data sets. A key length must be specified,\nI                          either explicitly with the KEYLEN or LIKE\nI                          parameter, or in the data class for the data\nI                          set. The key length must be less than the\nI                          record length.\nN\nNExample 1: Copy DCB but override KEYLEN.\nN----------------------------------------\nNDD statement DD4 defines a new data set named JST and requests that\nthe system copy the DCB information from the data set label of the\nNcataloged data set named A.B.C. If the data set label contains a key\nNlength specification, it is overridden by the KEYLEN coded on this\nNDD statement.\nN\nD//DD4       DD DISP=(NEW,catlg),DSN=JST,\nD//             UNIT=sysda,\nD//             SPACE=(CYL,(12,2)),DCB=(A.B.C),KEYLEN=8\nM\nMKenneth Tomiak remark:\nMYou ought not to be using this.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1247": {"ttr": 34060, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00.\\x00.\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:12", "lines": 46, "newlines": 46, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1247\nKKEYLEN DCB RKP VSAM\nTz/OS JCL Reference\nT-DD Statement -KEYOFF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNKEYOFF Parameter\nN----------------\nI\nISMS ONLY!\nI\nNUse the KEYOFF parameter to specify the key offset, the position of\nNthe first byte of the record key in each logical record of a new VSAM\nNdata set. The first byte of a logical record is position 0.\nN\nNIf SMS is not installed or is not active, the system syntax checks and\nNthen ignores the KEYOFF parameter.\nN\nNWith SMS only:\nN\nD//             KEYOFF=offset-to-key\nI                 offset-to-key: position of key (0 to difference of\nI                                LRECL and KEYLEN minus 1)\nN\nNExample 1: New VSAM data set.\nN-----------------------------\nNIn the example, the data class VSAM1 defines a key-sequenced VSAM data\nNset. The key offset of 2 overrides the key offset defined in the data\nNclass and specifies that the first byte of the key is in the third\nNposition of each record.\nN\nD//SMSDS3    DD DISP=(NEW,KEEP),DSN=MYDS3.PGM,\nD//             DATACLAS=VSAM1,KEYOFF=2\nM\nMKenneth Tomiak remark:\nMI have only seen this used with the PASSWORD dataset. And any security\nMpackage is far better than relying on the PASSWORD dataset. However,\nMthere might some other type of data set you can cause yourself trouble\nMwith by usingthis. So, if you must use this then also see KEYLEN.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1248": {"ttr": 34062, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00M\\x00M\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:13", "lines": 77, "newlines": 77, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1248\nKTape reel cartridge vts\nTz/OS JCL Reference\nT-DD Statement -LABEL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNLABEL Parameter\nN---------------\nNUse the LABEL parameter to specify for a tape:\nN\nN->The type and contents of the label or labels for the data set.\nN\nN->If a password is required to access the data set.\nN\nN->If the system is to open the data set only for input or output.\nN\nN->The expiration date or retention period for the data set.\nN\nIAlthough subparameters RETPD and EXPDT are shown in the syntax of\nIthe LABEL parameter, you should use the RETPD or EXPDT DD parameter\nIto specify a retention period or expiration date for the data set.\nN\nNFor a tape data set, this parameter can also specify the relative\nNposition of the data set on the volume.\nM\nMRelative: Is this IBM hinting at how using BLP on an SL tape\nMrequires you to count tape label data sets? If so, to get data:\nM        BLP-seq-no = (SL-seq-no x 3) - 1\nN\nD//             LABEL=({seq-no}{,type}{,PASSWORD}){,IN}{,RETPD=nnnn})\nD//                                   {,NOPWREAD}){,OUT}{,EXPDT={yyddd}}\nD//                                   {, })       {, }  {    {yyyy/ddd}}\nI\nI                       seq-no: data set position on tape volume\nI                               (1 - 4 decimal digits)\nI                       label-type: SL: IBM standard labels\nI                                   SUL: IBM standard and user labels\nI                                   AL: ISO/ANSI Version 1 and\nI                                       ISO/ANSI/FIPS Version 3 labels\nI                                   AUL: user labels and ISO/ANSI\nI                                        Version 1 and ISO/ANSI/FIPS\nI                                        Version 3 labels\nI                                   NSL: nonstandard labels\nI                                   NL: no labels\nI                                   BLP: bypass label processing\nI                                   LTM: leading tapemark\nI                       PASSWORD: password required to access data set\nI                       NOPWREAD: password required to change or delete\nI                                 data set\nI                       IN: only read BSAM data set opened for INOUT or\nI                           BDAM data set opened For UPDAT\nI                       OUT: only write to BSAM data set opened for\nI                            OUTIN or OUTINX\nI                       RETPD=nnnn: retention period\nI                            (nnnn: 1 - 4 decimal digits)\nI                       EXPDT=yyddd: expiration date\nI                            (yy: 2-digit year, ddd: day 001 - 366)\nI                       EXPDT=yyyy/ddd: expiration date\nI                            (yyyy: 4-digit year, ddd: day 001 - 366)\nN\nNExample 3: What you should be using.\nN------------------------------------\nNDD statement DD3 indicates an existing data set. The LABEL parameter\nNindicates that the data set is fourth on the tape volume.\nN\nD//DD3       DD DISP=(new,catlg)DSN=SPECS(+1),\nD//             UNIT=AFF.prevstep.ddname,VOL=(REF=*.prevstep.ddname),\nD//             LABEL=(4,SL)\nI\nIAssumes you correctly wrote three previous data files on the tape.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1249": {"ttr": 34064, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00)\\x00)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:13", "lines": 41, "newlines": 41, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1249\nTz/OS JCL Reference\nT-DD Statement -LGSTREAM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNLGSTREAM Parameter\nN------------------\nNUse the LGSTREAM parameter to specify the prefix of the name of the\nNlog stream for an SMS-managed VSAM data set. Use it only for\nNallocating SMS-managed VSAM data sets that will be accessed using\nNrecord level sharing (RLS).\nN\nD//             LGSTREAM=name\nI                 name: Specifies the name of the prefix the system\nI                       logger uses for the forward recovery log\nI                       stream for recording changes made to the data\nI                       set when accessed in the RLS mode. The system\nI                       logger adds other qualifiers to the end of the\nI                       LGSTREAM name to generate the data set name\nI                       where it keeps the forward recovery logs.\nN\nNExample 1: RLS on a VSAM KSDS.\nN------------------------------\nNIn this example, the system will create an SMS-managed\nNVSAM key-sequenced data set if the storage administrator assigns a\nNdata class that provides other parameters such as SPACE and LOG=ALL,\nNand assigns a POOL storage group. The system logger will use the\nNname SSAB1234.NEW as the prefix to generate the data set name where\nNit will keep the forward recovery logs.\nN\nDParameter\nD//FRED      DD DISP=(new,catlg),DSN=VSAM.DATASET,\nD//             LGSTREAM=SSAB1234.NEW,\nD//             RECORG=KS,KEYLEN=8,KEYOFF=0\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1250": {"ttr": 34066, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:13", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1250\nTz/OS JCL Reference\nT-DD Statement -LIKE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNLIKE Parameter\nN--------------\nIWithout SMS, use the DCB=dsname form of the DCB parameter.\nN\nNUse the LIKE parameter to specify the allocation attributes of a new\nNdata set by copying the attributes of a model data set, which must be\nNan existing cataloged data set and reside on a direct access volume.\nN\nD//             LIKE=existing-data-set-name\nN\nNExample 1: Use the attributes of another data set.\nN--------------------------------------------------\nNIn the example, the data set attributes used for MYDS6.PGM are\nNobtained from the cataloged model data set MYDSCAT.PGM.data.\nN\nD//SMSDS6    DD DISP=(new,catlg),DSN=MYDS6.PGM,\nD//             LIKE=MYDSCAT.PGM.data\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1251": {"ttr": 34068, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x008\\x008\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:13", "lines": 56, "newlines": 56, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1251\nKDCB\nTz/OS JCL Reference\nT-DD Statement -LRECL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNLRECL Parameter\nN---------------\nNUse the LRECL parameter to specify the length of the records in a\nNnew data set.\nN\nNCode the LRECL parameter when you want to:\nN\nN->Specify the logical record length for the data set, or\nN\nN->With SMS, override the record length defined in the data class of\nN  the data set.\nN\nNLRECL applies to data sets with the BPAM, BSAM, EXCP, access methods,\nNand with SMS, to VSAM data sets.\nN\nD//             LRECL=nnnnn\nI                     Specifies (1) the length, in bytes, for fixed\nI                     length records or (2) the maximum length, in\nI                     bytes, for variable-length records.\nN\nNThe value of bytes is:\nN\nN->1 to 32,760 for non-VSAM data sets.\nN\nN->1 to 32,761 for VSAM key-sequenced (KS), entry-sequenced (ES), or\nN  relative record (RR) data sets. (LRECL does not apply to VSAM\nN  linear space, RECORG=LS, data sets.)\nN\nNExanple 1: Too lazy to use the DCB= format.\nN-------------------------------------------\nNIn the example, the logical record length of 326 is used for the\nNnew data set EVER.\nN\nD//DD1B      DD DISP=(NEW,catlg),DSN=EVER,\nD//             UNIT=3380,\nD//             SPACE=(23472,(200,40)),\nD//             RECFM=FB,BLKSIZE=23472,LRECL=326\nM\nMKenneth Tomiak remark:\nMExample 2 in the manual merely overrides a dataclas LRECL value.\nMSince we do not know what the ACS routines do, even Example 1\nMcould have had a DATACLAS assigned witha different LRECL.\nMTherefore one example is sufficient.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1252": {"ttr": 34305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x000\\x000\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:14", "lines": 48, "newlines": 48, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1252\nTz/OS JCL Reference\nT-DD Statement -MGMTCLAS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNMGMTCLAS Parameter\nN-----------------\nNUse the MGMTCLAS parameter to specify a management class for a new\nNSMS-managed data set. The storage administrator at your installation\nNdefines the names of the management classes you can code on the\nNMGMTCLAS parameter.\nN\nNAfter the data set is allocated, the attributes in the management\nNclass control:\nN\nN->Migration of the data set, including migration from primary\nN  storage to DFSMShsm-owned storage to archival storage\nN\nn->Backup of the data set, including frequency of backup, number of\nN  versions, and retention criteria for backup versions\nN\nN->Automatic deletion of data sets\nN\nN->Automatic release of unused space in data sets\nN\nNThe Hierarchical Storage Manager (DFSMShsm) or a functionally\nNequivalent program performs these functions.\nN\nD//             MGMTCLAS=management-class-name,\nI                 See your own installation standards to know\nI                 what to use.\nN\nNExample 1: ACS routines can overrise user preferences.\nN------------------------------------------------------\nNSpecifying STORCLASS will influence Disk volume placement.\nNSpecifying DATACLAS will assign DCB attributes.\nNSpecifying MGMTCLAS will handle the migration and backup\nMpolicies. And the data set retention (EXPDT).\nN\nD//SMSDS1    DD DISP=(NEW,catlg),DSN=MYDS1.PGM.data,\nD//             STORCLAS=SCLAS1,DATACLAS=DCLAS1,MGMTCLAS=MCLAS01,\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1253": {"ttr": 34307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x000\\x000\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:14", "lines": 48, "newlines": 48, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1253\nTz/OS JCL Reference\nT-DD Statement -MODIFY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNMODIFY Parameter\nN----------------\nNUse the MODIFY parameter to specify a copy-modification module that\nNtells JES how to print this sysout data set on a 3800 Printing\nNSubsystem. The module can specify the following:\nN\nN->Legends.\nN->Column headings.\nN->Where and on which copies the data is to be printed.\nN\nNThe module is defined and stored in SYS1.IMAGELIB using the IEBIMAGE\nN utility program.\nN\nINote: MODIFY applies only for the 3800 Printing Subsystem\nIModels 1 and 2 and the 3800 Printing Subsystem Models 3, 6, and 8\nIin compatibility mode.\nN\nD//             MODIFY= {module-name }\nD//                     {(module-name{,trc})}\nI                    module-name: You must code the module-name.\nI                    trc: The trc subparameter is optional. If you\nI                         omit it, you can omit the parentheses.\nI                         However, if you omit it, you must not code\nI                         it as a null; for example, MODIFY=(TAB1,)\nI                         is invalid.\nN\nNExample 1:\nN-----------\nNIn this example, the MODIFY parameter requests that the data in the\nNcopy-modification module named A replace variable data in the data set\nNto be printed by the 3800. Module A defines which positions are to be\nNreplaced and which copies are to be modified. The second subparameter\nNin MODIFY specifies that the first character arrangement table in the\nNCHARS parameter, GS15, be used.\nN\nD//DD1       DD UNIT=3800,MODIFY=(A,0),CHARS=(GS15,GS10)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1254": {"ttr": 34309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00*\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:14", "lines": 42, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1254\nTz/OS JCL Reference\nT-DD Statement -OUTLIM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNOUTLIM Parameter\nN----------------\nNUse the OUTLIM parameter to limit the number of logical records in the\nNsysout data set defined by this DD statement. When the limit is\nNreached, the system exits to the SYSOUT limit exit routine. If the\nNinstallation supplies an installation-written routine, the routine\nNcan determine whether to terminate the job or increase the limit.\nNIf the installation does not supply a routine, the system terminates\nNthe job.\nN\nINote: OUTLIM is valid only on a DD statement with a SYSOUT parameter.\nN\nD//             OUTLIM=number\nI                 number: 1 - 16777215 logical records maximum\nN\nNOutput can also be limited by the following:\nN\nN->The LINES, BYTES, PAGES, or CARDS parameter of the JES2 /*JOBPARM\nN  statement.\nN\nN->The LINES, BYTES, PAGES, or CARDS parameter of the JES3 //*MAIN\nN  statement.\nN\nN->The LINES, BYTES, PAGES, or CARDS parameter of the JOB statement.\nN\nNExample 1: Limit output records to 1,000.\nN-----------------------------------------\nNThe limit for the number of logical records is 1000.\nN\nD//OUTDD     DD SYSOUT=F,OUTLIM=1000\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1255": {"ttr": 34311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00v\\x00v\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:14", "lines": 118, "newlines": 118, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1255\nKSYSOUT\nTz/OS JCL Reference\nT-DD Statement -OUTPUT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNOUTPUT Parameter\nN----------------\nNUse the OUTPUT parameter with the SYSOUT parameter to associate a\nNsysout data set explicitly with an OUTPUT JCL statement. JES\nNprocesses the sysout data set using the options from this DD\nNstatement combined with the options from the referenced\nNOUTPUT JCL statement.\nN\nD//             OUTPUT= {(reference{,reference}...)}\nI                 reference: in the form of:\nI                            *.name\nI                            *.stepname.name\nI                            *.stepname.procstepname.nameSee topic 12-148\nI                 name: names earlier OUTPUT JCL statement\nI                 stepname: OUTPUT JCL in named step\nI                 procstepname: step in named procedure\nN\nNExample 1: Referencing a full OUTPUT Statement.\nN-----------------------------------------------\nNThe DD Statement for ddname THISDD references the OUTPUT Statement\nNnamed OUTDS.\nD//*\nD//OUTDS OUTPUT ADDRESS=('address line 1   ',\nD//             'line 2, these can be',\nD//             'up to 65 characters each'),\nD//*            AFPSTATS=                {YES|Y|NO|N}\nD//             BUILDING='65chr max',\nD//*            BURST=                   {YES|Y|NO|N}\nD//             CHARS=GT12,\nD//*            CHARS=(font-name,font-name...),\nD//*            CHARS=STD,\nD//*            CHARS=(DUMP,font-name,font-name...),\nD//*            CKPTLINE=nnnnn,          0-32767\nD//*            CKPTPAGE=nnnnn,          0-32767\nD//*            CKPTSEC=nnnn,            0-32767\nD//             CLASS=x,                 A-Z,0-9,*\nD//*            COLORMAP=resource,\nD//*            COMPACT=compaction-font-name,\nD//*            COMSETUP=resource,\nD//*            CONTROL=                 {PROGRAM|SINGLE|DOUBLE|TRIPLE}\nD//             COPIES=1,                JES2=1-255, JES3=0-255\nD//*            DATACK=                  {BLOCK|UNBLOCK|BLKCHAR|BLKPOS}\nD//             DEFAULT=YES,             {YES|Y|NO|N}\nD//             DEPT='SYSTEM PROGRAMMING',\nD//*            DEST=LOCAL,        JES2  LOCAL|IP:ipaddr|name|\nD//*                                     node.IP:ipaddr|\nD//*                                     NnRrrrr-NnnnnnRr|(node,remote)|\nD//*                                     node.userid|Rrrrrr|RMrrrrr|\nD//*                                     RMTrrrrr|Uuuuuu\nD//*                               JES3  ANYLOCAL|IP:ipaddr|name|\nD//*                                     node.IP:ipaddr|\nD//*                                     device-name|group-name|\nD//*                                     node|node.remote\nD//             DPAGELBL=YES,            {YES|Y|NO|N}\nD//             DUPLEX=NORMAL,           {NO|N|NORMAL|TUMBLE}\nD//             FCB=STD,                 {fcb-name|STD}\nD//*            FLASH=overlay-name,      |STD|NONE\nD//             FORMDEF=0101LA,          BLANK/LANDSCAPE\nD//*            FORMLEN=nn.mmmIN|CM,\nD//*            FORMS=form-name,         |STD\nD//*            FSSDATA=value,\nD//*            GROUPID=output-group,\nD//*            INDEX=nn,                1-31\nD//*            INTRAY=nnn,              1-255\nD//             JESDS=ALL,               ALL|JCL|LOG|MSG\nD//*            LINDEX=nn,               1-31\nD//*            LINECT=nnn,              0-255\nD//*            MODIFY=module-name,\nD//             NAME='your name here',   1-60 chars\nD//*            NOTIFY=(node.userid,...),\nD//*            OFFSETXB=mmmm.nnnIN|CM|MM|PELS|POINTS,\nD//*            OFFSETXF=mmmm.nnnIN|CM|MM|PELS|POINTS,\nD//*            OFFSETYB=mmmm.nnnIN|CM|MM|PELS|POINTS,\nD//*            OFFSETYF=mmmm.nnnIN|CM|MM|PELS|POINTS,\nD//*            OUTBIN=nnnn,             1-65535\nD//             OUTDISP=(HOLD,HOLD)      (normal,abnormal)\nD//*                                     WRITE|HOLD|KEEP|LEAVE|PURGE\nD//*            OVERLAYB=name,\nD//*            OVERLAYf=name,\nD//*            OVFL=ON,                 ON|OFF\nD//             PAGEDEF=06080,\nD//*            PAGEDEF=06080            BLANK/LANDSCAPE/60LINES/8LPI\nD//*            PAGEDEF=08081            BLANK/PORTRAIT /80LINES/8LPI\nD//*            PIMSG=(YES,msg-count),   YES|NO,msg-count\nD//*            PORTNO=nnnnn,            TCPIP port number\nD//*            PRMODE=                  LINE|PAGE|process-mode\nD//*            PRTERROR=                DEFAULT|QUIT|HOLD\nD//*            PRTOPTNS=options-data-set-name,\nD//*            PRTQUEUE=print-queue-name,\nD//*            PRTY=nnn,                0-255\nD//*            RESFMT=                  P240|P300\nD//*            RETAINF=hhhh:mm:ss       |FOREVER\nD//*            RETAINS=hhhh:mm:ss       |FOREVER\nD//*            RETRYL=nnn,\nD//*            RETRYT=hh:mm:ss,\nD//             ROOM='13th FLOOR',\nD//*            SYSAREA=NO,              YES|Y|NO|N\nD//*            THRESHOLD=nnnnnnnn,      1-99999999\nD//             TITLE='*** PRINTOUT FROM A BATCH JOB ***', 1-60 chars\nD//*            TRC=NO,                  YES|Y|NO|N\nD//*            UCS=character-set-code\nD//             USERDATA='*installation-dependent*', 1-60 chars\nD//*            USERLIB=(data-set-name,...),\nD//*            WRITER=writer-name\nD//THISDD    DD SYSOUT=(,),OUTPUT=(*.OUTDS)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1256": {"ttr": 34313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00'\\x00'\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:15", "lines": 39, "newlines": 39, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1256\nKOMVS USS PATHDISP PATHMODE PATHOPTS unix\nTz/OS JCL Reference\nT-DD Statement -PATH Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNPATH Parameter\nN--------------\nNUse the PATH parameter to specify the name of the\nNUNIX System Services (USS/OMVS) file.\nN\nD//             PATH= {pathname}\nI                 pathname: Identifies a file in a z/OS UNIX file\nI                           system. The pathname consists of the names\nI                           of the directories from the root to the\nI                           file being identified, and then the name\nI                           of the file.\nN\nNExample 1: A file in the user's filesystem.\nN-------------------------------------------\nN/u/ will often automount a user's file system. In this example\nN /MYUSER/ is the directory for the user.\nN\nD//             PATH='/u/MYUSER/filename.txt'\nN\nNExample 2: A long path that needs continuation.\nN-----------------------------------------------\nNUse apostrophes (') and go out to column 71. The plus sign (+) is shown\nNonly as an eyecatcher.\nN\nD//EXA       DD PATH='/u/payroll/directory171/DEPT64directory/accounting+\nD//             /personhoursfile'\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1257": {"ttr": 34315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:15", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1257\nKOMVS USS PATHDISP PATHMODE PATHOPTS unix\nTz/OS JCL Reference\nT-DD Statement -PATHDISP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNPATHDISP Parameter\nN------------------\nNUse the PATHDISP parameter to specify the disposition of a UNIX System\nNServices file when the job step ends normally or abnormally.\nN\nD//             PATHDISP=(normal-termination-disposition,\nD//                       abnormal-termination-disposition)\nI                 normal-termination-disposition: KEEP, DELETE\nI                 abnormal-termination-disposition: KEEP, DELETE\nN\nNExample 1: Keep it this works and delete it if it fails.\nN--------------------------------------------------------\nNThe DD statement identifies a file that already exists. The DD\nNstatement requests that the system keep the file, if the step\nNends normally. If the step ends abnormally, the system deletes\nNthe filename and, if no other names were set using link(),\nNdeletes the file itself.\nN\nD//DD1       DD PATHDISP=(KEEP,DELETE),PATH='/usr/applics/pay.time'\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1258": {"ttr": 34317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:15", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1258\nKOMVS USS PATHDISP PATHMODE PATHOPTS unix\nTz/OS JCL Reference\nT-DD Statement -PATHMODE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNPATHMODE Parameter\nN------------------\nNUse the PATHMODE parameter to specify the file access attributes when\nNthe system is creating the UNIX System Services file named on the PATH\nNparameter. Creating the file is specified by a PATHOPTS=OCREAT\nNparameter.\nN\nD//             PATHMODE=file-access-attribute {,file-access-attribute}...)\nI                 file-access-attribute: (Use as many as you need.)\nI                   file owner class: SIRUSR, SIWUSR, SIXUSR, SIRWXU\nI                   file group class: SIRGRP, SIWGRP, SIXGRP, MSIRWXG\nI                   file other class: SIROTH, SIWOTH, SIXOTH, MSIRWXO\nI                   set process IDs: SISUID, SISGID\nN\nNExample 1: Setting user and group permissions.\nN----------------------------------------------\nNThe DD statement requests that the file named in the PATH parameter be\nNcreated. The PATHMODE parameter specifies that the file owner can\nNread, write, and search or execute the file and that users in the\nNfile group can read the file.\nN\nD//DD1       DD PATHDISP=(KEEP,DELETE),PATH='/usr/applics/pay.time',\nD//             PATHMODE=(SIRWXU,SIRGRP),PATHOPTS=(OWRONLY,OCREAT,OEXCL)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1259": {"ttr": 34319, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:15", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1259\nKOMVS USS PATHDISP PATHMODE PATHOPTS unix\nTz/OS JCL Reference\nT-DD Statement -PATHOPTS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNPATHOPTS Parameter\nN------------------\nNUse the PATHOPTS parameter to specify the access and status for the\nNUNIX System Services file named in the PATH parameter.\nN\nD//             PATHOPTS=(file-option{,file-option}...)\nI                 for access group: ORDONLY, OWRONLY, ORDWR\nI                 for status group: OAPPEND, OCREAT, OEXCL, ONOCTTY,\nI                                   ONONBLOCK, OSYNC, OTRUNC\nI                 ->You can specify up to 7 file-options.\nN\nNExample 1: Create a new, necessary and superfluous for write.\nN-------------------------------------------------------------\nNOCREAT in the PATHOPTS parameter specifies that the file named in the\nNPATH parameter be created. OWRONLY requests that the system open the\nNfile only for writing. OEXCL specifies that, if the file already\nNexists, the system will not create a file and the job step will fail.\nN\nD//DD1       DD PATHDISP=(KEEP,DELETE),PATH='/usr/applics/pay.time',\nD//             PATHMODE=(SIRWXU,SIRGRP),PATHOPTS=(OWRONLY,OCREAT,OEXCL)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1260": {"ttr": 34321, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:16", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1260\nTz/OS JCL Reference\nT-DD Statement -PROTECT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNPROTECT Parameter\nN-----------------\nNRequests RACF to protect a direct access data set, tape data set,\nNor tape volume.\nN\nD//             PROTECT={YES|Y}\nM\nMKenneth Tomiak remark:\nMNever code this parameter. Your system needs to be configured\nMto protect everything and deny on-the-fly new data set names.\nMFollow your installation standards in defining data sets.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1261": {"ttr": 34323, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:16", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1261\nKDCB\nTz/OS JCL Reference\nT-DD Statement -RECFM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNRECFM Parameter\nN---------------\nNUse the RECFM parameter to specify the format and characteristics\nNof the records in a new data set. All the format and characteristics\nNmust be completely described in one source, that is, in the data set\nNlabel of an existing data set, in the DCB macro, in the DD DCB\nNparameter, or in the DD RECFM parameter. However, the processing\nNprogram can modify the RECFM field in the DCB.\nN\nD//             RECFM= {F|V|U}{B}{S}{A|M}{T}{D}\nI                 F=Fixed, V=Variable, U=Undefined\nI                 B=Blocked\nI                 I = Spanned\nI                 A = ISO/ANSI, M = Machine code control characters\nI                 T = Track overflow feature\nI                 D = variable-length ISO/ANSI tape records\nN\nNExample 1: Too lazy to use the DCB= format.\nN-------------------------------------------\nNIn the example, the record format of fixed block (FB) is used for the\nNnew data set EVER.\nN\nD//DD1B      DD DISP=(NEW,catlg),DSN=EVER,\nD//             UNIT=3380,SPACE=(23472,(200,40)),\nD//             RECFM=FB,LRECL=326\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1262": {"ttr": 34325, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:16", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1262\nTz/OS JCL Reference\nT-DD Statement -RECORG Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNRECORG Parameter\nN----------------\nNUse the RECORG parameter to specify the organization of the records\nN in a new VSAM data set.\nN\nD//             RECORG= {ES} | {KS} | {LS} | {RR}\nI                 Organization of records:\nI                   ES: entry-sequenced\nI                   KS: key-sequenced\nI                   LS: linear space\nI                   RR: relative record\nN\nNExample 1: Ignoring the power of PGM=IDCAMS.\nN--------------------------------------------\nNIn the example, the record organization of key-sequenced (KS)\nNoverrides the record organization defined in the data class.\nIRelies on a proper DATACLAS for attributes. If it can have\nIthe correct attributes than there is no need to use RECORG!\nN\nD//SMSDS3    DD DISP=(NEW,KEEP),DSN=MYDS3.PGM,\nD//             DATACLAS=VSAM1,RECORG=KS\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1263": {"ttr": 34561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:17", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1263\nKLIKE DCB\nTz/OS JCL Reference\nT-DD Statement -REFDD Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNREFDD Parameter\nN---------------\nNUse the REFDD parameter to specify attributes for a new data set by\nNcopying attributes of a data set defined on an earlier DD statement\nNin the same job.\nN\nIWithout SMS, use the DCB=*.ddname form of the DCB parameter.\nN\nD//             REFDD=*.stepname.ddname\nN\nNExample 1: Copy attributes.\nN---------------------------\nNIn the example, the data set attributes used for MYDS7.PGM are\nNobtained from the referenced data set MYDS6.PGM.\nN\nD//SMSDS6    DD DISP=(NEW,catlg),DSN=MYDS6.PGM,\nD//             DATACLAS=DCLAS01,RECFM=FB,LRECL=512\nD//SMSDS7    DD DISP=(NEW,catlg)DSN=MYDS7.PGM,\nD//             REFDD=*.SMSDS6\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1264": {"ttr": 34563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:17", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1264\nTz/OS JCL Reference\nT-DD Statement -RETPD\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNRETPD Parameter\nN---------------\nNUse the RETPD parameter to specify the retention period for a new data\nNset to help reduce the chance of later accidental deletion. After the\nNretention period, the data set can be deleted or written over by\nNanother data set.\nN\nD//             RETPD=nnn,\nI                 nnnn: Specifies the retention period, in days, for the\nI                       data set. The nnnn is one through five decimal\nI                       digits ( 0-93000).\nM\nM                       However, the system might only use up to 9999.\nN\nNThe number of days are added to the current date to calculate an EXPDT\nNas far off as December 31, 2155\nN\nNExample 1: Bypassing good tape practices.\nN-----------------------------------------\nNIn the example, the data set is not eligible for being deleted or\nNwritten over for 188 days.\nN\nD//DD1       DD DISP=(NEW,KEEP),DSN=HERBI,\nD//             UNIT=TAPE,LABEL=(1,SL),RETPD=188\nM\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM-JCL) leaves\nMtape retention under the control of GDG and Tape Management Systems.\nMAnd let us not forget catalog control.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1265": {"ttr": 34565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00H\\x00H\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:17", "lines": 72, "newlines": 72, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1265\nTz/OS JCL Reference\nT-DD Statement -RLS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNRLS Parameter\nN-------------\nNYou can, on a system that includes MVS/DFSMS Version 1 Release 3 or\nNhigher, use the RLS parameter to specify the level of record sharing,\nNor sharing protocol, for a VSAM data set containing records that\nNmust be shared. See z/OS DFSMS Using Data Sets for a description of\nNthe sharing protocols and to determine whether your application can\nNrun in a shared data environment without modification.\nN\nINIote: RLS is most useful for an existing application. For a new or\nIheavily-modified application, you can request record-level sharing\nIin application code and do not need to specify RLS on the DD statement.\nN\nD//             RLS= {NRI} | {CR} | {CRE}\nI                 NRI: Specifies \"no read integrity\" (NRI). The\nI                      application can read all records. Use this\nI                      subparameter if the application can read\nI                      uncommitted changes made to a data set by\nI                      another application. NRI provides better\nI                      performance than the CR subparameter because\nI                      it avoids the overhead of obtaining a lock\nI                      when reading a record from the data set.\nI                 CR:  Specifies \"consistent read\" (CR). This\nI                      subparameter requests VSAM to obtain a SHARE\nI                      lock on each record the application reads.\nI                      This ensures the application will not read\nI                      uncommitted changes made to a data set by\nI                      another application. VSAM obtains the lock\nI                      while processing a GET NUP request, and\nI                      releases the lock before completing the GET\nI                      request. An application that processes a data\nI                      set allocated with RLS=CR may require\nI                      modification if it tries to read changes to\nI                      the data set.\nI                 CRE: Specifies \"consistent read explicit\" (CRE).\nI                      This subparameter requests serialization of the\nI                      record access with update or erase of the\nI                      record by another unit of recovery. CRE read\nI                      provides the application a means of ensuring\nI                      that records read by a unit of recovery are not\nI                      changed by other units of recovery until the\nI                      reading unit of recovery issues a syncpoint.\nN\nNExample 1: EquivalenT of DISP=SHR.\nN----------------------------------\nNWhen the program BATCHPRG opens DD1, the data set is to be processed\nNas a shared resource. NRI specifies that an application can read\nNuncommitted changes made by other applications.\nN\nD//ST01#01 EXEC PGM=BATCHPRG\nD//DD1       DD DISP=SHR,DSN=A,RLS=NRI\nN\nNExample 2: Commited (consistent) read of records.\nN-------------------------------------------------\nNWhen the program BATCHPRG opens DD2, the data set is to be processed\nNas a shared resource. CR specifies that an application can read only\nNcommitted changes made by other applications.\nN\nD//ST01#01 EXEC PGM=BATCHPRG\nD//DD2       DD DISP=SHR,DSN=B,RLS=CR\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1266": {"ttr": 34567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00)\\x00)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:17", "lines": 41, "newlines": 41, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1266\nTz/OS JCL Reference\nT-DD Statement -SECMODEL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSECMODEL Parameter\nN------------------\nNUse the SECMODEL parameter to specify the name of an existing RACF\nN data set profile that is copied to the discrete data set profile\nNthat RACF builds for the new data set.\nN\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM-SAF) recommends\nMletting the security administrators define generic profiles. This\nMmethod of creating a new discrete profile is to be avoided.\nMJust because you can does not mean you should.\nN\nD//             SECMODEL=(profile-name{,GENERIC})\nI                 profile-name: Specifies the name of a RACF model\nI                               profile, discrete data set profile, or\nI                               generic data set profile. The named\nI                               profile is copied to the discrete data\nI                               set profile of the new data set.\nI                 GENERIC: Identifies that the profile-name refers to a\nI                          generic data set profile.\nN\nNExample 1: It would be better to conform to naming standardds covered\nN           by an existing generic data set rule.\nN---------------------------------------------------------------------\nNIn the example, RACF uses the previously defined model data set\nNprofile named GROUP4.DEPT1.DATA to control access to the new data set.\nD//SMSDS4    DD DISP=(NEW,catlg),DSN=MYDS4.PGM,\nD//             SECMODEL=(GROUP4.DEPT1.DATA)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1267": {"ttr": 34569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00/\\x00/\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:18", "lines": 47, "newlines": 47, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1267\nTz/OS JCL Reference\nT-DD Statement -SEGMENT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSEGMENT Parameter\nN-----------------\nNIn a JES2 system, use the SEGMENT parameter to allow part of a job's\nNoutput to be printed while the job is still executing, or to allow\nNmultiple segments of a job's output to be printed simultaneously on\nNmultiple printers. With SEGMENT, portions of a data set are spun, one\nNsegment at a time. You determine the size of the portion with the\nNSEGMENT parameter. SEGMENT allows you to specify the number of pages\nNproduced for a sysout data set before the system processes the segment\nNof the data set. To count pages, JES2 uses the carriage control\nNcharacters in the data that skip to channel 1.\nN\nNSEGMENT is supported by JES2 only. The SEGMENT parameter applies only\nNto line mode data sets with RECFM=A or RECFM=M. The system might\nNsuspend segmentation if it reaches the threshold for segmentation\nNallowed by JES2.\nM\nMKenneth Tomiak remark:\nMKeep in mind your program could fail and the effect of a restart from\nMthe beginning means printing all over again.\nN\nD//             SEGMENT=page-count\nI                 page-count: Indicates the number of pages produced\nI                             for the sysout data set for the current\nI                             segment. When the number is reached, the\nI                             system spins-off the data segment for\nI                             output processing.\nN\nNExample 1: 4 Segments if there are 301 to 400 pages.\nN----------------------------------------------------\nNIn this example, if the sysout data set produced 400 pages, then four\nNseparate segments, 100 pages in each, are produced for output\nNprocessing.\nN\nD//DD1       DD SYSOUT=A,SEGMENT=100\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1268": {"ttr": 34571, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00m\\x00m\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:18", "lines": 109, "newlines": 109, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1268\nTz/OS JCL Reference\nT-DD Statement -SPACE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSPACE Parameter\nN---------------\nNUse the SPACE parameter to request space for a new data set on a direct\nNaccess volume. You can request space in two ways:\nN\nN->Tell the system how much space you want and let the system assign\nN  specific tracks.\nN\nN->Tell the system the specific tracks to be allocated to the data set.\nN\nNLetting the system assign the specific tracks is most frequently used.\nNYou specify only how space is to be measured   in tracks, cylinders,\nNblocks, or records   and how many of those tracks, cylinders, blocks,\nNor records are required.\nM\nMKenneth Tomiak remark:\nMA track is the smallest unit of allocation. The CEILING function is\nMused always round up to a full track. Cylinder allocation is always\nMa CEILING multiple of 15 tracks on 3390 Disk.\nI\nIThe JCL Reference manual has many pages explaining the various\nIsubparameters. This WISH file is a condensed version. What is typically\nIneeded\nN\nD//             SPACE= ({typ,}(pri\u00dd,sec\u00a8\u00dd,dir\u00a8)\u00dd,RLSE\u00a8\u00dd,group\u00a8\u00dd,ROUND\u00a8)\nI                 typ: {TRK} | {CYL} | {blksize} | {lrecl} | {ABSTR}\nI                   ABSTR: allocation at the specified {sec} address.\nI                 pri: primary space in x typ units. x=0-16777215\nI                 sec: secondary space in x typ units. x=0-16777215\nI                 dir: directory blocks for a PDS, signal HFS DSNTYPE\nI                      syntax allows 0-16777215.\nM                      number of 256-byte records for PDS directory\nM                       on 3390 - the first 44 Directory blks use 1 TRK\nM                        1 Directory blk can store 6 members with stats\nM                          or 20 members without\nM                        load modules always have statistics\nI                 RLSE: partial release of unused space on close.\nI                 group: {} | {CONTIG} | {MXIG} | {ALX}\nI                   {}:     Primary quantity must be available in a\nI                           maximum of 3 extents.\nI                   CONTIG: Requests that space allocated to the data set\nI                           must be contiguous.\nI                   MXIG:   allocation in largest available space.\nI                   ALX:    allocation of up to 5 separate largest\nI                           contiguous primary quantities.\nI                 ROUND: allocation by block length rounded to\nI                        integral cylinders.\nN\nNExample 1: A sequential data set.\nN---------------------------------\nNAllocating by TRK allows RLSE to free units smaller than a\nNCylinder.\nN\nD//\u00dd\u00ddddname\u00a8 DD DISP=(NEW,CATLG),DSN=&SYSUID..SPACE.SEQ,\nD//             UNIT=SYSDA,\nD//             SPACE=(TRK,(150,25),RLSE),\nD//             DCB=(DSORG=PS,RECFM=VB,BLKSIZE=0,LRECL=147)\nN\nNExample 2: A partitioned data set.\nN---------------------------------\nNFor this PDS, the first two tracks contain the directory blocks.\nN\nD//\u00dd\u00ddddname\u00a8 DD DISP=(NEW,CATLG),DSN=&SYSUID..SPACE.PDS,\nD//             UNIT=SYSDA,\nD//             SPACE=(TRK,(150,25,89)),\nD//             DCB=(DSORG=PO,RECFM=FB,BLKSIZE=0,LRECL=80)\nN\nNExample 3: A PDSE data set.\nN---------------------------\nD//\u00dd\u00ddddname\u00a8 DD DISP=(NEW,CATLG),DSN=&SYSUID..SPACE.PDSE,\nD//             UNIT=SYSDA,\nD//             SPACE=(TRK,(150,25,1)),DSNTYPE=LIBRARY,\nD//             DCB=(DSORG=PO,RECFM=U,BLKSIZE=4096,LRECL=32760)\nN\nNExample 4: A sequential data set based on records.\nN--------------------------------------------------\nNAllocating by records is one way to hope the system can\nNsatisfy the request without you having any idea what your\nNneeds are. In this example we are expecting to produce\nNabout 150,000 print lines 132 characters wide.\nN\nD//\u00dd\u00ddddname\u00a8 DD DISP=(NEW,CATLG),DSN=&SYSUID..SPACE.SEQ,\nD//             UNIT=SYSDA,\nD//             SPACE=(133,(150,25),RLSE),AVGREC=K,\nD//             DCB=(DSORG=PS,RECFM=FBA,BLKSIZE=0,LRECL=133)\nM\nMKenneth Tomiak remark:\nMThose in the know could determine what the best fit (half track)\nMblock size is, calculate the records per block, double to get\nMrecords per track, divide expected records by rec/trk, and use\nMCEILING for a TRK primary quantity.\nM\nMI am sure those fanciful non-existent 'Best Practices' call for\nMDisk space requirement calculations, thus Example 4 may be\nMan unrealistic real world example for production use. You might\nMuse SPACE=(133,(1)),AVGREC=K and multiply by 1/1000 of your\nMexpected output size for estimating total Disk space needs.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1269": {"ttr": 34573, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00F\\x00F\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:18", "lines": 70, "newlines": 70, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1269\nTz/OS JCL Reference\nT-DD Statement -SPIN Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSPIN Parameter\nN--------------\nNUse the SPIN parameter to specify that the output for the SYSOUT\nNdata set is to be made available for processing:\nN\nN->Immediately upon unallocation; or\nN->At the end of the job.\nN\nM         SEGMENT overrides SPIN=.\nN\nD//             SPIN= {NO } | {UNALLOC,cond}\nI                 NO: Indicates that the system makes the sysout data\nI                     set available for processing as a part of the\nI                     output at the end of the job, regardless of when\nI                     the data set is unallocated.\nI                 UNALLOC: Indicates that the system makes the data set\nI                          available for processing immediately when\nI                          the data set is unallocated.\nI                    cond: '{+}hh:mm' | nnn\u00ddK|M\u00a8} | NOCMND | CMNDONLY\nI                          'hh:mm': Spin at specified time.\nI                          '+hh:mm': Spin every interval.\nI                          nnn: Spin every nnn (K|M) lines.\nI                          NOCMND: Not by command, unallocate only.\nI                          CMNDONLY: Spin only by command.\nM                            If a JES2 command is issued requesting a\nM                            spin operation:\nM                            $TJnnn,SPIN or $TJnnn,SPIN,DD=ddname\nM                            the data set is made available for printing\nM                            immediately.\nN\nNExample 1: Be careful what you ask for.\nN---------------------------------------\nNIn this example, if you explicitly close or dynamically unallocate the\nNSYSOUT data set, the system makes it available for printing\nNimmediately. If you do not explicitly close or dynamically unallocate\nNthe SYSOUT data set, the system makes it available for printing at the\nNend of the step. If a JES2 command is issued requesting a spin\nNoperation ($TJnnn,SPIN or $TJnnn,SPIN,DD=ddname), the data set is made\nNavailable for printing immediately.\nN\nD//DD1       DD SYSOUT=A,FREE=CLOSE,SPIN=UNALLOC\nM\nMKenneth Tomiak remark:\nMWhile I am not able to test this example, the meaning of immediately\nMsuggests a mid-page spin could take place. For that reason the\nMSYSOUT where this might benefit the most is of long running tasks\nMspun at midnight to achieve a daily segment.\nM\nD//          DD SYSOUT=A,SPIN=(UNALLOC,'00:00')\nN\nNExample 5: Every 5,000 records (realistic or not).\nN--------------------------------------------------\nNIn this example, the system splits the data set into 5000 record\nNsegments and makes the SYSOUT data set available for printing every\nN5000 records. Whatever remains in the data set at the end of the STEP\nNis available for printing at the end of step.\nN\nD//DD5       DD SYSOUT=A,SPIN=(UNALLOC,5K)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1270": {"ttr": 34575, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:18", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1270\nTz/OS JCL Reference\nT-DD Statement -STORCLAS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSTORCLAS Parameter\nN------------------\nNUse the STORCLAS parameter to specify a storage class for a new\nNSMS-managed data set. The storage administrator at your installation\nNdefines the names of the storage classes you can code on the STORCLAS\nNparameter.\nN\nD//             STORCLAS=storage-class-name,\nI                 The name, one to eight characters, is defined by the\nI                 storage administrator at your installation.\nIAn ACS routine can override the storage class you requested.\nM\nMACS routines should be selecting the STORCLAS for your data sets,\nMthus you should not have a need to request one.\nM\nNExample 1: Simple request.\nN--------------------------\nNIn the example, SMS uses the attributes in the storage class named\nNSCLAS01 for the storage service level of the data set. It relies on\nNan ACS routine assigning a DATACLAS or dependencies in the program\nNfile definitions.\nN\nD//SMSDS1    DD DISP=(NEW,catlg),DSN=MYDS1.PGM,\nD//             STORCLAS=SCLAS01\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1271": {"ttr": 34577, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16T\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:54:19", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1271\nTz/OS JCL Reference\nT-DD Statement -SUBSYS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSUBSYS Parameter\nN----------------\nNUse the SUBSYS parameter to request a subsystem to process this\nNdata set and, optionally, to specify parameters defined by the\nNsubsystem.\nN\nD//             SUBSYS= (subsystem-name )({,subsystem-parameter}...)\nI                 subsystem-name: identifies the subsystem\nI                 subsystem-parameter: specifies information for\nI                                      the subsystem.\nN\nNExample 4: A real world SUBSYS.\nN-------------------------------\nNThe DD statement asks the Infoprint Server subsystem named AOP1 to\nNprocess a sysout data set.\nN\nD//DD1       DD SUBSYS=(AOP1,'MyPrinter')\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1272": {"ttr": 34817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16U\\x00S\\x00S\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:55:47", "lines": 83, "newlines": 83, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1272\nTz/OS JCL Reference\nT-DD Statement -SYSOUT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-165547\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNSYSOUT Parameter\nN----------------\nNUse the SYSOUT parameter to identify this data set as a system output\nNdata set, usually called a sysout data set.\nN\nNThe SYSOUT subparameter:\nN\nN-> Assigns this sysout data set to an output class. The attributes of\nN   each output class are defined during JES initialization.\nN\nN-> Optionally requests an external writer to process the sysout data\nN   set rather than JES. An external writer is an IBM- or\nN   installation-written program.\nN\nN-> Optionally identifies the forms on which the data set is to be\nN   printed or punched.\nN\nN-> Optionally refers to a JES2 /*OUTPUT statement for processing\nN   parameters.\nN\nMIn the real-world, SYSOUT is usually referred to as REPORT output.\nMSYSOUT class characteristics are defined by your installation.\nN\nD//              SYSOUT=({class} {,writer-name} {,form-name|code-name})\nI                  class: Used to manage printer selection.\nI                    A - Z, 0 - 9: as defined by your installation.\nM                      B: is the de-facto standard for punch. TRANSMIT.\nI                    *: same output class as JOB MSGCLASS parameter.\nI                    ,: Use CLASS from the OUTPUT Statement.\nI                  writer-name: 1 - 8 alphanumeric or $, #, @ characters\nI                    INTRDR: used to submit jobs thru the\nI                            internal reader.\nI                    STDWTR: Reserved for JES2.\nI                    NJERDR: Reserved for JES3.\nI                  form-name: 1 - 4 alphanumeric or $, #, @ characters\nI                  code-name: Identifies an earlier\nI                             JES2 /*OUTPUT statement\nM\nN\nNExample 1: A normal use.\nN------------------------\nNIn this example, the DD statement specifies that JES is to write the\nNsysout data set to the device handling class P output.\nN\nD//DD1       DD SYSOUT=P\nN\nNExample 4: Combined with the OUTPUT Statement.\nN----------------------------------------------\nNIn this example, the DD statement combines with the three referenced\nNOUTPUT JCL statements to create three separate sets of output:\nN1. DSA combines with OT1 to send the sysout data set to NYC.\nN2. DSA combines with OT2 to send the sysout data set to LAX.\nN3. DSA combines with OT3 to print five copies of the data set locally\nN   on the printer used for output class H.\nN\nD//ST01#01 EXEC PGM=ANS\nD//OT1   OUTPUT DEST=NYC\nD//OT2   OUTPUT DEST=LAX\nD//OT3   OUTPUT COPIES=5\nD//DSA       DD SYSOUT=H,OUTPUT=(*.OT2,*.OT1,*.OT3)\nN\nNExample n: Submit a JOB.\nN------------------------\nNSubmit the JOB from a PDS member. If the JOB Statement does\nNnot assign a CLASS then it defaults to A.\nN\nD//ST01#01 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=Z\nD//SYSUT1    DD DISP=SHR,DSN=&SYSUID..JCL.CNTL(NEXTJOB)\nD//SYSUT2    DD SYSOUT=(A,INTRDR)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1273": {"ttr": 34819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16U\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:55:48", "lines": 28, "newlines": 28, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1273\nTz/OS JCL Reference\nT-DD Statement -TERM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nI\nNTERM\nI\nN\nNUse the TERM parameter to indicate to the system that a data set\nN is coming from or going to a terminal for a TSO/E user.\nN\nMI have only seen this used in TSO logon procedures.\nN\nD//\u00ddddname\u00a8  DD TERM=TS\nN\nNExample 1: TSO Logon Procedure.\nN-------------------------------\nD//\u00ddddname\u00a8  DD TERM=TS\nN\nNExample 2: Batch TSO.\nN---------------------\nD//\u00ddddname\u00a8  DD TERM=TS,SYSOUT=*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1274": {"ttr": 34821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16U\\x00)\\x00)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:55:48", "lines": 41, "newlines": 41, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1274\nTz/OS JCL Reference\nT-DD Statement -UCS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNUCS Parameter\nN-------------\nNUse the UCS (universal character set) parameter to identify:\nN\nN->The UCS image JES is to use in printing this sysout data set.\nN\nN->A print train (print chain or print band) JES is to use in\nN  printing this sysout data set on an impact printer.\nN\nN->A font for this sysout data set printed on an AFP printer in a\nN  JES2 system. In this use, the UCS parameter acts like a CHARS\nN  parameter.\nN\nD//             UCS= {{(character-set-code {,FOLD} {,VERIFY})}\nI                character-set-code: 1 - 4 alpha- numeric\nI                                    or $, #, @ characters.\nI                FOLD: operator load chain or train in fold mode\nI                VERIFY: operator verify UCS image\nN\nNExample 1: A chain drive printer.\nN---------------------------------\nNIn this example, the DD statement requests a 1403 Printer. The UCS\nNparameter requests the chain or train for special character set\nNcode YN. Because VERIFY is coded, the system will display the\nNcharacter set image on the printer before the data set is printed.\nN\nD//DD1       DD UNIT=1403,UCS=(YN,,VERIFY)\nM\nMDo you really have a 1403, 3203 model 5, or 3211 printer?\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1275": {"ttr": 34823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16U\\x00S\\x00S\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:55:48", "lines": 83, "newlines": 83, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1275\nKDEFER AFF\nTz/OS JCL Reference\nT-DD Statement -UNIT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN============\nNUNIT Parameter\nN--------------\nNUse the UNIT parameter to ask the system to place the data set on:\nN\nN->A specific device.\nN\nN->A certain type or group of devices.\nN\nN->The same device as another data set.\nN\nNThe UNIT parameter can also tell the system how many devices to assign\nNand request that the system defer mounting the volume until the data\nNset is opened.\nI\nIInstallation defined names map to physical devices.\nICheck your standards.\nN\nD//             UNIT=AFF=ddname\nI                 AFF=name: affinity to same device for ddname.\nD//             UNIT= ({/dddd|name} {,unit-count|P}{,DEFER}{,SMSHONOR})\nI                 /dddd: 3-digit or 4-digit hexadecimal number\nI                  / required before 4-digit number and optional\nI                    before 3-digit number.\nI                 name: hardware name,group-name, or installation name.\nI                   3390 is a hardware name.\nI                   SYSALLDA is an IBM assigned group-name.\nI                   PRODVSAM would be an installation name.\nI                 unit-count: 1 - 59\nI                             P: allocate same number of devices as\nI                                volumes for parallel mount.\nI                 DEFER: defers mounting until open\nI                 SMSHONOR: for SMS tape library request.\nN\nNExample 1: Multiple tape drives.\nN--------------------------------\nN->DD statement DDX requests two 3480 tape devices,\nN->DD statement DDY requests one 3480 tape device and defer\nN  the mount until/if the data set is opened.\nN->DD statement DDZ requests the same two devices as DDX.\nI  Note that the operator will have to change volumes\nI  on the two 3480 devices during execution of the job step.\nM\nMA greedy way to hold onto 2 devices while at the same time\nMconsiderately not requiring all 4 at the same time.\nN\nD//ST01#01 EXEC PGM=POINT\nD//DDX       DD DISP=MOD,DSN=EST,                         <=TSK TSK\nD//             UNIT=(3480,2),VOLUME=SER=(42569,42570)\nD//DDY       DD DISP=OLD,DSNAME=ERAS,\nD//             UNIT=(3480,,DEFER)\nD//DDZ       DD DISP=OLD,DSNAME=RECK,\nD//             UNIT=AFF=DDX,VOLUME=SER=(40653,13262)\nN\nNExample 7: Tape Library Requests.\nN---------------------------------\nNDD01: To allocate to this Tape Library Request, the DD statement\nN      UNIT=(/B5B8,,,SMSHONOR) requires\nN      ->to use the device number B5B8,\nN        ->which is in the list of devices selected by SMS.\nN\nNDD02: For this Tape Library Request, the DD statement\nN      UNIT=(MYTAPE,,DEFER,SMSHONOR) requires the following devices:\nN      ->the devices that are in the esoteric MYTAPE,\nN      ->the devices that are in the list selected by SMS.\nN\nD//ST01#01 EXEC ......\nD//DD01      DD DISP=SHR,DSN=A,\nD//             UNIT=(/B5B8,,,SMSHONOR)\nD//DD02      DD DSN=B,DISP=SHR,\nD//             UNIT=(MYTAPE,,DEFER,SMSHONOR)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1276": {"ttr": 34825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16U\\x00]\\x00]\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:55:49", "lines": 93, "newlines": 93, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1276\nTz/OS JCL Reference\nT-DD Statement -VOLUME Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDD Statement\nN------------\nNVOLUME Parameter\nN----------------\nNUse the VOLUME parameter to identify the volume or volumes on which a\nNdata set resides or will reside. You can request:\nN\nN->A private volume\nN\nN->Retention of the volume\nN\nN->A specific volume by serial number\nN\nN->The same volume that another data set uses\nN\nNYou can also specify which volume of a multivolume data set is to be\nNprocessed first and, for an output data set, the number of volumes\nNrequired.\nN\nD//             VOLume=(positionalsubparameters,{keyword-parameters))\nI                 Positional parameters:\nI                  {PRIVATE} {,RETAIN} {,volume-seq-no}{,volume-count}{,}\nI                   PRIVATE: requests a private volume\nI                   RETAIN: requests private tape volume remain mounted\nI                           and unwound or requests public tape volume\nI                           be retained at device.\nI                   volume-seq-no: begins processing with volume 1 - 255\nI                                  of existing multivolume data set.\nI                   volume-count: maximum volumes for output data set\nI                                 (1 - 255). See Note 1 below.\nI                 Keyword parameters:\nI                   REF=*.procstepname.ddname:\nI                        copy volume serial numbers from another data\nI                        set or earlier DD Mstatement, or copy storage\nI                        class for SMS-managed data sets.\nI                   SER=(serial-number{,serial-number}...)}:\nI                    serial-number subparameters (1 - 255)\nI                      volume serial numbers (1 - 6 alphanumeric,\nI                                    $, #, @, or special characters.\nN\nNExample 2: Volume Count for Tape Data Sets:\nN-------------------------------------------\nNThis DD Statement believes it will create 6 so the author coded the\nNexpected actual number. The system does not enforce using no more\nNthan 6.\nN\nD//DD2       DD DISP=(MOD,KEEP),DSN=QUET,                <=tsk tsk\nD//             UNIT=(3400-5,2),VOLUME=(,,,6,SER=(96341,96342))\nI\nICode a volume count when a new OR mod data set will reside on more\nIthan 5 volumes.\nN\nN\nMNote 1:\nM->If you omit the volume count or if you specify 1 through 5, the\nM  system allows up to five volumes; if you specify 6 through 20,\nM  the system allows 20 volumes; if you specify a count greater than\nM  20, the system allows 5 plus a multiple of 15 volumes. You can\nM  override the maximum volume count in data class by using the\nM  volume-count subparameter. The maximum volume count for an\nM  SMS-managed mountable tape data set or a Non-managed tape\nM  data set is 255.\nN\nNVOLCNT   Allows\nN000-005    5    5+(15x0)\nN006-020   20    5+(15x1)\nN021-035   35    5+(15x2)\nN036-050   50    5+(15x3)\nN051-065   65    5+(15x4)\nN066-080   80    5+(15x5)\nN081-095   95    5+(15x6)\nN096-110  110    5+(15x7)\nN111-125  125    5+(15x8)\nN126-140  140    5+(15x9)\nN141-155  155    5+(15x10)\nN156-170  170    5+(15x11)\nN171-185  185    5+(15x12)\nN186-200  200    5+(15x13)\nN201-215  215    5+(15x14)\nN216-230  230    5+(15x15)\nN231-245  245    5+(15x16)\nN246-255  255    5+(15x17)\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR13": {"ttr": 34827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16U\\x01 \\x01 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:55:49", "lines": 288, "newlines": 288, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR13\nTz/OS JCL Reference\nT-Special DD Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNSpecial DD Statements\nN=====================\nNUse special DD statements to specify private catalogs, private\nNlibraries, and data sets for storage dumps and checkpoints. This\nNchapter provides descriptions of these special statements.\nN\nD//\u00ddSPECIAL-ddname\u00a8 DD keyword-parameter...\nD//                   \u00dd,keyword-parameter\u00a8... \u00ddcomments\u00a8\nN\nNSpecial ddnames\nN---------------\nNThe special data sets are identified by the following ddnames:\nNJOBLIB\nNSTEPLIB\nNSYSABEND\nNSYSCHK\nNSYSCKEOV\nNSYSIN\nNSYSMDUMP\nNSYSUDUMP\nM\nMKenneth Tomiak remark:\nMThe above list is a small subset of special ddnames that have meaning\nMunder specific circumstances.\nI\nIJES2 Reserved DD Statements\nI---------------------------\nIDo not use the following ddnames on a DD statement in a JES2 system.\nIThey have special meaning to JES2.\nI\nI  JESJCLIN\nI  JESMSGLG\nI  JESJCL\nI  JESYSMSG\nI\nIJES3 Reserved DD Statements\nI---------------------------\nIDo not use the following ddnames on a DD statement in a JES3 system.\nIThey have special meaning to JES3.\nI\nI  JCBIN\nI  JESJCL\nI  JS3CATLG\nI  JCBLOCK\nI  JESMSGLG\nI  J3JBINFO\nI  JCBTAB\nI  JOURNAL\nI  J3SCINFO\nI  JESJCLIN\nI  JST\nI  J3STINFO\nI  JESInnnn\nI  JESYSMSG\nI  STCINRDR\nI  TSOINRDR\nI\nISpecial DD Statements\nI---------------------\nI  JOBCAT      *OBSOLETE\nI  SYSCHK\nI  JOBLIB\nI  SYSCKEOV\nI  STEPCAT     *OBSOLETE\nI  SYSIN\nI  STEPLIB\nI  SYSMDUMP\nI  SYSABEND\nI  SYSUDUMP\nI\nIProduct DD Statements - Know when to use them.\nI----------------------------------------------\nI  $ORTPARM    SORT      SYNCSORT parameter overrides\nI  @@cyyddd    Hourglass Fools your program into thinking\nI                        it is a different date\nI  CEEDUMP     CEE       Language Environment\nI  CEEOPTS     CEE       Language Environment (z/OS 1.7) LE parameters\nI  DFHCSD      CICS\nI  DFHRPL      CICS      Runtime Program Library - like STEPLIB\nI  DFSPARM     SORT      DFSort parameter overrides\nI  DFSUINnn    IMS\nI  DFSURIDX    IMS\nI  HCDPROF     HCD       Profile\nI  IDCUT1      DFP       Used for BLDINDEX workfile\nI  IDCUT2      DFP       Used for BLDINDEX workfile\nI  INPUT       FTP       Input stream of commands\nI  IPCSPARM    IPCS      Library with IPCS routines\nI  ISPALIB     ISPF      APL2 support\nI  ISPCTL##    ISPF\nI  ISPILIB     ISPF      Images for GUI\nI  ISPLLIB     ISPF      Load Library - like STEPLIB\nI  ISPLOG#     ISPF      Log of activity\nI  ISPLST#     ISPF      Printed listing of members\nI  ISPMLIB     ISPF      Message Library\nI  ISPPLIB     ISPF      Panel Library\nI  ISPPROF     ISPF      Profile\nI  ISPSLIB     ISPF      Skeleton Library\nI  ISPTABL     ISPF      Table Library Output\nI  ISPTLIB     ISPF      Table Library Input\nI  NAMES       TSO       Transmit nickname file\nI  NETRC       FTP       Network resource connections\nI  OUTPUT      FTP       Messages\nI  PARMLIB     z/OS      In MSTJCLxx\nI  PROCLIB     z/OS      In MSTJCLxx\nI  PROC##      JES2      Used in JES2 Procedure\nI  PROFILE     TCPIP\nI  SGCDUMP     BMC       Mainview dump\nI  SGCTRACE    BMC       Mainview trace\nI  SMPCSI      SMPE      Consolidated Software Inventory repository\nI  SMPHOLD     SMPE\nI  SMPLIST     SMPE\nI  SMPLOG      SMPE      Internally captured messages\nI  SMPLOG      SMPE      Internally captured messages Alternate\nI  SMPLTS      SMPE      Long term Storage\nI  SMPMTS      SMPE      Macro Temporary Storage\nI  SMPOUT      SMPE      Output\nI  SMPPTFIN    SMPE\nI  SMPPTS      SMPE      PTF Temporary Storage\nI  SMPPUNCH    SMPE\nI  SMPRPT      SMPE      Report\nI  SMPSCDS     SMPE      Source Control Data Set\nI  SMPSNAP     SMPE      SNAP Dumps\nI  SMPSTS      SMPE      Source Temporary Storage\nI  SMPTABL     SMPE      ISPF Table Library\nI  SMPTLIB     SMPE      Target Library allocations\nI  SORTDIAG    SORT      Diagnostic messages\nI  SORTIN      SORT      Input data to sort\nI  SORTLIB     SORT      library of routines and exits\nI  SORTMSG     SORT      Output Messages\nI  SORTOUT     SORT      Output data from sort\nI  SORTWK*     SORT\nI  STDIN       ZOSUNIX\nI  STDERR      ZOSUNIX\nI  STDOUT      ZOSUNIX\nI  MAINARGS    JZOS      Additional arguments\nI                        (PARM=,JZOS_MAIN_ARGS, DD)\nI  SYS*        *         Temporary DDnames\nI  SYSEXEC     TSO       Source for REXX Procedures\nI  SYSHELP     TSO       Help\nI  SYSPROC     TSO       Source for CLIST and REXX Procedures\nI  SYSLBC      TSO       Broadcast\nI  SYSLIB      *         COPY, MACRO, OBJECT for inclusions\nI  SYSLIN      HEWL      Input to Binder (Linkage Editor)\nI  SYSOUT      *         Usually output messages\nI  SYSPRINT    *         Usually output reports or messges\nI  SYSFTPD     FTP       CLIENT Defaults\nI  SYSTCPD     TCPIP     Defaults\nI  SYSTSIN     TSO       input\nI  SYSTSPRT    TSO       Output\nI  SYSUADS     TSO       User Attributes Data Set\nI  SYSUT1      *         Usually input for a Utility\nI  SYSUT2      *         Usually output for a Utility\nI  SYSUT3      *         Utility work data set\nI  SYSUT4      *         Utility work data set\nI  SYSUT6      *         Utility work data set\nI  TOOLIN      SORT      Input data to ICETOOL\nI  TOOLMSG     SORT      Output Messages\nI  TSOLIB      TSO       Load Library - like STEPLIB\nI  UTPRINT     DB2       Utility output messages\nI  *llq*       SMPE      By convention, the last qualifier is DDNAME\nI\nIDisabling DD Statements - Know when to use them.\nI------------------------------------------------\nI//ddname   DD  DUMMY    is usually all it takes.\nI  ABNLIGNR    AbendAid  Disable AbendAid dump analysis\nI  CAOESTOP    CA-OPT    Turn CA-OPT II & CA-SYMDUMP OFF\nI  DMBENAN     DUMPMSTR  TURN OFF DUMPMASTER\nI  ESPYIBM     EYE-SPY   Turn it OFF\nI  CAHBEXCL    Hyperbuf  bypass CA- Hyperbuf\nI  IDIOFF      IBMFA     Turn IBM FAULT ANALYZER OFF\nI  NOESTAE     ASE       TURN OFF ABEND handling for ASE's OMCS\nI  NOSTAX      ASE       TURN OFF ATTN  handling for ASE's OMCS\nI  PLDIGN      Mainview  StopX37  Mainview SRM Allocation\nI  BYPASPRO    Mainview  ProSMS   Mainview SRM Allocation\nI  PROIGN      Mainview  PoolDasd Mainview SRM Allocation\nI  FCOPYOFF    PDSMAN    Disable FastCopy\nI  PSPOFF      SoftWork  Performance Essentials\nI  ULT@SOFF    StarTool  Bypass Serena's StarTool IOO optimization\nI  NPDSFAST    SEA       PDSFAST\nI  VDSBYPAS    DMS       CA-SAMS\nI  ACCIGN      ????      ??????\nI\nI  X$abbbN     ASM2      Computer Associates\nI    abbb ============>  Option\nI    a                   ASY\nI    a                   CND\nI    a                   DFR\nI    a                   FRC\nI    a                   IAS\nI    a                   INT\nI    a                   IXR\nI    a                   QUI\nI    a                   SEC\nI    a                   S99\nI    a                   UJI\nI    a                   USI\nI    a                   VER\nI    a                   X37\nI    a                   213\nI    a                   26A\nI    a                   26J\nI    a                   26V\nI    a                   522\nI    a ===============>  Scope\nI                        J = Job\nI                        S = Step\nI                        I = immediate (TSO)\nI\nI//ABNLIGNR  DD DUMMY    ABENDAID\nI//NPDSFAST  DD DUMMY    PDSFAST\nI//VDSBYPAS  DD DUMMY    DMS (CA-SAMS)\nI//FCOPYOFF  DD DUMMY    PDSMAN FASTCOPY\nI//PLDIGN    DD DUMMY    STOPX37\nI//PROIGN    DD DUMMY    POOL-DASD\nI//BYPASPRO  DD DUMMY    PROSMS\nI//PSPOFF    DD DUMMY    SOFTWORKS (PERFORMANCE ESSENTIAL)\nI//ESPYIBM   DD DUMMY    EYE-SPY OFF\nI//NOESTAE   DD DUMMY    OMCS\nI//NOSTAX    DD DUMMY    OMCS\nI//CAOESTOP  DD DUMMY    CA-OPT II & CA-SYMDUMP OFF\nI//IDIOFF    DD DUMMY    IBM FAULT ANALYZER OFF\nI//DMBENAN   DD DUMMY    TURN OFF DUMPMASTER\nI//ULT@SOFF  DD DUMMY    SERENA'S STARTOOL\nI//CAHBEXCL  DD DUMMY    CA- HYPERBUF\nI//X$JX37N   DD DUMMY    CA-ASM2\nI//X$J26JN   DD DUMMY    CA-ASM2\nI//X$JIXRN   DD DUMMY    CA-ASM2\nI//X$JUJIN   DD DUMMY    CA-ASM2\nI//X$JS99N   DD DUMMY    CA-ASM2\nI//X$J26AN   DD DUMMY    CA-ASM2\nI//X$J26VN   DD DUMMY    CA-ASM2\nI//X$J213N   DD DUMMY    CA-ASM2\nI//X$JDFRN   DD DUMMY    CA-ASM2\nI//X$JINTN   DD DUMMY    CA-ASM2\nI//X$JQUIN   DD DUMMY    CA-ASM2\nI//X$J522N   DD DUMMY    CA-ASM2\nI//X$JCNDN   DD DUMMY    CA-ASM2\nI//X$JASYN   DD DUMMY    CA-ASM2\nI//X$JIASN   DD DUMMY    CA-ASM2\nI//X$JSECN   DD DUMMY    CA-ASM2\nI//X$JVERN   DD DUMMY    CA-ASM2\nI//X$JFRCN   DD DUMMY    CA-ASM2\nI//X$SX37N   DD DUMMY    CA-ASM2\nI//X$S26JN   DD DUMMY    CA-ASM2\nI//X$SIXRN   DD DUMMY    CA-ASM2\nI//X$SUJIN   DD DUMMY    CA-ASM2\nI//X$SS99N   DD DUMMY    CA-ASM2\nI//X$S26AN   DD DUMMY    CA-ASM2\nI//X$S26VN   DD DUMMY    CA-ASM2\nI//X$S213N   DD DUMMY    CA-ASM2\nI//X$SDFRN   DD DUMMY    CA-ASM2\nI//X$SINTN   DD DUMMY    CA-ASM2\nI//X$SQUIN   DD DUMMY    CA-ASM2\nI//X$S522N   DD DUMMY    CA-ASM2\nI//X$SCNDN   DD DUMMY    CA-ASM2\nI//X$SASYN   DD DUMMY    CA-ASM2\nI//X$SIASN   DD DUMMY    CA-ASM2\nI//X$SSECN   DD DUMMY    CA-ASM2\nI//X$SVERN   DD DUMMY    CA-ASM2\nI//X$SFRCN   DD DUMMY    CA-ASM2\nI//X$IX37N   DD DUMMY    CA-ASM2\nI//X$I26JN   DD DUMMY    CA-ASM2\nI//X$IIXRN   DD DUMMY    CA-ASM2\nI//X$IUJIN   DD DUMMY    CA-ASM2\nI//X$IS99N   DD DUMMY    CA-ASM2\nI//X$I26AN   DD DUMMY    CA-ASM2\nI//X$I26VN   DD DUMMY    CA-ASM2\nI//X$I213N   DD DUMMY    CA-ASM2\nI//X$IDFRN   DD DUMMY    CA-ASM2\nI//X$IINTN   DD DUMMY    CA-ASM2\nI//X$IQUIN   DD DUMMY    CA-ASM2\nI//X$I522N   DD DUMMY    CA-ASM2\nI//X$ICNDN   DD DUMMY    CA-ASM2\nI//X$IASYN   DD DUMMY    CA-ASM2\nI//X$IIASN   DD DUMMY    CA-ASM2\nI//X$ISECN   DD DUMMY    CA-ASM2\nI//X$IVERN   DD DUMMY    CA-ASM2\nI//X$IFRCN   DD DUMMY    CA-ASM2\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1301": {"ttr": 35074, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x01<\\x01<\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:22", "lines": 316, "newlines": 316, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1301\nTz/OS JCL Reference\nT-Special DD Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-165622\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNSpecial DD Statements\nN=====================\nNReserved or to temporarily disable a product.\nN---------------------------------------------\nN\nNReserved DD Statements.\nN-----------------------\nNDo not use the following ddnames on a DD statement in a JES2 system.\nNThey have special meaning to JES2.\nN\nN  JESJCLIN\nN  JESMSGLG\nN  JESJCL\nN  JESYSMSG\nN\nNDo not use the following ddnames on a DD statement in a JES3 system.\nNThey have special meaning to JES3.\nN\nN  JCBIN\nN  JESJCL\nN  JS3CATLG\nN  JCBLOCK\nN  JESMSGLG\nN  J3JBINFO\nN  JCBTAB\nN  JOURNAL\nN  J3SCINFO\nN  JESJCLIN\nN  JST\nN  J3STINFO\nN  JESInnnn\nN  JESYSMSG\nN  STCINRDR\nN  TSOINRDR\nN\nNSpecial DD Statements.\nN----------------------\nN  JOBCAT\nN  SYSCHK\nN  JOBLIB\nN  SYSCKEOV\nN  STEPCAT\nN  SYSIN\nN  STEPLIB\nN  SYSMDUMP\nN  SYSABEND\nN  SYSUDUMP\nN\nNProduct DD Statements. - Know when to use them.\nN-----------------------------------------------\nM  *llq*       SMPE     By convention, the last qualifier is DDNAME\nM  $ORTPARM    SORT     SYNCSORT parameter overrides\nM  APPLFILE    ESP      Cybermation ESP\nM  BNJMISC     NETVIEW\nM  BNJPNL1     NETVIEW  hardware monitor panel/color map\nM  BNJPNL2     NETVIEW  hardware monitor panel/color map\nM  CEEDUMP     CEE      Language Environment\nM  CEEOPTS     CEE      Language Environment (z/OS 1.7) LE parameters\nM  CKPT        ESP      Cybermation ESP\nM  CNMCMDF     NETVIEW\nM  CNMMSGF     NETVIEW\nM  CNMPLN1     NETVIEW  Online help panels\nM  COMMQ       ESP      agent communications info\nM  DFHCSD      CICS     Configuration settings\nM  DFHRPL      CICS     Runtime Program Library - like STEPLIB\nM  DFSPARM     SORT     DFSort parameter overrides\nM  DFSUINnn    IMS\nM  DFSURIDX    IMS\nM  DSICLD      NETVIEW  CLIST and command libraries\nM  DSIKPNL     NETVIEW  central site control facility\nM  DSILIST     NETVIEW  output list file\nM  DSILOGP     NETVIEW  primary log dataset\nM  DSILOGS     NETVIEW  secondary log dataset\nM  DSIMSG      NETVIEW  message reformat definitions\nM  DSIOPEN     NETVIEW  NetView non-secured datasets\nM  DSIPARM     NETVIEW  startup parms and automsg libraries\nM  DSIPRF      NETVIEW  profile and security libraries\nM  DSISVRT     NETVIEW  save/restore facility VSAM data base\nM  DSITRCP     NETVIEW  primary trace log datasets\nM  DSITRCS     NETVIEW  secondary trace log datasets\nM  DSIVTAM     NETVIEW  VTAM definition library\nM  DSNETBLS    DB2      Used by DB2 under TSO\nM  DSQDEBUG    QMF\nM  DSQEDIT     QMF\nM  DSQPRINT    QMF\nM  EVENTSET    ESP      the database can have multiples.\nM  HCDPROF     HCD      Profile\nM  HISTFILE    ESP      history file\nM  IDCUT1      DFP      Used for BLDINDEX workfile\nM  IDCUT2      DFP      Used for BLDINDEX workfile\nM  INDEX       ESP      contains calendars, triggers, passwords, vars\nM  INFILEA     Abendaid\nM  INFILEB     Abendaid\nM  INFILEC     Abendaid\nM  INPUT       FTP      Input stream of commands\nM  IPCSPARM    IPCS     Library with IPCS routines\nM  ISPALIB     ISPF     APL2 support\nM  ISPCTL##    ISPF     Temporary datasets allocated by ISPF/PDF\nM  ISPILIB     ISPF     Images for GUI\nM  ISPLLIB     ISPF     Load Library - like STEPLIB\nM  ISPLOG#     ISPF     Log of activity\nM  ISPLST#     ISPF     Printed listing of members\nM  ISPMALT     ISPF     Alternate message lib for DBCS support\nM  ISPMLIB     ISPF     Message Library\nM  ISPPALT     ISPF     Alternate panel lib for DBCS support\nM  ISPPLIB     ISPF     Panel Library\nM  ISPPROF     ISPF     Profile\nM  ISPSALT     ISPF     Alternate skeleton lib for DBCS support\nM  ISPSLIB     ISPF     Skeleton Library\nM  ISPSNAP     ISPF     output from TERMTRAC ON, ERROR, or DUMP commands\nM  ISPTABL     ISPF     Table Library Output\nM  ISPTLIB     ISPF     Table Library Input\nM  JOBINDEX    ESP      has pointers to TRAKFILE and APPLFILE\nM  MAINARGS    JZOS     Additional arguments (PARM=,JZOS_MAIN_ARGS, DD)\nM  NAMES       TSO      Transmit nickname file\nM  NETRC       FTP      Network resource connections\nM  ORA@wxyz    Oracle   Oracle Transparent Gateway - indicator DSN2@ATH\nM  OUTPUT      FTP      Messages\nM  PARMLIB     z/OS     In MSTJCLxx\nM  PIMSMPP     NETVIEW  local DDName required for interface support\nM  PROC##      JES2     Used in JES2 Procedure\nM  PROCLIB     z/OS     In MSTJCLxx\nM  PROFILE     TCPIP\nM  QUEUE       ESP      1 cyl is sufficient\nM  RESDEF      ESP      resource definitions\nM  SADSNAME    FOCUS    IBI Focus, multiuser sink address space\nM  SAFLNAME    FOCUS    IBI Focus, multiuser sink address space\nM  SGCDUMP     BMC      Mainview dump\nM  SGCTRACE    BMC      Mainview trace\nM  SIGNAUTH    NETVIEW  local DDName required for signon support\nM  SIGNPFK     NETVIEW  local DDName required for signon support\nM  SMCOLECT    FOCUS    IBI Focus, multiuser sink address space\nM  SMPCSI      SMPE     Consolidated Software Inventory repository\nM  SMPHOLD     SMPE\nM  SMPLIST     SMPE\nM  SMPLOG      SMPE     Internally captured messages\nM  SMPLOGA     SMPE     Internally captured messages Alternate\nM  SMPLTS      SMPE     Long term Storage\nM  SMPMTS      SMPE     Macro Temporary Storage\nM  SMPOUT      SMPE     Output\nM  SMPPTFIN    SMPE\nM  SMPPTS      SMPE     PTF Temporary Storage\nM  SMPPUNCH    SMPE     Control cards punched out from SMP/E\nM  SMPRPT      SMPE     Report\nM  SMPSCDS     SMPE     Source Control Data Set\nM  SMPSNAP     SMPE     SNAP Dumps\nM  SMPSTS      SMPE     Source Temporary Storage\nM  SMPTABL     SMPE     ISPF Table Library\nM  SMPTLIB     SMPE     Target Library allocations\nM  SORTDIAG    SORT     Diagnostic messages\nM  SORTIN      SORT     Input data to sort\nM  SORTLIB     SORT     library of routines and exits\nM  SORTMSG     SORT     Output Messages\nM  SORTOUT     SORT     Output data from sort\nM  SORTWK*     SORT\nM  STDERR      ZOSUNIX\nM  STDIN       ZOSUNIX\nM  STDOUT      ZOSUNIX\nM  SYS*        *        Temporary DDnames\nM  SYSEXEC     TSO      Source for REXX Procedures\nM  SYSFTPD     FTP      CLIENT Defaults\nM  SYSHELP     TSO      Help\nM  SYSLBC      TSO      Broadcast\nM  SYSLIB      *        COPY, MACRO, OBJECT for inclusions\nM  SYSLIN      HEWL     Input to Binder (Linkage Editor)\nM  SYSOUT      *        Usually output messages\nM  SYSPRINT    *        Usually output reports or messges\nM  SYSPROC     TSO      Source for CLIST and REXX Procedures\nM  SYSTCPD     TCPIP    Defaults\nM  SYSTERM     TSO\nM  SYSTSIN     TSO      input\nM  SYSTSPRT    TSO      Output\nM  SYSUADS     TSO      User Attributes Data Set\nM  SYSUT1      *        Usually input for a Utility\nM  SYSUT2      *        Usually output for a Utility\nM  SYSUT3      *        Utility work data set\nM  SYSUT4      *        Utility work data set\nM  SYSUT6      *        Utility work data set\nM  TOOLIN      SORT     Input data to ICETOOL\nM  TOOLMSG     SORT     Output Messages\nM  TRAKFILE    ESP      short term job tracking data.\nM  TSOLIB      TSO      Load Library - like STEPLIB\nM  USERDEF     ESP      for internal security.\nM  UTPRINT     DB2      Utility output messages\nN\nNDisabling DD Statements. - Know when to use them.\nN-------------------------------------------------\nM//ddname   DD  DUMMY   is usually all it takes.\nM  ABNLIGNR    AbendAid Disable AbendAid dump analysis\nN  ABNLNODP    Abendaid installation defined\nN  ABNLTERM    Abendaid installation defined\nM  CAOESTOP    CA-OPT   Turn CA-OPT II & CA-SYMDUMP OFF\nM  DMBENAN     DUMPMSTR TURN OFF DUMPMASTER\nM  ESPYIBM     EYE-SPY  Turn it OFF\nM  CAHBEXCL    Hyperbuf bypass CA- Hyperbuf\nM  IDIOFF      IBMFA    Turn IBM FAULT ANALYZER OFF\nM  NOESTAE     ASE      TURN OFF ABEND handling for ASE's OMCS\nM  NOFASTC     PDSMAN   Turn off monitoring PDS access         20080417\nM  NOSTAX      ASE      TURN OFF ATTN  handling for ASE's OMCS\nM  PLDIGN      Mainview StopX37  Mainview SRM Allocation\nM  BYPASPRO    Mainview ProSMS   Mainview SRM Allocation\nM  PROIGN      Mainview PoolDasd Mainview SRM Allocation\nM  FCOPYOFF    PDSMAN   Disable FastCopy\nM  PSPOFF      SoftWork Performance Essentials\nM  ULT@SOFF    StarTool Bypass Serena's StarTool IOO optimization\nM  NPDSFAST    SEA      PDSFAST\nM  VDSBYPAS    DMS      CA-SAMS\nM  ACCIGN      ????     ??????\nM\nM  X$abbbN     ASM2     Computer Associates\nM    abbb ============> Option\nM    a                  ASY\nM    a                  CND\nM    a                  DFR\nM    a                  FRC\nM    a                  IAS\nM    a                  INT\nM    a                  IXR\nM    a                  QUI\nM    a                  SEC\nM    a                  S99\nM    a                  UJI\nM    a                  USI\nM    a                  VER\nM    a                  X37\nM    a                  213\nM    a                  26A\nM    a                  26J\nM    a                  26V\nM    a                  522\nM    a ===============> Scope\nM                       J = Job\nM                       S = Step\nM                       I = immediate (TSO)\nM\nD//ABNLIGNR  DD DUMMY    ABENDAID\nD//NPDSFAST  DD DUMMY    PDSFAST\nD//VDSBYPAS  DD DUMMY    DMS (CA-SAMS)\nD//FCOPYOFF  DD DUMMY    PDSMAN FASTCOPY\nD//PLDIGN    DD DUMMY    STOPX37\nD//PROIGN    DD DUMMY    POOL-DASD\nD//BYPASPRO  DD DUMMY    PROSMS\nD//PSPOFF    DD DUMMY    SOFTWORKS (PERFORMANCE ESSENTIAL)\nD//ESPYIBM   DD DUMMY    EYE-SPY OFF\nD//NOESTAE   DD DUMMY    OMCS\nD//NOSTAX    DD DUMMY    OMCS\nD//CAOESTOP  DD DUMMY    CA-OPT II & CA-SYMDUMP OFF\nD//IDIOFF    DD DUMMY    IBM FAULT ANALYZER OFF\nD//DMBENAN   DD DUMMY    TURN OFF DUMPMASTER\nD//ULT@SOFF  DD DUMMY    SERENA'S STARTOOL\nD//CAHBEXCL  DD DUMMY    CA- HYPERBUF\nD//X$JX37N   DD DUMMY    CA-ASM2\nD//X$J26JN   DD DUMMY    CA-ASM2\nD//X$JIXRN   DD DUMMY    CA-ASM2\nD//X$JUJIN   DD DUMMY    CA-ASM2\nD//X$JS99N   DD DUMMY    CA-ASM2\nD//X$J26AN   DD DUMMY    CA-ASM2\nD//X$J26VN   DD DUMMY    CA-ASM2\nD//X$J213N   DD DUMMY    CA-ASM2\nD//X$JDFRN   DD DUMMY    CA-ASM2\nD//X$JINTN   DD DUMMY    CA-ASM2\nD//X$JQUIN   DD DUMMY    CA-ASM2\nD//X$J522N   DD DUMMY    CA-ASM2\nD//X$JCNDN   DD DUMMY    CA-ASM2\nD//X$JASYN   DD DUMMY    CA-ASM2\nD//X$JIASN   DD DUMMY    CA-ASM2\nD//X$JSECN   DD DUMMY    CA-ASM2\nD//X$JVERN   DD DUMMY    CA-ASM2\nD//X$JFRCN   DD DUMMY    CA-ASM2\nD//X$SX37N   DD DUMMY    CA-ASM2\nD//X$S26JN   DD DUMMY    CA-ASM2\nD//X$SIXRN   DD DUMMY    CA-ASM2\nD//X$SUJIN   DD DUMMY    CA-ASM2\nD//X$SS99N   DD DUMMY    CA-ASM2\nD//X$S26AN   DD DUMMY    CA-ASM2\nD//X$S26VN   DD DUMMY    CA-ASM2\nD//X$S213N   DD DUMMY    CA-ASM2\nD//X$SDFRN   DD DUMMY    CA-ASM2\nD//X$SINTN   DD DUMMY    CA-ASM2\nD//X$SQUIN   DD DUMMY    CA-ASM2\nD//X$S522N   DD DUMMY    CA-ASM2\nD//X$SCNDN   DD DUMMY    CA-ASM2\nD//X$SASYN   DD DUMMY    CA-ASM2\nD//X$SIASN   DD DUMMY    CA-ASM2\nD//X$SSECN   DD DUMMY    CA-ASM2\nD//X$SVERN   DD DUMMY    CA-ASM2\nD//X$SFRCN   DD DUMMY    CA-ASM2\nD//X$IX37N   DD DUMMY    CA-ASM2\nD//X$I26JN   DD DUMMY    CA-ASM2\nD//X$IIXRN   DD DUMMY    CA-ASM2\nD//X$IUJIN   DD DUMMY    CA-ASM2\nD//X$IS99N   DD DUMMY    CA-ASM2\nD//X$I26AN   DD DUMMY    CA-ASM2\nD//X$I26VN   DD DUMMY    CA-ASM2\nD//X$I213N   DD DUMMY    CA-ASM2\nD//X$IDFRN   DD DUMMY    CA-ASM2\nD//X$IINTN   DD DUMMY    CA-ASM2\nD//X$IQUIN   DD DUMMY    CA-ASM2\nD//X$I522N   DD DUMMY    CA-ASM2\nD//X$ICNDN   DD DUMMY    CA-ASM2\nD//X$IASYN   DD DUMMY    CA-ASM2\nD//X$IIASN   DD DUMMY    CA-ASM2\nD//X$ISECN   DD DUMMY    CA-ASM2\nD//X$IVERN   DD DUMMY    CA-ASM2\nD//X$IFRCN   DD DUMMY    CA-ASM2\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR14": {"ttr": 35076, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:22", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR14\nKDLM\nTz/OS JCL Reference -Delimiter Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDelimiter Statement\nN===================\nNUse the delimiter statement to indicate the end of data or transmittal\nNrecords in the input stream.\nN\nD/* \u00ddcomments\u00a8\nDxx \u00ddcomments\u00a8\nN\nNA delimiter statement consists of the characters /* or the two\nNcharacters specified in a DLM parameter in columns 1 and 2 and\nN one field:\nN->comments.\nIDo not continue a delimiter statement.\nI\nIConsiderations for an APPC Scheduling Environment\nI-------------------------------------------------\nIThe delimiter statement has no function in an APPC scheduling\nIenvironment. If you code a delimiter statement, the system will\nIignore it.\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM) recommends\nMthe use of a Delimiter statement, even when not required, and only\nMwhere appropriate.\nM\nMI have witnessed them dangling in JCL when no instream data is\nMpresent. It is not a replacement for a blank comment (//*) as\nMa spacing technique.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1401": {"ttr": 35078, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x00\\x8d\\x00\\x8d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:22", "lines": 141, "newlines": 141, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1401\nKeod eof instream data DLM\nTz/OS JCL Reference\nT-Delimiter Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNDelimiter Statement\nN===================\nNUse the delimiter statement to indicate the end of data or transmittal\nN records in the input stream.\nN\nD/* \u00ddcomments\nN\nIA delimiter statement consists of the characters /* or the two\nIcharacters specified in a DLM parameter in columns 1 and 2 and\nIone field: comments.\nN\nNA throwback to when a job could allocate the card reader for a ddname.\nMThe 'Computer Operator' would get a prompt on the console to load\nNdata into the card reader. Everything fed into the card reader was\nNprocessed as data until the end-of-data card was read. This signalled\nNthe end of the file. It was common to have a bunch of these laying\nNaround.\nN\nNDD Statement DLM Parameter\nN--------------------------\nNThe two characters you specify using the DLM parameter. Useful if you\nNhave instream data that contains the '/*' control card.\nN\nNExample: Using instream data - Good and Bad coding.\nN---------------------------------------------------\nNST01#05 DD * is good for non-JCL data.\nNST02#05 DD * is bad for JCL data.\nNST03#05 DATA is bad for JCL needing /*.\nNST04#05 DATA,DLM='$$' is good for JCL with no instream data\nN        starting with $$.\nNST05#05 DD DSN= is good for every kind of data.\nN\nD//ST01#05 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=Z\nD//SYSUT1    DD *\nN...\nN\u00dddata\u00a8\nN...\nD/*                <= This is meant to be the end of the\nD//*                  ST01#05 data.\nD//SYSUT2    DD SYSOUT=*\nD//*\nD//ST02#05 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=Z\nD//SYSUT1    DD *\nN//jobname1 JOB .. <= This is the end of the ST02#05 data.\nN//ST01#01 EXEC PGM=IEBGENER\nN//SYSIN     DD DUMMY\nN//SYSPRINT  DD SYSOUT=Z\nN//SYSUT1    DD *\nN...\nN\u00dddata\u00a8\nN...\nN/*                <= This is meant to be the end of the\nN//*                  ST01#01 data.\nN//SYSUT2    DD SYSOUT=*\nN\u00dddata\u00a8\nN...\nN/*                <= This is meant to be the end of the\nD//*                  ST02#05 data.\nD//SYSUT2    DD SYSOUT=*\nD//*\nD//ST03#05 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=Z\nD//SYSUT1    DD DATA\nN//jobname1 JOB ...\nN//ST01#01 EXEC PGM=IEBGENER\nN//SYSIN     DD DUMMY\nN//SYSPRINT  DD SYSOUT=Z\nN//SYSUT1    DD *\nN...\nN\u00dddata\u00a8\nN...\nN/*                <= This is meant to be the end of the\nN//*                  ST01#01 data. Instead it is the end\nN//*                  of the ST03#05 data.\nN//SYSUT2    DD SYSOUT=*\nD/*                <= This is meant to be the end of the\nD//*                  ST03#05 data.\nD//SYSUT2    DD SYSOUT=*\nD//*\nD//ST04#05 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=Z\nD//SYSUT1    DD DATA\nN//jobname1 JOB ...\nN//ST01#01 EXEC PGM=IEBGENER\nN//SYSIN     DD DUMMY\nN//SYSPRINT  DD SYSOUT=Z\nN//SYSUT1    DD *\nN...\nN\u00dddata\u00a8\nN...\nN/*                <= This is meant to be the end of the\nN//*                  ST01#01 data. Instead it is the end\nN//*                  of the ST04#05 data.\nN//SYSUT2    DD SYSOUT=*\nD/*                <= This is meant to be the end of the\nD//*                  ST04#05 data.\nD//SYSUT2    DD SYSOUT=*\nD//*\nD//ST05#05 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=Z\nD//SYSUT1    DD DISP=SHR,DSN=...  <= Contains any kind of data\nD//SYSUT2    DD SYSOUT=*\nD//*               <= No end-of-data delimiter is needed for this step.\nD//* End of Job ....\nN\nNExample 2: XMIT and instream data.\nN----------------------------------\nNWho does this anymore? Why, does /*ROUTE XEQ not work?\nN\nD//JOBNAME1 JOB ...\nD// XMIT DEST=NODEA,DLM=BB\nD//JOB55 JOB ,'C BROWN',MSGLEVEL=(2,0)\nD//STEPA EXEC PGM=SERS\nD//DD1 DD *\nD..\nDdata\nD.\nD/* END OF DATA FOR DATA SET DD1\nD//DD2 DD DATA,DLM=AA\nD.. data\nD.\nDAA END OF DATA FOR DATA SET DD2\nDBB END OF TRANSMITTED JOB\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR15": {"ttr": 35080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:23", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR15\nKPRINTDEV CNTL\nTz/OS JCL Reference -ENDCNTL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNENDCNTL Statement\nN=================\nNUse the ENDCNTL statement to mark the end of the program\nNcontrol statements following a CNTL statement.\nN\nD//\u00ddlabel\u00a8 ENDCNTL \u00ddcomments\u00a8\nN\nNThe ENDCNTL statement consists of the characters // in columns 1\nNand 2, and three fields:\nN->label,\nN->operation (ENDCNTL), and\nN->comments.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1501": {"ttr": 35082, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x00\\x14\\x00\\x14\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:23", "lines": 20, "newlines": 20, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1501\nKPRINTDEV AFP PSF\nTz/OS JCL Reference\nT-ENDCNTL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nINENDCNTL Statement\nN==================\nNUse the ENDCNTL statement to mark the end of the program control\nNstatements following a CNTL statement.\nN\nNSee CNTL and PRINTDEV.\nN\nD//lbl  ENDCNTL \u00ddCOMMENTS\u00a8\nI\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR16": {"ttr": 35084, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x008\\x008\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:23", "lines": 56, "newlines": 56, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR16\nTz/OS JCL Reference -EXEC Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNUse the EXEC (execute) statement to identify the program or cataloged\nNor in-stream procedure that this job step is to execute and to tell\nNthe system how to process the job step. The EXEC statement marks the\nNbeginning of each step in a job or a procedure.\nI\nIA job can have a maximum of 255 job steps. This maximum includes all\nIsteps in any procedures the EXEC statements call.\nN\nD//\u00ddstepname\u00a8 EXEC positional-parm\u00dd,keyword-parm\u00a8...\nD//               \u00dd,symbolic-parm=value\u00a8... \u00ddcomments\u00a8\nN\nNThe EXEC statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (EXEC),\nN->parameter, and\nN->comments.\nM\nMKenneth Tomiak remark:\nMA half-word counter contains 256 values, 0 thru 255, thus the\nM255 step limit. Realistically, no job with many steps is easy to\nMsupport when it fails and you have to wade through all the muck\nMto find where it failed, why it failed, and how to RESTART the job.\nM\nMKeep It Smartly Simple (KISS)!\nI\nIIf you happen to have gotten the GENIE application off of a\nIphysical Tape or from an AWS format file of a physical tape then\nIyou discovered a rare case where more than 255 steps would be\nIdesired. If you think outside of the box (half-word constraint)\nIthan you can come up with an alternate method of invoking more\nIthan 255 programs in a job. And what a nightmare that could be!\nN\nD//\u00ddstepname\u00a8 EXEC positional-parm\u00dd,keyword-parm\u00a8...\nD                  ...\u00dd,symbolic-parm=value\u00a8... \u00ddcomments\u00a8\nN\nNThe EXEC statement consists of the characters // in columns 1\nNand 2 and four fields:\nN\nN->name,\nN->operation (EXEC),\nN->parameter, and\nN->comments.\nN\nNAn EXEC statement is required for each job step.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1601": {"ttr": 35329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16V\\x00b\\x00b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:56:23", "lines": 98, "newlines": 98, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1601\nTz/OS JCL Reference\nT-EXEC Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNUse the EXEC (execute) statement to identify the program, cataloged\nNprocedure, or in-stream procedure that this job step is to execute\nNand to tell the system how to process the job step. The EXEC statement\nNmarks the beginning of each step in a job or a procedure.\nI\nIA job can have a maximum of 255 job steps. This maximum includes all\nIsteps in any procedures the EXEC statements call.\nI\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ------------------------------------------------------------------\nD//* Briefly describe what this step is for.\nD//* ------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST--#-- EXEC positional-parm{,keyword-parm}...,\nD//             {,symbolic-parm=value}... {comments}\nN\nNpositional-parm\nN---------------\nN//ST--#-- EXEC procname,keyword-parm}...,\nN\nNkeyword-parm\nN------------\nD//             ACCT='Up to 142 characters' - I could only get 127\nD//             ADDRSPC=VIRT | REAL\nD//             CCSID= convert ISO/ANSI V4 tape data (LABEL=,AL|AUL)\nD//             COND=\nD//             DYNAMNBR=nnnn = 0 through 3273 minus DD's in the step.\nD//             MEMLIMIT=nnnnn M | G | T | P - pages above the bar\nD//             PARM='Up to 100 characters'\nD//             PERFORM= Deprecated with WLM\nD//             PGM=\nD//             PROC=\nD//             RD=R | RNC | NR | NC\nD//             REGION=rrrr K | M If < 16M then within Private\nD//             RLSTMOUT=ssss   0 - 9999 seconds\nD//             TIME=(mm,ss) | NOLIMIT | 0 | MAXIMUM\nN\nD//A020 SET A020='12345678901234567890'\nD//A040 SET A040='12345678901234567890'\nD//A060 SET A060='12345678901234567890'\nD//A080 SET A080='12345678901234567890'\nD//A100 SET A100='12345678901234567890'\nD//A120 SET A120='12345678901234567890'\nD//A127 SET A127='1234567'\nD//A140 SET A140='12345678901234567890'\nD//A142 SET A142='12'\nD//*\nD//P020 SET P020='12345678901234567890'\nD//P040 SET P040='12345678901234567890'\nD//P060 SET P060='12345678901234567890'\nD//P080 SET P080='12345678901234567890'\nD//P100 SET P100='12345678901234567890'\nD//*\nD//STEP001 EXEC PGM=CBL3PARM,\nD//             ACCT='&A020.&A040.&A060.&A080.&A100.&A120.&A127',\nD//* OR\nD//             ACCT='12345678901234567890123456789012345678901234567890+\nD//             12345678901234567890123456789012345678901234567890123456+\nD//             789012345678901234567',\nD//* OR\nD//             ACCT=(1417,J318,'D58/920','CHG=2',\nD//             '33.95')\nD//*\nD//             CCSID=1057,        <=== ISO/ANSI V4 tape data conversion\nD//*\nD//*            COND=              <=== SEE IF...THEN/ELSE/ENDIF\nD//*\nD//             DYNAMNBR=20,\nD//*\nD//             MEMLIMIT=99999M,   <=== 0-99999,NOLIMIT\nD//*\nD//             PARM='&P020.&P040.&P060.&P080.&P100',\nD//* OR\nD//             PARM='12345678901234567890123456789012345678901234567890+\nD//             12345678901234567890123456789012345678901234567890'\nD//* OR\nD//             PARM=('KEY=VALUE',VALUE,KEYWORD,\nD//             'NEXT-PAIR',some-more')\nD//*\nD//             REGION=4M,  < 16M needs to fit in private below-the-line\nD//             REGION=18M  > 16M gets all below the line + some above\nD//             REGION=0M,  = 0M gets everything\nD//*\nD//             TIME=(357912,59)  MM = 0 THROUGH 357912 (248.55 DAYS)\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1610": {"ttr": 35331, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00}\\x00}\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:33", "lines": 125, "newlines": 125, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1610\nTz/OS JCL Reference\nT-EXEC Statement -ACCT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-165733\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNACCT Parameter\nN--------------\nNUse the ACCT parameter to specify one or more subparameters of\nNaccounting information that apply to this step. The system passes\nNthe accounting information to the installation's accounting routines.\nN\nD//             ACCT\u00dd.procstepname\u00a8=(accounting-information)\nI                 accounting-information: The manual states this can\nI                                         be up to 143 characters.\nM                   However, there is a 127 contiguous character\nM                   limit. At that point a comma will have to get\nM                   used and commas count as part of the 143 maximum.\nN\nNExample 1: Two fields.\nN----------------------\nNThis EXEC statement executes program JP5 and specifies accounting\nNinformation for this job step.\nN\nD//ST01#01 EXEC PGM=JP5,ACCT=(LOCATION8,'CHGE+3')\nN\nNExample 2: Special character (slash /) PROC symbol.\nN---------------------------------------------------\nNThis EXEC statement calls cataloged or in-stream procedure LOOKUP. The\nNaccounting information applies to this job step, ST03#04, and to all\nNthe steps in procedure LOOKUP.\nN\nD//ST03#04 EXEC PROC=LOOKUP,ACCT=('/83468')\nN\nNExample 3: Override multiple PROC steps without symbols.\nN--------------------------------------------------------\nNThis EXEC statement calls cataloged or in-stream procedure BILLING.\nNThe statement specifies different accounting information for each of\nNthe procedure steps: PAID, LATE, and BILL.\nN\nD//ST01#04 EXEC PROC=BILLING,ACCT.PAID=56370,ACCT.LATE=56470,\nD//             ACCT.BILL='121+366'\nN\nMKenneth Tomiak remark:\nMI read the 143 character limit and thought any installation hitting\nMthe limit would be rare indeed. But, I wanted to validate ways of\nMcoding such a long string. I had previously done some work on the\nM100 character PARM field. 'Programming Using The Kenneth Tomiak\nMMethod' (PUTKTM) recommends the use of //SYSIN type parameters if\nMyou have a need for passing more than a short parameter.\nM\nMWhat follows below are some failing and some working ways of using\nM143 characters in the ACCT Parameter.\nM\nNExample A: Single 128 character string.\nN---------------------------------------\nNThe first step, ST01#04, is exactly 127 characters and okay to use.\nN\nNThe second step, ST02#04, has 128 and causes the EXEC Statement\nNlength failure.\nN\nNThe third step, ST03#04, shows how 144 characters causes the ACCT field\nNfailure. Inside the parentheses are two sub-fields, the first is 127\nNchacters and the second is 16, adding up to 143. But the comma counts\nNand pushes it to fail.\nN\nNThe fourth step, ST04#04, reduces the second sub-field to 16 characters\nNand is error free.\nN\nI//ST01#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+\nI//             89012345678901234567890123456789012345678901234567890123+\nI//             4567890123456789012345678901234567')\nI//*\nI//ST02#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+\nI//             89012345678901234567890123456789012345678901234567890123+\nI//             45678901234567890123456789012345678')\nIIEFC642I EXCESSIVE PARAMETER LEIGTH OI THE EXEC STATEMEIT\nI\nI//ST03#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+\nI//             89012345678901234567890123456789012345678901234567890123+\nI//             4567890123456789012345678901234567','9012345678901234')\nIIEF637I EXCESSIVE ACCOUIT FIELD LEIGTH II THE ACCT FIELD\nI\nI//ST04#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+\nI//             89012345678901234567890123456789012345678901234567890123+\nI//             4567890123456789012345678901234567','901234567890123')\nN\nNExample C: Using SET to avoid continuation.\nN-------------------------------------------\nNPUTKTM does not promote using a complex ACCT Paramter, however if some\nNknucklehead used their authority to force this upon you, consider\nNbreaking up the values into groups.\nN\nN//A020 SET A020='12345678901234567890'\nN//A040 SET A040='12345678901234567890'\nN//A060 SET A060='12345678901234567890'\nN//A080 SET A080='12345678901234567890'\nN//A100 SET A100='12345678901234567890'\nN//A120 SET A120='12345678901234567890'\nN//A127 SET A127='1234567'\nN//*\nN//ST01#01 EXEC PGM=IEFBR14,\nN//             ACCT='&A020.&A040.&A060.&A080.&A100.&A120.&A127'\nN\nNExample D: 16 x 8 = 128 + 15 commas = 143\nN-----------------------------------------\nNThis shows two ways of using 8 character accounting codes with\nNparentheses, apostrophes('), and commas.\nN\nI//ST01#02 EXEC PGM=IEFBR14,ACCT=('12345678','01234567','90123456','8901+\nI//             2345','78901234','67890123','56789012','45678901','34567+\nN//             890','23456789','12345678','01234567','90123456'\nN//             '89012345','78901234','67890123')\nN//*\nN//ST02#02 EXEC PGM=IEFBR14,\nN//             ACCT=('12345678','01234567','90123456',\nN//             '89012345','78901234','67890123','56789012',\nN//             '45678901','34567890','23456789','12345678','01234567',\nN//             '90123456','89012345','78901234','67890123')\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1611": {"ttr": 35333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:34", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1611\nTz/OS JCL Reference\nT-EXEC Statement -ADDRSPC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNADDRSPC Parameter\nN-----------------\nNUse the ADDRSPC parameter to indicate to the system that the job\nN step requires virtual storage (which is pageable) or central\nNstorage (also called real storage, which is nonpageable).\nN\nD//             ADDRSPC=VIRT | REAL\nI                 VIRT: Requests virtual storage. The system can\nI                       page the job step.\nI                       The default and why this Parameter is\nI                       rarely coded.\nI                 REAL: Requests central storage (also called real\nI                       storage). The system cannot page the job\nI                       step and must place the job step in central\nI                       storage.\nM\nMKenneth Tomiak remark:\nMYou have no reason to code this. So DON'T!\nN\nD//*\nD//ST01#01 EXEC PGM=CBL3PARM,ADDRSPC=VIRT\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1612": {"ttr": 35335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00,\\x00,\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:34", "lines": 44, "newlines": 44, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1612\nKJOB DD\nTz/OS JCL Reference\nT-EXEC Statement -CCSID Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNCCSID Parameter\nN---------------\nNYou can request the access method to convert data between the coded\nNcharacter set identifier (CCSID) specified on the JOB or EXEC\nNstatement and the CCSID specified on the DD statement. Data conversion\nN is supported on access to ISO/ANSI Version 4 tapes using access\nNmethods BSAM or QSAM, but not using EXCP.\nN\nD//             CCSID=ccsid\nI                 ccsid: A decimal number from 1 to 65535.\nI                     -> If no CCSID parameter is specified on the JOB\nI                        statement, the default is 500.\nI                     -> The CCSID value of 65535 has a special\nI                        meaning: it suppresses conversion.\nN\nNExample 8: No conversion (from DD).\nN-----------------------------------\nNSince a CCSID of 65535 prevents conversion, the data written to tape\nNis not converted. A CCSID of 65535 is recorded in the tape header\nNlabel because no CCSID was specified on the DD statement.\nN\nD//ST01#01 EXEC PGM=MYPGM2,CCSID=65535\nD//DD1       DD DISP=NEW,DSN=B,\nD//             UNIT=3590,VOL=SER=T00009,\nD//             LABEL=(,AL)\nD//*\nM\nMKenneth Tomiak remark:\nMIf you are producing tapes with non-standard CCSID values then\nMyou should code the CCSID on the DD Statement to ensure the\nMtape label contains the value.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1613": {"ttr": 35337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00Z\\x00Z\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:34", "lines": 90, "newlines": 90, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1613\nTz/OS JCL Reference\nT-EXEC Statement -COND Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNCOND Parameter\nN--------------\nNUse the COND parameter to test return codes from previous job steps\nNand determine whether to bypass this job step. You can specify one or\nNmore tests on the COND parameter, and you can test return codes from\nNparticular job steps or from every job step that has completed\nNprocessing. If any of the test conditions are satisfied, the system\nNevaluates the COND parameter as true and bypasses the job step. If\nNnone of the test conditions specified on the COND parameter are\nNsatisfied, the system evaluates the COND parameter as false and\nNexecutes the job step. The system performs the COND parameter tests\nNagainst return codes from the current execution of the job. If a test\nNreturns a previously bypassed step, the system evaluates the test as\nNfalse.\nN\nD//             COND= ((code,operator\u00dd,stepname\u00a8\u00dd.procstepname\u00a8),\nD//                   EVEN | ONLY\nD//*            COND=              <=== PLEASE USE IF...THEN/ELSE/ENDIF\nI                 Specify up to eight return code tests.\nI                 code: Specifies a number that the system compares to\nI                       the return codes from all previous steps in\nI                       the job or from specific steps. code is a\nI                       decimal number from 0 through 4095.\nI                 operator: Specifies the type of comparison to be made\nI                           to the return code. If the specified test\nI                           is true, the step is bypassed.\nI                           GT Greater than\nI                           GE Greater than or equal to\nI                           EQ Equal to\nI                           LT Less than\nI                           LE Less than or equal to\nI                           NE Not equal to\nI                 stepname: Identifies the EXEC statement of a previous\nI                           job step that issues the return code to be\nI                           used in the test.\nM                        -> LIMITS THE TEST TO A SPECIFIC STEP.\nI                        -> If you omit stepname, the code you specify\nI                           is compared to the return codes from all\nI                           previous steps.\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM-JCL) strongly\nMencourages you to forsake the use of the COND Parameter for other\nMthan EVEN and ONLY. The code,operator format will have you thinking\nMhow to bypass this step. The IF...THEN/ELSE/ENDIF Statement construct\nMwill have you thinking WHEN to execute this step. And that is how\nMEVEN and ONLY function.\nN\nNCertain error conditions prevent the system from executing a step,\nNregardless of any requests specified through the COND parameter.\nN\nNExample 1: Bypass a step.\nN-------------------------\nNIn this example, if the return code from STEP3 is 0 through 3, the\nNsystem bypasses STEP6. If the return code is 4 or greater, the\nNsystem executes STEP6. Because neither EVEN nor ONLY is specified,\nNthe system does not execute this step if a preceding step abnormally\nNterminates.\nN\nD//STEP6 EXEC PGM=DISKUTIL,COND=(4,GT,STEP3)\nI\nIThis example is great for showing how to get yourself into trouble.\nIIBM programs typically return 0 for success and an increasing\nImultiple of 4 as the severity increases. Thus the above example\nIis coded to skip the step if the previous step worked when what\nIyou more likely wanted was to skip this step if the prior step\nIwas unhappy.\nI\nIJOB scheduling tools are written with the belief that success\nIis better than failure. Extra handling is required to allow\nIa non-zero return code to continue. Thus trying to run a step\nIwhen the previous step failed is counter-intuitive.\nI\nIFor what is worth: Job scheduling tools are also not happy with\nIthe IF...THEN/ELSE/ENDIF Statement construct. You may find yourself\nIhaving to remove all uses of COND= and IF...THEN/ELSE/ENDIF\nIbefore promoting TEST JCL to production. For that reason a\nI//jobname JOB COND=(0,NE) might be your next best friend.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1614": {"ttr": 35339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:35", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1614\nKIKJEFT TSO ALLOC bpxwdyn\nTz/OS JCL Reference\nT-EXEC Statement -DYNAMNBR Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNDYNAMNBR Parameter\nN------------------\nNUse the DYNAMNBR parameter to tell the system to hold a number of\nNresources in anticipation of reuse. Code DYNAMNBR instead of several\nNDD statements with DYNAM parameters.\nM\nMIn the real world, ask yourself 'Does my step dynamically allocate\nMany files?' For a very long time, only a step running TSO was likely\nMto be doing that outside of system software.\nN\nD//             DYNAMNBR=nnnn = 0 through 3273 minus DD's in the step.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1615": {"ttr": 35341, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:35", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1615\nTz/OS JCL Reference\nT-EXEC Statement -MEMLIMIT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNMEMLIMIT Parameter\nN------------------\nNUse the MEMLIMIT parameter to specify the limit on the total size\nN of usable virtual storage above the bar in a single address space.\nN\nMAnother Parameter you are unlikely to use.\nN\nD//             MEMLIMIT=nnnnn M | G | T | P | NOLIMIT\nI                 nnnnn: limit on the total size of usable virtual\nI                        storage above the bar can be used.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1616": {"ttr": 35343, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00@\\x00@\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:35", "lines": 64, "newlines": 64, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1616\nTz/OS JCL Reference\nT-EXEC Statement -PARM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNPARM Parameter\nN--------------\nNUse the PARM parameter to pass variable information to the processing\nNprogram executed by this job step. To use the information,\nNthe processing program must contain instructions to retrieve the\nNinformation.\nN\nD//             PARM='Up to 100 characters'\nN\nNExample 1: One string or 3 parameters?\nN--------------------------------------\nIThe answer depends on the receiving program.\nNThe system passes P1,123,P2=5 to the processing program named APG22.\nN\nD//ST01#01 EXEC PGM=APG22,PARM='P1,123,P2=5'\nN\nNExample A: Using symbols to avoid continuation.\nN-----------------------------------------------\nNI had previously done some work on the 100 character PARM field.\nN'Programming Using The Kenneth Tomiak Method' (PUTKTM)\nMrecommends the use of //SYSIN type parameters if\nMyou have a need for passing more than a short parameter.\nM\nD//*\nD//P020     SET P020='12345678901234567890'\nD//P040     SET P040='12345678901234567890'\nD//P060     SET P060='12345678901234567890'\nD//P080     SET P080='12345678901234567890'\nD//P100     SET P100='12345678901234567890'\nD//*\nD//ST01#01 EXEC PGM=SHOWPARM,\nD//             PARM='&P020.&P040.&P060.&P080.&P100'\nN\nNExample B: Using continuation.\nN------------------------------\nNEnclose your string inside apostrophes (').\nN\nD//*\nD//ST01#01 EXEC PGM=SHOWPARM,\nD//             PARM='12345678901234567890123456789012345678901234567890+\nD//             12345678901234567890123456789012345678901234567890'\nN\nNExample B: Using parentheses.\nN-----------------------------\nNParentheses () and apostrophes (') cover spaces and special characters.\nNIt also avoids running out to column 71 and using continuation.\nN\nD//*\nD//ST01#01 EXEC PGM=SHOWPARM,\nD//             PARM=('KEY=VALUE',KEYWORD,VALUE,\nD//             'NEXT-KEY',some-more')\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1617": {"ttr": 35345, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00\\x12\\x00\\x12\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:35", "lines": 18, "newlines": 18, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1617\nTz/OS JCL Reference\nT-EXEC Statement -PERFORM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNPERFORM Parameter\nN-----------------\nNIn WLM goal mode, any PERFORM parameter on an EXEC statement for a\nNjob or a started procedure is ignored.\nN\nD//             PERFORM= Deprecated with WLM.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1618": {"ttr": 35585, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x007\\x007\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:36", "lines": 55, "newlines": 55, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1618\nTz/OS JCL Reference\nT-EXEC Statement -PGM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNPGM Parameter\nN-------------\nNUse the PGM parameter to name the program that the system is to\nNexecute. The specified program must be a member of a partitioned\nNdata set (PDS) or partitioned data set extended (PDSE) used as a\nNsystem library, a private library, or a temporary library.\nI\nIsystem-library: LNKLST.\nIprivate-library: JOBLIB or STEPLIB.\nItemporary-library: DD Statement from a prior step.\nN\nD//ST01#01 EXEC PGM=program-name | (JES3-only: JCLTEST|JSTTEST)\nI                 Specifies the member name or alias of the program\nI                 to be executed.\nN\nNExample A: Testing JCL Syntax.\nN------------------------------\nNUsing IEFBR14 because it works.\nN\nD//jobname1 JOB (pano,room,time,lines,cards,forms,copies,log,linect),\nD//             'PROGRAMMER NAME',\nD//             CLASS=A,MSGCLASS=T,MSGLEVEL=(1,1),\nD//             NOTIFY=&SYSUID,REGION=6M,TIME=400\nD//*\nD//ST01#01 EXEC PGM=IEFBR14\nN\nNExample 2: Execute a temporary-library member.\nN----------------------------------------------\nNThe first step defines temporary data set &&PARTDS and creates a Load\nNmodule named PROG.\nN\nNThe second step contains a backward reference to the //SYSLMOD DD\nNstatement defined in the first step.\nN\nNThe data set &&PARTDS is deleted at the end of the job.\nN\nD//ST01#02 EXEC PGM=IEWL\nD//  ...\nD//SYSLMOD   DD DISP=(MOD,PASS),DSN=&&PARTDS(PROG),\nD//             UNIT=3390,\nD//             SPACE=(1024,(50,20,1))\nD//*\nD//ST02#02 EXEC PGM=*.ST01#02.SYSLMOD\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1619": {"ttr": 35587, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:36", "lines": 31, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1619\nTz/OS JCL Reference\nT-EXEC Statement -PROC and Procedure Name Parameters\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNPROC and Procedure Name Parameters\nN----------------------------------\nNUse the PROC parameter to specify that the system is to call and\nNexecute a cataloged or in-stream procedure.\nN\nD//             {procedure-name} | PROC={procedure-name}\nI                  PROC= can be omitted.\nM\nMKenneth Tomiak remark:\nMWhile the Procedure Name parameter is positional, the 'Programming\nMUsing The Kenneth Tomiak Method' (PUTKTM-JCL) recommends coding\nMPROC= to leave no doubt you knew what you wanted.\nN\nNExample 1: Invoking a PROC.\nN---------------------------\nNThis statement calls the cataloged or in-stream procedure\nNnamed PAYWKRS.\nN\nD//ST01#01 EXEC PROC=PAYWKRS\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1620": {"ttr": 35589, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00:\\x00:\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:36", "lines": 58, "newlines": 58, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1620\nTz/OS JCL Reference\nT-EXEC Statement -RD Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNRD Parameter\nN------------\nNUse the RD (restart definition) parameter to:\nN\nN->Specify that the system is to allow the operator the option of\nN  performing automatic step or checkpoint restart if a job step\nN  abends with a restartable abend code.\nI  See the SCHEDxx parmlib member description in z/OS MVS\nI  Initialization and Tuning Guide for information about\nI  restartable abends.\nN\nN->Allow JES to perform automatic step restart after a system failure\nN  even if the journal option is not specified in the JES\nN  initialization parameters or JES control statements.\nN\nN->Suppress, partially or totally, the action of the assembler language\nN  CHKPT macro instruction or the DD statement CHKPT parameter.\nN\nD//             RD=R | RNC | NR | NC\nI                  R  (Restart, Checkpoints Allowed)\nI                     Indicates that the operator can perform automatic\nI                     step restart if the job step fails.\nI                  RNC (Restart, No Checkpoints)\nI                     Indicates that the operator can perform automatic\nI                     step restart if the job step fails.\nI                  NR (No Automatic Restart, Checkpoints Allowed)\nI                     Indicates that the operator cannot perform\nI                     automatic step restart if the job fails.\nI                  NC (No Automatic Restart, No Checkpoints)\nI                     Indicates that the operator cannot perform\nI                     Automatic step restart if the job step fails.\nN\nNExample 1: Automatic step restart allowed.\nN------------------------------------------\nNRD=R specifies that the operator can perform automatic step restart\nNif the job step fails.\nN\nD//ST01#01 EXEC PGM=GIIM,RD=R\nN\nNExample 2: suppresses automatic and deferred checkpoint restarts.\nN-----------------------------------------------------------------\nNRD=RNC specifies that, if the step fails, the operator can perform\nNautomatic step restart. RD=RNC suppresses automatic and deferred\nNcheckpoint restarts.\nN\nD//ST01#01 EXEC PGM=T18,RD=RNC\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1621": {"ttr": 35591, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:37", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1621\nTz/OS JCL Reference\nT-EXEC Statement -REGION Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNREGION Parameter\nN----------------\nNUse the REGION parameter to specify the amount of central or virtual\nNstorage that the step requires.\nN\nD//             REGION=rrrr K | M If < 16M then within Private\nD//             REGION=4M,  < 16M needs to fit in private below-the-line\nD//             REGION=18M  > 16M gets all below the line + some above\nD//             REGION=0M,  = 0M gets everything .... unless\nI\nITwo installation exits, IEFUSI and IEALIMIT, can also affect the size\nIof the user address space assigned to the job step.\nN\nNExample A: JAVA is greedy.\nN--------------------------\nNIt is pretty common to find running JAVA requires a large\nNREGION size.\nN\nD//             REGION=768M\nM\nMKenneth Tomiak remark:\nMThe current trend of coding REGION=0M is a sign of sloppy\nMcoding. I have witnessed a z/OS System Programmer adding ever more\nMPAGE data sets to support the increased number of greedy jobs\nMexecuting concurrently, but not needing the amount of storage that\nMgets set aside should it use it and need to be paged out.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1622": {"ttr": 35593, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:37", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1622\nTz/OS JCL Reference\nT-EXEC Statement -RLSTMOUT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNRLSTMOUT Parameter\nN------------------\nNUse the RLSTMOUT parameter to specify the maximum time in seconds that\nNa VSAM RLS or DFSMStvs request is to wait for a required lock before\nNthe request is assumed to be in deadlock and ended with VSAM return\nNcode 8 and reason code 22(X'16'). Specify RLSTMOUT as a value in\nNseconds in the range of 0 to 9999. A value of 0 means that the VSAM RLS\nNor DFSMStvs request has no timeout value; the request waits as long as\nNnecessary to obtain the required lock.\nN\nD//             RLSTMOUT=ssss   0 - 9999 seconds\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1623": {"ttr": 35595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x16W\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T16:57:37", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1623\nTz/OS JCL Reference\nT-EXEC Statement -TIME Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNEXEC Statement\nN==============\nNTIME Parameter\nN--------------\nNUse the TIME parameter to specify the maximum amount of time that a\nNjob step may use the processor or to find out through messages how\nNmuch processor time a step used.\nN\nNYou can use the TIME parameter on an EXEC statement to increase or\nNdecrease the amount of processor time available to a job step over\nNthe default value.\nN\nNA step that exceeds its allotted time abnormally terminates and causes\nNthe job to terminate, unless an installation exit routine extends the\nNtime for the job. The exit routine IEFUTL is established through\nNSystem Management Facilities (SMF).\nN\nD//             TIME=(mm,ss) | 1440 | NOLIMIT | 0 | MAXIMUM\nI                 mm = 0 THROUGH 357912 (248.55 DAYS)\nI                 ss = 0 through 59.\nM\nMKenneth Tomiak remark:\nMThis parameter gets abused when programs are not load tested and\nMa realistic value supplied. All is well until some condition trips\nMand the program begins looping and consuming most of the CPU\nMresources.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR17": {"ttr": 35597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x02\\x00L\\x00L\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:02:06", "lines": 76, "newlines": 76, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR17\nKCOND=\nTz/OS JCL Reference -IF/THEN/ELSE/ENDIF Statement Construct\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170206\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNIF/THEN/ELSE/ENDIF Statement Construct\nN======================================\nNThis topic describes the IF/THEN, ELSE, and ENDIF statements,\nNcollectively called the IF/THEN/ELSE/ENDIF statement construct.\nN\nNUse the IF/THEN/ELSE/ENDIF statement construct to conditionally\nNexecute job steps within a job.\nN\nD//\u00ddname\u00a8 IF \u00dd(\u00a8relational-expression\u00dd)\u00a8 THEN \u00ddcomments\u00a8\nI..\nIaction when relational-expression is true\nI.\nD//\u00ddname\u00a8 ELSE \u00ddcomments\u00a8\nI..\nIaction when relational-expression is false\nI.\nD//\u00ddname\u00a8 ENDIF \u00ddcomments\u00a8\nN\nNThe IF statement consists of the characters // in columns 1 and 2 and\nNthe five fields: name, operation (IF), the relational-expression, the\nNcharacters THEN, and comments. The relational-expression can be\nNenclosed in parentheses.\nN\nNThe ELSE statement consists of the characters // in columns 1 and 2\nNand the three fields: name, operation (ELSE), and comments.\nN\nNThe ENDIF statement consists of the characters // in columns 1 and 2\nNand the three fields: name, operation (ENDIF), and comments.\nN\nNThe IF statement is always followed by a relational-expression and\nNa THEN clause. Optionally, an ELSE clause can follow the THEN\nNclause. An ENDIF statement always follows the ELSE clause, if\nNpresent, or the THEN clause.\nN\nN->The THEN clause specifies the job steps that the system processes\nN  when the evaluation of the relational-expression for the IF\nN  statement is a true condition.\nN\nN->The system evaluates the relational-expression at execution time.\nN\nN->The ELSE clause specifies the job steps that the system processes\nN  when the evaluation of the relational-expression for the IF\nN  statement is a false condition.\nN\nN->The ENDIF statement indicates the end of the IF/THEN/ELSE/ENDIF\nN  statement construct, and must be coded for each construct.\nN\nNYou can nest IF/THEN/ELSE/ENDIF statement constructs up to a maximum\nNof 15 levels. The steps that execute in a THEN clause and an ELSE\nNclause can be another IF/THEN/ELSE/ENDIF statement construct.\nM\nMKenneth Tomiak remark:\nMNesting the IF/THEN/ELSE/ENDIF statement construct is a sign of\nMpoor design. It will be a burden to code the proper conditions when\nMthe job fails and a RESTART is desired from other than the top.\nM\nMCOND= versus IF..THEN/ELSE/ENDIF comparison\nM-------------------------------------------\nMThe COND= parameter at the JOB and STEP level is coded to specify\nMwhen NOT to execute a step. Programmers think in terms of when TO\nMdo something. I found thinking inversely to control the\nMnon-execution of a step to be cumbersome. I was not alone.\nM\nMWhile the conditions on the IF..THEN construct may be coded for\nMnegative comparison, the result is now when TO execute the step.\nMRelegating the NOT logic where it belongs under the ELSE construct.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1701": {"ttr": 35599, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x02\\x00\\xa2\\x00\\xa2\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:02:07", "lines": 162, "newlines": 162, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1701\nKCOND\nTz/OS JCL Reference\nT-IF...THEN/ELSE/ENDIF Statement Construct\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nBSA22-7597-16 z/OS JCL Reference\n*\nNIF...THEN/ELSE/ENDIF Statement Construct\nN========================================\nMThis topic describes the IF/THEN, ELSE, and ENDIF statements,\nNcollectively called the IF/THEN/ELSE/ENDIF statement construct.\nN\nIA set of statements that make it easier to write when you want a step\nIto run. The COND=() parameter on the EXEC card uses inverse logic,\nIyou actually code when not to run the step. With IF...THEN you\nIcode when to run the step.\nN\nD//label     IF ({step}.condition -op code) THEN\nD//...\nD//label   ELSE\nD//...\nD//label  ENDIF\nN\nNThe system evaluates relational-expressions that are enclosed\nNwithin parentheses prior to expressions found outside of parentheses.\nNTherefore, you can control the way in which complex\nNrelational-expressions are evaluated.\nN\nN                                   Order of\nNOperator Operation                 Evaluation\nN-------- ------------------------- ----------\nNNOT operator:\nNNOT or \u00ac NOT                       first\nN\nNComparison operators:\nNGT or >  Greater than              second\nNLT or <  Less than                 second\nNNG or \u00ac> Not greater than          second\nNNL or \u00ac< Not less than             second\nNEQ or =  Equal to                  second\nNNE or \u00ac= Not equal to              second\nNGE or >= Greater than or equal to  second\nNLE or <= Less than or equal to     second\nN\nNLogical operators:\nNAND or & AND                       third\nNOR or |  OR                        third\nN\nNRelational-Expression Keywords\nNThe following keywords are the only keywords supported by IBM and\nNrecommended for use in relational-expressions. Any other keywords, even\nNif accepted by the system, are not intended or supported keywords.\nN\nNKeyword Use\nNRC      indicates a return code\nNABEND   indicates an abend condition occurred\nN        =TRUE\nN        =FALSE\nN\u00acABEND  indicates no abend condition occurred\nNABENDCC indicates a system or user completion code\nN        =SB37\nN        =U0100\nNRUN     indicates that the specified step started execution\nN        =TRUE\nN        =FALSE\nN\u00acRUN    indicates that the specified step did not start execution\nN\nNExample A:\nN\nI//*\nI//PROCS JCLLIB ORDER=(&SYSUID..JES.PROCLIB)\nI//*\nI//PROC001 PROC\nI//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI//* ###################################################################\nI//* This proc executes two steps.\nI//* ###################################################################\nI//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI//PS01#02 EXEC PGM=IEFBR14\nI//PS02#02 EXEC PGM=IEBGENER\nI//SYSPRINT DD  SYSOUT=*\nI//SYSIN    DD  DUMMY\nI//SYSUT1   DD  DISP=SHR,DSN=KTOMIAK.JCL.CNTL(JCLR1701)\nI//SYSUT2   DD  SYSOUT=*\nI//PROC001 PEND\nI//*\nI//PROC002 PROC\nI//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI//* ###################################################################\nI//* This proc executes PROC001.\nI//* ###################################################################\nI//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI//PIF1      IF (RC < 1) THEN                         <==== IF\nI//PS01#01 EXEC PROC=PROC001\nI//PIF1   ENDIF                                       <==== ENDIF\nI//PROC002 PEND\nI//*\nI//PROC003 PROC\nI//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI//* ###################################################################\nI//* This proc executes PROC002.\nI//* ###################################################################\nI//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI//LIF1      IF (RC = 0) THEN                         <==== IF\nI//PS01#01 EXEC PROC=PROC002\nI//LIF1   ENDIF                                       <==== ENDIF\nI//PROC003 PEND\nI//*\nI//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI//* -------------------------------------------------------------------\nI//* The steps below execute programs and prcedures based on IF results.\nI//* -------------------------------------------------------------------\nI//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI//INC1 INCLUDE MEMBER=ST01#07\nI//*\nI//TIF1      IF (ST01#07.RC = 0) THEN             <==== IF\nI//ST02#07 EXEC PGM=IEFBR14\nI//ST03#07 EXEC PROC=PROC002\nI//ST04#07 EXEC PROC=PROC003\nI//TIF1    ELSE                                   <==== ELSE\nI//ST05#07 EXEC PGM=IEFBR14\nI//ST06#07 EXEC PROC=PROC003\nI//*\nI//TIF2      IF (ST02#07.RUN = TRUE) THEN           <==== IF\nI//ST07#07 EXEC PROC=PROC003\nI//ST08#07 EXEC PROC=PROC002\nI//TIF2    ELSE                                     <==== ELSE\nI//ST07#07 EXEC PROC=PROC001\nI//TIF2   ENDIF                                     <==== ENDIF\nI//TIF1   ENDIF                                   <==== ENDIF\nI//*\nI//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nI//* ===================================================================\nI//* End of Job JCLR1701.\nI//* ===================================================================\nI//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nI//*\nI//* Execution results:\nI//* ==================\nI//* STEPNAME PROCSTEP    RC\nI//* ST01#07              00\nI//* ST02#07              00\nI//* PS01#01  PS01#02     00\nI//* PS01#01  PS02#02     00\nI//* PS01#01  PS01#02     00\nI//* PS01#01  PS02#02     00\nI//* ST05#07           FLUSH\nI//* PS01#01  PS01#02  FLUSH\nI//* PS01#01  PS02#02  FLUSH\nI//* PS01#01  PS01#02  FLUSH\nI//* PS01#01  PS02#02  FLUSH\nI//* PS01#01  PS01#02  FLUSH\nI//* PS01#01  PS02#02  FLUSH\nI//* ST07#07  PS01#02  FLUSH\nI//* ST07#07  PS02#02  FLUSH\nI//*\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR18": {"ttr": 35601, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x02\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:02:07", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR18\nTz/OS JCL Reference -INCLUDE Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590154\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNINCLUDE Statement\nN=================\nNUse the INCLUDE statement to:\nN\nN->Identify the name of the member of a partitioned data set (PDS)\nN  or partitioned data set extended (PDSE) that contains a set of\nN  JCL statements (such as DD and OUTPUT JCL statements) called an\nN  INCLUDE group.\nN\nN->Imbed the INCLUDE group in the JCL stream at the position of the\nN  INCLUDE statement.\nN\nNThe INCLUDE group replaces the INCLUDE statement, and the system\nNprocesses the imbedded JCL statements as part of the JCL stream. The\nNJCL statements, which are subject to all JCL processing rules, must\nNbe complete statements; that is, you cannot use an imbedded statement\nNto continue the statement that precedes INCLUDE.\nN\nD//\u00ddname\u00a8 INCLUDE MEMBER=name \u00ddcomments\u00a8\nN\nNThe INCLUDE statement consists of the characters // in columns 1\nNand 2 and four fields:\nN\nN->name,\nN->operation (INCLUDE),\nN->keyword parameter (MEMBER), and\nN->comments.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1801": {"ttr": 35841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x02\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:02:07", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1801\nKCOPY IMBED\nTz/OS JCL Reference\nT-INCLUDE Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNINCLUDE Statement\nN=================\nNUse the INCLUDE statement to:\nN\nN->Identify the name of the member of a partitioned data set (PDS) or\nN  partitioned data set extended (PDSE) that contains a set of JCL\nN  statements (such as DD and OUTPUT JCL statements) called an INCLUDE\nN group.\nN\nN->Imbed the INCLUDE group in the JCL stream at the position of the\nN  INCLUDE statement.\nN\nNThe INCLUDE group replaces the INCLUDE statement, and the system\nNprocesses the imbedded JCL statements as part of the JCL stream. The\nNJCL statements, which are subject to all JCL processing rules, must\nNbe complete statements; that is, you cannot use an imbedded statement\nNto continue the statement that precedes INCLUDE.\nN\nD//INC1 INCLUDE MEMBER=name comments\nN\nNExample A: Copy in a non-PROC member.\nN=====================================\nNPulls in JCL from a member of your JCLLIB specification or the\nNconcatenation of PROCLIBs as defined by your installation.\nN\nD//PROCS JCLLIB ORDER=(&SYSUID..JES.PROCLIB)\nD//INC1 INCLUDE MEMBER=ST01#08\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1802": {"ttr": 35843, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x04\\x00\\x95\\x00\\x95\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:04:33", "lines": 149, "newlines": 149, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1802\nKCOPY IMBED\nTz/OS JCL Reference\nT-INCLUDE Statement -Example B\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170433\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNINCLUDE Statement\nN=================\nNExample B: Putting INCLUDE to use.\nN----------------------------------\nMKenneth Tomiak:\nMHere is an example of how to put an environment specific dataset\nMinto lots of JCL and retain only one place to change it in the future.\nMSuppose you need to keep both a DB2 subsystem's environment name and\nMversion in the dataset name.\nN\nN1) The DB2A subsystem was already upgraded to Version 9.1.0.\nN2) The DB2B subsystem uses a different set of datasets.\nN3) The next time you apply maintenance you change the RSU level.\nN4) You are now ready to upgrade DB2B to Version 9.1.0. You must change\nN   all references to the new name you will have.\nN\nNDB2A - For development work (current)\nNDB2.DB2A.V9R1M0.RSU0706.SDSNEXIT\nNDB2.DB2A.V9R1M0.RSU0706.SDSNLOAD\nN\nNDB2A - For development work (future)\nNDB2.DB2A.V9R1M0.RSU0803.SDSNEXIT\nNDB2.DB2A.V9R1M0.RSU0803.SDSNLOAD\nN\nNDB2B - For production work (current)\nNDB2.DB2A.V8R1M0.RSU0612.SDSNEXIT\nNDB2.DB2A.V8R1M0.RSU0612.SDSNLOAD\nN\nNDB2B - For production work (future)\nNDB2.DB2A.V9R1M0.RSU0702.SDSNEXIT\nNDB2.DB2A.V9R1M0.RSU0702.SDSNLOAD\nN\nN\nNHow to do it: The old way was to create an alias of the old name and\nNpoint it to the new. And when someone coded the new name in their JCL\nNand you did your next change you had to drop the old alias and create\nNit and a second alias to point to the name. Repeat each time and the\nNnumber of alias entries you must ensure are defined grows each\nNtime. The new way is to build one JCLLIB member for each subsystem\nNand have everything include that member.\nNNow you change the name in one place and every job\nNuses the new name. Example:\nN\nNI might name the JCLLIB member DB2LINK. Here is what DB2LINK has:\nN\nN//DB2LINK   DD DISP=SHR,DSN=DB2.DB2A.V9R1M0.RSU0706.SDSNEXIT\nN//          DD DISP=SHR,DSN=DB2.DB2A.V9R1M0.RSU0706.SDSNLOAD\nN\nNAnd here is how I use it with my JOBLIB statement:\nN\nN//KTOMIAK JOB (),'INCLUDE EXAMPLE',...\nD//*\nD//DB2SSID SET DB2SSID=DB2A\nD//*\nD//PROCS  JCLLIB ORDER=(DB2.&DB2SSID..PROCLIB)\nD//SYSSY INCLUDE MEMBER=IEASYM00\nD//DB2SY INCLUDE MEMBER=SET&DB2SSID\nD//*\nD//*\nD//JOBLIB    DD DDNAME=DB2LINK\nD//          DD DDNAME=DB2RUNL\nD//     INCLUDE MEMBER=DB2LINK\nD//     INCLUDE MEMBER=DB2RUNL\nD//*\nD//STEP001 EXEC PROC=TSO,REGION=18M,TIME=1400\nD//     INCLUDE MEMBER=DSNTEP2L\nD//SYSIN     DD DISP=SHR,DSN=DB2.&DB2SSID..SQLLIB(COUNTVWS)\nD//*\nD//\nN\nNI slipped in a SET statement to control which DB2 subsystem this job\nNuses. I slipped in a JCLLIB statement to control where PROCs and\nNINCLUDE members are pulled from.\nN\nNI used three INCLUDE statements.  The first\nNpulls in my statically defined SET statements for the system this gets\nNconverted on. The second pulls in any DB2 subsystem specific SYMBOLs I\nNneed. The third pulls in a standard set of TSO related commands to run\nNthe IBM DB2 'SAMPLE' dynamic SQL program, DSNTEP2, using a parm of\nNALIGN=LHS. By changing the second INCLUDE, SETDB2A to SETDB2B, I easily\nNpick up the correct datasets and control cards for the production\nNsubsystem. So what is in all of those members?\nN\nNMember IEASYM00 might look like this:\nD//*\nD//* PSEUDO SYSTEM SYMBOLICS FOR BATCH JOBS ON SYSK\nD//*\nD//SYSPLEX  SET SYSPLEX=PLEXEGLS\nD//SYSNAME  SET SYSNAME=SYSK\nD//SYSCLONE SET SYSCLONE=KT\nD//OWNNODE  SET OWNNODE=JSNODEKT\nD//*\nN\nN\nMMember SETDB2A might look like this:\nD//*\nD//* JOB SYMBOLICS FOR DB2 SUBSYSTEM DB2A - Development\nD//*\nD//         SET DB2VER=V9R1M0\nD//         SET DB2RSU=0706\nD//         SET DB2OUT='D'\nN\nNMember SETDB2B might look like this:\nD//*\nD//* JOB SYMBOLICS FOR DB2 SUBSYSTEM DB2B - Production\nD//*\nD//         SET DB2VER=V8R1M0\nD//         SET DB2RSU=0612\nD//         SET DB2OUT='P'\nN\nNMember DB2LINK might look like this:\nD//DB2LINK   DD DISP=SHR,DSN=DB2.&DB2SSID..&DB2VER..RSU&DB2RSU..SDSNEXIT\nD//          DD DISP=SHR,DSN=DB2.&DB2SSID..&DB2VER..RSU&DB2RSU..SDSNLOAD\nN\nNMember DB2RUNL might look like this:\nD//DB2RUNL   DD DISP=SHR,DSN=DB2.&DB2SSID..&DB2VER..RUNLIB.LOAD\nN\nNMember DSNTEP2L might look like this:\nD//SYSTSIN   DD DISP=SHR,DSN=DB2.&DB2SSID..PARMLIB(DSN)\nD//          DD DISP=SHR,DSN=DB2.&DB2SSID..PARMLIB(DSNTEP2L)\nD//          DD DISP=SHR,DSN=DB2.&DB2SSID..PARMLIB(END)\nD//          DD DISP=SHR,DSN=DB2.&DB2SSID..PARMLIB(LOGOFF)\nD//SYSPRINT  DD SYSOUT=&DB2OUT,DEST=&SYSPLEX..PRINTER\nN\nNIn my UNIVERSE I do not put the version and RSU in a dataset name.\nNInstead, I use cloning to deploy my changes. But I do prefer using\nN&DB2SSID in all datasets related to a subsystem so I can make that\nNone change to the first SET statement and ensure all other\nNreferences. I never have a job fail because the DSN command set\nNthe development subsystem ID while the datasets referenced the\nNproduction datasets. That means my DB2LINK and DB2RUNL look like this:\nN\nNMember DB2LINK might look like this:\nD//DB2LINK   DD DISP=SHR,DSN=DB2.&DB2SSID..SDSNEXIT\nD//          DD DISP=SHR,DSN=DB2.&DB2SSID..SDSNLOAD\nN\nNMember DB2RUNL might look like this:\nD//DB2RUNL   DD DISP=SHR,DSN=DB2.&DB2SSID..RUNLIB.LOAD\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR19": {"ttr": 35845, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x04\\x006\\x006\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:04:34", "lines": 54, "newlines": 54, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR19\nKPROCLIB\nTz/OS JCL Reference -JCLLIB Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJCLLIB Statement\nN================\nNUse the JCLLIB statement to:\nN\nN->Identify the names of the private libraries that the system uses\nN  for the job. The system searches the libraries for:\nN\nN  ->Procedures named on any EXEC statements\nN\nN  ->Groups of JCL statements (called INCLUDE groups) named on any\nN    INCLUDE statements.\nN\nN->Identify the names of the system procedure libraries and\nN  installation-defined procedure libraries that the system uses for\nN  the job.\nN\nN->Identify the order in which the libraries are to be searched. The\nN  system searches the libraries in the order in which you specify\nN  them on the JCLLIB statement, prior to searching any unspecified\nN  default system procedure libraries.\nN\nNThe JCLLIB statement allows you to code and use procedures and INCLUDE\nNgroups in a private library without the need to use system procedure\nNlibraries.\nN\nNYou can code only one JCLLIB statement per job.\nN\nNConsiderations for an APPC Scheduling Environment\nN-------------------------------------------------\nNIn an APPC environment, see the information about scheduler JCL for\nNITP profiles in z/OS MVS Planning: APPC/MVS Management.\nI\nIConsiderations for JES3\nI-----------------------\nIIn a JES3 environment, the system on which the job is submitted\nIand/or converted must have access to any libraries named on the\nIJCLLIB statement.\nN\nD//\u00ddid\u00a8  JCLLIB ORDER=(library\u00dd,library\u00a8...) \u00ddcomments\u00a8\nN\nNThe JCLLIB statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (JCLLIB), keyword parameter (ORDER), and comments.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR1901": {"ttr": 35847, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x04\\x003\\x003\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:04:34", "lines": 51, "newlines": 51, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR1901\nTz/OS JCL Reference\nT-JCLLIB Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJCLLIB Statement\nN================\nNUse the JCLLIB statement to:\nN->Identify the names of the private libraries that the system uses for\nN  the job. The system searches the libraries for:\nN\nN  ->Procedures named on any EXEC statements\nN  ->Groups of JCL statements (called INCLUDE groups) named on any\nN    INCLUDE statements.\nN\nN->Identify the names of the system procedure libraries and\nN  installation-defined procedure libraries that the system uses for\nN  the job.\nN\nN->Identify the order in which the libraries are to be searched. The\nN  system searches the libraries in the order in which you specify\nN  them on the JCLLIB statement, prior to searching any unspecified\nN  default system procedure libraries.\nN\nNThe JCLLIB statement allows you to code and use procedures and INCLUDE\nNgroups in a private library without the need to use system procedure\nNlibraries.\nI\nIThere are some JCL syntax checking products that fail to use them.\nI\nD//      JCLLIB ORDER=(library\u00dd,library\u00a8...) \u00ddcomments\u00a8\nI                 Up to 15 library names may be identified.\nN\nNPrecedes the PROCLIB concatenation defined at your installation.\nN\nD//*\nD//PROCS JCLLIB ORDER=(SHARE.MVSSCPU.CNTL,&SYSUID..SAMPUTIL.CNTL)\nD//*\nD//PROCS JCLLIB ORDER=(SHARE.MVSSCPU.CNTL,\nD//             &SYSUID..SAMPUTIL.CNTL)\nN\nD//*\nD//PROCS JCLLIB ORDER=(ANYAPP.PROCLIB)\nN\nD//*\nD//PROCS  JCLLIB ORDER=(&SYSUID..JCL.PROCLIB)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR20": {"ttr": 35849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x04\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:04:34", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR20\nTz/OS JCL Reference -JOB Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJob Statement\nN=============\nNUse the JOB statement to mark the beginning of a job and to\nNtell the system how to process the job. Also, when jobs are\nNstacked in the input stream, the JOB statement marks the end\nNof the preceding job.\nN\nD//\u00ddjobname\u00a8 JOB positional-parameters\u00dd...\nD//              ,keyword-parameter\u00a8... \u00ddcomments\u00a8\nN\nNThe JOB statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (JOB),\nN->parameter (POSITIONAL AND KEYWORD), and\nN->comments.\nI\nIDo not code comments if the parameter field is blank.\nI\nIA JOB statement is required for each job.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2000": {"ttr": 35851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00S\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00g\\x00g\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:53", "lines": 103, "newlines": 103, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2000\nTz/OS JCL Reference\nT-JOB Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170553\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNUse the JOB statement to mark the beginning of a job and to tell the\nN system how to process the job. Also, when jobs are stacked in the\nNinput stream, the JOB statement marks the end of the preceding job.\nN\nI\nD//jobname JOB positional-parameters\u00dd,keyword-parameter\u00a8... \u00ddcomments\u00a8\nN\nNPositional parameters\nN---------------------\nD//jobname  JOB (pano,room,time,lines,cards,forms,copies,log,linect),'programmer\nI                  OR\nD//             (\u00ddaccount-number\u00a8\u00dd,accounting-information\u00a8...),'programmers name\nN\nNKeyword Parameters\nN------------------\nD//             ADDRSPC=VIRT,\nD//             ADDRSPC=REAL,\nD//             BYTES=(######),\nD//             BYTES=(######,CANCEL),\nD//             BYTES=(######,DUMP),\nD//             BYTES=(######,WARNING),\nD//             CARDS=(######),\nD//             CARDS=(######,CANCEL),\nD//             CARDS=(######,DUMP),\nD//             CARDS=(######,WARNING),\nD//             CCSID=#####,  1-65535\nD//             CLASS=x,      JOB CLASS\nI =>  Class for JES2 selection criteria\nD//             COND=((CODE,OPERATOR),(CODE,OPERATOR)),\nI                      <= CODE 0 - 4095\nI                      <= OPERATOR gt, ge, eq, lt, lt, ne\nD//             GROUP=XXXXXXXX, RACF GROUP\nD//             JESLOG=SPIN,\nD//             JESLOG=NOSPIN,\nD//             JESLOG=SUPPRESS,\nD//             LINES=(######),\nD//             LINES=(######,CANCEL),\nD//             LINES=(######,DUMP),\nD//             LINES=(######,WARNING),\nD//             MEMLIMIT=NOLIMIT,\nD//             MEMLIMIT=#####x\nI                  <= X = M, G, T, P\nD//             MSGCLASS=X,\nI =>  Output class for unspecified SYSOUT= statements.\nD//             MSGLEVEL=(1,1),\nI =>  MSGLEVEL Defaults to (1,1) or as installation defined.\nI     I tried an invalid combination and the system will\nI     default it to the installation's default values. Check\nI     JES2PARM on your system. Coded as (statements,messages)\nI     (statements,\nI      0 = Print jobcard, comments, and JECL up to the first EXEC\nI      1 = All JCL, JES2 or JES3 control statements, procedure\nI          statements, and IEF653I messages.\nI      2 = JCL and JES2 or JES3 control statements.\nI     messages)\nI      ,0 = Only JCL messages.\nI      ,1 = JCL, JES, operator, and SMS messages.\nD//             NOTIFY=&SYSUID\nI =>  NOTIFY either a valid userid, garbage to clog up\nI     SYS1.BRODCAST, or &SYSUID, the default, to notify whoever\nI     submitted the job.\nD//             PAGES=(######),\nD//             PAGES=(######,CANCEL),\nD//             PAGES=(######,DUMP),\nD//             PAGES=(######,WARNING),\nD//             PASSWORD=(OLD,NEW),\nD//             PERFORM=###, Obsolete with WLM\nD//             PRTY=##,     0 - 15\nD//             RD=R,        RESTART, CHECKPOINTS ALLOWED\nD//             RD=RNC,      RESTART, NO CHECKPOINTS ALLOWED\nD//             RD=NR,       NO RESTART, CHECKPOINTS ALLOWED\nD//             RD=NC,       NO RESTART, NO CHECKPOINTS ALLOWED\nD//             REGION=#######k,  IN KILOBYTES\nD//             REGION=####M,     IN MEGABYTES\nD//             RESTART(STEPNAME,PROCSTEPNAME,CHECKPOINTID),\nD//             SECLABEL=,\nD//             SCHENV=,\nD//             TIME=1440,          = Forever or until you IPL\nD//             TIME=NOLIMIT,       = Less confusing way to say forever\nD//             TIME=MAXIMUM,       = 357,912 minutes\nD//             TIME=(MMMMMM,SS),\nI =>  Minutes = 1 - 357912       (5,965 hours 12 minutes or\nI                                 248 days 13 hours 12 minutes)\nI     Seconds = 1 - 59\nI\nD//             TYPRUN=COPY,   Copies to sysout\nD//             TYPRUN=JCLHOLD,   Hold before JCL processing\nI =>                              Before PROC expansion\nD//             TYPRUN=HOLD,   MAKE SOMEONE RELEASE IT\nD//             TYPRUN=SCAN,   JUST SIMPLE SYNTAX CHECKING\nD//             USER=whobeu\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2001": {"ttr": 35853, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00/\\x00/\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:54", "lines": 47, "newlines": 47, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2001\nTz/OS JCL Reference\nT-JOB Statement -Accounting Information Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNAccounting Information Parameter\nN--------------------------------\nNUse the accounting information parameter to enter an account number\nNand any other accounting information that your installation requires.\nI\nIThe entire accounting information parameter must not\nIexceed 143 characters (what is between (). No individual piece\nIcan exceed 127 characters. See Example A below.\nI\nIIf you code the accounting information parameter in the JES2 format,\nIJES2 can interpret and use it.\nN\nD//jobname  JOB (\u00ddaccount-number\u00a8\u00dd,accounting-information\u00a8...)\nI                 account-number: up to 127 characters.\nI                 accounting-information: 143-length(account-number).\nI  OR the JES format:\nD//jobname  JOB (pano,room,time,lines,cards,forms,copies,log,linect)\nI =>            (1-4c,1-4c,1-4#,1-4K ,1-4K ,1-4c ,   255,  N, 0-255)\nN\nMKenneth Tomiak remark:\nM\nNExample A: 12 accounts and JES format.\nN--------------------------------------\nNIn testing the limits I discovered that JES will interpret and use\nNvalues with predictable and undesired results. If you use more than\nNone account number then you will want to enclose them inside one set\nNof apostrophes ('). If you do not then JES will take a positional view\nNof the sub-parameters and a numeric account aligning with a numeric\nNsub-paramter will be accepted for that value.\nN\nD//jobname  JOB ('12345678,12345678,12345678,12345678,12345678,12345678,+\nD//             12345678,12345678,12345678,12345678,12345678,12345',\nD//             ROOM,0030,9999,0000,FCB6,001,Y,060), <=JES2 format\nD//*\nD//ST01#06 EXEC PGM=IEFBR14\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2002": {"ttr": 35855, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00.\\x00.\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:54", "lines": 46, "newlines": 46, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2002\nTz/OS JCL Reference\nT-JOB Statement -Programmer's Name Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNProgrammer's Name Parameter\nN---------------------------\nNUse the programmer's name parameter to identify the person or group\nNresponsible for a job.\nN\nD//jobname  JOB ,programmers-name\nI                 programmers-name: Identifies the job's owner. The\nI                 name must not exceed 20 characters, including all\nI                 special characters.\nD//*\nD//ST01#06 EXEC PGM=IEFBR14\nM\nMKenneth Tomiak remark:\nMFollow your installation standards. There are other alternatives to\nMidentifying the owning user or group, as well as different ways to\nMidentify the owner.\nN\nNExamples: A few alternate ways of filling programmer-name.\nN----------------------------------------------------------\nNSee the comment following each programmer-name style.\nN//jobname  JOB ,kenneth.tomiak         <= No spaces nor special chars\nN//jobname  JOB ,12345678901234567890   <= Full 20 chars no spaces\nN//jobname  JOB ,'    HELLO WORLD     ' <= Full 20 chars\nN//jobname  JOB ,'Kenneth Tomiak'       <= Spaces\nN//jobname  JOB ,'KTomiak x:1324'       <= Internal mail name and phone\nN//jobname  JOB ,'(666)666-6666 Ken'    <= External phone and first name\nN//jobname  JOB ,'Pre-payroll validate' <= Purpose of job\nN//jobname  JOB ,'Payroll job 04 of 07' <= Function and where in system\nN//jobname  JOB ,'AZ-Snowflake-Box-456' <= Shipping directions\nN//jobname  JOB ('acct',room),CLASS=A   <= Null programmer-name\nN\nIWhere there is no installation standard and no exit using the\nIvalue then feel free to make it meaningful to whoever might view\nIit. That could be just you from SDSF/IOF/CA-View.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2010": {"ttr": 35857, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:54", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2010\nKEXEC\nTz/OS JCL Reference\nT-JOB Statement -ADDRSPC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNADDRSPC Parameter\nN-----------------\nNUse the ADDRSPC parameter to indicate to the system that the job\nN step requires virtual storage (which is pageable) or central\nNstorage (also called real storage, which is nonpageable).\nN\nD//             ADDRSPC=VIRT | REAL\nI                 VIRT: Requests virtual storage. The system can\nI                       page the job step.\nI                       The default and why this Parameter is\nI                       rarely coded.\nI                 REAL: Requests central storage (also called real\nI                       storage). The system cannot page the job\nI                       step and must place the job step in central\nI                       storage.\nM\nMKenneth Tomiak remark:\nMYou have no reason to code this. So DON'T!\nN\nD//jobname  JOB ,ADDRSPC=VIRT\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2011": {"ttr": 36097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:54", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2011\nKEXEC OUTPUT PRINT SYSOUT OUTLIM\nTz/OS JCL Reference\nT-JOB Statement -BYTES Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNBYTES Parameter\nN---------------\nNUse the BYTES parameter to:\nN\nN->Indicate the maximum amount of output, in thousands of bytes, to be\nN  printed for this job's sysout data sets.\nN\nN->Specify the action that the system is to take if the maximum is\nN  exceeded. You can indicate that the job is to be cancelled with or\nN  without a dump, or that the job is to continue and the system is to\nN  notify the operator that the maximum was exceeded.\nN\nD//             BYTES={nnnnnn\u00dd,CANCEL| DUMP | WARNING\u00a8}\nI                 nnnnnn: Indicates the maximum amount of output to be\nI                         printed for this job, in thousands of bytes.\nI                         An nnnnnn value of 500 represents\nI                         500,000 bytes.\nI                         The value for nnnnnn is 0 through 999999.\nI                 CANCEL:  with no dump.\nI                 DUMP:    CANCEL with a dump.\nI                 WARNING: Allow to continue and repeat warning at the\nI                          installation-defined interval.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2012": {"ttr": 36099, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:55", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2012\nKEXEC OUTPUT PUNCH SYSOUT OUTLIM\nTz/OS JCL Reference\nT-JOB Statement -CARDS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNCARDS Parameter\nN---------------\nNUse the CARDS parameter to:\nN\nN->Indicate the maximum amount of output, in thousands of CARDS, to be\nN  punched for this job's sysout data sets.\nN\nN->Specify the action that the system is to take if the maximum is\nN  exceeded. You can indicate that the job is to be cancelled with or\nN  without a dump, or that the job is to continue and the system is to\nN  notify the operator that the maximum was exceeded.\nN\nD//             CARDS={nnnnnnnn\u00dd,CANCEL| DUMP | WARNING\u00a8}\nI                 nnnnnnnn: Indicates the maximum amount of output to be\nI                           punched for this job, in thousands of CARDS.\nI                           An nnnnnn value of 500 represents\nI                           500,000 CARDS.\nI                           The value for nnnnnn is 0 through 99999999.\nM                           JES3 allows only 6500000.\nI                 CANCEL:   with no dump.\nI                 DUMP:     CANCEL with a dump.\nI                 WARNING:  Allow to continue and repeat warning at the\nI                           installation-defined interval.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2013": {"ttr": 36101, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:55", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2013\nKEXEC DD\nTz/OS JCL Reference\nT-JOB Statement -CCSID Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNCCSID Parameter\nN---------------\nNYou can request the access method to convert data between the coded\nNcharacter set identifier (CCSID) specified on the JOB or EXEC\nNstatement and the CCSID specified on the DD statement. Data conversion\nN is supported on access to ISO/ANSI Version 4 tapes using access\nNmethods BSAM or QSAM, but not using EXCP.\nN\nD//jobname  JOB ,CCSID=ccsid\nI                 ccsid: A decimal number from 1 to 65535.\nI                     -> If no CCSID parameter is specified on the JOB\nI                        statement, the default is 500.\nI                     -> The CCSID value of 65535 has a special\nI                        meaning: it suppresses conversion.\nN\nNExamples: See JCLR1217\nM\nMKenneth Tomiak remark:\nMIf you are producing tapes with non-standard CCSID values then\nMyou should code the CCSID on the DD Statement to ensure the\nMtape label contains the value.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2014": {"ttr": 36103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:55", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2014\nTz/OS JCL Reference\nT-JOB Statement -CLASS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNCLASS Parameter\nN---------------\nNUse the CLASS parameter to assign the job to a class. The class you\nNshould request depends on the characteristics of the job and your\nNinstallation's rules for assigning classes.\nN\nN\nD//jobname  JOB ,CLASS=jobclass\nI                 jobclass: Identifies the class for the job. The\nI                           jobclass is one character, A through Z or 0\nI                           through 9, and must be a valid class\nI                           specified at JES initialization.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2015": {"ttr": 36105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00f\\x00f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:56", "lines": 102, "newlines": 102, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2015\nTz/OS JCL Reference\nT-JOB Statement -COND Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNCOND Parameter\nN--------------\nNUse the COND parameter to specify the return code tests the system\nNuses to determine whether a job will continue processing. Before and\nNafter each job step is executed, the system performs the COND\nNparameter tests against the return codes from completed job steps.\nNIf none of these tests is satisfied, the system executes the job\nNstep; if any test is satisfied, the system bypasses all remaining\nNjob steps and terminates the job.\nN\nNThe tests are made against return codes from the current execution\nNof the job. A step bypassed because of an EXEC statement COND\nNparameter does not produce a return code.\nN\nD//             COND= ((code,operator\u00dd,stepname\u00a8\u00dd.procstepname\u00a8),\nD//                   EVEN | ONLY\nD//*            COND=              <=== PLEASE USE IF...THEN/ELSE/ENDIF\nI                 Specify up to eight return code tests.\nI                 code: Specifies a number that the system compares to\nI                       the return codes from all previous steps in\nI                       the job or from specific steps. code is a\nI                       decimal number from 0 through 4095.\nI                 operator: Specifies the type of comparison to be made\nI                           to the return code. If the specified test\nI                           is true, the step is bypassed.\nI                           GT Greater than\nI                           GE Greater than or equal to\nI                           EQ Equal to\nI                           LT Less than\nI                           LE Less than or equal to\nI                           NE Not equal to\nI                 stepname: Identifies the EXEC statement of a previous\nI                           job step that issues the return code to be\nI                           used in the test.\nM                        -> LIMITS THE TEST TO A SPECIFIC STEP.\nI                        -> If you omit stepname, the code you specify\nI                           is compared to the return codes from all\nI                           previous steps.\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM-JCL) strongly\nMencourages you to forsake the use of the COND Parameter for other\nMthan EVEN and ONLY. The code,operator format will have you thinking\nMhow to bypass this step. The IF...THEN/ELSE/ENDIF Statement construct\nMwill have you thinking WHEN to execute this step. And that is how\nMEVEN and ONLY function.\nN\nNCertain error conditions prevent the system from executing a step,\nNregardless of any requests specified through the COND parameter.\nN\nNExample 1: Plan for success.\nN----------------------------\nNA properly designed system does not continue if errors occur.\nNThus the only example I give is to halt for any non-zero\nNreturn code. I do concede a final step might be worthy of\nNABEND=ONLY if it alerts someone to the failure.\nN\nD//jobname  JOB COND=(0,NE)\nI\nIThis example is great for showing how to get yourself into trouble.\nIIBM programs typically return 0 for success and an increasing\nImultiple of 4 as the severity increases. Thus the above example\nIis coded to skip the step if the previous step worked when what\nIyou more likely wanted was to skip this step if the prior step\nIwas unhappy.\nI\nIJOB scheduling tools are written with the belief that success\nIis better than failure. Extra handling is required to allow\nIa non-zero return code to continue. Thus trying to run a step\nIwhen the previous step failed is counter-intuitive.\nI\nIFor what is worth: Job scheduling tools are also not happy with\nIthe IF...THEN/ELSE/ENDIF Statement construct. You may find yourself\nIhaving to remove all uses of COND= and IF...THEN/ELSE/ENDIF\nIbefore promoting TEST JCL to production. For that reason a\nI//jobname JOB COND=(0,NE) might be your next best friend.\nN\nD//KTOMIAK1 JOB (666,FB3,KTOMIAK,60,9999,0,0,1,Y,60),\nD//             'KENNETH E TOMIAK',\nD//             CLASS=A,MSGCLASS=X,TIME=1440,\nD//             COND=(0,NE),\nD//             REGION=32M,NOTIFY=&SYSUID.\nD//*\nD//ST01#03 EXEC PGM=IEFBR14\nD//ST02#03 EXEC PGM=S806\nD//ST03#03 EXEC PGM=IEFBR14\nD//ALERT   EXEC PGM=IEFBR14,COND=ONLY\nD//*\nD//* End of Job JCLR2015.\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2016": {"ttr": 36107, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:56", "lines": 28, "newlines": 28, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2016\nTz/OS JCL Reference\nT-JOB Statement -GROUP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNGROUP Parameter\nN---------------\nNUse the GROUP parameter to specify a RACF-defined group to which a\nNRACF-defined user is to be connected. RACF places each RACF-defined\nNuser in a default group; the GROUP parameter is needed only to specify\nN a group other than a user's default group.\nN\nIUseful when list-of-group processing is not quite doing what you need.\nN\nD//jobname  JOB ,GROUP=group\nI                 group-name: Identifies the group with which the\nI                             system is to associate the user.\nI                             group-name is 1 through 8 alphanumeric\nI                             or national ($, #, @) characters. The first\nI                             character must be alphabetic or\nI                             national ($, #, @).\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2017": {"ttr": 36109, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:56", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2017\nTz/OS JCL Reference\nT-JOB Statement -JESLOG Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNJESLOG Parameter\nN----------------\nNUse the JESLOG parameter to indicate whether the JESLOG data set\nNshould be spin-eligible and if it should be automatically spun at\nNa particular time or time interval. JESLOG has meaning when the\nNsubsystem is a version of JES2 or JES3 that supports this function.\nN\nN\nD//jobname  JOB ,JESLOG={SPIN{,{time} | {lines}} | {NOSPIN} | {SUPPRESS}\nI                 SPIN: JESLOG is spin-eligible. If you specify SPIN\nI                       without the optional second operand, the\nI                       JESLOG data sets can be spun at any time during\nI                       job execution when a JES-specific operator\nI                       command is issued.\nI                   time: 'hh:mm' exact time or '+hh:mm' interval.\nI                 NOSPIN: JESLOG will not be spun.\nI                 SUPPRESS: JESLOG will be suppressed.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2018": {"ttr": 36111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\\x94\\x00\\x94\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:56", "lines": 148, "newlines": 148, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2018\nTz/OS JCL Reference\nT-JOB Statement -JOBRC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNJOBRC Parameter\nN---------------\nNUse the JOBRC parameter to control how the job completion code\nN(presented by JES2 or JES3) is set. By default (when JOBRC is not\nNspecified), the job completion code is set to the highest return\nNcode of any step, or if the job's execution fails because of an\nNABEND, the job completion code is set to the last ABEND code; however,\nNthis parameter can be used to request that the job completion code\nNbe set to the return code of the last executed step or a particular\nNstep that more accurately reflects the success or failure of the job.\nN\nD//jobname  JOB ,JOBRC={MAXRC} | {LASTRC} | {(STEP,step\u00dd.procstep\u00a8}\nI                 MAXRC: The job completion code is set to the highest\nI                        return code of any step in the job, or if the\nI                        completion of the job fails because of an\nI                        ABEND, the job completion code is set to the\nI                        last ABEND code; This is the default parameter.\nI                 LASTRC: The job completion code is set to the return\nI                         code or ABEND code of the last step that is\nI                         executed in the job.\nI                 (STEP,stepname\u00dd.procstepname\u00a8): The job completion\nI                        code is set to the return code or ABEND code\nI                        of the step that is indicated by the\nI                        stepname.\u00dd.procstepname\u00a8 parameter. If this\nI                        step does not exist, a JCL error is generated.\nI                        If this step does not execute, the processing\nI                        is the same as if MAXRC is specified.\nN\nNExample A: Without JOBRC.\nN-------------------------\nNThe IF...THEN/ELSE/ENDIF Statement construct allows the third\nNstep to execute.\nI     $HASP165 KTOMIAKA ENDED AT SVSCJES2  MAXCC=0012\nN\nD//KTOMIAKA JOB ,CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.\nD//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).\nD//SYSIN     DD DUMMY\nD//SYSUT1    DD *\nD..some data..\nD/*\nD//SYSUT2    DD SYSOUT=*\nD//IF1       IF (ST02#03.RC <= 12) THEN\nD//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//IF1    ENDIF\nM\nM-STEPNAME PROCSTEP    RC   EXCP   CONN\nM-ST01#03              00      1      0\nMIEC130I SYSPRINT DD STATEMENT MISSING\nM-ST02#03              12      5      1\nM-ST03#03              00      2      0\nM-KTOMIAKA ENDED.  NAME-\nM$HASP395 KTOMIAKA ENDED - RC=0012\nN\nNExample B: Asking for the default: MAXRC.\nN-----------------------------------------\nNThe IF...THEN/ELSE/ENDIF Statement construct allows the third\nNstep to execute. The noticeable difference comes in using NOTIFY.\nI     $HASP165 KTOMIAKB ENDED AT SVSCJES2 - MAXRC=0012\nI     MAXRC instead of MAXCC.\nN\nD//KTOMIAKB JOB ,JOBRC=MAXRC,\nD//             CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.\nD//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).\nD//SYSIN     DD DUMMY\nD//SYSUT1    DD *\nD..some data..\nD/*\nD//SYSUT2    DD SYSOUT=*\nD//IF1       IF (ST02#03.RC <= 12) THEN\nD//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//IF1    ENDIF\nM\nM-STEPNAME PROCSTEP    RC   EXCP   CONN\nM-ST01#03              00      1      0\nMIEC130I SYSPRINT DD STATEMENT MISSING\nM-ST02#03              12      5      1\nM-ST03#03              00      2      0\nM-KTOMIAKB ENDED.  NAME-\nM$HASP395 KTOMIAKB ENDED - RC=0012\nN\nNExample C: Use the last executed step RC.\nN-----------------------------------------\nNThe IF...THEN/ELSE/ENDIF Statement construct allows the third\nNstep to execute. That will determine the JOB level RC.\nI     $HASP165 KTOMIAKC ENDED AT SVSCJES2 - JOBRC=0000\nI     JOBRC instead of MAXCC or MAXRC.\nN\nD//KTOMIAKC JOB ,JOBRC=LASTRC,\nD//             CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.\nD//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).\nD//SYSIN     DD DUMMY\nD//SYSUT1    DD *\nD..some data..\nD/*\nD//SYSUT2    DD SYSOUT=*\nD//IF1       IF (ST02#03.RC <= 12) THEN\nD//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//IF1    ENDIF\nM\nM-STEPNAME PROCSTEP    RC   EXCP   CONN\nM-ST01#03              00      1      0\nMIEC130I SYSPRINT DD STATEMENT MISSING\nM-ST02#03              12      5      0\nM-ST03#03              00      2      0\nM-KTOMIAKC ENDED.  NAME-\nM$HASP395 KTOMIAKC ENDED - RC=0000\nN\nNExample D: ST01#03 determines the JOB level RC.\nN-----------------------------------------------\nNThe IF...THEN/ELSE/ENDIF Statement construct allows the third\nNstep to execute. How step ST01#03 ends is what counts.\nI     $HASP165 KTOMIAKD ENDED AT SVSCJES2 - JOBRC=0000\nN\nD//KTOMIAKD JOB ,JOBRC=(STEP,ST01#03),\nD//             CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.\nD//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).\nD//SYSIN     DD DUMMY\nD//SYSUT1    DD *\nD..some data..\nD/*\nD//SYSUT2    DD SYSOUT=*\nD//IF1       IF (ST02#03.RC <= 12) THEN\nD//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).\nD//IF1    ENDIF\nM\nM-STEPNAME PROCSTEP    RC   EXCP   CONN\nM-ST01#03              00      1      0\nMIEC130I SYSPRINT DD STATEMENT MISSING\nM-ST02#03              12      5      0\nM-ST03#03              00      2      0\nM-KTOMIAKD ENDED.  NAME-\nM$HASP395 KTOMIAKD ENDED - RC=0000\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2019": {"ttr": 36113, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:57", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2019\nKEXEC OUTPUT PUNCH SYSOUT OUTLIM\nTz/OS JCL Reference\nT-JOB Statement -LINES Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNLINES Parameter\nN---------------\nNUse the LINES parameter to:\nN\nN->Indicate the maximum amount of output, in thousands of LINES, to be\nN  punched for this job's sysout data sets.\nN\nN->Specify the action that the system is to take if the maximum is\nN  exceeded. You can indicate that the job is to be cancelled with or\nN  without a dump, or that the job is to continue and the system is to\nN  notify the operator that the maximum was exceeded.\nN\nD//             LINES={nnnnnn\u00dd,CANCEL| DUMP | WARNING\u00a8}\nI                 nnnnnn: Indicates the maximum amount of output to be\nI                         punched for this job, in thousands of LINES.\nI                         An nnnnnn value of 500 represents\nI                         500,000 LINES.\nI                 CANCEL:  with no dump.\nI                 DUMP:    CANCEL with a dump.\nI                 WARNING: Allow to continue and repeat warning at the\nI                          installation-defined interval.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2020": {"ttr": 36115, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:57", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2020\nTz/OS JCL Reference\nT-JOB Statement -MEMLIMIT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNMEMLIMIT Parameter\nN------------------\nNUse the MEMLIMIT parameter to specify the limit on the total size\nN of usable virtual storage above the bar in a single address space.\nN\nMAnother Parameter you are unlikely to use.\nN\nD//jobname  JOB ,MEMLIMIT=nnnnn M | G | T | P | NOLIMIT\nI                 nnnnn: limit on the total size of usable virtual\nI                        storage above the bar can be used.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2021": {"ttr": 36117, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:57", "lines": 30, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2021\nTz/OS JCL Reference\nT-JOB Statement -MSGCLASS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNMSGCLASS Parameter\nN------------------\nNUse the MSGCLASS parameter to assign the job log to an output class.\nNThe job log is a record of job-related information for the\nNprogrammer. Depending on the JOB statement MSGLEVEL parameter, the\nNjob log can consist of:\nN\nN->Only the JOB statement.\nN->All job control statements.\nN->In-stream and cataloged procedure statements.\nN->Job control statement messages.\nN->JES and operator messages about the job.\nN\nD//jobname  JOB ,MSGCLASS=class\nI                 class: Identifies the output class for the job log.\nI                        The class is one character, A through Z or\nI                        0 through 9, and must be a valid output class\nI                        specified at JES initialization.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2022": {"ttr": 36353, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00B\\x00B\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:57", "lines": 66, "newlines": 66, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2022\nTz/OS JCL Reference\nT-JOB Statement -MSGLEVEL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNMSGLEVEL Parameter\nN------------------\nNUse the MSGLEVEL parameter to control the listing of the JCL output\nNfor the job. You can request that the system print the following:\nN\nN->The JOB statement and all comments and JECL statements up to the\nN  first EXEC statement.\nN\nN->All job control statements in the input stream, that is, all JCL\nN  statements and JES2 or JES3 statements.\nN\nN->In-stream and cataloged procedure statements for any procedure a\nN  job step calls.\nN\nN->Messages about job control statements.\nN\nN->JES and operator messages about the job's processing: allocation of\nN  devices and volumes, execution and termination of job steps and the\nN  job, and disposition of data sets.\nN\nD//jobname  JOB ,MSGLEVEL=(\u00ddstatements\u00a8\u00dd,messages\u00a8)\nI                 statements: Indicates which job control statements\nI                             the system is to print in the statement\nI                             images portion of the JCL output. This\nI                             subparameter is one of the following\nI                             numbers:\nI                             0 The system prints the JOB statement\nI                               and all comments and JECL statements up\nI                               to the first EXEC statement.\nI                             1 The system prints all JCL statements,\nI                               JES2 or JES3 control statements, the\nI                               procedure statements, and IEF653I\nI                               messages, which give the values assigned\nI                               to symbolic parameters in the procedure\nI                               statements.\nI                             2 The system prints only JCL statements\nI                               and JES2 or JES3 control statements.\nI                 messages:   Indicates which messages the system is to\nI                             print in the system messages portion of\nI                             the JCL output. This subparameter is one\nI                             of the following numbers:\nI                             0 The system prints only JCL messages. It\nI                               prints JES and operator messages only\nI                               if the job abnormally terminates, and\nI                               prints SMS messages only if SMS fails\nI                               the job.\nI                             1 The system prints JCL, JES, operator,\nI                               and SMS messages.\nN\nNExample A: Get it all.\nN----------------------\nNYou might as well ask for all you can.\nN\nD//jobname  JOB ,MSGLEVEL=(1,1)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2023": {"ttr": 36355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:58", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2023\nTz/OS JCL Reference\nT-JOB Statement -NOTIFY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNNOTIFY Parameter\nN----------------\nNUse the NOTIFY parameter to request that the system send a message\nNto a user when this background job completes processing.\nN\nD//jobname  JOB ,NOTIFY={(,{nodename.}userid)}\nI                 userid: Identifies the user that the system is to\nI                         notify. The userid is 1 through 7 alphanumeric\nI                         or national ($, #, @) characters. The first\nI                         character must be an alphabetic or\nI                         national ($, #, @) character. When you specify\nI                         only a userid, JES2 assumes that the userid is\nI                         at the origin node.\nN\nNExample A: Notify yourself.\nN---------------------------\nNUse this only on programmer submitted jobs. The BRODCAST data set\nNdoes not need to store up a bunch of messages that are never\nNviewed from production jobs.\nN\nD//jobname  JOB ,NOTIFY=&SYSUID.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2024": {"ttr": 36357, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:58", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2024\nKEXEC OUTPUT PRINT SYSOUT OUTLIM\nTz/OS JCL Reference\nT-JOB Statement -PAGES Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNPAGES Parameter\nN---------------\nNUse the PAGES parameter to:\nN\nN->Indicate the maximum amount of output, in PAGES, to be\nN  printed for this job's sysout data sets.\nN\nN->Specify the action that the system is to take if the maximum is\nN  exceeded. You can indicate that the job is to be cancelled with or\nN  without a dump, or that the job is to continue and the system is to\nN  notify the operator that the maximum was exceeded.\nN\nD//             PAGES={nnnnnnnn\u00dd,CANCEL| DUMP | WARNING\u00a8}\nI                 nnnnnnnn: Indicates the maximum amount of output to be\nI                           printed for this job, in thousands of PAGES.\nI                           An nnnnnn value of 500 represents\nI                           500,000 PAGES.\nI                           The value for nnnnnn is 0 through 999999.\nI                 CANCEL:   with no dump.\nI                 DUMP:     CANCEL with a dump.\nI                 WARNING:  Allow to continue and repeat warning at the\nI                           installation-defined interval.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2025": {"ttr": 36359, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00)\\x00)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:58", "lines": 41, "newlines": 41, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2025\nTz/OS JCL Reference\nT-JOB Statement -PASSWORD Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNPASSWORD Parameter\nN------------------\nNUse the PASSWORD parameter to identify a current RACF password or\nNspecify a new RACF password. You can specify a new password at any\nNtime and must specify a new password when your current one expires.\nN\nNIf the installation contains the installation exit routine used to\nNverify the password, a new password specified in the PASSWORD parameter\nNtakes effect when the job is read in. The new password takes effect\nNeven if the job is held for execution later and may take effect even if\nNthe job fails because of JCL errors. When changing the password, other\nNjobs that use the new or old password may fail, depending on when their\nNpasswords are verified.\nN\nD//jobname  JOB ,PASSWORD=(password\u00dd,new-password\u00a8)\nI                  password: Specifies the user's current RACF password.\nI                            The password is 1 through 8 alphanumeric or\nI                            national ($, #, @) characters.\nI                  new-password: Specifies the user's new RACF password.\nI                            The new-password is 1 through 8\nI                            alphanumeric or national ($, #, @)\nI                            characters. The installation's security\nI                            administrator can impose additional\nI                            restrictions on passwords; follow your\nI                            installation's rules.\nI\nI                            Note: The system suppresses the value you\nI                            code for password and new-password from\nI                            the JESJCL and JESJCLIN data sets.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2026": {"ttr": 36361, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:58", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2026\nTz/OS JCL Reference\nT-JOB Statement -PERFORM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nI\nIImportant\nI=========\nIBeginning with z/OS V1R3, WLM compatibility mode is no longer\nIavailable. Accordingly, the information below that pertains\nIspecifically to WLM compatibility mode is no longer valid. It has been\nIleft here for reference purposes, and for use on backlevel systems.\nN\nNJOB Statement\nN=============\nNPERFORM Parameter\nN------------------\nNUse the PERFORM parameter in WLM compatibility mode to specify the\nNperformance group for the job. The installation-defined performance\nNgroups determine the rate at which associated jobs have access to\nNthe processor, storage, and channels.\nN\nD//jobname  JOB ,PERFORM=n\nI                  n: In WLM compatibility mode, requests a performance\nI                     group. The n is a number from 1 through 999 and\nI                     must identify a performance group that has been\nI                     defined by your installation. The specified\nI                     performance group should be appropriate for your\nI                     job type according to your installation's rules.\nI\nI                     In WLM goal mode, n can be used to classify the\nI                     Job or started task to a service class and/or\nI                     report class.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2027": {"ttr": 36363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:59", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2027\nTz/OS JCL Reference\nT-JOB Statement -PRTY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNPRTY Parameter\nN--------------\nNUse the PRTY parameter to assign a selection priority to your job.\nNWithin a JES2 job class or a JES3 job class group, the system selects\nNjobs for execution in order by priority. A job with a higher priority\nNis selected for execution sooner; jobs with the same priority are\nNselected on a first-in first-out basis.\nN\nNNote: Depending on the JES2 initialization options in use at your\nNinstallation, JES2 may ignore the PRTY parameter.\nN\nIYou should probably not use this. Tattle on anyone that does!\nI\nD//jobname  JOB ,PRTY=nn\nI                  nn: Requests a priority for the job. The priority\nI                      is a number from 0 through 15 for JES2 and\nI                      from 0 through 14 for JES3.\nI                      The highest priority is 15 or 14.\nI\nI                      Follow your installation's rules in coding a\nI                      priority.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2028": {"ttr": 36365, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00G\\x00G\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:59", "lines": 71, "newlines": 71, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2028\nKRESTART CHECKPOINT\nTz/OS JCL Reference\nT-JOB Statement -RD Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNRD Parameter\nN------------\nNUse the RD (restart definition) parameter to:\nN\nN->Specify that the system is to allow the operator the option of\nN  performing automatic step or checkpoint restart if a job step\nN  abends with a restartable abend code.\nI  See the SCHEDxx parmlib member description in z/OS MVS\nI  Initialization and Tuning Guide for information about\nI  restartable abends.\nN\nN->Allow JES to perform automatic step restart after a system failure\nN  even if the journal option is not specified in the JES\nN  initialization parameters or JES control statements.\nN\nN->Suppress, partially or totally, the action of the assembler language\nN  CHKPT macro instruction or the DD statement CHKPT parameter.\nN\nD//             RD=R | RNC | NR | NC\nI                  R  (Restart, Checkpoints Allowed)\nI                     Indicates that the operator can perform automatic\nI                     step restart if the job step fails.\nI                  RNC (Restart, No Checkpoints)\nI                     Indicates that the operator can perform automatic\nI                     step restart if the job step fails.\nI                  NR (No Automatic Restart, Checkpoints Allowed)\nI                     Indicates that the operator cannot perform\nI                     automatic step restart if the job fails.\nI                  NC (No Automatic Restart, No Checkpoints)\nI                     Indicates that the operator cannot perform\nI                     Automatic step restart if the job step fails.\nN\nNExample 1: Operator can perform automatic step restart.\nN-------------------------------------------------------\nNRD=R specifies that the operator can perform automatic step restart if\nNthe job fails.\nN\nD//jobname  JOB ,RD=R\nN\nNExample 2: Allow restart beginning with the step that abnormally\nNterminates.\nN----------------------------------------------------------------\nNRD=RNC specifies that, if the job fails, the operator can perform\nNautomatic step restart beginning with the step that abnormally\nNterminates.\nN\nIRD=RNC suppresses automatic and deferred checkpoint restarts.\nN\nD//jobname  JOB RD=RNC\nN\nNExample 3: Restart NOT allowed.\nN-------------------------------\nNRD=NR specifies that the operator cannot perform automatic step\nNrestart or automatic checkpoint restart. However, a CHKPT macro\nNinstruction can establish checkpoints to be used later for a\nNdeferred restart.\nN\nD//jobname  JOB ,RD=NR\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2029": {"ttr": 36367, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:59", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2029\nTz/OS JCL Reference\nT-JOB Statement -REGION Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNREGION Parameter\nN----------------\nNUse the REGION parameter to specify the amount of central or virtual\nNstorage that the step requires.\nN\nD//             REGION=rrrr K | M If < 16M then within Private\nD//             REGION=4M,  < 16M needs to fit in private below-the-line\nD//             REGION=18M  > 16M gets all below the line + some above\nD//             REGION=0M,  = 0M gets everything .... unless\nI\nITwo installation exits, IEFUSI and IEALIMIT, can also affect the size\nIof the user address space assigned to the job step.\nN\nNExample A: JAVA is greedy.\nN--------------------------\nNIt is pretty common to find running JAVA requires a large\nNREGION size.\nN\nD//jobname JOB ,REGION=768M\nM\nMKenneth Tomiak remark:\nMThe current trend of coding REGION=0M is a sign of sloppy\nMcoding. I have witnessed a z/OS System Programmer adding ever more\nMPAGE data sets to support the increased number of greedy jobs\nMexecuting concurrently, but not needing the amount of storage that\nMgets set aside should it use it and need to be paged out.\nI\nIBenchmark your steps and use a courteous value.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2030": {"ttr": 36369, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x05\\x00T\\x00T\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:05:59", "lines": 84, "newlines": 84, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2030\nTz/OS JCL Reference\nT-JOB Statement -RESTART Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNRESTART Parameter\nN-----------------\nNUse the RESTART parameter to indicate the step, procedure step, or\nNcheckpoint at which the system is to restart a job. You can specify\nNthat the system perform either of two restarts:\nN\nN->Deferred step restart, which is a restart at the beginning of a\nN  job step.\nN\nN->Deferred checkpoint restart, which is a restart from a checkpoint\nN  taken during step execution by a CHKPT macro instruction.\nN\nN\nD//jobname  JOB ,RESTART=({* | {stepname.procstepname},{checkid})\nI                 *: Indicates that the system is to restart execution\nI                    (1) at the beginning of or within the first job\nI                    step or (2), if the first job step calls a\nI                    cataloged or in-stream procedure, at the beginning\nI                    of or within the first procedure step.\nI                 step.procstep: Indicates that the system is to restart\nI                    execution at the beginning of or within a step of a\nI                    cataloged procedure. Stepname identifies the EXEC\nI                    statement of the job step that calls the procedure;\nI                    procstepname identifies the EXEC statement of the\nI                    procedure step. The step identified by procstepname\nI                    must contain the PGM keyword rather than invoke a\nI                    procedure.\nI                 checkid: Specifies the name of the checkpoint at which\nI                          the system is to restart execution. This\nI                    checkpoint must be in the job step specified in the\nI                    first subparameter.\nM\nMWhen the system is to restart execution in a job step, place a\nMSYSCHK DD statement immediately following the JOB statement.\nMThe SYSCHK DD statement defines the data set on which the system\nMentered the checkpoint for the step being restarted.\nM\nMNote that the stepname and procstepname specified to identify the\nM\nMReview all EXEC statement COND parameters.\nM\nMReview all IF/THEN/ELSE/ENDIF structures.\nMrestart step must be unique within the job.\nM\nMChange any DISP= Parameters.\nM\nMCheck all backward references to steps before the restart step.\nM\nMRefer to a generation data set by its present relative generation\nMnumber.\nN\nNExample B2: Restart in the second step from CHKPT3.\nN---------------------------------------------------\nNThe JOB statement indicates that the system is to restart execution\nNat checkpoint CHKPT3 in job step ST02#05.\nN\nNThe SYSCHK DD statement must follow the JOB statement; it defines\nNthe data set on which the system wrote checkpoint CHKPT3.\nN\nD//jobname  JOB ,RESTART=(ST02#05,CHKPT3)\nD//SYSCHK    DD DISP=OLD,DSN=CHK\nD//ST01#05 EXEC PGM=...\nD//ddname    DD ...\nD//ST02#05 EXEC PGM=...\nD//ddname    DD ...\nD//ST03#05 EXEC PGM=...\nD//ddname    DD ...\nD//ST04#05 EXEC PGM=...\nD//ddname    DD ...\nD//ST05#05 EXEC PGM=...\nD//ddname    DD ...\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2031": {"ttr": 36371, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2031\nTz/OS JCL Reference\nT-JOB Statement -SECLABEL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNSECLABEL Parameter\nN------------------\nNUse the SECLABEL parameter to specify the security level at which the\nNjob is to execute when submitted to the system. The security label\nNrepresents a security level and categories as defined to RACF. You must\nNhave sufficient authority, granted by the security administrator at\nNyour installation, to run the job with the security label you specify.\nN\nN\nD//jobname  JOB ,SECLABEL=seclabel-name\nI                  seclabel-name: Specifies the name of a security label\nI                  defined by the security administrator at your\nI                  installation. The seclabel-name is one through eight\nI                  alphanumeric or national ($, #, @) characters. The\nI                  first character must be alphabetic, $, #, or @.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2032": {"ttr": 36373, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2032\nTz/OS JCL Reference\nT-JOB Statement -SCHENV Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNSCHENV Parameter\nN------------------\nNUse the SCHENV parameter to specify the name of the Workload Manager\nN(WLM) scheduling environment to associate with this job. A scheduling\nNenvironment is a list of resources and their required settings. By\nNassociating a scheduling environment name with a job, you ensure that\nNthe job will be scheduled for execution only on a system that satisfies\nNthose resource state requirements.\nN\nD//jobname  JOB ,SCHENV=schenv-name\nI                  schenv-name: installation defined.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2033": {"ttr": 36609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2033\nTz/OS JCL Reference\nT-JOB Statement -TIME Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNTIME Parameter\nN--------------\nNUse the TIME parameter to specify the maximum amount of time that a\nNjob may use the processor or to find out through messages how much\nNprocessor time a job used.\nN\nNThe system terminates a job that exceeds the specified time limit\nNunless an installation exit routine at exit IEFUTL extends the time.\nNExit routine IEFUTL is established through\nNSystem Management Facilities (SMF).\nN\nD//             TIME=(mm,ss) | 1440 | NOLIMIT | 0 | MAXIMUM\nI                 mm = 0 THROUGH 357912 (248.55 DAYS)\nI                 ss = 0 through 59.\nM\nMKenneth Tomiak remark:\nMThis parameter gets abused when programs are not load tested and\nMa realistic value supplied. All is well until some condition trips\nMand the program begins looping and consuming most of the CPU\nMresources.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2034": {"ttr": 36611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:00", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2034\nKHOLD SCAN\nTz/OS JCL Reference\nT-JOB Statement -TYPRUN Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNTYPRUN Parameter\nN----------------\nNUse the TYPRUN parameter to request special job processing. The TYPRUN\nNparameter can tell the system to:\nN\nN->In a JES2 system, copy the input job stream directly to a sysout data\nN  set and schedule it for output processing.\nN\nN->In a JES2 or JES3 system, place a job on hold until a special event\nN  occurs. When the event occurs, the operator, following your\nN  directions, must release the job from its hold to allow the system to\nN  select the job for processing. Use the JES2 /*MESSAGE statement or\nN  the JES3 //*OPERATOR statement to notify the operator to release\nN  the job.\nN\nN->In a JES2 or JES3 system, scan a job's JCL for syntax errors.\nN\nD//jobname  JOB ,TYPRUN={COPY} | {HOLD} | {JCLHOLD} | {SCAN}\nI                 COPY:    Requests that JES2 copy the input job stream,\nI                          as submitted, directly to a sysout data set\nI                          and schedule the sysout data set for output\nI                          processing. The system does not schedule the\nI                          job for execution. The class of this sysout\nI                          data set is the same as the message class of\nI                          the job and is controlled by the JOB MSGCLASS\nI                          parameter.\nI                 HOLD:    Requests that the system hold the job before\nI                          execution until the operator releases it. The\nI                          operator should release the job when a\nI                          particular event occurs. If an error occurs\nI                          during input service processing, JES does not\nI                          hold the job.\nI                 JCLHOLD: Requests that JES2 hold the job before\nI                          completing JCL processing. JES2 holds the job\nI                          until the operator releases it.\nM                          This might let you promote a PROC before you\nM                          release the JOB.\nI                 SCAN:    Requests that the system scan this job's JCL\nI                          for syntax errors, without executing the job\nI                          or allocating devices.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2035": {"ttr": 36613, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:01", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2035\nTz/OS JCL Reference\nT-JOB Statement -USER Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJOB Statement\nN=============\nNUSER Parameter\nN--------------\nNCode the USER parameter to identify to the system the person submitting\nNthe job. The userid is used by RACF, the system resources manager\nN(SRM), and other system components.\nN\nN\nD//jobname  JOB ,USER=userid\nI                 userid: Identifies a user to the system. The userid\nI                         consists of 1 through 8 alphanumeric or\nI                         national ($, #, @) characters; the first\nI                         character must be alphabetic or\nI                         national ($, #, @).\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2090": {"ttr": 36615, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13o\\x01\\x18\\x13\\x7f\\x17\\x06\\x00H\\x00F\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-16T00:00:00", "modifydate": "2018-05-17T17:06:01", "lines": 72, "newlines": 70, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2090\nKJOBCARD\nTz/OS JCL Reference\nT-JOB statement: PUTKTM\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180516-210323\n*\n@Kenneth Tomiak\n*\nNz/OS JCL Reference\nN------------------\nB: SA22-7597-16: z/OS JCL Reference\nNJOB statement: PUTKTM\nN---------------------\nN\nD//!sysuser!J JOB (!acct!,!group!,!sysuser!,60,9999,0,,1,,60),\nD//             '!programmer-name!',\nD//             CLASS=A,\nD//             MSGCLASS=X,\nD//             NOTIFY=&SYSUID.,\nD//             REGION=32M,\nD//*             RESTART=STxx#yy,           <-- Uncomment if you use it.\nD//             TIME=1440\nD//*\nI/*JOBPARM SYSAFF=*                    <=Which JES2 MAS Member to run on\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//*\nD//* Dataset: !datasetid!(!memberid!)\nD//* Setup  : 1) ...\nD//* Purpose: This job will ...\nD//*\nD//* -------------------------------------------------------------------\nD//*\nD//* History of Modifications\nD//* ========================\nD//* vv.mm When     Who / What you did ... (Newest change at the top.)\nD//* ----- -------- ----------------------------------------------------\nD//* 01.00 ........ !sysuser!\nD//*                1) Original base code.\nD//* ----- -------- ----------------------------------------------------\nD//*\nD//* -------------------------------------------------------------------\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//*\nD//PROCS JCLLIB ORDER=(!sysuser!.JES.PROCLIB)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Description of the first step goes here.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nN//ST01#01 EXEC PGM=IEFBR14\nN//SYSPRINT  DD SYSOUT=*\nN\nN Website: !company-url!\nN\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//* End of Job !memberid!.\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//\n*\nx!acct! = logon_acct\nx!datasetid! = editdsn\nx!group! = saf_dfltgrp\nx!memberid! = editmbr\nx!mvsname! = mvsvar_sysname\nx!programmer-name! = saf_name\nx!sysuser! = sysvar_sysuid\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR21": {"ttr": 36617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00\\x13\\x00\\x13\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:01", "lines": 19, "newlines": 19, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR21\nKEOJ END-OF-JOB\nTz/OS JCL Reference -Null Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNNull Statement\nN==============\nNUse the null statement to mark the end of a job.\nN\nD//\nN\nNThe null statement consists of the characters // in columns 1 and 2.\nI\nIColumns 3 through 72 must be blank.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2101": {"ttr": 36619, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:01", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2101\nKEOJ E-O-J\nTz/OS JCL Reference\nT-NULL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNNULL Statement\nN==============\nNPlace a null statement (1) at the end of a job's control statements\nNand data and (2) at the end of an input stream.\nN\nD//\nM\nMKenneth Tomiak remark:\nMItems 1 and 2 above should be one and the same.\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM) calls for\nMsingle objects in PDS members.\nM\nN\nNA throwback to when JCL and data was actually punched on a card. This\nNsignalled when the end of a job was reached and the system could start\nNprocessing it. Eventually the system could tell the end of one job\nNwhen it saw another jobcard. Then when terminals came into vogue,\nNsubmitting from TSO and ISPF will read until the end of file, which\nNsignals the end of a job. So, it is no longer required, wastes disk\nNspace, but lets you keep JCL in the same member which is not processed.\nN\nNOh yeah, instead of deleting those last steps, just insert an EOJ\nNafter the last statement you want as part of the job, then submit.\nNVoila`, the remaining JCL is not submitted and you still have it!\nN\nNAnd oh by the way, one day you will get burnt by having an extra JOB\nNStatement and wind up submitting a job you did not mean to. Stick\nNthat extra crud somewhere else. Control cards are easily moved under\nNa separate and unused DD Statement.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR22": {"ttr": 36621, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x01\\x0c\\x01\\x0c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:02", "lines": 268, "newlines": 268, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR22\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNUse the OUTPUT JCL statement to specify processing options for a\nNsystem output (sysout) data set. These processing options are used\nNonly when the OUTPUT JCL statement is explicitly or implicitly\nNreferenced by a sysout DD statement. JES combines the options from\nNthis OUTPUT JCL statement with the options from the referencing\nNDD statement.\nM\nMYou are advised to steer clear of using 60 characters. But if\nMyou feel you need to, choices are:\nM->Try to keep the first field short enough to not use continuation\nM  and abandon aligning subseqent repeating Parameter values.\nM->Use a single character Symbol name for up to 55 characters.\nM->Be true to alignment and use the comma subparameter break to use\nM  a new line. See how USPSADD2 breaks before USPSADD3.\nN\nD//name  OUTPUT parameter\u00dd,parameter\u00a8... \u00ddcomments\u00a8\nI                 parameter: The OUTPUT JCL statement contains only\nI                            keyword parameters. All parameters are\nI                            optional; however, do not leave the\nI                            parameter field blank. You can code any\nI                            of the keyword parameters in any order\nI                            in the parameter field.\nM\nM                 Coding parameters in an alphabetic sequence\nM                 makes it easier on humans to spot them.\nM\nM                 And yet there are some that might be treated in\nM                 an object-oriented fashion. For example:\nM                   ->BUILDING/DEPT/ADDRESS.\nM                   ->CHARS, FORMDEF, and PAGEDEF.\nM                   ->MAIL* AND REPLYTO.\nM\nM                 You might even use multiple OUTPUT Statements and\nM                 join them on the DD Statement.\nI\nI               ADDRESS=(,'delivery address')\nI                 delivery address : 1 to 4 up to 60 chars\nI               AFPPARMS=datasetname\nI               AFPSTATS={Y | YES | N | NO}\nI               BUILDING='Up to 60 characters'\nI               BURST={Y | YES | N | NO}\nI               CHARS={,font-name} | std\nI               CKPTLINE=nnnnn : 0 - 32,767\nI               CKPTPAGE=nnnnn : 1 - 32,767\nI               CKPTSEC=nnnnn : 1 - 32,767\nI               CLASS={* | installation defined output class}\nI               COLORMAP=resource\nI               COMPACT=compaction-font-name\nI               COMSETUP=resource\nI               CONTROL={PROGRAM | SINGLE | DOUBLE | TRIPLE }\nI               COPIES={nnn | (,(group-value) }\nI               COPYCNT=nnnnnnnnnn : 0 - 2147483647\nI               DATACK={BLOCK | UNBLOCK | BLKCHAR | BLKPOS }\nI               DEFAULT={Y | YES | N | NO}\nI               DEPT='Up to 60 characters'\nI               DEST=cccccccc : Any of the valid formats\nI               DPAGELBL={Y | YES | N | NO}\nI               DUPLEX={NO | N | NORMAL | TUMBLE}\nI               FCB={fcb-name | STD}\nI               FLASH={(overlay-name\u00dd,count\u00a8)} | NONE | STD\nI               FORMDEF=formdef-member-name\nI               FORMLEN=nn\u00dd.mmm\u00a8{IN|CM}\nI               FORMS={form-name | STD}\nI               FSSDATA=value : 1-127 EBCDIC characters\nI               GROUPID=output-group : 1 - 8 alphanumeric characters\nI               INDEX=nn : 1 - 31\nI               INTRAY=nnn : 1 - 255\nI               JESDS={ALL | JCL | LOG | MSG}\nI               LINDEX=nn : 1 - 31\nI               LINECT=nnn : 0 - 255\nI               MAILBCC=(\u00dd,'bcc address'\u00a8) : 1 to 32 up to 60 chars\nI               MAILCC=(\u00dd,'cc address'\u00a8) : 1 to 32 up to 60 chars\nI               MAILFILE='file-id' : names an attachment file\nI               MAILFROM='from-address' : up to 60 chars\nI               MAILTO=(\u00dd,'to address'\u00a8) : 1 to 32 up to 60 chars\nI               MODIFY=(\u00ddmodule-name\u00a8\u00dd,trc\u00a8)\nI               NAME='preferred name' : up to 60 chars\nI               NOTIFY=user-name : receives msg when printed\nI               OFFSETXB=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI               OFFSETXF=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI               OFFSETYB=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI               OFFSETYF=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI               OUTBIN=nnnnn : 1 - 65535\nI               OUTDISP=\u00ddnormal-output-disposition,abnormal-output-disposition\u00a8\nI                        disposition: WRITE, HOLD, KEEP, LEAVE, or PURGE.\nI               OVERLAYB=name\nI               OVERLAYF=name\nI               OVFL={ON | OFF}\nI               PAGEDEF=pagedef-member-name\nI               PIMSG=({YES | NO},count)\nI               PORTNO=nnnnn : 1 - 65535 (Infoprint Server)\nI               PRMODE={LINE | PAGE | user-defined-mode}\nI               PRTATTRS='attributename value'\nI               PRTERROR={DEFAULT | QUIT | HOLD}\nI               PRTOPTNS='options data set entry name'\nI               PRTQUEUE='print queue name'\nI               PRTY=nnn : 0 - 255 (0 is lowest, 255 is highest)\nI               REPLYTO='replyto-address' : up to 60 chars\nI               RESFMT={P240 | P300}\nI               RETAINS={'<hhhh>:<mm>:<ss>' | FOREVER}\nI               RETAINF={'<hhhh>:<mm>:<ss>' | FOREVER}\nI               RETRYL=nnnnn : 1 to 99999\nI               RETRYT='<hhhh>:<mm>:<ss>'\nI               ROOM='room-identification' : up to 60 chars\nI               SYSAREA={Y | YES | N | NO}\nI               THRESHLD=limit : 1 - 99999999\nI               TITLE='description of output' : up to 60 chars\nI               TRC={Y | YES | N | NO}\nI               UCS=cccc : character-set-code\nI               USERDATA=(,'userdata') : 1 to 16 up to 60 chars\nI               USERLIB=(,dataset-name) : 1 to 8\nI               USERPATH=(,path-name) : 1 to 8\nI               WRITER=name\nN\nNExample A: Toughing it out to use 60 Character fields.\nN------------------------------------------------------\nN\nN\nD//*\nD//* Symbols not using all 60 characters:\nD//* ------------------------------------\nD// SET USPSADD1='''Kenneth Tomiak'''\nD// SET USPSADD2='''PO BOX 1535'''\nD// SET USPSADD3='''BUNNELL FL 32110-1535'''\nD// SET USPSADD4=''''''\nD// SET SHIPBLDG='''BUILDING 100'''\nD// SET SHIPDEPT='''DATA PROCESSING DEPARTMENT (DPD-666)'''\nD// SET SHIPNAME='''Kenneth Tomiak'''\nD// SET SHIPROOM='''ROOM 666'''\nD// SET MAILBC01='''you-will-not-see-i-got-this@ktomiak.org'''\nD// SET MAILBC02='''this-spam-will-fail@not-a-domain-that-i-know.biz'''\nD// SET MAILCC01='''spam-mail@ktomiak.org'''\nD// SET MAILFROM='''Your name should go here'''\nD// SET MAILRPLY='''your-email-address@should_go.here'''\nD// SET MAILTO01='''recipient-1@their.domain'''\nD// SET MAILTO02='''recipient-2@their.domain'''\nD// SET TITLEOUT='''60 character description of what this output is.'''\nD// SET EXITUD01='''Something your installation can use in an EXIT.'''\nD// SET EXITUD02='''See your Installation Standards for when, why,'''\nD// SET EXITUD03='''and how to use this.'''\nD//*\nD//OUTDS OUTPUT ADDRESS=(&USPSADD1.,&USPSADD2.,\nD//             &USPSADD3.,&USPSADD4.),\nD//*            AFPPARMS=datasetname\nD//             AFPSTATS=Y,\nD//             BUILDING=&SHIPBLDG.,\nD//             BURST=N,\nD//             CHARS=('GT12','GT10'),\nD//*            CKPTLINE=nnnnn : 0 - 32,767\nD//             CKPTPAGE=2,\nD//*            CKPTSEC=nnnnn : 1 - 32,767\nD//             CLASS=T,\nD//*            COLORMAP=resource\nD//*            COMPACT=compaction-font-name\nD//*            COMSETUP=resource\nD//             CONTROL=PROGRAM,\nD//             COPIES=2,\nD//*            COPYCNT=nnnnnnnnnn : 0 - 2147483647\nD//*            DATACK={BLOCK | UNBLOCK | BLKCHAR | BLKPOS }\nD//             DEFAULT=N,\nD//             DEPT=&SHIPDEPT.,\nD//             DEST=KTOMIAK,\nD//*            DPAGELBL={Y | YES | N | NO}\nD//             DUPLEX=N,\nD//             FCB=STD,\nD//*            FLASH={(overlay-name\u00dd,count\u00a8)} | NONE | STD\nD//             FORMDEF=0101LA,\nD//*            FORMLEN=nn\u00dd.mmm\u00a8{IN|CM}\nD//             FORMS=STD,\nD//*            FSSDATA=value : 1-127 EBCDIC characters\nD//*            GROUPID=output-group : 1 - 8 alphanumeric characters\nD//*            INDEX=nn : 1 - 31\nD//             INTRAY=3,\nD//             JESDS=MSG,\nD//*            LINDEX=nn : 1 - 31\nD//*            LINECT=nnn : 0 - 255\nD//             MAILBCC=(&MAILBC01.,&MAILBC02.),\nD//             MAILCC=(&MAILCC01.,&MAILCC02.),\nD//             MAILFILE='KTOMIAK.JCL.CNTL(JCLR22)',\nD//             MAILFROM=&MAILFROM.,\nD//             MAILTO=(&MAILTO01.,&MAILTO02.),\nD//*            MODIFY=(\u00ddmodule-name\u00a8\u00dd,trc\u00a8)\nD//             NAME=&SHIPNAME.,\nD//             NOTIFY=&SYSUID.,\nD//*            OFFSETXB=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nD//*            OFFSETXF=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nD//*            OFFSETYB=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nD//*            OFFSETYF=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nD//             OUTBIN=666,\nD//             OUTDISP=(WRITE,HOLD),\nD//*            OVERLAYB=name\nD//*            OVERLAYF=name\nD//*            OVFL={ON | OFF}\nD//             PAGEDEF=06080,\nD//*            PIMSG=({YES | NO},count)\nD//*            PORTNO=nnnnn : 1 - 65535 (Infoprint Server)\nD//             PRMODE=LINE,\nD//*            PRTATTRS='attributename value'\nD//*            PRTERROR={DEFAULT | QUIT | HOLD}\nD//*            PRTOPTNS='options data set entry name'\nD//             PRTQUEUE=HOLD4KEN,\nD//             PRTY=254,\nD//             REPLYTO=&MAILRPLY.,\nD//*            RESFMT={P240 | P300}\nD//             RETAINS=FOREVER,\nD//             RETAINF='0000:59:12',\nD//*            RETRYL=nnnnn : 1 to 99999\nD//*            RETRYT='<hhhh>:<mm>:<ss>'\nD//             ROOM=&SHIPROOM.,\nD//             SYSAREA=YES,\nD//*            THRESHLD=limit : 1 - 99999999\nD//             TITLE=&TITLEOUT.,\nD//*            TRC={Y | YES | N | NO}\nD//*            UCS=cccc : character-set-code\nD//             USERDATA=(&EXITUD01.,&EXITUD02.,&EXITUD03.),\nD//*            USERLIB=(,dataset-name) : 1 to 8\nD//*            USERPATH=(,path-name) : 1 to 8\nD//             WRITER=LPDW\nD//*\nD//* Symbols using all 60 characters:\nD//* --------------------------------\nD// SET TEXTADD1='''1234567890123456789012345678901234567890123456789012+\nD//             34567890'''\nD// SET TEXTADD2='''Delivery address line 1: a maximum of sixty (60) cha+\nD//             racters.'''\nD// SET TEXTADD3='''There is no perfect way to cleanly pass the string i+\nD//             n JCL.  '''\nD// SET D='''Even using a 1 character Symbol name is 4 too many on a lin+\nD//             e'''\nD//OUTMY OUTPUT ADDRESS=(&TEXTADD1.,&TEXTADD2.,\nD//             &TEXTADD3.,&D.),\nD//             DEST=OTHERADD\nD//NOSYM OUTPUT ADDRESS=(,\nD//     '1234567890 BY SKIPPING THE FIRST LINE I GET THIS: 1234567890',\nD//     '           IT HELPS WITH MAINTAINING IT AND VISUALIZING     ',\nD//     '           THE ALIGNMENT. ODD THAT SYMBOLS ARE FUNKY.   7890'),\nD//             DEST=NOSUBST\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Use IEBGENER to produce some SYSOUT.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#01 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DISP=SHR,DSN=KTOMIAK.JCL.CNTL(JCLR22)\nD//SYSUT2    DD SYSOUT=(,),OUTPUT=(*.OUTDS,*.OUTMY,*.NOSYM)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//* End of Job JCLR22.\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2201": {"ttr": 36623, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:02", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2201\nT\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nI\nNA template for SYSOUT datasets.\nI\nM\nD// OUTPUT\nD//*\nD//OUTDS OUTPUT ADDRESS=('address line 1   ',\nD//             'line 2, these can be',\nD//             'up to 65 characters each'),\nD//             BUILDING='65chr max',\nD//             CHARS=GT12,\nD//             DEFAULT=YES,\nD//             DEPT='SYSTEM PROGRAMMING',\nD//             FORMDEF=0101LA,                 BLANK/LANDSCAPE\nD//             ROOM='13th FLOOR',\nD//             JESDS=ALL,\nD//             NAME='Kenneth Tomiak',\nD//             PAGEDEF=06080,\nD//*            PAGEDEF=06080               BLANK/LANDSCAPE/60LINES/8LPI\nD//*            PAGEDEF=08081               BLANK/PORTRAIT /80LINES/8LPI\nD//             TITLE='*** PRINTOUT FROM A BATCH JOB ***'\nD//*USAGE   DD  SYSOUT=*,OUTPUT=(*.OUTDS)\nM\nI\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2210": {"ttr": 36865, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00T\\x00T\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:02", "lines": 84, "newlines": 84, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2210\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -ADDRESS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNADDRESS Parameter\nN-----------------\nNUse the ADDRESS parameter to print an address on the separator pages\nNof an output data set. An installation can use the address to assist\nNin sysout distribution.\nN\nD//outds OUTPUT ADDRESS=(,'delivery address')\nI                 delivery address: Specifies the delivery address for\nI                   the output data set. You can code up to 4 delivery\nI                   addresses. Each delivery address can be\nI                   1 - 60 EBCDIC text characters.\nN\nNExample 1(m): Four lines (poorly done).\nN---------------------------------------\nNIn this example, the address\nN\nNJ. Plant\nN1234 Main Street\nNPOUGHKEEPSIE, NY\nN12604-6666\nN\nNis printed on the separator pages of each output data set that\nNreferences OUTDS2. You may code a name in the address field when the\nNname associated with an address is not the name you want to associate\nNwith the output (coded on the OUTPUT NAME statement.) The name\nNappears in the address field on the separator pages.\nM\nMKenneth Tomiak remark:\nMI added a nearly correct zipcode+4 from IBM's character string.\nMI did not correct the mixed-case usage.MI did not correct STREET.\nMI removed the apostrophes around the zipcode as done in IBM's\nMExample 2.\nN\nD//OUTDS OUTPUT ADDRESS=('J. Plant','1234 Main Street',\nD//             'POUGHKEEPSIE, NY',12604-6666)\nN\nNExample A: Using standard abbreviations and formatting.\nN-------------------------------------------------------\nNThe United States Poastal Service appreciates when you follow their\nNabbreviation and format style. Use the ZIP Code lookup tool\nNhttps://tools.usps.com/go/ZipLookupAction_input before you code\nNthe ADDRESS Parameter.\nN\nNJ. PLANT\nN1234 MAIN ST RM12\nN3RD FLOOR\nNPOUGHKEEPSIE, NY  12604-6666\nN\nD//OUTDS OUTPUT ADDRESS=('J. PLANT','1234 MAIN ST',\nD//             'POUGHKEEPSIE NY 12604-6666')\nN\nNExample B: Pushing the limits - 1 to 4 up to 60 chars.\nN------------------------------------------------------\nD//OUTDS OUTPUT ADDRESS=('123456789012345678901234567890123456789012345+\nD//             678901234567890','1234567890123456789012345678901234567+\nD//             89012345678901234567890','12345678901234567890123456789+\nD//             0123456789012345678901234567890',1234567890123456789012+\nD//             34567890123456789012345678901234567890')\nN\nNExample C: Using Symbols for clarity and ease of use.\nN-----------------------------------------------------\nNWhile it is unlikely you would have a need to use 60 characters in a\nNline, using Symbols will prove somewhat useful in maintaining the\nNADDRESS Parameter and visualizing the result. See: This lines up below.\nN\nD//         SET FLD00001='''12345678901234567890 This lines up 67890123+\nD//             45678901234567890'''\nD//         SET FLD00002='''12345678901234567890 This lines up 67890123+\nD//             45678901234567890'''\nD//OUTDS OUTPUT ADDRESS=('&FLD00001','&FLD00002.')\nD//SYSPRINT  DD SYSOUT=*,OUTPUT=(*.OUTDS)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2211": {"ttr": 36867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x000\\x000\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:21", "lines": 48, "newlines": 48, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2211\nKSYSOUT AFP PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -AFPPARMS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170621\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNAFPPARMS Parameter\nN------------------\nNUse the AFPPARMS keyword to reference the data set name which specifies\nN the parameter file that contains the parameters and values for the AFP\nNprint distributor feature of PSF. The parameters specified in this\nNparameter file augment parameters specified on the output JCL\nNstatement.\nN\nNThe benfit of something like DEST= being in one PDS member used by many\nNJOBs is changing it in just one place to redirect output.\nN\nD//outds OUTPUT AFPPARMS=datasetname\nI                 DATASETNAME: Specifies the data set name that AFP print\nI                   distributor uses to locate the parameter file.\nN\nNExample A: Tucking OUTPUT Parameters in a data set.\nN---------------------------------------------------\nNThis might be considered a COPYBOOK/INCLUDE method of storing\nNone set of parameters in a PDS member instead of duplicating\nNthem in many JOBs.\nN\nD//OUTDS OUTPUT AFPPARMS='&SYSUID..AFP.PARMS(PSF)'\nD//SYSPRINT  DD  SYSOUT=*,OUTPUT=(*.OUTDS)\nD//* Contents of &SYSUID..AFP.PARMS(PSF) might have:\nDBURST=YES | NO\nDCHARS=(fontname1\u00dd,fontname2\u00a8\u00dd,fontname3\u00a8\u00dd,fontname4\u00a8)\nDCOPIES=(nnn,(groupvalue,groupvalue...))\nDCOPYCNT=(nnnnnnnnnn)\nDDEST=\u00ddnode.\u00a8name | '\u00ddnode.\u00a8IP:ipaddr'\nDFCB=pdefname\nDFLASH=(flashname,\u00ddcount\u00a8) U\nDSEGMENT=page-count\nDSUBSYS=(subsystem_name, printer_definition_name, job_attributes)\nDSYSOUT=(class,,formname) U\nDUCS=fontname\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2212": {"ttr": 36869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x06\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:06:22", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2212\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -AFPSTATS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNAFPSTATS Parameter\nN------------------\nNUse the AFPSTATS keyword on the OUTPUT statement to indicate to the\nNPrint Services Facility (PSF) that an AFP Statistics (AFPSTATS)\nNreport is to be generated while printing this sysout data set.\nN\nD//outds OUTPUT AFPSTATS={NO | N | YES | Y}\nI                 NO: Specifies that PSF should not produce an AFPSTATS\nI                   report for the printing of this sysout data set.\nI                   This parameter may also be coded as N.\nI                   no IS THE DEFAULT.\nI                 YES: Requests that PSF produce an AFPSTATS report for\nI                   the printing of this sysout data set. This\nI                   parameter may also be coded as Y.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2213": {"ttr": 36871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00*\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:05", "lines": 42, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2213\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -BUILDING Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170705\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNBUILDING Parameter\nN------------------\nNUse the BUILDING parameter to print a building identification on the\nNseparator pages of an output data set. An installation can use the\nNbuilding location to assist in sysout distribution.\nN\nD//outds OUTPUT BUILDING='building identification'\nI                 building identification: Specifies the building\nI                   location associated with the output data set.\nI                   The value for building location is 1 - 60 EBCDIC\nI                   text characters.\nM\nMYou will have to use continuation or a pair of heavily aposthrophe\nMladen Symbols. The following line is too long:\nD// BUILDING='123456789012345678901234567890123456789012345678901234567890'\nM\nMUsing column alignment the following uses continuation:\nD//outds OUTPUT BUILDING='123456789012345678901234567890123456789012345+\nD//             678901234567890'\nM\nMThe following Symbols show how many apostrophes you need to\nMuse Symbols. Keep in mind the programming rule of 2 when you want 1.\nD//         SET BLDG1='''123456789012345678901234567890'''\nD//         SET BLDG2='''123456789012345678901234567890'''\nD//outds OUTPUT BUILDING=&BLDG1.&BLDG2.\nM\nMTrying to enclose the Symbols inside apostrophes disables substitution.\nD//OUTDS OUTPUT BUILDING='&BLDG1.&BLDG2.'\nMYields what you see: &BLDG1.&BLDG2., not what you wanted!\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2214": {"ttr": 36873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:05", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2214\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -BURST Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNBURST Parameter\nN---------------\nNUse the BURST parameter to specify that the output for the sysout data\nNset printed on a continuous-forms AFP printer is to go to:\nN\nN->The burster-trimmer-stacker, to be burst into separate sheets.\nN\nN->The continuous forms stacker, to be left in continuous fanfold.\nN\nD//outds OUTPUT BURST={YES | Y | NO | N}\nI                 YES: Requests that the printed output is to be burst\nI                   into separate sheets. This subparameter can also be\nI                   coded as Y.\nI                 NO: Requests that the printed output is to be in a\nI                   continuous fanfold. This subparameter can also be\nI                   coded as N.\nI\nI                 Default: If you do not code a BURST parameter and the\nI                   sysout data set is printed on a 3800 or 3900 that\nI                   has a burster-trimmer-stacker, JES uses an\nI                   installation default specified at initialization.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2215": {"ttr": 36875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:06", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2215\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -CHARS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCHARS Parameter\nN---------------\nNUse the CHARS parameter to specify the name of one or more coded fonts\nN for printing this sysout data set on an AFP printer.\nN\nNNote:\nN->CHARS applies only for a data set that is either printed on an\nN  AFP printer or processed by Infoprint Server.\nN\nN->STD applies only on a JES3 system.\nI\nIReferences:\nIFor more information on coded font names, see:\nI  IBM AFP Fonts: Font Summary for AFP Font Collection\nN\nD//outds OUTPUT CHARS={,font-name} | std\nI                 font-name: Names a coded font or character-arrangement\nI                   table. Each font-name is 1 through 4 alphanumeric\nI                   or national ($, #, @) characters. Code one to\nI                   four names.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2216": {"ttr": 36877, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:06", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2216\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -CKPTLINE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCKPTLINE Parameter\nN------------------\nNUse the CKPTLINE parameter to specify the maximum number of lines in a\nNlogical page. JES uses this value, with the CKPTPAGE parameter, to\nNdetermine when to take checkpoints while printing the sysout data set\nNor transmitting the systems network architecture (SNA) data set.\nN\nD//outds OUTPUT CKPTLINE=nnnnn : 0 - 32,767\nI                 nnnnn: Specifies the maximum number of lines in a\nI                   ogical page. nnnnn is a number from 0 through 32767.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2217": {"ttr": 36879, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:06", "lines": 30, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2217\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -CKPTPAGE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCKPTPAGE Parameter\nN------------------\nNUse the CKPTPAGE parameter to specify the number of logical pages:\nN\nN_>To print before JES takes a checkpoint.\nN\nN->To transmit as a single systems network architecture (SNA) chain\nN  to an SNA work station before JES takes a checkpoint.\nN\nNThe CKPTLINE parameter specifies the number of lines in these logical\nNpages.\nN\nD//outds OUTPUT CKPTPAGE=nnnnn : 1 - 32,767\nI                 nnnnn: Specifies the number of logical pages to print\nI                   or transmit before the next sysout data set\nI                   checkpoint is taken. nnnnn is a number from 1\nI                   through 32,767.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2218": {"ttr": 36881, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:06", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2218\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -CKPTSEC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCKPTSEC Parameter\nN-----------------\nNUse the CKPTSEC parameter to specify how many seconds are to elapse\nNbetween checkpoints of the sysout data set that JES is printing.\nN\nD//outds OUTPUT CKPTSEC=nnnnn : 1 - 32,767\nI                 nnnnn: Specifies the number of seconds that is to\nI                   elapse between checkpoints. nnnnn is a number\nI                   from 1 through 32,767.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2219": {"ttr": 36883, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:07", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2219\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -CLASS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCLASS Parameter\nN---------------\nNUse the CLASS parameter to assign the sysout data set to an\nNoutput class.\nN\nNNote: If a sysout data set has the same class as the JOB statement\nNMSGCLASS parameter, the job log appears on the same output listing\nNas the sysout data set.\nN\nD//outds OUTPUT CLASS={* | null | class}\nI                 *: Requests the output class in the MSGCLASS parameter\nI                   on the JOB statement.\nI                 null: Requests the output class in the MSGCLASS\nI                   parameter on the JOB statement.\nI                 class: Identifies the output class for the data set.\nI                   The class is one character: A through Z or 0\nI                   through 9, which you may optionally include in\nI                   quotation marks. The attributes of each output\nI                   class are defined during JES initialization;\nI                   specify the class with the desired attributes.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2220": {"ttr": 36885, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00*\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:07", "lines": 42, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2220\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -COLORMAP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCOLORMAP Parameter\nN------------------\nNUse COLORMAP to specify the AFP Resource (object) for the data set that\nNcontains color translation information.\nI\nIFor more information see PSF for z/OS: User's Guide.\nN\nD//outds OUTPUT COLORMAP=resource\nI                 resource: Specifies the name of an AFP resource, where\nI                   the resource name is 1 through 8 alphanumeric or\nI                   national ($, #, @) characters and the first\nI                   must be alphabetic or national.\nN\nNCreating Color Mapping Tables\nN=============================\nNYou can create a color mapping table on z/OS with the\nNColor Mapping Tool.\nN\nNColor Mapping Tool Components\nN-----------------------------\nNThis tool is supplied with PSF and includes:\nN->APSRCMT: Load module for the color mapping table;\nN  located in SYS1.LINKLIB\nN\nN->APSRRCMT: Sample JCL to run the Color Mapping Tool;\nN  located in SYS1.SAMPLIB\nN\nN->APSRSCMT: Sample input source file for the color\nN  mapping table; located in SYS1.SAMPLIB\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2221": {"ttr": 36887, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:07", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2221\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -COMPACT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCOMPACT Parameter\nN-----------------\nNUse the COMPACT parameter to specify a compaction table for JES to use\nNwhen sending the sysout data set, which is a systems network\nNarchitecture (SNA) data set, to a SNA remote terminal.\nN\nD//outds OUTPUT COMPACT=compaction-font-name\nI                 compaction-font-name: Specifies a compaction table by\nI                   a symbolic name. The name is 1 through 8\nI                   alphanumeric characters. The symbolic name must be\nI                   defined by the installation during JES\nI                   initialization.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2222": {"ttr": 36889, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:07", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2222\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -COMSETUP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCOMSETUP Parameter\nN------------------\nNUse the COMSETUP parameter to specify the name of a microfile setup\nNresource that contains setup information.\nN\nD//outds OUTPUT COMSETUP=resource\nI                 resource: Specifies the name of a macrofile setup\nI                   resource, where the resource name is 1 through 8\nI                   alphanumeric or national ($, #, @) characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2223": {"ttr": 37121, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:08", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2223\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -CONTROL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCONTROL Parameter\nN-----------------\nNUse the CONTROL parameter to specify either that each logical record\nNstarts with a carriage control character or that the output is to be\nNprinted with single, double, or triple spacing.\nN\nD//outds OUTPUT CONTROL={PROGRAM | SINGLE | DOUBLE | TRIPLE}\nI                 PROGRAM: Indicates that each logical record in the\nI                   data set begins with a carriage control character,\nI                   which must be identified in the DD statement, DCB\nI                   macro, or data set label. You might identify these\nI                   carriage control characters in the DD statement\nI                   through the DCB subparameter in the RECFM of the\nI                   data set as being A (ASA) or M (machine). The\nI                   carriage control characters are given in\nI                   z/OS DFSMS Using Data Sets.\nI                 SINGLE: Indicates forced single spacing.\nI                 DOUBLE:Indicates forced double spacing.\nI                 TRIPLE:Indicates forced triple spacing.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2224": {"ttr": 37123, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00-\\x00-\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:08", "lines": 45, "newlines": 45, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2224\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -COPIES Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCOPIES Parameter\nN----------------\nNUse the COPIES parameter to specify how many copies of the sysout data\nNset to print. The printed output is in page sequence for each copy.\nN\nNFor printing on an AFP printer, this parameter can instead specify how\nNmany copies of each page are to be printed before the next page is\nNprinted.\nN\nD//outds OUTPUT COPIES={nnn | (,(group-value) }\nI                 nnn: A number (1 through 255 in a JES2 system,\nI                   0 through 255 in a JES3 system) that specifies how\nI                   many copies of the sysout data set to print. Each\nI                   copy will be in page sequence order.\nI\nI                   For a data set printed on an AFP printer, JES\nI                   ignores nnn if any group values are specified.\nI\nI                 group-value: Specifies how many copies of each page\nI                   are to be printed before the next page is printed.\nI                   Each group-value is 1 through 3 decimal numbers\nI                   from 1 through 255 in a JES2 system and from 1\nI                   through 254 in a JES3 system. You can code a\nI                   maximum of eight group-values. The total copies of\nI                   each page equals the sum of the group-values.\nI\nI                 Note:\nI                   ->This subparameter is valid only for output\nI                     processed by PSF.\nI                   ->For output printed on an AFP printer, this\nI                     subparameter overrides an nnn subparameter,\nI                     if coded.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2225": {"ttr": 37125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:08", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2225\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -COPYCNT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNCOPYCNT Parameter\nN-----------------\nNThe COPYCNT=xxx keyword supercedes the COPIES=xxx keyword on the output\nNstatement. Use it to define the number of copies of output. Where\nNCOPIES is limited to 255 maximum size, COPYCNT can be 0 - 2147483647\nNin size.\nN\nD//outds OUTPUT COPYCNT=nnnnnnnnnn : 0 - 2147483647\nI                 nnnnnnnnnn: A value from 0 to 2,147,483,647.\nM                   Be very careful what you ask for!\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2226": {"ttr": 37127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00:\\x00:\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:09", "lines": 58, "newlines": 58, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2226\nKSYSOUT PIMSG\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -DATACK Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNDATACK Parameter\nN----------------\nNUse the DATACK parameter to indicate whether or not print-positioning\nNand invalid-character data-check errors are to be blocked or unblocked\nNfor printers accessed through the Print Services Facility (PSF)\nNfunctional subsystem.\nN\nNA print-positioning error occurs when the designated position of any\nNkind of printable information is beyond the limits of either the\nNphysical page, or the overlay or logical page of which it is part.\nN\nNAn invalid-character data-check error occurs when the hexadecimal\nNrepresentation of a text character has no mapping in the code page to\nNa member of the font raster patterns.\nN\nNIf an error type is unblocked, the printer reports the error at the end\nNof the page in which it occurs, and PSF processes the error and\nNgenerates an error message. (See the PIMSG parameter for more\nNinformation on the printing of error messages.)\nN\nNIf an error type is blocked, the printer does not report the error to\nNPSF. Printing continues but data may be lost on the output.\nN\nD//outds OUTPUT DATACK={BLOCK | UNBLOCK | BLKCHAR | BLKPOS}\nI                 BLOCK: Indicates that print-positioning errors and\nI                   invalid-character errors are not reported to PSF.\nI                 UNBLOCK: Indicates that print-positioning errors and\nI                   invalid-character errors are reported to PSF.\nI                 BLKCHAR: Indicates that invalid-character errors are\nI                   blocked, and not reported to PSF. Print-positioning\nI                   errors are reported normally.\nI                 BLKPOS: Indicates that print-positioning errors are\nI                   blocked, and not reported to PSF. Invalid-character\nI                   errors are reported normally.\nN\nNExample 1: Report posiiton errors, block invalid-character errors.\nN------------------------------------------------------------------\nNIn this example, when a print-position error occurs, it is reported to\nNthe user via a printed error message. If an invalid-character error\nNoccurs, it is not reported. In either case, the printing of the data\nNset continues, and all functional subsystem messages are printed.\nN\nD//OUTDS OUTPUT DATACK=BLKCHAR,PIMSG=(YES,0)\nM\nMPIMSG=(YES,0) specifies 0 to print an infinite number of errors.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2227": {"ttr": 37129, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00[\\x00[\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:09", "lines": 91, "newlines": 91, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2227\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -DEFAULT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNDEFAULT Parameter\nN-----------------\nNUse the DEFAULT parameter to specify that this OUTPUT JCL statement\nNcan or cannot be implicitly referenced by a sysout DD statement. An\nNOUTPUT JCL statement that contains a DEFAULT=YES parameter is called\nNa default OUTPUT JCL statement.\nN\nD//outds OUTPUT DEFAULT={Y | YES | N | NO}\nI                 YES: Indicates that this OUTPUT JCL statement can\nI                   be implicitly referenced by sysout DD statements.\nI                   This subparameter can also be coded as Y.\nI                 NO: Indicates that this OUTPUT JCL statement cannot\nI                   be implicitly referenced by sysout DD statements.\nI                   This subparameter can also be coded as N.\nI                   This is the default.\nN\nNExample A: A multitude of OUTPUT JCL Statements.\nN------------------------------------------------\nNThe first JOB level OUTPUT JCL Statement is defined as a default,\nNbut there are no SYSOUTs where it is applied. It is referenced\nNin ST02#02.SYSPRINT.\nN\nNThe next four JOB level OUTPUT JCL Statements show how non-STEP\nNlevel output can be controlled. This might be done to capture\nNoutput for long term retention while leaving it on the SPOOL\nNin the event a problem occurs.\nN\nNST01#02.OUT01 and ST02#02.OUT02 are STEP level non-default.\nN\nD//DFLT  OUTPUT DEFAULT=Y,CLASS='D'\nD//JEALL OUTPUT DEFAULT=Y,CLASS='A',DEST=KENNETH,JESDS=ALL\nD//JEJCL OUTPUT DEFAULT=N,CLASS='B',DEST=AUDITJ,JESDS=JCL\nD//JELOG OUTPUT DEFAULT=N,CLASS='O',DEST=AUDITLM,JESDS=LOG\nD//JEMSG OUTPUT DEFAULT=N,CLASS='O',DEST=AUDITLM,JESDS=MSG\nD//*\nD//ST01#02 EXEC PGM=IEBGENER\nD//OUT01 OUTPUT DEFAULT=N,DEST=EDWARD,CLASS=T\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=(,),OUTPUT=(*.ST01#02.OUT01)\nD//SYSUT1    DD *\nDST01#02\nD/*\nD//SYSUT2    DD SYSOUT=*\nD//*\nD//ST02#02 EXEC PGM=IEBGENER\nD//OUT02 OUTPUT DEST=TOMIAK,CLASS=T\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=(,),OUTPUT=(*.OUT02,*.ST01#02.OUT01,*.DFLT)\nD//SYSUT1    DD *\nDST02#02\nD/*\nD//SYSUT2    DD SYSOUT=Y\nN\nNExecution results:\nN------------------\nNHere you can visualize by Class and Destination how the use of\nNthe OUTPUT JCL Statements and DD Statement OUTPUT Parameter\nNaffected each SYSOUT.\nN\nNDDNAME   StepName ProcStep DsID Owner    C Dest               Rec-Cnt\nN-------- -------- -------- ---- -------- - ------------------ -------\nNJESJCLIN                      1 KTOMIAK  X                         56\nNJESMSGLG JES2                 2 KTOMIAK  O AUDITLM                 19\nNJESMSGLG JES2                 2 KTOMIAK  A KENNETH                 19\nNJESJCL   JES2                 3 KTOMIAK  B AUDITJ                  58\nNJESJCL   JES2                 3 KTOMIAK  A KENNETH                 58\nNJESYSMSG JES2                 4 KTOMIAK  O AUDITLM                 34\nNJESYSMSG JES2                 4 KTOMIAK  A KENNETH                 34\nNSYSUT1   ST01#02            101 KTOMIAK  X                          1\nNSYSPRINT ST01#02            103 KTOMIAK  T EDWARD                   4\nNSYSUT2   ST01#02            104 KTOMIAK  X KENNETH                  1\nNSYSUT2   ST01#02            104 KTOMIAK  X LOCAL                    1\nNSYSUT1   ST02#02            102 KTOMIAK  X                          1\nNSYSPRINT ST02#02            105 KTOMIAK  D LOCAL                    4\nNSYSPRINT ST02#02            105 KTOMIAK  T EDWARD                   4\nNSYSPRINT ST02#02            105 KTOMIAK  T TOMIAK                   4\nNSYSUT2   ST02#02            106 KTOMIAK  Y KENNETH                  1\nNSYSUT2   ST02#02            106 KTOMIAK  Y LOCAL                    1\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2228": {"ttr": 37131, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:09", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2228\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -DEPT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNDEPT Parameter\nN--------------\nNUse the DEPT parameter to print the department identification on the\nNseparator pages of output for a sysout data set. An installation can\nNuse the department identification to assist in sysout distribution.\nN\nD//outds OUTPUT DEPT='department identification'\nI                 department identification: Specifies the department\ni                   identification associated with the sysout. The\nI                   value for department identification is 1 - 60\nI                   EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2229": {"ttr": 37133, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x89\\x00\\x89\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:09", "lines": 137, "newlines": 137, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2229\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -DEST Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNDEST Parameter\nN--------------\nNUse the DEST parameter to specify a destination for the sysout data\nNset. The DEST parameter can send a sysout data set to a remote or\nNlocal terminal, a node, a node and remote work station, a local\nNdevice or group of devices, or a node and userid.\nN\nD//outds OUTPUT DEST=cccccccc\nI                 LOCAL|ANYLOCAL: Indicates any local device.\nI\nI                 'IP:ipaddr' | 'nodename.IP:ipaddr': Identifies a\nI                   TCP/IP routing designation, where ipaddr can be\nI                   any printable character string of from 1 to 124\nI                   characters. The entire parameter list is limited\nI                   to 127 characters, and it must be enclosed in\nI                   single quotation marks.\nI\nI                 name: Identifies a destination by a symbolic name\nI                   (for example, a local device, remote device, or a\nI                   userid) which is defined by the installation during\nI                   JES2 initialization. The name can be, for example,\nI                   a local device, remote device, or a userid. The name\nI                   is 1 through 8 alphanumeric or national ($, #, @)\nI                   characters.\nI\nI                 Nnnnnn: Identifies a node. nnnnn is 1 through 5\nI                   decimal numbers from 1 through 32,767.\nI                   For example, N103.\nI\nI                 NnRmmmmm:\nI                 NnnRmmmm:\nI                 NnnnRmmm:\nI                 NnnnnRmm:\nI                 NnnnnnRm:\nI                   Identifies a node and a remote work station\nI                   connected to the node. The node number, indicated in\nI                   the format by n, is 1 through 5 decimal numbers from\nI                   1 through 32,767. The remote work station number,\nI                   indicated in the format by m, is 1 through 5 decimal\nI                   numbers from 1 through 32,767. Do not code leading\nI                   zeros in n or m. The maximum number of digits for\nI                   n and m combined cannot exceed six.\nI\nI                   Note: R0 is equivalent to LOCAL specified at\nI                         node Nn.\nI\nI                 nodename.userid: Identifies a destination node and a\nI                   VM or a TSO/E userid, a remote workstation, or a\nI                   symbolic name defined at the destination node. The\nI                   nodename is a symbolic name defined at the node of\nI                   execution. nodename is 1 through 8 alphanumeric or\nI                   national ($, #, @) characters. userid is 1 through\nI                   8 alphanumeric or national ($, #, @) characters,\nI                   and must be defined at the specified node.\nI\nI                 Rnnnnn:\nI                 RMnnnnn:\nI                 RMTnnnnn:\nI                   Identifies a remote workstation. nnnnn is 1 through\nI                   5 decimal numbers from 1 through 32,767. Note that\nI                   with remote pooling, the installation may translate\nI                   this route code to another route code.\nI\nI                   If you send a job to execute at a remote node and\nI                   the job has a ROUTE PRINT RMTnnnn statement, JES\nI                   returns the output to RMTnnnn at the node of origin.\nI                   For JES2 to print the output at RMTnnnn at the\nI                   executing node, code DEST=NnnnRmmm on an OUTPUT\nI                   JCL statement or sysout DD statement.\nI\nI                   Note: R0 is equivalent to LOCAL.\nI\nI                 Unnnnn : Identifies a local terminal with special\nI                   routing. nnnnn is 1 through 5 decimal numbers\nI                   from 1 through 32,767.\nI\nI                   If you send a job to execute and the job has a\nI                   ROUTE PRINT Unnnn statement, JES returns the\nI                   output to Unnnn at the node of origin.\nI\nI                 userid: Identifies a userid at the local node.\nI                   Userid for TSO/E is 1 through 7 alphanumeric or\nI                   national ($, #, @) characters. The userid can\nI                   also be a destination name defined in a JES2\nI                   DESTID initialization statement.\nN\nNExample 1: Send SYSOUT to a REMOTE device.\nN------------------------------------------\nNIn this example, JES2 sends the sysout data set to remote terminal 444.\nN\nD//REMOT1 OUTPUT DEST=R444\nN\nNExample 2: Send SYSOUT to a named destination.\nN----------------------------------------------\nNIn this example, JES sends the sysout data set to a named destination.\nNThis might be a remote station or network connected printer serviced\nNby LRS-VPS, IBM InfoPrint Server, or any other vendor product.\nN\nD//REMOT2 OUTPUT DEST=STAT444\nN\nNExample 3: Send SYSOUT to another system's destination.\nN-------------------------------------------------------\nNIn this example, JES sends the sysout data set to node KOKVMBB8 that\nNdelivers it VM userid DP58HHHD.\nN\nD//VMUSR OUTPUT DEST=KOKVMBB8.DP58HHHD\nN\nNExample 4: Send SYSOUT to another system's destination.\nN-------------------------------------------------------\nNIn this example JES2 sends the sysout data set to node NEWYORK, where\nNa functional subsystem that can process IP-distributed data sets\nnsends the data to the bldprt-2 host system/device.\nN\nD//REMOT4 OUTPUT DEST='NEWYORK.IP:bldprt-2'\nN\nNExample 5: Use TCP/IP to route output.\nN--------------------------------------\nNIn this example the functional subsystem sends the sysout data to the\nNhost machine at IP address 9.117.84.53.\nN\nD//REMOT5 OUTPUT DEST='IP:9.117.84.53'\nM\nMKenneth Tomiak remark:\nMYou are advised to use HOST names and not static IP addresses.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2230": {"ttr": 37135, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:10", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2230\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -DPAGELBL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNDPAGELBL Parameter\nN------------------\nNUse the DPAGELBL (data page labelling) parameter to indicate whether\nNthe system should print the security label on each page of printed\nNoutput. The security label represents a security level and\nNcategories as defined to RACF.\nN\nNThe security label that the system prints is determined by the\nNSECLABEL parameter of the JOB statement. If you do not specify\nNSECLABEL on the JOB statement, the security level at which the\nNjob is executing is printed.\nN\nD//outds OUTPUT DPAGELBL={Y | YES | N | NO}\nI                 YES: Requests the system to print the security label\nI                   on each page of printed output. You can also code\nI                   this parameter as Y.\nI                 NO: Requests that the system print no security label\nI                   on each page of printed output. You can also code\nI                   this parameter as N.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2231": {"ttr": 37137, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:10", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2231\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -DUPLEX Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNDUPLEX Parameter\nN----------------\nNUse DUPLEX to specify whether or not printing is to be done on\nNboth sides of the sheet. This overrides what is specified in the\nNFORMDEF in use.\nN\nD//outds OUTPUT DUPLEX={NO | N | NORMAL | TUMBLE}\nI                 NO | N: Specifies to print on one side only.\nI\nI                 NORMAL: Specifies that the physical page is rotated\nI                   about the Y axis. For most page orientations\nI                   (including the default orientation), the Y axis is\nI                   the long edge of the sheet. This allows for binding\nI                   on the long side of the sheet.\nI\nI                 TUMBLE: Specifies that the physical page is rotated\nI                   about the X axis. For most page orientations\nI                   (including the default orientation), the X axis is\nI                   the short edge of the sheet. This allows for\nI                   binding on the short side of the sheet.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2232": {"ttr": 37139, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00A\\x00A\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:10", "lines": 65, "newlines": 65, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2232\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -FCB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNFCB Parameter\nN-------------\nNUse the FCB parameter to specify:\nN\nN->The forms control buffer (FCB) image JES is to use to guide printing\nN  of the sysout data set by a 1403 Printer, 3211 Printer, 3203 Printer\nN  Model 5, 3800 Printing Subsystem, 4245 Printer, or 4248 Printer, or\nN  by a printer supported by systems network architecture (SNA) remote\nN  job entry (RJE).\nN\nN->The page definition member to be used if the data set is line-mode\nN  and is printed on a page-mode printer and you do not code PAGEDEF.\nN\nN->The carriage control tape JES is to use to control printing of the\nN  sysout data set by a 1403 Printer or by a printer supported by\nN  SNA RJE.\nN\nN->The data-protection image JES is to use to control output by a\nN  3525 Card Punch.\nN\nN->The name of a page definition to be used by PSF in formatting a\nN  print data set.\nN\nNThe FCB image specifies how many lines are to be printed per inch and\nNthe length of the form. JES loads the image into the printer's forms\nNcontrol buffer. The FCB image is stored in SYS1.IMAGELIB. IBM\nNprovides three standard FCB images:\nN\nN->STD1, which specifies 6 lines per inch on an 8.5-inch-long form.\nN  (3211 and 3203-5 only)\nN->STD2, which specifies 6 lines per inch on an 11-inch-long form.\nN  (3211 and 3203-5 only)\nN->STD3, which specifies 8 lines per inch on an 11-inch form for a dump.\nN  (3800 only)\nN\nD//outds OUTPUT FCB={fcb-name | STD}\nI                 fcb-name: Identifies the FCB image. The name is 1\nI                   through 4 alphanumeric or national ($, #, @)\nI                   characters and is the last characters of a\nI                   SYS1.IMAGELIB member name:\nI\nI                   ->FCB2xxxx member, for a 3211, a 3203 Model 5,\nI                     or a printer supported by SNA.\nI                   ->FCB3xxxx member, for a 3800.\nI                   ->FCB4xxxx member, for a 4248.\nI\nI                   Identifies a PAGEDEF member in the PSF libraries.\nI\nI                   STD: Indicates the standard FCB. JES3 uses the\nI                     standard FCB specified at JES3 initialization.\nI\nI                     Note: STD is supported only on JES3 systems.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2233": {"ttr": 37377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:10", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2233\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -FLASH Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNFLASH Parameter\nN---------------\nNUse the FLASH parameter to identify the forms overlay to be used in\nNprinting the sysout data set on a 3800 Printing Subsystem and,\nNoptionally, to specify the number of copies on which to print the\nNforms overlay.\nN\nNNote: FLASH applies only for a data set printed on a 3800.\nN\nD//outds OUTPUT FLASH={(overlay-name\u00dd,count\u00a8)} | NONE | STD\nI                 overlay-name: Identifies the forms overlay frame\nI                   that the operator is to insert into the printer\nI                   before printing begins. The name is 1 through 4\nI                   alphanumeric or national ($, #, @) characters.\nI\nI                 count: Specifies the number, 0 through 255, of copies\nI                   that JES is to flash with the overlay, beginning\nI                   with the first copy printed. Code a count of 0 to\nI                   flash no copies.\nI\nI                 NONE: Suppresses flashing for this sysout data set.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2234": {"ttr": 37379, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00.\\x00.\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:11", "lines": 46, "newlines": 46, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2234\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -FORMDEF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNFORMDEF Parameter\nN-----------------\nNUse the FORMDEF parameter to identify a library member that contains\nNstatements to tell the Print Services Facility (PSF) how to print\nNthe sysout data set on a page-mode printer (such as the\nN3800 Printing Subsystem Model 3). The statements can specify the\nNfollowing:\nN\nN->Overlay forms to be used during printing.\nN->Location on the page where overlays are to be placed.\nN->Suppressions that can be activated for specified page formats.\nN\nNThe member must be in the library named in the cataloged procedure\nNthat was used to initialize PSF, or in a library specified in the\nNUSERLIB parameter.\nN\nNNote: FORMDEF applies only for data sets printed on a PSF-managed\nNAFP printer.\nN\nD//outds OUTPUT FORMDEF=formdef-member-name\nI                 membername: Specifies the name of a library member.\nI                   membername is 1 through 6 alphanumeric or\nI                   national ($, #, @) characters; the first two\nI                   characters are pre-defined by the system.\nN\nNForm Definitions Supplied with PSF\nN==================================\nNAppendix A\nN----------\nNThis appendix describes the form definitions that IBM supplies with\nNPSF. The source modules are stored in the SYS1.SAPSPDFD library. You\nNcan use the source code to customize form definitions and page\nNdefinitions for your organization.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2235": {"ttr": 37381, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:11", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2235\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -FORMLEN Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNFORMLEN Parameter\nN-----------------\nNA PSF user can use the FORMLEN parameter to set the length of pages\nNfor print without reconfiguring the printer.\nN\nD//outds OUTPUT FORMLEN=nn\u00dd.mmm\u00a8{IN|CM}\nI                 nn: Required. A one or two digit number, which can\nI                   be zero.\nI\nI                 .mmm: Optional. A decimal point (period) followed by\nI                   up to three digits.\nI\nI                 {IN|CM}: Required. The unit the decimal digits\nI                   represent. Code IN for inches or CM for centimeters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2236": {"ttr": 37383, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:11", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2236\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -FORMS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNFORMS Parameter\nN-----------------\nNUse the FORMS parameter to identify the forms on which the sysout data\nN set is to be printed or punched.\nN\nD//outds OUTPUT FORMS={form-name | STD}\nI                 form-name: Identifies the print or punch forms.\nI                   form-name is 1 through 8 alphanumeric or\nI                   national ($, #, @) characters.\nI\nI                 STD: Indicates that JES3 is to use the standard form\nI                   specified at JES3 initialization.\nI\nI                 Note: STD is supported only on JES3 systems.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2237": {"ttr": 37385, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:11", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2237\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -FSSDATA Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNFSSDATA Parameter\nN-----------------\nNUse the FSSDATA parameter for the intended purpose of each functional\nNsubsystem that documents this parameter.\nN\nD//outds OUTPUT FSSDATA=value\nI                 value: Required. A subsystem-defined parameter\nI                   (maximum = 127) to pass from a spooling product to\nI                   a despooler.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2238": {"ttr": 37387, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:12", "lines": 31, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2238\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -GROUPID Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNGROUPID Parameter\nN-----------------\nNUse the GROUPID parameter to specify that the sysout data set belongs\nNto an output group. The data sets in an output group are processed\nNtogether in the same location and time. Data sets to be grouped should\nNhave similar characteristics: the same output class, destination,\nNprocess mode, and external writer name.\nN\nNNote: GROUPID is supported only on JES2 systems.\nN\nD//outds OUTPUT GROUPID=output-group\nI                 output-group: Specifies the name of an output group.\nI                   The output-group is 1 through 8 alphanumeric\nI                   characters and is selected by the programmer to\nI                  define an output group for this job. The name is\nI                  not installation-defined.\nN\nNExample\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2239": {"ttr": 37389, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:12", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2239\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -INDEX Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNINDEX Parameter\nN---------------\nNUse the INDEX parameter to set the left margin for output on a 3211\nNPrinter with the indexing feature. The width of the print line is\nNreduced by the INDEX parameter value.\nN\nD//outds OUTPUT INDEX=nn\nI                 nn: Specifies how many print positions the left margin\nI                   on the 3211 output is to be indented. nn is a\nI                   decimal number from 1 through 31. n=1 indicates\nI                   flush-left; n=2 through n=31 indent the print line by\nI                   n-1 positions.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2240": {"ttr": 37391, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:12", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2240\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -INTRAY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNINTRAY Parameter\nN----------------\nNUse INTRAY to specify the paper source. This overrides what is\nNspecified in the FORMDEF in use.\nN\nD//outds OUTPUT INTRAY=nnn\nI                 nnn: Specifies the paper source, where nnn is\nI                   a number from 1 to 255. To determine what value\nI                   to specify, see the documentation for your printer.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2241": {"ttr": 37393, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00<\\x00<\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:28", "lines": 60, "newlines": 60, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2241\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -JESDS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170728\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNJESDS Parameter\nN---------------\nNUse the JESDS parameter to process the job's system-managed data sets\nNaccording to the parameters on this OUTPUT JCL statement. The\nNsystem-managed data sets consist of:\nN\nN->The job log, which is a record of job-related information for the\nN  programmer. Printing of the job log is controlled by two JOB\nN  statement parameters: the MSGLEVEL parameter controls what is\nN  printed and the MSGCLASS parameter controls the system output\nN  class.\nN\nN->The job's hard-copy log, which is a record of all message traffic\nN  for the job to and from the operator console.\nN\nN->System messages for the job.\nN\nD//outds OUTPUT JESDS={ALL | JCL | LOG | MSG}\nI                 ALL: Indicates that this OUTPUT JCL statement applies\nI                   to all of the job's system-managed data sets.\nI\nI                 LOG: Indicates that this OUTPUT JCL statement applies\nI                   only to the JESMSGLG data set, which contains the\nI                   JES and operator messages for this job.\nI\nI                 JCL: Indicates that this OUTPUT JCL statement applies\nI                   only to the JESJCL data set, which contains the JCL\nI                   statements for this job.\nI\nI                 MSG: Indicates that this OUTPUT JCL statement applies\nI                   only to the JESYSMSG data set, which contains any\nI                   JCL error messages and any system messages for\nI                   this job.\nN\nNExample 1: Dual spin-off.\nN-------------------------\nNIn this example, JES produces two copies of the system-managed\nNdata sets:\nN->one copy for OUTPUT JCL statement OUT1 and\nN->one copy for OUTPUT JCL statement OUT2.\nN\nNThe copy for statement OUT2 is sent to AUSTIN.\nN\nD//EXMP     JOB MSGCLASS=A\nD//OUT1  OUTPUT JESDS=ALL\nD//OUT2  OUTPUT JESDS=ALL,DEST=AUSTIN\nD...\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2242": {"ttr": 37395, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:29", "lines": 30, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2242\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -LINDEX Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNLINDEX Parameter\nN----------------\nNUse the LINDEX parameter to set the right margin for output on a 3211\nNPrinter with the indexing feature. The width of the print line is\nNreduced by the LINDEX parameter value.\nN\nD//outds OUTPUT LINDEX=nn\nI                 nn: Specifies how many print positions the right\nI                   margin on the 3211 output is to be moved in from\nI                   the full page width. nn is a decimal number from\nI                   1 through 31. n=1 indicates flush-right; n=2\nI                   through n=31 move the right margin over by n-1\nI                   positions.\nM\nMKenneth Tomiak remark:\nMWith hindsight, INDEXL ought to set the LEFT and INDEXR ought\nMto set the RIGHT.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2243": {"ttr": 37397, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:29", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2243\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -LINECT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNLINECT Parameter\nN----------------\nNUse the LINECT parameter to specify the maximum number of lines\nNJES2 is to print on each output page.\nN\nD//outds OUTPUT LINECT=nnn\nI                 nnn: Specifies the maximum number of lines JES2 is to\nI                   print on each page. nnn is a number from 0\nI                   through 255.\nI\nI                   Specify LINECT=0 to keep JES2 from starting a new\nI                   page when the number of lines exceeds the JES2\nI                   initialization parameter.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2244": {"ttr": 37399, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:29", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2244\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -MAILBCC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNMAILBCC Parameter\nN-----------------\nNUse the MAILBCC parameter to specify one or more e-mail addresses of\nNthe blind copy (bcc) recipients of an e-mail. A bcc means that other\nNrecipients of the e-mail do not see the bcc recipient listed.\nN\nD//outds OUTPUT MAILBCC=(\u00dd,'bcc address'\u00a8)\nI                 bcc address: Specifies the e-mail addresses of the\nI                   blind copy (bcc) recipients of an e-mail. You can\nI                   code up to 32 bcc-addresses. Each address can be\nI                   1 - 60 EBCDIC text characters.\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2245": {"ttr": 37401, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:29", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2245\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -MAILCC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNMAILCC Parameter\nN----------------\nNUse the MAILCC parameter to specify one or more e-mail addresses of\nNthe copy (cc) recipients of an e-mail. A cc means that other\nNrecipients of the e-mail can see the cc recipient listed.\nN\nD//outds OUTPUT MAILCC=(\u00dd,'cc address'\u00a8)\nI                 cc address: Specifies the e-mail addresses of the\nI                   copy (cc) recipients of an e-mail. You can code\nI                   up to 32 cc addresses. Each address can be\nI                   1 - 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2246": {"ttr": 37403, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:30", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2246\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -MAILFILE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNMAILFILE Parameter\nN------------------\nNUse the MAILFILE parameter to specify the file name of the attachment\nNto an e-mail.\nN\nD//outds OUTPUT MAILFILE='file-id'\nI                 file id: Specifies the name of a file attached in\nI                   an e-mail. The file id can be 1 - 60 EBCDIC\nI                   text characters.\nM\nMKenneth Tomiak remark:\nMAs I am unable to test this parameter I can only add what it\nMappears to is attach the SYSOUT as a file of the name you\nMspecify here. And the Inforprint Server might attach a\nMfile extension (like .doc). See your Infoprint Server\nMadministrator.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2247": {"ttr": 37405, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:30", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2247\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -MAILFROM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNMAILFROM Parameter\nN------------------\nNUse the MAILFROM parameter to specify the descriptive name or\nNother identifier of the sender of an e-mail.\nN\nD//outds OUTPUT MAILFROM='from-address'\nI                 from address: Specifies descriptive name or other\nI                   identifier of the sender of an e-mail. The from\nI                   address can be 1 - 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2248": {"ttr": 37633, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:30", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2248\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -MAILTO Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNMAILTO Parameter\nN----------------\nNUse the MAILTO parameter to specify one or more e-mail address\nNof the recipients of an e-mail.\nN\nD//outds OUTPUT MAILTO=(\u00dd,'to address'\u00a8)\nI                 to address: Specifies the e-mail addresses of the\nI                   recipients. You can code up to 32 addresses. Each\nI                   address can be 1 - 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2249": {"ttr": 37635, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x007\\x007\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:30", "lines": 55, "newlines": 55, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2249\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -MODIFY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNMODIFY Parameter\nN----------------\nNUse the MODIFY parameter to specify a copy-modification module that\nNtells JES how to print the sysout data set on a 3800 Printing\nNSubsystem. The module can specify the following:\nN\nN->Legends.\nN\nN->Column headings.\nN\nN->Where and on which copies to print the data.\nN\nNThe module is defined and stored in SYS1.IMAGELIB using the IEBIMAGE\nNutility program.\nN\nD//outds OUTPUT MODIFY=(\u00ddmodule-name\u00a8\u00dd,trc\u00a8)\nI                 module-name:  Identifies a copy-modification module in\nI                   SYS1.IMAGELIB. The module-name is 1 through 4\nI                   alphanumeric or national ($, #, @) characters.\nI\nI                 trc : Identifies which character-arrangement table\nI                   named in the CHARS parameter is to be used. This\nI                   table reference character is 0 for the first\nI                   font-name specified, 1 for the second, 2 for the\nI                   third, or 3 for the fourth. The CHARS parameter\nI                   used is on the following, in override order:\nI\nI                   1. The DD statement.\nI                   2. This OUTPUT JCL statement.\nI                   3. A statement in the library member specified\nI                      on the OUTPUT JCL PAGEDEF parameter.\nI                   4. A statement in the SYS1.IMAGELIB member\nI                      obtained by default.\nI                   5. A JES3 initialization statement.\nN\nNExample 1: Use a different chars set.\nN-------------------------------------\nNIn this example, JES loads the MODA module in SYS1.IMAGELIB into the\nN3800 and uses GI12, Gothic Italic 12-pitch font, which is the third\nNtable (0,1,2) name specified in the CHARS parameter.\nN\nD//OUTDS OUTPUT CHARS=(GT12,GB12,GI12),MODIFY=(MODA,2)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2250": {"ttr": 37637, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x001\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:31", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2250\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -NAME Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNNAME Parameter\nN--------------\nNUse the NAME parameter to print a preferred name on the separator\nNpages of the output for a sysout data set. The preferred name is\nNthe name associated with the output. An installation can use the\nNpreferred name to assist in sysout distribution.\nN\nD//outds OUTPUT NAME='preferred name'\nI                 preferred name: Specifies the preferred name that\nI                   is associated with the sysout. The preferred name\nI                   is 1 - 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2251": {"ttr": 37639, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x001\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:31", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2251\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -NOTIFY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNNOTIFY Parameter\nN----------------\nNUse the NOTIFY parameter to have PSF issue a print completion message\nNto up to four users. The message identifies the output that has\nNcompleted printing, and indicates whether the printing was successful.\nNThis parameter is effective for PSF devices and any FSS products that\nNsupport the NOTIFY keyword (such as Infoprint Server); it has no\nNeffect for JES-mode devices. The print completion message is issued:\nN\nN->on a JES2 system: when printing for all the sysout data sets for an\nN  output group has completed. An output group consists of the sysout\nN  data sets printed between the output header page and the output\nN  trailer page of a job.\nN\nN->on a JES3 system: when the sysout data sets for the same printer\nN  and the same job have been printed.\nN\nD//outds OUTPUT NOTIFY=\u00dd,\u00ddnode\u00a8userid\u00a8\nI                 \u00ddnode\u00a8userid: Specifies the node name and userid\nI                   of a recipient of the print completion message.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2252": {"ttr": 37641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x001\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:31", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2252\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OFFSETXB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOFFSETXB Parameter\nN------------------\nNUse OFFSETXB to specify the offset in the X direction from the page\nNorigin (or partition origin for N_UP) for the back side of each page\nNof output. This overrides what is specified in the FORMDEF in use.\nNFor more information on page offsets see the page \"Page Position\" in\nNPSF for z/OS: User's Guide.\nN\nD//outds OUTPUT OFFSETXB=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI                 mmmm\u00dd.nnn\u00a8: Specifies a value, which may be one (m),\nI                   two (mm), three (mmm), or four (mmmm) digits\nI                   (and which may be zero), and which optionally may be\nI                   followed by a decimal point (a period) and up to\nI                   three (nnn) digits.\nI\nI                 IN | CM | MM | PELS | POINTS: A mandatory unit that\nI                   follows the value. The unit can be inches (IN),\nI                   centimeters (CM), millimeters (MM), pels, or points.\nI                   If you specify the unit as pels or points you must\nI                   specify the value as a whole number with no decimal\nI                   point.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2253": {"ttr": 37643, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x001\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:31", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2253\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OFFSETXF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOFFSETXF Parameter\nN------------------\nNUse OFFSETXF to specify the offset in the X direction from the page\nNorigin (or partition origin for N_UP) for the front side of each page\nNof output. This overrides what is specified in the FORMDEF in use.\nNFor more information on page offsets see the page \"Page Position\" in\nNPSF for z/OS: User's Guide.\nN\nD//outds OUTPUT OFFSETXF=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI                 mmmm\u00dd.nnn\u00a8: Specifies a value, which may be one (m),\nI                   two (mm), three (mmm), or four (mmmm) digits\nI                   (and which may be zero), and which optionally may be\nI                   followed by a decimal point (a period) and up to\nI                   three (nnn) digits.\nI\nI                 IN | CM | MM | PELS | POINTS: A mandatory unit that\nI                   follows the value. The unit can be inches (IN),\nI                   centimeters (CM), millimeters (MM), pels, or points.\nI                   If you specify the unit as pels or points you must\nI                   specify the value as a whole number with no decimal\nI                   point.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2254": {"ttr": 37645, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:32", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2254\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OFFSETYB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOFFSETYB Parameter\nN------------------\nNUse OFFSETYB to specify the offset in the Y direction from the page\nNorigin (or partition origin for N_UP) for the back side of each page\nNof output. This overrides what is specified in the FORMDEF in use.\nNFor more information on page offsets see the page \"Page Position\" in\nNPSF for z/OS: User's Guide.\nN\nD//outds OUTPUT OFFSETYB=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI                 mmmm\u00dd.nnn\u00a8: Specifies a value, which may be one (m),\nI                   two (mm), three (mmm), or four (mmmm) digits\nI                   (and which may be zero), and which optionally may be\nI                   followed by a decimal point (a period) and up to\nI                   three (nnn) digits.\nI\nI                 IN | CM | MM | PELS | POINTS: A mandatory unit that\nI                   follows the value. The unit can be inches (IN),\nI                   centimeters (CM), millimeters (MM), pels, or points.\nI                   If you specify the unit as pels or points you must\nI                   specify the value as a whole number with no decimal\nI                   point.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2255": {"ttr": 37647, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:32", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2255\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OFFSETYF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOFFSETYF Parameter\nN------------------\nNUse OFFSETYF to specify the offset in the Y direction from the page\nNorigin (or partition origin for N_UP) for the front side of each page\nNof output. This overrides what is specified in the FORMDEF in use.\nNFor more information on page offsets see the page \"Page Position\" in\nNPSF for z/OS: User's Guide.\nN\nD//outds OUTPUT OFFSETYF=mmmm\u00dd.nnn\u00a8{IN | CM | MM | PELS | POINTS}\nI                 mmmm\u00dd.nnn\u00a8: Specifies a value, which may be one (m),\nI                   two (mm), three (mmm), or four (mmmm) digits\nI                   (and which may be zero), and which optionally may be\nI                   followed by a decimal point (a period) and up to\nI                   three (nnn) digits.\nI\nI                 IN | CM | MM | PELS | POINTS: A mandatory unit that\nI                   follows the value. The unit can be inches (IN),\nI                   centimeters (CM), millimeters (MM), pels, or points.\nI                   If you specify the unit as pels or points you must\nI                   specify the value as a whole number with no decimal\nI                   point.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2256": {"ttr": 37649, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:32", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2256\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OUTBIN Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOUTBIN Parameter\nN----------------\nNThe OUTBIN keyword specifies the printer output bin identifier to be\nNused for the sysout data set. See PSF for z/OS: User's Guide for more\nNinformation on multiple media destinations and OUTBIN processing.\nN\nD//outds OUTPUT OUTBIN=nnnnn\nI                 nnnnn: Species the ID of the printer output bin where\nI                   the data set is to be sent. nnnnn is 1 through 5\nI                   decimal digits from 1 to 65535.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2257": {"ttr": 37651, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:32", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2257\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OUTDISP Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOUTDISP Parameter\nN-----------------\nNIn a JES2 system, use the OUTDISP parameter to indicate the disposition\nN of a sysout data set. You can code different dispositions based on\nNwhether the job completes successfully.\nN\nD//outds OUTPUT OUTDISP=\u00ddnormal-disposition,abnormal-disposition\u00a8\nI                 WRITE: Indicates that the system is to print the\nI                   sysout data set. After printing the data set,\nI                   the system purges it.\nI\nI                   Unless it is held by the system or operator, a\nI                   sysout data set with the disposition WRITE will\nI                   always print.\nI\nI                 HOLD: Indicates that the system is to hold the sysout\nI                   data set until the user or operator releases it.\nI                   Releasing the sysout data set changes its\nI                   disposition to WRITE.\nI\nI                   If HOLD output is not released, the system holds it\nI                   until the user or operator purges it.\nI\nI                   NJE Note: In an NJE environment, the system does\nI                   not hold the data set until it reaches its ultimate\nI                   destination node.\nI\nI                 KEEP: Indicates that the system is to print the sysout\nI                   data set. After printing the data set, the system\nI                   changes its disposition to LEAVE.\nI\nI                 LEAVE: Indicates that after the user or operator\nI                   releases the sysout data set, the disposition of the\nI                   data set changes to KEEP.\nI\nI                 If LEAVE output is not released, the system holds it\nI                   until the user or operator purges it.\nI\nI                 PURGE: Indicates that the system is to delete the\nI                   sysout data set without printing it.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2258": {"ttr": 37653, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:33", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2258\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OVERLAYB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOVERLAYB Parameter\nN------------------\nNSpecifies to place the named medium overlay on the back side of each\nNsheet to print.\nN\nD//outds OUTPUT OVERLAYB=ovlyname\nI                 ovlyname: Specifies the medium overlay name, where\nI                   the overlay name is 1 though 8 alphanumeric or\nI                   national ($, #, @) characters and the first of those\nI                   characters is alphabetic or national.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2259": {"ttr": 37655, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:33", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2259\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OVERLAYF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOVERLAYF Parameter\nN------------------\nNSpecifies to place the named medium overlay on the front side of each\nNsheet to print.\nN\nD//outds OUTPUT OVERLAYF=ovlyname\nI                 ovlyname: Specifies the medium overlay name, where\nI                   the overlay name is 1 though 8 alphanumeric or\nI                   national ($, #, @) characters and the first of those\nI                   characters is alphabetic or national.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2260": {"ttr": 37657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:33", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2260\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -OVFL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNOVFL Parameter\nN--------------\nNUse the OVFL parameter to specify whether the printer program (JES3\nNoutput writer) should check for forms overflow (by sensing channel 12\nNas defined in the FCB that is used for printing the output).\nN\nNNote: OVFL is supported only on JES3 systems. Neither JES2 nor\nNPrint Services Facility (PSF) supports OVFL.\nN\nD//outds OUTPUT OVFL={ON | OFF}\nI\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2261": {"ttr": 37659, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00-\\x00-\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:33", "lines": 45, "newlines": 45, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2261\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PAGEDEF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPAGEDEF Parameter\nN-----------------\nNUse the PAGEDEF parameter to identify a library member that contains\nNstatements to tell the Print Services Facility (PSF) how to print the\nNsysout data set on a page-mode printer (such as the Infoprint 4000).\nNThe data set may be sysout or a data set that is allocated directly\nNto a printer. The statements can specify the following:\nN\nN->Logical page length and width.\nN->Fonts.\nN->Page segments.\nN->Multiple page types or formats.\nN->Lines within a page; for example:\nN\nN  ->Line origin.\nN  ->Carriage controls.\nN  ->Spacing.\nN\nN->Multiple logical pages on a physical page.\nN\nNThe member must be in the library named in the cataloged procedure that\nNwas used to initialize PSF, or in a library specified in the USERLIB\nNparameter.\nN\nNNote: PAGEDEF applies only for data sets printed on a page-mode\nNprinter controlled by PSF.\nN\nD//outds OUTPUT PAGEDEF=membername\nI                 membername: Specifies the name of the library member.\nI                   membername is 1 through 6 alphanumeric or national\nI                   ($, #, @) characters; the first two characters are\nI                   pre-defined by the system.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2262": {"ttr": 37889, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x009\\x009\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:34", "lines": 57, "newlines": 57, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2262\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PIMSG Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPIMSG Parameter\nN---------------\nNUse the PIMSG parameter to indicate the handling of messages by\nNPrint Services Facility (PSF). PIMSG is used to specify whether all\nNerror messages are to be printed, and the number of errors sufficient\nNto cause the printing process to be terminated and the data set to\nNbe purged.\nN\nD//outds OUTPUT PIMSG=({YES | Y | NO | N},count)\nI                 YES: Requests the system to print all messages\nI                   generated by PSF.\nI                   You can also code this subparameter as Y.\nI\nI                   When you code PIMSG=YES, the system prints all these\nI                   messages at the end of the output data set.\nI\nI                 NO: Requests that the system print no error messages,\nI                   unless printing of the data set is prematurely\nI                   terminated. If a terminating error occurs, only\nI                   the set of messages (called a message group)\nI                   associated with the error that caused the\nI                   termination is printed.\nI                   You can also code this subparameter as N.\nI\nI                   When you code PIMSG=NO, no messages are printed\nI                   unless there is an error that forces premature\nI                   termination of the printing of the data set. If an\nI                   error occurs, the system prints the set of messages\nI                   (called a message group) associated with the error\nI                   that caused the termination.\nI\nI                 msg-count: Requests the system to cancel the printing\nI                   of the current data set after the specified number\nI                   of errors (as represented by the associated message\nI                   groups) have been detected by PSF or reported to PSF\nI                   by the printer. In this context, errors refers to\nI                   data-stream errors, and errors resulting from any\nI                   malfunction that would cause the printer to halt,\nI                   such as a mechanism failure, or out-of-paper\nI                   condition. However, these errors do not include\nI                   those caused by operator intervention.\nI\nI                   Valid values for msg-count are 0-999, where 0 is\nI                   interpreted as infinite.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2263": {"ttr": 37891, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x15\\x00\\x15\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:34", "lines": 21, "newlines": 21, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2263\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PORTNO Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPORTNO Parameter\nN----------------\nNUse the PORTNO parameter to specify the TCP/IP port number at which the\nNFSS (for example, Infoprint Server) connects to the printer.\nN\nD//outds OUTPUT PORTNO=nnnnn\nI                 nnnnn: Specifies the TCP/IP port number, where nnnnn\nI                   is a number from 1 through 65535.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2264": {"ttr": 37893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:34", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2264\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PRMODE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPRMODE Parameter\nN----------------\nNUse the PRMODE parameter to identify the process mode required to print\nNthe sysout data set. JES schedules the data set to a printer that can\nNoperate in the specified mode.\nN\nD//outds OUTPUT PRMODE={LINE | PAGE | proCess-mode}\nI                 LINE: Indicates that the data set is to be scheduled\nI                   to a line-mode printer.\nI\nI                 PAGE: Indicates that the data set is to be scheduled\nI                   to a page-mode printer.\nI\nI                 process-mode: Specifies the required process mode.\nI                   The process-mode is 1 through 8 alphanumeric\nI                   characters.\nI\nI                   For an NJE-transmitted data set, use PRMODE to\nI                   request specific processing without having to\nI                   obtain output classes for the node that processes\nI                   the data set.\nI\nI                   For a list of valid process modes, contact\nI                   your system programmer.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2265": {"ttr": 37895, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00^\\x00^\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:34", "lines": 94, "newlines": 94, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2265\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PRTATTRS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPRTATTRS Parameter\nN------------------\nNUse the PRTATTRS keyword to specify one or more job attributes for\nNInfoprint Server. The z/OS Infoprint Server User's Guide documents\nNsupported job attributes and their syntax.\nN\nD//outds OUTPUT PRTATTRS='attributename=value'\nI                 attributename: Specifies an Infoprint Server job\nI                   attribute. For more information on job attribute\nI                   names and syntax for acceptable values, see\nI                   z/OS Infoprint Server User's Guide.\nM\nM                   From z/OS Infoprint Server User's Guide:\nI\nI                     JCL parameter   Job attribute\nI                     --------------- --------------------------\nI                     ADDRESS         address-text\nI                     AFPPARMS        afp-parameters\nI                     AFPSTATS        save-afp-statistics\nI                     BUILDING        building-text\nI                     CHARS           chars\nI                     COPIES          copies\nI                     DATACK          print-error-reporting\nI                     DCB OPTCD=J     table-reference-characters\nI                     DEPT            department-text\nI                     DEST=IP:        printer-ip-address\nI                     DSNAME          sysout-dataset-name\nI                     DUPLEX          duplex\nI                     FORMDEF         form-definition\nI                     FORMS           forms\nI                     OUTDISP(HOLD)   hold\nI                     INTRAY          input-tray\nI                                     input-tray-number\nI                     jobname         sysout-job-name\nI                     MAILBCC         mail-bcc-addresses\nI                     MAILCC          mail-cc-addresses\nI                     MAILFILE        mail-file-name\nI                     MAILFROM        mail-from-name\nI                     MAILTO          mail-to-addresses\nI                     NAME            name-text\nI                     OFFSETXB        x-image-shift-back\nI                     OFFSETXF        x-image-shift-front\nI                     OFFSETYB        y-image-shift-back\nI                     OFFSETYF        y-image-shift-front\nI                     OUTBIN          output-bin\nI                                     output-bin-number\nI                     OVERLAYB        overlay-back\nI                     OVERLAYF        overlay-front\nI                     PAGEDEF         page-definition\nI                     PRMODE          shift-out-shift-in\nI                     PRTATTRS        not-applicable\nI                     PRTQUEUE        print-queue-name\nI                     PRTY            jes-priority\nI                     RECFM           carriage-control-type\nI                     REPLYTO         mail-reply-address\nI                     ROOM            room-text\nI                     SYSAREA         restrict-printable-area\nI                     TITLE           title-text\nI                     TRC             table-reference-characters\nI                     USER            owner\nI                     USERLIB         resource-library\nI                     not-applicable  document-codepage2\nI                     not-applicable  document-format2\nI                     not-applicable  document-type2\nI                     not-applicable  filter-options2\nI                     not-applicable  pdf-encryption-level2\nI                     not-applicable  pdf-owner-identifier2\nI                     not-applicable  pdf-protect2\nI                     not-applicable  pdf-user-identifier2\nI                     not-applicable  sysout-job-id\nI                     not-applicable  sysout-job-name\nI                     not-applicable  xf-options2\nN\nNExample 1: Specify a CODEPAGE.\nN------------------------------\nNIn this example, the IP PrintWay extended mode component of\nNInfoprint Server uses the document-codepage specification to control\nNcode page translation for the SYSOUT data set associated with this\nNOUTPUT statement.\nN\nD//OUTDS3 OUTPUT PRTATTRS='document-codepage=ISO8859-1'\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2266": {"ttr": 37897, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x000\\x000\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:35", "lines": 48, "newlines": 48, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2266\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PRTERROR Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPRTERROR Parameter\nN------------------\nNSpecifies the disposition of the SYSOUT data set used if a terminating\nNerror occurs during printing through the PSF functional subsystem.\nN(A terminating error is an error that the automated recovery of PSF\nNcannot correct.) You can specify which of the following actions PSF\nNis to take for a terminating error:\nN\nN->Use the default error disposition (DEFAULT),\nN->Release the SYSOUT data set back to JES as complete (QUIT), or\nN->Hold for operator action (HOLD).\nN\nD//outds OUTPUT PRTERROR={DEFAULT | QUIT | HOLD}\nI                 DEFAULT: Specifies that PSF will take the standard\nI                   (default) action if a terminating error occurs\nI                   during printing. When operator action is expected\nI                   to correct the error, PSF releases the SYSOUT data\nI                   set for hold. Otherwise, it treats the SYSOUT data\nI                   as complete. For JES2, processing of the data set\nI                   proceeds according to the OUTDISP keyword value\nI                   that is associated with it. For JES3, the data set\nI                   is deleted from the SPOOL.\nI\nI                 QUIT: Specifies that PSF is to release the data set\nI                   complete even if a terminating error occurs during\nI                   printing. JES then disposes of the data set as if\nI                   it completed printing successfully. For JES2,\nI                   processing of the data set proceeds according to\nI                   the OUTDISP keyword value that is associated with\nI                   it. For JES3, the data set is deleted from the\nI                   SPOOL.\nI\nI                 HOLD: Specifies that if a terminating error occurs\nI                   during printing, the data set will remain on the\nI                   JES SPOOL until the system operator releases it.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2267": {"ttr": 37899, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:35", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2267\nKSYSOUT INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PRTOPTNS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPRTOPTNS Parameter\nN------------------\nNPRTOPTNS defines a named entity that contains additional print\nNoptions. JES does not use PRTOPTNS, but passes it to JES\nNsubsystems during data set selection.\nN\nD//outds OUTPUT PRTOPTNS='options data set entry name'\nI                 <options data set entry name>: Identifies the print\nI                   options data. The name can be 1 to 16 characters\nI                   long. If the name includes any special characters\nI                   (for example, a dash), enclose the entire parameter\nI                    in single quotation marks. You can also specify\nI                    this keyword by using a dynamic output descriptor.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2268": {"ttr": 37901, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:35", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2268\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PRTQUEUE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPRTQUEUE Parameter\nN------------------\nNPRTQUEUE defines the name of the target print queue on a remote host\nNsystem. JES does not use PRTQUEUE, but passes it to JES subsystems\nNduring data set selection.\nN\nD//outds OUTPUT PRTQUEUE='<print queue name>'\nI                 <print queue name>: Identifies the target print queue\nI                   name. The name can be 1 to 127 characters long and\nI                   may include any printable character. If the name\nI                   includes any special character (for example, a dash\nI                   or lower case letter), enclose the entire parameter\nI                   in single quotation marks. You can also specify this\nI                   keyword by using a dynamic output descriptor.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2269": {"ttr": 37903, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:35", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2269\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -PRTY Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNPRTY Parameter\nN--------------\nNUse the PRTY parameter to specify the priority at which the sysout\nNdata set enters the output queue. A data set with a higher priority\nNis printed sooner.\nN\nD//outds OUTPUT PRTY=nnn\nI                 nnn: Specifies the initial priority. nnn is a decimal\nI                   number from 0 through 255; 0 is the lowest priority\nI                   while 255 is the highest.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2270": {"ttr": 37905, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:36", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2270\nKSYSOUT MAIL INFOPRINT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -REPLYTO Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNREPLYTO Parameter\nN-----------------\nNUse the REPLYTO parameter to specify the e-mail address to which\nNrecipients of the e-mail can respond.\nM\nMPlease do not be a spammer and use NO-REPLY. Have replies come back\nMto a human!\nN\nD//outds OUTPUT REPLYTO='replyto-address'\nI                 reply address: Specifies the e-mail address to which\nI                   recipients of the e-mail can respond. The reply\nI                   address can be 1 - 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2271": {"ttr": 37907, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:36", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2271\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -RESFMT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNRESFMT Parameter\nN----------------\nNUse the RESFMT parameter to specify the resolution used to format the\nNprint data set. PSF will use this value to select the resource\nNlibraries for the resolution indicated. For more information see PSF\nNfor z/OS: User's Guide.\nN\nD//outds OUTPUT RESFMT={P240 | P300}\nI                 P240: Indicates that the data set was formatted with\nI                   resources at 240 pels per inch.\nI\nI                 P300: Indicates that the data set was formatted with\nI                  resources at 300 pels per inch.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2272": {"ttr": 37909, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:36", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2272\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -RETAINS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNRETAINS Parameter\nN-----------------\nNRETAINS specifies the amount of time to retain a successfully\nNtransmitted data set.\nN\nD//outds OUTPUT RETAINS={'<hhhh>:<mm>:<ss>' | FOREVER}\nI                 <hhhh>:<mm>:<ss>: One to ten characters, where\nI                   <hhhh>, <mm>, and <ss> are numeric. This format\nI                   requires that you enclose the entire parameter\nI                   in apostrophes due to the colon as a special\nI                   character.\nI\nI                 FOREVER: You may specify FOREVER to request the\nI                   system to retain the data set indefinitely.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2273": {"ttr": 37911, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:36", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2273\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -RETAINF Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNRETAINF Parameter\nN-----------------\nNRETAINF specifies the amount of time to retain a data set that\nNfailed to be transmitted.\nN\nD//outds OUTPUT RETAINF={'<hhhh>:<mm>:<ss>' | FOREVER}\nI                 <hhhh>:<mm>:<ss>: One to ten characters, where\nI                   <hhhh>, <mm>, and <ss> are numeric. This format\nI                   requires that you enclose the entire parameter\nI                   in apostrophes due to the colon as a special\nI                   character.\nI\nI                 FOREVER: You may specify FOREVER to request the\nI                   system to retain the data set indefinitely.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2274": {"ttr": 37913, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:37", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2274\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -RETRYL Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNRETRYL Parameter\nN----------------\nNRETRYL=limit defines the maximum number of attempts to transmit a data\nNset before the RETAIN keyword options take effect.\nM\nMNOTE: applies only to data sets processed by a functional subsystem\nMthat can perform Internet Protocol (IP) transmission.\nN\nD//outds OUTPUT RETRYL=nnnnn\nI                 nnnnn: An integer from 0 to 32,767 (decimal) that\nI                   specifies the maximum number of retries to attempt\nI                   before the RETAIN keyword options are to take\nI                   effect.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2275": {"ttr": 38145, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:37", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2275\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -RETRYT Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNRETRYT Parameter\nN----------------\nNRETRYT='retry time' defines how much time to wait between each attempt\nN to transmit the data set. It is formatted into hours, minutes, and\nNseconds.\nM\nMNOTE: applies only to data sets processed by a functional subsystem\nMthat can perform Internet Protocol (IP) transmission.\nN\nD//outds OUTPUT RETRYT='<hhhh>:<mm>:<ss>'\nI                 <hhhh>:<mm>:<ss>: One to ten characters, where\nI                   <hhhh>, <mm>, and <ss> are numeric. This format\nI                   requires that you enclose this entire parameter in\nI                   apostrophes due to the colon as a special character.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2276": {"ttr": 38147, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:37", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2276\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -ROOM Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNROOM Parameter\nN--------------\nNUse the ROOM parameter to print a room identification on the separator\nNpages of the output for a sysout data set. An installation can use the\nNroom identification to assist in sysout distribution.\nN\nD//outds OUTPUT ROOM='room-identification'\nI                 room identification: Specifies the room identification\nI                   to be associated with the sysout. The room\nI                   identification is 1 - 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2277": {"ttr": 38149, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:37", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2277\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -SYSAREA Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNSYSAREA Parameter\nN-----------------\nNUse the SYSAREA (system area) parameter to indicate whether the\nNsystem should reserve an area on each page of printed output for\nNthe security label. The security label represents a security level\nNand categories as defined to RACF.\nN\nNNote: When a system area is reserved for a security label, the\nNsystem shifts the printed output on each page. You cannot print\nNoutput data in the system area.\nN\nD//outds OUTPUT SYSAREA={Y | YES | N | NO}\nI                 YES: Requests that a system area be reserved on each\nI                   page of printed output for the security label.\nI                   This parameter can also be coded as Y.\nI\nI                 NO: Requests that a system area not be reserved on\nI                   each page of printed output for the security label.\nI                   This parameter can also be coded as N.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2278": {"ttr": 38151, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:38", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2278\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -THRESHLD Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNTHRESHLD Parameter\nN------------------\nNUse the THRESHLD parameter to specify the maximum size for the sysout\nNdata set. JES3 calculates the sysout data set size as the number of\nNrecords multiplied by the number of copies requested. When this size\nNexceeds the THRESHLD value, JES3 creates a new unit of work, on a\nNdata set boundary, and queues it for printing. Consequently, copies\nNof the sysout data set may be printed simultaneously by different\nNprinters.\nN\nNUse the THRESHLD parameter for jobs that generate many large\nNdata sets or many copies of one large data set.\nN\nNNote: THRESHLD is supported only on JES3 systems.\nN\nD//outds OUTPUT THRESHLD=limit\nI                 limit: Specifies the maximum number of records for a\nI                   single sysout data set. limit is a decimal number\nI                   from 1 through 99999999.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2279": {"ttr": 38153, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:38", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2279\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -TITLE Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNTITLE Parameter\nN---------------\nNUse the TITLE parameter to print a description of the output on the\nNseparator pages of the output of a sysout data set. An installation\nNcan use the description to assist in sysout distribution.\nN\nD//outds OUTPUT TITLE='description of output'\nI                 description of output: Specifies a description of\nI                   output to be associated with a sysout data set.\nI                   The description of output is 1 - 60 EBCDIC text\nI                   characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2280": {"ttr": 38155, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00'\\x00'\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:38", "lines": 39, "newlines": 39, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2280\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -TRC Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNTRC Parameter\nN-------------\nNUse the TRC parameter to specify whether the logical record for each\nNoutput line in the sysout data set contains table reference character\nN(TRC) codes or not. The TRC code identifies which font-name in the\nNCHARS parameter is to be used to print the record.\nN\nNIf present, a TRC code in the output line record is:\nN->The first byte, if a carriage control character is not used.\nN->The second byte, immediately following the carriage control\nN  character, if used.\nN\nNNote: TRC is supported only for a data set processed by the\nNPrint Services Facility (PSF).\nN\nD//outds OUTPUT TRC={Y | YES | N | NO}\nI                 YES: Indicates that the data set contains TRC codes.\nI                   This subparameter can also be coded as Y.\nI\nI                 NO: Indicates that the data set does not contain TRC\nI                   codes.\nI                   This subparameter can also be coded as N.\nI\nI                 Note: The data set DCB must not indicate that the data\nI                   set contains TRC codes. DCB=(OPTCD=J) overrides\nI                   TRC=NO when the data set is printed by PSF.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2281": {"ttr": 38157, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00O\\x00O\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:58", "lines": 79, "newlines": 79, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2281\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -UCS Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170758\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNUCS Parameter\nN-------------\nNUse the UCS parameter to identify:\nN\nN->The universal character set (UCS) image JES is to use in printing\nN  the sysout data set.\nN\nN->A print train (print chain or print band) JES is to use in printing\nN  the sysout data set on an impact printer.\nN\nN->A font for the sysout data set printed on an AFP printer in a\nN  JES2 system.\nN\nNThe UCS image specifies the special character set to be used. JES\nNloads the image into the printer's buffer. The UCS image is stored\nNin SYS1.IMAGELIB. IBM provides the special character set codes in\nNTable 20.\nN\nD//outds OUTPUT UCS=cccc : character-set-code\nI                 character-set-code: Identifies a universal character\nI                   set. The character-set-code is 1 through 4\nI                   alphanumeric or national ($, #, @) characters.\nI                   See Table 20 for IBM standard special character\nI                   set codes.\nN\nNTable 20. Special Character Sets for the 1403, 3203 Model 5,\nNand 3211 Printers\nN------------------------------------------------------------\nN      3203\nN1403  Model 5 3211  Characteristics\nN----- ------- ----- -----------------------------------------------\nNAN    AN      A11   Arrangement A, standard EBCDIC character set,\nN                    48 characters\nN----- ------- ----- -----------------------------------------------\nNHN    HN      H11   Arrangement H, EBCDIC character set for\nN                    FORTRAN and COBOL, 48 characters\nN----- ------- ----- -----------------------------------------------\nN              G11   ASCII character set\nN----- ------- ----- -----------------------------------------------\nNPCAN  PCAN          Preferred alphanumeric character set,\nN                    arrangement A\nN----- ------- ----- -----------------------------------------------\nNPCHN  PCHN          Preferred alphanumeric character set,\nN                    arrangement H\nN----- ------- ----- -----------------------------------------------\nNPN    PN      P11   PL/I alphanumeric character set\nN----- ------- ----- -----------------------------------------------\nNQN    QN            PL/I preferred alphanumeric character set\nN                    for scientific applications\nN----- ------- ----- -----------------------------------------------\nNQNC   QNC           PL/1 preferred alphanumeric character set for\nN                    commercial applications\nN----- ------- ----- -----------------------------------------------\nNRN    RN            Preferred character set for commercial\nN                    applications of FORTRAN and COBOL\nN----- ------- ----- -----------------------------------------------\nNSN    SN            Preferred character set for text printing\nN----- ------- ----- -----------------------------------------------\nNTN    TN      T11   Character set for text printing, 120 characters\nN----- ------- ----- -----------------------------------------------\nNXN                  High-speed alphanumeric character set for 1403,\nN                    Model 2\nN----- ------- ----- -----------------------------------------------\nNYN                  High-speed preferred alphanumeric character set\nN                    for 1403, Model N1\nN----- ------- ----- -----------------------------------------------\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2282": {"ttr": 38159, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:58", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2282\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -USERDATA Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNUSERDATA Parameter\nN------------------\nNThe purpose and use of this keyword is defined by the installation.\nN\nNRefer to your installation's definition on the intent and use of\nNthis keyword.\nN\nNIf your installation does not define any use for this keyword, the\nNinformation will be checked for syntax, stored as part of the output\nNdescriptor's information, and will then be ignored.\nN\nD//outds OUTPUT USERDATA=(,'userdata')\nI               value: Specifies the installation defined values for the\nI                 installation's prescribed processing. You can code up\nI                to 16 installation-defined values. Each value may be\nI                from 1 to 60 EBCDIC text characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2283": {"ttr": 38161, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00+\\x00+\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:59", "lines": 43, "newlines": 43, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2283\nKSYSOUT PSF\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -USERLIB Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNUSERLIB Parameter\nN-----------------\nNUse the USERLIB parameter to identify libraries containing AFP\nNresources to be used by Print Services Facility (PSF) when processing\nNsysout data sets. The system searches libraries specified on the\nNUSERLIB parameter before using any system-defined resources. The\nNresources specify how PSF is to print the sysout data set.\nN\nD//outds OUTPUT USERLIB=(,dataset-name)\nI               data-set-name: Specifies from 1 to 8 library data set\nI                 names containing AFP resources. The data set name\nI                 must be a cataloged MVS data set. The library can\nI                 contain any AFP resources. The libraries are searched\nI                 in the order in which they are specified on the\nI                 USERLIB statement.\nN\nNExample 1: User specifications.\nN-------------------------------\nNIn this example, PSF is to print the sysout data set using\nNPAGEDEF=STNDRD and FORMDEF=CENTER.\nN\nNWhen processing the sysout data set, PSF will search the user\nNlibraries before searching the system libraries for the\nNspecified PAGEDEF and FORMDEF. When searching the user\nNlibraries, PSF will search USER.PRIVATE.RESOURCE before\nNsearching GROUP.PRIVATE.RESOURCE.\nN\nD//outds OUTPUT PAGEDEF=STNDRD,FORMDEF=CENTER,\nD//             USERLIB=(USER.PRIVATE.RESOURCE,\nD//             GROUP.PRIVATE.RESOURCE)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2284": {"ttr": 38163, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:59", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2284\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -USERPATH Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNUSERPATH Parameter\nN------------------\nNNames up to eight z/OS UNIX file system paths containing resources\nNto be used by Print Services Facility (PSF) when processing sysout\nNdata sets. The system will search for resources in the paths specified\nNon the USERPATH parameter before it searches paths specified at the\nNsystem level. The paths specified on the USERPATH parameter can contain\nNthe following resources:\nN\nN->TrueType fonts\nN->OpenType fonts\nN\nD//outds OUTPUT USERPATH=(,path-name)\nI                 path: Specifies the name of a z/OS UNIX System\nI                   Services path which contains resources to be\nI                   used for processing sysout data sets. Up to\nI                   eight paths can be specified on the USERPATH\nI                   parameter. PSF will search these paths for\nI                   resources in the order the paths are specified.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2285": {"ttr": 38165, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:59", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2285\nKSYSOUT\nTz/OS JCL Reference\nT-OUTPUT JCL Statement -WRITER Parameter\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNOUTPUT JCL Statement\nN====================\nNWRITER Parameter\nN-----------------\nNUse the WRITER parameter to name an external writer to process the\nNsysout data set rather than JES. An external writer is an IBM or\nN\nNinstallation-written program.\nD//outds OUTPUT WRITER=name\nI                 name: Identifies the member name (1 to 8 alphanumeric\nI                   characters) of an installation-written program in\nI                   the system library that the external writer loads\nI                   to write the output data set.\nI\nI                 Do not code INTRDR or STDWTR (and for JES3, NJERDR)\nI                 as the writer name. These names are reserved for JES.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR23": {"ttr": 38167, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x07\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:07:59", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR23\nKPROCedure\nTz/OS JCL Reference -PEND Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNPEND Statement\nN==============\nNUse the PEND statement to mark the end of an in-stream procedure.\nNYou may end a cataloged procedure with a PEND statement, but it is\nNnot required.\nN\nD//\u00ddname\u00a8 PEND \u00ddcomments\u00a8\nN\nNThe PEND statement consists of the characters // in columns 1\nNand 2 and three fields:\nN->name,\nN->operation (PEND), and\nN->comments.\nI\nIDo not continue a PEND statement.\nM\nMPEND in a catalogued procedure used to yield a JCL error.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2301": {"ttr": 38169, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x11\\x00\\x11\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2301\nTz/OS JCL Reference -PEND Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNPEND Statement\nN==============\nNUse the PEND statement to mark the end of an in-stream procedure. You\nNmay end a cataloged procedure with a PEND statement, but it is not\nNrequired.\nN\nD//name    PEND comments\nI            name and comments are optional.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR24": {"ttr": 38171, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00'\\x00'\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR24\nKPEND\nTz/OS JCL Reference -PROC Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNPROC Statement\nN==============\nNThe PROC statement marks the beginning of a procedure. The PROC\nNstatement can assign default values to symbolic parameters, if\nNcoded, in the procedure.\nN\nNFor a cataloged procedure:\nN--------------------------\nD//\u00ddname\u00a8 PROC \u00ddparameter \u00ddcomments\u00a8\u00a8\nD//\u00ddname\u00a8 PROC\nN\nNFor an in-stream procedure:\nN---------------------------\nD//name PROC \u00ddparameter \u00ddcomments\u00a8\u00a8\nD//name PROC\nN\nNA PROC statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (PROC),\nN->parameter, and\nN->comments.\nI\nINote: A PROC statement is optional in a cataloged procedure.\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM) recommends\nMthe use of a PROC statement in catalogued procedures. And give\nMit the same name as the member name!\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2401": {"ttr": 38401, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:00", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2401\nTz/OS JCL Reference -PROC Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNPROC Statement\nN==============\nNThe PROC statement marks the beginning of a procedure. The PROC\nNstatement can assign default values to symbolic parameters, if\nNcoded, in the procedure.\nN\nD//name    PROC parameter comments\nI                 name: A name is required on a PROC statement in an\nI                   in-stream procedure and is optional on a PROC\nI                   statement in a cataloged procedure.\nM\nMKenneth Tomiak remark:\nM'Programming Using The Kenneth Tomiak Method' (PUTKTM-JCL) recommends\nMalways coding the name field and for a catalogued procedure matching\nMthe name to the PDS member name.\nN\nNExample 1: Three PROC Symbols.\nN------------------------------\nNThree symbolic parameters are defined in this cataloged procedure:\nN  &STATUS, &LIBRARY, and &NUMBER.\nNValues are assigned to the symbolic parameters on the PROC statement.\nNThese values are used when the procedure is called and values are\nNnot assigned to the symbolic parameters on the calling EXEC statement.\nN\nD//DEF     PROC LIBRARY=SYSLIB,NUMBER=777777,STATUS=OLD\nD//NOTIFY  EXEC PGM=ACCUM\nD//DD1       DD DISP=(&STATUS,KEEP),DSN=MGMT,\nD//             UNIT=3400-6,VOLUME=SER=888888\nD//DD2       DD DISP=(OLD,KEEP),DSN=&LIBRARY,\nD//             UNIT=3350,VOLUME=SER=&NUMBER\nD//DD3       DD DISP=(NEW,CATLG),DSN=COMBINED,\nD//             UNIT=APPDATA,\nD//             SPACE=(TRK,(100,25),RLSE),\nD//             DCB=*.DD2\nD//DEF     PEND\nM\nMModified by Kenneth Tomiak.\nMSymbol names placed in alphabetic order.\nMJCL aligned for readability.\nMJCL Parameters reordered for maintainability.\nMPEND added for completeness.\nMDSNAME changed to DSN, an industry de-facto standard use.\nMUNIT and VOLUME paired on one line.\nMDD3 added to support the intent of an ACCUM program.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR25": {"ttr": 38403, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR25\nKSymbols Symbolics Variables\nTz/OS JCL Reference -SET Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNSET Statement\nN=============\nNUse the SET statement to:\nN\nN->Define and assign initial values to symbolic parameters that are to\nN  be used when processing JCL statements.\nN\nN->Change or nullify the values of defined symbolic parameters (those\nN  that are defined on previous SET statements) by assigning new values\nN  or nullifying current values.\nN\nD//\u00ddname\u00a8 SET symbolic-parameter=value\nD//            \u00dd,symbolic-parameter=value\u00a8... \u00ddcomments\u00a8\nN\nNThe SET statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (SET),\nN->parameter(s), and\nN->comments.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2501": {"ttr": 38405, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x009\\x009\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:01", "lines": 57, "newlines": 57, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2501\nTz/OS JCL Reference -SET Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNSET Statement\nN=============\nNUse the SET statement to:\nN\nN->Define and assign initial values to symbolic parameters that are to\nNbe used when processing JCL statements.\nN\nN->Change or nullify the values of defined symbolic parameters (those\nNthat are defined on previous SET statements) by assigning new values\nNor nullifying current values.\nN\nD//name     SET \u00dd,symbolic-parameter=value\u00a8... \u00ddcomments\u00a8\nI                 symbolic parameter:  Defines a symbolic parameter and\nI                   specifies the initial value to be assigned to the\nI                   symbolic parameter appearing in subsequent\nI                   JCL statements.\nI\nI                 VALUE: Separate each assignment of a value to a\nI                   symbolic parameter by commas. To nullify a\nI                   symbolic parameter, specify:\nN\nNExample 1: Using a symbol for initial-dIsposition.\nN--------------------------------------------------\nNThe symbolic parameter DSP is defined and initialized to the value NEW.\nNDSP is referenced by coding &DSP in the JCL.\nN\nD//        SET DSP=NEW\nD//DD1      DD DISP=(&DSP,KEEP),DSN=ALPHA.PGM1\nN\nNSubstitution results in:\nN//DD1      DD DISP=(NEW,KEEP),DSN=ALPHA.PGM1\nN\nNExample A: Symbols for UNIT and SPACE.\nN--------------------------------------\nNThis allows for easily switching between TEST and PRODUCTION\nNenvironments. Of course, DFSMS ACS routines should assign the\nNSTORCLASS negating the need to change UNIT.\nN\nD//MYLABEL SET SOMEVAR='THIS IS THE DATA'\nD//URLABEL SET MOREVAR='AND THIS IS TEXT'\nD//UNIT    SET UNIT=SYSALLDA\nD//SPACE   SET SPACE='SPACE=(CYL,(50,50),RLSE)'\nD//SPACE   SET SPACE='SPACE=(TRK,(5,5),RLSE)'    <= Delete for PROD run\nD//*\nD//STEP001 EXEC PGM=MYPGM,PARM='&SOMEVAR.&MOREVAR'\nD//DDNAME   DD  DISP=(NEW,CATLG,DELETE),DSN=HLQ.DSN.LLQ,\nD//             UNIT=&UNIT,\nD//             &SPACE\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR26": {"ttr": 38407, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:01", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR26\nKTRANSMIT\nTz/OS JCL Reference -XMIT JCL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNXMIT JCL Statement\nN==================\nNUse the XMIT JCL statement to transmit records from an MVS node\nNto a JES3 node, a JES2 node, a VSE/POWER node, a VM/RSCS node, or\nNan AS/400? node.\nN\nD//\u00ddname\u00a8 XMIT parameter\u00dd,parameter\u00a8... \u00ddcomments\u00a8\nN\nNThe XMIT JCL statement consists of the characters // in columns 1\nNand 2 and four fields:\nN->name,\nN->operation (XMIT),\nN->parameter, and\nN->comments.\nI\nISupport for the XMIT JCL Statement\nI----------------------------------\nI->The XMIT JCL statement has no function in an APPC scheduling\nI  environment. If you code XMIT, the system will check it for\nI  syntax and ignore it.\nI\nI->The XMIT JCL statement is supported on both JES2 and JES3\nI  systems. In JES2 systems, however, the SUBCHARS operand is not\nI  supported.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2601": {"ttr": 38409, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00N\\x00N\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:01", "lines": 78, "newlines": 78, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2601\nTz/OS JCL Reference -XMIT Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNXMIT Statement\nN==============\nNUse the XMIT JCL statement to transmit records from an MVS node to a\nNJES3 node, a JES2 node, a VSE/POWER node, a VM/RSCS node, or an\nNOS/400 node.\nN\nD//\u00ddname\u00a8  XMIT \u00dd,parameter\u00a8... \u00ddcomments\u00a8\nI                 parameter: The XMIT JCL statement contains only\nI                   keyword parameters. A DEST parameter is\nI                   required; the DLM and SUBCHARS parameters are\nI                   optional.\nI\nI                   JES3: If your JCL is to be processed by an\nI                   internal reader and /*EOF or /*DEL is part of the\nI                   XMIT JCL stream, you must code the SUBCHARS\nI                   parameter and convert /* in your statements.\nI\nI                   DEST=: Identifies the destination for all following\nI                     records until a delimiter stops transmission of\nI                     THE records.\nI\nI                   DLM=cc: cc: Specifies a delimiter to stop the\nI                     transmission of records.\nI\nI                   SUBCHARS=cc: cc: Specifies a substitute for internal\nI                     reader control statements. (JES3 only).\nN\nNExample 1: Simple transmission.\nN-------------------------------\nNIn this example, the records between the XMIT JCL statement and the\nNdelimiter statement (/* in columns 1 and 2) are transmitted to the\nNnode named KGNMVS45.\nN\nD//JOBA     JOB 25FA64,'KEN KAHN'\nD//X1      XMIT DEST=KGNMVS45\nD..\nD(records to be transmitted)\nD.\nD/*\nN\nNExample 3: /* on JES3.\nN----------------------\nNIn this example, the JCL is processed through an internal reader on the\nNsending system. The records between the XMIT JCL statement and the\nNdelimiter statement, which must contain AA in columns 1 and 2 as\nNspecified in the DLM parameter, are transmitted to the node named\nNSANFRAN.\nN\nNTo transmit the /*EOF and /*DEL internal reader control statements,\nN/* had to be replaced with /+ in columns 1 and 2 on both statements\nNin the XMIT JCL stream and SUBCHARS='/+' is coded on the XMIT\nNstatement. The sending system does not recognize /+EOF and /+DEL as\nNinternal reader statements. Then prior to transmission, the sending\nNsystem converted /+ to /* and sent /*EOF and /*DEL to the receiving\nNnode, which can then process the internal reader control statements.\nN\nD//JOBE     JOB NS37,'NYC BX'\nD//X3      XMIT DEST=SANFRAN,DLM=AA,SUBCHARS='/+'\nD..\nD(records to be transmitted)\nD..\nD/+EOF\nD..\nD/+DEL\nDAA                <= End of transmitted data.\nM\nMKenneth Tomiak remark:\nMWhile you can send /*DEL, why bother? Save some resources and do not\nMXMIT something you do not want to execute.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR27": {"ttr": 38411, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:01", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR27\nKJECL\nTz/OS JCL Reference -JES2 Control Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statements\nN=======================\nNCode JES2 control statements with JCL statements to control the\nNinput and output processing of jobs.\nN\nNInternal Reader\nN---------------\nN  /*DEL\nN  /*EOF\nN  /*PURGE\nN  /*SCAN\nN\nNJES2 JECL\nN---------\nN  /*$\u00ddcmd\u00a8\nN  /*JOBPARM\nN  /*MESSAGE\nN  /*NETACCT\nN  /*NOTIFY\nN  /*OUTPUT\nN  /*PRIORITY\nN  /*ROUTE\nN  /*SETUP\nN  /*SIGNOFF\nN  /*SIGNON\nN  /*XEQ\nN  /*XMIT\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2701": {"ttr": 38413, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:02", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2701\nTz/OS JCL Reference\nT-JES2 Control Statement -INTRDR /*DEL Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNINTRDR /*DEL Statement\nN----------------------\nNThis control statement cancels the job, and requests the output from\nNthe job. The job is immediately scheduled for output processing. The\nNoutput will consist of any JCL submitted so far, followed by a\nNmessage indicating that the job has been deleted before execution.\nN\nD/*DEL\nM\nMSA22-7605-15 z/OS MVS Programming: Assembler Services Guide\nMChapter 25. The internal reader\nMClosing the internal reader data set\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2702": {"ttr": 38415, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:02", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2702\nT-JES2 Control Statement -INTRDR /*EOF Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNINTRDR /*EOF Statement\nN----------------------\nNThis control statement delimits the current job and makes it\nNeligible for immediate processing by the JES2 input service.\nNThe internal reader data set remains open.\nN\nD/*EOF\nM\nMSA22-7605-15 z/OS MVS Programming: Assembler Services Guide\nMChapter 25. The internal reader\nMClosing the internal reader data set\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2703": {"ttr": 38417, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:02", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2703\nT-JES2 Control Statement -INTRDR /*PURGE Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNINTRDR /*PURGE Statement\nN------------------------\nNThis control statement is used only by JES2 internal readers. It\nNcancels the current job and schedules it for purge processing;\nNno output is generated for the job.\nN\nD/*PURGE\nM\nMSA22-7605-15 z/OS MVS Programming: Assembler Services Guide\nMChapter 25. The internal reader\nMClosing the internal reader data set\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2704": {"ttr": 38419, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x02\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:02", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2704\nKTYPRUN=SCAN\nT-JES2 Control Statement -INTRDR /*SCAN Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNINTRDR /*SCAN Statement\nN-----------------------\nNThis statement also applies only to JES2 internal readers. It requests\nNthat the current job be scanned for JCL errors, but not executed.\nN\nD/*SCAN\nM\nMSA22-7605-15 z/OS MVS Programming: Assembler Services Guide\nMChapter 25. The internal reader\nMClosing the internal reader data set\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2710": {"ttr": 38421, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00:\\x00:\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:03", "lines": 58, "newlines": 58, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2710\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*$command Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*$command Statement\nN-------------------------\nNUse the command statement to enter a JES2 operator command through the\nNinput stream, the internal reader, or the system console.\nM\nMShould you really be entering JES commands this way? If you are\nMauthorized to issue commands this way, they execute as they are\nMprocessed, not when your job starts.\nN\nD/*$command-verb,operand\u00dd,operand\u00a8...                                   N\nI    command-verb: Specifies the operator command that JES2 is to\nI      perform. You can enter the following JES2 commands in the\nI      input stream:\nI        $A: Display information about currently active jobs.\nI        $B: Logically backspace printer or punch output.\nI        $C: Cancel automatic commands, JOB, output/reader activity.\nI        $D: Display status or definition.\nI        $E: Reset or Restart.\nI        $F: Logically advance printer or punch output.\nI        $G: Go to node and execute command.\nI        $H: Hold JOB(s).\nI        $I: Interrupt printer or punch output.\nI        $L: List JOB output information.\nI        $M: Send commands to other MAS members.\nI        $N: Send commands through the network.\nI        $O: Release or cancel held output groups.\nI        $P: Stop/Purge activity/output processing.\nI        $R: Route JOB output.\nI        $S: Start activity/processing.\nI        $T: Control definitions.\nI        $TRACE: Modify a trace ID.\nI        $VS: Enter MVS system commands through JES2.\nI        $Z: Halt automatic commands, JOB, output/reader activity.\nI\nI    operand: Specifies options for the command. See JES Commands.\nI\nI    N: in column 72 indicates that JES2 is not to repeat the command\nI      on the operator console.\nN\nNExample 1: Display Active Jobs as JES sees them.\nN------------------------------------------------\nD/*$DA,J\nN\nNExample A: Display Active Jobs as MVS sees them.\nN------------------------------------------------\nD/*$VS,'D A,L'\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2711": {"ttr": 38657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x90\\x00\\x90\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:03", "lines": 144, "newlines": 144, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2711\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*JOBPARM Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*JOBPARM Statement\nN------------------------\nNUse the /*JOBPARM statement to specify job-related parameters for JES2.\nN\nD/*JOBPARM {,parameter}...\nI            {BURST | B} = {Y | N}\nI              Specifies the default burst characteristic of all sysout\nI              data sets that JES2 produces for this job. BURST applies\nI              only when the data set is directed to a 3800 Printing\nI              Subsystem equipped with a burster-trimmer-stacker.\nI\nI              Y: Requests that the 3800 output is to be burst into\nI                separate sheets.\nI              N: Requests that the 3800 output is to be in a\nI                continuous fanfold.\nI\nI            {BYTES | M} = nnnnnn\nI              nnnnnn: Specifies the maximum output, in thousands\nI                of bytes, the system is to produce from this job.\nI                The nnnnnn is 1 through 6 decimal numbers from 0\nI                through 999999. When nnnnnn bytes are reached, JES2\nI                gives control to an installation exit routine and\nI                the job might or might not be terminated.\nI\nI            {CARDS | C} = nnnnnnnn\nI              nnnnnnnn: Specifies the maximum number of output\nI                cards to be punched for this job's sysout data sets.\nI                The value is 1 through 8 decimal numbers from 0\nI                through 99999999. When the specified number of cards\nI                is reached, JES2 gives control to an installation\nI                exit routine and the job might or might not be\nI                terminated.\nI\nI            {COPIES | N} = nnn\nI              nnn: Specifies how many copies of the spool lines or\nI                bytes for this job's sysout data sets are to be\nI                printed or punched. The nnn is 1 through 3 decimal\nI                numbers from 1 through 255. An installation can\nI                reduce the upper limit of this value during JES2\nI                initialization.\nI\nI            {FORMS | F} = {xxxxxxxx | STD}\nI              Specifies the print and/or punch forms JES2 is to\nI                use for sysout data sets for which FORMS is not\nI                specified on the DD statement or on a\nI                JES2 /*OUTPUT statement.\nI\nI              xxxxxxxx: Identifies the print or punch forms. The\nI                xxxxxxxx is 1 through 8 alphanumeric or\nI                national ($, #, @) characters.\nI\nI              STD: Indicates that JES2 is to use the default\nI                specified at JES2 initialization.\nI\nI            {LINECT | K} = nnn\nI              nnn: Specifies the maximum number of lines that JES2\nI                is to print on each output page for this job's\nI                sysout data sets. The nnn is 1 through 3 numbers\nI                from 0 through 254.\nI\nI            {LINES | L} = nnnnnn\nI              nnnnnn: Specifies the maximum output, in thousands of\nI                lines, that JES2 is to place in the spool data sets\nI                for this job's sysout data sets. The number is 1\nI                through 6 decimal numbers from 0 through 999999.\nI                When the specified number of lines is reached,\nI                JES2 gives control to an installation exit routine\nI                and the job might or might not be terminated.\nI\nI                The LINES parameter applies only to line-mode data.\nI                See also the PAGES parameter.) If the sysout data\nI                set contains both line-mode and page-mode data,\nI                the lines and pages are counted separately and\nI                checked separately against the limit.\nI\nI            {NOLOG | J}\nI              NOLOG: Requests that JES2 not print the job's\nI                hard-copy log. The job's hard-copy log contains the\nI                JES2 and operator messages about the job's processing.\nI\nI            {PAGES | G} = nnnnnnnn\nI              nnnnnnnn: Specifies the maximum number of output pages\nI                to be printed for this job's sysout data sets. The\nI                number is 1 through 8 decimal numbers from 0 through\nI                99999999. When the specified number of pages is\nI                reached, JES2 gives control to an installation exit\nI                routine and the job might or might not be terminated.\nI\nI            {PROCLIB | P} = ddname\nI              ddname: Requests a JES2 procedure library by its ddname,\nI                as defined in the JES2 procedure used to initialize\nI                JES2. Typically, JES2 procedure library ddnames are\nI                in the format PROCnn, where nn is either 00 or 1\nI                or 2 decimal numbers from 1 through 99. You can,\nI                however, use any valid ddname as long as the name\nI                matches the ddname in the JES2 procedure. The system\nI                retrieves called cataloged procedures from the\nI                requested JES2 procedure library.\nI\nI            {RESTART | E} = {Y | N}\nI              Requests one of the following, if this job is executing\nI                before a re-IPL and JES2 warm start, and the job\nI                cannot restart from a step or checkpoint.\nI\nI              Y: Requests that JES2 queue the job for re-execution\nI                from the beginning of the job.\nI\nI              N: Requests that JES2 take no special action.\nI\nI            {ROOM | R} = xxxx\nI              xxxx: Indicates the programmer's room number. The xxxx\nI                is 1 through 4 alphanumeric characters. JES2 places\nI                the room number on the job's separators so that the\nI                installation can deliver the job's sysout data sets\nI                to the programmer.\nI\nI            {SYSAFF | S} = {cccc | * | *{,IND}) | ANY | (ANY,IND)}\nI              cccc: Indicates the systems that are eligible to process\nI                the job. The parameter indicates from 1 system\nI                affinity representing a JES2 member name, up to the\nI                number of entries that can be coded on a JOBPARM\nI                statement, limited by the number of JES2 members that\nI                can exist in a MAS.\nI\nI            {TIME | T} = nnnn\nI              nnnn: Estimates the job execution time, in minutes of\nI                real time. The nnnn is 1 through 4 decimal numbers\nI                from 0 through 9999. If you omit a TIME parameter and\nI                a time subparameter in the JOB statement accounting\nI                information parameter, JES2 uses an installation\nI                default specified at initialization. If job execution\nI                exceeds the time, JES2 sends a message to the operator.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2712": {"ttr": 38659, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:03", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2712\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*MESSAGE Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*MESSAGE Statement\nN------------------------\nNUse the /*MESSAGE statement to send messages to the operator\nNconsole when JES2 reads in the job.\nN\nD/*MESSAGE message for the now unmonitored console goes here.\nI   message: What it is you wish to convey.\nN\nNRelationship to the /*ROUTE XEQ Statement\nN-----------------------------------------\nNIf the /*MESSAGE statement is in a job that also contains a\nNJES2 /*ROUTE XEQ statement:\nN\nN->Placing the /*MESSAGE statement before the /*ROUTE XEQ statement\nN  directs JES2 to send the message to the operators at the input node\nN  and the execution node.\nN\nN->Placing the /*MESSAGE statement after the /*ROUTE XEQ statement\nN  directs JES2 to send the message only to the operator at the\nN  execution node.\nN\nM\nMLike most shops, yours probably has way too many messages streaming\nMby on the console for any HUMAN to really see this. Pick up the\nMtelephone and call them.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2713": {"ttr": 38661, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x15\\x00\\x15\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:03", "lines": 21, "newlines": 21, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2713\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*NETACCT Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*NETACCT Statement\nN------------------------\nNUse the /*NETACCT statement to specify an account number that is\nNavailable to all the nodes in a network. JES2 uses the account number\nNas is or translates it to local account numbers.\nN\nD/*NETACCT network-account-number\nI   network-account-number: Specifies the job's accounting number. The\nI   network-account-number is 1 through 8 alphanumeric characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2714": {"ttr": 38663, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:04", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2714\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*NOTIFY Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*NOTIFY Statement\nN-----------------------\nNUse the /*NOTIFY statement to direct a job's notification messages to\nNa user.\nN\nD/*NOTIFY whom-to-notify\nI\nI    whom-to-notify: Identifies by {node} and userid who gets\nI      notification messages (JOB termination).\nN\nN/*NOTIFY {nodename{. | : | / | ()}userid }\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2715": {"ttr": 38665, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x01\\x0b\\x01\\x0b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:04", "lines": 267, "newlines": 267, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2715\nKUCS JCLR2281\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*OUTPUT Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*OUTPUT Statement\nN-----------------------\nNUse the /*OUTPUT statement to specify characteristics and options for\nNone or more sysout data sets. This statement supplies processing\nNoptions in addition to and in place of the options specified on the\nNsysout DD statement.\nI\nINote: You should use the OUTPUT JCL statement (// OUTPUT) instead of\nIthe JES2 /*OUTPUT statement because of the OUTPUT JCL statement's\nIenhanced output processing capabilities.\nN\nD/*OUTPUT {,parameter}...\nI            {BURST| B} = {Y | N}\nI              Indicates the default burst characteristic of all sysout\nI                data sets that JES2 produces for this job. BURST\nI                applies only when the data set is directed to a\nI                3800 Printing Subsystem equipped with a\nI                burster-trimmer-stacker.\nI\nI              Y: Requests that the 3800 output is to be burst into\nI                separate sheets.\nI              N: Requests that the 3800 output is to be in a\nI                continuous fanfold.\nI\nI            {CHARS | X} = {,xxxx}\nI              xxxx: Names a font for all output that JES2 prints on\nI                an AFP printer in this job. The xxxx is 1 through 4\nI                alphanumeric or national ($, #, @) characters. Code\nI                one to four names.\nI\nI            {CKPTLNS | E}=nnnnn\nI              nnnnn: Specifies the maximum number of lines or cards\nI                contained in a logical page. The nnnnn is 1 through\nI                5 decimal numbers from 0 through 32,767 for printers\nI                and 1 through 32,767 for punches. The default is\nI                specified in the JES2 initialization parameter for\nI                the device.\nI\nI            {CKPTPGS | P}=nnnnn\nI              nnnnn: Specifies the number of logical pages to be\nI                printed before the next checkpoint is taken. The\nI                nnnnn is 1 through 5 decimal numbers from 1 through\nI                32,767. The default is specified in the JES2\nI                initialization parameter for the device.\nI\nI            {COMPACT | Z}=xx\nI              xx: Specifies a compaction table for JES2 to use when\nI                sending this sysout data set, which must be a systems\nI                network architecture (SNA) data set, to a\nI                SNA remote terminal.\nI\nI            {COPIES | N}=(nnn\u00dd,(\u00dd,group-value\u00a8)\u00a8\nI              Specifies how many copies of the sysout data set are to\nI              be printed in page sequence order, or from an AFP\nI              printer, grouped by page.\nI\nI              If you route a job that has a COPIES parameter, the\nI              parameter will be used only if the receiving node is\nI              a JES2 node.\nI\nI              nn: Specifies how many copies of the sysout data set are\nI                to be printed; each copy will be in page sequence\nI                order. The nnn is 1 through 3 decimal numbers from\nI                1 through 255, subject to an installation-specified\nI                limit. For a data set printed on an AFP printer, JES2\nI                ignores nnn if any group values are specified.\nI\nI              group-value: Specifies how many copies of each page are\nI                to be printed before the next page is printed. Each\nI                group-value is 1 through 3 decimal numbers from\nI                1 through 255. You can code a maximum of eight\nI                group-values. Their sum must not exceed 255 or the\nI                installation-specified limit. The total copies of\nI                each page equals the sum of the group-values.\nI\nI                Note: This subparameter is valid only for output\nI                processed by PSF.\nI\nI            {COPYG | G}=(\u00dd,group-value\u00a8)\nI              group-value: Specifies how many copies of each page are\nI                to be printed before the next page is printed. Each\nI                group-value is 1 through 3 decimal numbers from\nI                1 through 255. You can code a maximum of eight\nI                group-values. Their sum must not exceed 255. The\nI                total copies of each page equals the sum of the\nI                group-values.\nI\nI                Note: This parameter applies only for output processed\nI                by PSF.\nI\nI            {DEST | D}=(\u00dd,destination\u00a8)\nI              destination: Specifies one to four different destinations\nI                for the sysout data set. The destination subparameters\nI                follow:\nI\nI                  ANYLOCAL | LOCAL: Indicates a local node on a local\nI                    device.\nI\nI                  name: Identifies a local or remote device by a\nI                    symbolic name.\nI\nI                  Nnnnn: nnnn is 1 through 4 decimal numbers from 1\nI                    through 1000.\nI\nI                  NnnRmmmm | NnnnRmmm | NnnnnRmm: Identifies a node\nI                    and a remote work station connected to the node.\nI\nI                  nodename.userid | nodename:userid | nodename/userid |\nI                  nodename(userid): Identifies a destination node and\nI                    a TSO/E or VM userid at that node.\nI\nI                  Rnnnn | RMnnnn | RMTnnnn: Identifies a remote\nI                    terminal. nnnn is 1 through 4 decimal numbers\nI                    from 1 through 9999.\nI\nI                  Unnnn: Identifies a local terminal with special\nI                    routing.\nI\nI                  Userid: Identifies a userid at the local node.\nI\nI            {FCB | C}=xxxx\nI              xxxx: Identifies the forms control buffer (FCB) image\nI                JES2 is to use to guide printing of the sysout\nI                data set. The xxxx is 1 through 4 alphanumeric or\nI                national ($, #, @) characters and is the last\nI                characters of a SYS1.IMAGELIB member name:\nI\nI                 ->FCB2xxxx member, for a 3211 Printer, a 3203 Printer\nI                   Model 5, or a printer supported by systems network\nI                   architecture (SNA).\nI                 ->FCB3xxxx member, for a 3800 Printing Subsystem.\nI                 ->FCB4xxxx member, for a 4248 Printer.\nI\nI               IBM provides two standard FCB images. Code STD1 or STD2\nI                 only to request them.\nI\nI                 ->STD1, which specifies 6 lines per inch on an\nI                   8.5-inch-long form. (3211 and 3203-5 only)\nI                 ->STD2, which specifies 6 lines per inch on an\nI                   11-inch-long form. (3211 and 3203-5 only)\nI\nI            {FLASH | O}=(overlay-name\u00dd,count\u00a8) | NONE\nI              Identifies the forms overlay to be used in printing the\nI              sysout data set on a 3800 Printing Subsystem and,\nI              optionally, specifies the number of copies on which the\nI              forms overlay is to be printed.\nI\nI              overlay-name: Identifies the forms overlay frame that the\nI                operator is to insert into the printer before printing\nI                begins.\nI\nI              count: Specifies the number, 1 through 255, of copies that\nI                JES2 is to flash with the overlay, beginning with the\nI                first copy printed.\nI\nI              NONE: Suppresses flashing for this sysout data set.\nI\nI            {FLASHC | Q}=count\nI              count: Specifies the number, 0 through 255, of copies\nI                that JES2 is to flash with the overlay, beginning with\nI                the first copy printed.\nI\nI            {FORMS | F} = {xxxx | STD}\nI              Identifies the forms on which JES2 is to print or punch\nI              the sysout data set.\nI\nI              xxxx: Identifies the print or punch forms. form-name is\nI                1 through 4 alphanumeric or national ($, #, @)\nI                characters.\nI\nI              STD: Indicates that JES2 is to use the default\nI                specified at JES2 initialization.\nI\nI            {INDEX | I}=nn\nI              nn: Sets the left margin for output on a 3211 Printer\nI                with the indexing feature. The width of the print line\nI                is reduced by the INDEX parameter value. The nn\nI                specifies how many print positions the left margin on\nI                the 3211 output is to be indented. nn is a decimal\nI                number from 1 through 31. n=1 indicates flush-left;\nI                n=2 through n=31 indent the print line by n-1\nI                positions.\nI\nI              JES2 ignores the INDEX parameter if the printer is not a\nI                3211 with the indexing feature.\nI\nI              Note: INDEX and LINDEX are mutually exclusive; if you\nI                code both, JES2 uses the value you specified in INDEX.\nI\nI            {LINDEX | L}=nn\nI              nn: Sets the right margin for output on a 3211 Printer\nI                with the indexing feature. The width of the print\nI                line is reduced by the LINDEX parameter value. The nn\nI                specifies how many print positions the right margin\nI                on 3211 output is to be moved in from the full page\nI                width. nn is a decimal number from 1 through 31.\nI                n=1 indicates flush-right; n=2 through n=31 move the\nI                right margin over by n-1 positions.\nI\nI              JES2 ignores the LINDEX parameter on all printers except\nI                the 3211 with the indexing feature.\nI\nI              Note: INDEX and LINDEX are mutually exclusive; if you\nI                code both, JES2 uses the value you specified in INDEX.\nI\nI            {LINECT | K} = nnn\nI              nnn: Specifies the maximum number of lines JES2 is to\nI                print on each output page. The nnn is a number from\nI                0 through 255.\nI\nI               Specify LINECT=0 to keep JES2 from starting a new page\nI                when the number of lines exceeds the JES2\nI                initialization parameter.\nI\nI            {MODIFY | Y} = (module-name\u00dd,trc\u00a8)\nI              Specifies a copy-modification module that tells JES2 how\nI              to print the sysout data set on a 3800 Printing\nI              Subsystem. The module can specify legends, column\nI              headings, blanks, and where and on which copies the data\nI              is to be printed. The module is defined and stored in\nI              SYS1.IMAGELIB using the IEBIMAGE utility program.\nI\nI              module-name: Identifies a copy-modification module in\nI                SYS1.IMAGELIB. The module-name is 1 through 4\nI                alphanumeric or national ($, #, @) characters.\nI\nI              trc: Identifies which table-name in the CHARS parameter\nI                is to be used. This table reference character is 0 for\nI                the first table-name specified, 1 for the second, 2\nI                for the third, or 3 for the fourth.\nI\nI              If you do not specify trc, the default is 0. If the trc\nI              value is greater than the number of table-names in the\nI              CHARS parameter, JES2 uses the first table named in the\nI              CHARS parameter.\nI\nI            {MODTRC | M} = trc\nI              trc: Identifies which table-name in the CHARS parameter\nI                is to be used. This table reference character is 0 for\nI                the first table-name specified, 1 for the second, 2\nI                for the third, or 3 for the fourth.\nI\nI              If you do not specify trc, the default is 0. If the trc\nI              value is greater than the number of table-names in the\nI              CHARS parameter, JES2 uses the first table named in the\nI              CHARS parameter.\nI\nI            {UCS | T} = xxxx\nI              xxxx: Identifies the universal character set (UCS) image\nI                JES2 is to use in printing the sysout data set. The\nI                xxxx is 1 through 4 alphanumeric or national ($, #, @)\nI                characters. See OUTPUT Statement, JCLR2281, for IBM\nI                standard special character set codes.\nI\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2716": {"ttr": 38667, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:04", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2716\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*PRIORITY Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*PRIORITY Statement\nN-------------------------\nNUse the /*PRIORITY statement to assign a selection priority for your\nNjob. Within a job class, a job with a higher priority is selected\nNfor execution sooner.\nI\nIBe considerate and do not use this.\nN\nD/*PRIORITY p\nI    p: Requests a priority. The p is 1 or 2 decimal numbers from 0\nI      through 15. The highest priority is 15.\nI\nI      Follow your installation's rules in coding a priority.\nN\nMAn antiquated method of trying to influence when your job gets\nMselected to execute.\nN\nMIt must precede the JOB statement that it applies to.\nN\nD/*PRIORITY 8\nD//MYJOB JOB (acct),'programmer name',...\nM\nI\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2717": {"ttr": 38669, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:04", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2717\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*ROUTE Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*ROUTE Statement\nN----------------------\nNUse the /*ROUTE statement to specify the destination of sysout data\nNsets that are not routed by a DEST parameter or to identify the\nNnetwork node where the job is to execute.\nN\nD/*ROUTE {PRINT | PUNCH | XEQ}\nI    PRINT: Requests that JES2 route the job's sysout data sets that\nI      are printed.\nI\nI    PUNCH: Requests that JES2 route the job's sysout data sets that\nI      are punched.\nI\nI    XEQ: Requests that JES2 route the job to a network node for\nI      execution.\nI\nI/*ROUTE PRINT dest\nI/*ROUTE PUNCH dest\nI    dest={ANYLOCAL }\nI         {PUNCH} {LOCAL }\nI         {name }\nI         {Nnnnn }\nI         {NnnRmmmm }\nI         {NnnnRmmm }\nI         {NnnnnRmm }\nI         {nodename.userid }\nI         {nodename:userid }\nI         {nodename/userid }\nI         {nodename(userid)}\nI         {Rnnnn }\nI         {RMnnnn }\nI         {RMTnnnn }\nI         {Unnnn }\nI         {Userid }\nI\nI/*ROUTE XEQ dest\nI    dest={Nnnnn }\nI         {nodename.userid }\nI         {nodename:userid }\nI         {nodename/userid }\nI         {nodename(userid)}\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2718": {"ttr": 38913, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00'\\x00'\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:05", "lines": 39, "newlines": 39, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2718\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*SETUP Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*SETUP Statement\nN----------------------\nNUse the /*SETUP statement to identify volumes that the operator should\nNmount before the job is executed. When the job enters the system, JES2\nNissues a message to the operator console, asking the operator to mount\nNthe identified volumes. JES2 then places the job in hold status until\nNthe operator mounts the volumes and releases the job.\nN\nMBack when there were not so many messages going to consoles you could\nMuse the /*SETUP control card to let the operator know what tape\nMvolume serial numbers the job would need. Nowadays, too many messages\nMare produced for any HUMAN to really read them and two other\nMtechnologies did away with this practice.\nN\nM1) Use of catalogued data sets means no one wants to look up what\nM   VOLSESRs will be used and code them in JCL that job scheduling\nM   software is submitting.\nM2) Automated tape devices mount more tapes than people do, and they\nM   do nOt read console messages.\nN\nD/*SETUP \u00dd,serial-number\u00a8\nI    serial-number: Identifies by serial number the volume(s). A volume\nI      serial number is 1 through 6 alphanumeric, national ($, #, @),\nI      or special characters; enclose a serial number that contains\nI      special characters, other than hyphens, in apostrophes. If the\nI      number is shorter than 6 characters, it is padded with trailing\nI      blanks.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2719": {"ttr": 38915, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:05", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2719\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*SIGNOFF Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*SIGNOFF Statement\nN------------------------\nNUse the /*SIGNOFF statement to tell JES2 to end a remote job stream\nNprocessing session. At the completion of the current print and/or\nNpunch streams, JES2 disconnects the remote work station from the\nNsystem. If JES2 is reading jobs from the station when the output\nNcompletes, JES2 disconnects the remote station when the input is\nNcompleted.\nN\nD/*SIGNOFF\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2720": {"ttr": 38917, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x000\\x000\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:05", "lines": 48, "newlines": 48, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2720\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*SIGNON Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*SIGNON Statement\nN-----------------------\nNUse the /*SIGNON statement to tell JES2 to begin a remote job stream\nNprocessing session. For non-multi-leaving remote stations, the\nNterminal transmits the /*SIGNON statement alone as part of the initial\nNconnection process.\nN\nD/*SIGNON dest \u00ddpassword1\u00a8 \u00ddnew-password\u00a8 \u00ddpassword2\u00a8\nI    dest: Specifies the name (one through eight characters) that you\nI      use to refer to the JES2-defined destination. The dest-name must\nI      be defined as a remote work station on the system to which the\nI      terminal is connected.\nI\nI         {REMOTEnnn}\nI         {RMTnnnn }\nI         {RMnnnn }\nI         {Rnnnn }\nI         {NxxRnnnn }\nI         {dest-name}\nI\nI    password1: Specifies the password assigned to a nondedicated\nI      connection that allows the remote station access to JES2 for\nI      remote job stream processing. The installation assigns this\nI      password during system initialization. The operator can change\nI      or delete this password with the $T command.\nI\nI    new-password: Specifies a new password for the remote job entry\nI      (RJE) station that is signing on. If the installation is\nI      controlling the sign on with JES2 password support instead of\nI      RACF, the new password is ignored.\nI\nI    password2: Specifies the current password for the remote station\nI      that is signing on; this password identifies the remote station\nI      as a valid remote job entry (RJE) station. This parameter is\nI      assigned by either RACF, a JES2 initialization parameter (if JES2\nI      password support is used), or the $T command.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2721": {"ttr": 38919, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:05", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2721\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*XEQ Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*XEQ Statement\nN--------------------\nNUse the /*XEQ statement to identify the network node where the job is\nNto execute. It performs the same function as the /*ROUTE XEQ statement.\nN\nD/*XEQ dest\nI    dest: Identifies the network node where the job is to execute.\nN\nNDoes the same as /*ROUTE XEQ. Routes the job to another node for\nNexecution.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2722": {"ttr": 38921, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:06", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2722\nTz/OS JCL Reference\nT-JES2 Control Statement -JECL /*XMIT Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES2 Control Statement\nN======================\nNJECL /*XMIT Statement\nN---------------------\nNUse the /*XMIT statement to transmit records from a JES2 node to\nNeither another JES2 node or an eligible non-JES2 node, for example,\nNa VM or JES3 node. JES2 does not process or check the records for\nNJES2 validity. JES2 builds header and trailer records from information\nNon the JOB statement immediately preceding the /*XMIT statement. Then\nNJES2 transmits all records after the /*XMIT statement.\nN\nD/*XMIT dest\nI    dest: Identifies the destination node.\nN       {Nnnnn } { DLM=xx}\nN       {nodename }\nN       {nodename.userid }\nN       {nodename:userid }\nN       {nodename/userid }\nN       {nodename(userid) }\nN       {nodename.vmguestid }\nN       {nodename:vmguestid }\nN       {nodename/vmguestid }\nN       {nodename(vmguestid)}\nN       {name }\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR28": {"ttr": 38923, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:06", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR28\nKJECL\nTz/OS JCL Reference -JES3 Control Statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statements\nN=======================\nNCode JES3 control statements with JCL statements to control the\nNinput and output processing of jobs.\nN\nNInternal Reader\nN---------------\nN  /*DEL\nN  /*EOF\nN\nNJES2 JECL\nN---------\nN  //**\u00ddcommand-verb\u00a8\nN  //*DATASET\nN  //*ENDDATASET\nN  //*FORMAT PR\nN  //*FORMAT PU\nN  //*MAIN\nN  //*NET\nN  //*NETACCT\nN  //*OPERATOR\nN  //**PAUSE\nN  //*PROCESS\nN  //*ROUTE\nN  /*SIGNOFF\nN  /*SIGNON\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2801": {"ttr": 38925, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x003\\x003\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:06", "lines": 51, "newlines": 51, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2801\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //**command Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //**command Statement\nN--------------------------\nNUse the command statement to enter a JES3 operator command through the\nNinput stream.\nN\nNJES3 usually executes an in-stream command as soon as it is read.\nNTherefore, the command will not be synchronized with the execution of\nNany job or step in the input stream. To synchronize a command with job\nNprocessing, tell the operator the commands you want and when they\nNshould be issued, then let the operator enter them from the console.\nM\nMShould you really be entering JES commands this way? If you are\nMauthorized to issue commands this way, they execute as they are\nMprocessed, not when your job starts.\nN\nD//**command-verb,operand\nI    *command-verb: Indicates one of the following JES3 commands. Do\nI      not specify a *DUMP or *RETURN command on a JES3 command\nI      statement.\nI\nI        Command     Short Form\nI        CALL         X\nI        CANCEL       C\nI        DELAY        D\nI        DISABLE      H\nI        ENABLE       N\nI        ERASE        E\nI        FAIL\nI        FREE\nI        INQUIRY      I\nI        MESSAGE      Z\nI        MODIFY       F\nI        RESTART      R\nI        SEND T\nI        START        S\nI        SWITCH\nI        VARY         V\nI\nI    operand: Specifies an operand that pertains to the command-verb.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2811": {"ttr": 38927, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00G\\x00G\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:24", "lines": 71, "newlines": 71, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2811\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*DATASET Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170824\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*DATASET Statement\nN-------------------------\nNUse the //*DATASET statement to identify the beginning of an in-stream\nNdata set, which can contain JCL statements or data. (The //*ENDDATASET\nNstatement ends the in-stream data set.) The data set can be used as\nNinput to a dynamic support program (DSP), such as OUTSERV.\nN\nD//*DATASET DDNAME=ddname\u00dd,parameter\u00a8\nI    DDNAME=ddname: Specifies the name of the in-stream data set that\nI      follows the //*DATASET statement.\nI\nI    parameter:\nI      MODE= {E | C}: Defines the card-reading mode.\nI        E: Indicates that JES3 is to read the statements as EBCDIC with\nI           validity checking. E is the default if the MODE parameter is\nI           omitted.\nI\nI        C: Indicates that JES3 is to read the statements in card image\nI           form, that is, in column binary or data mode 2.\nI\nI        MODE=C is not valid for jobs\nI\nI      J= {YES | NO}: Indicates how JES3 is to recognize the end of the\nI        data set. If you specify MODE=C, JES3 ignores the J parameter;\nI        therefore, use a //*ENDDATASET statement to end the data set.\nI\nI        YES: Indicates that a //*ENDDATASET statement ends the data\nI          set. Specify YES when JOB statements appear in the data set.\nI\nI        NO: Indicates that a JOB statement ends the data set. NO is\nI          the default if the J parameter is omitted, unless MODE=C\nI          is specified.\nI\nI      CLASS= {NO | MSGCLASS | class}:Identifies the output class\nI        JES3 is to use for the data set.\nI\nI        NO: Indicates that the system is to assign an output class. If\nI          you omit the CLASS parameter, the default is NO.\nI\nI        MSGCLASS: Requests the output class in the MSGCLASS parameter\nI          on the JOB statement.\nI\nI        class: Specifies the output class.\nN\nNExample 1: In-stream data set for Output Service.\nN-------------------------------------------------------------\nNIn this example, the //*DATASET statement marks the beginning of the\nNin-stream data set MYPRINT. The //*FORMAT PR statement requests five\nNcopies of it. The //*ENDDATASET statement marks the end of the\nNdata set.\nN\nD//*PROCESS OUTSERV\nD//*DATASET DDNAME=MYPRINT,J=YES\nD..\nDdata\nD..\nD//*ENDDATASET\nD//*FORMAT PR,DDNAME=MYPRINT,COPIES=5\nD//STEP1 EXEC ...\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2812": {"ttr": 38929, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x12\\x00\\x12\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:24", "lines": 18, "newlines": 18, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2812\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*ENDDATASET Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*ENDDATASET Statement\nN----------------------------\nNUse the //*ENDDATASET statement to indicate the end of an in-stream\nNdata set that was begun with a //*DATASET statement.\nN\nD//*ENDDATASET\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2813": {"ttr": 38931, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x12\\x00\\x12\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:25", "lines": 18, "newlines": 18, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2813\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*ENDPROCESS Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*ENDPROCESS Statement\nN----------------------------\nNUse the //*ENDPROCESS statement to indicate the end of a series\nNof //*PROCESS statements in a job.\nN\nD//*ENDPROCESS \u00ddcomments\u00a8\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2814": {"ttr": 38933, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00L\\x00L\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:25", "lines": 76, "newlines": 76, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2814\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*FORMAT PR Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*FORMAT PR Statement\nN---------------------------\nNUse the //*FORMAT PR statement to specify to JES3 processing\nNinstructions for sysout data sets that are printed. These\nNinstructions permit special processing of sysout data sets, such as:\nN\nN->Multiple destinations.\nN->Multiple copies of output with different attributes.\nN->Forced single or double space control.\nN->Printer overflow checking.\nN\nD//*FORMAT PR\nN\nN\nD//*FORMAT PR,DDNAME= {ddname } {,parameter}...\nD         {stepname.ddname } ,parameter}...\nD         {stepname.procstepname.ddname}\nD         {JESYSMSG }\nD         {JESJCL }\nD         {JESMSGLG }\nD\nD//*FORMAT PR,DDNAME={,parameter}...\nD         { CARRIAGE= {carriage-tape-name} }\nD         { {6 } }\nD         { FCB= {image-name} }\nD         { {6 } }\nD         CHARS= {STANDARD }\nD         {table-name }\nD         {(table-name{,table-name}...)}\nD         CHNSIZE= {DS }\nD         {(nnn{,mmm})}\nD         COMPACT=compaction-table-name\nD         CONTROL= {PROGRAM}\nD         {SINGLE }\nD         {DOUBLE }\nD         {TRIPLE }\nD         COPIES= {nnn }\nD         {(nnn,(group-value{,group-value}...))}\nD         {(group-value{,group-value}...) }\nD         DEST= {ANYLOCAL }\nD         {device-name }\nD         {device-number }\nD         {group-name }\nD         {nodename{.remote} }\nD         {(type{,device-name}) }\nD         {(type{,device-number})}\nD         {(type{,group-name}) }\nD         EXTWTR=name\nD         FLASH= {STANDARD }\nD         {overlay-name }\nD         {(overlay-name{,count})}\nD         FORMS= {STANDARD }\nD         {form-name}\nD         MODIFY= {module-name }\nD         {(module-name{,trc})}\nD         OVFL= {ON }\nD         {OFF}\nD         PRTY=nnn\nD         STACKER= {STANDARD}\nD         {S }\nD         {C }\nD         THRESHLD=limit\nD         TRAIN= {STANDARD }\nD         {train-name}\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2815": {"ttr": 38935, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:25", "lines": 31, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2815\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*FORMAT PU Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*FORMAT PU Statement\nN---------------------------\nUse the //*FORMAT PU statement to specify to JES3 processing\nNinstructions for sysout data sets that are punched. These\nNinstructions permit special processing of sysout data sets,\nNsuch as:\nN\nN->Multiple destinations.\nN->Multiple copies of output with different attributes.\nN\nD//*FORMAT PU\nN\nN\nD//*FORMAT PU,DDNAME= {ddname } {,parameter}...\nD         {stepname.ddname } ,parameter}...\nD         {stepname.procstepname.ddname}\nD         {JESYSMSG }\nD         {JESJCL }\nD         {JESMSGLG }\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2816": {"ttr": 39169, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x01\\x99\\x01\\x99\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:25", "lines": 409, "newlines": 409, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2816\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*MAIN Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*MAIN Statement\nN----------------------\nNUse the //*MAIN statement to define the processor requirements for the\nNcurrent job. Many of the parameters are used to override parameters on\nNthe JES3 STANDARDS initialization statement.\nN\nD//*MAIN {,parameter}\nI    ACMAIN=processor-id: Identifies the job with the specified\nI      processor, even though the job was not submitted from or run on\nI      that processor.\nI      processor-id: Requests a processor in the complex.\nI\nI    BYTES=: Specifies the maximum number\nI      of bytes of data to be spooled from this job's sysout data sets\nI      and the action to be taken if the maximum is exceeded.\nI      {({nnnnnn}{,WARNING}{,mmm})}\nI      {({nnnnnn}{,W}{,mmm}) }\nI      {({nnnnnn}{,CANCEL}) }\nI      {({nnnnnn}{,C}) }\nI      {({nnnnnn}{,DUMP}) }\nI      {({nnnnnn}{,D}) }\nI\nI      nnnnnn: Specifies the number of bytes in thousands. nnnnnn is\nI        1 through 6 decimal numbers from 1 through 999999.\nI      WARNING or W: If the maximum is exceeded, requests that JES3\nI        issue an operator warning message and continue processing.\nI      mmm: Specifies the frequency that an operator warning message\nI        is to be issued after the maximum specified by nnnnnn is\nI        exceeded. mmm is a multiple of 10 in the range 10 to 100.\nI        mmm is a percentage of nnnnnn that is used to calculate the\nI        number of additional bytes between warning messages.\nI      CANCEL or C: If the maximum is exceeded, requests that JES3\nI        cancel the job.\nI      DUMP or D: If the maximum is exceeded, requests that JES3 cancel\nI        the job and ask for a storage dump.\nI\nI    CARDS=: Specifies the maximum number\nI      of cards to be punched from this job's sysout data sets and the\nI      action to be taken if the maximum is exceeded.\nI      {({nnnn}{,WARNING}{,mmm})}\nI      {({nnnn}{,W}{,mmm}) }\nI      {({nnnn}{,CANCEL}) }\nI      {({nnnn}{,C}) }\nI      {({nnnn}{,DUMP}) }\nI      {({nnnn}{,D}) }\nI\nI      nnnn: Specifies the number of cards in hundreds. nnnn is 1\nI        through 4 decimal numbers from 1 through 9999.\nI      WARNING or W: If the maximum is exceeded, requests that JES3\nI        issue an operator warning message and continue processing.\nI      mmm: Specifies the frequency that an operator warning message\nI        is to be issued after the maximum specified by nnnnnn is\nI        exceeded. mmm is a multiple of 10 in the range 10 to 100.\nI        mmm is a percentage of nnnnnn that is used to calculate the\nI        number of additional bytes between warning messages.\nI      CANCEL or C: If the maximum is exceeded, requests that JES3\nI        cancel the job.\nI      DUMP or D: If the maximum is exceeded, requests that JES3 cancel\nI        the job and ask for a storage dump.\nI\nI    CLASS=class-name\nI      class-name: Specifies the job class for this job. class-name is\nI        1 through 8 characters.\nI\nI    DEADLINE= {(time,type{,date}) }: Specifies when the job is\nI      required.\nI    {(time,type{,rel,cycle})}\nI      time: Specifies the deadline time, expressed as one of the\nI        following:\nI\nI        nM The job is to be scheduled within n minutes. n is 1 through\nI          4 numbers from 0 through 1440.\nI\nI        nH The job is to be scheduled within n hours. n is 1 or 2\nI          numbers from 0 through 24.\nI\nI        hhhh: The job is to be scheduled by the time of day, hhhh, in\nI          24-hour clock time (0800 is 8:00 a.m.). hhhh is from 0000\nI          (start of the day) through 2400 (end of the day).\nI\nI      type: Identifies the deadline algorithm. The deadline algorithm\nI        is defined by the installation, controls how the job's\nI        priority is increased, and is one character:\nI        A through Z or 0 through 9. If the specified algorithm is not\nI        defined, JES3 abnormally terminates the job.\nI\nI      date: Specifies the date, in one of the following formats, when\nI        the time parameter takes effect.\nI\nI        mm/dd/yyyy: where mm is the month (01-12), dd the day (01-31),\nI          and yyyy the 4-digit year (for example, 2017). Leading\nI          zeroes are required in the day and month fields.\nI\nI      rel: Specifies on which day within a cycle the deadline falls.\nI        rel is 1 through 3 numbers from 1 through 366. The value of\nI        rel depends on the specified cycle, as follows:\nI\nI        cycle: Specifies the length of a cycle. cycle is coded as\nI          WEEKLY, MONTHLY, or YEARLY.\nI\nI          ->WEEKLY: Sunday is day 1; Saturday is day 7. If rel is\nI            greater than 7, it defaults to 7.\nI\nI          ->MONTHLY: Day 1 is the first day of the month. Days\nI            29, 30, and 31 are treated as the last day of the month.\nI            If rel is greater than 31, it defaults to 31.\nI\nI          ->YEARLY: Day 1 is January 1; day 365 is December 31, for\nI            non-leap years, and day 366 is December 31, for leap\nI            years. If rel is greater than 365, it defaults to 365\nI            for non-leap years or 366 for leap years.\nI\nI    EXPDTCHK= {YES | NO}\nI      Indicates whether or not JES3 is to perform expiration date\nI      checking for scratch output tape volumes with IBM standard\nI      labels (SL).\nI\nI      YES: Requests expiration date checking. Tape volumes premounted\nI        for SL scratch requests must have expired dates.\nI\nI      NO: Requests that expiration dates not be checked.\nI\nI    FAILURE=:Indicates the job recovery option to be used if the\nI      system fails. If you do not code a FAILURE parameter on the\nI      //*MAIN statement, JES3 assigns the job the default failure\nI      option, which is defined during JES3 initialization for\nI      each job class. (See also the RD parameter on the JOB\nI      statement.)\nI\nI      {RESTART}: Requests that JES3 restart the job when the failing\nI        processor is restarted. Do not specify RESTART for jobs that\nI        use the DEQ at DEMOUNT facility for tape volumes.\nI\nI      {CANCEL }: Requests that JES3 print the job and then cancel\nI        the job.\nI\nI      {HOLD }: Requests that JES3 hold the job for restart.\nI\nI      {PRINT }: Requests that JES3 print the job and then hold the\nI        job for restart.\nI\nI    FETCH=: Determines the fetch messages that will be issued to the\nI      operator for disk and tape volumes for this job.\nI\nI      {ALL }: Requests that JES3 issue fetch messages to the operator\nI        for all removable volumes specified in DD statements that\nI        request JES3-setup devices. This subparameter does not apply\nI        to permanently resident volumes.\nI\nI      {NONE }:Requests that JES3 not issue fetch messages.\nI\nI      {SETUP }: Requests that JES3 issue fetch messages to the\nI        operator for the volumes specified in all DD statements\nI        identified in the //*MAIN SETUP parameter. If you code\nI        FETCH=SETUP without also coding the //*MAIN SETUP\nI        parameter, JES3\nI\nI      {(ddname{,ddname}...) }: Requests that JES3 issue fetch\nI        messages for only the volumes specified in DD statement ddname.\nI\nI      {/(ddname{,ddname}...)}: Requests that JES3 not issue fetch\nI        messages for any volumes specified in DD statement ddname.\nI\nI    HOLD= {YES | NO}:\nI      YES: Indicates that the job is to enter the system in\nI        operator-hold status and be withheld from processing until\nI        the operator requests its release. However, if an error\nI        occurs during input service processing, the job is not held\nI        for operator intervention.\nI\nI        This parameter has the same function as TYPRUN=HOLD on\nI        the JOB statement.\nI\nI      NO: Indicates that the job is to enter the system normally.\nI        Processing does not require operator intervention. If the\nI        HOLD parameter is omitted, NO is the default.\nI\nI    IORATE= {LOW | MED | HIGH}: Indicates the I/O-to-processor ratio\nI      for a job. Use this parameter to balance the mixture of jobs\nI      selected for execution on the processor.\nI\nI    JOURNAL= {YES | NO}:Indicates whether or not JES3 is to create\nI      a job journal for the job.\nI\nI      YES: Indicates that the job is to have a job journal.\nI\nI      NO: Indicates that the job is not to have a job journal.\nI\nI    LINES=: Indicates the maximum number of lines of data to be\nI      printed from this job's sysout data sets and the action to\nI      be taken if the maximum is exceeded.\nI      {({nnnn}{,WARNING}{,mmm})}\nI      {({nnnn}{,W}{,mmm}) }\nI      {({nnnn}{,CANCEL}) }\nI      {({nnnn}{,C}) }\nI      {({nnnn}{,DUMP}) }\nI      {({nnnn}{,D}) }\nI\nI      nnnn: Specifies the number of bytes in thousands. nnnnnn is\nI        1 through 6 decimal numbers from 1 through 9999.\nI      WARNING or W: If the maximum is exceeded, requests that JES3\nI        issue an operator warning message and continue processing.\nI      mmm: Specifies the frequency that an operator warning message\nI        is to be issued after the maximum specified by nnnnnn is\nI        exceeded. mmm is a multiple of 10 in the range 10 to 100.\nI        mmm is a percentage of nnnnnn that is used to calculate the\nI        number of additional bytes between warning messages.\nI      CANCEL or C: If the maximum is exceeded, requests that JES3\nI        cancel the job.\nI      DUMP or D: If the maximum is exceeded, requests that JES3 cancel\nI        the job and ask for a storage dump.\nI\nI    LREGION=nnnnK\nI      nnnnK: Specifies the approximate size of the largest step's\nI        working set in real storage during execution. LREGION\nI        (logical region) is used by JES3 to improve scheduling on\nI        the processor. The nnnn is 1 through 4 decimal numbers that\nI        indicate the size in kilobytes (1 kilobyte = 1024 bytes).\nI\nI    ORG= {group-name | {nodename{.remote}}: Indicates that the job's\nI      sysout data sets are to be directed to the named group or\nI      network node. Otherwise, the job's sysout data sets are directed\nI       to the group of devices or node from which the job originated.\nI\nI      group-name: Specifies an origin group.\nI\nI      nodename: Specifies a network node. nodename is 1 through 8\nI       characters.\nI\nI       remote: Specifies a remote work station or VM userid. remote\nI         is 1 through 8 characters and must be separated from the\nI         nodename by a period.\nI\nI    PAGES=: Indicates the maximum number of pages to be printed for\nI      this job's sysout data sets and the action to be taken if the\nI      maximum is exceeded.\nI\nI      {({nnnnnnnn}{,WARNING}{,mmm})}\nI      {({nnnnnnnn}{,W}{,mmm}) }\nI      {({nnnnnnnn}{,CANCEL}) }\nI      {({nnnnnnnn}{,C}) }\nI      {({nnnnnnnn}{,DUMP}) }\nI      {({nnnnnnnn}{,D}) }\nI\nI      nnnnnnnn: Specifies the number of pages. nnnnnnnn is 1 through\nI        8 decimal numbers from 1 through 16777215.\nI      WARNING or W: If the maximum is exceeded, requests that JES3\nI        issue an operator warning message and continue processing.\nI      mmm: Specifies the frequency that an operator warning message\nI        is to be issued after the maximum specified by nnnnnn is\nI        exceeded. mmm is a multiple of 10 in the range 10 to 100.\nI        mmm is a percentage of nnnnnn that is used to calculate the\nI        number of additional bytes between warning messages.\nI      CANCEL or C: If the maximum is exceeded, requests that JES3\nI        cancel the job.\nI      DUMP or D: If the maximum is exceeded, requests that JES3 cancel\nI        the job and ask for a storage dump.\nII\nI    PROC= {ST | XX}: Names the procedure library that the system is\nI      to search for cataloged procedures called by EXEC statements\nI      in the job. If a procedure cannot be found in the named library,\nI      JES3 abnormally terminates the job.\nI\nI      ST: Indicates the standard procedure library: SYS1.PROCLIB.\nI\nI      xx: Identifies the last 2 characters of the ddname of a procedure\nI        library. xx is defined by the installation (IATPLBxx) in the\nI        procedure used to start JES3. If this parameter is coded, only\nI        the specified library is searched; SYS1.PROCLIB is not\nI        searched.\nI\nI    RINGCHK= {YES | NO}: Indicates whether or not JES3 is to check the\nI      status of the tape reel ring for tape devices set up by JES3.\nI\nI      YES: Indicates that a validation check is to be made. If the\nI        RINGCHK parameter is omitted, YES is the default.\nI\nI      NO: Indicates that ring checking is to be by-passed for this job.\nI\nI    SETUP= : Modifies the standard setup algorithm used in assigning\nI      devices to a job before its execution.\nI\nI      {JOB }: Requests job setup, which is allocation of all\nI        JES3-managed devices required in the job before the job\nI        executes. JES3 mounts the initial volumes necessary to run all\nI        steps before the job executes. JOB overrides the SETUP\nI        parameter on the JES3 STANDARDS initialization statement.\nI\nI      {HWS }: Requests high watermark setup, which is allocation of\nI        the minimum number of devices required to run the job. The\nI        minimum number is equal to the greatest number of devices of\nI        each type needed for any one job step. High watermark setup\nI        does not cause premounting of all mountable volumes.\nI\nI      {THWS }: Requests high watermark setup for tapes but job\nI        setup for disks.\nI\nI      {DHWS }: Requests high watermark setup for disks but job\nI        setup for tapes.\nI\nI      {(stepname.ddname{,stepname.ddname}...) }\nI      {(stepname.procstepname.ddname{,stepname.procstepname.ddname}...) }\nI      {/(stepname.ddname{,stepname.ddname}...) }\nI      {/(stepname.procstepname.ddname{,stepname.procstepname.ddname}...)}\nI        Specifies explicit setup, which is allocation of the volumes\nI        needed for a DD statement before the job executes. JES3\nI        premounts the indicated volumes. When requesting explicit\nI        setup, specify enough devices so that JES3 can allocate all\nI        the required devices at any one time. If too few devices are\nI        specified, JES3 cancels the job.\nI\nI    SPART=partition-name: Indicates the spool partition in which\nI      JES3 is to allocate spool space to this job.\nI\nI      partition-name: Specifies the name of the spool partition.\nI        partition-name is 1 through 8 characters and must match a\nI        partition name specified during JES3 initialization. If the\nI        name does not match, JES3 ignores the SPART parameter and\nI        uses the installation default.\nI\nI    SYSTEM=: Indicates the processor that is to execute this job. If\nI      a specific processor is named, the processor name must also be\nI      specified on the CLASS initialization statement for the job\nI      class.\nI\nI      {ANY }: Indicates any global or local system that satisfies\nI        the job's requirements.\nI      {JGLOBAL }: Indicates that the job is to run on the global\nI        processor only.\nI      {JLOCAL }: Indicates that the job is to run on a local\nI        processor only.\nI      {(main-name{,main-name}...) }: Indicates that the job is to\nI        run on the named processor or processors.\nI      {/(main-name{,main-name}...)}: Indicates that the job is not\nI        to run on the named processor or processors.\nI\nI    THWSSEP=: Indicates whether or not you want scratch tape requests\nI        and specific tape requests separated and whether you want\nI        scratch tapes of different media types separated during high\nI        watermark processing. This parameter is valid only if high\nI        watermark setup (HWS or THWS) is specified on the SETUP\nI        parameter or defined at JES3 initialization.\nI      {IGNORE }: Specifies that JES3 is not to separate scratch and\nI        specific tape requests and not separate scratch tape requests\nI        of different media types during high watermark processing.\nI        Both scratch and specific tape requests and scratch requests\nI        of different media types can be allocated on the same tape\nI        drive.\nI      {PREFER }: Specifies that JES3 attempt to allocate scratch and\nI        specific tape requests on separate tape drives and attempt\nI        to allocate scratch tape requests of different media types\nI        on separate tape drives without allocating additional\nI        devices. If JES3 cannot separate the requests, scratch and\nI        specific tape requests and scratch tape requests of different\nI        media types are allocated on the same tape drive.\nI      {REQUIRE}: Specifies that JES3 should not allocate scratch and\nI        specific tape requests on the same tape drive and not allocate\nI        scratch tape requests of different media types on the same\nI        tape drive, even if JES3 must allocate additional tape drives\nI        to satisfy the request.\nI\nI    TRKGRPS=(primary-qty,second-qty): Specifies the number of track\nI      groups to be assigned to the job. A track group is a number of\nI      spool space allocation units. The size of the track group is\nI      defined in the GRPSZ parameter on the JES3 BUFFER or SPART\nI      initialization statement.\nI\nI      primary-qty: Specifies the number of track groups to be\nI        initially allocated. This quantity is one decimal number\nI        from 1 through 9.\nI      second-qty: Specifies the number of track groups to be\nI        allocated when the currently allocated groups are filled\nI        and more space is needed. This quantity is one decimal\nI        number from 1 through 9.\nI\nI    TYPE= {ANY | VS2}: Indicates the control program that is to\nI      execute this job. If you omit a TYPE parameter, the job runs\nI      under the control program used for the job's class.\nI\nI      ANY: Indicates that JES3 is to use any control program that\nI        satisfies the job's requirements. In present systems, JES3\nI        schedules the job on MVS.\nI      VS2: Indicates that JES3 is to schedule the job on MVS.\nI\nI    UPDATE=(dsname{,dsname}...): Identifies the procedure library\nI      data set(s) that this job is to update. This parameter causes\nI      all jobs using the identified data set and any concatenated\nI      data sets to be held until the update is complete.\nI\nI      dsname: Specifies the data set name. The identified data set\nI        cannot be concatenated to another data set.\nI\nI    USER=userid: Identifies the job with the specified TSO/E user,\nI      even though the job was not submitted via TSO/E by that user.\nI\nI      userid: Identifies a TSO/E user. userid is 1 through 7\nI        alphanumeric or national ($, #, @) characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2817": {"ttr": 39172, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x8a\\x00\\x8a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:26", "lines": 138, "newlines": 138, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2817\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*NET Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*NET Statement\nN---------------------\nNUse the //*NET statement to define the dependencies between\nNjobs in a dependent job control (DJC) network. JES3 sets up a network\nNof dependent jobs and executes them in a specific order. (Once set up,\nNthe structure of a DJC network cannot be changed unless all of the jobs\nNin the network are resubmitted.) Jobs belonging to a DJC network cannot\nNbe registered with the automatic restart manager (ARM).\nN\nD//*NET {NETID | ID} =name{,parameter}...\nI    name: Specifies the name of the DJC network for this job. name\nI      is 1 through 8 characters; the first character must be\nI      alphabetic. All jobs put into the system with the same NETID\nI      name form a DJC network. To add a job to an existing DJC\nI      network, specify the NETID name for that job.\nI\nI    ABCMP | AC = {NOKP | KEEP}: Indicates what action JES3 is to take\nI      if the job abnormally terminates.\nI\nI      NOKP: Indicates that JES3 is to purge the DJC network if the job\nI        abnormally terminates and has not been resubmitted by the time\nI        the other jobs in the network have completed. JES3 purges the\nI        network unless successor jobs or subnetworks are missing. If\nI        the ABCMP parameter is omitted, NOKP is the default.\nI      KEEP: Indicates that the DJC network is to be kept in the system\nI        until (1) the job is resubmitted and completes normally or (2)\nI        the operator forces the network from the system. Use KEEP to\nI        make sure that the network is not purged until the operator\nI        takes proper action.\nI\nI    ABNORMAL | AB = {D | F | R}\nI    NORMAL | NC = {D| F | R}:\nI    Indicates the action JES3 is to take for this job when any\nI      predecessor job completes execution normally or abnormally.\nI      If the ABNORMAL parameter is omitted, the default is R,\nI      and, if the NORMAL parameter is omitted, the default is D.\nI\nI      D: Requests that JES3 decrease this job's NHOLD count, which\nI        indicates the number of predecessors for this job. When the\nI        NHOLD count becomes zero, JES3 can schedule this job.\nI      F: Requests that JES3 flush this job and its successor jobs\nI        from the system. JES3 cancels the job, prints any output,\nI        and cancels all successor jobs presently in the system,\nI        regardless of their normal or abnormal specifications.\nI        However, JES3 admits into the system all successor jobs\nI        that enter after the DJC network has been flushed. To flush\nI        those jobs, the operator must cancel the jobs or the network.\nI      R: Requests that JES3 retain this job in the system and not\nI        decrease the NHOLD count. R suspends the job and its\nI        successor jobs from scheduling until either the predecessor\nI        job is resubmitted or the operator decreases the NHOLD count.\nI\nI    DEVPOOL=( {ANY | NET} {,device-name,n}...: Identifies devices to\nI      be dedicated to this DJC network. The system allocates these\nI      devices only to jobs in the network. The DEVPOOL parameter should\nI      be coded on the //*NET statement that establishes the network; it\nI      is ignored on other //*NET statements.\nI\nI      ANY: Indicates that jobs in the network can use any dedicated or\nI        undedicated device. JES3 tries to allocate from the dedicated\nI        pool before allocating any undedicated devices.\nI      NET: Indicates that jobs can use only devices dedicated to the\nI        network.\nI      device-name,n: Identifies a dedicated device. Code as many\nI        device-names with numbers as will fit on one statement.\nI        device-name specifies (1) a device name defined to JES3 by\nI        the installation during initialization or (2) a device-type\nI        defined to the system in HCD. n is the number of named\nI        devices.\nI\nI        n: is a number from 1 through 32,767.\nI\nI    DEVRELSE= {YES | NO}: Indicates when devices dedicated to the DJC\nI      network are to be released. The DEVRELSE parameter can be coded\nI      in several jobs in the network, but must not be coded in the\nI      first job. If no network job containing DEVRELSE=YES completes,\nI      the system releases the devices when it purges the network.\nI\nI      YES: Requests that JES3 release all devices at the end of this\nI        job. Completion of any job that specified DEVRELSE=YES causes\nI        the devices dedicated to the network to be released.\nI      NO: Requests that JES3 release all devices only when the last\nI        job in the network ends.\nI\nI    NETREL | NR =(netid,jobname): Indicates that this job must be\nI      executed before the named job in another DJC network can be\nI      executed. The NETREL parameter can be specified only once for\nI      each job of a DJC network.\nI\nI      netid: Identifies the NETID for the successor job.\nI      jobname: Names the JOB statement for the successor job.\nI\nI    NHOLD | HC =n: Indicates the number of predecessor job completions\nI      required before this job can be released for scheduling. The\nI      predecessor number can include jobs from another DJC network.\nI\nI      n: is a number from 0 through 32,767.\nI\nI    NRCMP | PC = {HOLD } NOHO | FLSH}: Indicates that a network job\nI      that completed normally is being resubmitted and that JES3 must\nI      erase all references to the job before the job reenters the\nI      network.\nI\nI      HOLD: Indicates that JES3 is to hold the job until it is released\nI        by the operator.\nI      NOHO: Indicates that JES3 is to allow the job to be scheduled as\nI        system resources become available.\nI      FLSH: Indicates that JES3 is to flush the job from the system.\nI\nI    OPHOLD | OH = {NO | YES}\nI      NO Indicates that the job is to be processed normally without\nI        operator intervention. If OPHOLD is omitted, NO is the default.\nI      YES: Indicates that JES3 is to hold the job until it is released\nI        by the operator.\nI\nI    RELEASE | RL =(,jobname}: Indicates that this job must be executed\nI      before the named job(s) in this DJC network can be executed.\nI\nI      jobname: Names the JOB statement for a successor job. You can\nI        specify from 1 through 50 successor jobnames.\nI\nI    RELSCHCT | RS =n : Controls early set up of a dependent job's\nI      resources. Set up begins when the NHOLD count becomes less than\nI      or equal to n.\nI\nI      n is a number from 1 through 32,767.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2818": {"ttr": 39174, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00&\\x00&\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:26", "lines": 38, "newlines": 38, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2818\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*NETACCT Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*NETACCT Statement\nN-------------------------\nNUse the //*NETACCT statement to specify accounting information that\nNJES3 is to transmit with a job to another node in the network.\nN\nD//*NETACCT \u00dd,parameter\u00a8\nI           The parameters are:\nI             PNAME=programmer's-name\nI             ACCT=number\nI             BLDG=address\nI             DEPT=dept\nI             ROOM=room\nI             USERID=userid\nI\nI             PNAME=programmer's-name: Identifies the programmer.\nI               programmer's-name is 1 through 20 characters.\nI             ACCT=number: Gives the network account number. number is\nI               1 through 8 characters.\nI             BLDG=address: Gives the programmer's building address.\nI               address is 1 through 8 characters.\nI             DEPT=dept: Gives the programmer's department number. dept\nI               is 1 through 8 characters.\nI             ROOM=room: Gives the programmer's room number. room is\nI               1 through 8 characters.\nI             USERID=userid: Gives the programmer's network userid.\nI               userid is 1 through 8 characters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2819": {"ttr": 39176, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:26", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2819\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //*OPERATOR Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*OPERATOR Statement\nN--------------------------\nNUse the //*OPERATOR statement to issue a message to the operator.\nNColumns 1 through 80 are written on the operator console and in the\nNjob's hard-copy log when JES3 reads in the job.\nN\nD//*OPERATOR message\nM\nMLike the JES2 /*MESSAGE control card, a way to issue a message to\nMthe operator console where it is likely to go unnoticed. Pick up\nMthe telephone and give them a call.\nN\nNExample 1: You can try, but today's operators will never see it.\nN----------------------------------------------------------------\nNThis IBM example dates back many decades. Console message traffic\nNincreased to a point where message suppression became the normal\nNpractice to dedicate more CPU cycles to actual work, however many\nNsystems have unmanned consoles. Products like IOF and SDSF were\nNmade available to those who have a business requirement to see\nNreal-time status of jobs. Thus, today, the //*OPERATOR Statement\nNhas outlived its usefullness.\nN\nD//*OPERATOR CALL EXT. 55523 WHEN THIS JOB STARTS\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2820": {"ttr": 39425, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:26", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2820\nTz/OS JCL Reference\nT-JES3 Control Statement -JECL //**PAUSE Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*PAUSE Statement\nN-----------------------\nNUse the //**PAUSE statement to halt an input reader temporarily. When\nNyou enter a //**PAUSE statement through an input reader, JES3 issues\nNa message and waits for the operator to reply. To start the input\nNreader, the system operator must issue a *START command or a remote\nNwork station with console level 15 must send a start message.\nN\nNThe //**PAUSE statement is intended primarily for system checkout and\nNtest.\nI\nIIt should be issued only by remote work stations.\nN\nD//*PAUSE\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2821": {"ttr": 39427, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x90\\x00\\x90\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:27", "lines": 144, "newlines": 144, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2821\nT-JES3 Control Statement -JECL //*PROCESS Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*PROCESS Statement\nN-------------------------\nNUse the //*PROCESS statement to control how JES3 processes a job. A\nNjob that contains //*PROCESS statements receives only the JES3\nNprocessing specified on the //*PROCESS statements plus certain\nNrequired processing.\nN\nNSpecifically, the //*PROCESS statement calls a dynamic support\nNprogram (DSP) in the DSP dictionary. JES3 must be able to process\nNthe called DSP.\nN\nNStandard Job Processing\nN-----------------------\nNJES3 uses a series of processing functions to process a job. Standard\nNprocessing consists of only the standard scheduler functions:\nN\nN->Converter/interpreter service\nN->Main service\nN->Output service\nN->Purge service\nN\nNNonstandard Job Processing\nN--------------------------\nNA nonstandard job uses one or more special processing functions in\nNplace of or in addition to standard processing or skips one or more\nNof the standard functions. Specify a nonstandard job by following the\nNJOB statement with a JES3 //*PROCESS statement for each processing\nNfunction.\nN\nD//*PROCESS dsp \u00dd,parameter\u00a8\nI    dsp:\nI      Standard processing functions:\nI\nI        CI: JES3 Converter/Interpreter Service, which interprets the\nI          JCL and creates control blocks.\nI\nI          parameters: See z/OS JES3 Commands.\nI\nI        MAIN: Main Service, which processes the program.\nI\nI        OUTSERV: Output Service, which processes the job's output.\nI\nI        PURGE: Purge Service, which purges the job. This is the last\nI          function in any job. JES3 automatically creates this DSP.\nI\nI      Non-Standard processing functions:\nI\nI        CBPRNT: Control Block Print.\nI\nI          parameters: See z/OS JES3 Commands.\nI\nI        DISPDJC: Display Dependent Job Control.\nI\nI          parameters: See z/OS JES3 Commands.\nI\nI        DISPLAY: Display Job Queues.\nI\nI          parameters: See z/OS JES3 Commands.\nI\nI        DJCPROC: Invoke Dependent Job Control Updating.\nI\nI          Note: A //*PROCESS DJCPROC statement is required only when\nI          a //*PROCESS MAIN statement is not coded.\nI\nI        DR: Disk Reader.\nI\nI        ISDRVR: Input Service Driver.\nI               (JES3 Control Statement Processing)\nI\nI          parameters: Qualified ddname of input data set.\nI\nI        JESNEWS:\nI\nI          parameters: See z/OS JES3 Commands.\nI\nI        xxx: User-written DSP.\nI\nI          parameters: See z/OS JES3 Customization.\nN\nNExample 1: Standard processing functions.\nN-----------------------------------------\nNThis example shows how to submit a simple job via //*PROCESS\nNstatements. It is processed like a standard job. The four standard\nNscheduler functions are used for the job: CI, MAIN, OUTSERV, and PURGE.\nN\nNNote that PURGE is not specified; JES3 automatically creates this DSP.\nN\nD//EXAMPLE1 JOB ...\nD//*PROCESS CI\nD//*PROCESS MAIN\nD//*PROCESS OUTSERV\nD//ST01#01 EXEC PGM=ANY\nD  ..\nD//  JCL statements\nD  ..\nD//\nN\nNExample 2: User written dsp PLOT.\nN---------------------------------\nNThis example shows how to request a user-written DSP: PLOT. PLOT is to\nNbe executed after output service has completed. Note that PURGE is\nNagain not specified but is automatically created.\nN\nD//EXAMPLE2 JOB ...\nD//*PROCESS CI\nD//*PROCESS MAIN\nD//*PROCESS OUTSERV\nD//*PROCESS PLOT\nD//*ENDPROCESS\nD//ST01#01 EXEC PGM=ANY\nD//DD1       DD ...\nD  ..\nD//  JCL statements\nD  ..\nD//\nN\nNExample 3: IEBGENER-like processing.\nN------------------------------------\nNThis example uses JES3 output service and the //*DATASET statement.\nNFive copies of data set DS1 are printed on any local printer.\nN\nD//EXAMPLE3 JOB ...\nD//*PROCESS OUTSERV\nD//*FORMAT PR,DDNAME=S1.DS1,COPIES=5\nD//*DATASET DDNAME=S1.DS1\nD  ..\nD  data\nD  ..\nD//*ENDDATASET\nD//ST01#01 EXEC PGM=ANY\nD//DS1       DD DSNAME=DATA1\nD..\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2822": {"ttr": 39429, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00>\\x00>\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:27", "lines": 62, "newlines": 62, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2822\nT-JES3 Control Statement -JECL //*ROUTE XEQ Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL //*ROUTE XEQ Statement\nN---------------------------\nNUse the //*ROUTE XEQ statement to send the following input stream to a\nNnetwork node where the job is then executed. JES3 stops transmitting\nNinput stream records when it finds one of the following:\nN\nN->The second JOB statement after the //*ROUTE XEQ statement.\nN->The input stream runs out of card images.\nN\nNAll output from the job is assumed to print/punch at the originating\nNnode unless otherwise specified on a DEST parameter.\nN\nNThe //*ROUTE XEQ statement must be given 80 character records.\nN\nD//*ROUTE XEQ nodename\u00dd.vmguestid\u00a8\nI\nI    nodename: Indicates the node. The nodename identifies an MVS JES2\nI      system, an MVS JES3 (global) system, a VSE POWER node, or a VM system.\nI\nI      If nodename specifies a local node:\nI      ->The job executes locally if the job begins with a JOB statement.\ni      ->The job is terminated if the job begins with an NJE statement.\nI\nI    .vmguestid: Identifies a guest system running in a virtual machine\nI      (VM), for example, an MVS system running under VM.\nN\nNExample 1: Route execution to Node 2.\nN-------------------------------------\nNIn this example, assume JOB statement JOBN1 is entered through the JES3\nNsystem at node 1. The //*ROUTE XEQ statement tells JES3 to send the\nNfollowing input stream to node 2. Transmission of the input stream is\nNstopped by the /* delimiter statement. JOB statement JOBN2 and all\nNfollowing statements until the delimiter are read and executed by the\nNsystem at node 2.\nN\nNSYSOUT is sent to several destinations, defaulting to the originating\nNnode when not specified (//DD3 goes to N1R33).\nN\nD//JOBN1    JOB options ...\nD//*ROUTE XEQ 2\nD//JOBN2    JOB options ...\nD//ST01#01 EXEC PGM=REPORTER\nD//DD1       DD SYSOUT=A,DEST=N1R33\nD//DD2       DD SYSOUT=A,DEST=N2R33\nD//DD3       DD SYSOUT=B,DEST=R33\nD//DDIN      DD *\nD .\nD .\nD data\nD .\nD/*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2823": {"ttr": 39431, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:27", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2823\nT-JES3 Control Statement -JECL /*SIGNOFF Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL /*SIGNOFF Statement\nN------------------------\nNUse the /*SIGNOFF statement to tell JES3 to end a remote job stream\nNprocessing session. At the completion of the current print and/or punch\nNstreams, JES3 disconnects the remote work station from the system. If\nNJES3 is reading jobs from the station when the output completes, JES3\nNdisconnects the station when the input is completed.\nM\nMNote that, unlike other JES3 statements, this statement starts\nMwith only one slash.\nN\nD/*SIGNOFF\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR2824": {"ttr": 39433, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00=\\x00=\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:54", "lines": 61, "newlines": 61, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR2824\nT-JES3 Control Statement -JECL /*SIGNON Statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-170854\n*\n@IBM Corporation\n*\nNSA22-7597-16 z/OS JCL Reference\nNJES3 Control Statement\nN======================\nNJECL /*SIGNON Statement\nN-----------------------\nNUse the /*SIGNON statement to tell JES3 to begin a remote job stream\nNprocessing session. The /*SIGNON statement can override the remote\nNidentification number normally assigned to the remote work station.\nNThis statement is optional for all work stations except\nNnon-multi-leaving remote stations on a switched line.\nM\nMNote that, unlike other JES3 statements, this statement starts\nMwith only one slash.\nN\nD/*SIGNON work-station-name {A|(blank)} {R|(blank)} +\nD             passwd1 passwd2 new-passwd\nI\nI    Parameters are column specific, as follows:\nI    Column     Contents\nI    1-2        /*\nI    3-8        SIGNON\nI    9-15       blanks\nI    16-20      work-station-name, beginning in 16\nI    21         blank\nI    22         A or a blank\nI    23         R or a blank\nI    24         blank\nI    25-32      password1, beginning in 25\nI    33-34      blanks\nI    35-42      password2, beginning in 35\nI    43         blank\nI    44-51      new-password, beginning in 44\nI    52-80      blanks\nI\nN\nNExample 1: Line and Work-station passwords.\nN-------------------------------------------\nNThis statement requests that remote work station QUIN begin a remote\nNjob stream processing session. The value A in column 22 specifies an\nNautomatic reader for the programmable terminal. PSWD1, beginning in\nNcolumn 25, is the password assigned to a dial line. PSWD2, beginning\nNin column 35, is the password assigned to the remote work station.\nN\nI1234567890123456789012345678901234567890123456789012-------0---------0-------90\nD/*SIGNON       QUIN  A  PSWD1     PSWD2\nN\nNExample 1: Change Work-station password.\nN----------------------------------------\nNThis statement assigns PSWDNEW, beginning in column 44, as the new\nNpassword for the remote work station QUIN.\nN\nI1234567890123456789012345678901234567890123456789012-------0---------0-------90\nD/*SIGNON       QUIN  A  PSWD1     PSWD2    PSWDNEW\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR90": {"ttr": 39435, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x0b\\x00\\x0b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:54", "lines": 11, "newlines": 11, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR90\nTz/OS MVS JCL -User samples\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@Kenneth Tomiak\n*\nNUser examples are full, or snippets, of JCL that works.\nN\nNJCLR9027 = User sample 1: Create GDG and IF...THEN to test LIFO.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLR9027": {"ttr": 39437, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17\\x08\\x00\\x85\\x00\\x85\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:08:55", "lines": 133, "newlines": 133, "modlines": 0, "user": "KTOMIAK"}, "text": "SJCLR9027\nKGDG LIFO FIFO\nTz/OS MVS JCL -User sample 1: Create GDG and IF...THEN to test LIFO.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590254\n*\n@Kenneth Tomiak\n*\nNUser sample 1: Create GDG and IF...THEN to test LIFO.\nN=====================================================\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//*\nD//* Dataset: &SYSUID..CBT.CNTL(JCLR9027)\nD//* Doclib:  &SYSUID..CBT.DOCLIB(JCLR9027)  <=Setup/Re-run/Re-start\nD//* Purpose: This job will create a GDG base, prime 1st, prime more.\nD//*\nD//* -------------------------------------------------------------------\nD//*\nD//* History of Modifications\nD//* ========================\nD//* vv.mm When     Who / What you did ... (Newest change at the top.)\nD//* ----- -------- ----------------------------------------------------\nD//* 01.00 20170510 KTOMIAK \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nD//*                1) Original base code.\nD//* ----- -------- ----------------------------------------------------\nD//*\nD//* -------------------------------------------------------------------\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Ensure the GDG base exists.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#04 EXEC PGM=IDCAMS\nD//SYSIN     DD *\nD  DELETE 'KTOMIAK.DATA.ADD'\nD  SET MAXCC = 0\nD  LISTCAT ENTRY('KTOMIAK.DATA.GDG') GDG\nD  IF LASTCC > 0 THEN DO\nD    DEFINE GENERATIONDATAGROUP ( -\nD      NAME('KTOMIAK.DATA.GDG') -\nD      NOEMPTY -\nD      LIFO /* FIFO NOT ENABLED IN PARMLIB(IGGCATXX) */ -\nD      LIMIT(3) -\nD      OWNER('KTOMIAK') -\nD      SCRATCH -\nD    )\nD    IF LASTCC = 0 THEN DO\nD        SET MAXCC = 0\nD      END\nD  END\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Prime &SYSUID.DATA.ADD.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//IF1       IF (ST01#04.RC = 0) THEN\nD//ST02#04 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD *\nD1This is a heading\nD2=================\nD1Sub-head   for columns\nD1---------- --------------------------\nD1Tomiak     Kenneth\nD1Tape       CBT\nD2Total      2\nD/*\nD//SYSUT2    DD DISP=(NEW,CATLG),DSN=&SYSUID..DATA.ADD,\nD//             UNIT=3390,VOL=SER=VPWRKA,\nD//             SPACE=(TRK,(1,0)),\nD//             DCB=(DSORG=PS,RECFM=FBA,BLKSIZE=0,LRECL=80)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Prime &SYSUID.DATA.ADD.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//IF2       IF (ST02#04.RC = 0) THEN\nD//ST03#04 EXEC PGM=IEBGENER\nD//SYSIN     DD DUMMY\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DISP=OLD,DSN=&SYSUID..DATA.ADD\nD//SYSUT2    DD DISP=(NEW,CATLG),DSN=&SYSUID..DATA.GDG(+1),\nD//             UNIT=3390,VOL=SER=VPWRKA,\nD//             SPACE=(TRK,(2,1),RLSE),\nD//             DCB=*.SYSUT1\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* -------------------------------------------------------------------\nD//* Prime &SYSUID.DATA.ADD.\nD//* -------------------------------------------------------------------\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//IF3       IF (ST03#04.RC = 0) THEN\nD//ST04#04 EXEC PGM=IDCAMS\nD//SYSIN     DD *\nD  REPRO INFILE(SYSUT1) OUTFILE(SYSUT2)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD *\nD1---------- --------------------------\nD1Farnsworth Professor Hubert J.\nD1Wong       Amy\nD1Leela      Turanga\nD1Fry        Philip J.\nD1Rodriguez  Bender Bending\nD1Conrad     Hermes\nD1Zoidberg   Doctor John\nD1Wong       Amy\nD1Bob        Sponge\nD2Total      3\nD/*\nD//SYSUT2    DD DISP=OLD,DSN=&SYSUID..DATA.ADD\nD//*\nD//IF3    ENDIF (ST03#04.RC = 0)\nD//IF2    ENDIF (ST02#04.RC = 0)\nD//IF1    ENDIF (ST01#04.RC = 0)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//* End of Job JCLR9027.\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT978/CBT.V500.FILE978.PDS/XMJCLR.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT978/CBT.V500.FILE978.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}