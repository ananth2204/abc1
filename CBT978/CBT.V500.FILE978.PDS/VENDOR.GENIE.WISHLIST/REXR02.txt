SREXR02
Tz/OS TSO/E REXX Reference
T-Chapter 2. REXX general concepts
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175719
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 2. REXX general concepts
N--------------------------------
NThe REstructured eXtended eXecutor (REXX) language is particularly
Nsuitable for:
N
N-> Command procedures
N
N-> Application front ends
N
N-> User-defined macros (such as editor subcommands)
N
N-> Prototyping
N
N-> Personal computing. Individual users can write programs for their
N   own needs.
N
NREXX is a general purpose programming language.
N
N
NREXX programs are run by a language processor (interpreter). That is,
Nthe program is run line-by-line and word-by-word, without first being
Ntranslated to another form (compiled). The advantage of this is you
Ncan fix the error and rerun the program faster than you can with a
Ncompiler.
M
MThat suggests you not use the compiler until after you have fully
Mtested your code. Negating the benefit of the listings raved about
Min Chapter 1. Introduction.
M
MIf you choose to recompile after every change than you offset the
Msavings in system load.
* End of WISH.
