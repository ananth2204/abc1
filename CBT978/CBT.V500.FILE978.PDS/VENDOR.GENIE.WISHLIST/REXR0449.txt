SREXR0449
Tz/OS TSO/E REXX Reference
T-Chapter 4.
T-Built-in functions
T-SYMBOL
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175817
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NSYMBOL
N-------
NSYMBOL returns the state of the symbol named by name. Returns BAD if
Nname is not a valid REXX symbol. Returns VAR if it is the name of a
Nvariable (that is, a symbol that has been assigned a value). Otherwise
Nreturns LIT, indicating that it is either a constant symbol or a symbol
Nthat has not yet been assigned a value (that is, a literal).
N
N
NSyntax:
D  SYMBOL(name)
I    name: The name you want to validate.
N
N
NExample
N-------
I  original_value = "The      quick     and    the   dead."
I  symbol_type = Symbol('original_value')
I  Say original_value "is a" symbol_type"."
I
I  symbol_type = Symbol('325')
I  Say "'325' is a" symbol_type"."
I
I  SAY "Next, variable (A), which has not been initialized is tested."
I  symbol_type = Symbol('A')
I  Say "'A' is a" symbol_type"."
I
I  SAY "Now we initialize (A) to 325."
I  A = 325
I  symbol_type = Symbol('A')
I  Say "'A' is a" symbol_type"."
I
I  SAY "Now we test a bad symbol name."
I  symbol_type = Symbol('010_goto:')
I  Say "'010_goto' is a" symbol_type"."
I
I  SAY "Now we test a bad symbol name."
I  symbol_type = Symbol('@010_goto:')
I  Say "'@010_goto' is a" symbol_type"."
* End of WISH.
