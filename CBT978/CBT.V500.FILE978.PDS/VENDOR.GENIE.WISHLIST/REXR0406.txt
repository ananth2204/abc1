SREXR0406
Tz/OS TSO/E REXX Reference
T-Chapter 4.
T-Built-in functions
T-BITOR
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175806
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NBITOR
N-----
NBITOR returns a string composed of the two input strings logically
Ninclusive-ORed together, bit by bit. (The encoding of the strings are
Nused in the logical operation.) The length of the result is the length
Nof the longer of the two strings. If no pad character is provided, the
NOR operation stops when the shorter of the two strings is exhausted,
Nand the unprocessed portion of the longer string is appended to the
Npartial result. If pad is provided, it extends the shorter of the two
Nstrings on the right before carrying out the logical operation. The
Ndefault for string2 is the zero length (null) string.
N
N
NSyntax:
D  BITOR(string1,string2 ,pad)
I    string1: Usually the field to be acted upon.
N
I    string2: Usually the hexadecimal value you are checking for.
N
I    pad: A value to extend short fields with.
N
N
NExample
N-------
I  SAY BITOR('12'x) "-> '12'x"
I  SAY BITOR('15'x,'24'x) "-> '35'x"
I  SAY BITOR('15'x,'2456'x) "-> '3556'x"
I  SAY BITOR('15'x,'2456'x,'F0'x) "-> '35F6'x"
I  SAY BITOR('1111'x,,'4D'x) "-> '5D5D'x"
I  SAY BITOR('Fred',,'40'x) "-> 'FRED'"
I
I  SAY ""
I  a1 = 'B20A00'x
I  a2 = 'B20C04'x
I  SAY "a1="C2X(A1)
I  SAY "a2="C2X(A2)
I  SAY "BitAnd(a1,a2)="c2x(BitAnd(a1,a2))     /* B20800 */
I  SAY "BitOr(a1,a2) ="c2x(BitOr(a1,a2))      /* B20E04 */
I  SAY "BitXor(a1,a2)="c2x(BitXor(a1,a2))     /* 000604 */
* End of WISH.
