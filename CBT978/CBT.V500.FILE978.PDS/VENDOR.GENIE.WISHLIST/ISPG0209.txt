SISPG0209
TISPF Services Guide
T-Chapter 2.
T-EDIREC-Initialize Edit Recovery
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-141554
*
@IBM Corporation
*
Bf54sg00_v2r3.pdf: SC19-3626-30: ISPF
B-Services Guide
B-z/OS Version 2 Release 3
*
NInteractive System Productivity Facility (ISPF) Services Guide
N==============================================================
NChapter 2. Description of the ISPF services
N-------------------------------------------
NEDIREC-Initialize Edit Recovery
N-------------------------------
NThe EDIREC service initializes an edit recovery table (ISREIRT) for use
Nby the EDIF service and determines whether recovery from the EDIF
Nservice is pending. EDIREC also allows you to cancel or defer the
Nrecovery of data modifications.
N
NCommand invocation format
N-------------------------
NYou cannot use command procedures to invoke this service.
N
NCall invocation format
D  CALL ISPLINK ('EDIREC  ', +
I    'INIT' | 'QUERY' | 'CANCEL' | 'DEFER'
D    'INIT    ', | +
I      The edit recovery table for EDIF should be initialized in the
I      user profile library if one does not already exist for the
I      current application.
N
D      command-name | 'b', +
I        A command procedure (CLIST or REXX exec) or a program written
I        as a command that initializes the EDIF table. If this parameter
I        is omitted, the INIT option invokes an ISPF-supplied CLIST
I        named ISREIRTI. ISREIRTI creates an 8-row EDIF recovery table
I        that permits eight levels of concurrent Edit sessions with
I        recovery active. The Edit sessions may be due to recursion or
I        split-screen usage.
N
I        If you specify an application-supplied command with the INIT
I        option, you should pattern the command after ISREIRTI. It can
I        create a different number of rows, use a different naming
I        convention for the backup data sets, or specify "keep"
I        (instead of "delete") as the backup data set disposition. The
I        format of the EDIF recovery table must be the same as that
I        specified in ISREIRTI.
N
D    'QUERY   ' | +
I      The EDIF recovery table should be searched for a pending
I      recovery. When the QUERY option is specified, EDIREC scans the
I      EDIF recovery table for an entry containing a recovery pending
I      condition. If an entry is found (return code 4), the dialog must
I      then call EDIF with (recovery-request = YES) to recover the data,
I      or call EDIREC with the CANCEL or DEFER option to dispose of the
I      pending recovery condition.
N
I      These variables are stored in the dialog function pool when
I      EDIREC is called with the QUERY option and recovery is pending
I      (return code 4):
N
I      -> ZEIBDSN - Backup data name
I      -> ZEITDSN - Target data name
I      -> ZEIROW - Row number of entry in the recovery table.
N
I      The dialog can check the variables and use them to display
I      information to the user. The dialog must not change them. If
I      EDIREC QUERY indicates that recovery is not pending, the previous
I      variables are not meaningful.
N
I      ZEIUSER is an extension variable in the EDIF recovery table that
I      is provided to contain user data. Whatever data is in dialog
I      variable ZEIUSER in the shared pool is saved to the ZEIUSER
I      variable in the EDIF recovery table when the recovery data set
I      is initialized. This is done if RECOVERY is ON when first
I      entering Edit or after using the SAVE command.
N
I      When EDIREC is called with the QUERY option and the return code
I      is 4, indicating that recovery is pending, the data is read out
I      of ZEIUSER in the table and returned to ZEIUSER in the shared and
I      function pools. If recovery is not pending, this variable is not
I      meaningful.
N
D    'CANCEL  ' | +
I      Cancellation of edit recovery. The backup data set is erased and
I      the corresponding entry in the EDIF recovery table is freed.
N
D    'DEFER   '
I      Edit recovery is to be deferred. Recovery is canceled, but the
I      backup data set is saved so that recovery can be processed at
I      another time.
N
NReturn codes
N------------
NThese return codes are possible:
N
D  call_edirec_rc = RC
D  SELECT
D    WHEN (call_edirec_rc = 0) THEN DO
D      /* Normal completion.
D         -> INIT - EDIF recovery table was successfully created.
D         -> QUERY - Recovery is not pending. */
D      NOP
D    END
D    WHEN (call_edirec_rc = 4) THEN DO
D      /* Normal completion.
D         -> INIT - EDIF recovery table already exists for current
D            application.
D         -> QUERY - Entry found in EDIF recovery table (recovery is
D            pending). */
D      NOP
D    END
D    WHEN (call_edirec_rc = 20) THEN DO
D      /* Severe error; unable to continue. */
D      SAY "Ask your programmer to fix the CALL for EDIREC."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    OTHERWISE DO
D      SAY "Something very unexpected happened, RC("call_edirec_rc")."
D    END
D  END
N
NExample 1: initialize the EDIF recovery table.
N----------------------------------------------
I  CALL ISPLINK('EDIREC  ','INIT    ','USRCMD  ')
* End of WISH.
