SDFPU0313
Tdfp Utilities
T-Chapter 3.
T-Example 13: Convert a Partitioned Data Set to a PDSE
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-125511
*
@IBM Corporation
*
NDFSMSdfp Utilities
N------------------
NChapter 3. IEBCOPY (Library Copy) Program
N-----------------------------------------
NExample 13: Convert a Partitioned Data Set to a PDSE
N----------------------------------------------------
NIn this example, a partitioned data set is converted to a PDSE.
N
D//CONVERT  JOB ...
D//ST01#01 EXEC PGM=IEBCOPY
D//SYSPRINT  DD SYSOUT=*
D//SYSUT1    DD DISP=(SHR),DSN=PDSSET
D//SYSUT2    DD DISP=(NEW,CATLG),DSN=PDSESET,
D//             LIKE=PDSSET,DSNTYPE=LIBRARY,
D//             STORCLAS=SCLASX,DATACLAS=DCLASY
N
NThe control statements are discussed below:
N
N  SYSUT1 DD defines the input data set, PDSSET, which is a partitioned
N  data set.
N
N  SYSUT2 DD defines the output data set, PDSESET, which is a
N  partitioned data set extended. This new data set will be SMS-managed
N  because it has a storage class.
N
N  The LIKE parameter indicates that the DCB and SPACE attributes for
N  PDSESET are to be copied from PDSSET. The DSNTYPE parameter defines
N  the new data set as a PDSE rather than as a partitioned data set.
N  DATACLAS=DCLASY identifies the PPDSE as a program object PDSE with
N  undefined logical record length.
N
N  The Storage Management Subsystem chooses an appropriate volume for
N  the allocation, based on how SCLASX was defined.
N
N  Since the ddnames "SYSUT1" and "SYSUT2" are used to define the input
N  and output data sets, no SYSIN data set is required.
* End of WISH.
