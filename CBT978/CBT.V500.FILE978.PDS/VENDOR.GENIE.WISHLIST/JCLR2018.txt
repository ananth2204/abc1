SJCLR2018
Tz/OS JCL Reference
T-JOB Statement -JOBRC Parameter
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180512-1590254
*
@IBM Corporation
*
NSA22-7597-16 z/OS JCL Reference
NJOB Statement
N=============
NJOBRC Parameter
N---------------
NUse the JOBRC parameter to control how the job completion code
N(presented by JES2 or JES3) is set. By default (when JOBRC is not
Nspecified), the job completion code is set to the highest return
Ncode of any step, or if the job's execution fails because of an
NABEND, the job completion code is set to the last ABEND code; however,
Nthis parameter can be used to request that the job completion code
Nbe set to the return code of the last executed step or a particular
Nstep that more accurately reflects the success or failure of the job.
N
D//jobname  JOB ,JOBRC={MAXRC} | {LASTRC} | {(STEP,stepÝ.procstep¨}
I                 MAXRC: The job completion code is set to the highest
I                        return code of any step in the job, or if the
I                        completion of the job fails because of an
I                        ABEND, the job completion code is set to the
I                        last ABEND code; This is the default parameter.
I                 LASTRC: The job completion code is set to the return
I                         code or ABEND code of the last step that is
I                         executed in the job.
I                 (STEP,stepnameÝ.procstepname¨): The job completion
I                        code is set to the return code or ABEND code
I                        of the step that is indicated by the
I                        stepname.Ý.procstepname¨ parameter. If this
I                        step does not exist, a JCL error is generated.
I                        If this step does not execute, the processing
I                        is the same as if MAXRC is specified.
N
NExample A: Without JOBRC.
N-------------------------
NThe IF...THEN/ELSE/ENDIF Statement construct allows the third
Nstep to execute.
I     $HASP165 KTOMIAKA ENDED AT SVSCJES2  MAXCC=0012
N
D//KTOMIAKA JOB ,CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.
D//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).
D//SYSIN     DD DUMMY
D//SYSUT1    DD *
D..some data..
D/*
D//SYSUT2    DD SYSOUT=*
D//IF1       IF (ST02#03.RC <= 12) THEN
D//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//IF1    ENDIF
M
M-STEPNAME PROCSTEP    RC   EXCP   CONN
M-ST01#03              00      1      0
MIEC130I SYSPRINT DD STATEMENT MISSING
M-ST02#03              12      5      1
M-ST03#03              00      2      0
M-KTOMIAKA ENDED.  NAME-
M$HASP395 KTOMIAKA ENDED - RC=0012
N
NExample B: Asking for the default: MAXRC.
N-----------------------------------------
NThe IF...THEN/ELSE/ENDIF Statement construct allows the third
Nstep to execute. The noticeable difference comes in using NOTIFY.
I     $HASP165 KTOMIAKB ENDED AT SVSCJES2 - MAXRC=0012
I     MAXRC instead of MAXCC.
N
D//KTOMIAKB JOB ,JOBRC=MAXRC,
D//             CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.
D//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).
D//SYSIN     DD DUMMY
D//SYSUT1    DD *
D..some data..
D/*
D//SYSUT2    DD SYSOUT=*
D//IF1       IF (ST02#03.RC <= 12) THEN
D//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//IF1    ENDIF
M
M-STEPNAME PROCSTEP    RC   EXCP   CONN
M-ST01#03              00      1      0
MIEC130I SYSPRINT DD STATEMENT MISSING
M-ST02#03              12      5      1
M-ST03#03              00      2      0
M-KTOMIAKB ENDED.  NAME-
M$HASP395 KTOMIAKB ENDED - RC=0012
N
NExample C: Use the last executed step RC.
N-----------------------------------------
NThe IF...THEN/ELSE/ENDIF Statement construct allows the third
Nstep to execute. That will determine the JOB level RC.
I     $HASP165 KTOMIAKC ENDED AT SVSCJES2 - JOBRC=0000
I     JOBRC instead of MAXCC or MAXRC.
N
D//KTOMIAKC JOB ,JOBRC=LASTRC,
D//             CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.
D//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).
D//SYSIN     DD DUMMY
D//SYSUT1    DD *
D..some data..
D/*
D//SYSUT2    DD SYSOUT=*
D//IF1       IF (ST02#03.RC <= 12) THEN
D//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//IF1    ENDIF
M
M-STEPNAME PROCSTEP    RC   EXCP   CONN
M-ST01#03              00      1      0
MIEC130I SYSPRINT DD STATEMENT MISSING
M-ST02#03              12      5      0
M-ST03#03              00      2      0
M-KTOMIAKC ENDED.  NAME-
M$HASP395 KTOMIAKC ENDED - RC=0000
N
NExample D: ST01#03 determines the JOB level RC.
N-----------------------------------------------
NThe IF...THEN/ELSE/ENDIF Statement construct allows the third
Nstep to execute. How step ST01#03 ends is what counts.
I     $HASP165 KTOMIAKD ENDED AT SVSCJES2 - JOBRC=0000
N
D//KTOMIAKD JOB ,JOBRC=(STEP,ST01#03),
D//             CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID.
D//ST01#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//ST02#03 EXEC PGM=IEBGENER       <= Missing SYSPRINT returns a (12).
D//SYSIN     DD DUMMY
D//SYSUT1    DD *
D..some data..
D/*
D//SYSUT2    DD SYSOUT=*
D//IF1       IF (ST02#03.RC <= 12) THEN
D//ST03#03 EXEC PGM=IEFBR14        <= IBM program that returns a (0).
D//IF1    ENDIF
M
M-STEPNAME PROCSTEP    RC   EXCP   CONN
M-ST01#03              00      1      0
MIEC130I SYSPRINT DD STATEMENT MISSING
M-ST02#03              12      5      0
M-ST03#03              00      2      0
M-KTOMIAKD ENDED.  NAME-
M$HASP395 KTOMIAKD ENDED - RC=0000
* End of WISH.
