SCRDG1301
TCICS RDG
T-Chapter 13.
T-Syntax
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-121807
*
@IBM Corporation
*
Bdfha4h00.pdf
BSC34-7425-00 CICS Transaction Server for z/OS
B-Resource Definition Guide
B-Version 5 Release 3
*
NCICS Transaction Server for z/OS Resource Definition Guide
N----------------------------------------------------------
NChapter 13. FILE resources
N--------------------------
NSyntax:
N-------
D  DEFINE
D    FILE(name)
I      Specifies the name of the file. The name can be up to
I      8 characters in length.
N
I      The name must not start with a numeric character.
N
D    GROUP(groupname)
I      Every resource definition must have a GROUP name.
I      The resource definition becomes a member of the group and is
I      installed in the CICS system when the group is installed.
N
I      The GROUP name can be up to 8 characters in length. Lowercase
I      characters are treated as uppercase characters.
N
D    DESCRIPTION(text)
I      You can provide a description of the resource that
I      you are defining in this field. The description text can be up to
I      58 characters in length. No restrictions apply to the characters
I      that you can use. However, if you use parentheses, ensure that for
I      each left parenthesis there is a matching right parenthesis. If you
I      use the CREATE command, for each single apostrophe in the text,
I      code two apostrophes.
N
D    ADD(NO | YES)
I      Specifies whether records can be added to the file.
N
D    BACKUPTYPE(STATIC | DYNAMIC)
I      CICS VSAM files can be defined as
I      eligible for backup while open for update. This attribute is not
I      used for files defined with RLSACCESS(YES), or if the recovery
I      options are defined in the ICF catalog. To force CICS to use this
I      attribute instead of the recovery options in the catalog, set the
I      NONRLSRECOV system initialization parameter to FILEDEF. For files
I      that are accessed in RLS mode, you must specify the backup type on
I      the data set definition in the ICF catalog.
N
I      This attribute is ignored for coupling facility data tables and,
I      if there are any recovery attributes defined in the ICF catalog for
I      a source data set associated with the table, these also are
I      ignored. A CFDT is not eligible for backup-while-open (BWO).
N
I      Possible values are:
N
I      DYNAMIC: Specify DYNAMIC together with the RECOVERY attribute of
I        ALL to make the file eligible for backup while it is open for
I        update.
N
I      STATIC: The file is not eligible for backup while open for update.
N
D    BROWSE(NO | YES)
I      Specifies whether records can be retrieved
I      sequentially from the file.
N
D    CFDTPOOL(cfdtpool)
I      Specifies the name of the coupling facility data
I      table pool containing the table defined by this file definition.
I      This attribute is required if you specify TABLE(CF).
N
I      Coupling facility data tables can be separated (for purposes of
I      accounting, security, administration, and so on) into groups
I      (pools) of CFDTs. The names of all coupling facility data table
I      pools must be unique within the sysplex, but can be the same as the
I      names of other types of pools, such as TS data-sharing pools.
N
I      Opening a file that references a coupling facility data table
I      requires that a coupling facility data table server for the named
I      pool is running in the MVS in which the open request is issued. If
I      the required server has not been started, the file open request
I      fails.
N
I      Note: The CFDTPOOL attribute is meaningful only for CFDTs. You can
I      specify a pool name for a file that is not defined as TABLE(CF),
I      but CICS ignores it. If you then alter the file definition to
I      reference a coupling facility data table, the CFDTPOOL name comes
I      into effect.
N
D    DATABUFFERS(2 | value)
I      Specifies the number of buffers to be used
I      for data. Use a value in the range 2 (the default) through 32767.
I      The minimum value you can specify is one more than the number of
I      strings defined in the STRINGS attribute.
N
D    DELETE(NO | YES)
I      Specifies whether records can be deleted from the
I      file.
N
D    DISPOSITION(SHARE | OLD)
I      Specifies the disposition of this file.
N
I      OLD: Equivalent to the DISP=OLD parameter in JCL.
N
I      SHARE: Equivalent to the DISP=SHR parameter in JCL.
N
D    DSNAME(dsname)
I      Specifies the data set name (as known to the
I      operating system) to be used for this file. DSNAME can be 1 through
I      44 characters, conforming to the rules for MVS data set names (see
I      the DSNAME parameter in the z/OS MVS JCL Reference).
N
I      At file open time, if no JCL statement exists for this file, the
I      open is preceded by a dynamic allocation of the file using this
I      DSNAME. If the file definition refers to a data table (CICS, USER,
I      or CF) the DSNAME must be that of a VSAM base KSDS. It cannot be a
I      path or alternate index data set.
N
I      The DSNAME specified on a DD statement for this file in the CICS
I      start-up JCL takes precedence over the DSNAME specified in this
I      file definition.
N
I      Coupling facility data tables
I        If the file definition specifies LOAD(YES) and it is not already
I        opened, DSNAME specifies the name of the source data set from
I        which the table is to be loaded. Alternatively, you can specify
I        the source data set on a DD statement in the CICS startup JCL.
I        The specified data set must be a VSAM base KSDS.
N
I        If there is a path or alternate index associated with the source
I        data set, then any updates made via the file are not reflected
I        in either the source data set or its associated alternate
I        indexes. A coupling facility data table is entirely independent
I        of its source data set after loading has completed.
N
I        If you want table loading to be initiated by the opening of
I        another file specified by a different file definition, omit this
I        attribute. In this case, also ensure that the file name is not
I        specified on a DD statement in the CICS JCL. Attempts to open the
I        file fail until CFDT loading has been initiated. For more
I        information about loading a coupling facility data table from a
I        data set, see Coupling facility data tables.
N
I        If LOAD(NO) is specified, this attribute is not required and is
I        ignored.
N
D    DSNSHARING(ALLREQS | MODIFYREQS)
I      Specifies whether VSAM data set
I      name sharing is used for the VSAM file. The possible values are:
N
I      ALLREQS: Data set name sharing is set in the ACB when the file is
I        opened and is therefore used for all file requests.
N
I      MODIFYREQS: Data set name sharing is set in the ACB when the file
I        is opened only if an operation of DELETE, ADD, or UPDATE is set
I        for the file.
N
D    FWDRECOVLOG(NO | journal)
I      Specifies the journal that corresponds to
I      the MVS system logger log stream that is to be used for forward
I      recovery.
N
I      This attribute is ignored for coupling facility data tables and,
I      if there are any recovery attributes defined in the ICF catalog for
I      a source data set associated with the table, these also are
I      ignored. A CFDT is not forward recoverable. NO Forward recovery
I      logging is not required for this file. journal The number that
I      identifies the journal that CICS is to use for the forward recovery
I      log. CICS journal names are of the form DFHJnn where nn is in the
I      range 01 through 99. The after images for forward recovery are
I      written to the MVS log stream that corresponds to journal name
I      DFHJnn.
N
I      Note: In CICS Transaction Server for z/OS, DFHJ01 is not the
I      system log.
N
I      This attribute is used by CICS only if the following conditions are
I      satisfied:
N
I      -> RECOVERY(ALL) is specified
I      -> RLSACCESS(NO) is specified
I      -> No recovery attributes are defined in the ICF catalog
N
I      If you define the recovery attributes for a file in the ICF catalog
I      entry for the corresponding data set, CICS always uses the ICF
I      catalog recovery attributes and ignores those in the FILE resource.
I      To force CICS to use the FILE resource attributes instead of the
I      recovery options in the catalog, set the NONRLSRECOV system
I      initialization parameter to FILEDEF. You can alter the recovery
I      attributes defined in the ICF catalog by using the IDCAMS ALTER
I      command. This is not prevented while there are ACBs open for a
I      data set. However, if you change the recovery attributes, be aware
I      of the possible effect on data integrity.
N
D    INDEXBUFFERS(1 | number)
I      Specifies the number of buffers to be used
I      for the index. Use a value in the range 1 through 32767. The
I      minimum value you can specify is the number of strings defined in
I      the STRINGS attribute.
N
D    JOURNAL(NO | journal + Journaling attributes)
I      Specifies whether you want automatic
I      journaling for this file. The journaled data is in the format of
I      the VSAM record and is used for user controlled journaling.
N
I      The data to be journaled is identified by the JNLADD, JNLREAD,
I      JNLSYNCREAD, JNLSYNCWRITE, and JNLUPDATE attributes.
N
I      For a CICS-maintained data table, journaling is performed only for
I      requests that result in VSAM I/O requests.
N
I      For a user-maintained data table or a coupling facility data table
I      journaling is not performed for any file control operations.
I      However, although automatic journaling for these tables is not
I      supported, if you specify a journal number, CICS tries to open the
I      log stream for the specified journal when opening the file.
N
I      Note: Automatic journaling is independent of logging to the system
I      and forward recovery logs, as specified by the RECOVERY and
I      FWDRECOVLOG attributes.
N
I      Possible values are:
N
I        NO: No automatic journaling is to take place for this file.
N
I        number: The number that identifies the journal that CICS is to
I          use for the autojournal. CICS journal names are of the form
I          DFHJnn, where nn is in the range 01 through 99.
N
I          Note: In CICS Transaction Server for z/OS, DFHJ01 is not the
I          system log.
N
D    KEYLENGTH(value)
I      Specifies the length in bytes of the logical key of
I      records in remote files, and in coupling facility data tables that
I      are specified with LOAD(NO). If KEYLENGTH is not defined here, the
I      KEYLENGTH option must be specified on file control commands in the
I      application programs that refer to this file. If KEYLENGTH is not
I      defined here and is not specified in the application program, and
I      the key is longer than 4 characters, the default value is 4.
N
I      Remote files
I        The range for key length is 1 through 255.
N
I      Coupling facility data tables
I        The range for key length is 1 through 16. Key length is required
I        only if LOAD(NO) is specified.
N
I        You can, optionally, specify a key length for coupling facility
I        data tables specified with LOAD(YES), in which case you should
I        be aware of the following:
N
I        -> The key length is obtained from the ICF catalog entry for the
I           data set from which the table is loaded. If you specify a key
I           length, the key length must match that specified for the
I           source data set, otherwise attempts to open the file fail
I           with an error message.
N
I        -> If, when opening the file, CICS finds that the CFDT has
I           already been created, and the key length is different from
I           that used when loading the data set, the open fails.
N
I        If you specify a key length for a file that is not a remote file,
I        or does not refer to a CFDT, it has no effect unless the file is
I        redefined, either as a remote file or to reference a CFDT. Note,
I        however, that if you specify a key length, the value returned by
I        an INQUIRE FILE command is as follows:
N
I        -> If the file is open, CICS returns the value obtained from
I           VSAM, which can be different from that specified on the file
I           definition.
N
I        -> If the file is closed, CICS returns the value specified on the
I           file definition.
N
I        The value for this attribute must be the same throughout the
I        sysplex in all file definitions that reference the same coupling
I        facility data table.
N
D    LOAD(NO | YES)
I      Specifies whether the coupling facility data table is
I      to be loaded from a source data set when first opened.
N
I      NO: Means that the coupling facility data table does not require
I        loading from a source data set; it is fully usable by application
I        programs as soon as it is open. The table is loaded by the
I        application programs that use it, which is the default method
I        for a coupling facility data table.
N
I      YES: Means that the coupling facility data table has to be loaded
I        from a source data set before it is fully usable; the application
I        programs that use this coupling facility data table rely on it
I        containing the records from a source data set. Loading does not
I        have to be completed before data can be accessed.
N
I      This attribute is meaningful only for files defined with the
I      TABLE(CF) attribute. You can specify the LOAD attribute for a file
I      that is not defined as TABLE(CF), but CICS ignores it.
I      (CICS-maintained and user-maintained tables are loaded
I      automatically always from a source data set.) If you then alter
I      the file definition to reference a coupling facility data table,
I      the LOAD attribute comes into effect.
N
I      Ensure that the value for this attribute is the same throughout the
I      sysplex in all file definitions that reference the same coupling
I      facility data table.
N
I      For more information about using this attribute, see Coupling
I      facility data tables.
N
I    LSRPOOLID({1|2|3|4|5|6|7|8|NONE}):
I      This attribute is obsolete, but is
I      supported to provide compatibility with earlier releases of CICS.
N
I      The value specified for LSRPOOLID in existing definitions is
I      transferred to the new option LSRPOOLNUM.
N
D    LSRPOOLNUM(1 | NONE | number)
I      Specifies the identity of the local
I      shared resource pool. The default value for LSRPOOLNUM is 1, unless
I      a value has been specified for the NSRGROUP attribute, in which
I      case the default value for LSRPOOLNUM is NONE.
N
I      NONE: Specifies that the data set associated with this file uses
I        VSAM nonshared resources (NSR).
N
I        You cannot specify NONE for a CICS shared data table (CICS or
I        user-maintained), because these types of data tables must use
I        an LSR pool. However, this restriction does not apply to a
I        coupling facility data table, for which you can specify NONE.
N
I        VSAM nonshared resources (NSR) are not supported for transactions
I        that use transaction isolation. Specify ISOLATE(NO) when you
I        define transactions that access VSAM files that use NSR. You can
I        also function ship the file request to a remote region. The
I        DFHMIRS program that carries out the request is defined with an
I        EXECKEY of CICS. A CICS-key program has read and write access to
I        CICS-key and user-key storage of its own task and all other
I        tasks, whether or not transaction isolation is active.
N
I      number: Identifies the number of the VSAM shared resource pool that
I        is used by the VSAM data set associated with this file. The value
I        must be in the range 1 through 255. The data set is defined as
I        using VSAM local shared resources (LSR). Define the buffers,
I        strings, and other resources explicitly in an LSRPOOL resource
I        definition that corresponds to the assigned LRPOOLNUM value.
N
I      By default, if the file definition specifies RLSACCESS(YES),
I      the LSRPOOLNUM value is ignored when CICS opens the file.
I      However, if you change a file definition that specifies an LSR
I      pool from RLSACCESS(NO) to RLSACCESS(YES), you are advised to
I      keep the LSRPOOLNUM value. LSRPOOLNUM ensures that, if the file
I      is switched at any time from RLS to LSR mode, the file correctly
I      references an LSR pool.
N
D    MAXNUMRECS(NOLIMIT | number)
I      Specifies the maximum number of records
I     (entries) to be accommodated in the data table. You can use this
I     attribute to prevent a runaway transaction from using:
N
I      -> All the storage in the server's pool if the table is a coupling
I         facility data table
N
I      -> All the storage in the MVS data space if the table is a CICS-
I         or user-maintained table.
N
I      This attribute is meaningful only for files defined with CICS,
I      USER, or CF for the TABLE attribute. You can specify MAXNUMRECS
I      for a file that is defined with TABLE(NO), but it has no effect.
I      If you then alter the file definition to reference a data table,
I      the MAXNUMRECS value comes into effect.
N
I      NOLIMIT: There is no user-specified limit placed on the number of
I      records that can be stored in the table. CICS imposes a limit of
I      2,147,483,647, the maximum fullword value.
N
I      number: Specifies the maximum number of records allowed in the
I      table, in the range 1 through 99999999. If you are setting a limit
I      for a recoverable coupling facility data table, specify a value
I      that is about 5 to 10% greater than the maximum number of records
I      the table is expected to contain. This is to allow for additional
I      records that can be created internally for processing recoverable
I      requests. The margin you allow for this internal processing depends
I      on the level of use of the coupling facility data table, and the
I      nature of that use. An effect of this internal processing is that
I      the NOSPACE condition with a RESP2 of 102 can be raised on a WRITE
I      or REWRITE request to a recoverable coupling facility data table
I      that apparently has fewer records than the MAXNUMRECS limit that
I      has been specified for it.
N
D    NSRGROUP(group)
I      Specifies a symbolic name (up to 8 characters) to
I      group file definitions that refer to the same VSAM base data set.
I      The value is purely symbolic and need not refer to any particular
I      file definition. It is merely necessary that all file definitions
I      that must be grouped have the same name. You do not have to specify
I      this attribute to ensure correct processing, but if you do not
I      provide it, performance of your system might be degraded.
N
I      The NSRGROUP attribute takes effect only for files referencing data
I      sets that use VSAM nonshared resources. The NSRGROUP attribute must
I      not be coded for a data table. It is associated with the VSAM
I      concept of data set name sharing which causes VSAM to create a
I      single control block structure for the strings and buffers required
I      by all the files that relate to the same base data set.
N
I      When the first member of such a group of files is opened, the total
I      number of strings to be allocated for all file entries in the group
I      must be specified to VSAM (with the BSTRNO value in the Access
I      Control Block). The VSAM control block structure is built this
I      time regardless of whether the first file to be opened is
I      associated with a path or base data set. The value of BSTRNO is
I      calculated at this time by adding the STRINGS values in all the
I      file definitions with the same NSRGROUP attribute. After the first
I      file in the group is opened, any new files added to the group do
I      not affect the VSAM control block structure already built. This
I      would change only if all the files open against the base cluster
I      were closed and then reopened.
N
I      Data set name sharing is forced by CICS as the default for all
I      VSAM files. Data set name sharing is not in effect if a file is
I      opened for read-only processing with DSNSHARING=MODIFYREQS. A file
I      with DSNSHARING=MODIFYREQS still, however, contributes to the
I      BSTRNO calculation.
N
I      If a file is using VSAM nonshared resources, and you do not
I      provide an NSRGROUP attribute, the VSAM control block structure
I      might be built with insufficient strings for later processing.
I      When this happens, VSAM invokes the dynamic string addition
I      feature to provide the extra control blocks for the strings as
I      they are required. This mechanism is, however, inefficient and
I      the extra storage is not released until the end of the CICS run.
N
I      For files specifying that VSAM local shared resources are to be
I      used (LSRPOOLNUM=n, where n is in the range 1 - 255), NSRGROUP
I      has no effect.
N
D    OPENTIME(FIRSTREF | STARTUP)
I      Specifies when the file is opened.
I      Possible values are:
N
I      FIRSTREF: The file remains closed until a request is made to open
I        it by using one of the following methods:
N
I      -> A master terminal command
I      -> An EXEC CICS SET FILE OPEN command in an application program
I      -> An implicit open
N
I      STARTUP: The file is opened immediately after CICS initialization
I        by an automatically initiated CICS transaction (CSFU), unless
I        the status of the file is UNENABLED when the file remains closed.
N
D    READ(YES|NO)
I      Specifies whether records on this file can be read.
N
D    READINTEG(UNCOMMITTED | CONSISTENT | REPEATABLE)
I      Specifies the level
I      of read integrity required for files defined with RLSACCESS(YES).
I      Read integrity does not apply to non-RLS access mode files, CICS
I      shared data tables, or coupling facility data tables.
N
I      You can use READINTEG to set a default level of read integrity for
I      a file. The default level of read integrity is used by programs
I      that do not specify one of the API read integrity options
I      UNCOMMITTED, CONSISTENT, or REPEATABLE on the READ, READNEXT, or
I      READPREV commands.
N
I      However, if an application program uses one of these explicitly to
I      specify read integrity, the API option overrides any value
I      specified on this READINTEG attribute.
N
I      Note: You can specify read integrity options only on CICS file
I      control API commands or in CICS file resource definitions. You
I      cannot use the equivalent parameter on the DD statement for files
I      opened by CICS.
N
I      You can specify CONSISTENT or REPEATABLE in a file resource
I      definition, to make read integrity available to programs written
I      before these options were available on the API, and without having
I      to modify those programs. However, if you do this, be aware that
I      enforcing consistent or repeatable reads can introduce unexpected
I      deadlocks. Programs might also encounter the LOCKED condition.
N
I      CONSISTENT: The record is read with consistent read integrity. If
I        the record is being modified by another transaction, the READ
I        request waits until the update is complete, the timing of which
I        depends on whether the data set is recoverable or unrecoverable:
N
I        -> For a recoverable data set, the READ request completes when
I           the updating transaction completes its next sync point or
I           rollback.
N
I        -> For an unrecoverable data set, the READ completes as soon as
I           the VSAM request that performing the update completes.
N
I        CONSISTENT is valid only if you also specify RLSACCESS(YES) the
I          resource definition is rejected with an error if you specify
I          CONSISTENT for a non-RLS file.
N
I      REPEATABLE: The record is read with repeatable read integrity. If
I        the record is being modified by another transaction, the READ
I        request waits until the update is complete, the timing of which
I        depends on whether the data set is recoverable or unrecoverable:
N
I        -> For a recoverable data set, the READ request completes when
I           the updating transaction completes its next sync point or
I           rollback.
N
I        -> For an unrecoverable data set, the READ completes as soon as
I           the VSAM request that performing the update completes.
N
I        After the read completes, a shared lock remains held until sync
I          point. This guarantees that any record read within a
I          unit-of-work cannot be modified while the task makes further
I          read requests. Error responses such as NOTFND might not be
I          repeatable.
N
I        REPEATABLE is valid only if you also specify RLSACCESS(YES) the
I        resource definition is rejected with an error if you specify
I        REPEATABLE for a non-RLS file.
N
I      UNCOMMITTED: The record is read without read integrity. CICS
I        obtains the current value of the record as known to VSAM. No
I        attempt is made to serialize this read request with any
I        concurrent update activity for the same record. The record
I        returned might be a version updated by another transaction, but
I        not yet committed, and this record can change if the update is
I        subsequently backed out.
N
I        Note:
N
I        1. UNCOMMITTED is the same level of integrity that is provided
I           by those releases of CICS that do not support the READINTEG
I           attribute.
N
I        2. Specify UNCOMMITTED for any kind of data table. Any value
I           other than UNCOMMITTED is allowed if RLSACCESS(YES) but is
I           ignored if TABLE(CF), TABLE(CICS), or TABLE(USER) is also
I           specified for the file.
N
D    RECORDFORMAT(V | F)
I      Specifies the format of the records on the file.
N
I      F: The records are fixed length. For VSAM files, specify this only
I        if the VSAM access method services definition specifies fixed
I        size records (that is, the average size is equal to the maximum
I        size), and all the records in the file are of that size.
N
I        F is invalid for user-maintained data tables and coupling
I        facility data tables
N
I        -> The records are variable length. All user-maintained data
I           tables and coupling facility data tables must be specified
I           as variable length. Otherwise, CICS returns an error message
I           stating that RECORDFORMAT(F) conflicts with TABLE(CF) or
I           TABLE(USER) options and is ignored.
N
D    RECORDSIZE(number)
I      Specifies the maximum length in bytes of records
I      in a remote file or a coupling facility data table. The size
I      specified can be in the range 1 through 32767.
N
I      For coupling facility data tables only
I      --------------------------------------
I      This value is required if the file definition for the table
I      specifies LOAD(NO).
N
I      You can also specify this attribute if LOAD(YES) is specified
I      (for example, to make it easier for switching the file definition
I      between LOAD(NO) and LOAD(YES)). However, if you specify
I      LOAD(YES), the record size value must match that for the source
I      data set, otherwise CICS fails to open the table. There are three
I      conditions in which CICS can detect an error because of an
I      incorrect record size with LOAD(YES):
N
I      1. Before opening the table, CICS verifies that the VSAM-defined
I         record size for the data set from which the coupling facility
I         data table is to be loaded is the same as the size, if any, in
I         the file definition. If the record size is different, CICS
I         returns error message DFHFC7081.
N
I      2. The record size (if specified) on the file definition is the
I         same as that defined to VSAM for the data set, but on opening
I         the table, CICS finds the table is already loaded with data of
I         a different record size. This is probably because the data was
I         loaded from a different data set from the one specified by this
I         file definition. In this case CICS returns error message
I         DFHFC7082.
N
I      3. The file definition for the table being opened specifies a
I         record size, but not a data set name because the table is to
I         be loaded by the opening of a different file. If the table has
I         already been created, the open of a file specifying a different
I         record size fails with message DFHFC7083.
N
I      To avoid these errors, ensure that the value for this attribute
I      is the same throughout the sysplex in all file definitions that
I      reference the same coupling facility data table, or omit it
I      altogether for files that specify LOAD(YES).
N
I      If you specify a record size for a file that is not a remote file,
I      or does not refer to a CFDT, it has no effect unless the file is
I      redefined, either as a remote file or to reference a coupling
I      facility data table. Note, however, that if you specify a record
I      size, the value returned by an INQUIRE FILE command is as follows:
N
I      -> If the file is open, CICS returns the value obtained from VSAM,
I         which can be different from that specified on the file
I         definition.
N
I      -> If the file is closed, CICS returns the value specified on the
I         file definition.
N
I      Note: For coupling facility data tables, if you can keep the
I      record size to 63 bytes or less, there is a significant gain in
I      performance as a result of the way records are held in the coupling
I      facility.
N
D    RECOVERY(NONE | ALL | BACKOUTONLY)
I      Specifies the type of recovery
I      required for the file.
N
I      This attribute is not used for files defined with RLSACCESS(YES),
I      or if the recovery options are defined in the ICF catalog. If LOG
I      is defined in the ICF catalog, CICS ignores the RECOVERY option and
I      takes the LOG value from the ICF catalog, even for files defined
I      with RLSACCESS(NO). If LOG(ALL) is specified in the ICF catalog,
I      CICS also takes the LOGSTREAMID and BWO values from the ICF
I      catalog. To force CICS to use this attribute instead of the
I      recovery options in the catalog, set the NONRLSRECOV system
I      initialization parameter to FILEDEF.
N
I      For files that are accessed in RLS mode, you must specify the
I      recovery parameters with the data set definition in the ICF
I      catalog. See the CICS Recovery and Restart Guide for more
I      information.)
N
I      For coupling facility data tables and user-maintained tables that
I      are defined with a source data set, any recovery attributes in the
I      ICF catalog are ignored. The recovery attributes are a property of
I      the file not the associated data set.
N
I      For coupling facility data tables, the recovery attribute must be
I      the same throughout the sysplex in all file definitions that
I      reference the same coupling facility data table.
N
I      ALL: Except for coupling facility data tables, which manage their
I        own recovery and do not use the services of log manager or
I        recovery manager, before images are recorded in the system log,
I        and after images in the journal specified in the FWDRECOVLOG
I        attribute.
N
I        Records written to the FWDRECOVLOG are independent of any
I        automatic journaling options that might be set.
N
I        RECOVERY=ALL together with FWDRECOVLOG provide a means of
I        separating the needs of a forward recovery utility from those
I        of automatic journaling. Additional information, unavailable
I        via automatic journaling, is recorded on the FWDRECOVLOG.
N
I        RECOVERY=ALL plus FWDRECOVLOG is the preferred way to provide
I        forward recovery support.
N
I        Existing forward recovery utilities that used the JREQ=(WU,WN)
I        and JID=FCT macro settings can still be used with these
I        settings. The RDO equivalents of these automatic journaling
I        settings are JNLADD=BEFORE, JNLUPDATE=YES, and the JOURNAL
I        attribute.
N
I        For CICS-maintained data tables, the data table and its source
I        data set are logged, journaled, and recovered together.
N
I        For user-maintained tables, specifying ALL has the same effect
I        as specifying BACKOUTONLY: Only dynamic backout is provided.
I        There is no forward recovery support for user-maintained tables.
N
I        For coupling facility data tables you cannot specify ALL.
N
I        Note: When ALL is specified for VSAM ESDS files, CICS is unable
I        to perform backout of ADDs. To cope with this situation, code
I        user exit XFCLDEL to avoid the file being closed because of the
I        error.
N
I      BACKOUTONLY: Except for coupling facility data tables, which
I        manage their own recovery and do not use the services of log
I        manager or recovery manager, before images are recorded in the
I        system log.
N
I        For CICS-maintained data tables, BACKOUTONLY specifies that the
I        data table and its source data set are recoverable. They are
I        both updated in step and, if required, recovered in step.
N
I        For user-maintained tables, BACKOUTONLY specifies only dynamic
I        backout. No log records are written and, therefore, there is no
I        recovery at emergency restart.
N
I        For coupling facility data tables, BACKOUTONLY is permitted only
I        if the coupling facility data table is defined with
I        UPDATEMODEL(LOCKING). You cannot specify this attribute for
I        UPDATEMODEL(CONTENTION). Specifying BACKOUTONLY implies that a
I        coupling facility data table is UOW-recoverable. This means that
I        updates made to the CFDT within a unit of work are backed out
I        if the unit of work fails, or if CICS or the CFDT server fails
I        while the unit of work is in-flight, or if MVS fails.
N
I        Note: When BACKOUTONLY is specified for VSAM ESDS files, CICS
I        is unable to perform backout of ADDs. To cope with this
I        situation, code user exit XFCLDEL to avoid the file being
I        closed because of the error.
N
I      NONE: There is no recovery logging for this file.
N
D    REMOTENAME(file)
I      Specifies, if the file resides on a remote system,
I      the name by which this file is known in the system or region in
I      which it is resident. The name can be up to 8 characters in length.
I      If REMOTENAME is not specified, the name given in the FILE
I      attribute is used.
N
I      If you specify a remote name, CICSPlex SM uses that name when
I      assigning the file to a related system. If you specify a remote
I      system but not a remote name, the local name (that is, the name
I      of this file definition) is used in both the target and related
I      systems.
N
D    REMOTESYSTEM(connection)
I      Specifies the name of the connection to
I      the remote system in which the file is resident.
N
I      For IPIC connections, REMOTESYSTEM specifies the first 4 characters
I      of the IPCONN name on the IPCONN definition that is in service and
I      acquired.
N
I      For MRO and APPC connections, REMOTESYSTEM specifies the
I      CONNECTION name on the CONNECTION definition.If you specify
I      REMOTESYSTEM, you can also supply a REMOTENAME, to specify the
I      name of the file in the remote system.
N
I      Note: If you modify a resource definition from RLSACCESS(NO) to
I      RLSACCESS(YES), you must remove the remote system name. Otherwise
I      CICS continues to function ship file requests.
N
I    RESSECNUM: This attribute is obsolete, but is supported to provide
I      compatibility with earlier releases of CICS. For more information,
I      see Obsolete attributes in Reference System definition.
N
D    RLSACCESS(NO | YES)
I      Specifies whether CICS is to open the file in
I      RLS mode.
N
I      NO: The file is not to be opened in RLS mode. If you specify
I        RLSACCESS(NO) or allow it to default, CICS opens the file in
I        LSR or NSR access mode, depending on the LSRPOOLNUM attribute.
I        If you also specify LSRPOOLNUM(NONE), the access mode is NSR;
I        if you specify LSRPOOLNUM(number), the access mode is LSR.
N
I      YES: The file is to be opened in RLS mode. If you specify
I        RLSACCESS(YES), it takes precedence over the LSRPOOLNUM
I        attribute, which is ignored when the FILE is opened.
N
I        Specifying RLSACCESS(YES) alters the effect of some other
I        attributes defined in the FILE definition.
N
I        Note:
N
I        1. Provided that a file is opened in RLS mode, any values
I           specified for PASSWORD, LSRPOOLNUM, DSNSHARING, STRINGS,
I           DATABUFFERS, and INDEXBUFFERS are ignored. However, if you
I           use a CEMT, or EXEC CICS, SET FILE command to change the
I           value of RLSACCESS from YES to NO, these values are no longer
I           ignored, and CICS uses them when the file is closed and
I           reopened in non-RLS mode.
N
I        2. CICS always takes the RLS access mode from the file resource
I           definition and you cannot override this using the RLS=NRI or
I           RLS=CR parameter on a DD statement.
N
D    STATUS(ENABLED | DISABLED | UNENABLED)
I      Specifies the initial status
I      of the file following a CICS initialization with START=COLD or
I      START=INITIAL. You can change the status of a closed file with
I      the master terminal transaction CEMT. The status of a file
I      (ENABLED, DISABLED, or UNENABLED) following a CICS restart is
I      recovered to its status at the previous shutdown.
N
I      DISABLED: Any request against this file from a command-level
I        application program causes the DISABLED condition to be passed
I        to the program.
N
I      ENABLED: Normal processing is allowed against this file.
N
I      UNENABLED: This prevents the file being opened by an implicit
I        open from an application program. Any such attempt to access
I        the file raises the NOTOPEN condition. By contrast, an explicit
I        request to open the file (for example, a CEMT or
I        EXEC CICS SET FILE OPEN command) changes the status to ENABLED
I        before attempting to open the file.
N
I        This attribute is ignored for FILE resources that are dynamically
I        generated by a CICS bundle. The initial status of a FILE resource
I        is derived from the initial status of the bundle that defines the
I        resource.
N
D    STRINGS(1 | number)
I      Specifies the number, in the range 1 through 255,
I      of concurrent requests that can be processed against the file. When
I      the number of requests reaches this value, CICS queues any
I      additional requests until one of the active requests terminates.
I      This applies both to files using shared resources, and to those not
I      using shared resources. Note that if the file definition specifies
I      RLSACCESS(YES), STRINGS value is ignored; you always get 1024
I      strings with RLS mode access.
N
I      For files using local shared resources, this number is not used by
I      VSAM. It is used by CICS, not only as described here, but also to
I      calculate the default value in the buffer pool definition.
N
I      Notes:
N
I      1. When choosing a STRINGS value, be aware that a proportion (20%)
I         of the specified number of strings is reserved by CICS for use
I         in read-only requests
N
I      2. When choosing a STRINGS value for an ESDS, consider the
I         following:
N
I         -> If an ESDS is used as an 'add-only' file (that is, it is
I            used only in write mode), you must use a string number of 1.
I            Any string number greater than 1 can significantly affect
I            performance, because of exclusive control conflicts that
I            occur when more than one task attempts to write to the ESDS
I            at the same time.
N
I         -> If an ESDS is used for both writing and reading, with writing
I            being 80% of the activity, it is better to define two file
I            definitions using one file for writing and the other for
I            reading.
N
I      3. For user-maintained data tables and coupling facility data
I         tables, the STRINGS value does not limit the number of
I         concurrent requests against the table. However, the value does
I         limit the number of concurrent requests during the loading of a
I         user-maintained table.
N
I      4. For CICS-maintained data tables, the STRINGS value limits the
I         number of concurrent requests to update the table. It does not
I         limit the number of concurrent read-only requests.
N
D    TABLE(NO | CF | CICS | USER)
I      Specifies the type of data table that you
I      require. CF A coupling facility data table (CFDT). This remains
I      independent of its source data set, and changes to the table are
I      not reflected in the corresponding source data set, if there is
I      one. A source data set is optional for a CFDT, and is specified by
I      LOAD(YES) on the file definition.
N
I      If you specify CF, also specify:
N
I      -> CFDTPOOL, to give the name of the coupling facility pool in
I         which the table resides
N
I      -> LOAD, to specify whether the table is to be loaded from a
I         source data set (or let this default to NO)
N
I      -> UPDATEMODEL to specify whether the table is to use the
I         CONTENTION or the LOCKING update model (or let this default to
I         LOCKING)
N
I      -> RECORDFORMAT as V (or let this default to V)
N
I      -> MAXNUMRECS with the value you require.
N
I      A coupling facility data table requires a coupling facility data
I      table server. For information about how to start a coupling
I      facility data table server, see the CICS System Definition Guide.
N
I      CICS: A CICS-maintained data table. This automatically reflects all
I        modifications made to the table in its source data set. If you
I        specify CICS, also specify:
N
I        -> LSRPOOLNUM with a value of 1 through 255
N
I        -> MAXNUMRECS with the value you require.
N
I      NO: Data table not required.
N
I      USER: A user-maintained table. This remains independent of its
I        source data set, and changes to the user-maintained table are
I        not reflected in corresponding source data set. If you specify
I        USER, also specify:
N
I        -> LSRPOOLNUM with a value of 1 through 255
N
I        -> RECORDFORMAT as VARIABLE (or let this default to VARIABLE)
N
I        -> MAXNUMRECS with the value you require.
N
D    TABLENAME(cfdt)
I      Specifies the name of the coupling facility data
I      table that is accessed through this file definition. The name can
I      be up to 8 characters in length.
N
I      If you omit this attribute when TABLE(CF) is specified, it defaults
I      to the name specified for the FILE. To enable CICS regions to share
I      a coupling facility data table, the file definitions installed in
I      each region must specify the same CFDTPOOL name and TABLENAME
I      (or FILE name when TABLENAME is not used). The TABLENAME need only
I      be unique within its pool.
N
I      Note that the table name is not only an identifier for the table,
I      but is also used as the resource name in security checks.
N
I      This attribute is meaningful only for files defined with the
I      TABLE(CF) attribute. You can specify a table name for a file that
I      is not defined as TABLE(CF), but CICS ignores it. If you then
I      alter the file definition to reference a coupling facility data
I      table, the TABLENAME attribute comes into effect.
N
D    UPDATE(NO | YES)
I      Specifies whether records on this file can be
I      updated.
N
D    UPDATEMODEL(LOCKING | CONTENTION)
I      Specifies the type of update model
I      to be used for a coupling facility data table.
N
I      LOCKING: Specifies that the CFDT is updated using the locking
I        model. This means that records are locked when they are read for
I        update, so that they cannot be changed by any other units of work
I        until the update request has been completed. For recoverable
I        tables, the update request is completed at sync point. For
I        unrecoverable tables, the update request is completed when a
I        REWRITE, DELETE, or UNLOCK command is completed. LOCKING is the
I        default for a file that specifies TABLE(CF). With the LOCKING
I        model, the CFDT can be defined as:
N
I        -> Unrecoverable, meaning that CFDT updates are not backed out
I           if a unit of work fails, and the locks are only held for the
I           duration of a request. You specify that a CFDT is not
I           recoverable by specifying RECOVERY(NONE).
N
I        -> Recoverable, or UOW-recoverable, meaning that updates made to
I           the CFDT within a unit of work are backed out if the unit of
I           work fails, or if CICS or the CFDT server fails while the
I           unit of work is in-flight, or if MVS fails. You specify that
I           a CFDT is recoverable by specifying RECOVERY(BACKOUTONLY).
N
I        A recoverable CFDT that uses the locking model is like a
I        recoverable file or data set, except that it does not survive a
I        failure of the coupling facility in which it resides. There is
I        no forward recovery for a coupling facility data table.
N
I      CONTENTION: Specifies that the CFDT is updated using the contention
I        model. This means that records are not locked when they are read
I        for update. An error is returned on a subsequent REWRITE or
I        DELETE if the record was changed or deleted by another task after
I        it was read for update.
N
I        The CFDT must be unrecoverable (RECOVERY(NONE)), meaning that
I        updates are not backed out if a unit of work fails.
N
I        The value for this attribute must be the same throughout the
I        sysplex in all file definitions that reference the same coupling
I        facility data table.
N
I        This attribute is meaningful only for files defined with the
I        TABLE(CF) attribute. You can specify the update model for a file
I        that is not defined as TABLE(CF), but CICS ignores it. If you
I        then alter the file definition to reference a coupling facility
I        data table, the UPDATEMODEL attribute comes into effect.
N
N
NJournaling attributes:
N----------------------
D    JNLADD(NONE | AFTER | ALL | BEFORE)
I      Specifies the add operations you
I      want recorded on the journal nominated by the JOURNAL attribute.
I      Possible values are:
N
I      AFTER: Add the file control write operation to the journal after
I        the VSAM I/O operation.
N
I      ALL: Add the file control write operation to the journal both
I        before and after the VSAM I/O operation has completed.
N
I      BEFORE: Add the file control write operation to the journal before
I        the VSAM I/O operation.
N
I      NONE: Do not add write operations to the journal.
N
D    JNLREAD(NONE | ALL | READONLY | UPDATEONLY)
I      Specifies the read
I      operations you want recorded on the journal nominated by the
I      JOURNAL attribute. Possible values are:
N
I      ALL: Add all read operations to the journal.
N
I      NONE: Do not add read operations to the journal.
N
I      READONLY: Add only READ ONLY operations (not READ UPDATE
I        operations) to the journal.
N
I      UPDATEONLY: Add only READ UPDATE operations (not READ ONLY
I        operations) to the journal.
N
D    JNLSYNCREAD(NO | YES)
I      Specifies whether you want the automatic
I      journaling records, written for READ operations to the journal
I      specified by JOURNAL, to be written synchronously or
I      asynchronously.
N
D    JNLSYNCWRITE(YES | NO)
I      Specifies whether you want the automatic
I      journaling records, written for WRITE operations to the journal
I      specified by JOURNAL, to be written synchronously or
I      asynchronously.
N
D    JNLUPDATE(NO | YES)
I      Specifies whether you want REWRITE and DELETE
I      operations recorded on the journal nominated by the JOURNAL
I      attribute.
N
NExample:
N--------
NShows an example of how to specify the required file control definition
Nfor a VSAM base data set and alternate index path.
N
I* DEFINE THE CLUSTER
I    CEDA DEFINE FILE(VSAM10B) GROUP(xxxxxx)
I      DSNAME(DTGCAT.VSAM10B)
I      DISPOSITION(SHARE) ADD(YES)
I      BROWSE(YES) DELETE(YES) READ(YES)
I      UPDATE(NO) RECORDFORMAT(F)
I      STRINGS(8) LSRPOOLNUM(NONE)
I      RECOVERY(NONE) NSRGROUP(GROUP1)
I      INDEXBUFFERS(8) DATABUFFERS(9)
I* DEFINE THE PATH
I    CEDA DEFINE FILE(VSAM10P) GROUP(xxxxxx)
I      DSNAME(DTGCAT.VSAM10P)
I      LSRPOOLNUM(NONE) DISPOSITION(SHARE)
I      STRINGS(5) NSRGROUP(GROUP1)
I      BROWSE(YES) DELETE(NO) READ(YES)
I      ADD(NO) UPDATE(NO) RECORDFORMAT(F)
I      RECOVERY(NONE)
* End of WISH.
