SAMSC0209
TDFSMS AMS
T-Chapter 2.
T-PARM Command
EKenneth Tomiak <KenTomiak@KTomiak.org>
Z20180512-148953
*
@IBM Corporation
*
Bdgt2i2a1.pdf: SC26-7394-13: z/OS
BVersion 1 Release 13
BDFSMS Access Method Services for Catalogs
*
NAccess Method Services for Catalogs
N-----------------------------------
NChapter 2. Modal Commands
N-------------------------
NPARM Command
N------------
NThe PARM command specifies processing options to be used during
Nexecution. These options remain in effect until changed by another
NPARM command. You can also use these options in the PARM field of an
NEXEC statement (in the job control language (JCL)). The syntax of the
NPARM command is:
N
D  PARM TEST( -
I    Specifies the diagnostic aids that the program should use. After
I    the TEST option has been established, it remains in effect until
I    another PARM command resets it. You should use the TRACE, AREAS,
I    and FULL parameters concurrently. See z/OS DFSMSdfp Diagnosis for
I    a description of the IDCAMS diagnostic aids and lists of the dump
I    points and area identifiers.
N
D    TRACE -
I      Specifies that the program should print trace tables whenever it
I      encounters a dump point.
N
D    AREAS(areaid ...Â¨) -
I      Lists the modules that are to have selected areas of storage
I      that is dumped at their dump points. areaid is a 2-character
I      area identifier defined within the implementation.
N
D    FULL((dumpid begin count),(...)) -
I      States that a full region dump, as well as the trace tables and
I      selected areas, is to be provided at the specified dump points.
N
I      dumpid: specifies the 4-character identifier of the dump point.
N
I      begin: Is a decimal integer that specifies the iteration through
I        the named dump point at which the dump is to be produced.
I        (The default is 1.)
N
I      count: Is a decimal integer that specifies the number of times
I        that the program should produce dumps. (The default is 1.)
N
I      If you use the FULL keyword, you must also use an
I      AMSDUMP DD statement; for example:
N
I        //AMSDUMP DD SYSOUT=*
M
M      2018-02-21 In testing the example, //AMSDUMP was NOT used.
M      Output went to //SYSPRINT.
N
D    OFF -
I      Stops the testing.
D    ) -
N
D    GRAPHICS( -
I      Indicates the print chain-graphic character set or a special
I      graphics table that the program should use to produce the output.
N
D      CHAIN(AN|HN|PN|QN|RN|SN|TN) -
I        Is the graphic character set of the print chains you want to
I        use. The processor uses PN unless the program explicitly
I        directs it to use another set of graphics.
N
I          AN Arrangement A, standard EBCDIC character set, 48
I          characters
N
I          HN Arrangement H, EBCDIC character set for FORTRAN and COBOL,
I          48 characters
N
I          PN PL/1 alphanumeric character set
N
I          QN PL/1 preferred alphanumeric character set for scientific
I          applications
N
I          RN Preferred character set for commercial applications of
I          FORTRAN and COBOL
N
I          SN This character set contains lower case and is the
I          preferred character set for text printing
N
I          TN Character set for text printing, 120 characters
N
D      TABLE(mname) -
I        Is the name of a table you supply. This 256-byte table defines
I        the graphics for each of the 256 possible bit patterns. Any
I        character sent to the printeris translated to the bit pattern
I        found in the specified table at the position corresponding to
I        its numeric value (0-255). If the print chain does not have a
I        graphic for a byte's bit pattern, the table should specify a
I        period as the output graphic. The table must be stored as a
I        module accessible through the LOAD macro.
D    ) -
N
D    MARGINS(leftmargin rightmargin) -
I      Changes the margins of input records on which command statements
I      are written. The usual left and right margins are 2 and 72,
I      respectively. If you code MARGINS, the program scans all
I      subsequent input records in accordance with the new margins.
I      You can use this function in conjunction with the comment
I      feature: You can use respecification of margins to cause
I      the /* and */ characters to be omitted from the scan. This
I      causes comments to be treated as commands.
N
I      leftmargin: Locates the location of the left margin.
N
I      rightmargin: Locates the location of the right margin. The
I        right margin must be greater than the left margin value.
N
NUsing the PARM Command: Example 1
N---------------------------------
NIn this example, the program produces dumps on the third and fourth
Ntime through the dump point ZZCA.
N
D//STEP01  EXEC PGM=IDCAMS
D//SYSIN     DD *
D  PARM -
D    TEST ( -
D      FULL ( -
D        ZZCA 03 02 -
D      ) -
D    )
D  LISTCAT -
D    LEVEL(SYS1) -
D    ALL
D  PARM -
D    TEST(OFF)
D/*
D//SYSPRINT  DD SYSOUT=*
N
NUsing the PARM Command: Example 2
N---------------------------------
NIn this example, the program produces dumps on the third and fourth
Ntime through the dump point ZZCA.
N
D//STEP02  EXEC PGM=IDCAMS,PARM='TEST(FULL(ZZCA 03 02))'
D//SYSIN     DD *
D  LISTCAT -
D    LEVEL(SYS1) -
D    ALL
D/*
D//SYSPRINT  DD SYSOUT=*
* End of WISH.
