SAMSC0501
TDFSMS AMS
T-Chapter 5.
T-Syntax for ALTER Parameters
EKenneth Tomiak <KenTomiak@KTomiak.org>
Z20180512-148953
*
@IBM Corporation
*
Bdgt2i2a1.pdf: SC26-7394-13: z/OS
BDFSMS Access Method Services for Catalogs
BVersion 1 Release 13
*
NAccess Method Services for Catalogs
N-----------------------------------
NChapter 5. ALTER
N----------------
NSyntax for ALTER Parameters
N---------------------------
D  ALTER -
N
NRequired Parameters
N-------------------
D    entryname -
I      This names the entry to be altered.
N
I      When attributes of a catalog are altered, entryname must include
I      either the data or index components. Giving the catalog name
I      alters attributes defined at the cluster level only. The catalog
I      name is also the data component name.
N
I      The restricted prefix SYS1.VVDS.V or its generic form
I      SYS1.VVDS.* or SYS1.*.V is not allowed as an entryname for the
I      ALTER command.
N
I      If you are renaming a member of a non-VSAM partitioned data set,
I      the entryname must given as: pdsname(membername).
N
I      See the NEWNAME parameter for information on renaming SMS-managed
I      data sets.
N
I      Identify a generation data set (GDS) with its generation data
I      group (GDG) name followed by the generation and version numbers
I      of the data set (GDGname.GxxxxVyy).
N
N
NOptional Parameters
N-------------------
D    ACCOUNT(account-info) /* Abbreviation: ACCT */ -
I      Account is supported only for SMS-managed VSAM or non-VSAM
I      data sets.
N
I      account-info: Use this to change accounting information and user
I        data for the data set. It must be between 1 and 32 bytes;
I        otherwise, you will receive an error message.
N
D    ADDVOLUMES(volser volser...) /* Abbreviation: AVOL */ -
I      This provides the volumes that are to be added to the list of
I      candidate volumes. You can use ALTER ADDVOLUMES to add candidate
I      volumes to non-managed VSAM data sets and SMS-managed VSAM,
I      non-VSAM, and generation data sets (GDS). Only nonspecific
I      volumes can be added to SMS-managed, non-VSAM data sets and GDS
I      data sets. If an ALTER ADDVOLUMES is done to a data set already
I      opened and allocated, the data set must be closed, unallocated,
I      reallocated, and reopened before VSAM can extend onto the newly
I      added candidate volume. Adding a nonexistent volume to the list
I      can result in an error when the data set is extended. Ensure that
I      the volume exists and is online before attempting to extend the
I      data set.
N
I      Restriction: This does not work with non-SMS non-VSAM.
N
I      SMS might not use candidate volumes for which you request
I      specific volsers with the ADDVOLUMES parameter. Sometimes a
I      user-specified volser for an SMS-managed data set results in an
I      error. To avoid candidate-volume problems with SMS, you can
I      have SMS choose the volser used for a candidate volume. To do
I      this, you can code an * for each volser that you request with
I      the ADDVOLUMES parameter. If, however, you request both specified
I      and unspecified volsers in the same command, you must enter the
I      specified volsers first in command syntax. The system does not
I      allocate space on candidate volumes until VSAM extends to the
I      candidate volume. This includes SMS-managed data sets with
I      guaranteed space.
N
D    BUFFERSPACE(size) /* Abbreviations: BUFSP or BUFSPC */ -
I      Provides the amount of space for buffers. The size you specify
I      for the buffer space helps VSAM determine the size. IBM
I      recommends that the size you give is equal to or greater than
I      the amount specified in the original definition. If the amount
I      is less, VSAM attempts to get enough space to contain two data
I      component control intervals and, if the data is key-sequenced,
I      one index component control interval. You can specify
I      BUFFERSPACE only for a catalog or for the data component of a
I      cluster or alternate index. If you use BUFFERSPACE for a catalog,
I      then you must specify the CATALOG parameter.
N
I      The BUFFERSPACE parameter is ignored for VSAM record-level
I      sharing (RLS) access and DFSMStvs access.
N
I      size: Is the amount of space for buffers. This helps VSAM
I        determine the size of the data component's and index
I        component's control interval.
N
I        Size can be entered in decimal (n), hexadecimal (X'n'), or
I        binary (B'n') form. The specified size should not be less than
I        the space needed to contain two data component control
I        intervals and, if the data is key-sequenced, to contain one
I        index control interval. If the given size is less than what
I        VSAM requires, it gets it when the data set is opened.
N
I        Note: The limitations of the bufferspace value on how many
I        buffers will be allocated is based on storage available in
I        your region, and other parameters or attributes of the data
I        set.
N
D    BUFND(number) /* Abbreviation: BFND */ -
I      Gives the number of I/O buffers VSAM is to use for transmitting
I      data between virtual and auxiliary storage. The size of the
I      buffer area is the size of the data component control interval.
I      This parameter only applies the data component of a catalog.
N
I      The BUFND parameter is ignored for VSAM RLS access and DFSMStvs
I      access.
N
I      number:  Is the number of data buffers you can use. The minimum
I        number is 3, and the maximum is 32767.
N
D    BUFNI(number) /* Abbreviation: BFNI */ -
I      Is the number of I/O buffers VSAM uses for transmitting the
I      contents of index entries between virtual and auxiliary storage
I      for keyed access. The size of the buffer area is the size of the
I      index control intervals. This parameter only applies the index
I      component of a catalog.
N
I      When altering BUFNI for a catalog other than the current master
I      on which this command is issued, you will need to include the
I      CATALOG parameter with the name of the catalog whose index you
I      are altering.
N
I      The BUFNI parameter is ignored for VSAM RLS and DFSMStvs access.
N
I      number: Is the number of index buffers you can use. The minimum
I        number is 2 and the maximum is 32767.
N
D    BWO(TYPECICS | TYPEIMS | NO) -
I      Use this parameter if backup-while-open (BWO) is allowed for the
I      VSAM sphere. BWO applies only to SMS data sets and cannot be used
I      with TYPE(LINEAR).
N
I      If BWO is specified in the SMS data class, the specified BWO
I      value is used as part of the data set definition, unless BWO
I      was previously defined with an explicitly specified or modeled
I      DEFINE attribute.
N
I      TYPECICS /* Abbreviation: TYPEC */: Use TYPECICS to specify BWO
I        in a CICS environment. For RLS processing, this activates BWO
I        processing for CICS or DFSMStvs, or both.
N
I        For non-RLS processing, CICS determines whether to use this
I        specification or the specification in the CICS file control
I        table (FCT). For more information about the use of TYPECICS,
I        see CICS System Definition Guide.
N
I        Exception: If CICS determines that it will use the
I        specification in the CICS FCT, the specification might override
I        the TYPECICS parameter for CICS processing.
N
I      TYPEIMS /* Abbreviation: TYPEI */: If you want to use BWO
I        processing in an Information Management System (IMS)
I        environment, use the TYPEIMS parameter.
N
I      NO: Use this when BWO does not apply to the cluster.
N
I        Exception: If CICS determines that it will use the
I        specification in the CICS FCT, the specification might
I        override the NO parameter for CICS processing.
N
D    CCSID(value) -
I      Is the Coded Character Set Identifier attribute; it identifies:
N
I      -> Encoding scheme identifier
N
I      -> Character set identifier or identifiers
N
I      -> Code page identifier or identifiers
N
I      -> Additional coding required to uniquely identify the coded
I         graphic used
N
I      You can use Coded Character Set Identifier (CCSID) only for
I      system-managed data sets. If the CCSID parameter is not in the
I      catalog at the time ALTER is called, it is created.
N
I      The value for CCSID can be specified in decimal (n), hexadecimal
I      (X''), or binary (B''). The acceptable range of values is 0
I      (X'0'') to 65535 (X'FFFF'').
N
D    CODE(code) -
M      Oops - IBM left this out of the manual.
N
D    ECSHARING | NOECSHARING -
I      Indicates whether sharing this catalog can be performed through
I      the coupling facility.
N
I      ECSHARING /* Abbreviation: ECSHR */: Enhanced catalog sharing
I      (ECS) is allowed. ECS is a catalog sharing method that makes use
I      of a coupling facility to increase the performance of shared
I      catalog requests. Please read about ECS in z/OS DFSMS Managing
I      Catalogs before enabling ECS for a catalog.
N
I      NOECSHARING /* Abbreviation: NOECSHR */: Enhanced catalog sharing
I      (ECS) is not allowed. This is the default. Catalog sharing is
I      performed, but the ECS sharing method is not be used.
N
D    EMPTY | NOEMPTY -
I      Specifies what is to happen when the maximum number of
I      generation data sets (GDSs) has been cataloged. If the
I      generation data group (GDG) is full (the LIMIT is reached), this
I      attribute determines whether all GDSs or just the oldest GDSs are
I      processed.
N
I      For an SMS-managed GDS, if the NOSCRATCH attribute is used, the
I      GDS is uncataloged from its GDG base and is recataloged outside
I      its GDG base as an SMS non-VSAM entry with the rolled-off status.
N
I      EMPTY /* Abbreviation: EMP */: Specifies that, when the maximum
I      number of GDSs is exceeded, all the GDSs are uncataloged or
I      deleted.
N
I      NOEMPTY /* Abbreviation: NEMP */: Used when the maximum number of
I      GDSs is exceeded. This parameter specifies that only the oldest
I      GDS is uncataloged or deleted.
N
D    ERASE | NOERASE -
I      Indicates whether to erase the component when its entry in the
I      catalog is deleted.
N
I      ERASE /* Abbreviation: ERAS */: Overwrites the component with
I        binary zeros when its catalog entry is deleted. If the cluster
I        or alternate index is protected by a RACF generic or discrete
I        profile, use RACF commands to assign an ERASE attribute as part
I        of this profile so that the data component is automatically
I        erased upon deletion.
N
I      NOERASE /* Abbreviation: NERAS */: Specifies the component is not
I        to be overwritten with binary zeros when its catalog entry is
I        deleted. NOERASE resets only the indicator in the catalog entry
I        that was created from a prior DEFINE or ALTER command.
I        If the cluster or alternate index is protected by a RACF generic
I        or discrete profile that specifies the ERASE attribute, it is
I        erased upon deletion. Only RACF commands can be used to alter the
I        ERASE attribute in a profile.
N
D    EXCEPTIONEXIT(entrypoint) /* Abbreviation: EEXT */ -
I      Is the name of the user-written routine that receives control
I      if an exception (usually an I/O error) occurs while the entry's
I      object is being processed. An exception is any condition that
I      causes a SYNAD exit. The object's exception exit routine is
I      processed first, then the user's SYNAD exit routine receives
I      control.
N
D    FILE(ddname) -
I      Specifies one of the following:
N
I      -> The name of a DD statement that describes the volume that
I         contains the data set to be altered.
N
I      -> The name of a DD statement that identifies the volume of an
I         entry that will be renamed. The entry must be a non-VSAM data
I         set or the data or index component of a cluster, alternate
I         index, or page space.
N
I      -> The name of a DD statement that describes a partitioned data
I         set when a member is to be renamed.
N
I      If you identify multiple volumes of different device types with
I      FILE, use concatenated DD statements. If you specify ADDVOLUMES
I      or REMOVEVOLUMES, the volume being added or removed must be
I      identified.
N
I      If FILE is not specified, an attempt is made to dynamically
I      allocate the object's data set. Therefore, the object's volume
I      must be mounted as permanently resident or reserved.
N
I      Restriction: While the FILE parameter can preallocate a volume
I      where the data set resides, it does not direct the ALTER request
I      to the data set to be altered. Instead, a catalog search is done
I      to locate the data set to be altered.
N
D    FILEDATA(TEXT | BINARY) -
I      Use one of the following:
N
I      TEXT: Specifies that the data in the data set is text. If the
I      data set is read or written across the network, the data in this
I      data set is EBCDIC on z/OS and ASCII on the workstation.
N
I      BINARY: Specifies that data is to be processed as is.
N
D    FREESPACE(CI-percent CA-percent) -
I      Indicates the percent of free space left after any allocation.
I      CI-percent is a percentage of the amount of space to be preserved
I      for adding new records and updating existing records, with an
I      increase in the length of the record. Because a CI is split when
I      it becomes full, the CA might also need to be split when it is
I      filled by CIs created by a CI split. The amounts, as percentages,
I      must be equal to, or less than, 100. If you use 100% of free
I      space, one record is placed in each control interval and one
I      control interval is placed in each control area (CA).
N
I      Use this parameter to alter the data component of a cluster,
I      alternate index, or catalog.
N
I      If the FREESPACE is altered after the data set has been loaded,
I      and sequential insert processing is used, the allocation of free
I      space is not honored.
N
D    FRLOG(NONE | REDO) -
I      Specifies whether VSAM batch logging can be performed for your
I      VSAM data set. VSAM batch logging is available with CICS VSAM
I      Recovery V3R1.
N
I      NONE: Disables the VSAM batch logging function for your VSAM
I        data set. Changes made by applications are not written to the
I        MVS log stream indicated on the LOGSTREAMID parameter.
N
I      REDO: Enables the VSAM batch logging function for your VSAM
I        data set. Changes made by applications are written to the
I        MVS log stream indicated in the LOGSTREAMID parameter. If you
I        specify FRLOG(REDO), you must also specify LOGSTREAMID for
I        that data set, unless the log stream is already defined.
N
I      Restrictions:
N
I      1. Use the FRLOG parameter only if you want to enable (REDO) or
I         disable (NONE) VSAM batch logging. Do not use the FRLOG
I         parameter for data sets that are not intended for use with
I         VSAM batch logging.
N
I      2. If FRLOG is specified, these rules apply to the data set:
N
I      -> Must be SMS-managed
N
I      -> Cannot be LINEAR or a temporary data set
N
D    INHIBIT | UNINHIBIT -
I      Specifies whether the entry being altered can be accessed for
I      any operation or only for read operations.
N
I      INHIBIT /* Abbreviation: INH */: Used when the entry being
I        altered is to be read only.
N
I      UNINHIBIT /* Abbreviation: UNINH */: Indicates that the
I        read-only restriction set by a previous ALTER or EXPORT
I        command is to be removed.
N
D    KEYS(length offset) -
I      Specifies the length and offset of the object's key. If the
I      altered entry defines an alternate index, offset applies to the
I      alternate key in the data records in the base cluster.
N
I      Restrictions: Use KEYS if all the following are true:
N
I      -> The object whose entry is being altered is an alternate index,
I         a path, a key-sequenced cluster, or a data component of a
I         key-sequenced cluster or alternate index.
N
I      -> The object whose entry is being altered contains no data
I         records.
N
I      -> The values for KEYS in the object's catalog entry are default
I         values. For default values, see the DEFINE command for the
I         object.
N
I      -> The new values for KEYS do not conflict with the control
I         interval size specified when the object was defined.
N
I      -> The key fits within the record whose length is specified by
I         the RECORDSIZE parameter.
N
I      -> The key fits in the first record segment of a spanned record.
N
I      length offset: Is the length of the key (between 1 and 255), in
I        bytes, and its displacement from the beginning of the data
I        record, in bytes. The length of the offset cannot be greater
I        than the length of the data record.
N
I      If the values for KEYS in the object's catalog entry are not
I      default values and ALTER KEYS specifies those same values,
I      processing continues for any other parameters specified in the
I      command, and no error message is issued.
N
D    LIMIT(limit) -
I      Used to modify the maximum number (between 1 and 255) of active
I      generation data sets (GDSs) that might be associated with a
I      generation data group (GDG) base.
N
I      limit: If the limit is less than the current number of active
I        generations, the oldest generations are rolled off until the
I        new limit is satisfied. Any GDSs that are rolled off by this
I        command are listed showing their new status (recataloged,
I        uncataloged, or deleted). For more information about limit
I        processing of a GDS, see z/OS DFSMS Managing Catalogs.
N
I        If the limit is greater than the current number of active
I        generations, it does not cause the roll-in of existing rolled
I        off GDSs. For this function, see the ROLLIN parameter.
N
D    LOCK | UNLOCK -
I      Controls the setting of the catalog lock attribute, and therefore
I      checks access to a catalog. Use LOCK or UNLOCK when the entry
I      name identifies a catalog. If the LOCK | UNLOCK parameter is not
I      specified, the status of the catalog lock attribute is not
I      changed. Before you lock a catalog, review the information on
I      locking catalogs in z/OS DFSMS Managing Catalogs.
N
I        LOCK: Is used when the catalog identified by entryname is to
I          be locked. Locking a catalog makes it inaccessible to all
I          users without read authority to RACF FACILITY class profile
I          IGG.CATLOCK (including users sharing the catalog on other
I          systems).
N
I          For protected catalogs, locking an unlocked catalog requires
I          ALTER authority for the catalog being locked, and read
I          authority to RACF FACILITY profile IGG.CATLOCK. For
I          unprotected catalogs, locking an unlocked catalog requires
I          read authority to RACF FACILITY class profile IGG.CATLOCK.
N
I        UNLOCK: Specifies that the catalog identified by entryname is
I          to be unlocked. For RACF and nonprotected catalogs, unlocking
I          a locked catalog requires read authority to RACF FACILITY
I          class profile IGG.CATLOCK.
N
D    LOG(NONE | UNDO | ALL) -
I      Establishes whether the sphere to be accessed with VSAM
I      record-level sharing (RLS) or DFSMStvs is recoverable or
I      nonrecoverable. It also indicates whether or not forward recovery
I      logging should be done for the sphere. LOG applies to all
I      components in the VSAM sphere.
N
I      NONE: Indicates that neither an external backout nor a forward
I        recovery capability is available for the spheres accessed in
I        VSAM RLS or DFSMStvs mode. If you use this, VSAM RLS and
I        DFSMStvs consider the sphere to be nonrecoverable.
N
I      UNDO: Specifies that changes to the sphere accessed in VSAM RLS
I        or DFSMStvs mode can be backed out using an external log. VSAM
I        RLS and DFSMStvs consider the sphere recoverable when you use
I        LOG(UNDO).
N
I      ALL: Specifies that changes to the sphere accessed in VSAM RLS
I        or DFSMStvs mode can be backed out and forward recovered using
I        external logs. VSAM RLS and DFSMStvs consider the sphere
I        recoverable when you use LOG(ALL). When you specify LOG(ALL),
I        you must also specify the LOGSTREAMID parameter, unless it is
I        already defined.
N
I        VSAM RLS allows concurrent read or update sharing for
I        nonrecoverable spheres through commit (CICS) and non-commit
I        protocol applications. For a recoverable sphere, an application
I        must use DFSMStvs to be able to open the sphere for update
I        using VSAM RLS access.
N
I      Restriction: LOG cannot be used with LINEAR.
N
D    LOGSTREAMID(logstream) /* Abbreviation: LSID */ -
I      Changes or adds the name of the forward recovery log stream. It
I      applies to all components in the VSAM sphere.
N
I      logstream: Is the name of the forward recovery log stream. This
I        can be a fully qualified name up to 26 characters, including
I        separators. This parameter is required if you have specified
I        LOG(ALL).
N
N        For information about defining log streams for CICS use, see
I        the CICS and VSAM Record Level Sharing: Implementation Guide
I        and z/OS DFSMStvs Administration Guide.
N
I      Restriction: LOGSTREAMID cannot be used with LINEAR.
N
D    MANAGEMENTCLASS(class) /* Abbreviation: MGMTCLAS */ -
I      For SMS-managed data sets: Gives the name, 1 to 8 characters,
I      of the management class for a data set. Your storage
I      administrator defines the names of the management classes you
I      can include. If MANAGEMENTCLASS is used for a non-SMS-managed
I      data set, or if SMS is inactive, the ALTER command is
I      unsuccessful.
N
I      When the storage or management class is altered for a DFSMShsm
I      migrated data set, ALTER will not recall the data set to make
I      the change, provided no other parameters are specified.
N
I      You must have RACF access authority to alter the management
I      class.
N
D    NEWNAME(newname) -
I      Indicates that the entry to be altered is to be given a new name.
N
I      When you rename an SMS-managed data set residing on DASD, the
I      MGMTCLAS ACS routine is called and lets you reassign a new
I      management class.
N
I      You can use ALTER NEWNAME to rename SMS-managed generation data
I      sets (GDS). Table 5, in the manual, shows how NEWNAME resolves
I      renaming a GDS under different conditions. You can successfully
I      rename the following:
N
I      -> An SMS-managed GDS to an SMS-managed non-VSAM data set
I      -> An SMS-managed non-VSAM data set to an SMS-managed GDS
I      -> An SMS-managed GDS to another SMS-managed GDS
N
I      Restriction: Catalog names and catalog component names cannot
I      be renamed.
N
I      You might not be able to rename a data set if you are changing
I      the high-level qualifiers of the data set's name and those
I      qualifiers are an alias name of a catalog. (The number of
I      high-level qualifiers used to form an alias can be one to four,
I      depending on the multilevel alias search level used at your
I      installation.)
N
I      If you are changing a high-level qualifier, NEWNAME acts
I      differently, depending on whether the data set being renamed is
I      SMS-managed or non-SMS-managed, and whether the data set has
I      aliases or not. Table 5, in the manual, shows how NEWNAME
I      resolves under different conditions.
N
I      Restriction: Do not change the name of a data set for which
I      there are back outs that need to be done. If you change the
I      data set name in this case, it is impossible to back out the
I      changes and the data set is in an inconsistent state, which can
I      cause data integrity problems.
N
D    NULLIFY( /* Abbreviation: NULL */ -
I      Specifies that the protection attributes identified by
I      Subparameters of NULLIFY are to be nullified. Attributes are
I      nullified before any respecification of attributes is done.
N
D      AUTHORIZATION(MODULE | STRING) /* Abbreviation: AUTH */ -
I        Is used when the user authorization routine or the user
I        authorization record is to be nullified.
N
I        MODULE /* Abbreviation: MDLE */: Removes the module name from
I        the catalog record, but the module itself is not to be deleted.
I        Both the user authorization routine and the user authorization
I        record (character string) are nullified.
N
I        STRING /* Abbreviation: STRG */: Nullifies the authorization
I        record, but the corresponding module is not nullified.
N
D      BWO -
I        Use this parameter to remove the BWO specification from the
I        sphere.
N
D      CODE -
I        Nullifies the code name used for prompting.
N
D      EXCEPTIONEXIT /* Abbreviation: EEXT */ -
I        Nullifies the entry's exception exit. The module name is
I        removed from the catalog record, but the exception-exit
I        routine itself is not deleted.
N
D      LOG -
I        Nullifies the log parameter.
N
I        VSAM RLS or DFSMStvs access to the sphere is not permitted
I        when the log parameter is nullified.
N
D      LOGSTREAMID /* Abbreviation: LSID */ -
I        When you use this, the name of the forward recovery log
I        stream is nullified. NULLIFY(LOGSTREAMID) is not allowed if
I        the data set has a value of LOG(ALL).
N
D      OWNER -
I        Nullifies the owner identification.
N
D      RETENTION /* Abbreviation: RETN */ -
I        Nullifies the retention period that was used in a TO or FOR
I        parameter.
D    ) -
N
D    OWNER(ownerid) -
I      Specifies the owner identification for the entry being altered.
N
D    RECLAIMCA | NORECLAIMCA  -
I      Specifies the CA reclaim attribute of a key-sequence data set (KSDS).
N
I      RECLAIMCA: Specifies that the DASD space for empty control areas
I        (CAs) will be reclaimed so that it can reused for that KSDS.
I        CA reclaim cannot reclaim space for:
N
I      -> Partially empty CAs
N
I      -> Empty CAs that already existed when CA reclaim was enabled
N
I      -> CAs with RBA 0
N
I      -> CAs with the highest key of the KSDS
N
I      -> Data sets processed with GSR.
N
I      NORECLAIMCA: Specifies that the DASD space for empty control
I        areas (CAs) will not be reclaimed.
N
I      You can disable CA reclaim at the system level with the IGDSMSxx
I      member of PARMLIB or with the SETSMS command. This does not
I      change CA reclaim attributes in the catalog.
N
I      For more information, see the topic about reclaiming CA space
I      in z/OS DFSMS Using Data Sets, SC26-7410-11.
N
D    RECORDSIZE(average maximum) /* Abbreviation: RECSZ */ -
I      Specifies new average and maximum lengths for data records
I      contained in the object whose entry is being altered.
N
I      If the object whose entry is being altered is a path pointing
I      to the alternate index, the alternate index is altered; if it
I      is a path pointing directly to the base cluster, the base
I      cluster is altered.
N
I      If the object whose entry is being altered is an alternate index,
I      the length of the alternate key must be within the limit
I      specified by maximum.
N
I      Restrictions: RECORDSIZE is used only if all the following are
I      true:
N
I      -> The object whose entry is being altered is an alternate index,
I         a cluster, a path, or a data component.
N
I      -> The object whose entry is being altered contains no data
I         records.
N
I      -> The maximum RECORDSIZE in the object's catalog entry is the
I         default. For defaults, see the DEFINE command for the object.
N
I      -> If NONUNIQUEKEY is used for an alternate index, the record
I         length to be specified accounts for the increased record size;
I         this results from the multiple prime key pointers in the
I         alternate index data record.
N
I      -> Use a maximum record length of at least seven bytes less than
I         the control interval size, unless the record is a spanned
I         record.
N
I      -> Use a record length large enough to contain all prime and
I         alternate keys previously defined.
N
I      If RECORDSIZE in the object's catalog entry is not the default,
I      and ALTER RECORDSIZE specifies that same value, processing
I      continues for any other parameters given in the command, and
I      there is no error message.
N
D    REMOVEVOLUMES(volser volser...) /* Abbreviation: RVOL */ -
I      Specifies volumes to be removed from the list of candidate
I      volumes associated with the entry being altered. The name of
I      the data or index component must be specified in the ENTRYNAME
I      parameter. If you are also adding volumes, the volumes to be
I      removed are removed after the new volumes are added to the
I      candidate list. Only nonspecific volumes can be removed from
I      SMS-managed, non-VSAM data sets, and GDS data sets. For
I      information on volume cleanup, see "VSAM Volume Cleanup" in
I      z/OS DFSMS Managing Catalogs.
N
I      SMS might not use candidate volumes for which you request
I      specific volsers. Some user-specified volsers. for an
I      SMS-managed data set can result in an error. To avoid candidate
I      volume problems with SMS, you can request that SMS choose the
I      given volser used for a candidate volume. To do this, you can
I      code an * for each volser that you request. If, however, you
I      request both specified and unspecified volsers in the same
I      command, you must enter the specified volsers first in the
I      command syntax.
N
I      To ensure that the operation has completed correctly, the
I      execution of ALTER REMOVEVOLUMES should be followed by a listing
I      of the VTOC on the target volume. If ALTER REMOVEVOLUMES did not
I      scratch any data sets allocated to job steps, it can still
I      complete with return code zero. Both the basic catalog structure
I      (BCS) and the VSAM volume data set (VVDS) might be allocated to
I      another job or TSO/E user. If so, these entities are not
I      scratched, and any future access method services commands that
I      depend on ALTER REMOVEVOLUMES completing normally might be
I      unsuccessful. To ensure that the operation has completed
I      correctly, follow the execution of ALTER REMOVEVOLUMES with a
I      listing of the VTOC on the target volume.
N
I      Exceptions:
N
I      1. If a volume to be removed contains data that belongs to the
I         entry being altered, the volume is not removed.
N
I      2. Volume cleanup is not supported if the volume is SMS managed.
N
D    REUSE | NOREUSE -
I      Controls setting the REUSE indicator for VSAM data sets. A data
I      set that requires the REUSE attribute be changed to "reusable"
I      cannot be an alternate index nor can it have an associated
I      alternate index. The data set also cannot be a key-sequenced
I      data set (KSDS) with one or more key ranges.
N
D    ROLLIN /* Abbreviation: ROL */ -
I      Indicates whether an SMS-managed generation data set (GDS) is to
I      be rolled-in. The generation data set must be SMS managed and
I      either in a deferred rolled-in state or a rolled-off state. For
I      more information about rolling in GDSs, see z/OS DFSMS Using
I      Data Sets for more information.
N
D    SCRATCH | NOSCRATCH /* Abbreviations: SCR and NSCR */ -
I      Specifies whether generation data sets, when they are
I      uncataloged, are to be removed from the VTOC of the volume where
I      they reside.
N
I      SCRATCH: Removes the data set's format-1 DSCB from the VTOC so
I      that the data set can no longer be accessed, and, for SMS-managed
I      data sets, the non-VSAM volume record (NVR) is removed from the
I      VVDS.
N
I      NOSCRATCH: Indicates that the data set's format-1 DSCB is not
I      to be removed from the VTOC and, for SMS-managed data sets, the
I      NVR entry remains in the VVDS.
N
D    SHAREOPTIONS(crossregion crosssystem) /* Abbreviation: SHR */ -
I      Is used when a data or index component of a cluster, alternate
I      index, or the data component of a catalog can be shared among
I      users. However, SMS-managed volumes, and catalogs containing
I      SMS-managed data sets, must not be shared with non-SMS systems.
I      (For a description of data set sharing, see z/OS DFSMS Using
I      Data Sets).
N
I      The value of SHAREOPTIONS is assumed to be (3,3) when the data
I      set is accessed in VSAM RLS or DFSMStvs mode.
N
I      crossregion: Specifies the amount of sharing allowed among
I        regions within the same system or within multiple systems
I        using global resource serialization (GRS). Independent job
I        steps in an operating system, or multiple systems in a GRS
I        ring, can access a VSAM data set concurrently. For a
I        description of GRS, see z/OS MVS Planning: Global Resource
I        Serialization. Option 3 is the only one applicable for altering
I        a catalog. To share a data set, each user must code DISP=SHR
I        in the data set's DD statement. You can use the following
I        options:
N
I        1: The data set can be shared by any number of users for read
I           processing, or the data set can be accessed by only one user
I           for read and write processing. VSAM ensures complete data
I           integrity for the data set. This setting does not allow any
I           non-RLS access when the data set is already open for VSAM
I           RLS or DFSMStvs processing. A VSAM RLS or DFSMStvs open will
I           fail with this option if the data set is already open for
I           any processing.
N
I        2: The data set can be accessed by any number of users for read
I           processing, and it can also be accessed by one user for
I           write processing. It is the user's responsibility to provide
I           read integrity. VSAM ensures write integrity by obtaining
I           exclusive control for a control interval while it is being
I           updated. A VSAM RLS or DFSMStvs open is not allowed while
I           the data set is open for non-RLS output.
N
I           If the data set has already been opened for VSAM RLS or
I           DFSMStvs processing, a non-RLS open for input is allowed;
I           a non-RLS open for output fails. If the data set is opened
I           for input in non-RLS mode, a VSAM RLS or DFSMStvs open is
I           allowed.
N
I        3: The data set can be fully shared by any number of users. The
I           user is responsible for maintaining both read and write
I           integrity for the data the program accesses. This setting
I           does not allow any non-RLS access when the data set is
I           already open for VSAM RLS or DFSMStvs processing. If the
I           data set is opened for input in non-RLS mode, a VSAM RLS
I           or DFSMStvs open is allowed.
N
I           This option is the only one applicable to a catalog.
N
I        4: The data set can be fully shared by any number of users.
I           For each request, VSAM refreshes the buffers used for
I           direct processing. This setting does not allow any non-RLS
I           access when the data set is already open for RLS or DFSMStvs
I           processing. If the data set is opened for input in non-RLS
I           mode, a VSAM RLS or DFSMStvs open is allowed.
N
I           As in SHAREOPTIONS 3, each user is responsible for
I           maintaining both read and write integrity for the data the
I           program accesses.
N
I      crosssystem: Is the amount of sharing allowed among systems. Job
I        steps of two or more operating systems can gain access to the
I        same VSAM data set regardless of the disposition specified in
I        each step's DD statement for the data set. To get exclusive
I        control of the data set's volume, a task in one system issues
I        the RESERVE macro. The level of cross-system sharing allowed by
I        VSAM applies only in a multiple operating system environment.
N
I        The cross-system sharing options are ignored by VSAM RLS or
I        DFSMStvs processing. The values are:
N
I        1: Reserved.
N
I        2: Reserved.
N
I        3: Specifies that the data set can be fully shared. With this
I           option, each user is responsible for maintaining both read
I           and write integrity for the data the program accesses. User
I           programs that ignore write integrity guidelines can cause
I           VSAM program checks, uncorrectable data set problems, and
I           other unpredictable results.
N
I           The RESERVE and DEQ macros are required with this option to
I           maintain data set integrity. (For information on using
I           RESERVE and DEQ, see z/OS MVS Programming: Authorized
I           Assembler Services Reference LLA-SDU and z/OS MVS
I           Programming: Authorized Assembler Services Reference
I           ALE-DYN.)
N
I        4: Specifies that the data set can be fully shared. For each
I           request, VSAM refreshes the buffers used for direct
I           processing. This option requires that you use the RESERVE
I           and DEQ macros to maintain data integrity while sharing the
I           data set. Improper use of the RESERVE macro can cause
I           problems similar to those described under SHAREOPTIONS 3.
I           (For information on using RESERVE and DEQ, see z/OS MVS
I           Programming: Authorized Assembler Services Reference
I           LLA-SDU and z/OS MVS Programming: Authorized Assembler
I           Services Reference ALE-DYN.)
N
I           Output processing is limited to update or add processing
I           that does not change either the high-used relative byte
I           address (RBA) or the RBA of the high key data control
I           interval if DISP=SHR is specified.
N
D    STORAGECLASS(class) /* Abbreviation: STORCLAS */ -
I      For SMS-managed data sets: Gives the name, 1 to 8 characters,
I      of the storage class. Your storage administrator defines the
I      names of the storage classes you can assign. A storage class is
I      assigned when you specify STORAGECLASS or an installation-written
I      automatic class section (ACS) routine selects a storage class
I      when the data set is created. Use the storage class to provide
I      the storage service level to be used by SMS for storage of the
I      data set. The storage class provides the storage attributes that
I      are specified on the UNIT and VOLUME operand for non-SMS-managed
I      data sets.
N
I      When the storage or management class is altered for a DFSMShsm
I      migrated data set, ALTER will not recall the data set to make
I      the change, provided no other parameters are specified.
N
I      You must have RACF access authority to alter the storage class.
N
I      If STORAGECLASS is used for a non-SMS-managed data set or if
I      SMS is inactive, the ALTER command is unsuccessful.
N
D    STRNO(number) -
I      Specifies the number of concurrent catalog positioning requests
I      that VSAM should manage. Use this parameter to alter the data
I      component of a catalog. The STRNO setting is ignored when the
I      data set is opened for RLS or DFSMStvs.
N
I      number: Is the number of concurrent requests VSAM must manage.
I        The minimum number is 2, the maximum is 255.
N
D    TO(date) | FOR(days) -
I      Specifies the retention period for the entry being altered.
N
I      You cannot use these parameters for the data or index components
I      of clusters or alternate indexes. For catalogs, you must use the
I      data component name. The expiration date in the catalog is
I      updated, and, for SMS-managed data sets, the expiration date in
I      the format-1 DSCB is changed. Enter a LISTCAT command to see the
I      correct expiration date.
N
I      The MANAGEMENTCLASS maximum retention period, if specified,
I      limits the retention period specified by this parameter.
N
I      TO(date): Specifies the earliest date that a command without the
I        PURGE parameter can delete an entry. Specify the expiration
I        date in the form yyyyddd, where yyyy is a four-digit year (to
I        a maximum of 2155) and ddd is the three-digit day of the year
I        from 001 through 365 (for non-leap years) or 366 (for leap
I        years).
N
I        The following four values are "never-expire" dates:
I        99365, 99366, 1999365, and 1999366. Specifying a "never-expire"
I        date means that the PURGE parameter will always be required to
I        delete an entry. For related information, see the "EXPDT
I        Parameter" section of z/OS MVS JCL Reference, SA22-7597.
N
I        Notes:
N
I        1. Any dates with two-digit years (other than 99365 or 99366)
I           will be treated as pre-2000 dates. (See note 2.)
N
I        2. Specifying the current date or a prior date as the
I           expiration date will make an entry immediately eligible
I           for deletion.
N
I      FOR(days): Specifies the number of days you want to keep the
I        entry. The maximum number is 93000. If the number is 0 through
I        92999 (except for 9999), the entry is retained for the number
I        of days indicated. If the number is either 9999 or 93000, the
I        entry is retained indefinitely. There is a hardware imposed
I        expiration date of 2155.
N
D    TYPE(LINEAR) /* Abbreviation: LIN */ -
I      Specifies that the VSAM data set type of an entry-sequenced data
I      set (ESDS) is to be changed to linear. The contents of the data
I      set are not modified. Only an ESDS with a CI size of 4096 is
I      eligible to be a linear data set. A linear data set's type cannot
I      be changed. After you have changed an ESDS set to a linear data
I      set, the data set must remain a linear data set; you cannot
I      change it back into an ESDS.
N
I      LINEAR: Changes the VSAM data type ESDS to a linear data set
I        (LDS).
N
D    UNIQUEKEY | NONUNIQUEKEY /* Abbreviations: UNQK and NUNQK */ -
I      Specifies whether the alternate key value can be found in more
I      than one of the base cluster's data records.
N
I      UNIQUEKEY: Makes each alternate key value unique. If the same
I        alternate key value is found in more than one of the base
I        cluster's data records, an error results.
N
I        You can use UNIQUEKEY for an empty alternate index (that is,
I        an alternate index that is defined but not yet built).
N
I      NONUNIQUEKEY: Allows an alternate key value to point to more
I        than one data record in the cluster. NONUNIQUEKEY can be
I        specified for an alternate index at any time.
N
I        If the alternate index is empty, you should also consider
I        defining RECORDSIZE to ensure that each alternate index record
I        is large enough to contain more than one data record pointer.
N
D    UPDATE | NOUPDATE /* Abbreviations: UPD and NUPD */ -
I      Specifies whether a base cluster's alternate index upgrade set
I      is to be allocated when the path's name is allocated.
N
I      The NOUPDATE setting is ignored when the data set is opened for
I      VSAM RLS or DFSMStvs. Alternate indexes in the upgrade set are
I      opened as if UPDATE was specified.
N
I      UPDATE: Allocates the cluster's alternate index upgrade set when
I        the path's name is allocated with a DD statement.
N
I      NOUPDATE: Specifies that the cluster's alternate index upgrade
I        set is not to be allocated but the path's cluster is to be
I        allocated. You can use NOUPDATE to open a path. If the path
I        shares a control block structure that uses UPDATE, this
I        indicates the upgrade set has been allocated and, in this
I        case, the upgrade set can be updated.
N
D    UPGRADE | NOUPGRADE /* Abbreviations: UPG and NUPG */ /* - */
I      Shows whether an alternate index is to be upgraded (to reflect
I      the changed data) when its base cluster is modified.
N
I      UPGRADE: Indicates that the cluster's alternate index is upgraded
I        (to reflect the changed data) when the cluster's records are
I        added to, updated, or erased.
N
I        If UPGRADE is used when the cluster is open, the upgrade
I        attribute does not apply to the alternate index until the
I        cluster is closed and then opened (that is, a new set of VSAM
I        control blocks describes the cluster and its attributes).
N
I        Use UPGRADE for an empty alternate index (that is, an alternate
I        index that is defined but not built). However, the UPGRADE
I        attribute is not effective for the alternate index until the
I        alternate index is built (see the description of the BLDINDEX
I        command).
N
I      NOUPGRADE: Specifies the alternate index is not to be modified
I        when the its base cluster is modified. NOUPGRADE can be use
I        as an alternate index at any time.
N
M    CATALOG(catname) /* Abbreviation: CAT */
I      Specifies the catalog containing the entry to be altered.
N
I      To assign catalog names for SMS-managed data sets, you must have
I      access to the RACF STGADMIN.IGG.DIRCAT FACILITY class.
I      See "Storage Management Subsystem (SMS) Considerations" for more
I      information. If you are altering BUFNI for a catalog other than
I      the current master catalog on the system this command is issued
I      on, then this is a required parameter.
N
I      catname: Is the name of the catalog that contains the entry.
N
M      If you omit this paramer, and mst of the time you should, they
M      system will locate the correct catalog by following the ALIAS.
* End of WISH.
