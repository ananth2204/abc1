SISPG0204
TISPF Services Guide
T-Chapter 2.
T-CONTROL-Set processing modes
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-141502
*
@IBM Corporation
*
Bf54sg00_v2r3.pdf: SC19-3626-30: ISPF
B-Services Guide
B-z/OS Version 2 Release 3
*
NInteractive System Productivity Facility (ISPF) Services Guide
N==============================================================
NChapter 2. Description of the ISPF services
N-------------------------------------------
NCONTROL-Set processing modes
N----------------------------
NThe CONTROL service defines certain processing options for the dialog
Nenvironment. It allows a function to condition ISPF to expect certain
Nkinds of display output, or to control the disposition of errors
Nencountered by other DM component services. The processing options
Ncontrol the display screen and error processing.
N
NADDPOP/REMPOP service in relation to CONTROL service
N----------------------------------------------------
NThe ADDPOP service performs the equivalent of a CONTROL DISPLAY SAVE
Nprior to creating the pop-up window and the REMPOP service performs
Nthe equivalent of a CONTROL DISPLAY RESTORE after removing the current
Npop-up window. A dialog should not issue its own CONTROL DISPLAY
NSAVE/RESTORE around an ADDPOP/REMPOP sequence.
N
NCommand invocation format
N-------------------------
D  ADDRESS ISPEXEC "CONTROL" ,
I    "DISPLAY" | "NONDISPL" | "ERRORS" | "SPLIT" | "NOCMD" |
I    "SUBTASK" | "TSOGUI" | "REFLIST" | "LE" | "PASSTHRU"
N    -------------------------------------------------------
N
N-----------------------------------------------------------------------
D    "DISPLAY" ,
I      Specifies that a display mode is to be set. The valid modes are
I      LOCK, LINE, REFRESH, SAVE, RESTORE, SM, and ALLVALID. LINE mode
I      is in effect until the next display of an ISPF panel. REFRESH
I      occurs on the next display of an ISPF panel.
N
I      "LOCK" | "LINE" | "SM" | "REFRESH" | "SAVE" |
I      "RESTORE" | "ALLVALID"
N      ---------------------------------------------
D      "LOCK" ,
I        Specifies that the next (and only the next) display
I        output (such as output from the DISPLAY or TBDISPL service)
I        is to leave the terminal user's keyboard locked. ISPF
I        processes the next display output as though the user had
I        pressed the Enter key. It is the dialog developer's
I        responsibility to ensure that the keyboard is unlocked by the
I        subsequent display of a message or panel.
N
I        While the keyboard is locked, the screen is not protected from
I        being overlaid by line-mode messages. To ensure that the screen
I        is fully rewritten you must follow the CONTROL DISPLAY LOCK
I        request with a CONTROL DISPLAY LINE request.
N
I        CONTROL DISPLAY LOCK can be used to display an "in process"
I        message during a long-running operation.
N
D      "LINE" ,
I        Specifies that terminal line-mode output is expected, for
I        example from a TSO command or program dialog. The screen is
I        completely rewritten on the next ISPF full-screen write
I        operation, after the lines have been written.
N
I        Note: CONTROL DISPLAY LINE is automatically invoked by the
I        SELECT service whenever a SELECT CMD request is encountered,
I        unless the command begins with a percent (%) sign. For example:
N
I        -> SELECT CMD(ABC) - causes automatic entry into line mode
I        -> SELECT CMD(%ABC)- no automatic entry into line mode.
N
I        The MODE parameter of the SELECT service can be used to
I        override this use of the percent sign.
N
D        "START(line-number)"
I          This parameter specifies the line number on the screen where
I          the line-mode output is to begin. (The first line on the
I          screen is line number 1.) The screen is erased from this line
I          to the bottom. If this parameter is omitted or coded as zero,
I          the value defaults to the end of the body of the currently
I          displayed panel.
N
I          The line-number parameter must have an integer value. For a
I          call, it must be a fullword fixed binary integer. The
I          parameter should specify a line value that is not within
I          three lines of the bottom of the logical screen. If the value
I          is within three lines of the bottom of the logical screen, a
I          default line value is used. This value is equivalent to the
I          number of the bottom line of the screen, minus 3.
N
I          This parameter is meaningful only when entering line mode. It
I          can be specified with the SM keyword, since SM reverts to
I          LINE if the Session Manager is not installed. Once line mode
I          has been set, subsequent attempts to set line mode (without
I          intervening full-screen output) are ignored. Accordingly, the
I          line-number, once set, cannot be changed.
N
I          For DBCS terminals, CONTROL DISPLAY LINE always clears the
I          screen and places the cursor on line 1, regardless of the
I          line-number value.
N
D      "SM" ,
I        Specifies that the TSO Session Manager is to take control of
I        the screen when the next line-mode output is issued. If the
I        Session Manager is not installed, the SM keyword is treated as
I        LINE.
N
I        Note: If you specify the SM keyword when graphics interface
I        mode is active (for example, following a GRINIT service request
I        but before a GRTERM service request has been issued), Session
I        Manager does not get control of the screen. In this case, the
I        SM keyword is treated as LINE.
N
D        "START(line-number)"
I          This parameter specifies the line number on the screen where
I          the line-mode output is to begin. (The first line on the
I          screen is line number 1.) The screen is erased from this line
I          to the bottom. If this parameter is omitted or coded as zero,
I          the value defaults to the end of the body of the currently
I          displayed panel.
N
I          The line-number parameter must have an integer value. For a
I          call, it must be a fullword fixed binary integer. The
I          parameter should specify a line value that is not within
I          three lines of the bottom of the logical screen. If the value
I          is within three lines of the bottom of the logical screen, a
I          default line value is used. This value is equivalent to the
I          number of the bottom line of the screen, minus 3.
N
I          This parameter is meaningful only when entering line mode. It
I          can be specified with the SM keyword, since SM reverts to
I          LINE if the Session Manager is not installed. Once line mode
I          has been set, subsequent attempts to set line mode (without
I          intervening full-screen output) are ignored. Accordingly, the
I          line-number, once set, cannot be changed.
N
I          For DBCS terminals, CONTROL DISPLAY LINE always clears the
I          screen and places the cursor on line 1, regardless of the
I          line-number value.
N
D      "REFRESH"
I        Specifies that the entire screen image is to be rewritten when
I        the next ISPF-generated full-screen write is issued to the
I        terminal. This facility should be used before or after invoking
I        any program that uses non-ISPF services for generating
I        full-screen output. Be aware that REFRESH does not always
I        result in a return to full-screen mode. To ensure a return to
I        full-screen mode in ISPF, the dialog should issue
I        CONTROL DISPLAY LINE.
N
D      "SAVE"
I        Used in conjunction with DISPLAY, TBDISPL, BROWSE, EDIT, or
I        VIEW processing to indicate that information about the
I        current logical screen, including control information, is to
I        be saved.
N
I        Use of the CONTROL service SAVE and RESTORE parameters allows
I        DISPLAY, TBDISPL, BROWSE, EDIT, or VIEW processing to be
I        nested. The CONTROL service should be used to save and
I        restore the environment at each level. SAVE and RESTORE must
I        be issued in pairs. Issue SAVE following the screen display;
I        issue RESTORE before the next request for the saved panel.
N
I        A command entered by the user in the command field of a
I        displayed panel causes the dialog manager to issue a SELECT
I        service request for the dialog to process the command. The
I        current display environment is automatically saved before
I        invoking the designated dialog. That environment is
I        subsequently restored when the dialog ends.
N
I        The current DISPLAY environment that existed before the SAVE
I        is not available to a nested processing level.
N
I        Table display service system variables, ZTD*, are not saved
I        as part of the SAVE/RESTORE information. The values of these
I        variables may be saved by the dialog developer before
I        invoking another table display and restored before resuming
I        processing of the initial table display. Also, the ZVERB
I        variable is not saved.
N
D      "RESTORE"
I        Specifies the restoration of information previously saved by
I        CONTROL DISPLAY SAVE. The logical screen image is restored
I        exactly as it appeared when the SAVE was performed.
I        Processing of the previous panel or table display can then be
I        resumed.
N
D      "ALLVALID"
I        Specifies that ISPF is to consider all displayed code points
I        from X'40' to X'FE' as valid. This specification applies to all
I        subsequent DISPLAY and TBDISPL service requests within the
I        current SELECT level only and remains in effect until the
I        SELECT level ends. It is not propagated to lower SELECT levels.
N
I        It is the responsibility of the dialog to ensure that the code
I        points are displayable without a hardware error before issuing
I        this option.
N
N-----------------------------------------------------------------------
D    "NONDISPL" ,
I      Specifies that no display output is to be issued to the terminal
I      when processing the next panel definition. This option is in
I      effect only for the next panel; after that, normal display mode
I      is resumed. Initializing the ZCMD variable to a value may cause
I      a panel to display after 'CONTROL NONDISPL' has been issued. This
I      can be circumvented by using the COMMAND option of the DISPLAY
I      service which will cause the panel specified on the DISPLAY
I      service to be processed in CONTROL NONDISPL ENTER mode.
N
I      Note: NONDISPL mode stays active until the next panel definition
I      is processed; that is, until the PROC section of a panel display
I      has been completed. Error conditions, such as an error in the
I      panels INIT section, or an action coded in an INIT section, such
I      as .RESP=ENTER, causes panel processing to bypass the panels
I      PROC section, leaving CONTROL NONDISPL active until the PROC
I      section of the next panel is processed.
N
I      "ENTER" | "END"
N      ---------------
D      "ENTER" ,
I        Specifies that the Enter key is to be simulated as the user
I        response to the NONDISPL processing for the next panel.
N
D      "END" ,
I        Specifies that the END command is to be simulated as the user
I        response to the NONDISPL processing for the next panel.
N
D      "NOSETMSG"
I        Specifies that the SETMSG Service message is to be suppressed
I        when the panel on which it was intended to be displayed is
I        suppressed by the CONTROL NONDISPL ENTER Service, but an error
I        when processing the panel causes the panel to be displayed. The
I        NOSETMSG parameter is, in effect, only for the next panel. the
I        NOSETMSG parameter is ignored on the CONTROL NONDISPL END
I        Service.
N
N-----------------------------------------------------------------------
D    "ERRORS" ,
I      Specifies that an error mode is to be set. The valid modes are
I      CANCEL and RETURN. If the RETURN mode is set, it applies only to
I      the function that set it using this, the CONTROL, service. The
I      error mode that has been set is not propagated to any new
I      function invoked by the SELECT service.
N
I      "CANCEL" | "RETURN"
N      -------------------
D      "CANCEL"
I        Specifies that the dialog is to be terminated on an error
I        resulting from a return code of 12 or higher from any service.
I        A message is written to the ISPF log file, and a panel is
I        displayed to describe the particular error situation. In batch
I        mode, messages are written to the SYSTSPRT data set.
N
D      "RETURN"
I        Specifies that control is to be returned to the dialog on an
I        error. System variables ZERRxxxx, as described in "Return codes
I        from services" contain the information for the message that
I        describes the error. The message is not written to the ISPF
I        log file unless TRACE mode is in effect, and no error panel is
I        displayed. If you want the dialog to abend with STAE you must
I        specify CONTROL ERRORS RETURN, because specification of
I        CONTROL ERRORS CANCEL nullifies the requested STAE.
N
N-----------------------------------------------------------------------
D    "SPLIT" ,
I      Specifies the user's ability to enter split-screen mode, as
I      defined by the ENABLE or DISABLE keyword.
N
I      "ENABLE" | "DISABLE"
N      --------------------
D      "ENABLE"
I        Specifies that the user is to be allowed to enter split-screen
I        mode. Split-screen mode is normally enabled. It is disabled
I        only if explicitly requested by use of the CONTROL service. It
I        remains disabled until explicitly re-enabled by the CONTROL
I        service. Because SPLIT commands are not supported when ISPF is
I        running in the batch environment, issuing CONTROL SPLIT ENABLE
I        results in a severe error (return code 20).
N
D      "DISABLE"
I        Specifies that the user's ability to enter split-screen mode is
I        to be disabled, until explicitly enabled by the CONTROL
I        service. If the user is already in split screen mode, a return
I        code of 8 is issued and split-screen mode remains enabled.
N
N-----------------------------------------------------------------------
D    "NOCMD"
I      Specifies that for the next displayed panel only, any command
I      entered on the command line or through use of a function key is
I      not to be honored. NOCMD is in effect for any redisplay of the
I      panel.
N
N-----------------------------------------------------------------------
D    "SUBTASK" ,
I      This option pertains to multi-task program dialogs that are
I      invoked as TSO commands by the CMD interface of the SELECT
I      service.
N
I      "PROTECT" | "CLEAR"
N      -------------------
D      "PROTECT"
I        Specifies that ISPF is to establish an ESTAE routine to trap
I        and ignore the abend that occurs when ISPF tries to POST a
I        subtask that no longer exists.
N
M        See additional information in the manual.
N
D      "CLEAR"
I        Specifies that ESTAE protection on the POST of a subtask is to
I        be terminated.
N
N-----------------------------------------------------------------------
D    "TSOGUI" ,
I      ISPF/TSO window.
N
I      Note:
I      1. CONTROL TSOGUI is ignored if you are not running ISPF GUI with
I         TSO line mode support.
N
I      2. CONTROL TSOGUI defaults to ON during ISPF GUI session
I         initialization.
N
I      "QUERY" | "OFF" | "ON"
N      ----------------------
D      "QUERY"
I        Gives the current status of the ISPF/TSO window:
N
I        RC = 0: Either the user is not running ISPF GUI with TSO line
I          mode support or TSOGUI is OFF. All TSO input and output is
I          directed to the 3270 session.
N
I        RC = 1: All TSO line mode output is displayed in the ISPF/TSO
I          window and line mode input must be entered into the ISPF/TSO
I          window's input field.
N
D      "OFF"
I        Specifies that the ISPF/TSO window is suspended and all full
I        screen and line mode data appear in the 3270 window until
I        CONTROL TSOGUI ON is issued.
N
D      "ON"
I        Specifies that the ISPF/TSO window is to be resumed and all
I        TSO line mode output and input is directed to the ISPF/TSO
I        window.
N
N-----------------------------------------------------------------------
D    "REFLIST" ,
I      Data set and library reference lists.
N
I      Note:
I      1. The CONTROL REFLIST command is used to enable or disable
I         automatic updates to the reference lists. It is intended to
I         be used around calls to ISPF services that normally cause
I         entries in the reference lists. These services include EDIT,
I         BROWSE, VIEW, and LMINIT.
N
I      2. When NOUPDATE is specified, the reference list is not updated,
I         even if the user settings request updates. This is so programs
I         can ensure that they do not fill up the reference list with
I         names that the user would never want to see, such as temporary
I         or intermediate files.
N
I      3. The program invoking the CONTROL REFLIST NOUPDATE command to
I         turn off reference list updates must specify CONTROL REFLIST
I         UPDATE before it exits. It is recommended that you issue a
I         CONTROL REFLIST NOUPDATE immediately before the service that
I         would normally update the reference list (such as LMINIT,
I         EDIT, or BROWSE) and issue a CONTROL REFLIST UPDATE
I         immediately after the service returns.
N
I      4. There is only one CONTROL REFLIST setting for each logical
I         screen (or split screen), and using this command can affect
I         updates in the logical screen after the invoking program ends.
N
I      "UPDATE" | "NOUPDATE"
N      ---------------------
D      "UPDATE"
I        Enable ISPF allocations to add entries to the data set and
I        library reference lists.
N
D      "NOUPDATE"
I        Do not allow ISPF allocations to add entries to the data set
I        and library reference lists.
N
N-----------------------------------------------------------------------
D    "LE" ,
I      ISPF initialization for Language Environment support.
N
I      "ON" | "OFF"
N      ------------
D      "ON"
I        CONTROL LE ON is required before each BRIF or EDIF call where
I        the application has provided Language Environment-enabled
I        command, read, or write routines.
N
D      "OFF"
I        CONTROL LE OFF is required after each such call.
N
N-----------------------------------------------------------------------
D    "PASSTHRU"
I      Specifies if LEFT and RIGHT processing are being passed to the
I      dialog program for processing.
N
I      "LRSCROLL"
I        LEFT and RIGHT scrolling.
N
I        "PASQUERY" | "PASOFF" | "PASON"
N        -------------------------------
d        "PASQUERY"
I          Gives the current status of processing for the LEFT and RIGHT
I          scroll commands:
N
I          RC = 0: The LEFT and RIGHT scroll commands are not being
I            passed to the dialog program.
N
I          RC = 1: The LEFT and RIGHT scroll commands are being passed
I            to the dialog program for processing.
N
D        "PASOFF"
I          Specifies that the LEFT and RIGHT scroll commands are not to
I          be passed to the dialog program.
N
D         "PASON"
I           Specifies that the LEFT and RIGHT scroll commands are to be
I           passed to the dialog program for processing.
N
NReturn codes
N------------
NThese return codes are possible:
N
D  control_rc = RC
D  SELECT
D    WHEN (control_rc = 0) THEN DO
D      /* Normal completion. */
D      NOP
D    END
D    WHEN (control_rc = 8) THEN DO
D      /* Split-screen mode already in effect. Applies only to a
D         SPLIT DISABLE request. Split-screen mode remains enabled. */
D      SAY "Ask your programmer to alter the logic."
D    END
D    WHEN (control_rc = 20) THEN DO
D      /* Severe error. */
D      SAY "Ask your programmer to fix the logic."
D    END
D    OTHERWISE DO
D      SAY "Something very unexpected happened, RC("control_rc")."
D    END
D  END
N
NExample 1: ERRORS - Allow the dialog function to process return codes.
N----------------------------------------------------------------------
I  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
N
MProgramming Using The Keneth Tomiak Method calls for always using
Mthis statement.
N
NExample 2: DISPLAY - Lock the screen while displaying a status message.
N-----------------------------------------------------------------------
I  ADDRESS ISPEXEC "CONTROL DISPLAY LOCK"
I  control_rc = RC
I  ADDRESS ISPEXEC "DISPLAY PANEL(ISPG204A)"
I  ADDRESS ISPEXEC "DISPLAY MSG(ISPG204C)"
I  display_rc = RC
I  say "DISPLAY MSG RC("display_rc")."
N
NExample 3: NONDISPL - Process a panel definition without displaying it.
N-----------------------------------------------------------------------
I  ADDRESS ISPEXEC "CONTROL NONDISPL"
I  ADDRESS ISPEXEC "DISPLAY PANEL(ISPG201A)"
N
NExample 4: SPLIT.
N-----------------
MYou have no good reason for using this!
N
NExample 5: NOCMD.
N-----------------
N
NExample 6: SUBTASK.
N-------------------
N
NExample 7: TSOGUI.
N------------------
I  ADDRESS ISPEXEC "CONTROL TSOGUI QUERY"
I  tsogui_rc = RC
I  SELECT
I    WHEN (tsogui_rc = 0) THEN DO
I      /* user is not running ISPF GUI with TSO line mode support or
I         TSOGUI is OFF. All TSO input and output is directed to
I         the 3270 session. */
I      SAY "No TSOGUI support at this time."
I    END
I    WHEN (tsogui_rc = 1) THEN DO
I      /* All TSO line mode output is displayed in the ISPF/TSO window
I         and line mode input must be entered into the ISPF/TSO
I         window's input field. */
I    END
I    OTHERWISE DO
I      SAY "Something very unexpected happened, RC("tsogui_rc")."
I    END
I  END
N
NExample 8: REFLIST.
N-------------------
I  ADDRESS ISPEXEC "CONTROL REFLIST NOUPDATE"
I  ADDRESS ISPEXEC "BROWSE DATASET('ISPFPROJ.FTOUTPUT(TEL*)')"
I  ADDRESS ISPEXEC "CONTROL REFLIST UPDATE"
N
NExample 9: LE.
N--------------
I  ADDRESS ISPEXEC "CONTROL LE ON"
I  CALL ISPLINK('BRIF ','SPOOL.DATA ','V ',132,READRTN,CMDRTN,' ', ,
I  ' ',' ','NO ')
I  ADDRESS ISPEXEC "CONTROL LE OFF"
N
NExample 10: PASSTHRU.
N---------------------
I  ADDRESS ISPEXEC "CONTROL PASSTHRU LRSCROLL PASQUERY"
I  pasquery_rc = RC
I  SELECT
I    WHEN (pasquery_rc = 0) THEN DO
I      /* The LEFT and RIGHT scroll commands are not being passed to
I         the dialog program. */
I      SAY "LEFT/RIGHT scrolling are not passed thru."
I    END
I    WHEN (pasquery_rc = 1) THEN DO
I      /* The LEFT and RIGHT scroll commands are being passed to the
I         dialog program for processing. */
I      SAY "LEFT/RIGHT scrolling are passed thru."
I    END
I    OTHERWISE DO
I      SAY "Something very unexpected happened, RC("pasquery_rc")."
I      SAY ZERRSM
I      SAY ZERRLM
I    END
I  END
* End of WISH.
