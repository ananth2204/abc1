SRXCP0101
TGeorge Fulk
T-REXX Compiler Presentation
T-Tomiak source ANYREXX
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180522-155909
Whttp://www.ktomiak.biz/ORG/
@Kenneth Tomiak
*
NGeorge Fulk
N-----------
NREXX Compiler Presentation
N--------------------------
NTomiak source ANYREXX
N---------------------
D/* rexx */
DRexx_ANYREXX:
D  rexxpgm_version = "01.00"           /* ver lev */
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D=======================================================================
D This code drives Initialization, Process, and Termination routines.
D=======================================================================
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DMain_Routine:
D  return_code = Initialization_Routine()
D  IF (return_code = 0) THEN DO
D    return_code = Process_Routine()
D  END
D  return_code = Termination_Routine()
D  RETURN return_code
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D=======================================================================
D
D Dataset:  DEMO.REXX(ANYREXX)
D Contact:  "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
D Overview: Determine the operating system so that the programmer can
D           use platform-specific instructions. For example:
D           z/OS and z/VM use EXECIO instead of CHARIN/LINE on the PC.
D Syntax:   %ANYREXX |arguments|
D
D-----------------------------------------------------------------------
D
D History of Modifications
D ------------------------
Dvv.mm WHEN     Who / What you did ... (Newest change at the top.)
D----- -------- --------------------------------------------------------
D01.00 20180516 KTOMIAK "Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
D               1) Original code in KTPM07 style.
D----- -------- --------------------------------------------------------
D
D-----------------------------------------------------------------------
D
DSTANDARD GLOBAL DISCLAIMER
D--------------------------
DThe author explicitly disavows any claim whatsoever about the
Dcorrectness or functionality of this program, and disclaims liability
Dfor anything and everything bad that might happen in connection with,
Dbefore, during, or after using it. I have tried to make it work right,
Dand I am personally pretty confident that it does, but everybody makes
Dmistakes, so if you use it, you do so at your own risk.
D
D=======================================================================
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D=======================================================================
D This routine initializes constants and variables.
D=======================================================================
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DInitialization_Routine:
D  return_code = 0
D  PARSE VERSION,
D    version_rexx_name ,
D    version_rexx_version ,
D    version_rexx_date
D  PARSE SOURCE ,
D    source_host_env ,
D    source_call_type ,
D    source_uc_exec_name ,
D    source_hostdd ,
D    source_hostdsn ,
D    source_nf_exec_name ,
D    source_initial_cmd_env ,
D    source_asid_name ,
D    source_char8_user_token ,
D    source_hostother
D/*
D
DRexx-interpreted:
D---------------------------------------------------
DVersion:
DName:REXX370 Version:3.48 Date:01 May 1992
D
DSource:
DHost env:TSO CALL type:COMMAND EXEC Name:ANYREXX
DHostdd:SYSEXEC HostDSN:? nf Name:?
DCmd env:TSO ASID:ISPF User token:? Other:
D
DRexx-compiled:
D---------------------------------------------------
DName:REXXC370 Version:3.48 Date:23 Dec 1999
D
DSource:
DHost env:TSO CALL type:COMMAND EXEC Name:ANYREXX
DHostdd:SYS00206 HostDSN:KTOMIAK.CBT.CEXEC nf Name:?
DCmd env:TSO ASID:ISPF User token:? Other:
D
D*/
D  address_environment = ADDRESS()
D  return_code = 0
D  RETURN return_code
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D=======================================================================
D This routine does the processing.
D=======================================================================
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DProcess_Routine:
D  SAY "Version:"
D  SAY ,
D    "Name:"version_rexx_name,
D    "Version:"version_rexx_version,
D    "Date:"version_rexx_date
D
D  SAY ""
D  SAY "Source:"
D  SAY ,
D    "Host env:"source_host_env,
D    "Call type:"source_call_type,
D    "EXEC Name:"source_uc_exec_name
D  SAY ,
D    "Hostdd:"source_hostdd,
D    "HostDSN:"source_hostdsn,
D    "nf Name:"source_nf_exec_name
D  SAY ,
D    "Cmd env:"source_initial_cmd_env,
D    "ASID:"source_asid_name,
D    "User token:"source_char8_user_token,
D    "Other:"source_hostother
D
D  SAY ""
D  SAY "Environment:"
D  SAY address_environment
D
D  op_sys = Determine_Op_Sys()
D  SAY ""
D  SAY "Operating System:"op_sys
D
D  SAY ""
D  SAY "Program Name:" source_pgm_name
D
D  RETURN return_code
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D=======================================================================
D This routine does cleanup before exiting.
D=======================================================================
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DTermination_Routine:
D  lastline = SOURCELINE()
D  SAY "This code has:" lastline "line(s)."
D  SAY ""
D  SAY COPIES("=",79)
D  SAY LEFT("= RC=" return_code,77) "="
D  SAY COPIES("=",79)
D  SAY ""
D  RETURN return_code
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D Use VERSION and SOURCE to determine the operating system.
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DDetermine_Op_Sys:
D  SELECT
D    WHEN (LEFT(version_rexx_name,11) = "REXX-ooRexx") THEN DO
D      PARSE VAR version_rexx_name ,
D        . "_" ,
D        Version_rexx_v "." ,
D        Version_rexx_r "." ,
D        Version_rexx_m "(" ,
D        =1 . "_" Version_rexx_vrm "(" .
D      rexx_envir = "PC/ooREXX"
D    END
D    WHEN ((version_rexx_name = "REXXSAA")   ,
D          (source_initial_cmd_env = "DOS")) Then Do
D      rexx_envir = "PC/IBM_PC_DOS"
D    END
D    WHEN ((version_rexx_name = "REXXSAA")   ,
D          (source_initial_cmd_env = "OS2")) Then Do
D      rexx_envir = "PC/IBM_OS/2"
D    END
D    WHEN ((version_rexx_name = "REXX370")   ,
D          (source_initial_cmd_env = "CMS")) Then Do
D      rexx_envir = "VM/CMS"
D    END
D    WHEN ((source_asid_name = "MVS")   ,
D          (source_initial_cmd_env = "MVS")) Then Do
D      rexx_envir = "MVS/Batch"
D    END
D    WHEN ((version_rexx_name = "REXX370")   ,
D          (source_initial_cmd_env = "TSO")) Then Do
D      rexx_envir = "MVS/TSO"
D    END
D    WHEN ((version_rexx_name = "REXX370")   ,
D          (source_initial_cmd_env = "ISPF")) Then Do
D      rexx_envir = "MVS/TSO/ISPF"
D    END
D    WHEN ((version_rexx_name = "REXXC370")   ,
D          (source_initial_cmd_env = "TSO")) Then Do
D      rexx_envir = "MVS/TSO"
D    END
D    WHEN ((version_rexx_name = "REXXC370")   ,
D          (source_initial_cmd_env = "ISPF")) Then Do
D      rexx_envir = "MVS/TSO/ISPF"
D    END
D    WHEN ((version_rexx_name = "REXX/2")   ,
D          (To_Uppercase(LEFT(source_host_env,7)) = "WINDOWS")) Then Do
D      rexx_envir = "PC/SPF-PC"
D    END
D    WHEN (address_environment = "COMMAND") THEN DO
D      rexx_envir = "PC/DOS7.0"
D    END
D    WHEN (address_environment = "SYSTEM") THEN DO
D      rexx_envir = "PC/REGINA"
D    END
D    OTHERWISE DO
D      rexx_envir = "UNKNOWN"
D    END
D  END
D  SELECT
D    WHEN (LEFT(rexx_envir,3) = "MVS") THEN DO
D      source_pgm_name = source_uc_exec_name
D    END
D    WHEN (LEFT(rexx_envir,2) = "VM") THEN DO
D      source_pgm_name = source_uc_exec_name
D    END
D    WHEN (To_Uppercase(LEFT(source_host_env,7)) = "WINDOWS") THEN DO
D      last_slash = LASTPOS("\",source_uc_exec_name)
D      IF (last_slash > 0) THEN DO
D        fileName_ext = SUBSTR(source_uc_exec_name,(last_slash + 1))
D      END
D      ELSE DO
D        fileName_ext = source_uc_exec_name
D      END
D      PARSE VAR fileName_ext source_pgm_name "." Source_pgm_ext
D    END
D    OTHERWISE DO
D      SAY "Otherwise:" rexx_envir To_Uppercase(LEFT(source_host_env,7))
D    END
D  END
D  RETURN rexx_envir
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
DConvert string to lowercase.
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DTo_Lowercase:
D  PARSE ARG myarg
D  IF (lowercase_letters = "LOWERCASE_LETTERS") THEN DO
D    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
D  END
D  IF (uppercase_letters = "UPPERCASE_LETTERS") THEN DO
D    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
D  END
D  RETURN TRANSLATE(myarg,lowercase_letters,uppercase_letters)
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
DConvert string to uppercase.
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DTo_Uppercase:
D  PARSE ARG myarg
D  IF (lowercase_letters = "LOWERCASE_LETTERS") THEN DO
D    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
D  END
D  IF (uppercase_letters = "UPPERCASE_LETTERS") THEN DO
D    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
D  END
D  RETURN TRANSLATE(myarg,uppercase_letters,lowercase_letters)
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D=======================================================================
DEnd of code.
D=======================================================================
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
* End of WISH.
