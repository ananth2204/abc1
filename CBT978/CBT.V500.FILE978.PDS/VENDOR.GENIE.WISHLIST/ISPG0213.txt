SISPG0213
TISPF Services Guide
T-Chapter 2.
T-FILEXFER-Upload or download file
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-141555
*
@IBM Corporation
*
Bf54sg00_v2r3.pdf: SC19-3626-30: ISPF
B-Services Guide
B-z/OS Version 2 Release 3
*
NInteractive System Productivity Facility (ISPF) Services Guide
N==============================================================
NChapter 2. Description of the ISPF services
N-------------------------------------------
NFILEXFER-Upload or download file
N--------------------------------
NThe FILEXFER service is used to upload files from the workstation or
Ndownload files to the workstation. It supports the upload and download
Nof z/OS UNIX files.
N
NNote: Be aware that when the FILEXFER service is issued for certain
Nreserved or restricted operating system file names, your workstation
Noperating system or host system can cease to function, or "hang". See
Nyour workstation operating system documentation to note reserved or
Nrestricted file names.
N
NCommand invocation format
N-------------------------
D  ADDRESS ISPEXEC "FILEXFER" ,
D    "TO(HOST | WS)" ,
I      An ISPF variable that tells where the file will be created upon
I      the completion of the transfer.
N
I      HOST:
N
I      -> in binary mode data sets with fixed-length records are padded
I         with null characters if needed to fill the final record of the
I         data set. Data sets with variable-length records are not
I         padded.
N
I      -> in text mode for Windows systems, a Carriage-Return/Line-Feed
I         combination indicates the end of a line. An end-of-file
I         character that is the last character in the file is not
I         transmitted to the host. End-of-file characters at other
I         locations in the file are transmitted to the host along with
I         the data following the end-of-file character.
N
I         For AIX and HP-UX, a Line-Feed character is considered the
I         end of a line.
N
I         If a line is longer than the record length of the data set
I         the line is split into as many records as are needed to hold
I         the line.
N
I         For data sets with fixed-length records lines are padded with
I         blanks to reach the record length.
N
I      WS:
N
I      -> in binary mode all data from each record in the host data set
I         is concatenated to form the workstation file.
N
I      -> in text mode blanks after the last nonblank character are
I         trimmed form each record. Records consisting entirely of
I         blanks are sent as a line with a single blank character.
I         Zero-length records from a data set with variable-length
I         records are not transferred to the workstation, and can cause
I         an error condition to occur.
N
I         If a data set containing end-of-line characters is transferred
I         to the workstation and back to the host, the end-of-line
I         characters are removed and the line is split at the location
I         of the end-of-line characters. For Windows systems, an
I         end-of-file character at the end of the data set is also
I         removed when the data set is transferred to the workstation
I         and back to the host.
N
D    "HOST(var-name)" ,
I      An ISPF variable that contains the name of the host file that is
I      to be transferred. The name can be a path name for a z/OS UNIX
I      regular file.
N
D    "WS(var-name)" ,
I      An ISPF variable that contains the name of the workstation file
I      that is to be transferred.
N
D    "BINARY | TEXT" ,
I      BINARY: Specifies that no ASCII/EBCDIC character translation
I        should take place.
N
I      TEXT: Specifies that ASCII/EBCDIC translation should take place.
N
D    "STATS | NOSTATS" ,
I      STATS: Specifies that ISPF statistics will be generated or
I        maintained by incrementing the mod level and setting the last
I        changed time to the time when the member is uploaded.
N
I        This is the default.
N
I      NOSTATS: Specifies that ISPF statistics will not be generated or
I        maintained when the member is uploaded.
N
D    "CHKDATE(YES | NO)" ,
I      YES: On download, check the date and time of the source file and
I        the target file. If they are different, perform the file
I        transfer and update the date and time of the target file to
I        match those of the source file. If they are the same, do not
I        perform the file transfer, and set the return code to 2. If
I        the source file you are downloading from the host to the PC
I        does not have an entry in the date and time statistics, the
I        current date is set on the host file at the time of the file
I        transfer.
N
I      NO: Transfer the files regardless of dates and times.
N
D    "SETDATE(YES | NO | SCLM)" ,
I      YES: On upload, set the date and time of the host file to be the
I        same as the workstation file.
N
I      SCLM: On upload, set the date and time of the host file to be the
I        same as the workstation file. In addition to this, set the
I        SCLM bit on.
N
I      NO: On upload, use the system data and time for the host files.
N
D    "MAKEPATH(YES | NO)" ,
I      YES: On transfer to the workstation, create the necessary
I        subdirectories to store the file transferred. This parameter
I        is ignored on a transfer to the host.
N
I      NO: On transfer to the workstation, do not create any
I        subdirectories to store the file transferred. This parameter
I        is ignored on a transfer to the host.
N
I        NO is the default for this parameter.
N
D    "VOLUME(volume)"
I      An ISPF volume number for the location of the 'TO' file. Used
I      only when working with uncataloged data sets.
N
NReturn codes
N------------
NThese return codes are possible:
N
D  filexfer_rc = RC
D  SELECT
D    WHEN (filexfer_rc = 0) THEN DO
D      /* This is not listed as possible. */
D      SAY "This never happens."
D    END
D    WHEN (filexfer_rc = 2) THEN DO
D      /* Source file and target file have the same date and time. */
D      SAY "Ask your programmer to handle this condition using SETMSG."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 4) THEN DO
D      /* LMSTAT failed. */
D      SAY "Ask your programmer to figure out why LMSTAT failed."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 6) THEN DO
D      /* LMINIT failed. */
D      SAY "Ask your programmer to figure out why LMINIT failed."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 7) THEN DO
D      /* Error in variable specification. */
D      SAY "Ask your programmer to fix the variable specification."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 8) THEN DO
D      /* "TO" direction not valid. */
D      SAY "Ask your programmer to fix the TO direction."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 9) THEN DO
D      /* Host name is too long. */
D      SAY "Ask your programmer to fix the host name."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 10) THEN DO
D      /* No workstation connection exists. */
D      SAY "Ask your programmer to tell you to connect a workstation."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 11) THEN DO
D      /* RC 1 from DTTRANSFER. Host data set had null object handle. */
D      SAY "Host data set had null object handle."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 12) THEN DO
D      /* RC 2 from DTTRANSFER. Workstation file had null object
D         handle. */
D      SAY "Workstation file had null object handle"
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 13) THEN DO
D      /* RC 3 from DTTRANSFER. Host data set could not be opened. */
D      SAY "Host data set could not be opened."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 14) THEN DO
D      /* RC 4 from DTTRANSFER. Workstation file could not be opened. */
D      SAY "Workstation file could not be opened."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 15) THEN DO
D      /* RC 5 from DTTRANSFER. Error reading host data set. */
D      SAY "Error reading host data set."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 16) THEN DO
D      /* RC 6 from DTTRANSFER. Error reading workstation file. */
D      SAY "Error reading workstation file."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 17) THEN DO
D      /* RC 7 from DTTRANSFER. Error writing host data set. */
D      SAY "Error writing host data set."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 18) THEN DO
D      /* RC 8 from DTTRANSFER. Error writing workstation file. */
D      SAY "Error writing workstation file."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 19) THEN DO
D      /* RC 9 from DTTRANSFER. Error closing host data set. */
D      SAY "Error closing host data set."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 20) THEN DO
D      /* Severe error in transfer service. */
D      SAY "Ask your programmer to fix error."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 21) THEN DO
D      /* RC 10 from DTTRANSFER. Error closing workstation file. */
D      SAY "Error closing workstation file."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 22) THEN DO
D      /* RC 11 from DTTRANSFER. User refused file access. */
D      SAY "User refused file access."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (filexfer_rc = 23) THEN DO
D      /* RC Data set or member in use. */
D      SAY "Try again later!"
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    OTHERWISE DO
D      SAY "Something very unexpected happened, RC("filexfer_rc")."
D    END
D  END
N
NExample 1: File transfer from the host to the workstation.
N----------------------------------------------------------
I  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
I  var1 = "DEMO.DATA(CSRDSN)"
I  var2 = "E:\MyOS2\File.txt"
I  ADDRESS ISPEXEC "VPUT (var1 var2)"  /* Dubious */
I  ADDRESS ISPEXEC "FILEXFER" ,
I    "HOST(var1) WS(var2) TO(WS) TEXT"
* End of WISH.
