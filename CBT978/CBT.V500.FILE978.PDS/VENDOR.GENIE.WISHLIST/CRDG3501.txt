SCRDG3501
TCICS RDG
T-Chapter 35.
T-Syntax
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-121817
*
@IBM Corporation
*
Bdfha4h00.pdf
BSC34-7425-00 CICS Transaction Server for z/OS
B-Resource Definition Guide
B-Version 5 Release 3
*
NCICS Transaction Server for z/OS Resource Definition Guide
N----------------------------------------------------------
NChapter 35. URIMAP resources
N----------------------------
NSyntax:
N-------
D  DEFINE
D    URIMAP(name)
I      Specifies the name of this URIMAP definition.
N
I      name: The name can be up to 8 characters in length. The attribute
I        is specified in mixed case, and the case is preserved in the
I        URIMAP definition.
N
D    GROUP(groupname)
I      Every resource definition must have a GROUP name.
I      The resource definition becomes a member of the group and is
I      installed in the CICS system when the group is installed.
N
I      The GROUP name can be up to 8 characters in length. Lowercase
I      characters are treated as uppercase characters.
N
D    DESCRIPTION(text)
I      You can provide a description of the resource that
I      you are defining in this field. The description text can be up to
I      58 characters in length. No restrictions apply to the characters
I      that you can use. However, if you use parentheses, ensure that for
I      each left parenthesis there is a matching right parenthesis. If you
I      use the CREATE command, for each single apostrophe in the text,
I      code two apostrophes.
N
D    PATH(path)
I      This attribute is for all USAGE options.
N
I      path: specifies the path component of the URI to which the URIMAP
I        definition applies, which can be up to 255 characters, including
I        the forward slash (/) at the beginning of the path component. If
I        you do not include the forward slash, you can use only
I        254 characters to specify the path. The minimum possible path is
I        a forward slash, which represents the root of the URL structure
I        for the specified host name. You can include or omit the forward
I        slash at the beginning of the path component; however, if you
I        omit it, CICS adds it at runtime. An example of a path is
I        software/htp/cics/index.html. The components of a URL in Product
I        overview explains each of the components and how they are
I        delimited.
N
I        The PATH attribute is specified in mixed case, and the case is
I        preserved in the URIMAP definition. The PATH attribute must
I        contain only the characters that are allowed in URIs.
I        Specifically, the characters < > # % " { } | \ ¬ Ý ¨ ` and
I        embedded blanks must be excluded (except that % is allowed when
I        it introduces a valid hexadecimal escape sequence; that is, when
I        it is followed by two valid hexadecimal digits in uppercase or
I        lowercase). The tilde character ~ cannot be specified in CICS and
I        must be replaced by the corresponding hexadecimal escape sequence
I        (%7E). CICS validates the use of characters at define time.
N
I        URIMAP resources support Internationalized Resource Identifiers
I        (IRIs), which can contain Unicode characters. If you specify a
I        path that contains Unicode characters, any Unicode characters
I        must be escaped to the percent-encoded representation of the
I        Unicode character. If you do not have an application that can
I        convert Unicode characters to percent-encoded representations,
I        free applications are available on the Internet to do this task.
I        The path must still be 255 characters or less, and a character
I        in this context means a single ASCII character, not the original
I        Unicode character. For example, the Cyrillic character that has
I        the percent-encoded representation %D0%B4 counts as 6 characters
I        from the 255-character limit.
N
I        For URIMAP definitions that relate to CICS as an HTTP server and
I        web services, if you want the URIMAP definition to match more
I        than one path, you can use an asterisk as a wildcard character
I        at the end of the path. For example, specifying the path
I        /software/htp/cics/* makes the URIMAP definition match all
I        requests with paths that begin with the string to the left of the
I        asterisk. Specifying a path of /* makes the URIMAP definition
I        match any requests that are directed to the host named in the
I        HOST attribute. If an HTTP request is matched by more than one
I        URIMAP definition, the most specific match is taken.
N
I        If a query component is present, and you want to apply the URIMAP
I        definition to that specific query alone, you can include it as
I        part of the path component. Include the question mark at the
I        beginning of the string. The query string must contain only the
I        characters that are allowed in URIs. A query string cannot itself
I        include an asterisk as a wildcard, but it can follow a path that
I        includes an asterisk as a wildcard. If you do not include a query
I        string in the URIMAP definition, any query string that is present
I        in the HTTP request is automatically ignored for matching
I        purposes.
N
I        For URIMAP definitions for Atom feeds, you must use an asterisk
I        as a wildcard character at the end of the path. The part of the
I        path that you specify in the URIMAP definition is the part that
I        is common to the Atom feed and Atom entry URLs. CICS matches the
I        remainder of the URL to the URLs specified in all the
I        <atom:link> elements in the Atom configuration file for the feed.
N
I        For URIMAP definitions for CICS as an HTTP client, you cannot
I        use an asterisk as a wildcard; you must specify the complete
I        path for the request. If the URIMAP definition is referenced on
I        a WEB OPEN command, this path becomes the default path for
I        WEB SEND commands that relate to that connection. If the URIMAP
I        definition is referenced on a WEB SEND command, the path is used
I        for that WEB SEND command. However, the host attribute for that
I        URIMAP definition must match the host that is specified on the
I        WEB OPEN command for the connection.
N
D    SCHEME(HTTP | HTTPS)
N
I      This attribute is for all USAGE options.
N
I      SCHEME specifies the scheme component of the URI to which the
I      URIMAP definition applies, which is either HTTP (without SSL) or
I      HTTPS (with SSL). Do not include the delimiters :// (colon and two
I      forward slashes) that follow the scheme component in the URI.
N
I      A URIMAP specifying the HTTP scheme accepts web client requests
I      made by using either the HTTP scheme or the HTTPS scheme. A URIMAP
I      specifying the HTTPS scheme accepts only web client requests made
I      by using the HTTPS scheme. However, if the transport is WebSphere
I      MQ, a URIMAP specifying either the HTTP scheme or the HTTPS scheme
I      accepts web client requests made by using either the HTTP scheme
I      or the HTTPS scheme.
N
I      Inbound HTTP requests that arrive on SSL(ATTLSAWARE) TCPIPSERVICEs
I      must use secure connections so they are always treated as HTTPS.
N
D    STATUS(ENABLED | DISABLED)
I      This attribute is for all USAGE options.
N
I      STATUS specifies whether the URIMAP definition is to be installed
I      in an enabled or disabled state. The default is enabled.
N
I      This attribute is ignored for URIMAP resources that are dynamically
I      generated by a CICS bundle. The initial status of a URIMAP
I      resource is derived from the initial status of the bundle that
I      defines the resource.
N
D    USAGE(SERVER | CLIENT | PIPELINE | ATOM | JVMSERVER)
I      Specifies whether
I      this URIMAP definition is for CICS as an HTTP server (SERVER),
I      CICS as an HTTP client (CLIENT), a web service (PIPELINE), an Atom
I      feed (ATOM), or a JVM server (JVMSERVER). The USAGE attribute
I      governs which other attributes in the URIMAP definition can be
I      used.
N
I      SERVER: you create a URIMAP definition for CICS as an HTTP server.
I        This type of URIMAP definition is used to map the URI of an
I        incoming HTTP request from a web client to CICS resources. An
I        application-generated response or a static response can be
I        provided. Requests that require an application-generated response
I        might qualify for being processed by directly attached user
I        transactions, and bypassing the web attach task. For more
I        information, see HTTP requests are processed by directly attached
I        user transactions.
N
I      CLIENT: you create a URIMAP definition for CICS as an HTTP client.
I        This type of URIMAP definition is used when CICS makes a request
I        for an HTTP resource on a server, so that you can avoid
I        identifying the URI in your application program.
N
I      PIPELINE: you create a URIMAP definition for a web service. This
I        type of URIMAP definition is used for an inbound web service
I        request; that is, a request by which a client invokes a web
I        service in CICS. The URI of the incoming request is associated
I        with WEBSERVICE and PIPELINE resources, which specify the
I        processing that is to be performed on the message. Requests might
I        qualify for being processed by directly attached user
I        transactions, and bypassing the web attach task. For more
I        information, see HTTP requests are processed by directly attached
I        user transactions.
N
I      ATOM: you create a URIMAP definition for an Atom feed. This type
I        of URIMAP definition is used for an incoming request for data
I        that CICS makes available as an Atom feed. The URIMAP definition
I        maps the request URI to an ATOMSERVICE resource definition, which
I        defines an Atom document. Requests might qualify for being
I        processed by directly attached user transactions, and bypassing
I        the web attach task. For more information, see HTTP requests are
I        processed by directly attached user transactions.
N
I      JVMSERVER: you create a URIMAP for a web application that is
I        running in a JVM server. This type of URIMAP is used to map
I        incoming application requests to a CICS transaction. If no
I        URIMAP matches the URI of the incoming request, CICS uses the
I        CJSA transaction.
N
NATOM attributes:
N----------------
D    ATOMSERVICE(name)
I      This attribute is for USAGE(ATOM).
N
I      When a client makes a request to CICS for an Atom feed by using the
I      URI specified by this URIMAP definition, ATOMSERVICE specifies the
I      1- to 8-character name of the ATOMSERVICE resource definition for
I      the Atom feed. The ATOMSERVICE resource definition defines an Atom
I      service, feed, collection, or category document, and identifies
I      the Atom configuration file, CICS resource or application program,
I      and XML binding that are used to supply the data for the feed.
N
D    HOST(hostname | *)
I      This attribute is for all USAGE options.
N
I      hostname: Specifies the host name of the URI to which the URIMAP
I        definition applies, or its IPv4 or IPv6 address. The name can be
I        up to 116 characters long. The components of a URL in Product
I        overview explains each of the components and how they are
I        delimited.
N
I        The HOST attribute must be present. The HOST attribute must
I        contain only alphanumeric characters, hyphens -, colons :, or
I        periods ., although you cannot use colons when you are specifying
I        a character host name instead of an IP address. CICS validates
I        the host name at define time. A host name can be entered in any
I        case, but if a character host name is specified instead of an
I        IP address, the host name is converted to lowercase in the
I        URIMAP definition.
N
I        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or
I        USAGE(JVMSERVER) you can use a single asterisk in the HOST
I        attribute, making the URIMAP definition match any host name. You
I        cannot use an asterisk as a wildcard in the HOST attribute with
I        any other characters. Do not set a port number in this attribute
I        for these usage types.
N
I        URIMAP resources support Internationalized Resource Identifiers
I        (IRIs), which can contain Unicode characters. If you specify a
I        host name that contains Unicode characters, you must convert the
I        host name to Punycode format, which is described by RFC 3492.
I        CICS does not provide a tool to carry out this conversion, but
I        free applications are available on the Internet to support the
I        conversion of Unicode to Punycode. If you use an asterisk as the
I        host name, you do not need to use Punycode. For more information
I        about IRIs, see Internationalized Resource Identifiers (IRIs) in
I        Product overview.
N
I        You can specify IPv4 and IPv6 addresses in a number of acceptable
I        formats. For more information about address formats, see
I        IP addresses.
N
I        If CICS is an HTTP client and you specify USAGE(CLIENT), you can
I        specify a port number in the request to the server:
N
I        -> Use the PORT attribute to specify the port number. PORT
I           replaces the use of the HOST attribute for specifying a port
I           number.
N
I        -> For compatibility purposes in existing programs that use
I           native IPv4 addresses and host names, you can use the HOST
I           attribute when you specify the port number. Native IPv4
I           addresses and host names are the only formats in which you
I           can specify the port number, together with a preceding colon;
I           for example, 1.2.3.4:80 or hostname.com:443.
N
I        -> If you specify an IPv6 address (or a host name that resolves
I           to an IPv6 address), ensure that you are operating in a
I           dual-mode (IPv4 and IPv6) environment and that the client or
I           server that you are communicating with is also operating in
I           a dual-mode (IPv4 and IPv6) environment. For more information
I           about IPv6, see Understanding IPv6 and CICS in Product
I           overview.
N
I        -> For native IPv6 addresses, you must use the PORT attribute to
I           specify the port number. IPv6 addresses require square
I           brackets to separate the address from the port number, and,
I           because square brackets are not fixed values in all EBCDIC
I           character sets, square brackets are not supported in the
I           HOST attribute.
N
I        -> Specify the port number only if it is different from the
I           default for the scheme; 80 for HTTP without SSL, or 443 for
I           HTTPS and HTTP with SSL.
N
I        -> If you specify a port number in the HOST attribute and a
I           different port number in the PORT attribute, an error is
I           returned. If you do not specify a port number in either the
I           HOST or the PORT attribute, the default port number for the
I           scheme is used.
N
D    LOCATION(url)
I      This attribute is for USAGE(SERVER), USAGE(PIPELINE),
I      and USAGE(ATOM).
N
I      url: specifies a URL of up to 255 characters to which the client
I        request is redirected. The URL must be complete, including
I        scheme, host, path components, and appropriate delimiters. CICS
I        does not check that the URL is valid, so you must ensure that
I        the destination exists and that the URL is specified correctly.
N
I        The description for the PATH attribute lists the characters that
I        must be excluded from a URL. These characters must not be used
I        in the LOCATION attribute. The exception is the # character,
I        which can be used in the LOCATION attribute as a separator before
I        a fragment identifier that follows the URL.
N
I        The REDIRECTTYPE attribute is used to specify the type of
I        redirection. If temporary or permanent redirection is specified,
I        the URL in the LOCATION attribute is used for redirection. If
I        no redirection is specified, the URL in the LOCATION attribute
I        is ignored. You can use the SET URIMAP command to change the
I        REDIRECTTYPE attribute and the LOCATION attribute.
N
D    REDIRECTTYPE(NONE | TEMPORARY | PERMANENT)
I      This attribute is for
I      USAGE(SERVER), USAGE(PIPELINE), and USAGE(ATOM).
N
I      REDIRECTTYPE specifies the type of redirection for requests that
I      match this URIMAP definition. The URL specified by the LOCATION
I      attribute is used for redirection when required.
N
I      NONE: means that requests are not redirected. Any URL specified by
I        the LOCATION attribute is ignored.
N
I      TEMPORARY: means that requests are redirected on a temporary basis.
I        The URL specified by the LOCATION attribute is used for
I        redirection, and the status code that is used for the response
I        is 302 (Found).
N
I      PERMANENT: means that requests are redirected permanently. The URL
I        specified by the LOCATION attribute is used for redirection, and
I        the status code that is used for the response is
I        301 (Moved Permanently).
N
I      You can use the SET URIMAP command to change the REDIRECTTYPE
I      attribute and the LOCATION attribute.If REDIRECTTYPE(TEMPORARY)
I      or REDIRECTTYPE(PERMANENT) is specified when you are creating a
I      URIMAP definition, the following attributes are optional: ANALYZER,
I      CONVERTER, HFSFILE, PIPELINE, PROGRAM, TEMPLATENAME, TRANSACTION,
I      USERID, and WEBSERVICE. If you use a CEMT or EXEC CICS command to
I      set the REDIRECTTYPE attribute to NONE after the URIMAP definition
I      is installed, any of the listed attributes that are specified in
I      the URIMAP definition are activated.
N
D    TCPIPSERVICE(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE), and USAGE(ATOM).
N
I      name: specifies the 1- to 8-character name of a TCPIPSERVICE
I        resource definition, with PROTOCOL(HTTP), that defines an inbound
I        port to which this URIMAP definition relates. If this attribute
I        is not specified, the URIMAP definition applies to a request on
I        any inbound ports.
N
I      When a URIMAP definition with HTTPS as the scheme matches a request
I      that a web client is making, CICS checks that the inbound port used
I      by the request is using SSL. If SSL is not specified for the port,
I      the request is rejected with a 403 (Forbidden) status code. When
I      the URIMAP definition applies to all inbound ports, this check
I      ensures that a web client cannot use an unsecured port to access
I      a secured resource. No check is carried out for a URIMAP definition
I      that specifies HTTP as the scheme, so web clients can use either
I      unsecured or secured (SSL) ports to access these resources.
N
I      You specify the security measures that are applied for each port in
I      the TCPIPSERVICE resource definition. You can choose whether to use
I      SSL, and, if you do use SSL, you need to choose the exact security
I      measures that are applied, for example, the authentication method,
I      the sending of certificates by client and server, and encryption
I      of messages. Read Security for CICS web support in Securing for
I      more information about the security features that you can use to
I      keep your CICS web support facility safe.
N
D    TRANSACTION(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).
N
I      name: specifies the 1-4 character name of an alias transaction that
I        is to be used to run the application, or to start the pipeline.
N
I      The default alias transaction is different for each type of URIMAP:
N
I      -> USAGE(SERVER) uses the CWBA transaction
N
I      -> USAGE(PIPELINE) uses the CPIH transaction
N
I      -> USAGE(ATOM) uses the CW2A transaction
N
I      -> USAGE(JVMSERVER) uses the CJSA transaction
N
I      You can select a different transaction name for the purposes of
I      security, monitoring and accounting, or transaction class
I      limitation. Whatever name you choose for the alias transaction, it
I      must always run the same program, which is determined by the
I      USAGE attribute.
N
I      -> For USAGE(SERVER), the program is DFHWBA, which links to the
I         application program named in the PROGRAM attribute of the URIMAP
I         definition or named by the analyzer program.
N
I      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the
I         pipeline that is named in the PIPELINE attribute and the web
I         service that is named in the WEBSERVICE attribute, if specified.
N
I      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias
I         program.
N
I      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks
I         in the JVM server for an application request.
N
I      For USAGE(SERVER) only, if the ANALYZER attribute is specified as
I      YES, the TRANSACTION attribute is used as input to the analyzer
I      program, but the analyzer program can override it. Alternatively,
I      you can leave this attribute blank and let the analyzer program
I      specify it. The analyzer is not used for other types of URIMAP.
N
D    USERID(id)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided, USAGE(PIPELINE),
I      USAGE(JVMSERVER), and USAGE(ATOM).
N
I      id: specifies a 1- to 8-character default user ID that can be used
I        by any client. For an application-generated response or a web
I        service, the alias transaction is attached under this user ID.
N
I      For USAGE(JVMSERVER), the user ID is used to attach a transaction
I      to run work in the Liberty profile server. The transaction can be
I      specified in the URI map or use the default transaction CJSA. The
I      user ID is not used if basic authentication is enabled; CICS
I      expects a user ID and password in the HTTP header for the
I      application request and rejects the request if authentication
I      fails. If security is not enabled and no user ID is present in
I      the HTTP header or in the URI map, the default user ID for the
I      CICS region is used.
N
I      For other usage types, when authentication is required for the
I      connection, so that CICS requests an authenticated user ID directly
I      from the client, the default user ID that you specify in the
I      URIMAP definition is not used. The authenticated user ID of the
I      client is used instead, or if authentication fails, the request
I      is rejected. Authentication procedures are specified by the
I      AUTHENTICATE attribute of the TCPIPSERVICE definition for the
I      connection.
N
I      For an application-generated response, if ANALYZER(YES)
I      is specified, the USERID attribute is used as input to the
I      analyzer program, but the analyzer program can override it.
I      Alternatively, you can leave this attribute blank and let the
I      analyzer program specify it. The analyzer is used only when
I      USAGE(SERVER) is specified. A user ID specified by a client can
I      also be changed by the analyzer program. If no user ID is
I      specified by any of the methods that are mentioned, the default
I      user ID for an application-generated response is the CICS default
I      user ID.
N
I      For static responses, the USERID attribute does not apply. Resource
I      security checking for static responses can be carried out by using
I      the authenticated user ID of a client.
N
I      If surrogate user checking is enabled in the CICS region, with
I      XUSER=YES specified as a system initialization parameter, CICS
I      checks that the user ID used to install the URIMAP definition is
I      authorized as a surrogate of the user ID specified for the USERID
I      attribute. For more information about surrogate user checking, see
I      Where surrogate user checking applies in Securing.
N
N
NCLIENT attributes:
N------------------
D    AUTHENTICATE(NO | BASIC)
I      This attribute is for USAGE(CLIENT).
N
I      AUTHENTICATE specifies whether to send HTTP basic authentication
I      information to the HTTP server. AUTHENTICATE(BASIC) requires a
I      user ID and password to be provided by the XWBAUTH global user
I      exit, or as values on the API commands such as WEB SEND or
I      WEB CONVERSE. The XWBAUTH global user exit is not called if
I      USERNAME and PASSWORD are specified on the API command. If you
I      specify an authentication value on the API command, this value is
I      used instead of the AUTHENTICATE value that is specified in the
I      URIMAP resource.
N
D    CERTIFICATE(label)
I      This attribute is for USAGE(CLIENT).
N
I      CERTIFICATE specifies the label of the X.509 certificate that is to
I      be used as the SSL client certificate during the SSL handshake.
I      Certificate labels can be up to 32 characters long. This attribute
I      is used only when the URI specified by the URIMAP definition is to
I      be used for an HTTPS request that is made by CICS as a client. It
I      is up to the server to request an SSL client certificate, and, if
I      it does, CICS supplies the certificate label that is specified in
I      the URIMAP definition. If this attribute is omitted, the default
I      certificate that is defined in the key ring for the CICS region
I      user ID is used. The certificate must be stored in a key ring in
I      the external security manager database. The certificate that is
I      specified, or the default certificate, must have a private key
I      available to it or the URIMAP cannot install. If you do not want
I      to use a certificate, leave this field blank and ensure that the
I      key ring used by the CICS region does not have a default
I      certificate. For more information, see Building a key ring
I      manually in Securing.
N
D    CIPHERS(value)
I      This attribute is for USAGE(CLIENT).
N
I      The CIPHERS attribute can be specified in either of two ways:
N
I      -> A string of up to 56 hexadecimal digits that is interpreted as
I         a list of up to 28 2-digit cipher suite codes.
N
I      -> The name of the SSL cipher suite specification file, which is a
I         z/OS UNIX file in the security/ciphers subdirectory of the
I         directory that is specified by the USSCONFIG system
I         initialization parameter. For example if USSCONFIG is set to
I         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,
I         the fully qualified file name is
I         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For
I         more information, see SSL cipher suite specification file.
N
I      When you use the CEDA transaction to define the resource, CICS
I      automatically initializes the attribute with a default list of
I      acceptable codes. For CICS to initialize the attribute, the
I      KEYRING system initialization parameter must be specified in the
I      CICS region where you are running CEDA. If KEYRING is not set,
I      CICS does not initialize the attribute. The default list of codes
I      is 35363738392F303132330A1613100D15120F0C unless the system
I      initialization parameter NISTSP800131A=CHECK is set, in which
I      case it is 35363738392F303132330A1613100D.
N
I      You can reorder the cipher codes or remove them from the initial
I      list. However, you cannot add cipher codes that are not in the
I      default list for the specified encryption level. To reset the
I      value to the default list of codes, delete all of the cipher suite
I      codes. The field is automatically repopulated with the default
I      list.
N
I      For more information, see Cipher suites in Securing.
N
D    HOST(hostname)
I      This attribute is for all USAGE options.
N
I      hostname: Specifies the host name of the URI to which the URIMAP
I        definition applies, or its IPv4 or IPv6 address. The name can be
I        up to 116 characters long. The components of a URL in Product
I        overview explains each of the components and how they are
I        delimited.
N
I        The HOST attribute must be present. The HOST attribute must
I        contain only alphanumeric characters, hyphens -, colons :, or
I        periods ., although you cannot use colons when you are specifying
I        a character host name instead of an IP address. CICS validates
I        the host name at define time. A host name can be entered in any
I        case, but if a character host name is specified instead of an
I        IP address, the host name is converted to lowercase in the
I        URIMAP definition.
N
I        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or
I        USAGE(JVMSERVER) you can use a single asterisk in the HOST
I        attribute, making the URIMAP definition match any host name. You
I        cannot use an asterisk as a wildcard in the HOST attribute with
I        any other characters. Do not set a port number in this attribute
I        for these usage types.
N
I        URIMAP resources support Internationalized Resource Identifiers
I        (IRIs), which can contain Unicode characters. If you specify a
I        host name that contains Unicode characters, you must convert the
I        host name to Punycode format, which is described by RFC 3492.
I        CICS does not provide a tool to carry out this conversion, but
I        free applications are available on the Internet to support the
I        conversion of Unicode to Punycode. If you use an asterisk as the
I        host name, you do not need to use Punycode. For more information
I        about IRIs, see Internationalized Resource Identifiers (IRIs) in
I        Product overview.
N
I        You can specify IPv4 and IPv6 addresses in a number of acceptable
I        formats. For more information about address formats, see
I        IP addresses.
N
I        If CICS is an HTTP client and you specify USAGE(CLIENT), you can
I        specify a port number in the request to the server:
N
I        -> Use the PORT attribute to specify the port number. PORT
I           replaces the use of the HOST attribute for specifying a port
I           number.
N
I        -> For compatibility purposes in existing programs that use
I           native IPv4 addresses and host names, you can use the HOST
I           attribute when you specify the port number. Native IPv4
I           addresses and host names are the only formats in which you
I           can specify the port number, together with a preceding colon;
I           for example, 1.2.3.4:80 or hostname.com:443.
N
I        -> If you specify an IPv6 address (or a host name that resolves
I           to an IPv6 address), ensure that you are operating in a
I           dual-mode (IPv4 and IPv6) environment and that the client or
I           server that you are communicating with is also operating in
I           a dual-mode (IPv4 and IPv6) environment. For more information
I           about IPv6, see Understanding IPv6 and CICS in Product
I           overview.
N
I        -> For native IPv6 addresses, you must use the PORT attribute to
I           specify the port number. IPv6 addresses require square
I           brackets to separate the address from the port number, and,
I           because square brackets are not fixed values in all EBCDIC
I           character sets, square brackets are not supported in the
I           HOST attribute.
N
I        -> Specify the port number only if it is different from the
I           default for the scheme; 80 for HTTP without SSL, or 443 for
I           HTTPS and HTTP with SSL.
N
I        -> If you specify a port number in the HOST attribute and a
I           different port number in the PORT attribute, an error is
I           returned. If you do not specify a port number in either the
I           HOST or the PORT attribute, the default port number for the
I           scheme is used.
N
D    PORT(NO | port)
I      This attribute applies to the USAGE(CLIENT) and
I      USAGE(JVMSERVER) options only.
N
I      For USAGE(CLIENT), the PORT attribute specifies the decimal number
I      of the port that is used by a CICS application when it communicates
I      with a server. The value must be a number in the range 1 - 65535.
N
I      The port number is combined with the HOST value to determine the
I      destination for outbound requests for this URIMAP. Specify the
I      port number only if it is different from the default for the
I      scheme: 80 for HTTP without SSL, or 443 for HTTPS and HTTP with
I      SSL.
N
I      If you specify a port number in the HOST attribute and a different
I      port number in the PORT attribute, an error is returned. If you do
I      not specify a port number in either the HOST or the PORT attribute,
I      the default port number for the scheme is used.
N
I      For USAGE(JVMSERVER), the PORT attribute specifies the port number
I      that is used to receive requests to access an application that is
I      running in a Liberty profile server.
N
I      If you do not specify a value for the PORT attribute, PORT is set
I      to NO to indicate that the attribute is not being used.
N
D    SOCKETCLOSE(0 | hhmmss)
I      This attribute is for USAGE (CLIENT).
N
I      SOCKETCLOSE specifies whether, and for how long, CICS keeps a
I      client HTTP connection open after the CICS application finishes
I      using it. After use, CICS checks the state of the connection and
I      then places it in a pool in a dormant state. A dormant connection
I      can be reused by the same application or by another application
I      that connects to the same host and port.
N
I      0: CICS closes each client HTTP connection when the CICS
I        application finishes using it. CICS does not place the
I        connection in a pool for reuse.
N
I      hhmmss: When a CICS application finishes using its client HTTP
I        connection, CICS checks the state of the connection and places
I        it in a pool for reuse. A dormant connection that is not reused
I        is discarded after the length of time that you specify here.
N
I      Connection pooling can provide performance benefits for the
I      HTTP EP adapter for CICS event processing, or where multiple
I      invocations of CICS web support applications make connection
I      requests for the same host and port, or where a web services
I      application makes multiple requests and responses. To activate
I      connection pooling, your application programs must specify the
I      URIMAP resource on the INVOKE SERVICE or WEB OPEN command. For
I      more information about connection pooling, see Connection pooling
I      for HTTP client performance in Improving performance.
N
N
NJVMSERVER attributes:
N---------------------
D    HOST(hostname | *)
I      This attribute is for all USAGE options.
N
I      hostname: Specifies the host name of the URI to which the URIMAP
I        definition applies, or its IPv4 or IPv6 address. The name can be
I        up to 116 characters long. The components of a URL in Product
I        overview explains each of the components and how they are
I        delimited.
N
I        The HOST attribute must be present. The HOST attribute must
I        contain only alphanumeric characters, hyphens -, colons :, or
I        periods ., although you cannot use colons when you are specifying
I        a character host name instead of an IP address. CICS validates
I        the host name at define time. A host name can be entered in any
I        case, but if a character host name is specified instead of an
I        IP address, the host name is converted to lowercase in the
I        URIMAP definition.
N
I        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or
I        USAGE(JVMSERVER) you can use a single asterisk in the HOST
I        attribute, making the URIMAP definition match any host name. You
I        cannot use an asterisk as a wildcard in the HOST attribute with
I        any other characters. Do not set a port number in this attribute
I        for these usage types.
N
I        URIMAP resources support Internationalized Resource Identifiers
I        (IRIs), which can contain Unicode characters. If you specify a
I        host name that contains Unicode characters, you must convert the
I        host name to Punycode format, which is described by RFC 3492.
I        CICS does not provide a tool to carry out this conversion, but
I        free applications are available on the Internet to support the
I        conversion of Unicode to Punycode. If you use an asterisk as the
I        host name, you do not need to use Punycode. For more information
I        about IRIs, see Internationalized Resource Identifiers (IRIs) in
I        Product overview.
N
I        You can specify IPv4 and IPv6 addresses in a number of acceptable
I        formats. For more information about address formats, see
I        IP addresses.
N
I        If CICS is an HTTP client and you specify USAGE(CLIENT), you can
I        specify a port number in the request to the server:
N
I        -> Use the PORT attribute to specify the port number. PORT
I           replaces the use of the HOST attribute for specifying a port
I           number.
N
I        -> For compatibility purposes in existing programs that use
I           native IPv4 addresses and host names, you can use the HOST
I           attribute when you specify the port number. Native IPv4
I           addresses and host names are the only formats in which you
I           can specify the port number, together with a preceding colon;
I           for example, 1.2.3.4:80 or hostname.com:443.
N
I        -> If you specify an IPv6 address (or a host name that resolves
I           to an IPv6 address), ensure that you are operating in a
I           dual-mode (IPv4 and IPv6) environment and that the client or
I           server that you are communicating with is also operating in
I           a dual-mode (IPv4 and IPv6) environment. For more information
I           about IPv6, see Understanding IPv6 and CICS in Product
I           overview.
N
I        -> For native IPv6 addresses, you must use the PORT attribute to
I           specify the port number. IPv6 addresses require square
I           brackets to separate the address from the port number, and,
I           because square brackets are not fixed values in all EBCDIC
I           character sets, square brackets are not supported in the
I           HOST attribute.
N
I        -> Specify the port number only if it is different from the
I           default for the scheme; 80 for HTTP without SSL, or 443 for
I           HTTPS and HTTP with SSL.
N
I        -> If you specify a port number in the HOST attribute and a
I           different port number in the PORT attribute, an error is
I           returned. If you do not specify a port number in either the
I           HOST or the PORT attribute, the default port number for the
I           scheme is used.
N
D    PIPELINE(name)
I      This attribute is for USAGE(PIPELINE).
N
I      When a client makes an inbound web service request to CICS with
I      the URI specified by this URIMAP definition, PIPELINE specifies
I      the 1- to 8-character name of the PIPELINE resource definition for
I      the web service. The PIPELINE resource definition provides
I      information about the message handlers, which act on the service
I      request from the client. PIPELINE resources in Reference System
I      definition describes these resource definitions.
N
D    PORT(NO | port)
I      This attribute applies to the USAGE(CLIENT) and
I      USAGE(JVMSERVER) options only.
N
I      For USAGE(CLIENT), the PORT attribute specifies the decimal number
I      of the port that is used by a CICS application when it communicates
I      with a server. The value must be a number in the range 1 - 65535.
N
I      The port number is combined with the HOST value to determine the
I      destination for outbound requests for this URIMAP. Specify the
I      port number only if it is different from the default for the
I      scheme: 80 for HTTP without SSL, or 443 for HTTPS and HTTP with
I      SSL.
N
I      If you specify a port number in the HOST attribute and a different
I      port number in the PORT attribute, an error is returned. If you do
I      not specify a port number in either the HOST or the PORT attribute,
I      the default port number for the scheme is used.
N
I      For USAGE(JVMSERVER), the PORT attribute specifies the port number
I      that is used to receive requests to access an application that is
I      running in a Liberty profile server.
N
I      If you do not specify a value for the PORT attribute, PORT is set
I      to NO to indicate that the attribute is not being used.
N
D    TRANSACTION(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).
N
I      name: specifies the 1-4 character name of an alias transaction that
I        is to be used to run the application, or to start the pipeline.
N
I      The default alias transaction is different for each type of URIMAP:
N
I      -> USAGE(SERVER) uses the CWBA transaction
N
I      -> USAGE(PIPELINE) uses the CPIH transaction
N
I      -> USAGE(ATOM) uses the CW2A transaction
N
I      -> USAGE(JVMSERVER) uses the CJSA transaction
N
I      You can select a different transaction name for the purposes of
I      security, monitoring and accounting, or transaction class
I      limitation. Whatever name you choose for the alias transaction, it
I      must always run the same program, which is determined by the
I      USAGE attribute.
N
I      -> For USAGE(SERVER), the program is DFHWBA, which links to the
I         application program named in the PROGRAM attribute of the URIMAP
I         definition or named by the analyzer program.
N
I      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the
I         pipeline that is named in the PIPELINE attribute and the web
I         service that is named in the WEBSERVICE attribute, if specified.
N
I      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias
I         program.
N
I      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks
I         in the JVM server for an application request.
N
I      For USAGE(SERVER) only, if the ANALYZER attribute is specified as
I      YES, the TRANSACTION attribute is used as input to the analyzer
I      program, but the analyzer program can override it. Alternatively,
I      you can leave this attribute blank and let the analyzer program
I      specify it. The analyzer is not used for other types of URIMAP.
N
D    USERID(id)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided, USAGE(PIPELINE),
I      USAGE(JVMSERVER), and USAGE(ATOM).
N
I      id: specifies a 1- to 8-character default user ID that can be used
I        by any client. For an application-generated response or a web
I        service, the alias transaction is attached under this user ID.
N
I      For USAGE(JVMSERVER), the user ID is used to attach a transaction
I      to run work in the Liberty profile server. The transaction can be
I      specified in the URI map or use the default transaction CJSA. The
I      user ID is not used if basic authentication is enabled; CICS
I      expects a user ID and password in the HTTP header for the
I      application request and rejects the request if authentication
I      fails. If security is not enabled and no user ID is present in
I      the HTTP header or in the URI map, the default user ID for the
I      CICS region is used.
N
I      For other usage types, when authentication is required for the
I      connection, so that CICS requests an authenticated user ID directly
I      from the client, the default user ID that you specify in the
I      URIMAP definition is not used. The authenticated user ID of the
I      client is used instead, or if authentication fails, the request
I      is rejected. Authentication procedures are specified by the
I      AUTHENTICATE attribute of the TCPIPSERVICE definition for the
I      connection.
N
I      For an application-generated response, if ANALYZER(YES)
I      is specified, the USERID attribute is used as input to the
I      analyzer program, but the analyzer program can override it.
I      Alternatively, you can leave this attribute blank and let the
I      analyzer program specify it. The analyzer is used only when
I      USAGE(SERVER) is specified. A user ID specified by a client can
I      also be changed by the analyzer program. If no user ID is
I      specified by any of the methods that are mentioned, the default
I      user ID for an application-generated response is the CICS default
I      user ID.
N
I      For static responses, the USERID attribute does not apply. Resource
I      security checking for static responses can be carried out by using
I      the authenticated user ID of a client.
N
I      If surrogate user checking is enabled in the CICS region, with
I      XUSER=YES specified as a system initialization parameter, CICS
I      checks that the user ID used to install the URIMAP definition is
I      authorized as a surrogate of the user ID specified for the USERID
I      attribute. For more information about surrogate user checking, see
I      Where surrogate user checking applies in Securing.
N
D    WEBSERVICE(name)
I      This attribute is for USAGE(PIPELINE).
N
I      When a client makes an inbound web service request to CICS with the
I      URI specified by this URIMAP definition, WEBSERVICE specifies the
I      name of the web service. This name can be the 1- to 8-character
I      name of a WEBSERVICE resource definition, or a name up to
I      32 characters in mixed case that represents a web service that is
I      generated by the CICS web services assistant.
N
I      A WEBSERVICE resource defines aspects of the runtime environment
I      for a CICS application program that is deployed in a web services
I      setting, where the mapping between application data structure and
I      SOAP messages is generated by using the CICS tools.
N
I      This attribute is optional. However, if you do not specify a
I      WEBSERVICE resource for USAGE(PIPELINE), the WEBSERVICE name must
I      be resolved by a handler program in the pipeline, or you must use
I      an alternative application or terminal handler in place of a
I      WEBSERVICE resource.
N
NPIPELINE attributes:
N--------------------
D    HOST(hostname | *)
I      This attribute is for all USAGE options.
N
I      hostname: Specifies the host name of the URI to which the URIMAP
I        definition applies, or its IPv4 or IPv6 address. The name can be
I        up to 116 characters long. The components of a URL in Product
I        overview explains each of the components and how they are
I        delimited.
N
I        The HOST attribute must be present. The HOST attribute must
I        contain only alphanumeric characters, hyphens -, colons :, or
I        periods ., although you cannot use colons when you are specifying
I        a character host name instead of an IP address. CICS validates
I        the host name at define time. A host name can be entered in any
I        case, but if a character host name is specified instead of an
I        IP address, the host name is converted to lowercase in the
I        URIMAP definition.
N
I        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or
I        USAGE(JVMSERVER) you can use a single asterisk in the HOST
I        attribute, making the URIMAP definition match any host name. You
I        cannot use an asterisk as a wildcard in the HOST attribute with
I        any other characters. Do not set a port number in this attribute
I        for these usage types.
N
I        URIMAP resources support Internationalized Resource Identifiers
I        (IRIs), which can contain Unicode characters. If you specify a
I        host name that contains Unicode characters, you must convert the
I        host name to Punycode format, which is described by RFC 3492.
I        CICS does not provide a tool to carry out this conversion, but
I        free applications are available on the Internet to support the
I        conversion of Unicode to Punycode. If you use an asterisk as the
I        host name, you do not need to use Punycode. For more information
I        about IRIs, see Internationalized Resource Identifiers (IRIs) in
I        Product overview.
N
I        You can specify IPv4 and IPv6 addresses in a number of acceptable
I        formats. For more information about address formats, see
I        IP addresses.
N
I        If CICS is an HTTP client and you specify USAGE(CLIENT), you can
I        specify a port number in the request to the server:
N
I        -> Use the PORT attribute to specify the port number. PORT
I           replaces the use of the HOST attribute for specifying a port
I           number.
N
I        -> For compatibility purposes in existing programs that use
I           native IPv4 addresses and host names, you can use the HOST
I           attribute when you specify the port number. Native IPv4
I           addresses and host names are the only formats in which you
I           can specify the port number, together with a preceding colon;
I           for example, 1.2.3.4:80 or hostname.com:443.
N
I        -> If you specify an IPv6 address (or a host name that resolves
I           to an IPv6 address), ensure that you are operating in a
I           dual-mode (IPv4 and IPv6) environment and that the client or
I           server that you are communicating with is also operating in
I           a dual-mode (IPv4 and IPv6) environment. For more information
I           about IPv6, see Understanding IPv6 and CICS in Product
I           overview.
N
I        -> For native IPv6 addresses, you must use the PORT attribute to
I           specify the port number. IPv6 addresses require square
I           brackets to separate the address from the port number, and,
I           because square brackets are not fixed values in all EBCDIC
I           character sets, square brackets are not supported in the
I           HOST attribute.
N
I        -> Specify the port number only if it is different from the
I           default for the scheme; 80 for HTTP without SSL, or 443 for
I           HTTPS and HTTP with SSL.
N
I        -> If you specify a port number in the HOST attribute and a
I           different port number in the PORT attribute, an error is
I           returned. If you do not specify a port number in either the
I           HOST or the PORT attribute, the default port number for the
I           scheme is used.
N
D    LOCATION(url)
I      This attribute is for USAGE(SERVER), USAGE(PIPELINE),
I      and USAGE(ATOM).
N
I      url: specifies a URL of up to 255 characters to which the client
I        request is redirected. The URL must be complete, including
I        scheme, host, path components, and appropriate delimiters. CICS
I        does not check that the URL is valid, so you must ensure that
I        the destination exists and that the URL is specified correctly.
N
I        The description for the PATH attribute lists the characters that
I        must be excluded from a URL. These characters must not be used
I        in the LOCATION attribute. The exception is the # character,
I        which can be used in the LOCATION attribute as a separator before
I        a fragment identifier that follows the URL.
N
I        The REDIRECTTYPE attribute is used to specify the type of
I        redirection. If temporary or permanent redirection is specified,
I        the URL in the LOCATION attribute is used for redirection. If
I        no redirection is specified, the URL in the LOCATION attribute
I        is ignored. You can use the SET URIMAP command to change the
I        REDIRECTTYPE attribute and the LOCATION attribute.
N
D    PIPELINE(name)
I      This attribute is for USAGE(PIPELINE).
N
I      When a client makes an inbound web service request to CICS with
I      the URI specified by this URIMAP definition, PIPELINE specifies
I      the 1- to 8-character name of the PIPELINE resource definition for
I      the web service. The PIPELINE resource definition provides
I      information about the message handlers, which act on the service
I      request from the client. PIPELINE resources in Reference System
I      definition describes these resource definitions.
N
D    REDIRECTTYPE(NONE | TEMPORARY | PERMANENT)
I      This attribute is for
I      USAGE(SERVER), USAGE(PIPELINE), and USAGE(ATOM).
N
I      REDIRECTTYPE specifies the type of redirection for requests that
I      match this URIMAP definition. The URL specified by the LOCATION
I      attribute is used for redirection when required.
N
I      NONE: means that requests are not redirected. Any URL specified by
I        the LOCATION attribute is ignored.
N
I      TEMPORARY: means that requests are redirected on a temporary basis.
I        The URL specified by the LOCATION attribute is used for
I        redirection, and the status code that is used for the response
I        is 302 (Found).
N
I      PERMANENT: means that requests are redirected permanently. The URL
I        specified by the LOCATION attribute is used for redirection, and
I        the status code that is used for the response is
I        301 (Moved Permanently).
N
I      You can use the SET URIMAP command to change the REDIRECTTYPE
I      attribute and the LOCATION attribute.If REDIRECTTYPE(TEMPORARY)
I      or REDIRECTTYPE(PERMANENT) is specified when you are creating a
I      URIMAP definition, the following attributes are optional: ANALYZER,
I      CONVERTER, HFSFILE, PIPELINE, PROGRAM, TEMPLATENAME, TRANSACTION,
I      USERID, and WEBSERVICE. If you use a CEMT or EXEC CICS command to
I      set the REDIRECTTYPE attribute to NONE after the URIMAP definition
I      is installed, any of the listed attributes that are specified in
I      the URIMAP definition are activated.
N
D    TCPIPSERVICE(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE), and USAGE(ATOM).
N
I      name: specifies the 1- to 8-character name of a TCPIPSERVICE
I        resource definition, with PROTOCOL(HTTP), that defines an inbound
I        port to which this URIMAP definition relates. If this attribute
I        is not specified, the URIMAP definition applies to a request on
I        any inbound ports.
N
I      When a URIMAP definition with HTTPS as the scheme matches a request
I      that a web client is making, CICS checks that the inbound port used
I      by the request is using SSL. If SSL is not specified for the port,
I      the request is rejected with a 403 (Forbidden) status code. When
I      the URIMAP definition applies to all inbound ports, this check
I      ensures that a web client cannot use an unsecured port to access
I      a secured resource. No check is carried out for a URIMAP definition
I      that specifies HTTP as the scheme, so web clients can use either
I      unsecured or secured (SSL) ports to access these resources.
N
I      You specify the security measures that are applied for each port in
I      the TCPIPSERVICE resource definition. You can choose whether to use
I      SSL, and, if you do use SSL, you need to choose the exact security
I      measures that are applied, for example, the authentication method,
I      the sending of certificates by client and server, and encryption
I      of messages. Read Security for CICS web support in Securing for
I      more information about the security features that you can use to
I      keep your CICS web support facility safe.
N
D    TRANSACTION(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).
N
I      name: specifies the 1-4 character name of an alias transaction that
I        is to be used to run the application, or to start the pipeline.
N
I      The default alias transaction is different for each type of URIMAP:
N
I      -> USAGE(SERVER) uses the CWBA transaction
N
I      -> USAGE(PIPELINE) uses the CPIH transaction
N
I      -> USAGE(ATOM) uses the CW2A transaction
N
I      -> USAGE(JVMSERVER) uses the CJSA transaction
N
I      You can select a different transaction name for the purposes of
I      security, monitoring and accounting, or transaction class
I      limitation. Whatever name you choose for the alias transaction, it
I      must always run the same program, which is determined by the
I      USAGE attribute.
N
I      -> For USAGE(SERVER), the program is DFHWBA, which links to the
I         application program named in the PROGRAM attribute of the URIMAP
I         definition or named by the analyzer program.
N
I      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the
I         pipeline that is named in the PIPELINE attribute and the web
I         service that is named in the WEBSERVICE attribute, if specified.
N
I      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias
I         program.
N
I      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks
I         in the JVM server for an application request.
N
I      For USAGE(SERVER) only, if the ANALYZER attribute is specified as
I      YES, the TRANSACTION attribute is used as input to the analyzer
I      program, but the analyzer program can override it. Alternatively,
I      you can leave this attribute blank and let the analyzer program
I      specify it. The analyzer is not used for other types of URIMAP.
N
D    USERID(id)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided, USAGE(PIPELINE),
I      USAGE(JVMSERVER), and USAGE(ATOM).
N
I      id: specifies a 1- to 8-character default user ID that can be used
I        by any client. For an application-generated response or a web
I        service, the alias transaction is attached under this user ID.
N
I      For USAGE(JVMSERVER), the user ID is used to attach a transaction
I      to run work in the Liberty profile server. The transaction can be
I      specified in the URI map or use the default transaction CJSA. The
I      user ID is not used if basic authentication is enabled; CICS
I      expects a user ID and password in the HTTP header for the
I      application request and rejects the request if authentication
I      fails. If security is not enabled and no user ID is present in
I      the HTTP header or in the URI map, the default user ID for the
I      CICS region is used.
N
I      For other usage types, when authentication is required for the
I      connection, so that CICS requests an authenticated user ID directly
I      from the client, the default user ID that you specify in the
I      URIMAP definition is not used. The authenticated user ID of the
I      client is used instead, or if authentication fails, the request
I      is rejected. Authentication procedures are specified by the
I      AUTHENTICATE attribute of the TCPIPSERVICE definition for the
I      connection.
N
I      For an application-generated response, if ANALYZER(YES)
I      is specified, the USERID attribute is used as input to the
I      analyzer program, but the analyzer program can override it.
I      Alternatively, you can leave this attribute blank and let the
I      analyzer program specify it. The analyzer is used only when
I      USAGE(SERVER) is specified. A user ID specified by a client can
I      also be changed by the analyzer program. If no user ID is
I      specified by any of the methods that are mentioned, the default
I      user ID for an application-generated response is the CICS default
I      user ID.
N
I      For static responses, the USERID attribute does not apply. Resource
I      security checking for static responses can be carried out by using
I      the authenticated user ID of a client.
N
I      If surrogate user checking is enabled in the CICS region, with
I      XUSER=YES specified as a system initialization parameter, CICS
I      checks that the user ID used to install the URIMAP definition is
I      authorized as a surrogate of the user ID specified for the USERID
I      attribute. For more information about surrogate user checking, see
I      Where surrogate user checking applies in Securing.
N
D    WEBSERVICE(name)
I      This attribute is for USAGE(PIPELINE).
N
I      When a client makes an inbound web service request to CICS with the
I      URI specified by this URIMAP definition, WEBSERVICE specifies the
I      name of the web service. This name can be the 1- to 8-character
I      name of a WEBSERVICE resource definition, or a name up to
I      32 characters in mixed case that represents a web service that is
I      generated by the CICS web services assistant.
N
I      A WEBSERVICE resource defines aspects of the runtime environment
I      for a CICS application program that is deployed in a web services
I      setting, where the mapping between application data structure and
I      SOAP messages is generated by using the CICS tools.
N
I      This attribute is optional. However, if you do not specify a
I      WEBSERVICE resource for USAGE(PIPELINE), the WEBSERVICE name must
I      be resolved by a handler program in the pipeline, or you must use
I      an alternative application or terminal handler in place of a
I      WEBSERVICE resource.
N
NSERVER attributes:
N------------------
D    ANALYZER(NO | YES)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided. For other usage
I      types, the attribute is forced to NO.
N
I      Setting ANALYZER to NO is required for HTTP requests to be
I      processed by directly attaching the user transaction. For more
I      information, see HTTP requests are processed by directly attached
I      user transactions. ANALYZER specifies whether an analyzer program
I      is to be used in processing the HTTP request. The analyzer must be
I      associated with the TCPIPSERVICE definition or definitions to which
I      this URIMAP definition relates. (An analyzer program must be in the
I      local CICS region.) YES runs the analyzer. NO means that the
I      analyzer is not used.
N
I      The default analyzer DFHWBAAX and sample analyzer DFHWBADX do not
I      analyze a request when a matching URIMAP definition is found for
I      the request, even if the URIMAP specifies ANALYZER(YES). If an
I      analyzer program is used, you can still specify the CONVERTER,
I      TRANSACTION, USERID, and PROGRAM attributes. The values that you
I      specify for these attributes are used as input to the analyzer
I      program, but they can be overridden by it. Alternatively, you can
I      leave these attributes blank and let the analyzer program specify
I      them.
N
D    CHARACTERSET(characterset)
I      This attribute is for USAGE(SERVER),
I      where a static response is to be provided.
N
I      CHARACTERSET: specifies the 1- to 40-character name of the
I        character set into which CICS converts the entity body of the
I        response that is sent to the web client. CICS does not support
I        all of the character sets that are named by IANA. HTML coded
I        character sets in Reference -> Connectivity and standards lists
I        the IANA character sets that are supported by CICS. The value of
I        this attribute is included in the Content-Type header of the
I        response.
N
I      You must specify CHARACTERSET if a static response is being
I      provided and the MEDIATYPE attribute specifies a text type.
N
D    CONVERTER(name)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided.
N
I      name: specifies the 1- to 8-character name of a converter program
I        that converts the request and response. Typically, a converter
I        program transforms the HTTP request into a COMMAREA that can be
I        used by an application program and transforms the output into an
I        HTTP response. The converter program can be any converter program
I        that is available in the local CICS region.
N
I      Unlike the relationship between the analyzer program and the
I      TCPIPSERVICE definition, the converter program and the
I      TCPIPSERVICE definition have no association.
N
I      If the ANALYZER attribute is specified as YES, the CONVERTER
I      attribute is used as input to the analyzer program, but it can be
I      overridden by the analyzer program. If a converter program is used,
I      you can still specify the PROGRAM attribute of the URIMAP
I      definition, but the values that you specify for this attribute can
I      be overridden by the converter program. Alternatively, you can
I      leave this attribute blank and let the converter program specify
I      it.
N
D    HFSFILE(name)
I      This attribute is for USAGE(SERVER), where a static
I      response is to be provided.
N
I      name: specifies the fully qualified (absolute) or relative name of
I        a z/OS UNIX System Services zFS file that forms the body of the
I        static response that is sent to the HTTP request from the web
I        client. Up to 255 characters can be used.
N
I       You can specify the name as an absolute path, including all
I       directories and beginning with a slash; for example,
I       /u/facts/images/bluefish.jpg. Alternatively, you can specify it as
I       a relative path for example, facts/images/bluefish.jpg.
N
I      -> For a static response file for a URIMAP resource that is defined
I         by online resource definition, the file path is either fully
I         qualified, if prefixed with a forward slash /, or is relative to
I         the HOME directory of the CICS region user ID.
N
I      -> For a static response file for a URIMAP resource that is defined
I         in a CICS bundle, the file path is relative to the root
I         directory of the CICS bundle. The zFS file must be packaged in
I         the CICS bundle with the URIMAP resource. The MEDIATYPE and
I         HOSTCODEPAGE attributes must be specified to inform CICS of the
I         file type and the code page with which the file is encoded. When
I         the file is defined in a CICS bundle and exported to zFS by
I         using CICS Explorer, the code page with which the file is
I         encoded is the same as the one used by CICS Explorer. For more
I         information, see "Referencing zFS artifacts in a bundle".
N
I      If TEMPLATENAME or HFSFILE is specified, ANALYZER must be set to
I      NO. Other attributes that relate only to application-generated
I      responses (TRANSACTION, CONVERTER, and PROGRAM) must remain blank.
N
I      If you want to use path matching, include an asterisk as a wildcard
I      character at the end of the path for the zFS file and also at the
I      end of the path that is specified by the PATH attribute. CICS takes
I      the portion of the path of each HTTP request that is covered by the
I      wildcard character and substitutes it as the last part of the file
I      path.
N
I      For example, you can create a URIMAP definition with the PATH
I      attribute specified as:
N
I      findout/pictures/*
N
I      and the HFSFILE attribute that is specified as:
N
I      /u/facts/images/*
N
I      The URIMAP definition is used to process an incoming HTTP request
I      http://www.example.com/findout/pictures/bluefish.jpg
N
I      CICS appends bluefish.jpg to the zFS file path specified in the
I      URIMAP definition in place of the asterisk, so that the zFS file
N
I      /u/facts/images/bluefish.jpg
N
I      is used as the static response.
N
I      You cannot use an asterisk alone in the HFSFILE specification. At
I      least one level of the directory structure must be specified.
N
I      If you are using IRIs (Internationalized Resource Identifiers)
I      containing Unicode characters, the Unicode characters must be
I      escaped to their percent-encoded representations in the zFS file
I      name and in the corresponding path. Tools are available on the
I      web to help you. Search the web for "Unicode percent escaped".
M
M        GOOGLE wants to change "escaped" to "encoding".
M        https://en.wikipedia.org/wiki/Percent-encoding
N
I      A query string cannot be substituted into the zFS file contents,
I      although you can define the zFS file as a CICS document template
I      and specify it using the TEMPLATENAME attribute instead of the
I      HFSFILE attribute.
N
D    HOST(hostname | *)
I      This attribute is for all USAGE options.
N
I      hostname: Specifies the host name of the URI to which the URIMAP
I        definition applies, or its IPv4 or IPv6 address. The name can be
I        up to 116 characters long. The components of a URL in Product
I        overview explains each of the components and how they are
I        delimited.
N
I        The HOST attribute must be present. The HOST attribute must
I        contain only alphanumeric characters, hyphens -, colons :, or
I        periods ., although you cannot use colons when you are specifying
I        a character host name instead of an IP address. CICS validates
I        the host name at define time. A host name can be entered in any
I        case, but if a character host name is specified instead of an
I        IP address, the host name is converted to lowercase in the
I        URIMAP definition.
N
I        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or
I        USAGE(JVMSERVER) you can use a single asterisk in the HOST
I        attribute, making the URIMAP definition match any host name. You
I        cannot use an asterisk as a wildcard in the HOST attribute with
I        any other characters. Do not set a port number in this attribute
I        for these usage types.
N
I        URIMAP resources support Internationalized Resource Identifiers
I        (IRIs), which can contain Unicode characters. If you specify a
I        host name that contains Unicode characters, you must convert the
I        host name to Punycode format, which is described by RFC 3492.
I        CICS does not provide a tool to carry out this conversion, but
I        free applications are available on the Internet to support the
I        conversion of Unicode to Punycode. If you use an asterisk as the
I        host name, you do not need to use Punycode. For more information
I        about IRIs, see Internationalized Resource Identifiers (IRIs) in
I        Product overview.
N
I        You can specify IPv4 and IPv6 addresses in a number of acceptable
I        formats. For more information about address formats, see
I        IP addresses.
N
I        If CICS is an HTTP client and you specify USAGE(CLIENT), you can
I        specify a port number in the request to the server:
N
I        -> Use the PORT attribute to specify the port number. PORT
I           replaces the use of the HOST attribute for specifying a port
I           number.
N
I        -> For compatibility purposes in existing programs that use
I           native IPv4 addresses and host names, you can use the HOST
I           attribute when you specify the port number. Native IPv4
I           addresses and host names are the only formats in which you
I           can specify the port number, together with a preceding colon;
I           for example, 1.2.3.4:80 or hostname.com:443.
N
I        -> If you specify an IPv6 address (or a host name that resolves
I           to an IPv6 address), ensure that you are operating in a
I           dual-mode (IPv4 and IPv6) environment and that the client or
I           server that you are communicating with is also operating in
I           a dual-mode (IPv4 and IPv6) environment. For more information
I           about IPv6, see Understanding IPv6 and CICS in Product
I           overview.
N
I        -> For native IPv6 addresses, you must use the PORT attribute to
I           specify the port number. IPv6 addresses require square
I           brackets to separate the address from the port number, and,
I           because square brackets are not fixed values in all EBCDIC
I           character sets, square brackets are not supported in the
I           HOST attribute.
N
I        -> Specify the port number only if it is different from the
I           default for the scheme; 80 for HTTP without SSL, or 443 for
I           HTTPS and HTTP with SSL.
N
I        -> If you specify a port number in the HOST attribute and a
I           different port number in the PORT attribute, an error is
I           returned. If you do not specify a port number in either the
I           HOST or the PORT attribute, the default port number for the
I           scheme is used.
N
D    HOSTCODEPAGE(code page)
I      This attribute is for USAGE(SERVER), where
I      a static response is to be provided.
N
I      code page: Specifies the 1- to 10-character name of the IBM code
I        page (EBCDIC) in which the text document that forms the static
I        response is encoded. CICS needs this information to convert the
I        code pages for the entity body of the static response.
N
I        The standard CICS form of a host code page name consists of the
I        code page number (or more generally CCSID) written by using
I        3 - 5 decimal digits as necessary then padded with trailing
I        spaces. For code page 37, which is fewer than 3 digits, the
I        standard form is 037. CICS accepts any decimal number, padded
I        with trailing spaces, in the range 1 - 65535 as a code page name,
I        even if it is not in the standard form.
N
I        You must specify HOSTCODEPAGE if a static response is being
I        provided and the MEDIATYPE attribute specifies a text type.
N
D    LOCATION(url)
I      This attribute is for USAGE(SERVER), USAGE(PIPELINE),
I      and USAGE(ATOM).
N
I      url: specifies a URL of up to 255 characters to which the client
I        request is redirected. The URL must be complete, including
I        scheme, host, path components, and appropriate delimiters. CICS
I        does not check that the URL is valid, so you must ensure that
I        the destination exists and that the URL is specified correctly.
N
I        The description for the PATH attribute lists the characters that
I        must be excluded from a URL. These characters must not be used
I        in the LOCATION attribute. The exception is the # character,
I        which can be used in the LOCATION attribute as a separator before
I        a fragment identifier that follows the URL.
N
I        The REDIRECTTYPE attribute is used to specify the type of
I        redirection. If temporary or permanent redirection is specified,
I        the URL in the LOCATION attribute is used for redirection. If
I        no redirection is specified, the URL in the LOCATION attribute
I        is ignored. You can use the SET URIMAP command to change the
I        REDIRECTTYPE attribute and the LOCATION attribute.
N
D    MEDIATYPE(type)
I      This attribute is for USAGE(SERVER), where a static
I      response is to be provided.
N
I      type: Specifies the media type (data content) of the static
I        response that CICS provides to the HTTP request; for example,
I        image/jpg, text/html or text/xml. Up to 56 characters can be
I        used. The media type must contain exactly one forward slash (/).
I        The media type can be entered in uppercase or lowercase, but it
I        is converted to lowercase in the URIMAP definition.
N
I        The name for each formally recognized type of data content is
I        defined by IANA. A list is available at
I        http://www.iana.org/assignments/media-types/. CICS creates a
I        Content-Type header for the response by using the value of this
I        attribute.
N
I        This attribute has no default, and it must be specified. If the
I        MEDIATYPE attribute specifies a text type, such as a type that
I        begins with text/, or a type that contains +xml, you must also
I        specify the CHARACTERSET and HOSTCODEPAGE attributes so that
I        code page conversion can take place. Text media types are
I        identified by RFC 3023, which is available at
I        http://www.ietf.org/rfc/rfc3023.txt.
N
I        For a dynamic (application-generated) response, this attribute
I        is not used. The media type for the response is specified by the
I        WEB SEND command.
N
D    PROGRAM(name)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided.
N
I      name: specifies the 1- to 8-character name of the user application
I        program that composes the HTTP response. For CICS as an HTTP
I        server, this attribute is required unless an analyzer or
I        converter program is specified, or a template name or zFS file
I        is specified, or redirection is specified.
N
I        If the ANALYZER attribute is specified as YES, or a converter
I        program is specified in the CONVERTER attribute, the PROGRAM
I        attribute is used as input to the analyzer or converter program,
I        but it can be overridden by those programs. Alternatively, you
I        can leave this attribute blank and let the analyzer or converter
I        program specify it.
N
D    REDIRECTTYPE(NONE | TEMPORARY | PERMANENT)
I      This attribute is for
I      USAGE(SERVER), USAGE(PIPELINE), and USAGE(ATOM).
N
I      REDIRECTTYPE specifies the type of redirection for requests that
I      match this URIMAP definition. The URL specified by the LOCATION
I      attribute is used for redirection when required.
N
I      NONE: means that requests are not redirected. Any URL specified by
I        the LOCATION attribute is ignored.
N
I      TEMPORARY: means that requests are redirected on a temporary basis.
I        The URL specified by the LOCATION attribute is used for
I        redirection, and the status code that is used for the response
I        is 302 (Found).
N
I      PERMANENT: means that requests are redirected permanently. The URL
I        specified by the LOCATION attribute is used for redirection, and
I        the status code that is used for the response is
I        301 (Moved Permanently).
N
I      You can use the SET URIMAP command to change the REDIRECTTYPE
I      attribute and the LOCATION attribute.If REDIRECTTYPE(TEMPORARY)
I      or REDIRECTTYPE(PERMANENT) is specified when you are creating a
I      URIMAP definition, the following attributes are optional: ANALYZER,
I      CONVERTER, HFSFILE, PIPELINE, PROGRAM, TEMPLATENAME, TRANSACTION,
I      USERID, and WEBSERVICE. If you use a CEMT or EXEC CICS command to
I      set the REDIRECTTYPE attribute to NONE after the URIMAP definition
I      is installed, any of the listed attributes that are specified in
I      the URIMAP definition are activated.
N
D    TCPIPSERVICE(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE), and USAGE(ATOM).
N
I      name: specifies the 1- to 8-character name of a TCPIPSERVICE
I        resource definition, with PROTOCOL(HTTP), that defines an inbound
I        port to which this URIMAP definition relates. If this attribute
I        is not specified, the URIMAP definition applies to a request on
I        any inbound ports.
N
I      When a URIMAP definition with HTTPS as the scheme matches a request
I      that a web client is making, CICS checks that the inbound port used
I      by the request is using SSL. If SSL is not specified for the port,
I      the request is rejected with a 403 (Forbidden) status code. When
I      the URIMAP definition applies to all inbound ports, this check
I      ensures that a web client cannot use an unsecured port to access
I      a secured resource. No check is carried out for a URIMAP definition
I      that specifies HTTP as the scheme, so web clients can use either
I      unsecured or secured (SSL) ports to access these resources.
N
I      You specify the security measures that are applied for each port in
I      the TCPIPSERVICE resource definition. You can choose whether to use
I      SSL, and, if you do use SSL, you need to choose the exact security
I      measures that are applied, for example, the authentication method,
I      the sending of certificates by client and server, and encryption
I      of messages. Read Security for CICS web support in Securing for
I      more information about the security features that you can use to
I      keep your CICS web support facility safe.
N
D    TEMPLATENAME(name)
I      This attribute is for USAGE(SERVER), where a
I      static response is to be provided.
N
I      name: specifies the 1- to 48-character name of a CICS document
I        template that forms the body of the static response that is sent
I        to the HTTP request from the web client. It must be defined by
I        using a DOCTEMPLATE resource definition, and the TEMPLATENAME
I        attribute of that definition specifies the name that is used in
I        the URIMAP definition. For more information, see CICS documents
I        and document templates.
N
I      If you specify TEMPLATENAME or HFSFILE, you must set ANALYZER to
I      NO. The other attributes that relate only to application-generated
I      responses (TRANSACTION, CONVERTER, and PROGRAM) must remain blank.
N
I      If you want to use path matching, include an asterisk as a wildcard
I      character at the end of the name of the CICS document template and
I      also at the end of the path that is specified by the PATH
I      attribute. CICS takes the portion of each HTTP requests path that
I      is covered by the wildcard character and substitutes it as the last
I      part of the template name.
N
I      For example, you can create a URIMAP definition with the PATH
I      attribute specified as:
N
I      findout/about/*
N
I      and the TEMPLATENAME attribute that is specified as:
N
I      templates.facts.*
N
I      The URIMAP definition is used to process an incoming HTTP request
I      http://www.example.com/findout/about/fish.html
N
I      CICS appends fish.html to the template name specified in the URIMAP
I      definition in place of the asterisk, so that the template
N
I      templates.facts.fish.html
N
I      is used to form the static response.
N
I      Specifying an asterisk alone for the TEMPLATENAME attribute means
I      that the selected template has the same name as the part of the
I      URL that corresponds to the wildcard character in the PATH
I      attribute.
N
I      When you specify the TEMPLATENAME attribute, if a query string is
I      present on the URI, but is not used in the PATH attribute, CICS
I      automatically passes the content of the query string into the named
I      CICS document template as a symbol list. If you want to use the
I      content of the query string in the document template, include
I      appropriate variables in your document template to be substituted
I      for the content of the query string.
N
D    TRANSACTION(name)
I      This attribute is for USAGE(SERVER),
I      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).
N
I      name: specifies the 1-4 character name of an alias transaction that
I        is to be used to run the application, or to start the pipeline.
N
I      The default alias transaction is different for each type of URIMAP:
N
I      -> USAGE(SERVER) uses the CWBA transaction
N
I      -> USAGE(PIPELINE) uses the CPIH transaction
N
I      -> USAGE(ATOM) uses the CW2A transaction
N
I      -> USAGE(JVMSERVER) uses the CJSA transaction
N
I      You can select a different transaction name for the purposes of
I      security, monitoring and accounting, or transaction class
I      limitation. Whatever name you choose for the alias transaction, it
I      must always run the same program, which is determined by the
I      USAGE attribute.
N
I      -> For USAGE(SERVER), the program is DFHWBA, which links to the
I         application program named in the PROGRAM attribute of the URIMAP
I         definition or named by the analyzer program.
N
I      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the
I         pipeline that is named in the PIPELINE attribute and the web
I         service that is named in the WEBSERVICE attribute, if specified.
N
I      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias
I         program.
N
I      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks
I         in the JVM server for an application request.
N
I      For USAGE(SERVER) only, if the ANALYZER attribute is specified as
I      YES, the TRANSACTION attribute is used as input to the analyzer
I      program, but the analyzer program can override it. Alternatively,
I      you can leave this attribute blank and let the analyzer program
I      specify it. The analyzer is not used for other types of URIMAP.
N
D    USERID(id)
I      This attribute is for USAGE(SERVER), where an
I      application-generated response is to be provided, USAGE(PIPELINE),
I      USAGE(JVMSERVER), and USAGE(ATOM).
N
I      id: specifies a 1- to 8-character default user ID that can be used
I        by any client. For an application-generated response or a web
I        service, the alias transaction is attached under this user ID.
N
I      For USAGE(JVMSERVER), the user ID is used to attach a transaction
I      to run work in the Liberty profile server. The transaction can be
I      specified in the URI map or use the default transaction CJSA. The
I      user ID is not used if basic authentication is enabled; CICS
I      expects a user ID and password in the HTTP header for the
I      application request and rejects the request if authentication
I      fails. If security is not enabled and no user ID is present in
I      the HTTP header or in the URI map, the default user ID for the
I      CICS region is used.
N
I      For other usage types, when authentication is required for the
I      connection, so that CICS requests an authenticated user ID directly
I      from the client, the default user ID that you specify in the
I      URIMAP definition is not used. The authenticated user ID of the
I      client is used instead, or if authentication fails, the request
I      is rejected. Authentication procedures are specified by the
I      AUTHENTICATE attribute of the TCPIPSERVICE definition for the
I      connection.
N
I      For an application-generated response, if ANALYZER(YES)
I      is specified, the USERID attribute is used as input to the
I      analyzer program, but the analyzer program can override it.
I      Alternatively, you can leave this attribute blank and let the
I      analyzer program specify it. The analyzer is used only when
I      USAGE(SERVER) is specified. A user ID specified by a client can
I      also be changed by the analyzer program. If no user ID is
I      specified by any of the methods that are mentioned, the default
I      user ID for an application-generated response is the CICS default
I      user ID.
N
I      For static responses, the USERID attribute does not apply. Resource
I      security checking for static responses can be carried out by using
I      the authenticated user ID of a client.
N
I      If surrogate user checking is enabled in the CICS region, with
I      XUSER=YES specified as a system initialization parameter, CICS
I      checks that the user ID used to install the URIMAP definition is
I      authorized as a surrogate of the user ID specified for the USERID
I      attribute. For more information about surrogate user checking, see
I      Where surrogate user checking applies in Securing.
N
* End of WISH.
