SREXR0312
Tz/OS TSO/E REXX Reference
T-Chapter 3.
T-Instructions
T-NUMERIC
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175801
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 3. Keyword instructions
N-------------------------------
NInstructions
N------------
NNUMERIC
N-------
NNUMERIC changes the way in which a program carries out arithmetic
Noperations.
N
N
NSyntax:
D  NUMERIC DIGITS expression1
D  NUMERIC FORM ÝSCIENTIFIC | ENGINEERING | VALUE expression2¨
D  NUMERIC FUZZ expression3
N
I    DIGITS: Controls the precision to which arithmetic operations and
I      arithmetic built-in functions are evaluated.
N
I      expression1: If you omit expression1, the precision defaults
I      to 9 digits. Otherwise, expression1 must evaluate to a positive
I      whole number and must be larger than the current NUMERIC FUZZ
I      setting.
N
I    FORM: Controls which form of exponential notation REXX uses for the
I          result of arithmetic operations and arithmetic built-in
I          functions.
N
I      SCIENTIFIC: Only one, nonzero digit appears before the decimal
I                  point.
N
I      ENGINEERING: The power of 10 is always a multiple of 3.
N
I      VALUE: taken from the result of evaluating expression2 that
I             follows VALUE.
N
I        expression2: The result in this case must be either SCIENTIFIC
I                     or ENGINEERING.
N
I    FUZZ: Controls how many digits, at full precision, are ignored
I          during a numeric comparison operation.
N
I      expression3: If you omit expression3, the default is 0 digits.
I                   Otherwise, expression3 must evaluate to 0 or a
I                   positive whole number, rounded if necessary
I                   according to the current NUMERIC DIGITS setting,
I                   and must be smaller than the current NUMERIC DIGITS
I                   setting.
N
NExample: NUMERIC DIGITS
N-----------------------
N
I  NUMERIC DIGITS 9    /* Handles several Megabytes  <== Default */
I  NUMERIC DIGITS 10   /* Handles Gigabyte */
I  NUMERIC DIGITS 14   /* Handles Terabyte */
I  NUMERIC DIGITS 16   /* Handles Petabyte */
I  NUMERIC DIGITS 19   /* Handles Exabyte */
I  NUMERIC DIGITS 22   /* Handles Zetabyte */
I  NUMERIC DIGITS 25   /* Handles Yottabyte */
I  NUMERIC DIGITS 28   /* Handles Hellabyte/Brontobyte  */
I  NUMERIC DIGITS 31   /* Handles Queenbyte */
I  NUMERIC DIGITS 34   /* Handles Robotbyte */
N
NExample: NUMERIC FORM SCIENTIFIC
N--------------------------------
NThis is the default.
I  NUMERIC FORM SCIENTIFIC
N
NExample: NUMERIC FORM ENGINEERING
N---------------------------------
N
I  NUMERIC FORM ENGINEERING
I  NUMERIC DIGITS 31   /* Handles Queenbyte                             */
I  @1_h = 1237940039285380274898944000
I  @1_q = 1024 * @1_h  /*     1,267,650,600,228,229,401,496,728,371,200 */
I  SAY "31=" ,
I    Left("QueenByte",10) Right(@1_q,34) Right(D2X(@1_q),28,"0")
N
NExample: NUMERIC FORM VALUE expression2
N---------------------------------------
N
I  expression2 = "ENGINEERING"
I  NUMERIC FORM VALUE expression2
N
NExample: NUMERIC FUZZ
N---------------------
NOnly compare the five leftmost digits.
I  NUMERIC FUZZ 5
* End of WISH.
