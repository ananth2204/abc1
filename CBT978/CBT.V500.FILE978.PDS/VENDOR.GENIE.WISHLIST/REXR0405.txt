SREXR0405
Tz/OS TSO/E REXX Reference
T-Chapter 4.
T-Built-in functions
T-BITAND
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175806
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NBITAND
N-------
NBITAND returns a string composed of the two input strings logically
NANDed together, bit by bit. (The encoding of the strings are used in
Nthe logical operation.) The length of the result is the length of the
Nlonger of the two strings. If no pad character is provided, the AND
Moperation stops when the shorter of the two strings is exhausted, and
Mthe unprocessed portion of the longer string is appended to the
Npartial result. If pad is provided, it extends the shorter of the two
Nstrings on the right before carrying out the logical operation. The
Ndefault for string2 is the zero length (null) string.
N
N
NSyntax:
D  BITAND(string1,string2,pad)
I    string1: Usually the field to be acted upon.
N
I    string2: Usually the hexadecimal value you are checking for.
N
I    pad: A value to extend short fields with.
N
N
NExample
N-------
I  SAY BITAND('12'x) "->  12 x"
I  SAY BITAND('73'x,'27'x) "->  23 x"
I  SAY BITAND('13'x,'5555'x) "->  1155 x"
I  SAY BITAND('13'x,'5555'x,'74'x) "->  1154 x"
I  SAY BITAND('pQrS',,'BF'x) "->  pqrs  /* EBCDIC */"
I
I  SAY ""
I  a1 = 'B20A00'x
I  a2 = 'B20C04'x
I  SAY "a1="C2X(A1)
I  SAY "a2="C2X(A2)
I  SAY "BitAnd(a1,a2)="c2x(BitAnd(a1,a2))     /* B20800 */
I  SAY "BitOr(a1,a2) ="c2x(BitOr(a1,a2))      /* B20E04 */
I  SAY "BitXor(a1,a2)="c2x(BitXor(a1,a2))     /* 000604 */
* End of WISH.
