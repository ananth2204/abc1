SREXR0303
KFUNCTION SUBROUTINE RETURN
Tz/OS TSO/E REXX Reference
T-Chapter 3.
T-Instructions
T-CALL
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175730
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 3. Keyword instructions
N-------------------------------
NInstructions
N------------
NCALL
N----
NCalls a routine (if you specify name) or controls the trapping of
Ncertain conditions (if you specify ON or OFF).
N
NSyntax:
D  CALL name ,parameter
D  CALL ÝON | OFF¨ ÝERROR | FAILURE | HALT¨
D  CALL ON ÝERROR | FAILURE | HALT¨ NAME trapname
N
N
NCall a routine (perform)
N------------------------
NTo call a routine, specify name, a literal string or symbol that is
Ntaken as a constant. The name must be a symbol, which is treated
Nliterally, or a literal string. The routine called can be:
N
N-> An internal routine - function or subroutine that is in the same
N   program as the CALL instruction or function call that calls it.
N
N-> A built-in routine - function (which may be called as a subroutine)
N   that is defined as part of the REXX language.
N
N-> An external routine - function or subroutine that is neither
N   built-in nor in the same program as the CALL instruction or function
N   call that calls it.
N
NExample: CALL with no result returned
N-------------------------------------
I  Call my-init-rtn
I  ...
Imy_init_rtn:
I  return_code = 0
I  Return
N
N
NTrapping conditions
N-------------------
NTo control trapping, you specify OFF or ON and the condition you want
Nto trap. OFF turns off the specified condition trap. ON turns on the
Nspecified condition trap. All information about condition traps is
Ncontained in Chapter 7, 'Conditions and condition traps'.
N
MYou can use the MDMD block line command to convert the INFOLINEs to
Mregular DATALINEs.
NExample: Using CALL.
N--------------------
I
* End of WISH.
