SAMSC1901
KMASTERCATALOG
TDFSMS AMS
T-Chapter 19.
T-Syntax for DEFINE USERCATALOG Parameters
EKenneth Tomiak <KenTomiak@KTomiak.org>
Z20180512-148993
*
@IBM Corporation
*
Bdgt2i2a1.pdf: SC26-7394-13: z/OS
BDFSMS Access Method Services for Catalogs
BVersion 1 Release 13
*
NAccess Method Services for Catalogs
N-----------------------------------
NChapter 19. DEFINE USERCATALOG
N------------------------------
NSyntax for DEFINE USERCATALOG Parameters
N----------------------------------------
D  DEFINE /* Abbreviation: DEF */ -
N
NRequired Parameters
N-------------------
D    USERCATALOG( | /* Abbreviation: UCAT */ -
M    MASTERCATALOG( /* Abbreviation: MCAT */ -
I      Specifies that a catalog is to be defined.
N
I      USERCATALOG /* Abbreviation: UCAT */: specifies that a user
I        catalog is to be defined. USERCATALOG is followed by the
I        parameters specified for the catalog as a whole. For
I        information about using an alias to identify a user catalog,
I        see z/OS DFSMS Managing Catalogs. The update or higher RACF
I        authority to the master catalog is required.
N
M      MASTERCATALOG /* Abbreviation: MCAT */: This keyword parameter
I        is provided for coexistence with OS/VS1. Processing is
I        identical for the MASTERCATALOG and USERCATALOG parameters.
I        When you specify MASTERCATALOG, a user catalog is created. You
I        can, however, establish a user catalog as a master catalog at
I        IPL time. See z/OS DFSMS Managing Catalogs for a description of
I        this procedure.
N
NUSERCATALOG parameters
N----------------------
N
NRequired Parameters
N-------------------
D      NAME(entryname) -
I        Specifies the name of the catalog being defined.
N
D      VOLUME(volser) /* Abbreviation: VOL */ -
I        Specifies the volume that is to contain the catalog. VOLUME
I        must be specified as a parameter of USERCATALOG, unless:
N
I        -> You specify the MODEL parameter, or
N
I        -> The data set is managed by SMS.
N
I           If the data set is SMS-managed, you should not request
I           specific volume serial numbers with the VOLUME parameter.
I           The ACS routines will assign the data set to a storage class
I           containing attributes such as VOLUME and UNIT. You can
I           allocate your data set to a specific volume serial number
I           only if your storage administrator has selected GUARANTEED
I           SPACE=YES in the storage class assigned to the data set.
I           Only then can you specify volume serial numbers that will
I           override the volume serial numbers used by SMS. However, if
I           space is not available on the volumes with the serial
I           numbers you specified, your request will be unsuccessful.
I           See z/OS DFSMSdfp Storage Administration for information
I           about SMS volume selection.
N
I        You can choose to let SMS assign specific volume serial numbers
I        to an SMS-managed data set by coding an * for each volume
I        serial. SMS then determines the volume serial. If you omit
I        volser, you get one volume.
N
I        If you designate both user-specified and SMS-specified volume
I        serial numbers for an SMS-managed data set, the user-specified
I        volume serials numbers (volsers) must be requested first in
I        the command syntax. Catalogs can only reside on one volume.
N
I        The VOLUME parameter interacts with other DEFINE CATALOG
I        parameters. Ensure that the volume you specify for the catalog
I        is consistent with the catalog's other attributes:
N
I        -> CYLINDERS, RECORDS, TRACKS: The volume contains enough
I           unallocated space to satisfy the catalog's primary space
I           requirement. Space on the volume might already be allocated
I           to non-VSAM data sets and system data sets.
N
I        -> FILE: The volume information supplied with the DD statement
I           is consistent with the information specified for the catalog
I           and its components.
N
NOptional Parameters
N-------------------
D      CYLINDERS(primary secondary) | /*Abbreviation: CYL */ -
D      KILOBYTES(primary secondary) | /* Abbreviation: KB */ -
D      MEGABYTES(primary secondary | /* Abbreviation: MB */ -
D      RECORDS(primary secondary | /* Abbreviation: REC */ -
D      TRACKS(primary secondary) /* Abbreviation: TRK */ -
I        Specifies the amount of space to be allocated from the volume's
I        available space. You can specify the amount of space as a
I        parameter of USERCATALOG, as a parameter of USERCATALOG and
I        DATA, or as a parameter of USERCATALOG, DATA and INDEX.
N
I        This parameter is optional if the cluster is managed by SMS or
I        provided on the DATA and INDEX component level. If it is
I        specified for an SMS-managed cluster, it will override the
I        DATACLASS space specification. If it is not specified for an
I        SMS-managed cluster, it can be modeled or defaulted by SMS. If
I        it cannot be determined, the DEFINE will be unsuccessful.
N
I        If you specify KILOBYTES or MEGABYTES, the amount of space
I        allocated is the minimum number of tracks or cylinders required
I        to contain the specified number of kilobytes or megabytes. The
I        maximum space can be specified with unit of KILOBYTES or
I        MEGABYTES is 16,777,215. If the amount requested exceeds this
I        value, you should specify a larger allocation unit.
N
I        To maintain device independence, do not specify the TRACKS or
I        CYLINDERS parameters. If TRACKS or CYLINDERS is specified for
I        an SMS-managed user catalog, space is allocated on the volumes
I        selected by SMS in units equivalent to the device default
I        geometry.
N
M          These days the only mainframe DASD devices in use are
M          likely to be 3390 and thus the caution about device
M          independence is no longer applicable. If you have something
M          else it is way past time to migrate to the current geometry.
N
I        z/OS DFSMS Managing Catalogs describes how space allocation
I        differs depending on the parameters you specify. It also
I        provides information about estimating the amount of space to
I        be specified for a catalog. On an extended address volume
I        (EAV), a catalog will be allocated only in track-managed space.
N
I        primary secondary: Specifies the size of the primary and
I          secondary extents to be allocated. After the primary extent
I          is filled, the space can expand to include a maximum of 122
I          additional secondary extents if you have specified a
I          secondary allocation amount. Secondary allocation should be
I          specified in case the catalog has to be extended. If you
I          specify a secondary space allocation greater than
I          4.0 gigabytes, the value is reset to the maximum value for
I          that DASD device.
N
I        Exception: The abbreviations CYL, CYLINDER, REC, and RECORD
I        are acceptable to access method services but cannot be used in
I        TSO because the abbreviations do not have enough initial
I        letters to make the keyword unique.
N
D      BUFFERSPACE(size | 3072) /* Abbreviation: BUFSP | BUFSPC */ -
I        Provides the amount of space for buffers. The size you specify
I        for the buffer space helps VSAM determine the size of the data
I        component's and index component's control interval. If
I        BUFFERSPACE is not coded, VSAM attempts to get enough space to
I        contain two data set control intervals and, if the data set is
I        key-sequenced, one index control interval.
N
I        The size specified cannot be less than enough space to contain
I        two data component control intervals. If the data is
I        key-sequenced, it should contain only one index control
I        interval. If the specified size is less than VSAM requires for
I        the buffers needed to run your job, the default BUFFERSPACE
I        calculation overrides the size.
N
I        This is the default BUFFERSPACE calculation: Data control
I        interval size x 2 + index control interval size.
N
I        size: Provides the amount of space, in bytes, for buffers. Size
I          can be expressed in decimal (n), hexadecimal (X'n'), or
I          binary (B'n') form.
N
I          Note: The limitations of the bufferspace value on how many
I          buffers will be allocated is based on storage available in
I          your region, and other parameters or attributes of the data
I          set.
N
D      BUFND(number) /* Abbreviation: BFND */ -
I        Specifies the number of I/O buffers VSAM is to use for
I        transmitting data between virtual and auxiliary storage.
N
I        The size of the buffer is the size of the data component
I        control interval. The minimum number you can specify is the
I        number specified for STRNO plus 1.
N
I        Note that minimum buffer specification does not provide
I        optimum sequential processing performance. Additional data
I        buffers benefit direct inserts or updates during control area
I        splits and will also benefit spanned record accessing.
N
I        number: The number of data buffers to be used. The minimum
I          number allowed is 3; the maximum number allowed is 255.
N
D      BUFNI(number) /* Abbreviation: BFNI */ -
I        Specifies the number of I/O buffers VSAM is to use for
I        transmitting the contents of index entries between virtual and
I        auxiliary storage for keyed access.
N
I        The size of the buffer is the size of the index control
I        interval. The minimum number you can specify is the number
I        specified for STRNO.
N
I        Additional index buffers will improve performance by providing
I        for the residency of some or all the high-level index (index
I        set records), thereby minimizing the number of high-level index
I        records to be retrieved from DASD for key-direct processing.
N
I        number: The number of index buffers to be used. The minimum
I          number allowed is 2 and the maximum number allowed is 255.
N
D      CONTROLINTERVALSIZE(size) /* Abbreviation: CISZ | CNVSZ */ -
I        Specifies the size of the control interval for the catalog or
I        component.
N
I        The size of the control interval depends on the maximum size
I        of the data records and the amount of buffer space you provide.
N
I        If you do not code the CONTROLINTERVALSIZE, VSAM determines
I        the size of control intervals. If you have not specified
I        BUFFERSPACE and the size of your records permits, VSAM
I        calculates the optimum control interval size for the data and
I        index components. This is based partly on device
I        characteristics.If the control interval size calculated by
I        VSAM as required for the index component is greater than the
I        value specified in the parameter, the value calculated by VSAM
I        will be used.
N
I        size: The size of the data and index components of a catalog.
N
I          The maximum control interval size is 32768 bytes.
N
I          You can specify a size from 512 to 8K in increments of 512
I          or from 8K to 32K in increments of 2K. K is 1024 in decimal
I          notation. If you select a size that is not a multiple of
I          512 or 2048, VSAM chooses the next higher multiple.
N
I          Refer to z/OS DFSMS Using Data Sets for a discussion of the
I          relationship between control interval size and physical block
I          size. The discussion also includes restrictions that apply
I          to control interval size and physical block size.
N
D      DATACLASS(class) /* Abbreviation: DATACLAS */ -
I        Specifies the name, 1-to-8 characters, of the data class.
I        DATACLASS can be specified for SMS-managed and non-SMS-managed
I        data sets. It provides the allocation attributes for new data
I        sets. Your storage administrator defines the data class.
I        However, you can override the parameters defined for DATACLASS
I        by explicitly specifying other attributes. Search
I        "Understanding the Order of Assigned Data Set Attributes" for
I        the order of precedence (filtering) the system uses to select
I        the attributes to assign.
N
I        The record organization attribute of DATACLASS is not used by
I        DEFINE USERCATALOG/MASTERCATALOG. If DATACLASS is specified
I        and SMS is inactive, DEFINE will be unsuccessful.
N
D      EATTR(NO | OPT)
I        Specifies whether a catalog can have extended attributes
I        (format 8 and 9 DSCBs) and optionally reside in EAS. The system
I        records the value for EATTR in the VVDS for the catalog objects
I        and in the DSCBs created in the VTOC.
N
I        NO: The catalog can not have extended attributes (format 8 and
I          9 DSCBs) or optionally reside in EAS. The catalog is
I          restricted to track-managed space. NO is the default.
N
I        OPT: The catalog can optionally have extended attributes
I          (format 8 and 9 DSCBs) and can optionally reside in EAS.
N
I        You can also specify EATTR with the MODEL parameter.
N
D      ECSHARING | NOECSHARING /* Abbreviations: ECSHR and NOECSHR */ -
I        Indicate whether or not sharing the catalog can be performed
I        via the coupling facility.
N
I        ECSHARING /* Abbreviation: ECSHR */: Enhanced Catalog Sharing
I          (ECS) is allowed. ECS is a catalog sharing method that makes
I          use of a coupling facility to improve the performance of
I          shared catalog requests. Please read about ECS in z/OS DFSMS
I          Managing Catalogs before enabling ECS for a catalog.
N
N
I        NOECSHARING /* Abbreviation: NOECSHR */: Enhanced Catalog
I          Sharing (ECS) is not allowed. This is the default.
N
I          Catalog sharing will be performed, but the ECS sharing method
I          will not be used.
N
D      FILE(ddname)
I        Specifies the name of the DD statement that identifies the
I        device and volume to be used for the catalog. The DD statement
I        should specify DISP=OLD to prevent premature space allocation
I        on the volume. If FILE is not specified and the catalog's
I        volume is physically mounted, the volume identified with the
I        VOLUME parameter is dynamically allocated. The volume must be
I        mounted as permanently resident or reserved.
N
D      FREESPACE(CI-% CA-% | 0 0) /* Abbreviation: FSPC */ -
I        Specifies the amount of space that is to be left free when the
I        catalog is loaded and after any split of control intervals
I        (CI_percent) and control areas (CA_percent).
N
I        The empty space in the control interval and control area is
I        available for data records that are updated and inserted after
I        the catalog is initially loaded.
N
I        The amounts are specified as percentages. C_percent translates
I        into a number of bytes that is equal to, or slightly less than,
I        the percentage value of CI_percent. CA_percent translates into
I        a number of control intervals that is equal to, or less than,
I        the percentage value of CA_percent.
N
I        CI_percent and CA_percent, must be equal to or less than 100.
I        If you use FREESPACE(100 100), one data record is placed in
I        each control interval used for data and one control interval
I        in each control area is used for data (that is, one data record
I        is stored in each control area when the data set is loaded).
N
I        When no FREESPACE value is coded, the default specifies that
I        no free space is to be reserved when the data set is loaded.
N
D      ICFCATALOG | VOLCATALOG /* Abbreviations: ICFCAT and VOLCAT */ -
I        Specify the type of catalog to be defined.
N
I        ICFCATALOG /* Abbreviation: ICFCAT */: Defines a catalog.
N
I        VOLCATALOG /* Abbreviation: VOLCAT */: Defines a tape volume
I          catalog (VOLCAT). A VOLCAT can contain only tape library and
I          tape volume entries. You can define either a general VOLCAT
I          or a specific VOLCAT.
N
I          -> A general VOLCAT is the default tape volume catalog. A
I             general VOLCAT contains all tape library entries and any
I             tape volume entries that do not point to a specific
I             VOLCAT. Each system can have access to only one general
I             VOLCAT. You must define the general VOLCAT prior to
I             bringing the tape libraries online.
N
I          The general VOLCAT must be in the form:
N
I            XXXXXXXX.VOLCAT.VGENERAL
N
I          where XXXXXXXX either defaults to SYS1 or to another high
I          level qualifier specified by the LOADxx member in
I          SYS1.PARMLIB. For more information on changing the
I          high-level qualifier for VOLCATs, see the section on
I          bypassing SYSCATxx with LOADxx in z/OS DFSMS Managing
I          Catalogs.
N
I          -> A specific VOLCAT is a tape volume catalog that contains
I             a specific group of tape volume entries based on the tape
I             volume serial numbers (tape volsers). A specific VOLCAT
I             cannot contain tape library entries.
N
I             The specific VOLCAT must be in the form:
N
I               XXXXXXXX.VOLCAT.Vy
N
I             -> where XXXXXXXX either defaults to SYS1 or is another
I                high-level qualifier specified by the LOADxx member in
I                SYS1.PARMLIB.
N
I             -> where y represents the first character of a tape
I                volser. A specific VOLCAT contains all the tape volume
I                entries with volsers whose first character is equal
I                to y. Search "Tape Volume Names" for a discussion of
I                the naming restrictions for tape volume volsers.
N
D      LOCK | UNLOCK -
I        Controls the setting of the catalog lock attribute, and
I        therefore checks access to a catalog. LOCK and UNLOCK can be
I        specified only when the entryname identifies a catalog. UNLOCK
I        is the default. Before you lock a catalog, review the
I        information on locking catalogs in z/OS DFSMS Managing
I        Catalogs.
N
I        LOCK: Specifies that the catalog identified by entryname is to
I          be defined with the lock attribute on. Defining the catalog
I          with the lock on restricts catalog access to authorized
I          personnel. Specification of this parameter requires READ
I          authority to the profile name, IGG.CATLOCK, with class type
I          FACILITY. Catalogs are usually defined with the lock
I          attribute on only after a DELETE RECOVERY during catalog
I          recovery operations. Locking a catalog makes it inaccessible
I          to all users without READ authority to RACF FACILITY class
I          profile IGG.CATLOCK (including users sharing the catalog on
I          other systems).
N
I        UNLOCK: Specifies that the catalog identified by entryname is
I          to be defined with the lock attribute off. This is the
I          default if LOCK | UNLOCK is not specified.
N
D      MANAGEMENTCLASS(class) /* Abbreviation: MGMTCLAS */ -
I        For SMS-managed data sets: Specifies the name, 1-to-8
I        characters, of the management class. Your storage administrator
I        defines the names of the management classes you can specify.
I        If MANAGEMENTCLASS is not specified, but STORAGECLASS is
I        specified or defaulted, MANAGEMENTCLASS is derived from
I        automatic class selection (ACS). If MANAGEMENTCLASS is
I        specified and SMS is inactive, DEFINE will be unsuccessful.
N
D      MODEL(entryname catname)
I        Specifies that an existing master or user catalog is to be used
I        as a model for the user catalog being defined.
N
I        When one entry is used as a model for another, its attributes
I        are copied as the new entry is defined. You can use some
I        attributes of the model and override others by explicitly
I        specifying them in the definition of the user catalog.
N
I        If a model is used, you must specify certain parameters even
I        though no attributes are to be changed or added. The name of
I        the user catalog to be defined and volume and space information
I        must always be specified as parameters of USERCATALOG. Search
I        "Understanding the Order of Assigned Data Set Attributes" for
I        information about the order in which the system selects an
I        attribute.
N
I        STORAGECLASS and MANAGEMENTCLASS classes can be modeled.
I        If DATACLASS exists for the entry being used as a model, it is
I        ignored.
N
I        entryname: Specifies the name of the master or user catalog to
I          be used as a model.
N
I        You can specify the EATTR parameter with MODEL.
N
D      OWNER(ownerid)
I        Specifies the identification of the owner of the catalog being
I        defined.
N
M      RECORDSIZE(average maximum | 4086 32400) -
M      /* Abbreviation: RECSZ */ -
I        If you specify record size it is ignored, and no error message
I        gets issued.
N
D      SHAREOPTIONS(crossregioncrosssystem |  3 4)
I        Specifies how a catalog can be shared among users. This
I        specification applies to both the data and index components of
I        the catalog.
N
I        crossregion: Indicates the amount of sharing allowed among
I          regions within the same system or within multiple systems
I          using global resource serialization (GRS). Independent job
I          steps in an operating system, or multiple systems in a GRS
I          ring, can access a VSAM data set concurrently. For more
I          information about GRS, see z/OS MVS Planning: Global Resource
I          Serialization. To share a data set, each user must include
I          DISP=SHR in the data set's DD statement. You can use the
I          following options:
N
I        1: The data set can be shared by any number of users for read
I           processing, or the data set can be accessed by only one user
I           for read and write processing. This setting does not allow
I           any non-RLS access when the data set is already open for
I           VSAM RLS or DFSMStvs processing. An RLS or DFSMStvs open
I           fails with this option if the data set is already open for
I           any processing.
N
I        2: The data set can be accessed by any number of users for read
I           processing, and it can also be accessed by one user for
I           write processing. It is the user's responsibility to provide
I           read integrity. VSAM ensures write integrity by obtaining
I           exclusive control for a control interval while it is being
I           updated. A VSAM RLS or DFSMStvs open is not allowed while
I           the data set is open for non-RLS output.
N
I           If the data set has already been opened for VSAM RLS or
I           DFSMStvs processing, a non-RLS open for input is allowed;
I           a non-RLS open for output fails. If the data set is opened
I           for input in non-RLS mode, a VSAM RLS or DFSMStvs open is
I           allowed.
N
I        3: The data set can be fully shared by any number of users. The
I           user is responsible for maintaining both read and write
I           integrity for the data the program accesses. This setting
I           does not allow any non-RLS access when the data set is
I           already open for VSAM RLS or DFSMStvs processing. If the
I           data set is opened for input in non-RLS mode, a VSAM RLS or
I           DFSMStvs open is allowed.
N
I           This option is the only one applicable to a catalog.
N
I        4: The data set can be fully shared by any number of users. For
I           each request, VSAM refreshes the buffers used for direct
I           processing. This setting does not allow any non-RLS access
I           when the data set is already open for VSAM RLS or DFSMStvs
I           processing. If the data set is opened for input in non-RLS
I           mode, a VSAM RLS or DFSMStvs open is allowed.
N
I           As in SHAREOPTIONS 3, each user is responsible for
I           maintaining both read and write integrity for the data the
I           program accesses.
N
I        crosssystem: Specifies the amount of sharing allowed among
I          systems. Job steps of two or more operating systems can gain
I          access to the same VSAM data set regardless of the
I          disposition specified in each step's DD statement for the
I          data set. However, if you are using GRS across systems or
I          JES3, the data set might not be shared depending on the
I          disposition of the system.
N
I          To get exclusive control of the data set's volume, a task
I          in one system issues the RESERVE macro. The level of
I          cross-system sharing allowed by VSAM applies only in a
I          multiple operating system environment.
N
I          The cross-system sharing options are ignored by VSAM RLS or
I          DFSMStvs processing. The values are:
N
I          1: Reserved.
N
I          2: Reserved.
N
I          3: Specifies that the data set can be fully shared. Each
I             user is responsible for maintaining both read and write
I             integrity for the data that user's program accesses. User
I             programs that ignore write integrity guidelines can result
I             in:
N
I            -> VSAM program checks
N
I            -> Uncorrectable data set errors
N
I            -> Unpredictable results
N
I            The RESERVE and DEQ macros are required with this option
I            to maintain data set integrity. (See z/OS MVS Programming:
I            Authorized Assembler Services Reference ALE-DYN and
I            z/OS MVS Programming: Authorized Assembler Services
I            Reference LLA-SDU for information on using RESERVE and DEQ.)
I            If the sphere is accessed using VSAM RLS or DFSMStvs
I            protocols, VSAM RLS maintains the required integrity.
N
I          4: Specifies that the data set can be fully shared. For each
I             request, VSAM refreshes the buffers used for direct
I             processing. This option requires that you use the RESERVE
I             and DEQ macros to maintain data integrity while sharing
I             the data set. Improper use of the RESERVE macro can cause
I             problems similar to those described under SHAREOPTIONS 3.
I             (See z/OS MVS Programming: Authorized Assembler Services
I             Reference ALE-DYN and z/OS MVS Programming: Authorized
I             Assembler Services Reference LLA-SDU for information on
I             using RESERVE and DEQ.) Output processing is limited to
I             update, or add processing, or both that does not change
I             either the high-used RBA or the RBA of the high key data
I             control interval if DISP=SHR is used.
N
D      STORAGECLASS(class)
I        For SMS-managed data sets: Specifies the 1-to-8 character name
I        of the storage class. Your storage administrator defines the
I        names of the storage classes you can specify. Use the storage
I        class to specify the storage service level to be used by SMS
I        for storage of the catalog. If STORAGECLASS is specified and
I        SMS is inactive, DEFINE will be unsuccessful.
N
D      STRNO(number | 2)
I        Specifies the number of requests (RPLs) requiring concurrent
I        data set positioning that VSAM is to be prepared to
I        accommodate.
N
I        number: The number of requests catalog administration must be
I          prepared to accommodate. The minimum number allowed is 2 and
I          the maximum number is 255.
N
D      TO(date) | FOR(days) -
I        Specifies the retention period for the catalog being defined.
I        If no value is coded, the catalog can be deleted whenever it is
I        empty.
N
I        The MANAGEMENTCLASS maximum retention period, if specified,
I        limits the retention period specified by this parameter.
N
I        For non-SMS-managed catalogs, the correct retention period is
I        reflected in the catalog entry. The VTOC entry cannot contain
I        the correct retention period. Enter a LISTCAT command to see
I        the correct expiration date.
N
I        For SMS-managed catalogs, the expiration date in the catalog
I        is updated and the expiration date in the format-1 DSCB is
I        changed. Should the expiration date in the catalog not agree
I        with the expiration date in the VTOC, the VTOC entry overrides
I        the catalog entry. In this case, enter a LISTVTOC command to
I        see the correct expiration date.
N
I        TO(date):  Specifies the earliest date that a command without
I          the PURGE parameter can delete the catalog. Specify the
I          expiration date in the form yyyyddd, where yyyy is a
I          four-digit year (to a maximum of 2155) and ddd is the
I          three-digit day of the year from 001 through 365
I          (for non-leap years) or 366 (for leap years).
N
I          The following four values are "never-expire" dates:
I          99365, 99366, 1999365, and 1999366. Specifying a
I          "never-expire" date means that the PURGE parameter will
I          always be required to delete the catalog. For related
I          information, see the "EXPDT Parameter" section of z/OS MVS
I          JCL Reference, SA22-7597.
N
I          Notes:
N
I          1. Any dates with two-digit years (other than 99365 or 99366)
I             will be treated as pre-2000 dates. (See note 2.)
N
I          2. Specifying the current date or a prior date as the
I             expiration date will make the catalog immediately eligible
I             for deletion.
N
I        FOR(days): Specifies the number of days to keep the catalog.
I          The maximum number is 93000. If the number is 0 through 92999
I          (except for 9999), the entry is retained for the number of
I          days indicated. If the number is either 9999 or 93000, the
I          entry is retained indefinitely. There is a hardware imposed
I          expiration date of 2155.
N
D      WRITECHECK | NOWRITECHECK /* Abbreviations: WCK and NWCK */-
I        Specify whether or not the catalog is to be checked by a
I        direct access device operation called write check when a
I        record is written to the device.
N
I        WRITECHECK /* Abbreviation: WCK */: Specifies that a record is
I          to be written and then read, without data transfer.
N
I        NOWRITECHECK /* Abbreviation: NWCK */: Specifies that the
I          catalog is not to be checked by a write Checks to see if a
I          record has been written to the device.
D    ) -
N
NDATA component
N--------------
D    DATA( -
D      CYLINDERS(primary secondary) | /*Abbreviation: CYL */ -
D      KILOBYTES(primary secondary) | /* Abbreviation: KB */ -
D      MEGABYTES(primary secondary | /* Abbreviation: MB */ -
D      RECORDS(primary secondary | /* Abbreviation: REC */ -
D      TRACKS(primary secondary) /* Abbreviation: TRK */ -
I        Specifies the amount of space to be allocated from the volume's
I        available space. You can specify the amount of space as a
I        parameter of USERCATALOG, as a parameter of USERCATALOG and
I        DATA, or as a parameter of USERCATALOG, DATA and INDEX.
N
I        This parameter is optional if the cluster is managed by SMS or
I        provided on the DATA and INDEX component level. If it is
I        specified for an SMS-managed cluster, it will override the
I        DATACLASS space specification. If it is not specified for an
I        SMS-managed cluster, it can be modeled or defaulted by SMS. If
I        it cannot be determined, the DEFINE will be unsuccessful.
N
I        If you specify KILOBYTES or MEGABYTES, the amount of space
I        allocated is the minimum number of tracks or cylinders required
I        to contain the specified number of kilobytes or megabytes. The
I        maximum space can be specified with unit of KILOBYTES or
I        MEGABYTES is 16,777,215. If the amount requested exceeds this
I        value, you should specify a larger allocation unit.
N
I        To maintain device independence, do not specify the TRACKS or
I        CYLINDERS parameters. If TRACKS or CYLINDERS is specified for
I        an SMS-managed user catalog, space is allocated on the volumes
I        selected by SMS in units equivalent to the device default
I        geometry.
N
M          These days the only mainframe DASD devices in use are
M          likely to be 3390 and thus the caution about device
M          independence is no longer applicable. If you have something
M          else it is way past time to migrate to the current geometry.
N
I        z/OS DFSMS Managing Catalogs describes how space allocation
I        differs depending on the parameters you specify. It also
I        provides information about estimating the amount of space to
I        be specified for a catalog. On an extended address volume
I        (EAV), a catalog will be allocated only in track-managed space.
N
I        primary secondary: Specifies the size of the primary and
I          secondary extents to be allocated. After the primary extent
I          is filled, the space can expand to include a maximum of
I          122 additional secondary extents if you have specified a
I          secondary allocation amount. Secondary allocation should be
I          specified in case the catalog has to be extended. If you
I          specify a secondary space allocation greater than
I          4.0 gigabytes, the value is reset to the maximum value for
I          that DASD device.
N
I          Exception: The abbreviations CYL, CYLINDER, REC, and RECORD
I          are acceptable to access method services but cannot be used
I          in TSO because the abbreviations do not have enough initial
I          letters to make the keyword unique.
N
D      BUFFERSPACE(size | 3072) /* Abbreviation: BUFSP | BUFSPC */ -
I        Provides the amount of space for buffers. The size you specify
I        for the buffer space helps VSAM determine the size of the data
I        component's and index component's control interval. If
I        BUFFERSPACE is not coded, VSAM attempts to get enough space to
I        contain two data set control intervals and, if the data set is
I        key-sequenced, one index control interval.
N
I        The size specified cannot be less than enough space to contain
I        two data component control intervals. If the data is
I        key-sequenced, it should contain only one index control
I        interval. If the specified size is less than VSAM requires for
I        the buffers needed to run your job, the default BUFFERSPACE
I        calculation overrides the size.
N
I        This is the default BUFFERSPACE calculation: Data control
I        interval size x 2 + index control interval size.
N
I        size: Provides the amount of space, in bytes, for buffers. Size
I          can be expressed in decimal (n), hexadecimal (X'n'), or
I          binary (B'n') form.
N
I          Note: The limitations of the bufferspace value on how many
I          buffers will be allocated is based on storage available in
I          your region, and other parameters or attributes of the data
I          set.
N
D      BUFND(number) /* Abbreviation: BFND */ -
I        Specifies the number of I/O buffers VSAM is to use for
I        transmitting data between virtual and auxiliary storage.
N
I        The size of the buffer is the size of the data component
I        control interval. The minimum number you can specify is the
I        number specified for STRNO plus 1.
N
I        Note that minimum buffer specification does not provide
I          optimum sequential processing performance. Additional data
I          buffers benefit direct inserts or updates during control area
I          splits and will also benefit spanned record accessing.
N
I        number: The number of data buffers to be used. The minimum
I          number allowed is 3; the maximum number allowed is 255.
N
D      CONTROLINTERVALSIZE(size) /* Abbreviation: CISZ | CNVSZ */ -
I        Specifies the size of the control interval for the catalog or
I        component.
N
I        The size of the control interval depends on the maximum size
I        of the data records and the amount of buffer space you provide.
N
I        If you do not code the CONTROLINTERVALSIZE, VSAM determines
I        the size of control intervals. If you have not specified
I        BUFFERSPACE and the size of your records permits, VSAM
I        calculates the optimum control interval size for the data and
I        index components. This is based partly on device
I        characteristics.If the control interval size calculated by
I        VSAM as required for the index component is greater than the
I        value specified in the parameter, the value calculated by VSAM
I        will be used.
N
I        size: The size of the data and index components of a catalog.
N
I          The maximum control interval size is 32768 bytes.
N
I          You can specify a size from 512 to 8K in increments of 512
I          or from 8K to 32K in increments of 2K. K is 1024 in decimal
I          notation. If you select a size that is not a multiple of
I          512 or 2048, VSAM chooses the next higher multiple.
N
I          Refer to z/OS DFSMS Using Data Sets for a discussion of the
I          relationship between control interval size and physical block
I          size. The discussion also includes restrictions that apply
I          to control interval size and physical block size.
N
D      FREESPACE(CI-% CA-% | 0 0) /* Abbreviation: FSPC */ -
I        Specifies the amount of space that is to be left free when the
I        catalog is loaded and after any split of control intervals
I        (CI_percent) and control areas (CA_percent).
N
I        The empty space in the control interval and control area is
I        available for data records that are updated and inserted after
I        the catalog is initially loaded.
N
I        The amounts are specified as percentages. C_percent translates
I        into a number of bytes that is equal to, or slightly less than,
I        the percentage value of CI_percent. CA_percent translates into
I        a number of control intervals that is equal to, or less than,
I        the percentage value of CA_percent.
N
I        CI_percent and CA_percent, must be equal to or less than 100.
I        If you use FREESPACE(100 100), one data record is placed in
I        each control interval used for data and one control interval in
I        each control area is used for data (that is, one data record is
I        stored in each control area when the data set is loaded).
N
I        When no FREESPACE value is coded, the default specifies that
I        no free space is to be reserved when the data set is loaded.
N
M      RECORDSIZE(average maximum | 4086 32400) -
M      /* Abbreviation: RECSZ */ -
I        If you specify record size it is ignored, and no error message
I        gets issued.
N
D      WRITECHECK | NOWRITECHECK /* Abbreviations: WCK and NWCK */-
I        Specify whether or not the catalog is to be checked by a direct
I        access device operation called write check when a record is
I        written to the device.
N
I        WRITECHECK /* Abbreviation: WCK */: Specifies that a record is
I          to be written and then read, without data transfer.
N
I        NOWRITECHECK /* Abbreviation: NWCK */: Specifies that the
I          catalog is not to be checked by a write Checks to see if a
I          record has been written to the device.
N
D    ) -
N
NINDEX component
N---------------
D    INDEX( -
D      CYLINDERS(primary secondary) | /*Abbreviation: CYL */ -
D      KILOBYTES(primary secondary) | /* Abbreviation: KB */ -
D      MEGABYTES(primary secondary | /* Abbreviation: MB */ -
D      RECORDS(primary secondary | /* Abbreviation: REC */ -
D      TRACKS(primary secondary) /* Abbreviation: TRK */ -
I        Specifies the amount of space to be allocated from the volume's
I        available space. You can specify the amount of space as a
I        parameter of USERCATALOG, as a parameter of USERCATALOG and
I        DATA, or as a parameter of USERCATALOG, DATA and INDEX.
N
I        This parameter is optional if the cluster is managed by SMS or
I        provided on the DATA and INDEX component level. If it is
I        specified for an SMS-managed cluster, it will override the
I        DATACLASS space specification. If it is not specified for an
I        SMS-managed cluster, it can be modeled or defaulted by SMS. If
I        it cannot be determined, the DEFINE will be unsuccessful.
N
I        If you specify KILOBYTES or MEGABYTES, the amount of space
I        allocated is the minimum number of tracks or cylinders required
I        to contain the specified number of kilobytes or megabytes. The
I        maximum space can be specified with unit of KILOBYTES or
I        MEGABYTES is 16,777,215. If the amount requested exceeds this
I        value, you should specify a larger allocation unit.
N
I        To maintain device independence, do not specify the TRACKS or
I        CYLINDERS parameters. If TRACKS or CYLINDERS is specified for
I        an SMS-managed user catalog, space is allocated on the volumes
I        selected by SMS in units equivalent to the device default
I        geometry.
N
M          These days the only mainframe DASD devices in use are
M          likely to be 3390 and thus the caution about device
M          independence is no longer applicable. If you have something
M          else it is way past time to migrate to the current geometry.
N
I        z/OS DFSMS Managing Catalogs describes how space allocation
I        differs depending on the parameters you specify. It also
I        provides information about estimating the amount of space to
I        be specified for a catalog. On an extended address volume
I        (EAV), a catalog will be allocated only in track-managed space.
N
I        primary secondary: Specifies the size of the primary and
I          secondary extents to be allocated. After the primary extent
I          is filled, the space can expand to include a maximum of
I          122 additional secondary extents if you have specified a
I          secondary allocation amount. Secondary allocation should be
I          specified in case the catalog has to be extended. If you
I          specify a secondary space allocation greater than
I          4.0 gigabytes, the value is reset to the maximum value for
I          that DASD device.
N
I          Exception: The abbreviations CYL, CYLINDER, REC, and RECORD
I          are acceptable to access method services but cannot be used
I          in TSO because the abbreviations do not have enough initial
I          letters to make the keyword unique.
N
D      BUFNI(number) /* Abbreviation: BFNI */ -
I        Specifies the number of I/O buffers VSAM is to use for
I        transmitting the contents of index entries between virtual and
I        auxiliary storage for keyed access.
N
I        The size of the buffer is the size of the index control
I        interval. The minimum number you can specify is the number
I        specified for STRNO.
N
I        Additional index buffers will improve performance by providing
I        for the residency of some or all the high-level index (index
I        set records), thereby minimizing the number of high-level
I        index records to be retrieved from DASD for key-direct
I        processing.
N
I        number: The number of index buffers to be used. The minimum
I        number allowed is 2 and the maximum number allowed is 255.
N
D      CONTROLINTERVALSIZE(size) /* Abbreviation: CISZ | CNVSZ */ -
I        Specifies the size of the control interval for the catalog or
I        component.
N
I        The size of the control interval depends on the maximum size
I        of the data records and the amount of buffer space you provide.
N
I        If you do not code the CONTROLINTERVALSIZE, VSAM determines
I        the size of control intervals. If you have not specified
I        BUFFERSPACE and the size of your records permits, VSAM
I        calculates the optimum control interval size for the data and
I        index components. This is based partly on device
I        characteristics.If the control interval size calculated by
I        VSAM as required for the index component is greater than the
I        value specified in the parameter, the value calculated by
I        VSAM will be used.
N
I        size: The size of the data and index components of a catalog.
N
I          The maximum control interval size is 32768 bytes.
N
I          You can specify a size from 512 to 8K in increments of 512 or
I          from 8K to 32K in increments of 2K. K is 1024 in decimal
I          notation. If you select a size that is not a multiple of
I          512 or 2048, VSAM chooses the next higher multiple.
N
I          Refer to z/OS DFSMS Using Data Sets for a discussion of the
I          relationship between control interval size and physical block
I          size. The discussion also includes restrictions that apply to
I          control interval size and physical block size.
N
D      WRITECHECK | NOWRITECHECK /* Abbreviations: WCK and NWCK */-
I        Specify whether or not the catalog is to be checked by a
I        direct access device operation called write check when a
I        record is written to the device.
N
I        WRITECHECK /* Abbreviation: WCK */: Specifies that a record is
I          to be written and then read, without data transfer.
N
I        NOWRITECHECK /* Abbreviation: NWCK */: Specifies that the
I          catalog is not to be checked by a write Checks to see if a
I          record has been written to the device.
N
D    ) /* - */
N
M    CATALOG(mastercatname) /* Abbreviation: CAT */
I      Unused parameter. Retained for compatibility only.
N
I      mastercatname: Regardless of specification, the entry will go
I        into the current system master catalog.
* End of WISH.
