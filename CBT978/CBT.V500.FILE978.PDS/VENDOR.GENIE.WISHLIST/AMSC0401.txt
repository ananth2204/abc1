SAMSC0401
TDFSMS AMS
T-Chapter 4.
T-Syntax for ALLOCATE Parameters
EKenneth Tomiak <KenTomiak@KTomiak.org>
Z20180512-148953
*
@IBM Corporation
*
Bdgt2i2a1.pdf: SC26-7394-13: z/OS
BDFSMS Access Method Services for Catalogs
BVersion 1 Release 13
*
NAccess Method Services for Catalogs
N-----------------------------------
NChapter 4. ALLOCATE
N-------------------
NSyntax for ALLOCATE Parameters
N------------------------------
IParameters that might cause unpredictable results if used within
Iaccess method services contain /* Use with Caution */.
ISee z/OS TSO/E Command Reference.
N
D  ALLOCATE -
N
NRequired Parameters
N-------------------
D    DATASET(dsname) | -
N      Abbreviation: DA, DSN, DSNAME
D    FILE(ddname) | -
I      DATASET(dsname):  Gives the name of the data set to be
I        allocated. The data set name must be fully qualified. If this
I        parameter is omitted, the system creates a temporary data set
I        name for the actual data set.
N
I        -> If the data set name is not in quotation marks and a USER
I           parameter is given in the JCL, the value in the USER
I           parameter is prefixed to all data set names given by
I           ALLOCATE.
N
I        -> If the USER parameter is not in the JCL, no prefix is
I           added to any data set name given by ALLOCATE
N
I        -> The ALLOCATE command can be used to create temporary data
I           sets, but only by omitting the DATASET parameter.
I           Temporary data sets cannot be created by using the
I           DATASET parameter.
N
I         Non-VSAM temporary data sets are the only uncataloged data
I         sets that you can create.
N
I         For more information about temporary data sets, see
I         z/OS MVS JCL Reference. For more information about VSAM
I         temporary data sets, see z/OS DFSMS Using Data Sets.
N
I         Exception: A temporary data set that is created by the
I         ALLOCATE command is deleted at the completion of the current
I         step. It cannot be referred to by subsequent steps in a job.
N
I         -> You cannot concurrently allocate data sets that reside on
I            the same physical tape volume.
N
I         -> To allocate a member of a generation data group, provide
I            the fully qualified data set name, including the generation
I            number.
N
I       FILE(ddname): This is the name of the data set, and can have
I         up to eight characters. If you omit this parameter, the system
I         assigns an available system file name (ddname). Do not use
I         special ddnames unless you want to use the facilities those
I         names represent to the system. See "JCL DD Statement for a
I         Snap Dump" for more information about AMSDUMP. See
I         z/OS MVS JCL Reference for more information about the
I         following special ddnames:
N
I         ->AMSDUMP SYSABEND
I         ->JOBLIB SYSCKEOV
I         ->STEPLIB SYSUDUMP
N
I         See z/OS TSO/E Command Reference for more information on
I         these special ddnames:
N
I         ->SYSTSIN SYSTSPRT
N
I         You cannot use SYSTSIN and SYSTSPRT in a job step that runs
I         the ALLOCATE command. See "Restrictions" for further
I         information.
N
N    * | dsname-list | DUMMY /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
NOptional Parameters
N-------------------
D    ACCODE(access code) -
I      Assigns the accessibility code for an ISO/ANSI output tape data
I      set, which protects it from unauthorized use. You can use up to
I      eight characters in the access code, but ISO/ANSI validates only
I      the first character. The ACCODE can now be any of the following
I      57 ISO/ANSI a-type characters: blank, upper case letters A-Z,
I      numeric 0-9, or one of the special characters
I      !*"%&'()+,-./:;<=>?_. Password protection is supported for ANSI
I      tape data sets under the PASSWORD/NOPWREAD options on the LABEL
I      parameter. Password access overrides any ACCODE value if you
I      use both options.
N
D    ALTFILE(name) -
I      The name of the SYSIN subsystem data set that is to be allocated,
I      and can be up to eight characters. The system uses this parameter
I      primarily in the background.
N
D    AVGREC(U | K | M) -
I      Determines the size of the average record block. You can use the
I      following values:
N
I      U Use the primary and secondary quantities as given on the SPACE
I        parameter.
I      K Multiply primary space quantity and secondary space quantity
I        by 1024 (1 KB).
I      M Multiply primary space quantity and secondary space quantity
I        by 1,048,576 (1 MB).
N
I      Use the AVGREC parameter to define a new data set when:
N
I      -> The units of allocation that is requested for storage space
I         are records.
N
I      -> The primary and secondary space quantities used with the
I         SPACE parameter represent units, thousands, or millions of
I         records.
N
I      When you use AVGREC with the SPACE parameter, the first
I      subparameter for the SPACE parameter must give the average
I      record length of the records.
I
I      Use the AVGREC parameter when you want to show records as the
I      units of allocation. You can also use the AVGREC parameter to
I      override the space allocation defined in the data class for the
I      data set.
N
I      If SMS is not active, the system checks the syntax and then
I      ignores the AVGREC parameter.
N
D    BFALN(F | D) -
I      Specifies that each buffer starts either on a word boundary that
I      is not also a doubleword boundary or on a doubleword boundary.
N
I      F Each buffer starts on a fullword boundary that might not be a
I        doubleword boundary.
N
I      D Each buffer starts on a doubleword boundary.
N
I      If you do not use this parameter, the system defaults to a
I      doubleword boundary.
N
D    BFTEK(S | E | A | R) -
I      Is the type of buffering that you want the system to use, such
I      as:
N
I      S Simple buffering
I      E Exchange buffering
I      A Automatic record area buffering
I      R Record buffering
N
I      BFTEK(R) is not compatible with partitioned data sets extended
I      (PDSE) and results in an error if used with the DSNTYPE(LIBRARY)
I      parameter.
N
D    BLKSIZE(value) -
I      The data control block (DCB) block size for the data set. If the
I      data set is not on tape and is not dummy, the maximum allowable
I      value for the block size is 32760. If the data set is on tape or
I      dummy and the program uses LBI, the maximum allowable value for
I      the block size is 256K. If you code the K, it multiplies the
I      value by 1024. "LBI" stands for large block interface and means
I      that the application program coded the BLKSIZE parameter on a
I      DCBE macro.
N
I      You can specify BLKSIZE for NEW or MOD data sets.
N
I      For direct access storage device (DASD) data sets: If you do not
I      use BLKSIZE, the system determines an optimal DCB block size for
I      the new data set. To create the DCB block size:
N
I      -> The system determines the block size if the record format is
I         not U (undefined) and you do not assign the block size.
I      -> You can assign the block size through the BLKSIZE parameter.
I      -> You can use the LIKE parameter to obtain the block size from
I         an existing model data set.
I      -> If you do not assign BLKSIZE or LIKE, the system can determine
I         the block size from the BLOCK parameter.
N
I      The block size that you assign for the DCB must be consistent
I      with the requirements of the RECFM parameter. If you use:
N
I      -> RECFM(F), the block size must be equal to, or greater than,
I         the logical record length.
I      -> RECFM(FB), the block size must be an integral multiple of the
I         logical record length.
I      -> RECFM(V), the block size must be equal to, or greater than,
I         the largest block in the data set. (For unblocked
I         variable-length records, the size of the largest block must
I         allow space for the 4-byte block descriptor word, in addition
I         to the largest logical record length. The logical record
I         length must allow space for a 4-byte record descriptor word.)
I      -> RECFM(VB), the block size must be equal to, or greater than,
I         the largest block in the data set. For block variable-length
I         records, the size of the largest block must allow space for
I         the 4-byte block descriptor word, in addition to the sum of
I         the logical record lengths that will go into the block. Each
I         logical record length must allow space for a 4-byte record
I         descriptor word.
N
I         Because the number of logical records can vary, estimate the
I         optimum block size and the average number of records for each
I         block, based on your knowledge of the application that requires
I         the I/O.
N
I      -> RECFM(U) and BLKSIZE(80), one character is truncated from the
I         line if the data set is the TSO terminal. That character
I         (the last byte) is reserved for an attribute character.
N
I      For PDSEs:
I      -> The system chooses the BLKSIZE if you do not explicitly
I         specify it. If BLKSIZE is given, the system treats the
I         BLKSIZE as the length of the simulated block. For create
I         mode processing, the logical record length is equal to the
I         block size if LRECL is not given. If you use LRECL, BLKSIZE
I         must conform to the LRECL and RECFM definitions. If you use:
N
I         RECFM(F)                BLKSIZE must equal LRECL
I         RECFM(FB) or RECFM(FBS) BLKSIZE must be a multiple of LRECL
I         RECFM(V) or RECFM(VB)   BLKSIZE must be at least four bytes
I                                 larger than LRECL
I         RECFM(VBS)              BLKSIZE must be at least eight bytes.
N
I      -> For input or update processing, the block size must conform
I         to the currently defined record length. The BLKSIZE given
I         when the data set was created is the default. However, you
I         can use any BLKSIZE if it conforms to the record length
I         definition.
N
D    BUFL(buffer-length) -
I      The length, in bytes, of each buffer in the buffer pool.
I      Substitute a decimal number for buffer-length. The number must
I      not exceed 32,760. If you omit this parameter and the system
I      acquires buffers automatically, the BLKSIZE and KEYLEN parameters
I      supply the information needed to establish buffer length.
N
D    BUFNO(number-of-buffers) -
I      The number of buffers that are assigned for data control blocks.
I      Substitute a decimal number for number-of-buffers. The number
I      must never exceed 255. You might be limited to a smaller number
I      of buffers depending on the available amount of virtual storage
I      in your address space. The following shows how to get a buffer
I      pool and the action required:
N
I      Method                          Action
I      ------------------------------- --------------------------------
I      BUILD macro instruction         You must use BUFNO.
I      GETPOOL macro instruction       The system uses the number that
I                                      you assign for GETPOOL.
I      Automatically with BPAM or BSAM You can use BUFNO if the
I                                      application program was designed
I                                      to exploit it with the GETBUF
I                                      macro.
I      Automatically with QSAM         You can omit BUFNO and accept
I                                      two buffers.
N
D    BUFOFF(block-prefix-length | L) -
I      Defines the buffer offset. The block-prefix-length must not
I      exceed 99. L specifies the block prefix field is 4 bytes long
I      and contains the block length.
N
N    BURST | NOBURST /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
N    CHARStablename-list /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
N    COPIES((number),group-value-list) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    DATACLAS(data-class-name) -
I      This is the 1-to-8 character name of the data class for either
I      SMS or non-SMS-managed data sets. If you do not assign DATACLAS
I      for a new data set and the storage administrator has provided
I      an automatic class selection (ACS) routine, the ACS routine can
I      select a data class for the data set. If you assign DATACLAS
I      for an existing data set, SMS ignores it. If SMS is not active,
I      the system checks the syntax and then ignores the DATACLAS
I      parameter.
N
D    DEN(0 | 1 | 2 | 3 | 4) -
I      Gives the magnetic tape density as follows:
I      0 200 bpi/7 track
I      1 556 bpi/7 track
I      2 800 bpi/7 and 9 track
I      3 1600 bpi/9 track
I      4 6250 bpi/9 track (IBM. 3420 Models 4, 6, and 8)
N
N    DEST(destination | destination.userid) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    DIAGNS(TRACE) -
I      The Open/Close/EOV trace option that gives a module-by-module
I      trace of the Open/Close/EOV work area and your DCB.
N
D    DIR(integer) -
I      Gives the number of 256 byte records for the directory of a new
I      partitioned data set. You must use this parameter to allocate a
I      new partitioned data set.
N
D    DSNTYPE(LIBRARY | PDS) -
I      specifies the type of data set to be allocated
N
I        LIBRARY specifies a partitioned data set extended (PDSE).
I        PDS     specifies a partitioned data set (PDS).
I        HFS     specifies a UNIX file system. IBM recommends not
I                using this type of data set. IBM recommends defining
I                a VSAM linear data set and defining a z/OS file system
I                (zFS) in it.
I        PIPE    specifies a first-in first-out (FIFO) special file,
I                which is also called a named pipe. If you specify PIPE,
I                you must also specify PATH and not DATASET or DSNAME.
I        LARGE   specifies a large format sequential data set. It can
I                have a size greater than 65535 tracks on a single
I                volume.
I        BASIC   specifies a basic format sequential data set. It is
I                limited to no more than 65535 tracks per volume,
I                which is about 3.6 GB.
I        EXTREQ  specifies that the data set must be extended format.
I                It can be sequential or VSAM. It can be striped,
I                compressed format or neither.
I        EXTPREF specifies that the data set should be allocated as
I                extended format, if possible. If not possible, allocate
I                the data set as basic format.
I        If you omit DSNTYPE, the type of data set is determined by
I        other data set attributes, the data class for the data set,
I        or an installation default.
N
I        For more information on PDSE, see z/OS DFSMS Using Data Sets.
N
D    DSORG(DA | DAU | PO | POU | PS | PSU) -
I      The data set organization as:
N
I        DA  Direct access
I        DAU Direct access unmovable
I        PO  Partitioned organization
I        POU Partitioned organization unmovable
I        PS  Physical sequential
I        PSU Physical sequential unmovable
N
I      When you allocate a new data set and do not use the DSORG
I      parameter, these occur:
N
I      -> If you assign a non-zero to the DIR parameter, DSORG defaults
I         to the partitioned organization (PO) option.
N
I      -> If you do not assign a value to the DIR parameter, DSORG
I         defaults to the physical sequential (PS) option.
N
I      -> The system does not store default DSORG information into the
I         data set until a program opens and writes to the data set.
N
I      With PDSEs, the PSU and POU options are incompatible and result
I      in an error if used with DSNTYPE(LIBRARY) while the data set is
I      open for output. If the data set is open for input or update,
I      PSU and POU are ignored.
N
I      To indicate the data set organization for VSAM data sets,
I      see RECORG.
N
D    EATTR(NO | OPT) -
I      A data set level attribute specifying whether a data set can
I      have extended attributes (format 8 and 9 DSCBs) and optionally
I      reside in EAS.
N
I        NO: No extended attributes. The data set can not have extended
I          attributes (format 8 and 9 DSCBs) and cannot reside in EAS.
I          This is the default behavior for non-VSAM data sets.
N
I        OPT: Extended attributes are optional. The data set can have
I          extended attributes (format 8 and 9 DSCBs) and can optionally
I          reside in EAS. This is the default behavior for VSAM data
I          sets.
N
D    EROPT(ACC | SKP | ABE) -
I      The option you want to run if an error occurs when the system
I      reads or writes a record. They are:
N
I        ACC: Accept the block of records in which the error was found.
I        SKP: Skip the block of records in which the error was found.
I        ABE: End the task abnormally.
N
D    EXPDT(year-day) | RETPD(no.-of-days) -
I      Expiration date or the retention period. The MGMTCLAS maximum
I      retention period, if given, limits the retention period in this
I      parameter. The system ignores these parameters for temporary
I      data sets.
N
I      EXPDT and RETPD are mutually exclusive.
N
I        EXPDT(year-day): Specifies the data set expiration date.
I          Specify the expiration date in the form yyyy/ddd, where yyyy
I          is a four-digit year (to a maximum of 2155) and ddd is the
I          three-digit day of the year from 001 through 365 (for
I          non-leap years) or 366 (for leap years).
N
I          The following four values are "never-expire" dates:
I          99365, 99366, 1999365, and 1999366. Specifying a
I          "never-expire" date means that the PURGE parameter will
I          always be required to delete the data set. For related
I          information, see the "EXPDT Parameter" section of
I          z/OS MVS JCL Reference, SA22-7597.
N
I          Notes:
N
I          1. Any dates with two-digit years (other than 99365 or 99366)
I             will be treated as pre-2000 dates. (See note 2.)
N
I          2. Specifying the current date or a prior date as the
I             expiration date will make the data set immediately
I             eligible for deletion.
N
I        RETPD(no.-of-days): Data set retention period in days. It can
I          be a one-to-five-digit decimal number.
N
N    FCB(image-id,ALIGN,VERIFY) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
N    FLASH(overlay-name,copies) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
N    FORMS(forms-name) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
N    HOLD | NOHOLD /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
N    INPUT | OUTPUT /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    KEEP | CATALOG -
M    DELETE | UNCATALOG /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
I      A command processor can modify the final disposition with these
I      parameters.
N
I      KEEP: This retains the data set by the system after step
I        termination.
N
I      CATALOG: This retains the data set in a catalog after step
I        termination.
N
D    KEYLEN(bytes) -
I      The KEYLEN and TRTCH parameters are mutually exclusive.
N
I      This is the length, in bytes, of each of the keys used to locate
I      blocks of records in the data set when the data set resides on a
I      direct access device.
N
I      If an existing data set has standard labels, you can omit this
I      parameter and let the system retrieve the key length from the
I      standard label. If a key length is not supplied by any source
I      before you enter, the system assumes an OPEN macro instruction
I      of zero (no keys). This parameter is mutually exclusive with
I      TRTCH.
N
I      When you want to define the key length or override the key
I      length defined in the data class (DATACLAS) of the data set,
I      use KEYLEN. The number of bytes is:
N
I      -> 1 to 255 for a record organization of key-sequenced
I         (RECORG(KS))
N
I      -> 0 to 255 for a data set organization of physical sequential
I         (PS) or partitioned (PO)
N
I      For PDSEs, you can use 0 or 8. Use 8 only when opening the PDSE
I      for input. Any other value results in an error.
N
D    KEYOFF(offset) -
I      This shows the key position (offset) of the first byte of the
I      key in each record. Use it to define key offset or override the
I      key offset defined in the data class of the data set. It is only
I      for a key-sequenced data set (RECORG=KS).
N
I      Use KEYOFF parameter to allocate both SMS-managed and
I      non-SMS-managed data sets. If SMS is not active, however, the
I      system checks syntax and then ignores the KEYOFF parameter.
N
D    LABEL(type) -
I      This selects the label processing, one of: SL, SUL, AL, AUL, NSL,
I      NL, LTM, or BLP, which correspond to the JCL label-types.
N
I      For VSAM data sets, the system always uses SL, whether you
I      define SL or SUL or neither. NSL, NL, and BLP do not apply to
I      VSAM data sets.
N
D    LIKE(model-dsname) -
I      The LIKE, REFDD, and USING operands are mutually exclusive.
I      Refer to z/OS TSO/E Command Reference for additional
I      information on the USING operand.
N
I      This names a model data set. The system uses
I      these attributes as the attributes of the new data set that is
I      being allocated. The model data set must be cataloged and must
I      reside on a direct access device. The volume must be mounted when
I      you enter the ALLOCATE command.
N
I      Note: TSO naming conventions apply when assigning model-dsname.
N
I      When the ALLOCATE command assigns attributes to a new data set,
I      these attributes are copied from the model data set if SMS is
I      active:
N
I        AVGREC Size of average record block (kilobyte, megabyte)
I        BLOCK, AVBLOCK, TRACKS, CYLINDERS Space unit
I        DIR    Directory space quantity
I        DSORG  Non-VSAM data set organization
I        KEYLEN Key length
I        KEYOFF Key offset
I        LRECL  Logical record length
I        RECFM  Record format
I        RECORG VSAM data set organization
I        SPACE  Primary and secondary space quantities.
N
I      The system copies these attributes only if SMS is not active:
I        BLKSIZE Block size
I        EXPDT Data set expiration date
I        OPTCD Optional services code (for ISAM data sets only)
I          Note to Reviewers: OPTCD to be deleted
I        VSEQ Volume sequence number. You can still use the LIKE
I          parameter even if you do not have an existing data set with
I          the exact attributes you want to assign to a new data set.
I          You can use ALLOCATE attributes to override any model data
I          set attributes you do not want assigned to the new data set.
N
I        When you use this:
N
I        -> LIKE must be used with the NEW parameter; it cannot be used
I           with OLD, SHR, or MOD.
N
I        -> Use LIKE with the DATASET parameter; it cannot be used with
I           FILE.
N
I        -> Only one dsname can be given in the DATASET parameter.
N
I        -> The system does not copy the block size from the model data
I           set when SMS is active. If you do not show a block size in
I           the ALLOCATE command, the system determines an optimal block
I           size to assign to the data set.
N
I        -> When SMS is active, attributes copied from the model data
I           set override attributes from the data class.
N
I        -> If you allocate the new data set with a member name
I           (indicating a partitioned data set), the system prompts
I           you for directory blocks unless that quantity is either
I           shown in the ALLOCATE command or defaulted from the LIKE
I           data set.
N
I        -> If the new data set name is indicated with a member name,
I           but the model data set is sequential and you have not given
I           the quantity for directory blocks, you are prompted for
I           directory blocks.
N
I        If you define the directory value as zero and the model
I        data set is a PDS, the system allocates the new data set as a
I        sequential data set.
N
D    LIMCT(search-number) -
I      This is the number of blocks or tracks that the system should
I      search for a block or available space. The number must not
I      exceed 32760.
N
D    LRECL(logical-record-length | (nnnnnK | X)) -
I      This is the length, in bytes, of the largest logical record in
I      the data set. You must define this parameter for data sets that
I      consist of either fixed-length or variable-length records.
N
I      Use the DATACLAS parameter in place of LRECL to assign the
I      logical record length. If SMS is active and you use LRECL, the
I      system determines the block size.
N
I      If the data set contains undefined-length records, omit LRECL.
N
I      The logical record length must be consistent with the
I      requirements of the RECFM parameter and must not exceed the block
I      size (BLKSIZE parameter), except for variable-length spanned
I      records. If you use:
N
I      -> RECFM(V) or RECFM(V B), then the logical record length is the
I         sum of the length of the actual data fields plus four bytes
I         for a record descriptor word.
N
I      -> RECFM(F) or RECFM(F B), then the logical record length is the
I         length of the actual data fields.
N
I      -> RECFM(U), omit the LRECL parameter.
N
I      LRECL(nnnnnK) allows users of ANSI extended logical records and
I      users of QSAM "locate mode" to assign a K multiplier to the LRECL
I      parameter. nnnnn can be a number within 1-16384. The K indicates
I      that the value is multiplied by 1024.
N
I      For variable-length spanned records (VS or VBS) processed by
I      QSAM (locate mode) or BSAM, use LRECL (X) when the logical
I      record exceeds 32,756 bytes.
N
I      For PDSEs, the meaning of LRECL depends upon the data set record
I      format:
N
I      -> Fixed Format Records. For PDSEs opened for output, the logical
I         record length (LRECL) defines the record size for the newly
I         created members. You cannot override the data set control
I         block (DSCB) (LRECL); an attempt to do so will result in an
I         error.
N
I      -> Variable Format Records. The LRECL is the maximum record
I         length for logical records that are contained in members of
I         the PDSE.
N
I      -> Undefined Format Records. The LRECL is the maximum record
I         length for records that are contained in members of the PDSEs.
N
D    MGMTCLAS(management-class-name) -
I      For SMS-managed data sets: This is the 1-to-8 character name of
I      the management class for a new data set. When possible, do not
I      use MGMTCLAS. Allow it to default through the ACS routines.
N
I      After the system allocates the data set, attributes in the
I      management class define:
N
I      -> The migration of the data set. This includes migration both
I         from primary storage to migration storage, and from one
I         migration level to another in a hierarchical migration scheme.
N
I      -> The backup of the data set. This includes frequency of backup,
I         number of versions, and retention criteria for backup
I         versions.
N
I      If SMS is not active, the system checks the syntax and ignores
I      the MGMTCLAS parameter.
N
D    MAXVOL(count) -
I      This is the maximum number (1-255) of volumes upon which a data
I      set can reside. This number corresponds to the count field on
I      the VOLUME parameter in JCL. Use this to override the volume
I      count attribute defined in the data class of the data set.
N
I      If VOLUME and PRIVATE parameters are not given, and MAXVOL
I      exceeds UCOUNT, the system removes no volumes when all the
I      mounted volumes have been used, causing abnormal termination of
I      your job. If PRIVATE is given, the system removes one of the
I      volumes and mounts another volume in its place to continue
I      processing.
N
I      MAXVOL overrides any volume count in the data class (DATACLAS)
I      of the data set.
N
I      Your user attribute data set (UADS) must contain the MOUNT
I      attribute. Use of this parameter implies PRIVATE.
N
N    MODIFY(module-name,trc) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    NEW -
N    OLD | SHR | MOD /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
I      NEW: This creates a data set. For new partitioned data sets, you
I        must use the DIR parameter. If you assign a data set name, the
I        system keeps and catalogs a NEW data set. If you do not assign
I        a data set name, the system deletes the data set at step
I        termination.
N
D    NCP(no.-of-channel-programs) -
I      This gives the maximum number of READ or WRITE macro instructions
I      for BSAM or BPAM that are allowed before the application program
I      issues a CHECK or WAIT macro instruction. The number must not
I      exceed 255. If you wish to use chained scheduling, you or your
I      program must assign an NCP value greater than 1. If you omit the
I      NCP parameter, the default depends on the application program.
I      If the program takes no action, the default value is 1. Your
I      program might be limited to a value smaller than 255 depending
I      on the available amount of virtual storage in your address space.
N
N    OUTDES(output-descriptor-name,...) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    POSITION(sequence-no.) -
I      This is the relative position (1-65535) of the data set on a
I      multiple data set tape. The sequence number corresponds to the
I      data set sequence number field of the label parameter in JCL.
N
D    PRIVATE -
I      This assigns the private-volume use attribute to a volume that
I      is neither reserved nor permanently in resident. It corresponds
I      to the PRIVATE keyword of the VOLUME parameter in JCL.
N
I      If you do not use VOLUME and PRIVATE parameters and MAXVOL
I      exceeds UCOUNT, the system removes no volumes when all the
I      mounted volumes have been used, causing abnormal termination of
I      your job. If you use PRIVATE, the system removes one of the
I      volumes and mounts another volume to continue processing.
N
D    PROTECT -
I      This RACF-protects the DASD data set or the first data set on a
I      tape volume.
N
I      -> For a new permanent DASD data set, the status must be NEW or
I         MOD, treated as NEW, and the disposition must be either KEEP,
I         CATALOG, or UNCATALOG. With SMS, SECMODEL overrides PROTECT.
N
I      -> For a tape volume, the tape must have an SL, SUL, AL, AUL,
I         or NSL label.
N
I      The file sequence number and volume sequence number must be one
I      (except for NSL). You must assign PRIVATE as the tape volume use
I      attribute.
N
I      The PROTECT parameter is not valid if a data set name is not
I      given, or if the FCB parameter or status other than NEW or MOD
I      is used.
N
D    RECFM(A,B,D,F,M,S,T,U,V) -
I      RECFM and RECORG are mutually exclusive.
N
I      This sets the format and characteristics of the records in the
I      data set. They must be completely described by one source only.
I      If they are not available from any source, the default is an
I      undefined-length record. See also the RECFM subparameter of the
I      DCB parameter in z/OS MVS JCL Reference for a detailed
I      discussion.
N
I      Use these with the RECFM parameter:
N
I      A To show the record contains ASCII printer control characters
N
I      B To indicate the records are blocked
N
I      D For variable length ASCII records
N
I      F For fixed length records.
N
I      M For records with machine code control characters.
N
I      S For fixed-length records, the system writes the records as
I        standard blocks (there must be no truncated blocks or unfilled
I        tracks except for the last block or track). For variable-length
I        records, a record can span more than one block. Exchange
I        buffering, BFTEK(E), must not be used.
N
I      T The records can be written onto overflow tracks, if required.
I        Exchange buffering or BFTEK(E) cannot be used.
N
I      U The records are of undefined length.
N
I      V Shows variable length records.
N
I      You must provide one or more values for this parameter.
N
I      For PDSEs, these statements apply:
N
I      -> RECFM can be partially modified from the value that is saved
I         in the DSCB when creating members.
N
I      -> In a PDSE that is created as fixed or fixed blocked, members
I         must always be created with fixed-length logical records.
I         However, the attribute of blocked might change between
I         member creates. The first record format assigned to the PDSE
I         is the default for member creates. The characteristic of
I         blocked might not change during an open.
N
I      -> Attempts to overwrite the record format characteristic of
I         F, U, or V with another value from that set causes a system
I         error.
N
I      -> RECFM(A) and RECFM(M) are compatible with PDSEs.
N
D    RECORG(ES | KS | LS | RR) -
I      RECORD and RECFM are mutually exclusive.
N
I      Determines the organization of the records in a new VSAM data
I      set. To override the record organization defined in the data
I      class (DATACLAS) of the data set, use RECORG.
N
I      You can assign:
N
I      ES For a VSAM entry-sequenced data set
N
I      KS For a VSAM key-sequenced data set
N
I      LS For a VSAM linear space data set. You cannot access linear
I         data sets with VSAM record level sharing (RLS).
N
I      RR For a VSAM relative record data set
N
I      If you do not use RECORG, SMS assumes a non-VSAM data set.
N
I      RECORG and RECFM are mutually exclusive. To define the data set
I      organization for a non-VSAM data set, see DSORG.
N
I      Exception: You can use the RECORG parameter to allocate both
I      SMS-managed and non-SMS-managed data sets. If SMS is not active,
I      however, the system checks the syntax and ignores the RECORG
I      parameter.
N
D    REFDD(file-name) -
I      The LIKE, REFDD, and USING operands are mutually exclusive.
I      Refer to z/OS TSO/E Command Reference for additional
I      information on the USING operand.
N
I      This is the file name of an existing data set whose attributes
I      are copied to a new data set. The system copies these attributes
I      to the new data set:
N
I      -> Data set organization:
I        -> Record organization (RECORG)
I        -> Record format (RECFM)
N
I      -> Record length (LRECL)
N
I      -> Key length (KEYLEN)
N
I      -> Key offset (KEYOFF)
N
I      -> Space allocation
I        -> AVGREC
I        -> SPACE
N
I      The system does not copy the retention period (RETPD) or
I      expiration date (EXPDT) to the new data set.
N
I      Exception: You can use the REFDD parameter to allocate both
I      SMS-managed and non-SMS-managed data sets. If SMS is not active,
I      however, the system checks the syntax and then ignores the REFDD
I      parameter.
N
D    RELEASE -
I      To delete unused space when the data set is closed.
N
I      If you use RELEASE for a new data set with the BLOCK or BLKSIZE
I      parameter, then you must also use the SPACE parameter.
N
D    REUSE -
I      Frees and reallocates the file name if it is currently in use.
N
I      You cannot use the REUSE parameter to reallocate a file from a
I      disposition of OLD to a disposition of SHR. However, you can
I      first free the file with OLD, then reallocate it with SHR.
N
D    ROUND -
I      Allocates space equal to one or more cylinders. Use this only
I      when you request space in units of blocks. This parameter
I      corresponds to the ROUND parameter in the SPACE parameter in JCL.
N
D    SECMODEL(profile-name,GENERIC) -
I      Names an existing RACF profile to copy to the discrete profile.
I      Use SECMODEL when you want a different RACF data set profile
I      from the default profile selected by RACF, or when there is no
I      default profile.
N
I      Use GENERIC to state the profile name as a generic data
I      set profile.
N
D    SPACE(quantity,increment) -
I      Allocates the amount of space for a new data set. If you omit
I      this parameter, the system uses the IBM-supplied default value
I      of SPACE(4,24) AVBLOCK (8192). However, your installation might
I      have changed the default. For more information about default
I      space, see z/OS MVS Programming: Authorized Assembler Services
I      Guide.
N
I      To have the system determine the amount of space, include the
I      AVGREC parameter in place of BLOCK, AVBLOCK, CYLINDERS, and
I      TRACKS. To supply your own space value, define one of the
I      following: BLOCK(value), BLKSIZE(value), AVBLOCK(value),
I      CYLINDERS, or TRACKS. The amount of space requested is
I      determined as follows:
N
I      -> BLOCK(value) or BLKSIZE(value): The BLOCK or BLKSIZE
I         parameter's value is multiplied by the SPACE parameter's
I         quantity.
N
I      -> AVBLOCK(value): The AVBLOCK parameter's value is multiplied
I         by the SPACE parameter's quantity.
N
I      -> CYLINDERS: The SPACE parameter's quantity is given in
I         cylinders.
N
I      -> TRACKS: The SPACE parameter's quantity is given in tracks.
N
I      Use SPACE for NEW and MOD data sets.
N
I      quantity: Allocates the initial number of units of space for a
I        data set. For a partitioned data set, a directory quantity is
I        not necessary.
N
I      increment: This is the number of units of space to be added to
I        the data set each time the previously allocated space has been
I        filled. You must provide the primary quantity along with the
I        increment value.
N
D    BLOCK(value) | AVBLOCK(value) | CYLINDERS | TRACKS -
I      BLOCK(value): Shows the average length (in bytes) of the records
I        written to the data set. The maximum block value used to
I        determine space to be allocated is 65,535. The block value is
I        the unit of space that is used by the SPACE parameter. A track
I        or a cylinder on one device can represent a different amount
I        of storage (number of bytes) from a track or a cylinder on
I        another device. Determine the unit of space value from the:
N
I        -> Default value of (10 50) AVBLOCK(1000) if no space
I           parameters (SPACE, AVBLOCK, BLOCK, CYLINDERS, or TRACKS)
I           are given.
N
I        -> The BLOCK parameter.
N
I        -> The model data set, if the LIKE parameter is used and BLOCK,
I           AVBLOCK, CYLINDERS, or TRACKS is not given.
N
I        -> The BLKSIZE parameter if BLOCK is not used.
N
I      AVBLOCK(value): This shows only the average length (in bytes) of
I        the records that are written to the data set.
N
I      CYLINDERS: Requests allocation in cylinders as the unit of space.
N
I      TRACKS: Requests allocation in tracks as the unit of space.
N
I      Exception: If you specify tracks for a VSAM data set, the space
I      allocated will be contiguous. See z/OS DFSMS Using Data Sets
I      "Optimizing Control Area Size," for more information.
N
D    STORCLAS(storage-class-name) -
I      For SMS-managed data sets: Gives the 1-to-8 character name of
I      the storage class. When possible, allow STORCLAS to default
I      through the ACS routines established by your storage
I      administrator. Attributes assigned through storage class and
I      the ACS routines replace storage attributes such as UNIT and
I      VOLUME. If SMS is not active, the system checks the syntax and
I      then ignores the STORCLAS parameter.
N
N    SYSOUT(class) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    TRTCH(C | E | ET | T) -
I      The TRTCH and KEYLEN parameters are mutually exclusive.
N
I      Selects the recording technique for 7-track tape as follows:
N
I      C  Data conversion with odd parity and no translation.
N
I      E  Even parity with no translation and no conversion.
N
I      ET Even parity and no conversion. BCD to EBCDIC translation when
I         reading, and EBCDIC to BCD translation when writing.
N
I      T  Odd parity and no conversion. BCD to EBCDIC translation when
I         reading, and EBCDIC to BCD translation when writing.
N
N    USING(attr-list-name) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
I      The LIKE, REFDD, and USING operands are mutually exclusive.
N
D    UCOUNT(count) | PARALLEL -
I      Requests a number of device allocations.
N
I        UCOUNT(count): This allocates the maximum number of devices,
I          where count is a value from 1-59.
N
I          If you do not use VOLUME and PRIVATE parameters and MAXVOL
I          exceeds UCOUNT, the system removes no volumes when the
I          mounted volumes have been used, causing abnormal termination
I          of your job. If you use PRIVATE, the system removes one of
I          the volumes and mounts another volume in its place to
I          continue processing.
N
I        PARALLEL: Mounts one device for each volume given on the
I          VOLUME parameter or in the catalog.
N
N    UCS(universal-character-set-name) /* Use with Caution */ -
I      See z/OS TSO/E Command Reference.
N
D    UNIT(type) -
I      Defines the unit type to which a file or data set is to be
I      allocated. You can list an installation-defined group name, a
I      generic device type, or a specific device address. If you do
I      not supply volume information (the system retrieves volume and
I      unit information from a catalog), the unit type that is coded
I      overrides the unit type from the catalog. This condition exists
I      only if the coded type and class are the same as the cataloged
I      type and class.
N
I      For VSAM data sets, use the AFF subparameter carefully. If the
I      cluster components and the data and its index reside on unlike
I      devices, the results of UNIT=AFF are unpredictable.
N
I      When you allocate a new SMS-managed data set, the system ignores
I      the UNIT parameter. The system determines the UNIT and VOLUME
I      from the storage class associated with the data set. Use UNIT
I      only if you want to allocate a non-SMS-managed data set to a
I      specific unit type.
N
I      If the storage administrator has set up a default unit under
I      SMS regardless of whether the data set is SMS-managed, you do
I      not have to use UNIT. If you do not, the system determines the
I      default UNIT for both SMS-managed and non-SMS-managed data sets.
N
D    VOLUME(serial-list) /* Abbreviation: VOL */ -
I      This is the serial number of an eligible direct access volume
I      on which a new data set is to reside or on which an old
I      data set is located. If you use VOLUME for an old data set, the
I      data set must be on the specified volume for allocation to take
I      place. If you do not include VOLUME, the system allocates new
I      data sets to any eligible direct access volume. The UNIT
I      information in your procedure entry in the user attribute data
I      set (UADS) determines eligibility. You can use up to 255 volume
I      serial numbers.
N
I      For VSAM data sets you must use this subparameter carefully.
I      See the section that discusses DD parameters to avoid when
I      processing VSAM data sets in z/OS MVS JCL User's Guide before
I      using the VOLUME subparameters REF, volume-sequence-number, or
I      volume-count.
N
I      When you allocate new SMS-managed data sets, you can let the
I      ACS routines select the volume for you. The ACS routines assign
I      your data set to a storage class containing attributes such as
I      VOLUME and UNIT. You can allocate your data set to a specific
I      volume only if your storage administrator has stated
I      GUARANTEED SPACE=YES in the storage class assigned to your
I      data set. The volume serial numbers you provide might then
I      override the volume serial numbers used by SMS. If space is not
I      available on the given volume, however, your request is not
I      successful.
N
D    VSEQ(vol-seq-no.) /* - */
I      This locates which volume (1-255) of a multivolume begins data
I      set processing. This parameter corresponds to the volume sequence
I      number on the VOLUME parameter in JCL. Use VSEQ only when the
I      data set is a cataloged data set.
N
N    WRITER(external-writer-name) /* Use with Caution */
I       See z/OS TSO/E Command Reference.
* End of WISH.
