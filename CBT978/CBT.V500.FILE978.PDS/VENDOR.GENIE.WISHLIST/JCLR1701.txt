SJCLR1701
KCOND
Tz/OS JCL Reference
T-IF...THEN/ELSE/ENDIF Statement Construct
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180512-1590154
*
@IBM Corporation
*
BSA22-7597-16 z/OS JCL Reference
*
NIF...THEN/ELSE/ENDIF Statement Construct
N========================================
MThis topic describes the IF/THEN, ELSE, and ENDIF statements,
Ncollectively called the IF/THEN/ELSE/ENDIF statement construct.
N
IA set of statements that make it easier to write when you want a step
Ito run. The COND=() parameter on the EXEC card uses inverse logic,
Iyou actually code when not to run the step. With IF...THEN you
Icode when to run the step.
N
D//label     IF ({step}.condition -op code) THEN
D//...
D//label   ELSE
D//...
D//label  ENDIF
N
NThe system evaluates relational-expressions that are enclosed
Nwithin parentheses prior to expressions found outside of parentheses.
NTherefore, you can control the way in which complex
Nrelational-expressions are evaluated.
N
N                                   Order of
NOperator Operation                 Evaluation
N-------- ------------------------- ----------
NNOT operator:
NNOT or ¬ NOT                       first
N
NComparison operators:
NGT or >  Greater than              second
NLT or <  Less than                 second
NNG or ¬> Not greater than          second
NNL or ¬< Not less than             second
NEQ or =  Equal to                  second
NNE or ¬= Not equal to              second
NGE or >= Greater than or equal to  second
NLE or <= Less than or equal to     second
N
NLogical operators:
NAND or & AND                       third
NOR or |  OR                        third
N
NRelational-Expression Keywords
NThe following keywords are the only keywords supported by IBM and
Nrecommended for use in relational-expressions. Any other keywords, even
Nif accepted by the system, are not intended or supported keywords.
N
NKeyword Use
NRC      indicates a return code
NABEND   indicates an abend condition occurred
N        =TRUE
N        =FALSE
N¬ABEND  indicates no abend condition occurred
NABENDCC indicates a system or user completion code
N        =SB37
N        =U0100
NRUN     indicates that the specified step started execution
N        =TRUE
N        =FALSE
N¬RUN    indicates that the specified step did not start execution
N
NExample A:
N
I//*
I//PROCS JCLLIB ORDER=(&SYSUID..JES.PROCLIB)
I//*
I//PROC001 PROC
I//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
I//* ###################################################################
I//* This proc executes two steps.
I//* ###################################################################
I//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I//PS01#02 EXEC PGM=IEFBR14
I//PS02#02 EXEC PGM=IEBGENER
I//SYSPRINT DD  SYSOUT=*
I//SYSIN    DD  DUMMY
I//SYSUT1   DD  DISP=SHR,DSN=KTOMIAK.JCL.CNTL(JCLR1701)
I//SYSUT2   DD  SYSOUT=*
I//PROC001 PEND
I//*
I//PROC002 PROC
I//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
I//* ###################################################################
I//* This proc executes PROC001.
I//* ###################################################################
I//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I//PIF1      IF (RC < 1) THEN                         <==== IF
I//PS01#01 EXEC PROC=PROC001
I//PIF1   ENDIF                                       <==== ENDIF
I//PROC002 PEND
I//*
I//PROC003 PROC
I//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
I//* ###################################################################
I//* This proc executes PROC002.
I//* ###################################################################
I//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I//LIF1      IF (RC = 0) THEN                         <==== IF
I//PS01#01 EXEC PROC=PROC002
I//LIF1   ENDIF                                       <==== ENDIF
I//PROC003 PEND
I//*
I//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
I//* -------------------------------------------------------------------
I//* The steps below execute programs and prcedures based on IF results.
I//* -------------------------------------------------------------------
I//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I//INC1 INCLUDE MEMBER=ST01#07
I//*
I//TIF1      IF (ST01#07.RC = 0) THEN             <==== IF
I//ST02#07 EXEC PGM=IEFBR14
I//ST03#07 EXEC PROC=PROC002
I//ST04#07 EXEC PROC=PROC003
I//TIF1    ELSE                                   <==== ELSE
I//ST05#07 EXEC PGM=IEFBR14
I//ST06#07 EXEC PROC=PROC003
I//*
I//TIF2      IF (ST02#07.RUN = TRUE) THEN           <==== IF
I//ST07#07 EXEC PROC=PROC003
I//ST08#07 EXEC PROC=PROC002
I//TIF2    ELSE                                     <==== ELSE
I//ST07#07 EXEC PROC=PROC001
I//TIF2   ENDIF                                     <==== ENDIF
I//TIF1   ENDIF                                   <==== ENDIF
I//*
I//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
I//* ===================================================================
I//* End of Job JCLR1701.
I//* ===================================================================
I//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I//*
I//* Execution results:
I//* ==================
I//* STEPNAME PROCSTEP    RC
I//* ST01#07              00
I//* ST02#07              00
I//* PS01#01  PS01#02     00
I//* PS01#01  PS02#02     00
I//* PS01#01  PS01#02     00
I//* PS01#01  PS02#02     00
I//* ST05#07           FLUSH
I//* PS01#01  PS01#02  FLUSH
I//* PS01#01  PS02#02  FLUSH
I//* PS01#01  PS01#02  FLUSH
I//* PS01#01  PS02#02  FLUSH
I//* PS01#01  PS01#02  FLUSH
I//* PS01#01  PS02#02  FLUSH
I//* ST07#07  PS01#02  FLUSH
I//* ST07#07  PS02#02  FLUSH
I//*
D//
* End of WISH.
