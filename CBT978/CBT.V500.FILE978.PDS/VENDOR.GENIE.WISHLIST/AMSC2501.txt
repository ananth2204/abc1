SAMSC2501
TDFSMS AMS
T-Chapter 25.
T-Syntax for IMPORT Parameters
EKenneth Tomiak <KenTomiak@KTomiak.org>
Z20180512-148953
*
@IBM Corporation
*
Bdgt2i2a1.pdf: SC26-7394-13: z/OS
BDFSMS Access Method Services for Catalogs
BVersion 1 Release 13
*
NAccess Method Services for Catalogs
N-----------------------------------
NChapter 25. IMPORT
N------------------
NSyntax for IMPORT Parameters
N----------------------------
D  IMPORT -
N
NRequired Parameters
N-------------------
D    INFILE(ddname) | /* Abbreviation: IFILE */ -
D    INDATASET(entryname) /* Abbreviation: IDS */ -
I      specifies the name of a DD statement or names the portable data
I      set that contains a copy of the cluster, alternate index, or
I      user catalog to be imported.
N
I      When importing into a nonexistent or an existing nonempty data
I      set or catalog, the names specified for management class and
I      storage class in the IMPORT command override the management class
I      and storage class names from the portable data set. The class
I      specifications and other attributes of the exported object are
I      used to determine the SMS class specifications.
N
I      INFILE(ddname) /* Abbreviation: IFILE */: specifies the name of
I        a DD statement that identifies the portable copy of the
I        cluster, alternate index, or user catalog to be imported.
N
I        If a nonlabeled tape or a direct access data set created by
I        DOS/VS access method services contains the copy, the following
I        DCB parameters must be specified on the referenced DD
I        statement:
N
I        -> BLKSIZE. If you specified BLKSIZE when the cluster or
I           alternate index was exported, you must specify the same
I           block size value for IMPORT.
N
I           If you did not specify a block size for EXPORT, a default
I           value of 2048 was used. Consequently, if you do not specify
I           BLKSIZE for IMPORT, IMPORT sets the block size to 2048.
N
I        -> LRECL. LRECL is based on the maximum record size of the
I           exported VSAM data set. Maximum record size is determined by
I           the value given by the maximum subparameter of the
I           RECORDSIZE parameter of the DEFINE CLUSTER or
I           DEFINE ALTERNATEINDEX command when the data set was defined.
N
I        -> RECFM. Must be VBS.
N
I      INDATASET(entryname) /* Abbreviation: IDS */: specifies the name
I        of the portable data set that contains a copy of the cluster,
I        alternate index, or user catalog to be imported.
N
I        If INDATASET is specified, the portable data set is dynamically
I        allocated.
N
I        The entryname must be cataloged in a catalog that is accessible
I        by the system into which the entry is to be imported.
N
D    OUTFILE(ddname) | /* Abbreviation: OFILE */ -
D    OUTDATASET(outdsn) /* Abbreviation: ODS */ -
I      specifies the name of a DD statement or the name of a cluster,
I      alternate index, or user catalog to be imported.
N
I      When you use OUTFILE or OUTDATASET to describe the data set, one
I      of the following conditions must be true:
N
I      -> The data set's entry is in the master catalog.
N
I      -> The qualifiers in the data set's qualified name are the
I         catalog's name or alias.
N
I      -> You are importing a non-SMS-managed catalog:
N
I         -> When importing a cluster that was permanently exported,
I            the OUTFILE parameter should be used.
N
I         -> If you are importing to a volume other than the original
I            volume, the OBJECTS(VOLUMES) parameter must also be
I            specified.
N
I      OUTFILE(ddname) /* Abbreviation: OFILE */: specifies the name of
I        a DD statement that identifies the data set name and volumes of
I        the cluster, alternate index, or user catalog that is to be
I        imported.
N
I        If the object was permanently exported or you are importing to
I        a volume other than the original volume, the DD statement
I        specifies the name of the cluster or alternate index as DSNAME,
I        the volume serial number, the device type, DISP=OLD, and
I        AMP='AMORG'.
N
I        If the object has its data and index components on different
I        device types, specify OUTDATASET instead of OUTFILE.
N
I        If the NEWNAME parameter is specified for the cluster or
I        alternate index entry, the data set name on the DD statement
I        must be the same as the new name. Failure to do so will result
I        in the deletion of the original cluster.
N
I      OUTDATASET(outdsn) /* Abbreviation: ODS */: specifies the name of
I        the cluster, alternate index, or user catalog that is to be
I        imported. If you select OUTDATASET, the VSAM data set you
I        identify is dynamically allocated.
N
I        You can use concatenated DD statements if the object was
I        permanently exported and its data and index components are on
I        different device types.
N
I        The first DD statement specifies the name of the cluster or
I        alternate index as the DSNAME, the volume serial numbers and
I       device type of the data component, DISP=OLD. The second DD
I        statement specifies the name of the index component as the
I        DSNAME, the volume serial numbers and device type of the index
I        component, DISP=OLD.
N
I        If NEWNAME is specified for the cluster or alternate index
I        entry, entryname must be the same as the new name. Also, this
I        should be the same name as declared on the NEWNAME parameter.
I        Failure to do so will result in the deletion of the original
I        cluster.
N
NOptional Parameters
N-------------------
D    ALIAS | /* Abbreviation: ALS */ -
D    NOALIAS /* Abbreviation: NALS */ -
I      specifies whether any aliases are defined for the imported
I      catalog. ALIAS causes the IMPORT command to retrieve the aliases
I      that were exported and define them for the catalog being
I      imported. The default, NOALIAS, will result in no aliases being
I      imported.
N
I      If ALIAS is specified, and the catalog
N
I      -> exists but is empty, any aliases that exist in the system for
I         that catalog are not deleted. Any aliases that exist on the
I         portable data set are defined for the imported catalog if the
I         aliases do not exist on the system. Any duplicate aliases will
I         produce a duplicate alias message. IMPORT will print the list
I         of aliases that were defined for the imported catalog.
N
I      -> exists and is not empty, the catalog is deleted and redefined
I         from the portable data set. Any aliases that exist in the
I         system are not deleted. Aliases on the portable data set are
I         not defined but a list of the alias names from the portable
I         data set are printed.
N
I      -> does not exist, the catalog is defined along with its aliases
I         from the portable data set. The catalog will then be loaded
I         from the portable data set.
N
I      Hint: Before restoring the catalog, you might want to run
I      LISTCAT to determine the status of the catalog and its aliases.
N
D    ERASE | /* Abbreviation: ERAS */ -
D    NOERASE /* Abbreviation: NERAS */ -
I      specifies whether the component of the cluster or alternate index
I      is to be erased (that is, overwritten with binary zeros). Use
I      this parameter when you are importing the object into the system
I      from which it was previously exported with the TEMPORARY option.
I      This parameter overrides whatever was specified when the object
I      was defined or last altered.
N
I      ERASE /* Abbreviation: ERAS */: overwrites the component with
I        binary zeros when the cluster or alternate index is deleted.
I        If ERASE is specified, the volume that contains the data
I        component must be mounted.
N
I        If the cluster is protected by a RACF generic or discrete
I        profile and the cluster is cataloged in a catalog, use RACF
I        commands to specify an ERASE attribute as part of this profile
I        so that the component is automatically erased upon deletion.
N
I      NOERASE /* Abbreviation: NERAS */: specifies that the component
I        is not to be overwritten with binary zeros when the cluster or
I        alternate index is deleted.
N
I        NOERASE resets only the indicator in the catalog entry that was
I        created from a prior DEFINE or ALTER command. If the cluster is
I        protected by a RACF generic or discrete profile that specifies
I        the ERASE attribute and if the cluster is cataloged in a
I        catalog, it is erased upon deletion. Use RACF commands to
I        alter the ERASE attribute in a profile.
N
D    INTOEMPTY /* Abbreviation: IEMPTY */ -
I      specifies that you are importing from the portable data set into
I      an empty data set. If this parameter is not specified, an attempt
I      to import into an empty data set is unsuccessful. If you import
I      into an empty SMS-managed data set or catalog, the SMS class
I      specifications in effect are not changed.
N
I      MANAGEMENTCLASS and STORAGECLASS from the portable data set will
I      not be used, but they will be checked to see if they do exist on
I      the current system. If they do not exist on the current system,
I      you must use the OBJECT parameter to override the values.
N
I      The RACF profiles associated with the empty non-SMS-managed data
I      set are retained.
N
I      You can use INTOEMPTY to import a previously SMS-managed data set
I      into a predefined empty non-SMS-managed data set.
N
I      When importing into an empty data set, the SAVRAC|NOSAVRAC
I      parameter applies only to the paths imported and successfully
I      defined over the empty data set. If the define of an exported
I      path is unsuccessful because a catalog entry with the same name
I      already exists, the path on the portable data set is ignored.
N
D    LOCK | -
D    UNLOCK -
I      controls the setting of the catalog lock attribute, and therefore
I        checks access to a catalog. LOCK or UNLOCK can be specified
I        only when entryname identifies a catalog. If the LOCK|UNLOCK
I        parameter is not specified, the catalog being imported will be
I        unlocked. Before you lock a catalog, review the information on
I        locking catalogs in z/OS DFSMS Managing Catalogs. Locking a
I        catalog makes it inaccessible to all users without read
I        authority to RACF FACILITY class profile IGG.CATLOCK (including
I        users sharing the catalog on other systems).
N
I      LOCK: specifies that the catalog being imported is to be locked.
I        Nonexisting catalogs are defined as locked. Existing unlocked
I        catalogs are locked.
N
I        Locking the catalog restricts catalog access to authorized
I        personnel. Specification of this parameter requires read
I        authority to the profile name, IGG.CATLOCK, with class type
I        FACILITY. Catalogs are usually locked only during catalog
I        recovery operations.
N
I      UNLOCK: specifies that the catalog being imported is to be
I        unlocked. Nonexisting catalogs are defined as unlocked.
I        Existing locked catalogs are unlocked. If LOCK|UNLOCK is not
I        specified, the catalog is unlocked.
N
D    OBJECTS( /* Abbreviation: OBJ */ -
D      (entryname
D        FILE(ddname) -
D        MANAGEMENTCLASS(class) /* Abbreviation: MGMTCLAS */ -
D        NEWNAME(newname) /* Abbreviation: NEWNM */ -
D        STORAGECLASS(class) /* Abbreviation: STORCLAS */ -
D        VOLUMES(volser ...) /* Abbreviation: VOL */ -
D      ) -
M      (...) -
D    ) -
I      specifies the new or changed attributes for the cluster,
I      alternate index, any associated paths, or user catalog to be
I      imported. Access method services matches each entryname you
I      specify against the name of each object on the portable data set.
I      When a match is found, the information specified by OBJECTS
I      overrides the information on the portable data set.
N
I      If you specify NEWNAME when importing a catalog, an error message
I      is issued and processing ends.
N
I      entryname: specifies the name of the data component, index
I        component, cluster, alternate index, path, or user catalog for
I        which attributes are being specified. The entryname must
I        appear on the portable data set; otherwise, the parameter list
I        is ignored.
N
I      FILE(ddname): specifies the name of a DD statement that
I        identifies the volumes allocated to the data and index
I        components of a key-sequenced cluster, an alternate index, or
I        user catalog. This parameter is used when the data and index
I        components reside on different device types. FILE can be coded
I        twice within the OBJECTS parameter: once in the parameter set
I        for the index component and once in a second parameter set for
I        the data component. If you do not specify FILE, the required
I        volumes are dynamically allocated.
N
I        The volumes must be mounted as permanently resident and
I        reserved.
N
I      MANAGEMENTCLASS(class) /* Abbreviation: MGMTCLAS */: specifies a
I        1-to-8 character management class name to be associated with
I        the data set or catalog being imported. It must be associated
I        with the entry name of the CLUSTER or the alternate index.
N
I      NEWNAME(newname) /* Abbreviation: NEWNM */: specifies the new
I        name of an imported cluster or alternate index or its
I        components, or an associated path. If you use NEWNAME, only
I        the name specified as entryname is changed.
N
I        Restriction: The NEWNAME parameter is not valid when importing
I        a catalog.
N
I        If you are specifying a new name for a cluster or alternate
I        index that was exported with the TEMPORARY option and it is
I        being imported back into the original system, you must also
I        rename each of its components. If you are specifying NEWNAME
I        for an SMS-managed cluster or alternate index, you must also
I        rename each of its components, so that each component orients
I        to the same user catalog.
N
D      STORAGECLASS(class) /* Abbreviation: STORCLAS */: specifies a
I        1-to-8 character storage class name to be associated with the
I        data set or catalog being imported. It must be associated with
I        the entry name of the CLUSTER or the alternate index.
N
I      VOLUMES(volser ...) /( Abbreviation: VOL */: specifies either
I        the volumes on which the cluster, alternate index, or user
I        catalog is to reside, or the volume on which the user catalog
I        resides. If VOLUMES is not coded, the original volume is the
I        receiving volume.
N
I        SMS might not use candidate volumes for which you request
I        specific volsers. In some cases, a user-specified volser for
I        an SMS-managed data set can result in an error. To avoid
I        candidate volume problems with SMS, you can request that SMS
I        choose the specific volser used for a candidate volume. To do
I        this, you can code an * for each volser that you request. If,
I        however, you request both specified and unspecified volsers in
I        the same command, you must enter the specified volsers first
I        in the command syntax. The default is one volume. For
I        SMS-managed data sets, you can specify up to 59 volume serial
I        numbers.
N
I        Catalogs can only be on one volume, so only one volume should
I        be specified when importing a user catalog.
N
I        If you use VOLUMES, you can specify the cluster or alternate
I        index name, the data component name or the index component name
I        as entryname with the following results:
N
I        -> If VOLUMES is specified with the cluster or alternate index
I           name, the specified volume list is defined for the data
I           component. For a key-sequenced cluster or alternate index,
I           the specified volume list is also defined for the index
I           component.
N
I        -> If VOLUMES is specified with the data component name, the
I           specified volume list is defined for the data component.
I           Any specification of VOLUMES with the cluster or alternate
I           index name is overridden.
N
I        -> For a key-sequenced cluster or alternate index, if VOLUMES
I           is specified with the index component name, the specified
I           volume list is defined for the index component. Any
I           specification of VOLUMES with the cluster or alternate
I           index name is overridden.
N
I        If a guaranteed space storage class is assigned to the data
I        sets (cluster) and volume serial numbers are specified, space
I        is allocated on all specified volumes if the following
I        conditions are met:
N
I        -> All volumes specified are in the same storage group.
N
I        -> The storage group to which these volumes belong is in the
I           list of storage groups selected by the ACS routines for this
I           allocation.
N
I        For clusters or alternate indexes, if multiple volumes are
I        specified, they must be of the same device type. By repeating
I        the OBJECTS parameter set for each component and including
I        VOLUMES in each parameter set, you can have the data and index
I        components on different volumes. Although the index and data
I        components can reside on different device types, each volume
I        of a multivolume component must be of the same type.
N
I        If the receiving volume is different from that which originally
I        contained the cluster or alternate index, the job might end
I        because of allocation problems. Each space allocation quantity
I        is recorded in a catalog entry as an amount of cylinders or
I        tracks even if RECORDS was specified in the DEFINE command.
N
I        When a cluster or alternate index is imported, the number of
I        cylinders or tracks in the catalog entry is not modified, even
I        though the object might be imported to reside on a device type
I        other than that it was exported from. If an object is exported
I        from a smaller DASD and imported to a larger DASD, more space
I        is allocated than the object needs. Conversely, if an attempt
I        is made to import an object that previously resided on a larger
I        DASD to a smaller DASD, it might be unsuccessful.
N
I        You can avoid space allocation problems by defining an empty
I        cluster or alternate index and identifying it as the target for
I        the object being imported as described below:
N
I        -> Use the DEFINE command to define a new entry for the cluster
I           or alternate index in the catalog to which it is to be
I           moved. If space was allocated in RECORDS, you can specify
I           the same quantity; if it was allocated in TRACKS or
I           CYLINDERS, you must adjust the quantity for the new device
I           type. If an entry already exists in the catalog for the
I           object, you must delete that entry or use a different name
I           in the DEFINE command.
N
I        -> Use the IMPORT command to load the portable data set into
I           the newly defined cluster or alternate index. When IMPORT
I           encounters an empty target data set, the exported catalog
I           information is bypassed and only the data records are
I           processed.
N
D    PURGE | /* Abbreviation: PRG */ -
D    NOPURGE /* Abbreviation: NPRG */
I      specifies whether the original cluster, alternate index, or
I      catalog is to be deleted and replaced, regardless of the
I      retention time specified in the TO or FOR parameter. Use this
I      parameter when you are importing the object into the original
I      system from which it was exported with the TEMPORARY option.
N
I      PURGE /* Abbreviation: PRG */: specifies that the object is to
I        be deleted even if the retention period has not expired.
N
I      NOPURGE /* Abbreviation: NPRG */: specifies that the object is
I        not to be deleted unless the retention period has expired.
N
D    SAVRAC | /* - */
D    NOSAVRAC /* - */
I      specifies, for a RACF-protected object, whether existing profiles
I      are to be used or whether new profiles are to be created. This
I      option applies only to discrete profiles. Generic profiles are
I      not affected.
N
I      Exception: The SAVRAC|NOSAVRAC parameters are ignored if the
I      INTOEMPTY parameter has been specified and the target data set
I      exists and is empty.
N
I      SAVRAC: specifies that RACF data set profiles that already exist
I        for objects being imported from the portable data set are to
I        be used. Typically, you would specify this option when
I        replacing a data set with a portable copy made with an
I        EXPORT TEMPORARY operation. SAVRAC causes the existing profiles
I        to be saved and used, rather than letting the system delete old
I        profiles and create new, default profiles.
N
I        The profiles will actually be redefined by extracting
I        information from existing profiles and adding caller
I        attributes. You should ensure these added attributes are
I        acceptable.
N
I        The ownership creation group and access list are altered by
I        the caller of the SAVRAC option.
N
I        Requirement: Ensure that valid profiles do exist for clusters
I        being imported when SAVRAC is specified. If this is not done,
I        an invalid and improper profile might be "saved" and used
I        inappropriately.
N
I      NOSAVRAC: specifies that new RACF data set profiles are to be
I        created. This is usually the situation when importing a
I        permanently exported cluster.
N
I        If the automatic data set protection option has been specified
I        for you or if the exported cluster had a RACF indication in the
I        catalog when it was exported, a profile is defined for the
I        imported clusters.
N
I        If you import into a catalog containing a component with a
I        duplicate name that is marked as having been temporarily
I        exported, it, and any associated profiles, is deleted before
I        the portable data set is imported.
N
M    CATALOG(catname) /* Abbreviation: CAT */
I      specifies the name of the catalog in which the imported object
I      is to be cataloged. This parameter is ignored if the imported
I      object is a catalog data set.
N
I      catname: is the name of the catalog or an ALIAS of the catalog
I        into which to define the entry being imported.
* End of WISH.
