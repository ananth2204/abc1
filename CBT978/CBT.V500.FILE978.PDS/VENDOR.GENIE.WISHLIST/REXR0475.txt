SREXR0475
Tz/OS TSO/E REXX Reference
T-Chapter 4.
T-Built-in functions
T-OUTTRAP
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180517-175859
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NOUTTRAP
N-------
NOUTTRAP returns the name of the variable in which trapped output is
Nstored, or if trapping is not in effect, OUTTRAP returns the word off.
N
MIf you plan to write your own command processors for use in REXX execs,
Mand you plan to use the OUTTRAP external function to trap command
Moutput, note the OUTTRAP function does not trap command output that
Mis sent to the terminal by:
N
M-> TPUT
M-> WTO macro
M-> messages issued by TSO/E REXX (that is, messages beginning with IRX)
M-> messages issued by TRACE output
N
N
NSyntax:
D  OUTTRAP(off | varname,max ,concat | noconcat, skipamt)
I    off     specify the word OFF to turn trapping off.
N
I    varname the stem of the compound variables or the variable prefix
I            assigned to receive the command output. Compound variables
I            contain a period and allow for indexing, but lists of
I            variables with the same prefix cannot be accessed by an
I            index in a loop.
N
I      Note: Do not use 'OFF' as a variable name.
N
I    max     the maximum number of lines to trap. You can specify a
I            number, an asterisk in quotation marks ("*"), or a blank.
I            If you specify "*" or a blank, all the output is trapped.
I            The default is 999,999,999. If the maximum number of lines
I            are trapped, subsequent lines are not stored in variables.
N
I    concat  indicates how output should be trapped. For concat,
I            specify one of the following:
I            -> CONCAT   indicates that output from commands be trapped
I                        in consecutive order until the maximum number
I                        of lines is reached. For example, if the first
I                        command has three lines of output, they are
I                        stored in variables ending in 1, 2, and 3. If
I                        the second command has two lines of output,
I                        they are stored in variables ending in 4 and 5.
I                        The default order for trapping is CONCAT.
N
I            -> NOCONCAT indicates that output from each command be
I                        trapped starting at the variable ending in 1.
I                        For example, if the first command has three
I                        lines of output, they are stored in variables
I                        ending in 1, 2, and 3. If another command has
I                        two lines of output, they replace the first
I                        command's output in variables 1 and 2.
N
I    skipamt specifies the number of lines to be skipped before trapping
I            begins. If skipamt is not specified, the default is 0. The
I            highest skip amount allowed is 999,999,999.
N
N
NExample
N-------
I  max_amount = 2500                   /* Default, max is 999,999,999 */
I  append_value = "CONCAT"                   /* Default, try NOCONCAT */
I  skip_amount = 2                     /* Default, max is 999,999,999 */
I  outtrap_value = OutTrap("STEM.")
I  /*
I  outtrap_value = OutTrap("STEM.",max_amount,append_value)
I  outtrap_value = OutTrap("STEM.",max_amount,append_value,skip_amount)
I  */
I  Say Userid()
I  Address TSO,
I    "LISTCAT LEVEL('"Userid()"') ALL"
I  listcat_rc = RC
I  outtrap_value = OutTrap("OFF")
I
I  Say "stemVARIABLES"
I  Say "LISTCAT RC("listcat_rc")"
I  Say "stem0("STEM.0")"
I  Say "stemMAX("STEM.MAX")"
I  Say "stemCON("STEM.CON")"
I  Say "stemSKIPPED("STEM.SKIPPED")"
I  Say "stemTRAPPED("STEM.TRAPPED")"
I  Say "stemSKIPAMT("STEM.SKIPAMT")"
I  Say "stem#:"
I  Do loop_ctr = 1 To STEM.0
I    Say STEM.loop_ctr
I  End
* End of WISH.
