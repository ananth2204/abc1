{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "KTOMIAK", "INMTNODE": "ANYNODE", "INMTUID": "KTOMIAK", "INMFTIME": "20180523170142000000", "INMNUMF": 2}, "INMR02": {"1": {"INMUTILN": "INMCOPY", "INMSIZE": 646646, "INMDSORG": "PS", "INMLRECL": 251, "INMBLKSZ": 3120, "INMRECFM": "VB", "numfile": 1}, "2": {"INMUTILN": "IEBCOPY", "INMSIZE": 940576, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 81, "INMBLKSZ": 27945, "INMRECFM": "FB", "INMDIR": 27, "INMDSNAM": "VENDOR.GENIE.WISHLIST", "INMMEMBR": "VENDOR.GENIE.WISHLIST", "numfile": 2}, "3": {"INMUTILN": "INMCOPY", "INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 2}}, "INMR03": {"1": {"INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}, "2": {"INMSIZE": 940576, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "message": {"file": "b'@\\x7f\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5@\\xe3\\x96\\x94\\x89\\x81\\x92\\x7fL\\xc3\\xc2\\xe3m\\xd2\\x85\\x95|\\xd2\\xe3\\x96\\x94\\x89\\x81\\x92K\\x82\\x89\\xa9n\\xe4K\\xe2K\\xc1K@\\xc3\\xc3z@\\xc1\\xd5\\xe8\\xd5\\xd6\\xc4\\xc5@a\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\\xd2K@\\xe3\\x96\\x94\\x89\\x81\\x92@@@@@@@@@@@@@@@@@@@@@@\\xe2\\xe3\\xc1\\xd5\\xc4\\xc1\\xd9\\xc4@\\xc7\\xd3\\xd6\\xc2\\xc1\\xd3@\\xc4\\xc9\\xe2\\xc3\\xd3\\xc1\\xc9\\xd4\\xc5\\xd9``````````````````````````\\xe3\\x88\\x85@\\x81\\xa4\\xa3\\x88\\x96\\x99@\\x85\\xa7\\x97\\x93\\x89\\x83\\x89\\xa3\\x93\\xa8@\\x84\\x89\\xa2\\x81\\xa5\\x96\\xa6\\xa2@\\x81\\x95\\xa8@\\x83\\x93\\x81\\x89\\x94@\\xa6\\x88\\x81\\xa3\\xa2\\x96\\x85\\xa5\\x85\\x99@\\x81\\x82\\x96\\xa4\\xa3@\\xa3\\x88\\x85\\x83\\x96\\x99\\x99\\x85\\x83\\xa3\\x95\\x85\\xa2\\xa2@\\x96\\x99@\\x86\\xa4\\x95\\x83\\xa3\\x89\\x96\\x95\\x81\\x93\\x89\\xa3\\xa8@\\x96\\x86@\\xa3\\x88\\x89\\xa2@\\x97\\x99\\x96\\x87\\x99\\x81\\x94k@\\x81\\x95\\x84@\\x84\\x89\\xa2\\x83\\x93\\x81\\x89\\x94\\xa2@\\x93\\x89\\x81\\x82\\x89\\x93\\x89\\xa3\\xa8\\x86\\x96\\x99@\\x81\\x95\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x81\\x95\\x84@\\x85\\xa5\\x85\\x99\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x82\\x81\\x84@\\xa3\\x88\\x81\\xa3@\\x94\\x89\\x87\\x88\\xa3@\\x88\\x81\\x97\\x97\\x85\\x95@\\x89\\x95@\\x83\\x96\\x95\\x95\\x85\\x83\\xa3\\x89\\x96\\x95@\\xa6\\x89\\xa3\\x88k\\x82\\x85\\x86\\x96\\x99\\x85k@\\x84\\xa4\\x99\\x89\\x95\\x87k@\\x96\\x99@\\x81\\x86\\xa3\\x85\\x99@\\xa4\\xa2\\x89\\x95\\x87@\\x89\\xa3K@\\xc9@\\x88\\x81\\xa5\\x85@\\xa3\\x99\\x89\\x85\\x84@\\xa3\\x96@\\x94\\x81\\x92\\x85@\\x89\\xa3@\\xa6\\x96\\x99\\x92@\\x99\\x89\\x87\\x88\\xa3k\\x81\\x95\\x84@\\xc9@\\x81\\x94@\\x97\\x85\\x99\\xa2\\x96\\x95\\x81\\x93\\x93\\xa8@\\x97\\x99\\x85\\xa3\\xa3\\xa8@\\x83\\x96\\x95\\x86\\x89\\x84\\x85\\x95\\xa3@\\xa3\\x88\\x81\\xa3@\\x89\\xa3@\\x84\\x96\\x85\\xa2k@\\x82\\xa4\\xa3@\\x85\\xa5\\x85\\x99\\xa8\\x82\\x96\\x84\\xa8@\\x94\\x81\\x92\\x85\\xa2\\x94\\x89\\xa2\\xa3\\x81\\x92\\x85\\xa2k@\\xa2\\x96@\\x89\\x86@\\xa8\\x96\\xa4@\\xa4\\xa2\\x85@\\x89\\xa3k@\\xa8\\x96\\xa4@\\x84\\x96@\\xa2\\x96@\\x81\\xa3@\\xa8\\x96\\xa4\\x99@\\x96\\xa6\\x95@\\x99\\x89\\xa2\\x92K@\\xe2\\x89\\x95\\x83\\x85\\x99\\x85\\x93\\xa8@\\xa8\\x96\\xa4\\x99\\xa2k\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5K@\\xe3\\x96\\x94\\x89\\x81\\x92@'", "lrecl": 80, "text": " \"Kenneth E Tomiak\"<CBT_Ken@KTomiak.biz>U.S.A. CC: ANYNODE /KTOMIAK   K. Tomiak\n                     STANDARD GLOBAL DISCLAIMER--------------------------The aut\nhor explicitly disavows any claim whatsoever about thecorrectness or functionali\nty of this program, and disclaims liabilityfor anything and everything bad that\nmight happen in connection with,before, during, or after using it. I have tried\nto make it work right,and I am personally pretty confident that it does, but eve\nrybody makesmistakes, so if you use it, you do so at your own risk. Sincerely yo\nurs,Kenneth E. Tomiak\n"}, "file": {"VENDOR.GENIE.WISHLIST": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27945, "DS1LRECL": 81, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12304, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3000, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "180143", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x002'", "DS1LSTAR": "b'\\x00\\xdf\\x02'", "DS1TRBAL": "b'\\xa4\\x06'"}, "COPYR2": {"deb": "b'\\x05\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x80\\x00\\x04z\\xcb\\xc8'", "extents": ["b'\\x05\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x80\\x00\\x04z\\xcb\\xc8'", "b'X}Ch\\x00\\x00\\x0b\\xa8\\x00\\x05\\x0b\\xb7\\x00\\x0e\\x00\\xeb'", "b'X}Ch\\x00\\x00\\x08M\\x00\\x03\\x08N\\x00\\x02\\x00\\x0f'", "b'X}Ch\\x00\\x00\\x06W\\x00\\r\\x06[\\x00\\x02\\x002'", "b'X}Ch\\x00\\x00\\x07\\x9d\\x00\\x00\\x07\\xa0\\x00\\x04\\x002'", "b'X}Ch\\x00\\x00\\x07\\xa0\\x00\\x05\\x07\\xa3\\x00\\t\\x002'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"TSAD": {"ttr": 45579, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17Y\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:59:55", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD\nTz/OS MVS Diagnosis -Tools and Service Aids\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNThis information covers the tools and service aids that IBM provides\nNfor use in diagnosing MVS problems. This edition supports\nNz/OS (5694-A01).\nN\nNThe first chapter, Chapter 1, \"Selecting tools and service aids\",\nNcontains a guide on how to select the appropriate tool or service aid\nNfor your purposes. It also provides an overview of all the tools and\nNservice aids available.\nN\nNEach subsequent chapter covers one of the tools or service aids. While\nNchapters vary, the following topics are generally covered for each tool\nNor service aid:\nN\nN-> Customizing and planning information\nN\nN-> Starting and stopping the tool or service aid\nN\nN-> Receiving, formatting, and reading the output from the tool or\nN   service aid.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD02": {"ttr": 45581, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x17Y\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T17:59:55", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD02\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 2: SVC dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: SVC dump\nN-------------------\nNAn SVC dump provides a representation of the virtual storage for the\nNsystem when an error occurs. Typically, a system component requests\nNthe dump from a recovery routine when an unexpected error occurs.\nNHowever, an authorized program or the operator can also request an\nNSVC dump when diagnostic dump data is needed to solve a problem.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0201": {"ttr": 45583, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00~\\x00~\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:07", "lines": 126, "newlines": 126, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0201\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 2.\nT-Planning data set management for SVC dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180107\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: SVC dump\nN-------------------\nNPlanning data set management for SVC dumps\nN------------------------------------------\nN\nNSetting up allocation authority\nN-------------------------------\nNTo allocate dump data sets automatically, the DUMPSRV address space\nNmust have authority to allocate new data sets. Do the following:\nN1. Associate the DUMPSRV address space with a user ID. Use the RACF.\nN   STARTED general resource class or the RACF Started Procedures Table,\nN   ICHRIN03, to associate DUMPSRV with a user id.\nN\nN2. Authorize DUMPSRV's user ID to create new dump data sets using the\nN   naming convention in the following topic. With the high-level\nN   qualifier of SYS1, the data sets are considered group data sets.\nN   You can assign CREATE group authority to the DUMPSRV user ID within\nN   that group.\nN\nNConfiguration\nN-------------\nNTo verify dump status issue the DISPLAY DUMP,STATUS command.\nDD DUMP,STATUS\nNTo see DUMP options issue the DISPLAY DUMP,OPTIONS command.\nDDISPLAY DUMP,OPTIONS\nN\nNEstablishing a name pattern\nN---------------------------\nIA set of symbols is available so that you can include the following\nIkinds of information in the names of your automatically allocated\nIdump data sets:\nI\nI-> System name\nI-> Sysplex name\nI-> Job name\nI-> Local and GMT time and date\nI-> Sequence number\nN\nNUse the DISPLAY SYMBOLS command to display the current static system\nNsymbols and their associated substitution texts.\nDD SYMBOLS\nM\nMMessage from Kenneth Tomiak:\nMNowhere did I find the date and time symbols documented.\nM\nNBy default, the system uses one of three name patterns. The system\nNtypically uses the normal pattern\nN\nN1. SYS1.DUMP.D&DATE..T&TIME..&SYSNAME..S&SEQ\nI   &SYSNAME. does not start with a numeric.\nN2. SYS1.DUMP.D&YYMMDD..T&HHMMSS..S&SYSNAME..S&SEQ\nI   &SYSNAME. starts with a numeric AND is less than 8 characters.\nN3. SYS1.DUMP.D&YYMMDD..T&HHMMSS..S&SYSNAME(2&colon.8)..S&SEQ\nI   &SYSNAME. starts with a numeric AND is 8 characters.\nI   Note: In a SYSPLEX this could resolve to the same name if\nI         you only vary the last character.\nN\nNSet up your installation data set name pattern using the\nNDUMPDS command.\nNSample:\nDDUMPDS NAME=SYS1.DUMP.&SYSNAME..&JOBNAME..Y&YR4.M&MON..D&DAY.T&HR.&MIN..S&SEQ.\nN\nNDefining resources for dump data sets\nN-------------------------------------\nNWhen automatic allocation is inactive, dumps are written to\nNpre-allocated\nNSYS1.DUMPxx data sets if they exist.\nN\nNYou can define dump data set resources using\nN-> DUMPDS ADD,VOL=volser (for DASD volumes)\nN-> DUMPDS ADD,SMS=class (for SMS classes)\nDDUMPDS ADD,VOL=(SCRTH1,HSM111)\nDDUMPDS ADD,SMS=(DUMPDA)\nN\nNActivating automatic allocation\nN-------------------------------\nNBy default, automatic allocation is inactive after IPLing the system.\nNadd to your COMMNDxx parmlib member the\nN-> DUMPDS NAME= command,\nN-> DUMPDS ADD commands,\nN-> DUMPDS ALLOC=ACTIVE command\nN\nNAllocating SYS1.DUMPxx data sets\nN--------------------------------\nNSPACE: An installation must consider the size of the page data set that\nNwill contain the dump data. The data set must be large enough to hold\nNthe amount of data as defined by the MAXSPACE parameter on the CHNGDUMP\nNcommand, VIO pages, and pageable private area pages.\nIThe maximum size of a data set is 65,535 tracks. For a 3390 this is\nI4,369 cylinders, and will hold about 2.8 gigabytes of data\nN\nNCLEAR a SYS1.DUMP data set\nN--------------------------\nNThe system writes only one dump in each SYS1.DUMPxx data set.\nNBefore the data set can be used for another dump, clear it using\nNthe DUMPDS command with the CLEAR keyword.\nN\nDDD CLEAR,DSN=nn\nN\nNChoosing SVC dump data sets\nN---------------------------\nNIBM recommends using extended format sequential data sets as dump data\nNsets for SVC Dumps.\nDDSNTYPE=LARGE\nN\nNFinding automatically allocated dump data sets\nN----------------------------------------------\nDDISPLAY DUMP,TITLE,AUTODSN=5\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0202": {"ttr": 45585, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00\\x94\\x00\\x94\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:07", "lines": 148, "newlines": 148, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0202\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 2.\nT-Obtaining SVC dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180107\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: SVC dump\nN-------------------\nNObtaining SVC dumps\nN-------------------\nN\nNIssuing a macro for SVC dump\nN----------------------------\nNObtain an SVC dump by issuing a SDUMP or SDUMPX macro in an authorized\nNprogram, issuing a DUMP operator command, issuing a SLIP operator\nNcommand, or using a SLIP command in the IEASLPxx parmlib member.\nN\nD**************************************************************\nD**                                                           *\nD**  This is a sample assembler language program that is      *\nD**  used with the TEST tutorial in the publication,          *\nD**  TSO/E Programming Guide.                                 *\nD**                                                           *\nD**************************************************************\nDSAMP1    CSECT\nD         STM   14,12,12(13)\nD         BALR  12,0\nD         USING *,12\nD         ST    13,SAVE+4\nD         LA    15,SAVE\nD         ST    15,8(13)\nD         LR    13,15\nDSTOP1    LH    3,HALFCON\nD         SDUMPX\nDSTOP2    A     3,FULLCON\nDSTOP3    ST    3,HEXCON\nD         L     13,4(13)\nD         LM    14,12,12(13)\nD         BR    14\nDSAVE     DC    18F'0'\nDADCON    DC    A(SAVE)\nDFULLCON  DC    F'-1'\nDHEXCON   DC    XL4'FD38'\nDHALFCON  DC    H'32'\nDCHARCON  DC    CL10'TEST EXAMP'\nDPACKCON  DC    PL4'25'\nDBINCON   DC    B'10101100'\nD         END   SAMP1\nN\nNOR Sample2\nN\nD**************************************************************\nD**                                                           *\nD**  This is a sample assembler language program that is      *\nD**  used with the TEST tutorial in the publication,          *\nD**  TSO/E Programming Guide.                                 *\nD**                                                           *\nD** NOTE: There is an error in this program.  It is intended  *\nD**       to be located and fixed in the TEST tutorial.       *\nD**************************************************************\nDTABAVG   CSECT\nD         STM   14,12,12(13)\nD         BALR  12,0\nD         USING *,12\nD         ST    13,SAVE+4\nD         LA    15,SAVE\nD         ST    15,8(13)\nD         LR    13,15\nD         OPEN  (OUTDCB,(OUTPUT))\nD         L     7,TABSIZE\nD         SR    6,6\nD         SR    5,5\nDADDIT    AH    5,TAB(6)\nD         LA    6,2(6)\nD         BCT   7,ADDIT\nD         ST    5,SUM\nD         SR    4,4\nD         DR    4,7\nD         SDUMPX\nD         STM   4,5,AVG\nD         PUT   OUTDCB,OUTMSG\nD         CLOSE (OUTDCB)\nD         L     13,4(13)\nD         LM    14,12,12(13)\nD         BR    14\nDSAVE     DC    18F'0'\nDTABSIZE  DC    F'12'\nDAVG      DC    2F'0'\nDSUM      DC    F'0'\nDTAB      DC    H'31'\nD         DC    H'29'\nD         DC    H'31'\nD         DC    H'30'\nD         DC    H'31'\nD         DC    H'30'\nD         DC    H'31'\nD         DC    H'31'\nD         DC    H'30'\nD         DC    H'31'\nD         DC    H'30'\nD         DC    H'31'\nDOUTMSG   DC    CL50'TABLE AVERAGE PROGRAM                            '\nDOUTDCB   DCB   DDNAME=OUTDD,LRECL=50,BLKSIZE=50,RECFM=F,               *\nD               MACRF=(PM),DSORG=PS\nD         END   TABAVG\nN\nNOperator activities\nN-------------------\nNFrom a console with master authority, the operator can enter either of\nNthe following commands:\nN-> DUMP operator command.\nN-> SLIP operator command.\nN\nNDUMP operator command\nN---------------------\nDDUMP COMM=(title for the dump)\nIThe system will respond with the message:\nI nn IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND\nN\nNReply to message nn:\nIr nn,jobname=name-of-your-job\nIr nn,u  dumps the master scheduler address space\nIr nn,tsoname=userid\nIr nn,asid=hex-asid or decimal-asid?\nN\nNSLIP operator command\nN---------------------\nDSLIP SET,ACTION=SVCD,ERRTYP=PROG,JOBNAME=MYJOB1,END\nN\nNFinding SVC dumps\nN-----------------\nNIssue one of the display commands:\nNStatic SYS1.DUMPnn data sets\nDDISPLAY DUMP,TITLE,DSN=ALL\nN\nNAutomatically allocated dump data sets\nDDISPLAY DUMP,TITLE,AUTODSN=5\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0203": {"ttr": 45825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00+\\x00+\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:08", "lines": 43, "newlines": 43, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0203\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 2.\nT-Printing, viewing, copying, and clearing\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180108\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: SVC dump\nN-------------------\nNPrinting, viewing, copying, and clearing\nN----------------------------------------\nNExample: JCL to print, copy, and clear an SVC dump data set\nN\nD//ST01#01 EXEC PGM=IKJEFT1B,DYNAMNBR=75,REGION=1500K\nD//SYSTSIN   DD *\nDDELETE(DDIR) PURGE CLUSTER\nDBLSCDDIR VOLUME(VSAM11)\nDIPCS NOPARM\nDSETDEF DD(IPCSDUMP) LIST NOCONFIRM\nDLIST 0\nDCOPYDUMP INFILE(IPCSDUMP) OUTFILE(DUMPOUT) CLEAR NOPRINT NOCONFIRM\nDEND\nD/*\nD//SYSPROC   DD DISP=SHR,DSN=SYS1.SBLSCLI0\nD//SYSTSPRT  DD SYSOUT=*\nD//IPCSDUMP  DD DISP=SHR,DSN=SYS1.DUMP00\nD//DUMPOUT   DD DISP=SHR,DSN=hlq4gdg.DATA.SET(+1)\nD//SYSUDUMP  DD SYSOUT=*\nD//IPCSTOC   DD SYSOUT=*\nD//IPCSPRNT  DD SYSOUT=*\nD//*\nD//* End of Job prcocl.\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0204": {"ttr": 45827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00n\\x00n\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:49", "lines": 110, "newlines": 110, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0204\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 2.\nT-Contents of SVC dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180149\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: SVC dump\nN-------------------\nNContents of SVC dumps\nN---------------------\nN\nNCustomized contents using the SDATA parameter\nN---------------------------------------------\nNALLNUC The DAT-on and DAT-off nucleuses\nN\nNALLPSA Prefixed save area (PSA) for all processors\nN\nNCOUPLE Data on cross-system coupling\nN\nNCSA Common service area (CSA) (that is, subpools 227, 228, 231, 241)\nN\nNDEFAULTS Default areas\nN\nNGRSQ Global resource serialization control blocks for the task\nNbeing dumped:\nN-> Global queue control blocks\nN-> Local queue control blocks\nN\nNIO Input/output supervisor (IOS) control blocks for the task\nNbeing dumped:\nN-> EXCPD\nN-> UCB\nN\nNLPA Active link pack area (LPA): module names and contents\nN\nNLSQA Local system queue area (LSQA) allocated for the address space\nN(that is, subpools 203 - 205, 213 - 215, 223 - 225, 229, 230,\nN233 - 235,\nN249, 253 - 255).\nN\nNNOALL No ALLPSA\nN\nNNOALLPSA No ALLPSA\nN\nNNODEFAULTS\nN-> Minimum default areas needed for IPCS dump analysis\nN-> Areas requested on the SDUMP or SDUMPX macro\nN\nNNOPSA No PSA\nN\nNNOSQA No SQA\nN\nNNOSUM No SUM\nN\nNNUC Read/write portion of the control program nucleus (that is, only\nNthe non-page -protected areas of the DAT-on nucleus), including:\nN-> CVT\nN-> LSQA\nN-> PSA\nN-> SQA\nN\nNPSA Prefixed save areas (PSA) for the processor at the time of the\nNerror or the processor at the time of the dump.\nN\nNRGN Allocated pages in the private area of each address space being\nNdumped, including subpools 0 - 127, 129 - 132, 203 - 205, 213 - 215,\nN223 - 225, 229, 230, 236, 237, 244, 249, 251 - 255.\nNAlso, allocated eligible storage above the 2-gigabyte address.\nN\nNSERVERS Areas added by IEASDUMP. SERVERS exits.\nN\nNSWA Scheduler work area (SWA) (that is, subpools 236 and 237)\nN\nNTRT System trace, generalized trace facility (GTF) trace, and\nNmaster trace, as available.\nN\nNReplacing CHNGDUMP defaults\nN---------------------------\nNTo add the LPA to all SVC dumps for SDUMP or SDUMPX macros and\nNDUMP operator commands until changed by another CHNGDUMP SDUMP, enter:\nDCHNGDUMP SET,SDUMP=(LPA)\nN\nNTo add the CHNGDUMP SDUMPX options list to all SVC dumps:\nDCHNGDUMP SET,SDUMP,ADD\nN\nNTo override all SVC dumps with the CHNGDUMP SDUMPX options list:\nDCHNGDUMP SET,SDUMP,OVER\nN\nNTo remove LPA from the SDUMPX options list:\nDCHNGDUMP DEL,SDUMP=(LPA)\nN\nNParameters for a console initiated dump:\nN----------------------------------------\nNTo add ALLNUC to this SVC dump, enter:\nDDUMP COMM=(MYDUMP1 5-9-88)\nIThe system issues a message:\nI* nn IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND\nNEnter in reply:\nDr nn,JOBNAME=MYJOB1,SDATA=(ALLNUC),END\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD03": {"ttr": 45829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:50", "lines": 31, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD03\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 3: Transaction dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 3: Transaction dump\nN---------------------------\nNA Transaction dump provides a representation of the virtual storage\nNfor an address space when an error occurs. Typically, an application\nNrequests the dump from a recovery routine when an unexpected error\nNoccurs.\nN\nNTransaction dumps are requested as follows:\nN\nN-> Synchronous transaction dump:\nN\nNThe requester's IEATDUMP macro invocation issues an instruction to\nNobtain the dump under the current task. IEATDUMP returns control to\nNthe requester and is available once the dump data has been written\nNinto a dump data set.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0301": {"ttr": 45831, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00U\\x00U\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:50", "lines": 85, "newlines": 85, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0301\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 3.\nT-Planning data set management for SVC dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180150\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: TransactionC dump\nN----------------------------\nNPlanning data set management for SVC dumps\nN------------------------------------------\nN\nNUsing preallocated dump data sets\nN---------------------------------\nNTo specify a pre-allocated data set, specify the DDNAME parameter that\nNidentifies a data set. The data set must contain sufficient space in\nNone for more extents for the entire dump to be written. DDNAME does\nNnot have a 2GB size restriction for the size of the dump. If the data\nNset does not contain sufficient space, a partial dump is returned.\nN\nNSetting up allocation authority\nN-------------------------------\nNTo allocate dump data sets automatically, the DUMPSRV address space\nNmust have authority to allocate new data sets. Do the following:\nN1. Associate the DUMPSRV address space with a user ID. Use the RACF.\nN   STARTED general resource class or the RACF Started Procedures Table,\nN   ICHRIN03, to associate DUMPSRV with a user id.\nN\nN2. Authorize DUMPSRV's user ID to create new dump data sets using the\nN   naming convention in the following topic. With the high-level\nN   qualifier of SYS1, the data sets are considered group data sets.\nN   You can assign CREATE group authority to the DUMPSRV user ID within\nN   that group.\nN\nNConfiguration\nN-------------\nNTo verify dump status issue the DISPLAY DUMP,STATUS command.\nDD DUMP,STATUS\nNTo see DUMP options issue the DISPLAY DUMP,OPTIONS command.\nDDISPLAY DUMP,OPTIONS\nN\nNEstablishing a name pattern\nN---------------------------\nIA set of symbols is available so that you can include the following\nIkinds of information in the names of your automatically allocated\nIdump data sets:\nI\nI-> System name\nI-> Sysplex name\nI-> Job name\nI-> Local and GMT time and date\nI-> Dump section number\nN\nNUse the DISPLAY SYMBOLS command to display the current static system\nNsymbols and their associated substitution texts.\nDD SYMBOLS\nM\nMMessage from Kenneth Tomiak:\nMNowhere did I find the date and time symbols documented.\nM\nNOne example of a pattern:\nN\nN1. hlq.TDUMP.D&DATE..T&TIME..&SYSNAME..&DS\nI   &SYSNAME. does not start with a numeric.\nN2. hlq.TDUMP.D&YYMMDD..T&HHMMSS..S&SYSNAME..&DS\nI   &SYSNAME. starts with a numeric AND is less than 8 characters.\nN3. hlq.TDUMP.D&YYMMDD..T&HHMMSS..S&SYSNAME(2&colon.8)..&DS\nI   &SYSNAME. starts with a numeric AND is 8 characters.\nI   Note: In a SYSPLEX this could resolve to the same name if\nI         you only vary the last character.\nM\nMFictiously, let us believe we used:\nMhlq.TDUMP.D&DATE..T&TIME..&SYSNAME..&JOBNAME.\nMand that it resolved to:\nMhlq.TDUMP.D170827.T072155.cbt1.KTOMIAKJ\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0302": {"ttr": 45833, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00+\\x00+\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:50", "lines": 43, "newlines": 43, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0302\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 3.\nT-Obtaining Transaction dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180150\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 3: Transaction dump\nN---------------------------\nNObtaining Transaction dumps\nN---------------------------\nNObtain a Transaction dump by issuing a IEATDUMP macro in an authorized\nNor unauthorized program.\nN\nNExample:\nN\nNAn example using DUMPDSN:\nD* z/OS MVS Programming: Authorized Assembler Services Reference EDT-IXG\nD* SA22-7610-21\nD        .\nD         IEATDUMP DSN=DUMPDSN,HDR=DUMPTTL2\nD         .\nD         .\nD         .\nDDUMPDSN  DC    AL1(E2-S2)\nDS2       DC    C'hlq.TDUMP.D&&YYMMDD..T&&HHMMSS..&&SYSNAME..&&JOBNAME.'\nDE2       EQU   *\nDDUMPTTL2 DC    AL1(E3-S3)\nDS3       DC    C'IEADUMP TO AUTOMATICALLY ALLOCATED DATA SET'\nDE3       EQU   *\nD         .\nN\nNNotice the double ampersand usage on SYMBOLs.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0303": {"ttr": 45835, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x01\\x00)\\x00)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:01:51", "lines": 41, "newlines": 41, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0303\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 3.\nT-Printing, viewing, copying, and clearing\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180151\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 3: Transaction dump\nN---------------------------\nNPrinting, viewing, copying, and clearing\nN----------------------------------------\nNExample: JCL to print, copy, and clear an SVC dump data set\nN\nD//ST01#01 EXEC PGM=IKJEFT1B,DYNAMNBR=75,REGION=1500K\nD//SYSTSIN   DD *\nDDELETE(DDIR) PURGE CLUSTER\nDBLSCDDIR VOLUME(VSAM11)\nDIPCS NOPARM\nDSETDEF DD(IPCSTDMP) LIST NOCONFIRM\nDLIST 0\nDEND\nD/*\nD//SYSTSPRT  DD SYSOUT=*\nD//SYSPROC   DD DISP=SHR,DSN=SYS1.SBLSCLI0\nD//IPCSTDMP  DD DISP=SHR,DSN=hlq.TDUMP.D170827.T072155.cbt1.KTOMIAKJ\nD//SYSUDUMP  DD SYSOUT=*\nD//IPCSTOC   DD SYSOUT=*\nD//IPCSPRNT  DD SYSOUT=*\nD//*\nD//* End of Job prcocl.\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0304": {"ttr": 45837, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x02\\x00n\\x00n\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:02:32", "lines": 110, "newlines": 110, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0304\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 3.\nT-Contents of Transaction dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180232\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 2: Transaction dump\nN---------------------------\nNContents of SVC dumps\nN---------------------\nN\nNCustomized contents using the SDATA parameter\nN---------------------------------------------\nNALLNUC The DAT-on and DAT-off nucleuses\nN\nNALLPSA Prefixed save area (PSA) for all processors\nN\nNCOUPLE Data on cross-system coupling\nN\nNCSA Common service area (CSA) (that is, subpools 227, 228, 231, 241)\nN\nNDEFAULTS Default areas\nN\nNGRSQ Global resource serialization control blocks for the task\nNbeing dumped:\nN-> Global queue control blocks\nN-> Local queue control blocks\nN\nNIO Input/output supervisor (IOS) control blocks for the task\nNbeing dumped:\nN-> EXCPD\nN-> UCB\nN\nNLPA Active link pack area (LPA): module names and contents\nN\nNLSQA Local system queue area (LSQA) allocated for the address space\nN(that is, subpools 203 - 205, 213 - 215, 223 - 225, 229, 230,\nN233 - 235,\nN249, 253 - 255).\nN\nNNOALL No ALLPSA\nN\nNNOALLPSA No ALLPSA\nN\nNNODEFAULTS\nN-> Minimum default areas needed for IPCS dump analysis\nN-> Areas requested on the SDUMP or SDUMPX macro\nN\nNNOPSA No PSA\nN\nNNOSQA No SQA\nN\nNNOSUM No SUM\nN\nNNUC Read/write portion of the control program nucleus (that is, only\nNthe non-page -protected areas of the DAT-on nucleus), including:\nN-> CVT\nN-> LSQA\nN-> PSA\nN-> SQA\nN\nNPSA Prefixed save areas (PSA) for the processor at the time of the\nNerror or the processor at the time of the dump.\nN\nNRGN Allocated pages in the private area of each address space being\nNdumped, including subpools 0 - 127, 129 - 132, 203 - 205, 213 - 215,\nN223 - 225, 229, 230, 236, 237, 244, 249, 251 - 255.\nNAlso, allocated eligible storage above the 2-gigabyte address.\nN\nNSERVERS Areas added by IEASDUMP. SERVERS exits.\nN\nNSWA Scheduler work area (SWA) (that is, subpools 236 and 237)\nN\nNTRT System trace, generalized trace facility (GTF) trace, and\nNmaster trace, as available.\nN\nNReplacing CHNGDUMP defaults\nN---------------------------\nNTo add the LPA to all SVC dumps for SDUMP or SDUMPX macros and\nNDUMP operator commands until changed by another CHNGDUMP SDUMP, enter:\nDCHNGDUMP SET,SDUMP=(LPA)\nN\nNTo add the CHNGDUMP SDUMPX options list to all SVC dumps:\nDCHNGDUMP SET,SDUMP,ADD\nN\nNTo override all SVC dumps with the CHNGDUMP SDUMPX options list:\nDCHNGDUMP SET,SDUMP,OVER\nN\nNTo remove LPA from the SDUMPX options list:\nDCHNGDUMP DEL,SDUMP=(LPA)\nN\nNParameters for a console initiated dump:\nN----------------------------------------\nNTo add ALLNUC to this SVC dump, enter:\nDDUMP COMM=(MYDUMP1 5-9-88)\nIThe system issues a message:\nI* nn IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND\nNEnter in reply:\nDr nn,JOBNAME=MYJOB1,SDATA=(ALLNUC),END\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD04": {"ttr": 45839, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x02\\x00!\\x00!\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:02:33", "lines": 33, "newlines": 33, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD04\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4: Stand-Alone dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNThe stand-alone dump program (SADMP) produces a stand-alone dump of\nNstorage that is occupied by one of the following:\nN\nN-> A system that failed.\nN-> A stand-alone dump program that failed.\nN\nNEither the stand-alone dump program dumped itself a self-dump,\nNor the operator loaded another stand-alone dump program to dump the\nNfailed stand-alone dump program.\nN\nNThe stand-alone dump program and the stand-alone dump together form\nNwhat is known as the stand-alone dump service aid. The term stand-alone\nNmeans that the dump is performed separately from normal system\nNoperations and does not require the system to be in a condition for\nNnormal operation.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0401": {"ttr": 46081, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x03\\x00N\\x00N\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:03:00", "lines": 78, "newlines": 78, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0401\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Planning for stand-alone dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180300\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNPlanning for stand-alone dump\nN-----------------------------\nN\nNShould I take a stand-alone dump to DASD or to tape?\nN----------------------------------------------------\nNWhen choosing an output device for stand-alone dump, consider the need\nNfor operator intervention, the amount of operator intervention\nNinvolved, and the amount of time the system will be unavailable.\nN\nN-> Do you use a virtual tape subsystem (VTS) or require operators to\nN   physically mount tape cartridges?\nN\nN-> Do you have pre-allocated DASD data sets?\nN\nN  -> If I do dump to DASD, how much space do I need?\nI     The maximum size of a single-volume DASD dump data set depends on\nI     the type of data set.\nI     -> Conventional sequential data sets can span 65,535 tracks, and\nI        can hold approximately 3 GB.\nI     -> Large format (DSNTYPE=LARGE) data sets can span 16,777,215\nI        tracks. The maximum size for large format data sets is 768 GB.\nI     -> You can define a multi-volume DASD dump data set that can span\nI        up to 32 volumes of the same device type.\nN\nN-> Can you dump to multiple dump data sets?\nI   Stand-alone dump does allow you to dump to multiple dump data sets.\nI   By coding the DDSPROMPT=YES keyword on the AMDSADMP macro, you can\nI   generate a stand-alone dump program that allows run-time dump data\nI   set prompting.\nN\nN-> What can you name my DASD dump data sets?\nI   The data set name must contain the text 'SADMP' as either part of,\nI   or as an entire data set qualifier.\nN\nN-> How much of the system should I dump?\nI   It depends. The situation dictates the amount of information you\nI   need to diagnose the failure. You can use the DUMP keyword to\nI   control the amount of storage you want dumped.\nN\nN-> When should you specify the dump tailoring options?\nI   The most flexible way to specify the dump options for a stand-alone\nI   dump is to specify, on the DUMP keyword of the AMDSADMP macro,\nI   those areas of storage you normally always want dumped and\nI   additionally allow the operator who requests the dump to specify\nI   additional options by coding the PROMPT keyword on the AMDSADMP\nI   macro.\nN\nN-> Should you use IEBGENER or the COPYDUMP subcommand to copy a dump\nN   to a data set?\nI   The recommended method is IPCS COPYDUMP. IPCS COPYDUMP can run\nI   without a dump directory being employed. Use the DEFER option\nI   when initiating the IPCS session to tell IPCS to defer accessing a\nI   dump directory until one is required.\nN\nN-> Can I use my current version of the stand-alone dump program to\nN   dump a new version of z/OS?\nI   Always use the stand-alone dump version that is generated from\nI   the same release of z/OS that you want to dump.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0402": {"ttr": 46083, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x06\\x01\\xde\\x01\\xde\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:06:22", "lines": 478, "newlines": 478, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0402\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Creating the stand-alone dump program\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180622\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNCreating the stand-alone dump program\nN-------------------------------------\nN1. The first step in creating a stand-alone dump program is selecting\nN   tape or DASD as the stand-alone dump IPL volume (residence volume).\nN\nN2. Code the AMDSADMP macro.\nN\nD\u00ddsymbol\u00a8 AMDSADMP\nD                 \u00dd,IPL={Tunit|Dunit|DSYSDA}\u00a8\nI                   Indicates the device number, device type, or\nI                   esoteric name of the stand-alone dump residence\nI                   volume. The first character indicates the volume\nI                   type; T for tape, D for DASD.stand-alone dump uses\nI                   the unit character string as the UNIT=value to\nI                   allocate the residence volume for initialization.\nI\nI                   A device number consists of 1 to 4 hexadecimal\nI                   digits, optionally preceded by a slash (/). Use a\nI                   slash preceding a 4-digit device number to\nI                   distinguish it from a device type.\nI\nD                 \u00dd,VOLSER={volser|SADUMP}\u00a8\nI                   Indicates the volume serial number the system is to\nI                   use to allocate the residence volume for\nI                   initialization. When you specify a tape volume, it\nI                   must be NL (no labels). VOLSER=SADUMP is the default.\nM                   Message from Kenneth Tomiak:\nM                   Your tape subsystem should support catalogued NL\nM                   tape. Be aware that when you create the\nM                   SADMP program as NL, the system will prompt you\nM                   TWICE to confirm NO LABEL foromat.\nM\nM                   Message from Kenneth Tomiak:\nM                   Consider using the system's master catalog volser.\nI\nD                 \u00dd,ULABEL={PURGE|NOPURGE}\u00a8\nI                   Indicates whether stand-alone dump deletes (PURGE)\nI                   or retains (NOPURGE) existing user labels on a DASD\nI                   residence volume.When you specify NOPURGE, the\nI                   stand-alone dump program is written on cylinder 0\nI                   track 0 of the residence volume, immediately\nI                   following all user labels. If the user labels\nI                   occupy so much space that the stand-alone dump\nI                   program does not fit on track 0, the initialization\nI                   program issues an error message and ends.\nI\nD                 \u00dd,CONSOLE=({cnum|(cnum,ctype) +\nD                 \u00dd,(cnum,ctype)\u00a8...|01F,3278})\u00a8\nI                   Indicates the device numbers and device types of the\nI                   stand-alone dump consoles that stand-alone dump is\nI                   to use while taking the dump. When you specify\nI                   CONSOLE=cnum, stand-alone dump assumes (cnum,3278).\nI                   You can specify from two to 21 consoles by coding:\nI                     CONSOLE=((SYSC)|(cnum,ctype),(cnum,ctype),\nD                              \u00dd,(cnum,ctype)\u00a8...)\nI\nI                   A device number consists of 3 or 4 hexadecimal\nI                   digits, optionally preceded by a slash (/). Use a\nI                   slash preceding a 4-digit device number to\nI                   distinguish it from a device type.\nI\nI                   The 3277, 3278, 3279, and 3290 device types are\nI                   valid, and are interchangeable.\nI\nI                   CONSOLE=(01F,3278) is the default.\nI\nI                   You can specify CONSOLE=SYSC for the first console\nI                   only. SYSC is a constant representing the hardware\nI                   system console.\nI\nI                   Note: The specification of CONSOLE does not affect\nI                   the availability of the system console.\nI\nD                 \u00dd,SYSUT={unit|SYSDA}\u00a8\nI                   Specifies the UNIT=value of the device that\nI                   stand-alone dump uses for work files during\nI                   stand-alone dump initialization. You can specify the\nI                   device as a group name (for example, SYSDA), a\nI                   device type (for example, 3330), or a unit\nI                   address (for example, 131). SYSUT=SYSDA is the\nI                   default.\nI\nD                 \u00dd,OUTPUT={Tunit|Dunit|(Dunit,ddsname)|T0282}\u00a8\nI                   Indicates the device type, number, and data set\nI                   name that stand-alone dump uses as a default\nI                   value if the operator uses the EXTERNAL INTERRUPT\nI                   key to bypass console communication, or if the\nI                   operator provides a null response to message\nI                   AMD001A during stand-alone dump initialization.\nI                   OUTPUT=T0282 is the default.\nI\nI                   The device type can be specified as either a 'T'\nI                   for tape or 'D' for DASD.\nI\nI                   The device number consists of 3 or 4 hexadecimal\nI                   digits, optionally preceded by a slash (/). Use a\nI                   slash preceding a 4-digit device number to\nI                   distinguish it from a device type.\nI\nI                   If the default device is a DASD, you can also set\nI                   up a default dump data setname to use by specifying\nI                   both the device and the dump data set name on the\nI                   OUTPUT= parameter. You can specify the first volume\nI                   of a multi-volume DASD data set.\nI\nI                   The AMDSADDD REXX is used to allocate and initialize\nI                   the same data set name specified on the OUTPUT=\nI                   keyword.\nI\nD                 \u00dd,DUMP=('options')\u00a8\nI                   Indicates additional virtual storage that you want\nI                   dumped. This storage is described as address ranges,\nI                   dataspaces, and subpools in address spaces. When\nI                   you do not specify DUMP, stand-alone dump does not\nI                   dump any additional storage unless you specify\nI                   PROMPT.\nI\nD                 \u00dd,PROMPT\u00a8\nI                   Causes stand-alone dump, at run time, to prompt the\nI                   operator for additional virtual storage to be\nI                   dumped. The operator can respond with the same\nI                   information that can be specified for the DUMP\nI                   keyword.\nI\nD                 \u00dd,MSG={ACTION|ALLASIDS|ALL}\u00a8\nI                   Indicates the type of stand-alone dump messages that\nI                   appear on the console. When you specify ACTION,\nI                   stand-alone dump writes only messages that require\nI                   operator action. When you specify ALL, stand-alone\nI                   dump writes most messages to the console. However,\nI                   messages AMD010I, AMD057I, AMD076I, AMD081I, and\nI                   AMD102I appear only in the stand-alone dump message\nI                   log. When you specify ALLASIDS, the stand-alone\nI                   dump program behaves as if MSG=ALL was specified,\nI                   except that message AMD010I also appears on the\nI                   console.\nI\nI                   ALL is the default.\nI\nD                 \u00dd,MINASID={ALL|PHYSIN}\u00a8\nI                   Indicates the status of the address spaces that are\nI                   to be included in the minimal dump. Specify PHYSIN\nI                   to dump the minimum virtual storage (LSQA and\nI                   selected system subpools) for the physically\nI                   swapped-in address spaces only. Specify ALL to dump\nI                   the minimum virtual storage (LSQA and selected\nI                   system subpools) for all of the address spaces.\nI\nI                   ALL is the default.\nI\nD                 \u00dd,COMPACT={YES|NO}\u00a8\nI                   COMPACT(YES) compacts the data stored on a tape\nI                   cartridge if theIDRC hardware feature is available\nI                   on your tape drive. If the IDRC feature is available\nI                   and you do not specify the COMPACT keyword, the\nI                   default is YES, so that IDRC compacts the dump data.\nI                   Otherwise, the data is handled as usual.\nI\nD                 \u00dd,REUSEDS={CHOICE|ALWAYS|NEVER}\u00a8\nI                   Indicates whether stand-alone dump should reuse the\nI                   dump data set on the specified output device when it\nI                   determines that the data set is valid, however, it\nI                   can contain data from a previous dump. Stand-alone\nI                   dump determines this by checking to see if the\nI                   first record in the data set matches the record\nI                   that is written by the AMDSADDD rexx utility. When\nI                   you specify ALWAYS, stand-alone dump issues message\nI                   AMD094I and reuses the specified dump data set. When\nI                   you specify NEVER, stand-alone dump issues message\nI                   AMD093I and prompts the operator, through message\nI                   AMD001A, for an output device. When you specify\nI                   CHOICE, stand-alone dump informs the operator, with\nI                   message AMD096A, that the data set is not\nI                   reinitialized and requests permission to reuse the\nI                   data set.\nI\nD                 \u00dd,ALIB=(volser,unit)\u00a8\nI                   This parameter is valid only when you are generating\nI                   the stand-alone dump program using two-stage\nI                   generation.\nI\nI                   Specifies the volume serial number and UNIT=value of\nI                   the volume that contains all of the following system\nI                   data sets:\nI                   -> SYS1.MODGEN\nI                   -> SYS1.LINKLIB\nI                   -> SYS1.NUCLEUS\nI\nI                   Note: The specification of the NUCLIB, LNKLIB, or\nI                   MODLIB parameters overrides the corresponding value\nI                   specified on the ALIB parameter.\nI\nD                 \u00dd,NUCLIB=(volser,unit)\u00a8\nI                   Specifies the volume serial number and UNIT=value of\nI                   the volume that contains the system data set\nI                   SYS1.NUCLEUS. If you specify NUCLIB, there is no\nI                   need to specify IPLTEXT, IPITEXT, DVITEXT, DPLTEXT\nI                   and PGETEXT DD statements.\nI\nD                 \u00dd,MODLIB=(volser,unit)\u00a8\nI                   Specifies the volume serial number and UNIT=value\nI                   of the volume that contains the system data set\nI                   SYS1.MODGEN.\nI\nD                 \u00dd,LNKLIB=(volser,unit)\u00a8\nI                   Specifies the volume serial number and UNIT=value\nI                   of the volume that contains the system data set\nI                   SYS1.LINKLIB.\nI\nD                 \u00dd,DDSPROMPT={YES|NO}\u00a8\nI                   DDSPROMPT=YES allows the stand-alone dump program to\nI                   prompt the operator for an output dump data set when\nI                   dumping to a DASD device. When DDSPROMPT=YES is\nI                   specified, after replying to message AMD001A with a\nI                   DASD device number, message AMD002A is also issued\nI                   to prompt the operator for a dump data set name.\nI\nI                   DDSPROMPT=NO indicates that the stand-alone dump\nI                   program should not prompt for a dump data set name\nI                   when dumping to a DASD device. When DDSPROMPT=NO is\nI                   specified, after replying to message AMD001A with a\nI                   DASD device number, the stand-alone dump program\nI                   uses data set SYS1.SADMP.\nI\nI                   DDSPROMPT=NO is the default.\nI\nD                 \u00dd,AMD029={YES|NO}\u00a8\nI                   If AMD029=NO is specified, SADMP does not issue\nI                   AMD029D when a 3270 console screen becomes full.\nI                   SADMP behaves as if the operator had replied NO to\nI                   AMD029D. This parameter is meaningless when the\nI                   system console is used, because AMD029D is never\nI                   issued for the system console.\nI\nI                   AMD029 =YES is the default.\nI\nD                 \u00dd,IPLEXIST={YES|NO}\u00a8\nI                   If IPLEXIST=YES is specified, SADMP includes\nI                   IPLEXIST with the ICKDSF parameters, so that\nI                   ICKDSF does not prompt the operator with message\nI                   ICK21836D if there is already IPL text on the volume.\nI\nI                   IPLEXIST=NO is the default.\nI\nD                 \u00dd,ADDSUMM=('options')\u00a8\nI                   Indicates additional address spaces that you want\nI                   dumped during a summary phase. Default summary\nI                   address spaces are always dumped during a summary\nI                   phase. If you do not specify ADDSUMM, stand-alone\nI                   dump dumps only the default summary address spaces\nI                   unless you specify PROMPT, in which case you have\nI                   the opportunity to dump additional address spaces\nI                   at run time.\nN\nN3. Assemble the macro, placing the stand-alone dump program onto the\nN   residence volume in ready-to-load form.\nN\nN\nNExample: Generating an unformatted, tape resident dump program\nN--------------------------------------------------------------\nNIn this example, the IPL parameter specifies tape as the residence\nNvolume, and the VOLSER parameter identifies that tape. All other\nNparameters are allowed to default.\nN\nDAMDSADMP IPL=T3400,VOLSER=SATAPE\nN\nN\nNExample: Generating a dump program with output to DASD\nN------------------------------------------------------\nNIn this example, the OUTPUT parameter directs the stand-alone dump\nNoutput to dump data set SYS1.SADMP on device 450, and the REUSEDS\nNparameter specifies that the operator be prompted about whether to\nNreuse the dump data set.\nN\nDAMDSADMP OUTPUT=D450,REUSEDS=CHOICE\nN\nN\nNExample: Generating a dump program with output to DASD\nN------------------------------------------------------\nIn this example, the OUTPUT parameter directs the stand-alone dump\nNoutput to dump data set SADMP.DDS1 on device 450. Furthermore, the\nNDDSPROMPT=YES keyword allows for run-time dump data set prompting.\nN\nDAMDSADMP OUTPUT=(D450,SADMP.DDS1),DDSPROMPT=YES\nN\nN\nNUsing the DUMP or ADDSUMM keyword to request additional\nNstorage or address spaces\nN-------------------------------------------------------\nNYou can request that stand-alone dump dump additional storage or\nNadditional address spaces in two ways:\nN\nN-> Specifying DUMP options or ADDSUMM options on the AMDSADMP macro.\nN\nN-> Specifying additional dump options at run time\nN\nNBy coding the PROMPT keyword on the AMDSADMP macro, you can have\nNStand-alone dump prompt the operator to dump additional storage or\nNspecify additional address spaces to be dumped as part of summary\nNphase. When you code PROMPT, and the virtual storage dump program gets\nNcontrol, stand-alone dump issues the AMD059D message:\nN\nIAMD059D ENTER 'DUMP' OR 'SET' OR 'ADDSUMM' WITH OPTIONS, 'LIST' OR 'END'.\nN\nNThe operator can respond with one of the following:\nN-> DUMP followed by dump options. In this case, the '=' after DUMP is\nN   optional.\nN\nN-> SET followed by the MINASID options.\nN\nN-> ADDSUMM followed by address space list to additionally be dumped as\nN   part of summary phase. In this case, the '=' after ADDSUMM is\nN   optional.\nN\nN-> LIST. On the console, stand-alone dump displays the current virtual\nN   storage areas to be dumped and address space list to be dumped\nN   during the summary phase.\nN\nN-> END. Stand-alone dump stops prompting the operator for options and\nN   begins processing.\nN\nNExplanation of dump tailoring options:\nN--------------------------------------\nNThis section provides an explanation for each of the dump tailoring\nNoptions.\nN\nNRANGE(xxxxxxxx:yyyyyyyy,xxxxxxxx:yyyyyyyy...)\nN  Specifies one or more ranges of storage that you want dumped. xxx\nN  and yyy are hexadecimal addresses from 0 to X'7FFFFFFF'\nN\nNRANGE(ALL)\nN  Specifies dumping of all storage from 0 to X'7FFFFFFF'\nN\nNSP(ddd)\nN  Causes stand-alone dump to dump subpool ddd. ddd is a decimal integer\nN  from 0 to 255.\nN\nNSP(ddd:eee)\nN  Causes stand-alone dump to dump all subpools from ddd to eee,\nN  inclusive.\nN\nNSP(ddd:eee,ddd:eee,...)\nN  Causes stand-alone dump to dump the combination of subpools that you\nN  specify.\nN\nNSP(ALL)\nN  Causes stand-alone dump to dump all subpools, from\nN  0 to 255 inclusive.\nN\nNLSQA\nN  Causes stand-alone dump to dump the LSQA.\nN\nNHIGH VIRTUAL\nNCauses stand-alone dump to dump all allocated storage above 2G.\nN\nNASID(xxxx:yyyy)\nN  Causes stand-alone dump to dump storage for the range of address\nN  spaces whose ASIDs begin at xxx and end at yyy, inclusive. xxx\nN  and yyy are hexadecimal numbers from X'1' to X'FFFF'.\nN\nNASID('jjj')\nN Causes stand-alone dump to dump storage for the address space that\nN  jobname jjj identifies.\nN\nN  Note that you must enclose the jobname in single quotation mark.\nM  Message from Kenneth Tomiak:\nM  A single quotation mark is vague, IBM means an apostrophe(').\nN\nN  Wildcard Characters: You can use wildcard characters to identify\nN  multiple jobnames. The valid wildcard characters are:\nN\nN  * Zero or more characters, up to the maximum length of the string. An\nN    asterisk can start the string, end it, appear in the middle of the\nN    string, or appear in several places in the string. A\nN    single asterisk for the jobname indicates that all jobnames match.\nN\nN  ? One character. One or more question marks can start the string, end\nN    it, appear in the middle of the string, or appear in several places\nN    in the string. A single question mark indicates all jobnames\nN    consisting of one character.\nN\nNASID(SYSKEY)\nN  Causes stand-alone dump to dump storage for all address spaces whose\nN  active TCB has an associated storage key of 0 to 7.\nN\nNASID(combination)\nN  You can combine any of the above specifications. An example of a\nN  valid combination is ASID(2,'IMSJOB',SYSKEY).\nN\nNASID(PHYSIN)\nN  Causes stand-alone dump to dump storage for physically swapped-in\nN  address spaces.\nN\nNASID(ALL)\nN  Causes stand-alone dump to dump storage for all address spaces.\nN  Note that you cannot specify ASID(ALL) in combination with any of\nN  the other ASID specifications.\nN\nNDATASPACES OF ASID(qualifier)\nN  When you specify the DATASPACES OF ASID(qualifier) keyword,\nN  stand-alone dump dumps all data spaces owned by the specified\nN  address space. For each requested data space, stand-alone dump:\nN\nN  -> Dumps pages backed by central storage during the central storage\nN     dump\nN  -> Copies into central storage and dumps every page that is not a\nN     first reference page and not backed by central storage\nN\nNPAGETABLES OF DATASPACES\nN  When you specify the PAGETABLES OF DATASPACES keyword, stand-alone\nN  dump dumps paged-out virtual storage that contains the page tables\nN  for all data spaces.\nN\nN\nNUsing the AMDSADDD utility\nN--------------------------\nNThe REXX utility AMDSADDD resides in SYS1.SBLSCLI0.\nN-> Allocate and initialize the data set.\nN-> Clear (reinitialize) the data set.\nN-> Reallocate and initialize the data set.\nN\nNThe IPCS SADMP dump data set utility performs the same functions as\nNthe AMDSADDD REXX utility.\nN\nN\nNExamples of running AMDSADDD in batch mode\nN------------------------------------------\nNExample 1: allocate and initialize the dump data set SYS1.SADMP.A1\nN------------------------------------------------------------------\nNThe following example shows how to use JCL to allocate and initialize\nNthe dump data set SYS1.SADMP.A1 on VOL=SER=ZOSSVA with a size of 2,653\nNcylinders. The BASIC type of data set is allocated because the dsntype\nNparameter is not specified.\nN\nD//SAMPLE1 JOB 'S3031,B707000,S=C', 'BATCH EXAMPLE', RD=R,\nD//             MSGLEVEL=(1,1),CLASS=E,NOTIFY=&SYSUID,MSGCLASS=H\nD//STEP1   EXEC PGM=IKJEFT01,REGION=64M\nD//SYSTSPRT  DD SYSOUT=*\nD//SYSTSIN   DD *\nD  EXEC 'SYS1.SBLSCLI0(AMDSADDD)' +\nD    'DEFINE ZOSSVA(SYS1.SADMP.A1) 3390 2653 N'\nD/*\nN\nN\nNExample 2: allocate and initialize an extended format dump data set\nN-------------------------------------------------------------------\nNThe following example shows how to use JCL to allocate and initialize\nNan extended format dump data set named SADMP.DS on VOL=SER=USRDS1 with\nNa size of 2,953 cylinders in the cylinder-managed space.\nN\nD//SAMPLE2 JOB 'S3031,B707000,S=C', 'BATCH EXAMPLE', RD=R,\nD//             MSGLEVEL=(1,1),CLASS=E,NOTIFY=&SYSUID,MSGCLASS=H\nD//STEP1   EXEC PGM=IKJEFT01,REGION=64M\nD//SYSTSPRT  DD SYSOUT=*\nD//SYSTSIN   DD *\nD  EXEC 'SYS1.SBLSCLI0.EXEC'\nD    'DEFINE USRDS1(SADMP.DS)(3390,storclas) 2953 Y EXTREQ OPT'\nD/*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0403": {"ttr": 46337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x07\\x00\\xa0\\x00\\xa0\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:07:13", "lines": 160, "newlines": 160, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0403\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Generating the stand-alone dump program\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180713\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNGenerating the stand-alone dump program\nN---------------------------------------\nN\nNOne-stage generation\nN--------------------\nNIn one-stage generation, run the AMDSAOSG program as a single job,\nNusing the AMDSADMP macro you have coded as input data\nNon the GENPARMS control\nNstatement.\nN\nNExample: One-stage generation\nN-----------------------------\nNThe stand-alone dump utility program, AMDSAOSG, initializes a\nNstand-alone dump residence volume in one job by dynamically allocating\nNdata sets and invoking the appropriate programs. To run the one-stage\nNgeneration program, indicate one AMDSADMP macro as a control statement\nNfor DDNAME GENPARMS.\nN\nD//SADMPGEN JOB MSGLEVEL=(1,1)\nD//ST01#02 EXEC PGM=AMDSAOSG,REGION=5M\nD//**SYSIN    <=Dynamically allocated, DO NOT CODE!\nD//**SYSPRINT <=Dynamically allocated, DO NOT CODE!\nD//GENPARMS  DD *\nD      AMDSADMP IPL=DSYSDA,VOLSER=sys1mc,                              X\nD               CONSOLE=(1A0,3277)\nD      END\nD/*\nD//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\nD//          DD DISP=SHR,DSN=SYS1.MODGEN\nD//GENPRINT  DD SYSOUT=*\nD//*DPLTEXT   dd disp=shr,DSN=SYS1.NUCLEUS(AMDSADPL)\nD//*DVITEXT   dd disp=shr,DSN=SYS1.NUCLEUS(AMDSADVI)\nD//*IPITEXT   dd disp=shr,DSN=SYS1.NUCLEUS(AMDSAIPI)\nD//*IPLTEXT   dd disp=shr,DSN=SYS1.NUCLEUS(AMDSAIPD)  <==For DASD\nD//*IPLTEXT   dd disp=shr,dsn=SYS1.NUCLEUS(AMDSAIPT)  <==For TAPE\nD//*IPLDEV    dd disp=(new,keep),DSN=SYS1.PAGEDUMP.Vvolser,\nD//*             UNIT=iplunit,VOL=(PRIVATE,SER=iplser),\nD//*             SPACE=(4096,(1095),,CONTIG)\nD//*             DCB=(DSORG=PS,RECFM=F,BLKSIZE=4096,LRECL=4096)\nD//*SYSPUNCH  dd disp=(new,pass),DSN=&OBJ,\nD//*             UNIT=SYSDA,SPACE=(80,(250,50))\nD//*SYSTERM   dd SYSOUT=*\nD//*SYSUT1    dd UNIT=SYSDA,SPACE=(1700,(400,50))\nD//TRK0TEXT  DD DISP=(,PASS),DSN=&TRK0TEXT,\nD//             SPACE=(4096,(2,1)),UNIT=SYSDA\nD//DSFSYSIN  DD DISP=(,PASS),DSN=&DSFSYSIN,\nD//             SPACE=(80,(4,1)),UNIT=SYSDA\nD//*\nD//ST02#02 EXEC PGM=ICKDSF,REGION=5M\nD//SYSIN     DD DISP=(OLD,DELETE),DSN=&DSFSYSIN\nD//IPLDEV    DD DISP=OLD,UNIT=SYSDA,\nD//             VOL=(PRIVATE,RETAIN,SER=sys1MC)\nD//TRK0TEXT  DD DISP=(OLD,DELETE),DSN=&TRK0TEXT\nD//SYSPRINT  DD SYSOUT=*\nN\nN\nNExample: One-stage generation of stand-alone dump to a DASD\nN-----------------------------------------------------------\nThis JCL generates a stand-alone dump from DASD 222 using a volume\nNserial of SADMPM. The output is directed to the data set SYS1.SADMP on\nNa DASD 450. Stand-alone dump determines at run-time if that device is\nNusable. If the dump data set on device 450 is not usable, the operator\nNwill be prompted for another data set. The operator can press enter on\nNany of the consoles at address 041, 042, 0A0, 3E0, or 3E1. The dump\nNwill include the default storage ranges in those address spaces that\nNare physically-swapped in at the time of the dump. In addition, all\nNstorage in ASID 1 and the JES2 address spaces will be dumped.\nNStand-alone dump will also dump the data spaces created by the DUMPSRV\nNaddress space.\nN\nD//ST01#01 EXEC PGM=AMDSAOSG,REGION=5M\nD//GENPARMS  DD *\nD      AMDSADMP CONSOLE=((041,3277),(042,3277),(0A0,3277),             X\nD               (3E0,3277),(3E1,3277)),                                X\nD               DUMP='SP(ALL) IN ASID(1,'JES2') ALSO DATASPACES        X\nD               OF ASID('DUMPSRV')',                                   X\nD               IPL=D222,                                              X\nD               MINASID=PHYSIN,                                        X\nD               OUTPUT=D450,                                           X\nD               REUSEDS=NEVER,                                         X\nD               PROMPT,                                                X\nD               VOLSER=SADMPM\nD         END\nD/*\nD//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\nD//          DD DISP=SHR,DSN=SYS1.MODGEN\nD//DSFSYSIN  DD DISP=(,PASS),DSN=&DSFSYSIN,\nD//             UNIT=SYSDA,SPACE=(80,(4,1))\nD//TRK0TEXT  DD DISP=(,PASS),DSN=&TRK0TEXT,\nD//             UNIT=SYSDA,SPACE=(4096,(2,1))\nD//*\nD//ST02#02 EXEC PGM=ICKDSF,REGION=4M\nD//SYSIN     DD DISP=(OLD,DELETE),DSN=&DSFSYSIN\nD//TRK0TEXT  DD DISP=(OLD,DELETE),DSN=&TRK0TEXT\nD//SYSPRINT  DD SYSOUT=*\nD//IPLDEV    DD DISP=OLD,\nD//             UNIT=SYSDA,VOL=(PRIVATE,RETAIN,SER=SADMPM)\nN\nN\nNExample: One-stage generation of stand-alone dump to tape\nN---------------------------------------------------------\nNThis JCL generates a stand-alone dump from tape 333 using a volume\nNserial of TSADMP. The output is directed to the data set\nNSYS1.SADMP.TAPE on tape 550. Stand-alone dump determines at run-time\nNif that device is usable. If the dump data set on device 550 is not\nNusable, the operator is prompted for another data set. The operator can\nNpress enter on any of the consoles at address 051,052, 0A0, 3E0,\nNor 3E1.\nNThe dump includes the default storage ranges in all address spaces at\nNthe time of the dump. In addition, the data spaces of master, XCF and\nNOMVS address spaces are also included in the stand-alone dump.\nN\nD//ST01#01 EXEC PGM=AMDSAOSG,REGION=5M\nD//SADMPGEN JOB MSGLEVEL=(1,1)\nD//GENPARMS  DD *\nD      AMDSADMP IPL=T333,VOLSER=TSADMP,                                X\nD               CONSOLE=((051,3277),(052,3277),                        X\nD               (0A0,3277),(3E0,3277),(3E1,3277)),                     X\nD               DUMP='SP(ALL) IN ASID(ALL)                             X\nD               ALSO DSP OF ASID(1,'XCFAS','OMVS')',                   X\nD               MINASID=ALL,                                           X\nD               OUTPUT=(T550,SYS1.SADMP.TAPE),                         X\nD               REUSEDS=NEVER,                                         X\nD               PROMPT                                                 X\nD         END\nD/*\nD//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\nD//          DD DISP=SHR,DSN=SYS1.MODGEN\nN\nNTwo-stage generation\nN--------------------\nNIn two-stage generation of the stand-alone dump program, you must\nNperform two tasks:\nN\nN1. Assemble the AMDSADMP macro\nN2. Submit the JCL it created.\nN\nMMessage from Kenneth Tomiak:\nMJust run the one-stage (two step) JCL shown above and life will be\nMsimpler for you.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0404": {"ttr": 46339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x01M\\x01M\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:12", "lines": 333, "newlines": 333, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0404\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Running the stand-alone dump program\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180812\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNRunning the stand-alone dump program\nN------------------------------------\nNThe operator usually takes a stand-alone dump for one of the following\nNtypes of problems:\nN\nN-> Disabled wait\nN-> Enabled wait\nN-> Loop\nN-> Partial system hang\nN\nNWhen one of these problems occurs, the stand-alone dump program,\nNresiding in the SYS1.PAGEDUMP.Vvolser data set,\nNcan be run to produce a stand-alone dump.\nN\nNThere are several procedures that can be used to run the stand-alone\nNdump program:\nN\nN-> \"Procedure A: Initialize and run stand-alone dump\"\nN-> \"Procedure B: Restart stand-alone dump\"\nN-> \"Procedure C: ReIPL stand-alone dump\"\nN-> \"Procedure D: Dump the stand-alone dump program\"\nN\nNProcedure A: Initialize and run stand-alone dump\nN------------------------------------------------\nNUse the following procedure to initialize and run a stand-alone dump.\nN1. Ready the residence device. If it is a tape, mount the volume on a\nN   device attached to the selected processor and ensure that the\nN   file-protect ring is in place. If it is a DASD volume, ensure that\nN   it is write-enabled.\nN\nN2. If dumping a failed stand-alone dump program, in order to diagnose\nN   the stand-alone dump failure, select the Store Status option during\nN   the IPL, or perform a manual Store Status. Otherwise, for all other\nN   cases, do not perform a Store Status because the machine\nN   automatically performs a Store Status when it is necessary.\nN\nMMessage from Kenneth Tomiak:\nMI placed item #4 ahead of #3 because you need to set the LOADPARM\nMbefore you IPL, not after.\nN\nN4. When stand-alone dump is IPLed, you can specify a load parm that\nN   alters the operation of stand-alone dump.\nN\nNThe format of the load parm is Saddddo.\nN\nN  S The constant S must be specified as the first character or the\nN    load parm will be ignored.\nN\nN  a The a specification allows stand-alone dump to start using a\nN    console without the operator performing any action on it. It also\nN    allows stand-alone dump to bypass the prompts for which output\nN    device and default dump title to use. You can specify the\nN    following values for a:\nN\nN      No console communication requested. Use default dump device and\nN         title. Execution begins with no console messages. No\nN         prompting to the operator is allowed. If a prompt occurs, a\nN         wait state will be loaded.\nN\nN      O  Use the default console with the default dump device\nN         and title.\nN         No prompting to the operator is allowed. If a prompt occurs, a\nN         wait state will be loaded.\nN\nN      M  Use the default console with the default dump device and\nN         title. Additional prompts can be made to the operator if they\nN         are needed.\nN\nN      C  Use the default console. The operator must respond to all\nN         prompts.\nN\nN      P  Wait for an interrupt from the console device that is to be\nN         used. If you do not supply the load parm, this is the default.\nN\nN  dddd The dddd specification is the default console device. It must be\nN       one of the devices specified as a console device on the AMDSADMP\nN       macro when the stand-alone dump was generated, or the constant\nN       SYSC for the hardware system console. If you do not specify a\nN       default console device, then the stand-alone dump will use the\nN       first console defined on the AMDSADMP macro when the\nN       stand-alone dump was generated.\nN\nN       The AMDSADMP macro allows you to specify SYSC as the first\nN       console in the console list. If you do this without specifying\nN       a console device in the load parm, the hardware system console\nN       will be the default console device.\nN\nN o The o field contains flags, and the second bit (bit 1) indicates\nN   that SADMP must start an IPL of MVS at the conclusion of its\nN   processing. If bit 1 is on, and SADMP locates an AutoIPL policy\nN   within MVS storage that specifies a re-IPL of MVS, SADMP uses the\nN   information to initiate an IPL of MVS.\nN\nN   For details about AutoIPL, see topic about Using the automatic IPL\nN   function in z/OS MVS Planning: Operations.\nN\nN   The valid values for the o field are '0', '4' or blank.\nN   '0' or  blank leaves all bits off.\nN\nN   '4' sets bit 1 on. Bit 1 is intended to automate the re-IPL of MVS\nN   when SADMP is initiated manually. IBM recommends that it be left\nN   off otherwise.\nN\nNIf you do not use the load parm, select the system console or an\nNoperator console with a device address that is in the console list\nNthat you specified at stand-alone dump generation time (in the CONSOLE\nNkeyword of AMDSADMP). At stand-alone dump run time, the operator can\nNchoose either a console specified with the CONSOLE= keyword or the\nNsystem console to control stand-alone dump operation. If an operator\nNconsole is chosen, press ATTENTION or ENTER on that console. (On some\nNconsoles, you might have to press RESET first.) This causes an\nNinterruption that informs stand-alone dump of the console's address.\nN\nNMessage AMD001A appears on the console.\nN\nN5. Ready an output device.\nN\nN6. Reply with the device number for the output device.\nN\nN7. Stand-alone dump prompts you, with message AMD011A, for a dump\nN   title.\nN\nN3. IPL stand-alone dump.\nNStand-alone dump does not communicate with the operator console.\nNInstead, stand-alone dump loads an enabled wait PSW with wait\nNreason code X'3E0000'.\nN\nNStand-alone dump waits for a console I/O interrupt or an external\nNinterrupt.\nN\nNIf an operator console is chosen, press ATTENTION or ENTER on that\nNconsole. (On some consoles, you might have to press RESET first.)\nNThis causes an interruption that informs stand-alone dump of the\nNconsole's address.\nN\nNWhen no console is available, run stand-alone dump without a console.\nNEnter an external interruption on the processor that stand-alone dump\nNwas IPLed from. Stand-alone dump proceeds using the default output\nNdevice and/or the default dump data set. No messages appear on any\nNconsoles; stand-alone dump uses PSW wait reason codes to communicate\nNto the operator.\nN\nNWhen stand-alone dump completes processing, stand-alone dump unloads\nNthe tape, if there is one, and enters a wait reason code X'410000'.\nN\nNExample: Using a load parm to perform a stand-alone dump\nN--------------------------------------------------------\nNIn this example, the dump is initialized using a load parm with no\nNconsole prompts.\nN\nIAMD083I AMDSADMP: STAND-ALONE DUMP INITIALIZED\nIAMD101I OUTPUT DEVICE: 0330 SADMP1 SYS1.SADMP\nISENSE ID DATA: FF 3990 E9 3390 0A BLOCKSIZE: 24,960\nIAMD005I DUMPING OF REAL STORAGE NOW IN PROGRESS.\nIAMD005I DUMPING OF PAGE FRAME TABLE COMPLETED.\nIAMD005I DUMPING OF REAL STORAGE FOR MINIMAL ASIDS COMPLETED.\nIAMD005I DUMPING OF REAL STORAGE FOR SUMMARY ASIDS COMPLETED.\nIAMD005I DUMPING OF REAL STORAGE FOR SWAPPED-IN ASIDS COMPLETED.\nIAMD005I DUMPING OF REAL STORAGE IN-USE REAL STORAGE COMPLETED.\nIAMD005I DUMPING OF REAL STORAGE SUSPENDED.\nIAMD108I DUMPING OF AUXILIARY STORAGE FOR MINIMAL ASIDS COMPLETED\nIAMD108I DUMPING OF AUXILIARY STORAGE FOR SUMMARY ASIDS COMPLETED\nIAMD108I DUMPING OF AUXILIARY STORAGE FOR SWAPPED-IN ASIDS COMPLETED\nIAMD108I DUMPING OF AUXILIARY STORAGE FOR SWAPPED-OUT ASIDS COMPLETED\nIAMD056I DUMPING OF AUXILLIARY STORAGE COMPLETED.\nIAMD005I DUMPING OF REAL STORAGE RESUMED.\nIAMD005I DUMPING OF AVAILABLE REAL STORAGE COMPLETED\nIAMD005I DUMPING OF REAL STORAGE COMPLETED.\nIAMD104I STAND-ALONE DUMP PROCESSING COMPLETED.\nI        DEVICE VOLUME USED DATA SET NAME\nI    1   0330   SADMP1 43%  SYS1.SADMP\nN\nN\nNProcedure B: Restart stand-alone dump\nN-------------------------------------\nNWhen you want to restart stand-alone dump, try procedure B before you\nNtry procedure C or D.\nN\nNA system restart does not always work, either because it occurs at a\nNpoint when stand-alone dump internal resources are not serialized, or\nNbecause stand-alone dump has been too heavily damaged to function. If\nNthe restart does not work, try procedure C (reIPL).\nN\nNIf a dump to a DASD data set is truncated because there is not enough\nNspace on the data set to hold the dump, use a system restart to dump\nNthe original data to tape. By causing a system restart, you can\nNreinitialize and restart a failing stand-alone dump program without\nNlosing the original data you wanted to dump.\nN\nN1. Perform a system restart on the processor that you IPLed\nN   stand-alone dump from.\nN\nN2. It either starts or it does not start.\nN\nN3. Resume using Procedure A.\nNProcedure C: ReIPL stand-alone dump\nN-----------------------------------\nITo run procedure C, repeat procedure A.\nN\nNWhen you reIPL stand-alone dump, the previous running of stand-alone\nNdump has already overlaid some parts of central storage and modified\nNthe page frame table.\nN\nNIf the virtual storage dump program was in control, a reIPL might not\nNdump paged-out virtual storage. The number of times that you can IPL\nNstand-alone dump to dump paged-out virtual storage is equal to the\nNnumber of processors present.\nN\nNIf the previous IPL of stand-alone dump did not load a wait state and\nNreason code of X'250000' or higher and the reIPL succeeds,\nNstand-alone dump usually completes processing as in procedure A. Some\nNstorage locations might not reflect the original contents of central\nNStorage because, during a previous IPL, stand-alone dump overlaid the\nNcontents. These locations include the absolute PSA and possibly other\nNPSAs.\nN\nN\nNProcedure D: Dump the stand-alone dump program\nN----------------------------------------------\nNUse a new IPL of stand-alone dump to debug stand-alone dump if\nNstand-alone dump fails.\nN\nMBUT WAIT, IF STAND-ALONE DUMP FAILED BEFORE, WHY SHOULD IT WORK NOW?\nM\nMAt this point you are in a sticky situation. Are you prepared to\nMwipe out the system dump you needed to get just to diagnose the\nMstand-alone dump program? I hope not.\nM\nMSo, what to do? You needed to plan ahead and have alternate dump to\nMdevices at the ready, tape or DASD.\nN\nNFollow procedure A at step 2 by performing a STORE STATUS instruction.\nNStand-alone dump follows procedure A steps 2 through 6, then issues\nNmessage AMD088D. This message allows the operator to stop the dump\nNafter central storage has been dumped or to continue dumping virtual\nNstorage.\nN\nNStand-alone self-dump\nN---------------------\nNWhen running a virtual storage dump and stand-alone dump error\nNrecovery detects errors in stand-alone dump, stand-alone dump can\nNtake a self-dump before proceeding. At most, stand-alone dump takes\nNtwelve self-dumps; after the twelfth request for a self-dump,\nNstand-alone dump stops taking self-dumps, but continues to count the\nNnumber of self-dump requests and continues to issue the AMD066I\nNmessage. After a large number of self-dump requests, stand-alone dump\nNterminates. Stand-alone dump places both the self-dump and the\nNoperating system dump onto the output tape or DASD.\nN\nNYou can use the LIST subcommand of IPCS to print stand-alone dump\nNself-dumps. The format of the subcommand is as follows,\nNwhere nnn = 001 - 012:\nN\nI  LIST address COMPDATA(AMDSAnnn)\nN\nN\nNRunning the stand-alone dump program in a sysplex\nN-------------------------------------------------\nNMethod A\nN--------\nNUse this method to take a stand-alone dump of an MVS system that\nNresides in a sysplex. Assume that the MVS system to be dumped is\nN\"SYSA\".\nN\nN1. IPL the stand-alone dump program on SYSA (see \"Running the\nN   stand-alone dump Program\").\nN\nN2. Issue VARY XCF,SYSA,OFFLINE from another active MVS system in the\nN   sysplex if message IXC402D or IXC102A is not already present.\nN\nN   You do not have to wait for the stand-alone dump to complete before\nN   issuing the VARY XCF,SYSA,OFFLINE command.\nN\nN3. Reply DOWN to message IXC402D or IXC102A.\nN\nINote: DO NOT perform a SYSTEM RESET in response to IXC402D, IXC102A\nI      after the IPL of stand-alone dump.\nN\nNMethod B\nN--------\nNIf there is a time delay between performing the STOP function and\nNIPLing the stand-alone dump program use this method. Using this\nNmethod expedites the release of resources held by system SYSA while\nNyou are preparing to IPL stand-alone dump.\nN\nN1. Perform the SYSTEM RESET-NORMAL function on SYSA.\nN\nN2. Issue VARY XCF,SYSA,OFFLINE from another active MVS system in the\nN   sysplex if message IXC402D or IXC102A is not already present.\nN\nN3. Reply DOWN to message IXC402D, IXC102A\nN\nN   Performing steps 2 and 3 immediately after doing the SYSTEM RESET\nN   will expedite sysplex recovery actions for SYSA and allow resources\nN   held by SYSA to be cleaned up quickly, thus enabling other systems\nN   in the sysplex to continue processing.\nN\nN4. IPL the stand-alone dump program.\nN\nNAfter a SYSTEM RESET is performed, MVS cannot automatically ISOLATE\nNsystem SYSA through SFM, so message IXC402D or IXC102A will be issued\nNafter the VARY XCF,SYSA,OFFLINE command or after the XCF failure\nNdetection interval expires. You must reply DOWN to IXC402D or IXC102A\nNbefore sysplex partitioning can complete.\nN\nN\nNCapturing a stand-alone dump quickly\nN------------------------------------\nN-> Minimize the operator actions\nN-> Get a partial stand-alone dump\nN   Use the EXTERNAL INTERRUPT key to terminate the dumping process.\nN   This causes a clean stop, closing the output dataset properly.\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0405": {"ttr": 46341, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00}\\x00}\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:12", "lines": 125, "newlines": 125, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0405\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Copying, viewing, and printing stand-alone dump output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180812\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNCopying, viewing, and printing stand-alone dump output\nN------------------------------------------------------\nNWhen stand-alone dump processing completes the dump, the output resides\nNon a tape volume, a DASD, or a combination of devices. The easiest way\nNto view the dump is to copy the dump to a DASD data set. When a\nNstand-alone dump resides on multiple devices and/or dump data sets, you\nNcan concatenate the dump into one data set. After the dump is available\nNon DASD, it can be viewed online using IPCS.\nN\nINote: If the dump resides in a DASD dump data set, IBM recommends that\nNyou copy the dump to another data set for IPCS processing and clear\nN(reinitialize) the dump data set using the AMDSADDD or IPCS SADMP dump\nNdata set utilities.\nN\nN\nNCopying the dump to a data set\nN------------------------------\nNIf you want to view the dump online, copy the dump to a data set.\nNThere are two tools you can use to copy the dump:\nN\nN-> Use the IPCS COPYDUMP subcommand when the IPCS environment has been\nN   set up on your system. This is the only option recommended if the\nN   dump was written to a multi-volume DASD data set.\nN\nN-> Use the IEBGENER utility when the IPCS environment has not been set\nN   up on your system. Many operators take a stand-alone dump so that\nN   the system programmer can view the dump. The operator does not\nN   require IPCS on the system because the operator will not be viewing\nN   the dump. Therefore, the operator should use the IEBGENER utility\nN   to copy the dump to a data set accessible by the system\nN   programmer's system.\nN\nN\nNViewing stand-alone dump output\nN-------------------------------\nNYou can view the stand-alone dump output at a terminal using IPCS. Do\nNthe following:\nN\nN1. Start an IPCS session.\nN\nN2. On the IPCS Primary Option Menu panel, select the SUBMIT option to\nN   copy the dump and do initial dump analysis.\nN\nN3. Return to the IPCS Primary Option Menu panel. Select the DEFAULTS\nN   option.\nN\nN4. IPCS displays the IPCS Default Values panel. Enter the name of the\nN   data set containing the dump on the Source line.\nN\nN5. Return to the IPCS Primary Option Menu panel. Select the BROWSE,\nN   ANALYZE, or COMMAND option to view the dump.\nN\nN\nNPrinting stand-alone dump output\nN--------------------------------\nNYou can print an analysis of the stand-alone dump or the entire dump\nNusing IPCS.\nN\nNTo print an analysis of the dump in batch mode:\nN-----------------------------------------------\nN\nN1. Start an IPCS session.\nN\nN2. On the IPCS Primary Option Menu panel, select the SUBMIT option to\nN   copy the dump and do initial dump analysis.\nN\nN3. On the IPCS Dump Batch Job Option Menu panel, enter the requested\nN   information.\nN\nN4. On the next panel, enter the sysout output class. IPCS writes the\nN   dump analysis to the specified output class.\nN\nN5. The system prints the dump in the printout of the output class.\nN\nNTo print the full dump in batch mode:\nN-------------------------------------\nN\nN1. Use IPCS CLIST BLSCBSAP.\nN\nNExample: Printing an unformatted stand-alone dump\nN-------------------------------------------------\nNThe following example runs an IPCS CLIST that:\nN\nN-> Copies the stand-alone dump from the tape data set defined in an\nN   IEFRDER DD statement to a cataloged, direct access data set named\nN   SA1DASD.\nN\nN-> Analyzes and formats the dump.\nN\nN-> Writes the formatted dump output to a data set named IPCSPRNT. A\nN   TSO/E CLIST used for IPCS should allocate this print output data\nN   set to a sysout print class, as follows:\nN\nI   ALLOCATE DDNAME(IPCSPRNT) SYSOUT(A)\nN\nNAfter the CLIST runs, the dump remains available in the SA1DASD data\nNset for supplementary formatting jobs.\nN\nD//PRINTJB JOB MSGLEVEL=1,REGION=800M\nD//IPCS   EXEC IPCS,CLIST=BLSCBSAP,DUMP=SA1DASD\nD//IEFPROC.IEFRDER DD DSN=SA1,DISP=OLD,UNIT=3490\nD//            VOL=SER=12345,LABEL=(1,NL)\nD//*\nD//* End of Job PRINTJB.\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0406": {"ttr": 46593, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00Z\\x00Z\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:35", "lines": 90, "newlines": 90, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0406\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Message output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180835\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNMessage output\nN--------------\nNThere are three types of message output from a stand-alone dump\nNprogram, as follows:\nN\nN-> MNOTES from the AMDSADMP macro\nN\nN-> Messages on the 3480, 3490, or 3590 display\nN\nN-> Messages on the system console or the operator console\nN\nN\nNMNOTES from the AMDSADMP macro\nN------------------------------\nMThese were produced when you created the stand-alone (IPLable)\nMprogram as shown in TSAD0403: Chapter 4: Stand-Alone dump -Generating\nMthe stand-alone dump program.\nN\nN\nNStand-alone dump messages on the 3480, 3490, or 3590 display\nN------------------------------------------------------------\nNWhen stand-alone dump output is sent to a 3480, 3490, or 3590 magnetic\nNtape subsystem, stand-alone dump uses the subsystem's eight-character\nNmessage display to inform and prompt the operator. The leftmost\nNposition on the message display indicates a requested operator action.\nNThe eighth position (rightmost) gives additional information.\nN\nNThe stand-alone dump messages that can appear on the display are:\nN-----------------------------------------------------------------\nN\nNDvolser (alternating)\nN\nNMSADMP#U Informs the operator that a labeled tape has been rejected\nN         and a new tape must be mounted.\nN\nNMSADMP#U (blinking) Requests that the operator mount a new tape.\nN\nNRSADMP#U (blinking) Indicates that the stand-alone dump program has\nN         finished writing to the tape.\nN\nNRSADMP# (alternating)\nN\nNMSADMP#U Informs the operator that an end-of-reel condition has\nN         occurred and a new tape must be mounted.\nN\nNSADMP# (blinking) Indicates that the tape is in use by\nNstand-alone dump.\nN\nNSADMP# (alternating)\nN\nNNTRDY Informs the operator that some type of intervention is required.\nN\nNThe symbols used in the messages are:\nN-------------------------------------\nN# A variable indicating the actual number of cartridges mounted for\nN  stand-alone dump. It is a decimal digit starting at 1 and increasing\nN  by 1 after each end-of-cartridge condition. When the # value exceeds\nN  9, it is reset to 0.\nN\nND Demount the tape and retain it for further system use, for example\nN  as a scratch tape. Stand-alone dump does not write on the tape.\nN\nNM Mount a new tape.\nN\nNR Demount the tape and retain it for future stand-alone dump use.\nN\nNU The new tape should not be file-protected.\nN\nNvolser A variable indicating the volume serial number on the existing\nN       tape label.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0407": {"ttr": 46595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:35", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0407\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 4.\nT-Alone dump\nT-Analyzing stand-alone dump output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180835\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 4: Stand-Alone dump\nN---------------------------\nNAnalyzing stand-alone dump output\nN---------------------------------\nMShip it to IBM or reference the manual as this topic is far too\nMcomplex to cover as a WISH.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD05": {"ttr": 46597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:35", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD05\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5: ABEND dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNAn ABEND dump shows the virtual storage predominately for an\nNUnauthorized program. Typically, a dump is requested when the program\nNcannot continue processing and abnormally ends. An operator can also\nNrequest an ABEND dump while ending a program or an address space.\nN\nNThe system can produce three types of ABEND dumps, one unformatted dump\nN(SYSMDUMP) and two formatted dumps (SYSABEND and SYSUDUMP). These dumps\nNare produced when a program cannot continue processing and a DD\nNstatement for an ABEND dump was included in the JCL for the job step\nNthat has ended. The data included is dependent on:\nN\nN-> Parameters supplied in the IEAABD00, IEADMR00, and IEADMP00\nN   parmlib members for SYSABENDs, SYSMDUMPs, and SYSUDUMPs,\nN   respectively.\nN\nN-> A determination by the system\nN\nN-> ABEND, CALLRTM, or SETRP macro dump options\nN\nN-> IEAVTABX, IEAVADFM, or IEAVADUS installation exit processing\nN\nNIBM recommends the use of SYSMDUMP, the unformatted dump. Unformatted\nNdumping is more efficient because only the storage requested is written\nNto the data set, which allows the application to capture diagnostic\nNdata and be brought back online faster. Also, pre-formatted dumps force\nNthe system to select a single set of reports, too many for the\nNdiagnosis of many problems, and too few for others. Unformatted dumps\nNallow the analyst to determine, from a wide variety of reports, what\nNinformation to use and how it is presented.\nN\nNUse SYSUDUMP for diagnosis of program problems that need simple problem\nNdata. A SYSABEND dump, through the IBM supplied defaults, supplies more\nNof the system information related to the application program's\nNprocessing than a SYSUDUMP. The additional information may be better\nNsuited for complex problem diagnosis.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0501": {"ttr": 46599, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:36", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0501\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5.\nT-Synopsis of ABEND dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180836\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNSynopsis of ABEND dumps\nN-----------------------\nNUse the following table as a quick reference for the three types of\nNABEND dumps. If you need further information about ABEND dumps,\nNrefer to the sections following this table.\nM\nMSee the great table in the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0502": {"ttr": 46601, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00F\\x00F\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:36", "lines": 70, "newlines": 70, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0502\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5.\nT-Obtaining ABEND dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180836\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNObtaining ABEND dumps\nN---------------------\nNYou can obtain SYSABEND, SYSUDUMP, and SYSMDUMP dumps using one\nNprocess. To obtain a specific type of ABEND dump, specify the\nNcorrect DD statement in your JCL:\nN\nN-> For SYSABEND dumps:\nD//SYSABEND DD ...\nN\nN-> For SYSUDUMP dumps:\nD//SYSUDUMP DD ...\nN\nN-> For SYSMDUMP dumps:\nD//SYSMDUMP DD ...\nN\nN\nNSecurity considerations\nN-----------------------\nNTwo security FACILITY classes are provided that allow installations to\nNpermit ABEND dumps to contain authorized data:\nN\nNIEAABD.DUMPAUTH For access to programs that are protected by the\nN                PROGRAM facility.\nN\nNIEAABD.DMPAKEY  For programs that execute in authorized keys.\nN\nN\nNNaturally occurring dump:\nN-------------------------\nNYour code chokes and you get a dump.\nN\nN\nNForcibly requesting a dump:\nN---------------------------\nNExample: Canceling a job and requesting a dump\nN----------------------------------------------\nNTo cancel a job and request a dump, ask the operator to use either of\nNthe following:\nN\nD  CANCEL BADJOB,DUMP\nN\nD  CANCEL STARTING,A=1234,DUMP\nN\nNExample: Canceling a userid and requesting a dump\nN-------------------------------------------------\nNTo cancel a userid and request a dump, ask the operator to use either\nNof the following:\nN\nD  CANCEL U=MYID3,DUMP\nN\nD  CANCEL U=*LOGON*,A=5678,DUMP\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0503": {"ttr": 46603, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00K\\x00K\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:36", "lines": 75, "newlines": 75, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0503\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5.\nT-Printing and viewing dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180836\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNPrinting and viewing dumps\nN--------------------------\nNYou can print or view the different types of ABEND dumps as follows:\nN\nNSYSABEND and SYSUDUMP dumps\nN---------------------------\nN\nNThese two dumps are formatted as they are created. They can be:\nN\nN-> In a SYSOUT data set. The system can print the dump when printing\nN   the output class. To view at a terminal, use a facility that allows\nN   the viewing of JES SPOOL data sets.\nN\nN-> On a tape or direct access data set. Print the dump in a separate\nN   job or job step or view the dump at a terminal by browsing the data\nN   set containing the dump.\nN\nN   A convenient way to print the dump is in a later job step that runs\nN   only if an earlier job step abnormally ends and, thus, requests a\nN   dump. For this, use the JCL EXEC statement COND parameter.\nN\nN-> Sent directly to a printer. Note this is not recommended; the\nN   printer cannot be used for anything else while the job step is\nN   running, whether a dump is written or not.\nN\nNExample: Using IEBPTPCH to print a dump\nN---------------------------------------\nNThe following JCL uses the IEBPTPCH facility to print a formatted dump\nNdata set. In this example, a SYSABEND dump is printed. The same JCL\nNcan be used for a SYSUDUMP. Because the system formats the dump when\nNcreating it, the IEBPTPCH utility program can print the dump.\nM\nMIn the age of reduced printing, view the data set!\nN\nNAssume the dump is in a data set named DUMPDS on tape.\nN\nI//YOURPGM EXEC PGM=ABENDING,...\nI//SYSABEND  DD DISP=(NEW,CATLG),DSN=YOURPGM.APPLD.DUMP,\nI//             UNIT=TAPE,...\nD...\nD//PRINT   EXEC PGM=IEBPTPCH,COND=ONLY\nD//SYSIN     DD *\nD    PRINT PREFORM=A,TYPORG=PS\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DISP=OLD,DSN=YOURPGM.APPLD.DUMP\nD//SYSUT2    DD SYSOUT=*\nN\nN\nNSYSMDUMP dumps\nN--------------\nNThis dump is unformatted when created. The system can write the dump\nNto tape or direct access. Use IPCS to format the dump and then view\nNit at a terminal or print it. SYSMDUMP dumps are especially useful for\nNdiagnosing errors because IPCS can produce specific information for\nNspecific requests.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0504": {"ttr": 46605, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x007\\x007\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:36", "lines": 55, "newlines": 55, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0504\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5.\nT-Contents of ABEND dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180836\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNContents of ABEND dumps\nN-----------------------\nNYou can specify the contents of an ABEND dump by specifying parameters\nNon the ddname in the JCL for the program. This topic discusses the\nNIBM-supplied default contents and contents available through\nNcustomization.\nM\nMThat is a badly written statement since a DDNAME never has parameters.\nMWhat the author meant to write is that the DDNAME affects what gets\nMdumped.\nN\nNAll three ABEND dumps contain a summary dump, although the SYSMDUMP\nNsummary dump contains less information than the SYSABEND and SYSUDUMP\nNsummary dumps. The SYSUDUMP consists of only the summary dump. The\nNSYSABEND dump also contains task data, while the SYSMDUMP also contains\nNsystem data. The SYSMDUMP dump is a synchronous SVC dump and contains\nNdata similar to the data in an SVC dump.\nN\nN\nNDetermining current ABEND dump options\nN--------------------------------------\nNUse a DISPLAY DUMP operator command to get the dump mode and options in\nNeffect for SVC dumps and ABEND SYSABEND, SYSMDUMP, and SYSUDUMP\nNdumps. The system displays the mode and options in message IEE857I.\nN\nNExample: Determining the mode and options\nN-----------------------------------------\nNTo request the mode and options, enter:\nN\nI  DISPLAY DUMP,OPTIONS\nN\nNIf the options listed are not the ones desired, use a CHNGDUMP operator\nNcommand to change them.\nN\nMThe manual contains another copy of the table that shows what each\nMoption dumps. You might want to look at WISH TSAD0204.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0505": {"ttr": 46607, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00<\\x00<\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:37", "lines": 60, "newlines": 60, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0505\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5.\nT-Customizing ABEND dump contents\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180837\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNCustomizing ABEND dump contents\nN-------------------------------\nNThe ddname of the data set for the ABEND dump determines how the\nNcontents can be customized.\nN\nNThe system determines the contents of a particular ABEND dump from the\nNoptions list the system maintains for the type of dump. The dump\nNoptions list can be customized, cumulatively, by all the ways shown in\nNthe following tables. Thus, for example, a SYSMDUMP ABEND dump written\nNfor an ABEND macro can be completely different from the default\nNSYSMDUMP ABEND dump described in this document.\nN\nMAlso listed for all three types are changing your macro that invoked\nMthe dump (not very likely in a real world scenario), coding recovery\nMroutines, and through installation exits.\nN\nNCustomizing SYSABEND dump contents\nN----------------------------------\nNReplace IEAABD00 parmlib member. Change occurs: At system\nNinitialization.\nN\nNEntering CHNGDUMP operator command with SYSABEND parameter on a console\nNwith master authority.\nN\nN\nNCustomizing SYSMDUMP dump contents\nN----------------------------------\nNReplacing IEADMR00 parmlib member. Change occurs: At system\nNinitialization\nN\nNEntering CHNGDUMP operator command with SYSMDUMP parameter on a\nNconsole with master authority.\nN\nN\nNCustomizing SYSUDUMP dump contents\nN----------------------------------\nNReplacing IEADMP00 parmlib member. Change occurs: At system\nNinitialization.\nN\nNEntering CHNGDUMP operator command with SYSUDUMP parameter on a console\nNwith master authority.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0506": {"ttr": 46609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x008\\x008\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:37", "lines": 56, "newlines": 56, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0506\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 5.\nT-Analyzing an ABEND dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180837\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 5: ABEND dump\nN---------------------\nNAnalyzing an ABEND dump\nN-----------------------\nNTo analyze a SYSMDUMP, see TSAD02 in the manual.\nN\nN\nNTo analyze a SYSABEND or SYSUDUMP, take the following steps:\nN\nNAnalysis Procedure\nN------------------\nN1. Collect and analyze logrec error records.\nN\nN2. Collect and analyze messages about the problem.\nN\nN3. Analyze the dump, as described in the following steps.\nN\nN  A. Obtain the abend code, reason code, job name, step name, and\nN     program status word (PSW) from the dump title at the\nN     beginning of the dump.\nN\nN  B. Analyze the RTM2WA.\nN\nN  C. Analyze the dump for the program name.\nN\nN  D.Locate the failing program module in the hexadecimal dump.\nN\nN  E. Find the instruction that caused the abend.\nN\nN  F. For an abend from an SVC or system I/O routine, find the last\nN     program instruction.\nN\nN  G. For an abend from an SVC or system I/O routine, determine the\nN     cause of the abend.\nN\nN  H. For a program interrupt, determine the cause of the abend.\nN\nN  I. For an abend in a cross memory environment follow the steps in\nN     the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD06": {"ttr": 46611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:37", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD06\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 6: SNAP dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 6: SNAP Dump\nN--------------------\nNA SNAP dump shows virtual storage areas that a program, while running,\nNrequests the system to dump. A SNAP dump, therefore, is written while a\nNprogram runs, rather than during abnormal end. The program can ask for\nNa dump of as little as a one byte field to as much as all of the\nNstorage assigned to the current job step. The program can also ask for\nNsome system data in the dump.\nN\nNA SNAP dump is especially useful when testing a program. A program can\nNdump one or more fields repeatedly to let the programmer check\nNintermediate steps in calculations. For example, if a program being\nNdeveloped produces incorrect results, requests for SNAP dumps can be\nNAdded to the program to dump individual variables. The first time that\nNincorrect storage is encountered should narrow down the section of code\nNcausing the error.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD06UA": {"ttr": 46849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x01\\x13\\x01\\x13\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:37", "lines": 275, "newlines": 275, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD06UA\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 6.\nT-User provided sample\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180837\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 6: SNAP Dump\nN--------------------\nNUser provided sample\nN--------------------\nNKenneth Tomiak put together this sample that can be used to learn\nNhow to use the SNAP macro.\nN\nD//jobname JOB ('CBT','TSAD'),'TSAD06UA: SNAP DUMP',\nD//             NOTIFY=&SYSUID,\nD//             CLASS=B,REGION=6M,\nD//             MSGCLASS=X,COND=(1,LT)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* ===================================================================\nD//*\nD//* Dataset: KTOMIAK.DEMO.CNTL(TSAD06UA)\nD//* Contact: \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nD//* Purpose: This job demonstrates how to use the SNAP macro in your\nD//*          HLASM code.\nD//*\nD//* -------------------------------------------------------------------\nD//*\nD//* History of Modifications\nD//* ========================\nD//* vv.mm When     Who / What you did ... (Newest change at the top.)\nD//* ----- -------- ----------------------------------------------------\nD//* 01.00 20170902 \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nD//*                1) Original base code.\nD//* ----- -------- ----------------------------------------------------\nD//*\nD//* -------------------------------------------------------------------\nD//* ===================================================================\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//*\nD//OUTDS OUTPUT CLASS=X,\nD//             DEFAULT=Y,\nD//             OUTDISP=WRITE\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Assemble the source into an OBJECT deck.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#05 EXEC PGM=ASMA90,\nD//             PARM=(OBJECT,NODECK,NOESD,NORLD)\nD//SYSIN     DD *\nDTSAD06UA TITLE 'DEMONSTRATE USING SNAP TO DEBUG ERRORS'\nD*\nD*\nD* Thanks go to http://planetmvs.com/hex/ for\nD* a decent working example of SNAP.\nD*\nD*\nD* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD* ===================================================================\nD*\nD* Dataset: KTOMIAK.DEMO.HLASM(TSAD06UA)\nD* Purpose: This job demonstrates how to use the SNAP macro in your\nD*          HLASM code.\nD*\nD* -------------------------------------------------------------------\nD*\nD* History of Modifications\nD* ========================\nD* vv.mm When     Who / What you did ... (Newest change at the top.)\nD* ----- -------- ----------------------------------------------------\nD* 01.00 20170902 \"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nD*                1) Original base code.\nD* ----- -------- ----------------------------------------------------\nD*\nD* -------------------------------------------------------------------\nD* ===================================================================\nD* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD*\nDTSAD06UA AMODE 31\nDTSAD06UA RMODE 24\nDTSAD06UA CSECT\nD         SAVE  (14,12),,'TSAD06UA V1.0.0 &SYSDATE &SYSTIME'\nD         LR    R12,R15\nD         USING TSAD06UA,R12\nD         LR    R15,R13             old save area\nD         LA    R13,SAVEAREA        new save area\nD         ST    R13,8(,R15)         new pointer\nD         ST    R15,4(,R13)         old pointer\nD*\nD         TITLE 'MAIN PROCESSING'\nD*\nD         OPEN  (SNAPDCB,(OUTPUT))         Open SNAP DCB\nD         OPEN  (SYSPRINT,OUTPUT)          Open SYSPRINT\nD         MVC   OUTLINE,PRINT1\nD         PUT   SYSPRINT,OUTLINE\nD*\nD         MVC   OUTLINE,PRINT2\nD         PUT   SYSPRINT,OUTLINE\nD*\nD         LA    R2,DATAB                   Beginning of Area\nD         LA    R3,DATAE                   Get to the end\nD         SNAP  DCB=SNAPDCB,ID=1,          SNAP the storage             +\nD               STORAGE=((2),(3))\nD*        SNAP  DCB=(8),ID=3,SDATA=CB\nD*\nD         MVC   OUTLINE,PRINT9\nD         PUT   SYSPRINT,OUTLINE\nD         MVC   NINES,THREES\nD         MVC   OUTLINE,PRINT3\nD         PUT   SYSPRINT,OUTLINE\nD*\nD         SNAP  DCB=SNAPDCB,ID=2,          SNAP the storage             +\nD               STORAGE=((2),(3))\nD*\nD         MVC   OUTLINE,PRINT4\nD         PUT   SYSPRINT,OUTLINE\nD         MVC   OUTLINE,BLANK1\nD         PUT   SYSPRINT,OUTLINE\nD         MVC   OUTLINE,THANK1\nD         PUT   SYSPRINT,OUTLINE\nD         MVC   OUTLINE,THANK2\nD         PUT   SYSPRINT,OUTLINE\nD         CLOSE SYSPRINT\nD*\nD         TITLE 'NORMAL END OF PROCESSING'\nD*\nD_EXIT    EQU *\nD         CLOSE SNAPDCB                    Close the SNAP DCB\nD         L     R13,4(,R13)         back a save area\nD         SAVE  (1)                 save program entry point\nD         RETURN (14,12),T,RC=(15)\nD*\nD         EJECT\nD*\nD         TITLE 'Constants, variables, DSECTs, and EQUATEs'\nDDATAB    EQU   *\nD*\nD*      -------------------------------------------------------\nD*      | Constants                                           |\nD*      -------------------------------------------------------\nDCOPYRGHT DC    C'Copyright: Kenneth Tomiak'\nD*\nD         DC    Cl12'PRINT--LINES'\nDPRINT1   DC    CL133'0TSAD06UA PROGRAM STARTED'\nDPRINT2   DC    CL133'1TSAD06UA First snap'\nDPRINT9   DC    CL133'1TSAD06UA MVC   NINES,THREES follows'\nDPRINT3   DC    CL133'1TSAD06UA Second snap'\nDPRINT4   DC    CL133'1TSAD06UA Close SYSPRINT'\nDBLANK1   DC    CL133' '\nDTHANK1   DC    CL133'2Thanks go to http://planetmvs.com/hex/ for'\nDTHANK2   DC    CL133'1a decent working example of SNAP.'\nD         DC    Cl12'PRINT--LINES'\nD*\nD*      -------------------------------------------------------\nD*      | Variables                                           |\nD*      -------------------------------------------------------\nD*\nD         DC    Cl9'VARIABLES'\nD         DS    0D\nD         DC    CL8'SAVEAREA'\nDSAVEAREA DC    18F'0'              save area\nD*\nD         DC    C'(PL8) 333 follows:'\nDTHREES   DC    PL8'333'\nD         DC    C'(PL8) 999 follows:'\nDNINES    DC    PL8'999'\nD*\nD         DC    C'SILLY BUFFER USE WHEN PUT COULD USE DIRECTLY THE PRINT+\nD                LINES DEFINED ABOVE'\nDOUTLINE  DS    0CL133' '\nDOUTANSI  DS    CL1\nDOUTBUFF  DS    CL132\nD*\nD*      -------------------------------------------------------\nD*      | Literal pool                                        |\nD*      -------------------------------------------------------\nD*\nD         DC    CL8'LTORG   '\nD         LTORG ,\nD*\nD*      -------------------------------------------------------\nD*      | Dsects                                              |\nD*      -------------------------------------------------------\nD*\nD         DC    CL8'DSECTS  '\nDSYSPRINT DCB   DDNAME=SYSPRINT,                                        M\nD               MACRF=PM,                                               O\nD               DSORG=PS,                                               R\nD               RECFM=FBA,                                              E\nD               BLKSIZE=0,                                              +\nD               LRECL=133\nD*\nDSNAPDCB  DCB   DDNAME=SNAPSHOT,                                        M\nD               MACRF=(W),                                              O\nD               DSORG=PS,                                               R\nD               RECFM=VBA,                                              E\nD               BLKSIZE=1632,                                           +\nD               LRECL=125\nD*\nD*      -------------------------------------------------------\nD*      | Equates                                             |\nD*      -------------------------------------------------------\nD*\nD         DC    CL8'EQUATES '\nD         YREGS ,                   register equates\nD*\nDDATAE    EQU   *-1\nD*\nD         END   ,\nD//SYSPRINT  DD SYSOUT=*                                  )\nD//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\nD//SYSUT1    DD UNIT=VIO,SPACE=(CYL,2)\nD//SYSLIN    DD DISP=(NEW,PASS),DSN=&&ASMOUT,\nD//             UNIT=SYSALLDA,SPACE=(TRK,(15,15,0)),\nD//             DCB=(DSORG=PS,RECFM=FB,BLKSIZE=0,LRECL=80)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Bind the OBJECT deck into a load module.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST02#05 EXEC PGM=IEWBLINK,\nD//             PARM='NCAL,MAP,LET,LIST,COMPAT=LKED'\nD//SYSLIN    DD DISP=(OLD,DELETE),DSN=&&ASMOUT\nD//          DD *\nD         IDENTIFY TSAD0690('IDR: LINKED FOR DEMO')\nD         ENTRY   TSAD06UA\nD         NAME    TSAD06UA(R)\nD/*\nD//SYSPRINT  DD DISP=SHR,DSN=&SYSUID..DEMO.IEWBLINK(TSAD06UA)\nD//SYSUT1    DD UNIT=SYSDA,SPACE=(2048,(200,20))\nD//SYSLMOD   DD DISP=OLD,DSN=&SYSUID..DEMO.LOADLIB\nD//*            DCB=(DSORG=PO,RECFM=U,BLKSIZE=32760,LRECL=0)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Delete SNAPSHOT for rerun.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST03#05 EXEC PGM=IEFBR14\nD//SNAPSHOT  DD DISP=(MOD,DELETE),DSN=&SYSUID..DEMO.SNAPSHOT,\nD//             UNIT=SYSALLDA,SPACE=(TRK,(1))\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Execute the load module.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST04#05 EXEC PGM=TSAD06UA\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..DEMO.LOADLIB\nD//SYSPRINT  DD SYSOUT=*,\nD//             DCB=BLKSIZE=0\nD//SNAPSHOT  DD DISP=(NEW,CATLG),DSN=&SYSUID..DEMO.SNAPSHOT,\nD//             UNIT=SYSALLDA,SPACE=(TRK,(200,200))\nD//*            DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=1632,LRECL=125)\nD//SYSABEND  DD SYSOUT=*\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Print the SNAP dump contents.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST05#05 EXEC PGM=IDCAMS\nD//SYSIN     DD *\nD  REPRO INFILE(SYSUT1) OUTFILE(SNAPOUT)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DISP=OLD,DSN=&SYSUID..DEMO.SNAPSHOT\nD//SNAPOUT   DD SYSOUT=*\nD//*\nD//* End of Job TSAD06UA\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0601": {"ttr": 46851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00z\\x00z\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:38", "lines": 122, "newlines": 122, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0601\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 6.\nT-Obtaining SNAP dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180838\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 6: SNAP Dump\nN--------------------\nNObtaining SNAP dumps\nN--------------------\nNProvide a data set to receive the dump, then arrange to print the\nNdump. The SNAP or SNAPX macros in a program can place their dumps in\nNthe same or different data sets; the DCB parameter in each SNAP or\nNSNAPX macro indicates the data set.\nN\nNObtain a SNAP dump by taking the following steps:\nN-------------------------------------------------\nN1. Code a DD statement in the JCL for the job step that runs the\nN   problem program to be dumped with a ddname other than SYSUDUMP,\nN   SYSABEND, SYSMDUMP, or another restricted ddname.\nN\nN2. In the problem program:\nN   a. Specify a data control block (DCB) for the data set to receive\nN      the dump. For a standard dump, which has 120 characters per\nN      line, the DCB must specify:\nN\nN      DDNAME=anyname but SYSABEND, SYSMDUMP or SYSUDUMP\nN      BLKSIZE=882 or 1632\nM      Find the better BLKSIZE for where you capture the dump.\nN      DSORG=PS\nN      LRECL=125\nI            125 - 4 (rdw) - 1 (printer control code) leaves 120\nI            characters for the report lines.\nN      MACRF=(W)\nN      RECFM=VBA\nN\nN      For a high-density dump, which has 204 characters per line and\nN      will be printed on an APA 3800 printer, the DCB must specify:\nN\nN      DDNAME=anyname but SYSABEND, SYSMDUMP or SYSUDUMP\nN      BLKSIZE=1470 or 2724\nM      Find the better BLKSIZE for where you capture the dump.\nN      DSORG=PS\nN      LRECL=209\nI            209 - 4 (rdw) - 1 (printer control code) leaves 204\nI            characters for the report lines.\nN      MACRF=(W)\nN      RECFM=VBA\nN\nN   b. Code an OPEN macro to open the DCB. Before you issue the SNAP\nN      or SNAPX macro, you must open the DCB that you designate on the\nN      DCB parameter, and ensure that the DCB is not closed until the\nN      macro returns control.\nN\nN   c. Code a SNAP or SNAPX assembler macro to request the dump. Repeat\nN      this macro in the program as many times as wanted, changing\nN      the dump identifier for a unique dump. The system writes all the\nN      dumps that specify the same DCB to the same data set.\nN\nNExample: Coding the SNAP Macro\nN------------------------------\nNIn the following example, the SNAP macro requests a dump of a\nNstorage area, with the DCB address in register 3, a dump identifier of\nN245, the storage area's starting address in register 4, and the ending\nNaddress in register 5:\nN\nD         SNAP DCB=(3),ID=245,STORAGE=((4),(5))\nN\nN   d. Close the DCB with a CLOSE assembler macro.\nN\nNExample: Two SNAP Dump Requests in a Program\nN--------------------------------------------\nNThe following example shows a problem program that requests two SNAP\nNdumps. Both SNAP macros in the example specify the same data control\nNblock (DCB) to place both dumps in the same data set. Each dump has a\nNdifferent identifier: PIC3 for the first dump, PIC4 for the second.\nNBoth dumps show the same areas: the control blocks. Thus, the\nNprogrammer can see these areas at two points in the program's\nNprocessing.\nN\nDSNAPDCB  DCB BLKSIZE=882,DSORG=PS,LRECL=125,MACRF=(W),RECFM=VBA\nD         ...\nD         OPEN SNAPDCB,OUTPUT\nD         LA 3,SNAPDCB\nD         SNAP DCB=(3),ID=PIC3,SDATA=CB\nD         ...\nD         SNAP DCB=(3),ID=PIC4,SDATA=CB\nD         CLOSE SNAPDCB\nN\nN3. Print or view the data set. The output of the SNAP or SNAPX macro\nN   is a standard EBCDIC data set with ANSII characters in column one.\nN\nNExample: Printing a SNAP Dump\nN-----------------------------\nNThe following JCL prints a SNAP dump. Because the system formats the\nNdump when creating it, the IEBPTPCH utility program can print the\nNdump. The dump is in the SNAPSHOT data set.\nN\nD//JOBCARD ...\nD//RUNTIME EXEC PGM=YOURPGM\nD//SNAPDCB   DD DISP=(NEW,CATLG),DSN=SNAPSHOT,\nD//             UNIT=SYSALLDA,SPACE=(TRK,(200,200))\nD//*            DCB=what is in the program.\nD//*\nD//PRINT   EXEC PGM=IEBPTPCH\nD//SYSIN     DD *\nD  PRINT TYPORG=PS\nD/*\nD//SYSPRINT  DD SYSOUT=A\nD//SYSUT1    DD DISP=OLD,DSN=SNAPSHOT\nD//SYSUT2    DD SYSOUT=A\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0602": {"ttr": 46853, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:38", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0602\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 6.\nT-Customizing SNAP dump contents\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-180838\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 6: SNAP Dump\nN--------------------\nNCustomizing SNAP dump contents\nN------------------------------\nNThe parameters on the SNAP or SNAPX macro determine the dump contents.\nN\nNSee TSAD0205 Tailoring SVC dumps for the list of parameters.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD07": {"ttr": 46855, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x08\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:08:38", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD07\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7: The dump grab bag\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNA dump contains information about an error that can help you identify\nNa problem type. Using interactive problem control system (IPCS), the\nNinformation about the error is formatted to provide a quick and\nNeffective method of retrieval.\nN\nNThe hints that follow apply to processing all kinds of dumps: SVC\nNdumps, stand-alone dumps, and SYSMDUMP dumps.\nN\nN\nNMajor topics cover the following:\nN\nN Problem data for storage overlays\nN Problem data from the linkage stack\nN Problem data for modules\nN Problem data from recovery work areas\nN Problem data for ACR\nN Problem data for machine checks\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0701": {"ttr": 46857, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x10\\x00*\\x00*\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:10:16", "lines": 42, "newlines": 42, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0701\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data for storage overlays\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181016\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data for storage overlays\nN---------------------------------\nNAlways be aware of the possibility of a storage overlay when analyzing\nNa dump. System problems in MVS are often caused by storage overlays\nNthat destroy data, control blocks, or executable code. The results of\nNsuch an overlay vary. For example:\nN\nN-> The system detects an error and issues an abend code, yet the error\nN   can be isolated to an address space. Isolating the error is\nN   important in discovering whether the overlay is in global or local\nN   storage.\nN\nN-> Referencing the data or instructions can cause an immediate error\nN   such as a specification exception (abend X'0C4') or operation code\nN   exception (abend X'0C1').\nN\nN-> The bad data is used to reference a second location, which then\nN   causes another error.\nN\nNWhen you recognize that the contents of a storage location are not\nNvalid and subsequently recognize the bit pattern as a certain control\nNblock or piece of data, you generally can identify the erroneous\nNprocess/component and start a detailed analysis.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0702": {"ttr": 46859, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x13\\x00'\\x00'\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:13:38", "lines": 39, "newlines": 39, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0702\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data for storage overlays\nT-Analyzing the damaged area\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181338\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data for storage overlays\nN---------------------------------\nN\nNAnalyzing the damaged area\nN--------------------------\nNFirst, determine the extent of the bad data. Look for EBCDIC data or\nNmodule addresses in storage to identify the owner. Any type of pattern\nNin storage can indicate an error and identify the program that is using\nNthe damaged storage. Look at the data on both sides of the\nNobviously bad areas. See if the length of the bad area is familiar;\nNthat is, can you relate the length to a known control block\nNlength, data size, MVC length? If so, check various offsets to\nNdetermine their contents and, if you recognize some, try to determine\nNthe exact control block.\nN\nNRepetition of a pattern can indicate a bad process. If you can\nNrecognize the bad data you might be able to relate that data to\nNthe component or module that is causing the error. This provides\nNa starting point for further analysis.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0703": {"ttr": 46861, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x15\\x001\\x001\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:15:15", "lines": 49, "newlines": 49, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0703\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data for storage overlays\nT-Common bad addresses\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181515\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data for storage overlays\nN---------------------------------\nN\nNCommon bad addresses\nN--------------------\nNThe following are commonly known as bad addresses. If you recognize\nNthese in the code you are diagnosing, focus your problem source\nNidentification on these areas:\nN\nN-> X'000C0000', X'040C0000', or X'070C0000', and one of these addresses\nN   plus some offset. These are generally the result of some code using\nN   0 as the base register for a control block and subsequently loading\nN   a pointer from 0 plus an offset, thereby picking up the first\nN   half of a PSW in the PSA.\nN\nN   Look for storage overlays in code pointed to by an old PSW. These\nN   overlays result when 0 plus an offset cause the second half of a PSW\nN   to be used as a pointer.\nN\nN-> X'C00', X'D00', X'D20', X'D28', X'D40', and other pointers to fields\nN   in the normal functional recovery routine (FRR) stack. Routines\nN   often lose the contents of a register during a SETFRR macro\nN   expansion and incorrectly use the address of the 24-byte work\nN   area returned from the expansion.\nN\nN-> Register save areas. Storage might be overlaid by code doing a store\nN   multiple (STM) instruction with a bad register save area address. In\nN   this case, the registers saved are often useful in determining the\nN   component or module at fault.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0704": {"ttr": 47105, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x15\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:15:16", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0704\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data from the linkage stack\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181516\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data from the linkage stack\nN-----------------------------------\nNThe linkage stack is used to identify a program that requested a system\nNservice, if the service was entered by a branch instruction.\nN\nNExample: Viewing a linkage stack entry\nN--------------------------------------\nNTo see the linkage stack entry that is associated with address space\nNidentifier (ASID) X'1A', use the IPCS subcommand:\nN\nISUMMARY FORMAT ASID(X'1a')\nN\nNMany system services are called through branches. For branch entry\nNservices, use register 14 to identify the calling program. Look for\nNthe problem in the calling program.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0705": {"ttr": 47107, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x15\\x00.\\x00.\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:15:44", "lines": 46, "newlines": 46, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0705\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data for modules\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181544\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data for modules\nN------------------------\nNFor a module, the system saves and restores status from different\nNlocations, depending on the processing mode of the module when it lost\nNcontrol. Use the IPCS STATUS CPU subcommand to find out the mode of the\nNmodule that had been currently running for each processor. Use\nNthe saved status as problem data for diagnosis.\nN\nNProcessing modes\nN----------------\nNThe processing modes follow. Code always runs in one or more of these\nNmodes. For example, code running in task or service request block (SRB)\nNmode can also be either locally locked or physically disabled.\nN\nN-> Task mode\nN\nN-> SRB Mode\nN\nN-> Physically disabled mode\nN\nN-> Locked mode\nN\nN-> Cross memory mode\nN\nN-> Access register (AR) mode\nN\nMSee the manual if you need to know more about processing modes.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0706": {"ttr": 47109, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x16\\x009\\x009\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:16:03", "lines": 57, "newlines": 57, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0706\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data from recovery work areas\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181603\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data from recovery work areas\nN-------------------------------------\nNYou can use the recovery work area (RWA) to find the failing module. In\nNmost cases, you would use the TCB and RB structure to find the failing\nNmodule instead of the RWA. Use the RWA in the following situations:\nN\nN-> When an SVC dump is requested in a SLIP trap. In this dump, the\nN   current status at the time of the problem is in the recovery save\nN   areas or in the SDUMP SQA 4K buffer.\nN\nN-> When the problem is in the recovery process itself.\nN\nN-> When a stand-alone dump is written because of a suspected loop.\nN\nN\nNThe recovery work areas are:\nN\nN-> Logrec records\nN\nN-> Logrec buffer in the system: obtained by an IPCS\nN\nIVERBEXIT LOGDATA\nN\nNsubcommand\nN\nN-> System diagnostic work area (SDWA), including the variable recording\nN   area (VRA) formatted in logrec records and in the logrec buffer.\nN\nN-> Functional recovery routine (FRR) stacks: described in the\nN   next topic.\nN\nN-> Recovery termination manager (RTM) data areas, including the RTM2\nN   work area (RTM2WA): formatted by a SUMMARY FORMAT subcommand or\nN   obtained in a formatted ABEND or SNAP dump by the ERR option.\nN\nNThe RTM2WA and SDWA blocks contain registers, PSW, and other time of\nNproblem information. Use these blocks in diagnosis when they are\nNassociated with a task control block (TCB).\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0707": {"ttr": 47111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x16\\x00-\\x00-\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:16:38", "lines": 45, "newlines": 45, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0707\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data for ACR\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181638\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data for ACR\nN--------------------\nNWhen alternate CPU recovery (ACR) is active at the time of the dump,\nNthe search argument in IPCS STATUS WORKSHEET output contains\nNthe symptom:\nN\nIFLDS/CSDACR\nN\nN\nNPre-Processing phase data\nN-------------------------\nN\nMRefer to the manual for a set ot actions to follow.\nN\nN\nNPost-Processing phase data\nN--------------------------\nNACR issues message IEA858E when it completes and resets the CSDACR flag\nNto X'00'.\nN\nN\nNData obtained by IPCS\nN---------------------\nNUse the following IPCS subcommand to see all the LCCAs and the CSD:\nN\nISTATUS CPU DATA WORKSHEET\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0708": {"ttr": 47113, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:03", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0708\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 7.\nT-Problem data for machine checks\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181903\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 7: The dump grab bag\nN----------------------------\nNProblem data for machine checks\nN-------------------------------\nNThe hardware uses a machine check interruption to tell the control\nNprogram that it has detected a hardware malfunction. Machine checks\nNvary considerably in their impact on software processing:\nN\nN-> Soft errors: Some machine checks notify software that the\nN   processor detected and corrected a hardware problem that\nN   required no software recovery action.\nN\nN-> Hard errors: Other hardware problems detected by a processor\nN   require software-initiated action for damage repair. Hard errors\nN   also require software recovery to verify the integrity of the\nN   process that experienced the failure.\nN\nNThe machine check interrupt code (MCIC) in the PSA FLCMCIC field\nNdescribes the error causing the interrupt. An MCIC can have more than\nNone bit on to indicate more than one failing condition.\nN\nNFor a machine check, the system writes a logrec error record. The error\nNrecord contains the MCIC, except when:\nN\nN-> The LRBMTCKS bit in field LRBMTERM of the logrec buffer (LRB) is ON\nN   to indicate that the machine check old PSW and the MCIC are both\nN   zero.\nN\nN-> The LRBMTINV bit in field LRBMTERM is ON to indicate that the\nN   machine check old PSW is nonzero but the MCIC is zero.\nN\nNHard errors cause FRR and ESTAE processing.\nN\nNReference:\nNSee z/Architecture Principles of Operation for a complete\nNdescription of the MCIC.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD08": {"ttr": 47115, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x00,\\x00,\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:03", "lines": 44, "newlines": 44, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD08\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 8: System trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 8: System trace\nN-----------------------\nNSystem trace provides an ongoing record of hardware events and software\nNevents occurring during system initialization and operation. The system\nNactivates system tracing at initialization, which runs continuously,\nNunless your installation has changed the IBM-supplied system tracing.\nNAfter system initialization, you can use the TRACE operator command on\nNa console with master authority to customize system tracing.\nN\nNSystem trace writes trace data in system trace tables in the trace\nNaddress space. System trace maintains a trace table for each processor.\nN\nNBecause system trace usually runs all the time, it is very useful for\nNproblem determination. While system trace and the generalized trace\nNfacility (GTF) lists many of the same system events, system trace also\nNlists events occurring during system initialization, before GTF tracing\nNcan be started. System trace also traces branches and cross-memory\nNinstructions, which GTF cannot do.\nN\nNThe following topics explain system trace in detail:\nN\nN-> Customizing system tracing\nN\nN-> Receiving system trace data in a dump\nN\nN-> Formatting system trace data in a dump\nN\nN-> Reading system trace output\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0801": {"ttr": 47117, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x00A\\x00A\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:24", "lines": 65, "newlines": 65, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0801\nTTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 8.\nT-Customizing system tracing\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181924\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 8: System trace\nN=======================\nNCustomizing system tracing\nN--------------------------\nNThe system starts system tracing during system initialization and the\nNtrace runs continually. There are, however, a few things you can do to\nNalter system tracing AFTER si COMPLETES. Restart system tracing with\nNbranch tracing using the TRACE command from a console with master\nNauthority.\nN\nNIncreasing the size of the system trace table.\nN----------------------------------------------\nNSystem trace tables reside in fixed storage on each processor. The\nNdefault trace table size is 1 MB per processor, but you can change it\nNusing the TRACE ST command.\nN\nITRACE ST,BUFSIZ=20M\nN\nNRemember: Choose a reasonable value for the system trace storage after\nNconsidering the available central storage and the actual storage\nNrequired for system trace. Increasing the system trace storage to a\nNlarge value amount may cause shortage of pageable storage in\nNthe system.\nN\nN\nNTracing branch instructions.\nN----------------------------\nNSystem tracing allows you the option of tracing branch instructions,\nNsuch as BALR, BASR, BASSM and BAKR, along with other system events. As\nNof z/OS V1R9, the option of mode tracing is separated from branch\nNtracing.\nN\nITRACE ST,BR=ON\nN\nIAttention: Branch tracing ON can affect your system performance and use\nIvery large amounts of storage. Do not use branch tracing as the default\nIfor system tracing on your system. Only use it for short periods of time\nIto solve a specific problem. The default system tracing does not include\nIbranch instructions.\nN\nN\nNReferences\nN----------\nNz/Architecture Principles of Operation describes the branch instruction\nNtrace entries and the mode trace entries that MVS combines with them\nN(and are generated by the hardware).\nN\nNz/OS MVS Data Areas describes the TTE from mapping macro IHATTE.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0802": {"ttr": 47119, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:24", "lines": 28, "newlines": 28, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0802\nTTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 8.\nT-Receiving system trace data in a dump\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181924\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 8: System trace\nN=======================\nNReceiving system trace data in a dump\nN-------------------------------------\nNSystem trace data that are requested by RTM and ABDUMPs will only\nNreceive the most current 64K of data for each CPU when the number of\nNconcurrent snapshots could affect system availability. This is referred\nNto as a mini-trace table snapshot.\nN\nNFor more information about working with system trace tables, see the\nNSYSTRACE section in z/OS MVS IPCS Commands.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0803": {"ttr": 47121, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:24", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0803\nTTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 8.\nT-Customizing system tracing\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181924\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 8: System trace\nN=======================\nNFormatting system trace data in a dump\nN--------------------------------------\nN\nNFor formatted dumps\nN-------------------\nNSystem trace formats the system trace data and the system prints it\nNdirectly.\nN\nN\nNFor unformatted dumps\nN---------------------\nNUse the IPCS SYSTRACE subcommand to format and print or view the trace\nNdata in the dump.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0804": {"ttr": 47123, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:25", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0804\nTTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 8.\nT-Reading system trace output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-181925\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 8: System trace\nN=======================\nNReading system trace output\nN---------------------------\nNThis topic describes system trace table entries (TTE) as they appear in\nNa dump formatted with the IPCS SYSTRACE subcommand.\nN\nMMessage from Kenneth Tomiak:\nMYou need to read the manual for this.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD09": {"ttr": 47125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18\\x19\\x00/\\x00/\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:19:25", "lines": 47, "newlines": 47, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD09\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 9: Master trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 9: Master trace\nN-----------------------\nNMaster trace maintains a table of all recently issued system messages.\nNThis creates a log of external system activity; the other traces log\nNinternal system activity. Master trace is activated automatically at\nNsystem initialization, but you can turn it on or off using the TRACE\nNcommand.\nN\nNMaster trace can help you diagnose a problem by providing a log of the\nNmost recently issued system messages. For example, master trace output\nNin a dump contains system messages that may be more pertinent to your\nNproblem than the usual component messages issued with a dump.\nN\nNMajor topics\nN------------\nN\nNThe following topics describe master trace:\nN\nN-> Master trace and the hardcopy log\nN\nN-> Customizing master trace\nN\nN-> Requesting master trace\nN\nN-> Receiving master trace\nN\nN-> Reading master trace data\nN\nN   -> Master trace output formatted in a dump\nN\nN   -> Master trace table in storage\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0901": {"ttr": 47361, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18!\\x001\\x001\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:21:51", "lines": 49, "newlines": 49, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0901\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 9.\nT-Master trace and the hardcopy log\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182151\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 9: Master trace\nN-----------------------\nNMaster trace and the hardcopy log\nN---------------------------------\nNMaster trace lists the same messages that the system saves\nNautomatically and permanently in the hardcopy log, but the entries are\nNmaintained in a wraparound table, which means that master trace\nNoverwrites old entries when the table is full.\nN\nNYou can use master trace data in a dump as a substitute for the\nNhardcopy log when the dump contains the required messages. If the\nNmaster trace table wraps and overwrites the messages related to your\nNproblem before you can request a dump, the dump will not contain\nNuseful messages.\nN\nNConsider the following conditions:\nN\nN-> The master trace table wraps at 9 p.m.\nN\nN-> The system issues messages related to a problem between 9:10 and\nN   9:20 p.m.\nN\nN-> The system issues an SVC dump at 9:30 p.m.\nN\nNIn this example, the messages pertinent to the problem will be in the\nNmaster trace data in the dump, since the problem occurred between the\nNtime the trace table wrapped and the time the dump was issued.\nN\nNTo print the system-managed data set containing the hardcopy log, use\nNthe JESDS parameter of the OUTPUT JCL statement.\nN\nD//OUT  OUTPUT JESDS=Y\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0902": {"ttr": 47363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18!\\x006\\x006\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:21:51", "lines": 54, "newlines": 54, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0902\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 9.\nT-Customizing master trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182151\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 9: Master trace\nN-----------------------\nNCustomizing master trace\nN------------------------\nNAt initialization, the master scheduler sets up a master trace table of\nN24 kilobytes. A 24-kilobyte table holds about 336 messages, assuming an\nNaverage length of 40 characters. You can change the size of the master\nNtrace table or specify that no trace table be used by changing the\nNparameters in the SCHEDxx parmlib member.\nN\nNYou can also change the size of the table using the TRACE command. For\nNexample, to change the trace table size to 36 kilobytes, enter:\nN\nDTRACE MT,36K\nM\nMMessage from Kenneth Tomiak:\nMMessage length average size should be anayzed on your system.\nMUse SDSF/IOF to sysout-edit (se) a log and run edit macro TSAD0920.\nM\nD/* We first need rexx in comment if compiled or read from SYSPROC. */\nDrexx_tsad0920:\nD  Address IsrEdit \"Macro () NOPROCESS\"\nD  Address IspExec \"CONTROL ERRORS RETURN\"\nD  Address ISREDIT \"F p'=' last\"\nD  Address ISREDIT \"(ROW,COL) = CURSOR\"\nD  onerow = row + 0\nD  maxmsg = 0\nD  Do rx = 1 to onerow\nD    ADDRESS ISREDIT \"(linedata) = LINE\" rx\nD    linedata = strip(linedata,\"T\",\" \")\nD    onemsg = Length(linedata) - 56\nD    maxmsg = maxmsg + onemsg\nD  End\nD  avgmsg = maxmsg / onerow\nD  Say onerow \"msgs average length:\" avgmsg\nD  Address IsrEdit \"MEND\"\nD  Exit 0\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0903": {"ttr": 47365, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18!\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:21:52", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0903\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 9.\nT-Requesting master trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182152\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 9: Master trace\nN-----------------------\nNRequesting master trace\nN-----------------------\nNStart, change, or stop master tracing by entering a TRACE operator\nNcommand from a console with master authority. For example, to start the\nNmaster tracing:\nDTRACE MT\nN\nNTo stop master tracing:\nN\nDTRACE MT,OFF\nN\nNYou can also use the TRACE command to obtain the current status of the\nNmaster trace. The system displays the status in message IEE839I. For\nNexample, to ask for the status of the trace, enter:\nN\nDTRACE STATUS\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0904": {"ttr": 47367, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18!\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:21:52", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0904\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 9.\nT-Receiving master trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182152\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 9: Master trace\nN-----------------------\nNReceiving master trace\nN----------------------\nNMaster trace writes trace data in the master trace table, which resides\nNin the master scheduler address space (ASID 1). You can obtain master\nNtrace data in a stand-alone, SVC, or unformatted dump, if the dump\nNoptions list includes TRT to request trace data.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD0905": {"ttr": 47369, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18#\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:23:42", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD0905\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 9.\nT-Reading master trace data\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182342\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 9: Master trace\nN-----------------------\nNReading master trace data\nN-------------------------\nMYou can view output in a dump or in-storage.\nN\nNMaster trace output formatted in a dump\nN---------------------------------------\nNThe entries in the master trace table are listed in first-in, first-out\nN(FIFO) order, which resembles a hardcopy log. The messages might not be\nNin chronological order because the messages might not have been\nNput into the master trace table in the order the messages\nNwere issued.\nN\nNExample of formatted master trace output\nN----------------------------------------\nNUse the subcommand issued on the IPCS Subcommand Entry panel:\nDVERBEXIT MTRACE\nN\nN\nNMaster trace table in storage\nN-----------------------------\nNThis topic describes master trace data as it is recorded in the master\nNtrace table in the master scheduler address space. You can use this\nNinformation to write your own formatting or analysis routines for\nNmaster trace information.\nN\nI\nIAt the location: In a field named: Find the following address:\nICVT+X'94'        CVTMSER           IEEBASEA (master scheduler\nI                                   resident data area)\nI\nIIEEBASEA+ X'8C'  BAMTTBL           Start of the master trace\nI                                   table\nN\nMGood luck getting there!\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD10": {"ttr": 47371, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00C\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18#\\x000\\x000\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:23:43", "lines": 48, "newlines": 48, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD10\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10: The Generalized Trace Facility (GTF)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNThe generalized trace facility (GTF) is a service aid you can use to\nNrecord and diagnose system and program problems. GTF is part of the MVS\nNsystem product, and you must explicitly activate it by entering a\nDSTART GTF.gtfname\nNcommand.\nN\nN\nNMajor topics\nN------------\nN-> GTF and IPCS\nN\nN-> Using IBM defaults for GTF\nN\nN-> Customizing GTF\nN\nN-> Starting GTF\nN\nN-> Stopping GTF\nN\nN-> GTF trace options\nN\nN-> Receiving GTF traces\nN\nN-> Reading GTF output\nN\nN-> Formatted GTF trace output\nN\nN-> Formatted trace records for events\nN\nN-> Unformatted GTF trace output\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1001": {"ttr": 47373, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00C\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18#\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:23:43", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1001\nKIPCS\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-GTF and IPCS\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182343\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNGTF and IPCS\nN------------\nNYou can use IPCS to merge, format, display, and print GTF output.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1002": {"ttr": 47375, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18&\\x00A\\x00A\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:26:03", "lines": 65, "newlines": 65, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1002\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Using IBM defaults for GTF\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182603\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNUsing IBM defaults for GTF\nN--------------------------\nNIBM supplies both a SYS1.PARMLIB (also called parmlib) member that\nNcontains predefined GTF trace options and a cataloged procedure for\nNGTF, should you want to use IBM's defaults for GTF operation.\nNYou can override some of the default options by specifying\nNcertain parameters on\nNthe START command that activates GTF.\nN\nNThe IBM-Supplied parmlib member of GTF trace options\nN----------------------------------------------------\nNIBM supplies the GTFPARM parmlib member, which contains the GTF trace\nNoptions shown below:\nN\nDTRACE=SYSM,USR,TRC,DSP,PCI,SRM\nN\nNBriefly, these options request that GTF trace the following:\nN\nN-> SYSM Selected system events\nN\nN-> USR User data that the GTRACE macro passes to GTF\nN\nN-> TRC Trace events associated with GTF\nN\nN-> DSP Dispatchable units of work\nN\nN-> PCI Program-controlled I/O interruptions\nN\nN-> SRM Trace data associated with the system resource manager (SRM)\nN\nN\nNThe IBM-Supplied cataloged procedure\nN------------------------------------\nNIBM supplies the GTF cataloged procedure, which resides in\nNSYS1.PROCLIB. The cataloged procedure defines GTF operation,\nNoutput location, recovery facilities, trace output data sets, and\nNthe parmlib member that contains GTF options and defaults.\nN\nN\nD//GTFNEW  PROC MEMBER=GTFPARM\nD//IEFPROC EXEC PGM=AHLGTF,PARM='MODE=EXT,DEBUG=NO,TIME=YES',\nD//             TIME=1440,REGION=2880K\nD//SYSLIB    DD DISP=SHR,DSN=SYS1.PARMLIB(&MEMBER)\nD//IEFRDER   DD DISP=(NEW,KEEP),DSNAME=SYS1.TRACE,\nD//             UNIT=SYSDA,SPACE=(TRK,20)\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1003": {"ttr": 47377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00A\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18'\\x00\\x9a\\x00\\x9a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:27:41", "lines": 154, "newlines": 154, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1003\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Customizing GTF\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-182741\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNCustomizing GTF\nN---------------\nNYou can customize GTF to the needs of your installation by either\nNoverriding IBM's defaults through the START GTF command, or providing\nNyour own parmlib member and cataloged procedure for GTF.\nN\nNDefining GTF trace options\nN--------------------------\nNIf you supply your own parmlib member or data set containing GTF trace\nNoptions, you can select any of the options listed in\nN\"GTF trace options\" Each instance of GTF can be activated with the same\nNor different set of options.\nN\nNThe member containing predefined trace options does not have to reside\nNin the parmlib member. GTF will accept any data set specified in the\nNSYSLIB DD statement of the cataloged procedure, or in the START\nNcommand, as long as that data set's attributes are compatible with\nNthose of SYS1.PARMLIB.\nI\nI DCB=LRECL=80\nI\nN\nNSetting up a cataloged procedure\nN--------------------------------\nNSet up your own GTF cataloged procedure when you want to control\nNdetails of GTF operation such as:\nN\nN-> Amount of storage needed for tracing\nN\nN-> Recovery for GTF\nN\nN-> Number and type of trace output data sets.\nN\nD//             PARM='parm, parm...'\nI               Options specified on the PARM parameter specify where GTF\nI               writes trace data and the amount of storage needed for\nI               GTF to collect and save trace data in various dump types.\nI\nI               parm can be any of the following:\nI\nD               MODE={INT|EXT|DEFER}\nI                 Defines where GTF writes the trace data.\nI                 MODE=INT directs data to a trace table in virtual\nI                 storage, and MODE=EXT directs data to a data set on\nI                 tape or DASD. MODE=DEFER will place the trace data in\nI                 the GTF address space until you enter the STOP GTF\nI                 command.\nN\nD               SADMP={nnnnnnK|nnnnnnM|40K}\nI                 Specifies the amount of storage needed to save GTF\nI                 trace data for stand-alone dumps.\nN\nD               SDUMP={nnnnnnK|nnnnnnM|40K}\nI                 Specifies the amount of storage needed to save GTF\nI                 trace data for SVC dumps.\nN\nD               NOPROMPT\nI                 If specified, indicates that you will not be prompted\nI                 to specify trace options. Message AHL125A and AHL100A\nI                 will not be issued. Use this parameter when you have a\nI                 parmlib member set up with the desired GTF options and\nI                 you want to avoid multiple replies in a sysplex\nI                 environment.\nN\nD               ABDUMP={nnnnnnK|nnnnnnM|0K}\nI                 Specifies the amount of GTF trace data to be formatted\nI                 in an ABEND or SNAP dump.\nN\nD               BLOK={nnnnn|nnnnnK|nnnnnM|40K}\nI                 Specifies the amount of virtual storage (E)CSA that GTF\nI                 will use to collect trace data.\nN\nD               SIZE={nnnnnnK|nnnnnnM|1024K}\nI                 Specifies the size of the buffers.\nN\nD               TIME=YES\nI                 Specifies that every GTF trace record have a time\nI                 stamp, as well as the block time stamp associated with\nI                 every block of data. The time stamp is the eight-byte\nI                 time of day (TOD) clock value at the local time in\nI                 which GTF puts the record into the trace table.\nN\nD               DEBUG={YES|NO}\nI                 Specifies whether GTF should attempt recovery after it\nI                 encounters an error. If DEBUG=YES, GTF will not attempt\nI                 any recovery. Instead, GTF will issue an error message\nI                 and end after encountering any error, so that the\nI                 contents of the trace table immediately prior to the\nI                 error remain intact.\nI\nI                 If DEBUG=NO, which is the default, GTF does the\nI                 following:\nI\nI                 -> For errors in GTF processing, GTF continues\nI                    processing after doing one or more of the following:\nI\nI                    - Flagging the trace record or trace record field\nI                      associated with the error\nI\nI                    - Issuing a message to the console to inform that an\nI                      error occurred\nI\nI                    - Suppressing the error or function in which the\nI                      error occurred.\nI\nI                 -> For errors that do not occur in GTF itself, GTF ends\nI                    abnormally. If GTF stops processing, that will not\nI                    cause any other task to also stop.\nN\nN\nNGuidelines for defining GTF trace output data sets in a cataloged\nNprocedure\nN-----------------------------------------------------------------\nNThe trace output data sets must be specific to each instance of GTF and\nNcan be defined in the cataloged procedure. Each instance of GTF to be\nNstarted must have a separate cataloged procedure, or if the same\nNcataloged procedure is used, then a different trace data set must be\nNsupplied with the START command.\nN\nN\nNDetermining GTF's storage requirements\nN--------------------------------------\nNThe storage that GTF requires depends on the trace options you choose.\nN\nNThere are several types of storage to calculate:\nN\nN-> Extended pageable link pack area (EPLPA)\nN\nN-> System queue area (SQA)\nN\nN-> Extended common service area (ECSA)\nN\nN-> Region storage\nN\nMAt this point you should refer to the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1004": {"ttr": 47617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x181\\x00I\\x00I\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:31:50", "lines": 73, "newlines": 73, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1004\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Starting GTF\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183150\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNStarting GTF\nN------------\nNMultiple instances of GTF can be active in a system at the same time.\nNWhen you activate GTF, each instance operates as a system task, in its\nNown address space. The only way to activate GTF is to enter a\nNSTART GTF command from a console with master authority. Using this\nNcommand, select either IBM's procedure or your cataloged procedure for\nNGTF. The cataloged procedure defines GTF operation; you can accept the\nNdefaults that the procedure establishes, or change the defaults by\nNspecifying certain parameters on the START GTF command.\nN\nNUsing the START command to invoke GTF\nN-------------------------------------\nNTo invoke GTF, enter the START command shown below:\nN\nD{START|S}{GTF|membername}\u00dd.identifier\u00a8\nN\nNGuidelines for overriding JCL statements in the GTF cataloged procedure\nN-----------------------------------------------------------------------\nMUse symbolics!\nN\nNExamples of overriding the JCL statements in the GTF\nNcataloged procedure\nN----------------------------------------------------\nNExample: Altering One Data Set\nN------------------------------\nNEnter START GTFABC,id,,UNIT=TAPE, to alter only the data set that\nNIEFRDER defines.\nN\nD//IEFRDER DD DSNAME=SYS1.GTFTRC,UNIT=SYSDA,\nD// SPACE=(4096,20),DISP=(NEW,KEEP)\nN\nN\nNExample: Altering More Than One Data Set\nN----------------------------------------\nNEnter START GTFABC,id,,DEVICE=TAPE, to override the default value of\nNthe UNIT parameter for each output data set in your cataloged\nNprocedure.\nN\nD//GTFOUT1 DD DSNAME=&NAME1.,UNIT=&DEVICE.,DISP=&DSPS.\nD//GTFOUT2 DD DSNAME=&NAME2.,UNIT=&DEVICE.,DISP=&DSPS.\nD//GTFOUT3 DD DSNAME=&NAME3.,UNIT=&DEVICE.,DISP=&DSPS.\nN\nN\nNNSpecifying or changing GTF trace options through system prompting\nN------------------------------------------------------------------\nNAfter you enter the START command, GTF issues message\nNAHL100A or AHL125A which allows you to specify or change trace options.\nNIf the cataloged procedure or START command did not contain\nNa member of predefined options, GTF issues message AHL100A, which\nNallows you to enter trace options. If the procedure or command did\nNinclude a member of predefined options, GTF identifies those options\nNby issuing the console messages AHL121I and AHL103I. Then you can\nNaccept the options, or reject and specify new options.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1005": {"ttr": 47619, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x183\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:33:48", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1005\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Stopping GTF\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183348\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNStopping GTF\nN------------\nNYou can enter the STOP command at any time during GTF processing. The\nNamount of time you let GTF runs depends on your installation and the\nNproblem you are trying to capture, but a common time is between 15 and\nN30 minutes.\nN\nNTo stop GTF processing, enter the STOP command. The STOP command must\nNinclude either the GTF identifier specified in the START command,\nNor the device number of the GTF trace data set if you specified\nNMODE=EXT or MODE=DEFER to direct output to a data set. If\nNyou have not specified the GTF identifier in the START command,\nNthen those instances of GTF will have the same identifier:\nN\nN->  the volume serial number.\nN\nDSTOP id or device-id\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1006": {"ttr": 47621, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x189\\x01 \\x01 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:39:32", "lines": 288, "newlines": 288, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1006\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-GTF trace options\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183932\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNGTF trace options\nN-----------------\nNThis topic describes the GTF options you can specify through either\nNsystem prompting in response to the START GTF command or in a\nNpredefined parmlib or data set member.\nM\nMSee the manual for additional details.\nN\nD  ASIDP\nI    Requests that GTF tracing be limited to a subset of address spaces.\nI    ASIDP requests GTF prompting for one to five address space\nI    identifiers (ASID) in which you want GTF tracing to occur. ASIDP\nI    works only with a GTF option that generates tracing, such as SVC or\nI    IO.\nN\nD  CCW\nI    Requests tracing of channel programs and associated data for I/O\nI    events. CCW is valid only if the other trace options include SSCH,\nI    SSCHP, IO, or IOP.\nN\nD  CCWP\nI    Requests tracing of channel programs and associated data for I/O\nI    events, and requests GTF prompting for the following information:\nI\nI    -> Tracing channel command words (CCW) or device command words (DCW)\nI       for start subchannel (SSCH) operations or I/O interruptions or\nI       both\nI\nI    -> Maximum number of CCWs or device command words (DCW) for each\nI       event\nI\nI    -> Maximum number of bytes of data for each CCW or DCW\nI\nI    -> Optional input/output supervisor block (IOSB), input/output block\nI       extension (IOBE, zHPF channel programs only), and error recovery\nI       procedure work area (EWA) tracing\nI\nI    -> Size of the program controlled interrupt (PCI) table\nN\nD  CSCH\nI    Requests recording for all clear subchannel operations.\nN\nD  DSP\nI    Requests recording for all dispatchable units of work: service\nI    request block (SRB), local supervisor routine (LSR), task control\nI    block (TCB) and Supervisor Call (SVC) prolog dispatch events. If you\nI    specify both the SYSM and DSP trace options, GTF records minimal\nI    trace data for DSP. Otherwise, GTF records comprehensive trace data\nI    for DSP.\nN\nD  EXT\nI    Requests comprehensive recording for all external interruptions.\nN\nD  HSCH\nI    Requests recording for all halt subchannel operations.\nN\nD  IO\nI    Requests recording of all non-program-controlled I/O interruptions.\nI    Unless you also specify the PCI trace option, GTF does not record\nI    program-controlled interruptions.\nN\nD  IOX\nI    Requests recording of all non-program-controlled I/O interruptions\nI    providing a summary of a complete channel program for the I/O\nI    interruption in an I/O summary trace record. Unless you also specify\nI    the PCI trace option, GTF does not record program-controlled\nI    interruptions.\nN\nD  IOP\nI    Requests GTF prompting for specific device numbers for which you\nI    want GTF to record non-program-controlled I/O interruptions. Unless\nI    you specify the PCI trace option, GTF does not record\nI    program-controlled interruptions.\nN\nD  IOXP\nI    Requests GTF prompting for specific device numbers for which you\nI    want GTF to record non-program-controlled I/O interruptions\nI    providing a summary of a complete channel program for the I/O\nI    interruption in an I/O summary trace record. Unless you specify the\nI    PCI trace option, GTF does not record program-controlled\nI    interruptions.\nN\nD  JOBNAMEP\nI    Requests that GTF tracing be limited to a subset of jobs. JOBNAMEP\nI    requests GTF prompting for one through five job names for which you\nI    want GTF tracing to occur.\nI\nI    These job names can be generic, as well as specific, job names. If\nI    you want to specify generic job names, use * or % in the job name.\nN\nD  MSCH\nI    Requests recording for all modify subchannel operations.\nN\nD  PCI\nI    Requests recording of intermediate status interruptions in the same\nI    format as other I/O trace records that GTF creates.\nI\nI    Specifically, PCI causes GTF to record program-controlled I/O\nI    interruptions, initial status request interruptions, resume\nI    subchannel operation instruction, and suspend channel program\nI    interruptions. When you select specific devices as a result of\nI    prompting for I/O events (IOP trace option), GTF records\nI    intermediate status interruptions for only those devices. PCI is\nI    valid only when the other trace options include IO, IOP, SYS, SYSM,\nI    or SYSP.\nN\nD  PI\nI    Requests comprehensive recording for all program interruptions\nI    (0-255).\nN\nD  PIP\nI    Requests GTF prompting for those interruption codes for which you\nI    want GTF to record program interruptions.\nN\nD  RNIO\nI    Requests recording of all Virtual Telecommunications Access Method\nI    (VTAM) network activity. If you specify both the SYSM and RNIO trace\nI    options, GTF will record minimal trace data for RNIO. Otherwise, GTF\nI    records comprehensive trace data for RNIO.\nN\nD  RR\nI    Requests comprehensive recording of data associated with all\nI    invocations of recovery routines (such as STAE and ESTAE routines).\nI    GTF creates a trace record describing the activity of the recovery\nI    routine when control passes from the recovery routine back to the\nI    recovery termination manager (RTM).\nN\nD  SLIP\nI    Requests that a trace entry be made each time:\nI\nI    -> A match occurs for a SLIP trap with ACTION=TRACE\nI\nI    -> A SLIP trap with the SLIP DEBUG option is checked\nI\nI    The amount of data and the type of SLIP trace record to be built is\nI    specified on the SLIP command.\nN\nD  SRM\nI    Requests recording of trace data each time the system resource\nI    manager (SRM) is invoked. If you specify both the SYSM and SRM trace\nI    options, GTF records minimal trace data for SRM. Otherwise, GTF\nI    records comprehensive trace data for SRM.\nN\nD  SSCH\nI    Requests recording for start subchannel and resume subchannel\nI    operations.\nN\nD  SSCHP\nI    Requests GTF prompting for the specific device numbers for which you\nI    want GTF to record start subchannel and resume subchannel\nI    operations.\nN\nD  SVC\nI    Requests comprehensive recording for all SVC interruptions.\nN\nD  SVCP\nI    Requests GTF prompting for those SVC numbers for which you want data\nI    recorded.\nN\nD  SYS\nI    Requests recording of comprehensive trace data for all of the\nI    following:\nI\nI    -> Clear subchannel operations\nI\nI    -> External interruptions\nI\nI    -> Halt subchannel operations\nI\nI    -> I/O interruptions\nI\nI    -> Modify subchannel operations\nI\nI    -> Program interruptions\nI\nI    -> Recovery routines\nI\nI    -> Start subchannel and resume channel operations\nI\nI    -> SVC interruptions.\nI\nI    Because specifying SYS automatically causes GTF to trace all of\nI    these events, GTF will ignore the following trace options if you\nI    specify them in any form:\nI\nI      CSCH, HSCH, MSCH, SSCH, EXT, IO, PI, RR, SVC.\nN\nD  SYSM\nI    Requests recording of minimal trace data for the same events as SYS.\nI\nI    Because specifying SYSm automatically causes GTF to trace all of\nI    these events, GTF will ignore the following trace options if you\nI    specify them in any form:\nI\nI      CSCH, HSCH, MSCH, SSCH, EXT, IO, PI, RR, SVC.\nN\nD  SYSP\nI    Requests recording for the same events as the SYS option, but causes\nI    GTF to prompt for selection of specific SVC, IO, SSCH, and PI events\nI    that you want recorded.\nI\nI    Because specifying SYSm automatically causes GTF to trace all of\nI    these events, GTF will ignore the following trace options if you\nI    specify them in any form:\nI\nI      CSCH, HSCH, MSCH, SSCH, EXT, IO, PI, RR, SVC.\nN\nD  TRC\nI    Requests recording of those trace events that are associated with\nI    GTF itself. Unless you request TRC, GTF will not trace these events.\nI    TRC works only with a GTF option that generates tracing, such as SVC\nI    or IO.\nN\nD  USR\nI    Requests recording of all data that the GTRACE macro passes to GTF.\nI    You must specify USR or USRP to trace data from the GTRACE macro.\nI    Use USRP for specific events. If USR is used instead of USRP, the\nI    trace data set might be full of unwanted records. When you code the\nI    GTRACE macro but do not specify USR or USRP, GTF ignores the GTRACE\nI    macro.\nN\nD  USRP\nI    Requests GTF prompting for specific event identifiers (EID) of the\nI    data that the GTRACE macro passes to GTF. The EIDs represent user,\nI    program product, or IBM subsystem and component events.\nN\nD  XSCH\nI    Requests recording all cancel subchannel operations.\nN\nN\nNCombining GTF options\nN---------------------\nNTable 17 shows those TRACE options that GTF will not use in\nNcombination. If two or more options from the same row are specified,\nNGTF uses the option that has the lower column number and ignores the\nNother options.\nN\nNFor example, if you specify both SYSP and PI (see row D), GTF uses\nNSYSP (column 2) and ignores PI (column 5).\nM\nMSee the manual for additional information.\nM\nN\nN\nNExamples of sample prompting sequences\nN--------------------------------------\nNFully populated PARMLIB member\nN------------------------------\nDTRACE=IOP,SVCP,SSCH\nDIO=(D34,D0C),SVC=(1,2,3)\nDSVC=(4,5,6,7,8,9,10),END\nN\nNMessage AHL101A prompt\nN----------------------\nNInstructed you to specify values for the SVC, IO, SSCH, PI, and USR\nNkeywords.\nN\nNSTART MYPROC.EXAMPLE7,,,(MODE=EXT)\nI00 AHL100A SPECIFY TRACE OPTIONS\nNREPLY 00,TRACE=SYSP,USRP\nI01 AHL101A SPECIFY TRACE EVENT KEYWORDS--IO=,SSCH=,SVC=,PI=,USR=\nI01 AHL101A SPECIFY TRACE EVENT KEYWORDS--IO=SSCH=\nNREPLY 01,SVC=(1,2,3,4,10),IO=(191,192),USR=(10,07A,AB)\nI02 AHL102A CONTINUE TRACE DEFINITION OR REPLY END\nNREPLY 02,SSCH=282,END\nIAHL103I TRACE OPTIONS SELECTED--SYSP,PI,IO=(191,192),SSCH=(282)\nIAHL103I SVC=(1,2,3,4,10),USR=(010,07A,0AB)\nI03 AHL125A RESPECIFY TRACE OPTIONS OR REPLY U\nNREPLY 03,U\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1007": {"ttr": 47623, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x189\\x00)\\x00)\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:39:32", "lines": 41, "newlines": 41, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1007\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Receiving GTF traces\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183932\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNReceiving GTF traces\nN--------------------\nNGTF writes trace data in GTF trace tables in the GTF address space in\nNstorage. GTF trace data in storage are printed or viewed as part of a\nNdump, if the dump options list includes TRT to request trace data. The\nNfollowing table shows the dumps that have TRT in their default options.\nNFor unformatted dumps that are printed or viewed through IPCS, format\nNthe trace data by specifying the IPCS GTFTRACE subcommand or using the\nNIPCS Trace Processing selection panel.\nN\nNTo format and print GTF trace data in a GTFOUTxx or IEFRDER data set,\nNspecify the IPCS GTFTRACE subcommand or use the IPCS Trace Processing\nNselection panel.\nN\nNIf the GTF data was created for VTAM diagnosis, you can use the ACF/TAP\nNprogram to format the VTAM data.\nN\nN\nNCombining, extracting, and merging GTF trace output\nN---------------------------------------------------\nNGTF trace data can be combined with other data or extracted from dumps\nNand data sets using two IPCS subcommands: COPYTRC and MERGE.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1008": {"ttr": 47625, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x189\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:39:32", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1008\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Reading GTF output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183932\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNReading GTF output\nN------------------\nNThis topic shows the format of the trace records that GTF creates. When\nNyou select your tracing options carefully, GTF provides detailed\nNinformation about the system and user events where your problem lies,\nNmaking it easier to diagnose.\nM\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1009": {"ttr": 47627, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x189\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:39:33", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1009\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Formatted GTF trace output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183933\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNFormatted GTF trace output\nN--------------------------\nNThis topic describes GTF trace output records formatted by the IPCS\nNGTFTRACE subcommand. In each formatted record, the length of each field\nNis indicated by the number of characters.\nM\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1010": {"ttr": 47629, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x189\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:39:33", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1010\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Formatted trace records for events\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183933\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNFormatted trace records for events\nN----------------------------------\nN\nM\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1011": {"ttr": 47631, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x189\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:39:33", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1011\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 10.\nT-Unformatted GTF trace output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-183933\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 10: The Generalized Trace Facility (GTF)\nN------------------------------------------------\nNUnformatted GTF trace output\nN----------------------------\nN\nM\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD11": {"ttr": 47873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18@\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:40:35", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD11\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 11: Component trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184035\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 11: Component trace\nN---------------------------\nNThe component trace service provides a way for MVS components to\nNcollect problem data about events. Each component that uses the\nNcomponent trace service has set up its trace in a way that provides\nNthe unique data needed for the component.\nN\nNA component trace provides data about events that occur in the\nNcomponent. The trace data is used by the IBM Support Center, which uses\nNthe trace data to:\nN\nN-> Diagnose problems in the component\nN\nN-> See how the component is running.\nN\nNYou will typically use component trace while recreating a problem.\nM\nM\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1101": {"ttr": 47875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00F\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18A\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:41:46", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1101\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 11.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184146\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 11: Component trace\nN---------------------------\nNThe component trace service provides a way for MVS components to\nNcollect problem data about events. Each component that\nNuses the component trace service has set up its trace in a way\nNthat provides the unique data needed for the component.\nN\nNA component trace provides data about events that occur in the\nNcomponent. The trace data is used by the IBM Support Center, which uses\nNthe trace data to:\nN\nN-> Diagnose problems in the component\nN\nN-> See how the component is running.\nN\nNYou will typically use component trace while recreating a problem.\nM\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD12": {"ttr": 47877, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18C\\x00\"\\x00\"\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:43:18", "lines": 34, "newlines": 34, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD12\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 12: Transaction trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184318\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 12: Transaction trace\nN-----------------------------\nNTransaction trace provides a consolidated trace of key events for the\nNexecution path of application or transaction type work units running in\nNa multi-system application environment. By tracing the path of a work\nNunit running in a single system, or (more importantly) across systems\nNin a sysplex environment, that is being processed by multi-system\nNtransaction servers, subsystem interfaces, and resource managers,\nNtransaction trace enables a system programmer to debug problems\nNin those environments.\nN\nNThe essential task of transaction trace is to aggregate data showing\nN the flow of work between components in the sysplex that combine\nNto service a transaction. Transaction trace traces events such as\nNcomponent entry, exit, exceptions and major events such as COMMIT, and\nNROLLBACK. Do not use transaction trace as a component tracing facility.\nM\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1201": {"ttr": 47879, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18C\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:43:18", "lines": 28, "newlines": 28, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1201\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 12.\nT-How transaction trace works\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184318\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 12: Transaction trace\nN-----------------------------\nNHow transaction trace works\nN---------------------------\nNTransaction trace (TTrace) is attached as a daughter task in the system\nNtrace address space, after master scheduler initialization completes.\nNOnce initialization has completed, and the first transaction trace\nNcommand is entered with a filter that specifies the attributes of the\nNwork unit(s) to be traced, transaction trace is activated. Additional\nNinformation, such as the use of an external writer, is also allowable\nNfor transaction trace processing.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD13": {"ttr": 47881, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18C\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:43:19", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD13\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 13: GETMAIN, FREEMAIN, STORAGE (GFS) trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 13: GETMAIN, FREEMAIN, STORAGE (GFS) trace\nN--------------------------------------------------\nNGFS trace is a diagnostic tool that collects information about the use\nNof the GETMAIN, FREEMAIN, or STORAGE macro. You can use GFS trace to\nNanalyze the allocation of virtual storage and identify users of large\nNamounts of virtual storage.\nN\nNYou must use the generalized trace facility (GTF) to get the GFS trace\nNdata output.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1301": {"ttr": 47883, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18C\\x00;\\x00;\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:43:19", "lines": 59, "newlines": 59, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1301\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 13.\nT-Starting and stopping GFS trace\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184319\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 13: GETMAIN, FREEMAIN, STORAGE (GFS) trace\nN--------------------------------------------------\nNStarting and stopping GFS trace\nN-------------------------------\nNThe following procedure explains how to request a GFS trace.\nN\nN1. In the DIAGxx parmlib member, set the VSM TRACE GETFREE parameter to\nN   ON and define the GFS trace control data.\nN\nNExample: DIAGxx parmlib member for starting GFS tracing\nN-------------------------------------------------------\nNThe following DIAGxx parmlib member starts GFS trace and limits the\nNtrace output to requests to obtain or release virtual storage that is\nN24 bytes long and resides in address spaces 3, 5, 6, 7, 8 and 9:\nN\nIIn SYS1.PARMLIB(DIAG01):\nDVSM TRACE GETFREE (ON)\nDASID (3, 5-9)\nDLENGTH (24)\nDDATA (ALL)\nN\nN2. Ask the operator to enter the SET DIAG=01 command to activate GFS\nN   trace using the definitions in the DIAGxx parmlib member.\nN\nN3. Start a GTF trace (ask the operator to enter a START membername\nN   command on the operator console). membername is the name of the\nN   member that contains the source JCL (either a cataloged procedure or\nN   a job). Tell the operator to specify a user event identifier X'F65'\nN   to trace GTF user trace records.\nN\nN4. To stop the GTF trace, ask the operator to enter a STOP procname\nN   command on the operator console.\nN\nN5. To stop GFS trace, create a DIAGxx parmlib member with VSM TRACE\nN   GETFREE(OFF) and have the operator enter a SET DIAG=xx command.\nN\nNExample: DIAGxx parmlib member for stopping GFS tracing\nN-------------------------------------------------------\nNTo stop GFS trace, create a DIAGxx parmlib member with VSM TRACE\nGETFREE(OFF) and have the operator enter a SET DIAG=00 command.\nIIn SYS1.PARMLIB(DIAG00):\nDVSM TRACE GETFREE(OFF)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD14": {"ttr": 47885, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18C\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:43:19", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD14\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14: Recording logrec error records\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNWhen an error occurs, the system records information about the error in\nNthe logrec data set or the logrec log stream. The information provides\nNyou with a history of all hardware failures, selected software errors,\nNand selected system conditions. Use the Environmental Record, Editing,\nNand Printing program (EREP):\nN\nN-> To print reports about the system records\nN\nN-> To determine the history of the system\nN\nN-> To learn about a particular error\nN\nNMajor topics:\nN=============\nNCollection of software and hardware information\nN\nNChoosing the correct logrec recording medium\nN\nNInitializing and reinitializing the logrec data set\nN\nNDefining a logrec log stream\nN\nNError recording contents\nN\nNObtaining information from the logrec data set\nN\nNObtaining records from the logrec log stream\nN\nNObtaining information from the logrec recording control buffer\nN\nNInterpreting software records\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1401": {"ttr": 47887, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18C\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:43:19", "lines": 29, "newlines": 29, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1401\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nT-Collection of software and hardware information\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184319\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNCollection of software and hardware information\nN-----------------------------------------------\nNUse the records in the logrec data set or the logrec log stream as\nNadditional information when a dump is produced. The information in the\nNrecords will point you in the right direction while supplying you with\nNsymptom data about the failure.\nN\nNYou can set your system up to record errors on either a logrec data set\nNor in a logrec log stream.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1402": {"ttr": 47889, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00I\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18D\\x00,\\x00,\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:44:49", "lines": 44, "newlines": 44, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1402\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184449\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNChoosing the correct logrec recording medium\nN--------------------------------------------\nNYou can choose where the system will record logrec error records.\nNWhen a system is not in a sysplex, an installation can use a logrec\nNdata set, associated with an individual system, to record error\nNrecords. An installation can choose to continue this type of\nNrecording by initializing the logrec data set before IPLing\nNthe system that will use it.\nN\nNIn a sysplex, however, because each system requires its own logrec data\nNset, you might need to look at each logrec data set when an error\nNoccurs. To eliminate the problem of having to manage up to 32 logrec\nNdata sets, an installation can choose to define one coupling facility\nNlogrec log stream. Using a coupling facility logrec log stream\nNeliminates the following:\nN\nN-> Running IFCDIP00 to initialize multiple logrec data sets\nN\nN-> Handling full or emergency data set conditions\nN\nN-> Scheduling the daily offload of logrec data sets\nN\nN-> Concatenating multiple history data sets\nN\nN-> Archiving logrec records\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1403": {"ttr": 47891, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x00i\\x00i\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:58", "lines": 105, "newlines": 105, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1403\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nT-Initializing and reinitializing the logrec data set\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184658\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNInitializing and reinitializing the logrec data set\nN---------------------------------------------------\nNYou must initialize the logrec data set before IPLing the system that\nNwill use it.\nN\nNYou reinitialize the logrec data set when an uncorrectable error\nNoccurs. You clear the logrec data set when it is full or\nNnear full.\nN\nNTo initialize or reinitialize the logrec data set, use the service aid\nNprogram IFCDIP00. To clear a full logrec data set, use EREP. IFCDIP00\nNcreates a header record and a time stamp record for the logrec\nNdata set.\nI\nIAttention: The logrec data set is an unmovable data set. If you attempt\nIto move it after IPL using a program, such as a defragmentation program,\nIyour system will experience difficulty both reading from and writing to\nIthe data set.\nN\nN\nNInitializing the logrec data set\nN--------------------------------\nNIf the logrec data set does not exist, you must first allocate it and\nNthen initialize it. (Whenever you allocate or reallocate the logrec\nNdata set, the newly allocated data set will not be used until you\nNinitialize it and IPL the system on which it is to be used.)\nN\nNFollowing is an example of a job that scratches and uncatalogs an\nNexisting logrec data set and allocates, catalogs, and initializes a new\nNone. (If you do not currently have a logrec data set, start with the\nNsecond step of the job.)\nN\nD//*------------------------------------------------------------------\nD//* RENAME THE CURRENT LOGREC DATASET\nD//* UNCATLG SYS1.LOGREC SO THE NEW LOGREC CAN BE ALLOCATED ON\nD//* ANOTHER VOLUME, IF DESIRED\nD//*------------------------------------------------------------------\nD//RENAME  EXEC PGM=IEHPROGM\nD//M43RES    DD VOL=SER=M43RES,UNIT=3390,DISP=SHR\nD//SYSPRINT  DD SYSOUT=*\nD//SYSIN     DD *\nD         RENAME DSNAME=SYS1.LOGREC,VOL=3390=M43RES,                   X\nD               NEWNAME=SYS1.LOGREC.OLD\nD         UNCATLG DSNAME=SYS1.LOGREC\nD/*\nD//*------------------------------------------------------------------\nD//* CREATE THE NEW LOGREC DATASET AND INITIALIZE IT\nD//*------------------------------------------------------------------\nD//IFCDIP00 EXEC PGM=IFCDIP00,COND=(0,LT)\nD//SERERDS   DD DSN=SYS1.LOGREC,DISP=(,CATLG),\nD//             VOL=SER=M43RES,UNIT=SYSDA,SPACE=(CYL,3,,CONTIG)\nD//*\nN\nN\nNReinitializing the logrec data set\nN----------------------------------\nNYou need to reinitialize the logrec data set either when the data set\nNis full or when an uncorrectable error occurs.\nN\nNIf the data set is full, use EREP to record the data in a history data\nNset and reinitialize logrec.\nD//LOGREC2 EXEC PGM=IFCEREP1,REGION=6M,COND=(0,LT),\nD//             PARM='LINECT=60,TABSIZE=128K,HIST=Y,ACC=Y,PRINT=NO'\nD//ACCIN    DD  DSN=SYS1.LOGREC,\nD//             DISP=SHR\nD//ACCDEV   DD  DSN=IPOSAV.LOGRECW,\nD//             DISP=(MOD,PASS),\nD//             DCB=(RECFM=VB,BLKSIZE=6144)\nD//DIRECTWK DD  UNIT=SYSALLDA,SPACE=(CYL,(5,5))\nD//TOURIST  DD  SYSOUT=*,DCB=BLKSIZE=133\nD//EREPPT   DD  SYSOUT=*,DCB=BLKSIZE=133\nD//SYSIN    DD  DSN=BC2A.ZOS140.PARMLIB(EREPPARM),\nD//             DISP=SHR\nD//*\nN\nN\nNIn the case of an error, invoke IFCDIP00 with JCL statements to\nNreinitialize your existing logrec data set. IFCDIP00 resets the logrec\nNdata set header record field to indicate that the entire data set can\nNbe used and clears the time stamp record to hexadecimal zeros.\nN\nD//STEP1   EXEC PGM=IFCDIP00\nD//SERERDS   DD DSNAME=SYS1.LOGREC,UNIT=3380,\nD//             VOL=SER=111111,DISP=(OLD,KEEP)\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1404": {"ttr": 47893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x00G\\x00G\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:58", "lines": 71, "newlines": 71, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1404\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nT-Defining a logrec log stream\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184658\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNDefining a logrec log stream\nN----------------------------\nNBefore defining a logrec log stream, note that IBM recommends that you\nNIPL with a logrec data set initialized by IFCDIP00. If you do not IPL\nNwith a data set, you cannot change the logrec recording medium from\nNLOGSTREAM to DATASET using the SETLOGRC command.\nN\nNTo use the logrec log stream, you must first prepare your installation\nNto use system logger functions. IBM recommends that you use a coupling\nNfacility log stream for LOGREC so that you can merge data from multiple\nNsystems in a sysplex.\nN\nNThe following steps describe how to use a coupling facility logrec log\nNstream in place of a logrec data set:\nN\nN1. Define a log stream named SYSPLEX.LOGREC.ALLRECS using the system\nN   logger log stream definition utility, IXCMIAPU.\nN\nNExample: Sample JCL of using IXCMIAPU\nN-------------------------------------\nNIFBLSJCL is available in SYS1.SAMPLIB as an example of using the\nNadministrative data utility, IXCMIAPU, to define the coupling facility\nNlogrec log stream to a sysplex.\nD//*\nD//DEFINE  EXEC PGM=IXCMIAPU\nD//SYSPRINT  DD SYSOUT=*\nD//SYSIN     DD *\nD  DATA TYPE (LOGR)\nD    DEFINE STRUCTURE NAME(LOGRECSTRUCTURE)\nD      LOGSNUM(1)\nD      AVGBUFSIZE(4068)\nD      MAXBUFSIZE(4068)\nD    DEFINE LOGSTREAM NAME(SYSPLEX.LOGREC.ALLRECS)\nD      STRUCTNAME(LOGRECSTRUCTURE)\nD/*\nD//*\nN\nN2. Either specify LOGREC=LOGSTREAM in the IEASYSxx parmlib member or,\nN   after IPLing with LOGREC=dsname, use the SETLOGRC command to change\nN   the logrec recording medium to a logrec log stream.\nN\nN3. Change the EREP job stream as follows:\nN\nN-> Change the SERLOG DD DSN=SYS1.LOGREC statement associated with a\nN   logrec data set to an ACCIN DD DSN=SYSPLEX.LOGREC.ALLRECS\nN   statement, with corresponding SUBSYS parameters, to associate EREP\nN   with the logrec log stream.\nN\nN-> Identify the input as a history data set. Leave the output to a\nN   history data set as currently recommended, because all subsequent\nN   steps should already use the history data set as input.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1405": {"ttr": 48129, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:58", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1405\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184658\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNWhen an error occurs, the system records information about the error in\nNthe logrec data set or the logrec log stream. The information provides\nNyou with a history of all hardware failures, selected software errors,\nNand selected system conditions. Use the Environmental Record, Editing,\nNand Printing program (EREP):\nN\nN-> To print reports about the system records\nN\nN-> To determine the history of the system\nN\nN-> To learn about a particular error\nN\nNMajor topics:\nN=============\nNCollection of software and hardware information\nN\nNChoosing the correct logrec recording medium\nN\nNInitializing and reinitializing the logrec data set\nN\nNDefining a logrec log stream\nN\nNError recording contents\nN\nNObtaining information from the logrec data set\nN\nNObtaining records from the logrec log stream\nN\nNObtaining information from the logrec recording control buffer\nN--------------------------------------------------------------\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1406": {"ttr": 48131, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x00?\\x00?\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:59", "lines": 63, "newlines": 63, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1406\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184659\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNWhen an error occurs, the system records information about the error in\nNthe logrec data set or the logrec log stream. The information provides\nNyou with a history of all hardware failures, selected software errors,\nNand selected system conditions. Use the Environmental Record, Editing,\nNand Printing program (EREP):\nN\nN-> To print reports about the system records\nN\nN-> To determine the history of the system\nN\nN-> To learn about a particular error\nN\nNMajor topics:\nN=============\nNCollection of software and hardware information\nN\nNChoosing the correct logrec recording medium\nN\nNInitializing and reinitializing the logrec data set\nN\nNDefining a logrec log stream\nN\nNError recording contents\nN\nNObtaining information from the logrec data set\nN\nNObtaining records from the logrec log stream\nN\nNObtaining information from the logrec recording control buffer\nN--------------------------------------------------------------\nN\nD//ST01#01 EXEC PGM=IFCEREP1,PARM='CARD'\nD//SYSIN     DD *\nD  PRINT=PS\nD  HIST ****don't use this line if record is in SYS1.LOGREC****\nD  ACC=N\nD  TYPE=S\nD  ENDPARM\nD/*\nD//ACCIN     DD DSN=EREP.HISTORY,DISP=(OLD,PASS)\nD//DIRECTWK  DD UNIT=SYSDA,SPACE=(CYL,10,,CONTIG)\nD//EREPPT    DD SYSOUT=*,DCB=BLKSIZE=133\nD//TOURIST   DD SYSOUT=*,DCB=BLKSIZE=133\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1407": {"ttr": 48133, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:59", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1407\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184659\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNWhen an error occurs, the system records information about the error in\nNthe logrec data set or the logrec log stream. The information provides\nNyou with a history of all hardware failures, selected software errors,\nNand selected system conditions. Use the Environmental Record, Editing,\nNand Printing program (EREP):\nN\nN-> To print reports about the system records\nN\nN-> To determine the history of the system\nN\nN-> To learn about a particular error\nN\nNMajor topics:\nN=============\nNCollection of software and hardware information\nN\nNChoosing the correct logrec recording medium\nN\nNInitializing and reinitializing the logrec data set\nN\nNDefining a logrec log stream\nN\nNError recording contents\nN\nNObtaining information from the logrec data set\nN\nNObtaining records from the logrec log stream\nN\nNObtaining information from the logrec recording control buffer\nN--------------------------------------------------------------\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1408": {"ttr": 48135, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:59", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1408\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184659\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNWhen an error occurs, the system records information about the error in\nNthe logrec data set or the logrec log stream. The information provides\nNyou with a history of all hardware failures, selected software errors,\nNand selected system conditions. Use the Environmental Record, Editing,\nNand Printing program (EREP):\nN\nN-> To print reports about the system records\nN\nN-> To determine the history of the system\nN\nN-> To learn about a particular error\nN\nNMajor topics:\nN=============\nNCollection of software and hardware information\nN\nNChoosing the correct logrec recording medium\nN\nNInitializing and reinitializing the logrec data set\nN\nNDefining a logrec log stream\nN\nNError recording contents\nN\nNObtaining information from the logrec data set\nN\nNObtaining records from the logrec log stream\nN\nNObtaining information from the logrec recording control buffer\nN--------------------------------------------------------------\nN\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1409": {"ttr": 48137, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18F\\x002\\x002\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:46:59", "lines": 50, "newlines": 50, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1409\nKEREP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 14.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184659\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 14: Recording logrec error records\nN------------------------------------------\nNWhen an error occurs, the system records information about the error in\nNthe logrec data set or the logrec log stream. The information provides\nNyou with a history of all hardware failures, selected software errors,\nNand selected system conditions. Use the Environmental Record, Editing,\nNand Printing program (EREP):\nN\nN-> To print reports about the system records\nN\nN-> To determine the history of the system\nN\nN-> To learn about a particular error\nN\nNMajor topics:\nN=============\nNCollection of software and hardware information\nN\nNChoosing the correct logrec recording medium\nN\nNInitializing and reinitializing the logrec data set\nN\nNDefining a logrec log stream\nN\nNError recording contents\nN\nNObtaining information from the logrec data set\nN\nNObtaining records from the logrec log stream\nN\nNObtaining information from the logrec recording control buffer\nN\nNInterpreting software records\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD15": {"ttr": 48139, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18G\\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:47:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD15\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15: AMBLIST\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 15: AMBLIST\nN-------------------\nNAMBLIST provides the following problem data:\nN\nN-> Formatted listing of an object module\nN\nN-> Map of the control sections (CSECTs) in a load module or program\nN   object\nN\nN-> List of modifications to the code in a CSECT\nN\nN-> Map of all modules in the link pack areas (LPA)\nN\nN-> Map of the contents of the DAT-on nucleus. The map no longer\nN   represents the IPL version and message AMB129I will be issued.\nN\nNThese formatted listings can help you diagnose problems related to\nNmodules as they currently exist on your system. AMBLIST is a batch job\nNthat runs in problem state.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD15UA": {"ttr": 48141, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18G\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:47:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD15UA\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-User example: List LISTIDR, LISTLOAD, LISTOBJ, and LISTLPA.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184700\nWhttp://www.ktomiak.biz/ORG/\n@Kenneth Tomiak\n*\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSIN     DD *\nD  LISTIDR DDN=LOADLIB,MEMBER=SHOWPARM\nD  LISTLOAD DDN=LOADLIB,MEMBER=SHOWPARM\nD  LISTOBJ DDN=OBJLIB,MEMBER=SHOWPARM\nD  LISTLPA FLPA\nD  LISTLPA MLPA\nD  LISTLPA PLPA\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//OBJLIB    DD DISP=SHR,DSN=&SYSUID..DEMO.OBJLIB\nD//LOADLIB   DD DISP=SHR,DSN=&SYSUID..DEMO.LOADLIB\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD15UB": {"ttr": 48143, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18G\\x00\\x13\\x00\\x13\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:47:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD15UB\nKLISTIDR\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-User example: List Identity Records in LOAD Module.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184700\nWhttp://www.ktomiak.biz/ORG/\n@Kenneth Tomiak\n*\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSIN     DD *\nD  LISTIDR DDN=LOADLIB,MEMBER=TSAD0690\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//LOADLIB   DD DISP=SHR,DSN=&SYSUID..DEMO.LOADLIB\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD15UC": {"ttr": 48145, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18G\\x00\\x13\\x00\\x13\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:47:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD15UC\nKLISTLOAD\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-User example: List LOAD Module.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184700\nWhttp://www.ktomiak.biz/ORG/\n@Kenneth Tomiak\n*\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSPRINT  DD SYSOUT=*\nD//LOADLIB   DD DISP=SHR,DSN=&SYSUID..DEMO.LOADLIB\nD//SYSIN     DD *\nD  LISTLOAD DDN=LOADLIB,MEMBER=PDSUPDTE\nD/*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD15UD": {"ttr": 48147, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18G\\x00\\x13\\x00\\x13\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:47:01", "lines": 19, "newlines": 19, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD15UD\nKLISTOBJ\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-User example: List OBJECT Deck.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184701\nWhttp://www.ktomiak.biz/ORG/\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSPRINT  DD SYSOUT=*\nD//OBJLIB    DD DISP=SHR,DSN=&SYSUID..DEMO.OBJLIB\nD//SYSIN     DD *\nD  LISTOBJ DDN=OBJLIB,MEMBER=PDSUPDTE\nD/*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1501": {"ttr": 48149, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18I\\x00]\\x00]\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:49:20", "lines": 93, "newlines": 93, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1501\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-Obtaining AMBLIST output\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184920\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 15: AMBLIST\nN-------------------\nNObtaining AMBLIST output\nN------------------------\nNTo obtain AMBLIST output, you must code JCL or use the UNIX System\nNServices amblist command.\nN\nN\nNSpecifying the JCL statements\nN-----------------------------\nNGenerally, the minimum partition or region for running AMBLIST is\nN64 kilobytes for all functions except LISTLPA, which requires\nN100 kilobytes. However, for large load modules, IBM recommends a\nNminimum region size of 200 kilobytes. For program objects, IBM\nNrecommends a minimum region size of 12 megabytes.\nN\nN\nNExample: Listing an object module\nN---------------------------------\nNIn this example, AMBLIST is used to format and list an object module\nNincluded in the input stream.\nN\nD//LSTOBJDK JOB MSGLEVEL=(1,1)\nD//ST01#01 EXEC PGM=AMBLIST,REGION=64K\nD//SYSIN     DD *\nD        LISTOBJ DDN=OBJMOD,\nD        TITLE=('OBJECT MODULE LISTING FOR MYJOB',25)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//OBJMOD    DD *\nDobject module SHOULD BE PLACED HERE\nD/*\nD//*\nN\nN\nNControlling AMBLIST processing\nN------------------------------\nNYou control AMBLIST processing by supplying one or more control\nNstatements in the input stream. Code the control statement that applies\nNto the data you want to obtain according to the following rules:\nN\nN-> Leave column 1 blank, unless you want to supply an optional symbolic\nN   name. A symbolic name is analogous to the label name in a program.\nN   The maximum length of a symbolic name is eight characters.\nN   A symbolic name must end with one or more blanks.\nN\nN-> If a complete control statement will not fit on a single line,\nN   end the first line with a comma or a non-blank character in\nN   column 72 and continue on the next line. Begin all continuation\nN   statements in columns 2 - 16. Do not split parameters between two\nN   lines. The only exceptions are the MEMBER parameters, which you can\nN   split at any internal comma.\nN\nNLISTLOAD control statement\nN--------------------------\nNUse the LISTLOAD control statement to obtain a listing of load module\nNat program objects. The listed data can help you verify why certain\nNlink-edit errors might have occurred.\nN\nNLISTOBJ control statement\nN-------------------------\nNUse the LISTOBJ control statement to obtain listings of selected object\nNmodules. LISTOBJ supports traditional object modules as well as object\nNmodules in XOBJ or GOFF format.\nN\nNLISTIDR control statement\nN-------------------------\nNUse the LISTIDR control statement to obtain listings of selected CSECT\nNidentification records (IDR). AMBLIST also supports the LISTIDR control\nNstatement for program objects in z/OS UNIX System Services files.\nN\nN\nNLISTLPA control statement\nN-------------------------\nNUse the LISTLPA control statement to obtain listings of selected\nNmodules in the fixed link pack area (LPA).\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1502": {"ttr": 48385, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18I\\x00\\xa1\\x00\\xa1\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:49:57", "lines": 161, "newlines": 161, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1502\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-Obtaining AMBLIST output\nT-LISTLOAD control statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184957\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 15: AMBLIST\nN-------------------\nNObtaining AMBLIST output\nN------------------------\nNLISTLOAD control statement\nN--------------------------\nNUse the LISTLOAD control statement to obtain a listing of load module\nNor program objects. The listed data can help you verify why certain\nNlink-edit errors might have occurred.\nN\nD  LISTLOAD\nD    \u00ddOUTPUT={MODLIST|XREF|BOTH|MAP}\u00a8\nI      OUTPUT=MODLIST requests a formatted listing of the text and\nI      control information of a load module or program object.\nI\nI      OUTPUT=XREF requests a module map and cross-reference listing for\nI      the load module or program object.\nI\nI      OUTPUT=BOTH requests both a formatted listing of the load module\nI      or program object and its map and cross-references.\nI\nI      OUTPUT=MAP requests a numerical map for the load module or program\nI      object.\nI\nI      If this parameter is omitted, OUTPUT=BOTH will be assumed.\nN\nD    \u00dd,TITLE=('title',position)\u00a8\nI      Specifies a title, from one to 40 characters long, to be printed\nI      below the heading line on each page of output. (The heading line\nI      identifies the page number and the type of listing being printed,\nI      and is not subject to user control.) The position subparameter\nI      specifies whether or not the title is indented; if\nI      TITLE=('title',1) is specified, or if the position parameter is\nI      omitted, the title will be printed flush left, that is, starting\nI      in the first column. If you want the title indented from the\nI      margin, use the position parameter to specify the number of\nI      characters to leave blank before the title. If you specify a\nI      position greater than 80, the indentation from the margin defaults\nI      to 1.\nN\nD    \u00dd,DDN=ddname\u00a8\nI      Identifies the DD statement that defines the data set containing\nI      the input object module. If the DDN= parameter is omitted, AMBLIST\nI      will assume SYSLIB as the default ddname.\nN\nD    \u00dd,MEMBER={member|(member1,membern...)}\u00a8\nI      Identifies the input load module or program object by member name\nI      or alias name. To specify more than one load module or program\nI      object, enclose the list of names in parentheses and separate the\nI      names with commas. If you omit the MEMBER= parameter, AMBLIST will\nI      print all modules in the data set.\nI\nI      Notes:\nI      1. If you specify MEMBER=IEANUCxx, where xx is the suffix of the\nI         member used during the current IPL, AMBLIST will list the\nI         DAT-ON nucleus.\nI\nI      2. AMBLIST will accept member names up to 63 bytes in length. For\nI         aliases longer than 63 bytes, their primary member names must\nI         be entered instead.\nI\nI      3. If the DD name associated with this operation is allocated to a\nI         z/OS UNIX System Services directory, there must also be a\nI         MEMBER parameter specifying the file or files in that\nI         directory.\nN\nD    \u00dd,RELOC=hhhhhhhh\u00a8\nI      Specifies a relocation or base address in hexadecimal of up to\nI      eight characters. When the relocation address is added to each\nI      relative map and cross-reference address, it gives the absolute\nI      central storage address for each item on the output listing. If\nI      you omit the RELOC parameter, no relocation is performed.\nN\nD    \u00dd,ADATA={YES|NO}\u00a8\nI      ADATA=YES on LISTLOAD OUTPUT=MODLIST or OUTPUT=BOTH requests a\nI      formatted listing of all ADATA classes, if they exist, in the\nI      program object to be displayed in the traditional dump format,\nI      32 bytes per line, with hexadecimal representation on the left and\nI      EBCDIC on the right, in addition to the output listing with the\nI      specified output parameter.\nI\nI      OUTPUT=NO on LISTLOAD OUTPUT=MODLIST or OUTPUT=BOTH requests a\nI      normal formatted listings with the specified output parameter, and\nI      ADATA suppressed.\nI\nI      If this parameter is omitted, ADATA=NO will be assumed.\nN\nD    \u00dd,IMPEXP={DUMP|SYMBOLS}\u00a8\nI      IMPEXP=SYMBOLS indicates that section IEWBCIE text is displayed as\nI      a symbolically formatted IMPORT/EXPORT section of the output.\nI\nI      IMPEXP=DUMP indicates that section IEWBCIE text is displayed in\nI      the traditional dump format (as described under the ADATA\nI      parameter).\nN\nD    \u00dd,SECTION1={YES|NO}\u00a8\nI      SECTION1=YES requests that the module level section information be\nI      displayed.\nI\nI      SECTION1=NO requests that the module level section information not\nI      be displayed.\nN\nN\nNExample: Listing several load modules or program objects\nN--------------------------------------------------------\nNIn this example, AMBLIST is used to produce formatted listings of\nNseveral load modules or program objects.\nN\nNNote: If you are using AMBLIST to format program objects, IBM\nNrecommends that you specify REGION=2M or higher.\nN\nD//LOADLIST JOB MSGLEVEL=(1,1)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* List specific load modules.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//LISTST1 EXEC PGM=AMBLIST,REGION=64K\nD//SYSIN     DD *\nD  LISTLOAD OUTPUT=MODLIST,DDN=LOADLIBE,\nD    MEMBER=SHOWPARM,\nD    TITLE=('LOAD MODULE LISTING OF SHOWPARM',20)\nD  LISTLOAD OUTPUT=XREF,DDN=LOADLIB,\nD    MEMBER=(TSAD0690,SHOWPARM),\nD    TITLE=('XREF LISTINGS OF TSAD0690 AND SHOWPARM',20)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//LOADLIBE  DD DISP=SHR,DSNAME=&SYSUID..DEMO.LOADLIBE\nD//LOADLIB   DD DISP=SHR,DSNAME=&SYSUID..DEMO.LOADLIB\nD//          DD DISP=SHR,DSNAME=&SYSUID..DEMO.LOADLIBE\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* List all modules in SYS1.LINKLIB.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//LISTST2 EXEC PGM=IEFBR14\nD//*ISTST2 EXEC PGM=AMBLIST,REGION=64K  <= Produces lots of output!!\nD//SYSIN     DD *\nD  LISTLOAD TITLE=('XREF&LD MOD LSTNG-ALL MOD IN LINKLIB',20)\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=SHR,DSNAME=SYS1.LINKLIB\nD//*\nD//* End of Job\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1503": {"ttr": 48387, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18I\\x00i\\x00i\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:49:58", "lines": 105, "newlines": 105, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1503\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-Obtaining AMBLIST output\nT-LISTOBJ control statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184958\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 15: AMBLIST\nN-------------------\nNObtaining AMBLIST output\nN------------------------\nNLISTOBJ control statement\nN-------------------------\nNUse the LISTOBJ control statement to obtain listings of selected object\nNmodules. LISTOBJ supports traditional object modules as well as object\nNmodules in XOBJ or GOFF format.\nN\nD  LISTOBJ\nD    TITLE=('title',position)\nI      Specifies a title, from one to 40 characters long, to be printed\nI      below the heading line on each page of output. (The heading line\nI      identifies the page number and the type of listing being printed,\nI      and is not subject to user control.) The position parameter\nI      specifies whether or not the title is indented; if\nI      TITLE=('title',1) is specified, or if the position parameter is\nI      omitted, the title will be printed flush left, that is, starting\nI      in the first column. If you want the title indented from the\nI      margin, use the position parameter to specify the number of\nI      characters to leave blank before the title. If you specify a\nI      position greater than 80, the indentation from the margin defaults\nI      to 1.\nN\nD    DDN=ddname\nI      Identifies the DD statement that defines the data set containing\nI      the input module. If the DDN parameter is omitted, AMBLIST will\nI      assume SYSLIB as the default ddname.\nN\nD    MEMBER={member|(member1\u00dd,membern\u00a8...)}\nI      Identifies the input object module by member name or alias name.\nI      To specify more than one object module, enclose the list of names\nI      in parentheses and separate the names with commas.\nI\nI      Notes:\nI      1. You must include the MEMBER parameter if the input object\nI         modules exist as members in a partitioned data set (PDS or\nI         PDSE). If you do not include the MEMBER parameter, AMBLIST\nI         will assume that the input data set is organized sequentially\nI         and that it contains a single, continuous object module.\nI\nI      2. AMBLIST will accept member names up to 63 bytes in length. For\nI         aliases longer than 63 bytes, their primary member names must\nI         be entered instead.\nI\nI      3. If the DD name associated with this operation is allocated to\nI         a z/OS UNIX System Services directory, there must also be a\nI         MEMBER parameter specifying the file or files in that\nI         directory.\nN\nN\nNExample: Processing an OBJECT deck\nN----------------------------------\nNIn this example, AMBLIST processes a member of a PDS.\nN\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSIN     DD *\nD  LISTOBJ DDN=OBJLIB,MEMBER=SHOWPARM\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//OBJLIB    DD DISP=SHR,DSN=&SYSUID..DEMO.OBJLIB\nD//*\nD//* End of Job\nD//\nN\nN\nNExample: Processing a pathname\nN------------------------------\nNIn this example, AMBLIST processes the pathname\nN\"/your/saved/object-decks/a-longer-than-8-character_name.obj\".\nN\nD//OBJLIST JOB MSGLEVEL=(1,1)\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* List UNIX System Services file.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//LISTST1 EXEC PGM=AMBLIST,REGION=64K\nD//SYSIN     DD *\nD  LISTOBJ MEMBER=a-longer-than-8-character_name.obj\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD PATH='/your/saved/object-decks'\nD//*\nD//* End of Job\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1504": {"ttr": 48389, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18I\\x00^\\x00^\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:49:58", "lines": 94, "newlines": 94, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1504\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-Obtaining AMBLIST output\nT-LISTIDR control statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184958\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 15: AMBLIST\nN-------------------\nNObtaining AMBLIST output\nN------------------------\nNLISTIDR control statement\nN-------------------------\nNUse the LISTIDR control statement to obtain listings of selected CSECT\nNidentification records (IDR). AMBLIST also supports the LISTIDR control\nNstatement for program objects in z/OS UNIX System Services files.\nN\nD  LISTIDR\nD    OUTPUT={IDENT|ALL}\nI      Specifies whether AMBLIST must print all CSECT identification\nI      records or only those containing SPZAP data and user data. If you\nI      specify OUTPUT=ALL, all IDRs associated with the module will be\nI      printed. If you specify OUTPUT=IDENT, AMBLIST will print only\nI      those IDRs that contain SPZAP data or user-supplied data. If you\nI      omit this parameter, AMBLIST will assume a default of OUTPUT=ALL.\nI      Do not specify OUTPUT if you specify the MODLIB parameter.\nN\nD    TITLE=('title',position)\nI      Specifies a title, from one to 40 characters long, to be printed\nI      below the heading line on each page of output. (The heading line\nI      identifies the page number and the type of listing being printed,\nI      and is not subject to user control.) The position parameter\nI      specifies whether or not the title is indented; if\nI      TITLE=('title',1) is specified, or if the position parameter is\nI      omitted, the title will be printed flush left, that is, starting\nI      in the first column. If you want the title indented from the\nI      margin, use the position parameter to specify the number of\nI      characters to leave blank before the title. If you specify a\nI      position greater than 80, the indentation from the margin defaults\nI      to 1.\nN\nD    DDN=ddname\nI      Identifies the DD statement that defines the data set containing\nI      the input module. If the DDN parameter is omitted, AMBLIST will\nI      assume SYSLIB as the default ddname.\nI\nI      Note: If the DD name associated with this operation is allocated\nI      to a z/OS UNIX System Services directory, there must also be a\nI      MEMBER parameter specifying the file or files in that directory.\nN\nD    MEMBER={member|(member1\u00dd,membern\u00a8...)}\nI      Identifies the input object module by member name or alias name.\nI      To specify more than one object module, enclose the list of names\nI      in parentheses and separate the names with commas. If you omit\nI      the MEMBER parameter, AMBLIST will print all modules in the data\nI      set. Do not specify MEMBER if you specify the MODLIB parameter.\nI\nI      Note: AMBLIST will accept member names up to 63 bytes in length.\nI      For aliases longer than 63 bytes, their primary member names must\nI      be entered instead.\nN\nD    MODLIB\nI      Prevents AMBLIST from printing the module summary. AMBLIST prints\nI      the IDRs that contain SPZAP data or user-supplied data. No page\nI      ejects occur between modules. When you specify MODLIB, the OUTPUT\nI      or MEMBER parameters are not valid parameters.\nN\nN\nNExample: List IDR records\nN-------------------------\nNInstructs AMBLIST to list all CSECT identification records associated\nNwith the data set defined by the LOADLIB DD statement.\nN\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSIN     DD *\nD  LISTIDR DDN=LOADLIB\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//LOADLIB   DD DISP=SHR,DSN=&SYSUID..DEMO.LOADLIB\nD//*\nD//* End of Job\nD//\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1505": {"ttr": 48391, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18I\\x00:\\x00:\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:49:58", "lines": 58, "newlines": 58, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1505\nKLISTMLPA\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 15.\nT-Obtaining AMBLIST output\nT-LISTLPA control statement\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-184958\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 15: AMBLIST\nN-------------------\nNObtaining AMBLIST output\nN------------------------\nNLISTLPA control statement\nN-------------------------\nNUse the LISTLPA control statement to obtain listings of selected CSECT\nNidentification records (IDR). AMBLIST also supports the LISTIDR control\nNstatement for program objects in z/OS UNIX System Services files.\nN\nD  LISTLPA \u00ddFLPA\u00a8\u00dd,MLPA\u00a8\u00dd,PLPA\u00a8\nI    Lists the modules in the fixed link pack area, the modified link\nI    pack area, and the pageable link pack area (PLPA). This listing is\nI    a map that includes modules residing in the extended sections of\nI    each link pack area (LPA). If you do not specify any parameters on\nI    the LISTLPA control statement, then AMBLIST maps modules from all\nI    three LPAs.\nI\nI    The LISTLPA control statement does not support dynamic LPA. If the\nI    dynamic LPA support is used to update LPA, those changes will not\nI    be reflected in the AMBLIST LISTLPA output. The LISTLPA control\nI    statement will not be enhanced to support new operating system\nI    functions. The recommended replacement is the LPAMAP subcommand of\nI    IPCS.\nN\nN\nNExample: List LPA\nN-------------------------\nNInstructs AMBLIST to list all three areas of the link pack area.\nN\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSIN     DD *\nD  LISTLPA FLPA\nD  LISTLPA MLPA\nD  LISTLPA PLPA\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1506": {"ttr": 48393, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18I\\x00\\x0f\\x00\\x0f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:49:59", "lines": 15, "newlines": 15, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1506\nKLISTPLPA\nTAMBLIST: List Pageable LPA.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=AMBLIST\nD//SYSPRINT  DD SYSOUT=*\nD//SYSIN     DD *\nD  LISTLPA PLPA\nD/*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD16": {"ttr": 48395, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18P\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:50:54", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD16\nKAMASPZAP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 16: SPZAP\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185054\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 16: SPZAP\nN-----------------\nNSPZAP is a service aid program that operates in problem state. SPZAP\nNallows you to dynamically update and maintain programs and data sets.\nNSPZAP can be used to apply fixes to modules or programs that need to be\nNat current levels of the operating system.\nN\nNThe functions of SPZAP provide many capabilities, including:\nN\nN-> Using the inspect and modify functions of SPZAP, you can fix\nN   programming errors that require only the replacement of instructions\nN   in a load module member of a PDS or a program object member of a\nN   PDSE without recompiling the program.\nN\nN-> Using the modify function of SPZAP, you can set traps in a program\nN   by inserting incorrect instructions. The incorrect instructions will\nN   force abnormal ending; the dump of storage provided as a result of\nN   the abnormal ending is a valuable diagnostic tool, because it shows\nN   the contents of storage at a predictable point during processing.\nN\nN-> Using SPZAP to replace data directly on a direct access device, you\nN   can reconstruct VTOCs or data records that may have been destroyed\nN   as the result of an I/O error or a programming error.\nN\nN-> On the advice of the IBM Support Center, start tracing in system\nN   components that do not use component trace. The IBM Support Center\nN   will tell you how to use the SPZAP service aid to start traces in\nN   these components.\nN\nN-> Update the system status index (SSI) in the directory entry for any\nN   load module in a PDS or program object in a PDSE. Update the CSECT\nN   identification record (IDR) in any load module in a PDS or program\nN   object in a PDSE.\nN\nIRestriction:\nIAMASPZAP does not support load modules assembled with GOFF.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1601": {"ttr": 48397, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18Q\\x00+\\x00+\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:51:30", "lines": 43, "newlines": 43, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1601\nKAMASPZAP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 16.\nT-Planning for SPZAP\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185130\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 16: SPZAP\nN-----------------\nNPlanning for SPZAP\nN------------------\nNSPZAP is an application that provides editing capabilities for data on\nNa direct access storage device (DASD). Protect against SPZAP (and other\nNapplications that can update data sets) being used to damage data\nNthrough use of the installation's security protection scheme:\nN\nN-> In z/OS DFSMS Using Data Sets, see the chapter, \"Protecting Data\nN   Sets\" for information pertaining to protecting data sets.\nN\nN-> In z/OS DFSMSdfp Advanced Services, see the chapter, \"Protecting the\nN   VTOC and VTOC Index\" for information pertaining to protecting VTOCs.\nN\nNInstallations using RACF should employ a combination of GDASDVOL and\nNDASDVOL resource profiles to establish this protection. See z/OS\nNSecurity Server RACF Security Administrator's Guide for more\nNinformation regarding these profiles.\nN\nNIBM recognizes the particular sensitivity of the VTOC. For a VTOC, the\nNconsole operator must respond to message AMA117D before SPZAP will\nNprocess an update request. This authorization must be supplied in\nNaddition to authorization through use of the installation's security\nNprotection scheme.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1602": {"ttr": 48641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18S\\x00M\\x00M\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:53:28", "lines": 77, "newlines": 77, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1602\nKAMASPZAP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 16.\nT-Inspecting and modifying data\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185328\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 16: SPZAP\nN-----------------\nNInspecting and modifying data\nN-----------------------------\nNInspecting data\nN---------------\nNThe inspection function is controlled by the VERIFY statement. VERIFY\nNallows you to check the contents of a specific location in a load\nNmodule member of a PDS, a program object member of a PDSE or a z/OS\nNUNIX file,a specific physical record of a direct access data set, or a\nNrecord of a member of a data PDSE before you replace the contents. If\nNthe contents at the specified location do not agree with the contents\nNin the VERIFY statement, subsequent REP operations are\nNas specified not performed.\nN\nNExample: Inspecting and modifying a single CSECT load module\nN------------------------------------------------------------\nNThis example shows how to inspect and modify a load module containing\nNa single CSECT.\nN\nD//ZAPCSECT JOB MSGLEVEL=(1,1)\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Verify V1.0.0 at offset 0Ex (14).\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#02 EXEC PGM=AMASPZAP\nD//SYSIN     DD *\nD  NAME TSAD0690\nD  VERIFY 000E E5F1,4BF0,4BF0\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=SHR,DSNAME=&SYSUID..DEMO.LOADLIB\nN\nN\nNModifying data\nN--------------\nNSPZAP is often used to inspect and modify the contents of executable\nNprograms to correct errors. Executable programs can be in one of two\nNforms:\nN\nN-> A load module, which is created by the linkage editor and is stored\nN   in a PDS.\nN\nN-> A program object, which is created by the program management binder\nN   and is stored in a PDSE or a z/OS UNIX file.\nN\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Replace V1.0.0 at offset 0Ex (14) with V1.0.1 and add IDR.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST02#02 EXEC PGM=AMASPZAP\nD//SYSIN     DD *\nD  NAME TSAD0690\nD  VERIFY 000E E5F1,4BF0,4BF0\nD  REP    000E E5F1,4BF0,4BF1\nD  IDRDATA SETV101\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=OLD,DSNAME=&SYSUID..DEMO.LOADLIB\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1603": {"ttr": 48643, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18T\\x00$\\x00$\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:54:38", "lines": 36, "newlines": 36, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1603\nKAMASPZAP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 16.\nT-Updating the System Status Index (SSI)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185438\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 16: SPZAP\nN-----------------\nNUpdating the System Status Index (SSI)\nN--------------------------------------\nNYou can use the SETSSI control statement to overlay the existing data\nNin the SSI with your own data.\nN\nNThe SSI is a 4-byte field created by the linkage editor in the\nNdirectory entry of a load module. It is useful for keeping track\nNof any modifications that are performed on a load module. SPZAP updates\nNthe system status index automatically whenever it replaces data in the\nNassociated module.\nN\nNNot all load modules have system status information. In those that do,\nNthe SSI is located in the last four bytes of the user data field in the\nNdirectory entry.\nM\nMThere is rarely a good reason for you to mess with the SSI.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1604": {"ttr": 48645, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18T\\x001\\x001\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:54:39", "lines": 49, "newlines": 49, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1604\nKAMASPZAP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 16.\nT-Running SPZAP\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185439\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 16: SPZAP\nN-----------------\nNRunning SPZAP\nN-------------\nNYou can run SPZAP using control statements as input into the job stream\nNor dynamically as part of selected macros.\nN\nN\nNUsing JCL and control statements to run SPZAP\nN---------------------------------------------\nNOne way to invoke SPZAP is through the job stream. The JCL statements\nNyou need to use when running SPZAP are:\nN\nN-> JOB statement\nN\nN-> EXEC statement\nD//ST01#01 EXEC PGM=AMASPZAP\nN\nN-> SYSIN DD statement\nD//SYSIN     DD *\nD  {control statements}\nD/*\nN\nN-> SYSPRINT DD statement\nD//SYSPRINT  DD SYSOUT=*\nN\nN-> SYSLIB DD statement\nD//SYSLIB    DD DISP=OLD,DSN=name.of.data.set\nN\nN-> SYSABEND DD statement (Optional)\nD//SYSABEND  DD SYSOUT=*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1605": {"ttr": 48647, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x01\\x17\\x01\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:04", "lines": 279, "newlines": 279, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1605\nKAMASPZAP\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 16.\nT-SPZAP control statements\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185604\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 16: SPZAP\nN-----------------\nNSPZAP control statements\nN------------------------\nNSPZAP control statements (entered either through the user's input\nNstream in the JCL or through the system console) define the\nNprocessing functions to be performed during a particular\nNrun of SPZAP.\nN\nNTo enter other SPZAP control statements through the system console, you\nNcan use the CONSOLE control statement.\nN\nMNote: SPZAP does not fold lowercase input to uppercase; be sure to\nNenter values in the correct case.\nN\nNThe control statements that define the running of SPZAP are:\nN------------------------------------------------------------\nD  ABSDUMP|ABSDUMPT}{startaddr stopaddr | startrec stoprec | member | ALL\nI    Note: When the SYSLIB DD statement describes a data set placed in an\nI          extended address volume (EAV), the startaddr and stopaddr\nI          values must be specified in hexadecimal in the form CCCCcccHRR,\nI          where CCCCccc is referred to as a 28-bit cylinder address.\nN\nI      -> CCCC is the 16 low order bits of the cylinder number.\nI      -> ccc is the 12 high order bits of the cylinder number.\nI      -> H is the track number.\nI      -> RR is the record number.\nI\nI    startaddr: cccchhhhrr | CCCCcccHRR\nI      The absolute direct access device address of the first record to\nI      be dumped. This address must be specified in hexadecimal in the\nI      form cccchhhhrr (cylinder, track and record numbers). This\nI      parameter must be exactly 10 digits long.\nN\nI    stopaddr: cccchhhhrr | CCCCcccHRR\nI      The absolute direct access device address of the last record to be\nI      dumped, and it must be in the same format as the start address.\nI      Both addresses must be specified when this method of dumping\nI      records is used, and both addresses must be within the limits of\nI      the data set defined by the SYSLIB DD statement.\nN\nI    startrec: nnnnnnnn\nI      The value of the first relative record of a member of a PDSE data\nI      library to display. This parameter can be 1 to 8 digits long. The\nI      first record of a member has a startrec value of 1.\nN\nI    stoprec: nnnnnnnn\nI      The value of the last relative record of a member of a PDSE data\nI      library to display. This parameter can be 1 to 8 digits long. If\nI      the value of stoprec specifies a relative record value greater\nI      than that of the last physical record, printing stops after the\nI      last record of the member is printed. If the value of stoprec is\nI      less than the value of startrec, no records are displayed.\nN\nI    member:\nI      The name of a member of a PDS or a PDSE, as specified by the\nI      SYSLIB DD statement. The name can refer to a load module member of\nI      a PDS or a member of a PDSE data library. In each case, the entire\nI      member is dumped when this variable is specified. (Use DUMP/DUMPT\nI      for program object members of a PDSE.)\nN\nI    ALL:\nI      Specifies that the entire data set defined by the SYSLIB DD\nI      statement is to be dumped.\nN\nD  BASE xxxxxx\nI    Used by SPZAP to adjust offset values that are to be specified in\nI    any subsequent VERIFY and REP statements. This statement should be\nI    used when the offsets given in the VERIFY and REP statements for a\nI    CSECT are to be obtained from an assembly listing in which the\nI    starting address of the CSECT is not location zero.\nI\nI    xxxxxx: A 6-character hexadecimal offset that is to be used as a\nI            base for subsequent VERIFY and REP operations. This value\nI            should reflect the starting assembly listing address of the\nI            CSECT being inspected or modified.\nN\nD  CCHHR record address\nI    Identifies a physical record on a direct access device that is to be\nI    modified or verified. The record must be in the data set defined by\nI    the SYSLIB DD statement. Any immediately following REP or VERIFY\nI    statements will reference the data in the specified record. The\nI    variable is:\nI\nI    record address: The actual direct access address of the record\nI                    containing data to be replaced or verified. It must\nI                    be specified as a 10-digit hexadecimal number in the\nI                    form cccchhhhrr, where cccc is the cylinder, hhhh is\nI                    the track, and rr is the record number. For example,\nI                    0001000A01 addresses record 1 of cylinder 1, track\nI                    10. A zero record number is incorrect and defaults\nI                    to 1.\nN\nD  CHECKSUM \u00ddhhhhhhhh\u00a8\nI    Used to print or verify a fullword checksum (parity-check). All of\nI    the valid hexadecimal operands since the preceding CHECKSUM\nI    statement or SPZAP initialization are logically concatenated into a\nI    single string divided into fullwords, the sum of which is the\nI    checksum. For example, the string 12345678FACE produces the checksum\nI    0D025678. Each CHECKSUM statement resets the accumulated checksum\nI    value to zeros.\nI\nI    hhhhhhhh: 8 hexadecimal characters that are compared with the\nI              checksum. If the two values are equal, a message is\nI              written indicating that the checksum was correct and has\nI              been reset.\nN\nD  Comment (*)\nI    When the first non-blank character in a statement is an asterisk,\nI    SPZAP recognizes the statement as a comment, used to annotate the\nI    SPZAP input stream and output listing. You can specify the asterisk\nI    in any position, but at least one blank space must follow the\nI    asterisk.\nN\nD  CONSOLE\nI    Indicates that SPZAP control statements are to be entered through\nI    the system console.\nI\nI    When this statement is encountered in the input stream, the\nI    following message is written to the operator:\nM    AMA116A ENTER AMASPZAP CONTROL STATEMENT OR END\nN\nD  {DUMP|DUMPT} member \u00ddcsect | ALL | * \u00a8 \u00ddclass-name\u00a8\nI    Dumps a specific control section or all control sections in a load\nI    module in a PDS, a program object in either a PDSE or a z/OS UNIX\nI    file. DUMP produces a hexadecimal printout only, while DUMPT prints\nI    the hexadecimal data, the EBCDIC translation, and the mnemonic\nI    equivalent of the data.\nI\nI      member: The member name of the load module in a PDS or program\nI              object in a PDSE that contains the control section(s) to\nI              be dumped.\nI\nI      csect | ALL | *: Defines the name of the particular control\nI                       section that is to be dumped. To dump all the\nI                       CSECTs of a load module in a PDS or a program\nI                       object in a PDSE, specify \"ALL\" instead of the\nI                       CSECT name. If you omit the variable entirely,\nI                       or, for program objects only, code \"*\", SPZAP\nI                       assumes that you mean to dump only the first\nI                       CSECT in the load module or program object.\nI\nI      class-name: Indicates, for program objects only, the class of text\nI      that you want to dump. The default is B_TEXT. Specifying B_*, C_*,\nI      or D_* causes SPZAP to dump all text classes beginning with the\nI      string that precedes the asterisk. If you want to omit the CSECT\nI      name and supply a class-name, code a single asterisk for the CSECT\nI      name followed by the class-name.\nN\nD  IDRDATA xxxxxxxx\nI    Causes SPZAP to place up to eight bytes of user data into the SPZAP\nI    CSECT identification record of the load module; this is only done if\nI    a REP operation associated with a NAME statement is performed and\nI    the load module was processed by the linkage editor to include CSECT\nI    identification records. The variable is:\nI\nI    xxxxxxxx: Eight (or fewer) bytes of user data (with no embedded\nI              blanks) that are to be placed in the user data field of\nI              the SPZAP IDR of the named load module. If more than eight\nI              characters are in the variable field, only the first eight\nI              characters will be used.\nN\nD  NAME member \u00ddcsect | * \u00a8 \u00ddclass-name\u00a8\nI    Identifies a CSECT in a load module member of a PDS, a program\nI    object member of a PDSE, or a z/OS UNIX file that is to be the\nI    object of subsequent VERIFY, REP, SETSSI, or IDRDATA operations. The\nI    variables are:\nI\nI    member: The member name of the load module belonging to a PDS, the\nI            program object belonging to a PDSE, or a z/OS UNIX file that\nI            includes the CSECT that contains the data to be inspected or\nI            modified. The load module or the program object must be a\nI            member of the data set defined by the SYSLIB DD statement.\nI\nI    csect | *: The name of the particular control section that contains\nI               the data to be verified or replaced. If you omit this\nI               variable, or, for program objects only, code \"*\", SPZAP\nI               assumes that the first CSECT in the load module contained\nI               in a PDS, the program object contained in a PDSE, or a\nI               z/OS UNIX file is the one to be used. If there is only\nI               one CSECT in the load module or program object, this\nI               variable is not necessary.\nI\nI    class-name: Indicates, for program objects only, the class of text\nI                that you want to modify. The default is B_text. If you\nI                want to omit the CSECT name and supply a class-name,\nI                code a single asterisk for the CSECT name, followed by\nI                the class-name.\nN\nD  NAME member\nI    Identifies the member of a data library that is to be the object of\nI    subsequent VERIFY, REP, ABSDUMP, ABSDUMPT or RECORD operations. The\nI    variable is:\nI\nI    member: The member name of a data library whose contents are to be\nI            displayed, verified and/or replaced.\nI\nN\nD  RECORD nnnnnnnn\nI    This statement identifies a particular record in a member of a PDSE\nI    data library and must follow a NAME member statement where member\nI    specifies the name of the member. The combination of NAME and RECORD\nI    defines the record for which VER|VERIFY and possible REPs are to be\nI    performed.\nI\nI    nnnnnnnn: consists of 1 to 8 decimal digits and specifies the\nI              relative record of interest. Leading zeroes are ignored.\nI              For example, the first record of a member may be specified\nI              as 1 or 01 or 00000001.\nN\nD  REP offset data\nI    Modifies data at a specified location in a CSECT or physical record\nI    that was previously defined by the NAME, NAME/RECORD combination, or\nI    CCHHR statement. The data specified on the REP statement will\nI    replace the data at the record or CSECT location stipulated in the\nI    offset variable field.\nI\nI    SPZAP issues message AMA122I to record the contents of the specified\nI    location as they were before the change was made.\nI\nI    offset: Provides the hexadecimal displacement of data to be replaced\nI            in a CSECT or data record. This displacement need not\nI            address a fullword boundary, but it must be specified as a\nI            multiple of two hexadecimal digits (0D, 02C8, 001C52).\nI\nI    data: Defines the bytes of data to be inserted at the location. As\nI          with the offset variable, the number of bytes of data defined\nI          must be specified as a multiple of two hexadecimal digits. If\nI          desired, the data within the variable may be separated by\nI          commas (never blanks); but again, the number of digits between\nI          commas must also be a multiple of two.\nN\nD  SETSSI xxyynnnn\nI    Places user-supplied system status information in the directory\nI    entry for the load module member in a PDS or program object member\nI    in a PDSE. The SSI entry must have been created when the load module\nI    or program object member was link edited. The variable is:\nI\nI    xxyynnnn: Four bytes of system status information the user wishes to\nI              place in the SSI field for this member. Each byte is\nI              supplied as two hexadecimal digits indicating the\nI              following:\nI                xx - change level\nI                yy - flag byte\nI                nnnn - modification serial number\nN\nD  {VERIFY|VER} offset expected-content\nI    Causes the data at a specified location within a CSECT or physical\nI    record to be compared with the data supplied in the statement.\nI\nI    offset: The hexadecimal displacement of data to be inspected in a\nI            CSECT or record.\nI\nI    expected-content: Defines the bytes of data that are expected at the\nI                      specified location. As with the offset variable,\nI                      the number of bytes of data defined must be\nI                      specified as a multiple of two hexadecimal\nI                      digits. If desired, the data within the parameter\nI                      may be separated by commas (never blanks), but\nI                      again, the number of digits between commas must\nI                      also be a multiple of two.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD169A": {"ttr": 48649, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x10\\x00\\x10\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:04", "lines": 16, "newlines": 16, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD169A\nKABSDUMPT\nTSPZAP: ABSDUMPT dump all tracks of a data set.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=AMASPZAP\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=SHR,DSN=some.dataset.name\nD//SYSIN     DD *\nD  ABSDUMPT ALL\nD/*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD169B": {"ttr": 48651, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:04", "lines": 26, "newlines": 26, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD169B\nKVER\nTSPZAP: Verify values in a specific Format-4 location.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//* EVEN A SIMPLE 'VER' ASSUMES AN UPDATE WILL FOLLOW:\nD//* 004 AMA117D REPLY Y OR N TO UPDATE VTOC  SHTSO4 A03D  KTOMIAKH\nD//* R 4,N         <==== TO BE SAFE\nD//*\nD//ST01#01 EXEC PGM=AMASPZAP\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=SHR,DSN=FORMAT4.DSCB,\nD//             UNIT=SYSALLDA,vol=SER=SHTSO4,\nD//             DCB=KEYLEN=44\nD//SYSIN     DD *\nD*          CCCCHHHHRR\nD  CCHHR    0000000101\nD  VER      0000 04040404\nD  ABSDUMPT ALL\nD/*\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD169C": {"ttr": 48653, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:05", "lines": 30, "newlines": 30, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD169C\nKIEAVTRML\nKDFSMRCL0 IMS\nTSPZAP: Add IMS to 'Termination Recovery Manager List'\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//* YOU MAY HAVE TO DUMPT THE MODULE AND SEE WHERE THE NEXT\nD//* FREE ENTRY IS.\nD//*\nD//ST01#01 EXEC PGM=AMASPZAP\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=SHR,DSN=SYS1.LPALIB.COPY\nD//*\nD//*  OFFSET X'0000' MAY NOT BE AVAILABLE IN YOUR SYSTEM.\nD//*\nD//*  REFER TO THE MVS INTERFACE SECTION IN THE IMS INSTALLATION\nD//*  GUIDE FOR ADDITIONAL INFORMATION.\nD//*\nD//SYSIN     DD *\nD  NAME IGC0001C IEAVTRML\nD  VER 0000 000000000000000000000000\nD  VER 0000 C4C6E2D4D9C3D3F000000000\nD*          D F S M R C L 0\nD/*\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD169D": {"ttr": 48655, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x11\\x00\\x11\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:05", "lines": 17, "newlines": 17, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD169D\nKABSDUMPT\nTSPZAP: Dump a single PDS member.\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=AMASPZAP,REGION=1024K,TIME=30\nD//SYSPRINT  DD SYSOUT=*\nD//SYSLIB    DD DISP=SHR,DSN=pds.dataset.name     <== CHANGE THIS\nD//SYSIN     DD *\nD*          Change MBRNAME to the member you want to dump.\nD  ABSDUMPT MBRNAME\nD/*\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD17": {"ttr": 48657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x18\\x00\\x18\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:23", "lines": 24, "newlines": 24, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD17\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17: AMATERSE\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185623\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 17: AMATERSE\nN--------------------\nNAMATERSE is a service aid program that operates in problem state. You\nNcan use AMATERSE to pack a data set before transmitting a copy to\nNanother site, typically employing FTP as the transmission mechanism. A\nNcomplementary unpack service is provided to create a similar data set\nNat the receiving site.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD17O1": {"ttr": 48897, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:23", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD17O1\nKTRSMAIN\nTTERSE: Compresses a data set and FTP to IBM. (Deprecated)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//* TRSMAIN\nD//ST01#01 EXEC PGM=TRSMAIN,PARM='PACK'\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..TRS.LOADLIB\nD//SYSPRINT  DD SYSOUT=*\nD//INFILE    DD DISP=SHR,DSN=SYS1.TCPIP.CTRACE,\nD//             DCB=BUFNO=20\nD//OUTFILE   DD DISP=(NEW,CATLG),DSN=&SYSUID..P45316.CTRACE1.TERSED,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(TRK,(500,250),RLSE),\nD//             DCB=BUFNO=20\nD//*            DCB=(RECFM=FB,BLKSIZE=6144,LRECL=1024,BUFNO=20)\nD//*\nD//ST01#02 EXEC PGM=FTP,PARM='TESTCASE.SOFTWARE.IBM.COM (EXIT'\nD//SYSPRINT  DD SYSOUT=*\nD//FTPDATA   DD DISP=SHR,DSN=SYS1.TCPPARMS(FTPDATAP)\nD//SYSTCPD   DD DISP=SHR,DSN=SYS1.TCPPARMS(TCPDATAP)\nD//SYSIN     DD *\nDanonymous ;\nDyourid@your.mail.server ;\nDcd s390/toibm/misc ;\nDbin ;\nDMKDIR p45316 ;\nDCD   p45316 ;\nDsendsite ;\nDput P45316.CTRACE1.TERSED p45316.ctrace1.tersed ;\nDquit ;\nD/*\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD17O2": {"ttr": 48899, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x14\\x00\\x14\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:23", "lines": 20, "newlines": 20, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD17O2\nKTRSMAIN\nTTERSE: Compress a data set smaller than PACK. (Deprecated)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=TRSMAIN,PARM='SPACK' <=Super Pack\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..TRS.LOADLIB\nD//SYSPRINT  DD SYSOUT=*\nD//INFILE    DD DISP=SHR,DSN=SYS1.TCPIP.CTRACE,\nD//             DCB=BUFNO=20\nD//OUTFILE   DD DISP=(NEW,CATLG),DSN=&SYSUID..P45316.CTRACE1.TERSED,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(TRK,(500,250),RLSE),\nD//             DCB=BUFNO=20\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD17O3": {"ttr": 48901, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00\\x15\\x00\\x15\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:24", "lines": 21, "newlines": 21, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD17O3\nKTRSMAIN\nTTERSE: De-compress a data set. (Deprecated)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=TRSMAIN,PARM='UNPACK'\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..LOADLIB\nD//SYSPRINT  DD SYSOUT=*\nD//INFILE    DD DISP=SHR,DSN=&SYSUID..MPTF2032.BIN,\nD//             DCB=BUFNO=20\nD//OUTFILE   DD DISP=(NEW,CATLG),DSN=&SYSUID..MPTF2032.UNPACKED,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(TRK,(500,250),RLSE),\nD//             DCB=BUFNO=20\nD//*            DCB=(RECFM=FB,BLKSIZE=6144,LRECL=1024,BUFNO=20)\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1701": {"ttr": 48903, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18V\\x00.\\x00.\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:56:47", "lines": 46, "newlines": 46, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1701\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-Planning for AMATERSE\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185647\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 17: AMATERSE\nN--------------------\nNPlanning for AMATERSE\nN---------------------\nNAMATERSE is an application that prepares diagnostic materials, such as\nNz/OS dumps and traces, for transmission to IBM and independent software\nNvendor sites. When the materials arrive, AMATERSE also provides a means\nNto create similar data sets to support diagnosis of problems.\nN\nNIf you have previously used the TRSMAIN utility (see\nNhttp://techsupport.services.ibm.com/390/trsmain.html), note the\nNfollowing changes made to prepare AMATERSE for formal inclusion\nNin z/OS:\nN\nN-> Use AMATERSE as the preferred application program name rather than\nN   TRSMAIN. TRSMAIN ships as an alias entry point to AMATERSE.\nN\nN-> Use the replacements for the DDNAMES, which are SYSUT1 and SYSUT2.\nN   When the TRSMAIN entry point of AMATERSE is invoked, DDNAMES INFILE\nN   and OUTFILE remain as the defaults.\nN\nN-> AMATERSE is in MIGLIB, a library that is part of the link list. No\nN   STEPLIB DDNAME is necessary to invoke AMATERSE.\nN\nN-> In nearly all cases, you can use AMATERSE, the TRSMAIN utility, and\nN   VM terse interchangeably.\nN\nISee \"Restrictions for AMATERSE\" for the exceptions to this rule.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1702": {"ttr": 48905, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18X\\x00_\\x00_\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:58:35", "lines": 95, "newlines": 95, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1702\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-Invoking AMATERSE\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185835\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 17: AMATERSE\nN--------------------\nNInvoking AMATERSE\nN-----------------\nNFigure 74 shows an example of the JCL to invoke AMATERSE. Lower case\nNtext reflects the data that you must alter.\nN\nNFigure 74: IBM sample jcl\nN-------------------------\nD//step    EXEC PGM=AMATERSE,PARM=aaaaa\nD//SYSPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=12901,LRECL=133)\nD//SYSUT1    DD DISP=bbb,DSN=your.input.dataset.name\nD//SYSUT2    DD DISP=ccc,DCB=ddd,DSN=your.output.dataset.name,\nD//             SPACE=space_parameters\nD//SYSUT3    DD DISP=ccc,SPACE=space_parameters\nN\nN\nNSpecifying the JCL statements for AMATERSE\nN------------------------------------------\nNIf you have previously used the TRSMAIN program to invoke AMATERSE, you\nNcan continue using it along with the old DDNAMES. However, if you\nNchoose to use AMATERSE instead of TRSMAIN, realize that the\nNDDNAMES are changed:\nN\nNSYSUT1 replaces INFILE and SYSUT2 replaces OUTFILE.\nN\nNAMATERSE requires the following JCL statements. The required DD\nNstatements are SYSPRINT, SYSUT1 and SYSUT2. SYSUT3 is optional. Replace\nNaaaaa in the above example with one of the following values:\nN\nN  PACK: Compresses records in a data set so that the output is known as\nN        the simple format.\nN\nN  SPACK: Compresses records in a data set so that the output is known\nN         as the complex format. The SPACK option is more time-consuming\nN         than the PACK option by a factor of about three, but in many\nN         cases produces much smaller output.\nN\nN  UNPACK: Reverses the PACK or SPACK operation. If you inadvertently\nN          packed a data set multiple times, restore it using the UNPACK\nN          function the same multiple number of times.\nI\nINote: A data set compressed by either PACK or SPACK should not be\nImodified in any way. If such a data set is modified, the UNPACK routines\nIare unable to reconstruct the original data set.\nN\nN\nNExample SPACK: Super-Pack a pds\nN-------------------------------\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* Super-Pack a PDS into a sequential data set.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#01 EXEC PGM=AMATERSE,PARM='SPACK'\nD//SYSPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=12901,LRECL=133)\nD//SYSUT1    DD DISP=SHR,DSN=&SYSUID..DEMO.CNTL\nD//SYSUT2    DD DISP=(NEW,CATLG),DSN=&SYSUID..DEMO.CNTL.TRS,\nD//             UNIT=SYSALLDA,VOL=SER=VPWRKA,\nD//             SPACE=(TRK,(10,10,0),RLSE)\nD//*            DCB=(RECFM=FB,BLKSIZE=6144,LRECL=1024,BUFNO=20)\nD//SYSUT3    DD DISP=(NEW,DELETE),SPACE=(TRK,(10,10,0))    <== Optional\nD//*\nN\nN\nNExample UNPACK: UnPack a sequential data set\nN--------------------------------------------\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* UnPack a sequential data set back into a PDS.\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST02#02 EXEC PGM=AMATERSE,PARM='UNPACK'\nD//SYSPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=12901,LRECL=133)\nD//SYSUT1    DD DISP=SHR,DSN=&SYSUID..DEMO.CNTL.TRS\nD//*            DCB=(RECFM=FB,BLKSIZE=6144,LRECL=1024,BUFNO=20)\nD//SYSUT2    DD DISP=(NEW,CATLG),DSN=&SYSUID..DEMO.CNTL.UNPACK,\nD//             UNIT=SYSALLDA,VOL=SER=VPWRKA,\nD//             SPACE=(TRK,(25,50,15),RLSE)\nD//SYSUT3    DD DISP=(NEW,DELETE),SPACE=(TRK,(10,10,0))    <== Optional\nD//*\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1703": {"ttr": 48907, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x18Y\\x005\\x005\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T18:59:21", "lines": 53, "newlines": 53, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1703\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-Invoking AMATERSE from a problem program\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-185921\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 17: AMATERSE\nN--------------------\nNInvoking AMATERSE from a problem program\nN----------------------------------------\nNTo invoke AMATERSE from a program, specify the following information:\nN\nN-> PACK, SPACK, or UNPACK on the PARM parameter of the EXEC statement\nN\nN-> The DDNAMES of the data sets to be processed by the AMATERSE\nN   program, if the calling program is to override the DDNAMES.\nN\nNFigure 75 shows how to invoke AMATERSE using alternate DDNAMES:\nN---------------------------------------------------------------\nD*...\nD* Invoke AMATERSE to perform SPACK processing\nD         LINK EP=AMATERSE,PARAM=(PARM,DDNAMES),VL=1\nD*...\nD*        Request SPACK option\nDPARM     DS     0H                 EXEC PARM='data'\nDPARMLEN  DC     Y(L'PARMTEXT)      Length of data\nDPARMTEXT DC     C'SPACK'           AMATERSE processing option\nD*\nD*        Request MYPRINT, MYSYSUT1, and MYSYSUT2 instead\nD*        of SYSPRINT, SYSUT1, and SYSUT2 respectively\nDDDNAMES  DS     0H                 DDNAME override data\nDDDNAMEL  DC     Y(DDNAME9-DDNAMET) Length of data\nDDDNAMTT  DS     0C                 DDNAME override list\nD         DC     5XL8'0'            Not used by AMATERSE\nDSYSPRINT DC     CL8'MYPRINT'       Instead of SYSPRINT\nD         DC     XL8'0'             Not used by AMATERSE\nDSYSUT1   DC     CL8'MYSYSUT1'      Instead of SYSUT1\nDSYSUT2   DC     CL8'MYSYSUT2'      Instead of SYSUT2\nDSYSUT3   DC     CL8'MYSYSUT3'      Instead of SYSUT3\nDDDNAME9  DS     0C                 End of list\nD*...\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1704": {"ttr": 49423, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19(\\x00X\\x00X\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:28:55", "lines": 88, "newlines": 88, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1704\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-Additional considerations for AMATERSE\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192855\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 17: AMATERSE\nN--------------------\nNAdditional considerations for AMATERSE\nN--------------------------------------\nNWhen using AMATERSE, certain restrictions apply as well as allocation\nNand space considerations, as well as restrictions to consider when you\nNare using AMATERSE.\nN\nNRestrictions for AMATERSE\nN-------------------------\nNThe following restrictions apply to AMATERSE:\nN\nN-> VSAM data sets and direct (DSORG=DA) data sets are not supported.\nN\nN-> Data sets with keys (KEYLEN) are not supported.\nN\nN-> A partitioned data set (PDS) compressed by AMATERSE on MVS cannot be\nN   unpacked by VM TERSE. This results in a 1007 or 1009 return code\nN   from VM TERSE. A PDS must be compressed to a DASD.\nN\nN-> Partitioned data sets extended (PDSE) containing program objects are\nN   not supported.\nN\nN-> AMATERSE can only handle data sets with a LRECL of more than 32K but\nN   less than 64K when only RECFM=VBS DASD data sets are processed.\nN\nN-> A data set with the FB record format can be packed and unpacked to a\nN   FBS data set. However, during the UNPACK operation, extending a\nN   non-empty output data set with DISP=MOD is not possible because this\nN   results in a FB data set. An error message is issued for this.\nN\nN-> AMATERSE does not support large block interface (LBI).\nN\nN\nNAllocation considerations\nN-------------------------\nNThe data set compressed by AMATERSE (produced by PACK or SPACK) must be\nNof fixed or fixed-blocked record format (RECFM) with a record length\nN(LRECL) of 1024 and any legal block size (BLKSIZE). These values do not\nNhave to be specified explicitly on the DD statement.\nN\nNThe data set restored by AMATERSE (produced by UNPACK) must match the\nNoriginal RECFM and LRECL. Leave the DCB information off the DD\nNstatement for AMATERSE program to set it up. If it unpacks to an\nNalready existing data set then the DCB parameters are checked for\nNcompatibility.  RECFM must be the same in all cases except for\nNVariable to Undefined and Undefined to Variable. If you specify the\nNDCB parameters to force data that was originally variable (V) format\nNinto undefined (U) format, or conversely, a warning message is written\nNand the operation is performed.\nN\nNSpace considerations\nN--------------------\nNWhen allocating space for the output data set SYSUT2, you must estimate\nNthe required size information:\nN\nN-> For the PACK or SPACK option a data set compressed by AMATERSE is\nN   expected to be about half the size of the original. Allocate more\nN   than expected and use the RLSE (partial release parameter) function\nN   of the SPACE value to release the unused portion back to the system.\nN\nN-> For the UNPACK option: If the data set contains random data,\nN   allocate three to five times the size of the compressed data set.\nN   If the data set contains Listing, Document, or Messages type data,\nN   allocate five to ten times the size of the compressed data set.\nN\nNIf there is not enough allocated space, the program issues\nNABEND X'B37':\nI\nINot Enough Space Allocated for the Output Data Set\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD179A": {"ttr": 48909, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x04\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x04\\x00'\\x00'\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:04:04", "lines": 39, "newlines": 39, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD179A\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-User example: Compresses a data set and FTP to IBM. (Deprecated)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-190404\n@IBM Corporation\n*\nD//* TRSMAIN\nD//ST01#01 EXEC PGM=TRSMAIN,PARM='PACK'\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..TRS.LOADLIB\nD//SYSPRINT  DD SYSOUT=*\nD//INFILE    DD DISP=SHR,DSN=SYS1.TCPIP.CTRACE,\nD//             DCB=BUFNO=20\nD//OUTFILE   DD DISP=(NEW,CATLG),DSN=&SYSUID..P45316.CTRACE1.TERSED,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(TRK,(500,250),RLSE),\nD//             DCB=BUFNO=20\nD//*            DCB=(RECFM=FB,BLKSIZE=6144,LRECL=1024,BUFNO=20)\nD//*\nD//ST01#02 EXEC PGM=FTP,PARM='TESTCASE.SOFTWARE.IBM.COM (EXIT'\nD//SYSPRINT  DD SYSOUT=*\nD//FTPDATA   DD DISP=SHR,DSN=SYS1.TCPPARMS(FTPDATAP)\nD//SYSTCPD   DD DISP=SHR,DSN=SYS1.TCPPARMS(TCPDATAP)\nD//SYSIN     DD *\nDanonymous ;\nDyourid@your.mail.server ;\nDcd s390/toibm/misc ;\nDbin ;\nDMKDIR p45316 ;\nDCD   p45316 ;\nDsendsite ;\nDput P45316.CTRACE1.TERSED p45316.ctrace1.tersed ;\nDquit ;\nD/*\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD179B": {"ttr": 48911, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x04\\x00\\x16\\x00\\x16\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:04:05", "lines": 22, "newlines": 22, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD179B\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-User example: Compress a data set smaller than PACK. (Deprecated)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-190405\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=TRSMAIN,PARM='SPACK' <=Super Pack\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..TRS.LOADLIB\nD//SYSPRINT  DD SYSOUT=*\nD//INFILE    DD DISP=SHR,DSN=SYS1.TCPIP.CTRACE,\nD//             DCB=BUFNO=20\nD//OUTFILE   DD DISP=(NEW,CATLG),DSN=&SYSUID..P45316.CTRACE1.TERSED,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(TRK,(500,250),RLSE),\nD//             DCB=BUFNO=20\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD179C": {"ttr": 48913, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x04\\x00\\x17\\x00\\x17\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:04:05", "lines": 23, "newlines": 23, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD179C\nKTRSMAIN\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 17.\nT-User example: De-compress a data set. (Deprecated)\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-190405\n@IBM Corporation\n*\nD//*\nD//ST01#01 EXEC PGM=TRSMAIN,PARM='UNPACK'\nD//STEPLIB   DD DISP=SHR,DSN=&SYSUID..LOADLIB\nD//SYSPRINT  DD SYSOUT=*\nD//INFILE    DD DISP=SHR,DSN=&SYSUID..MPTF2032.BIN,\nD//             DCB=BUFNO=20\nD//OUTFILE   DD DISP=(NEW,CATLG),DSN=&SYSUID..MPTF2032.UNPACKED,\nD//             UNIT=SYSALLDA,\nD//             SPACE=(TRK,(500,250),RLSE),\nD//             DCB=BUFNO=20\nD//*            DCB=(RECFM=FB,BLKSIZE=6144,LRECL=1024,BUFNO=20)\nD//*\nD/*CANCEL\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD18": {"ttr": 48915, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x04\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:04:05", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD18\nKPDUU\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 18: Problem Documentation Upload Utility\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 18: Problem Documentation Upload Utility\nN------------------------------------------------\nNThe IBM z/OS Problem Documentation Upload Utility (PDUU) is a utility\nNthat sends large amounts of documentation in a more efficient manner\nNthan using File Transfer Protocol (FTP) to send one large data set to\nNIBM FTP sites. This utility sections the input file data set (such as\nNstand-alone dump data set) into smaller data sets that are compressed\nNand sent in parallel using multiple, simultaneous FTP sessions. This\nNresults in shorter transmission time for very large data sets. You can\nNalso encrypt the data sets.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1801": {"ttr": 48917, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x05\\x00,\\x00,\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:05:30", "lines": 44, "newlines": 44, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1801\nKPDUU MTFTPS\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 18.\nT-Planning to use PDUU\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-190530\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 18: Problem Documentation Upload Utility\nN------------------------------------------------\nNPlanning to use PDUU\nN--------------------\nNUse the PDUU as the primary utility for sending large volumes of\nNdocumentation, such as stand-alone dumps, to the IBM FTP site. The\nNencryption capability ensures that the transfer occurs in a secure\nNManner. AMATERSE is useful for compressing (packing) and unpacking\nNrelatively small amounts of service data, but is incompatible with PDUU\nN(output and input), and offers no data transfer capability. If you have\nNpreviously used the PDUU, shipped as the MTFTPS stand-alone program\nNfrom:\nUwww-01.ibm.com/support/docview.wss?uid=isg3T1011823\nNyou must understand the following changes made to package the PDUU\nNutility as part of z/OS:\nN\nN-> The PDUU utility name is AMAPDUPL; however MTFTPS ships as an alias\nN   entry point to AMAPDUPL.\nN\nN-> AMAPDUPL resides in SYS1.MIGLIB (which must be a data set in the\nN   LNKLST concatenation), so a STEPLIB DDNAME is not necessary to\nN   invoke AMAPDUPL.\nN\nNPrerequisites and restrictions for PDUU\nN---------------------------------------\nMSee the manual.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1802": {"ttr": 48919, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x05\\x006\\x006\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:05:30", "lines": 54, "newlines": 54, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1802\nKPDUU MTFTPS\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 18.\nT-JCL statements for PDUU\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-190530\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 18: Problem Documentation Upload Utility\nN------------------------------------------------\nNJCL statements for PDUU\nN-----------------------\nNExample 1: Simple FTP connection\nn--------------------------------\nNThe following JCL example invokes the AMAPDUPL program to transfer file\nNH44IPCS.WESSAMP.TRKS055K to the testcase.boulder.ibm.com system as a\nNset of work files stored in /toibm/mvs with the shared prefix\nN12345.123.123.wessamp.bigfile. Each of the three work files is 500 MB.\nN\nD//PDUU    EXEC PGM=AMAPDUPL\nD//SYSIN     DD *\nDUSERID=anonymous\nDPASSWORD=your-email-address\nDTARGET_SYS=testcase.boulder.ibm.com\nDTARGET_DSN=wessamp.bigfile\nDWORK_DSN=wes.ftpout\nDCC_FTP=03\nDWORK_DSN_SIZE=500\nDDIRECTORY=/toibm/mvs/\nDPMR=12345.123.123\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DISP=SHR,DSN=H44IPCS.WESSAMP.TRKS055K\nD//SYSUDUMP  DD SYSOUT=*\nD//DEBUG     DD SYSOUT=*,RECFM=FB,LRECL=134    <== Optional\nD//FTPCMDS   DD *                              <== Optional\nDuser anonymous pw userid@company.com\nDLOCSIte FWFriendly\nD/*\nD//*\nN\nIThe optional //FTPCMDS is shown as part of using a proxy and\nIhow to specify PASSIVE mode.\nMSee the manual for examples using PROXY.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1803": {"ttr": 49153, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00S\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x18\\x00\\x9e\\x00\\x9e\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:18:53", "lines": 158, "newlines": 158, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1803\nKPDUU MTFTPS\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 18.\nT-Control statements for PDUU\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-191853\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 18: Problem Documentation Upload Utility\nN------------------------------------------------\nNControl statements for PDUU\nN---------------------------\nNPDUU is managed through the following SYSIN statements with these\nNguidelines:\nN\nN-> Use an asterisk (*) in the first column to indicate comments.\nN\nN-> Keywords must start in column one.\nN\nN-> Use control statements that are in form VERB=OPERAND.\nN\nN-> Mixed case verbs and operands are allowed.\nN\nN-> The operand starts in the column after the equal sign and goes to\nN   the first blank column except TARGET_SYS, DIRECTORY, CIPHER_KEY,\nN   ACCOUNT, USERID, and PASSWORD, which can contain blanks.\nN\nN-> Anything after the first blank is ignored except for any operands\nN   that can contain blanks. In those cases, do not use blanks from\nN   column one to the end of the operand.\nN\nN\nNKeywords\nN--------\nN  TARGET_SYS\nN    The name of the TCP/IP system to transfer the files to using FTP.\nN    One through 64 characters, dotted decimal format is allowed, no\nN    default value, can contain blanks, and it must be specified.\nN\nN    If using a proxy server, this should be the name of the proxy\nN    server.\nN\nN    You can include additional FTP command parameters on the TARGET_SYS\nN    parameter by using the z/OS UNIX specifications as shown in the\nN    topic FTP command -- Entering the FTP environment in z/OS\nN    Communications Server: IP User's Guide and Commands, SC31-8780.\nN\nN    For example, to trace output (-d) and use a specific\nN    ftpdata_filename (-f\"//'WES.MYFTP.DATA'\"):\nN\nDTARGET_SYS=-d -f\"//'WES.MYFTP.DATA'\" testcase.boulder.ibm.com\nN\nN    Use the -p parameter to specify an alternate IP stack.\nN\nN  USERID\nN    The user ID on the target system that is used to send the files. 1\nN    through 64 characters, no default value, does not have to be\nN    specified, and can contain imbedded blanks. If USERID and PASSWORD\nN    are not supplied and NETRCLEVEL=2, the values from the NETRC data\nN    set is used for the FTP sessions.\nN\nN    If using a proxy server, this can be the full login to the remote\nN    system in the format userid@remote.system.name.\nN\nN  PASSWORD\nN    The password for the USERID on the target system. 1 through 64\nN    characters and the default value is blanks.\nN\nN    If using a proxy server, this can be the USERID and PASSWORD for\nN    the proxy server in the format userid@password.\nN\nN  ACCOUNT\nN    The account data that is sent when an FTP session is started.\nN\nN  TARGET_DSN\nN    The variable (descriptive) portion for the file names on the target\nN    system. 1 through 64 characters, no default value, and it must be\nN    specified.\nN\nN  WORK_DSN\nN    The prefix for the data set names of work files on the sending\nN    system. 1 through 40 characters, no default value, and it must be\nN    specified.\nN\nN    The work data sets are large format, sequential, data sets and\nN    cannot have the compaction attribute.\nN\nN    Note: Because work files are dynamically allocated with large\nN    format and do not support compressed format, if you specify data\nN    class for work files with the compaction attribute or N, the\nN    following message is issued for all work files:\nN\nN    IGD17163I COMPRESSION REQUEST NOT HONORED FOR DATA SET\nN              work_file_dsname BECAUSE DATA SET CHARACTERISTICS\nN              DO NOT MEET COMPRESSION CRITERIA, ALLOCATION CONTINUES\nN\nN  WORK_DSN_SIZE\nN    The maximum size of the work files in megabytes. 1 through\nN    4 decimal digits and the default is 100 MB.\nN\nN  KEEP_WORK\nN    The parameter to save the work data sets that are dynamically\nN    allocated for each FTP session. If you omit the KEEP_WORK\nN    parameter,the program does not save the work data sets. Y is the\nN    only value for the KEEP_WORK parameter.\nN\nN    Note: Only specify this parameter when debugging a problem.\nN\nN  DATACLAS\nN    The data class to use when allocating the work files on the sending\nN    system. 1 through 8 characters with no default value.\nN\nN  STORCLAS\nN    The storage class to use when allocating the work files on the\nN    sending system. 1 through 8 characters with no default value.\nN\nN  CC_FTP\nN    The number of parallel FTP sessions to use when transmitting the\nN    files. 1 or 2 decimal digits, the value must be between 1 and 20,\nN    and the default is 2.\nN\nN  DIRECTORY\nN    The directory on the target system where the files will be sent\nN    with FTP. 1 through 32 characters, with no default, can contain\nN    blanks, and you must specify the directory.\nN\nN  PMR\nN    The PMR number with which this file is associated. This field must\nN    be 13 numeric or uppercase characters, specify in the form\nN    xxxxx.yyy.zzz, and define the variables as:\nN\nN    Field Explanation      Example\nN    ----- ---------------- -------\nN    XXXXX PMR Number       34143\nN    YYY   Branch office    055\nN    ZZZ   IBM Country Code 724\nN\nN  CIPHER_KEY\nN    The encryption key to use for 192-bit triple DES encryption. The 24\nN    characters following CIPHER_KEY= are used as the key. The key can\nN    include imbedded and/or trailing blanks. For example,\nN    CIPHER_KEY=HERE IS CIPHER KEY IN 24 or CIPHER_KEY=Shortkey. If you\nN    do not specify CIPHER_KEY=, no encryption is performed. If you\nN    encrypt the data set using CIPHER_KEY, you must provide IBM with\nN    the encryption key so they can perform problem diagnosis.\nN\nN    Note: If CIPHER_KEY= is followed by 24 blanks, the file will be\nN          encrypted with a key of 24 blanks.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD19": {"ttr": 49155, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19\\x19\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:19:55", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD19\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19: Dump suppression\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-191955\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNThe system requests dumps you might not need. To keep from using your\nNsystem's resources on unneeded dumps, you should suppress them. The\nNreasons for the unneeded dumps and ways to suppress them are:\nN\nN-> Duplicate dumps: The system can request a dump for a problem that\nN   recurs. The dump written when the problem first occurs can be used\nN   for diagnosis; additional dumps are unneeded. Also, sometimes a\nN   system can request several dumps for one instance of a problem. A\nN   recurring problem may have been diagnosed, but the fix not yet\nM   incorporated into the system.\nN\nN-> Dumps for certain abend codes: For some abend codes, the\nN   accompany messages provide the needed problem data. To eliminate\nN   the dumps for these abend codes, use a SLIP command.\nN\nN-> A dump for an abend in an application program: if the dump is not\nN   needed.\nN\nN-> Dumps the installation decides are not needed: If you decide that\nN   certain dumps are not needed, you can code a routine for an\nN   installation exit to suppress these dumps.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1901": {"ttr": 49157, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19 \\x00#\\x00#\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:20:48", "lines": 35, "newlines": 35, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1901\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using DAE to suppress dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192048\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing DAE to suppress dumps\nN---------------------------\nNDump analysis and elimination (DAE) suppresses dumps that match a dump\nNyou already have. Each time DAE suppresses a duplicate dump, the system\nNdoes not collect data for the duplicate or write the duplicate to\nNa data set. In this way, DAE can improve dump management by only\nNdumping unique situations and by minimizing the number of dumps.\nN\nNPerforming dump suppression\nN---------------------------\nNTo perform dump suppression, DAE builds a symptom string, if the data\nNfor it is available. If the symptom string contains the minimum problem\nNdata, DAE uses the symptom string to recognize a duplicate SVC dump or\nNSYSMDUMP dump requested for a software error. When installation\nNparameters request suppression, DAE suppresses the duplicate dump.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1902": {"ttr": 49159, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19#\\x00\\x9b\\x00\\x9b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:23:44", "lines": 155, "newlines": 155, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1902\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using DAE to suppress dumps\nT-Planning for DAE dump suppression\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192344\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing DAE to suppress dumps\nN---------------------------\nNPlanning for DAE dump suppression\nN---------------------------------\nNPlanning for DAE dump suppression consists of tasks to be done before\nNan initial program load (IPL). The system programmer performs the\nNfollowing tasks:\nN\nN-> Selecting or creating an ADYSETxx parmlib member\nN\nN-> Defining a DAE data set\nN\nN\nNSelecting or creating an ADYSETxx parmlib member\nN------------------------------------------------\nNSelect or create an ADYSETxx parmlib member to be used at IPL. IBM\nNsupplies three ADYSETxx members:\nN\nN-> ADYSET00, which starts DAE and keeps 400 symptom strings in virtual\nN   storage. The IBM-supplied ADYSET00 member contains:\nN\nDDAE=START,RECORDS(400),\nDSVCDUMP(MATCH,SUPPRESSALL,UPDATE,NOTIFY(3,30)),\nDSYSMDUMP(MATCH,UPDATE)\nN\nN   ADYSET00 does not suppress SYSMDUMP dumps because\nN   installation-provided programs deliberately request them. If\nN   desired, change the ADYSETxx member being used to suppress\nN   SYSMDUMP dumps.\nN\nN-> ADYSET01, which stops DAE processing. The IBM-supplied ADYSET01\nN   member contains:\nN\nDDAE=STOP\nN\nN   When using the DAE Display facility's TAKEDUMP (T) action in a\nN   sysplex where DAE is active, you must change the contents of\nN   ADYSET01 to:\nN\nDDAE=STOP,GLOBALSTOP\nN\nN-> ADYSET02, which contains the same parameters as ADYSET00.\nN\nNThe IBM-supplied IEACMD00 parmlib member issues a SET DAE=00 command,\nNwhich activates ADYSET00 during IPL. If you do not want DAE to start\nNduring IPL, change IEACMD00 to specify SET DAE=01.\nN\nN\nNExample: An ADYSETxx Member for a System in a Sysplex\nN-----------------------------------------------------\nNThe systems in the sysplex share a DAE data set, SYS1.DAESHARE, so DAE\nNcan suppress a duplicate of a previous dump from any system. This\nNmember also specifies SUPPRESSALL.\nN\nDDAE=START,RECORDS(400),\nD  SVCDUMP(MATCH,SUPPRESSALL,UPDATE,NOTIFY(3,30)),\nD  SYSMDUMP(MATCH,UPDATE)\nD  SHARE(DSN,OPTIONS),\nD  DSN(SYS1.DAESHARE)\nN\nN\nNExample: An ADYSETxx Member with GLOBAL\nN---------------------------------------\nNThe following ADYSET04 member changes the DAE data set being used on\nNall systems to SYS1.DAESH2 and changes the dump options on all systems.\nN\nDDAE=START,RECORDS(400),\nD  SVCDUMP(MATCH,SUPPRESSALL,UPDATE,NOTIFY(3,30)),\nD  SYSMDUMP(MATCH,UPDATE)\nD  SHARE(DSN,OPTIONS),\nD  DSN(SYS1.DAESH2)\nD  GLOBAL(DSN,OPTIONS)\nN\nN\nNDefining a DAE data set\nN-----------------------\nNDefine a DAE data set when defining system data sets. When the system\nNis IPLed or if DAE is stopped and restarted, DAE should continue using\nNthe DAE data set previously used.\nN\nN1. Define the DAE data set in a DD statement. Use the default name of\nNSYS1.DAE for a single system; use a different name for a DAE data set\nNshared by systems in a sysplex.\nN\nNExample: DAE Data Set for Single System\nN---------------------------------------\nNThe sample DD statement is for a DAE data set used by a single system.\nN\nD//ST01#01 EXEC PGM=IEFBR14\nD//DAE       DD DISP=(NEW,CATLG),DSN=SYS1.DAE,\nD//          UNIT=3390,VOL=SER=SG2001,\nD//          SPACE=(TRK,(6,2)),\nD//          DCB=(DSORG=PS,RECFM=FB,BLKSIZE=0,LRECL=255)\nD//*\nN\nN\nIIn a sysplex, each system can have its own DAE data set, but IBM\nIrecommends that all systems in a sysplex share a DAE data set.\nN\nNExample: DAE Data Set Shared by Sysplex Systems\nN-----------------------------------------------\nNThe sample DD statement is for a DAE data set shared by the systems in\nNa sysplex. The statement will catalog the DAE data set in the shared\nNmaster catalog or in the master catalog on each system that uses it.\nN\nD//ST01#01 EXEC PGM=IEFBR14\nD//DAE       DD DISP=(NEW,CATLG),DSN=SYS1.DAE,\nD//          UNIT=3390,VOL=SER=SG2001,\nD//          SPACE=(TRK,(12,2)),\nD//          DCB=(DSORG=PS,RECFM=FB,BLKSIZE=0,LRECL=255)\nD//*\nN\nN\nNSynch dump retention with DFSMShsm\nN----------------------------------\nNIf you manage your dumps with the hierarchical storage manager (HSM),\nNconsider using an HSM purge time of 60 days to correspond to the DAE\nNrecord aging of 60 days.\nN\nN\nNGlobal Resource Serialization (GRS)\nN-----------------------------------\nNProvide DAE data set integrity through a serialization component, such\nNas global resource serialization.\nN\nIFor information, see z/OS MVS Planning: Global Resource Serialization.\nN\nN\nNSecure access with your SAF Product\nN-----------------------------------\nNControl access to the DAE data set. On a single system or on all\nNsystems sharing the DAE data set in a sysplex, use Resource Access\nNControl Facility (RACF) to control access. Enter a RACF ADDSD command\nNto define a data set profile for the DAE data set.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1903": {"ttr": 49161, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19#\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:23:44", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1903\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using DAE to suppress dumps\nT-Accessing the DAE data set\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192344\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing DAE to suppress dumps\nN---------------------------\nNAccessing the DAE data set\nN--------------------------\nNA DAE data set that is used by one system or is shared by systems in a\nNsysplex is accessed by:\nN\nN-> Invoking the IPCS DAE Display panel\nN   See IPCS option 3.5.\nN\nN-> Generating a suppressed dump\nN   Use the IPCS TAKEDUMP option.\nN\nN-> Editing the DAE data set\nN   Edit the DAE data set, using Interactive System Productivity\nN   Facility (ISPF) edit.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1904": {"ttr": 49163, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x003\\x003\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:09", "lines": 51, "newlines": 51, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1904\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using DAE to suppress dumps\nT-Stopping, starting, and changing DAE\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192509\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing DAE to suppress dumps\nN---------------------------\nNStopping, starting, and changing DAE\nN------------------------------------\nNIf an ADYSET00 parmlib member is used and the DAE data set is\nNallocated, DAE starts during IPL. Normally, DAE runs at the same\nNtime as the system. However if DUMPSRV is ever cancelled\nNor restarted, DAE restarts as well albeit with dump suppression\nNinactive You must manually reactivate dump suppression using\nNthe SET DAE=xx command.\nN\nNAn operator can stop and start DAE with the following steps. One reason\nNto use these steps would be to change to a different ADYSETxx parmlib\nNmember with different parameters.\nN\nNStopping DAE\nN------------\nNYou can stop DAE with a SET DAE command that specifies the ADYSET01\nNparmlib member, which contains a DAE=STOP statement:\nN\nDSET DAE=01\nN\nN\nNStarting DAE\nN------------\nNYou can start DAE with a SET DAE command that specifies an ADYSETxx\nNparmlib member that contains the DAE=START parameter, such as an\nNinstallation-provided ADYSET03 parmlib member:\nN\nDSET DAE=03\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1905": {"ttr": 49165, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00(\\x00(\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:32", "lines": 40, "newlines": 40, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1905\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using DAE to suppress dumps\nT-Stopping, starting, and changing DAE\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192532\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing DAE to suppress dumps\nN---------------------------\nNChanging DAE processing in a Sysplex\nN------------------------------------\nNThe operator can change all DAE processing in a sysplex, if desired.\nNFor example, the operator can do the following to make all systems in\nNa sysplex use a different ADYSETxx member:\nN\nN1. Stop DAE processing using the IBM-supplied ADYSET01 member:\nN\nDROUTE *ALL,SET DAE=01\nN\nNAnother way to stop DAE processing on all systems in a sysplex is to\nNspecify in the SET DAE command an ADYSETxx member containing a\nNGLOBALSTOP parameter.\nN\nN2. Start DAE processing using, for example, the ADYSET04 member:\nN\nDROUTE *ALL,SET DAE=04\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1906": {"ttr": 49167, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00 \\x00 \\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:33", "lines": 32, "newlines": 32, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1906\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using a SLIP command to suppress dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192533\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing a SLIP command to suppress dumps\nN--------------------------------------\nNSome dumps are almost never needed. For example, some abend codes tell\nNthe diagnostician enough to solve the problem. For these codes, place\nNSLIP operator commands in an IEASLPxx parmlib member to suppress the\nNunneeded dumps. The IBM-supplied IEASLP00 member contains the SLIP\nNcommands to suppress abend dumps that are seldom needed.\nN\nNTo suppress SVC dumps and ABEND SYSMDUMP dumps for abend code X'B37',\nNadd the following to IEASLPxx:\nN\nDSLIP SET,COMP=B37,ACTION=(NOSVCD,NOSYSM),END\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1907": {"ttr": 49409, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00\\x19\\x00\\x19\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:33", "lines": 25, "newlines": 25, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1907\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using an ABEND macro to suppress dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192533\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing an ABEND macro to suppress dumps\nN--------------------------------------\nNA program can suppress a dump by issuing an ABEND macro without a DUMP\nNparameter. Application programmers should not specify a DUMP parameter\nNwhen a symptom dump can provide enough information for diagnosis.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1908": {"ttr": 49411, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:33", "lines": 28, "newlines": 28, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1908\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Using installation exit routines to suppress dumps\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192533\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNUsing installation exit routines to suppress dumps\nN--------------------------------------------------\nNAn installation can add installation exit routines to suppress dumps.\nNUse IEAVTABX if you want to suppress abend dumps based on the job name,\nNabend code, or other information in the system diagnostic work area\nN(SDWA). Use IEAVTSEL if you want to discard an SVC or SYSMDUMP dump\nNbased on information in the dump header or from DAE. Use JES2 exit 4 or\nNJES3 exit IATUX34 to suppress different types of dumps.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD1909": {"ttr": 49413, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:33", "lines": 27, "newlines": 27, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD1909\nKDAE ELIMINATION\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 19.\nT-Determining why a dump was suppressed\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192533\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 19: Dump suppression\nN----------------------------\nNDetermining why a dump was suppressed\nN-------------------------------------\nNIf an intended dump is missing, use the list in the mannual to decide\nNwhy. The list gives reasons why dumps are suppressed, including the\nNways discussed in this topic. In planning for problem determination, be\nNaware of all of these ways so that your installation does not suppress\nNintended dumps.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD20": {"ttr": 49415, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:34", "lines": 31, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD20\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 20: Messages\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180512-1590354\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 20: Messages\nN--------------------\nNThe system issues messages to do the following:\nN\nN-> Tell the operator or system programmer of progress and problems in\nN   system processing\nN\nN-> Ask the operator to take actions and make decisions\nN\nN-> Tell the application programmer how the system ran the application\nN   program and of problems in the application program\nN\nNThe system issues messages from the base control program components and\nNa variety of subsystems, products, and applications. Applications\nNrunning under the system can also issue their own messages.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD2001": {"ttr": 49417, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:34", "lines": 31, "newlines": 31, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD2001\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 20.\nT-Producing messages\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192534\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 20: Messages\nN--------------------\nNProducing messages\nN------------------\nNYou can get the system to produce a message by issuing a macro in any\nNprogram or by asking an operator to enter a command. The macros and\nNcommand are:\nN\nN-> LOG operator command to write a message to the SYSLOG and OPERLOG\nN\nN-> WTL macro to write a message to the SYSLOG and OPERLOG\nN\nIWhile you can write an HLASM program using WTO and WTOR to communicate\nIwith the operator console, it may be un-monitored.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD2002": {"ttr": 49419, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x00%\\x00%\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:51", "lines": 37, "newlines": 37, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD2002\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 20.\nT-Receiving messages\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192551\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 20: Messages\nN--------------------\nNReceiving messages\nN------------------\nNThe system issues messages through WTO and WTOR macros to the following\nNlocations. Routing codes determine the display and print location of\nNthe messages.\nN\nN-> Console\nN\nN-> Extended console\nN\nN-> Hard-copy log\nN\nN-> Job log\nN\nN-> SYSOUT data set\nN\nNThe system issues messages to the SYSLOG and OPERLOG using the WTL\nNmacro.\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSAD2003": {"ttr": 49421, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x18\\x13\\x7f\\x01\\x18\\x13\\x7f\\x19%\\x004\\x004\\x00\\x00\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-05-17T00:00:00", "modifydate": "2018-05-17T19:25:51", "lines": 52, "newlines": 52, "modlines": 0, "user": "KTOMIAK"}, "text": "STSAD2003\nTz/OS MVS Diagnosis -Tools and Service Aids\nT-Chapter 20.\nT-Planning message processing for diagnosis\nE\"Kenneth Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180517-192551\n*\n@IBM Corporation\n*\nBiea2v1c2.pdf\nBGA22-7589-19 z/OS MVS Diagnosis\nB-Tools and Service Aids\nBVersion 1 Release 13\n*\nNTools and Service Aids\nN======================\nNChapter 20: Messages\nN--------------------\nNPlanning message processing for diagnosis\nN-----------------------------------------\nNYour installation can change message processing in a number of ways to\nNoptimize diagnosis.\nN\nNYour installation can do the following tasks:\nN\nN-> Control message location\nN\nN-> Suppress messages\nN\nN-> Automate message processing\nN\nN-> Not retain action messages\nN\nN-> Suppress the symptom dump message (IEA995I)\nN\nNThis section can help you find the information you need to optimize\nNmessage processing for your installation.\nN\nISee the manual for additional details.\nN\nNControlling message location\nN\nNSuppressing messages\nN\nNHandling message floods\nN\nNAutomating message processing\nN\nNNot retaining action messages\nN\nNSuppressing symptom dumps (IEA995I)\n* End of WISH.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT978/CBT.V500.FILE978.PDS/XMTSAD.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT978/CBT.V500.FILE978.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}