{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013719000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE992.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE992.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x14'", "DS1TRBAL": "b'\\x17>'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xd0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xd0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\n\\x85\\x00\\x04\\n\\x85\\x00\\x06\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04c\\x00W\\x01 \\x05o\\x01 \\x05o\\x126\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf9@@@'", "ispf": {"version": "04.99", "flags": 0, "createdate": "2020-02-25T00:00:00", "modifydate": "2020-02-25T12:36:57", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-499"}, "text": "REGULAR CBT TAPE - VERSION 499    FILE:  992\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT499.FILE992\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 464 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/25/20    12:36:57    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE992": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04c\\x00I\\x01 \\x05o\\x01 \\x05o\\x126\\x00!\\x00!\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf9@@@'", "ispf": {"version": "04.99", "flags": 0, "createdate": "2020-02-25T00:00:00", "modifydate": "2020-02-25T12:36:49", "lines": 33, "newlines": 33, "modlines": 0, "user": "CBT-499"}, "text": "//***FILE 992 is a collection of code snippets (not necessarily     *   FILE 992\n//*           executable as-is) which have been used in programs    *   FILE 992\n//*           to limit their use, for safety and security reasons.  *   FILE 992\n//*           If you only want certain people to use the code, or   *   FILE 992\n//*           if you require that a user have access to a certain   *   FILE 992\n//*           RACF profile, etc. etc., here is some code that you   *   FILE 992\n//*           can fit into existing programs to accomplish that     *   FILE 992\n//*           goal.  Also, some narratives (without code) have      *   FILE 992\n//*           been included, explaining the rationale behind        *   FILE 992\n//*           either protecting code from unauthorized use, or to   *   FILE 992\n//*           show how to bypass existing protection, as well.      *   FILE 992\n//*           It all depends on what you need, or what you want     *   FILE 992\n//*           to do.                                                *   FILE 992\n//*                                                                 *   FILE 992\n//*       Members in this PDS:                                      *   FILE 992\n//*                                                                 *   FILE 992\n//*       IMPLEXEC - Code which makes the unauthorized user think   *   FILE 992\n//*                  that the command doesn't exist.                *   FILE 992\n//*                                                                 *   FILE 992\n//*       IDS8CHAR - Notes on how to convert PSCBUSER dependent     *   FILE 992\n//*                  code, which identifies the user's TSO id,      *   FILE 992\n//*                  when 8-character userids are in effect, and    *   FILE 992\n//*                  you're running under one of these.  Then,      *   FILE 992\n//*                  the PSCBUSER field isn't valid.                *   FILE 992\n//*                                                                 *   FILE 992\n//*       RACRO01  - Code to use RACROUTE to require READ access    *   FILE 992\n//*                  to FACILITY class profiles, in order to run    *   FILE 992\n//*                  the TSO command.                               *   FILE 992\n//*                                                                 *   FILE 992\n//*       RACRO02  - Code to use RACROUTE to require READ access    *   FILE 992\n//*                  to FACILITY class profiles, in order to run    *   FILE 992\n//*                  a batch program.                               *   FILE 992\n//*                                                                 *   FILE 992\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IDS8CHAR": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x009\\x01\\x19\\x15\\x8f\\x01\\x19\\x15\\x8f\\x16B\\x00\\x94\\x00!\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2019-06-07T00:00:00", "modifydate": "2019-06-07T16:42:39", "lines": 148, "newlines": 33, "modlines": 0, "user": "SBGOLOB"}, "text": "NOTES ABOUT Z/OS 2.3 AND HIGHER SYSTEMS, WHICH SUPPORT 8-CHARACTER\nUSERIDS:\n\nCode:\n\nHere is some 8-character userid compatible coding, involving the PSCB\ncontrol block in TSO.  Many TSO commands get the userid of the user\nfrom the PSCBUSER field.  This is a 7-character field, so the PSCB\ncontrol block was modified to add an extra 8-character userid field.\nSee below for a picture of the entire PSCB control block.\n\nFirst is some code how to get to the PSCB:\n\n         L     R1,16               CVTPTR\n         L     R1,0(,R1)           TCB WORDS\n         L     R1,4(,R1)           CURRENT TCB\n         L     R1,180(,R1)         TCBJSCB\n         L     R1,264(,R1)         JSCBPSCB\n         LA    R1,0(,R1)           CLEAR HI ORDER BYTE\n         LTR   R1,R1               IS THERE A PSCB\n\nNow we have some code to accommodate 8-character userids,\nby using the alternative new 8-byte fields in the PSCB.\n\n         CLI   PSCBUSER,C'>'              IS THE ID 8-CHARACTERS?\n         BE    BIGID                      YES. PRINT SEPARATELY.\n         MVC   MESSAGE+13(7),PSCBUSER     MOVE MY USERID INTO MESSAGE\n         TPUT  MESSAGE,L'MESSAGE  DISPLAY THE WHOLE MESSAGE ON THE TUBE\n         B     RETURN\nBIGID    DS    0H\n         MVC   MESSAGE+13(8),PSCB+X'54'   USERID IS IN NEW PLACE\n         TPUT  MESSAGE,L'MESSAGE  DISPLAY THE WHOLE MESSAGE ON THE TUBE\n         DROP  R3\n\nNotes:\n\n  To see if 8-character userids are in effect, the switch is located\n  at TSVT+x'6'.  Macro is IKJTSVT.\n\n  Code to get to the TSVT:\n\n         L     R2,16               Point to CVT\n         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)\n         CLI   6(R2),X'08'         8-char userds in effect?\n         BE    YES8CHAR\n\n  Flag settings at TSVT+6:  X'00' pre-2.3 system\n                            X'07' 2.3 system. 8-character switch off\n                            X'08' 2.3 system. 8-character switch on\n\n\nDisplay of the entire PSCB when 8-character ids are in effect:\nDisplay comes from the LPSCB command in CBT File 300.\n\n8-CHARACTER USERID SUPPORT IS: ON\n00006F80 PSCB ADDRESS\n    +0  PSCBUSER 6EF7C2E8E3C5E2   >7BYTES\n    +7  PSCBUSRL 07\n    +8  PSCBGPNM E2E8E2C1D3D3C4C1 SYSALLDA\n   +10  PSCBATR1 E100             OPER ACCT JCL CONS\n   +12  PSCBATR2 0000\n   +14  PSCBLTIM D63CFC10E2AD80C2 2019.158  13:50.45.455576\n   +1C  PSCBSUBH 00\n   +1D  PSCBSUBC 00\n   +1E  PSCBSUBM 00\n   +1F  PSCBSOUT 00\n   +20  PSCBU8L  08\n   +21  PSCBDRBA 000000\n   +24  RESERVED 00000000\n   +28  PSCBDEST 0000000000000000\n   +30  PSCBRLGB 00007EF8\n   +34  PSCBUPT  00008FC8\n   +38  PSCBUPTL 0038\n   +3A  PSCBCHAR 00\n   +3B  PSCBLINE 00\n   +3C  PSCBRSZ  000F4240\n   +40  PSCBU    0000000000000000\n   +48  PSCBEXWD\n   +48  PSCBEXK  00000000\n   +4C  PSCBEXL  00000004\n   +50  PSCBEXD  00000000\n   +54  PSCBUID8 E2C2C7D6D3D6C2C3 SBGOLOBC\n   +5C  RESERVED 00000000000000000000000000000000\n\nDisplay of the entire PSCB when 8-character support is on,\nbut the userid has less than 8 characters.\n\n8-CHARACTER USERID SUPPORT IS: ON\n00006F80 PSCB ADDRESS\n    +0  PSCBUSER E2C2C7D6D3D6C2   SBGOLOB\n    +7  PSCBUSRL 07\n    +8  PSCBGPNM E2E8E2C1D3D3C4C1 SYSALLDA\n   +10  PSCBATR1 E100             OPER ACCT JCL CONS\n   +12  PSCBATR2 0000\n   +14  PSCBLTIM D6361A848DCB40C0 2019.153  02:29.43.469236\n   +1C  PSCBSUBH 00\n   +1D  PSCBSUBC 00\n   +1E  PSCBSUBM 00\n   +1F  PSCBSOUT 00\n   +20  PSCBU8L  07\n   +21  PSCBDRBA 00006C\n   +24  RESERVED 00000000\n   +28  PSCBDEST 0000000000000000\n   +30  PSCBRLGB 00007EF8\n   +34  PSCBUPT  00008FC8\n   +38  PSCBUPTL 0038\n   +3A  PSCBCHAR 00\n   +3B  PSCBLINE 00\n   +3C  PSCBRSZ  000F4240\n   +40  PSCBU    0000000000000000\n   +48  PSCBEXWD\n   +48  PSCBEXK  00000000\n   +4C  PSCBEXL  00000004\n   +50  PSCBEXD  00000000\n   +54  PSCBUID8 E2C2C7D6D3D6C240 SBGOLOB\n   +5C  RESERVED 00000000000000000000000000000000\n\nDisplay of the PSCB when 8-character userids are turned off:\n\n00006F80 PSCB ADDRESS\n    +0  PSCBUSER C9C2D4E4E2C5D9   IBMUSER\n    +7  PSCBUSRL 07\n    +8  PSCBGPNM F3F3F9F040404040 3390\n   +10  PSCBATR1 E100             OPER ACCT JCL CONS\n   +12  PSCBATR2 0000\n   +14  PSCBLTIM D63D07E8C21928C0 2019.158  14:43.44.604562\n   +1C  PSCBSUBH 00\n   +1D  PSCBSUBC 00\n   +1E  PSCBSUBM 00\n   +1F  PSCBSOUT 00\n   +20  RESERVED 00\n   +21  PSCBDRBA 00006B\n   +24  RESERVED 00000000\n   +28  PSCBDEST 0000000000000000\n   +30  PSCBRLGB 00007EF8\n   +34  PSCBUPT  00008FC8\n   +38  PSCBUPTL 0038\n   +3A  PSCBCHAR 00\n   +3B  PSCBLINE 00\n   +3C  PSCBRSZ  0007A120\n   +40  PSCBU    0000000000000000\n   +48  PSCBEXWD\n   +48  PSCBEXK  00000000\n   +4C  PSCBEXL  00000004\n   +50  PSCBEXD  00000000\n   +54  RESERVED 0000000000000000\n   +5C  RESERVED 00000000000000000000000000000000\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IMPLEXEC": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x17\\x01\\x19\\x15\\x8f\\x01\\x19\\x15\\x8f\\x14\\x10\\x00b\\x00b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-06-07T00:00:00", "modifydate": "2019-06-07T14:10:17", "lines": 98, "newlines": 98, "modlines": 0, "user": "SBGOLOB"}, "text": "*  -----------------------------------------------------------------\n*  THIS CODE, WHEN INSERTED INTO A TSO COMMAND SOURCE, WILL SIMULATE\n*  A \"IKJ56500I COMMAND XXXXXXXX NOT FOUND\" MESSAGE, MAKING THE USER\n*  WHO IS NOT AUTHORIZED, THINK THAT THE COMMAND DOESN'T EXIST.\n*  -----------------------------------------------------------------\n*  THIS CODE NEEDS TO BE MODIFIED TO ACCOMMODATE 8-CHARACTER USERIDS.\n*  IF 8-CHARACTER USERIDS ARE IN EFFECT, AND YOU ARE RUNNING UNDER\n*  ONE OF THEM, THEN THE CONTENTS OF THE PSCBUSER FIELD IS '>7BYTES',\n*  THE PSCBUSRL FIELD (THE PSCBUSER LENGTH FIELD) IS X'07', AND\n*  THE CORRECT USERID IS AT PSCB+X'54' PSCBUID8 FOR 8 BYTES, AND THE\n*  CORRECT PSCB USER LENGTH IS AT PSCB+X'20' PSCBU8L WHICH IS X'08'.\n*  SO FROM Z/OS 2.3 AND UP, IF 8-CHARACTER USERIDS ARE IN EFFECT,\n*  YOU HAVE TO CODE FOR THIS. THE SWITCH TO SHOW WHETHER 8-CHARACTER\n*  USERID SUPPORT IS TURNED ON, IS LOCATED IN THE TSVT (MACRO IKJTSVT)\n*  CONTROL BLOCK, AT TSVT+6.  X'00' MEANS PRE-Z/OS 2.3. X'07' MEANS\n*  THAT 8-CHARACTER USERID IS OF, AND X'08' MEANS 8-CHARACTER USERID\n*  SUPPORT HAS BEEN TURNED ON.\n*  -----------------------------------------------------------------\n         L     R1,548              PSAAOLD\n         L     R15,172(,R1)        ASCBJBNI\n         LTR   R15,R15             IS THIS A JOB\n         BNZ   IMPLEXEC            YES, QUIT\n         L     R15,60(,R1)         ASCBTSB\n         LTR   R15,R15             IS THIS A TSO SESSION\n         BZ    PROCEED             NO, BRANCH IF STARTED TASK\n.SKIP1   ANOP\nAUTHID   L     R1,16               CVTPTR\n         L     R15,0(,R1)          TCB WORDS CVTTCBP\n         L     R15,4(,R15)         CURRENT TCB\n         L     R1,180(,R15)        TCBJSCB\n         L     R1,264(,R1)         JSCBPSCB\n         LTR   R1,R1               ANY PSCB?\n         BZ    IMPLEXEC            NO - NOT A TSO SESSION\n         USING PSCB,R1\n*        TM    PSCBATR1,PSCBCTRL   OPERATOR                       FEB99\n*        BO    PROCEED             YES - PROCEED                  FEB99\n*        AGO   .IMPLEX                                            FEB99\n* ATTENTION:                       PERSONALLY, I THINK THAT IF YOU HAVE\n* =========                        TSO OPER AND RACF UPDATE TO DASDVOL,\n*                                  YOU'RE PROBABLY OKAY TO PROCEED.  IF\n*                                  YOU WANT TO HARD-CODE VALID USERIDS,\n*                                  THEN DELETE THE 3 FEB99 LINES ABOVE.\n*                                  - GREG PRICE                   FEB99\n*\n*        TM    PSCBATR1,PSCBCTRL   OPERATOR\n*        BZ    IMPLEXEC            NO - BRANCH\n*        CLC   PSCBUSER(2),SAMURAI SYSTEMS SUPPORT USERID\n*        BE    PROCEED             YES, BRANCH\n         LA    R15,USERIDS\nAUTHLOOP CLI   0(R15),0            END OF LIST?\n         BE    IMPLEXEC            YES, NOT AUTHORIZED\n         CLC   PSCBUSER(7),0(R15)\n         BE    PROCEED\n         LA    R15,8(,R15)         POINT TO NEXT USERID\n         B     AUTHLOOP            GO CHECK IT\n         DROP  R1                  PSCB\n*SAMURAI DC    C'SP  '\nUSERIDS  DC    0D'0'               ALIGN FOR EASY ZAPS\n         DC    CL8'MYUSRID '\n         DC    CL8'IBMUSER '\n         DC    CL8'USERID1 '\n         DC    CL8'USERID2 '\n         DC    CL8'        '\n         DC    CL8'        '\n         DC    CL8'        '\n         DC    CL8'        '\n         DC    H'0'                END OF USERID LIST\n.IMPLEX  ANOP\n         SPACE\nIMPLEXEC EQU   *\n         L     R1,CPPLCBUF\n         XC    2(2,R1),2(R1)       SET CBUF TO IMPLICIT EXEC\n         L     R1,CPPLECT          GET ECT ADDRESS\n         USING ECT,R1\n         CLI   ECTSCMD,C' '        IS THIS A SUBCOMMAND\n         BNE   *+10                YES - SAY SUBCOMMAND NOT FOUND\n         MVC   ECTPCMD,=CL8'EXEC'  NO  - SAY COMMAND NOT FOUND\n         DROP  R1                  ECT\n         LR    R1,R13              FREE GETMAINED AREA\n         L     R0,@SIZE\n         L     R13,4(,R13)\n         FREEMAIN R,A=(1),LV=(0)\n         L     R1,24(,R13)         RESTORE CPPL POINTER\n         LA    R15,12(,R13)        POINT TO 2-WORD XCTL PARM\n         XC    0(8,R15),0(R15)     CLEAR IT\n         XCTL  (2,12),EP=EXEC,SF=(E,(15))\n         EJECT\n************************************************************\n*                                                          *\n*        SET UP IOPL FOR PUTLINE                           *\n*                                                          *\n************************************************************\n         SPACE\nPROCEED  LA    R15,MYIOPL\n*    .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\n         IKJCPPL\n         IKJPSCB\n         IKJECT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RACRO01": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\x19\\x15\\x8f\\x01\\x19\\x15\\x8f\\x16S\\x00S\\x00F\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-06-07T00:00:00", "modifydate": "2019-06-07T16:53:14", "lines": 83, "newlines": 70, "modlines": 0, "user": "SBGOLOB"}, "text": "*   This code was taken from a TSO command which turns RACF SPECIAL\n*   or RACF OPERATIONS on or off.  The writer wanted to make sure\n*   that you couldn't use this program to turn SPECIAL or OPERATIONS\n*   on or off, unless you had READ access to a FACILITY class\n*   profile.  See the RACROUTE macro invocation below.\n*\n*   The comparison to the actual profile entities is performed using\n*   the PARMTABL entries coded below.\n*\n*   I bypassed the entire RACF check by branching to YESAUTH and\n*   setting R11 to 0.  RACF checking can be turned on by commenting\n*   out the label NORACF.\n*\nPARMOK   DS    0H                      PARAMETER WAS OK\n         L     R4,52(,R5)              LOAD ADDRESS OF BRANCH LABEL\n* ---- >          COMMENT OUT TO DO RACF CHECKS       < ---- * BELOW\nNORACF   B     YESAUTH                 BYPASS RACF CHECKS\n* ---- >          COMMENT OUT TO DO RACF CHECKS       < ---- * ABOVE\n         LA    R5,12(,R5)              LOAD ADDRESS OF PROFILE TO CHECK\n         RACROUTE REQUEST=AUTH,WORKA=RACFWORK,LOG=ASIS,                X\n               ENTITY=((R5)),CLASS='FACILITY',ATTR=READ\n         LTR   R11,R15                 CHECK RACF RETURN CODE\n         BNZ   NOTAUTH                 IF NOT AUTH. BRANCH TO ERROR\nYESAUTH  DS    0H                      RACF CHECKS BYPASSED\n         LA    R11,0                   RETURN CODE ZERO\n* -- >  Test if this command is being run APF Authorized - below\n         STM   R15,R1,SAVE14T1     Now save registers and test if APF\n         XR    R15,R15                  authorized.\n         TESTAUTH FCTN=1           Are we authorized?\n         LTR   R15,R15             Test the return code.\n         BNZ   NOTAPF              Not zero, tell not authorized.\n         LM    R15,R1,SAVE14T1     Restore registers used by TESTAUTH.\n* -- >  Test if this command is being run APF Authorized - above\n         MODESET KEY=ZERO              GET READY TO CHANGE BIT IN ACEE\n         BR    R4                      BRANCH TO LABEL SPEC. IN TABLE\nSPEC     DS    0H\n         OI    ACEEFLG1,ACEESPEC       SET SPECIAL ON\n         B     NZERO\nNOSPEC   DS    0H\n         NI    ACEEFLG1,255-ACEESPEC   SET SPECIAL OFF\n         B     NZERO\nOPER     DS    0H\n         OI    ACEEFLG1,ACEEOPER       SET OPERATIONS  ON\n         B     NZERO\nNOOPER   DS    0H\n         NI    ACEEFLG1,255-ACEEOPER   SET OPERATIONS  OFF\n         B     NZERO\nNZERO    DS    0H\n         MODESET KEY=NZERO             RETURN TO USER KEY\nEXIT     DS    0H\n         L     R13,SAVE+4              RETURN\n         LR    R15,R11                 SET RETURN CODE FROM RACHECK\n         RETURN (14,12),RC=(15)\nNOTAUTH  DS    0H\n         TPUT  =CL39'YOU ARE NOT AUTHORIZED TO THIS FUNCTION',39\n         B     EXIT\nNOTAPF   DS    0H\n         TPUT  =CL39'YOU NEED TO RUN THIS PROGRAM AUTHORIZED',39\n         B     EXIT\nWRGPARM  DS    0H\n         TPUT  =CL68'WRONG PARAMETER, SHOULD BE SPECIAL/NOSPECIAL/OPERAX\n               TIONS/NOOPERATIONS',68\n         LA    R11,16                  SET RETURN CODE\n         B     EXIT\nSAVE     DC    18F'0'                  SAVE AREA\nSAVE14T1 DC    4F'0'\nPARM     DC    CL12' '                 PARAMETER SUPPLIED TO PROGRAM\nPARMTABL DS    0F                      PARAMETER TABLE\n         DC    CL12'SPECIAL'           EACH ENTRY CONSISTS OF 56 BYTES:\n         DC    CL40'RACFAUTH.SPECIAL'  A 12 BYTE FIELD THAT HAS TO\n         DC    A(SPEC)                   MATCH THE PARAMETER SPECIFIED\n         DC    CL12'NOSPECIAL'         A 40 BYTE FIELD CONTAINING THE\n         DC    CL40'RACFAUTH.SPECIAL'    RACF PROFILE TO CHECK\n         DC    A(NOSPEC)               A 4 BYTE ADDRESS OF THE LABEL\n         DC    CL12'OPERATIONS'          TO BRANCH TO IN ORDER TO\n         DC    CL40'RACFAUTH.OPERATIONS' CARRY OUT THE FUNCTION\n         DC    A(OPER)                   REQUESTED\n         DC    CL12'NOOPERATIONS'\n         DC    CL40'RACFAUTH.OPERATIONS'\n         DC    A(NOOPER)\nPARMEND  DS    0H                      END OF PARAMETER TABLE\nMOVECHR  MVC   PARM(0),0(R9)           EX INSTRUCTION TO MOVE PARMS\nRACFWORK DS    128F                    WORKAREA FOR RACROUTE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACRO02": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x11\\x01 \\x05O\\x01 \\x05o\\x126\\x00Z\\x00\\\\\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2020-02-23T00:00:00", "modifydate": "2020-02-25T12:36:11", "lines": 90, "newlines": 92, "modlines": 0, "user": "SBGOLOB"}, "text": "***********************************************************************\n*\n*   This code was taken from a batch program which changes the volser\n*   identity in Record 3 of Track 0 of a disk pack, while the pack\n*   remains online.  There is a definite risk in this, since the system\n*   judges the volume id of a pack from its UCB entry, rather than\n*   from the actual identity that is written on Record 3 of Track 0\n*   on the actual pack.  The UCB volid is only changed when the pack is\n*   varied offline and then varied online.\n*\n*   The RACROUTE condition chosen here, was to ask for READ access to\n*   a FACILITY class profile called TBCXTUL.  That name was made up\n*   from CBT backwards, X, and Tools.  But it can be any profile at\n*   all, in the FACILITY class.\n*\n*   Make sure you have enough base register space, to make room for\n*   RACWORK and FRACWORK data areas.  You can GETMAIN these as well.\n*\n***********************************************************************\n*                                                                     *\n*  CHECK THE AUTHORITY OF THE USER TO SAF CLASS \"FACILITY' FOR        *\n*  ENTITY \"TBCXTUL\".  NOTE THAT FASTAUTH IS USED.  TO AVOID THE       *\n*  SITUATION WHERE SPECIAL ATTRIBUTES OF THE USER MAY ALLOW THE       *\n*  ACCESS WITH LOGGING, A CHECK IS MADE FOR A NON-ZERO REASON         *\n*  CODE.  THIS CONDITION WILL ALSO BE CONSIDERED A FAILURE.           *\n*                                                                     *\n***********************************************************************\n*                                  Convert to an unconditional branch\n         NOP   TESTEND             to bypass all of this checking.\n*                                  This is nice to put in for\n*                                  convenience, but don't publicize.\nTEST0    RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X\n               ENVIR=CREATE,                                           X\n               GLOBAL=YES,                                             X\n               RELEASE=2.2,                                            X\n               MF=S\n***********************************************************************\n*        TEST  PROFILE TBCXTUL OF FACILITY CLASS                      *\n***********************************************************************\nTEST1    MVC   RESOURCE,=CL44'TBCXTUL  '  (CBT BACKWARDS, X, TOOLS)\n         RACROUTE REQUEST=FASTAUTH,WORKA=RACWORK,WKAREA=FRACWORK,      X\n               ENTITY=RESOURCE,CLASS=FACILITY,ATTR=READ,               X\n               MF=(E,RACROUTE)\n         LTR   R15,R15             TEST THE RETURN CODE\n         BNZ   TESTBAD             NOT ZERO, NOT AUTHORIZED\n         CLC   RACROUTE+4(4),=F'0' TEST THE REASON CODE\n         BNE   TESTBAD             NOT ZERO, NOT AUTHORIZED\n         B     TESTOK\n***********************************************************************\nTESTBAD  DS    0H\nTESTFAIL MVC   RESOURCE,=CL44' '   BLANK THE PROFILE NAME FOR \"FAIL\"\n         OI    FLAG0,X'02'         TEST WAS NOT OK,\n*                                  THEN FAIL AFTER RACF CLEANUP.\n***********************************************************************\n***********************************************************************\n*        CLEANUP AFTER RACROUTE                                       *\n***********************************************************************\nTESTOK   RACROUTE REQUEST=LIST,WORKA=RACWORK,CLASS=FACILITY,           X\n               ENVIR=DELETE,                                           X\n               RELEASE=2.2,                                            X\n               MF=S\n         TM    FLAG0,X'02'\n         BO    NOTAUTHR\nTESTEND  DS    0H\n*                      GO TO NORMAL END OF CHECKING (TEST WAS OK)\n         EJECT\n***********************************************************************\nNOTAUTHR DS    0H                  If no PARM coded, then leave.\n         MVI   OUTLINE-1,X'40'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE+1(37),=C' You have not been authorized by RACF'\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE+1(21),=C' Nothing was changed.'\n         PUT   SYSPRINT,OUTLINE\nOPMSG3   WTO   'ONLC003 Not authorized by RACF--Nothing Changed',      +\n               ROUTCDE=11\n***********************************************************************\n         DC    X'40'\nOUTLINE  DS    CL133\nSYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FBA,LRECL=133\n***********************************************************************\nFLAG0    DC    X'00'\nFACILITY DC    CL8'FACILITY'       RACROUTE CLASS NAME\nRESOURCE DC    CL44' '             RACROUTE RESOURCE NAME\nRACROUTE RACROUTE REQUEST=FASTAUTH,MF=L RACROUTE LIST FORM\nRACWORK  DS    CL512               RACROUTE WORK AREA 1\nFRACWORK DS    16F                 RACROUTE WORK AREA 2\n***********************************************************************\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT992/FILE992.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT992", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}