{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011809000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE339.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE339.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x05'", "DS1TRBAL": "b'\\x86\\xf0'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\x86\\x00\\x06\\x02\\x86\\x00\\t\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"JES2X005": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "***********************************************************************\n*THIS PROGRAM IS A JES2/SP1.3.6 (FMID HJE1367) AND JES2/SP2.1.7       *\n*(HJE2215) USER EXIT #5 ROUTINE.                                      *\n*                                                                     *\n*THERE ARE NO INSTALLATION UNIQUE CONSIDERATIONS EXCEPT THAT THE      *\n*COMMANDS \"$JC\", \"$JL\", \"$JM\" AND \"$JD\" ARE NOT BEING USED FOR        *\n*ANYTHING ELSE.  NO CHANGES TO JES2 CODE ARE REQUIRED.                *\n*                                                                     *\n*WHILE THIS PROGRAM IS NOT SUPPORTED IN ANY WAY WHEN USED OUTSIDE THE *\n*AUTHORS INSTALLATION, WE WOULD LIKE TO HEAR OF ANY SUGGESTIONS OR    *\n*PROBLEMS.                                                            *\n*                                                                     *\n*                       TOM SLONE                                     *\n*                       E. F. MACDONALD MOTIVATION                    *\n*                       DATA PROCESSING DEPT - 9TH FLOOR              *\n*                       111 NORTH MAIN STREET                         *\n*                       DAYTON, OHIO   45402                          *\n*                       (513) 226-5520                                *\n*                                                                     *\n*RELEASE/MODIFICATION HISTORY:                                        *\n* R010  OCTOBER 24, 1981  ORIGINAL RELEASE.                           *\n* R011  MARCH 19, 1982    ADD $JD COMMAND.                            *\n* R330  JUNE 1983 -CONVERT TO HJE2329.                                *\n*                 -CHANGE CHAR USED TO INDIC OFFLOAD Q FROM '@' TO '$'*\n*                 -CHANGE CHAR USED TO INDIC NETWORK Q FROM '$' TO '#'*\n*                 -REARRANGE JOE DISPLAY LINE TO ACCOMODATE LONGER    *\n*                  JOEID, FORM ID, AND PRIORITY FIELDS.  IN ORDER TO  *\n*                  ACCOMPLISH THIS AND RETAIN THE HIGH PROBABILITY OF *\n*                  A ONE LINE DISPLAY, THE FCB ID WAS REMOVED, THE    *\n*                  INDICATOR OF LOCAL/REMOTE AND SELECTABLE/NOT SELECT*\n*                  WAS CHANGED FROM 'L=X S=Y' TO 'X/Y'.  THERE IS     *\n*                  STILL NOT ENOUGH ROOM FOR A MAXIMUM LENGTH JOEID   *\n*                  (18 BYTES), BUT THE 14 BYTES PROVIDED SHOULD TAKE  *\n*                  CARE OF ALL BUT THE MOST UNUSUAL CASES.            *\n* R340  JUNE 1984 -CONVERT TO HJE2330. THERE WERE NO CODE CHANGES     *\n*                  NECESSARY; JUST REASSEMBLY WITH HJE2330 MACLIB.    *\n*                 -CORRECTION TO PROGRAM TITLE CARD.                  *\n* R360  FEB  1986 -CONVERT TO HJE1367.    INCLUDES THE FOLLOWING:     *\n*                 -ACCOMODATE MANY CHANGED DSECT AND FIELD NAMES.     *\n*                 -ACCOUNT FOR THE POSSIBILITY OF AN SSI FORMATTED    *\n*                  COMMAND.                                           *\n*                 -CHANGE NUMBER OF SYSOUT QUEUES FROM A LITERAL 74   *\n*                  TO A SYMBOLIC USING THE $JOT DSECT (PRESENTLY 73). *\n*                 -REMOVE CODE CONCERNING THE OFFLOAD QUEUE.  THAT    *\n*                  QUEUE DOES NOT EXIST IN HJE1367.                   *\n* XA215 JULY 1987 -CONVERT TO HJE2215.    INCLUDES THE FOLLOWING:     *\n*                 -CONVERT CODE FOR RELEASE 2.1.5 OF MVS/XA JES2.     *\n*                  STILL WORKS WITH 1.3.6 (HJE1367).                  *\n*                  CREDIT FOR THIS MODIFICATION LEVEL GOES TO:        *\n*                       RON DIETES, H. E. BUTT GROCERY COMPANY,       *\n*                       PO BOX 9999, SAN ANTONIO, TEXAS 78204         *\n*                       PHONE: 512-270-8432                           *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*THE PROGRAM PROVIDES FOUR BASIC FUNCTIONS:                           *\n*                                                                     *\n*   1.  CANCEL ALL JOES (JOB OUTPUT ELEMENTS) OF A SPECIFIED JOB      *\n*       IN A SPECIFIED SYSOUT CLASS.  SIMILAR TO VS1 \"C JOBNAME,OUT=X\"*\n*       EXAMPLES:                                                     *\n*          $JCJ175,Q=D (CANCEL ALL SYSOUT=D JOES OF J175)             *\n*          $JC'MYJOB',Q=E (CANCEL ALL SYSOUT=E JOES OF JOBNAME \"MYJOB\"*\n*       THE OPERAND \"Q=\" IS REQUIRED; USE JES2 \"$C\" COMMAND TO CANCEL *\n*       ALL OUTPUT OF A JOB.                                          *\n*                                                                     *\n*   2.  LIST ALL JOES IN SYSOUT CLASS ORDER.                          *\n*       LIST MAY BE RESTRICTED TO A SELECTED CLASS, OR ALL CLASSES    *\n*       EXCEPT A SELECTED CLASS.  SIMILAR TO THE VS1 \"SO\" COMMAND.    *\n*       EXAMPLES:                                                     *\n*          $JL      (LIST ALL JOES IN SYSOUT CLASS ORDER)             *\n*          $JL,Q=Z  (LIST ALL JOES IN SYSOUT QUEUE Z)                 *\n*          $JL,Q=-P (LIST ALL JOES EXCEPT THOSE IN SYSOUT QUEUE P)    *\n*       EACH SELECTED JOE IS LISTED IN THE FOLLOWING FORMAT:          *\n*       JNNNN JJJJJJJJ C I.I.I FORM  X/Y P=NNN LLLLLLLLL              *\n*       WHERE JNNNN IS THE JES2 JOB NUMBER (J175, S3968, ETC.),       *\n*       JJJJJJJJ IS THE JOBNAME, I.I.I IS THE JOE ID, FORM IS         *\n*       THE FORM NUMBER, FCB IS THE FCB NAME, \"X\" IS \"Y\" IF THE DEST  *\n*       IS LOCAL, \"Y\" IS \"Y\" IF THE JOE IS SELECTABLE AND THE *JOB*   *\n*       IS NOT HELD, \"Y\" IS \"N\" IF THE JOE IS NOT SELECTABLE,         *\n*       \"Y\" IS \"H\" IF THE JOB IS HELD, \"NNN\" IS THE PRIORITY OF THE   *\n*       JOE (NOT THE JOB), AND LLLLLLLLL IS THE JOE LINECOUNT.        *\n*       TO LIST ALL JOES OF A PARTICULAR JOB, USE THE JES2            *\n*       \"$L...,ALL\" COMMAND.                                          *\n*                                                                     *\n*   3.  MOVE THE JOES OF A SELECTED JOB FROM A SELECTED SYSOUT CLASS  *\n*       TO A DIFFERENT SELECTED SYSOUT CLASS.  SIMILAR TO VS1         *\n*       \"E JOBNAME,CLASS=X,OUT=Y\".  EXAMPLES:                         *\n*          $JMJ175,FROMQ=X,TOQ=Y (MOVE J175 SYSOUT=X JOES TO SYSOUT=Y)*\n*          $JM'MYJOB',TOQ=C,FROMQ=G (MOVE JOBNAME \"MYJOB\" SYSOUT=G    *\n*                                    JOES TO SYSOUT=C)                *\n*       TO MOVE *ALL* JOES OF A JOB TO A SELECTED SYSOUT CLASS, USE   *\n*       THE JES2 \"$TO\" COMMAND.                                       *\n*                                                                     *\n*   4.  DISPLAY THE CURRENT JULIAN DATE.  THIS IS INTENDED FOR        *\n*       USE WITH THE JES2 AUTOMATIC COMMAND FACILITY TO DATESTAMP     *\n*       HARDCOPY LOGS.  FORMAT IS \"$JD\"; NO OPERANDS.                 *\n*                                                                     *\n*                                                                     *\n*THESE COMMANDS DO NOT ATTEMPT TO DUPLICATE FUNCTIONS WHICH CAN       *\n*USUALLY BE ACCOMPLISHED WITH A SINGLE JES2 COMMAND.  THIS PROGRAM    *\n*CHECKS FOR SOME COMMON ERRORS SUCH AS VERIFICATION OF TYPE OF JOB    *\n*ON REQUESTS BY JOB NUMBER (JOB/STC/TSU), DUPLICATE JOBNAME IN THE    *\n*PPU QUEUE ON REQUESTS BY JOB NAME, AND JOE BUSY (ON AN OUTPUT DEVICE *\n*OR BEING MODIFIED BY A $TO COMMAND).  TO REDUCE OVERHEAD TO A        *\n*MINIMUM, ALL QUEUE INTEGRITY IS LEFT TO THE $QSUSE SERVICE ROUTINE   *\n*WHICH IS USED BY THE $#MOD AND $#REM SERVICE ROUTINES, WHICH ARE     *\n*USED BY THIS PROGRAM (SEE \"JES2 LOGIC\" LY24-6006).                   *\n*                                                                     *\n***********************************************************************\n         EJECT\n* THE FOLLOWING GBLC/SETC GENERATE THE FOLLOWING TO SAVE CODING THEM\n* THROUGHOUT THE SOURCE DECK:\n*   1) THE LOAD MODULE NAME USED IN THE JES2 INIT 'LOAD' STATEMENT.\n*   2) THE ENTRY (ROUTINE) NAME USED IN THE JES2 'EXIT' STATEMENT.\n*   3) THE ASSEMBLER 'TITLE' STATEMENT.\n         GBLC  &EFUXCON,&EFUXNUM,&EFUXTIT,&EFULNAM,&EFUENAM\n         SPACE 1\n&EFUXNUM SETC  '005'  <--------------- VERIFY CORRECT EXIT NUMBER *****\n         SPACE 1\n&EFUXCON SETC  'JES2'\n&EFULNAM SETC  '&EFUXCON.X&EFUXNUM'\n&EFUENAM SETC  '&EFUXCON.E&EFUXNUM'\n&EFUXTIT SETC  'JES2 USER EXIT &EFUXNUM; COMMAND PREPROCESSOR'\n         SPACE 3\n         MNOTE 'CSECT && LOAD MODULE NAME   = ''&EFULNAM'''\n         MNOTE 'ENTRY POINT (ROUTINE) NAME = ''&EFUENAM'''\n         SPACE 3\n         COPY  $HASPGBL\n         EJECT\n&EFULNAM $MODULE NOTICE=SP136,                                         *\n               ENVIRON=JES2,                                           *\n               TITLE='&EFUXTIT',                                       *\n               SYSP=(NOGEN,GEN,NODATA,NOGEN,NOGEN),                    *\n               RESPA,                                                  *\n               RPL,          REQD BY $BUFFER                           *\n               $BUFFER,                                                *\n               $CAT,         REQD BY $HCT                              *\n               $COMWORK,                                               *\n               $DCT,                                                   *\n               $HASPEQU,     REQD FOR REGISTER SAVE CONVENTIONS        *\n               $HCT,         REQD FOR $SAVE, $RETURN, ETC.             *\n               $JCT,         REQD BY $CAT                              *\n               $JOE,                                                   *\n               $JOT,                                                   *\n               $JQE,         REQD BY $HCT                              *\n               $MIT,         REQD BY $MODEND                           *\n               $PCE          REQD BY $HCT\n&EFULNAM TITLE '&EFUXTIT'\n&EFUENAM $ENTRY BASE=R12,CSECT=NO,REGUSE=R15,ENTRY=YES\nEXIT05$  $SAVE\n         LR    R12,R15                 LOAD SEGMENT BASE REG\n         USING PCE,R13\n         SPACE 1\n         TM    COMINCON,X'80'          SSI FORMATTED COMMAND?\n         BO    EXIT05XX                EXIT IF YES\n*(SEE EXPLANATION OF ABOVE IN 'EXIT 5' SECTION OF\n* 'JES2 USER MODIFICATIONS AND MACROS' LC23-0067(-2)).\n         CLI   COMVERB,C'J'            THIS $J... COMMAND?\n         BNE   EXIT05XX           BRANCH IF NO; NORMAL JES2 PROCESS\n         CLI   COMOPRND,C'L'           THIS $JL... COMMAND?\n         BE    LISTJOES                BRANCH IF YES\n         CLI   COMOPRND,C'C'           THIS $JC... COMMAND?\n         BE    VERBOK                  BRANCH IF YES\n         CLI   COMOPRND,C'D'           THIS $JD... COMMAND?\n         BE    DISPDATE                BRANCH IF YES\n         CLI   COMOPRND,C'M'           THIS $JM... COMMAND?\n         BNE   EXIT05XX           BRANCH IF NO; NORMAL JES2 PROCESS\n         EJECT\nVERBOK   DS    0H\n         GETMAIN R,LV=WORKLEN          GET WORK AREA\n         USING WORKAREA,R3             ADDRESS FOR OUR WORKAREA\n         LR    R3,R1                   ADDRESS OF WORKAREA\n         XC    WORKAREA(WORKLEN),WORKAREA   CLEAR WORKAREA\n         MVC   SUBCMND,COMOPRND        SAVE SUBCOMMAND\n         STM   R5,R7,COMWORKR          SAVE SOME PASSED REGS\n         CLI   COMOPRND+1,C''''        JOBNAME (VS JOB#) SPECIFIED?\n         BE    JOBIDNAM                BRANCH IF YES\n         MVI   JOBTYPE,0               SET JOBTYPE = JOB\n         CLI   COMOPRND+1,C'J'         IS THIS A \"JOB\"?\n         BE    JOBIDNUM                BRANCH IF YES\n         MVI   JOBTYPE,JQE3STC         SET JOBTYPE = STC\n         CLI   COMOPRND+1,C'S'         IS THIS A \"STC\"?\n         BE    JOBIDNUM                BRANCH IF YES\n         MVI   JOBTYPE,JQE3TSU         SET JOBTYPE = TSU\n         CLI   COMOPRND+1,C'T'         IS THIS A \"TSU\"?\n         BE    JOBIDNUM                BRANCH IF YES\n         B     ERR01                   ERROR; BAD JOB# FORMAT\n         SPACE 3\nJOBIDNAM DS    0H\n         LA    R4,COMOPRND+2           ADDR 1ST CHAR OF JOBNAME\n         L     R5,COMPNTER+4           ADDR LAST CHAR OF JOBNAME + 2\n         S     R5,=F'2'                ADDR LAST CHAR OF JOBNAME\n         CLC   0(2,R5),=C''','         VERIFY ENDING FORMAT\n         BNE   ERR02                   ERROR IF INCORRECT\n         SR    R5,R4                   R5 = LENGTH OF NAME\n         BCTR  R5,0                    R5 = LENGTH OF NAME -1 FOR \"EX\"\n         C     R5,=F'7'                JOBNAME TOO LONG?\n         BH    ERR03                   ERROR IF YES\n         LTR   R5,R5                   JOBNAME TOO SHORT?\n         BM    ERR26                   ERROR IF YES\n         EX    R5,JOBIMVC1             SAVE JOBNAME\n         OC    JOBNAME,=8C' '          JOBNAME TO UPPER CASE\n         SPACE 1\n         L     R4,$JQHEADS+$JQHEADL    DISPL 1ST JQE IN $HARDCPY QUE\nJOBIDNA1 DS    0H\n         LTR   R4,R4                   END OF $HARDCPY QUE?\n         BZ    JOBIDNA3                BRANCH IF YES\n         AL    R4,$JOBQPTR             ADDR OF FIRST/NEXT JQE     XA215\n         USING JQE,R4\n         CLC   JQEJNAME,JOBNAME        THIS JQE HAVE REQUESTED JOBNAME?\n         BNE   JOBIDNA2                BRANCH IF NO\n         CLC   JQEADDR,=F'0'      ALREADY FOUND ONE WITH THIS JOBNAME?\n         BNE   ERR04                   ERROR IF YES\n         ST    R4,JQEADDR              SAVE JQE ADDRESS\nJOBIDNA2 DS    0H\n         ICM   R4,7,JQENEXTB           OFFSET OF NEXT JQE\n         ICM   R4,B'1000',=X'00'       CLEAR HIGH ORDER BYTE      XA215\n         B     JOBIDNA1                LOOK AT NEXT JQE\n         SPACE 1\nJOBIDNA3 DS    0H\n         CLC   JQEADDR,=F'0'           FIND SINGLE JQE THIS JOBNAME?\n         BE    ERR05                   BRANCH IF NO\n         B     JOBFOUND\n         DROP  R4\n         SPACE 1\nJOBIMVC1 MVC   JOBNAME(0),0(R4)        \"EXECUTED\" INST\n         EJECT\nJOBIDNUM DS    0H\n         LA    R4,COMOPRND+2           @ FIRST DIGIT OF JOB#\n         L     R5,COMPNTER+4           @ LAST DIGIT OF JOB# +2\n         BCTR  R5,0                    @ LAST DIGIT OF JOB# +1\n         SR    R5,R4                   R5 = LENGTH OF JOB#\n         C     R5,=F'4'                JOB# TOO LONG?\n         BH    ERR22                   ERROR IF YES\n         LTR   R5,R5                   JOB# TOO SHORT?\n         BNP   ERR23                   ERROR IF YES\n         MVC   JOB#,=4C'0'             INIT JOB# FIELD\n         LA    R6,JOB#+4               @ FIRST BYTE PAST END OF FIELD\n         SR    R6,R5                   R6 = @ CORRECT SLOT IN JOB# FLD\n         BCTR  R5,0                    CORRECT LENGTH FOR \"EX\"\n         EX    R5,JOB#MVC1             SAVE JOB#\n         TRT   JOB#,NUMTABL            JOB# NUMERIC?\n         BNZ   ERR06\n         PACK  DWORK,JOB#              PACK JOB#\n         CVB   R1,DWORK                AND TO BINARY\n         $QLOC (R1),ERR07              FIND THE JQE FOR THIS JOB\n         LR    R4,R1                   ADDRESS OF JQE\n         USING JQE,R4\n         ST    R4,JQEADDR              SAVE JQE ADDRESS\n         MVC   DWORK(1),JQEFLAG3       JQEFLAG3 TO WORK\n         NI    DWORK,B'00000011'       ALL BITS OFF EXCEPT TSU/STC\n         CLC   JOBTYPE,DWORK           VERIFY JOBTYPE (JOB/STC/TSU)\n         BNE   ERR24                   ERROR IF WRONG TYPE\n         CLI   JQETYPE,$HARDCPY        JOB ON $HARDCPY QUE?\n         BNE   ERR25                   ERROR IF NOT ON $HARDCPY\n         B     JOBFOUND\n         SPACE 1\nJOB#MVC1 MVC   0(0,R6),0(R4)           \"EXECUTED\" INSTRUCTION\n         DROP  R4\n         EJECT\nJOBFOUND DS    0H\n         CLI   SUBCMND,C'M'            THIS A $JM... COMMAND?\n         BE    EDITMOVE                GO PARSE $JM OPERANDS\n         SPACE 1\n*  EDIT $JC... COMMAND OPERANDS...\n         L     R5,COMPNTER+4           @ FIRST OPERAND\n         CLC   0(2,R5),=CL2'Q='        OPERAND BEGIN W/ \"Q=\"\n         BNE   ERR08                   ERROR IF NO\n         MVC   OLDCLASS,2(R5)          SAVE THE SYSOUT CLASS TO CANCEL\n         L     R4,COMPNTER+8           @ SECOND (NULL) OPERAND\n         S     R4,COMPNTER+4           SUBTRACT @ FIRST OPERAND\n         C     R4,=F'4'                FIRST OPERAND PROPER LENGTH?\n         BNE   ERR09                   ERROR IF NO\n         LA    R4,COMPNTER+4           CORRECT # OF OPERANDS?\n         C     R4,COMWORKR+8\n         BNE   ERR10                   ERROR IF YES\n         LA    R5,OLDCLASS        @ OF SYSOUT CLASS FOR VERIFY SUBR\n         BAL   R14,CHKCLASS            VERIFY VALID SYSOUT CLASS\n         B     CMVECOMN\n         SPACE 3\nEDITMOVE DS    0H                      EDIT \"$JM...\" COMMAND OPERANDS\n         LA    R4,COMPNTER+8           CORRECT # OF OPERANDS?\n         C     R4,COMWORKR+8\n         BNE   ERR11                   ERROR IF NO\n         L     R5,COMPNTER+12          @ THIRD (NULL) OPERAND\n         S     R5,COMPNTER+4           R5 = L'OPRND1+L'OPRND2+2\n         C     R5,=F'14'               OPERANDS TOTAL CORRECT LENGTH?\n         BNE   ERR13                   ERROR IF NO\n         L     R5,COMPNTER+4           @ 1ST OPERAND\n         CLC   0(6,R5),=CL6'FROMQ='    1ST OPRND = \"FROMQ=\"?\n         BNE   EDITMCKF           BRANCH IF NO; CHK IF \"TOQ=\" FIRST\n         CLC   7(5,R5),=CL5',TOQ='     2ND OPRND = \",TOQ=\"\n         BNE   ERR14                   ERROR IF NO\n         MVC   OLDCLASS,6(R5)          SAVE \"FROM\" SYSOUT CLASS\n         MVC   NEWCLASS,12(R5)         SAVE \"TO\" SYSOUT CLASS\n         B     EDITMVEX\n         SPACE 1\nEDITMCKF DS    0H\n         CLC   0(4,R5),=CL4'TOQ='      1ST OPRND = \"TOQ=\"?\n         BNE   ERR15                   ERROR IF NO\n         CLC   5(7,R5),=CL7',FROMQ='   2ND OPRND = \",FROMQ=\"?\n         BNE   ERR16                   ERROR IF NO\n         MVC   OLDCLASS,12(R5)         SAVE \"FROM\" SYSOUT CLASS\n         MVC   NEWCLASS,4(R5)          SAVE \"TO\" SYSOUT CLASS\n         SPACE 1\nEDITMVEX DS    0H\n         CLC   OLDCLASS,NEWCLASS       REQ MOVE FROM/TO SAME CLASS?\n         BE    ERR28                   ERROR IF YES\n         LA    R5,OLDCLASS        ADDR OF SYSOUT CLASS FOR VERIFY SUBR\n         BAL   R14,CHKCLASS            VERIFY \"FROM\" SYSOUT CLASS VALID\n         LA    R5,NEWCLASS        ADDR OF SYSOUT CLASS FOR VERIFY SUBR\n         BAL   R14,CHKCLASS            VERIFY \"TO\" SYSOUT CLASS VALID\n         B     CMVECOMN\n         EJECT\nCMVECOMN DS    0H     SEARCH \"JOE\" CHAIN AND CANCEL/MOVE AS REQ\n         USING JQE,R4\n         L     R4,JQEADDR              @ OUR JQE\n         USING JOE,R5\n         XR    R5,R5                   CLEAR R5\n         ICM   R5,7,JQEJOEB            DISPL 1ST JOE THIS JQE\nCMVECOM1 DS    0H\n         LTR   R5,R5                   ANY MORE JOES THIS JQE?\n         BZ    CMVECOM9                BRANCH FI NO\n         AL    R5,$JOTABLE             ADDR OF 1ST/NEXT JOE       XA215\n*        L     R1,JOEJQE               DISPL OF THIS JOE'S JQE\n*        LA    R1,0(,R1)               CLEAR HI BYTE\n*        A     R1,$JOBQPTR             ADDR OF THIS JOE'S JQE\n         SLR   R1,R1                   CLEAR R1 FOR ICM           XA215\n         ICM   R1,B'0111',JOEJQEB      OFFSET JOB QUE ELEMENT     XA215\n         AL    R1,$JOBQPTR             ADDR OF THIS JOE'S JQE     XA215\n         CR    R1,R4                   MATCH JQE ADDR FROM EARLIER?\n         BNE   ERR17             BRANCH IF NO; LOGIC OR TIMING ERROR\n         TM    JQEFLAG3,JQE3XMIT+JQE3TMOD  CHK IF /*XMIT JOB OR\n         BNZ   ERR12                   $TO JOB; REJECT IF EITHER\n*        L     R2,JOEJQNXT             OFFSET NEXT JOE THIS JQE\n*        LA    R2,0(,R2)               CLEAR HI BYTE\n         SLR   R2,R2                   CLEAR R2 FOR ICM           XA215\n         ICM   R2,B'0111',JOEJQNXB     OFFSET NEXT JOE THIS JOB   XA215\n         CLC   OLDCLASS,JOECURCL       CANCEL OR MOVE THIS JOE?\n         BNE   CMVECOM3                BRANCH IF NO\n         BAL   R14,DISPSET             BASIC SETUP DISPLAY LINE\n         LR    R1,R5              THIS JOE ADDR TO R1 FOR JES2 MACROS\n         TM    JOEFLAG1,JOE1BUSY       THIS JOE TEMP BUSY?\n         BZ    CMVECOM4                BRANCH IF NO\n         MVC   DISPBUSY,=CL24'JOE BUSY-NO ACTION TAKEN'\n         LA    R0,DISPBUSL             LENGTH OF MESSAGE\n         BAL   R14,DO$CWTO             ISSUE MESSAGE\n         B     CMVECOM3                SKIP THIS JOE\nCMVECOM4 DS    0H\n         CLI   SUBCMND,C'C'            CANCEL THIS JOE?\n         BNE   CMVECOM2                BRANCH IF NO\n         $#REM WORK=(R1)               CANCEL THIS JOE\n         MVC   DISPCANC,=CL9'CANCELLED'\n         LA    R0,DISPCANL             LENGTH OF MESSAGE\n         BAL   R14,DO$CWTO\n         B     CMVECOM3\n         SPACE 1\nCMVECOM2 DS    0H\n         MVC   JOECURCL,NEWCLASS       MOVE NEW CLASS TO JOE\n         $#MOD JOE=(R1)                MOVE THE JOE TO NEW CLASS\n         MVC   DISPCHGC,=CL10'CHANGED TO'\n         MVC   DISPCHGN,NEWCLASS\n         LA    R0,DISPCHGL             LENGTH OF MESSAGE\n         BAL   R14,DO$CWTO\nCMVECOM3 DS    0H\n         LR    R5,R2                   DISPL OF NEXT JOE IN CHAIN\n         DROP  R4,R5\n         B     CMVECOM1                PROCESS NEXT JOE, IF ANY\n         SPACE 1\nCMVECOM9 DS    0H\n         B     NORMEND                 GO TO NORMAL END OF COMMAND\n         EJECT\nLISTJOES DS    0H\n         GETMAIN R,LV=WORKLEN          GET WORK AREA\n         USING WORKAREA,R3             ADDRESS FOR OUR WORKAREA\n         LR    R3,R1                   ADDRESS OF WORKAREA\n         XC    WORKAREA(WORKLEN),WORKAREA   CLEAR WORKAREA\n         MVC   SUBCMND,COMOPRND        SAVE SUBCOMMAND\n         STM   R5,R7,COMWORKR          SAVE SOME PASSED REGS\n         MVI   DISPLINE,C' '           CLEAR DISPLAY LINE\n         MVC   DISPLINE+1(DISPLENG-1),DISPLINE\n         MVI   OLDCLASS,C'Q'      SET ANY VALID CLASS FOR VERIFY SUBR\n         CLC   COMWORKR,COMWORKR+8     ANY OPERANDS?\n         BE    LISTJOEM           BRANCH IF NO OPERANDS; LIST ALL JOES\n         LA    R1,COMPNTER+4           ADDR OF POINTER TO 1ST OPND\n         C     R1,COMWORKR+8           IS 1ST OPND ALSO THE LAST OPND?\n         BNE   ERR18                   ERROR IF YES\n         LA    R4,COMOPRND+2           R4 = @ SECOND OPERAND\n         L     R5,COMPNTER+8           R5 = @ THIRD (NULL) OPERAND\n         SR    R5,R4                   R5 = L'OPRND1+1\n         C     R5,=F'4'                1ST OPERAND THREE LONG?\n         BNE   LISTJOEA                BRANCH IF YES\n         CLC   0(2,R4),=CL2'Q='        CORRECT KEYWORD?\n         BNE   ERR19                   BRANCH IF NO\n         MVC   OLDCLASS,2(R4)          SAVE SYSOUT CLASS TO LIST\n         MVI   LISTOPER,X'70'          INDC LIST IF EQUAL\n         B     LISTJOEM\n         SPACE 1\nLISTJOEA DS    0H\n         C     R5,=F'5'                1ST OPERAND FOUR LONG?\n         BNE   ERR20                   ERROR IF NO\n         CLC   0(3,R4),=CL3'Q=-'       CORRECT KEYWORD?\n         BNE   ERR21                   ERROR IF NO\n         MVC   OLDCLASS,3(R4)          SAVE SYSOUT CLASS TO *NOT* LIST\n         MVI   LISTOPER,X'80'          INDIC LIST NOT EQUAL\n         B     LISTJOEM\n         EJECT\nLISTJOEM DS    0H\n         LA    R2,L'JOTRDYWQ/4         NUMBER OF SYSOUT QUEUES\n         USING JOT,R6\n         L     R6,$JOTABLE             ADDR OF JOT\n         LA    R6,JOTRDYWQ             @ FIRST HEAD OF QUEUE\n         DROP  R6\n         SPACE 1\nLISTJOE1 DS    0H\n         L     R5,0(,R6)               DISPL OF 1ST JOE IN QUEUE\nLISTJOE2 DS    0H\n         LTR   R5,R5                   ANY MORE JOES THIS QUEUE?\n         BNZ   LISTJOE3                BRANCH IF YES\n         LA    R6,JOTHEADL(,R6)        BUMP TO NEXT QUEUE HEAD\n         BCT   R2,LISTJOE1             PROCESS NEXT QUEUE, IF ANY\n         B     LISTHELD                GO LIST JOBS WITH HELD SYSOUT\nLISTJOE3 DS    0H\n         USING JOE,R5\n         AL    R5,$JOTABLE             ADDRESS OF THIS JOE        XA215\n         IC    R1,LISTOPER             CC FOR BRANCH\n         CLC   JOECURCL,OLDCLASS       WANT TO LIST THIS CLASS?\n         EX    R1,LISTBC1              NOP/BE/BNE\n         USING JQE,R4\n***      L     R4,JOEJQE               DISPL OF JQE FOR THIS JOE\n***      LA    R4,0(,R4)               CLEAR HI BYTE\n***      A     R4,$JOBQPTR             ADDR OF JQE FOR THIS JOB\n         SLR   R4,R4                   CLEAR R4 FOR ICM           XA215\n         ICM   R4,B'0111',JOEJQEB      OFFSET JOB QUE ELEMENT     XA215\n         AL    R4,$JOBQPTR             ADDR OF JQE FOR THIS JOB   XA215\n         BAL   R14,DISPSET             BASIC PRINT SETUP\n         TM    JOEFLAG1,JOE1BUSY       THIS JOE CURRENTLY BUSY?\n         BZ    LISTJOE9                BRANCH IF NO\n         MVC   DISPBUSY,=CL24' (JOE IS CURRENTLY BUSY)'\n         LA    R0,DISPBUSL             LENGTH OF MESSAGE\n         B     LISTJOE8\nLISTJOE9 DS    0H\n****CLM   R2,1,=AL1(74)           IS THIS THE \"OFFLOAD\" QUEUE? DELETED>\n****BNE   *+8                     BRANCH IF NO                 DELETED>\n****MVI   DISPOCLS,C'$'           INDICATE ON OUTPUT           DELETED>\n         CLM   R2,1,=AL1(73)           IS THIS THE \"NETWORK\" QUEUE?\n         BNE   *+8                     BRANCH IF NO\n         MVI   DISPOCLS,C'#'           INDICATE ON OUTPUT\n***      L     R1,JOECHAR              DISPL OF CHAR JOE          XA215\n***      LA    R1,0(,R1)               CLEAR HI BYTE              XA215\n***      A     R1,$JOTABLE             @ CHAR JOE                 XA215\n         SLR   R1,R1                   CLEAR R1 FOR ICM           XA215\n         ICM   R1,B'0111',JOECHARB     OFFSET CHARACTERISTIC      XA215\n         AL    R1,$JOTABLE             @ CHAR JOE                 XA215\n         MVC   DISPFORM,JOEFORM-JOE(R1)  FORM TO MSG\n         MVI   DISPLOCL,C'Y'           INIT TO LOCAL=YES\n         CLC   JOEROUT,=XL4'00010000'  IS THIS JOE DEST=LOCAL?\n         BE    LISTJOE4                BRANCH IF YES\n         MVI   DISPLOCL,C'N'           INDICATE NOT LOCAL\nLISTJOE4 DS    0H\n         MVC   DISPHOLD-1(2),=CL2'/Y'  INIT TO NOT HELD\n         TM    JOEFLAG2,JOE2SLEC       IS JOE SELECTABLE?\n         BNO   LISTJOE5                BRANCH IF YES\n         MVI   DISPHOLD,C'N'           INDC NOT SELECTABLE\nLISTJOE5 DS    0H\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1  IS JOB HELD?\n         BZ    LISTJOE6                BRANCH IF NO\n         MVI   DISPHOLD,C'H'           INDC JOB (VS JOE) IS HELD\nLISTJOE6 DS    0H\n         LH    R1,JOEPRIO              INSERT JOE PRIORITY\n         SRL   R1,4                    ADJUST IN REGISTER\n         CVD   R1,DWORK                MAKE IT PRINTABLE\n         MVC   DISPPRTY-1(4),=XL4'40202020'  EDIT MASK\n         ED    DISPPRTY-1(4),DWORK+6\n         MVC   DISPPRTY-2(2),=CL2'P='  CONSTANT\n         L     R1,JOERECCT             LINE COUNT\n         CVD   R1,DWORK                MAKE IT PRINTABLE\n         MVC   DISPLCNT-1(10),=XL10'40202020202020202020'\n         ED    DISPLCNT-1(10),DWORK+3\n         LA    R0,DISPLCNT+9-DISPLINE  LENGTH OF MESSAGE\n         CLC   DISPLCNT(4),=CL4' '     CAN LINECNT BE SHORTENED?\n         BNE   LISTJOE8                BRANCH IF NO\n         MVC   DISPLCNT(5),DISPLCNT+4  SCOOT COUNT BACK FOUR\n         SH    R0,=H'4'                AND REDUCE MESSAGE LENGTH\nLISTJOE8 DS    0H\n         BAL   R14,DO$CWTO\n         XC    DISPBUSY,DISPBUSY       CLEAN UP DISPLAY LINE\nLISTJOE7 DS    0H\n         ICM   R5,B'0111',JOENEXTB     DISPL NEXT JOE THIS QUQUE\n         ICM   R5,B'1000',=X'00'       CLEAR HIGH ORDER BYTE      XA215\n         B     LISTJOE2\n         DROP  R4,R5\nLISTBC1  NOP   LISTJOE7                MAY ACT AS NOP/BE/BNE\n         EJECT\nLISTHELD DS    0H\n         CLI   LISTOPER,0              THIS A \"LIST ALL\"?\n         BNE   LISTX                   BRANCH IF NO\n         L     R4,$JQHEADS+$JQHEADL    ADDR OF HEAD OF $HARDCPY Q\nLISTHLD1 DS    0H\n         LTR   R4,R4                   ANY (MORE) JQES ON $HARDCPY Q?\n         BZ    LISTHLDX                BRANCH IF NO\n         USING JQE,R4\n         AL    R4,$JOBQPTR             DISPL OF JQE ON Q          XA215\n         LH    R6,JQEHLDCT             COUNT OF HELD SYSOUT DATASETS\n         SRL   R6,4               LO FOUR BITS ARE NOT PART OF COUNT\n         LTR   R6,R6                   ANY HELD SYSOUT DATASETS?\n         BZ    LISTHLD2                BRANCH IF NO\n         XR    R5,R5                   NO JOE FOR DISPSET SUBR\n         BAL   R14,DISPSET             BASIC SETUP DISPLAY LINE\n         MVC   DISPOCLS(21),=CL21'HAS NNN HELD DATASETS'\n         CVD   R6,DWORK                # HELD DATASETS TO MSG\n         OI    DWORK+7,X'0F'           CLEAR SIGN\n         MVC   DISPHCNT-1(4),=X'40202020'  EDIT PATTERN\n         ED    DISPHCNT-1(4),DWORK+6\n         LA    R0,DISPHLEN             LENGTH OF MESSAGE\n         BAL   R14,DO$CWTO             ISSUE MESSAGE\nLISTHLD2 DS    0H\n         ICM   R4,7,JQENEXTB           PROCESS NEXT JQE, IF ANY\n         ICM   R4,B'1000',=X'00'       CLEAR HIGH ORDER BYTE      XA215\n         B     LISTHLD1\n         SPACE 1\nLISTHLDX DS    0H\nLISTX    DS    0H\n         B     NORMEND\n         DROP  R4\n         EJECT\nCHKCLASS DS    0H\n         CLI   0(R5),C'A'              VALIDATE SYSOUT CLASS\n         BL    ERR27\n         CLI   0(R5),C'9'\n         BH    ERR27\n         CLI   0(R5),C'I'\n         BNHR  R14\n         CLI   0(R5),C'J'\n         BL    ERR27\n         CLI   0(R5),C'R'\n         BNHR  R14\n         CLI   0(R5),C'S'\n         BL    ERR27\n         CLI   0(R5),C'Z'\n         BNHR  R14\n         CLI   0(R5),C'0'\n         BL    ERR27\n         BR    R14\n         SPACE 3\nDISPSET  DS    0H\n*  ASSUMES R4=JQEADDR AND R5=JOEADDR (ZERO IF NO JOE)\n         USING JQE,R4\n         MVI   DISPLINE,C' '           CLEAR DISPLAY LINE\n         MVC   DISPLINE+1(DISPCANC-DISPLINE-1),DISPLINE\n         LH    R1,JQEJOBNO             JOB NUMBER\n         CVD   R1,DWORK                JOB# TO DECIMAL\n         UNPK  DISPJOB#,DWORK+5(3)\n         OI    DISPJOB#+4,X'F0'        CLEAR SIGN\n         MVI   DISPJOB#,C'J'           ASSUME BATCH JOB\n         TM    JQEFLAG3,JQE3JOB        THIS A BATCH JOB?\n         BZ    DISPSET2                BRANCH IF YES\n         MVI   DISPJOB#,C'S'           ASSUME STC JOB\n         TM    JQEFLAG3,JQE3STC        THIS A STC JOB?\n         BO    DISPSET2                BRANCH IF YES\n         MVI   DISPJOB#,C'T'           MUST BE TSU JOB\nDISPSET2 DS    0H\n         MVC   DISPJOBN,JQEJNAME\n         LTR   R5,R5                   ANY JOE?\n         BZR   R14                     EXIT IF NONE\n         USING JOE,R5\n         MVC   DISPOCLS,JOECURCL       SYSOUT CLASS\n         STM   R1,R2,E1REGSV           SAVE WORK REGISTERS\n         MVI   E1JOE#,C' '             SPACE OUT WORKING FIELD\n         MVC   E1JOE#+1(L'E1JOE#-1),E1JOE#\n         MVC   E1JOE#(8),JOENAME       SETUP JOE IDENTIFICATION\n         LH    R1,JOEID1               JOEID1 FIELD TO R1\n         CVD   R1,E1DWORK              JOEID FIELD TO DECIMAL\n         OI    E1DWORK+7,X'0F'         CLEAR SIGN\n         UNPK  E1JOE#+8(5),E1DWORK+5(3) UNPACK JOEID FIELD\n         MVI   E1JOE#+8,C'.'           SET FIRST PERIOD\n         LH    R1,JOEID2               JOEID2 FIELD TO R1\n         CVD   R1,E1DWORK              JOEID FIELD TO DECIMAL\n         OI    E1DWORK+7,X'0F'         CLEAR SIGN\n         UNPK  E1JOE#+13(5),E1DWORK+5(3) UNPACK JOEID FIELD\n         MVI   E1JOE#+8,C'.'\n         MVI   E1JOE#+13,C'.'          SET SECOND PERIOD\n         MVI   E1JOE#+18,C' '          SET ENDING SPACE FOR BELOW\n         LA    R2,3                    SET LOOP COUNTER\nJ#LOOP1  DS    0H\n         CLI   E1JOE#+14,C'0'          THIS A LEADING ZERO?\n         BNE   J#LOOP1X                BRANCH IF NO\n         MVC   E1JOE#+14(4),E1JOE#+15  SCOOT BALANCE OF FLD LEFT\n         BCT   R2,J#LOOP1              CHK IF MORE LEADING ZEROS\nJ#LOOP1X DS    0H\n         LA    R2,3                    SET LOOP COUNTER\nJ#LOOP2  DS    0H\n         CLI   E1JOE#+09,C'0'          THIS A LEADING ZERO?\n         BNE   J#LOOP2X                BRANCH IF NO\n         MVC   E1JOE#+09(9),E1JOE#+10  SCOOT BALANCE OF FLD LEFT\n         BCT   R2,J#LOOP2              CHK IF MORE LEADING ZEROS\nJ#LOOP2X DS    0H\n         LA    R1,E1JOE#               @ BEGIN OF WHOLE OUTPUT FLD\n         LA    R2,8                    SET LOOP COUNTER\nJ#LOOP3  DS    0H\n         CLI   0(R1),C' '              THIS 1ST SPACE IN JOENAME?\n         BE    J#LOOP3X                BRANCH IF YES\n         LA    R1,1(R1)                BUMP TO NEXT COLUMN\n         BCT   R2,J#LOOP3              CHK NXT COL, IF ANY\n         B     J#FIN              FINISHED WITH J# IF NO SPACES\nJ#LOOP3X DS    0H\n         MVC   0(17,R1),E1JOE#+8       SQUEEZE OUT TRAILING SPACES\nJ#FIN    DS    0H\n         MVC   DISPJOEN,E1JOE#         JOE ID TO MESSAGE\n         CLI   E1JOE#+14,C' '          WAS JOEID TOO LONG FOR MSG AREA?\n         BE    J#FINA                  BRANCH IF NO\n         MVC   DISPJOEN+12(2),=CL2'->' INDICATE SHORT JOEID\nJ#FINA   DS    0H\n         LM    R1,R2,E1REGSV           RESTORE WORK REGISTERS\n         BR    R14\n         DROP  R4,R5\n         SPACE 3\nDO$CWTO  DS    0H\n         ST    R14,CWTOR14             SAVE RETURN ADDRESS\n         MVI   JOEPROC,C'Y'            INDICATE SOMETHING PROCESSED\n         $CWTO MSG=DISPLINE,L=(R0),MSGID=930\n         L     R14,CWTOR14             RESTORE RETURN ADDRESS\n         BR    R14\n         EJECT\nERR06    DS    0H\nERR22    DS    0H\nERR23    DS    0H\nERR01    MVC   DISPLINE(L'E01MSG),E01MSG\n         LA    R0,L'E01MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR03    DS    0H\nERR26    DS    0H\nERR02    MVC   DISPLINE(L'E02MSG),E02MSG\n         LA    R0,L'E02MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR04    MVC   DISPLINE(L'E04MSG),E04MSG\n         LA    R0,L'E04MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR05    MVC   DISPLINE(L'E05MSG),E05MSG\n         LA    R0,L'E05MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR24    DS    0H\nERR25    DS    0H\nERR07    MVC   DISPLINE(L'E07MSG),E07MSG\n         LA    R0,L'E07MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR09    DS    0H\nERR10    DS    0H\nERR11    DS    0H\nERR13    DS    0H\nERR14    DS    0H\nERR15    DS    0H\nERR16    DS    0H\nERR08    MVC   DISPLINE(L'E08MSG),E08MSG\n         LA    R0,L'E08MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR12    MVC   DISPLINE(L'E12MSG),E12MSG\n         LA    R0,L'E12MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR17    MVC   DISPLINE(L'E17MSG),E17MSG\n         LA    R0,L'E17MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR18    MVC   DISPLINE(L'E18MSG),E18MSG\n         LA    R0,L'E18MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR20    DS    0H\nERR21    DS    0H\nERR19    MVC   DISPLINE(L'E19MSG),E19MSG\n         LA    R0,L'E19MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR27    MVC   DISPLINE(L'E27MSG),E27MSG\n         LA    R0,L'E27MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\nERR28    MVC   DISPLINE(L'E28MSG),E28MSG\n         LA    R0,L'E28MSG\n         BAL   R14,DO$CWTO\n         B     NORMEND\n         EJECT\nNORMEND  DS    0H\n         CLI   JOEPROC,C'Y'            ANYTHING PROCESSED?\n         BE    NORMEND1                BRANCH IF YES\n         MVC   DISPLINE(L'NOWKCON),NOWKCON  \"NOTHING DONE\" MESSAGE\n         LA    R0,L'NOWKCON            LENGTH OF MESSAGE\n         BAL   R14,DO$CWTO             ISSUE IT\nNORMEND1 DS    0H\n         FREEMAIN R,LV=WORKLEN,A=(R3)  FREE THE WORKAREA\n         LA    R15,8                   NO FURTHER PROCESSING\n         B     EXIT05$$\n         EJECT\nDISPDATE DS    0H                      DISPLAY CURRENT JULIAN DATE\n         GETMAIN R,LV=WORKLEN          GET WORK AREA\n         USING WORKAREA,R3             ADDRESS FOR OUR WORKAREA\n         LR    R3,R1                   ADDRESS OF WORKAREA\n         TIME  DEC                     GET CURRENT JULIAN DATE\n         MVC   DISPLINE(L'DATECON),DATECON MESSAGE CONSTANT TO O/P\n         MVC   DISPLINE+18(7),=X'4021204B202020' EDIT PATTERN\n         ST    R1,DWORK                SAVE JULIAN DATE\n         ED    DISPLINE+18(7),DWORK+1  EDIT DATE INTO OUTPUT\n         LA    R0,L'DATECON            LENGTH OF MESSAGE\n         BAL   R14,DO$CWTO             WRITE MESSAGE\n         B     NORMEND1                EXIT\n         SPACE 3\nEXIT05XX DS    0H\n         LA    R15,0                   CONTINUE NORMAL PROCESSING\nEXIT05$$ $RETURN RC=(R15)\n         SPACE 3\n         DROP  R13\n         EJECT\n         SPACE 3\n         LTORG\n         SPACE 1\nNUMTABL  DC    256X'01'\n         ORG   NUMTABL+X'F0'\n         DC    10X'00'\n         ORG\n         SPACE 1\nDATECON  DC    C'*** CURRENT DATE = XX.XXX ***'\nNOWKCON  DC    C'NO WORK FOUND'\nE01MSG   DC    C'INVALID JOB NUMBER'\nE02MSG   DC    C'INVALID JOB NAME'\nE04MSG   DC    C'DUPLICATE JOBNAME IN PPU QUEUE'\nE05MSG   DC    C'JOBNAME NOT FOUND IN PPU QUEUE'\nE07MSG   DC    C'JOB NUMBER NOT FOUND IN PPU QUEUE'\nE08MSG   DC    C'INVALID OPERAND(S)'\nE12MSG   DC    C'JOB IS /*XMIT OR BUSY WITH $TO COMMAND'\nE17MSG   DC    C'TIMING PROBLEM; CONTACT TECH SUPPORT'\nE18MSG   DC    C'TOO MANY OPERANDS'\nE19MSG   DC    C'INVALID SECOND OPERAND'\nE27MSG   DC    C'INVALID SYSOUT CLASS'\nE28MSG   DC    C'\"FROM\" AND \"TO\" CLASSES ARE EQUAL'\n         EJECT\nWORKAREA DSECT\nDWORK    DS    D                       WORK FIELD\nE1DWORK  DS    D                       JOE ID ROUTINE DWORD WORK AREA\nJQEADDR  DS    F                       ADDR OF JQE FOR THIS JOB\nCWTOR14  DS    F                       SUBR R14 SAVE AREA\nCOMWORKR DS    3F                      WD(R5),WE(R6),WF(R7)\nE1REGSV  DS    2F                      JOE ID ROUTINE REG SAVE AREA\nE1JOE#   DS    CL24                    JOE IDENTIFICATION WORK AREA\nJOBTYPE  DS    C                       JOB/STC/TSU HEX INDICATOR\nJOBNAME  DS    CL8                     JOBNAME OF THIS JOB\nSUBCMND  DS    C                       SUBCOMMAND - L/C/M\nOLDCLASS DS    C                  SYSOUT CLASS TO LIST/CANCEL/MOVE FROM\nNEWCLASS DS    C                       SYSOUT CLASS TO MOVE TO\nJOB#     DS    CL4                     NUMERIC JOB NUMBER\nJOEPROC  DS    C                       Y=SOME HITS ON LIST/MOVE/CANCEL\nLISTOPER DS    C                       INSTR CC MASK FOR LIST SELECTION\nDISPLINE DS    0C\nDISPJOB# DS    CL5                     JOB NUMBER\n         DS    C                       BLANK\nDISPJOBN DS    CL8                     JOB NAME\n         DS    C                       BLANK\nDISPOCLS DS    C                       SYSOUT CLASS\n         DS    C                       BLANK\nDISPJOEN DS    CL14                    JOE NAME\n         SPACE 1\nDISPCANC DS    CL9                     \"CANCELLED\"\nDISPCANL EQU   *-DISPLINE\n         SPACE 1\n         ORG   DISPCANC\nDISPCHGC DS    CL10                    \"CHANGED TO\"\n         DS    C                       BLANK\nDISPCHGN DS    C                       NEW SYSOUT CLASS\nDISPCHGL EQU   *-DISPLINE\n         SPACE 1\n         ORG   DISPCANC\nDISPFORM DS    CL8                     FORM ID\n         DS    C                       BLANK\nDISPLOCL DS    C                       Y=(DEST=LOCAL), N=(DEST\u00ac=LOCAL)\n         DS    C                       '/'\nDISPHOLD DS    C                       Y=\"SELECT=YES\" IN EFFECT        *\n                                       N=\"SELECT=NO\" IN EFFECT         *\n                                       H=JOB HELD (OVERLAYS THE ABOVE)\n         DS    C                       BLANK\n         DS    CL2                     \"P=\"\nDISPPRTY DS    CL3                     JOE PRIORITY\n         DS    C                       BLANK\nDISPLCNT DS    CL9                     JOE LINE COUNT (TOTAL)\n         SPACE 1\n         ORG   DISPOCLS\n         DS    CL3                     \"HAS\"\n         DS    C                       BLANK\nDISPHCNT DS    CL3                     HELD DATASET COUNT\n         DS    C                       BLANK\n         DS    CL13                    \"HELD DATASETS\"\nDISPHLEN EQU   *-DISPLINE\n         SPACE 1\n         ORG   DISPCANC\nDISPBUSY DS    CL25                    JOE IS BUSY MESSAGE\nDISPBUSL EQU   *-DISPLINE\n         SPACE 1\n         ORG\nDISPLENG EQU   *-DISPLINE\nWORKLEN  EQU   *-WORKAREA\n         SPACE 3\n&EFULNAM CSECT\n         EJECT\n         $PATCHSP 32\n         SPACE 3\n         $MODEND\n         SPACE 3\n         END   JES2X005\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT339/FILE339.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT339", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}