/*********************************REXX**********************************
*                                                                      *
* Interactive REXX instruction execution.                              *
*                                                                      *
***********************************************************************/

   Parse source . . REXXTRY_name_of_exec .
   Parse arg REXXTRY_argument_string

   If abbrev("?",REXXTRY_argument_string)
   Then do
      Say REXXTRY_name_of_exec,
      "allows you to interactively execute REXX instructions -"
      Say "each instruction string is executed when you hit Enter."
      End

   If REXXTRY_argument_string == "?"
   Then do
      Say "You may also specify a REXX statement directly on the call"
      Say "for immediate execution."
      Exit
      End

   Trace "Off"
   Call on error
   Call on failure
   Signal on novalue
   Signal on syntax
   Signal on halt
   If sysvar("SYSISPF") = "ACTIVE"
   Then address ISPEXEC "CONTROL ERRORS RETURN"
   Drop rc

   If REXXTRY_argument_string ¬= ""
   Then do
      Interpret REXXTRY_argument_string
      Exit
      End
   Else say "To end enter ""Exit""."

Loop:
   Do forever
      Parse external REXXTRY_external_string
      If REXXTRY_external_string ¬= ""
      Then interpret REXXTRY_external_string
      Else say REXXTRY_name_of_exec": enter a REXX instruction"
      End

Error:
   REXXTRY_current_trace_option = trace("Off")
   Say condition("Condition name") "return code" rc
   Say condition("Description")
   If symbol("ZERRSM") == "VAR"
   Then do
      Say zerrsm
      Say zerrlm
      Drop zerrsm zerrlm
      End
   Trace value REXXTRY_current_trace_option
   Return

Failure:
   REXXTRY_current_trace_option = trace("Off")
   Say condition("Condition name") "return code" rc
   Say condition("Description")
   Trace value REXXTRY_current_trace_option
   Return

Novalue:
   REXXTRY_current_trace_option = trace("Off")
   Say Condition("Condition name"),
      "for variable" condition("Description")
   If REXXTRY_argument_string = ""
   Then do
      Say REXXTRY_external_string
      Signal on novalue
      Trace value REXXTRY_current_trace_option
      Signal loop
      End
   Else do
      Say REXXTRY_argument_string
      Exit
      End

Syntax:
   REXXTRY_current_trace_option = trace("Off")
   Say condition("Condition name") "error" rc":" errortext(rc)
   If REXXTRY_argument_string = ""
   Then do
      Say REXXTRY_external_string
      Signal on syntax
      Trace value REXXTRY_current_trace_option
      Signal loop
      End
   Else do
      Say REXXTRY_argument_string
      Exit
      End

Halt:
   Trace "Off"
   Say condition("Condition name") condition("Description")
   Exit
