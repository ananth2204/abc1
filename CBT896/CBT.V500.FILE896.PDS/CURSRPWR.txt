/* ----------------------------------------------------------------- */
/*                                                                   */
/* Ref:  "Enterprise Systems Journal", March, 1992, article titled   */
/*       "Cursor Power for MVS/TSO", by Andrew Brundell, page 10.    */
/*                                                                   */
/* With corrections by William J. Smith, Charles Schwab & Co., Inc.  */
/* 101 Montgomery Street, 5th Floor, San Francisco, CA  94104-4122.  */
/*                                                                   */
/* This ISPF/PDF edit macro provides the user with the capability of */
/* 'scavenging' screen data for a data set name and passing it to    */
/* PDS/E for subsequent MEMLIST processing.  In essence, this macro  */
/* provides the user with a crude form of "mousing" around the 3270  */
/* keyboard.                                                         */
/*                                                                   */
/* All lines of code with the exception of the PDS/E, EDIT, or       */
/* BROWSE service invocation, provide the basic algorithm for use as */
/* a standard means by which to extract the information pointed to   */
/* by the cursor.                                                    */
/*                                                                   */
/* ----------------------------------------------------------------- */
ISREDIT MACRO NOPROCESS
CONTROL END(ENDO)
ISPEXEC CONTROL ERRORS RETURN
ISREDIT (CL,CC) = CURSOR
IF &CC = 0 THEN +
  EXIT CODE(0)


/* ----------------------------------------------------------------- */
/*                                                                   */
/* Since a data set name is to be extracted, the delimiter variable, */
/* &DELIM, should only contain those characters that could never     */
/* form part of a data set name (e.g. spaces, braces, etc.).         */
/*                                                                   */
/* ----------------------------------------------------------------- */

SET &DELIM = &NRSTR( ~`!%¬*-_=+|\{¢¦};:"'<,>?/)
ISREDIT (LINE) = LINE .ZCSR
ISREDIT (END) = LRECL
SET &START = 1

/* ----------------------------------------------------------------- */
/*                                                                   */
/* Return the line the cursor rests on using the LINE macro          */
/* directive and the length of the line using (the record length).   */
/* Using a simple scan loop, each character is examined first back   */
/* from the cursor column and then forward until a character from    */
/* the delimiter string is found in each direction.  When each       */
/* string limit is found, the scan loop is shortcut, resulting in    */
/* the start and end positions of the data of interest. Extract the  */
/* data set name using SUBSTR and pass it to the respective ISPF     */
/* service, TSO command processor, CLIST, or REXX EXEC.              */
/*                                                                   */
/* ----------------------------------------------------------------- */

DO I= &CC TO &START BY -1
  IF &SYSINDEX(&SUBSTR(&I,&NRSTR(&LINE)),&NRSTR(&DELIM),1) > 0 THEN +
    SET &START = &I + 1
ENDO

DO I= &CC TO &END
  IF &SYSINDEX(&SUBSTR(&I,&NRSTR(&LINE)),&NRSTR(&DELIM),1) > 0 THEN +
    SET &END = &I - 1
ENDO

IF &START > &END THEN +
  EXIT CODE(0)
SET &WORD = &SUBSTR(&START:&END,&NRSTR(&LINE))

ISPEXEC SELECT CMD(LP '&WORD' ML :)    /* Pass data set name to PDS  */
/* ISPEXEC BROWSE DATASET('&WORD')     <=== Make a suitable choice   */
/* ISPEXEC EDIT   DATASET('&WORD')     <=== for your installation.   */

IF &LASTCC > 0 THEN +
  ISPEXEC SETMSG MSG(&ZERRMSG)
EXIT CODE(0)
