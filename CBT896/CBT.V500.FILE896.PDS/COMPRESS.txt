This file contains an ISPF Edit Macro called Compress:

A new REXX exec, %COMPRESS, is now available to compress a partitioned
data set. The exec may be used either as an ISPF Edit macro or as a TSO
command.

The exec is particularly useful as an Edit macro when an X37 abend
occurs when you use the END or SAVE command. To use it, simply enter:

   ===> %COMPRESS

Below is the REXX Procedure.  Place it into your REXX library
accessed by ISPF.

/***********************************************************************
*                                                                      *
* COMPRESS ISPF Edit macro or TSO command                              *
*                                                                      *
* When used as an Edit macro the current data set is compressed and no *
* parameters are allowed.                                              *
*                                                                      *
* When used as a TSO command, the following parameters are supported.  *
*                                                                      *
* Positional command parameter (required):                             *
*    dataset         specifies the dataset to be compressed.           *
*                                                                      *
* Keyword command parameters (optional):                               *
*    LIST|NOLIST     (default LIST) specifies listing member names.    *
*    TRIM|NOTRIM     (default NOTRIM) specifies releasing unused space *
*                    via the TRIM command.                             *
*    OLD|SHR         (default OLD) specifies the disposition of the    *
*                    data set to be compressed.                        *
*    PRINT(*|dsname) (default *) specifies where the listing is to be  *
*                    placed (* specifies the terminal).                *
*    SPACE(tracks)   (default 0) specifies the amount of unused space  *
*                    which is not to be released by TRIM.              *
*                                                                      *
* Unsupported but tolerated parameters:                                *
*    IEBCOPY, NEW                                                      *
*                                                                      *
*                                                                      *
* Douglas H. Adams                                                     *
* Mail Code 110-SH28                                                   *
* Rockwell International Corporation                                   *
* 2201 Seal Beach Boulevard                                            *
* P. O. Box 2515                                                       *
* Seal Beach, California 90740-1515                                    *
*                                                                      *
* (213) 797-2618                                                       *
*                                                                      *
* November 8, 1990                                                     *
*                                                                      *
***********************************************************************/

Signal on novalue
Trace "Off"
Arg parameters

/***********************************************************************
* Call appropriate interface (Edit macro or TSO command)               *
***********************************************************************/
Parse source . . . . . . . address_space .
Select
   When address_space == "ISPF"
   Then do
      Address ISPEXEC "CONTROL ERRORS RETURN"
      ADDRESS ISREDIT "MACRO (PARM)"
      Select
         When rc = 0
         Then call EDIT_interface
         When rc = 20
         Then call TSO_interface
         Otherwise result = 16
         End
      End
   When address_space == "TSO/E"
   Then call TSO_interface
   Otherwise
      Say "COMPRESS must be used under TSO"
      Result = 16
   End

Exit result

/***********************************************************************
* Edit macro interace                                                  *
***********************************************************************/
EDIT_interface:

Address ISPEXEC
If parm ¬== ""
Then do
   Zedsmsg = "Parameters invalid"
   Zedlmsg = "The COMPRESS edit macro does not allow parameters"
   "SETMSG MSG(ISRZ001)"
   Return 16
   End
"ISREDIT (DATASET) = DATASET"
Dataset = "'"dataset"'"
"LMINIT DATAID(DATAID) DATASET("dataset") ENQ(EXCLU)"
If rc ¬= 0
Then do
   "SETMSG MSG(ISRZ002)"
   Return 12
   End
"LMCOMP DATAID("dataid")"
If rc ¬= 0
Then "SETMSG MSG(ISRZ002)"
Else do
   Zedsmsg = "Compress successful"
   Zedlmsg = "Compress of" dataset "was successful"
   "SETMSG MSG(ISRZ000)"
   End
"LMFREE DATAID("dataid")"
Return 1

/***********************************************************************
* TSO interface                                                        *
***********************************************************************/
TSO_interface:

/*---------------------------------------------------------------------*
* Initialize parameter processing                                      *
*---------------------------------------------------------------------*/
Keyword. = 0
Value. = ""
Parse value "IEBCOPY LIST NEW NOLIST NOTRIM OLD PRINT SHR SPACE TRIM",
      with   k.1     k.2  k.3 k.4    k.5    k.6 k.7   k.8 k.9   k.10
Parse value "1       1    2   3      3      1   1     2   2     1   ",
      with   l.1     l.2  l.3 l.4    l.5    l.6 l.7   l.8 l.9   l.10
Parse value "* 0",
      with value.print value.space
Parameters = translate(parameters,,",")
/*---------------------------------------------------------------------*
* Process positional parameter (data set name)                         *
*---------------------------------------------------------------------*/
Parse var parameters dataset parameters
Do while dataset = ""
   Say "Enter data set name -"
   Parse external dataset .
   End
/*---------------------------------------------------------------------*
* Process keyword parameters                                           *
*---------------------------------------------------------------------*/
Do while parameters ¬== ""
   Parse var parameters parameter parameters
   Parse var parameter keyword "(" value ")" .
   Do i = 1 to 10 until abbrev(k.i,keyword,l.i)
      End i
   If i > 10
   Then do
      Call message "Invalid parameter",,
                    parameter "is invalid or ambiguous"
      Return 16
      End
   Else do
      Keyword = k.i
      Keyword.keyword = 1
      If value ¬== ""
      Then value.keyword = value
      End
   End
/*---------------------------------------------------------------------*
* Allocate data sets                                                   *
*---------------------------------------------------------------------*/
If listdsi(dataset) > 4
Then do
   Call message "",sysmsglvl2
   Return 16
   End
If keyword.shr
Then "ALLOCATE FILE(THATSIT) DATASET("dataset") SHR REUSE"
Else "ALLOCATE FILE(THATSIT) DATASET("dataset") OLD REUSE"
Select
   When value.print == "*" & address_space == "TSO/E"
   Then "ALLOCATE FILE(SYSPRINT) DATASET(*) REUSE"
   When value.print == "*" & address_space == "ISPF"
   Then "ALLOCATE FILE(SYSPRINT) UNIT(SYSVIO) REUSE NEW",
                 "SPACE(1 1) TRACKS"
   When sysdsn(value.print) == "OK"
   Then "ALLOCATE FILE(SYSPRINT) DATASET("value.print") REUSE OLD"
   Otherwise "ALLOCATE FILE(SYSPRINT) DATASET("value.print") REUSE NEW",
                      "SPACE(1 1) TRACKS"
   End
"ALLOCATE FILE(SYSUT3) UNIT(SYSVIO) REUSE NEW SPACE(1 1) CYLINDERS"
"ALLOCATE FILE(SYSUT4) UNIT(SYSVIO) REUSE NEW SPACE(1 1) CYLINDERS"
"ALLOCATE FILE(SYSIN) UNIT(SYSVIO) REUSE NEW SPACE(1) TRACK",
         "RECFM(F) LRECL(80) BLKSIZE(80)"
/*---------------------------------------------------------------------*
* Compress                                                             *
*---------------------------------------------------------------------*/
Sysin.1 = " COPY OUTDD=THATSIT,INDD=THATSIT"
If keyword.nolist
Then sysin.1 = sysin.1",LIST=NO"
"EXECIO 1 DISKW SYSIN (STEM SYSIN. FINIS)"
"TSOEXEC PGMCALL IEBCOPY"
Rc_TSOEXEC = rc
Select
   When rc = 0
   Then nop
   When rc = 4
   Then call message "Return code" syscmdrc,,
                     "Return code is" syscmdrc
   When rc = 12
   Then call message "Abend code" sysabnrc,,
                     "Abend code is" sysabncd", reason code is" sysabnrc
   Otherwise call message "TSOEXEC failed",,
                          "TSOEXEC return code is" rc
   End
/*---------------------------------------------------------------------*
* Browse compress output                                               *
*---------------------------------------------------------------------*/
If address_space == "ISPF"
Then do
   Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME(SYSPRINT)"
   Address ISPEXEC "BROWSE DATAID("dataid")"
   Address ISPEXEC "LMFREE DATAID("dataid")"
   End
/*---------------------------------------------------------------------*
* Trim                                                                 *
*---------------------------------------------------------------------*/
If rc_TSOEXEC = 0 & keyword.trim
Then "TRIM" dataset "SPACE("value.space")"
/*---------------------------------------------------------------------*
* Free files                                                           *
*---------------------------------------------------------------------*/
"FREE FILE(THATSIT SYSIN SYSPRINT SYSUT3 SYSUT4)"
"ALLOCATE FILE(SYSIN) DATASET(*)"
"ALLOCATE FILE(SYSPRINT) DATASET(*)"

Return rc_TSOEXEC

/***********************************************************************
* Issue message                                                        *
***********************************************************************/
Message:

Parse arg zedsmsg,zedlmsg
If address_space == "ISPF"
Then address ISPEXEC "SETMSG MSG(ISRZ001)"
Else say zedsmsg zedlmsg
Return

/***********************************************************************
* Trap uninitialized variables                                         *
***********************************************************************/
Novalue:

Say "Uninitialized variable in line" sigl":"
Say sourceline(sigl)
Trace "?Results"
Nop
