{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013603000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE958.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE958.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x0e'", "DS1TRBAL": "b'W\\xca'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\t\\xf3\\x00\\x05\\t\\xf3\\x00\\t\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04_\\x00)\\x01\\x17 /\\x01\\x17 /\\x02$\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf5@@@'", "ispf": {"version": "04.95", "flags": 0, "createdate": "2017-07-21T00:00:00", "modifydate": "2017-07-21T02:24:29", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-495"}, "text": "REGULAR CBT TAPE - VERSION 495    FILE:  958\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT495.FILE958\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 15 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,418 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/21/17    02:24:28    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE958": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04_\\x00\\x18\\x01\\x17 /\\x01\\x17 /\\x02$\\x00?\\x00?\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf5@@@'", "ispf": {"version": "04.95", "flags": 0, "createdate": "2017-07-21T00:00:00", "modifydate": "2017-07-21T02:24:18", "lines": 63, "newlines": 63, "modlines": 0, "user": "CBT-495"}, "text": "//***FILE 958 is from Sam Golob and contains programs which         *   FILE 958\n//*           deal with the TSO RELOGON BUFFER, or which execute    *   FILE 958\n//*           a TSO command and then force a LOGOFF.  This class    *   FILE 958\n//*           of programs is very interesting, and is worth some    *   FILE 958\n//*           study.                                                *   FILE 958\n//*                                                                 *   FILE 958\n//*           email:  sbgolob@cbttape.org    or                     *   FILE 958\n//*                   sbgolob@att.net                               *   FILE 958\n//*                                                                 *   FILE 958\n//*       Some of these programs use the TSO RELOGON BUFFER,        *   FILE 958\n//*       which is similar to the TSO COMMAND BUFFER, but which     *   FILE 958\n//*       is only used for LOGON/LOGOFF processing, in certain      *   FILE 958\n//*       cases.  The TSO RELOGON BUFFER has the restriction that   *   FILE 958\n//*       the offset of the command, in the second halfword of      *   FILE 958\n//*       the buffer, has to be zero.  In other words, the command  *   FILE 958\n//*       must start at the very beginning of (the command part of) *   FILE 958\n//*       the buffer.                                               *   FILE 958\n//*                                                                 *   FILE 958\n//*       Mark Zelden's TSO* execs are included here, so you can    *   FILE 958\n//*       trap the output of the SHOWRLGB command in full screen.   *   FILE 958\n//*                                                                 *   FILE 958\n//*           TSO TSOx SHOWRLGB      where x is E - edit            *   FILE 958\n//*                                             V - view            *   FILE 958\n//*                                             B - browse          *   FILE 958\n//*           TSOR works in READY mode.         R - TSO REVIEW      *   FILE 958\n//*                                                                 *   FILE 958\n//*           REVIEW is found in CBT File 134 (source) and          *   FILE 958\n//*                              CBT File 135 (load)                *   FILE 958\n//*                                                                 *   FILE 958\n//*       Below is a description of the programs contained here:    *   FILE 958\n//*                                                                 *   FILE 958\n//*       BYE       - TSO command to fill the Relogon Buffer        *   FILE 958\n//*                   with any character string, set the ECTLOGF    *   FILE 958\n//*                   bit on, and exit.  This is your main tool     *   FILE 958\n//*                   to manipulate the TSO Relogon Buffer.         *   FILE 958\n//*                   (BYE was written by \"CBT Updater\")            *   FILE 958\n//*                                                                 *   FILE 958\n//*                   Using BYE without operands will initialize    *   FILE 958\n//*                   the Relogon Buffer and turn the ECTLOGF       *   FILE 958\n//*                   bit off, so you can start over.               *   FILE 958\n//*                                                                 *   FILE 958\n//*       RELOGON   - Generate the string: LOGON userid, and put    *   FILE 958\n//*                   it into the Relogon Buffer.  Set the          *   FILE 958\n//*                   ECTLOGF bit on.  If the userid was defined    *   FILE 958\n//*                   from SYS1.UADS, then extract the password     *   FILE 958\n//*                   and generate LOGON userid/password in         *   FILE 958\n//*                   the Relogon Buffer.  Needs APF authorization  *   FILE 958\n//*                   to extract the password from the TSB, if      *   FILE 958\n//*                   it is there.                                  *   FILE 958\n//*                                                                 *   FILE 958\n//*       SHOWRLGB  - TSO command to display all relevant data      *   FILE 958\n//*                   concerning the Relogon Buffer.  Output can    *   FILE 958\n//*                   be trapped and displayed fullscreen.          *   FILE 958\n//*                                                                 *   FILE 958\n//*       CMDLOFF   - TSO command to execute another TSO command    *   FILE 958\n//*                   and then LOGOFF the session.                  *   FILE 958\n//*                                                                 *   FILE 958\n//*       NOLOGOF   - TSO command to set the ECTLOGF bit OFF, and   *   FILE 958\n//*                   prevent the automatic LOGOFF in READY mode.   *   FILE 958\n//*                                                                 *   FILE 958\n//*       YESLOGOF  - TSO command to set the ECTLOGF bit ON, and    *   FILE 958\n//*                   force the automatic LOGOFF if in READY mode.  *   FILE 958\n//*                                                                 *   FILE 958\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BYE": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x19\\x01\\x17\\x19o\\x01\\x17 \\x1f\\x14W\\x00\\x8b\\x00 \\x00\\x00\\xe4\\xd7\\xc4\\xc1\\xe3\\xc5\\xd9@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "2017-07-15T00:00:00", "modifydate": "2017-07-20T14:57:19", "lines": 139, "newlines": 32, "modlines": 0, "user": "UPDATER"}, "text": "         TITLE 'TOOL TO MANIPULATE THE TSO RELOGON BUFFER'\n* ------------------------------------------------------------------- *\n* 'BYE' TSO COMMAND                                                   *\n*                             WRITTEN JULY 15 2017 (BY CBT UPDATER)   *\n*                             MODIFIED  JULY 16 2017 (BY SBG)         *\n* ------------------------------------------------------------------- *\n* PURPOSE:  TO LOAD THE TSO RELOGON BUFFER WITH ANY DATA (SHOULD BE   *\n*           A LOGON/LOGOFF COMMAND) AND SET THE ECT RELOGON SWITCH    *\n*           ON, SO LOGOFF IS DONE WHEN IN \"READY\" MODE, FOLLOWED      *\n*           BY THE LOGON/LOGOFF COMMAND IN THE RELOGON BUFFER.        *\n* ------------------------------------------------------------------- *\n* SYNTAX :      BYE   COMMAND TO PUT IN BUFFER                        *\n*                                                                     *\n*       RESULT:   PUTS THE COMMAND CHARACTERS INTO THE RELOGON        *\n*                 BUFFER, SETS THE BUFFER HEADER, AND SETS            *\n*                 THE ECT RELOGON SWITCH \"ON\".                        *\n*                                                                     *\n* SYNTAX:       BYE                    (WITH NO OPERANDS)             *\n*                                                                     *\n*       RESULT:   CLEARS THE RELOGON BUFFER TO BLANKS,                *\n*                 INITIALIZES THE RELOGON BUFFER HEADER,              *\n*                 AND SETS THE ECT RELOGON SWITCH \"OFF\".              *\n*                 (UN-DO THE RESULT OF \"BYE\" WITH OPERANDS.)          *\n* ------------------------------------------------------------------- *\n* DESCRIPTION OF THE PROGRAM:                                         *\n*                                                                     *\n* THIS MUST BE RUN AS A TSO COMMAND. R1 SHOULD POINT TO THE CPPL.     *\n* THIS TSO COMMAND SETS THE ECTLOGF BIT ON IN THE ECT, AND            *\n* PUTS THE COMMAND NAME IN THE RELOGON BUFFER, OR, IF ANY OPERANDS    *\n* ARE SPECIFIED, PUTS JUST THOSE OPERANDS IN THE RELOGON BUFFER.      *\n* ------------------------------------------------------------------- *\n* AS A RESULT OF TURNING ON THE ECTLOGF BIT, THE NEXT TIME            *\n* A 'READY' PROMPT IS EXPECTED FROM THE TERMINAL MONITOR PROGRAM,     *\n* THE TERMINAL MONITOR PROGRAM WILL END INSTEAD, LOGGING THE SESSION  *\n* OFF.  WHEN THIS COMMAND IS ISSUED FROM ISPF, THE LOGOFF WILL NOT    *\n* OCCUR UNTIL THE USER EXITS FROM ISPF.                               *\n* ------------------------------------------------------------------- *\n* IF THE OPERAND IS 'LOGOFF' THE SESSION WILL NOT TRY TO LOGON AFTER  *\n* IT ENDS. IF THE OPERAND IS 'LOGON', THE SESSION WILL TRY TO LOGON   *\n* AFTER IT ENDS, JUST LIKE WHAT HAPPENS IF YOU ENTER 'LOGON' FROM     *\n* THE 'READY' PROMPT.  YOU CAN ENTER LOGON USERID/PASSWORD            *\n* AS AN OPERAND OF BYE.                                               *\n* ------------------------------------------------------------------- *\n* IF THE OPERAND IS ABSENT, EVERYTHING IS RE-INITIALIZED,  (SBG)      *\n* AND THE ECTLOGF BIT IS SWITCHED OFF, CANCELLING THE RELOGON.        *\n* ------------------------------------------------------------------- *\n* IF THE OPERAND IS ANYTHING OTHER THAN 'LOGOFF' OR 'LOGON',          *\n* THEN AFTER THE LOGOFF THESE MESSAGES WILL APPEAR:                   *\n*  IKJ56410I XXX COMMAND NOT ACCEPTED DURING LOGON                    *\n*  IJ56400A ENTER LOGON OR LOGOFF-                                    *\n* WHERE XXX WILL WILL BE THE COMMAND OR OPERAND THAT WAS SPECIFIED.   *\n* ------------------------------------------------------------------- *\n* OR IF THE OPERAND DOES NOT EVEN QUALIFY AS A VALID TSO COMMAND      *\n* NAME, I.E. MORE THAN 8 CHARACTERS, STARTS WITH A NUMBER, ETC.       *\n* THEN AFTER THE LOGOFF THESE MESSAGES WILL APPEAR:                   *\n*  IKJ56401I INVALID COMMAND SYNTAX                                   *\n*  IJ56400A ENTER LOGON OR LOGOFF-                                    *\n* ------------------------------------------------------------------- *\n* MODIFICATION:  (\"BYE\" WITHOUT OPERANDS, RE-INITIALIZES EVERYTHING.) *\n*                                                                     *\n* FIXED \"BYE\" WITHOUT OPERANDS, TO INITIALIZE THE RELOGON BUFFER,     *\n*  AND TURN THE LOGOFF BIT OFF IN THE ECT.    (SBG)                   *\n* ------------------------------------------------------------------- *\n*\nBYE      CSECT\n         USING *,R6\nENTRY0   EQU   *\n         SAVE  (14,12),,*\n         LR    R6,R15              BASE REGISTER\n         LA    R15,SAVE            NEW SAVE AREA\n         ST    R13,4(,R15)         OLD ADDRESS IN NEW SAVE AREA\n         ST    R15,8(,R13)         NEW ADDRESS IN OLD SAVE AREA\n         LR    R13,R15             NEW SAVE AREA\n         SPACE\n* ------------------------------------------------------------------- *\n*      ARE WE A LEGITIMATE TSO COMMAND RUNNING IN THE FOREGROUND?     *\n* ------------------------------------------------------------------- *\n         TM    0(R1),X'80'         IF PARM INSTEAD OF CPPL\n         BO    EXIT                   DON'T DO ANYTHING\n         LM    R2,R5,0(R1)         R2 -> CBUF, R4 -> PSCB, R5 -> ECT\n         TM    ECTSWS-ECT(R5),ECTBKGRD  IF BACKGROUND\n         BO    EXIT                   DON'T DO ANYTHING ELSE\n* ------------------------------------------------------------------- *\n*      YES WE ARE, SO TURN SWITCH ON AND LOAD THE RELOGON BUFFER      *\n* ------------------------------------------------------------------- *\n         OI    ECTSWS-ECT(R5),ECTLOGF   TURN ON RELOGON SWITCH\n*               COPY THE COMMAND IN CBUF, OR JUST ITS OPERANDS IF ANY\n*               TO THE RELOGON BUFFER\n         L     R8,PSCBRLGB-PSCB(,R4)    POINT R8 TO RELOGON BUFFER\n         MVI   4(R8),C' '               FILL BUFFER + 4 LENGTH 252\n         MVC   5(251,R8),4(R8)          WITH BLANKS\n         LA    R7,4(,R2)           POINT R7 TO CBUF+4\n         LH    R14,0(,R2)          GET LENGTH OF CBUF\n         SH    R14,=H'4'           MINUS 2 LEADING HALFWORDS\n         BNP   EXIT                SHOULDN'T BE ZERO OR LESS\n* ------------------------------------------------------------------- *\n* --------------------------------   TEST IF ANY OPERANDS   --------- *\n         TM    ECTSWS-ECT(R5),ECTNOPD   IF NO OPERANDS,\n         BO    NOOFFS                   RE-INITIALIZE EVERYTHING\n* ------------------------------------------------------------------- *\n* --------------------------------   LOAD THE RELOGON BUFFER  ------- *\n         AH    R7,2(,R2)           POINT TO OPERAND BY ADDING OFFSET\n         SH    R14,2(,R2)          REDUCE LENGTH BY SUBTRACTING OFFSET\n         BCTR  R14,0               LENGTH MINUS 1 FOR EX\n         B     *+10\n         MVC   4(0,R8),0(R7)\n         EX    R14,*-6             COPY CBUF TO RELOGON BUFFER\n         AH    R14,=H'5'           ADD 4 TO LENGTH, PLUS 1 FOR BCTR\n         STH   R14,0(,R8)          SET LENGTH IN RELOGON BUFFER\n         SR    R14,R14\n         STH   R14,2(,R8)          ZERO THE OFFSET HALFWORD\n* ------------------------------------------------------------------- *\nEXIT     SR    R15,R15             RETURN CODE ZERO\n         L     R13,4(,R13)         RESTORE R13\n         L     R14,12(,R13)\n         RETURN (0,12)\n* ------------------------------------------------------------------- *\n*   WHEN \"BYE\" HAS NO OPERANDS, THEN INITIALIZE THE RELOGON BUFFER.   *\n* ------------------------------------------------------------------- *\nNOOFFS   DS    0H\n         MVI   0(R8),X'01'         INITIALIZE LENGTH TO X'100'\n         MVI   1(R8),X'00'\n         SR    R14,R14\n         STH   R14,2(,R8)          ZERO THE OFFSET HALFWORD\n         NI    ECTSWS-ECT(R5),X'FF'-ECTLOGF   TURN LOGOFF BIT OFF\n*                                  BUFFER WAS ALREADY BLANKED, ABOVE.\n         B     EXIT\n* ------------------------------------------------------------------- *\n*                          CONSTANTS                                  *\n* ------------------------------------------------------------------- *\n         DC    0D'0'               DOUBLEWORD ALIGNMENT\nSAVE     DC    18F'0'              SAVE AREA\n         SPACE\n         PRINT GEN\n         IKJCPPL\n         IKJPSCB\n         IKJECT\n         YREGS\n         END   ENTRY0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BYE$": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x007\\x01\\x17\\x19o\\x01\\x17\\x19\\x8f\\tI\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2017-07-15T00:00:00", "modifydate": "2017-07-17T09:49:37", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT495.FILE958(BYE)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,PASS)\n//         DD  DDNAME=SYSIN\n//SYSIN    DD  *\n ENTRY   BYE\n SETCODE AC(0)\n SETSSI  CB495958\n NAME    BYE(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CMDLOFF": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x84\\x03\\x7f\\x01\\x17\\x19\\x8f\\tX\\x00\\x9a\\x00t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1984-02-06T00:00:00", "modifydate": "2017-07-17T09:58:00", "lines": 154, "newlines": 116, "modlines": 0, "user": "SBGOLOB"}, "text": "         TITLE 'DELUXE COMMAND AUTHORIZATION INTERFACE'\nCMDLOFF CSECT\nCMDLOFF RMODE 24\nCMDLOFF AMODE 31\n        SPACE\n***********************************************************************\n*                                                                     *\n*                D  I  S  C  L  A  I  M  E  R                         *\n*                                                                     *\n*        AS ALWAYS YOU USE THIS PROGRAM AT YOUR OWN RISK. THERE       *\n*        ARE NO GUARANTEES INTENDED.                                  *\n*                                                                     *\n*                                                                     *\n*        COMMAND AUTHORIZATION INTERFACE                              *\n*                                                                     *\n*   COMMAND PROCESSOR FOR COMMAND 'CMDLOFF'                           *\n*   THIS COMMAND PROCESSOR ALLOWS ANOTHER COMMAND TO BE ISSUED AFTER  *\n*   SETTING THE ECTLOGF BIT TO 1 SO THAT AFTER THE COMMAND FINISHES   *\n*   THE TMP WILL LOG THE USER OFF.                                    *\n*                                                                     *\n*    -COMMAND PROCESSOR                                               *\n*       ENTER:                                                        *\n*       CMDLOFF 'COMMAND NAME' 'COMMAND OPERANDS'                     *\n*         -COMMAND NAME IS THE COMMAND DESIRED FOR EXECUTION.         *\n*       THE COMMAND IS ATTACHED .                                     *\n*       BEFORE ATTACHING, THE CPPL PASSED TO CMDLOFF IS REBUILT       *\n*       FOR THE COMMAND BEING ATTACHED.                               *\n*       THE COMMAND BUFFER AND THE ENVIRONMENT CONTROL TABLE ARE      *\n*       MODIFIED.                                                     *\n*                                                                     *\n*       THIS COMMAND WILL ISSUE THE COMMAND PASSED TO IT AND          *\n*       THEN CAUSE LOGOFF OF THE USER.  THIS IS USEFUL IN THE         *\n*       SITUATION WHERE YOU WANT A USER TO EXIST IN A PROTECTED       *\n*       ENVIRONMENT. EX. CMDLOFF ISPSTART PANEL(USERSEL)              *\n***********************************************************************\n**    FIXED THE RX INSTRUCTIONS  LA  R7,1(,R7)  NOT LA R7,1(R7)      **\n***********************************************************************\n         SPACE\n*        SAVE  (14,12),,CMDLOFF_&SYSDATE_&SYSTIME\n         B     BEGIN-CMDLOFF(R15)\n         DC    CL8'CMDLOFF_'\n         DC    C'&SYSDATE '\n         DC    C'&SYSTIME '\nBEGIN    DS    0H\n         STM   14,12,12(13)\n         LR    R12,R15          ESTABLISH R12 AS BASE REG\n         USING CMDLOFF,R12      TELL ASSEMBLER\n         ST    R13,SAVEAREA+4   SAVE OS SAVE AREA ADDRESS\n         LR    R6,R13           SAVE IT IN R6\n         LA    R13,SAVEAREA     POINT R13 AT OUR SAVEAREA\n         ST    R13,8(R6)        STORE OUR SAVEAREA ADDRESS IN OS\n         EJECT\n         LR    R2,R1                   R2 ---> CPPL\n         L     R4,12(,R2)              R4 ---> ECT\n         USING ECT,R4\n         OI    ECTSWS,ECTLOGF     TELL TMP THAT LOGOFF HAS BEEN ENTERED\n         DROP  R4\n         L     R4,0(,R2)               R4 ---> COMMAND BUFFER\n         SR    R5,R5\n         LH    R5,0(,R4)               R5 = LENGTH(CBUF)\n         S     R5,F5                   R5 - 4(PREFIX) -1(FOR MOVE)\n         EX    R5,UPCASE               XLATE TO UPPERCASE\n         LH    R5,0(,R4)               R5 = LENGTH(CBUF)\n         S     R5,F4                   MINUS LENGTH OF PREFIX (4)\n         SR    R6,R6\n         LH    R6,2(,R4)               R6 = OFFSET TO OPERANDS\n         SR    R7,R7\n         LA    R7,4(,R4)               START OF TEXT\n         AR    R7,R6                   R7 ---> OPERANDS\n         SR    R5,R6                   R5 = LENGTH(OPERANDS)\n         BCTR  R5,0                    MINUS ONE FOR MOVE\n         EX    R5,MOVETEXT             CREATE NEW CBUF TEXT\n         A     R5,F5                   R5 + $(PREFIX) +1(FROM MOVE)\n         STH   R5,CBUF                 STORE NEW CBUF LENGTH\n         BAL   R14,FINDOPND            FIND FIRST OPERAND\n         STH   R8,OFFSET               AND STORE OFFSET IN CBUF\n         BCTR  R8,0                    MINUS ONE FOR MOVE\n         EX    R8,MOVECMND             MOVE COMMAND NAME FOR LINK\n         LA    R8,CBUF                 ADDRESS OF NEW CBUF\n         ST    R8,0(,R2)               AND STORE IN CPPL\n         LR    R1,R2                   GET CPPL ADDRESS\n         SPACE\nLINK     LINK  EPLOC=COMMAND           LINK TO COMMAND\n         LA    R8,LOFFCMD              ADDRESS OF NEW CBUF\n         ST    R8,0(,R2)               AND STORE IN CPPL\n         LR    R1,R2                   GET CPPL ADDRESS\n         SPACE\nLINK2    LINK  EPLOC=LOGOFF            LINK TO LOGOFF\n         SPACE\n         SLR   R15,R15                 LOAD RETURN CODE\n         L     R13,SAVEAREA+4          LOAD OS SAVEAREA ADDR IN R13\n         RETURN (14,12),RC=(15)        RETURN TO CALLER\n         EJECT\nFINDOPND LA    R7,TEXT                 R7 ---> COMMAND BUFFER TEXT\n         SR    R8,R8                   COUNTER FOR OPERAND OFFSET\n         LR    R9,R5                   COMMAND BUFFER LENGTH\n         S     R9,F4                   MINUS PREFIX LENGTH\n         SPACE\nLOOP1    CLI   0(R7),C' '              FOUND BLANK\n         BE    LOOP2                       YES..NEXT LOOP\n         SPACE\n         LA    R7,1(,R7)               UPDATE POINTER\n         LA    R8,1(,R8)               UPDATE OFFSET\n         BCT   R9,LOOP1                LOOP IF STILL IN BUFFER\n         BR    R14                     AND EXIT\n         SPACE\nLOOP2    CLI   0(R7),C' '              FOUND BLANK\n         BNE   ENDLOOP                     NO...END OF ROUTINE\n         SPACE\n         LA    R7,1(,R7)               UPDATE POINTER\n         LA    R8,1(,R8)               UPDATE OFFSET\n         BCT   R9,LOOP2                LOOP IF STILL IN BUFFER\n         BCTR  R8,0                    IF NO OPERANDS, BACK UP ONE\n         SPACE\nENDLOOP  BR    R14                     RETURN TO CALLER\n         EJECT\n         SPACE\n         DS    0D\nOLDLEN   DC    F'0'                    ORIGINAL CBUF LENGTH\nF4       DC    F'4'\nF5       DC    F'5'\nCOMMAND  DC    CL8' '\nCBUF     DS    0D                      NEW COMMAND BUFFER\n         DC    H'0'                    BUFFER LENGTH\nOFFSET   DC    H'0'                    OFFSET TO OPERANDS\nTEXT     DC    CL255' '                COMMAND TEXT\nBLANKS   DC    CL255' '\nUPCASE   OC    4(*-*,R4),BLANKS\nMOVETEXT MVC   TEXT,0(R7)              MOVE COMMAND TEXT TO NEW CBUF\nMOVECMND MVC   COMMAND(*-*),TEXT       MOVE COMMAND NAME TO WORK AREA\nLOGOFF   DC    CL8'LOGOFF  '\nLOFFCMD  DC    XL2'000A',XL2'0006',CL7'LOGOFF '\nSAVEAREA DC    18F'0'\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n         IKJECT\n         SPACE\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CMDLOFF$": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00G\\x01\\x126_\\x01\\x17\\x18_\\x00&\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2012-12-30T00:00:00", "modifydate": "2017-07-04T00:26:47", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(CMDLOFF)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n ORDER   CMDLOFF\n SETCODE AC(1)\n SETSSI  CB495300\n ENTRY   CMDLOFF\n NAME    CMDLOFF(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NOLOGOF": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x17\\x01\\x17\\x18O\\x01\\x17 \\x0f\\x12\\x08\\x00C\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2017-07-03T00:00:00", "modifydate": "2017-07-19T12:08:17", "lines": 67, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.CBT495.FILE958\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//SYSIN    DD *\n    TITLE 'NOLOGOF - RESET THE ECTLOGF BIT NOT TO LOGOFF'\n* ------------------------------------------------------------------- *\n*      NOLOGOF  -  RESET THE ECTLOGF BIT SO YOU DON'T LOGOFF          *\n*                  (UNDO A RELOGON BEFORE IT MAKES YOU LOGOFF)        *\n*                                                                     *\n*   Author:   Sam Golob                                               *\n*                                                                     *\n*   Not re-entrant.                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNOLOGOF  CSECT\nNOLOGOF  RMODE 24\nNOLOGOF  AMODE 24\n         USING *,R15\n         B     STARTPG                   Eyecatcher\n         DC    CL10'NOLOGOF - '\n         DC    C'&SYSDATE'\n         DC    C', '\n         DC    C'&SYSTIME'\nSTARTPG  DS    0H\n         DROP  R15\n         USING NOLOGOF,R12\n         STM   R14,R12,12(R13)                Save regs\n         LR    R12,R15                   Load base\n         LR    R14,R13                   Caller save area\n         LA    R13,SAVEAREA              Save area address\n         ST    R14,SAVEAREA+4            Store old save\n         ST    R13,8(,R13)               Store new save\n         L     R7,12(,R1)                ECT from CPPL\n         NI    28(R7),X'EF'              Turn off LOGOFF bit X'10'\n         SR    R15,R15                   RC = 0\nRELEXIT  DS    0H\n         L     R13,SAVEAREA+4            Old save area\n         LM    R0,R12,20(R13)            Restore regs\n         L     R14,12(,R13)\n         BR    R14                       Exit\nSAVEAREA DS    9D                        Save Area\n         YREGS\n         END\n/*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,PASS)\n//         DD  DDNAME=SYSIN\n//SYSIN    DD  *\n ENTRY   NOLOGOF\n SETCODE AC(1)\n SETSSI  CB495958\n NAME    NOLOGOF(R)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RELOGON": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x16\\x00'\\x01\\x17\\x18O\\x01\\x17 /\\x02G\\x00\\xa0\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.22", "flags": 0, "createdate": "2017-07-03T00:00:00", "modifydate": "2017-07-21T02:47:27", "lines": 160, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//SYSIN    DD *\n    TITLE 'RELOGON - RE-LOGON TO YOUR RUNNING TSO ID '\n* ------------------------------------------------------------------- *\n*      RELOGON  -  LOGOFF AND LOGON AGAIN TO YOUR TSO USERID          *\n*                                                                     *\n*   Author:   Jeffrey R. Broido                                       *\n*                                                                     *\n*   Reconstituted from a disassembly and fixed by:  Sam Golob         *\n*                                                                     *\n*   Not re-entrant.                                                   *\n*                                                                     *\n*   This program has been fixed for 8-character userids.              *\n* ------------------------------------------------------------------- *\n*   The BYE command is more general than this command.                *\n* ------------------------------------------------------------------- *\n*   See note about the TSB password below.... instructive.            *\n* ------------------------------------------------------------------- *\n*   The original intent of this program was to put the statement:     *\n*                                                                     *\n*   LOGON userid/password                                             *\n*                                                                     *\n*   into the RELOGON buffer, pointed to by the PSCBRLGB field of      *\n*   the PSCB.  Also, the RELOGON switch X'10' in the ECTSWS field     *\n*   of the ECT is set.                                                *\n*                                                                     *\n*   This has the effect that when you get out of ISPF, you            *\n*   immediately LOGOFF, and execute the instructions in the RELOGON   *\n*   buffer, which is LOGON userid/password .                          *\n*                                                                     *\n*   This is an old program, and the following is true:                *\n*   The \"password\" part of this, only works if the userid was         *\n*   defined by UADS.  When the userid was defined by RACF, this       *\n*   password field is blank.  In that case, the LOGON command, set    *\n*   up by RELOGON, is:                                                *\n*                                                                     *\n*   LOGON userid                                                      *\n*                                                                     *\n*   So you have to enter the password again, when you re-LOGON.       *\n*   Sorry about that!  (The BYE command is more general, and it       *\n*   has more power than this command.)                                *\n*                                                                     *\n*   If you executed this program when in ISPF, and you haven't        *\n*   been logged off yet, you can undo the forced LOGOFF by using      *\n*   the non-APF-authorized TSO command called NOLOGOF, which          *\n*   (I hope) is included in this pds.      (S.Golob - July 2017)      *\n* ------------------------------------------------------------------- *\nRELOGON  CSECT\nRELOGON  RMODE 24\nRELOGON  AMODE 24\n         USING *,R15\n         B     STARTPG                   Eyecatcher\n         DC    CL10'RELOGON - '\n         DC    C'&SYSDATE'\n         DC    C', '\n         DC    C'&SYSTIME'\nSTARTPG  DS    0H\n         DROP  R15\n         USING RELOGON,R12\n         STM   R14,R12,12(R13)           Save regs\n         LR    R12,R15                   Load base\n         LR    R14,R13                   Caller save area\n         LA    R13,SAVEAREA              Save area address\n         ST    R14,SAVEAREA+4            Store old save\n         ST    R13,8(,R13)               Store new save\n         L     R7,12(,R1)                ECT from CPPL\n         L     R3,16                     CVT address\n         L     R3,0(,R3)                 TCB words\n         L     R2,12(,R3)                ASCB <- R2\n         L     R3,0(,R3)                 TCB\n         L     R3,180(,R3)               JSCB <- R3\n         TM    236(R3),X'01'             JSCBAUTH on?\n         BO    RELCONT                   Yes. Continue.\n         TPUT  MESSAGAP,L'MESSAGAP       No. Msg and get out.\nRELEXIT8 LA    R15,8                     Condition code\nRELEXIT  DS    0H\n         L     R13,SAVEAREA+4            Old save area\n         LM    R0,R12,20(R13)            Restore regs\n         L     R14,12(,R13)\n         BR    R14                       Exit\n*\nRELCONT  DS    0H                        Authorized. Continue.\n         L     R4,264(,R3)               PSCB from JSCB\n         L     R6,60(,R2)                TSB from ASCB\n         LTR   R6,R6                     Is there a TSB?\n         BZ    RELEXIT8                  No. Get out.\n         MODESET KEY=ZERO\n*                                        Form the LOGON command\n         L     R5,48(,R4)                RELOGON buffer from PSCB\n         MVI   0(R5),X'00'               Maximum length for\n         MVI   1(R5),X'1B'                LOGON userid/password\n         MVI   4(R5),X'40'               Clear data part of the\n         MVC   5(251,R5),4(R5)             Relogon Buffer\n         MVC   4(6,R5),LOGONX            MOVE \"LOGON \" CMD IN\n         CLC   =C'>7BYTES',0(R4)         Is userid 8 bytes?\n         BE    USER8BY                   Yes, get it from +X'54'\n         MVC   10(7,R5),0(R4)            Move in our Userid\n         B     REGUSID\n*\nUSER8BY  DS    0H                        DO IT WITH 8-CHAR USERID\n         MVC   10(8,R5),X'54'(R4)        8-char id to buffer\n         CLC   X'58'(8,R6),BLANKS        Is there a TSB password?\n         BE    NOSLASH                   No. Don't put slash either.\n         MVI   17(R5),X'61'              Move in SLASH\n         MVC   18(8,R5),X'58'(R6)        Move TSB PASSWORD (see below)\n         B     NOSLASH\nREGUSID  DS    0H\n         CLC   X'58'(8,R6),BLANKS        Is there a TSB password?\n         BE    NOSLASH                   No. Don't put slash either.\n         MVI   17(R5),X'61'              MOVE IN SLASH\n         MVC   18(8,R5),X'58'(R6)        TSB PASSWORD (see below)\nNOSLASH  DS    0H\n* ------------------------------------------------------------------- *\n*     About the TSB password:  It is:  Blanks if the userid           *\n*     is RACF-defined, and you'll have to re-enter it to LOGON.       *\n*     But if the id is UADS-defined, then the password is inserted    *\n*      automatically and is meaningful, which was the original        *\n*      purpose of this command--that you shouldn't have to enter      *\n*      the password again, in order to LOGON.                         *\n* ------------------------------------------------------------------- *\n         MODESET KEY=NZERO\n         OI    28(R7),X'10'              ECTSWS/INDICATE LOGOFF\n         SR    R15,R15                   RC = 0\n         B     RELEXIT                   Normal program end.\n         SPACE\n* ------------------------------------------------------------------- *\n*                     C  O  N  S  T  A  N  T  S                       *\n* ------------------------------------------------------------------- *\nSAVEAREA DS    9D                        Save Area\nLOGONX   DC    CL6'LOGON '\nMESSAGAP DC    C'THIS COMMAND NEEDS APF AUTHORIZATION ...'\nBLANKS   DC    CL16' '\n         LTORG\n         YREGS\n         END\n/*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,PASS)\n//         DD  DDNAME=SYSIN\n//SYSIN    DD  *\n ENTRY   RELOGON\n SETCODE AC(1)\n SETSSI  CB495731\n NAME    RELOGON(R)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SHOWRLG@": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Y\\x01\\x17\\x19\\x9f\\x01\\x17\\x19\\x9f\\t)\\x00\\x14\\x00\\x13\\x00\\x00\\xe2\\xc1\\xd4\\xd7\\xd3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2017-07-18T00:00:00", "modifydate": "2017-07-18T09:29:59", "lines": 20, "newlines": 19, "modlines": 0, "user": "SAMPLE"}, "text": "                        TSO RELOGON BUFFER\n                        --- ------- ------\nRelogon Buffer Address:  00007EF8\n001A  0000    Header                                                   Dec\nLOGON SBGOLOB/PASSWORD                                                 +0\nD3D6C7D6D540E2C2C7D6D3D6C261D7C1E2E2E6D6D9C440404040404040404040404040\n                                                                       +35\n4040404040404040404040404040404040404040404040404040404040404040404040\n                                                                       +70\n4040404040404040404040404040404040404040404040404040404040404040404040\n                                                                       +105\n4040404040404040404040404040404040404040404040404040404040404040404040\n                                                                       +140\n4040404040404040404040404040404040404040404040404040404040404040404040\n                                                                       +175\n4040404040404040404040404040404040404040404040404040404040404040404040\n                                                                       +210\n4040404040404040404040404040404040404040404040404040404040404040404040\n                                                                       +245\n40404040404040         ECT Addr:   0000BB88       ECTLOGF is OFF\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SHOWRLGB": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01-\\x00U\\x01\\x17\\x18O\\x01\\x17\\x19\\x9f#I\\x027\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.45", "flags": 0, "createdate": "2017-07-03T00:00:00", "modifydate": "2017-07-18T23:49:55", "lines": 567, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.B.ASM\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//SYSIN    DD *\n    TITLE 'SHOWRLGB - DISPLAY INFORMATION ABOUT THE TSO RELOGON BUFFER'\n* ------------------------------------------------------------------- *\n*      SHOWRLGB -  Display the entire RELOGON BUFFER                  *\n*                                                                     *\n*   Author:   Sam Golob                                               *\n*                                                                     *\n*   Not re-entrant.     Output uses PUTLINE interface.                *\n*                                                                     *\n* ------------------------------------------------------------------- *\n* ------------------------------------------------------------------- *\n         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n* ------------------------------------------------------------------- *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R9,SAV9HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R9,HEX\n         L     R9,SAV9HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSHOWRLGB CSECT\nSHOWRLGB RMODE 24\nSHOWRLGB AMODE 24\n         USING *,R15\n         B     STARTPG                   Eyecatcher\n         DC    CL11'SHOWRLGB - '\n         DC    C'&SYSDATE'\n         DC    C', '\n         DC    C'&SYSTIME'\nSTARTPG  DS    0H\n         DROP  R15\n         USING SHOWRLGB,R12\n         STM   R14,R12,12(R13)           Save regs\n         LR    R12,R15                   Load base\n         LR    R14,R13                   Caller save area\n         LA    R13,SAVEAREA              Save area address\n         ST    R14,SAVEAREA+4            Store old save\n         ST    R13,8(,R13)               Store new save\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         L     R7,8(,R1)                 PSCB from CPPL\n         L     R7,X'30'(,R7)             RLGB from PSCB\n         ST    R7,RLGBADDR               Store address for display\n         L     R8,X'100'(,R7)            ECT address from RLGB\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   We have the RELOGON BUFFER, now print it out....              *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVI   OUTAREA-1,X'40'           Display title of program\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA+24(18),=C'TSO RELOGON BUFFER'\n         APUT  OUTAREA,60\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA+24(18),=C'--- ------- ------'\n         APUT  OUTAREA,60\n         MVC   OUTAREA(80),OUTAREA-1     Display buffer address\n         MVC   OUTAREA(25),=C'Relogon Buffer Address:  '\n         HEX   OUTAREA+25,4,RLGBADDR\n         APUT  OUTAREA,60\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*           Copy the RELOGON BUFFER into our program              *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVC   RLGBAREA(4),0(R7)         Copy the buffer header.\n         MVI   RLGBAREA+4,X'40'          Clear our data area.     .\n         MVC   RLGBAREA+5(251),RLGBAREA+4\n         MVC   RLGBAREA+4(252),4(R7)     Copy the buffer contents.\n         MVC   RLGBAREA+256(4),256(R7)   Copy the ECT address.\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*     Show the RELOGON BUFFER header first.                       *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVI   OUTAREA-1,X'40'           Buffer header information\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,2,RLGBAREA        Length of command\n         HEX   OUTAREA+6,2,RLGBAREA+2    Offset (always zeros)\n         MVC   OUTAREA+14(6),=C'Header'\n         MVC   OUTAREA+71(3),=C'Dec'\n         APUT  OUTAREA,80\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*   Display the RELOGON BUFFER contents 35 characters at a time   *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+4    Character representation\n         MVC   OUTAREA+71(2),=C'+0'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+4     HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+39   Character representation\n         MVC   OUTAREA+71(3),=C'+35'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+39    HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+74   Character representation\n         MVC   OUTAREA+71(3),=C'+70'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+74    HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+109  Character representation\n         MVC   OUTAREA+71(4),=C'+105'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+109   HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+144  Character representation\n         MVC   OUTAREA+71(4),=C'+140'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+144   HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+179  Character representation\n         MVC   OUTAREA+71(4),=C'+175'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+179   HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(35),RLGBAREA+214  Character representation\n         MVC   OUTAREA+71(4),=C'+210'\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,35,RLGBAREA+214   HEX representation\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         MVC   OUTAREA(7),RLGBAREA+249   Character representation\n         MVC   OUTAREA+71(4),=C'+245'    Last Line - 7 chars\n         APUT  OUTAREA,80\n         MVI   OUTAREA-1,X'40'\n         MVC   OUTAREA(80),OUTAREA-1\n         HEX   OUTAREA,7,RLGBAREA+249    HEX representation\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*     Show the ECT address at the end of the RELOGON BUFFER,      *\n*      And display whether the RELOGON switch is ON or OFF.       *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         MVC   OUTAREA+23(9),=C'ECT Addr:'\n         HEX   OUTAREA+35,4,RLGBAREA+256\n         MVC   OUTAREA+50(11),=C'ECTLOGF is '\n         TM    X'1C'(R8),X'10'           Is ECTLOGF set?\n         BO    ISON                      Yes. Show ON.\n         MVC   OUTAREA+61(3),OFF         No.  Show OFF.\n         B     PRINTIT\nISON     MVC   OUTAREA+61(3),ON          Show ON.\nPRINTIT  DS    0H                        Last Line - 7 chars\n*                                        plus ECT address\n*                                        plus ECTLOGF switch status\n         APUT  OUTAREA,80\n         SR    R15,R15                   RC = 0\nRELEXIT  DS    0H                        Leave the program.\n         L     R13,SAVEAREA+4            Old save area\n         LM    R0,R12,20(R13)            Restore regs\n         L     R14,12(,R13)\n         BR    R14                       Exit\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                    Display HEX values\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R9                    Return to caller\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*                          CONSTANTS                              *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nSAVEAREA DS    9D                    Save Area\nHEXSAVE  DS    3F                    Save for HEX routine\nSAV9HEX  DS    F                     Protection for BAL register\nRLGBAREA DC    260C' '               Copy of entire RELOGON BUFFER\nON       DC    CL3'ON '\nOFF      DC    CL3'OFF'\nRLGBADDR DS    F                     Relogon Buffer address\n         DS    X\nOUTAREA  DS    80C                   Printout area\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         YREGS\n         LTORG\n         END\nEPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUEMNTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n/*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,PASS)\n//         DD  DDNAME=SYSIN\n//SYSIN    DD  *\n ENTRY   SHOWRLGB\n SETCODE AC(1)\n SETSSI  CB495958\n NAME    SHOWRLGB(R)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSOB": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x992/\\x00\\x992/\\x16'\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd4\\xe9\\xc5\\xd3\\xc4\\xc5\\xd5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-11-18T00:00:00", "modifydate": "1999-11-18T16:27:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "MZELDEN"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/* TRACE ?I */\narg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"BROWSE DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOE": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x992/\\x00\\x992/\\x16'\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd4\\xe9\\xc5\\xd3\\xc4\\xc5\\xd5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-11-18T00:00:00", "modifydate": "1999-11-18T16:27:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "MZELDEN"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/* TRACE ?I */\narg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"EDIT   DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOR": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x11\\x7f\\x01\\x07\\x11\\x7f\\x11\\x00\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd4\\xe9\\xc5\\xd3\\xc4\\xc5\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-04-27T00:00:00", "modifydate": "2007-04-27T11:00:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "MZELDEN"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/**************************************************/\n/* NOTE:  Use of this EXEC requires the REVIEW    */\n/*        command from CBT file 134 or 135.       */\n/**************************************************/\n/* REVIEW command output.  This has an advantage  */\n/* over TSOE/TSOB/TSOV in that it works under     */\n/* native TSO (TSO READY) without ISPF.           */\n/**************************************************/\n/* TRACE ?I */\narg TSOCMD\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(SYSALLDA) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress TSO     \"REVIEW       \"||ddnm||\"    FILE\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOV": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x11\\x7f\\x01\\x07\\x11\\x7f\\x11\\x00\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd4\\xe9\\xc5\\xd3\\xc4\\xc5\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-04-27T00:00:00", "modifydate": "2007-04-27T11:00:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "MZELDEN"}, "text": "/* REXX */\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*                           */\n/****************************************************/\n/* There is really no advantage to using TSOV over  */\n/* TSOE since a temporary data set is used, but     */\n/* to complete the TSO* set of EXECs - here it is.  */\n/****************************************************/\n/* TRACE ?I */\narg TSOCMD\naddress ISPEXEC \"CONTROL ERRORS RETURN\"\naddress TSO\nddnm = 'DD'||random(1,99999)    /* choose random ddname  */\njunk = msg(off)\n\"ALLOC FILE(\"||ddnm||\") UNIT(VIO) NEW TRACKS SPACE(9,9) DELETE\",\n\" REUSE LRECL(172) RECFM(F B) BLKSIZE(8944)\"\njunk = msg(on)\n/*                                    */\n/*  issue tso commnd and trap output  */\n/*                                    */\njunk=outtrap(LINE.)\nTSOCMD\njunk=outtrap('off')\n/*                                    */\n\"EXECIO\" line.0  \"DISKW\" ddnm \"(STEM LINE. FINIS\"\naddress ISPEXEC \"LMINIT DATAID(TEMP) DDNAME(\"||ddnm||\")\"\naddress ISPEXEC \"VIEW   DATAID(\"||temp\")\"\naddress ISPEXEC \"LMFREE DATAID(\"||temp\")\"\njunk = msg(off)\n\"FREE FI(\"||ddnm||\")\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "YESLOGOF": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x03\\x01\\x17\\x18O\\x01\\x17 \\x0f\\x12\\x08\\x00B\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2017-07-03T00:00:00", "modifydate": "2017-07-19T12:08:03", "lines": 66, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.CBT495.FILE958\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//SYSIN    DD *\n    TITLE 'YESLOGOF - SET THE ECTLOGF BIT TO LOGOFF'\n* ------------------------------------------------------------------- *\n*      YESLOGOF -  RESET THE ECTLOGF BIT TO LOGOFF                    *\n*                                                                     *\n*   Author:   Sam Golob                                               *\n*                                                                     *\n*   Not re-entrant.                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nYESLOGOF CSECT\nYESLOGOF RMODE 24\nYESLOGOF AMODE 24\n         USING *,R15\n         B     STARTPG                   Eyecatcher\n         DC    CL10'YESLOGOF - '\n         DC    C'&SYSDATE'\n         DC    C', '\n         DC    C'&SYSTIME'\nSTARTPG  DS    0H\n         DROP  R15\n         USING YESLOGOF,R12\n         STM   R14,R12,12(R13)                Save regs\n         LR    R12,R15                   Load base\n         LR    R14,R13                   Caller save area\n         LA    R13,SAVEAREA              Save area address\n         ST    R14,SAVEAREA+4            Store old save\n         ST    R13,8(,R13)               Store new save\n         L     R7,12(,R1)                ECT from CPPL\n         OI    28(R7),X'10'              Turn on LOGOFF bit X'10'\n         SR    R15,R15                   RC = 0\nRELEXIT  DS    0H\n         L     R13,SAVEAREA+4            Old save area\n         LM    R0,R12,20(R13)            Restore regs\n         L     R14,12(,R13)\n         BR    R14                       Exit\nSAVEAREA DS    9D                        Save Area\n         YREGS\n         END\n/*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,PASS)\n//         DD  DDNAME=SYSIN\n//SYSIN    DD  *\n ENTRY   YESLOGOF\n SETCODE AC(1)\n SETSSI  CB495958\n NAME    YESLOGOF(R)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT958/FILE958.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT958", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}