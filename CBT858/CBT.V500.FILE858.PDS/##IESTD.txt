.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
         ##IESTD &RC,                 RETURN CODE KEYWORD              $
               &R0,                   R0                               $
               &R1                    R1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##IESTD
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##IESTD
.*
.*  PURPOSE    DEFAULT EPILOG MACRO FOR INLINE BLOCKS.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   12/29/86 MGG - BROKEN APART FROM ENDBLK AND RESTRUCTURED
.*              8/07/05 MGG - CHANGED AMODE SETTING TO BE COMPATABLE@C2
.*                            WITH NOCODEBASE OPTION.               @C2
.*
.*--------------------------------------------------------------------*
         GBLC  &#BAMODE(20)             ADDRESSING MODE OF BLOCK
         GBLA  &#BLVL                   BLOCK LEVEL
         GBLA  &#BNDX(20)               BLOCK TAG INDEXS
         GBLC  &#PBSMWA                 TAG OF SMWA
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         LCLC  &TAG,&TAG2               WORK TAGS
.*--------------------------------------------------------------------*
.*  ISSUE MESSAGE FOR IGNORED KEYWORDS.
.*--------------------------------------------------------------------*
         ##IGMSG &R0,R0
         ##IGMSG &R1,R1
.*--------------------------------------------------------------------*
.*  IF OPTIONS XA AND AMODE IS DIFFERENT THAN ENCLOSING BLOCK'S
.*  AMODE, GENERATE CODE TO SET AMODE TO ENCLOSING BLOCK'S AMODE
.*--------------------------------------------------------------------*
         AIF   (NOT &#PBXA).PRC0800
         AIF   ('&#BAMODE(&#BLVL)' EQ '&#BAMODE(&#BLVL-1)').PRC0800
.*--------------------------------------------------------------------*
.*  IF OPTIONS XA AND 370, GENERATE TEST FOR XA
.*--------------------------------------------------------------------*
         AIF   ('&RC' NE '(R15)' AND '&RC' NE '').PRC0190
         ##SWREG R15                    SAVE WORK REGISTER
.PRC0190 ANOP
&TAG     SETC  '#BV&#BNDX(&#BLVL)'
         AIF   (NOT &#PB370).PRC0200
         L     R15,16                   POINT R15 TO CVT
         TM    X'74'(R15),X'80'         RUNNING UNDER XA?
         BZ    &TAG                     SKIP AMODE SETTING
.*--------------------------------------------------------------------*
.*  GENERATE CHANGE CODE
.*--------------------------------------------------------------------*
.PRC0200 ANOP
         AIF   ('&#BAMODE(&#BLVL-1)' NE '31').PRC0210
         L     R15,=A(&TAG+X'80000000') LOAD ADDR OF INST AFTER BSM @C2
         AGO   .PRC0240                                             @C2
.PRC0210 L     R15,=A(&TAG)             LOAD ADDR OF INST AFTER BSM @C2
.PRC0220 AIF   ('&#BAMODE(&#BLVL-1)' NE 'ANY').PRC0240
         AIF   ('&#PBSMWA' NE '').PRC0230
         MNOTE 8,'SMWA= keyword needs to be specified on program block $
               macro'
         AGO   .PRC0240
.PRC0230 O     R15,&#PBSMWA+4           SET HIGH BIT TO AMODE AT ENTRY
.PRC0240 BSM   0,R15                    SET NEW MODE
         AIF   ('&RC' NE '(R15)' AND '&RC' NE '').PRC0810
&TAG     ##RST R15=YES                  RESTORE REGISTERS
         ##RWREG R15                    RESTORE WORK REGISTER
         AGO   .PRC0900
.PRC0800 AIF   ('&RC' NE '(R15)' AND '&RC' NE '').PRC0810
&TAG     ##RST R15=NO                   RESTORE REGISTERS
         AGO   .PRC0900
.PRC0810 AIF   ('&RC'(1,1) NE '(').PRC0820
&TAG     LR    R15,&RC(1)               LOAD RETURN CODE
         ##RST R15=NO                   RESTORE REGISTERS
         AGO   .PRC0900
.PRC0820 ANOP
&TAG     ##RST R15=YES                  RESTORE REGISTERS
         AIF   ('&RC' NE '0').PRC0830
         SLR   R15,R15                  SET RETURN CODE TO ZERO
         AGO   .PRC0900
.PRC0830 LA    R15,&RC                  LOAD RETURN CODE
.PRC0900 ANOP
.*--------------------------------------------------------------------*
.*  DECREMENT BLOCK LEVEL AND CHECK FOR IGNORED KEYWORDS
.*--------------------------------------------------------------------*
         MEND
