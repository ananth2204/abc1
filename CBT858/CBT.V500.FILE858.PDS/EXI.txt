.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
         EXI   &REG,                    REGISTER FOR EXECUTE.          +
               &INSTR,                  INSTRUCTION TO EXECUTE.        +
               &GEN=LOCTR               GENERATE WITH LOCTR (Â¬INLINE)
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1985.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      EXI
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - EXI
.*
.*  PURPOSE    MACRO TO GENERATE AN EX INSTRUCTION AND INSTRUCTION
.*             THAT EX REFERS TO (EXECUTE IMMEDIATE).
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY    1/31/85 PLH - NEW
.*              8/05/05 MGG - CHANGED TO USE ##SD MACRO.
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   LAST TAG INDEX USED
         GBLA  &#PB#C                   NUMBER OF CURRENT PROGRAM BLOCK
         GBLB  &#PBLOCR                 PROGRAM BLOCK LOCTR OPTION
         GBLC  &#BTYPE(20)              BLOCK TYPE.
         LCLA  &NDX                     TAG INDEX FOR THIS MACRO
&#MNDX   SETA  &#MNDX+1                 CALCULATE NEW TAG INDEX.
&NDX     SETA  &#MNDX                   SET INDEX TO USE IN THIS MACRO.
         LCLC  &TAG1,&TAG2,&OPC
&TAG1    SETC  '#EX#&NDX'               GENERATE TAGS FOR TARGET OF EX
&OPC     SETC  '&INSTR(1)'              EXTRACT OPCODE.
         LCLC  &OPS                     WILL BUILD OPERAND STRING HERE.
         AIF   (N'&INSTR LE 1).X100     DETERMINE NUMBER OF OPERANDS,
&OPS     SETC  '&INSTR(2)'                  AND BUILD
         AIF   (N'&INSTR LE 2).X100             OPERAND
&OPS     SETC  '&OPS,&INSTR(3)'                   STRING.
         AIF   (N'&INSTR LE 3).X100
&OPS     SETC  '&OPS,&INSTR(4)'
.X100    ANOP
         EX    &REG,&TAG1               GENERATED EX INSTRUCTION.
         AIF   (NOT &#PBLOCR).X300      CHECK FOR INLINE OR LOCTR.
         ##SD  TYPE=PARTIAL
&TAG1    &OPC  &OPS
         ##ENDSD
         AGO   .MEND
.X300    ANOP                           IF GENERATING INLINE,
&TAG2    SETC  '#EXEND#&NDX'            BRANCH POINT FOR SKIP.
         B     &TAG                     BRANCH OVER EX'ED INSTR.
&TAG1    &OPC  &OPS
&TAG2    DS    0H                       BRANCH HERE TO SKIP INSTR.
.MEND    MEND
