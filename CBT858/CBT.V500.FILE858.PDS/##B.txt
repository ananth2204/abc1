.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
&NAME    ##B    &COND,&P1,&P2,&P3,&LONG=,&BREG=
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 2005.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##B
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##B
.*
.*  PURPOSE    INTERNAL MACRO USED TO GENERATE BRANCHES BASED ON
.*             ARCH LEVEL AND LONG= KEYWORD.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY    8/02/05 MGG - NEW
.*
.*--------------------------------------------------------------------*
         GBLA  &SYSALVL                 ARCH LEVEL (SYSSTATE MACRO)
         GBLB  &#PB370
         GBLB  &#PBXA
         GBLB  &#PBLONG                 LONG PROGRAM OPTION
         LCLB  &WLONG
         LCLB  &JAVAIL
         LCLB  &JLAVAIL
         LCLC  &WCOND
         AIF   ('&LONG' EQ '').LONGIFY
         AIF   ('&LONG' EQ 'NO').LONGIFY
         AIF   ('&LONG' EQ 'YES').LONGOIFY
         AIF   ('&LONG' EQ 'PBLONG').LONGS1
         AIF   ('&LONG' EQ 'PBLONGSLGT0').LONGS2
         MNOTE 8,'LONG=&LONG IS NOT VALID.'
         AGO   .LONGSP
.* LONG='PBLONG' USES PBLONG FOR LONG.
.LONGS1  ANOP
&WLONG   SETB  (&#PBLONG)
         AGO   .LONGSET
.* LONG='PBLONGSLGT0' USES PBLONG FOR LONG IF &SYSLVL>0 OTHERWISE NO.
.LONGS2  AIF   (&SYSALVL LE 0).LONGIFY
&WLONG   SETB  (&#PBLONG)
         AGO   .LONGSET
.*
.LONGIFY ANOP
&WLONG   SETB  ('&LONG' EQ 'YES')
.LONGSET ANOP
.*
&JAVAIL  SETB  (&SYSALVL GE 1)
&JLAVAIL SETB  (&SYSALVL GE 2)
&WCOND   SETC  '&COND'
         AIF   (N'&SYSLIST NE 2).CHK3
         AIF   ('&WCOND' EQ '').U
         AIF   ('&WCOND' EQ 'U').U
         AIF   ('&WCOND' EQ 'H').XM
         AIF   ('&WCOND' EQ 'L').XM
         AIF   ('&WCOND' EQ 'E').XM
         AIF   ('&WCOND' EQ 'NH').XM
         AIF   ('&WCOND' EQ 'NL').XM
         AIF   ('&WCOND' EQ 'NE').XM
         AIF   ('&WCOND' EQ 'P').XM
         AIF   ('&WCOND' EQ 'M').XM
         AIF   ('&WCOND' EQ 'Z').XM
         AIF   ('&WCOND' EQ 'O').XM
         AIF   ('&WCOND' EQ 'NP').XM
         AIF   ('&WCOND' EQ 'NM').XM
         AIF   ('&WCOND' EQ 'NZ').XM
         AIF   ('&WCOND' EQ 'NO').XM
         AIF   ('&WCOND' EQ 'NOP').NOP
         AGO   .ERRNPRM
.CHK3    AIF   (N'&SYSLIST NE 3).CHK4
         AIF   ('&WCOND' EQ 'C').C
         AIF   ('&WCOND' EQ 'AS').AS
         AIF   ('&WCOND' EQ 'ASR').ASR
         AIF   ('&WCOND' EQ 'CT').CT
         AGO   .ERRNPRM
.CHK4    AIF   (N'&SYSLIST NE 4).ERRNPRM
         AIF   ('&WCOND' EQ 'XH').XHLE
         AIF   ('&WCOND' EQ 'XLE').XHLE
         AGO   .ERRNPRM
.*
.* UNCONDITIONAL.
.*
.U       AIF   (&JAVAIL).J
         AIF   (&WLONG).BR
&WOP     SETC  'B'
         AGO   .OP1
.J       AIF   (&WLONG).JL
&WOP     SETC  'J'
         AGO   .OP1
.JL      AIF   (NOT &JLAVAIL).BR
&WOP     SETC  'JLU'
         AGO   .OP1
.BR      ANOP
&WOP     SETC  'BR'
         AGO   .OP1R
.*
.* MOST EXTENDED MNEMONICS.
.*
.XM      AIF   (&JAVAIL).XMJ
         AIF   (&WLONG).XMR
&WOP     SETC  'B&WCOND'
         AGO   .OP1
.XMJ     AIF   (&WLONG).XMJL
&WOP     SETC  'J&WCOND'
         AGO   .OP1
.XMJL    AIF   (NOT &JLAVAIL).XMR
&WOP     SETC  'JL&WCOND'
         AGO   .OP1
.XMR     ANOP
&WOP     SETC  'B&COND.R'
         AGO   .OP1R
.*
.* NOP
.*
.NOP     AIF   (&JAVAIL).JNOP
&WOP     SETC  'NOP'
         AGO   .OP1
.JNOP    ANOP
&WOP     SETC  'JNOP'
         AGO   .OP1
.*
.* BRANCH/JUMP ON CONDITION.
.*
.C       AIF   (&JAVAIL).BRC
         AIF   (&WLONG).BCR
&WOP     SETC  'BC'
         AGO   .OP2
.BRC     AIF   (&WLONG).BRCL
&WOP     SETC  'BRC'
         AGO   .OP2
.BRCL    AIF   (NOT &JLAVAIL).BCR
&WOP     SETC  'BRCL'
         AGO   .OP2
.BCR     ANOP
&WOP     SETC  'BCR'
         AGO   .OP2R
.*
.* BRANCH/JUMP AND SAVE.
.*
.AS      AIF   (&JAVAIL).JAS
&WOP     SETC  'BAS'
         AGO   .OP2
.JAS     AIF   (&WLONG).ASL
&WOP     SETC  'JAS'
         AGO   .OP2
.ASL     AIF   (&JLAVAIL).JASL
         AIF   (NOT &#PB370 AND &#PBXA).BASRL
&WOP     SETC  'BALR'
         AGO   .OP2R
.BASRL   ANOP
&WOP     SETC  'BASR'
         AGO   .OP2R
.JASL    ANOP
&WOP     SETC  'JASL'
         AGO   .OP2
.*
.* BRANCH AND SAVE REGISTER.  ISSUES BALR IF INDICATED BY
.* PROGRAM BLOCK XA AND 370 OPTIONS.
.*
.ASR     AIF   (NOT &#PB370).BASR
&WOP     SETC  'BALR'
         AGO   .OP2
.BASR    ANOP
&WOP     SETC  'BASR'
         AGO   .OP2
.*
.* NOTE: LONG IS IGNORED ON THE REMAINING BRANCHES UNLESS IT IS
.*       SUPPORTED BASED ON ARCH LEVEL.
.*
.* BRANCH/JUMP ON COUNT
.*
.CT      AIF   (&JAVAIL).JCT
&WOP     SETC  'BCT'
         AGO   .OP2
.JCT     AIF   (&WLONG AND &JLAVAIL).JCTG
&WOP     SETC  'JCT'
         AGO   .OP2
.JCTG    ANOP
&WOP     SETC  'JCTG'
         AGO   .OP2
.*
.* BRANCH/JUMP XH/XLE
.*
.XHLE    AIF   (&JAVAIL).JXHLE
&WOP     SETC  'B&COND'
         AGO   .OP3
.JXHLE   AIF   (&WLONG AND &JLAVAIL).JXHLEG
&WOP     SETC  'J&COND'
         AGO   .OP3
.JXHLEG  ANOP
&WOP     SETC  'J&COND.G'
         AGO   .OP3
.*
.* GENERATE INSTRUCTIONS.
.*
.OP1     ANOP
&NAME    &WOP  &P1
         MEXIT
.OP1R    AIF   ('&BREG' EQ '').ERRBREG
&NAME    L     &BREG,=A(&P1)
         &WOP  &BREG
         MEXIT
.OP2     ANOP
&NAME    &WOP  &P1,&P2
         MEXIT
.OP2R    AIF   ('&BREG' EQ '').ERRBREG
&NAME    L     &BREG,=A(&P2)
         &WOP  &P1,&BREG
         MEXIT
.OP3     ANOP
&NAME    &WOP  &P1,&P2,&P3
         MEXIT
 *
.ERRNPRM MNOTE 8,'INVALID COND OR NUMBER OF POSITIONAL PARMS ON ##B &CO+
               ND.'
         MEXIT
.ERRBREG MNOTE 8,'BREG IS REQUIRE IF LONG=YES IS SPECIFIED AND ARCH LEV+
               EVEL IS LESS THAN 2.'
&NAME    EQU   *
         MEND
