.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
         CALLSUB &NAME,                 SUBROUTINE NAME             @C1$
               &P,                      PARAMETER LIST              @C1$
               &VL,                     VL                          @C1$
               &PL=                     PARAMETER LIST STORAGE      @C1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      CALLSUB
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - CALLSUB
.*
.*  PURPOSE    STRUCTURED MACRO USED TO CALL A SUBROUTINE BLOCK.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 - NEW  MGG
.*              6/27/85 - ADDED PARAMETER SUPPORT                   @C1
.*              7/15/85 MGG - ADDED DYNAMIC SUPPORT                 @C2
.*              2/18/86 MGG - ADDED LONG OPTION SUPPORT             @C3
.*              3/23/87 MGG - FIXED ERROR WHEN LONG OPTION IS USED  @C4
.*             08/02/05 MGG - Changed to use ##B macro for branching@C5
.*             08/09/05 MGG - Moved some code to ##DEFSUB and added @C6
.*                            TYPE=CALL on ##DEFSUB call.           @C6
.*
.*--------------------------------------------------------------------*
         GBLB  &#PBXA                   XA OPTION
         GBLB  &#PB370                  370 OPTION
         GBLB  &#CSSD(99)                ADCON ALREADY IN PSD       @C2
         GBLA  &#SB#D                    SUBROUTINE NUMBER CALLED   @C2
         GBLB  &#PBLONG                  LONG PROGRAM OPTION        @C3
         LCLC  &TAG                      LOCAL WORK TAG             @C2
         ##DEFSUB &NAME,TYPE=CALL                                   @C6
         PLIST &P,&VL,PL=&PL                                        @C1
         AIF   (NOT &#PBLONG).CSB0003   IF LONG OPTION              @C3
&TAG     SETC  '#SBAD&#SB#D'                                        @C3
         AIF   (&#CSSD(&#SB#D)).CSB0002 SKIP IF ADCON ALREADY DEFINEDC3
         PSD   TYPE=PARTIAL                                         @C3
&TAG     DC    A(&NAME)                 ADCON FOR SUBROUTINE BLOCK  @C3
         ENDPSD ,                                                   @C3
&#CSSD(&#SB#D) SETB  1                  INDICATE ADCON ALREADY DEFINED3
.CSB0002 L     R15,&TAG                 LOAD ADDRESS OF SUBROUTINE  @C3
.CSB0003 ANOP                                                       @C3
         AIF   (&#PBXA).CSB0010         IF XA OPTION OFF, USE BAL INST
         AIF   (&#PBLONG).CSB0005       IF LONG OPTION              @C3
         BAL   R14,&NAME                CALL SUBROUTINE
         AGO   .CSB0100                                             @C3
.CSB0005 BALR  R14,R15                  CALL SUBROUTINE             @C3
         AGO   .CSB0100                                             @C3
.CSB0010 AIF   (&#PB370).CSB0020        IF XA OPTION ON AND 370 OPTION
.*                                        OFF, USE BAS INST
         AIF   (&#PBLONG).CSB0015       IF LONG OPTION              @C3
         ##B AS,R14,&NAME               CALL SUBROUTINE             @C5
         AGO   .CSB0100                                             @C3
.CSB0015 BASR  R14,R15                  CALL SUBROUTINE             @C3
         AGO   .CSB0100                                             @C3
.CSB0020 ANOP                           IF XA AND 370 OPTION ON
         AIF   (&#PBLONG).CSB0025       IF LONG OPTION              @C3
         LA    R14,*+8               CALL SUBROUTINE WITH R14 VALID @C4
         ##B U,&NAME                      AS 31 BIT ADDRESS         @C5
         AGO   .CSB0100                                             @C3
.CSB0025 LA    R14,*+6               CALL SUBROUTINE WITH R14 VALID @C4
         BR    R15                        AS 31 BIT ADDRESS         @C4
         AGO   .CSB0100                                             @C3
.CSB0100 MEND
