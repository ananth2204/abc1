.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
&MACTAG  ##LDBS &NAME,&BREGS,&DEFREG,&FRSTLD=NO                     @C1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1986.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##LDBS
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##LDBS
.*
.*  PURPOSE    INTERNAL MACRO USED TO LOAD BASE REGISTERS.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY    2/14/86 - NEW  MGG
.*              8/06/05 - REWORKED AND ADDED SUPPORT FOR NOCODEBASE.@C1
.*
.*--------------------------------------------------------------------*
         GBLA  &SYSALVL                 ARCH LEVEL (SYSSTATE MACRO) @C1
         GBLA  &#MCVREG
         GBLA  &#MNDX                   MASTER TAG INDEX
         GBLB  &#PBXA                   XA PROGRAM OPTION
         GBLB  &#PB370                  370 PROGRAM OPTION
         GBLB  &#SBCDBS                 SUBROUTIME HAS BASE FOR CODE@C1
         GBLC  &SSD                     TAG FOR SSD.                @C1
         LCLA  &NDX                     LOCAL TAG INDEX
         LCLC  &REGS                    COMMA SEPERATED REGS.       @C1
         LCLC  &BASE1                   FIRST BASE.                 @C1
         LCLC  &REG                                                 @C1
         LCLC  &UNAME                   USING NAME.                 @C1
         LCLC  &TAG                     TAG FOR FIRST INSTRUCTION.  @C1
         LCLC  &TAG1,&TAG2              WORK TAGS.                  @C1
&#MNDX   SETA  &#MNDX+1                 INCREMENT MASTER TAG INDEX
&NDX     SETA  &#MNDX                   SET MACROS LOCAL TAG INDEX
&TAG     SETC  '&MACTAG'                SET FIRST TAG.              @C1
.*------------------------------------------------------------------@C1
.* SET &BASE1 TO FIRST BASE AND &UNAME TO &NAME.                    @C1
.*------------------------------------------------------------------@C1
&BASE1   SETC  '&DEFREG'                                            @C1
         AIF   ('&BREGS' EQ '').SFB0010                             @C1
&BASE1   SETC  '&BREGS(1)'                                          @C1
.SFB0010 ANOP                                                       @C1
&UNAME   SETC  '&NAME'                                              @C1
.*------------------------------------------------------------------@C1
.* IF FRSTLD=YES, LOAD FIRST BASE REGISTER.  BASE ON CODE OR SSD AS @C1
.* INDICATED BY SUBROUTINES CODEBASE OPTION.                        @C1
.*------------------------------------------------------------------@C1
         AIF   ('&FRSTLD' NE 'YES').FY9999                          @C1
         AIF   (NOT &#SBCDBS).FY2000                                @C1
         AIF   ('&NAME' EQ '*').FY1000                              @C1
&TAG     LR    &BASE1,R15               LOAD SUBROUTINE BASE REG.   @C1
         AGO   .FY3000                                              @C1
.FY1000  ANOP                                                       @C1
&TAG     ##B ASR,&BASE1,0               LOAD SUBROUTINE BASE REG.   @C1
         AGO   .FY3000                                              @C1
.FY2000  ANOP                                                       @C1
&TAG     ##LAL &BASE1,&SSD              LOAD SUBROUTINE BASE REG.   @C1
&UNAME   SETC  '&SSD'                   BASED ON SSD.               @C1
.FY3000  ANOP                                                       @C1
&TAG     SETC  ''                                                   @C1
*FIXME   ##MREG USE,&BASE1 MAY BE NEEDED HERE.  CHECK LATER.        @C1
.FY9999  ANOP                                                       @C1
.*------------------------------------------------------------------@C1
.* GENERATE USING.                                                  @C1
.*------------------------------------------------------------------@C1
.PRC1000 ANOP
&CTR     SETA  1
&REGS    SETC  '&BASE1'                                             @C1
         AGO   .PRC1110                                             @C1
.PRC1100 ##MREG USE,&BREGS(&CTR)
.PRC1110 AIF   (N'&BREGS LE &CTR).PRC1200
&REGS    SETC  '&REGS,&BREGS(&CTR+1)'                               @C1
&CTR     SETA  &CTR+1
         AGO   .PRC1100
.PRC1200 USING &UNAME,&REGS             ESTABLISH SUBROUTINE BASE   @C1
.*------------------------------------------------------------------@C1
.* GENERATE AMODE CODE IF APPROPRIATE IF NAME IS * AND FRSTLD=YES.  @C1
.*------------------------------------------------------------------@C1
         AIF   (NOT &#PB370 OR NOT &#PBXA OR '&NAME' NE '*').AMD9999 C1
         AIF   ('&FRSTLD' NE 'YES').AMD9999                         @C1
&TAG1    SETC  '##LDBS__Q&NDX'                                      @C1
&TAG2    SETC  '##LDBS__R&NDX'                                      @C1
&TAG1    ##SWREG R15                                                @C1
         L     R15,X'10'                POINT R15 TO CVT
         TM    X'74'(R15),X'80'         RUNNING ON XA?
         ##B Z,&TAG2                    NO, SKIP NEXT 3 INSTRUCTIONS@C1
         BASR  &BASE1,0                 LOAD FIRST BASE             @C1
         LA    R15,*-&TAG1              ADJUST TO SAME ADDR AS BALR @C1
         SLR   &BASE1,R15               INSTRUCTION PRODUCED        @C1
&TAG2    ##RWREG R15                                                @C1
.AMD9999 ANOP                                                       @C1
.*------------------------------------------------------------------@C1
.* LOAD EXTRA BASE REGISTERS.                                       @C1
.*------------------------------------------------------------------@C1
&CTR     SETA  1
&REG     SETC  '&BASE1'                                             @C1
         AGO   .LDB1900                                             @C1
.LDB1000 ANOP                                                       @C1
&CTR     SETA  &CTR+1                                               @C1
         AIF   (&SYSALVL LE 0).LDB1100                              @C1
         LR    &BREGS(&CTR),&REG                                    @C1
         ##AHI &BREGS(&CTR),4096                                    @C1
         AGO   .LDB1200                                             @C1
.LDB1100 ANOP                                                       @C1
         LA    &BREGS(&CTR),X'800'(,&REG)                           @C1
         LA    &BREGS(&CTR),X'800'(,&BREGS(&CTR))                   @C1
.LDB1200 ANOP                                                       @C1
&REG     SETC  '&BREGS(&CTR)'                                       @C1
.LDB1900 AIF   (N'&BREGS GT &CTR).LDB1000                           @C1
.*------------------------------------------------------------------@C1
         MEND
