.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
         ERREXIT &CODE=,&CODEREG=,&NAME=,&LONG=PBLONGSLGT0,&BREG=   @C2
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1983.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ERREXIT
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ERREXIT
.*
.*  PURPOSE    STRUCTURED MACRO USED TO INVOKE AND ERREXIT BLOCK.
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY   11/01/83 - NEW  MGG
.*             03/20/84 MGG -  ALLOW '   ERREXIT , '
.*              7/20/87 MGG -  REMOVED @CX, REORGANIZED AND ADDED
.*                             ERRADDR SUPPORT.
.*             10/18/89 MGG -  ERREXIT , FIX                        @C1
.*             08/02/05 MGG - Changed to use ##B macro for branching@C2
.*
.*--------------------------------------------------------------------*
         GBLA  &#MNDX                   MASTER TAG INDEX
         GBLA  &#PBNDX                  INDEX FOR PROGRAM BLOCK
         GBLB  &#PBERRA                 ERROR ADDRESS OPTION
         LCLC  &WNAME                   WORK NAME
         LCLC  &WREG                    WORK CODE REGISTER
         LCLC  &WBREG                   WORK BRANCH REGISTER        @C2
         LCLC  &FTAG                    ERREXIT FAIL TAG
         LCLC  &STAG                    ERREXIT SUCCESS TAG
         LCLA  &CTR                     WORK COUNTER
         LCLA  &NDX                     TAG INDEX FOR MACRO
.*--------------------------------------------------------------------*
.*  GET TAG INDEX, ERREXIT NAME AND CODE REGISTER INTO LOCAL VARIABLES.
.*--------------------------------------------------------------------*
&#MNDX   SETA  &#MNDX+1                 INCREMENT MASTER TAG INDEX
&NDX     SETA  &#MNDX                   GET TAG INDEX
&WREG    SETC  '&CODEREG'
         AIF   ('&CODEREG' NE '').PRC0010
&WREG    SETC  'R14'
.PRC0010 ANOP
&WNAME   SETC  '&NAME'                  SET WORK NAME
         AIF   ('&NAME' NE '').PRC0020  IF NAME NOT SPECIFIED
&WNAME   SETC  '#BX&#PBNDX'               USE DEFAULT NAME
.PRC0020 ANOP
.*--------------------------------------------------------------------*
.*  IF THE NOERRADDR PROGRAM OPTION IS IN EFFECT, PLACE AN OPTIONAL
.*  CODE IN THE CODE REGISTER AND BRANCH TO THE ERROR EXIT IF THE
.*  CONDITION IS SUCCESSFUL.
.*--------------------------------------------------------------------*
.PRC0100 AIF   (&#PBERRA).PRC1000
&WBREG   SETC  '&BREG'                                              @C2
         AIF   ('&CODE' EQ '').PRC0150                              @C2
         LA    &WREG,&CODE              LOAD CODE (DEFAULT CODEREG)
.PRC0150 AIF   ('&BREG' NE '').PRC0200                              @C2
&WBREG   SETC  'R2'                                                 @C2
.PRC0200 AIF   (N'&SYSLIST GT 2).PRC0300                            @C1
         AIF   ('&SYSLIST(1)' NE '' OR '&SYSLIST(2)' NE '').PRC0300 @C1
         ##B U,&WNAME,                  BRANCH TO ERREXIT           @C2+
               LONG=&LONG,BREG=&WBREG                               @C2
         MEXIT
.PRC0300 ANOP
&FTAG    SETC  '#LF&NDX'                FAIL TAG NAME
&CTR     SETA  N'&SYSLIST               GET NUMBER OF POSITIONAL PARMS
         ##COND &SYSLIST(1),&SYSLIST(2),                               $
               &SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),        $
               &SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYSLIST(10),       $
               &SYSLIST(11),&SYSLIST(12),&SYSLIST(13),&SYSLIST(14),    $
               &SYSLIST(15),&SYSLIST(16),&SYSLIST(17),&SYSLIST(18),    $
               &SYSLIST(19),&SYSLIST(20),&SYSLIST(21),&SYSLIST(22),    $
               &SYSLIST(23),&SYSLIST(24),&SYSLIST(25),&SYSLIST(26),    $
               &SYSLIST(27),&SYSLIST(28),&SYSLIST(29),&SYSLIST(30),    $
               &SYSLIST(31),&SYSLIST(32),&SYSLIST(33),                 $
               &SYSLIST(34),&SYSLIST(35),&SYSLIST(36),                 $
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),                 $
               &SYSLIST(40),&SYSLIST(41),&SYSLIST(42),                 $
               &SYSLIST(43),&SYSLIST(44),&SYSLIST(45),                 $
               &SYSLIST(46),&SYSLIST(47),&SYSLIST(48),                 $
               &SYSLIST(49),&SYSLIST(50),&SYSLIST(51),                 $
               F=&FTAG,S=&WNAME,E=&CTR,B=1,L=P,T=B,                 @C2$
               LONG=&LONG,BREG=&WBREG                               @C2
&FTAG    DS    0H                       LEAVE NOT EXECUTED TAG
         MEXIT
.PRC1000 ANOP
.*--------------------------------------------------------------------*
.*  IF THE ERRADDR PROGRAM OPTION IS IN EFFECT, USE A BAS INSTRUCTION
.*  TO CALL THE ERROR EXIT IF THE CONDITION IS SATISFIED.  IF A CODE
.*  IS SPECIFIED, GENERATE A DC FOR IT IMMEDIATELY AFTER THE BAS
.*  INSTRUCTION.
.*--------------------------------------------------------------------*
&FTAG    SETC  '#LF&NDX'                FAIL TAG NAME
&STAG    SETC  '#LS&NDX'                SUCCESS TAG NAME
&CTR     SETA  N'&SYSLIST               GET NUMBER OF POSITIONAL PARMS
         AIF   (N'&SYSLIST GT 2).PRC1020                            @C1
         AIF   ('&SYSLIST(1)' NE '' OR '&SYSLIST(2)' NE '').PRC1020 @C1
         AGO   .PRC1030                                             @C1
.PRC1020 ##COND &SYSLIST(1),&SYSLIST(2),                            @C1$
               &SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),        $
               &SYSLIST(7),&SYSLIST(8),&SYSLIST(9),&SYSLIST(10),       $
               &SYSLIST(11),&SYSLIST(12),&SYSLIST(13),&SYSLIST(14),    $
               &SYSLIST(15),&SYSLIST(16),&SYSLIST(17),&SYSLIST(18),    $
               &SYSLIST(19),&SYSLIST(20),&SYSLIST(21),&SYSLIST(22),    $
               &SYSLIST(23),&SYSLIST(24),&SYSLIST(25),&SYSLIST(26),    $
               &SYSLIST(27),&SYSLIST(28),&SYSLIST(29),&SYSLIST(30),    $
               &SYSLIST(31),&SYSLIST(32),&SYSLIST(33),                 $
               &SYSLIST(34),&SYSLIST(35),&SYSLIST(36),                 $
               &SYSLIST(37),&SYSLIST(38),&SYSLIST(39),                 $
               &SYSLIST(40),&SYSLIST(41),&SYSLIST(42),                 $
               &SYSLIST(43),&SYSLIST(44),&SYSLIST(45),                 $
               &SYSLIST(46),&SYSLIST(47),&SYSLIST(48),                 $
               &SYSLIST(49),&SYSLIST(50),&SYSLIST(51),                 $
               F=&FTAG,S=&STAG,E=&CTR,B=1,L=N,T=B
.PRC1030 ANOP                                                       @C2
&WBREG   SETC  '&BREG'                                              @C2
         AIF   ('&BREG' NE '').PRC1040                              @C2
&WBREG   SETC  '&WREG'                                              @C2
.PRC1040 ANOP                                                       @C2
&STAG    ##B AS,&WREG,&WNAME,           BRANCH TO ERREXIT           @C2+
               LONG=&LONG,BREG=&WBREG                               @C2
         AIF   ('&CODE' EQ '').PRC1050                              @C2
         DC    AL2(&CODE)               ERREXIT CODE
.PRC1050 ANOP                                                       @C2
&FTAG    DS    0H                       ERREXIT NOT TAKEN
         MEND
