.*--------------------------------------------------------------------*
.*  Copyright 2011 by Clemson University Research Foundation          *
.*                                                                    *
.*  Licensed under the Apache License, Version 2.0 (the "License");   *
.*  you may not use this file except in compliance with the License.  *
.*  You may obtain a copy of the License in this library as member    *
.*  $LICENSE, or from                                                 *
.*                                                                    *
.*      http://www.apache.org/licenses/LICENSE-2.0                    *
.*                                                                    *
.*  Unless required by applicable law or agreed to in writing,        *
.*  software distributed under the License is distributed on an "AS   *
.*  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either   *
.*  express or implied.  See the License for the specific language    *
.*  governing permissions and limitations under the License.          *
.*--------------------------------------------------------------------*
         MACRO
         ##DEFSUB &NAME,&TYPE=                                      @C1
.*--------------------------------------------------------------------*
.*
.*  (C) COPYRIGHT 1985.  CLEMSON UNIVERSITY COMPUTER CENTER.
.*
.*  MACRO      ##DEFSUB
.*
.*  TITLE      CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*             PROGRAMMING MACROS - ##DEFSUB
.*
.*  PURPOSE    INTERNAL MACRO USED MAINTAIN TABLE OF SUBROUTINE NAMES
.*
.*  NOTE       SEE THE FOLLOWING DOCUMENT FOR MORE INFORMATION ON
.*             THIS AND OTHER STRUCTURED PROGRAMMING MACROS:
.*
.*             . CLEMSON UNIVERSITY COMPUTER CENTER STRUCTURED
.*               PROGRAMMING MACROS USER'S GUIDE AND REFERENCE.
.*
.*  ACTIVITY    7/14/85 MGG - NEW
.*              8/09/05 MGG - Moved some code from CALLSUB to       @C1
.*                            make TYPE=CALL.  This was so code     @C1
.*                            would not have to be duplicated in    @C1
.*                            CALLCASE.                             @C1
.*
.*--------------------------------------------------------------------*
         GBLA  &#SB#C                   CURRENT SUBROUTINE NUMBER   @C1
         GBLA  &#SB#D                   SUBROUTINE NUMBER (RETURNED)
         GBLA  &#SB#M                   MAX SUBROUTINE NUMBER
         GBLA  &#SB#CPB                 (SUB #) OF CURRENT PROG BLK @C1
         GBLC  &#SBNM(99)               SUBROUTINE NAMES
         GBLA  &#CSFF(99)               FIRST FOR SUBROUTINE FROM   @C1
         GBLA  &#CSF(500)               CALLSUB FROM                @C1
         GBLA  &#CST(500)               CALLSUB TO                  @C1
         GBLA  &#CSFT#N                 CALLSUB FROM/TO NEXT NUMBER @C1
         LCLA  &CTR                     LOCAL WORK VARIABLE         @C1
&#SB#D   SETA  0
.LOOP    AIF   (&#SB#D GE &#SB#M).NOTFND
&#SB#D   SETA  &#SB#D+1
         AIF   ('&#SBNM(&#SB#D)' EQ '&NAME').FND
         AGO   .LOOP
.NOTFND  ANOP
&#SB#D   SETA  &#SB#D+1
&#SBNM(&#SB#D) SETC '&NAME'
&#SB#M   SETA  &#SB#D
.FND     AIF   ('&TYPE' NE 'CALL').MEND                             @C1
.*                                                                  @C1
.*  Store additional info if TYPE=CALL.                             @C1
.*                                                                  @C1
         AIF   (&#SB#D GT &#SB#CPB).X50                             @C1
         MNOTE 8,'Can not call program block or subroutine in previous +
               program block.'                                      @C1
.X50     ANOP                                                       @C1
&CTR     SETA  &#CSFF(&#SB#C)                                       @C1
         AIF   (&CTR NE 0).X100                                     @C1
&#CSFF(&#SB#C) SETA &#CSFT#N                                        @C1
         AGO   .X200                                                @C1
.X100    AIF   (&CTR GE &#CSFT#N).X200                              @C1
         AIF   (&#CSF(&CTR) NE &#SB#C).X200                         @C1
         AIF   (&#CST(&CTR) EQ &#SB#D).X300                         @C1
&CTR     SETA  &CTR+1                                               @C1
         AGO   .X100                                                @C1
.X200    ANOP                                                       @C1
&#CSF(&#CSFT#N) SETA &#SB#C                                         @C1
&#CST(&#CSFT#N) SETA &#SB#D                                         @C1
&#CSFT#N SETA  &#CSFT#N+1                                           @C1
.X300    ANOP                                                       @C1
.*                                                                  @C1
.MEND    MEND                                                       @C1
