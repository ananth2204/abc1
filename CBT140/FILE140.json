{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011329000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE140.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE140.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x0b'", "DS1TRBAL": "b'|\\x94'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x07\\x00\\x03\\x01\\x07\\x00\\x07\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$INDEX": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*\n* REFER: D061001.DIALOG.ARCDASD($$INDEX)\n* REF  : MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB 304-726-5140/5343\n* DOC  : MASTER INDEX TO THE \"DATA ARCHIVAL/RECOVERY SYSTEM\" COMPONENTS.\n*\n*      : PLEASE TAKE A MOMENT TO REVIEW THE FOLLOWING LIST OF MEMBERS\n*        AND THEIR RESPECTIVE DESCRIPTIONS SO AS TO GET A FEEL FOR THE\n*        MEMBERNAME NOMENCLATURE USED. FOR EXAMPLE, MEMBERS BEGINNING\n*        WITH 'P' INDICATE AN ISPF PANEL; 'C' PREFIX = CLIST; 'M' PREFIX\n*        = MESSAGES; AND 'S' PREFIX = SKELETONS. MINOR NAMING EXCEPTIONS\n*        ARE MEMBERS \"ISRUDLP\" AND \"UTILMENU\" (WHICH ARE PANELS).\n*\n*      : CONTINUE BY READING MEMBER $INSTALL.\n\n\nMEMBERNAME                 DESCRIPTION\n\n$$INDEX   APPLICATION MASTER INDEX (EQU *)\n$INSTALL  APPLICATION INSTALLATION OVERVIEW\n$MRMCBT   IEBCOPY TO CREATE TAPE CONTAINING ENTIRE ARCDASD UTILITY\n$OVRVIEW  SYSTEM FLOW/OVERVIEW\nN/A       MAKE APPROPRIATE MODS TO THE UTILITY SELECTION PANEL\nCRCALLOC  CLIST -USED BY \"LIST\" OPTION (CALLED BY CLIST CRCLIST)\nCRCDUMP   CLIST -USED BY \"DUMP\" OPTION\nCRCLIST   CLIST -USED BY \"LIST\" OPTION\nCRCRESQ   CLIST -USED BY \"RESTORE QUARTERLY\" OPTION\nCRCRESW   CLIST -USED BY \"RESTORE WEEKLY\"    OPTION\nISRUDLP   PANEL -MODIFIED VERSION OF VANILLA 3.4 PANEL\nMRC01     MESSAGES\nPRCMAIN   PANEL -APPLICATION'S PRIMARY MENU\nPRCMAINT  PANEL -APPLICATION'S PRIMARY MENU (TUTORIAL)\nPRCDUMP   PANEL -USED BY \"DUMP\" OPTION\nPRCDUMPT  PANEL -USED BY \"DUMP\" OPTION (TUTORIAL)\nPRCLISTT  PANEL -USED BY \"LIST\" OPTION (TUTORIAL)\nPRCLSTT2  PANEL -USED BY \"LIST\" OPTION (TUTORIAL)\nPRCOVERT  PANEL -USED BY \"T\"    OPTION (TUTORIAL)\nPRCRESQ   PANEL -USED BY \"RESTORE QUARTERLY\" OPTION\nPRCRESQT  PANEL -USED BY \"RESTORE QUARTERLY\" OPTION (TUTORIAL)\nPRCRESW   PANEL -USED BY \"RESTORE WEEKLY   \" OPTION\nPRCRESWT  PANEL -USED BY \"RESTORE WEEKLY   \" OPTION (TUTORIAL)\nSRCDUMP   SKEL  -USED BY \"DUMP             \" OPTION\nSRCRESQ   SKEL  -USED BY \"RESTORE QUARTERLY\" OPTION\nSRCRESW   SKEL  -USED BY \"RESTORE WEEKLY   \" OPTION\nTAPEMAP   PROGRAM SOURCE FOR \"TAPEMAP\" UTILITY (USED BY ARCDUMP JCL)\nUTILMENU  PANEL -USED TO INVOKE UTILITY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INSTALL": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*\n* REF: D061001.DIALOG.ARCDASD($INSTALL)\n* DOC: INSTALLATION GUIDELINES FOR THE \"DATA ARCHIVAL/RECOVERY SYSTEM\"\n*    : MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB 304-726-5140/5343\n*\n*    : THIS MEMBER CONTAINS INSTALLATION GUIDELINES.  ALL DIALOG\n*      COMPONENTS ARE CONTAINED IN THE PDS WHICH YOU ARE CURRENTLY\n*      ACCESSING.  TO STORE EACH COMPONENT IN IT'S PROPER PRODUCTION\n*      LIBRARY, SIMPLY REPLACE THE FIRST CHARACTER OF EACH MEMBER NAME\n*      WITH AN 'A' DURING COPY OPERATION. THIS WILL EFFECT A MEMBER NAME\n*      THAT IS PREFIXED 'ARC' FOR EACH MEMBER THAT IS \"FARMED OUT\" INTO\n*      IT'S APPROPRIATE PRODUCTION LIBRARY TYPE.  FOR EXAMPLE, MEMBER\n*      CRCLIST INDICATES, BY VIRTUE OF THE FIRST CHARACTER BEING \"C\"\n*      (AKA \"CLIST\"), THAT IT SHOULD BE STORED INTO A SYSPROC LIBRARY\n*      TYPE AS MEMBER NAME ARCLIST.  THIS TECHNIQUE IS USED SO AS TO\n*      ALLOW A CONSISTENT  3 CHARACTER \"APPLID\" (\"ARC\") ACROSS ALL\n*      ISPF/PDF LIBRARIES AS WELL AS ALLOWING THE STORAGE OF ALL\n*      APPLICATION COMPONENTS INTO ONE COMMON (NON-PRODUCTION) PDS.\n*      THIS TECHNIQUE PERMITS THE \"INSTANT\" INSTALL OF THE APPLICATION\n*      WITHOUT HAVING TO MAKE ANY CHANGES TO THE ACTUAL MEMBERS.  ALL\n*      VARIABLE POOL VARIABLE NAMES HAVE ALSO BEEN PREFIXED \"ARC\".  NOTE\n*      THAT TUTORIAL PANEL MEMBER NAMES ALWAYS END WITH CHAR \"T\".\n*\n*      NO HARD AND FAST TECHNIQUE EXISTS FOR MANAGING DISPARATE DIALOG\n*      COMPONENTS BUT THIS METHOD HAS SERVED ME WELL AND I'VE FOUND IT\n*      TO BE VERY USEFUL WHEN PROBLEMS ARISE AND IT'S TIME TO GO\n*      \"FISHIN\" FOR PARTS THAT HAVE BEEN LONG BEEN FORGOTTEN!\n*\n*\n*    : REVIEW PANEL MEMBERS SUFFIXED \"T\" (TUTORIALS) FOR A FUNCTIONAL\n*      OVERVIEW OF THIS APPLICATION.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$MRMCBT": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,20,99),'CREATE CBT TAPE',MSGCLASS=Q\n/*JOBPARM N=2\n//*\n//* REF: D061001.DIALOG.ARCDASD($MRMCBT)\n//* DOC: LOAD ABL'S ARCDASD UTILITY COMPONENTS TO TAPE FOR SHIPMENT\n//*      TO CBT (TO BE INCLUDED ON THE CBT MODS TAPE).\n//*\n//*    : INCLUDE MEMBER $OVRVIEW AS CBT \"FILE OVERVIEW\" PROSE\n//*\n//ARCDASD  EXEC  PGM=IEBCOPY,TIME=1439,REGION=1024K\n//SYSPRINT DD SYSOUT=*\n//O      DD DISP=(,KEEP),\n// UNIT=TAPES,LABEL=(1,NL),VOL=(,RETAIN,,SER=ABLCBT),\n// DCB=(RECFM=FB,LRECL=80,BLKSIZE=9040)\n//I      DD DISP=SHR,DSN=D061001.DIALOG.ARCDASD\n//SYSUT3  DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSUT4  DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSIN   DD *\n C I=I,O=O\n/*\n//TAPEMAP  EXEC PGM=TAPEMAP,PARM=CHECK\n//STEPLIB  DD  DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD  VOL=SER=ABLCBT,UNIT=TAPES,DISP=SHR,LABEL=(,BLP)\n//SYSPRINT DD  SYSOUT=*\n//SYSPRNT2 DD  SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$NOTES": {"ttr": 522, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* REF: D061001.DIALOG.ARCDASD($NOTES)   6/89\n* DOC: DOCUMENT THE ABL \"POOR MAN'S HSM\" DATA ARCHIVAL/RECOVERY SYSTEM\n\n_  SYSTEM FLOW\n\n   _ QUARTERLY ARCHIVAL TO TAPE OF ALL DSNS WITH REFDATE GT 365 DAYS\n\n    _ ARCHIVAL JOBSTREAM OUTPUT = ONLINE MEMBERS OF ABL.ARCDASD.REPORTS\n\n    _ MEMBERNAME REFLECTS DASD VOLSER AND ARCHIVE DATE (MONTH/YEAR).\n      FOR EXAMPLE, MEMBERNAME USR10689 WOULD CONTAIN A LIST OF ALL USER\n      DATASETS ARCHIVED FROM VOL=USER01 DURING THE JUNE '89 ARCHIVE RUN.\n\n    _ DSN=ABL.ARCDASD.REPORTS IS DUPED ONLINE QUARTERLY AS DATASETNAME\n      'ABL.ARCDASD.REPORTS.CLONE'.  'ABL.ARCDASD.REPORTS' MEMBERS THAT\n      ARE CREATED EACH QUARTER ARE THEN MANUALLY EDITED VIA SPF TO\n      REMOVE REFS TO \"DELETED\" MESSAGES. THESE MESSAGES ARE NOT NEEDED\n      BY THE ARCDASD SYSTEM'S \"LIST\" COMMAND AND THEIR DELETION AFFORDS\n      A SIGNIFICANT LIST COMMAND EXECUTION REDUCTION. THE HARDCOPY FOR\n      EACH QUARTER'S RUN IS THE DEFINITIVE ARCHIVAL INFORMATION, IF EVER\n      NEEDED.  DATASET 'ABL.ARCDASD.REPORTS.CLONE' IS IDENTICAL TO THE\n      HARDCOPY INFORMATION.  SHOULD DATASET 'ABL.ARCDASD.REPORTS' BECOME\n      UNUSABLE, \".CLONE MAY BE RENAMED WITH NO LOGICAL IMPACT ON THE\n      ARCDASD SYSTEM.\n\n   _ MODIFICATIONS TO THE SPF 3.4 (DATASET UTILITY) PAMEL WERE MADE TO\n     REFERENCE OPTION \"ARC\" IN THE ABL CUSTOM UTILITIES MENU.\n     UPON USER SELECTION OF THIS MENU (VIA =3.A.ARC), THE \"LIST\" COMMAND\n     WILL ALWAYS BE DEFAULTED, ALLOWING A LIST TO BE PRODUCED OF ALL\n     ARCHIVED DATASETS BELONGING TO THE USER. AFTER VIEWING THIS REPORT\n     A HARDCOPY OPTION IS PROVIDED. USERS DESIRING TO RECOVER ARCHIVED\n     DATASETS MUST PRINT, MARK, AND PRESENT THIS LIST TO DP. DP WILL\n     THEN USE THE \"ARC\" PANELS TO RESTORE THE ARCHIVED DSN(S) BY SIMPLY\n     FILLING IN A FEW PANEL FIELDS. THE USER IS AUTOMATICALLY NOTIFIED\n     WHEN THE DATASET(S) RESTORE JOB IS SUBMITTED BY DP.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$OVRVIEW": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*\n* REF: D061001.DIALOG.ARCDASD($OVRVIEW)\n* DOC: SYSTEM OVERVIEW OF THE \"DATA ARCHIVAL/RECOVERY SYSTEM\"\n*    : MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB 304-726-5140/5343\n*\n*    THE \"DATA ARCHIVAL/RECOVERY SYSTEM\" (\"DARS\") IS AN ISPF/PDF BASED\n*    DIALOG THAT PROVIDES AUTOMATED DASD MANAGEMENT. IT REQUIRES DF/DSS\n*    VERSION V2.3, TSO/E V1.3, AND ISPF/PDF V2.2. ESSENTIALLY, DARS IS\n*    A MENU-DRIVEN UTILITY THAT AUTOMATES THE ARCHIVING AND RECOVERY\n*    OF DASD DATA.  IT IS EASILY MODIFIABLE TO ACCOMODATE SPECIFIC\n*    SITE NEEDS.  IN IT'S PRESENT FORM, AN OPERATOR, ON A QUARTERLY\n*    SCHEDULE, MENU SELECTS A (DF/DSS) DUMP JOB SUBMITTAL THAT ARCHIVES\n*    ALL PUBLIC STORAGE DATASETS THAT HAVE BEEN UNREFERENCED IN THE PAST\n*    YEAR OR GREATER.  AN ONLINE RECORD OF ALL ARCHIVED DATA IS KEPT SO\n*    THAT A USER MAY INQUIRE OF THE STATUS OF ARCHIVED DATASETS AS WELL\n*    AS SUBMIT REQUESTS TO RECOVER ARCHIVED DATA.  PARTICULAR EFFORT WAS\n*    PUT FORTH IN WRITING THIS UTILITY SO AS TO ENSURE DATA REDUNDANCY\n*    FOR OBVIOUS CONTINGENCY PURPOSES.\n*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRCALLOC": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\n/* REFER: ABL.CMDPROC(ARCALLOC) 5/89    MARK DIEHL-HERCULES ABL\n/* DOC  : \"POOR MAN'S HSM\" CLIST TO ALLOCATE A USER REPORT DATASET.\n/*      : THIS CLIST IS CALLED BY CLIST ARCLIST (VIA MENU OPTION \"LIST\")\nCONTROL MAIN NOMSG NOLIST\nIF &DEBUG = DEBUG THEN +\n   CONTROL MAIN MSG LIST SYMLIST CONLIST PROMPT\nISPEXEC CONTROL ERRORS RETURN\nATTN +\n DO\n  WRITE TERMINATING PER YOUR REQUEST\n  EXIT CODE(0)\n END\n/* ALLOC A FILE THAT WILL CONTAIN A LIST OF ALL ARCHIVED DATASETS.   */\n/* DATASET WILL BE DISPLAYED TO THE USER IN SUBROUTINE \"USERVIEW\".   */\nDELETE ARCHIVED.DATASETS\nFREE DA(ARCHIVED.DATASETS)\nALLOC FI(REPORT) DA(ARCHIVED.DATASETS) NEW CATALOG TR +\n  SP(5,1) BLKSIZE(20000) LRECL(133) RECFM(V B) DSORG(PS)\nIF &LASTCC NE 0 THEN ISPEXEC SETMSG MSG(ARC017)\nELSE +\n DO\n /* PREPARE A REPORT TITLE\n OPENFILE REPORT OUTPUT\n SET REPORT =\n PUTFILE REPORT\n SET REPORT = &STR(--- ARCHIVED DATASETS FOR &SYSUID AS OF &SYSDATE ---)\n PUTFILE REPORT\n SET REPORT =\n PUTFILE REPORT\n  CLOSFILE REPORT\n END\nFREE DA(ARCHIVED.DATASETS)\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRCDUMP": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG(0)\n/* REF: ABL.CMDPROC(ARCDUMP)\n/* DOC: CLIST FOR SUBMITTING BATCH DF/DSS DASD ARCHIVE JOBSTREAM\n/*      THIS CLIST INVOKED VIA SPF 3.A.ARC.DUMP\nCONTROL MSG NOLIST\nIF &DEBUG = DEBUG THEN CONTROL MSG LIST SYMLIST CONLIST\nISPEXEC DISPLAY PANEL(ARCDUMP)\nIF &LASTCC EQ 8 THEN +\n DO\n  ISPEXEC SETMSG MSG(ARC011B)\n  EXIT CODE(0)\n END\nISPEXEC VGET (ZTEMPF ARCQTR ARCYEAR)\nIF &SYSDSN('ABL.ARCDASD.USERDATA.D0&ARCQTR&ARCYEAR..VUSER01')  +\n = &STR(VOLUME NOT ON SYSTEM) THEN +\n  DO\n   /* PROCEED NO FURTHER .... ALREADY HAVE A CATALOG ENTRY FOR THE\n   /* SPECIFIED QUARTER AND YEAR.  DON'T BOTHER SUBMITTING DUMP JOB.\n   ISPEXEC SETMSG MSG(ARC011F)\n   EXIT CODE(0)\n  END\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL ARCDUMP\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nISPEXEC SETMSG MSG(ARC011C)\nSE '#ABLUTIL: QUARTERLY USERDATA ARCHIVE (DUMP) SUBMITTED BY',CN(01)\n%OUTLIST\nEXIT CODE (0)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CRCLIST": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG ARCDASD(NO) RCODE(0)\n/*\n/* REFER: ABL.CMDPROC(ARCLIST) JUNE 1989\n/* DOC  : WRITTEN BY MARK DIEHL @ HERCULES/ALLEGANY BALLISTICS LAB (ABL)\n/* DOC  : \"POOR MAN'S HSM\" DIALOG: MAIN DRIVER CLIST\n/* DOC  : REFERENCE DIALOG.ARCDASD($DOC) FOR A SYSTEM OVERVIEW\n/*\nCONTROL MAIN NOMSG NOLIST\nIF &DEBUG = DEBUG THEN +\n   CONTROL MAIN MSG LIST SYMLIST CONLIST PROMPT\nISPEXEC CONTROL ERRORS RETURN\nATTN +\n  DO\n   WRITE TERMINATING PER YOUR REQUEST\n   EXIT CODE(0)\n  END\nERROR +\n  DO\n   SET &RCODE = &LASTCC\n   RETURN\n  END\n/* COMPUTE CPU TIME USED\nSET BCPU = &SUBSTR(1:&LENGTH(&SYSCPU)-3,&SYSCPU)\n/*********************************************************************/\n/*\n/* PRE-ALLOCATE REPORT DATASET VIA SEPERATE CLIST TO AVOID ENQ HASSLES\n/*\n/*\nIF &DEBUG = DEBUG THEN +\n   ARCALLOC DEBUG\n  ELSE +\n   ARCALLOC\n/* CHECK THAT CLIST \"ARCALLOC\" CREATED DSN=ARCHIVED.DATASETS\nIF &SYSDSN(ARCHIVED.DATASETS) NE OK THEN +\n DO\n  ISPEXEC SETMSG MSG(ARC017)\n  EXIT CODE(0)\n END\n/*********************************************************************/\n/*\n/* ALLOCATE THE REPORT DATASET (FOR USE BY PDF LIBRARY MGMNT. SERVICES)\n/*\nISPEXEC LMINIT DATAID(USERRPT) DATASET(ARCHIVED.DATASETS) ENQ(MOD)\n IF &RCODE GE 8 THEN +\n   DO\n     ISPEXEC SETMSG MSG(ARC019A)\n     SET &RCODE = 0\n     GOTO NOREPORT\n   END\nISPEXEC LMOPEN DATAID(&USERRPT) OPTION(OUTPUT)\n IF &RCODE GE 8 THEN +\n   DO\n     ISPEXEC SETMSG MSG(ARC019B)\n     SET &RCODE = 0\n     GOTO NOREPORT\n   END\n/*********************************************************************/\n/*\n/* ALLOCATE THE INPUT DATASET (FOR USE BY PDF LIBRARY MGMNT. SERVICES)\n/*\nISPEXEC LMINIT DATAID(ARCRPTS) DATASET('ABL.ARCDASD.REPORTS') ENQ(SHR)\n IF &RCODE GE 8 THEN +\n   DO\n     ISPEXEC SETMSG MSG(ARC019)\n     SET &RCODE = 0\n     GOTO NOREPORT\n   END\nISPEXEC LMOPEN DATAID(&ARCRPTS) OPTION(INPUT) +\n               LRECL(INLRECL) RECFM(INRECFM) ORG(INDSORG)\n IF &RCODE GE 8 THEN +\n   DO\n     ISPEXEC SETMSG MSG(ARC011A)\n     SET &RCODE = 0\n     GOTO NOREPORT\n   END\n/*\n/* READ EACH MEMBER FROM THE DF/DSS ARCHIVE REPORT PDS, EXTRACTING ONLY\n/* RECORDS CONTAINING &SYSUID.\n/*\nGETMEM: +\nISPEXEC LMMLIST DATAID(&ARCRPTS) OPTION(LIST) MEMBER(RPTMEMBR)\n IF &RCODE = 8 THEN +\n   DO\n    /* END OF MEMBER LIST. CLOSE FILE.\n    ISPEXEC LMMLIST DATAID(&ARCRPTS) OPTION(FREE)\n    ISPEXEC LMCLOSE DATAID(&ARCRPTS)\n    SET &RCODE = 0\n    GOTO USERVIEW\n   END\n IF &RCODE GT 10 THEN +\n   DO\n    /* BIG TROUBLE IN LMMLIST LAND! CAN'T CONTINUE\n    ISPEXEC SETMSG MSG(ARC011B)\n    SET &RCODE = 0\n    EXIT CODE(0)\n   END\n/*\n ISPEXEC LMMFIND DATAID(&ARCRPTS) MEMBER(&RPTMEMBR)\n /* READ A RECORD FROM CURRENT MEMBER\n GETREC: +\n ISPEXEC LMGET DATAID(&ARCRPTS) MODE(INVAR) DATALOC(RPTTEXT) +\n  DATALEN(DATALEN) MAXLEN(&INLRECL)\n   IF &RCODE = 8 THEN +\n       DO\n         /* END-OF-MEMBER INPUT CC = 8\n         /* ISPEXEC LMCLOSE DATAID(&ARCRPTS)\n         SET &RCODE = 0\n         GOTO GETMEM\n       END\n   IF &RCODE GT 8 THEN +\n       DO\n         ISPEXEC SETMSG MSG(ARC018)\n         ISPEXEC LMCLOSE DATAID(&ARCRPTS)\n         SET &RCODE = 0\n         GOTO NOREPORT\n       END\n IF &SYSINDEX(&STR(&SYSUID),&STR(&RPTTEXT)) \u00ac= 0 THEN +\n  DO\n   SET &ARCDASD= YES   /* INDICATE THAT AT LEAST ONE DS HAS BEEN ARC'D\n   /* FIND COLUMN NUMBER WHERE USERID BEGINS\n   SET &DSNBEGIN = &SYSINDEX(&STR(&SYSUID),&STR(&RPTTEXT))\n   /* ALLOW FOR VARIABLE LENGTH DATASET NAMES, ELSE CLIST ERROR 932'S!\n   IF &LENGTH(&STR(&RPTTEXT)) LT &EVAL(&DSNBEGIN + 44) THEN +\n     DO\n      SET &RECLEN = &LENGTH(&RPTTEXT)\n      SET &DSNARC = &SUBSTR(&DSNBEGIN:&RECLEN,&STR(&RPTTEXT))\n     END\n   ELSE +\n     DO\n      /* A RARE 44 CHARACTER DSN!\n      SET &DSNEND = 44\n      SET &DSNARC  = &SUBSTR(&DSNBEGIN:&DSNEND,&STR(&RPTTEXT))\n     END\n  SET &ARCVOL  = &SUBSTR(1:4,&RPTMEMBR) /* EXTRACT VOL  FROM MEMNAME */\n  SET &ARCDATE = &SUBSTR(5:8,&RPTMEMBR) /* EXTRACT DATE FROM MEMNAME */\n  SET &ALLINFO = &STR(ARCHIVED ON &ARCDATE FROM VOL=&ARCVOL:  &DSNARC)\n  SET &RPTTEXT = &STR(&ALLINFO)\n  ISPEXEC LMPUT DATAID(&USERRPT) DATALOC(RPTTEXT) +\n          MODE(INVAR) DATALEN(&INLRECL)\n   IF &RCODE GT 10 THEN +\n      DO\n        ISPEXEC SETMSG MSG(ARC016)\n        SET &RCODE = 0\n        GOTO NOREPORT\n      END\n  END\n GOTO GETREC\nEND\n/*********************************************************************/\n/*\n/* ALL MEMBERS HAVE BEEN PROCESSED, SHOW THE USER AN ARCHIVE REPORT\n/*\nUSERVIEW: +\n IF &ARCDASD = NO THEN +\n   DO\n     /* AN ACTIVE USER! TELL THEM THAT NOTHING WAS EVER ARCHIVED.\n     /* THEN DELETE THE ONLINE (NULL) REPORT\n     ISPEXEC SETMSG MSG(ARC013)\n     SE '#ABLUTIL: ARCHIVE LIST REQUESTED. NO DSNS FOUND',CN(01)\n     ISPEXEC LMFREE DATAID(&USERRPT)\n     ISPEXEC LMCLOSE DATAID(&USERRPT)\n     DELETE  ARCHIVED.DATASETS\n     GOTO NOREPORT\n   END\nSET ECPU = &SUBSTR(1:&LENGTH(&SYSCPU)-3,&SYSCPU)\n/* COMPUTE THE CPU TIME USED TO CONSTRUCT THE REPORT\nSE '#ABLUTIL: ARCHIVE LIST REQUESTED (&EVAL(&ECPU-&BCPU) SECS.)',CN(01)\nISPEXEC LMCLOSE DATAID(&USERRPT)\nISPEXEC SETMSG MSG(ARC014)\nISPEXEC BROWSE DATASET(ARCHIVED.DATASETS)\nSET &ZHDSN = ARCHIVED.DATASETS\nSET &ZUHOPT = PD\nISPEXEC SETMSG MSG(ARC019C)\nISPEXEC VPUT (ZHDSN ZUHOPT) SHARED /* SAVE KEYSTROKES ON NEXT PANEL */\nISPEXEC SELECT PGM(ISRUHC)   /* DISPLAY SPF'S 3.6 HARDCOPY PANEL   */\n/*\nISPEXEC LMFREE DATAID(&USERRPT)\nISPEXEC LMCLOSE DATAID(&USERRPT)\nNOREPORT: +\nISPEXEC LMFREE DATAID(&ARCRPTS)\nISPEXEC LMCLOSE DATAID(&ARCRPTS)\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRCRESQ": {"ttr": 534, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\n/* REF: ABL.CMDPROC(ARCRESQ)\n/* DOC: CLIST FOR SUBMITTING BATCH DF/DSS DASD RESTORE JOBSTREAM\n/*      TO RECOVER AN ARCHIVED DATASET FROM A QUARTERLY ARCHIVE TAPE.\n/*      THIS CLIST INVOKED VIA SPF 3.A.ARC.RESQ (DATA ARCHIVE SYSTEM)\nCONTROL MSG NOLIST\nIF &DEBUG = DEBUG THEN CONTROL MSG LIST SYMLIST CONLIST\nISPEXEC DISPLAY PANEL(ARCRESQ)\nIF &LASTCC EQ 8 THEN +\n DO\n  ISPEXEC SETMSG MSG(ARC012A)\n  EXIT CODE(0)\n END\nISPEXEC VGET (ZTEMPF ARCDSN ARCVOL ARCQTR ARCYEAR)\nIF &SYSDSN('&ARCDSN') = OK THEN +\n DO\n  /* PROCEED NO FURTHER .... ALREADY HAVE A CATALOG ENTRY FOR THE\n  /* SPECIFIED DATASET TO BE RESTORED.\n  ISPEXEC SETMSG MSG(ARC012B)\n  EXIT CODE(0)\n END\n/* DEFINE SKELETON'S TAPE DSN \"DISK\" VOLUME\n/* DEFINE SKELETON'S TAPE FILE SEQUENCE NUMBER\nIF &SUBSTR(4,&ARCVOL) = 1 THEN +\n DO\n   SET &ARCVOL = USER01\n   SET &ARCSEQ# = 1\n END\nIF &SUBSTR(4,&ARCVOL) = 2 THEN +\n DO\n   SET &ARCVOL = USER02\n   SET &ARCSEQ# = 2\n END\nIF &SUBSTR(4,&ARCVOL) = 3 THEN +\n DO\n   SET &ARCVOL = USER03\n   SET &ARCSEQ# = 3\n END\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL ARCRESQ\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSET &WHOFOR = &SUBSTR(1:7,&ARCDSN)\nSE 'RESTORE OF DATASET &ARCDSN BEGAN AT &SYSTIME',USER(&WHOFOR),LOGON\nISPEXEC SETMSG MSG(ARC012C)\nSE '#ABLUTIL: RESTORE OF DATASET &ARCDSN REQUESTED',CN(01)\nSE '#ABLUTIL: USING ARCHIVE TAPE &ARCVOL0&ARCQTR&ARCYEAR',CN(01)\n%OUTLIST\nEXIT CODE (0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRCRESW": {"ttr": 536, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG ARCWCAT(NO)\n/* REF: ABL.CMDPROC(ARCRESW)\n/* DOC: CLIST FOR SUBMITTING BATCH DF/DSS DASD RESTORE JOBSTREAM\n/*      TO RECOVER A DATASET FROM A WEEKLY DUMP TAPE.\n/*      THIS CLIST INVOKED VIA SPF 3.A.ARC.RESW (DASD ARCHIVE SYSTEM)\nCONTROL MSG NOLIST\nIF &DEBUG = DEBUG THEN CONTROL MSG LIST SYMLIST CONLIST\nISPEXEC DISPLAY PANEL(ARCRESW)\nIF &LASTCC EQ 8 THEN +\n DO\n  ISPEXEC SETMSG MSG(ARC012A)\n  EXIT CODE(0)\n END\nISPEXEC VGET (ZTEMPF ARCWDSN ARCWVOL ARCWTAPE)\nIF &SYSDSN('&ARCWDSN') = OK THEN +\n DO\n  /* SET FLAG TO ALLOW TO RESTORE TO OCCUR AS AN UNCATALOGED DATASET\n  /* WITH \".RESTORED\" APPENDED TO THE DATASET NAME ..... THEN ....\n  /* WARN THE RESTOREE AS SUCH VIA A PANEL MESSAGE.\n  SET &ARCWCAT = YES\n  ISPEXEC SETMSG MSG(ARC012D)\n END\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL ARCRESW\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSET &WHOFOR = &SUBSTR(1:7,&ARCWDSN)\nSE 'RESTORE OF DATASET &ARCWDSN BEGAN AT &SYSTIME',USER(&WHOFOR),LOGON\nISPEXEC SETMSG MSG(ARC012C)\nSE '#ABLUTIL: RESTORE OF DATASET &ARCDSN REQUESTED',CN(01)\nSE '#ABLUTIL: USING WEEKLY DUMP VOL=SER=(&ARCWTAPE)',CN(01)\n%OUTLIST\nEXIT CODE (0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISRUDLP": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n  This panel is included to show how the logical connection between\n  active, online datasets and archived datasets appears to the user.\n  SPF 3.4 is the best-fit location for this information. Modify this\n  panel and store the custom version in the appropriate concatenated\n  ISRPLIB DD in your LOGON proc(s). Note that we removed (hid) the VTOC\n  options from this panel but did not remove the capability.\n\n%-------------------------- DATA SET LIST UTILITY ------------------------------\n%OPTION  ===>_ZCMD                                                             +\n%\n%  blank+- Display data set list%*         %P+ - Print data set list\n%\n+Enter one or both of the parameters below:\n+  DSNAME LEVEL %===>_DSNLVL                                      +\n+  VOLUME       %===>_ZDLVOL+\n+\n+SPECIFY THE FOLLOWING, IF DISPLAYING A LIST OF DATA SETS:\n+  DISPLAY FORMAT OPTION %===>_ZUFOP+  (QUICK, SHORT, or LONG)\n+  CONFIRM DELETE REQUEST%===>_ZUPCD+  (YES or NO)\n+\n%*+The following line commands will be available when the list is displayed\n+\n%    B+- Browse data set                %C+- Catalog data set\n%    E+- Edit data set                  %U+- Uncatalog data set\n%    D+- Delete entire data set         %P+- Print entire data set\n%    R+- Rename entire data set         %X+- Print index listing\n%    I+- Data set information           %M+- Display member list\n%    S+- Data set information (short)   %Z+- Compress data set\n+\n+-----------------------------------------------------------------------\n+Enter%=3.A.ARC+in the%OPTION+field to view a list of archived datasets.\n)INIT\n  .HELP = ISR34000\n  &ZCMD = &ZUOPT\n  &ZUFOP = TRANS (&FMOPT Q,'QUICK' S,'SHORT' L,'LONG' *,*)\n  &ZUPCD = TRANS (&ZUCDR Y,'YES' N,'NO' *,*)\n  .CURSOR = ZCMD\n  IF (&DSNLVL = &Z)\n    IF (&ZDLVOL = &Z)\n      &ZCMD = &Z\n      &DSNLVL = &ZUSER\n      &ZUFOP  = SHORT\n      &ZUPCD = YES\n  &COMPGM = 'IEBCOPY '\n)PROC\n  IF (&ZCMD \u00ac= ' ')\n    VER (&ZCMD,LIST,P,V,PV)\n  &ZUOPT = TRUNC (&ZCMD,2)\n  IF (&ZUOPT = V,PV)\n    VER (&ZDLVOL,NONBLANK)\n    IF (&DSNLVL \u00ac= ' ')\n       .MSG = ISRU188\n       .CURSOR = DSNLVL\n\n  IF (&ZUOPT = ' ')\n    IF (&ZDLVOL = ' ')\n      VER (&DSNLVL,NONBLANK,MSG=ISRU187)\n  IF (&ZUOPT = 'P ')\n    IF (&ZDLVOL = ' ')\n      VER (&DSNLVL,NONBLANK,MSG=ISRU187)\n\n  &ZUCDR = TRUNC (&ZUPCD,1)\n  VER (&ZUCDR,NB,LIST,Y,N)\n\n  &FMOPT = TRUNC (&ZUFOP,1)\n  VER (&FMOPT,NB,LIST,S,L,Q)\n\n  IF (&FMOPT = S)\n     &UDLPANEL = 'ISRUDSL1'\n  IF (&FMOPT = L)\n     &UDLPANEL = 'ISRUDSLX'\n  IF (&FMOPT = Q)\n     &UDLPANEL = 'ISRUDSL0'\n\n  IF (&ZDLVOL = &Z )\n     &ZUP2HDRC = 'BEGINNING WITH'\n     &ZUP2HDRV = &DSNLVL\n\n  IF (&ZDLVOL \u00ac= &Z )\n     &ZUP2HDRC = 'ON VOLUME'\n     &ZUP2HDRV = &ZDLVOL\n  &S1 = 'RENAME  '\n  &S2 = 'DELETE  '\n  &S3 = 'CATALOG '\n  &S4 = 'UNCAT   '\n  &S5 = 'PRINTED '\n  &S6 = 'PRINTX  '\n  &S7 = 'INFO-I  '\n  &S8 = 'MEMBLIST'\n  &S9 = 'COMPRESS'\n  &S10 = 'INFO-S  '\n  &S11 = 'BROWSE  '\n  &S12 = 'EDIT    '\n  &UPRTC = 'PPRINTED'\n  &URENC = 'RRENAMED'\n  &UDELC = 'DDELETED'\n  VPUT (S1 S2 S3 S4 S5 S6 S7 S8 S9 S10 S11 S12 UPRTC URENC UDELC) ASIS\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MRC01": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ARC010   .HELP=* .ALARM=YES\n'You must supply a value at the cursor location'\nARC011   .HELP=* .ALARM=YES\n'Critical System ERROR. Contact DP immediately. Thanks!'\nARC011A  .HELP=* .ALARM=YES\n'Error code=&rcode during LMOPEN of &arcrpts.. Contact Data Processing'\nARC011B  .HELP=* .ALARM=YES\n'DUMP aborted per your request'\nARC011C  .HELP=* .ALARM=YES\n'VERIFY the success of the DUMP job upon completion!'\nARC011D  .HELP=* .ALARM=YES\n'QUARTER must be 1 digit numeric value from 1-4...re-enter'\nARC011E  .HELP=* .ALARM=YES\n'YEAR must be 2 digit numeric value  (e.g., 89 = 1989)'\nARC011F  .HELP=* .ALARM=YES\n'Catalog entry for quarter 0&arcqtr&arcyear already exists'\nARC011G  .HELP=* .ALARM=YES\n'Valid values are: USR1, USR2, USR3, or USR4   ... Re-specify'\nARC011H  .HELP=* .ALARM=YES\n'Dataset name must begin with the TSO userid ( E.g., D060nnn )'\nARC011I  .HELP=* .ALARM=YES\n'Enter the tape volser(s) to be used (E.g.,  000001,PRIVAT  )'\nARC011J  .HELP=* .ALARM=YES\n'Valid values are: USER01, USER02, USER03, or USER04   ... Re-specify'\nARC012   .HELP=* .ALARM=YES\n'Access to this function is limited to data processing'\nARC012A  .HELP=* .ALARM=YES\n'RESTORE aborted per your request'\nARC012B  .HELP=* .ALARM=YES\n'Dataset &arcdsn already cataloged ... cannot restore'\nARC012C  .HELP=* .ALARM=YES\n'VERIFY the success of the RESTORE job upon completion!'\nARC012D  .HELP=* .ALARM=YES\n'Dataset will be restored (uncataloged) as &arcwdsn..RESTORED'\nARC013  .HELP=* .ALARM=YES\n'No archived datasets were found for your userid'\nARC014  .HELP=* .ALARM=YES\n'After browsing, press PF3 to PRINT or DELETE this report'\nARC015  .HELP=* .ALARM=YES\n'Severe ERROR during report production. Contact Data Processing'\nARC016  .HELP=* .ALARM=YES\n'Error code=&rcode during LMPUT to &userrpt.. Contact Data Processing'\nARC017  .HELP=* .ALARM=YES\n'Allocation of USERRPT report file failed. Contact Data Processing'\nARC018  .HELP=* .ALARM=YES\n'Error code=&rcode during LMGET of &rptmembr.. Contact Data Processing'\nARC019  .HELP=* .ALARM=YES\n'Error code=&rcode during LMINIT of &arcrpts.. Contact Data Processing'\nARC019A .HELP=* .ALARM=YES\n'Error code=&rcode during LMINIT of &userrpt.. Contact Data Processing'\nARC019B  .HELP=* .ALARM=YES\n'Error code=&rcode during LMOPEN of &userrpt..Contact Data Processing'\nARC019C  .HELP=* .ALARM=YES\n'Press ENTER to proceed with the PRINT request'\nARC019D  .HELP=* .ALARM=YES\n'Invalid userid requested on the LIST command ... respecify'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCDUMP": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  DASD ARCHIVE SYSTEM: DUMP FUNCTION -----------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n% Complete the fields below then press enter to SUBMIT      +TIME     - &ZTIME\n%\n+   Enter the one-digit%QUARTER+===>_arcqtr\n%\n+   Enter the two-digit%YEAR+   ===>_arcyear\n%\n+\n+ Press%PF3+to abort this function (or enter the END command)\n%\n+ Press%PF1+for assistance  (or enter the HELP command)\n)INIT\n  .HELP = ARCDUMPT\n  &ZPRIM = no\n  &ZHTOP = ARCMAINT\n)PROC\n  VER (&SYSUID,LIST,D060012,D060520,D061001,MSG=ARC012)\n  VER (&ARCQTR NONBLANK msg=ARC011d)\n  VER (&ARCQTR PICT,'N',msg=ARC011d)\n  VER (&ARCQTR RANGE 1 4 msg=ARC011d)\n  VER (&ARCYEAR NONBLANK msg=ARC011e)\n  VER (&ARCYEAR PICT,'NN',msg=ARC011e)\n  VER (&ARCYEAR RANGE 89 99 msg=ARC011e)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  VPUT (ARCQTR ARCYEAR) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCDUMPT": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -----------  DASD ARCHIVE SYSTEM: DUMP (ARCHIVE) ------------ TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n+\n+ The%DUMP+function submits a DF/DSS jobstream that will archive to tape\n+ storage all Userid-prefixed datasets residing on PUBLIC storage (DASD)\n+ that have been unreferenced for 365 days from the DUMP run date. This\n+ function performed by data processing operations personnel sometime       is\n+ during the las week of each quarter. One tape per quarter is created.    t\n+ For each public disk volume (USERnn) dumped, a seperate tape file is\n+ created. Archived ta are retained for 3 years. Output from the DUMP JOB  pes\n+ is written as members dataset 'ABL.ARCDASD.REPORTS'. Member names are of to\n+ the form USRnqqyy wher 'n' = last character of the disk volser, qqyy =   e\n+ quarter and year when the dump occurred.   For example, membername\n+ USR20390 would contain a list  o all user datasets archived from volume  f\n+ USER02 during the 3Q90 DUMP run.  The tape VOLSER used during each\n+ quarterly DUMP will be AR0qyy. The quart and year are supplied in the    er\n+ DUMP panel as follows:\n+\n+   Enter the one-digit%QUARTER+===> Enter a 1 digit value from 1 to 4\n%\n+   Enter the two-digit%YEAR+   ===> Enter a 2 digit value from 89 to 99\n)INIT\n  &ZHTOP = ARCMAINT\n)PROC\n  &ZSEL = TRANS(&ZCMD ' ' ' ' X,'EXIT' *,'?')\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCLISTT": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------------  ARCHIVED DATASETS REPORT: \"LIST\" ------------- TUTORIAL\n+\n%OPTION  ===>_ZCMD                                          +USERID   - &ZUSER +\n+                                                           +TIME     - &Ztime\n+\n+ Selecting option%LIST+will produce a report of all datasets that have been\n+ archived (migrated) from online (disk) storage to offline tape storage.\n+ Data processing automatically migrates, on a quarterly basis, all data\n+ that has been unreferenced within the previous year. To recover archived\n+ data, perform the following steps:\n+\n+   1. After browsing the report produced by option%LIST+, press PF3.\n+      Note that the report dataset \"ARCHIVED.DATASETS\" is dynamically\n+      re-created each time the \"LIST\" function is requested.\n+   2. Select a print option from the next presented menu.\n+      (The LIST function uses SPF's 3.6 HARDCOPY utility to print the rpt.)\n+   3. Present the hardcopy report to the data processing computer\n+      operator, indicating the desired dataset(s) to be restored.\n+      Data processing will notify you upon restore completion.\n+\n+\n+ Press%ENTER+to view a sample report description\n+\n+ Press%PF3+to exit this tutorial\n)INIT\n  .HELP  = ARCLISTT\n  &ZHTOP = ARCMAINT\n  &ZCONT = ARCLSTT2\n  &ZCMD  = ' '\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRCLSTT2": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------- ARCHIVED DATASETS REPORT: DESCRIPTION  ------------- TUTORIAL\n+\n%OPTION  ===>_ZCMD                                          +USERID   - &ZUSER +\n+                                                           +TIME     - &Ztime\n+\n+ Selecting option%LIST+will produce a report of all archived datasets, E.g,:\n+\n%\n% --- ARCHIVED DATASETS FOR D060874 AS OF mm/dd/yy ---\n%\n% ARCHIVED ON 289  FROM VOL=USR1:  D060874.MOTOR.FORT\n% ARCHIVED ON 289  FROM VOL=USR2:  D060874.ACCTG.DATA.DECEMBER\n% ARCHIVED ON 389  FROM VOL=USR3:  D060874.NOZZLE.DATA\n% ARCHIVED ON 489  FROM VOL=USR1:  D060874.SAS.PLOT\n% ARCHIVED ON 190  FROM VOL=USR2:  D060874.FOCUS.FOCEXEC.DATA\n% ARCHIVED ON 190  FROM VOL=USR2:  D060874.SAS.DATA\n% ARCHIVED ON 390  FROM VOL=USR1:  D060874.ABL.CLIST\n+\n+ E.g., dataset D060874.MOTOR.FORT was archived at the end of the second\n+       quarter of 1989 from online disk volume USER01.\n+\n+ Press%PF3+to exit this tutorial\n)INIT\n  .HELP  = ARCMAINT\n  &ZHTOP = ARCMAINT\n  &ZHUP  = ARCLISTT\n  &ZCMD  = ' '\n)PROC\n  &ZSEL = TRANS(&ZCMD ' ',' ' X,'EXIT' *,'?')\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCMAIN": {"ttr": 782, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%--------------- DATA ARCHIVAL/RECOVERY SYSTEM: PRIMARY MENU ------------------\n%OPTION  ===>_ZCMD                                                             +\n%\n%                                                           +USERID   - &ZUSER\n% Select from the following list of options:                +TIME     - &ZTIME\n%\n%   LIST +-View a LIST of Archived Datasets\n%\n%   DUMP +-Quarterly DUMP (Archival) of Static User Data\n%\n%   RESQ +-Restore Data from Quarterly Archives\n%\n%   RESW +-Restore Data from Weekly Dumps\n%\n%      T +-Tutorial\n+\n+\n+\n+  Press%PF1+for assistance\n%\n+  Press%PF3+to exit this screen\n)INIT\n  .HELP = ARCMAINT\n  &ZHTOP = ARCMAINT\n  &ZCMD  = LIST\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n            LIST,'CMD(%ARCLIST)'\n            DUMP,'CMD(%ARCDUMP)'\n            RESQ,'CMD(%ARCRESQ)'\n            RESW,'CMD(%ARCRESW)'\n               T,'PGM(ISPTUTOR) PARM(ARCMAINT)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCMAINT": {"ttr": 784, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------------  DATA ARCHIVAL/RECOVERY SYSTEM  ---------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n% Select from an individual topic below or press ENTER to\n% view the tutorial for each topic sequentially.\n%\n%   OVER +-Overview of Data Backup Cycles\n%\n%   LIST +-View a List of Archived &sysuid Datasets\n%\n%   DUMP +-Quarterly Dump (Archival) of Static User Data\n%\n%   RESQ +-Restore Data from Quarterly Archives\n%\n%   RESW +-Restore Data from Weekly Dumps\n%\n%\n+ Press%PF3+to exit this screen\n)INIT\n  .HELP = ARCMAINT\n  &ZHTOP = ARCMAINT\n)PROC\n  &ZSEL = TRANS(&ZCMD\n            OVER,ARCOVERT\n            LIST,ARCLISTT\n            DUMP,ARCDUMPT\n            RESQ,ARCRESQT\n            RESW,ARCRESWT\n              ' ',' '\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCOVERT": {"ttr": 786, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "TUTORIAL --------  DATA ARCHIVAL/RECOVERY SYSTEM: OVERVIEW ------------ TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n%\n+     The integrity of mainframe-resident data is ensured by the automatic\n+    dumping of all online (disk) data to magnetic tape storage on a weekly\n+    interval.  These dumps are transparent to the user. A list of all\n+    online data owned by your TSO userid can be obtained by selecting\n+    option 3.4 from SPF's \"ABL PRIMARY MENU\".  In addition to the weekly\n+    backups, on a quarterly schedule, data that has been unreferenced for\n+    one year is archived to tape storage. These two distinct backup cycles\n+    (weekly and quarterly) are further described in the online tutorials\n+    that cover the specific Data Archival/Recovery System's options.\n+\n+ Press%PF3+to exit this screen\n)INIT\n  .HELP = ARCMAINT\n  &ZHTOP = ARCMAINT\n)PROC\n  &ZSEL = TRANS(&ZCMD\n              ' ',' '\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRCRESQ": {"ttr": 788, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  RESTORE DATA FROM QUARTERLY ARCHIVES  --------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n+                                                            TIME     - &ZTIME\n% Complete the fields below then press enter to SUBMIT\n%\n%\n+   Restore DATASET %===>_arcdsn\n%\n+     TO Disk VOLUME%===>_arcvol\n%\n+       FROM the dump taken on QUARTER %===>_arcqtr+ of YEAR%===>_arcyear+\n%\n+\n+ Press%PF3+to abort this function (or enter the END command)\n%\n+ Press%PF1+for assistance  (or enter the HELP command)\n)INIT\n  .HELP = ARCRESQT\n  &ZHTOP = ARCMAINT\n)PROC\n  VER (&SYSUID,LIST,D060520,D061001,D060012,D060013,D060102,MSG=ARC012)\n  VER (&ARCDSN,NB,DSNAME)\n  &DSNUSER = TRUNC(&ARCDSN,'.')\n  VER (&DSNUSER PICT 'ANNNNNN' MSG=ARC011H)\n  VER (&ARCVOL,NB,LIST,USR1,USR2,USR3,MSG=ARC011G)\n  VER (&ARCQTR NONBLANK MSG=ARC011D)\n  VER (&ARCQTR PICT,'N',MSG=ARC011D)\n  VER (&ARCQTR RANGE 1 4 MSG=ARC011D)\n  VER (&ARCYEAR NONBLANK MSG=ARC011E)\n  VER (&ARCYEAR PICT,'NN',MSG=ARC011E)\n  VER (&ARCYEAR RANGE 89 99 MSG=ARC011E)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  VPUT (ARCDSN ARCVOL ARCQTR ARCYEAR) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCRESQT": {"ttr": 790, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ---------  RESTORE DATA FROM QUARTERLY ARCHIVES  ------------ TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n+                                                            TIME     - &ZTIME\n%\n+ This function provides the ability to%RESTORE+to online disk storage\n+ a dataset that has been archived to tape. Data is automatically archived\n+ to tape storage each quarter if it has been unreferenced for one year.\n+ Access to RESTORE capability is LIMITED to data processing personnel.\n+\n+ Completion of the following fields are required for a RESTORE to occur:\n+\n+   Restore%DATASET +===> E.g.,%D060849.SAMPLE.DATA+\n%\n+     TO Disk%VOLUME+===> %*+\n%\n+       FROM the Dump Taken on%QUARTER+===> %*+    of%YEAR+===> %*+\n+\n%     *+:%VOLUME, QUARTER,+&%YEAR+values are obtained from the list of archived\n+         datasets that the user must present when requesting a dataset\n+         restore. This list is created by the user via option%LIST+.\n+\n+ Press%PF3+to exit this screen\n)INIT\n  .HELP = ARCMAINT\n  &ZPRIM = NO\n  &ZHTOP = ARCMAINT\n)PROC\n  &ZSEL = TRANS(&ZCMD ' ',' ' X,'EXIT' *,'?')\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCRESW": {"ttr": 792, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%---------------------  RESTORE DATA FROM WEEKLY DUMPS   ----------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n+                                                            TIME     - &ZTIME\n% Complete the fields below then press enter to SUBMIT\n%\n%\n+   Restore DATASET %===>_arcwdsn\n%\n+       TO Disk VOLUME%===>_arcwvol\n%\n+          Using DUMP tape VOLSER(s) %===>_arcwtape                     r+\n%\n+\n+ Press%PF3+to abort this function (or enter the END command)\n%\n+ Press%PF1+for assistance  (or enter the HELP command)\n)INIT\n  .HELP = ARCRESWT\n  &ZHTOP = ARCMAINT\n)PROC\n  VER (&SYSUID,LIST,D060520,D061001,D060012,D060013,D060102,MSG=ARC012)\n  VER (&ARCWDSN,NB,DSNAME)\n  &DSNUSER = TRUNC(&ARCWDSN,'.')\n  VER (&DSNUSER PICT 'ANNNNNN' MSG=ARC011H)\n  VER (&ARCWVOL,NB,LIST,USER01,USER02,USER03,USER04,MSG=ARC011J)\n  VER (&ARCWTAPE,NB,MSG=ARC011I)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  VPUT (ARCWDSN ARCWVOL ARCWTAPE) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRCRESWT": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------------  RESTORE DATA FROM WEEKLY DUMPS   -------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n\n+ This function provides the ability to%RESTORE+to online disk storage a\n+ dataset that has been dumped as part of the%weekly+full-volume DASD dumps.\n+ Weekly dump tapes are reused after two weekly dump cycles. No filtration\n+ criteria is applied to the weekly dumps; any and all data on a disk volume\n+ (VTOC) is dumped to tape (with the CATALOG not considered).  Access to\n+ RESTORE capability is LIMITED to data processing personnel.\n+\n+\n+ Completion of the following fields are required for a RESTORE to occur:\n+\n%   RESTORE dataset  ===>+E.g.,%D060849.SAMPLE.DATA+\n%\n%     TO Disk volume ===>+E.g.,%USER02+(Determined using hardcopy VTOC listings\n+                         which are produced automatically during weekly dumps)\n+\n%          Using DUMP tape VOLSER(s)  ===>+E.g.,%000001,PRIVAT+ (Determined via\n+                                          the weekly dump's JOB LOG)\n+\n+ Press%PF3+to exit this tutorial\n)INIT\n  .HELP = ARCMAINT\n  &ZHTOP = ARCMAINT\n)PROC\n  &ZSEL = TRANS(&ZCMD ' ',' ' X,'EXIT' *,'?')\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SRCDUMP": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//&SYSUID.D JOB (00000000,06009,10,99),'ARCDASD DUMP',MSGCLASS=Q,\n// NOTIFY=&SYSUID\n//*  REF: ABL.ISPSLIB(ARCDUMP)\n//*  REF: D061001.DIALOG.ARCDASD(ARCDUMP)\n//*  DOC: DUMP AGED DATASETS TO ARCHIVE TAPE (VIA SPF 3.A.ARC.DUMP)\n//*\n//**********************************************************************\n//*\n//LABEL     EXEC  PGM=IEHINITT\n//SYSPRINT DD SYSOUT=Q\n//LABELDD  DD DCB=DEN=4,UNIT=(580,,DEFER),VOL=(,RETAIN)\n//SYSIN DD *\nLABELDD  INITT SER=AR0&ARCQTR&ARCYEAR,DISP=REWIND\n/*\n//*\n//**********************************************************************\n//*\n//ARCUSR1  EXEC PGM=ADRDSSU,REGION=1500K,TIME=30,COND=(0,NE,LABEL)\n//*        PARM='TYPRUN=NORUN',\n//SYSPRINT DD  DISP=OLD,DSN=ABL.ARCDASD.REPORTS(USR1&ARCQTR&ARCYEAR)\n//PSWD   DD  DISP=SHR,DSN=SYS1.BKUPPSWD(BKUPUSR1)\n//DISK1  DD  UNIT=SYSDA,VOL=SER=USER01,DISP=OLD\n//TAPE1  DD  DISP=(,CATLG,KEEP),DCB=DEN=4,\n//       DSN=ABL.ARCDASD.USERDATA.D0&ARCQTR&ARCYEAR..VUSER01,\n//       VOL=(,RETAIN,,SER=AR0&ARCQTR&ARCYEAR),UNIT=TAPES,LABEL=(1,SL)\n//SYSIN   DD   *\n DUMP INDD(DISK1) OUTDD(TAPE1) -\n      DATASET( INCLUDE(D060*.**,D069*.**,T8*.**,T0*.**) -\n      BY(REFDT,LT,*,-365) ) -\n      PSWD(PSWD) DELETE\n//*\n//**********************************************************************\n//*\n//ARCUSR2  EXEC PGM=ADRDSSU,REGION=1500K,TIME=30\n//*        PARM='TYPRUN=NORUN',\n//SYSPRINT DD  DISP=OLD,DSN=ABL.ARCDASD.REPORTS(USR2&ARCQTR&ARCYEAR)\n//PSWD   DD  DISP=SHR,DSN=SYS1.BKUPPSWD(BKUPUSR2)\n//DISK1  DD  UNIT=SYSDA,VOL=SER=USER02,DISP=OLD\n//TAPE1  DD  DISP=(,CATLG,KEEP),DCB=DEN=4,\n//       DSN=ABL.ARCDASD.USERDATA.D0&ARCQTR&ARCYEAR..VUSER02,\n//       VOL=(,RETAIN,,SER=AR0&ARCQTR&ARCYEAR),UNIT=TAPES,LABEL=(2,SL)\n//SYSIN   DD   *\n DUMP INDD(DISK1) OUTDD(TAPE1) -\n      DATASET( INCLUDE(D060*.**,D069*.**,T8*.**,T0*.**) -\n      BY(REFDT,LT,*,-365) ) -\n      PSWD(PSWD) DELETE\n//*\n//**********************************************************************\n//*\n//ARCUSR3  EXEC PGM=ADRDSSU,REGION=1500K,TIME=30\n//*        PARM='TYPRUN=NORUN',\n//SYSPRINT DD  DISP=OLD,DSN=ABL.ARCDASD.REPORTS(USR3&ARCQTR&ARCYEAR)\n//PSWD    DD  DISP=SHR,DSN=SYS1.BKUPPSWD(BKUPUSR3)\n//DISK1   DD  UNIT=SYSDA,VOL=SER=USER03,DISP=OLD\n//TAPE1   DD  DISP=(,CATLG,KEEP),DCB=DEN=4,\n//        DSN=ABL.ARCDASD.USERDATA.D0&ARCQTR&ARCYEAR..VUSER03,\n//       VOL=(,RETAIN,,SER=AR0&ARCQTR&ARCYEAR),UNIT=TAPES,LABEL=(3,SL)\n//SYSIN   DD   *\n DUMP INDD(DISK1) OUTDD(TAPE1) -\n      DATASET( INCLUDE(D060*.**,D069*.**,T8*.**,T0*.**) -\n      BY(REFDT,LT,*,-365) ) -\n      PSWD(PSWD) DELETE\n/*\n//**********************************************************************\n//*\n//* PRINT THE ENTIRE CONTENTS OF 'ABL.ARCDASD.REPORTS' FOR ADDED SAFETY\n//*\n//TMPBATCH EXEC PGM=IKJEFT01,REGION=4096K,TIME=10\n//SYSTSPRT DD SYSOUT=A\n//SYSTSIN DD *\nPRINTOFF 'ABL.ARCDASD.REPORTS'\n/*\n//**********************************************************************\n//*\n//* EACH QUARTER, THE ONLINE PDS CONTAINING THE OUTPUT FROM ALL PREVIOUS\n//* DUMP RUNS IS CLONED IN IT'S ENTIRETY DUE TO IT'S CRITICAL NATURE.\n//* THE FOLLOWING THREE STEPS PERFORM THIS FUNCTION.\n//*\n//DELDUPE  EXEC PGM=IEFBR14\n//X DD DSN=ABL.ARCDASD.REPORTS.CLONE,UNIT=SYSDA,DISP=(OLD,DELETE)\n//*\n//ALLOCDUP EXEC PGM=IEFBR14,COND=(4,LT,DELDUPE)\n//X DD DSN=ABL.ARCDASD.REPORTS.CLONE,UNIT=SYSDA,DISP=(,CATLG),\n//     SPACE=(TRK,(15,5,30)),VOL=SER=SYS001,\n//     DCB=(RECFM=VBA,LRECL=133,BLKSIZE=137)\n//*\n//CLONEARC EXEC PGM=IEBCOPY,TIME=1439,REGION=1024K,COND=(4,LT,ALLOCDUP)\n//SYSPRINT DD SYSOUT=*\n//O      DD DISP=SHR,DSN=ABL.ARCDASD.REPORTS.CLONE\n//I      DD DISP=SHR,DSN=ABL.ARCDASD.REPORTS\n//SYSUT3 DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSUT4 DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSIN  DD *\n C O=O,I=I\n//*\n//**********************************************************************\n//*\n//* DOC: USE THE CBTMODS TAPECOPY UTIL FROM USAF TO XEROX THE QUARTERLY\n//*      TAPE CREATED BY SPF 3.A.ARC.DUMP AS A SAFETY CUSHION.\n//*      PROGRAM TAPECOPY IS CREATED VIA D061001.CNTL(TAPECOPY).\n//TAPECOPY  EXEC  PGM=TAPECOPY                                          00758\n//STEPLIB DD DISP=SHR,DSN=D061001.LOAD                                  00758\n//SYSPRINT  DD  SYSOUT=*                                                00759\n//IN   DD  VOL=(,RETAIN,SER=AR0&ARCQTR&ARCYEAR),                        00760\n//     UNIT=TAPES,DISP=OLD,LABEL=(,BLP)                                 00760\n//OUT1 DD  VOL=(,RETAIN,SER=ARX&ARCQTR&ARCYEAR),                        00761\n//     UNIT=TAPES,DISP=OLD,LABEL=(,BLP)                                 00761\n//*\n//**********************************************************************\n//*\n//* PRODUCE A TAPEMAP OF THE ORIGINAL QUARTERLY TAPE\n//*\n//MAPORIG  EXEC PGM=TAPEMAP,PARM=CHECK\n//STEPLIB  DD  DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD  VOL=SER=AR0&ARCQTR&ARCYEAR,UNIT=TAPES,DISP=SHR,\n//         LABEL=(,BLP)\n//SYSPRINT DD  SYSOUT=*\n//SYSPRNT2 DD  SYSOUT=*\n//*\n//**********************************************************************\n//*\n//* PRODUCE A TAPEMAP OF THE CLONED QUARTERLY TAPE\n//*\n//MAPDUPE  EXEC PGM=TAPEMAP,PARM=CHECK\n//STEPLIB  DD  DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD  VOL=SER=ARX&ARCQTR&ARCYEAR,UNIT=TAPES,DISP=SHR,\n//         LABEL=(,BLP)\n//SYSPRINT DD  SYSOUT=*\n//SYSPRNT2 DD  SYSOUT=*\n//* END OF JOBSTREAM \"ARCDUMP\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SRCRESQ": {"ttr": 1030, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//&SYSUID.D JOB (00000000,06009,10),RESTORE,MSGCLASS=Q,NOTIFY=&SYSUID\n//*  REF: ABL.ISPSLIB(ARCRESQ)\n//*  DOC: JOBSTREAM SUBMITTED VIA SPF 3.A.ARC.RESQ\n//*       RESTORE AN ARCHIVED USER DATASET (FROM TAPE TO DISK)\n//RESTORE  EXEC PGM=ADRDSSU,REGION=2000K\n//SYSPRINT DD SYSOUT=*\n//DISKOUT  DD UNIT=3380,VOL=SER=&ARCVOL,DISP=SHR\n//TAPEIN   DD DSN=ABL.ARCDASD.USERDATA.D0&ARCQTR&ARCYEAR..V&ARCVOL,\n//            UNIT=TAPES,DISP=SHR,VOL=SER=AR0&ARCQTR&ARCYEAR,\n//            LABEL=(&ARCSEQ#,SL)\n//SYSIN    DD   *\n RESTORE INDD(TAPEIN) OUTDD(DISKOUT) TOL(ENQF) -\n DATASET(INCLUDE('&ARCDSN')) CATALOG\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SRCRESW": {"ttr": 1032, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//&SYSUID.R JOB (00000000,06009,10),RESTORE,MSGCLASS=Q,NOTIFY=&SYSUID\n//*  REF: ABL.ISPSLIB(ARCRESW)\n//*  DOC: JOBSTREAM SUBMITTED VIA SPF 3.A.ARC.RESW\n//*       RESTORE A USER DATASET USING WEEKLY DUMPS (FROM TAPE TO DISK)\n//RESTORE  EXEC PGM=ADRDSSU,REGION=2000K\n//SYSPRINT DD SYSOUT=*\n//DISKOUT  DD UNIT=3380,VOL=SER=&ARCWVOL,DISP=SHR\n//TAPEIN   DD DSN=RETURN.&ARCWVOL,\n//            UNIT=TAPES,DISP=SHR,VOL=SER=(&ARCWTAPE)\n//* IF DATASET TO BE RESTORED ALREADY EXISTS ON CAT (&ARCWCAT = YES),\n//* THEN RESTORE THE DATASET UNCATALOGED, APPENDING \"RESTORED\" TO DSN.\n//* TO AVOID DATASET NAMING CONFLICTS AND CATALOG INDEX STRUCTURE WOES.\n//SYSIN    DD   *\n RESTORE INDD(TAPEIN) OUTDD(DISKOUT) TOL(ENQF) -\n)SEL &ARCWCAT = YES\n DATASET(INCLUDE(&ARCWDSN)) -\n RENAME(&ARCWDSN,&ARCWDSN..RESTORED)\n)ENDSEL\n)SEL &ARCWCAT = NO\n DATASET(INCLUDE(&ARCWDSN)) CATALOG\n)ENDSEL\n//* END OF (SKELETON) JOBSTREAM \"ARCRESW\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "UTILMENU": {"ttr": 1034, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n This is not part of the system per se but is included to show the\n invocation route.   See also member ISRUDLP (from which this menu is\n invoked).\n\n%-------------------- ABL DATA UTILITIES SELECTION MENU  -----------------------\n%OPTION  ===>_ZCMD                                                             +\n%\n%\n%  1  +SEARCH      - SEARCH a Dataset for Data (literal) Value(s)\n%  2  +REPLACE     - FIND and REPLACE data globally in a dataset\n%  3  +TRANSMIT    - Transmit data throughout Hercules mainframe network\n%  4  +MEMBER AUDIT- Find Multiple Occurences of Library Members\n%  5  +SMF DUMP    - Dump SMF MAN file(s) to tape%*+\n%  6  +PHONE CA    - Phone Call Accounting System%*+\n%ARC  +ARCHIVES    - Data Archival/Recovery System\n%  C  +CADAM       - CADAM Scope/PLotter Services%*+\n% PC  +PCLINK      - PC to Mainframe Communications\n%  S  +SYSLOG      - System Log Application%*+\n+\n+                   %*+: Access Restricted\n+\n+  Press%PF1+for assistance\n+  Press%PF3+to  exit\n)INIT\n  .HELP  = ABLUTILT\n  &ZHTOP = ABLUTILT\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                1,'CMD(%PDSSCAN)'\n                2,'CMD(%CA)'\n                3,'CMD(%XMIT)'\n                4,'PANEL(MEMMAIN)'\n                5,'CMD(%SMFDMP)'\n                6,'PANEL(FONMAIN)'\n              ARC,'PANEL(ARCMAIN)'\n               PC,'CMD(PCLINK)'\n                S,'CMD(%LOGMAIN)'\n                C,'PANEL(CADMAIN)'\n              ' ',' '\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT140/FILE140.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT140", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}