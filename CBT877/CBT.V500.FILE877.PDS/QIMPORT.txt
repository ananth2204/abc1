/*REXX****************************************************************/
/* QIMPORT import a QMF object using $$DIR$$ member                  */
/*  Format:         {QUERY}                                          */
/*          QIMPORT {PROC }  QMFname  FROM 'DSNfrom' ÝBACKUP¨        */
/*                  {FORM }                                          */
/*                                                                   */
/* where BACKUP asks to run                                          */
/*                  {QUERY}                                          */
/*          QEXPORT {PROC }  QMFname  TO 'DSNfrom.OBSOLETE'          */
/*                  {FORM }                                          */
/*****************************************************************VM**/
trace 'O'
signal on Error
parse arg QMFobj QMFname ' FROM ' "'" DSNfrom "'" opt .
parse var QMFname QMFname .
If DSNfrom = '' | QMFobj = '' ,
 | (QMFobj<>'PROC' & QMFobj<>'QUERY' & QMFobj<>'FORM'),
 | (opt<>'' & opt <> 'BACKUP')
then do; say '*ERROR* Invalid syntax'; exit 8; end

Address ISPEXEC
"CONTROL ERRORS RETURN"

say "Allocating library '"DSNfrom"' ..."
"LMINIT  DATAID(DDfrom) DATASET('"DSNfrom"') ENQ(SHRW)"
"LMOPEN  DATAID("DDfrom") OPTION(INPUT)"

say 'Finding directory member $$DIR$$ ...'
"LMMFIND DATAID("DDfrom") MEMBER($$DIR$$)"

say "Reading directory member $$DIR$$ ..."
MBRname=''
signal off error
"LMGET DATAID("DDfrom") DATALOC(entry) DATALEN(entrylen)" ,
           "MODE(INVAR) MAXLEN(5000)"
do i=1 by 1 while rc=0
  parse var entry iMBRname iQMFobj iQMFname .
  if iQMFobj = QMFobj & iQMFname = QMFname
   then MBRname=iMBRname
  "LMGET DATAID("DDfrom") DATALOC(entry) DATALEN(entrylen)" ,
           "MODE(INVAR) MAXLEN(5000)"
end;
if rc<>8 then Signal Error
Signal On Error
if MBRname='' then
 do; ZERRLM='No entry for' QMFobj QMFname; Signal Error; end

say "Found directory entry with" MBRname QMFobj QMFname

"VGET (ssid)";
if opt='BACKUP' then Call BackUp;

Call QMF  'START (S='ssid 'DSQSCMD=DSQSCMDE DSQSMODE=BATCH'
Call QMF  "IMPORT" QMFobj "FROM '"DSNfrom"("MBRname")'"
Call QMF  "SAVE" QMFobj "AS " QMFname "(CONFIRM=NO SHARE=YES"
Call QMF  "EXIT"

"LMCLOSE DATAID("DDfrom")"
"LMFREE  DATAID("DDfrom")"
Exit 0;

QMF:
  Signal Off Error
  arg qcmd
  say "Running" qcmd "..."
  CALL DSQCIX qcmd
  IF DSQ_RETURN_CODE <> DSQ_SUCCESS THEN CALL PGMEXIT 8
return

BackUp:
 opt='';
 export="QEXPORT" QMFobj QMFname,
          "TO '"DSNfrom".OBSOLETE'"
 say "Running" export "..."
 Address TSO export;
 return;

PGMEXIT:
  ARG RETCODE
  CALL DSQCIX 'EXIT'
  ZERRLM = "see DSQDEBUG output for detail info."
  Signal Error

Error:
 say '*ERROR*' strip(ZERRLM)
 "LMCLOSE DATAID("DDfrom")"
 "LMFREE DATAID("DDfrom")"
 Exit 12
