/*REXX****************************************************************/
/* QEXPORT export a QMF object using $$DIR$$ member                  */
/*  Format:         QUERY                                            */
/*          QEXPORT PROC    QMFname  TO 'DSNto' Ý(ERASE¨             */
/*                  FORM                                             */
/*****************************************************************VM**/
trace 'O'
signal on Error
parse arg QMFobj QMFname ' TO ' "'" DSNto "'" "(" ERASE .
parse var ERASE ERASE .
parse var QMFname QMFname .
If DSNto = '' | QMFobj = '' ,
 | (QMFobj<>'PROC' & QMFobj<>'QUERY' & QMFobj<>'FORM')
then do; say '*ERROR* Invalid syntax'; exit 8; end
If ERASE <> '' & ERASE <> 'ERASE'
then do; say '*ERROR* Invalid syntax:' ERASE; exit 8; end

o=substr(QMFobj,1,1)
Address ISPEXEC
"CONTROL ERRORS RETURN"
say "Allocating library '"DSNto"' ..."
"LMINIT  DATAID(DDto) DATASET('"DSNto"') ENQ(SHRW)"
"LMOPEN  DATAID("DDto") OPTION(INPUT)"
say 'Finding directory member $$DIR$$ ...'
signal Off Error
"LMMFIND DATAID("DDto") MEMBER($$DIR$$)"
if rc<>0 then do;
 if rc=8 then
 do;
   signal on Error
   say '*WARNING* Member $$DIR$$ not found, will create...'
  "LMCLOSE DATAID("DDto")"
  "LMOPEN  DATAID("DDto") OPTION(OUTPUT)"
entry='MBRname  QMFtype QMFname                     Date     Time '
  "LMPUT   DATAID("DDto") DATALOC(entry) DATALEN("length(entry)") ",
           "MODE(INVAR)"
entry='-------- ------- --------------------------- -------- --------'
  "LMPUT   DATAID("DDto") DATALOC(entry) DATALEN("length(entry)") ",
           "MODE(INVAR)"
  ZLCNORC=2; ZLUSER=userid()
  ZLCDATE=date('O'); ZLMDATE=date('O'); ZLMTIME=time();
  "LMMADD  DATAID("DDto") MEMBER($$DIR$$) STATS(YES)"
  "LMCLOSE DATAID("DDto")"
  "LMOPEN  DATAID("DDto") OPTION(INPUT)"
  "LMMFIND DATAID("DDto") MEMBER($$DIR$$)"
 end;
 else Signal Error
end;
say "Reading directory member $$DIR$$ ..."
Signal Off Error
  maxN=0
  entry.0=0
  entry=copies(' ',79)
  "LMGET DATAID("DDto") DATALOC(entry) DATALEN(entrylen)" ,
           "MODE(INVAR) MAXLEN(5000)"
do i=1 by 1 while rc=0
  entry.i=entry; entry.0=i
  parse var entry iMBRname iQMFobj iQMFname .
  parse var iMBRname io 2 innnnnnn .
  if io=o & iQMFobj = QMFobj & datatype(innnnnnn,'W')
   then maxN=max(maxN,innnnnnn)
  entry=copies(' ',79)
  "LMGET DATAID("DDto") DATALOC(entry) DATALEN(entrylen)" ,
           "MODE(INVAR) MAXLEN(5000)"
end;
if rc<>8 then Signal Error
Signal On Error
nMBRname=o||right(maxN+1,7,'0')
say "New member name will be" nMBRname"..."
i=entry.0+1; entry.0=i;
entry.i=nMBRname left(QMFobj,7) left(QMFname,max(27,length(QMFname))),
        date('S') time()
"LMCLOSE DATAID("DDto")"

say "Running" "EXPORT" QMFobj QMFname "TO '"DSNto"($$TMP$$)' (C=N"
"VGET (ssid)";
Signal Off Error
CALL DSQCIX 'START (S='ssid 'DSQSCMD=DSQSCMDE DSQSMODE=BATCH'
IF DSQ_RETURN_CODE <> DSQ_SUCCESS THEN CALL PGMEXIT 8
CALL DSQCIX "EXPORT" QMFobj QMFname "TO '"DSNto"($$TMP$$)' (C=N"
IF DSQ_RETURN_CODE <> DSQ_SUCCESS THEN CALL PGMEXIT 8
CALL DSQCIX "EXIT"
Signal On  Error

"LMOPEN  DATAID("DDto") OPTION(OUTPUT)"

say "Updating member $$DIR$$ ..."
do i=1 to entry.0
  entry=entry.i
  "LMPUT   DATAID("DDto") DATALOC(entry) DATALEN("length(entry)") ",
           "MODE(INVAR)"
end;
ZLCNORC=entry.0; ZLUSER=userid()
  ZLCDATE=date('O'); ZLMDATE=date('O'); ZLMTIME=time();
"LMMREP  DATAID("DDto") MEMBER($$DIR$$) STATS(YES)"

say "Renaming $$TMP$$ to "nMBRname" ..."
"LMMREN  DATAID("DDto") MEMBER($$TMP$$) NEWNAME("nMBRname")"

"LMCLOSE DATAID("DDto")"
"LMFREE  DATAID("DDto")"

If ERASE = 'ERASE' then do;
 say "Running" "ERASE" QMFobj QMFname "(C=N"
 Signal Off Error
 CALL DSQCIX 'START (S='ssid 'DSQSCMD=DSQSCMDE DSQSMODE=BATCH'
 IF DSQ_RETURN_CODE <> DSQ_SUCCESS THEN CALL PGMEXIT 8
 CALL DSQCIX "ERASE" QMFobj QMFname "(C=N"
 IF DSQ_RETURN_CODE <> DSQ_SUCCESS THEN CALL PGMEXIT 8
 CALL DSQCIX "EXIT"
 Signal On  Error
end;

Exit 0;

PGMEXIT:
  ARG RETCODE
  CALL DSQCIX 'EXIT'
  ZERRLM = "see DSQDEBUG output for detail info."
  Signal Error
Error:
 say '*ERROR*' strip(ZERRLM)
 "LMCLOSE DATAID("DDto")"
 "LMFREE DATAID("DDto")"
 Exit 12
