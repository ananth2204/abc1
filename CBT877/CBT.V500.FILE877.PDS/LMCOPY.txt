/*REXX****************************************************************/
/* LMCOPY copies a member of a PDS                                   */
/*  Format: LMCOPY 'DSNfrom(MBRfrom)' 'DSNto(MBRto)' ÝREPLACE|BACKUP¨*/
/*****************************************************************VM**/
trace 'O'
signal on Error
parse arg "'" dsn1 "'" . "'" dsn2 "'" opt
parse var dsn1 DSNfrom "(" MBRfrom ")"
parse var dsn2 DSNto   "(" MBRto   ")"
If DSNfrom = '' | MBRfrom = '' | DSNto = '' | MBRto = '',
 | (opt<>'REPLACE' & opt<>'BACKUP' & opt<>'') then
do; say '*ERROR* Invalid syntax'; exit 8; end

Address ISPEXEC
"CONTROL ERRORS RETURN"

if opt='BACKUP' then call BackUp;

say "Allocating input dataset '"DSNfrom"'..."
"LMINIT DATAID(DDFROM) DATASET('"DSNfrom"') ENQ(SHR)"
say "Allocating output dataset '"DSNto"'..."
"LMINIT DATAID(DDTO)   DATASET('"DSNto"')   ENQ(SHR)"
say 'Copying member' MBRfrom 'to ' MBRto '...'
"LMCOPY FROMID("DDFROM") FROMMEM("MBRfrom") ",
             "TODATAID("DDTO"  )   TOMEM("MBRto")" opt
"LMFREE DATAID("DDFROM")"
"LMFREE DATAID("DDTO")"
Exit 0;

BackUP:
 opt='';
 export = "LMEXPORT '"dsn2"' TO '"DSNto".OBSOLETE'";
 say "Running" export "..."
 signal off Error
 Address TSO export;
 return;
Error:
 say '*ERROR*' strip(ZERRLM)
 "LMFREE DATAID("DDFROM")"
 "LMFREE DATAID("DDTO")"
 Exit 12
