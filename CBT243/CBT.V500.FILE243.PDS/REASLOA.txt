*PROCESS M,OPT(TIME),S,GN;
 /*
//PGMVCI JOB 'IBI','V CHERNYAK',REGION=1M,NOTIFY=PGMVC,CLASS=0,
//        MSGCLASS=A,MSGLEVEL=(1,1)
//PROCLIB  JCLLIB ORDER=PGMVYC.REASM.PLI
//        EXEC PLIXCL,PARM.LKED='LET,NCAL'
//PLI.SYSIN     DD DSN=PGMVYC.REASM.PLI(REASLOA),DISP=SHR
//PLI.SYSLIB    DD DSN=PGMVYC.REASM.PLI,DISP=SHR
//LKED.SYSLMOD  DD DSN=PGMVYC.REASM.SUBLOAD(REASLOA),DISP=SHR
//
 */
 REASLOA: PROC(MODE,DSNAME,VOLUME,MEMBER,CSECT,BLOCK)
              REORDER RETURNS(BIN FIXED);
   DCL    MODE     CHAR(*),
          DSNAME   CHAR(*),
          VOLUME   CHAR(*),
          MEMBER   CHAR(*),
          CSECT    CHAR(*),
          BLOCK    CHAR(*),
          LOCVAR   CHAR(128)     VAR,
          RC       BIN FIXED     INIT(1),
          ZMEM     CHAR(80)      INIT(''),
          ERRMSG   CHAR(8)       INIT(''),
          INBLK    CHAR(32767),
          MEMLOOP  BIT(1)        INIT('0'B) STATIC INT,
          PREVMEM  CHAR(8)       INIT('')   STATIC INT,
          PREVDD   CHAR(8)       INIT('')   STATIC INT,

          DDNAME   CHAR(8)   INIT('') STATIC INT,
          ORG      CHAR(2)   INIT(''),
          RECFM    CHAR(8)   INIT(''),
          PRJ      CHAR(8)   INIT(''),
          LIB      CHAR(8)   INIT(''),
          TYP      CHAR(8)   INIT(''),
          MEM      CHAR(8)   INIT(''),
          CSE      CHAR(8)   INIT(''),
          DSN      CHAR(44)  INIT(''),
          VOL      CHAR(6)   INIT(''),
          PSWD     CHAR(8)   INIT(''),
          ZZCMD1   CHAR(60)  INIT(''),
          LEN      CHAR(8)   INIT(''),
          F2                 INIT(2)  BIN FIXED(31),
          F3                 INIT(3)  BIN FIXED(31),
          F5                 INIT(5)  BIN FIXED(31),
          F6                 INIT(6)  BIN FIXED(31),
          F8                 INIT(8)  BIN FIXED(31),
          F12                INIT(12) BIN FIXED(31),
          F44                INIT(44) BIN FIXED(31),
          F60                INIT(60) BIN FIXED(31),
          F80                INIT(80) BIN FIXED(31),
          F32767          INIT(32767) BIN FIXED(31),
          $NEXTEL        EXT ENTRY(CHAR(*) VAR) RETURNS(CHAR(100) VAR),
          ISPLINK            ENTRY  EXT OPTIONS(ASM INTER RETCODE),
          (PLIRETV,SUBSTR,LENGTH)   BUILTIN;

   CALL ISPLINK ('VDEFINE ', 'DD      ', DDNAME,   'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'ORG     ', ORG,      'CHAR ',  F2 );
   CALL ISPLINK ('VDEFINE ', 'RECFM   ', RECFM,    'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'PRJ1    ', PRJ,      'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'LIB1    ', LIB,      'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'TYP1    ', TYP,      'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'MEM     ', MEM,      'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'CSECT   ', CSE,      'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'DSN     ', DSN,      'CHAR ',  F44);
   CALL ISPLINK ('VDEFINE ', 'VOL     ', VOL,      'CHAR ',  F6 );
   CALL ISPLINK ('VDEFINE ', 'PSWD    ', PSWD,     'CHAR ',  F8 );
   CALL ISPLINK ('VDEFINE ', 'ZZCMD1  ', ZZCMD1,   'CHAR ',  F60);
   CALL ISPLINK ('VDEFINE ', 'INBLK   ', INBLK,    'CHAR ',  F32767);
   CALL ISPLINK ('VDEFINE ', 'LEN     ', LEN,      'CHAR ',  F8 );

   SELECT (MODE);
     /************************************/
     /*  A L L O C A T E     DATA SET    */
     /************************************/
     WHEN ('ALLOC') DO;
 L_DISP:IF MEMLOOP THEN DO;
           MEMBER = PREVMEM;
           DDNAME = PREVDD;
           CALL ISPLINK ('LMCLOSE ', DDNAME);
           RC = 0;
        END;
        ELSE DO;
          CALL ISPLINK ('DISPLAY ', 'REASM01 ', ' ');
          RC = PLIRETV();
          IF DDNAME ¬= '' THEN DO;
             CALL ISPLINK ('LMFREE  ', DDNAME);
             DDNAME = '';
          END;
          CSECT = CSE;
          IF RC¬=0  |  ZZCMD1='R' THEN GOTO L_RET;  /* RECOVERY/END */
          CALL ISPLINK ('LMINIT ', 'DD ', PRJ, LIB, ' ', ' ',
                        ' ', TYP, DSN, ' ', VOL, PSWD,
                        'SHR ', 'ORG ');
          RC = PLIRETV();
          IF RC¬=0 THEN DO;
             CALL ISPLINK('VCOPY  ', 'ZERRMSG ', F8, ERRMSG, 'MOVE ');
             CALL ISPLINK('SETMSG ', ERRMSG);
             GOTO L_DISP;
          END;
          IF ORG ¬= 'PO' & ORG ¬= 'POU'  THEN DO;
             CALL ISPLINK('SETMSG ','REAS065 ');
             GOTO L_DISP;
          END;
        END;

        CALL ISPLINK ('LMOPEN ', DDNAME, 'INPUT ', ' ', 'RECFM ' );
        IF RECFM ¬= 'U' & RECFM ¬= 'UT' THEN DO;
           CALL ISPLINK ('LMCLOSE ', DDNAME);
           CALL ISPLINK('SETMSG ','REAS066 ');
           GOTO L_DISP;
        END;
        IF MEM=':' | MEM=' ' | INDEX(MEM,'*') THEN DO;
           IF MEM=':' THEN MEM='*';
           MEMLOOP = '1'B;
           PREVMEM = MEMBER;
           PREVDD  = DDNAME;
           CALL ISPLINK ('LMMDISP ', DDNAME, 'DISPLAY ', MEM);
           RC = PLIRETV();
           IF RC¬=0 THEN DO;
              CALL ISPLINK ('LMMDISP ', DDNAME, 'FREE ');
              CALL ISPLINK ('LMCLOSE ', DDNAME);
              MEMLOOP = '0'B;
              GOTO L_DISP;
           END;
           ELSE DO;
              CALL ISPLINK ('VCOPY ','ZLMEMBER ', F80, ZMEM,'MOVE ');
              MEM = ZMEM;
              CALL ISPLINK ('VPUT ', '(MEM)', 'PROFILE ');
              CALL ISPLINK ('VPUT ', '(MEM)', 'ASIS ');
              CALL ISPLINK ('LMMDISP ', DDNAME, 'FREE ');
           END;
        END;
        CALL ISPLINK ('LMMFIND ', DDNAME, MEM,
                      ' ', ' ', ' ', ' ', 'YES');
        RC = PLIRETV();
        CALL ISPLINK ('LMCLOSE ', DDNAME);
        IF RC ¬= 0 THEN DO;
           CALL ISPLINK ('SETMSG ', 'REAS059 ');
           GOTO L_DISP;
        END;

        DSNAME = DSN;
        IF DSNAME = '' THEN
           DSNAME = $NEXTEL(PRJ) || '.' ||
                    $NEXTEL(LIB) || '.' ||
                    $NEXTEL(TYP);
        ELSE DO;
           LOCVAR = $NEXTEL(DSN);
           IF (SUBSTR(LOCVAR,1,1) = '''') THEN
              LOCVAR = SUBSTR(LOCVAR,2);
           IF (SUBSTR(LOCVAR,LENGTH(LOCVAR),1) = '''') THEN
              LOCVAR = SUBSTR(LOCVAR,1,LENGTH(LOCVAR)-1);
           DSNAME = LOCVAR;
        END;

        VOLUME = VOL;
        MEMBER = MEM;
        CSECT  = CSE;
     END;

     WHEN ('OPEN') DO;
        CALL ISPLINK ('LMOPEN  ', DDNAME, 'INPUT ');
        CALL ISPLINK ('VGET ', '(MEM)' );
        CALL ISPLINK ('LMMFIND ', DDNAME, MEM,
                      ' ', ' ', ' ', ' ', 'YES');
        RC = PLIRETV();
     END;

     WHEN ('CLOSE') DO;
        CALL ISPLINK ('LMCLOSE ', DDNAME);
        RC = 0;
     END;

     WHEN ('READ') DO;
       CALL ISPLINK ('LMGET ',DDNAME,'INVAR ','INBLK ','LEN ',F32767);
       RC = PLIRETV();
       BLOCK = INBLK;
       IF RC¬= 0 THEN
          CALL ISPLINK ('LMCLOSE ', DDNAME);
     END;

   END;

 L_RET:
   CALL ISPLINK ('VDELETE ',
   '(DD,ORG,RECFM,PRJ1,LIB1,TYP1,MEM,CSECT,DSN,VOL,PSWD,ZZCMD1,
     INBLK,LEN)');

   RETURN (RC);

 END REASLOA;
