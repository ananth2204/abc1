*PROCESS M,OPT(TIME),S,GN;
 /*
//PGMVCI  JOB 'IBI','V CHERNYAK',REGION=1000K,NOTIFY=PGMVC,CLASS=A,
//        MSGCLASS=A,MSGLEVEL=(1,1)
//PROCLIB  JCLLIB ORDER=PGMVYC.REASM.PLI
//        EXEC PLIXCL,PARM.LKED='LET,NCAL'
//PLI.SYSIN     DD DSN=PGMVYC.REASM.PLI(REASCNV),DISP=SHR
//PLI.SYSLIB    DD DSN=PGMVYC.REASM.PLI,DISP=SHR
//LKED.SYSLMOD  DD DSN=PGMVYC.REASM.SUBLOAD(REASCNV),DISP=SHR
//
 */
         /*   --------------------------------   */
         /*   UTILITY    SUBROUTINES FOR REASM   */
         /*   --------------------------------   */
 /*********************************************************************/
 /*  CONVERT FROM HEX TO BIN FIXED 31                                 */
 /*********************************************************************/
 $HBF:
     PROC(HEX)  REORDER RED  RETURNS(BIN FIXED(31));
     DCL    HEX     CHAR(*) VAR,
            ALFA    CHAR(16) STATIC INT INIT('0123456789ABCDEF'),
            (LENGTH,SUBSTR,INDEX,UNSPEC) BUILTIN,
            (I,L,K) BIN FIXED INIT(0),
            J       BIN FIXED(31) INIT(0);
      L=LENGTH(HEX);
      DO I=L TO 1 BY -1;
         K=INDEX(ALFA,SUBSTR(HEX,I,1));
         IF K=0 THEN RETURN(-1);
         J=J+(K-1)*(16**(L-I));
      END;
      RETURN(J);
 END $HBF;

*PROCESS M,OPT(TIME),S,GN;
 /*********************************************************************/
 /*  CONVERT FROM HEX TO BIT 16                                       */
 /*********************************************************************/
 $HB:
     PROC(HEX)  REORDER RED RETURNS(BIT(16));
     DCL  HEX CHAR(*) VAR,
          (SUBSTR,UNSPEC) BUILTIN,
          J   BIN FIXED(31);
     DCL  $HBF EXT ENTRY(CHAR(*) VAR) RETURNS(BIN FIXED(31));
     J = $HBF(HEX);
     RETURN (SUBSTR(UNSPEC(J),17));
 END $HB;

*PROCESS M,OPT(TIME),S,GN;
 /*********************************************************************/
 /*  BIN(31) -> HEX(8) CONVERTION SUBROUTINE                          */
 /*********************************************************************/
 $BH:
     PROC(BIN31) REORDER RED RETURNS(CHAR(8));
     DCL BIN31 BIN FIXED(31),
         IPTR  PTR,
         #I    CHAR(4) BASED(IPTR);
     DCL $CH   ENTRY(CHAR(*) VAR) EXT RETURNS(CHAR(80) VAR);
     DCL ADDR  BUILTIN;
     IPTR = ADDR(BIN31);
     RETURN($CH(#I));
 END $BH;

*PROCESS M,OPT(TIME),S,GN;
 /*********************************************************************/
 /*  CHAR(*) -> HEX(*) CONVERTION SUBROUTINE                          */
 /*********************************************************************/
 $CH:
     PROC(CH) REORDER RED RETURNS(CHAR(80) VAR);
     DCL    CH         CHAR(*)  VAR,
            B          CHAR(1),
         1 $B          BASED($BPTR),
          2  B1        BIT(4),
          2  B2        BIT(4),
            $BPTR      PTR,
            I          BIN FIXED,
            RT         CHAR(80) VAR INIT(''),
            $HEX(0:15) CHAR(1) STATIC INT INIT
     ('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');
     DCL (LENGTH, SUBSTR, ADDR) BUILTIN;

     DO I=1 TO LENGTH(CH);
        B     = SUBSTR(CH,I,1);
        $BPTR = ADDR(B);
        RT    = RT || $HEX(B1) || $HEX(B2);
     END;
     RETURN(RT);
 END $CH;

*PROCESS M,OPT(TIME),S,GN;
 %SKIP;
 /*********************************************************************/
 /*  CONVERT BINARY -> CHAR WITHOUT LEADING BLANKS                    */
 /*********************************************************************/
 $DIGIT:
     PROC(BINF) REORDER RED RETURNS(CHAR(16) VAR);
     DCL  BINF BIN FIXED(31),
          C    CHAR(16) VAR;
     DCL  (VERIFY, SUBSTR) BUILTIN;
     PUT STRING(C) EDIT(BINF)(F(16));
     RETURN(SUBSTR(C,VERIFY(C,' ')));
 END $DIGIT;

*PROCESS M,OPT(TIME),S,GN;
 /*********************************************************************/
 /*  CONVERT IMMIDIATE OPERAND TO CHAR STRING                         */
 /*********************************************************************/
 $IMM:
     PROC(IMM)   REORDER RED RETURNS(CHAR(5) VAR);
     DCL  IMM    BIT(8),
          VAL    CHAR(2),
          (SUBSTR,UNSPEC) BUILTIN,
          $HEX(0:15) CHAR(1) STATIC INT INIT
     ('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');

     SUBSTR(VAL,1,1) = $HEX(SUBSTR(UNSPEC(IMM),1,4));
     SUBSTR(VAL,2,1) = $HEX(SUBSTR(UNSPEC(IMM),5,4));
     RETURN('X''' || VAL || '''');
 END $IMM;

*PROCESS M,OPT(TIME),S,GN;
 /*********************************************************************/
 /*  NEXTEL - TYPE SUBROUTINE                                         */
 /*********************************************************************/
 $NEXTEL:
     PROC(STR) REORDER RETURNS(CHAR(80) VAR);

 DCL STR    CHAR(80) VAR,
     RT     CHAR(80) VAR INIT(''),
     (I,J,K,L)  BIN FIXED,
     (LENGTH,INDEX,VERIFY,SUBSTR,MIN,MAX) BUILTIN;

     DO WHILE (LENGTH(STR)>1 &
               (SUBSTR(STR,1,1)=' ' | SUBSTR(STR,1,1)=',') );
        STR = SUBSTR(STR,2);
     END;

     L=LENGTH(STR);
     I=INDEX(STR,' ');
     J=INDEX(STR,',');
     IF (L>1) & ((I>1) | (J>1)) THEN DO;
        K = MIN(I,J);
        IF (K=0) THEN K = MAX(I,J);
        RT=SUBSTR(STR,1,K-1);
        STR=SUBSTR(STR,K+1);
     END;
     ELSE DO;
        RT=STR;
        STR='';
     END;
     RETURN(RT);
 END $NEXTEL;

*PROCESS M,OPT(TIME),S,GN;
 /*********************************************************************/
 /*   RECIEVE NAME FOR DUMMY                                          */
 /*********************************************************************/
 $DNAME:
       PROC(P,OFFSET,II) REORDER RED RETURNS(CHAR(8) VAR);
 DCL   (P,Q)          PTR,
       (OFFSET,II)    BIN FIXED(31),
       V              CHAR(8) VAR;
 DCL   (SUBSTR,NULL)  BUILTIN;
 DCL   $NEXTEL ENTRY(CHAR(*) VAR)   EXT RETURNS(CHAR(20) VAR);
 DCL   $BH     ENTRY(BIN FIXED(31)) EXT RETURNS(CHAR(8));
 %NOPRINT;
 %INCLUDE REASMBAS;
 %PRINT;

       V    = $NEXTEL(SUBSTR(P->LBLOCK.NAME,2,3));
       V    = V || SUBSTR($BH(OFFSET),4,5);
       II   = 1;

       Q = P->LBLOCK.ADUMMY;
       DO WHILE(Q¬=NULL);
          IF Q->DUMMY.OFF = OFFSET &
             Q->DUMMY.NAME  ¬= ''     THEN DO;
             V  = Q->DUMMY.NAME;
             II = 0;
          END;
          Q = Q->DUMMY.NEXT;
       END;

       RETURN($NEXTEL(V));
 END $DNAME;
