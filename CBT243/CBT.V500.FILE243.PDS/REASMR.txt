 %PAGE;
 /********************************************************************/
 /*      REASM 'RESTORE STATUS' SUBROUTINE                           */
 /********************************************************************/
 REASMR:
     PROC;

 DCL (Q,P)      PTR,
     IDENT      CHAR(30) VAR,
     (I,J,K,L)  BIN FIXED;

     I = REASMRC(SAVE,'C');
     IF I¬=0 THEN RETURN;

     OPEN FILE(SAVEFL) TITLE(SAVE) INPUT;

     GET FILE(SAVEFL) LIST(IDENT);

     GET FILE(SAVEFL)  LIST(TEXTLEN);
     CALL ALLOCATETEXT(TEXTLEN);
     TEXTIND = TEXTLEN;             /***/
     GET FILE(SAVEFL) LIST(TEXT);
     CALL COPYTEXT();

     GET FILE(SAVEFL) LIST(DSN,MEMBER,CSECT,OFFSET,
                           $OFFSET,FOFFSET,BOFFSET,
                           ESDID,ARRINDX,#FIND,BLOCK_CMD);

     GET FILE(SAVEFL) LIST(DIM_ESD_ARRAY);
     ALLOCATE ESD_ARRAY(DIM_ESD_ARRAY);
     GET FILE(SAVEFL) LIST(ESD_ARRAY);

     GET FILE(SAVEFL) LIST(I);
     DSC_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE DSC;
        IF Q¬=NULL THEN Q->DSC.NEXT=DSC_PTR;
                   ELSE    DSC_START=DSC_PTR;
        GET FILE(SAVEFL) LIST(DSC);
        Q=DSC_PTR;
        DSC.NEXT=NULL;
     END;

     GET FILE(SAVEFL) LIST(I);
     RLD_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE RLD;
        IF Q¬=NULL THEN Q->RLD.NEXT=RLD_PTR;
                   ELSE    RLD_START=RLD_PTR;
        GET FILE(SAVEFL) LIST(RLD);
        Q=RLD_PTR;
        RLD.NEXT=NULL;
     END;

     GET FILE(SAVEFL) LIST(I);
     USING_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE USING;
        IF Q¬=NULL THEN Q->USING.NEXT=USING_PTR;
                   ELSE    USING_START=USING_PTR;
        GET FILE(SAVEFL) LIST(USING);
        Q=USING_PTR;
        USING.NEXT=NULL;
     END;

     GET FILE(SAVEFL) LIST(I);
     LABL_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE LABL;
        IF Q¬=NULL THEN Q->LABL.NEXT=LABL_PTR;
                   ELSE    LABL_START=LABL_PTR;
        GET FILE(SAVEFL) LIST(LABL);
        Q=LABL_PTR;
        LABL.NEXT=NULL;
     END;

     GET FILE(SAVEFL) LIST(I);
     LBLOCK_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE LBLOCK;
        IF Q¬=NULL THEN Q->LBLOCK.NEXT=LBLOCK_PTR;
                   ELSE    LBLOCK_START=LBLOCK_PTR;
        GET FILE(SAVEFL) LIST(LBLOCK);
        Q = LBLOCK_PTR;
        LBLOCK.NEXT = NULL;
        P,LBLOCK.ADUMMY = NULL;
        IF LBLOCK.ADR = 0 THEN DO;
           CALL REASMLD(LBLOCK.NAME,LBLOCK.ADR,CONTROL);
           GET FILE(SAVEFL) LIST(K);
           DO L=1 BY 1 WHILE(L<=K);
              IF LBLOCK.ADR=0 THEN DO;
                 ALLOCATE DUMMY;
                 IF P¬=NULL THEN P->DUMMY.NEXT    = DUMMY_PTR;
                 ELSE               LBLOCK.ADUMMY = DUMMY_PTR;
              END;
              GET FILE(SAVEFL) LIST(DUMMY);
              IF LBLOCK.ADR=0 THEN DO;
                 P = DUMMY_PTR;
                 DUMMY.NEXT = NULL;
              END;
           END;
        END;
        ELSE
           CALL REASMLD(LBLOCK.NAME,LBLOCK.ADR,CONTROL);
     END;

     GET FILE(SAVEFL) LIST(I);
     COM_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE COM;
        IF Q¬=NULL THEN Q->COM.NEXT=COM_PTR;
                   ELSE    COM_START=COM_PTR;
        GET FILE(SAVEFL) LIST(COM);
        Q=COM_PTR;
        COM.NEXT=NULL;
     END;

     GET FILE(SAVEFL) LIST(I);
     QUALIFY_START=NULL;
     Q=NULL;
     DO J=1 BY 1 WHILE(J <= I);
        ALLOCATE QUALIFY;
        IF Q¬=NULL THEN Q->QUALIFY.NEXT=QUALIFY_PTR;
                   ELSE    QUALIFY_START=QUALIFY_PTR;
        GET FILE(SAVEFL) LIST(QUALIFY);
        Q=QUALIFY_PTR;
        QUALIFY.NEXT=NULL;
     END;

     CLOSE FILE(SAVEFL);
 END REASMR;
