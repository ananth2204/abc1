         Macro
.*-
.* TSO PUTLINE frontend
.* This version contains the TPUTLN module internally, it is
.* expanded at the first occurrence of the TPUTLN macro.
.* It may cause a slight performance degradation as the module
.* is fully reentrant and thus GETMAINs a work area.
.*
.* Syntax   TSOPUTLN address,length
.*  address     address of text
.*  length      length of text
.*
&mlbl    TSoPutLn &print=nogen,&dsects=YES
         lcla  &n
         lclc  &q,&l,&sect
         gblb  @@tsoputln
&l       setc  'tp&sysndx'
&sect    setc  '&sysect'
&mlbl    $la   r1,&syslist(1)
         aif   (n'&syslist eq 1 and '&syslist(1)'(1,1) eq '''').litl
         $la   r0,&syslist(2),l'&syslist(1)
         ago   .call
.litl    anop
&n       seta  k'&syslist(1)-2
         la    r0,&n
.call    l     r15,=v(TSOPUTLN)
         basr  r14,r15
         aif   (&@@tsoputln eq 0).module
         mexit
.*-
.* module
.*-
.module  anop
&@@tsoputln setb 1
         j     &l.n
         ltorg
&l.n     ds    0a
         push  using
         push  print
         print &print
*-
* TSOPUTLN module
*-
TSOPUTLN Csect
         save  (14,12)
         lr    r12,r15
         Using TSOPUTLN,r12
         Using @tputblk,r10
         lr    r2,r1                   copy text/buffer address
         lr    r3,r0                   copy text length
*- get storage
         la    r9,@tputblkl+4(r3)      blk+text length
         Getmain R,lv=(r9),loc=31
         lr    r10,r1
         lr    r0,r10
         la    r1,@tputblkl
         la    r14,=al1(0)
         la    r15,1
         mvcl  r0,r14
         st    r10,8(,r13)             chain
         st    r13,4(,r10)               save
         lr    r13,r10                     areas
*- copy data
         la    r1,4(,r3)               set length
         sll   r1,16                   to upper halfword
         st    r1,@tputlen             store as prefix
         la    r14,@tputtext           target address
         lr    r15,r3                  copy length
         mvcl  r14,r2                  copy text
*- obtain address of the upt through the extract facility
         la    r0,@tputiopl
         EXTRACT (0),'S',FIELDS=(PSB,ASID),MF=(E,@tputextr)
         l     r1,@tputiopl
         mvc   @tputupta,pscbupt-pscb(r1)
*- obtain address of the ect from the lwa control block
         l     r1,@tputiopl+4          asid
         LOCASCB ASID=(1)
         l     r1,ascbasxb-ascb(,r1)   -> asxb
         l     r1,asxblwa-asxb(,r1)    -> lwa
         mvc   @tputecta,lwapect-lwa(r1) get ect address
*- do putline
         xc    @tputecb,@tputecb
         xc    @tputiopl(16),@tputiopl
         l     r14,@tputupta
         l     r15,@tputecta
         PUTLINE PARM=@tputmfl,UPT=(r14),ECT=(r15),ECB=@tputecb,       c
               OUTPUT=(@tputlen,TERM,SINGLE,DATA),MF=(E,@tputiopl)
         lr    r5,r15
*- release storage
         l     r13,4(,r13)             <- callers save area
         Freemain R,lv=(r9),a=(r10)
*- back
         lr    r15,r5                  set return code
         lm    r2,r12,28(r13)          reload gregs
         l     r14,12(,r13)            return address
         br    r14                     and return
         ltorg
         drop  r10,r12
*-
* TSOPUTLN local dsects
*-
@tputblk  dsect
@tputsa1  ds    18a
@tputextr EXTRACT MF=L
*         org   @tputextr
@tputecb  ds    a
@tputecta ds    a
@tputupta ds    a
*         org
@tputiopl ds    4a
@tputmfl  PUTLINE MF=L
@tputmsgl ds    a
@tputmsg  ds    cl255
@tputlen  ds    a
@tputtext ds    0c
@tputblkl equ   *-@tputblk
         aif   ('&dsects' ne 'YES').dsctn
*-
* TSOPUTLN IBM dsect expansions (if requested)
*-
         IKJPSCB
         IHAASCB
         IHAASXB
         IKJEFLWA
.dsctn   anop
         pop   print
.* rejoin csect
&sect    Csect
         pop  using
         MEND
