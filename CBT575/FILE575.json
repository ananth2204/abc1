{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012406000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 529074, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE575.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE575.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\t\\x10'", "DS1TRBAL": "b':\\n'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04J\\x00\\x08\\x04K\\x00\\x02\\x00\\n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x12?\\x01\\x02\\x12?\\x18#\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-03T00:00:00", "modifydate": "2002-05-03T18:23:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 446    FILE:  575\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT446.FILE575\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    3120    PO\n\n   PDS117I 16 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,584 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/03/02    18:23:56    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DESC1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x02\\x12/\\x01\\x02\\x12/\\x17\\x03\\x00W\\x00W\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-02T00:00:00", "modifydate": "2002-05-02T17:03:45", "lines": 87, "newlines": 87, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  Jes spool archiver\nDate:     Thu, 2 May 2002 10:23:00 -0500\nFrom:     \"Thomas G Hutchins\" <tom.hutchins@bat.agcocorp.com>\nTo:       sbgolob@attglobal.net, sbgolob@aol.com\n\nDear Sam,\n\n        I am sending you 2 files which contain an updated \"SHARE\"\nutility which allows you to list what is on a JES2 offloaded data\nset, print any or all the contents of a JES2 offloaded data set\nor create a JES2 offloaded data set from multiple JES2 offloaded\ndata sets.\n\n        We use this to store our product installation printouts to\noffloaded tapes.  This spares us from keeping paper copies and\ndoes not use space in the system report archiver.  The utility is\nknown as \"SPOOLSEL\" on the SHARE site.  I modified their code to\nwork in an OS/390 environment.\n\n        Our MIS department is being out sourced by the end of\nJune 2002.  I had meant to send this sooner but good intentions\ngo nowhere.  The documentation for using the utility is in the\nSRCLIB as $$DOC.  The JCL necessary to assemble and link is in\nSRCLIB as SPOOLASM.  You can contact me for now as:\n\nThomas Hutchins\nSr. OS/390 Systems Programmer\nAGCO Corp\n1500 N Raddant RD\nBatavia, IL\n(630) 406-3312\ntom.hutchins@bat.agcocorp.com\n\n>From the original note I sent the other System Programmers:\n\nI would like you to consider the following as a standard when\ninstalling a new product or applying maintenance to an existing\none.  We get overwhelmed by the amount of printout that an\ninstall uses.  Some of the printouts will get printed and filed,\nbut the rest? I have tested the following on many installs.\n\n1. Provide all of your install jobs with a JOBPARM \"forms\"\n   statement. If you forget, don't worry. You can use IOF to change\n   the forms name. Use a relevant form for your product: i.e. (\n   PANV, Panvalet / SYNC, Syncsort / SMPE, Operating System ).\n   LINES=9999 will stop annoying \"ESTIMATED LINES EXCEEDED\"\n   messages.\n\n      /*JOBPARM LINES=9999,FORMS=????\n\n2. Send all of the installation printout to RMT2.  You need it to\n   hang around.  And don't use class Q, it disappears in 3 days.\n   Class T will stay.\n\n      //jobname JOB (6948),MSGCLASS=T\n      /*ROUTE PRINT RMT2\n\n3. When the install or maintenance is finished, use JES2 commands\n   or IOF to off load the listings based on the JES2 \"form\" id to\n   tape (3490) and using this data set naming convention:\n\n   SFT1.JES2OFFL.prod.vers.Dyyddd\n\n       prod    -  short form for product generally 4 chars\n       vers    -  version reference\n       yyddd   -  julian year and date\n\n4. After off loading the tape, go to CA-1 and update the tape\n   volser or data set name to an expiration period of CATALOG.\n   JES2 will not allow retpd of 99000 for CA-1.\n\nThe first 2 qualifiers will allow anyone immediate access to off\nloaded listings for any product via DSN or ISPF 3.4 wild carding\nwithout doing extensive catalog searches.\n\nYou can IEBGENER the tape to another name to provide a backup\ncopy.  Still cheaper than paper or filling the $AVRS file.\n\nThe listings can be \"received\" back into the JES2 spool at any\ntime you need to check something. You always have access to the\nlistings without keeping mounds of paper.\n\nI have found and updated a program, SPOOLSEL, that can read the\ntape and list or print its contents.  See the documentation in\nSFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB($$DOC).  SPOOLSEL resides in\nLink listed library, SYS2.LINKLIB.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$DOC": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00E\\x01\\x02\\x12/\\x01\\x02\\x12/\\x159\\x00C\\x00C\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-02T00:00:00", "modifydate": "2002-05-02T15:39:45", "lines": 67, "newlines": 67, "modlines": 0, "user": "VHUTCH"}, "text": "IN-HOUSE WRITTEN PROGRAM OR SYSTEM:\nNAME:                SPOOLSEL\nRELATED SYSTEM:      JES2/NJE Spool Offloader\nPURPOSE:             Multi-purpose offload utility.\n                     1. List conents of offloaded dataset\n                     2. Print selected members of dataset\n                     3. Create subset of offloaded dataset\nTYPE OF LANGUAGE:    ASSEMBLER\nSOURCE NAME:         SPOOLSEL\nSOURCE LOCATION:     SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB\nMACRO LOCATION:      SFT1.CUSTMODS.JES2.SPOOLSEL.MACLIB\nOBJECT NAME:         n/a\nOBJECT LOCATION:     n/a\nLOAD NAME:           SPOOLSEL\nLOAD LOCATION:       SYS2.LINKLIB\nPROC MEMBERS:        n/a\nPROC LOCATION:       n/a\nCOMPILE/ASSEMBLE:    SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLASM)\nCOMP/ASSMBL OPTS:    SYSPARM((NOGEN,NOGEN,NODATA,NOGEN,NOGEN,240))\nLINKAGE EDITOR OPTS: AMODE(24), RMODE(24)\nFILES INVOLVED:\n                     SYSUT1   - defining input data set,\n                                (offloaded spool data set)\n                                mandatory in all modes.\n                     SYSPRINT - defining printout data set\n                                (messages and list info)\n                                mandatory in all modes.\n                     PRNT???? - dynamically allocated printout data\n                                sets which will receive selected jobs\n                                outputs in print mode.\n                     SYSIN    - defining input data set\n                                (select control cards)\n                                mandatory in select and print\n                     SYSUT2   - defining output data set\n                                (offloaded spool sub-set)\n                                mandatory in select mode.\nPARM CHANGES:\n                     HEX    - hex print of blocks headers\n                     LIST   - list the contents of the spool offload\n                              data set\n                     MERGE  - merge the contents of spool offload\n                              data sets\n                     PRINT  - print the selected jobs outputs onto\n                              printout data set\n                     SELECT - select the requested jobs creating\n                              selective copy\n                     absence of the parm field implies list option only.\nEXECUTION JCL:       SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLXHE)\n                     SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLXLS)\n                     SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLXMG)\n                     SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLXPR)\n                     SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLXSL)\nSPECIAL CONDITIONS:  May require re-assembly when changing versions of\n                     JES2.\nIN-DEPTH INFO:       Program reads an NJE formatted spool offload data\n                     set and processes it according to the JCL parameter\n                     and control cards.  A listing of the contents of\n                     the dataset provide job name and number of every\n                     member.  Print provides a printout of selective or\n                     all members on the offload dataset.  All printouts\n                     are divided such that each printout occupies a\n                     separate SYSOUT.  Select allows a subset of the\n                     offload dataset to be built.\nPRODUCTION DATE:     June 28,1999\nMAINTENANCE DATE:    LIST DATES THAT SYSTEM/PROGRAM HAS BEEN CHANGED\nCHANGE LOG:          LIST ALL CHANGES TO THE SYSTEM/PROGRAM AFTER IT IS\n                     IN PRODUCTION.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$HUTCH1": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\x02\\x12?\\x01\\x02\\x12?\\x18\\x12\\x00+\\x00\\xc3\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-03T00:00:00", "modifydate": "2002-05-03T18:12:14", "lines": 43, "newlines": 195, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: Rexx Edit Macros\nDate: Fri, 3 May 2002 12:03:00 -0500\nFrom: \"Thomas G Hutchins\" <tom.hutchins@bat.agcocorp.com>\nTo: sbgolob@attglobal.net\n\nSam,\n\n        I am sending you several REXX edit macros that I have\nfound useful in dealing with the Unix System Services file\nsystem.  We have several USS Datasets from which our Dealers\ndownload HTML code to be displayed on their connected PCs.  These\nfiles are kept in ASCII format and some times I have been called\nupon to view these files through TSO/ISPF OEDIT or ISH utilities.\nThese macros have made it unnecessary to FTP to a PC and look at\nit there.  The following REXX Edit macros make it easy to\ntranslate from ASCII to EBCDIC and back.\n\n1: EXAMHTM - creates a temporary file that is translated to\n             EBCDIC.  It depends on ASCEBC macro.  Builds a\n             temporary file for safety.\n\n2: ASCEBC  - translates the edited file to EBCDIC.\n\n3: EBCASC  - translates the edited file to ASCII.\n\n        Note that these macros do not check the actual file type.\nIf the file is already ASCII and you use EBCASC against it, you\nhave just encrypted and possibly corrupted it.\n\nEXAMHTM:\n\n==================================================================\nASCEBC:\n\n==================================================================\nEBCASC:\n\nThomas Hutchins\nAGCO Corp\n1500 N Raddant RD\nBatavia, IL\n(630) 406-3312\nthutchns@earthlink.net\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE575": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00W\\x01\\x01\\x02_\\x01\\x02\\x12?\\x18\"\\x00\\xe3\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-05-03T18:22:57", "lines": 227, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 575 is from Thomas Hutchins, and contains a JES2 spool    *   FILE 575\n//*           offload utility which allows you to read the data     *   FILE 575\n//*           directly off the JES2 SPOOL OFFLOAD datasets, so      *   FILE 575\n//*           you don't have to restore it on a JES2 system first,  *   FILE 575\n//*           to retrieve the data.  The program is called          *   FILE 575\n//*           SPOOLSEL, and it has some other utility capabilities  *   FILE 575\n//*           having to do with JES2 SPOOL OFFLOAD files, on tape   *   FILE 575\n//*           or on disk.                                           *   FILE 575\n//*                                                                 *   FILE 575\n//*           Also included are 3 edit macros which allow quick     *   FILE 575\n//*           translation and viewing of data from ASCII to EBCDIC, *   FILE 575\n//*           EBCDIC to ASCII, and EXAMHTM, which creates a         *   FILE 575\n//*           temporary file for safety, when you use ASCEBC.       *   FILE 575\n//*                                                                 *   FILE 575\n//*           Descriptions of these macros are written below the    *   FILE 575\n//*           following descriptions for SPOOLSEL.                  *   FILE 575\n//*                                                                 *   FILE 575\n//*    Quick Description of SPOOLSEL:                               *   FILE 575\n//*                                                                 *   FILE 575\n//*      I am sending you 2 files which contain an updated          *   FILE 575\n//*      \"SHARE\" utility which allows you to list what is on a      *   FILE 575\n//*      JES2 offloaded data set, print any or all the contents     *   FILE 575\n//*      of a JES2 offloaded data set or create a JES2 offloaded    *   FILE 575\n//*      data set from multiple JES2 offloaded data sets.           *   FILE 575\n//*                                                                 *   FILE 575\n//*      We use this to store our product installation printouts    *   FILE 575\n//*      to offloaded tapes.  This spares us from keeping paper     *   FILE 575\n//*      copies and does not use space in the system report         *   FILE 575\n//*      archiver.  The utility is known as \"SPOOLSEL\" on the       *   FILE 575\n//*      SHARE site.  I modified their code to work in an OS/390    *   FILE 575\n//*      environment.                                               *   FILE 575\n//*                                                                 *   FILE 575\n//*      Thomas Hutchins                                            *   FILE 575\n//*      Sr. OS/390 Systems Programmer                              *   FILE 575\n//*                                                                 *   FILE 575\n//*      email:  thutchns@earthlink.net                             *   FILE 575\n//*                                                                 *   FILE 575\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   FILE 575\n//*                                                                 *   FILE 575\n//*    Detailed Description:                                        *   FILE 575\n//*                                                                 *   FILE 575\n//*    NAME:                SPOOLSEL                                *   FILE 575\n//*                                                                 *   FILE 575\n//*    RELATED SYSTEM:      JES2/NJE Spool Offloader                *   FILE 575\n//*                                                                 *   FILE 575\n//*    PURPOSE:             Multi-purpose offload utility.          *   FILE 575\n//*                         1. List conents of offloaded dataset    *   FILE 575\n//*                         2. Print selected members of dataset    *   FILE 575\n//*                         3. Create subset of offloaded dataset   *   FILE 575\n//*                                                                 *   FILE 575\n//*    TYPE OF LANGUAGE:    ASSEMBLER                               *   FILE 575\n//*    SOURCE NAME:         SPOOLSEL                                *   FILE 575\n//*                                                                 *   FILE 575\n//*    SOURCE LOCATION:     userid.FILE575.PDS                      *   FILE 575\n//*    MACRO LOCATION:      userid.FILE575.PDS(MACLIB)              *   FILE 575\n//*    OBJECT NAME:         n/a                                     *   FILE 575\n//*    OBJECT LOCATION:     n/a                                     *   FILE 575\n//*    LOAD NAME:           SPOOLSEL                                *   FILE 575\n//*    LOAD LOCATION:       SYS2.LINKLIB                            *   FILE 575\n//*    PROC MEMBERS:        n/a                                     *   FILE 575\n//*    PROC LOCATION:       n/a                                     *   FILE 575\n//*    COMPILE/ASSEMBLE:    member SPOOLASM                         *   FILE 575\n//*                                                                 *   FILE 575\n//*    COMP/ASSMBL OPTS:                                            *   FILE 575\n//*             SYSPARM((NOGEN,NOGEN,NODATA,NOGEN,NOGEN,240))       *   FILE 575\n//*                                                                 *   FILE 575\n//*    LINKAGE EDITOR OPTS: AMODE(24), RMODE(24)                    *   FILE 575\n//*                                                                 *   FILE 575\n//*    FILES INVOLVED:      SYSUT1   - defining input data set,     *   FILE 575\n//*                                    (offloaded spool data        *   FILE 575\n//*                                    set) mandatory in all        *   FILE 575\n//*                                    modes.                       *   FILE 575\n//*                         SYSPRINT - defining printout data       *   FILE 575\n//*                                    set (messages and list       *   FILE 575\n//*                                    info) mandatory in all       *   FILE 575\n//*                                    modes.                       *   FILE 575\n//*                         PRNT???? - dynamically allocated        *   FILE 575\n//*                                    printout data sets which     *   FILE 575\n//*                                    will receive selected        *   FILE 575\n//*                                    jobs outputs in print        *   FILE 575\n//*                                    mode.                        *   FILE 575\n//*                         SYSIN    - defining input data set      *   FILE 575\n//*                                    (select control cards)       *   FILE 575\n//*                                    mandatory in select and      *   FILE 575\n//*                                    print                        *   FILE 575\n//*                         SYSUT2   - defining output data set     *   FILE 575\n//*                                    (offloaded spool sub-set)    *   FILE 575\n//*                                    mandatory in select mode.    *   FILE 575\n//*                                                                 *   FILE 575\n//*    PARM CHANGES:        HEX    - hex print of blocks headers    *   FILE 575\n//*                         LIST   - list the contents of the       *   FILE 575\n//*                                  spool offload data set         *   FILE 575\n//*                         MERGE  - merge the contents of spool    *   FILE 575\n//*                                  offload data sets              *   FILE 575\n//*                         PRINT  - print the selected jobs        *   FILE 575\n//*                                  outputs onto printout data     *   FILE 575\n//*                                  set                            *   FILE 575\n//*                         SELECT - select the requested jobs      *   FILE 575\n//*                                  creating selective copy        *   FILE 575\n//*                                                                 *   FILE 575\n//*                         Absence of the parm field implies       *   FILE 575\n//*                         list option only.                       *   FILE 575\n//*                                                                 *   FILE 575\n//*    EXECUTION JCL:       member   SPOOLXHE                       *   FILE 575\n//*                         member   SPOOLXLS                       *   FILE 575\n//*                         member   SPOOLXMG                       *   FILE 575\n//*                         member   SPOOLXPR                       *   FILE 575\n//*                         member   SPOOLXSL                       *   FILE 575\n//*                                                                 *   FILE 575\n//*    SPECIAL CONDITIONS:  May require re-assembly when            *   FILE 575\n//*                         changing versions of JES2.              *   FILE 575\n//*                                                                 *   FILE 575\n//*    IN-DEPTH INFO:       Program reads an NJE formatted spool    *   FILE 575\n//*                         offload data set and processes it       *   FILE 575\n//*                         according to the JCL parameter and      *   FILE 575\n//*                         control cards.  A listing of the        *   FILE 575\n//*                         contents of the dataset provide job     *   FILE 575\n//*                         name and number of every member.        *   FILE 575\n//*                         Print provides a printout of            *   FILE 575\n//*                         selective or all members on the         *   FILE 575\n//*                         offload dataset.  All printouts are     *   FILE 575\n//*                         divided such that each printout         *   FILE 575\n//*                         occupies a separate SYSOUT.  Select     *   FILE 575\n//*                         allows a subset of the offload          *   FILE 575\n//*                         dataset to be built.                    *   FILE 575\n//*                                                                 *   FILE 575\n//*    PRODUCTION DATE:     June 28,1999                            *   FILE 575\n//*                                                                 *   FILE 575\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   FILE 575\n//*                                                                 *   FILE 575\n//*      From the original note I sent the other System             *   FILE 575\n//*      Programmers:  This is one recommendation for how           *   FILE 575\n//*      SPOOLSEL can be set up and used profitably.                *   FILE 575\n//*                                                                 *   FILE 575\n//*      I would like you to consider the following as a standard   *   FILE 575\n//*      when installing a new product or applying maintenance to   *   FILE 575\n//*      an existing one.  We get overwhelmed by the amount of      *   FILE 575\n//*      printout that an install uses.  Some of the printouts      *   FILE 575\n//*      will get printed and filed, but the rest?  I have tested   *   FILE 575\n//*      the following on many installs.                            *   FILE 575\n//*                                                                 *   FILE 575\n//*      1. Provide all of your install jobs with a JOBPARM         *   FILE 575\n//*         \"forms\" statement.  If you forget, don't worry. You     *   FILE 575\n//*         can use IOF to change the forms name.  Use a relevant   *   FILE 575\n//*         form for your product: i.e. ( PANV, Panvalet / SYNC,    *   FILE 575\n//*         Syncsort / SMPE, Operating System ).  LINES=9999        *   FILE 575\n//*         will stop annoying \"ESTIMATED LINES EXCEEDED\"           *   FILE 575\n//*         messages.                                               *   FILE 575\n//*                                                                 *   FILE 575\n//*            /*JOBPARM LINES=9999,FORMS=????                      *   FILE 575\n//*                                                                 *   FILE 575\n//*      2. Send all of the installation printout to RMT2.  You     *   FILE 575\n//*         need it to hang around.  And don't use class Q, it      *   FILE 575\n//*         disappears in 3 days.  Class T will stay.               *   FILE 575\n//*                                                                 *   FILE 575\n//*            //jobname JOB (6948),MSGCLASS=T                      *   FILE 575\n//*            /*ROUTE PRINT RMT2                                   *   FILE 575\n//*                                                                 *   FILE 575\n//*      3. When the install or maintenance is finished, use        *   FILE 575\n//*         JES2 commands or IOF to off load the listings based     *   FILE 575\n//*         on the JES2 \"form\" id to tape (3490) and using this     *   FILE 575\n//*         data set naming convention:                             *   FILE 575\n//*                                                                 *   FILE 575\n//*         SFT1.JES2OFFL.prod.vers.Dyyddd                          *   FILE 575\n//*                                                                 *   FILE 575\n//*          prod    -  short form for product generally 4 chars    *   FILE 575\n//*          vers    -  version reference                           *   FILE 575\n//*          yyddd   -  julian year and date                        *   FILE 575\n//*                                                                 *   FILE 575\n//*      4. After off loading the tape, go to CA-1 and update       *   FILE 575\n//*         the tape volser or data set name to an expiration       *   FILE 575\n//*         period of CATALOG.  JES2 will not allow retpd of        *   FILE 575\n//*         99000 for CA-1.                                         *   FILE 575\n//*                                                                 *   FILE 575\n//*      The first 2 qualifiers will allow anyone immediate         *   FILE 575\n//*      access to off loaded listings for any product via DSN      *   FILE 575\n//*      or ISPF 3.4 wild carding without doing extensive           *   FILE 575\n//*      catalog searches.                                          *   FILE 575\n//*                                                                 *   FILE 575\n//*      You can IEBGENER the tape to another name to provide a     *   FILE 575\n//*      backup copy.  Still cheaper than paper or filling the      *   FILE 575\n//*      $AVRS file.                                                *   FILE 575\n//*                                                                 *   FILE 575\n//*      The listings can be \"received\" back into the JES2 spool    *   FILE 575\n//*      at any time you need to check something. You always        *   FILE 575\n//*      have access to the listings without keeping mounds of      *   FILE 575\n//*      paper.                                                     *   FILE 575\n//*                                                                 *   FILE 575\n//*      I have found and updated a program, SPOOLSEL, that can     *   FILE 575\n//*      read the tape and list or print its contents.  See the     *   FILE 575\n//*      documentation in:  userid.FILE575.PDS($$DOC).              *   FILE 575\n//*                                                                 *   FILE 575\n//*      - - - - - - - - - - - - - - - - - - - - - - - - - - - -    *   FILE 575\n//*                                                                 *   FILE 575\n//*    Description of ASCII <-> EBCDIC edit macros:                 *   FILE 575\n//*                                                                 *   FILE 575\n//*      I am sending you several REXX edit macros that I have      *   FILE 575\n//*      found useful in dealing with the Unix System Services      *   FILE 575\n//*      file system.  We have several USS Datasets from which      *   FILE 575\n//*      our Dealers download HTML code to be displayed on their    *   FILE 575\n//*      connected PCs.  These files are kept in ASCII format       *   FILE 575\n//*      and some times I have been called upon to view these       *   FILE 575\n//*      files through TSO/ISPF OEDIT or ISH utilities.  These      *   FILE 575\n//*      macros have made it unnecessary to FTP to a PC and look    *   FILE 575\n//*      at it there.  The following REXX Edit macros make it       *   FILE 575\n//*      easy to translate from ASCII to EBCDIC and back.           *   FILE 575\n//*                                                                 *   FILE 575\n//*      1: EXAMHTM - creates a temporary file that is translated   *   FILE 575\n//*                   to EBCDIC.  It depends on ASCEBC macro.       *   FILE 575\n//*                   Builds a temporary file for safety.           *   FILE 575\n//*                                                                 *   FILE 575\n//*      2: ASCEBC  - translates the edited file to EBCDIC.         *   FILE 575\n//*                                                                 *   FILE 575\n//*      3: EBCASC  - translates the edited file to ASCII.          *   FILE 575\n//*                                                                 *   FILE 575\n//*      Note that these macros do not check the actual file        *   FILE 575\n//*      type.  If the file is already ASCII and you use EBCASC     *   FILE 575\n//*      against it, you have just encrypted and possibly           *   FILE 575\n//*      corrupted it.                                              *   FILE 575\n//*                                                                 *   FILE 575\n//*      Thomas Hutchins                                            *   FILE 575\n//*      AGCO Corp                                                  *   FILE 575\n//*      1500 N Raddant RD                                          *   FILE 575\n//*      Batavia, IL                                                *   FILE 575\n//*      (630) 406-3312                                             *   FILE 575\n//*      thutchns@earthlink.net                                     *   FILE 575\n//*                                                                 *   FILE 575\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASCEBC": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x00\\x14\\x0f\\x01\\x00\\x14\\x0f\\x10E\\x00@\\x00>\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-05-19T00:00:00", "modifydate": "2000-05-19T10:45:00", "lines": 64, "newlines": 62, "modlines": 0, "user": "VHUTCH"}, "text": "/* REXX : ASCEBC     Reformat ASCII text data                      */\n/* This edit macro will read the edit file and change the data     */\n/* from ASCII to EBCDIC format.  Any CR/LF are changed to line     */\n/* breaks.                                                         */\n/* ASCII and EBCDIC tables were taken from ICONV utility           */\n/*        iconv -t IBM-1047 -f ISO88059-1 <ASCin >EBCout           */\n/*******************************************************************/\n/*                                                                 */\n ASCII_table  = '20A22E3C282B7C2621242A293B5E2D2F'x||,\n                'A62C255F3E3F603A2340273D22616263'x||,\n                '646566676869BBF0FDFEB16A6B6C6D6E'x||,\n                '6F707172BAE6B8C6A4B57E7374757677'x||,\n                '78797ABFD05BDEAEACA3A5B7A9A7B6BC'x||,\n                'BDBEA8AF5DB4D77B4142434445464748'x||,\n                '497D4A4B4C4D4E4F5051525CF7535455'x||,\n                '565758595A30313233343536373839'x\n EBCDIC_table = '404A4B4C4D4E4F505A5B5C5D5E5F6061'x||,\n                '6A6B6C6D6E6F797A7B7C7D7E7F818283'x||,\n                '8485868788898B8C8D8E8F9192939495'x||,\n                '969798999B9C9D9E9FA0A1A2A3A4A5A6'x||,\n                'A7A8A9ABACADAEAFB0B1B2B3B4B5B6B7'x||,\n                'B8B9BBBCBDBEBFC0C1C2C3C4C5C6C7C8'x||,\n                'C9D0D1D2D3D4D5D6D7D8D9E0E1E2E3E4'x||,\n                'E5E6E7E8E9F0F1F2F3F4F5F6F7F8F9'X\n/*                                                                   */\nADDRESS ISREDIT \"MACRO\"\nADDRESS ISREDIT \"RESET\"                      /* remove message lines */\nADDRESS ISREDIT \"(MaxLine) = LINENUM .ZLAST\" /* maximum line count   */\nADDRESS ISREDIT \"(Caprof) = CAPS\"         /* CAPS setting            */\nADDRESS ISREDIT \"CAPS OFF\"                /* Set for mixed case      */\n/*                                                                   */\n/*                     Process the Edit Lines                        */\n/*                                                                   */\ndo I = 1 to MaxLine\n   ADDRESS ISREDIT \"(LINE) = LINE\" I      /* get line from editor    */\n   LINE = strip(LINE,'T')                 /* strip trailing blanks   */\n   SRCO = translate(LINE, EBCDIC_table, ASCII_table) /* translation  */\n   SRCO = translate(SRCO, '01'x, '7D'x)   /* chg single quotes       */\n   SRC = translate(SRCO, '02'x, '50'x)    /* chg ampersand           */\n   ADDRESS ISREDIT \"LINE_AFTER .ZLAST = '\"SRC\"'\" /* add as last line */\n   Retc = 0                               /* initialize return code  */\n   do while Retc =  0                     /* while CR/LFs found      */\n     ADDRESS ISREDIT \"FIND '0d0a'x .ZLAST .ZLAST\" /* find CR/LF      */\n     Retc = RC                            /* save return code        */\n     if RC = 0 then do                    /* if CR/LF found          */\n       ADDRESS ISREDIT \"(fline, fcol) = CURSOR\"  /* get col address  */\n       ADDRESS ISREDIT \"TSPLIT .ZLAST \" fcol  /* split line before   */\n       ADDRESS ISREDIT \"TSPLIT .ZLAST  3\" /* split line after CR/LF  */\n     end\n   end\nend\n/*                                                                   */\nADDRESS ISREDIT \"DELETE 1 \" MaxLine       /* delete orig lines       */\nADDRESS ISREDIT \"CHANGE '01'x '7D'x ALL\"  /* chg single quotes back  */\nADDRESS ISREDIT \"CHANGE '02'x '50'x ALL\"  /* chg ampersand back      */\nADDRESS ISREDIT \"X ALL\"                   /* exclude all lines       */\nADDRESS ISREDIT \"FIND '0d0a'x ALL\"        /* find all CR/LF          */\nADDRESS ISREDIT \"DELETE NX ALL\"           /* remove all found lines  */\nif CaProf = \"ON\" then do                  /* test for upper case     */\n  ADDRESS ISREDIT \"CAPS ON\"               /* set to upper case       */\nend\nADDRESS ISREDIT \"RESET\"                   /* show all chgd lines     */\n/*                                                                   */\nRETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EBCASC": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x00\\x14\\x0f\\x01\\x00\\x14\\x0f\\x10E\\x005\\x003\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-05-19T00:00:00", "modifydate": "2000-05-19T10:45:00", "lines": 53, "newlines": 51, "modlines": 0, "user": "VHUTCH"}, "text": "/* REXX : EBCASC     Reformat EBCDIC text data                     */\n/* This edit macro will read the edit file and change the data     */\n/* from EBCDIC to ASCII format.  All lines have CR/LF appended     */\n/* after them.                                                     */\n/* ASCII and EBCDIC tables were taken from ICONV utility           */\n/*        iconv -f IBM-1047 -t ISO88059-1 <EBCin >ASCout           */\n/*******************************************************************/\n/*                                                                 */\n ASCII_table  = '20A22E3C282B7C2621242A293B5E2D2F'x||,\n                'A62C255F3E3F603A2340273D22616263'x||,\n                '646566676869BBF0FDFEB16A6B6C6D6E'x||,\n                '6F707172BAE6B8C6A4B57E7374757677'x||,\n                '78797ABFD05BDEAEACA3A5B7A9A7B6BC'x||,\n                'BDBEA8AF5DB4D77B4142434445464748'x||,\n                '497D4A4B4C4D4E4F5051525CF7535455'x||,\n                '565758595A30313233343536373839'x\n EBCDIC_table = '404A4B4C4D4E4F505A5B5C5D5E5F6061'x||,\n                '6A6B6C6D6E6F797A7B7C7D7E7F818283'x||,\n                '8485868788898B8C8D8E8F9192939495'x||,\n                '969798999B9C9D9E9FA0A1A2A3A4A5A6'x||,\n                'A7A8A9ABACADAEAFB0B1B2B3B4B5B6B7'x||,\n                'B8B9BBBCBDBEBFC0C1C2C3C4C5C6C7C8'x||,\n                'C9D0D1D2D3D4D5D6D7D8D9E0E1E2E3E4'x||,\n                'E5E6E7E8E9F0F1F2F3F4F5F6F7F8F9'X\n/*                                                                   */\nADDRESS ISREDIT \"MACRO\"\nADDRESS ISREDIT \"RESET\"                      /* remove message lines */\nADDRESS ISREDIT \"(MaxLine) = LINENUM .ZLAST\" /* maximum line count   */\nADDRESS ISREDIT \"(Caprof) = CAPS\"         /* CAPS setting            */\nADDRESS ISREDIT \"CAPS OFF\"                /* Set for mixed case      */\n  CRLF = '0d0a'x                          /* Set for Ascii CR/LF     */\n/*                                                                   */\n/*                     Process the Edit Lines                        */\n/*                                                                   */\ndo I = 1 to MaxLine\n   ADDRESS ISREDIT \"(LINE) = LINE\" I      /* get line from editor    */\n   LINE = strip(LINE,'T')                 /* strip trailing blanks   */\n   SRCO = translate(LINE, ASCII_table, EBCDIC_table) /* translation  */\n   SRCO = translate(SRCO, '01'x, '7D'x)   /* chg single quotes       */\n   SRC = translate(SRCO, '02'x, '50'x)    /* chg ampersand           */\n   SRC = SRC||CRLF                                   /* translation  */\n   ADDRESS ISREDIT \"LINE_AFTER .ZLAST = '\"SRC\"'\"\nend\n/*                                                                   */\nADDRESS ISREDIT \"DELETE 1 \" MaxLine       /* delete orig lines       */\nADDRESS ISREDIT \"CHANGE '01'x '7D'x ALL\"  /* chg single quotes back  */\nADDRESS ISREDIT \"CHANGE '02'x '50'x ALL\"  /* chg ampersand back      */\nif CaProf = \"ON\" then do                  /* test for upper case     */\n  ADDRESS ISREDIT \"CAPS ON\"               /* set to upper case       */\nend\nADDRESS ISREDIT \"RESET\"                   /* show all chgd lines     */\n/*                                                                   */\nRETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXAMHTM": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x008\\x01\\x00\\x14?\\x01\\x00\\x14?\\x13R\\x00 \\x00\\x1e\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-05-22T00:00:00", "modifydate": "2000-05-22T13:52:38", "lines": 32, "newlines": 30, "modlines": 0, "user": "VHUTCH"}, "text": "/* REXX : EXAMHTM    Copy ASCII htm file into temporary data set   */\n/*                   under EDIT and change to EBCDIC format for    */\n/*                   easier viewing.                               */\n/*******************************************************************/\n/*                                                                 */\n/*                                                                   */\nADDRESS ISREDIT \"MACRO\"\nADDRESS ISREDIT \"RESET\"                      /* remove message lines */\nADDRESS ISREDIT \"(MaxLine) = LINENUM .ZLAST\" /* maximum line count   */\nADDRESS ISREDIT \"(MaxRecl) = LRECL\"          /* record length        */\nADDRESS TSO     'ALLOC DD(HFSF) UNIT(VIO) SPACE(2) CYLINDERS REUSE\n                 RECFM (V B)\n                 LRECL ('MaxRecl') BLKSIZE (0)'\n/*                                                                   */\n/*                     Process the Edit Lines                        */\n/*                                                                   */\ndo I = 1 to MaxLine\n   ADDRESS ISREDIT \"(LINX) = LINE\" I      /* get line from editor    */\n   QUEUE LINX\nend\n   QUEUE ''\n   ADDRESS TSO 'EXECIO * DISKW HFSF (FINIS'\n/*                                                                   */\n/*                                                                   */\n/*                                                                   */\nADDRESS ISPEXEC\n        'LMINIT DATAID(LASTID) DDNAME(HFSF)'\n        'EDIT DATAID('lastid') MACRO(ASCEBC)'\n        'LMFREE DATAID('lastid')'\nADDRESS TSO     'FREE DD(HFSF)'\n\nRETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MACLIB": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x12/\\x01\\x02\\x12/\\x159\\x08x\\x08x\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-02T00:00:00", "modifydate": "2002-05-02T15:39:00", "lines": 2168, "newlines": 2168, "modlines": 0, "user": "VHUTCH"}, "text": "./ ADD NAME=CONHEX\n         MACRO                                                             00001\n&N      CONHEX                                                             00002\n*** CONHEX     EDYCJA AAN-003                                              00003\n         AIF   ('&N' NE '').E1                                             00004\n         MNOTE 12,'   ********   NIEOKRESLONA NAZWA SEKCJI'                00005\n         MEXIT                                                             00006\n.E1      ANOP                                                              00007\n         SEKCJA &N,B=12,V=VFCHX001                                         00008\n         LR    3,0                                                         00009\n         LR    7,1                                                         00010\n         LR    8,2                                                         00011\n         LA    9,X'F'                                                      00012\n         BAL   10,*+20                                                     00013\n         DC    C'0123456789ABCDEF'                                         00014\n         BALR  11,0                                                        00015\n         SR    5,5                                                         00016\n         IC    5,0(3)                                                      00017\n         LR    6,5                                                         00018\n         NR    6,9                                                         00019\n         SRA   5,4                                                         00020\n         IC    5,0(5,10)                                                   00021\n         STC   5,0(1)                                                      00022\n         IC    5,0(6,10)                                                   00023\n         STC   5,1(1)                                                      00024\n         LA    3,1(3)                                                      00025\n         LA    1,2(1)                                                      00026\n         BCTR  2,11                                                        00027\n         LR    1,7                                                         00028\n         LR    2,8                                                         00029\n         SLA   8,17                                                        00030\n         AR    2,8                                                         00031\n         LM    3,12,32(13)                                                 00032\n         SR    15,15                                                       00033\n         BR    14                                                          00034\n         MEND                                                              00035\n./ ADD NAME=DCBDEF   0100-84290-84290-0840-00163-00163-00000-ZTSDKJB\n* DEFINICJE OFFSETOW DLA DCB                                            AGW00001\n         MACRO                                                          AGW00002\n         DCBDEF                                                         AGW00003\nDCBDEN   EQU   18                                                       AGW00004\nDCBBUFNO EQU   20                                                       AGW00005\nDCBBUFCB EQU   21                                                       AGW00006\nDCBBUFL  EQU   24                                                       AGW00007\nDCBDSORG EQU   26                                                       AGW00008\nDCBEODAD EQU   32                                                       AGW00009\nDCBRECFM EQU   36                                                       AGW00010\nDCBDNAM  EQU   40                                                       AGW00011\nDCBOFLGS EQU   48                                                       AQO00012\nDCBSYNAD EQU   57                                                       APC00013\nDCBBLKSI EQU   62                                                       AGW00014\nDCBEOBAD EQU   72                                                       AGW00015\nDCBRECAD EQU   76                                                       APC00016\nDCBLRECL EQU   82                                                       AGW00017\nDCBPRECL EQU   90                                                       AGW00018\n         MEND                                                           AGW00019\n         MACRO                                                          AGZ00020\n         DCBDEF &ACS,&DEV,&MCR                                          AGZ00021\n* MAKROROZKAZ GENERUJACY OFFSETY DO DCB                                 AGZ00022\n* ACS=                                                                  AGZ00023\n*     EXCP                                                              AGZ00024\n*    *QSAM                                                              AGZ00025\n*     BPAM                                                              AGZ00026\n*     BSAM                                                              AGZ00027\n* DEV=                                                                  AGZ00028\n*    *DA                                                                AGZ00029\n*     MT                                                                AGZ00030\n*     PR                                                                AGZ00031\n*     PT                                                                AGZ00032\n*     CR                                                                AGZ00033\n*     ALL                                                               AGZ00034\n* MCR                                                                   AGZ00035\n*    *RD                                                                AGZ00036\n*     WT                                                                AGZ00037\n         AIF   ('&ACS' NE '').E01                                       AGZ00038\n&ACS     SETC  'QSAM'                                                   AGZ00039\n.E01     ANOP                                                           AGZ00040\n         AIF   ('&DEV' NE '').E02                                       AGZ00041\n&DEV     SETC  'DA'                                                     AGZ00042\n.E02     ANOP                                                           AGZ00043\n         AIF   ('&MCR' NE '').E03                                       AGZ00044\n&MCR     SETC  'RD'                                                     AGZ00045\n.E03     ANOP                                                           AGZ00046\n         AIF   ('&ACS' NE 'ISAM' OR '&ACS' NE 'QISAM').E04              AGZ00047\n&DEV     SETC  'DA'                                                     AGZ00048\n         AIF   ('&DEV' NE 'DA').D01                                     AGZ00049\nDCBDEVT  EQU   17                                                       AGY00050\nDCBRELAD EQU    0                                                       AGY00051\nDCBKEYCN EQU    4                                                       AGY00052\nDCBFDAD  EQU    5                                                       AGY00053\nDCBDVTBL EQU   13                                                       AGY00054\nDCBKEYLE EQU   16                                                       AGY00055\nDCBTRBAL EQU   18                                                       AGY00056\n.D01     ANOP                                                           AGZ00057\n         AIF   ('&DEV' NE 'MT').D02                                     AGZ00058\nDCBBLKCT EQU   12                                                       AGY00059\nDCBTRTCH EQU   16                                                       AGY00060\nDCBDEN   EQU   18                                                       AGY00061\n.D02     ANOP                                                           AGZ00062\n         AIF   ('&DEV' NE 'PT').D03                                     AGZ00063\nDCBLCTBL EQU    8                                                       AGY00064\nDCBCODE  EQU   16                                                       AGY00065\n.D03     ANOP                                                           AGZ00066\n         AIF   ('&DEV' NE 'CR').D04                                     AGZ00067\nDCBMODE  EQU   16                                                       AGY00068\nDCBSTACK EQU   16                                                       AGY00069\nDCBFUNC  EQU   19                                                       AGY00070\n.D04     ANOP                                                           AGZ00071\n         AIF   ('&DEV' NE 'PR').D05                                     AGZ00072\nDCBPRTSP EQU   16                                                       AGY00073\n.D05     ANOP                                                           AGZ00074\nDCBBUFNO EQU   20                                                       AGY00075\nDCBBUFCB EQU   21                                                       AGY00076\nDCBBUFL  EQU   24                                                       AGY00077\nDCBDSORG EQU   26                                                       AGY00078\nDCBIOBAD EQU   28                                                       AGY00079\nDCBLNP   EQU   28                                                       AGY00080\nDCBQSLM  EQU   28                                                       AGY00081\nDCBODEBA EQU   29                                                       AGY00082\nDCBHIARC EQU   32                                                       AGY00083\nDCBBFTEK EQU   32                                                       AGY00084\nDCBBFALN EQU   32                                                       AGY00085\nDCBEODAD EQU   33                                                       AGY00086\nDCBRECFM EQU   36                                                       AGY00087\nDCBEXLST EQU   37                                                       AGY00088\nDCBDDNAM EQU   40                                                       AGY00089\nDCBOFLGS EQU   48                                                       AGY00090\nDCBIFLG  EQU   49                                                       AGY00091\nDCBMACR  EQU   50                                                       AGY00092\nDCBTIOT  EQU   40                                                       AGY00093\nDCBMACRF EQU   42                                                       AGY00094\nDCBIFLGS EQU   44                                                       AGY00095\nDCBDEBAD EQU   44                                                       AGY00096\nDCBOFLGS EQU   48                                                       AGY00097\nDCBOPTCD EQU   52                                                       AGY00098\n         AIF   ('&ACS' NE 'EXCP').A01                                   AGZ00099\nDCBEOFEA EQU   60                                                       AGY00100\nDCBPCIA  EQU   62                                                       AGY00101\nDCBSIOA  EQU   64                                                       AGY00102\nDCBCENDA EQU   66                                                       AGY00103\nDCBXENDA EQU   68                                                       AGY00104\n         MEXIT                                                          AGZ00105\n.A01     ANOP                                                           AGZ00106\n         AIF   ('&ACS' NE 'BSAM' OR '&ACS' NE 'BPAM').A02               AGZ00107\nDCBREAD  EQU   49                                                       AGY00108\nDCBWRITE EQU   49                                                       AGY00109\nDCBOPTCD EQU   52                                                       AGY00110\nDCBCHECK EQU   53                                                       AGY00111\nDCBIOBL  EQU   56                                                       AGZ00112\nDCBSYNAD EQU   57                                                       AGY00113\nDCBCIND1 EQU   60                                                       AGY00114\nDCBCIND2 EQU   61                                                       AGY00115\nDCBBLKSI EQU   62                                                       AGY00116\nDCBWCPO  EQU   64                                                       AGY00117\nDCBWCPL  EQU   65                                                       AGY00118\nDCBOFFSR EQU   66                                                       AGY00119\nDCBOFFSW EQU   67                                                       AGY00120\nDCBIOBA  EQU   68                                                       AGY00121\nDCBNCP   EQU   72                                                       AGY00122\nDCBEOBW  EQU   73                                                       AGZ00123\nDCBEOBW  EQU   76                                                       AGY00124\nDCBDIRCT EQU   80                                                       AGY00125\nDCBUSASI EQU   80                                                       AGY00126\nDCBBUFOF EQU   81                                                       AGY00127\nDCBLRECL EQU   82                                                       AGY00128\nDCBCNTRL EQU   84                                                       AGY00129\nDCBNOTE  EQU   84                                                       AGZ00130\nDCBPOINT EQU   84                                                       AGY00131\n         MEXIT                                                          AGZ00132\n.A02     ANOP                                                           AGZ00133\n         AIF   ('&ACS' NE 'QSAM').A03                                   AGZ00134\nDCBGET   EQU   49                                                       AGY00135\nDCBPUT   EQU   49                                                       AGY00136\nDCBOPTCD EQU   52                                                       AGY00137\nDCBGERR  EQU   53                                                       AGY00138\nDCBPERR  EQU   53                                                       AGY00139\nDCBIOBL  EQU   56                                                       AGY00140\nDCBSYNAD EQU   57                                                       AGY00141\nDCBCIND1 EQU   60                                                       AGY00142\nDCBCIND2 EQU   61                                                       AGY00143\nDCBBLKSI EQU   62                                                       AGY00144\nDCBWCPO  EQU   64                                                       AGY00145\nDCBWCPL  EQU   65                                                       AGY00146\nDCBOFFSR EQU   66                                                       AGY00147\nDCBOFFSW EQU   67                                                       AGY00148\nDCBIOBA  EQU   68                                                       AGY00149\nDCBEOBAD EQU   72                                                       AGY00150\nDCBLCCW  EQU   72                                                       AGY00151\nDCBRECAD EQU   76                                                       AGY00152\nDCBCCW   EQU   76                                                       AGY00153\nDCBQSWS  EQU   80                                                       AGY00154\nDCBBUFOF EQU   81                                                       AGY00155\nDCBDIRCQ EQU   81                                                       AGY00156\nDCBLRECL EQU   82                                                       AGY00157\nDCBEROPT EQU   84                                                       AGY00158\nDCBCNTRL EQU   85                                                       AGY00159\nDCBPRECL EQU   90                                                       AGY00160\nDCBEOB   EQU   92                                                       AGY00161\n.A03     ANOP                                                           AGZ00162\n         MEND                                                           AGZ00163\n./ ADD NAME=DCBEX    0101-99196-99196-0851-00324-00324-00000-VHUTCH\n         MACRO                                                          ABJ00001\n&NN      DCBEX &WS,&R=,&L=,&B=0,&N=,&K=                                 ABO00002\n         LCLC  &C,&D                                                    ABJ00003\n*** DCBEX      WERSJA-004                                               ABV00004\n&C       SETC  'IHB'.'&SYSNDX'                                          ABJ00005\n&D       SETC  '*'                                                      ABJ00005\n         AIF   ('&NN' EQ '').D1                                         ABO00006\n&NN      DS    0H                 USTAWIENIE ETYKIETY                   ABO00007\n&D       SETC  '&NN'                                                    ABJ00005\n.D1      USING &D,15                                                    ABO00008\n         AIF   ('&WS' EQ 'DCBPREF').K1                                  ABO00009\n         AIF   ('&R' EQ '' AND '&L' EQ '' AND '&B' EQ '' AND '&N' EQ ''XABO00010\n               ).G3                                                     ABO00011\n         AIF   ('&WS' EQ '').D5                                         ABO00012\n         AIF   ('&WS'(1,1) NE '(').D2                                   ABO00013\n         LR    3,&WS              ADRES WSK.ODP.W REJ                   ABO00014\n         AGO   .D4                                                      ABO00015\n.D2      AIF   ('&WS'(1,2) NE 'A(' AND '&WS'(1,2) NE 'V(').D3           ABO00016\n         L     3,&C.X             ADRES WSK.ODP.W STA                   ABO00017\n         AGO   .D4                                                      ABO00018\n.D3      LA    3,&WS              ADRES WSK.ODP.JAWNY                   ABO00019\n.D4      MVI   0(3),0             ZEROWANIE WSK.ODP.                    ABO00020\n.D5      AIF   ('&R' EQ '').F3                                          ABO00021\n.* OBSLUGA RECFM                                                        ABO00022\n         TM    36(1),X'FE'        CZY RECFM OKRESLONY                   ABO00023\n         BNZ   &C.A               TAK                                   ABO00024\n         AIF   ('&R' NE 'F').E1                                         ABO00025\n         OI    36(1),X'80'        RECFM=F                               ABO00026\n         AGO   .F1                                                      ABO00027\n.E1      AIF   ('&R' NE 'V').E2                                         ABO00028\n         OI    36(1),X'40'        RECFM=V                               ABO00029\n         AGO   .F1                                                      ABO00030\n.E2      AIF   ('&R' NE 'FA').E3                                        ABO00031\n         OI    36(1),X'84'        RECFM=FA                              ABO00032\n         AGO   .F1                                                      ABO00033\n.E3      AIF   ('&R' NE 'VA').E4                                        ABO00034\n         OI    36(1),X'44'        RECFM=VA                              ABO00035\n         AGO   .F1                                                      ABO00036\n.E4      AIF   ('&R' NE 'FM').E5                                        ABO00037\n         OI    36(1),X'82'        RECFM=FM                              ABO00038\n         AGO   .F1                                                      ABO00039\n.E5      AIF   ('&R' NE 'FB').E6                                        ABO00040\n         OI    36(1),X'90'        RECFM=FB                              ABO00041\n         AGO   .F1                                                      ABO00042\n.E6      AIF   ('&R' NE 'VB').E7                                        ABO00043\n         OI    36(1),X'50'        RECFM=VB                              ABO00044\n         AGO   .F1                                                      ABO00045\n.E7      AIF   ('&R' NE 'FBA').E8                                       ABO00046\n         OI    36(1),X'94'        RECFM=FBA                             ABO00047\n         AGO   .F1                                                      ABO00048\n.E8      AIF   ('&R' NE 'VBA').E9                                       ABO00049\n         OI    36(1),X'54'        RECFM=VBA                             ABO00050\n         AGO   .F1                                                      ABO00051\n.E9      AIF   ('&R' NE 'FBM').E10                                      ABO00052\n         OI    36(1),X'92'        RECFM=FBM                             ABO00053\n         AGO   .F1                                                      ABO00054\n.E10     AIF   ('&R' NE 'VBS').E11                                      ABO00055\n         OI    36(1),X'58'        RECFM=VBS                             ABO00056\n         AGO   .F1                                                      ABO00057\n.E11     OI    36(1),&R           USTAW RECFM                           ABO00058\n.F1      AIF   ('&WS' EQ '').F2                                         ABO00059\n         OI    0(3),X'80'         WSK.ODP.NA RECFM                      ABO00060\n.F2      ANOP                                                           ABO00061\n&C.A     EQU   *                  KONIEC RECFM                          ABO00062\n.F3      AIF   ('&L' EQ '' AND '&B' EQ '').G1                           ABO00063\n         LH    5,62(1)            WEZ BLKSIZE                           ABO00064\n         LH    6,82(1)            WEZ LRECL                             ABO00065\n         AIF   ('&L' EQ '').F5                                          ABO00066\n.* OBSLUGA LRECL                                                        ABO00067\n         LTR   6,6                CZY LRECL OKRESLONY                   ABO00068\n         BNZ   &C.C               TAK                                   ABO00069\n         TM    36(1),X'80'        CZY RECFM=F                           ABO00070\n         BZ    &C.B               NIE                                   ABO00071\n         TM    36(1),X'10'        CZY RECFM=FB                          ABO00072\n         BO    &C.B               TAK                                   ABO00073\n         LTR   5,5                CZY JEST BLKSIZE                      ABO00074\n         BNZ   &C.C               TAK                                   ABO00075\n&C.B     LH    6,&C.Y             WEZ STAND.LRECL                       ABO00076\n         STH   6,82(1)            USTAW LRECL                           ABO00077\n         AIF   ('&WS' EQ '').F4                                         ABO00078\n         OI    0(3),X'40'         WSK.ODP.NA LRECL                      ABO00079\n.F4      ANOP                                                           ABO00080\n&C.C     EQU   *                  KONIEC LRECL                          ABO00081\n.F5      AIF   ('&B' EQ '').G1                                          ABO00082\n.* OBSLUGA BLKSIZE                                                      ABO00083\n         AIF   ('&R' EQ '' AND N'&B GT 1).H1                            ABO00084\n         AIF   ('&R' EQ '' AND '&L' EQ '').F6                           ABO00085\n         TM    36(1),X'80'        CZY RECFM=F                           ABO00086\n         BZ    &C.D               NIE                                   ABO00087\n         TM    36(1),X'10'        CZY RECFM=FB                          ABO00088\n         BO    &C.D               TAK                                   ABO00089\n         LTR   6,6                CZY BRAK LRECL                        ABO00090\n         BZ    &C.H               TAK                                   ABO00091\n&C.D     EQU   *                  KONIEC F I NIE B                      ABO00092\n.F6      TM    36(1),X'40'        CZY RECFM=F                           ABO00093\n         BZ    *+8                TAK                                   ABO00094\n         LA    6,4(6)             NIE, LRECL:=LRECL+4                   ABO00095\n         LTR   5,5                CZY BLKSIZE OKRESL.                   ABO00096\n         AIF   ('&B(1)' NE '0').F7                                      ABO00097\n         BZ    &C.G               NIE , BLKSIZE=&MIN                    ABO00098\n         AGO   .F8                                                      ABO00099\n.F7      BNZ   &C.E               TAK                                   ABO00100\n         LH    5,&C.Z             WEZ STAND.BLKSIZE                     ABO00101\n         STH   5,62(1)            USTAW BLKSIZE                         ABO00102\n         AIF   ('&WS' EQ '').F8                                         ABO00103\n         OI    0(3),X'20'         WSK.ODP.NA BLKSIZE                    ABO00104\n.F8      ANOP                                                           ABO00105\n&C.E     TM    36(1),X'40'        CZY RECFM=F                           ABO00106\n         BZ    &C.F               TAK                                   ABO00107\n         CR    5,6                NIE,SPRAWDZ BLKSIZE                   ABO00108\n         BNL   &C.H               DOBRY                                 ABO00109\n         B     &C.G               ZLY                                   ABO00110\n&C.F     XR    4,4                SPRAWDZ BLKSIZE                       ABO00111\n         DR    4,6                DLA RECFM = F                         ABO00112\n         LTR   4,4                CZY BLKSIZE / LRECL                   ABO00113\n         BZ    &C.H               TAK                                   ABO00114\n.F9      ANOP                                                           ABO00115\n&C.G     STH   6,62(1)            USTAW BLKSIZE=BMIN                    ABO00116\n         AIF   ('&WS' EQ '').F10                                        ABO00117\n         OI    0(3),X'10'         WSK.ODP.NA BMIN                       ABO00118\n.F10     ANOP                                                           ABO00119\n&C.H     EQU   *                  KONIEC BLKSIZE                        ABO00120\n.G1      AIF   ('&N' EQ '').G3                                          ABO00121\n.* OBSLUGA GETPOOL                                                      ABO00122\n         LR    6,1                SCHOWAJ ADRES DCB                     ABO00123\n         XR    4,4                                                      ABO00124\n         IC    4,20(1)            WEZ BUFNO                             ABO00125\n         LTR   4,4                CZY = 0                               ABO00126\n         BNZ   &C.I               NIE                                   ABO00127\n         LA    4,&N               WEZ STAND.BUFNO                       ABO00128\n         AIF   ('&WS' EQ '').G2                                         ABO00129\n         OI    0(3),X'08'         WSK.ODP.NA BUFNO                      ABO00130\n.G2      ANOP                                                           ABO00131\n&C.I     LH    5,62(1)            WEZ BLKSIZE                           ABO00132\n         GETPOOL (1),(4),(5)                                            ABO00133\n         LR    1,6                ADRES DCB                             ABO00134\n.G3      AIF   ('&K' EQ '').G7                                          ABO00135\n.* OBSLUGA KONKATENACJI                                                 ABO00136\n         AIF   ('&K'(1,1) NE '(').G4                                    ABO00137\n         LR    3,&K               ADRES WSK.KONK.W RE                   ABO00138\n         AGO   .G6                                                      ABO00139\n.G4      AIF   ('&K'(1,2) NE 'A(' AND '&K'(1,2) NE 'V(').G5             ABO00140\n         L     3,&C.W             ADRES WSK.KONK.W ST                   ABO00141\n         AGO   .G6                                                      ABO00142\n.G5      LA    3,&K               ADRES WSK.KONK.JAWN                   ABO00143\n.G6      TM    0(3),X'0F'         CZY PIERWSZY RAZ                      ABO00144\n         BZ    *+10               TAK                                   ABO00145\n         OI    0(3),X'10'         NIE, USTAW POM.DOK.                   ABO00146\n         BR    14                 WROC                                  ABO00147\n         OI    0(3),X'01'         USTAW, ZE NIE PIER.                   ABO00148\n         OI    48(1),X'08'        USTAW KONKATENACJE                    ABO00149\n.G7      BR    14                 WROC                                  ABO00150\n         AIF   ('&K' EQ '').G8                                          ABO00151\n         AIF   ('&K'(1,2) NE 'A(' AND '&K'(1,2) NE 'V(').G8             ABO00152\n&C.W     DC    &K                 ADRES WSK.KONKATEN.                   ABO00153\n.G8      AIF   ('&WS' EQ '').G9                                         ABO00154\n         AIF   ('&WS'(1,2) NE 'A(' AND '&WS'(1,2) NE 'V(').G9           ABO00155\n&C.X     DC    &WS                ADRES WSK.ODPOWIED.                   ABO00156\n.G9      AIF   ('&L' EQ '').G10                                         ABO00157\n&C.Y     DC    AL2(&L)            WART.STAND.LRECL                      ABO00158\n.G10     AIF   ('&B' EQ '').G11                                         ABO00159\n         AIF   ('&B(1)' EQ '0').G11                                     ABO00160\n&C.Z     DC    AL2(&B(1))                                               ABO00161\n.G11     DROP  15                                                       ABO00162\n         MEXIT                                                          ABO00163\n.* OBSLUGA BLKSIZE DLA F                                                ABO00164\n.H1      AIF   ('&B(2)' NE 'F').H5                                      ABO00165\n         AIF   ('&R' EQ '' AND '&L' EQ '').H2                           ABO00166\n         TM    36(1),X'10'        CZY RECFM=FB                          ABO00167\n         BO    &C.D               TAK                                   ABO00168\n         LTR   6,6                CZY BRAK LRECL                        ABO00169\n         BZ    &C.H               TAK                                   ABO00170\n&C.D     EQU   *                  KONIEC F I NIE B                      ABO00171\n.H2      LTR   5,5                CZY BLKSIZE OKRESL.                   ABO00172\n         AIF   ('&B(1)' NE '0').H3                                      ABO00173\n         BZ    &C.G               NIE , BLKSIZE=BMIN                    ABO00174\n         AGO   .H4                                                      ABO00175\n.H3      BNZ   &C.E               TAK                                   ABO00176\n         LH    5,&C.Z             WEZ STAND.BLKSIZE                     ABO00177\n         STH   5,62(1)            USTAW BLKSIZE                         ABO00178\n         AIF   ('&WS' EQ '').H4                                         ABO00179\n         OI    0(3),X'20'         WSK.ODP.NA BLKSIZE                    ABO00180\n.H4      ANOP                                                           ABO00181\n&C.E     XR    4,4                SPRAWDZ BLKSIZE                       ABO00182\n         DR    4,6                CZY PODZIELONY                        ABO00183\n         LTR   4,4                PRZEZ LRECL                           ABO00184\n         BZ    &C.H               TAK                                   ABO00185\n         AGO   .F9                                                      ABO00186\n.* OBSLUGA BLKSIZE DLA V                                                ABO00187\n.H5      LA    6,4(6)             LRECL:=LRECL+4                        ABO00188\n         LTR   5,5                CZY BLKSIZE OKRESL.                   ABO00189\n         AIF   ('&B(1)' NE '0').H6                                      ABO00190\n         BZ    &C.G               NIE , BLKSIZE=BMIN                    ABO00191\n         AGO   .H7                                                      ABO00192\n.H6      BNZ   &C.E               TAK                                   ABO00193\n         LH    5,&C.Z             WEZ STAND.BLKSIZE                     ABO00194\n         STH   5,62(1)            USTAW BLKSIZE                         ABO00195\n         AIF   ('&WS' EQ '').H7                                         ABO00196\n         OI    0(3),X'20'         WSK.ODP.NA BLKSIZE                    ABO00197\n.H7      ANOP                                                           ABO00198\n&C.E     CR    5,6                SPRAWDZ BLKSIZE                       ABO00199\n         BNL   &C.H               DOBRY                                 ABO00200\n         AGO   .F9                                                      ABO00201\n.* PARAMETRY Z TABLICY \"DCBPREF\"                                        ABO00202\n.K1      LA    3,0(1)             ADRES DCB                             ABV00203\n         LA    2,8                PREFIX                                ABO00204\n         SR    3,2                ADRES DCBPREF                         ABO00205\n         AIF   ('&R' EQ '' AND '&L' EQ '' AND '&B' EQ '' AND '&N' EQ ''XABO00206\n               ).K7                                                     ABO00207\n         MVI   1(3),0             ZEROWANIE WSK.ODP.                    ABO00208\n         AIF   ('&R' EQ '').K2                                          ABO00209\n.* OBSLUGA RECFM                                                        ABO00210\n         TM    36(1),X'FE'        CZY RECFM OKRESLONY                   ABO00211\n         BNZ   &C.A               TAK                                   ABO00212\n         OC    36(1,1),3(3)       NIE                                   ABO00213\n         OI    1(3),X'80'         WSK.ODP.NA RECFM                      ABO00214\n&C.A     EQU   *                  KONIEC RECFM                          ABO00215\n.K2      AIF   ('&L' EQ '' AND '&B' EQ '').K6                           ABO00216\n         LH    5,62(1)            WEZ BLKSIZE                           ABO00217\n         LH    6,82(1)            WEZ LRECL                             ABO00218\n         AIF   ('&L' EQ '').K3                                          ABO00219\n.* OBSLUGA LRECL                                                        ABO00220\n         LTR   6,6                CZY LRECL OKRESLONY                   ABO00221\n         BNZ   &C.C               TAK                                   ABO00222\n         TM    36(1),X'80'        CZY RECFM=F                           ABO00223\n         BZ    &C.B               NIE                                   ABO00224\n         TM    36(1),X'10'        CZY RECFM=FB                          ABO00225\n         BO    &C.B               TAK                                   ABO00226\n         LTR   5,5                CZY JEST BLKSIZE                      ABO00227\n         BNZ   &C.C               TAK                                   ABO00228\n&C.B     LH    6,4(3)             WEZ STAND.LRECL                       ABO00229\n         STH   6,82(1)            USTAW LRECL                           ABO00230\n         OI    1(3),X'40'         WSK.ODP.NA LRECL                      ABO00231\n&C.C     EQU   *                  KONIEC LRECL                          ABO00232\n.K3      AIF   ('&B' EQ '').K6                                          ABO00233\n.* OBSLUGA BLKSIZE                                                      ABO00234\n         AIF   ('&R' EQ '' AND N'&B GT 1).L1                            ABO00235\n         AIF   ('&R' EQ '' AND '&L' EQ '').K4                           ABO00236\n         TM    36(1),X'80'        CZY RECFM=F                           ABO00237\n         BZ    &C.D               NIE                                   ABO00238\n         TM    36(1),X'10'        CZY RECFM=FB                          ABO00239\n         BO    &C.D               TAK                                   ABO00240\n         LTR   6,6                CZY BRAK LRECL                        ABO00241\n         BZ    &C.H               TAK                                   ABO00242\n&C.D     EQU   *                  KONIEC F I NIE B                      ABO00243\n.K4      TM    36(1),X'40'        CZY RECFM=F                           ABO00244\n         BZ    *+8                TAK                                   ABO00245\n         LA    6,4(6)             NIE, LRECL:=LRECL+4                   ABO00246\n         LTR   5,5                CZY BLKSIZE OKRESL.                   ABO00247\n         BNZ   &C.E               TAK                                   ABO00248\n         LH    5,6(3)             WEZ STAND.BLKSIZE                     ABO00249\n         LTR   5,5                CZY = 0                               ABO00250\n         BZ    &C.G               TAK                                   ABO00251\n         STH   5,62(1)            NIE , USTAW BLKSIZE                   ABO00252\n         OI    1(3),X'20'         WSK.ODP.NA BLKSIZE                    ABO00253\n&C.E     TM    36(1),X'40'        CZY RECFM=F                           ABO00254\n         BZ    &C.F               TAK                                   ABO00255\n         CR    5,6                NIE,SPRAWDZ BLKSIZE                   ABO00256\n         BNL   &C.H               DOBRY                                 ABO00257\n         B     &C.G               ZLY                                   ABO00258\n&C.F     XR    4,4                SPRAWDZ BLKSIZE                       ABO00259\n         DR    4,6                DLA RECFM = F                         ABO00260\n         LTR   4,4                CZY BLKSIZE / LRECL                   ABO00261\n         BZ    &C.H               TAK                                   ABO00262\n.K5      ANOP                                                           ABO00263\n&C.G     STH   6,62(1)            USTAW BLKSIZE=BMIN                    ABO00264\n         OI    1(3),X'10'         WSK.ODP.NA BMIN                       ABO00265\n&C.H     EQU   *                  KONIEC BLKSIZE                        ABO00266\n.K6      AIF   ('&N' EQ '').K7                                          ABO00267\n.* OBSLUGA GETPOOL                                                      ABO00268\n         LR    6,1                SCHOWAJ ADRES DCB                     ABO00269\n         XR    4,4                                                      ABO00270\n         IC    4,20(1)            WEZ BUFNO                             ABO00271\n         LTR   4,4                CZY = 0                               ABO00272\n         BNZ   &C.I               NIE                                   ABO00273\n         IC    4,2(3)             WEZ STAND.BUFNO                       ABO00274\n         OI    1(3),X'08'         WSK.ODP.NA BUFNO                      ABO00275\n&C.I     LH    5,62(1)            WEZ BLKSIZE                           ABO00276\n         GETPOOL (1),(4),(5)                                            ABO00277\n         LR    1,6                ADRES DCB                             ABO00278\n.K7      AIF   ('&K' EQ '').K8                                          ABO00279\n.* OBSLUGA KONKATENACJI                                                 ABO00280\n         TM    0(3),X'0F'         CZY PIERWSZY RAZ                      ABO00281\n         BZ    *+10               TAK                                   ABO00282\n         OI    0(3),X'10'         NIE, USTAW POM.DOK.                   ABO00283\n         BR    14                 WROC                                  ABO00284\n         OI    0(3),X'01'         USTAW, ZE NIE PIER.                   ABO00285\n         OI    48(1),X'08'        USTAW KONKATENACJE                    ABO00286\n.K8      BR    14                 WROC                                  ABO00287\n         DROP  15                                                       ABO00288\n         MEXIT                                                          ABO00289\n.* OBSLUGA BLKSIZE DLA F                                                ABO00290\n.L1      AIF   ('&B(2)' NE 'F').L3                                      ABO00291\n         AIF   ('&R' EQ '' AND '&L' EQ '').L2                           ABO00292\n         TM    36(1),X'10'        CZY RECFM=FB                          ABO00293\n         BO    &C.D               TAK                                   ABO00294\n         LTR   6,6                CZY BRAK LRECL                        ABO00295\n         BZ    &C.H               TAK                                   ABO00296\n&C.D     EQU   *                  KONIEC F I NIE B                      ABO00297\n.L2      LTR   5,5                CZY BLKSIZE OKRESL.                   ABO00298\n         BNZ   &C.E               TAK                                   ABO00299\n         LH    5,6(3)             WEZ STAND.BLKSIZE                     ABO00300\n         LTR   5,5                CZY = 0                               ABO00301\n         BZ    &C.G               TAK                                   ABO00302\n         STH   5,62(1)            NIE , USTAW BLKSIZE                   ABO00303\n         OI    1(3),X'20'         WSK.ODP.NA BLKSIZE                    ABO00304\n&C.E     XR    4,4                SPRAWDZ BLKSIZE                       ABO00305\n         DR    4,6                CZY PODZIELNY                         ABO00306\n         LTR   4,4                PRZEZ LRECL                           ABO00307\n         BZ    &C.H               TAK                                   ABO00308\n         AGO   .K5                                                      ABO00309\n.* OBSLUGA BLKSIZE DLA V                                                ABO00310\n.L3      LA    6,4(6)             LRECL:=LRECL+4                        ABO00311\n         LTR   5,5                CZY BLKSIZE OKRESL.                   ABO00312\n         BNZ   &C.E               TAK                                   ABO00313\n         LH    5,6(3)             WEZ STAND.BLKSIZE                     ABO00314\n         LTR   5,5                CZY = 0                               ABO00315\n         BZ    &C.G               TAK                                   ABO00316\n         STH   5,62(1)            NIE , USTAW BLKSIZE                   ABO00317\n         OI    1(3),X'20'         WSK.ODP.NA BLKSIZE                    ABO00318\n&C.E     CR    5,6                SPRAWDZ BLKSIZE                       ABO00319\n         BNL   &C.H               DOBRY                                 ABO00320\n         AGO   .K5                                                      ABO00321\n         MEND                                                           ABJ00322\n./ ADD NAME=DCBPREF\n         MACRO                                                          ABN00010\n&N      DCBPREF &RECFM=0,&LRECL=0,&BLKSIZE=0,&BUFNO=2                   ABO00020\n         LCLC  &C                                                       ABN00030\n*** DCBPREF    WERSJA-002                                               ABO00040\n&C       SETC  'IHB'.'&SYSNDX'                                          ABO00050\n&N       DS    0F                 TABLICA DLA \"DCBEX\"                   ABN00060\n         DC    AL1(0)             WSKAZNIK KONKATENAC                   ABN00070\n         DC    AL1(0)             WSKAZNIK ODPOWIEDZI                   ABN00080\n         DC    AL1(&BUFNO)        ILOSC BUFOROW                         ABO00090\n         AIF   ('&RECFM' NE 'F').E1                                     ABN00100\n         DC    X'80'              RECFM=F                               ABN00110\n         AGO   .F1                                                      ABN00120\n.E1      AIF   ('&RECFM' NE 'V').E2                                     ABN00130\n         DC    X'40'              RECFM=V                               ABN00140\n         AGO   .F1                                                      ABN00150\n.E2      AIF   ('&RECFM' NE 'FA').E3                                    ABN00160\n         DC    X'84'              RECFM=FA                              ABN00170\n         AGO   .F1                                                      ABN00180\n.E3      AIF   ('&RECFM' NE 'VA').E4                                    ABN00190\n         DC    X'44'              RECFM=VA                              ABN00200\n         AGO   .F1                                                      ABN00210\n.E4      AIF   ('&RECFM' NE 'FM').E5                                    ABN00220\n         DC    X'82'              RECFM=FM                              ABN00230\n         AGO   .F1                                                      ABN00240\n.E5      AIF   ('&RECFM' NE 'FB').E6                                    ABN00250\n         DC    X'90'              RECFM=FB                              ABN00260\n         AGO   .F1                                                      ABN00270\n.E6      AIF   ('&RECFM' NE 'VB').E7                                    ABN00280\n         DC    X'50'              RECFM=VB                              ABN00290\n         AGO   .F1                                                      ABN00300\n.E7      AIF   ('&RECFM' NE 'FBA').E8                                   ABN00310\n         DC    X'94'              RECFM=FBA                             ABN00320\n         AGO   .F1                                                      ABN00330\n.E8      AIF   ('&RECFM' NE 'VBA').E9                                   ABN00340\n         DC    X'54'              RECFM=VBA                             ABN00350\n         AGO   .F1                                                      ABN00360\n.E9      AIF   ('&RECFM' NE 'FBM').E10                                  ABN00370\n         DC    X'92'              RECFM=FBM                             ABN00380\n         AGO   .F1                                                      ABN00390\n.E10     AIF   ('&RECFM' NE 'VBS').E11                                  ABN00400\n         DC    X'58'              RECFM=VBS                             ABN00410\n         AGO   .F1                                                      ABN00420\n.E11     AIF   ('&RECFM'(1,1) GT 'Z').E12                               ABO00430\n&C.A     DC    &RECFM             FORMAT REKORDOW                       ABO00440\n         ORG   &C.A+1                                                   ABO00450\n         AGO   .F1                                                      ABO00460\n.E12     DC    AL1(&RECFM)        FORMAT REKORDOW                       ABO00470\n.F1      DC    AL2(&LRECL)        DLUGOSC REKORDOW                      ABO00480\n         DC    AL2(&BLKSIZE)      DLUGOSC BLOKOW                        ABN00490\n         MEND                                                           ABN00500\n./ ADD NAME=DDENT\n         MACRO\n&N       DDENT &DD,&T=,&EN=,&OPE=NO\n         LCLA  &A,&A1,&A2,&A3\n         LCLB  &B1,&B2,&B3,&B4\n         LCLC  &C,&C1\n*** DDENT      EDYCJA AAS-004\n&C       SETC  'IHB'.'&SYSNDX'\n         AIF   ('&DD' EQ '').E0\n&B1      SETB  ('&DD'(1,1) EQ '''')\n         AIF   ('&DD'(1,1) NE '(').E0\n&C1      SETC  '0'\n.E0      ANOP\n&B2      SETB  ('&EN' EQ 'AUTO')\n&B3      SETB  ('&T' EQ '')\n&B4      SETB  ('&DD' EQ '' OR '&DD' EQ '*')\n&A       SETA  &B1*8+&B2*4+&B3*4   OBLICZ DLUGOSC STALYCH\n         AIF   (&A EQ 0).E3\n&A       SETA  &A+4\n&A1      SETA  &B1*8\n&A2      SETA  &B2*4+&A1\n&A3      SETA  &A2                 WZGLEDNY ADR. ADRESU TIOT\n         CNOP  0,4\n&N       BAL   14,*+&A\n         AIF   (&B1 EQ 0).E1\n         DC    CL8&DD\n.E1      AIF   (&B2 EQ 0).E2\n         DC    A(0)\n.E2      AIF   (&B3 EQ 0).E4\n         DC    A(0)\n         AGO   .E4\n.E3      ANOP\n         AIF   ('&N' EQ '').E4\n&N       DS    0H\n.E4      AIF   ('&DD' NE '').E5\n         MNOTE *,'PODSTAWIONO JAKO 1 PARAMETR \"*\"'\n         AGO   .G1\n.E5      AIF   ('&DD' EQ '*').G1\n.*  PRZESZUKIWACZ DO ENTRY\n.*  POCZATEK CZESCI WSPOLNEJ\n.F1      AIF   ('&T' EQ '').F2\n         AIF   ('&T'(1,1) EQ '(').F3\n         L     1,&T\n         AGO   .F4\n.F2      L     1,16 *              CVT ADDRESS\n         L     1,0(1) *            POINTER TO CURRENT TCB\n         L     1,0(1) *            CURRENT TCB ADDRESS\n         L     1,12(1) *           TIOT ADDRESS\n         ST    1,&A3.(14) *        STORE TIOT ADDRESS\n         AGO   .F4\n.F3      LR    1,&T\n.F4      LA    1,24(1)\n.*  KONIEC CZESCI WSPOLNEJ\n         AIF   (&B4 EQ 1).G6\n         SR    0,0\n         BALR  15,0\n         IC    0,0(1)\n         LTR   0,0\n         BZ    &C.A\n         AIF   (&B1 EQ 0).F5\n         CLC   4(8,1),0(14)\n         AGO   .F6\n.F5      CLC   4(8,1),&C1&DD\n.F6      BE    &C.A+2\n         AR    1,0\n         BR    15\n&C.A     SR    1,1\n.*  POCZATEK CZESCI WSPOLNEJ\n.F7      AIF   ('&EN' EQ '').F10\n         AIF   ('&EN'(1,1) EQ '(').F8\n         AIF   ('&EN' EQ 'AUTO').F9\n         ST    1,&EN\n         AGO   .F10\n.F8      LR    &EN,1\n         AGO   .F10\n.F9      ST    1,&A1.(14)\n.*  KONIEC CZESCI WSPOLNEJ\n.F10     AIF   (&B4 EQ 1).G7\n         AIF   ('&T' NE '').F11\n         L     0,&A3.(14)\n.F11     MEXIT\n.*  PODAWACZ DO ENTRY\n.G1      AIF   ('&EN' EQ '').G2\n         AIF   ('&EN'(1,1) EQ '(').G3\n         AIF    ('&EN' EQ 'AUTO').G4\n         L     1,&EN\n.G2      LTR   1,1\n         AGO   .G5\n.G3      LTR   1,&EN\n         AGO   .G5\n.G4      L     1,&A1.(14)\n         AGO   .G2\n.G5      BNZ   &C.A\n         AGO   .F1\n.G6      AIF   ('&OPE' EQ '').G6A\n         AIF   ('&OPE'(1,1) EQ 'N').G6A\n         AGO   .G6B\n.G6A     B     *+12\n.G6B     ANOP\n&C.A     SR    0,0\n         IC    0,0(1)\n         AR    1,0\n         AGO   .F7\n.G7      CLI   0(1),0\n         BNE   *+6\n         SR    1,1\n         MEND\n./ ADD NAME=DRUKUJ\n         MACRO\n&N       DRUKUJ &D,&R=,&L=,&C=,&SV=,&FD=V,&END=NO\n         LCLA  &A1,&A2\n         LCLC  &CR,&C1,&C2,&C3,&C4\n*** DRUKUJ     EDYCJA AAO-005\n         AIF   ('&N' EQ '').E0\n&N       DS    0H\n.E0      AIF   ('&SV' EQ '').E1\n         AIF   ('&SV'(1,1) NE '(').E0A\n&C4      SETC  '0'\n.E0A     STM   14,1,&C4&SV\n.E1      AIF   ('&FD' EQ 'F' OR '&L' EQ '').E9\n         AIF   ('&R' NE '').E2\n         LR    14,0\n&CR      SETC  '(14)'\n         AGO   .E3\n.E2      AIF   ('&R'(1,1) NE '(').E6\n&CR      SETC  '&R'\n.E3      AIF   ('&L'(1,1) EQ '(').E5\n         AIF   (T'&L EQ 'N' OR T'&L EQ 'U').E4\n         MVC   1(1,&CR),&L\n         AGO   .E9\n.E4      MVI   1&CR,&L\n         AGO   .E9\n.E5      STC   &L,1&CR\n         AGO   .E9\n.E6      AIF   ('&L'(1,1) EQ '(').E8\n         AIF   (T'&L EQ 'N' OR T'&L EQ 'U').E7\n         MVC   &R.+1(1),&L\n         AGO   .E9\n.E7      MVI   &R.+1,&L\n         AGO   .E9\n.E8      STC   &L,&R.+1\n.E9      AIF   ('&C' EQ '').F8\n         AIF   ('&FD' EQ 'F').F0\n&A1      SETA  4\n.F0      AIF   ('&CR' NE '').F2\n         AIF   ('&R' EQ '').F1\n&CR      SETC  '&R'\n         AGO   .F2\n.F1      LR    14,0\n&CR      SETC  '(14)'\n.F2      AIF   ('&R' EQ '').F5\n         AIF   ('&R'(1,1) EQ '(').F5\n         AIF   ('&C'(1,1) EQ '(').F4\n         AIF   (T'&C EQ 'N' OR T'&C EQ 'U').F3\n         MVC   &R.+&A1.(1),&C\n         AGO   .F8\n.F3      MVI   &R.+&A1,&C\n         AGO   .F8\n.F4      STC   &C,&R.+&A1\n         AGO   .F8\n.F5      AIF   ('&C'(1,1) EQ '(').F7\n         AIF   (T'&C EQ 'N' OR T'&C EQ 'U').F6\n         MVC   &A1.(1,&CR),&C\n         AGO   .F8\n.F6      MVI   &A1&CR,&C\n         AGO   .F8\n.F7      STC   &C,&A1&CR\n.F8      AIF   ('&R' EQ '').G1\n         AIF   ('&R'(1,1) EQ '(').G0\n         LA    0,&R\n         AGO   .G1\n.G0      LR    0,&R\n.G1      AIF   ('&D' EQ '').G3\n         AIF   ('&D'(1,1) EQ '(').G2\n         LA    1,&D\n         AGO   .G3X\n.G2      LR    1,&D\n         AGO   .G3X\n.G3      AIF   ('&END'(1,1) EQ 'N').G3X\n         MVC   IHB&SYSNDX+1(3),17(1)\n.G3X     L     15,20(1)\n         BALR  14,15\n         AIF   ('&END'(1,1) EQ 'N').G3D\n         AIF   ('&D' EQ '').G3B                                       0\n         AIF   ('&D'(1,1) EQ '(').G3A\n         LA    1,&D+16\n         AGO   .G3C\n.G3A     LA    1,16&D\n         AGO   .G3C\n.G3B     CNOP  0,4\n         BAL   1,*+8\nIHB&SYSNDX DS  F\n.G3C     MVI   0(1),128\n         SVC   20\n.G3D     AIF   ('&SV' EQ '').G4\n         LM    14,1,&C4&SV\n         BR    14\n.G4      MEND\n./ ADD NAME=JFCBDEF\n         MACRO                                                          AGW00010\n         JFCBDEF                                                        AGW00020\nJFCBDSNM EQU   0                                                        AGW00030\nJFCBELNM EQU   44                                                       AHE00040\nJFCBTDSM EQU   52                                                       AGW00050\nJFCBLTYP EQU   66                                                       AGW00060\nJFCBFLSQ EQU   68                                                       APK00070\nJFCBMASK EQU   72                                                       AGW00080\nJFCBDEN  EQU   94                                                       AGW00090\nJFCBDSOR EQU   98                                                       AGW00100\nJFCBRECF EQU   100                                                      AGW00110\nJFCBBLKS EQU   102                                                      AGW00120\nJFCBLREC EQU   104                                                      AGW00130\nJFCBVOLS EQU   118                                                      AGW00140\n         MEND                                                           AGW00150\n* ACS=                                                                  AGZ00160\n*     EXCP                                                              AGZ00170\n*    *QSAM                                                              AGZ00180\n*     BPAM                                                              AGZ00190\n*     BSAM                                                              AGZ00200\n* DEV=                                                                  AGZ00210\n*    *DA                                                                AGZ00220\n*     MT                                                                AGZ00230\n*     PR                                                                AGZ00240\n*     PT                                                                AGZ00250\n*     CR                                                                AGZ00260\n*     ALL                                                               AGZ00270\n* MCR                                                                   AGZ00280\n*    *RD                                                                AGZ00290\n*     WT                                                                AGZ00300\n         AIF   ('&ACS' NE '').E01                                       AGZ00310\n&ACS     SETC  'QSAM'                                                   AGZ00320\n.E01     ANOP                                                           AGZ00330\n         AIF   ('&DEV' NE '').E02                                       AGZ00340\n&DEV     SETC  'DA'                                                     AGZ00350\n.E02     ANOP                                                           AGZ00360\n         AIF   ('&MCR' NE '').E03                                       AGZ00370\n&MCR     SETC  'RD'                                                     AGZ00380\n.E03     ANOP                                                           AGZ00390\n         AIF   ('&ACS' NE 'ISAM' OR '&ACS' NE 'QISAM').E04              AGZ00400\n&DEV     SETC  'DA'                                                     AGZ00410\nJFCBDSNM EQU  0                                                         AGY00420\nJFCBELNM EQU    44                                                      AGY00430\nJFCBTSDM EQU    52                                                      AGY00440\nJFCBDSCB EQU    53                                                      AGY00450\nJFCBCBID EQU    56                                                      AGY00460\nJFCBLTYP EQU    66                                                      AGY00470\nJFCBOTTR EQU 67                                                         AGY00480\nJFCBUFOF EQU 67                                                         AGY00490\nJFCBFLSQ EQU    68                                                      AGY00500\nJFCBFUNC EQU    68                                                      AGY00510\nJFCBVLSQ EQU    70                                                      AGY00520\nJFCBMASK EQU    72                                                      AGY00530\nJFCBCRDT EQU    80                                                      AGY00540\nJFCBXPDT EQU    83                                                      AGY00550\nJFCBIND1 EQU    86                                                      AGY00560\nJFCBIND2 EQU    87                                                      AGY00570\nJFCBUFNO EQU    88                                                      AGY00580\nJFCBUFRQ EQU    88                                                      AGY00590\nJFCBUFIN EQU    88                                                      AGY00600\nJFCBUFIN JFCBUFOU8                                                      AGY00610\nJFCBFTEK EQU   89                                                       AGY00620\nJFCBHIAR EQU   89                                                       AGY00630\nJFCBFTEK EQU   89                                                       AGY00640\nJFCBFALN EQU   89                                                       AGY00650\nJFCBFALN JFCBUFL                   EQU                                  AGY00660\nJFCEROPT EQU   92                                                       AGY00670\nJFCBTRTCH      EQU                           93                         AGY00680\nJFCTRTCH EQU   93                                                       AGY00690\nJFCKEYLE EQU   93                                                       AGY00700\nJFCMODEE EQU   93                                                       AGY00710\nJFCMODE  EQU   93                                                       AGY00720\nJFCSTACK EQU   93                                                       AGY00730\nJFCPRTSP EQU   93                                                       AGY00740\nJFCCODE  EQU   93                                                       AGY00750\nJFCDEN   EQU   94                                                       AGY00760\nJFCLIMCT EQU   96                                                       AGY00770\nJFCDSORG EQU   98                                                       AGY00780\nJFCRECFM EQU   100                                                      AGY00790\nJFCOPTCD EQU   101                                                      AGY00800\nJFCBLKSI EQU   102                                                      AGY00810\nJFCBUFSI EQU   102                                                      AGY00820\nJFCLRECL EQU   104                                                      AGY00830\nJFCNCP   EQU   106                                                      AGY00840\nJFCNTM   EQU   107                                                      AGY00850\nJFCBUFMX EQU   106                                                      AGY00860\nJFCPCI   EQU   107                                                      AGY00870\nJFCBRSRV EQU   108                                                      AGY00880\nJFCINVLT EQU   112                                                      AGY00890\nJFCCPRI  EQU   113                                                      AGY00900\nJFCTHRSH EQU   113                                                      AGY00910\nJFCRKP   EQU   108                                                      AGY00920\nJFCCYLOF EQU   110                                                      AGY00930\nJFCDBUFN EQU   111                                                      AGY00940\nJFCINTVL EQU   112                                                      AGY00950\nJFCUCSID EQU   108                                                      AGY00960\nJFCUCSOP EQU   112                                                      AGY00970\nJFCCPRI  EQU   113                                                      AGY00980\nJFCSOWA  EQU   114                                                      AGY00990\nJFCOUTLI EQU   113                                                      AGY01000\nJFCBNVOL EQU   117                                                      AGY01010\nJFCBVOLS EQU   118                                                      AGY01020\nJFCBEXTL EQU   148                                                      AGY01030\nJFCBEXAD EQU   149                                                      AGY01040\nJFCBPQTY EQU   152                                                      AGY01050\nJFCBCTRI EQU   155                                                      AGY01060\nJFCBSQTY EQU   156                                                      AGY01070\nJFCFLGS1 EQU   159                                                      AGY01080\nJFCBDQTY EQU   160                                                      AGY01090\nJFCBSPNM EQU   163                                                      AGY01100\nJFCBABST EQU   166                                                      AGY01110\nJFCBSBNM EQU   168                                                      AGY01120\nJFCBDRLH EQU   171                                                      AGY01130\nJFCBVLCT EQU   174                                                      AGY01140\nJFCBSPTN EQU   175                                                      AGY01150\n./ ADD NAME=KOMU     0102-86174-86174-0921-00519-00519-00000-ZTSDKJB\n         MACRO                                                             00001\n         KOMU  &PROG,&KOM=                                                 00002\n         LCLA  &A1,&A2                                                     00003\n         LCLC  &NK,&PG,&SP                                              ABI00004\n         AIF   ('&PROG' NE '').POCZ                                        00005\n         MNOTE 8,'   ******** NIEOKRESLONA NAZWA PROGRAMU'                 00006\n.POCZ    ANOP                                                              00007\n         MNOTE *,'   ******** KOMU       012 '                          ABZ00008\n&A1      SETA  1                                                           00009\n&A2      SETA  2                                                           00010\n&SP      SETC  '       '                                                ABI00011\n&PG      SETC  '&PROG&SP'(1,8)                                          ABI00012\n         AIF   ('&KOM' NE '').POC                                          00013\n         MNOTE *,'    ******** NIEOKRESLONA LISTA KOMUNIKATOW'             00014\n         MEXIT                                                             00015\n.POC     ANOP                                                              00016\n&NK     SETC   '&KOM'(&A2,K'&KOM(&A1))                                     00017\n         AIF   ('&NK' NE '000').E000                                       00018\nPK&NK    DS    0F                                                          00019\n         DC    C'MAN&NK.A '                                                00020\n         DC    C'&PG ENTER DISPOSITION'                                    00021\nDK&NK    EQU   *-PK&NK                                                     00022\n         AGO   .KP                                                         00023\n.E000    ANOP                                                              00024\n         AIF   ('&NK' NE '001').E001                                       00025\nPK&NK    DS    0F                                                          00026\n         DC    C'MAN&NK.I '                                                00027\n         DC    C'&PG DISPOSITION ERROR'                                    00028\nDK&NK    EQU   *-PK&NK                                                     00029\n         AGO   .KP                                                         00030\n.E001    ANOP                                                              00031\n         AIF   ('&NK' NE '002').E002                                       00032\nPK&NK    DS    0F                                                          00033\n         DC    C'MAN&NK.A '                                                00034\n         DC    C'&PG ENTER MODE'                                           00035\nDK&NK    EQU   *-PK&NK                                                     00036\n         AGO   .KP                                                         00037\n.E002    ANOP                                                              00038\n         AIF   ('&NK' NE '003').E003                                       00039\nPK&NK    DS    0F                                                          00040\n         DC    C'MAN&NK.I '                                                00041\n         DC    C'&PG INVALID REPLY'                                     ABI00042\nDK&NK    EQU   *-PK&NK                                                     00043\n         AGO   .KP                                                         00044\n.E003    ANOP                                                              00045\n         AIF   ('&NK' NE '010').E010                                       00046\nPK&NK    DS    0F                                                          00047\n         DC    C'MAN&NK.A '                                                00048\n         DC    C'&PG ENTER VOLUME-ID'                                      00049\nDK&NK    EQU   *-PK&NK                                                     00050\n         AGO   .KP                                                         00051\n.E010    ANOP                                                              00052\n         AIF   ('&NK' NE '011').E011                                       00053\nPK&NK    DS    0F                                                          00054\n         DC    C'MAN&NK.A '                                                00055\n         DC    C'&PG ENTER OLD VOLUME-ID'                                  00056\nDK&NK    EQU   *-PK&NK                                                     00057\n         AGO   .KP                                                         00058\n.E011    ANOP                                                              00059\n         AIF   ('&NK' NE '012').E012                                       00060\nPK&NK    DS    0F                                                          00061\n         DC    C'MAN&NK.A '                                                00062\n         DC    C'&PG ENTER NEW VOLUME-ID'                                  00063\nDK&NK    EQU   *-PK&NK                                                     00064\n         AGO   .KP                                                         00065\n.E012    ANOP                                                              00066\n         AIF   ('&NK' NE '014').E014                                       00067\nPK&NK    DS    0F                                                          00068\n         DC    C'MAN&NK.A '                                                00069\n         DC    C'&PG ENTER OWNER NAME'                                     00070\nDK&NK    EQU   *-PK&NK                                                     00071\n         AGO   .KP                                                         00072\n.E014    ANOP                                                              00073\n         AIF   ('&NK' NE '016').E016                                       00074\nPK&NK     DS     0F                                                        00075\n         DC     C'MAN&NK.I '                                               00076\n         DC    C'&PG VOLUMES ALLOCATED:'                                   00077\nDK&NK    EQU   *-PK&NK                                                     00078\n         AGO   .KP                                                         00079\n.E016    ANOP                                                              00080\n         AIF   ('&NK' NE '020').E020                                       00081\nPK&NK    DS    0F                                                          00082\n         DC    C'MAN&NK.A '                                                00083\n         DC    C'&PG ENTER DSN'                                            00084\nDK&NK    EQU   *-PK&NK                                                     00085\n         AGO   .KP                                                         00086\n.E020    ANOP                                                              00087\n         AIF   ('&NK' NE '021').E021                                       00088\nPK&NK    DS    0F                                                          00089\n         DC    C'MAN&NK.A '                                                00090\n         DC    C'&PG ENTER DSN-OLD'                                        00091\nDK&NK    EQU   *-PK&NK                                                     00092\n         AGO   .KP                                                         00093\n.E021    ANOP                                                              00094\n         AIF   ('&NK' NE '022').E022                                       00095\nPK&NK    DS    0F                                                          00096\n         DC    C'MAN&NK.A '                                                00097\n         DC    C'&PG ENTER DSN-NEW'                                        00098\nDK&NK    EQU   *-PK&NK                                                     00099\n         AGO   .KP                                                         00100\n.E022    ANOP                                                              00101\n         AIF   ('&NK' NE '024').E024                                       00102\nPK&NK    DS    0F                                                          00103\n         DC    C'MAN&NK.I '                                                00104\n         DC    C'&PG DDN=XXXXXXXX MISSED'                                  00105\nDK&NK    EQU   *-PK&NK                                                     00106\n         AGO   .KP                                                         00107\n.E024    ANOP                                                              00108\n         AIF   ('&NK' NE '025').E025                                       00109\nPK&NK    DS    0F                                                          00110\n         DC    C'MAN&NK.I '                                                00111\n         DC    C'&PG DDN=XXXXXXXX NOT SPECIFIED'                           00112\nDK&NK    EQU   *-PK&NK                                                     00113\n         AGO   .KP                                                         00114\n.E025    ANOP                                                              00115\n         AIF   ('&NK' NE '026').E026                                       00116\nPK&NK    DS    0F                                                          00117\n         DC    C'MAN&NK.A '                                                00118\n         DC    C'&PG ENTER MEMBER NAME'                                    00119\nDK&NK    EQU   *-PK&NK                                                     00120\n         AGO   .KP                                                         00121\n.E026    ANOP                                                              00122\n         AIF   ('&NK' NE '027').E027                                       00123\nPK&NK    DS    0F                                                          00124\n         DC    C'MAN&NK.I '                                                00125\n         DC    C'&PG DDN'XXXXXXXX DATA SET NOT OPENED'                     00126\nDK&NK    EQU   *-PK&NK                                                     00127\n         AGO   .KP                                                         00128\n.E027    ANOP                                                              00129\n         AIF   ('&NK' NE '028').E028                                    ABI00130\nPK&NK    DS    0F                                                       ABI00131\n         DC    C'MAN&NK.A '                                             ABI00132\n         DC    C'&PG ENTER ALIAS NAME'                                  ABI00133\nDK&NK    EQU   *-PK&NK                                                  ABI00134\n         AGO   .KP                                                      ABI00135\n.E028    ANOP                                                           ABI00136\n         AIF   ('&NK' NE '030').E030                                       00137\nPK&NK    DS    0F                                                          00138\n         DC    C'MAN&NK.I '                                                00139\n         DC    C'&PG ERROR NO XXX'                                         00140\nDK&NK    EQU   *-PK&NK                                                     00141\n         AGO   .KP                                                         00142\n.E030    ANOP                                                              00143\n         AIF   ('&NK' NE '031').E031                                       00144\nPK&NK    DS    0F                                                          00145\n         DC    C'MAN&NK.I '                                                00146\n         DC    C'&PG XXX ERRORS DETECTED'                                  00147\nDK&NK    EQU   *-PK&NK                                                     00148\n         AGO   .KP                                                         00149\n.E031    ANOP                                                              00150\n         AIF   ('&NK' NE '032').E032                                    ABA00151\nPK&NK    DS    0F                                                       ABA00152\n         DC    C'MAN&NK.I '                                             ABA00153\n         DC    C'&PG I/O ERROR'                                         ABA00154\nDK&NK    EQU   *-PK&NK                                                  ABA00155\n         AGO   .KP                                                      ABA00156\n.E032    ANOP                                                           ABA00157\n         AIF   ('&NK' NE '040').E040                                       00158\nPK&NK    DS    0F                                                          00159\n         DC    C'MAN&NK.A '                                                00160\n         DC    C'&PG SPECIFY PAGE PARAMETERS'                              00161\nDK&NK    EQU   *-PK&NK                                                     00162\n         AGO   .KP                                                         00163\n.E040    ANOP                                                              00164\n         AIF   ('&NK' NE '050').E050                                       00165\nPK&NK    DS    0F                                                          00166\n         DC    C'MAN&NK.A '                                                00167\n         DC    C'&PG SPECIFY UNIT NUMBER'                                  00168\nDK&NK    EQU   *-PK&NK                                                     00169\n         AGO   .KP                                                         00170\n.E050    ANOP                                                              00171\n         AIF   ('&NK' NE '052').E052                                       00172\nPK&NK    DS    0F                                                          00173\n         DC    C'MAN&NK.A '                                                00174\n         DC    C'&PG SPECIFY UNIT TYPE'                                    00175\nDK&NK    EQU   *-PK&NK                                                     00176\n         AGO   .KP                                                         00177\n.E052    ANOP                                                              00178\n         AIF   ('&NK' NE '060').E060                                       00179\nPK&NK    DS    0F                                                          00180\n         DC    C'MAN&NK.D '                                                00181\n         DC    C'&PG SYS1 DATA SET'                                        00182\nDK&NK    EQU   *-PK&NK                                                     00183\n         AGO   .KP                                                         00184\n.E060    ANOP                                                              00185\n         AIF   ('&NK' NE '061').E061                                       00186\nPK&NK    DS    0F                                                          00187\n         DC    C'MAN&NK.D '                                                00188\n         DC    C'&PG E-CONFIRM SCRATCH REQUEST'                            00189\nDK&NK    EQU   *-PK&NK                                                     00190\n         AGO   .KP                                                         00191\n.E061    ANOP                                                              00192\n         AIF   ('&NK' NE '062').E062                                       00193\nPK&NK    DS    0F                                                          00194\n         DC    C'MAN&NK.D '                                                00195\n         DC    C'&PG E-CONFIRM WRITE REQUEST'                              00196\nDK&NK    EQU   *-PK&NK                                                     00197\n         AGO   .KP                                                         00198\n.E062    ANOP                                                              00199\n         AIF   ('&NK' NE '070').E070                                       00200\nPK&NK    DS    0F                                                          00201\n         DC    C'MAN&NK.A '                                                00202\n         DC    C'&PG ENTER FILE NUMBER'                                    00203\nDK&NK    EQU   *-PK&NK                                                     00204\n         AGO   .KP                                                         00205\n.E070    ANOP                                                              00206\n         AIF   ('&NK' NE '071').E071                                       00207\nPK&NK    DS    0F                                                          00208\n         DC    C'MAN&NK.I '                                                00209\n         DC    C'&PG XXX FILES READ'                                       00210\nDK&NK    EQU   *-PK&NK                                                     00211\n         AGO   .KP                                                         00212\n.E071    ANOP                                                              00213\n         AIF   ('&NK' NE '072').E072                                       00214\nPK&NK    DS    0F                                                          00215\n         DC    C'MAN&NK.I '                                                00216\n         DC    C'&PG XXX FILES WRITTEN'                                    00217\nDK&NK    EQU   *-PK&NK                                                     00218\n         AGO   .KP                                                         00219\n.E072    ANOP                                                              00220\n         AIF   ('&NK' NE '073').E073                                       00221\n         DC    C'MAN&NK.A '                                             ABI00222\n         DC    C'&PG ENTER NUMBER OF COPIES'                               00223\nDK&NK    EQU   *-PK&NK                                                     00224\n         AGO   .KP                                                         00225\n.E073    ANOP                                                              00226\n         AIF   ('&NK' NE '074').E074                                       00227\n         DC    C'MAN&NK.A '                                             ABI00228\n         DC    C'&PG ENTER GENERATION RATIO'                               00229\nDK&NK    EQU   *-PK&NK                                                     00230\n         AGO   .KP                                                         00231\n.E074    ANOP                                                              00232\n         AIF   ('&NK' NE '075').E075                                    ABI00233\nPK&NK    DS    0F                                                       ABI00234\n         DC    C'MAN&NK.A '                                             ABI00235\n         DC    C'&PG ENTER RECFM'                                       ABI00236\nDK&NK    EQU   *-PK&NK                                                  ABI00237\n         AGO   .KP                                                      ABI00238\n.E075    ANOP                                                           ABI00239\n         AIF   ('&NK' NE '076').E076                                    ABI00240\nPK&NK    DS    0F                                                       ABI00241\n         DC    C'MAN&NK.A '                                             ABI00242\n         DC    C'&PG ENTER LRECL'                                       ABI00243\nDK&NK    EQU   *-PK&NK                                                  ABI00244\n         AGO   .KP                                                      ABI00245\n.E076    ANOP                                                           ABI00246\n         AIF   ('&NK' NE '080').E080                                       00247\nPK&NK    DS    0F                                                          00248\n         DC    C'MAN&NK.I '                                                00249\n         DC    C'&PG NO DATA SET ON VOLUME'                                00250\nDK&NK    EQU   *-PK&NK                                                     00251\n         AGO   .KP                                                         00252\n.E080    ANOP                                                              00253\n         AIF   ('&NK' NE '081').E081                                       00254\nPK&NK    DS    0F                                                          00255\n         DC    C'MAN&NK.I '                                                00256\n         DC    C'&PG XXX NO CORRECT PASSWORD'                              00257\nDK&NK    EQU   *-PK&NK                                                     00258\n         AGO   .KP                                                         00259\n.E081    ANOP                                                              00260\n         AIF   ('&NK' NE '082').E082                                       00261\nPK&NK    DS    0F                                                          00262\n         DC    C'MAN&NK.I '                                                00263\n         DC    C'&PG RETENTION NOT EXPIRED'                                00264\nDK&NK    EQU   *-PK&NK                                                     00265\n         AGO   .KP                                                         00266\n.E082    ANOP                                                              00267\n         AIF   ('&NK' NE '083').E083                                       00268\nPK&NK    DS    0F                                                          00269\n         DC    C'MAN&NK.I '                                                00270\n         DC    C'&PG DATA SET EXISTS'                                      00271\nDK&NK    EQU   *-PK&NK                                                     00272\n         AGO   .KP                                                         00273\n.E083    ANOP                                                              00274\n         AIF   ('&NK' NE '084').E084                                       00275\nPK&NK    DS    0F                                                          00276\n         DC    C'MAN&NK.I '                                                00277\n         DC    C'&PG PERMANENT I/O ERRORS'                                 00278\nDK&NK    EQU   *-PK&NK                                                     00279\n         AGO   .KP                                                         00280\n.E084    ANOP                                                              00281\n         AIF   ('&NK' NE '085').E085                                       00282\nPK&NK    DS    0F                                                          00283\n         DC    C'MAN&NK.I '                                                00284\n         DC    C'&PG NO DEVICE FOR VOLUME'                                 00285\nDK&NK    EQU   *-PK&NK                                                     00286\n         AGO   .KP                                                         00287\n.E085    ANOP                                                              00288\n         AIF   ('&NK' NE '086').E086                                       00289\nPK&NK    DS    0F                                                          00290\n         DC    C'MAN&NK.I '                                                00291\n         DC    C'&PG NO VOLUME/SYSCTLG'                                    00292\nDK&NK    EQU   *-PK&NK                                                     00293\n         AGO   .KP                                                         00294\n.E086    ANOP                                                              00295\n         AIF   ('&NK' NE '087').E087                                       00296\nPK&NK    DS    0F                                                          00297\n         DC    C'MAN&NK.I '                                                00298\n         DC    C'&PG INCONSISTENT CATALOG STRUCTURE'                       00299\nDK&NK    EQU   *-PK&NK                                                     00300\n         AGO   .KP                                                         00301\n.E087    ANOP                                                              00302\n         AIF   ('&NK' NE '088').E088                                       00303\nPK&NK    DS    0F                                                          00304\n         DC    C'MAN&NK.I '                                                00305\n         DC    C'&PG NO INDEX STRUCTURE'                                   00306\nDK&NK    EQU   *-PK&NK                                                     00307\n         AGO   .KP                                                         00308\n.E088    ANOP                                                              00309\n         AIF   ('&NK' NE '089').E089                                       00310\nPK&NK    DS    0F                                                          00311\n         DC    C'MAN&NK.I '                                                00312\n         DC    C'&PG NO SPACE AVAILABLE'                                   00313\nDK&NK    EQU   *-PK&NK                                                     00314\n         AGO   .KP                                                         00315\n.E089    ANOP                                                              00316\n         AIF   ('&NK' NE '090').E090                                       00317\nPK&NK    DS    0F                                                          00318\n         DC    C'MAN&NK.I '                                                00319\n         DC    C'&PG ERRORS IN XXXXXXXX MACRO'                             00320\nDK&NK    EQU   *-PK&NK                                                     00321\n         AGO   .KP                                                         00322\n.E090    ANOP                                                              00323\n         AIF   ('&NK' NE '091').E091                                       00324\nPK&NK    DS    0F                                                          00325\n         DC    C'MAN&NK.I '                                                00326\n         DC    C'&PG ERRORS IN GENERATION NAME'                            00327\nDK&NK    EQU   *-PK&NK                                                     00328\n         AGO   .KP                                                         00329\n.E091    ANOP                                                              00330\n         AIF   ('&NK' NE '092').E092                                       00331\nPK&NK    DS    0F                                                          00332\n         DC    C'MAN&NK.I '                                                00333\n         DC    C'&PG PERMANENT CATALOG I/O ERROR'                          00334\nDK&NK    EQU   *-PK&NK                                                     00335\n         AGO   .KP                                                         00336\n.E092    ANOP                                                              00337\n         AIF   ('&NK' NE '093').E093                                       00338\nPK&NK    DS    0F                                                          00339\n         DC    C'MAN&NK.I '                                                00340\n         DC    C'&PG INDEX NOT DELETED'                                    00341\nDK&NK    EQU   *-PK&NK                                                     00342\n         AGO   .KP                                                         00343\n.E093    ANOP                                                              00344\n         AIF   ('&NK' NE '094').E094                                       00345\nPK&NK    DS    0F                                                          00346\n         DC    C'MAN&NK.I '                                                00347\n         DC    C'&PG NO NAME/NO HIGH LEVEL INDEX'                          00348\nDK&NK    EQU   *-PK&NK                                                     00349\n         AGO   .KP                                                         00350\n.E094    ANOP                                                              00351\n         AIF   ('&NK' NE '100').E100                                       00352\nPK&NK    DS    0F                                                          00353\n         DC    C'MAN&NK.I '                                                00354\n         DC    C'&PG NO DOS/OS CONVERTION'                              ABZ00355\nDK&NK    EQU   *-PK&NK                                                     00356\n         AGO   .KP                                                         00357\n.E100    ANOP                                                              00358\n         AIF   ('&NK' NE '200').E200                                       00359\nPK&NK    DS    0F                                                          00360\n         DC    C'MAN&NK.I '                                                00361\n         DC    C'&PG PARAMETERS ASSUMED:'                                  00362\nDK&NK    EQU   *-PK&NK                                                     00363\n         AGO   .KP                                                         00364\n.E200    ANOP                                                              00365\n         AIF   ('&NK' NE '201').E201                                       00366\nPK&NK    DS    0F                                                          00367\n         DC    C'MAN&NK.I '                                                00368\n         DC    C'&PG DEFAULT PARAMETERS USED'                              00369\nDK&NK    EQU   *-PK&NK                                                     00370\n         AGO   .KP                                                         00371\n.E201    ANOP                                                              00372\n         AIF   ('&NK' NE '202').E202                                       00373\nPK&NK    DS    0F                                                          00374\n         DC    C'MAN&NK.I '                                                00375\n         DC    C'&PG WRONG PARAMETER FIELD'                                00376\nDK&NK    EQU   *-PK&NK                                                     00377\n         AGO   .KP                                                         00378\n.E202    ANOP                                                              00379\n         AIF   ('&NK' NE '203').E203                                    ABB00380\nPK&NK    DS    0F                                                       ABB00381\n         DC    C'MAN&NK.I '                                             ABB00382\n         DC    C'&PG BEGIN OF PROCESSING'                               ABB00383\nDK&NK    EQU   *-PK&NK                                                  ABB00384\n         AGO   .KP                                                      ABB00385\n.E203    ANOP                                                           ABB00386\n         AIF   ('&NK' NE '204').E204                                    ABB00387\nPK&NK    DS    0F                                                       ABB00388\n         DC    C'MAN&NK.I '                                             ABB00389\n         DC    C'&PG UNSUFFICIENT CORE'                                 ABB00390\nDK&NK    EQU   *-PK&NK                                                  ABB00391\n         AGO   .KP                                                      ABB00392\n.E204    ANOP                                                           ABB00393\n         AIF   ('&NK' NE '300').E300                                       00394\nPK&NK    DS    0F                                                          00395\n         DC    C'MAN&NK.I '                                                00396\n         DC    C'&PG END OF PROCESSING'                                    00397\nDK&NK    EQU   *-PK&NK                                                     00398\n         AGO   .KP                                                         00399\n.E300    ANOP                                                           AAY00400\n         AIF   ('&NK' NE '210').E210                                       00401\nPK&NK    DS    0F                                                          00402\n         DC    C'MAN&NK.I '                                                00403\nDK&NK    EQU   *-PK&NK                                                    00404\n         AGO   .KP                                                         00405\n.E210    ANOP                                                              00406\n         AIF   ('&NK' NE '220').E220                                    ABQ00407\nPK&NK    DS    0F                                                       ABQ00408\n         DC    C'MAN&NK.D '                                             ABQ00409\n         DC    C'&PG CONFIRM'                                           ABQ00410\nDK&NK    EQU   *-PK&NK                                                  ABQ00411\n         AGO   .KP                                                      ABQ00412\n.E220    ANOP                                                           ABQ00413\n         AIF   ('&NK' NE '301').E301                                    ABD00414\nPK&NK    DS    0F                                                       ABD00415\n         DC    C'MAN&NK.I '                                             ABD00416\n         DC    C'&PG ACTION REJECTED'                                   ABD00417\nDK&NK    EQU   *-PK&NK                                                  ABD00418\n         AGO   .KP                                                      ABD00419\n.E301    ANOP                                                           ABD00420\n         AIF   ('&NK' NE '302').E302                                    ABD00421\nPK&NK    DS    0F                                                       ABD00422\n         DC    C'MAN&NK.I '                                             ABD00423\n         DC    C'&PG ACTION UNSUCCESFULLY TERMINATED'                   ABD00424\nDK&NK    EQU   *-PK&NK                                                  ABD00425\n         AGO   .KP                                                      ABD00426\n.E302    ANOP                                                           ABD00427\n         AIF   ('&NK' NE '303').E303                                    ABR00428\nPK&NK    DS    0F                                                       ABQ00429\n         DC    C'MAN&NK.I '                                             ABQ00430\n         DC    C'&PG ACTION CONFIRMED'                                  ABQ00431\nDK&NK    EQU   *-PK.&NK                                                 ABQ00432\n         AGO   .KP                                                      ABQ00433\n.E303    ANOP                                                           ABQ00434\n         AIF   ('&NK' NE '400').E400                                    ABB00435\nPK&NK    DS    0F                                                       ABB00436\n         DC    C'MAN&NK.I '                                             ABB00437\n         DC    C'&PG WRONG DSORG DDN=........'                          ABB00438\nDK&NK    EQU   *-PK&NK                                                  ABB00439\n         AGO   .KP                                                      ABB00440\n.E400    ANOP                                                           ABB00441\n         AIF   ('&NK' NE '401').E401                                    ABB00442\nPK&NK    DS    0F                                                       ABB00443\n         DC    C'MAN&NK.I '                                             ABB00444\n         DC    C'&PG WRONG RECFM DDN=........'                          ABB00445\nDK&NK    EQU   *-PK&NK                                                  ABB00446\n         AGO   .KP                                                      ABB00447\n.E401    ANOP                                                           ABB00448\n         AIF   ('&NK' NE '402').E402                                    ABB00449\nPK&NK    DS    0F                                                       ABB00450\n         DC    C'MAN&NK.I '                                             ABB00451\n         DC    C'&PG WRONG BLKSIZE DDN=........'                        ABB00452\nDK&NK    EQU   *-PK&NK                                                  ABB00453\n         AGO   .KP                                                      ABB00454\n.E402    ANOP                                                           ABB00455\n         AIF   ('&NK' NE '403').E403                                    ABB00456\nPK&NK    DS    0F                                                       ABB00457\n         DC    C'MAN&NK.I '                                             ABB00458\n         DC    C'&PG WRONG LRECL DDN=........'                          ABB00459\nDK&NK    EQU   *-PK&NK                                                  ABB00460\n         AGO   .KP                                                      ABB00461\n.E403    ANOP                                                           ABB00462\n         AIF   ('&NK' NE '404').E404                                    ABB00463\nPK&NK    DS    0F                                                       ABB00464\n         DC    C'MAN&NK.I '                                             ABB00465\n         DC    C'&PG WRONG LABEL TYPE DDN=........'                     ABB00466\nDK&NK    EQU   *-PK&NK                                                  ABB00467\n         AGO   .KP                                                      ABB00468\n.E404    ANOP                                                           ABB00469\n         AIF   ('&NK' NE '800').E800                                    AAY00470\nPK&NK    DS    0F                                                       AAY00471\n         DC    C'MAN&NK.D '                                             AAY00472\n         DC    C'&PG JOB...../STEP.... PGM CHECK TRESHOLD REACHED,REPLYXAAY00473\n                GO,ABEND OR DUMP'                                       AAY00474\nDK&NK    EQU   *-PK&NK                                                  AAY00475\n         AGO   .KP                                                      AAY00476\n.E800    ANOP                                                           AAY00477\n         AIF   ('&NK' NE '801').E801                                    AAY00478\nPK&NK    DS    0F                                                       AAY00479\n         DC    C'MAN&NK.I '                                             AAY00480\n         DC    C'&PG PGM CHECKS OCCURED'                                AAY00481\nDK&NK    EQU   *-PK&NK                                                  AAY00482\n         AGO   .KP                                                      AAY00483\n.E801    ANOP                                                           AAY00484\n         AIF   ('&NK' NE '900').E900                                    AAY00485\nPK&NK    DS    0F                                                       AAY00486\n         DC    C'MAN&NK.I '                                             AAY00487\n         DC    C'&PG END OF PROCESSING FORCED BY EXIT ROUTINE ........' AAY00488\nDK&NK    EQU   *-PK&NK                                                  AAY00489\n         AGO   .KP                                                      AAY00490\n.E900    ANOP                                                           AAY00491\n         AIF   ('&NK' NE '901').E901                                    AAY00492\nPK&NK    DS    0F                                                          00493\n         DC    C'MAN&NK.I '                                                00494\n         DC    C'&PG NO INTERFACE WITH EXIT ROUTINE XXXXXXXX'              00495\nDK&NK    EQU   *-PK&NK                                                     00496\n         AGO   .KP                                                         00497\n.E901    ANOP                                                              00498\n         AIF   ('&NK' NE '910').E910                                    ABQ00499\nPK&NK    DS    0F                                                       ABQ00500\n         DC    C'MAN&NK.I '                                             ABQ00501\n         DC    C'&PG BEGIN OF EXIT'                                     ABQ00502\nDK&NK    EQU   *-PK&NK                                                  ABR00503\n         AGO   .KP                                                      ABQ00504\n.E910    ANOP                                                           ABQ00505\n         AIF   ('&NK' NE '911').E911                                    ABQ00506\nPK&NK    DS    0F                                                       ABQ00507\n         DC    C'MAN&NK.I '                                             ABQ00508\n         DC    C'&PG END OF EXIT'                                       ABQ00509\nDK&NK    EQU   *-PK&NK                                                  ABR00510\n         AGO   .KP                                                      ABQ00511\n.E911    ANOP                                                           ABQ00512\n         MNOTE 4,'   ********   BRAK KOMUNIKATU &NK'                       00513\n.KP      ANOP                                                              00514\n&A2      SETA  &A2+K'&KOM(&A1)+1                                           00515\n&A1      SETA  &A1+1                                                       00516\n         AIF   (&A2 LT K'&KOM).POC                                         00517\n.KON     ANOP                                                              00518\n         MEND                                                              00519\n./ ADD NAME=PISZ\n         MACRO                                                             00010\n&N       PISZ  &P,&AD,&AW,&L=1,&FD=F,&SV=                                  00020\n         LCLC  &C,&C1,&C2                                                  00030\n*** PISZ       WERSJA-003                                               ABJ00040\n&C       SETC  '15'                                                        00050\n         AIF   ('&N' EQ '').E0                                             00060\n&N       DS    0H                                                          00070\n.E0      AIF   ('&SV' EQ '').E1                                            00080\n         AIF   ('&SV'(1,1) NE '(').E0A                                     00090\n&C2      SETC  '0'                                                         00100\n.E0A     STM   14,2,&C2&SV *       CHOWAJ REJESTRY                         00110\n.E1      AIF   ('&AD' EQ '').E5                                            00120\n         AIF   ('&AD'(1,1) EQ '(').E4                                      00130\n         AIF   ('&FD' EQ 'F' OR '&FD' EQ 'S').E3                           00140\n         AIF   ('&FD' EQ 'H' OR '&FD' EQ 'P').E2                           00150\n         AIF   ('&FD' EQ 'A').E1A                                          00160\n         SR    0,0                                                         00170\n         IC    0,&AD                                                       00180\n         AGO   .E5                                                         00190\n.E1A     LA    0,&AD                                                       00200\n         AGO   .E5                                                         00210\n.E2      LH    0,&AD                                                       00220\n         AGO   .E5                                                         00230\n.E3      L     0,&AD                                                       00240\n         AGO   .E5                                                         00250\n.E4      LR    0,&AD                                                       00260\n.E5      AIF   ('&AW' EQ '').E7                                            00270\n         AIF   ('&AW'(1,1) EQ '(').E6                                      00280\n         LA    1,&AW                                                       00290\n         AGO   .E7                                                         00300\n.E6      LR    1,&AW                                                       00310\n.E7      AIF   ('&L' EQ '').E9                                             00320\n         AIF   ('&L'(1,1) EQ '(').E8                                       00330\n         LA    2,&L                                                        00340\n         AGO   .E9                                                         00350\n.E8      LR    2,&L                                                        00360\n.E9      AIF   ('&P' EQ '').F2                                             00370\n         AIF   ('&P'(1,1) EQ '(').F1                                       00380\n         AIF   (T'&P EQ 'V' OR '&P'(1,1) EQ '=').F0                     ABJ00390\n         CNOP  0,4                                                         00400\n         B     *+8                                                         00410\n         DC    V(&P)                                                       00420\n         L     15,*-4                                                      00430\n         AGO   .F2                                                         00440\n.F0      L     15,&P                                                       00450\n         AGO   .F2                                                         00460\n.F1      ANOP                                                              00470\n&C       SETC  '&P'                                                        00480\n.F2      BALR  14,&C                                                       00490\n         AIF   ('&SV' EQ '').F3                                            00500\n         AIF   ('&SV'(1,1) EQ '(').F2A                                     00510\n         ST    15,&SV+4                                                    00520\n         AGO   .F2B                                                        00530\n.F2A     ST    15,4&SV                                                     00540\n.F2B     LM    14,2,&C2&SV *       ODNOW REJESTRY                          00550\n         BR    14                                                          00560\n.F3      MEND                                                              00570\n./ ADD NAME=SEKCJA   0101-99169-99169-1030-00106-00107-00000-VHUTCH\n         MACRO                                                             00010\n&N       SEKCJA &NS,&B=,&SA=,&V=NO,&ID=NO                               ABJ00020\n         LCLA  &A1,&A2,&A3                                                 00030\n         LCLC  &C1,&C2                                                     00040\n*** SEKCJA     WERSJA-010                                               ABL00050\n         AIF   ('&NS' EQ '').E1                                            00060\n&NS      CSECT                                                             00070\n         AIF   ('&V' EQ 'NO').E1                                           00080\n&A1      SETA  K'&NS                                                       00090\n&A2      SETA  6                                                           00100\n&A3      SETA  0                                                        ABJ00110\n&C2      SETC  '0'                                                         00120\n&C1      SETC  '&NS'                                                       00130\n         AIF   ('&V' EQ 'YES').H0                                          00140\n         AIF   (T'&V EQ 'N').H10                                        ABF00150\n&A1      SETA  K'&V                                                        00160\n&C1      SETC  '&V'                                                        00170\n.H0      AIF   (&A2 GT &A1).H2                                             00180\n         AIF   ('&C1'(&A2,1) LT '0' OR '&C1'(&A2,1) GT '9').H1             00190\n&C2      SETC  '&C2'.'&C1'(&A2,1)                                          00200\n.H1      ANOP                                                              00210\n&A2      SETA  &A2+1                                                       00220\n         AGO   .H0                                                         00230\n.H10     ANOP                                                           ABF00240\n&C2      SETC  '&V'                                                     ABF00250\n         AGO   .H3                                                      ABF00260\n.H2      ANOP                                                              00270\n         AIF   ('&V' EQ 'YES').H3                                          00280\n&V       EQU   &NS                                                         00290\n         ENTRY &V                                                          00300\n.H3      ANOP                                                              00310\n&A1      SETA  &C2                                                         00320\n         DC    X'4700'                                                     00330\n         DC    AL2(&A1)                                                    00340\n&A3      SETA  4                                                        ABJ00350\n.E1      ANOP                                                              00360\n         AIF   ('&ID' EQ '' OR '&ID' EQ 'NO').G1                        ABJ00370\n         AIF   ('&ID' EQ '*' OR '&ID' EQ 'YES').I1                      ABJ00380\n&A2      SETA  ((K'&ID-1)/2)*2     ZAOKRAGLIJ DLUGOSC                   ABL00390\n&A1      SETA  &A2+4+&A3           PRZESKOK                             ABJ00400\n         B     &A1.(15) *     PRZESKOCZ IDENTYFIKATOR                   ABL00410\n         DC    CL&A2&ID                                                 ABJ00420\n         AGO   .G1                                                      ABJ00430\n.I1      ANOP                                                           ABJ00440\n&C2      SETC  '&NS'                                                    ABJ00450\n         AIF   ('&NS' NE '').I2                                         ABJ00460\n&C2      SETC  ' SEKCJA '                                               ABJ00470\n.I2      ANOP                                                           ABJ00480\n&A2      SETA  &A3+12                                                   ABJ00490\n         B     &A2.(15) *          PRZESKOCZ IDENTYFIKATOR              ABJ00500\n         DC    CL8'&C2'                                                 ABK00510\n.G1      ANOP                                                           ABJ00520\n&A2      SETA  0                                                           00530\n&N       STM   14,12,12(13)                                                00540\n         AIF   ('&B' EQ '').E2                                             00550\n         BALR  &B(1),0                                                     00560\n         USING *,&B(1)                                                     00570\n&A1      SETA  2                                                           00580\n.F0      AIF   (&A1 GT N'&B).F1                                            00590\n&A2      SETA  &A2+4096                                                    00600\n         USING *+&A2,&B(&A1)                                               00610\n&A1      SETA  &A1+1                                                       00620\n         AGO   .F0                                                         00630\n.F1      AIF   (N'&B LE 1).E2                                              00640\n&A1      SETA  K'&B(1)                                                     00650\n&C1      SETC  '&B'(2,&A1)                                                 00660\n&A1      SETA  2                                                           00670\n&A2      SETA  2                                                           00680\n.E1A     AIF   (N'&B LT &A1).E2                                            00690\n&A2      SETA  &A2+K'&B(&A1-1)+1                                           00700\n&A3      SETA  K'&B(&A1)                                                   00710\n&C2      SETC  '&B'(&A2,&A3)                                               00720\n         LA    &C2,2048                                                    00730\n         LA    &C2,2048(&C1,&C2)                                           00740\n&C1      SETC  '&C2'                                                       00750\n&A1      SETA  &A1+1                                                       00760\n         AGO   .E1A                                                        00770\n.E2      AIF   ('&SA' EQ '').E3                                            00780\n&C1      SETC  '72'                                                     ABK00790\n         AIF   ('&SA' EQ 'DYNA').D1  STANDARD LV=72                     ABK00800\n&C1      SETC  '&SA'                                                    ABK00810\n         AIF   (T'&SA EQ 'N').D1     SA=<LICZBA>                        ABK00820\n&C1      SETC  '&SA'(2,K'&SA-1)                                         ABK00830\n         AIF   ('&SA'(1,1) EQ '*').D1  SA=*<SYMBOL>                     ABK00840\n         LR    14,13                                                       00850\n         AIF   ('&SA' EQ 'AUTO').EA                                        00860\n         LA    13,&SA                                                      00870\n         AGO   .EB                                                         00880\n.EA      CNOP  0,4                                                         00890\n         BAL   13,*+76                                                     00900\n         DC    18A(0)                                                      00910\n.EB      ST    13,8(14)                                                    00920\n         ST    14,4(13)                                                    00930\n         L     14,12(14) *    ODNOW REJESTR 14                          ABL00940\n         MEXIT                                                          ABK00950\n.D1      ANOP                                                           ABK00960\n         LA    0,&C1    *     DLUGOSC OBSZARU                           ABL00970\n         GETMAIN R,LV=(0) *   POBIERZ PAMIEC                            ABL00980\n         LA    0,&C1                                                    ABL00990\n         ST    0,0(1) *       PAMIETAJ DLUGOSC                          ABK01000\n         LR    14,13                                                    ABK01010\n         LR    13,1                                                     ABK01020\n         ST    13,8(14) *     DOLACZ DO KOLEJKI                         ABK01030\n         ST    14,4(13) *     ADRES POPRZEDNIEGO SA                     ABK01040\n         LM    14,1,12(14) *  ODNOW REJESTRY                            ABK01050\n.E3      MEND                                                              01060\n./ ADD NAME=VCZYT\n         MACRO                                                             00010\n&N       VCZYT &GEN=0,                                                 XAAZ00020\n               &V=VFCLC006                                              AAZ00030\n         LCLC  &C                                                          00040\n*** VCZYT      WERSJA-006                                               AAZ00050\n         AIF   ('&N' NE '').E1                                             00060\n         MNOTE 12,'   ********   NIEOKRESLONA NAZWA SEKCJI'                00070\n         MEXIT                                                             00080\n.E1      ANOP                                                              00090\n&C       SETC  'IHB'.'&SYSNDX'                                             00100\n         SEKCJA &N,B=12,V=&V                                            AAX00110\n         LR    3,1                                                         00120\n         XR    0,0                                                         00130\n         XR    15,15                                                    AAY00140\n         LPR   2,2                                                         00150\n         BZ    &C.D                                                     AAY00160\n         LR    9,2                                                         00170\n         MVI   &C.Z+16,X'CF'                                               00180\n         BALR  11,0                                                        00190\n         AIF   ('&GEN' EQ '0').E2                                       AAY00200\n         CLI   0(3),C' '                                                AAY00210\n         BE    &C.C                                                     AAY00220\n.E2      CLI   0(3),C'+'                                                AAY00230\n         BE    &C.P                                                     AAY00240\n         CLI   0(3),C'-'                                                AAX00250\n         BE    &C.M                                                     AAY00260\n         CLI   0(3),C','                                                AAX00270\n         BE    &C.W                                                     AAY00280\n         CLI   0(3),C'0'                                                AAX00290\n         AIF   ('&GEN' EQ '0').E3                                       AAY00300\n         BL    &C.B                                                     AAY00310\n         AGO   .E4                                                      AAY00320\n.E3      BL    &C.C                                                     AAY00330\n.E4      CLI   0(3),C'9'                                                AAY00340\n         BNH   &C.E                                                     AAY00350\n         AIF   ('&GEN' EQ '0').E5                                       AAY00360\n&C.B     LA    15,8                                                     AAY00370\n         B     &C.W                                                     AAY00380\n.E5      ANOP                                                           AAY00390\n&C.C     LA    3,1(3)                                                   AAY00400\n         BCTR  2,11                                                        00410\n&C.D     LA    15,4                                                     AAY00420\n         B     &C.W                                                     AAY00430\n&C.E     LR    8,3                                                      AAY00440\n         BALR  11,0                                                        00450\n         AIF   ('&GEN' EQ '0').E6                                       AAY00460\n         CLI   0(3),C' '                                                AAY00470\n         BE    &C.S                                                     AAY00480\n         CLI   0(3),C','                                                AAY00490\n         BE    &C.S                                                     AAY00500\n.E6      CLI   0(3),C'0'                                                AAY00510\n         AIF   ('&GEN' EQ '0').E7                                       AAY00520\n         BL    &C.B                                                     AAY00530\n         AGO   .E8                                                      AAY00540\n.E7      BL    &C.S                                                     AAY00550\n.E8      CLI   0(3),C'9'                                                AAY00560\n         AIF   ('&GEN' EQ '0').E9                                       AAY00570\n         BH    &C.B                                                     AAY00580\n         AGO   .E10                                                     AAY00590\n.E9      BH    &C.S                                                     AAY00600\n.E10     LA    3,1(3)                                                   AAY00610\n         BCTR  2,11                                                        00620\n         LR    7,3                                                         00630\n         BCT   7,&C.S+2                                                 AAY00640\n&C.M     MVI   &C.Z+16,X'DF'                                            AAY00650\n         B     &C.C                                                     AAY00660\n&C.P     MVI   &C.Z+16,X'CF'                                            AAY00670\n         B     &C.C                                                     AAY00680\n&C.S     LR    7,3                                                      AAY00690\n         SR    3,8                                                         00700\n         BCTR  3,0                                                         00710\n         STC   3,*+5                                                       00720\n         MVC   &C.Z(1),0(8)                                                00730\n         LA    2,&C.Z(3)                                                   00740\n         NC    0(1,2),&C.Z+16                                              00750\n         LA    2,112(3)                                                    00760\n         STC   2,*+5                                                       00770\n         PACK  &C.Z+8(1),&C.Z(1)                                           00780\n         CVB   0,&C.Z+8                                                    00790\n         LR    3,7                                                         00800\n&C.W     LA    3,1(3)                                                   AAY00810\n         SR    3,1                                                         00820\n         SLA   3,16                                                        00830\n         LR    2,9                                                         00840\n         AR    2,3                                                         00850\n         LM    3,12,32(13)                                              AAY00860\n         BR    14                                                       AAY00870\n&C.Z     DS    2D                                                          00880\n         DS    X                                                           00890\n         MEND                                                              00900\n*                                                                       AAX00910\n* ZAWARTOSC REJESTROW WEWNATRZ:                                         AAX00920\n* R0  PRZECZYTANA LICZBA                                                AAY00930\n* R1  ADRES POCZATKU POLA                                               AAY00940\n* R2  NIEOKRESLONA                                                      AAY00950\n* R3  BIEZACY ADRES ZNAKU                                               AAY00960\n* R4-R6 NIE UZYWANE                                                     AAY00970\n* R7  ADRES KONCA LICZBY W POLU                                         AAY00980\n* R8  ADRES POCZATKU LICZBY W POLU                                      AAY00990\n* R9  DLUGOSC POLA                                                      AAY01000\n* R10 NIE UZYWANY                                                       AAY01010\n* R11 NIEOKRESLONA                                                      AAY01020\n* R12 BAZA                                                              AAY01030\n* R13 SAVE AREA                                                         AAY01040\n* R14 ADRES POWROTU                                                     AAY01050\n* R15 KOD POWROTU                                                       AAY01060\n*                                                                       AAX01070\n./ ADD NAME=VDRUKV   0103-99169-99195-1258-00279-00279-00000-VHUTCH\nVDRUKV   CSECT\n         ENTRY VFDRA010\nVFDRA010 STM   R14,R12,12(R13)             SAVE REGS IN CALLER\n         BALR  R12,0                       ADDRESS SET\n         USING *,R12\n         LR    R14,R13\n         BAL   R13,A000058                 PERFORM\n         DC    18F'0'\nA000058  ST    R13,8(R14)\n         ST    R14,4(R13)\n         L     R14,12(R14)\n         ST    R1,A00039C\n         MVC   A0003A5,7(R1)\n         LA    R9,A0003A4\n         LA    R8,5(R9)\n         LR    R3,R0\n         TM    10(R1),X'40'\n         BO    A0000AC\n         MVI   10(R1),X'00'\n         L     R5,16(R1)\n         TM    48(R5),X'10'\n         BO    A0000BE\n         MVI   16(R1),X'8F'\n         LA    R1,16(R1)\n         SVC   19                          OPEN\n         L     R1,A00039C\n         OI    10(R1),X'80'\n         LTR   R15,R15\n         BZ    A0000BE\n         OI    10(R1),X'40'\nA0000AC  LA    R15,4\n         L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)              RESTORE REGS\n         BR    R14                         EXIT\nA0000BE  TM    11(R1),X'80'\n         BZ    A000280\n         CLI   4(R3),C'1'\n         BE    A0000F0\n         CLI   4(R3),C'C'\n         BE    A000278\n         BAL   R14,A0002F0                 PERFORM\n         BC    4,A0000F0\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)             RESTORE REGS\n         L     R1,16(R1)\n         L     R15,48(R1)\n         BR    R15\nA0000F0  MVC   0(1,R1),1(R1)\n         MVI   0(R8),C' '\n         MVC   1(250,R8),0(R8)\n         TM    11(R1),X'08'\n         BZ    A00011C\n         SR    R2,R2\n         IC    R2,8(R1)\n         AR    R2,R8\n         MVC   A000117,9(R1)\n         DC    C'K'\nA000117  DC    X'00'\n         DC    H'8192'\n         LPR   R1,R8\nA00011C  LH    R4,2(R1)\n         LA    R5,1(R4)\n         STH   R5,2(R1)\n         TM    11(R1),X'02'\n         BZ    A00014C\n         SR    R2,R2\n         IC    R2,5(R1)\n         AR    R2,R8\n         MVC   0(13,R2),A00037C\n         TM    11(R1),X'20'\n         BZ    A00014C\n         MVC   0(4,R2),A000389\nA00014C  TM    11(R1),X'04'\n         BZ    A0001A0\n         LTR   R4,R4\n         BZ    A0001A0\n         SR    R2,R2\n         CVD   R4,A0004A8\n         UNPK  A000372,A0004A8(8)\n         LA    R4,3\n         LA    R5,A000371\n         BALR  R7,R0                       ADDRESS SET\n         TM    1(R5),X'0F'\n         LA    R5,1(R5)\n         BC    4,A000182\n         MVI   0(R5),C' '\n         BCTR  R4,R7\nA000182  OI    A000375,X'F0'\n         IC    R2,4(R1)\n         AR    R2,R8\n         MVC   0(11,R2),A00036B\n         TM    11(R1),X'20'\n         BZ    A0001A0\n         MVC   0(6,R2),A000376\nA0001A0  TM    11(R1),X'01'\n         BZ    A0001EA\n         LA    R1,2\n         SVC   11                          TIME\n         ST    R0,A0004B0\n         UNPK  A0004A8(8),A0004B0(4)\n         MVC   A00035F,A0004A9\n         MVC   A000362,A0004AB\n         MVC   A000365,A0004AD\n         L     R1,A00039C\n         SR    R2,R2\n         IC    R2,6(R1)\n         AR    R2,R8\n         MVC   0(13,R2),A00035A\n         TM    11(R1),X'20'\n         BZ    A0001EA\n         MVC   0(4,R2),A000367\nA0001EA  MVI   4(R9),C'1'\n         MVC   1(1,R9),7(R1)\n         SR    R2,R2\n         LR    R0,R9\n         L     R1,16(R1)\n         L     R15,48(R1)\n         BALR  R14,R15                     STD LINKAGE\n         L     R1,A00039C\n         TM    11(R1),X'10'\n         BZ    A000248\n         LH    R5,2(R1)\n         BCT   R5,A00021A\n         B     A000248\nA00021A  IC    R2,12(R1)\n         LTR   R2,R2\n         BNP   A000248\n         L     R5,12(R1)\n         SR    R4,R4\n         BALR  R6,R0                       ADDRESS SET\n         L     R1,16(R1)\n         LR    R0,R5\n         BAL   R14,A0002F0                 PERFORM\n         L     R15,48(R1)\n         BALR  R14,R15                     STD LINKAGE\n         IC    R4,1(R5)\n         AR    R5,R4\n         L     R1,A00039C\n         BCTR  R2,R6\nA000248  IC    R0,1(R3)\n         STC   R0,A000251\n         DC    C'K'\nA000251  DC    X'00'\n         STM   R0,R10,0(R3)                SAVE REGS\n         MVI   14(R9),C'0'\n         LA    R0,10(R9)\n         BAL   R14,A0002F0                 PERFORM\n         L     R13,4(R13)\n         ST    R0,20(R13)\n         LM    R14,R12,12(R13)             RESTORE REGS\n         L     R1,16(R1)\n         L     R15,48(R1)\n         BR    R15\nA000278  MVI   0(R1),X'00'\n         B     A000248\nA000280  OI    11(R1),X'80'\n         LA    R1,2\n         SVC   11                          TIME\n         ST    R1,A0004A8\n         UNPK  A0004B0(5),A0004A9(3)\n         MVC   A000387,A0004B0\n         ZAP   A0004B0(8),A0004AA\n         CVB   R4,A0004B0\n         TM    A0004A9,X'01'\n         BO    A0002B8\n         TM    A0004A9,X'12'\n         BM    A0002B8\n         OI    A00038E,X'01'\nA0002B8  SR    R5,R5\n         SR    R7,R7\n         BALR  R6,R0                       ADDRESS SET\n         IC    R7,A00038D(5)\n         LA    R5,1(R5)\n         SR    R4,R7\n         BCR   2,R6\n         AR    R4,R7\n         CVD   R4,A0004B0\n         UNPK  A000381,A0004B6\n         OI    A000382,X'F0'\n         CVD   R5,A0004B0\n         UNPK  A000384,A0004B6\n         OI    A000385,X'F0'\n         L     R1,A00039C\n         B     A0000F0\nA0002F0  STM   R1,R7,24(R13)               SAVE REGS\n         L     R1,A00039C\n         LR    R3,R0\n         CLC   0(2,R3),0(R9)\n         BNH   A00030E\n         MVC   0(2,R3),0(R9)\n         OI    10(R1),X'02'\nA00030E  CLC   2(2,R3),2(R9)\n         BE    A000322\n         MVC   2(2,R3),2(R9)\n         OI    10(R1),X'04'\nA000322  SR    R4,R4\n         SR    R5,R5\n         LA    R6,4\n         IC    R4,4(R3)\n         BALR  R7,R0                       ADDRESS SET\n         IC    R5,A00039F(6)\n         CR    R4,R5\n         BE    A000348\n         BCTR  R6,R7\n         MVI   4(R3),C' '\n         LA    R6,2\n         OI    10(R1),X'01'\nA000348  BCTR  R6,R0\n         IC    R4,0(R1)\n         SR    R4,R6\n         STC   R4,0(R1)\n         LM    R1,R7,24(R13)               RESTORE REGS\n         BR    R14                         EXIT\nA00035A  EQU   *,13\n         DC    C'GODZ '\nA00035F  DC    C'  '\n         DC    C'.'\nA000362  DC    C'  '\n         DC    C'.'\nA000365  DC    C'  '\nA000367  DC    C'TIME'\nA00036B  EQU   *,11\n         DC    C'STRONA'\nA000371  DC    C' '\nA000372  EQU   *,4\n         DC    C'   '\nA000375  EQU   *\n         DC    C' '\nA000376  DC    C'  PAGE'\nA00037C  EQU   *,13\n         DC    C'DNIA '\nA000381  EQU   *,2\n         DC    C' '\nA000382  EQU   *\n         DC    C' '\n         DC    C'.'\nA000384  EQU   *,2\n         DC    C' '\nA000385  EQU   *\n         DC    C' '\n         DC    C'.'\nA000387  DC    C'  '\nA000389  DC    C'DATE'\nA00038D  DC    X'1F'\nA00038E  EQU   *\n         DC    H'7199'\n         DC    X'1E1F1E1F'\n         DC    X'1F1E1F1E'\n         DC    X'1F000000'\nA00039C  EQU   *\n         DC    X'000000'\nA00039F  DC    X'00'\n         DC    C'+'\n         DC    C' '\n         DC    C'0'\n         DC    C'-'\nA0003A4  DC    X'00'\nA0003A5  DC    X'00'\n         DC    H'0'\n         DC    64F'0'\nA0004A8  DS    0D\n         DC    X'00'\nA0004A9  EQU   *,2\n         DC    X'00'\nA0004AA  EQU   *,2\n         DC    X'00'\nA0004AB  EQU   *,2\n         DC    X'00'\n         DC    X'00'\nA0004AD  EQU   *,2\n         DC    X'00'\n         DC    H'0'\nA0004B0  DC    F'0'\n         DC    H'0'\nA0004B6  DC    H'0'\n         DC    F'0'\n         DROP  R12\n         DC    F'0'\n./ ADD NAME=VPISZ\n         MACRO                                                             00010\n&N       VPISZ &ZN=1,&V=VFPLC005                                        ABK00020\n         LCLA  &A1                                                         00030\n         LCLC  &C1,&C2                                                  ABK00040\n*** VPISZ      WERSJA-005                                               ABK00050\n&C2      SETC  '&N'                                                     ABK00060\n         AIF   ('&N' NE '').E0                                             00070\n&C2      SETC  'VPISZ&ZN'                                               ABK00080\n         MNOTE 8,' ***** NIEOKRESLONO NAZWY SEKCJI, PRZYJETO &C2'       ABK00090\n.E0      ANOP                                                              00100\n&A1      SETA  15                                                          00110\n&C1      SETC  'IHB'.'&SYSNDX'                                             00120\n         SEKCJA &C2,B=12,V=&V                                           ABK00130\n         CVD   0,&C1.Z                                                     00140\n         UNPK  &C1.Z(16),&C1.Z(8)                                          00150\n         LA    3,15                                                        00160\n         LA    4,&C1.Z-1                                                   00170\n         BALR  5,0                                                         00180\n         TM    1(4),15                                                     00190\n         BM    *+14                                                        00200\n         MVI   1(4),64                                                     00210\n         LA    4,1(4)                                                      00220\n         BCTR  3,5                                                         00230\n         LA    5,16                                                        00240\n         SR    2,5                                                         00250\n         BNP   *+16                                                        00260\n         BALR  6,0                                                         00270\n         MVI   0(1),64                                                     00280\n         LA    1,1(1)                                                      00290\n         BCTR  2,6                                                         00300\n         AR    2,5                                                         00310\n         AIF   ('&ZN' EQ '0').E2                                           00320\n         AIF   ('&ZN' EQ '1').E1                                           00330\n         MVI   0(4),C'+'                                                   00340\n.E1      TM    &C1.Z+15,16                                                 00350\n         BZ    *+8                                                         00360\n         MVI   0(4),C'-'                                                   00370\n&A1      SETA  &A1+1                                                       00380\n.E2      SR    15,15                                                       00390\n         LA    7,&C1.Z+&A1                                                 00400\n         SR    7,4                                                         00410\n         CR    2,7                                                         00420\n         BNL   *+14                                                        00430\n         ST    7,28(13)                                                    00440\n         LA    15,4                                                        00450\n         LR    2,7                                                         00460\n         LA    4,&C1.Z+15                                                  00470\n         OI    0(4),240                                                    00480\n         BCTR  2,0                                                         00490\n         SR    4,2                                                         00500\n         STC   2,*+5                                                       00510\n         MVC   0(1,1),0(4)                                                 00520\n         LM    0,12,20(13)                                                 00530\n         BR    14                                                          00540\n&C1.Z    DS    2D                                                          00550\n         MEND                                                              00560\n./ ADD NAME=VTD\n         MACRO                                                             00010\n&N       VTD   &PODP,&DCB,&AR=56,&NS=1,&SS=108,&SD=0,&SG=14,           *   00020\n               &FD=137,&SW=,&NG=,&T=T,&RECFM=VBA,&BLKSIZE=900,         *   00030\n               &WJ=P,                                                  *ABT00040\n               &DDNAME=SYSPRINT                                         ABN00050\n         LCLA  &A1                                                         00060\n         LCLB  &B1,&B2,&B3,&B4,&B5,&B6,&B7                                 00070\n         LCLC  &C1,&C2,&C3                                                 00080\n*** VTD        WERSJA-007                                               ABT00090\n&B1      SETB  ('&SG' NE '')                                               00100\n&B2      SETB  ('&SD' NE '')                                               00110\n&B3      SETB  ('&SS' NE '')                                               00120\n&B4      SETB  ('&SW' NE '')                                               00130\n&B5      SETB  ('&NG' NE '')                                               00140\n         AIF   ('&WJ'(1,1) EQ 'P').WJ2                                  ABT00150\n         AIF   ('&WJ'(1,1) NE 'A').WJ1                                  ABT00160\n&B6      SETB  1 .                 USTAW WERSJE ANG.                    ABT00170\n         AGO   .WJ2                                                     ABT00180\n.WJ1     MNOTE 4,'***** NIEPOPRAWNY ARGUMENT &WJ, PRZYJETO WJ=P'        ABT00190\n.WJ2     ANOP                                                           ABT00200\n&A1      SETA  &B6*32+&B5*16+&B4*8+&B3*4+&B2*2+&B1                      ABT00210\n&C3      SETC  'IHB'.'&SYSNDX'                                             00220\n&C1      SETC  '&C3'.'C'                                                   00230\n&C2      SETC  'VDRUKV'                                                    00240\n         AIF   ('&RECFM'(1,1) EQ 'V').A1                                ABN00250\n&C2      SETC  'VDRUKF'                                                 ABN00260\n.A1      ANOP                                                           ABN00270\n         AIF   ('&DCB' EQ '*' OR '&DCB' EQ '').E0                          00280\n&C1      SETC  '&DCB'                                                      00290\n.E0      AIF   ('&PODP' EQ '*' OR '&PODP' EQ '').E0A                       00300\n&C2      SETC  '&PODP'                                                     00310\n.E0A     ANOP                                                              00320\n&N       DS    0F                                                          00330\n         DC    AL2(&AR)            WYSOKOSC ARKUSZA                        00340\n         DC    AL2(&NS)            NUMER STRONY                            00350\n         AIF   ('&SS' EQ '').E0B                                           00360\n         DC    AL1(&SS)            ODSUNIECIE STRONY                       00370\n         AGO   .E0C                                                        00380\n.E0B     DC    AL1(0)              BEZ NUMERU STRONY                       00390\n.E0C     AIF   ('&SD' EQ '').E0D                                           00400\n         DC    AL1(&SD)            ODSUNIECIE DATY                         00410\n         AGO   .E0E                                                        00420\n.E0D     DC    AL1(0)              BEZ WYPISYWANIA DATY                    00430\n.E0E     AIF   ('&SG' EQ '').E0F                                           00440\n         DC    AL1(&SG)            ODSUNIECIE GODZINY                      00450\n         AGO   .E0G                                                        00460\n.E0F     DC    AL1(0)              BEZ WYPISYWANIA GODZINY                 00470\n.E0G     ANOP                                                              00480\n         DC    AL1(&FD)            DLUGOSC DOKUMENTU                       00490\n         AIF   ('&SW' EQ '').E1                                            00500\n         DC    AL1(&SW(1))         ODSUNIECIE SYMBOLU WYDAWN.              00510\n         DC    AL1(&C3-16-*)       DLUGOSC SYMBOLU WYDAWNICTWA             00520\n         DC    AL2(&A1)                                                    00530\n         AGO   .E2                                                         00540\n.E1      DC    A(&A1)                                                      00550\n.E2      AIF   ('&NG' EQ '').E3                                            00560\n         DC    AL1(&NG(1))         ILOSC WIERSZY NAGLOWKA                  00570\n         DC    AL3(&NG(2))         ADRES NAGLOWKA                          00580\n         AGO   .E4                                                         00590\n.E3      DC    AL4(0)              NAGLOWEK STRONY                         00600\n.E4      DC    A(&C1)              ADRES DCB                               00610\n.E4A     DC    V(&C2)                ADRES PODPROGRAMU (MACRO \"VDRUK\")     00620\n.E4B     AIF   ('&SW' EQ '').E5                                            00630\n         DC    C&SW(2)             SYMBOL WYDAWNICTWA                      00640\n&C3      EQU   *                                                           00650\n.E5      AIF   ('&T'(1,1) EQ 'N').E6                                       00660\n.E6      AIF   ('&DCB' EQ '*').E7                                          00670\n         AIF   ('&DCB' NE '').E8                                           00680\n.E7      AIF   ('&RECFM' EQ 'VA' OR '&RECFM' EQ 'VBA').E7A                 00690\n         AIF   ('&RECFM' EQ 'FA' OR '&RECFM' EQ 'FBA').E7A                 00700\n         MNOTE 12,'**** &RECFM ****   NIEDOZWOLONY FORMAT DOKUMENTU'       00710\n         MEXIT                                                             00720\n.E7A     ANOP                                                              00730\n&C3.C    DCB   DDNAME=&DDNAME,RECFM=&RECFM,DSORG=PS,MACRF=PM,          *   00740\n               LRECL=&FD,BLKSIZE=&BLKSIZE                                  00750\n.E8      MEND                                                              00760\n./ ADD NAME=WROC\n         MACRO                                                             00001\n&N       WROC  &R,&RC=,&SA=N,&R14=N                                        00002\n         LCLA  &A,&R1,&R2                                                  00003\n         LCLB  &B,&B13,&B14                                                00004\n*** WROC       WERSJA-004                                               ABZ00005\n&A       SETA  12                                                          00006\n&R1      SETA  14                                                          00007\n&R2      SETA  12                                                          00008\n&B13     SETB  ('&SA'(1,1) NE 'N')                                         00009\n&B14     SETB  ('&SA'(1,1) NE 'N' OR '&R14'(1,1) NE 'N')                   00010\n&B14     SETB  (&B14 EQ 1 OR '&R' EQ '')                                ABZ00011\n         AIF   ('&N' EQ '').F0                                             00012\n&N       DS    0H                                                          00013\n.F0      AIF   (&B13 EQ 0).E0                                              00014\n         L     13,4(13)                                                    00015\n         AIF   ('&SA' NE 'DYNA').E0                                     ABK00016\n         AIF   ('&RC' EQ '' AND '&R' EQ '').E2                          ABK00017\n         AIF   ('&R' EQ '').E0                                          ABK00018\n         AIF   ('&R(1)' EQ '0' OR '&R(1)' GT '13').E0                   ABK00019\n         AIF   ('&R(1)' EQ '1').D1                                      ABK00020\n         STM   0,1,20(13) *   CHOWAJ REJESTRY 0,1                       ABK00021\n         AGO   .E0                                                      ABK00022\n.D1      ANOP                                                           ABK00023\n         ST    0,20(13) *     CHOWAJ REJESTR 0                          ABK00024\n.E0      AIF   ('&RC' EQ '').E2                                            00025\n         AIF   ('&RC'(1,1) EQ '(').E1                                      00026\n         AIF   (T'&RC EQ 'N' OR T'&RC EQ 'U').E2                           00027\n         MVC   16(4,13),&RC                                                00028\n         AGO   .E1A                                                        00029\n.E1      ST    &RC,16(13)                                                  00030\n.E1A     AIF   (&B14 EQ 1).E1B                                             00031\n&R1      SETA   15                                                         00032\n.E1B     ANOP                                                              00033\n&B       SETB  1                                                           00034\n.E2      ANOP                                                           ABK00035\n         AIF   ('&SA' NE 'DYNA').D2                                     ABK00036\n         L     1,8(13) *      ADRES ZWALN. SAVE AREA                    ABK00037\n         L     0,0(1) *       DLUGOSC OBSZARU                           ABK00038\n         FREEMAIN R,LV=(0),A=(1) * ZWOLNIJ PAMIEC                       ABK00039\n.D2      AIF   ('&R' EQ '').E6                                          ABK00040\n         AIF   (N'&R EQ 1).E3                                              00041\n         AIF   (K'&R(2) EQ 0).E3                                           00042\n         AIF    (T'&R(2) EQ 'N').E2C                                       00043\n.E2B     MNOTE 8,' &R(2) *****  NIEPOPRAWNY NUMER REJESTRU 2'              00044\n         AGO   .E3                                                         00045\n.E2C     AIF   (&R(2) GT 12 OR &R(2) LT 0).E2B                             00046\n&R2      SETA  &R(2)                                                       00047\n.E3      AIF   (K'&R(1) EQ 0).E3C                                       ABZ00048\n         AIF   (T'&R(1) EQ 'N').E3B                                        00049\n.E3A     MNOTE 8,' &R(1) *****  NIEPOPRAWNY NUMER REJESTRU 1'              00050\n         AGO   .E3C                                                        00051\n.E3B     AIF (&R(1) GT 15 OR &R(1) LT 0).E3A                               00052\n&R1      SETA  &R(1)                                                       00053\n.E3C     AIF   (&R1 EQ 14).E6                                              00054\n         AIF   (&B14 EQ 0).E4                                              00055\n         L     14,12(13)                                                   00056\n.E4      AIF   (&R1 EQ 15).E5                                              00057\n&A       SETA  &R1*4+20                                                    00058\n         AIF   (&B EQ 0).E5                                                00059\n         L     15,16(13)                                                   00060\n.E5      AIF   (&R1 NE 15).E6                                              00061\n&A       SETA  16                                                          00062\n.E6      LM    &R1,&R2,&A.(13)                                             00063\n         AIF   ('&RC' EQ '' OR &B EQ 1).E8                                 00064\n         AIF   ('&RC' NE '0').E7                                           00065\n         SR    15,15                                                       00066\n         AGO   .E8                                                         00067\n.E7      LA    15,&RC                                                      00068\n.E8      BR    14                                                          00069\n         MEND                                                              00070\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SPOOLASM": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00 \\x00\\x99\\x17\\x9f\\x00\\x99\\x19o\\x152\\x00\\x1c\\x00\\x1d\\x00\\x1c\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-06-28T00:00:00", "modifydate": "1999-07-15T15:32:20", "lines": 28, "newlines": 29, "modlines": 28, "user": "VHUTCH"}, "text": "//VHSPLASM JOB (6948,3312),'ASSEMBLE/LINKEDIT',\n//             REGION=2048K,\n//             CLASS=X,MSGCLASS=W\n/*JOBPARM LINES=9999\n//*$AVRS C='COMPILE BATAVIA'\n//*-------------------------------------------------------------------*\n//*      ASSEMBLE AND LINK-EDIT SPOOLSEL                              *\n//*-------------------------------------------------------------------*\n//ASMB      EXEC ASMAC,PARM='NODECK'\n//C.SYSLIB DD  DISP=SHR,DSN=SMPE.MVST100.SMPMTS\n//         DD  DISP=SHR,DSN=SYS1.SHASMAC\n//         DD  DISP=SHR,DSN=SFT1.CUSTMODS.JES2.SPOOLSEL.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DISP=SHR,DSN=SYS1.MACLIB\n//C.SYSLIN DD  DSN=&&OBJECT,DISP=(NEW,PASS),\n//         UNIT=SYSDA,SPACE=(TRK,(2,2)),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//C.SYSIN DD DISP=SHR,DSN=SFT1.CUSTMODS.JES2.SPOOLSEL.SRCLIB(SPOOLSEL)\n//*\n//LKED      EXEC LKED,PARM='LIST,XREF,AMODE(24),RMODE(24)'\n//LKED.SYSPRINT DD SYSOUT=*\n//LKED.SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB\n//LKED.SYSLIB   DD  DSN=&&OBJECT,DISP=(OLD,DELETE)\n//LKED.SYSIN    DD  *\n  INCLUDE SYSLIB\n  NAME SPOOLSEL(R)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SPOOLSEL": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00\\x11\\x00\\x89\\x05_\\x00\\x99\\x19o\\x119\\x06\\xd3\\x059\\x06\\xd3\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "1989-02-24T00:00:00", "modifydate": "1999-07-15T11:39:11", "lines": 1747, "newlines": 1337, "modlines": 1747, "user": "VHUTCH"}, "text": "SPSL     TITLE 'KB - JES2/SP OFFLOADED SPOOL SELECT UTILITY'\n***********************************************************************\n*                                                                     *\n*                           SPOOLSEL                                  *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*  THE PROGRAM IS THE UTILITY SERVING THE JES2/SP SPOOL OFFLOADED     *\n*                    DATA SET (DISK OR TAPE)                          *\n*                                                                     *\n*       WRITTEN BY  KRZYSZTOF (CHRIS) BYTNEROWICZ                     *\n*                                                                     *\n*       AMENDED BY THOMAS HUTCHINS - AGCO CORP.                       *\n*                                                                     *\n* PROGRAM EXECUTION:                                                  *\n* ******************                                                  *\n*                                                                     *\n*  1. LIST MODE                                                       *\n*     PROVIDING THE USER WITH THE LISTING OF THE JOBS OFFLOADED       *\n*     GIVING THE INFORMATION ON JOBNAMES,JOBNUMBERS,CLASSES,          *\n*     SUBMITTERS,NODES AND SO ON.IN CASE OF THE JOBS EXECUTED         *\n*     THE NUMBER OF THE OUTPUT LINES IS GIVEN.                        *\n*      THE MODE IS PROVIDED WITH SUBMODES ENABLING THE USER TO GET    *\n*     MORE DETAILED INFORMATION ON THE JOBS OF PARTICULAR INTEREST.   *\n*     THE SELECTION CONTROL CARDS ARE NECESSARY TO SPECIFY JOBS TO    *\n*     BE REPORTED IN MORE DETAIL.THE SELECTION CONTROL CARDS          *\n*     HAVE THE SAME LAYOUT AS DESCRIBED IN SELECT MODE.               *\n*                                                                     *\n*      SUBMODES ARE:                                                  *\n*                                                                     *\n*       SHOW - PROVIDING THE USER WITH THE LISTING OF N LINES OF      *\n*              EVERY OUTPUT ELEMENT OF THE SELECTED JOBS.             *\n*       DUMP - PROVIDING THE USER WITH THE DUMP OF N BLOCKS OF        *\n*              EVERY OUTPUT ELEMENT OF THE SELECTED JOBS.             *\n*              THE DUMP IS PRINTED IN HEXADECIMAL AND CHARACTER       *\n*              FORM 32 BYTES OF DATA IN EVERY LINE.                   *\n*                                                                     *\n*               N IS SPECIFIED AS THE THIRD PARAMETER IN PARM FIELD   *\n*              OR VALUE OF 20 IS ASSUMED BY DEFAULT                   *\n*                                                                     *\n*  2. HEX MODE                                                        *\n*     SIMILAR TO LIST MODE BUT GIVING ADDITIONAL HEXADECIMAL          *\n*     INFORMATION ON THE FORMAT OF BLOCK HEADERS AND FLAGS AS WELL    *\n*     AS THE INFORMATION (OUTPUT CLASS AND NUMBER OF RECORDS)         *\n*     ON INDIVIDUAL OUTPUTS ELEMENTS.                                 *\n*                                                                     *\n*  3. SELECT MODE                                                     *\n*     PROVIDING THE USER WITH THE POSSIBILITY TO CREATE SUBSET        *\n*     OF THE OFFLOADED SPOOL DATA SET BY SELECTING SOME JOBS AND      *\n*     WRITING THEM TO THE OUTPUT DATA SET BEING LOADED BY JES2/SP     *\n*     LATER.                                                          *\n*      THE USER IS SUPPOSED TO PROVIDE PROGRAM WITH THE SELECTION     *\n*     CONTROL CARDS.                                                  *\n*                                                                     *\n*  4. PRINT MODE                                                      *\n*     PROVIDING THE USER WITH THE POSSIBILITY TO PRINT WITHOUT        *\n*     LOADING ONTO THE SPOOL DATA SET THE OUTPUTS OF SPECIFIED        *\n*     JOBS.                                                           *\n*      THE PRINTOUTS ARE WRITTEN TO DYNAMICALLY ALLOCATED PRNT????    *\n*     DATASETS.                                                       *\n*      THE MODE SHOULD BE USED WITH CARE REGARDING DIFFERENT OUTPUT   *\n*     OUTPUT CHARACTERISTICS OF THE SELECTED JOBS.                    *\n*      THIS APPLIES TO OUTPUT CLASS SPECIFICATION, DIFFERENCES IN     *\n*     UCS AND FCB SPECIFICATIONS AND PRINTING CONTROL CHARACTERS      *\n*     SPECIFICATION.                                                  *\n*      TO AVOID UNPROPER PRINTING RESULTS THE SELECTION SHOULD NOT    *\n*     SPECIFY JOBS WITH UNLIKE OUTPUT CHARACTERISTICS.                *\n*                                                                     *\n*                                                                     *\n* PROGRAM CONTROL:                                                    *\n* ****************                                                    *\n*                                                                     *\n*  THE CONTROL OF THE PROGRAM EXECUTION IS PROVIDED BY THE PARM       *\n*  INFORMATION SELECTING THE MODE OF THE OPERATION AND BY CONTROL     *\n*  CARDS SPECIFYING THE SELECTION CONTROL DATA FOR SELECT,PRINT       *\n*  MODES AND DUMP,SHOW SUBMODES OF LIST MODE.                         *\n*                                                                     *\n*                                                                     *\n* PARM INFORMATION:                                                   *\n* *****************                                                   *\n*                                                                     *\n*        LIST   - LIST THE CONTENTS OF THE SPOOL OFFLOAD DATA SET     *\n*                                                                     *\n*   : REMOVED SUB OPTIONS                                             *\n*   :     SUBOPTIONS OF LIST:                                         *\n*   :                                                                 *\n*   :      DUMP - HEXADECIMAL DUMP OF THE SELECTED JOBS DATA WILL     *\n*   :             BE PRINTED                                          *\n*   :      SHOW - THE BEGINNING OF EACH SELECTED JOBS' ELEMENT        *\n*   :             (20 RECORDS WILL BE PRINTED)                        *\n*   : REMOVED SUB OPTIONS                                             *\n*                                                                     *\n*        HEX    - HEX PRINT OF BLOCKS HEADERS                         *\n*                                                                     *\n*        SELECT - SELECT THE REQUESTED JOBS CREATING SELECTIVE COPY   *\n*                                                                     *\n*        MERGE  - SELECT THE REQUESTED JOBS FROM CONCATENTED DATASETS *\n*                 CREATING A SELECTIVE COPY. <DROP SUBSEQUENT NJE     *\n*                 HEADER RECORDS AND ADJUST TIME&DATE STAMP>          *\n*                                                                     *\n*        PRINT  - PRINT THE SELECTED JOBS OUTPUTS ONTO PRINTOUT       *\n*                 DATA SET                                            *\n*                                                                     *\n*     ABSENCE OF THE PARM FIELD IMPLIES LIST OPTION ONLY.             *\n*                                                                     *\n* DD STATEMENTS:                                                      *\n* **************                                                      *\n*                                                                     *\n*  SYSUT1   - DEFINING INPUT DATA SET,   (OFFLOADED SPOOL DATA SET)   *\n*             MANDATORY IN ALL MODES.                                 *\n*  SYSPRINT - DEFINING PRINTOUT DATA SET,(MESSAGES AND LIST INFO)     *\n*             MANDATORY IN ALL MODES.                                 *\n*  PRINTOUT - DEFINING PRINTOUT DATA SET WHICH WILL RECEIVE SELECTED  *\n*             JOBS OUTPUTS IN PRINT MODE.                             *\n*  SYSIN    - DEFINING INPUT DATA SET,   (SELECT CONTROL CARDS)       *\n*             MANDATORY IN SELECT,PRINT AND LIST SUBMODES(SHOW,DUMP)  *\n*  SYSUT2   - DEFINING OUTPUT DATA SET,  (OFFLOADED SPOOL SUB-SET)    *\n*             MANDATORY IN SELECT MODE.                               *\n*                                                                     *\n* CONTROL CARDS:                                                      *\n* **************                                                      *\n*                                                                     *\n*     LIST OF SELECTION CRITERIONS IS TO BE PROVIDED VIA INPUT        *\n*   DEFINED WITH SYSIN DD STATEMENT.PARTS OF THE INPUT FILE DEFINED   *\n*   WITH SYSUT1 WILL BE SELECTIVELY COPIED TO THE OUTPUT FILE         *\n*   DEFINED WITH SYSUT2 DD STATEMENT.TIHS OUTPUT FILE CAN BE LATER    *\n*   LOADED BY THE JES2/SP SPOOL LOAD FUNCTION ($SLODN COMMAND).       *\n*                                                                     *\n*     THE SELECTION CONTROL DATA SHOULD BE CODED LIKE:                *\n*                                                                     *\n*    COLS                                                             *\n*    01-08    10-14                                                   *\n*    JOBNAME  J9999                                                   *\n*    JOBNAME  OUT=OUTCLASS                                            *\n*    *PREFIX                                                          *\n*    \u00a2CLASS                                                           *\n*                                                                     *\n*    WHERE:                                                           *\n*    JOBNAME DENOTES THE JOBNAME OF THE JOB/JOBS TO BE SELECTED,      *\n*    JOBNAME 'OUTPUTS' DENOTES THAT ALL JOBS WAITING FOR OUTPUT       *\n*    ARE TO BE SELECTED.                                              *\n*    JOBNAME 'INPUTS' DENOTES THAT ALL JOBS WAITING FOR PROCESSING    *\n*    ARE TO BE SELECTED.                                              *\n*     IF JOBNUMBER FIELD CONTAINS TEXT OUT=OUTCLASS IT SPECIFIES      *\n*    THE OUTPUT OF THE GIVEN OUTPUT CLASS FOR THE SPECIFIED JOB IS    *\n*    TO BE SELECTED. THE SAME APPLIES TO THE JOBS DEFINED WITH        *\n*    JOBNAME 'OUTPUTS'.                                               *\n*     IF JOBNUMBER (COLS 10-14) IS OMITTED THE FIRST OR ONLY          *\n*    OCCURENCE OF THE SPECIFIED JOB WILL BE TAKEN INTO ACCOUNT.       *\n*     IF JOBNAME IS OMITTED ONLY THE JOB WITH THE GIVEN NUMBER WILL   *\n*    BE SELECTED.                                                     *\n*     JOBNAME CODED AS 'ALL' WILL CAUSE ALL THE JOBS WITH THE GIVEN   *\n*    NAME OR CHARACTERISTICS (INPUTS OR OUTPUTS) TO BE SELECTED.      *\n*                                                                     *\n*     CONTROL CARD STARTING WITH * WILL DIRECT THE PROGRAM TO SELECT  *\n*    ALL THE JOBS WHOSE JOBNAMES START WITH CHARACTERS SPECIFIED      *\n*    IN COLUMNS 2-8.                                                  *\n*                                                                     *\n*     CONTROL CARD STARTING WITH \u00a2 WILL DIRECT THE PROGRAM TO SELECT  *\n*    ALL THE JOBS INTENDED TO BE EXECUTED IN THE CLASS SPECIFIED      *\n*    IN COLUMN 2.                                                     *\n*                                                                     *\n*    SO:                                                              *\n*                                                                     *\n*    0        1                                                       *\n*    12345678901234                                                   *\n*                                                                     *\n*    OUTPUTS  ALL          ALL JOB WAITING FOR OUTPUT                 *\n*    OUTPUTS  OUT=D        ALL OUTPUTS IN OUTPUT CLASS D              *\n*    INPUTS   ALL          ALL JOBS READY FOR EXECUTION               *\n*    JOBNAME               1-ST JOB WITH THE GIVEN JOBNAME            *\n*    JOBNAME  JNNNN        ONLY THE JOBNAME WITH THE GIVEN JOBNUMBER  *\n*    JOBNAME  ALL          ALL JOBS WITH THE GIVEN NAME               *\n*    JOBNAME  OUT=X        OUTPUT IN OUTPUT CLASS X FOR JOBS WITH THE *\n*                          GIVEN JOBNAME                              *\n*             JNNNN        JOB WITH THE GIVEN JOBNUMBER               *\n*             NNNN         JOB WITH THE GIVEN JOBNUMBER               *\n*    *JOBPRF               ALL JOBS WITH THE PREFIX (1-7 CHARS)       *\n*    \u00a2CLASS                ALL JOBS FROM THE GIVEN CLASS              *\n*                                                                     *\n*    ARE THE VALID COMBINATIONS OF THE SELECTION CONTROL CARDS TAKING *\n*    INTO ACCOUNT THAT ONLY DETAILED OR GENERAL SELECTION CARDS CAN   *\n*    BE USED IN THE SINGLE RUN OF THE PROGRAM.                        *\n*     THE GENERAL CONTROL CARDS (INPUTS OR OUTPUTS) EXCLUDE EACH      *\n*    OTHER AND THE FIRST VALID WILL BE CONSIDERED.                    *\n*                                                                     *\n* RETURN CODES:                                                       *\n* *************                                                       *\n*                                                                     *\n*   00 - NO ERROR CONDITIONS DETECTED                                 *\n*   04 - SYSPRINT DD CARD NOT SPECIFIED/OPEN FAILED                   *\n*   08 - WRONG PARAMETERS/CONTROL CARDS                               *\n*   12 - SYSIN/SYSPRINT DD CARD NOT SPECIFIED                         *\n*                                                                     *\n* MESSAGES:                                                           *\n* *********                                                           *\n*                                                                     *\n*    THE MESSAGES ISSUED BY THE PROGRAM ARE SELF EXPLANATORY          *\n*                                                                     *\n* JCL PROCEDURES:                                                     *\n* ***************                                                     *\n*                                                                     *\n*    THERE ARE TWO JCL PROCEDURES PLACED IN SYS1.PROCLIB INTENDED     *\n*   TO EXECUTE THE PROGRAM:                                           *\n*                                                                     *\n*    - SPOOLIST - EXECUTING THE LIST MODE,                            *\n*    - SPOOLSEL - EXECUTING THE SELECT MODE.                          *\n*                                                                     *\n*   THE PROCEDURES HAVE THE SYMBOLIC PARAMETERS USED TO FACILITATE    *\n*   THE USE OF THE PROGRAM:                                           *\n*                                                                     *\n*    &IDS - INPUT DATA SET NAME;   STANDARD IDS='GCC3.SPUNL.T01'      *\n*    &ODS - OUTPUT DATA SET NAME;  STANDARD IDS='GCC1.SPUNL.D01'      *\n*    &SOUT- SYSPRINT OUTPUT CLASS; STANDARD SOUT=S                    *\n*                                                                     *\n* LIBRARY:                                                            *\n* ********                                                            *\n*                                                                     *\n*    THE PRODUCTION VERSION OF THE PROGRAM IS PLACED IN               *\n*   ZTSDKJB.MVS03.PGMLIB UNDER THE NAME SPOOLSEL AND IS REFERRED TO   *\n*   BY MENTIONED JCL PROCEDURES.                                      *\n*                                                                     *\n*                                                                     *\n*  SUMMARY OF CHANGES                                                 *\n*  ******************                                                 *\n*                                                                     *\n* 12/10/83 NAME CHANGED TO SPOOLSEL                                   *\n* 18/10/83 JOBNAME PREFIX AND CLASS SELECT ADDED                      *\n* 20/10/83 DETAILED SELECTION TO BE CHECKED AFTER CLASS/PREFIX        *\n* 26/10/83 OUTPUT CLASS PRINTING IN HEX MODE                          *\n* 29/10/83 OUTPUT CLASS SELECTION FOR JOB/OUTPUTS                     *\n*                                                                     *\n*  VERSION 2                                                          *\n*  *********                                                          *\n* 17/07/84 DUMP AND SHOW SUBFUNCTIONS OF LIST INTRODUCED              *\n* 21/07/84 PRINT MODE INTRODUCED                                      *\n* 25/07/84 NUMBER OF BLOCKS TO BE DUMPED/LINES TO BE SHOWN INTRODUCED *\n* 30/07/84 PARM FIELD REPLICA TO SYSPRINT INTRODUCED                  *\n*                                                                     *\n*  VERSION 3                                                          *\n*  *********                                                          *\n* 17/06/88 JES2/SP 1.3.6 AND 2.2.0 SUPPORT ADDED                      *\n* 27/02/89 UNPRINTABLE JOB CLASS (SYSLOG,TSU) REPLACED WITH *         *\n*                                                                     *\n*  VERSION 4                                                          *\n*  *********                                                          *\n* 99.06.21 THOMAS HUTCHINS AGCO CORP                                  *\n*          OS/390 2.4 JES2 SUPPORT                                    *\n*          REMOVED LIST SUB OPTIONS: \"DRUB\" MODULE WAS NOT SUPPLIED   *\n*          RE-WROTE \"PRIDU\" PRINT MODE ROUTINE TO CORRECTLY PROCESS   *\n*            NJE RECORD                                               *\n*          PRINT OPTION DYNAMICALLY ALLOCATES SYSOUT FILES;           *\n*            A NEW PRINT FILE IS CREATED FOR EACH REQUESTED JOB       *\n*          **> KNOWN PROBLEMS <**                                     *\n*              1. RECORD COUNT FOR EACH JOB LISTED IS OFF             *\n*              2. HEX MODE GIVES GARBAGE BEFORE LISTING OF HEADER     *\n*                 STRING.                                             *\n*                                                                     *\n*  VERSION 5                                                          *\n*  *********                                                          *\n* 99.07.14 THOMAS HUTCHINS AGCO CORP                                  *\n*          REMOVED NECESSITY FOR JES2 SUPPORT                         *\n*          ADDED SUPPORT FOR MERGING NJE DATASETS                     *\n*          ALL MODES TAKING TOTAL JOB RECORD COUNT FROM JOB TRAILER   *\n*                                                                     *\n***********************************************************************\n         EJECT\n         PRINT GEN\n         EJECT\nSPOOLSEL CSECT\n         SAVE  (14,12),,*                 STANDARD LINKAGE\n         LR    R12,R15\n         USING SPOOLSEL,R12,R6\n         LA    R6,1\n         LA    R6,4095(R12,R6)\n         ST    R1,APAR\n         LA    R4,SAVEAREA\n         ST    R13,4(R4)\n         ST    R4,8(R13)\n         LR    R13,R4\n         DC    X'4700'\nPGMVER   DC    AL2(5)              PROGRAM VERSION\nSTART    DS    0H\n         MVC   LISTR(DK203),PK203\n         MVC   LISTR+DK203(3),=C' V='\n         PISZ  VPISZ1,PGMVER,DK203+3+LISTR,L=4,FD=H\n         OPEN  (PRINT,(OUTPUT))\n         TM    PRINT+DCBOFLGS,X'10'\n         BZ    NOPRT\n         DRUKUJ VTD,R=LISTR1,L=DK203+14\n         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE\n* CHECK IF THE PARM FIELD WAS SPECIFIED\n         L     R1,APAR             PARMFIELD POINTER\n         L     R1,0(R1)            1-ST ADDRESS\n         LH    R2,0(R1)            LENGTH\n         LTR   R2,R2               WAS IT SPECIEFIED\n         BZ    NOPAR               NO\n         OI    FLGS,FLGS#PRM       PRESENT\n         XC    NUSPEC,NUSPEC       NUMBER OF BLOCKS/RECORDS\n* PRINT THE PARM FIELD REPLICA\n         MVC   LISTR(DK200),PK200\n         BCTR  R2,0                REDUCE BY 1\n         STC   R2,*+5\n         MVC   LISTR+DK200(0),2(R1)\n         LA    R3,7+DK200(R2)            LENGTH OF OUTPUT\n         DRUKUJ VTD,R=LISTR1,L=(R3)\n         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE\n         L     R1,APAR             PARMFIELD POINTER\n         L     R1,0(R1)            1-ST ADDRESS\n         LH    R2,0(R1)            LENGTH\n         BAL   R10,PARANA          PARM ANALYZIS\n* WAS THE SELECT OPTION SPECIFIED\n         TM    FLGS,FLGS#SEL\n         BZ    NOPAR               NO\n         LA    R2,=CL8'SYSIN'\n         DDENT (R2)\n         LTR   R1,R1\n         BZ    NODDNA              NOT SPECIFIED\n* SYSUT2 NOT NEEDED WHEN PRINT REQUESTED\n         TM    FLGS+1,FLGS#SDP    ANY PRINT SELECT\n         BNZ   NOSUT2\n         OPEN  (OUTDCB,(OUTPUT))\n         TM    OUTDCB+DCBOFLGS,X'10'\n         BZ    NOPEN\n         LA    R2,=CL8'SYSUT2'\n         DDENT (R2)\n         LTR   R1,R1\n         BZ    NODDNA              NOT SPECIFIED\n* SET UP THE MAIN STORAGE FOR JOBS TO BE SELECTED\nNOSUT2   DS    0H\n         OPEN  SYSIN\n         TM    SYSIN+DCBOFLGS,X'10'\n         BZ    NOPEN\n         LA    R0,SEL#QTY*SEL#LEN\n         GETMAIN R,LV=(0)\n         STM   R0,R1,GT#SEL\n         BAL   R10,RDCTLC          READ CONTROL CARDS\nNOPAR    DS    0H\n* COMPUTE THE QUANTITY OF STORAGE NEEDED DEPENDING ON OPTIONS\n         LA    R2,BLKL             LENGTH OF THE I/O BLOCK\n         TM    FLGS,FLGS#SEL\n         BZ    *+6\n         AR    R2,R2               DISTANCE BETWEEN PAIRS\n         LR    R0,R2\n         AR    R0,R0               MULTIPLY BY 2\n* GET STORAGE FOR I/O BLOCKS\n         GETMAIN R,LV=(0)\n* DIVIDE THE STORAGE AMONG BUFFER PAIRS FOR READ/WRITE\n         LR    R8,R1\n         LR    R9,R8\n         AR    R9,R2               NEXT PAIR\n         LR    R7,R0               QTY\n         STM   R7,R9,GT#IOI\n         SRA   R2,1                /2\n* 1-ST PAIR\n         ST    R8,B1               READ INITIAL BUFFER\n         TM    FLGS,FLGS#SEL\n         BZ    *+10\n         AR    R8,R2\n         ST    R8,B1+4             WRITE INITIAL BUFFER\n* 2-ND PAIR\n         ST    R9,B2               READ INITIAL BUFFER\n         TM    FLGS,FLGS#SEL\n         BZ    *+10\n         AR    R9,R2\n         ST    R9,B2+4             WRITE INITIAL BUFFER\n         SPACE 5\nLOOP0    DS    0H\n         OPEN  INDCB\n         TM    INDCB+DCBOFLGS,X'10'\n         BZ    NOPEN\n         MVC   LISTR(L'T1),T1\n         DRUKUJ VTD,R=LISTR1,L=L'T1+6\n         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE\n* CLEAR PRINT LINE\n         MVI   LISTR-1,C' '\n         MVC   LISTR(80),LISTR-1\n* INITIAL READ OF NJE DATA\n         L     R8,B1               1-ST PAIR OF BUFFERS\n         L     R9,B2               2-ND PAIR OF BUFFERS\n* INITIAL WRITE OF 80 BYTE NJE HEADER IF SELECTED\n*   USE HEADER SUPPLIED ON INPUT DATASET\n         TM    FLGS,FLGS#SEL       IS SELECT REQUESTED\n         BZ    LOOP1               NO,SKIP IT\n         TM    FLGS+1,FLGS#SDP     ANY PRINT SELECT\n         BNZ   LOOP1               YES,SKIP IT\n         READ  DECB1,SF,,(R8),MF=E\n         CHECK DECB1\n         MVC   VERSTAMP,4(R8)      SAVE VERIFICATION TIME/DATE STAMP\n         TM    FLGS,FLGS#MRG       IS MERGE REQUESTED\n         BZ    LOOP0A              NO,SKIP IT\n* MERGE OPERATION SETS ITS OWN VERIFICATION TIME STAMP\n         TIME  BIN                 GET CURRENT TIME & DATE\n         STM   R0,R1,VERSTAMP      STOR IT AS VERIFICATION STAMP\n         MVC   4(8,R8),VERSTAMP    NEW VERIFICATION TIME/DATE STAMP\nLOOP0A   DS    0H\n         MVC   SAVLR,OUTDCB+82     SAVE LRECL\n         MVC   SAVBL,OUTDCB+62     SAVE BLOCK SIZE\n         MVC   OUTDCB+62(2),=X'0050' 80 BYTE BLOCK LENGTH\n         MVC   OUTDCB+82(2),=X'0050' 80 BYTE LRECL LENGTH\n         MVI   20(R8),X'00'        CLEAR HEADER FIELDS\n         MVC   21(59,R8),20(R8)\n         WRITE DECB3,SF,,(R8),MF=E WRITE NEW HEADER RECORD\n         CHECK DECB3\n         MVC   OUTDCB+82(2),SAVLR  RESTORE LRECL\n         MVC   OUTDCB+62(2),SAVBL  RESTORE BLOCK SIZE\nLOOP1    DS    0H\n         READ  DECB1,SF,,(R8),MF=E\n         READ  DECB2,SF,,(R9),MF=E\nLOOP     DS    0H\n         CHECK DECB1\n* UPDATE THE PHYSICAL BLOCK NUMBER\n         L     R1,NURIN\n         LA    R1,1(R1)\n         ST    R1,NURIN\n         NI    FLGB,X'FF'-FLGB#NJE RESET FLAG\n         LR    R1,R8\n         BAL   R10,BLKAN           BLOCK ANALYZIS\n         TM    FLGS,FLGS#SEL       IS SELECT REQUIRED\n         BZ    LOOP#1              NEXT BLOCK\n         TM    FLGS+1,FLGS#PRT     PRINT SELECT\n         BO    LOOP#W00            YES, CONTINUE\n         TM    FLGB,FLGB#NJE       NJE HEADER FOUND\n         BZ    LOOP#W00            NO, CONTINUE\n         TM    FLGS,FLGS#MRG       IS MERGE REQUIRED\n         BO    LOOP#1              YES, DROP IT\n         MVC   LISTR+5(L'TE),TE\n         DRUKUJ VTD,R=LISTR1,L=L'TE+11\n         ABEND 203\nLOOP#W00 DS    0H\n         TM    FLGB,FLGB#JST       JOB STARTED\n         BZ    LOOP#W10            NEXT BLOCK\n         BAL   R10,SELCHK          CHECK THE SELECTION\n         TM    FLGB,FLGB#SEL       TO BE SELECTED\n         BZ    LOOP#W10            NO\n         MVC   LISTR+5(L'TB),TB\n         DRUKUJ VTD,R=LISTR1,L=L'TB+11\nLOOP#W10 DS    0H\n         TM    FLGB,FLGB#SEL       TO BE SELECTED\n         BZ    LOOP#1              NO\n* WAS THE PRINT OPTION SPECIFIED\n         TM    FLGS+1,FLGS#SDP     ANY PRINT SELECT\n         BZ    LOOP#W20\n         LR    R1,R8               BLOCK ADDRESS\n         BAL   R10,PRIDU           PRINT/DUMP BLOCK\n         B     LOOP#1              NO\nLOOP#W20 DS    0H\n         TM    FLGB,FLGB#FWR       1-ST WRITE INITIATED\n         BZ    LOOP#W30            NO\n         CHECK DECB3               WAS WRITE COMPLETED\nLOOP#W30 DS    0H\n*\n*  WALK BLOCK CHAIN AND REPLACE VERSTAMP ON '01C0' OFFLOAD BLOCKS\n*  AND '01D0' END BLOCKS\n*\n         LR    R1,R8               BLOCK ADDRESS\n         BAL   R10,ADJSTAMP        POSSIBLE ADJUST VERIFICATION STAMP\n*\n         OI    FLGB,FLGB#FWR       1-ST WRITE INITIATED\n         XC    DECB3(4),DECB3      PREPARE THE NEXT\n         WRITE DECB3,SF,,(R8),MF=E\n         L     R0,B1+4\n         ST    R8,B1+4\n         ST    R0,B1\n         LR    R8,R0\nLOOP#1   DS    0H\n         XC    DECB1(4),DECB1\n         READ  DECB1,SF,,(R8),MF=E\n         CHECK DECB2\n* UPDATE THE PHYSICAL BLOCK NUMBER\n         L     R1,NURIN\n         LA    R1,1(R1)\n         ST    R1,NURIN\n         NI    FLGB,X'FF'-FLGB#NJE RESET FLAG\n         LR    R1,R9\n         BAL   R10,BLKAN\n         TM    FLGS,FLGS#SEL       IS SELECT REQUIRED\n         BZ    LOOP#2              NEXT BLOCK\n         TM    FLGS+1,FLGS#PRT     ANY PRINT SELECT\n         BO    LOOP#WA0            YES, CONTINUE\n         TM    FLGB,FLGB#NJE       NJE HEADER FOUND\n         BZ    LOOP#WA0            NO, CONTINUE\n         TM    FLGS,FLGS#MRG       IS MERGE REQUIRED\n         BO    LOOP#2              YES, DROP IT\n         MVC   LISTR+5(L'TE),TE\n         DRUKUJ VTD,R=LISTR1,L=L'TE+11\n         ABEND 203\nLOOP#WA0 DS    0H\n         TM    FLGB,FLGB#JST       JOB STARTED\n         BZ    LOOP#WB0            NEXT BLOCK\n         BAL   R10,SELCHK          CHECK THE SELECTION\n         TM    FLGB,FLGB#SEL       TO BE SELECTED\n         BZ    LOOP#WB0            NO\n         MVC   LISTR+5(L'TB),TB\n         DRUKUJ VTD,R=LISTR1,L=L'TB+11\nLOOP#WB0 DS    0H\n         TM    FLGB,FLGB#SEL       TO BE SELECTED\n         BZ    LOOP#2              NO\n* WAS THE PRINT OPTION SPECIFIED\n         TM    FLGS+1,FLGS#SDP     ANY PRINT SELECT\n         BZ    LOOP#WC0\n         LR    R1,R9               BLOCK ADDRESS\n         BAL   R10,PRIDU           PRINT/DUMP BLOCK\n         B     LOOP#2              NO\nLOOP#WC0 DS    0H\n         TM    FLGB,FLGB#SWR       2-ND WRITE INITIATED\n         BZ    LOOP#WD0            NO\n         CHECK DECB4               WAS WRITE COMPLETED\nLOOP#WD0 DS    0H\n*\n*  WALK BLOCK CHAIN AND REPLACE VERSTAMP ON '01C0' OFFLOAD BLOCKS\n*  AND '01D0' END BLOCKS\n*\n         LR    R1,R9               BLOCK ADDRESS\n         BAL   R10,ADJSTAMP        POSSIBLE ADJUST VERIFICATION STAMP\n*\n         OI    FLGB,FLGB#SWR       2-ND WRITE INITIATED\n         XC    DECB4(4),DECB4      PREPARE THE NEXT\n         WRITE DECB4,SF,,(R9),MF=E\n* EXCHANGE THE BUFFERS\n         L     R0,B2+4\n         ST    R9,B2+4\n         ST    R0,B2\n         LR    R9,R0\nLOOP#2   DS    0H\n         XC    DECB2(4),DECB2\n         READ  DECB2,SF,,(R9),MF=E\n         B     LOOP\n         EJECT\n*********************************************************************\n*                                                                   *\n*        JES2/SP SPOOL OFFLOAD DATA SET BLOCK ANALYZIS              *\n*                                                                   *\n*********************************************************************\nBLKAN    EQU   *\n         MVI   LISTR-1,C' '\n         MVC   LISTR(JOB#END-LISTR),LISTR-1\n         MVC   LISTR(4),=C'****'   ATTENTION CATCHING\n         MVI   JOB#TYPE,C'I'       ASSUME THE INPUT JOB\n         NI    FLGB,X'FF'-FLGB#JST SUPPRES THE JOB START INDICATOR\n         LR    R4,R1               SAVE THE BEGINNING OF THE BLOCK\n         CLC   0(4,R4),JOB#HDRX    JOB TO BE EXECUTED\n         BE    BLKA#JHD            JOB START\n         CLC   0(4,R4),JOB#HDRO    JOB OUTPUT\n         BNE   BLKA#DHD            IS IT A DATA SET HEADER\n         MVI   JOB#TYPE,C'O'       OUTPUT JOB\n         OI    FLGB,FLGB#OUT       THE SAME\nBLKA#JHD DS    0H\n         OI    FLGB,FLGB#JHD       HEADER OCCURED\n         OI    FLGB,FLGB#JST       JOB JUST STARTED TO BE CHECKED\n         XC    JOB#RCDS,JOB#RCDS   TOTAL JOB RECORDS\n         LA    R11,5(R4)           SKIP BLOCK HEADER\n         USING NJH,R11             SET THE USING FOR THE BLOCK\nBLKA#JHL DS    0H\n         DRUKUJ VTD,R=LISTR1,L=6\n         NI    FLGB,X'FF'-FLGB#SEL SWITCH SELECT OFF\n         MVC   JOB#NAME,NJHGJNAM   JOB NAME\n* CHECK IF JOBCLASS PRINTABLE\n         MVI   JOB#CLS,C'*'        REPLACE WITH *\n         CLI   NJHGJCLS,X'D0'      SYSLOG JOBCLASS\n         BE    BLKA#CNK            SKIP INSERT\n         CLI   NJHGJCLS,X'E0'      TSU JOBCLASS\n         BE    BLKA#CNK            SKIP INSERT\nBLKA#COK DS    0H\n         MVC   JOB#CLS,NJHGJCLS    JOB CLASS\nBLKA#CNK DS    0H\n         CLI   NJHGORGN,X'00'      SPECIFIED?\n         BE    *+10                NO,SKIP IT\n         MVC   JOB#NODE,NJHGORGN   ORIGINATING NODE?\n*  USE EXECUTION ID\n         CLI   NJHGXEQU,X'00'      SPECIFIED?\n         BE    *+10                NO,SKIP IT\n         MVC   JOB#TSOI,NJHGXEQU   EXECUTION USER ID\n         CLI   NJHGPRGN,X'00'      SPECIFIED?\n         BE    *+10                NO,SKIP IT\n         CLI   NJHGPRGN,X'40'      BLANK?\n         BE    *+10                NO,SKIP IT\n*\n         MVC   JOB#PGNM,NJHGPRGN   PROGRAMMER NAME\n         MVC   WORK+2(2),NJHGJID   JOB NUMBER\n         MVC   JOB#FLG,=CL4' '\n         PISZ  VPISZ1,WORK,JOB#NUMB,L=6,FD=F\n         B     BLKA#HEX            GO LIST IT / POSSIBLE HEX INFO\n         DROP  R11\n*********************************************************************\n*                                                                   *\n*                 DATA SET HEADER ANALYZIS                          *\n*                                                                   *\n*********************************************************************\nBLKA#DHD DS    0H\n         MVI   LISTR-1,C' '\n         CLC   0(4,R4),DSN#HDRO    OUTPUT DATA SET\n         BE    BLKA#DSH\n         CLC   0(4,R4),DSN#HDRX    INPUT DATA SET\n         BNE   BLKA#EOJ            NOT A DATA SET HEADER\nBLKA#DSH DS    0H\n         LA    R11,5(R4)           SKIP THE HEADER\n         USING NDH,R11\n         MVC   LISTR(81),LISTR-1\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BZ    BLKA#DSI            NO\n         TM    FLGS,FLGS#HEX       DETAILED PRINTOUT REQUESTED\n         BZ    BLKA#NPR            NO\n* DESCRIBE THE OUTPUT CLASS\n         TM    8(R4),X'80'         INFO CONTAINING\n         BZ    BLKA#NPR            NO; DO NOT OUTPUT CLASS\n         MVC   JOB#CLS,NDHGCLAS    OUTPUT CLASS\n         PISZ  VPISZ1,NDHGNREC,JOB#NODE,FD=F,L=10\n* COMPUTE THE JOB TOTAL RECORDS\nBLKA#NPR DS    0H\n         TM    8(R4),X'80'         INFO CONTAINING\n         BZ    BLKA#DSI            NO; DO NOT COUNT RECORDS\n         L     R1,NDHGNREC         DATA SET RECORDS\n         A     R1,JOB#RCDS         TOTAL\n         ST    R1,JOB#RCDS\nBLKA#DSI DS    0H\n         TM    FLGS,FLGS#HEX       IS HEX REQUESTED\n         BZR   R10\n         LA    R0,NDHGFLG1         WHERE FROM\n         LA    R1,JOB#FLG          WHERE TO\n         LA    R2,1                NUMBER OF BYTES\n         L     R15,ACONH          ADDRESS OF\n         BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n         LA    R0,NDHGFLG2         WHERE FROM\n         LA    R1,JOB#FLG+2        WHERE TO\n         LA    R2,1                NUMBER OF BYTES\n         L     R15,ACONH          ADDRESS OF\n         BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n         B     BLKA#HEX\n         DROP  R11\nBLKA#EOJ DS    0H\n         CLC   0(4,R4),DSN#BLKO    DATA SET BLOCK\n         BE    BLKA#BLK\n         CLC   0(4,R4),DSN#BLKO+4  VM BLOCK CONTINUATION\n         BE    BLKA#BLK\n         CLC   0(4,R4),DSN#BLKO+8  JCL BLOCK CONTINUATION\n         BE    BLKA#BLK\n         CLC   0(4,R4),DSN#BLKX    DATA SET BLOCK\n         BE    BLKA#BLK\n         CLC   0(4,R4),JOB#TRLO    OUTPUT JOB TRAILER\n         BE    BLKA#JTR\n         CLC   0(4,R4),JOB#TRLX    INPUT JOB TRAILER\n         BE    BLKA#JTR\n         CLC   0(4,R4),JOB#HDRO    OUTPUT JOB HEADER\n         BE    BLKA#HD2\n         CLC   0(4,R4),JOB#HDRX    INPUT JOB HEADER\n         BE    BLKA#HD2\n         CLC   0(4,R4),NJE#HDR     NJE SPOOL OFFLOAD HEADER\n         BE    BLKA#OFF\n         CLC   0(4,R4),NJE#EOJ     OFFLOAD END OF RECORD\n         BER   R10\n         BNE   BLKA#NDF            NOT RECOGNIZABLE\nBLKA#HD2 DS    0H\n         MVI   LISTR-1,C' '\n         MVC   LISTR(JOB#END-LISTR),LISTR-1\n         B     BLKA#HEX\nBLKA#JTR DS    0H\n         LA    R11,5(R4)           SKIP THE HEADER\n         USING NJT,R11\n         MVI   LISTR-1,C' '\n         MVC   LISTR(JOB#END-LISTR),LISTR-1\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BZ    BLKA#JT1\n         MVC   LISTR+5(L'T7),T7    TOTAL RECORDS\n         PISZ  VPISZ1,NJTGALIN,JOB#NODE,FD=F,L=10\nBLKA#JT1 DS    0H\n         NI    FLGB,X'FF'-FLGB#JHD LOOK FOR THE NEW JOB\n         NI    FLGB,X'FF'-FLGB#OUT LOOK FOR THE NEW JOB\n         B     BLKA#HEX\n         DROP  R11\n*      INVALID STRUCTURE,TRAILER ABSENT\nBLKA#EJX DS    0H\n         MVC   LISTR(L'T6),T6      TRAILER MISSING\n         NI    FLGB,X'FF'-FLGB#JHD FORCE END OF THE JOB\n         NI    FLGB,X'FF'-FLGB#OUT\n         B     BLKA#HEX\n* NJE OFFLOAD HEADER\nBLKA#OFF DS    0H\n         OI    FLGB,FLGB#NJE       FOUND NJE HEADER RECORD\n         TM    FLGS,FLGS#HEX       IS HEX REQUESTED\n         BZR   R10\n         MVC   LISTR(L'TD),TD      OFFLOAD HEADER FOUND\n* WRITE THE BLOCK NUMBER\n*        PISZ  VPISZ1,NURIN,JOB#NODE,L=6,FD=F\n         TM    FLGS,FLGS#HEX       IS HEX REQUESTED\n         BZ    BLKA#PRT            NO\n         LR    R0,R4               WHERE FROM\n         LA    R1,JOB#HEX          WHERE TO\n         LA    R2,13               NUMBER OF BYTES\n         L     R15,ACONH          ADDRESS OF\n         BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n         LA    R2,(JOB#END-LISTR)+6\n         DRUKUJ VTD,R=LISTR1,L=(R2)\n         BR    R10\n* INVALID BLOCK HEADER\nBLKA#NDF DS    0H\n         TM    FLGS,FLGS#HEX       IS HEX REQUESTED\n         BZR   R10\n         MVC   LISTR(L'T4),T4      INVALID HEADER\n* WRITE THE BLOCK NUMBER ADN DROP THE BLOCK\n         PISZ  VPISZ1,NURIN,JOB#NODE,L=6,FD=F\n         LR    R0,R4               WHERE FROM\n         LA    R1,JOB#HEX          WHERE TO\n         LA    R2,13               NUMBER OF BYTES\n         L     R15,ACONH          ADDRESS OF\n         BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n         LA    R2,(JOB#END-LISTR)+6\n         DRUKUJ VTD,R=LISTR1,L=(R2)\n         BR    R10                 SKIP TO NEXT BLOCK\n* DATA SET DATA BLOCK\nBLKA#BLK DS    0H\n         B     BLKA#CHD            SKIP NEXT DATA RECORDS\n*:TEST:  TM    FLGS,FLGS#HEX       IS HEX REQUESTED\n*:TEST:  BZR   R10                 NO\n*:TEST:  LR    R0,R4               WHERE FROM\n*:TEST:  LA    R1,JOB#HEX          WHERE TO\n*:TEST:  LA    R2,13               NUMBER OF BYTES\n*:TEST:  L     R15,ACONH          ADDRESS OF\n*:TEST:  BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n*:TEST:  LA    R2,(JOB#END-LISTR)+6\n*:TEST:  DRUKUJ VTD,R=LISTR1,L=(R2)\n*:TEST:  B     BLKA#CHD            SKIP NEXT DATA RECORDS\n* UNKNOWN BLOCK FORMAT\nUNK      DS    0H\n         MVC   LISTR(L'T5),T5      UNKNOWN FORMAT\n         DRUKUJ VTD,R=LISTR1,L=L'T5+6\n         BR    R10\n*********************************************************************\n*                                                                   *\n*        WRITE THE HEXADECIMAL VALUES OF FLAGS HEADERS              *\n*                                                                   *\n*********************************************************************\nBLKA#HEX DS    0H\n         TM    FLGS,FLGS#HEX       IS HEX REQUESTED\n         BZ    BLKA#PRT            NO\n         LR    R0,R4               WHERE FROM\n         LA    R1,JOB#HEX          WHERE TO\n         LA    R2,13               NUMBER OF BYTES\n         L     R15,ACONH          ADDRESS OF\n         BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n         LA    R2,(JOB#END-LISTR)+6\n         DRUKUJ VTD,R=LISTR1,L=(R2)\n         B     BLKA#CHB\n*********************************************************************\n*                                                                   *\n*        WRITE A LINE OF DATA                                       *\n*                                                                   *\n*********************************************************************\nBLKA#PRT DS    0H\n         LA    R2,(JOB#HEX-LISTR)+6\n         DRUKUJ VTD,R=LISTR1,L=(R2)\n         BR    R10\n*********************************************************************\n*                                                                   *\n*        WALK THE HEADER BLOCK CHAINS                               *\n*                                                                   *\n*********************************************************************\nBLKA#CHB DS    0H\n         LA    R4,5(R4)      BUMP PAST 4 BYTES INDICATOR\n         LH    R3,0(R4)      LENGTH OF BLOCK\n         AR    R4,R3         POINT TO NEXT BLOCK / DATA\n         CLI   0(R4),X'FF'   END OF BLOCK\n         BNE   BLKA#DHD\n         BR    R10           YES; RETURN\n*********************************************************************\n*                                                                   *\n*        WALK THE DATA BLOCK CHAINS                                 *\n*                                                                   *\n*********************************************************************\nBLKA#CHD DS    0H\n         LA    R4,4(R4)      BUMP PAST 4 BYTES INDICATOR\n         XR    R2,R2\n         IC    R2,0(R4)            LEN\n         LTR   R2,R2\n         BZR   R10                 WRONG RECORD LENGTH\n         LA    R4,2(R4)            RECORD BEGIN\n         BCTR  R2,0\n         AR    R4,R2         BUMP TO NEXT RECORD\n         CLI   0(R4),X'FF'   END OF BLOCK\n         BNE   BLKA#DHD\n         BR    R10           YES; RETURN\n         EJECT\n*********************************************************************\n*                                                                   *\n*                 PRINT/DUMP A BLOCK (SUBFUNCTION OF SELECT)        *\n*                                                                   *\n*  R01 ADDRESS OF THE BLOCK                                         *\n*                                                                   *\n*********************************************************************\nPRIDU    DS    0H\n         TM    FLGS+1,FLGS#SDU\n         BO    PRI#DUMP            DUMP REQUESTED\n* LIST SPECIFIED NUMBER OF UNPACKED RECORDS\n* CHECK THE TYPE OF THE BLOCK\n         LR    R4,R1               MAKE R4 POINT TO BLOCK\nPRI#A00  EQU   *\n         CLC   0(4,R4),JOB#HDRO    OUTPUT JOB HEADER\n         BE    PRI#A01\n         CLC   0(4,R4),JOB#HDRX     INPUT JOB HEADER\n         BE    PRI#A01\n         CLC   0(4,R4),DSN#HDRO    OUTPUT DATASET HEADER\n         BE    PRI#ELMT\n         CLC   0(4,R4),DSN#HDRX     INPUT DATASET HEADER\n         BE    PRI#NSPX\n         CLC   0(4,R4),JOB#TRLO    OUTPUT JOB TRAILER\n         BE    PRI#E01\n         CLC   0(4,R4),JOB#TRLX     INPUT JOB TRAILER\n         BE    PRI#E01\n*        B     PRI#BLKO\n         CLC   0(4,R4),DSN#BLKO    DATA SET BLOCK\n         BE    PRI#BLKO\n         CLC   0(4,R4),DSN#BLKO+4  VM BLOCK CONTINUATION\n         BE    PRI#BLKO\n         CLC   0(4,R4),DSN#BLKO+8  JCL BLOCK CONTINUATION\n         BE    PRI#BLKO\n         CLC   0(4,R4),DSN#BLKX    DATA SET BLOCK\n         BE    PRI#BLKO\n         BR    R10                 INVALID BLOCK; DROP IT\nPRI#A01  EQU   *\n         TM    LISTG+DCBOFLGS,X'10' IF OPEN MULTIPLE JOB HEADERS\n         BO    PRI#NSPX             BYPASS OPENING NEW SYSOUT\n         LH    R1,PRNTCNT           LOAD PRINT OUT COUNT\n         LA    R1,1(R1)             INCREMENT COUNT\n         STH   R1,PRNTCNT           SAVE COUNT\n         LA    R0,PRNTCNT           LOAD ADDRESS\n*                                        LAST HALF OF PRINT OUT COUNT\n         MVC   LISTG+DCBDNAM(8),=CL8'PRNT    '\n         LA    R1,LISTG+44          -->DCB + 44 (LAST 4 CHAR OF DDNAME)\n         LA    R2,2                 2 CHARACTERS\n         L     R15,ACONH          ADDRESS OF\n         BALR  R14,R15                 CONVERT BINARY TO HEX OUT\n         MVC   S99T1NAM,LISTG+DCBDNAM    MOVE CONVERTED DDNAME\n         LA    R1,S99RBPTR          ADDRESS OF DYN ALLOCATE LIST\n         DYNALLOC                   ALLOCATE SYSOUT\n         LTR   R15,R15              SVC99 OKAY?\n         BZ    PRI#A02              YES, OPEN FILE\n         CLC   S99INFO,=X'0000'\n         BNE   PRI#AB1\n         CLC   S99ERROR,=X'0000'\n         BNE   PRI#AB2\n         B     PRI#A02\nPRI#AB1  EQU   *\n         ABEND 201,DUMP\nPRI#AB2  EQU   *\n         ABEND 202,DUMP\nPRI#A02  EQU   *\n         OPEN  (LISTG,(OUTPUT))\n         TM    LISTG+DCBOFLGS,X'10'\n         BZ    NOPRT\n         B     PRI#NSPX\nPRI#E01  EQU   *\n         TM    LISTG+DCBOFLGS,X'10' IF CLOSED MULTIPLE JOB TRAILERS\n         BZ    PRI#NSPX             BYPASS CLOSING SYSOUT\n         CLOSE (LISTG)\n         B     PRI#NSPX\nPRI#ELMT DS    0H\n* PROVIDE THE EMPTY LINE BETWEEN EVERY OUTPUT ELEMENT\n         TM    FLGS+1,FLGS#SSH\n         BZ    PRI#ELM0            PRINT REQUESTED,NO NEED\n         DRUKUJ VTD,R=LISTR1,L=6\nPRI#ELM0 DS    0H\n         LA    R3,5(R4)           GET HEADER RECORD ADDRESS\n         USING NDH,R3             PROVIDE ADDRESSABLITY\n         TM    NDHSEQ,X'01'       SPOOL OFFLOAD FACILITY HEADER\n         BO    PRI#NSPC           YES; IGNORE IT\n         MVI   CARRIAGE,C'N'      NO CARRIAGE CONTROL (DEFAULT)\n         TM    NDHGRCFM,X'06'     CARRIAGE CONTROL ?\n         BZ    PRI#ELM1           NO, SKIP SETTING\n         MVI   CARRIAGE,C'X'      CARRIAGE CONTROL SET\n         TM    NDHGFLG2,NDHGF2PU  PUNCH ?\n         BZ    PRI#ELM1           NO, SKIP SETTING\n         MVI   CARRIAGE,C'N'      SET NO CARRIAGE CONTROL\nPRI#ELM1 DS    0H\n         CLC   NDHGDD,=C'JESJCL  '   JCL LOG ?\n         BE    PRI#ELM2           YES, OUTPUT CHANNEL SKIP\n         CLC   NDHGDD,=C'JESYSMSG'   SYSTEM MESSAGES ?\n         BE    PRI#ELM2           YES, OUTPUT CHANNEL SKIP\n         CLI   CARRIAGE,C'N'      NO CARRIAGE CONTROL ON DATASET?\n         BE    PRI#ELM2           YES, OUTPUT CHANNEL SKIP\n         B     PRI#NSPC           DONT OUTPUT CHANNEL SKIP\n         DROP  R3\nPRI#ELM2 DS    0H\n         LA    R2,5               SET LINE LENGTH TO 1\n         STH   R2,LISTJRDW        SAVE AS RDW\n         MVI   LISTJC,C'1'        SKIP TO CHANNEL 1 CONTROL\n         PUT   LISTG,LISTJRDW     OUTPUT PAGE BREAK BETWEEN JES2\n*                                 DATASETS\n         MVI   LISTJC,C' '        RESET\nPRI#NSPC DS    0H\n* DATA SET HEADER BLOCK\n         LH    R5,NUSPEC\n         LTR   R5,R5               WAS SPECIFIED\n         BNZ   PRI#NSPX            NO,TAKE STANDARD\n         LA    R5,NUREC            NUMBER OF RECORDS TO BE PRINTED\n* BUMP THROUGH RECORD BLOCK IF NOT DATA\nPRI#NSPX DS    0H\n         LA    R4,5(R4)            SKIP OVER IT\n         LH    R3,0(R4)\n         AR    R4,R3\n         B     PRI#A00\n         SPACE 5\n* OUTPUT BLOCK HEADER\nPRI#BLKO DS    0H\n         TM    FLGS,FLGS#LST       LIST OPTION REQUESTED?\n         BOR   R10                 ONLY INDICATIVE PRINTS\nPRI#LIST DS    0H\n         LA    R4,4(R4)            SKIP OVER 4 BYTES (HEADER INFO)\n         XR    R2,R2               CLEAR R2\n         IC    R2,0(R4)            LEN OF DATA FOLLOWING\n         LTR   R2,R2               TEST VALUE IN R2\n         BZR   R10                 WRONG RECORD LENGTH\n         LA    R4,2(R4)            POINT TO RECORD BEGIN\n         BCTR  R2,0                DECREASE FOR EXECUTE COMMAND\n* IS THE PRINT OPTION SPECIFIED\n         TM    FLGS+1,FLGS#PRT\n         BZ    PRI#LST1\n* CHECK FOR PROPER LENGTH VALUES\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BZ    PRI#LST5\n         B     PRI#LST6\nPRI#LST5 DS    0H\n         EX    R2,PRMVEX1          MOVE TO THE PRINT AREA\n         MVI   LISTJC,C' '         STANDARD CNTL CHARACTER\n         B     PRI#LST8\nPRI#LST6 DS    0H\n         CLI   CARRIAGE,C'N'       NO CARRIAGE CONTROL\n         BNE   PRI#LST7            GO, OUTPUT IT\n         EX    R2,PRMVEX1          MOVE TO THE PRINT AREA\n         B     PRI#LST8\nPRI#LST7 DS    0H\n         EX    R2,PRMVEXL          MOVE WITH CONTROL CHARACTER\n         B     PRI#LST8\nPRI#LST8 DS    0H\n         LA    R3,4(R2)            RDW LENGTH\n         CLI   CARRIAGE,C'N'       NO CARRIAGE CONTROL\n         BNE   *+8\n         LA    R3,5(R2)            ADJ RDW LENGTH FOR NO CC\n         STH   R3,LISTJRDW\n         PUT   LISTG,LISTJRDW\n         B     PRI#LST2\nPRI#LST1 DS    0H\n* CHECK FOR PROPER LENGTH VALUES\n         LTR   R5,R5\n         BNPR  R10                 ADDITIONAL LOOP PROTECTION\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BZ    PRI#LST3\n         EX    R2,PRMVEX           MOVE TO THE PRINT AREA\n         B     PRI#LST4\nPRI#LST3 DS    0H\n         EX    R2,PRMVEX1          MOVE TO THE PRINT AREA\n         MVI   LISTJC,C' '         STANDARD CNTL CHARACTER\nPRI#LST4 DS    0H\n         LA    R3,4(R2)\n         DRUKUJ VTD,R=LISTJRDW,L=(R3)\nPRI#LST2 DS    0H\n         AR    R4,R2               POINT TO NEXT RECORD\n         CLI   0(R4),X'FF'         END OF BLOCK INDICATOR\n         BER   R10\n         TM    FLGS+1,FLGS#PRT     PRINT REQUESTED?\n         BO    PRI#A00             YES,PRINT ALL\n         BCT   R5,PRI#A00\n         BR    R10\n* MOVE THE RECORD WITH/WITHOUT CONTROL CHARACTER\nPRMVEX   MVC   LISTJ(0),1(R4)      WITHOUT\nPRMVEX1  MVC   LISTJ(0),0(R4)      WITHOUT INPUT\nPRMVEXL  MVC   LISTJC(0),0(R4)     WITH\n* DUMP THE CONTENTS OF THE BLOCKS\nPRI#DUMP DS    0H\n         ST    R1,BLKTAB\n* IS IT TO BE DUMPED\n         OC    NUSPEC,NUSPEC\n         BZ    PRI#DMP1              NOT SPECIFIED,PRINT ALL\n* IS IT THE NEW JOB\n         TM    FLGB,FLGB#JST\n         BZ    *+10                  NO\n         MVC   NUCURR,NUSPEC         REFRESH THE COUNT\n         LH    R2,NUCURR             LOAD THE COUNT\n         LTR   R2,R2                 ALREADY REQUESTED PRINTED\n         BNPR  R10                   YES\n         BCT   R2,*+4\n         STH   R2,NUCURR\n* PROVIDE THE EMPTY LINE IN FRONT OF EACH BLOCK\nPRI#DMP1 DS    0H\n         DRUKUJ VTD,R=LISTR1,L=6\n         LA    R1,DRUTAB\n         L     R15,DRUBAD\n         BALR  R14,R15\n         BR    R10\n         EJECT\n*********************************************************************\n*                                                                   *\n*                 ADJUST TIME/DATE VERIFICATION STAMP ON OFFLOAD    *\n*                 MERGE                                             *\n*                                                                   *\n*  R01 ADDRESS OF THE BLOCK                                         *\n*                                                                   *\n*********************************************************************\nADJSTAMP DS    0H\n         TM    FLGS,FLGS#MRG       IS MERGE REQUIRED\n         BZR   R10                 NO, LET STAMP ALONE\n         LR    R4,R1               CHANGE DATA REGISTER\nADJ#LOOP DS    0H\n         CLC   0(4,R4),JOB#HDRO    OUTPUT JOB HEADER\n         BE    ADJ#HD1\n         CLC   0(4,R4),JOB#HDRX    INPUT JOB HEADER\n         BE    ADJ#HD1\n         CLC   0(4,R4),DSN#BLKO    DATA SET BLOCK\n         BE    ADJ#CHD\n         CLC   0(4,R4),DSN#BLKO+4  VM BLOCK CONTINUATION\n         BE    ADJ#CHD\n         CLC   0(4,R4),DSN#BLKO+8  JCL BLOCK CONTINUATION\n         BE    ADJ#CHD\n         CLC   0(4,R4),DSN#BLKX    DATA SET BLOCK\n         BE    ADJ#CHD\n         CLC   0(4,R4),JOB#TRLO    OUTPUT JOB TRAILER\n         BE    ADJ#JT1\n         CLC   0(4,R4),JOB#TRLX    INPUT JOB TRAILER\n         BE    ADJ#JT1\n         CLC   0(4,R4),NJE#EOJ     (?) OFFLOAD TRAILER\n         BER   R10\n         MVC   LISTR(L'T4),T4      INVALID HEADER\n         PISZ  VPISZ1,NURIN,JOB#NODE,L=6,FD=F\n         BR    R10\n         SPACE 5\n*********************************************************************\n*                                                                   *\n*        CHECK HEADER AND ADJUST IF RIGHT ONE                       *\n*                                                                   *\n*********************************************************************\nADJ#HD1  DS    0H\n         LA    R3,5(R4)             POINT PAST INDICATOR\n         TM    3(R3),X'01'          SPOOL OFFLOAD BLOCK\n         BZ    ADJ#CHB              NO, IGNORE IT\n         LA    R3,19(R3)            YES, POINT PAST GENERAL SECTION\nADJ#HD1B DS    0H\n         CLI   2(R3),X'8A'          JOB SCHEDULING SECTION\n         BE    ADJ#HD1I             YES, INCREMENT\n         CLI   2(R3),X'8C'          JOB HEADER SECURITY SECTION\n         BE    ADJ#HD1I             YES,INCREMENT\n         CLI   2(R3),X'8D'          JOB ACCOUNTING SECTION\n         BE    ADJ#HD1I             YES, INCREMENT\n         CLI   2(R3),X'84'          JES2 SUBSYSTEM SECTION\n         BNE   ADJ#HD1I             NO, INCREMENT\n         CLI   3(R3),X'80'          SPOOL OFFLOAD FACILITY\n         BNE   ADJ#HD1I             NO, INCREMENT\n         USING NJHO,R3              ADDRESS IT\n*        MVC   8(8,R3),VERSTAMP     YES; ADJUST STAMP\n         MVC   NJHOTIME,VERSTIME    ADJUST TIME STAMP\n         MVC   NJHODATE,VERSDATE    ADJUST DATE STAMP\n         B     ADJ#CHB              GET NEXT BLOCK\n         DROP  R3\nADJ#HD1I DS    0H\n         LH    R5,0(R3)             GET LENGTH OF SECTION\n         AR    R3,R5                INCREMENT TO NEXT SECTION\n         B     ADJ#HD1B             LOOP (POSSIBLE PROBLEM HERE)\n         SPACE 5\n*********************************************************************\n*                                                                   *\n*        CHECK TRAILER AND ADJUST VERIFICATION STAMP                *\n*                                                                   *\n*********************************************************************\nADJ#JT1  DS    0H\n         LA    R3,5(R4)             POINT PAST INDICATOR\n         USING NJT,R3\n         LH    R5,NJTGLEN           GET LENGTH OF GENERAL SECTION\n         AR    R3,R5                ADD TO CURRENT POINTER\n         LA    R3,4(R3)             POINT PAST TOTAL BLOCK SIZE\n         DROP  R3\nADJ#JT1B DS    0H\n         CLI   2(R3),X'89'          JOB TRAILER ACCOUNTING SECTION\n         BE    ADJ#JT1I             YES, INCREMENT\n         CLI   2(R3),X'84'          JES2 SUBSYSTEM SECTION\n         BNE   ADJ#JT1I             NO, INCREMENT\n         CLI   3(R3),X'80'          SPOOL OFFLOAD FACILITY\n         BNE   ADJ#JT1I             NO, INCREMENT\n         USING NJTO,R3              ADDRESS IT\n         MVC   NJTOTIME,VERSTIME    ADJUST VERIFICATION STAMP - TIME\n         MVC   NJTODATE,VERSDATE    ADJUST VERIFICATION STAMP - DATE\n         B     ADJ#CHB              GO GET NEXT BLOCK\n         DROP  R3\nADJ#JT1I DS    0H\n         LH    R5,0(R3)             GET LENGTH OF SECTION\n         AR    R3,R5                INCREMENT TO NEXT SECTION\n         B     ADJ#JT1B             LOOP (POSSIBLE PROBLEM HERE)\n         SPACE 5\n*********************************************************************\n*                                                                   *\n*        WALK THE HEADER BLOCK CHAINS                               *\n*                                                                   *\n*********************************************************************\nADJ#CHB  DS    0H\n         LA    R4,5(R4)      BUMP PAST 4 BYTES INDICATOR\n         LH    R3,0(R4)      LENGTH OF BLOCK\n         AR    R4,R3         POINT TO NEXT BLOCK / DATA\n         CLI   0(R4),X'FF'   END OF BLOCK\n         BNE   ADJ#LOOP\n         BR    R10           YES; RETURN\n*********************************************************************\n*                                                                   *\n*        WALK THE DATA BLOCK CHAINS                                 *\n*                                                                   *\n*********************************************************************\nADJ#CHD  DS    0H\n         LA    R4,4(R4)      BUMP PAST 4 BYTES INDICATOR\n         XR    R2,R2\n         IC    R2,0(R4)            LEN\n         LTR   R2,R2\n         BZR   R10                 WRONG RECORD LENGTH\n         LA    R4,2(R4)            RECORD BEGIN\n         BCTR  R2,0\n         AR    R4,R2         BUMP TO NEXT RECORD\n         CLI   0(R4),X'FF'   END OF BLOCK\n         BNE   ADJ#LOOP\n         BR    R10           YES; RETURN\n         EJECT\n*********************************************************************\n*                                                                   *\n*                 PARM FIELD ANALYZIS                               *\n*                                                                   *\n*  R01 - ADDRESS OF THE PARM FIELD                                  *\n*  R02 - LENGTH OF IT                                               *\n*  R10 - RETURN ADDRESS                                             *\n*                                                                   *\n*        ACCEPTED VALUES ARE : HEX SELECT LIST                      *\n*                                                                   *\n*********************************************************************\nPARANA   DS    0H\n         CH    R2,=H'3'            IS IT TOO SHORT\n         BL    WRPAR               WRONG PARAMETER\n         LA    R1,2(R1)            SKIP OVER THE LENGTH\n* IS IT THE HEX REQUEST\n         CLC   0(L'THX,R1),THX\n         BNE   PARA#LST\n         OI    FLGS,FLGS#HEX+FLGS#LST\n         BR    R10\nPARA#LST DS    0H\n* IS IT THE LIST REQUEST\n         CLC   0(L'TLI,R1),TLI\n         BNE   PARA#SEL\n         OI    FLGS,FLGS#LST\n* CHECK IF SUBFUNCTIONS SPECIFIED\n         CH    R2,=AL2(L'TLI)\n         BNHR  R10                 NO\n         CLI   L'TLI(R1),C','\n         BNER  R10                 NO\n* AND DISALLOW - CODING DOES NOT CURRENTLY SUPPORT\n         B     WRPAR\n* ACCEPT SUBFUNCTION SPECIFICATION,IF WRONG REJECT THE PARM FIELD\n         CLC   1+L'TLI(L'TDU,R1),TDU\n         BNE   PARA#SH\n* IS THE NUMBER OF BLOCKS SPECIFIED\n         CLI   1+L'TLI+L'TDU(R1),C','\n         BNE   PARA#DUL           NO\n* NUMBER OF BLOCKS TO BE READ\n         LA    R1,2+L'TLI+L'TDU(R1) BEGIN OF IT\n         SH    R2,=AL2(2+L'TLI+L'TDU)\n         BNP   PARA#DUL           ERROR IN SPECIFICATION\n         L     R15,=V(VCZYT)\n         BALR  R14,R15            READ THE NUMBER\n         LTR   R15,R15            WAS OK\n         BNZ   PARA#DUL           NO\n         STH   R0,NUSPEC\n* PRELOAD THE DRUB MODULE\nPARA#DUL DS    0H\n         LOAD  EP=DRUB\n         ST    R0,DRUBAD\n         OI    FLGS+1,FLGS#SDU\n* SET ON THE SELECT FLAG AS WELL\n         OI    FLGS,FLGS#SEL\n         BR    R10\nPARA#SH  DS    0H\n         CLC   1+L'TLI(L'TSH,R1),TSH\n         BNE   WRPAR\n         OI    FLGS+1,FLGS#SSH\n* SET ON THE SELECT FLAG AS WELL\n         OI    FLGS,FLGS#SEL\n* IS THE NUMBER OF RECORDS SPECIFIED\n         CLI   1+L'TLI+L'TSH(R1),C','\n         BNER  R10                NO\n* NUMBER OF BLOCKS TO BE READ\n         LA    R1,2+L'TLI+L'TSH(R1) BEGIN OF IT\n         SH    R2,=AL2(2+L'TLI+L'TSH)\n         BNPR  R10                ERROR IN SPECIFICATION\n         L     R15,=V(VCZYT)\n         BALR  R14,R15            READ THE NUMBER\n         LTR   R15,R15            WAS OK\n         BNZR  R10                NO\n         STH   R0,NUSPEC\n         BR    R10\nPARA#SEL DS    0H\n* IS IT THE SELECT REQUEST\n         CLC   0(L'TSE,R1),TSE\n         BNE   PARA#MRG\n         OI    FLGS,FLGS#SEL\n         BR    R10\nPARA#MRG DS    0H\n* IS IT THE MERGE REQUEST\n         CLC   0(L'TMG,R1),TMG\n         BNE   PARA#PRT\n         OI    FLGS,FLGS#SEL\n         OI    FLGS,FLGS#MRG\n         BR    R10\nPARA#PRT DS    0H\n* IS IT THE SELECT REQUEST\n         CLC   0(L'TPR,R1),TPR\n         BNE   WRPAR\n* SET PRINT REQUEST\n*     ON THE SELECT FLAG AS WELL\n         OI    FLGS+1,FLGS#PRT\n         OI    FLGS,FLGS#SEL\n         BR    R10\n* WRONG PARAMETER\nWRPAR    DS    0H\n         MVC   LISTR(L'T8),T8      END OF FILE\n         DRUKUJ VTD,R=LISTR1,L=L'T8+6\n         LA    R15,RC#WRP\n         B     WROC\n* SYNTAX CHECK TEXTS\nTHX      DC    C'HEX'\nTLI      DC    C'LIST'\nTDU      DC    C'DUMP'\nTSH      DC    C'SHOW'\nTSE      DC    C'SELECT'\nTPR      DC    C'PRINT'\nTMG      DC    C'MERGE'\n         EJECT\n*********************************************************************\n*                                                                   *\n*                 READ CONTROL CARDS                                *\n*                                                                   *\n*  R00 - LENGTH OF IT                                               *\n*  R01 - ADDRESS OF THE DATA FIELD                                  *\n*  R10 - RETURN ADDRESS                                             *\n*                                                                   *\n*********************************************************************\nRDCTLC   DS    0H\n         LA    R3,SEL#LEN          LENGTH OF ONE ENTRY\n         LR    R4,R1               GETMAINED AREA\n         LA    R5,SEL#QTY          NUMBER OF ENTRIES\n* CHECK IF GENERAL SELECTION CRITERIONS ENTERED\n         GET   SYSIN\n         LR    R11,R1\n         MVC   LISTR(80),0(R1)\n         DRUKUJ VTD,R=LISTR1,L=86\n* RESET ANY PREVIOUS OPTIONS\n         NI    FLGS,X'FF'-FLGS#SLO-FLGS#SLI\n         LR    R1,R11\n         CLC   0(8,R1),=CL8'OUTPUTS'\n         BE    RDC#OUT\n         CLC   0(8,R1),=CL8'INPUTS'\n         BE    RDC#INP\n         B RDC#LP1\n* DETAILED SELECTION CARDS EXPECTED\nRDC#LOOP DS    0H\n         GET   SYSIN\n         LR    R11,R1\n         MVC   LISTR(80),0(R1)\n         DRUKUJ VTD,R=LISTR1,L=86\nRDC#LP1  DS    0H\n         LR    R1,R11\n         CLC   0(8,R1),=CL8'OUTPUTS'\n         BE    RDC#ERR\n         CLC   0(8,R1),=CL8'INPUTS'\n         BE    RDC#ERR\n* INITIALIZE THE ENTRY\n         MVI   0(R4),C' '\n         MVC   1(SEL#LEN-1,R4),0(R4)\n         XC    SEL#JBN(4,R4),SEL#JBN(R4)\n         MVI   SEL#FLG(R4),X'00'   SELECTION FLAGS\n* CONVERT THE CARD TO THE SELECT ENTRY IN THE TABLE\n         CLI   0(R1),C' '          IS THERE A JOBNAME\n         BE    RDC#NAL             NO,JOB NUMBER EXPECTED\n         CLI   0(R1),C'*'          IS THERE PREFIX REQUEST\n         BE    RDC#PRF\n         CLI   0(R1),C'\u00a2'          IS THERE PREFIX REQUEST\n         BE    RDC#CLS\n         MVC   SEL#JOB(8,R4),0(R1) MOVE THE JOBNAME\n         OI    SEL#FLG(R4),SFL#JBS JOBNAME SPECIFIED\n         CLC   9(4,R1),=CL4'ALL '\n         BNE   RDC#NAL\n         OI    SEL#FLG(R4),SFL#ALL  ALL JOBS WITH JOBNAME TO SELECT\n         B     RDC#CNT\n* READ THE JOB NUMBER AND CONVERT TO BINARY\nRDC#NAL  DS    0H\n         LA    R1,9(R1)            NUMBER ADDRESS\n         CLC   0(5,R1),=CL5' '\n         BE    RDC#CNT\n         LA    R2,5                LENGTH OF IT\n         L     R15,=V(VCZYT)\n         BALR  R14,R15\n         LTR   R15,R15\n         BNZ   RDC#NNM             ERROR IN THE JOB NUMBER\n         LTR   R0,R0\n         BZ    RDC#NNM             ERROR IN THE JOB NUMBER\n         ST    R0,SEL#JBN(R4)\n         OI    SEL#FLG(R4),SFL#JBN\n         B     RDC#CNT\n* PREFIX REQUESTED\nRDC#PRF  DS    0H\n         LA    R1,1(R1)            SKIP OVER *\n         LA    R2,7                PREFIX LN\n         LA    R3,0(R1,R2)         END OF JOBNAME FIELD\n         BCTR  R3,0                SET THE PRECEDING CHARACTER\nRDC#PRF1 CLI   0(R3),C' '          STILL BLANKS\n         BNE   RDC#PRF2            PREFIX STARTS\n         BCTR  R3,0                SET THE PRECEDING CHARACTER\n         BCT   R2,RDC#PRF1         CONTINUE THE SEARCH\n         B     RDC#ERR             NOTHING FOUND\nRDC#PRF2 MVC   SEL#JOB(7,R4),0(R1) PREFIX MOVE\n         BCTR  R2,0                SET THE CORRECT CHARACTER LENGTH\n         STC   R2,SEL#PRL(R4)      PREFIX LENGTH\n         OI    SEL#FLG(R4),SFL#PRF PREFIX SPECIFIED\n         B     RDC#CNT1\n* JOB CLASS REQUESTED\nRDC#CLS  DS    0H\n         MVC   SEL#JOB(1,R4),1(R1) CLASS\n         OI    SEL#FLG(R4),SFL#CLS PREFIX SPECIFIED\n         B     RDC#CNT1\n* JOB NUMBER NOT SPECIFIED\nRDC#NNM  DS    0H\n         TM    SEL#FLG(R4),SFL#JBS JOBNAME SPECIFIED\n         BZ    RDC#ERR             NO,ERROR\n* CONTINUE THE PROCESSING\nRDC#CNT  DS    0H\n* WAS ANYTHING SPECIFIED\n         TM    SEL#FLG(R4),SFL#JBS+SFL#JBN+SFL#ALL\n         BZ    RDC#ERR\nRDC#CNT1 DS    0H\n         LA    R4,SEL#LEN(R4)\n         BCT   R5,RDC#LOOP\n* TOO MANY ENTRIES ON SYSIN\n         MVC   LISTR(L'TA),TA      TOO MANY ENTRIES\n         DRUKUJ VTD,R=LISTR1,L=L'TA+6\n         B     RDC#EOD\n* ALL OUTPUT JOBS TO BE SELECTED\nRDC#OUT  DS    0H\n         OI    FLGS,FLGS#SLO\n         B     RDC#EOD\n* ALL INPUT JOBS TO BE SELECTED\nRDC#INP  DS    0H\n         OI    FLGS,FLGS#SLI\n         B     RDC#EOD\n* REGULAR EOF OR END OF PROCESSING\nRDC#EOD  DS    0H\n* COMPUTE THE NUMBER OF CREATED ENTRIES\n         LA    R1,SEL#QTY\n         SR    R1,R5\n         ST    R1,GT#SEL+8\n         MVI   VTD,X'00'\n         CLOSE SYSIN\n         BR    R10\n* GENERAL SELECTION CARD INSIDE THE DETAILED,ERROR\nRDC#ERR  DS    0H\n         OI    FLGS,FLGS#ERR\n         MVC   LISTR(L'T9),T9      ERROR\n         DRUKUJ VTD,R=LISTR1,L=L'T9+6\n         LA    R15,RC#WRP\n         B     WROC\n         EJECT\n*********************************************************************\n*                                                                   *\n*              CHECK IF THE JOB IS TO BE SELECTED FOR COPY          *\n*                                                                   *\n* R11 JOB HEADER POINTER                                            *\n* R10 RETURN ADDRESS                                                *\n*     FLGB#SEL SET ON IF JOB TO BE SELECTED                         *\n*                                                                   *\n*********************************************************************\nSELCHK   DS    0H\n         USING NJH,R11             SET THE USING FOR THE BLOCK\n* SWITCH OFF THE SELECT BIT FOR THE BEGINNING\n         NI    FLGB,X'FF'-FLGB#SEL\n* IS THERE A GLOBAL REQUEST\n         TM    FLGS,FLGS#SLI+FLGS#SLO\n         BZ    SELC#SLC            NO\n         TM    FLGS,FLGS#SLO       ALL OUTPUT JOBS TO BE SELECTED\n         BZ    SELC#SLI\n* ALL OUTPUT JOBS TO BE SELECTED\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BZR   R10                 NO\n         B     SELC#SEL            SELECTION SATISFIED\n* ALL INPUT JOBS TO BE SELECTED\nSELC#SLI DS    0H\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BOR   R10                 NO\n         B     SELC#SEL            SELECTION SATISFIED\n* SELECTIVE REQUEST CHECK\nSELC#SLC DS    0H\n         LM    R1,R2,GT#SEL+4      TABLE ADDRESS AND # OF ENTRIES\nSELC#LP  DS    0H\n         TM    SEL#FLG(R1),SFL#PRF PREFIX SPECIFIED\n         BO    SELC#PRF\n         TM    SEL#FLG(R1),SFL#CLS PREFIX SPECIFIED\n         BO    SELC#CLS\nSELC#LP1 DS    0H\n         TM    SEL#FLG(R1),SFL#JBS JOBNUMBER SPECIFIED ONLY\n         BZ    SELC#LPN\n         CLC   SEL#JOB(8,R1),NJHGJNAM\n         BNE   SELC#LPC\n* JOBNAME FITS,CHECK IF ALL TO BE SELECTED OR NUMBER\n         TM    SEL#FLG(R1),SFL#ALL ALL JOBS WITH THAT JOBNAME\n         BO    SELC#SEL\n         TM    SEL#FLG(R1),SFL#JBN IS JOBNUMBER ALSO GIVEN\n         BZ    SELC#SNG            ONLY FIRST OCCURENCE TO BE SATISFIED\n* CHECK THE JOBNUMBER\nSELC#LPN DS    0H\n         CLC   SEL#JBN+2(2,R1),NJHGJID\n         BNE   SELC#LPC            NO,CONTINUE\n         B     SELC#SEL            SELECT IT\n* SINGLE JOBNAME SELECTED\nSELC#SNG DS    0H\n         TM    SEL#FLG(R1),SFL#STF\n         BO    SELC#LPC            CHECK THE NEXT\n         B     SELC#SEL            SELECT IT\n* PREFIX JOBNAME SPECIFIED\nSELC#PRF DS    0H\n         XR    R3,R3\n         IC    R3,SEL#PRL(R1)      PREFIX LN-1\n         EX    R3,PRF#CLC          COMPARE IT\n         BE    SELC#SEL            SELECT IT\n         BNE   SELC#LP1            NO,CHECK JOBNAME/JOBNUMBER\n* EXECUTION CLASS SPECIFIED\nSELC#CLS DS    0H\n         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB\n         BO    SELC#LP1            YES DO NOT SELECT IT\n         CLC   SEL#JOB(1,R1),NJHGJCLS\n         BE    SELC#SEL            SELECT IT\n         BNE   SELC#LP1            NO,CHECK JOBNAME/JOBNUMBER\n* INDICATE THE JOB TO BE SELECTED\nSELC#SEL DS    0H\n         OI    FLGB,FLGB#SEL       SELECTION TO BE DONE\n         OI    SEL#FLG(R1),SFL#STF\n         OI    FLGB,FLGB#JSL       AT LEAST ONE SELECTED\n         BR    R10\n* NOTHING FOUND CHECK THE NEXT ENTRY\nSELC#LPC DS    0H\n         LA    R1,SEL#LEN(R1)\n         BCT   R2,SELC#LP          CONTINUE\n         BR    R10\nPRF#CLC  CLC   SEL#JOB(0,R1),NJHGJNAM\n         DROP  R11\n         EJECT\n*********************************************************************\n*                                                                   *\n*              EODAD FROM INPUT FILE                                *\n*                                                                   *\n*********************************************************************\nEOD      DS    0H\n* CHECK IF AVERYTHING COMPLETED\n         CLOSE INDCB\n         TM    FLGS,FLGS#SEL       WAS SELECT SPECIFIED\n         BZ    EOD#0               NO\n         TM    FLGS+1,FLGS#SDP     ANY PRINT/SELECT SPECIFIED\n         BNZ   EOD#0               YES,OUTPUT NOT OPENED\n         CHECK DECB3\n         CHECK DECB4\n         CLOSE OUTDCB\nEOD#0    DS    0H\n         LM    R3,R4,GT#IOI\n         FREEMAIN R,LV=(R3),A=(R4)\n         TM    FLGS,FLGS#SEL       WAS SELECT SPECIFIED\n         BZ    EOD#1               NO\n* REPORT THE SELECTION STATUS\n         MVI   VTD,X'00'\n         TM    FLGS,FLGS#SLI+FLGS#SLO\n         BZ    EOD#RPS             GLOBAL SELECT SPECIFIED\n* GLOBAL SELECT WAS REQUESTED\n         TM    FLGB,FLGB#JSL       AT LEAST ONE SELECTED?\n         BO    EOD#1               YES\n         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE\n         MVC   LISTR(L'TC),TC      END OF FILE\n         DRUKUJ VTD,R=LISTR1,L=L'TC+6\n         B     EOD#1\nEOD#RPS  DS    0H\n         LM    R3,R4,GT#SEL+4      ADDRES&#OF ENTRIES\nEOD#SRP  DS    0H\n         MVI   LISTR-1,C' '\n         MVC   LISTR(30),LISTR-1\n         MVC   LISTR(8),SEL#JOB(R3)\n         TM    SEL#FLG(R3),SFL#ALL ALL TO BE SELECTED\n         BZ    EOD#SNA             NO\n         MVC   LISTR+13(4),=CL4'ALL'\n         B     EOD#SNP             DON'T PRINT THE NUMBER\n* WAS THE JOBNUMBER SPECIFIED\nEOD#SNA  DS    0H\n         TM    SEL#FLG(R3),SFL#JBN\n         BZ    EOD#SNP             NO\n         PISZ  VPISZ1,SEL#JBN(R3),LISTR+10,FD=F,L=6\nEOD#SNP  DS    0H\n         TM    SEL#FLG(R3),SFL#STF SATISFIED?\n         BZ    EOD#SNF             NO\n         MVC   LISTR+20(9),=C'SELECTED '\n         B     EOD#SPR             PRINT IT\nEOD#SNF  DS    0H\n         OI    FLGS,FLGS#ERR       ERROR\n         MVC   LISTR+20(9),=C'NOT FOUND'\nEOD#SPR  DS    0H\n         DRUKUJ VTD,R=LISTR1,L=35\n         LA    R3,SEL#LEN(R3)\n         BCT   R4,EOD#SRP\n         LM    R3,R4,GT#SEL\n*        ABEND 001,DUMP\n         FREEMAIN R,LV=(R3),A=(R4)\n         CLOSE SYSIN\nEOD#1    DS    0H\n         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE\n         MVC   LISTR(L'T2),T2      END OF FILE\n         DRUKUJ VTD,R=LISTR1,L=L'T2+6\n         B     KOVO\n*        END OF VOLUME\nKOVO     DS    0H\n         LA    R15,0\n         TM    FLGS,FLGS#ERR       ANY ERRORS (SELECT OR CONTROL)\n         BZ    WROC                NO\n         LA    R15,RC#WRP          INDICATE\n         B     WROC\n* NO SYSPRINT DD\nNOPRT    DS    0H\n         LA    R15,RC#NSP\n         B     WROC\n* NO OPEN\nNOPEN    DS    0H\n         CLOSE PRINT\n         LA    R15,RC#NSP\n         B     WROC\n* SYSIN NOT SPECIFIED\nNODDNA   DS    0H\n         MVC   LISTR(DK025),PK025\n         MVC   LISTR+21(8),0(R2)\n         DRUKUJ VTD,R=LISTR1,L=DK025+6\n         LA    R15,RC#NSI\n         B     WROC\n* RETURN\nWROC     DS    0H\n* END OF PROCESSING\n         ST    R15,GT#IOI+8\n         MVC   LISTR(DK300),PK300\n         MVC   LISTR+DK300(5),=C', RC='\n         PISZ  VPISZ1,GT#IOI+8,LISTR+DK300+5,L=4,FD=F\n         DRUKUJ VTD,R=LISTR1,L=DK300+15\n         CLOSE PRINT\n         WROC  SA=YES,RC=GT#IOI+8\n         EJECT\n* REGISTER SAVE AREA\nSAVEAREA DS    18A(0)\n*\n* TEXTS\nT1       DC    C'       JOBNAME   ##### C NODE     USERID   PGMN'\nT2       DC    C'END OF UNLOADED JES2 SPOOL FILE'\nT3       DC    C'END OF TAPE'\nT4       DC    C'UNKNOWN BLOCK HEADER'\nT5       DC    C'UNKNOWN BLOCK FORMAT'\nT6       DC    C'JOB TRAILER MISSING'\nT7       DC    C'TOTAL JOB RECORDS'\nT8       DC    C'WRONG PARAMETERS PASSED'\nT9       DC    C'**** INVALID CONTROL CARD,DISREGARDED'\nTA       DC    C'TOO MANY CONTROL CARDS'\nTB       DC    C'JOB SELECTED'\nTC       DC    C'NO INPUT/OUTPUT JOBS FOUND'\nTD       DC    C'NJE OFFLOAD HEADER'\nTE       DC    C'BLOCK HEADER FOUND IN NON-MERGE FUNCTION'\nWORK     DS    F\n* EQUATES\nNJE#HDR  DC    X'02000000'\nNJE#EOJ  DC    X'01000201'\nJOB#HDRO DC    X'01C00100'\nJOB#HDRX DC    X'00C00100'\nJOB#TRLO DC    X'01D00100'\nJOB#TRLX DC    X'00D00100'\nDSN#HDRO DC    X'01E00100'\nDSN#HDRX DC    X'00E00100'\nDSN#BLKO DC    X'01A00100'\n         DC    X'01900100'\n         DC    X'01800100'\nDSN#BLKX DC    X'00800100'\n* PROCESSING PARAMETERS FLAG BYTE\nFLGS     DC    XL2'00'\nFLGS#PRM EQU   X'01'               PARM SPECIFIED\nFLGS#LST EQU   X'02'               LIST ONLY REQUESTED\nFLGS#HEX EQU   X'04'               HEX DATA ON HEADERS REQUESTED\nFLGS#SEL EQU   X'08'               JOB SELECTION REQUESTED\nFLGS#MRG EQU   X'10'               MERGE OUTPUT REQUEST\nFLGS#SLI EQU   X'20'               ALL INPUT JOBS TO BE SELECTED\nFLGS#SLO EQU   X'40'               ALL OUTPUT JOBS TO BE SELECTED\nFLGS#ERR EQU   X'80'               SELECT OR CONTROL CARD ERROR\n* 2-ND BYTE\nFLGS#SOU EQU   X'01'               OUTPUT OF THE SELECTED JOB TO BE\n*                                  COPIED ONLY\nFLGS#SDU EQU   X'02'               SELECTED JOBS TO BE DUMPED\nFLGS#SSH EQU   X'04'               BEGINNING OF EACH SELECTED JOB TO\n*                                  BE PRINTED\nFLGS#PRT EQU   X'08'               LISTINGS OF THE SELECTED JOBS TO\n*                                  BE PRINTED TO SEPARATE OUTPUT\nFLGS#SDP EQU   FLGS#SDU+FLGS#SSH+FLGS#PRT COMPOSITE FLAG\n* OFFLOAD DATA SET FLAG BYTE\nFLGB     DC    AL1(0)\nFLGB#JHD EQU   X'01'               JOB HEADER OCCURED\nFLGB#OUT EQU   X'02'               JOB OUTPUT\nFLGB#JST EQU   X'04'               JOB START\nFLGB#FWR EQU   X'08'               1-ST WRITE INITIATED\nFLGB#SWR EQU   X'10'               2-ND WRITE INITIATED\nFLGB#JSL EQU   X'20'               AT LEAST ONE JOB SELECTED\nFLGB#NJE EQU   X'40'               NJE HEADER OCCURRED\nFLGB#SEL EQU   X'80'               JOB TO BE SELECTED\n* AREAS\n         DS    0H\nLISTJRDW DC    XL4'00'\nLISTJC   DC    CL1' '\nLISTJ    DC    CL254' '\n         DS    0H\nLISTR1   DC    XL4'00'\n         DC    CL2' '\nLISTR    DC    CL132' '\n         ORG   LISTR+5\nJOB#TYPE DS    C                   INPUT OR OUTPUT\n         DS    C\nJOB#NAME DS    CL8                 JOBNAME\n         DS    C\nJOB#NUMB DS    CL6                 JOB NUMBER\n         DS    C\nJOB#CLS  DS    C                   JOB CLASS\n         DS    C\nJOB#NODE DS    CL8                 EXECUTION NODE\n         DS    C\nJOB#TSOI DS    CL8                 TSO SUBMITTER\n         DS    C\nJOB#PGNM DS    CL20                PROGRAMMER\n         DS    C\nJOB#HEX  DS    CL26                HEXADECIMAL BLOCK HEADER FORMAT\n         DS    C\nJOB#FLG  DS    CL4                 HEX FLG1 FLG2\nJOB#END  DS    C                   FOR LENGTH COMPUTATION,MUST BE LAST\n         ORG\nJOB#RCDS DS    F                   TOTAL JOB RECORDS\nAPAR     DS    F                   ADDRESS OF THE PARMFIELD POINTER\nNURIN    DC    F'0'                NUMBER OF THE PHYSICAL BLOCK (INP)\nPRNTCNT  DC    F'0'                SYSOUT NUMBER\nGT#SEL   DS    3F                  STORAGE GOTTEN FOR SELECT LIST\nGT#IOI   DS    3F                  STORAGE GOTTEN FOR I/O-INPUT\nGT#IOO   DS    3F                  STORAGE GOTTEN FOR I/O-OUTPUT\nNUSPEC   DS    H                   SPECIFIED NUMBER OF RECORDS/BLOCKS\n*                                  TO BE SHOWN/DUMPED\nNUCURR   DS    H                   CURRENT BLOCK NUMBER DUMPERD\nSAVLR    DS    H                   SAVE LRECL\nSAVBL    DS    H                   SAVE BLSIZE\nVERSTAMP DS    0CL8                VERIFICATION STAMP\nVERSTIME DS    CL4                 VERIFICATION STAMP - TIME\nVERSDATE DS    CL4                 VERIFICATION STAMP - DATE\nCARRIAGE DS    CL1                 CARRAGE CONTROL FROM DATASET HDR\n*                                  N - NO CARRIAGE CONTROL\n*                                  X - ASA CARRIAGE CONTROL\n*                                      MACHINE CARRIAGE CONTROL\n*                                      AFPDS\n* EXCHANGE BUFFERING WITH DOUBLE I/O OPERATIONS\nB1       DS    2F                  1-ST PAIR OF BUFFERS FOR READ/WRITE\nB2       DS    2F                  2-ND PAIR OF BUFFERS FOR READ/WRITE\n* DRUB CONTROL TABLE\nDRUBAD   DC    A(0)                DRUB ENTRY POINT\nDRUTAB   DC    A(*+4)\n         DC    A(BLKTAB)           STORAGE BLOCK DESCRIPTION\nLINADR   DC    A(LISTR)            PRINT LINE ADDRESS\nAVTD     DC    A(VTD)              VTD ADDRESS\nAPISZ1   DC    A(VPISZ1)           VPISZ1 SUBROUTINE\nACONH    DC    A(CONHEX)           CONHEX SUBROUTINE\nBLKTAB   DC    A(0)                BLOCK ADDRESS\nBLLEN    DC    A(BLKL)             BLOCK LENGTH\n* SELECTION RECORD LAYOUT\nSEL#JOB  EQU   00                  JOBNAME\nSEL#JBN  EQU   08                  JOB NUMBER\nSEL#FLG  EQU   12                  JOB FLAGS\nSEL#PRL  EQU   13                  PREFIX LN-1\nSEL#RSV  EQU   13                  2 BYTES RESERVED\n* SELECTION FLAG MEANING\nSFL#ALL  EQU   X'80'               ALL JOBS WITH JOBNAME TO BE SELECTED\nSFL#XXX  EQU   X'40'\nSFL#OUT  EQU   X'20'               OUTPUT CLASS FOR JOB TO BE SELETED\nSFL#JBN  EQU   X'10'               ONLY JOB NUMBER SPECIFIED\nSFL#JBS  EQU   X'08'               JOBNAME SPECIFIED\nSFL#PRF  EQU   X'04'               PREFIX SELECT REQUEST\nSFL#CLS  EQU   X'02'               EXECUTION CLASS SELECT REQUEST\nSFL#STF  EQU   X'01'               SELECTION REQUEST SATISFIED\nSEL#LEN  EQU   16                  LENGTH OF THE RECORD\nSEL#QTY  EQU   100                 NUMBER OF RECORDS SUPPORTED\n* LIST FORMS\nRD1      READ  DECB1,SF,INDCB,,'S',MF=L\nRD2      READ  DECB2,SF,INDCB,,'S',MF=L\nWR1      WRITE DECB3,SF,OUTDCB,,'S',MF=L\nWR2      WRITE DECB4,SF,OUTDCB,,'S',MF=L\n* DCBS\nINDCB    DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=R,NCP=2,                   C\n               RECFM=U,EODAD=EOD,BLKSIZE=4042\nOUTDCB   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=W,NCP=2,                   C\n               RECFM=U,BLKSIZE=4042\nPRINT    DCB   DDNAME=SYSPRINT,MACRF=PM,RECFM=VBA,LRECL=137,           C\n               DSORG=PS,EROPT=ACC,EXLST=PRTEXL\nLISTG    DCB   DDNAME=PRINTOUT,MACRF=PM,RECFM=VBA,LRECL=259,           C\n               DSORG=PS,EROPT=ACC,EXLST=PRTEXL\n         DCBPREF BLKSIZE=80\nSYSIN    DCB   DDNAME=SYSIN,MACRF=GL,RECFM=FB,LRECL=80,                C\n               DSORG=PS,EROPT=ACC,EXLST=PRTEXL,EODAD=RDC#EOD\n         KOMU  SPOOLSEL,KOM=(025,200,203,300)\n* EXIT LISTS\nPRTEXL   EQU   *\n         DC    XL1'85',AL3(DCBEX)\n         LTORG\n* SVC99 SYSOUT ALLOCATION\n         DS    0D\nS99RBPTR DC    A(S99RB+X'80000000')\nS99RB    DC    X'14'                   LENGTH OF REQUEST BLOCK\n         DC    X'01'                   VERB CODE - ALLOCATE\n         DC    XL2'00'                 FLAGS\nS99ERROR DC    XL2'00'                 RETURNED ERROR\nS99INFO  DC    XL2'00'                   IF ALLOCATION FAILS\n         DC    A(S99TUPTR)             POINTER TO TEXT UNITS\n         DC    XL8'00'\n*\nS99TUPTR DC    A(S99T1)                ADDR OF DDNAME TEXT UNIT\n         DC    X'80',AL3(S99T2)        ADDR OF SYSOUT CLASS TEXT UNIT\n*\nS99T1    DC    X'0001'                 SPECIFY DDNAME\n         DC    X'0001'                 ONE PARAMETER\n         DC    X'0008'                 LENGTH\nS99T1NAM DC    CL8'PRNT0000'           ACTUAL DDNAME\n*\nS99T2    DC    X'0018'                 SPECIFY SYSOUT CLASS\n         DC    X'0001'                 ONE PARAMETER\n         DC    X'0001'                 LEN=0 IS DEFAULT\n         DC    C'Q'                    SET FOR SYSOUT=Q IF LEN=1\n         PRINT GEN\nVTD      VTD   VDRUKV,PRINT,FD=137,WJ=A,SW=(40,'SPOOLSEL(KB) - JES2/SP C\n               OFFLOADED SPOOL FILE UTILITY')\nDCBEX    DCBEX DCBPREF,L=*,B=*,R=*\n         JFCBDEF\n         DCBDEF\nNUREC    EQU   10                  NUMBER OF RECORDS TO BE SHOWN\nBLKL     EQU   4042\n* RETURN CODES\nRC#NSP   EQU   04                  SYSPRINT NOT SPECIFIED/OPEN FAILED\nRC#WRP   EQU   08                  WRONG PARAMETERS\nRC#NSI   EQU   12                  SYSIN MISSED\nCONHEX   CONHEX\nVPISZ1   VPISZ\nVCZYT    VCZYT\n         COPY   VDRUKV\n         $HASPEQU\n         $NHD\n         END    SPOOLSEL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SPOOLXHE": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x18\\x1f\\x01\\x00\\x15\\x8f\\x146\\x00\\t\\x00\\t\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-06-30T00:00:00", "modifydate": "2000-06-06T14:36:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "VHUTCH"}, "text": "//VHSPLHEX JOB (6948),'OFFLOADER HEX',\n//             REGION=4M,\n//             CLASS=X,MSGCLASS=Q\n/*JOBPARM LINES=9999\n//HEX     EXEC PGM=SPOOLSEL,PARM=HEX\n//STEPLIB  DD DISP=SHR,DSN=SFT1.CUSTMODS.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SFT1.VHUTCH.SPOOLA.JES2OFFL\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SPOOLXLS": {"ttr": 2313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x99\\x17\\x9f\\x01\\x00\\x15\\x8f\\x146\\x00\\x08\\x00\\t\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-06-28T00:00:00", "modifydate": "2000-06-06T14:36:00", "lines": 8, "newlines": 9, "modlines": 0, "user": "VHUTCH"}, "text": "//VHSPLLST JOB (6948),'OFFLOADER LIST',\n//             REGION=4M,\n//             CLASS=X,MSGCLASS=Q\n/*JOBPARM LINES=9999\n//LIST    EXEC PGM=SPOOLSEL,PARM=LIST\n//SYSUT1   DD DISP=SHR,DSN=datasetname.of.spool.offload.dataset\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SPOOLXMG": {"ttr": 2315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x18\\x1f\\x01\\x00\\x15\\x8f\\x146\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-06-30T00:00:00", "modifydate": "2000-06-06T14:36:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "VHUTCH"}, "text": "//VHSPLMRG JOB (6948),'OFFLOADER SELECT',\n//             REGION=4M,\n//             CLASS=X,MSGCLASS=Q\n/*JOBPARM LINES=9999\n//MERGE   EXEC PGM=SPOOLSEL,PARM=MERGE\n//STEPLIB  DD DISP=SHR,DSN=SFT1.CUSTMODS.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SFT1.VHUTCH.SPOOLA.JES2OFFL\n//         DD DISP=SHR,DSN=SFT1.VHUTCH.SPOOLB.JES2OFFL\n//SYSUT2   DD DISP=(NEW,CATLG,DELETE),DSN=SFT1.VHUTCH.SPOOL.JES2OFFL,\n//        UNIT=SYSDA,SPACE=(TRK,(15,15),RLSE),\n//        DCB=(DSORG=PS,RECFM=U,LRECL=4042)\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\nOUTPUTS  ALL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SPOOLXPR": {"ttr": 2317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x99\\x17\\x9f\\x01\\x00\\x15\\x8f\\x147\\x00\\n\\x00\\x0b\\x00\\x00\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-06-28T00:00:00", "modifydate": "2000-06-06T14:37:00", "lines": 10, "newlines": 11, "modlines": 0, "user": "VHUTCH"}, "text": "//VHSPLPRX JOB (6948),'PRINT OFFLOADER',\n//             REGION=2M,\n//             CLASS=X,MSGCLASS=Q\n/*JOBPARM LINES=9999\n//PRINT   EXEC  PGM=SPOOLSEL,PARM=PRINT\n//SYSUT1   DD   DISP=SHR,DSN=datasetname.of.spool.offload\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   *\nOUTPUTS  ALL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SPOOLXSL": {"ttr": 2319, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x00\\x99\\x17\\x9f\\x00\\x99\\x18\\x1f\\x11 \\x00\\x0e\\x00\\x0e\\x00\\x0e\\xe5\\xc8\\xe4\\xe3\\xc3\\xc8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-06-28T00:00:00", "modifydate": "1999-06-30T11:20:20", "lines": 14, "newlines": 14, "modlines": 14, "user": "VHUTCH"}, "text": "//VHSPLSLX JOB (6948),'OFFLOADER SELECT',\n//             REGION=4M,\n//             CLASS=X,MSGCLASS=Q\n/*JOBPARM LINES=9999\n//SELECT  EXEC PGM=SPOOLSEL,PARM=SELECT\n//STEPLIB  DD DISP=SHR,DSN=SFT1.CUSTMODS.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SFT1.VHUTCH.SPOOLA.JES2OFFL\n//SYSUT2   DD DISP=(NEW,CATLG),DSN=SFT1.VHUTCH.SPXXL.JES2OFFL,\n//        UNIT=SYSDA,SPACE=(TRK,(15,15),RLSE),\n//        DCB=(DSORG=PS,RECFM=U,LRECL=4042)\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\n*VHA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT575/FILE575.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT575", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}