{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011231000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE098.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE098.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x05\\n'", "DS1TRBAL": "b'1\\x8a'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xad\\x00\\t\\x00\\xad\\x00\\x0e\\x00\\x06'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$PROSE": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "IN THE INTEREST OF SAVING SPACE I REFORMATED THIS CONTRIBUTION\nFROM JOHN D SOSTROM OF DAYCO PRODUCTS INC, INTO TWO FILES ON THE\nCBT TAPE THIS FILE CONTAINS THE FOLLOWING:\n\n  HIS FILE    MY MEMBER NAME\n    -            $$$PROSE (YOU ARE NOW READING IT)\n   001           $$DOC\n   002           CLISTS\n   003           PANELS\n   004           SKELETON\n\n   005         FILE 099 OF THE MVS MODS TAPE\n\n//*******************************************************************\n//*    THIS FILE WAS CREATED USING THE YALE\n//*    OFFLOAD PROGRAM (FILE 225). WHEN THE  OFFLOAD PROGRAM FINDS  *\n//*    DATA RECORDS IN A PDS THAT LOOK LIKE IEBUPDTE CONTROL CARDS  *\n//*    ( IE . './' ) IT SUBSTITUES A >< FOR AN ' ./ ' .             *\n//*                                                                 *\n//*******************************************************************\n//*                OFFLOAD FORMAT ---- ( ERGO ' ./ '                *\n//*                CONTROL CARDS HAVE BEEN CONVERTED TO ' >< '      *\n//*                AND YOU WILL HAVE TO ISSUE A GLOBAL CHANGE TO    *\n//*                CONVERT >< TO ./ BEFORE YOU USE THESE MEMBER AS  *\n//*                SYSIN INPUT TO IEBUPDTE .                        *\n//*                                                                 *\n//*   *** FIRST TAKE THE WHOLE FILE AND IEBUPDTE IT TO A DATASET    *\n//*       THEN EDIT EACH OF THE FOLLOWING MEMBERS AND DO YOUR       *\n//*       GLOBAL CHANGE BEFORE YOU DO ANOTHER IEBUPDTE RUN FOR      *\n//*       EACH OF THE FOLLOWING TO ITS OWN UNIQUE PDS . ***         *\n//*******************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOC": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1\n                     XMIT/RECEIVE FOR TSO/E\n0     This TSO/E ISPF modification was done to make the TSO/E function\n      of XMIT/RECEIVE more user friendly.  A series of panels and help\n      screens allow the user to send file and or messages to other\n      TSO/E users localy or across NJE to another system.  The primary\n      advantage with this method is that if a user wishes to send only\n      a few members of a PDS somewhere, the clists invoke the LIBRARY\n      services to present a list of library membres that may be selected\n      individualy.  It is not the best of methods to use but for the\n      limitted number of users we have it works quite well.  Note that\n      we use RACF on all of our network systems so a user id that is\n      limited has been defined on those systems and is used by the\n      clists to build a batch job that is sent after the files/message\n      to notify the receiver that a file has been sent to them.  If\n      nothing else it shows the use of table and library functions for\n      ISPF in a clist.\n0     Have fun with it.  If you come up with a better way to use this\n      let me know.\n0\n0     John D. Sostrom\n      Senior Systems Consultant\n      Technical Support Group/MIS\n      Dayco Products Inc.\n      333 West First Street\n      Dayton,  Ohio   45401\n      Phone (513)226-5747\n1\n                     XMIT/RECEIVE FOR TSO/E (Cont)\n0     On this tape are five (5) files which contain the CLISTS, PANELS,\n      SKELETONS and sample Nicknames file for use with the TSO/E and\n      ISPF Rel 2.2.0 XMIT/RECEIVE function.  The files are:\n0\n      File 001  This documentation\n      File 002  CLIST Library      (SYSPROC)\n      File 003  PANELS library     (ISPPLIB)\n      File 004  SKELETONS Library  (ISPSLIB)\n      File 005  Sample nicknames file used in clists to create an\n                individual nicknames file per TSO user of function.\n0     The tape is a non-label tape with files 2,3 and 4 in IEBCOPY\n      unload format.  File 1 is LRECL=80,BLKSIZE=32720,RECFM=FBA.\n      File 5 is LRECL=251,BLKSIZE=4267,RECFM=FB.\n0     Unload files 2, 3 and 4 to dasd and then allocate them in as TSO\n      proc.  After signing on with that proc go to main menu option\n      6 (TSO COMMANDS) and enter $$$$DOC1 for additional install and\n      usage information.  After you make whatever modifications are\n      needed to the panels and skeletons for your shop and have down-\n      loaded file 5 to disk (modify with information for your location)\n      make the following change to panel ISR@PRIM to invoke the new\n      function;\n0\n0        XMT,'CMD(XMITRECV)'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CLISTS": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "./       ADD   NAME=$$$$DOC1\nPROC 0\n  ISPEXEC SELECT PGM(ISPTUTOR) PARM($$$$DOC1)\nEXIT CODE(0)\n./       ADD   NAME=XMITRECV\nPROC 0\nCONTROL MAIN NOMSG NOFLUSH\nISPEXEC CONTROL SPLIT ENABLE\nISPEXEC CONTROL ERRORS RETURN\nSET &PRFX = SYSPSPRD\nSET &NDID1 = N1\nSET &NDID2 = N2\nISPEXEC VPUT (NDID1 NDID2) SHARED\nSET &DSNAME = &SYSUID..NAMES.TEXT\nSET &Z =\nALLOC FI(TSTALC) SHR DA('&DSNAME.')\nIF &LASTCC \u00ac= 0 THEN +\n   DO\n      FREE ATTRLIST(NMESCRT)\n      CONTROL MSG\n      ATTRIB NMESCRT DSORG(PS) RECFM(V B) LRECL(255) BLKSIZE(3120)\n      ALLOC DA('&DSNAME.') SP(1,0) TRACKS USING(NMESCRT) +\n         FI(TSTALC) VOLUME(LIB002) UNIT(3380) NEW CATALOG\n      IF &LASTCC = 0 THEN +\n         DO\n            OPENFILE TSTALC OUTPUT\n            SET &TSTALC = &STR(:ALTCTL.&PRFX..NAMES.TEXT)\n            PUTFILE TSTALC\n            CLOSFILE TSTALC\n         END\n      ELSE +\n         DO\n            WRITE *** UNABLE TO ALLOCATE NICK-NAME DATA SET\n            WRITE *** NOTIFY TECHNICAL SERVICES\n            FREE FI(TSTALC) DELETE\n            EXIT RC(12)\n         END\n   END\nFREE FI(TSTALC) KEEP\nCONTROL NOMSG\n   ALLOC F(NAMES) DATASET('&PRFX..NAMES.TEXT') SHR\n   FREE ATTRLIST(PRTF)\n   ATTRIB PRTF DSORG(PS) RECFM(F B A) LRECL(81) BLKSIZE(2106)\n   ALLOC DA(XMITN.LIST) SP(5,1) TRACKS USING(PRTF) +\n      F(XMTLST) UNIT(WORK) NEW CATALOG\n   GOEOD1: ERROR GOTO EFILE1\n   OPENFILE NAMES INPUT\n   OPENFILE XMTLST OUTPUT\n   ISPEXEC TBCREATE XREF +\n      KEYS(Z00) +\n      NAMES(Z01 Z02 Z03 Z04 Z05 Z06 Z07 Z08 Z09 Z10 Z11 Z12 Z13 Z14 +\n      Z15 Z16 Z17 Z18 Z19 Z20 Z21 Z22 Z23 Z24 ZTY) +\n      NOWRITE SHARE\n   SET &PRTCCHA = 1\n   SET &PRTCCHB = 0\n   SET &PRTHED1 = &STR(      DAYCO PRODUCTS TSO/E TRANSMIT/RECEIVE)\n   SET &PRTHED2 = &STR( NICK NAMES LIST )\n   SET &PRTHED3 = &STR(    USER ENTRY - NICK NAME . .  )\n   SET &PRTHED4 = &STR(    USER NAME  . . . . . . . .  )\n   SET &PRTHED5 = &STR(    LOCATION . . . . . . . . .  )\n   SET &PRTHEDB = &STR(                                )\n   SET &PRTHED6 = &STR(    TSO ID . . . . . . . . . .  )\n   SET &PRTHED7 = &STR(    PHONE NUMBER . . . . . . .  )\n   SET &PRTHED8 = &STR(    LIST ENTRY - NICK NAME . .  )\n   SET &PRTHED9 = &STR(    REFERS TO NAME(S)  . . . .  )\n   SET &TYPTST =\n   SET &PASSON = 0\n   LOOP01: +\n      GETFILE NAMES\n      IF &PASSON = 1 THEN GOTO NPGHDR1\n      IF &PASSON = 2 THEN GOTO NPGHDR2\n      SET &XMTLST = &STR(&PRTCCHA.&PRTHED1.&PRTHED2)\n      PUTFILE XMTLST\n      SET &PASSON = 1\n      GOTO YPGHDR\n      NPGHDR1: +\n      SET &PASSON = 2\n      GOTO YPGHDR\n      NPGHDR2: +\n      SET &PASSON = 0\n      YPGHDR: +\n      SET &TYPTST = &SUBSTR(26:29,&NAMES)\n      IF &TYPTST = LIST THEN GOTO LOOP01A\n         SET &ZTY = N\n         SET &Z00 = &SUBSTR(7:14,&NAMES)\n         SET &Z01 = &SUBSTR(22:23,&NAMES)\n         SET &Z02 = &SUBSTR(33:39,&NAMES)\n         ISPEXEC TBADD XREF +\n            SAVE(Z00 Z01 Z02 &ZTY)\n         SET &XMTLST = &STR(&PRTCCHB)\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED3.&SUBSTR(7:14,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED4.&SUBSTR(47:66,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED5.&SUBSTR(89:105,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(108:128,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED6.&SUBSTR(33:39,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED7.&SUBSTR(137:160,&NAMES))\n         PUTFILE XMTLST\n      GOTO LOOP01\n      LOOP01A: +\n         SET &ZTY = L\n         SET &Z00 = &SUBSTR(7:14,&NAMES)\n         SET &Z01 = &SUBSTR(33:40,&NAMES)\n         SET &Z02 = &SUBSTR(42:49,&NAMES)\n         SET &Z03 = &SUBSTR(51:58,&NAMES)\n         SET &Z04 = &SUBSTR(60:67,&NAMES)\n         SET &Z05 = &SUBSTR(69:76,&NAMES)\n         SET &Z06 = &SUBSTR(78:85,&NAMES)\n         SET &Z07 = &SUBSTR(87:94,&NAMES)\n         SET &Z08 = &SUBSTR(96:103,&NAMES)\n         SET &Z09 = &SUBSTR(105:112,&NAMES)\n         SET &Z10 = &SUBSTR(114:121,&NAMES)\n         SET &Z11 = &SUBSTR(123:130,&NAMES)\n         SET &Z12 = &SUBSTR(132:139,&NAMES)\n         SET &Z13 = &SUBSTR(141:148,&NAMES)\n         SET &Z14 = &SUBSTR(150:157,&NAMES)\n         SET &Z15 = &SUBSTR(159:166,&NAMES)\n         SET &Z16 = &SUBSTR(168:175,&NAMES)\n         SET &Z17 = &SUBSTR(177:184,&NAMES)\n         SET &Z18 = &SUBSTR(186:193,&NAMES)\n         SET &Z19 = &SUBSTR(195:202,&NAMES)\n         SET &Z20 = &SUBSTR(204:211,&NAMES)\n         SET &Z21 = &SUBSTR(213:220,&NAMES)\n         SET &Z22 = &SUBSTR(222:229,&NAMES)\n         SET &Z23 = &SUBSTR(231:238,&NAMES)\n         SET &Z24 = &SUBSTR(240:249,&NAMES)\n         ISPEXEC TBADD XREF +\n            SAVE(Z00 Z01 Z02 Z03 Z04 Z05 Z06 Z07 Z08 Z09 Z10 Z11 Z12 +\n            Z12 Z13 Z14 Z15 Z16 Z17 Z18 Z19 Z20 Z21 Z22 Z23 Z24 ZTY)\n         SET &XMTLST = &STR(&PRTCCHB)\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED8.&SUBSTR(7:14,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHED9.&SUBSTR(33:68,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(69:104,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(105:140,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(141:176,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(177:212,&NAMES))\n         PUTFILE XMTLST\n         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(213:248,&NAMES))\n         PUTFILE XMTLST\n      GOTO LOOP01\nEFILE1: +\nERROR OFF\nCLOSFILE NAMES\nFREE FI(NAMES)\nCLOSFILE XMTLST\nFREE FI(XMTLST)\nLOOP02: +\n   ISPEXEC TBTOP XREF\n   SET &DSL1 =\n   SET &DSL2 =\n   SET &DSL3 =\n   SET &DSL4 =\n   ISPEXEC VPUT (DSL1 DSL2 DSL3 DSL4) SHARED\n   ISPEXEC DISPLAY PANEL(XMTSELCT)\n   IF &LASTCC = 8 THEN GOTO ECLST\n   ISPEXEC VGET (DSL1 DSL2 DSL3 DSL4) SHARED\n   IF &STR(&DSL1.&DSL2.&DSL3.&DSL4) \u00ac= S THEN GOTO ERSEL\n   IF &DSL1 = S THEN GOTO XMTDAS\n   IF &DSL2 = S THEN GOTO RCVDSN\n   IF &DSL3 = S THEN GOTO DSPLST\n   IF &DSL4 = S THEN GOTO PRT1LST\nERSEL: +\n   ISPEXEC DISPLAY PANEL(XMTERR00)\n   GOTO LOOP02\nXMTDAS: +\n   SET &X = N\n   SET &MEMSEL = &Z\n   SET &MSGST = &Z\n   ISPEXEC VPUT (MEMSEL X) SHARED\n   ISPEXEC DISPLAY PANEL(XMTDATAP)\n      IF &LASTCC = 8 THEN GOTO LOOP02\n   ISPEXEC VGET (XMTDSN NICKNM) PROFILE\n   ISPEXEC VGET (MEMSEL X) SHARED\n   SET &ACM = &X\n   SET &ADDRL = &NICKNM\n   SET &DDNAM =\n   SET &DSORG =\n   IF &ACM = O THEN GOTO ONLMSG\n   ISPEXEC LMINIT DATAID(DDNAM) DATASET(&XMTDSN) +\n      ENQ(SHR) ORG(DSORG)\n   IF &LASTCC \u00ac= 0 THEN +\n      DO\n         ISPEXEC DISPLAY PANEL(XMTERR01)\n         GOTO XMTDAS\n      END\n   IF &MEMSEL = ALL THEN +\n      DO\n         IF &DSORG = PO THEN GOTO NOMEML\n         ISPEXEC DISPLAY PANEL(XMTERR02)\n         ISPEXEC LMFREE DATAID(&DDNAM)\n         GOTO XMTDAS\n      END\n   IF &MEMSEL = SOME THEN +\n      DO\n         IF &DSORG = PO THEN GOTO MEMDSP\n         ISPEXEC DISPLAY PANEL(XMTERR03)\n         ISPEXEC LMFREE DATAID(&DDNAM)\n         GOTO XMTDAS\n      END\n   IF &MEMSEL = &Z THEN +\n      DO\n         IF &DSORG = PO THEN GOTO MEMDST\n         IF &DSORG = PS THEN GOTO NOMEML\n      END\n   MEMDST: +\n      ISPEXEC DISPLAY PANEL(XMTERR04)\n      IF &LASTCC \u00ac= 0 THEN +\n         DO\n            ISPEXEC LMFREE DATAID(&DDNAM)\n            GOTO XMTDAS\n         END\n      IF &ZCMD \u00ac= LIST THEN GOTO NOMEML\n   MEMDSP: +\n      ISPEXEC LMOPEN DATAID(&DDNAM) OPTION(INPUT)\n      ISPEXEC TBCREATE XMTML KEYS(QMNE) +\n         NAMES(QVRM S LST ZLCDATE ZLMDATE ZLMTIME ZLCNORC ZLINORC +\n            ZLMNORC ZLUSER) +\n            NOWRITE SHARE\n      MINLOP: +\n      SET &S = &Z\n      SET &LST = &Z\n         ISPEXEC LMMLIST DATAID(&DDNAM) OPTION(LIST) +\n            MEMBER(QMNE) STATS(YES)\n         SET &RCODE = &LASTCC\n         IF &RCODE \u00ac= 0 THEN    /* RETURN CODES                  */  +\n            DO                  /* 4  - EMPTY MEMBER LIST        */\n               IF &RCODE = 4 THEN +\n                  DO\n                     ISPEXEC DISPLAY PANEL(XMTERR05)\n                     ISPEXEC LMCLOSE DATAID(&DDNAM)\n                     ISPEXEC TBCLOSE XMTML\n                     ISPEXEC LMFREE DATAID(&DDNAM)\n                     GOTO XMTDAS\n                  END\n                ELSE +\n                  GOTO EMINLOP\n            END                 /* 8  - \"LIST\" OPTION END LIST   */\n      SET &QVRM = &STR(&ZLVERS..&ZLMOD)\n      ISPEXEC TBADD XMTML +\n         SAVE(QMNE QVRM S LST ZLCDATE ZLMDATE ZLMTIME ZLCNORC +\n            ZLINORC ZLMNORC ZLUSER)\n      GOTO MINLOP\n      EMINLOP: +\n      ISPEXEC LMMLIST DATAID(&DDNAM) OPTION(FREE)\n      ISPEXEC LMCLOSE DATAID(&DDNAM)\n      ISPEXEC LMFREE DATAID(&DDNAM)\n      ISPEXEC TBTOP XMTML\n      SET &MEMLST = &Z\n      SET &TMPLST = &Z\n      MINLOP2: +\n         SET &SCR = &Z\n         ISPEXEC VGET (SCR) PROFILE\n         IF &SCR = &Z THEN +\n            DO\n               SET &SCR = PAGE\n               ISPEXEC VPUT (SCR) PROFILE\n            END\n         ISPEXEC TBDISPL XMTML PANEL(XMTTABLE) +\n            CURSOR(ZCMD) +\n            AUTOSEL(YES)\n         SET &RCODE = &LASTCC\n         IF &RCODE > 4 THEN GOTO EMNLOP2\n         IF &ZCMD = CAN THEN +\n            DO\n               SET &MEMLST = &Z\n               SET &TMPLST = &Z\n               GOTO CANLOP2\n            END\n         IF &S \u00ac= S THEN GOTO MINLOP2\n         SET &MEMLST = &STR(&TMPLST &QMNE)\n         SET &TMPLST = &STR(&MEMLST)\n         SET &S = &Z\n         SET &LST = SELECTED\n         ISPEXEC TBMOD XMTML +\n            SAVE(QMNE QVRM S LST ZLCDATE ZLMDATE ZLMTIME ZLCNORC +\n            ZLINORC ZLMNORC ZLUSER)\n         GOTO MINLOP2\n      EMNLOP2: +\n         ISPEXEC TBCLOSE XMTML\n         IF &MEMLST \u00ac= &Z THEN GOTO YSMEML\n         ISPEXEC DISPLAY PANEL(XMTERR06)\n         GOTO XMTDAS\n      CANLOP2: +\n         ISPEXEC TBCLOSE XMTML\n         GOTO XMTDAS\n   NOMEML: +\n      IF &ACM = Y THEN +\n         DO\n            SET &MSGST = &STR(MESSAGE)\n         END\n      SET &ZCMD = &Z\n      ISPEXEC LMFREE DATAID(&DDNAM)\n      SET &TSADDR = &SUBSTR(1:2,&ADDRL)\n      IF &TSADDR = &NDID1 THEN GOTO XTDSO1\n      IF &TSADDR = &NDID2 THEN GOTO XTDSO1\n      ISPEXEC TBTOP XREF\n      SET &Z00 = &ADDRL\n      ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)\n      ISPEXEC TBSCAN XREF ARGLIST(Z00)\n      IF &LASTCC \u00ac= 0 THEN GOTO LSTERR\n      XTDSO1: +\n         ISPEXEC CONTROL DISPLAY REFRESH\n         CLRSCRN\n         XMIT (&ADDRL) DATASET(&XMTDSN) NOTIFY(ALL) &MSGST\n         GOTO EXMIT\n   ONLMSG: +\n      SET &TSADDR = &SUBSTR(1:2,&ADDRL)\n      IF &TSADDR = &NDID1 THEN GOTO XTDSO3\n      IF &TSADDR = &NDID2 THEN GOTO XTDSO3\n      ISPEXEC TBTOP XREF\n      SET &Z00 = &ADDRL\n      ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)\n      ISPEXEC TBSCAN XREF ARGLIST(Z00)\n      IF &LASTCC \u00ac= 0 THEN GOTO LSTERR\n      XTDSO3: +\n         ISPEXEC CONTROL DISPLAY REFRESH\n         CLRSCRN\n         XMIT (&ADDRL)\n         GOTO EXMIT\n   YSMEML: +\n      IF &ACM = Y THEN +\n         DO\n            SET &MSGST = &STR(MESSAGE)\n         END\n      SET &TSADDR = &SUBSTR(1:2,&ADDRL)\n      IF &TSADDR = &NDID1 THEN GOTO XTDSO2\n      IF &TSADDR = &NDID2 THEN GOTO XTDSO2\n      ISPEXEC TBTOP XREF\n      SET &Z00 = &ADDRL\n      ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)\n      ISPEXEC TBSCAN XREF ARGLIST(Z00)\n      IF &LASTCC \u00ac= 0 THEN GOTO LSTERR\n      XTDSO2: +\n         ISPEXEC CONTROL DISPLAY REFRESH\n         CONTROL MSG\n         CLRSCRN\n     XMIT (&ADDRL) DATASET(&XMTDSN) MEMBERS(&MEMLST) NOTIFY(ALL) &MSGST\n         CONTROL NOMSG\nEXMIT: +\n   SET &DADDR = &Z\n   SET &DNAME1 = &Z\n   SET &DNAME2 = &Z\n   SET &SNAME = &SYSUID\n   SET &JCLAS = A\n   SET &MCLAS = Z\n   SET &RCFID = XMTUSER\n   SET &RCFPW = XMT1234\n   IF &TSADDR = &NDID1 THEN GOTO EX1MIT\n   IF &TSADDR = &NDID2 THEN GOTO EX1MIT\n   ISPEXEC TBCREATE DSTBL1 NAMES(DNAME1) NOWRITE SHARE\n   ISPEXEC TBCREATE DSTBL2 NAMES(DNAME2) NOWRITE SHARE\n   SET &TSUSER = &ADDRL\n   SET &TBL1 = 0\n   SET &TBL2 = 0\n   ISPEXEC VPUT (TBL1 TBL2) SHARED\n   ISPEXEC TBTOP XREF\n   SET &Z00 = &ADDRL\n   ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)\n   ISPEXEC TBSCAN XREF ARGLIST(Z00)\n   IF &ZTY = L THEN GOTO LVEL01\n   SET &TSADDR = &Z01\n   SET &TSUSER = &Z02\n   ISPEXEC TBCLOSE DSTBL1\n   ISPEXEC TBCLOSE DSTBL2\n   GOTO EX1MITA\n   LVEL01: +\n      SET &T1Z01 = &Z01\n      SET &T1Z02 = &Z02\n      SET &T1Z03 = &Z03\n      SET &T1Z04 = &Z04\n      SET &T1Z05 = &Z05\n      SET &T1Z06 = &Z06\n      SET &T1Z07 = &Z07\n      SET &T1Z08 = &Z08\n      SET &T1Z09 = &Z09\n      SET &T1Z10 = &Z10\n      SET &T1Z11 = &Z11\n      SET &T1Z12 = &Z12\n      SET &T1Z13 = &Z13\n      SET &T1Z14 = &Z14\n      SET &T1Z15 = &Z15\n      SET &T1Z16 = &Z16\n      SET &T1Z17 = &Z17\n      SET &T1Z18 = &Z18\n      SET &T1Z19 = &Z19\n      SET &T1Z20 = &Z20\n      SET &T1Z21 = &Z21\n      SET &T1Z22 = &Z22\n      SET &T1Z23 = &Z23\n      SET &T1Z24 = &Z24\n      LN1T01: +\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         SET &LVL1NME = &T1Z01\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T02: +\n         IF &T1Z02 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z02\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T03: +\n         IF &T1Z03 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z03\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T04: +\n         IF &T1Z04 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z04\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T05: +\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         IF &T1Z05 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z05\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T06: +\n         IF &T1Z06 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z06\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T07: +\n         IF &T1Z07 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z07\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T08: +\n         IF &T1Z08 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z08\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T09: +\n         IF &T1Z09 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z09\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T10: +\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         IF &T1Z10 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z10\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T11: +\n         IF &T1Z11 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z11\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T12: +\n         IF &T1Z12 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z12\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T13: +\n         IF &T1Z13 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z13\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T14: +\n         IF &T1Z14 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z14\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T15: +\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         IF &T1Z15 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z15\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T16: +\n         IF &T1Z16 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z16\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T17: +\n         IF &T1Z17 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z17\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T18: +\n         IF &T1Z18 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z18\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T19: +\n         IF &T1Z19 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z19\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T20: +\n         IF &T1Z20 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z20\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T21: +\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         IF &T1Z21 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z21\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T22: +\n         IF &T1Z22 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z22\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T23: +\n         IF &T1Z23 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z23\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      LN1T24: +\n         IF &T1Z24 = &Z THEN GOTO ELN1\n         SET &LVL1NME = &T1Z24\n         ISPEXEC VPUT (LVL1NME) SHARED\n         %XMTRCVL1\n         IF &LASTCC \u00ac= 0 THEN GOTO XMTDAS\n      ELN1: +\n         ISPEXEC VGET (TBL1 TBL2) SHARED\n         ALLOC FI(ISPFILE) DA(XMIT.JOBSUB) NEW CATALOG RECFM(F B) +\n            LRECL(80) BLKSIZE(3120) DSORG(PO) TRACKS UNIT(WORK) +\n            SP(15,0) DIR(2)\n         IF &TBL1 = 0 THEN GOTO ELN2\n         ISPEXEC FTOPEN\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         ISPEXEC FTINCL XMTJCL1\n         ISPEXEC FTCLOSE NAME(XMTJCL1)\n         SUB (XMIT.JOBSUB(XMTJCL1)) NOHOLD NOJOBCHAR NOUSER NONOTIFY\n      ELN2: +\n         IF &TBL2 = 0 THEN GOTO ELN3\n         ISPEXEC FTOPEN\n         WRITE ** STILL WORKING.  HANG IN THERE.\n         ISPEXEC FTINCL XMTJCL2\n         ISPEXEC FTCLOSE NAME(XMTJCL2)\n         SUB (XMIT.JOBSUB(XMTJCL2)) NOHOLD NOJOBCHAR NOUSER NONOTIFY\n      ELN3: +\n         FREE FI(ISPFILE) DELETE\n         GOTO XMTDAS\n   EX1MIT: +\n      SET &TSUSER = &STR(&ADDRL.       )\n      SET &TSUSER = &SUBSTR(3:9,&TSUSER)\n   EX1MITA: +\n      SET &TMPZ = &STR(/*XEQ)\n      ALLOC FI(NDJCL) DA(SUBJCL.ASM) RECFM(F B) DSORG(PS) LRECL(80) +\n         BLKSIZE(3120) NEW TRACKS UNIT(WORK) NEW CATALOG +\n         SP(15,0)\n      OPENFILE NDJCL OUTPUT\n      SET &NDJCL = &STR(//&SYSUID.A JOB (99999,T),'&SYSUID',)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//        CLASS=&JCLAS,MSGCLASS=&MCLAS,)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//        NOTIFY=&SYSUID,)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//        USER=&RCFID,PASSWORD=&RCFPW)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(&TMPZ &TSADDR )\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SNDMSG  EXEC PGM=IKJEFT01)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSLBC   DD DISP=SHR,DSN=SYS1.BRODCAST)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSUADS  DD DISP=SHR,DSN=SYS1.UADS)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSHELP  DD DISP=SHR,DSN=SYS1.HELP)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSPRINT DD SYSOUT=*)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSTSPRT DD SYSOUT=*)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSTERM  DD SYSOUT=*)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSUDUMP DD SYSOUT=*)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(//SYSTSIN  DD *)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(SE 'A FILE FROM &SNAME HAS BEEN SENT TO YOU' +\n USER(&TSUSER) LOGON)\n      PUTFILE NDJCL\n      SET &NDJCL = &STR(/*)\n      PUTFILE NDJCL\n      CLOSFILE NDJCL\n      SUB (SUBJCL.ASM) NOHOLD NOJOBCHAR NOUSER NONOTIFY\n      FREE FI(NDJCL) DELETE\n      GOTO XMTDAS\nLSTERR: +\n   ISPEXEC DISPLAY PANEL(XMTERR07)\n   GOTO XMTDAS\nRCVDSN: +\n   ISPEXEC CONTROL DISPLAY REFRESH\n   CONTROL MSG PROMPT\n   CLRSCRN\n   RECEIVE\n   CONTROL NOMSG\n   GOTO LOOP02\nPRT1LST: +\n   ISPEXEC VGET (Q C DST FORM) PROFILE\n   IF &Q = &Z THEN +\n      DO\n         SET &Q = A\n      END\n   IF &C = &Z THEN +\n      DO\n         SET &C = 1\n      END\n   IF &DST = &Z THEN +\n      DO\n         SET &DST = LOCAL\n      END\n   IF &FORM = &Z THEN +\n      DO\n         SET &FORM = STD\n      END\n   ISPEXEC VPUT (S C DST FORM) PROFILE\n   ISPEXEC DISPLAY PANEL(XMTPRINT)\n   IF &LASTCC = 8 THEN GOTO LOOP02\n   ISPEXEC VGET (S C DST FORM) PROFILE\n   DSPRINT XMITN.LIST &DST CLASS(&Q.) FORMS(&FORM.) COPIES(&C) NOHDR +\n      NOEJMESS\n   GOTO LOOP02\nDSPLST: +\n   ISPEXEC BROWSE DATASET(XMITN.LIST)\n   GOTO LOOP02\nECLST: +\n   ISPEXEC TBCLOSE XREF\n   DELETE (XMITN.LIST)\nEXIT\n./       ADD   NAME=XMTRCVL1\nPROC 0\nCONTROL NOFLUSH\nISPEXEC CONTROL ERRORS RETURN\nSET &Z =\nISPEXEC VGET (LVL1NME NDID1 NDID2) SHARED\nISPEXEC TBTOP XREF\nSET &Z00 = &LVL1NME\nISPEXEC TBSARG XREF NAMECOND(Z00 EQ)\nISPEXEC TBSCAN XREF ARGLIST(Z00)\nIF &ZTY = L THEN GOTO LVL2CLL\nIF &Z01 \u00ac= &NDID1 THEN GOTO NDO02\n   SET &TBL1 = 1\n   ISPEXEC VPUT (TBL1) SHARED\n   SET &DNAME1 = &Z02\n   ISPEXEC TBADD DSTBL1 SAVE(DNAME1)\n   GOTO GBACK\nNDO02: +\n   SET &TBL2 = 1\n   ISPEXEC VPUT (TBL2) SHARED\n   SET &DNAME2 = &Z02\n   ISPEXEC TBADD DSTBL2 SAVE(DNAME2)\n   GOTO GBACK\nLVL2CLL: +\n   SET &LVL2Z01 = &Z01\n   SET &LVL2Z02 = &Z02\n   SET &LVL2Z03 = &Z03\n   SET &LVL2Z04 = &Z04\n   SET &LVL2Z05 = &Z05\n   SET &LVL2Z06 = &Z06\n   SET &LVL2Z07 = &Z07\n   SET &LVL2Z08 = &Z08\n   SET &LVL2Z09 = &Z09\n   SET &LVL2Z10 = &Z10\n   SET &LVL2Z11 = &Z11\n   SET &LVL2Z12 = &Z12\n   SET &LVL2Z13 = &Z13\n   SET &LVL2Z14 = &Z14\n   SET &LVL2Z15 = &Z15\n   SET &LVL2Z16 = &Z16\n   SET &LVL2Z17 = &Z17\n   SET &LVL2Z18 = &Z18\n   SET &LVL2Z19 = &Z19\n   SET &LVL2Z20 = &Z20\n   SET &LVL2Z20 = &Z20\n   SET &LVL2Z21 = &Z21\n   SET &LVL2Z22 = &Z22\n   SET &LVL2Z23 = &Z23\n   SET &LVL2Z24 = &Z24\n   LN1N01: +\n      SET &LVL2NME = &LVL2Z01\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N02: +\n      IF &LVL2Z02 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z02\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N03: +\n      IF &LVL2Z03 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z03\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N04: +\n      IF &LVL2Z04 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z04\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N05: +\n      IF &LVL2Z05 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z05\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N06: +\n      IF &LVL2Z06 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z06\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N07: +\n      IF &LVL2Z07 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z07\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N08: +\n      IF &LVL2Z08 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z08\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N09: +\n      IF &LVL2Z09 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z09\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N10: +\n      IF &LVL2Z10 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z10\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N11: +\n      IF &LVL2Z11 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z11\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N12: +\n      IF &LVL2Z12 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z12\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N13: +\n      IF &LVL2Z13 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z13\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N14: +\n      IF &LVL2Z14 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z14\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N15: +\n      IF &LVL2Z15 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z15\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N16: +\n      IF &LVL2Z16 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z16\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N17: +\n      IF &LVL2Z17 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z17\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N18: +\n      IF &LVL2Z18 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z18\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N19: +\n      IF &LVL2Z19 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z19\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N20: +\n      IF &LVL2Z20 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z20\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N21: +\n      IF &LVL2Z21 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z21\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N22: +\n      IF &LVL2Z22 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z22\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N23: +\n      IF &LVL2Z23 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z23\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\n   LN1N24: +\n      IF &LVL2Z24 = &Z THEN GOTO GBACK\n      SET &LVL2NME = &LVL2Z24\n      ISPEXEC VPUT (LVL2NME) SHARED\n      %XMTRCVL2\n      IF &LASTCC \u00ac= 0 THEN GOTO EGBACK\nGBACK: +\nEXIT CODE(0)\nEGBACK: +\nEXIT CODE(4)\n./       ADD   NAME=XMTRCVL2\nPROC 0\nCONTROL NOFLUSH\nISPEXEC CONTROL ERRORS RETURN\nSET &Z =\nISPEXEC VGET (LVL2NME NDID1 NDID2) SHARED\nISPEXEC TBTOP XREF\nSET &Z00 = &LVL2NME\nISPEXEC TBSARG XREF NAMECOND(Z00 EQ)\nISPEXEC TBSCAN XREF ARGLIST(Z00)\nIF &ZTY = L THEN GOTO LVL2ERR\nIF &Z01 \u00ac= &NDID1 THEN GOTO NDO02\n   SET &TBL1 = 1\n   ISPEXEC VPUT (TBL1) SHARED\n   SET &DNAME1 = &Z02\n   ISPEXEC TBADD DSTBL1 SAVE(DNAME1)\n   GOTO GBACK\nNDO02: +\n   SET &TBL2 = 1\n   ISPEXEC VPUT (TBL2) SHARED\n   SET &DNAME2 = &Z02\n   ISPEXEC TBADD DSTBL2 SAVE(DNAME2)\n   GOTO GBACK\nLVL2ERR: +\n   ISPEXEC DISPLAY PANEL(XMTERRL2)\n   GOTO EGBACK\nGBACK: +\nEXIT CODE(0)\nEGBACK: +\nEXIT CODE(4)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PANELS": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "./       ADD   NAME=$$$$DOC1\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6       INSTALL DOC   %        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   To install this set of ISPF menus and TSO/E clists require only a few\n   steps.  These involve installing the ISPF libraries, creating a fixed\n   blocked common\u00a6SYSPSPRD.NAMES.TEXT+data set, setting up a RACF id of\u00a6\n   XMTUSER+with a password of\u00a6XMT1234+and modifying the primary ISPF main\n   selection menu.\n\n   This online document is ment to assist with the install and is followed\n   at the end by entering the turtorial for the transmit/receive function\n   panels.\n\n\n\n\n\n!\n \\ \\ Continued on next screen \\ \\\n\n)PROC\n     &ZUP = ISR00003\n     &ZCONT = $$$$DOC2\n)END\n./       ADD   NAME=$$$$DOC2\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6       INSTALL DOC   %        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   The following libraries need to be installed on the TSO/E procs for\n   access to the new ISPF function.\n\n\n   On ddname\u00a6SYSPROC+add librar\u00a6highlvl.XMITRECV.CLIST +\n\n   On ddname\u00a6ISPPLIB+add librar\u00a6highlvl.XMITRECV.PANELS +\n\n   On ddname\u00a6ISPSLIB+add librar\u00a6highlvl.XMITRECV.SKELS +\n\n\n   There should not be any permanently allocated library for ddname\u00a6ISPFILE+\n\n\n!\n \\ \\ Continued on next screen \\ \\\n\n)PROC\n     &ZUP = $$$$DOC1\n     &ZCONT = $$$$DOC3\n)END\n./       ADD   NAME=$$$$DOC3\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6       INSTALL DOC   %        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   Rename the data set received as\u00a6yourid.NAMES.TEXT+as\u00a6SYSPOPRD.NAMES.TEXT+\n   (this is the NICKNAMES file).  If you choose a high level data set name\n   qualifier other than\u00a6SYSPSPRD+then change all references to\u00a6SYSPSPRD+in\n   the clists on the\u00a6highlvl.XMITRECV.CLIST+to the new high level qualifier.\n\n\n   In the clists change the\u00a6UNIT(WORK)+,\u00a6UNIT(3380)+and\u00a6VOLUME(LIB003)+to\n   values compatible with yout centers unit and volume nameing conventions.\n\n\n\n\n\n\n!\n \\ \\ Continued on next screen \\ \\\n\n)PROC\n     &ZUP = $$$$DOC2\n     &ZCONT = $$$$DOC4\n)END\n./       ADD   NAME=$$$$DOC4\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n @ TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6       INSTALL DOC   %        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   In RACF define a user id of\u00a6XMTUSER+with a password of\u00a6XMT0000+so that\n   the password never changes.  Then create a TSO/E userid\u00a6XMTUSER+and\n   the password you gave in the RACF define user process to\u00a6XMT1234+.\n\n   This user id is the same for both your center and ours so the TSO batch\n   jobs submitted to notify the receiver that a dataset has been sent to\n   them.  The RACF definition should only allow read access to the ID.\n\n\n\n\n\n\n\n!\n \\ \\ Continued on next screen \\ \\\n\n)PROC\n     &ZUP = $$$$DOC2\n     &ZCONT = $$$$DOC5\n)END\n./       ADD   NAME=$$$$DOC5\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6       INSTALL DOC   %        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   At this point you must add an entry into the ISPF main selection menu\n   that will invoke the new function clists and panels (see member\u00a6ISR@PRIM+\n   at entry\u00a6XMT+for an example).\n\n   You are now ready to give it a shot.  All panels point to help panels\n   which may be entered by entering the!HELP+command on any screen.  It is\n   recommended that you do a!TSO HELP+for both\u00a6XMIT+and\u00a6RECEIVE+to get a\n   better feel for these functions as they can be used.%\n\n   NOTE:+When you make changes in the\u00a6SYSPSPRD.NAMES.TEXT+file let us know\n   so we can make appropriate changes at this end.  Note also that when\n   defining nickname lists that the clists only accomidate one level of list\n   depth (i.e. list points to list points to user nick name).\n\n!\n \\ \\ Continued on next screen \\ \\\n\n)PROC\n     &ZUP = $$$$DOC4\n     &ZCONT = $$$$DOC6\n)END\n./       ADD   NAME=$$$$DOC6\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6       INSTALL DOC   %        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   This is the end of the install documentation.  If there is some question\n   or assistance you need please let me know.\n\n\n\n\n   If you depress ENTER or enter 999 the next screen to be displayed will\n   be the first of the tutorial panels for the ISPF functions just discussed.\n\n   The following Change History panels are only displayed if selected.\n\n     !  1\u00a2Change date 07/02/87\n\n\n\n\n\n)PROC\n     &ZSEL = TRANS( &ZCMD\n                1,*$$$$DOC7\n              999,XMTHP001\n                *,'?'\n                )\n     &ZUP = $$$$DOC5\n)END\n./       ADD   NAME=$$$$DOC7\n)ATTR DEFAULT(%+_)\n % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n \u00a2 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n ! TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n \u00a6 TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\-   TRANSMIT / RECIEVE   -\\-\\-\n%COMMAND ===>_ZCMD\n%\n \\ \\ ----------------------------------- \\ \\\n \\ \\ |  \u00a6 CHANGE DATE 07/02/87%        | \\ \\\n \\ \\ ----------------------------------- \\ \\\n+\n   Member XMTDATAP in library SYSPOPRD.XMITRECV.PANELS changed to allow the\n   option O in variable field X.  Help panels XMTHP002 and XMTHPD02 changed\n   to reflect addition of send a message only function (electronic mail).\n   Install panel $$$$DOC6 modified to allow selection of change history\n   panel selection and this panel ($$$$DOC7) added.\n\n   Clist member XMITRECV on library SYSPOPRD.XMITRECV.CLIST was modified to\n   accomidate the addition of the option O for terminal message only send.\n\n\n\n\n\n\n\n\n\n)PROC\n     &ZUP = $$$$DOC6\n)END\n./       ADD   NAME=ISR@PRIM\n%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                           %- ISPF 2.2.0    -\n%                                                           +USERID   - &ZUSER\n%   0 +ISPF PARMS  - Specify terminal and user parameters   +TIME     - &ZTIME\n%   1 +BROWSE      - Display source data or output listings +TERMINAL - &ZTERM\n%   2 +EDIT        - Create or change source data           +PF KEYS  - &ZKEYS\n%   3 +UTILITIES   - Perform utility functions              +DATE     - &ZDATE\n%   4 +FOREGROUND  - Invoke foreground language processors  +JULIAN   - &ZJDATE\n%   5 +BATCH       - Submit job for language processing\n%   6 +COMMAND     - Enter TSO command or CLIST\n%   7 +DIALOG TEST - Perform dialog testing\n%   8 +DFHSM       - DFHSM space maintenance\n%   C +CHANGES     - Display summary of changes for this release\n%   L +LM UTILITIES- Perform library management utility functions\n%   P +PANVALET    - Browse, edit, and utilities\n%   R +RACF        - Perform RACF services\n%   S +SMP/E       - System Modification Program Extended\n%   T +TUTORIAL    - Display information about ISPF/PDF\n% XMT +XMIT/RECEIVE- TSO/E File Transmit/Receive function\n%   X +EXIT        - Terminate ISPF using log and list defaults\n%\n+Enter%END+command to terminate ISPF.\n%\n)INIT\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n                6,'PGM(ISRPTC)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PGM(DFQFMD01) NEWAPPL(HSM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                L,'PANEL(ISRLPRIM)'\n                P,'PGM(IPNINIT) NOCHECK'\n                R,'PANEL(ICHP00)'\n                S,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n              XMT,'CMD(XMITRECV) NEWAPPL(XMTR)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n./       ADD   NAME=XMTDATAP\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  + TYPE(TEXT) INTENS(LOW) COLOR(GREEN)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  ! TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-  Transmit Data Set Options  -\\-\\-\n!COMMAND ===>_ZCMD                                                             +\n%\n+   Enter required data.\n+\n+   Destination!===>_NICKNM    $    (nodeid.tsoid or nickname)\n+\n+   Data Set Name!===>_XMTDSN                                      $\n+\n+   For a PDS:\n+     Member selections!===>_MEMSEL$\n+     $Enter%ALL$to transmitt all PDS members or%SOME$to select the members\n+     $from a list.  Leave%blank$if the data set is not a PDS.\n+\n+\n+   Do you want to append a terminal message!===>_X$ (Y, N or O)\n+     $If you enter%O$(send message only) the Data Set Name and Member\n+     $selections entries are ignored.  A full screen transmit message data\n+     $entry screen will be displayed on which to enter the message.\n                                                                               +\n+\n+   Enter%END+to exit without executing a transmit of a data set.\n+\n)INIT\n  .HELP = XMTHP002           /* Insert name of tutorial panel    */\n)PROC\n    VER (&NICKNM,NONBLANK)\n    VER (&XMTDSN,NONBLANK,DSNAME)\n    VER (&MEMSEL,LIST,ALL,SOME,' ')\n    VER (&X,NONBLANK,LIST,Y,N,O)\n    VPUT (X MEMSEL) SHARED\n    VPUT (XMTDSN NICKNM) PROFILE\n)END\n./       ADD   NAME=XMTERRL2\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(RED)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERRL2\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n@\n     A logic error in the processing of the nickname list has occurred.\n\n\u00a6\n \\ \\ Notify Technical Services. \\ \\\n\n\n\u00a6\n\n\n\n+\n\n\n\n\n)PROC\n)END\n./       ADD   NAME=XMTERR00\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive Select ERROR  -\\-\\- ERR00\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n\n\n \\ \\  One and#ONLY ONE\u00a6function may be selected for processing. \\ \\\n\n\n\n\n\n\n\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHPB01\n)END\n./       ADD   NAME=XMTERR01\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR01\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n\n+      Data set \u00acXMTDSN\n+         could not be found.\n\n\n\n\n\u00a6                 Verify the data set name and retry the\n                  function.  If the data set is cataloged\n                  and it cannot be aquired notify Technical\n                  Services.\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHP002\n)END\n./       ADD   NAME=XMTERR02\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR02\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n\n+      Data set \u00acXMTDSN\n+         is a#PS+(Physical Sequencial) data set.  A member transmission\n          request of#ALL+is not logical.\n\n\n\n\u00a6                 Verify the data set name and retry the\n                  function.  If the data set is partitioned\n                  and it cannot be processed notify Technical\n                  Services.\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHP002\n)END\n./       ADD   NAME=XMTERR03\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR03\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n\n+      Data set \u00acXMTDSN\n+         is a#PS+(Physical Sequencial) data set.  A member transmission\n          request of#SOME+is not logical.\n\n\n\n\u00a6                 Verify the data set name and retry the\n                  function.  If the data set is partitioned\n                  and it cannot be processed notify Technical\n                  Services.\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHP002\n)END\n./       ADD   NAME=XMTERR04\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR04\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n\n\n\u00a6\n\n+      Data set \u00acXMTDSN\n+         is a#PO+(Partitioned) data set.  No member selection type\n         #(ALL or SOME)+was specified.  To continue and transmit all\n          members depress#ENTER+.  To display a selection list enter\n         #LIST+on the command line.\n\n\u00a6\n\n\n\n+\n\n\n  +Enter$END+to return to Selection Menu without processing.\n\n)PROC\n     .HELP = XMTHP002\n)END\n./       ADD   NAME=XMTERR05\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR05\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n\n+      Data set \u00acXMTDSN\n+         has no members to list.\n\n\n\n\n\u00a6                 Verify the data set name and retry the\n                  function.  If the data set has members\n                  and it cannot be processed notify Technical\n                  Services.\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHP002\n)END\n./       ADD   NAME=XMTERR06\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR06\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n+\n \\ \\ A member selction list was requested and no members were selected.  \\ \\\n+\n\n\n\n\n\u00a6\n\n\n\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHP003\n)END\n./       ADD   NAME=XMTERR07\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(WHITE)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit Function ERROR  -\\-\\- ERR07\n%SELECTION ===>_ZCMD                                                           +\n%\n%\n\n\n\u00a6\n+\n     The requested transmission destination \u00acADDRL      +is not in the\n     Nicknames file.\n\n\n\n\n\u00a6             Verify the transmission destination name\n              and retry.  To request a new name entry\n              contact Technical Services.\n\n+\n\n\n  +Enter$END+to return to Selection Menu or#ENTER+for more help.\n\n)PROC\n     &ZCONT = XMTHP002\n)END\n./       ADD   NAME=XMTHPA01\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |      \u00a6TRANSMIT/RECEIVE%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n\u00a6\n\n+      The following topics are presented in sequence or may be selected.\n\n\n\n\n    #1\u00a6 Transmit/Receive Function Selection Menu\n    #2\u00a6 Transmit Function\n    #3\u00a6 Receive Function\n    #4\u00a6 Display/Print Nicknames File Entries\n\n\n\n\n\n)PROC\n     &ZSEL = TRANS( &ZCMD\n                1,XMTHPB01\n                2,XMTHP002\n                3,XMTHP003\n                4,XMTHP004\n                *,'?'\n                )\n     &ZUP = ISR00003\n)END\n./       ADD   NAME=XMTHPA02\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |        \u00a6DESTINATION%           | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      The Transmit Function Destination may be entered in one of several ways.\n       First as a specific TSO/E userid on a specific node#(ni.tsoeid)+where\n       #ni.+is the system node number (N1. for Dayton and N2. for Springfield)\n       on which the#tsoeid+of a specific user is located.\n\n       The second method is to enter the destination users nickname as found\n       on the#NICKNAMES+file.  The currently entered nicknames may be listed\n       on the terminal by selecting\u00a6Display the$Nickname\u00a6table entries+from the\n       function selection menu of printed by selecting the \u00a6Print the$Nickname\u00a6\n       table entries+option.\n\n       Third a list entry on the nickname file may be used to address more than\n       one destination user at a time.\n\n  +Enter$END+to exit this help screen.\n\n)PROC\n     &ZUP = XMTHP002\n)END\n./       ADD   NAME=XMTHPA03\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |      \u00a6Receive Function%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      If no data set transmissions are availible to receive the following\n       message is displayed:\n\n #INMR003I NO INTERACTIVE DATA TRANSMISSION FACILITY FILES ARE AVAILIBLE FOR\n   YOU TO RECEIVE.\n\n+\n\n\n\n\n\n\n\n  +Enter$END+to exit this help screen.\n\n)PROC\n     &ZUP = XMTHPA01\n)END\n./       ADD   NAME=XMTHPB01\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |     \u00a6Function Selection%       | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n\u00a6\n\n+      Select the function to perform by entering an#S+before the desired\n       function.  Only one function may be selected at a time.  If no\n       functions are requested or more than one is selected then an error\n       panel is displayed.\n\n\n\n\n\n\n\n\n  +Enter$END+to exit this help screen.\n\n)PROC\n     &ZUP = XMTHPA01\n)END\n./       ADD   NAME=XMTHPB02\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |       \u00a6Data Set Name%          | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      The Data Set Name must be entered as a standard MVS data set name.  If\n       the data set name is not enclosed in quotation marks the resulting name\n\n        %Data Set Name\u00a6===>\u00acTDID   $.dataset.name\n\n\n      $ONLY+dasd data set names may be specified.  Tapes cannot be transmitted\n       by the TSO/E Transmit/Receive functions.\n\n\n\n\n\n\n  +Enter$END+to exit this help screen.\n\n)INIT\n     &TDID = &ZPREFIX\n)PROC\n     &ZUP = XMTHP002\n)END\n./       ADD   NAME=XMTHPC02\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |     \u00a6Member Selections%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      The Member Selections option allows for the request for a selction list\n       of members from a PDS.  When$ALL+is specified all members of a PDS are\n       transmitted.  When$SOME+is specified a selection list of members from\n       the PDS is displayed from which specific members may be selected.  If\n       left blank and the data set is a library (PDS) an intermediary menu is\n       displayed to inform that the data set is a PDS and allow a second chance\n       at requesting a member selection list.\n\n       If the data set is a Physical Sequential data set leave the Member\n       Selections option blank.  If ALL or SOME is specified with a PS data set\n       an error message is displayed.\n\n\n\n  +Enter$END+to exit this help screen.\n\n)INIT\n     &TDID = &ZPREFIX\n)PROC\n     &ZUP = XMTHP002\n)END\n./       ADD   NAME=XMTHPD02\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |      \u00a6Terminal Message%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      A terminal gennerated message may be appended to a transmission of a\n       data set by entering a$Y+in response to the option\n\n       %Do you want to append a terminal message\u00a6===>+\n\n       If you respond with a$Y+then at the actual invocation of the transmitt\n       function a full screen entry panel is displyed to allow direct keying\n       of a message that will be displayed at the receivers terminal when they\n       issue a RECEIVE request.\n\n       If you enter an$O+in this option the Data Set Name and Member selections\n       options are ignored and only the message you enter on the transmit full\n       screen entry panel is sent.\n\n  +Enter$END+to exit this help screen.\n\n)INIT\n     &TDID = &ZPREFIX\n)PROC\n     &ZUP = XMTHP002\n)END\n./       ADD   NAME=XMTHP001\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |      \u00a6TRANSMIT/RECEIVE%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n\u00a6\n\n+      The TANSMIT/RECEIVE functions allow the sending of a library or\n       Sequntial data set from one TSO/E user to another either on the\n       same system or another system in the network.  Four functions are\n       availible from the main menue.  These are#Transmit+a data set,\n      #Receive+a data set sent to you,#List+the destination Nickname file,\n       or#Print+the destination Nickname file to a local or network printer.\n\n\n\n\n+\n\n\n\\ \\ \u00a6Continued on next screen \\ \\\n\n)PROC\n     &ZCONT = XMTHPA01\n)END\n./       ADD   NAME=XMTHP002\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |     \u00a6Transmit Data Set%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n\u00a6\n\n+      The Transmit Data Set Options panel allows the entry of the destination\n       (TSO/E user) to which a data set, members of a PDS or an entire library\n       along with the data set name and optionaly a one time full screen\n       message is to be sent.  Required entries are the destination and the\n       data set name.  A terminal message only may be sent by entering\u00a6O+in the\n       Terminal Message option.\n\n    The following will be presented in sequence of may be selected.\n\n     #1\u00a6 Destination                    #3\u00a6 Members Selections\n     #2\u00a6 Data Set Name                  #4\u00a6 Terminal Message\n\n\n  +Enter$END+to exit this help screen.\n\n)PROC\n     &ZSEL = TRANS( &ZCMD\n                1,XMTHPA02\n                2,XMTHPB02\n                3,XMTHPC02\n                4,XMTHPD02\n                *,'?'\n                )\n     &ZUP = XMTHPA01\n)END\n./       ADD   NAME=XMTHP003\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |      \u00a6Receive Function%        | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      The Receive Function request clears the screen and invokes the TSO/E\n       receive command.  If the sendor of a data set appended a message to a\n       data set the message will be displayed at the CRT.  Once the message has\n       been displayed it is gone.  After displaying any messages the data set\n       is then loaded down to the system and replaces the high level data set\n       name qualifier so that the resulting data set name for transmited data\n       set\u00a6DAYTSSTS.SOMETYP.DATA+would become \u00acTDID   $.SOMETYP.DATA+when done.\n\n\n\n\n#\n \\ \\  Continued on next screen  \\ \\\n\n  +Enter$END+to exit this help screen.\n\n)INIT\n     &TDID = &ZPREFIX\n)PROC\n     &ZCONT = XMTHPA03\n     &ZUP = XMTHPA01\n)END\n./       ADD   NAME=XMTHP004\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ --------------------------------------- \\ \\\n \\ \\ |\u00a6Display/Print Nickname File Entries%| \\ \\\n \\ \\ --------------------------------------- \\ \\\n\n+      The TSO/E Nicknames file is a file that contain entries that allow the\n       use of fixed nicknames to address a specific user somewhere in the Dayco\n       network or address a number of users by using one name to identify a\n       list of user nicknames.  The Nicknames File may be displayed at the CRT\n       by selecting the\u00a6Display the$Nickname\u00a6table entries+option on the\n       function selection menu.  The same list may be printed by selcting the\u00a6\n       Print the$Nickname\u00a6table entries+from the selection menu.  If the print\n       function is selected an entry panel is displayed to allow specifying the\n       sysout class, destination, forms and number of copies to be printed.\n       The output from the print option will be printed under your TSO/E id\n      \u00acTDID   +.\n\n\n\n  +Enter$END+to exit this help screen.\n\n)INIT\n     &TDID = &ZPREFIX\n)PROC\n     &ZUP = XMTHPA01\n)END\n./       ADD   NAME=XMTHP005\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n  + TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  # TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)\n  \u00a6 TYPE(TEXT) INTENS(LOW) COLOR(TURQ)\n  @ TYPE(TEXT) INTENS(LOW) COLOR(PINK)\n  \u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY EXPAND(\\\\)\n%-\\-\\- Transmit/Receive -\\-\\-\n%SELECTION ===>_ZCMD                                                           +\n%\n \\ \\ ---------------------------------- \\ \\\n \\ \\ |    \u00a6Transmit member select%    | \\ \\\n \\ \\ ---------------------------------- \\ \\\n\n+      To select members to be transmitted to another TSO/E user, enter an#S+\n       next to the member to be sent and hit enter.  You may do several members\n       from the same library one at a time.  After all members to be sent have\n       been select enter end on the command line (in most cases PF3) and the\n       processing will continue.  To cancel processing enter#CAN+on the command\n       line.\n\n\n\n\n\n#\n\n\n  +Enter$END+to exit this help screen.\n\n)PROC\n     &ZUP = XMTHPA01\n)END\n./       ADD   NAME=XMTPRINT\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  + TYPE(TEXT) INTENS(LOW) COLOR(GREEN)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  ! TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-  Transmit Nickname List Print  -\\-\\-\n!COMMAND ===>_ZCMD                                                             +\n%\n+   Enter required data.\n+\n+\n+\n+     Destination!     ===>_DST     $\n+     SYSOUT Class!    ===>_Q$\n+     SYSOUT Forms!    ===>_FORM$          (Default is%STD$)\n+     Number of copies!===>_C$             (1 to 9)\n+\n+\n+\n+\n+\n+\n+\n+\n                                                                               +\n+\n+   Enter%END+to exit without printing the%NICKNAME+list.\n+\n)INIT\n  .HELP = XMTHP004           /* Insert name of tutorial panel    */\n  .CURSOR = DST\n)PROC\n    VER (&DST,NONBLANK)\n    VER (&Q,NONBLANK)\n    VER (&FORM,NONBLANK)\n    VER (&C,NONBLANK,NUM)\n    VPUT (DST Q FORM C) PROFILE\n)END\n./       ADD   NAME=XMTSELCT\n)ATTR DEFAULT(%+_)\n  % TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n  + TYPE(TEXT) INTENS(LOW) COLOR(GREEN)\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n  $ TYPE(TEXT) INTENS(LOW) COLOR(BLUE)\n  ! TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n)BODY EXPAND(\\\\)\n%-\\-\\-  Transmit/Receive Function Select  -\\-\\-\n!COMMAND ===>_ZCMD                                                             +\n%\n+   Select one function from the list below:\n+\n+   _A$<===!Transmit a Data Set.\n+\n+   _B$<===!Receive a Data Set.\n+\n+   _C$<===!Display the%Nickname!table entries.\n+\n+   _D$<===!Print the%Nickname!table entries.\n+\n+\n+\n+\n+\n+\n+\n                                                                               +\n+\n+   Enter%END+to exit the Tansmit/Receive functions.\n+\n)INIT\n  .HELP = XMTHPB01           /* Insert name of tutorial panel    */\n  .CURSOR = A\n  &A = ' '\n  &B = ' '\n  &C = ' '\n  &D = ' '\n)PROC\n  VER (&A,LIST,S,' ')\n  VER (&B,LIST,S,' ')\n  VER (&C,LIST,S,' ')\n  VER (&D,LIST,S,' ')\n  IF (&A = S)\n     &DSL1 = 'S'\n  IF (&B = S)\n     &DSL2 = 'S'\n  IF (&C = S)\n     &DSL3 = 'S'\n  IF (&D = S)\n     &DSL4 = 'S'\n  VPUT (DSL1 DSL2 DSL3 DSL4) SHARED\n)END\n./       ADD   NAME=XMTTABLE\n)ATTR DEFAULT(%+_)\n   $ TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)\n   | TYPE(TEXT) INTENS(HIGH) COLOR(GREEN)\n   ! TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n   \u00ac TYPE(OUTPUT) INTENS(LOW) COLOR(BLUE)\n   @ TYPE(INPUT) INTENS(HIGH) CAPS(ON) COLOR(RED)\n   # TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) COLOR(TURQ)\n)BODY  EXPAND(\\\\)\n--\\-\\- Transmit Select from &XMTDSN -\\-\\-\n|COMMAND ===>_ZCMD                                 \\ \\%SCROLL ===>_AMT +\n|\n|  MEMBER            VV.MM CREATED   LAST MODIFIED  SIZE  INIT   MOD   ID\n+-------------------------------------------------------------------------------\n)Model\n@Z!Z       #Z       \u00acZ    \u00acZ       \u00acZ       \u00acZ    \u00acZ    \u00acZ    \u00acZ    \u00acZ      +\n)INIT\n  .HELP = XMTHP005                /* insert name of tutorial panel\n  .ZVARS = '(S QMNE LST QVRM ZLCDATE ZLMDATE ZLMTIME ZLCNORC ZLINORC ZLMNORC +\n             ZLUSER)'\n  &AMT = &SCR\n)REINIT\n)PROC\n  &SCR = &AMT\n  VPUT (SCR) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SKELETON": {"ttr": 1289, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "./       ADD   NAME=XMTJCL1\n)CM  THIS IS THE JOB JCL USED TO SUBMIT THE NOTIFY JOB FOR TRANSMIT\n)CM  OF FILES IN TSO/E FOR A USER OF NODE ID 1\n//&SYSUID.A JOB (99999,T),'XMIT &NDID1 &SYSUID',\n//          CLASS=&JCLAS,MSGCLASS=&MCLAS,\n//          NOTIFY=&SYSUID,\n//          USER=&RCFID,PASSWORD=&RCFPW\n/*XEQ &NDID1\n//SNDMSG   EXEC PGM=IKJEFT01\n//SYSLBC    DD DISP=SHR,DSN=SYS1.BRODCAST\n//SYSUADS   DD DISP=SHR,DSN=SYS1.UADS\n//SYSHELP   DD DISP=SHR,DSN=SYS1.HELP\n//SYSPRINT  DD SYSOUT=*\n//SYSTSPRT  DD SYSOUT=*\n//SYSTERM   DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//SYSTSIN   DD *\n)DOT DSTBL1\nSE 'A FILE FROM &SYSUID HAS BEEN SENT TO YOU.' USER(&DNAME1) LOGON\n)ENDDOT\n/*\n)CM END OF MEMBER XMTJCL1\n./       ADD   NAME=XMTJCL2\n)CM  THIS IS THE JOB JCL USED TO SUBMIT THE NOTIFY JOB FOR TRANSMIT\n)CM  OF FILES IN TSO/E FOR A USER OF NODE ID 1\n//&SYSUID.A JOB (99999,T),'XMIT &NDID2 &SYSUID',\n//          CLASS=&JCLAS,MSGCLASS=&MCLAS,\n//          NOTIFY=&SYSUID,\n//          USER=&RCFID,PASSWORD=&RCFPW\n/*XEQ &NDID2\n//SNDMSG   EXEC PGM=IKJEFT01\n//SYSLBC    DD DISP=SHR,DSN=SYS1.BRODCAST\n//SYSUADS   DD DISP=SHR,DSN=SYS1.UADS\n//SYSHELP   DD DISP=SHR,DSN=SYS1.HELP\n//SYSPRINT  DD SYSOUT=*\n//SYSTSPRT  DD SYSOUT=*\n//SYSTERM   DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//SYSTSIN   DD *\n)DOT DSTBL2\nSE 'A FILE FROM &SYSUID HAS BEEN SENT TO YOU.' USER(&DNAME1) LOGON\n)ENDDOT\n/*\n)CM END OF MEMBER XMTJCL2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT098/FILE098.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT098", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}