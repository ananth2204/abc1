{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011600000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 15, "INMDSNAM": "CBT.V500.FILE251.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE251.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x11'", "DS1TRBAL": "b'%\\x96'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xbd\\x00\\x07\\x01\\xbe\\x00\\x00\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x950o\\x00\\x950o\"\"\\x008\\x007\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T22:22:00", "lines": 56, "newlines": 55, "modlines": 0, "user": "E90138"}, "text": "$$$DOC    DESCRIPTION OF MEMBERS IN THIS PDS\nADDAFTR   ADD A LINE OF DATA AFTER EACH LINE\nBUPMEM    BACKUP PARMLIB MEMBER\nCHGID     PANEL USED BY SALTER\nCHGSTS    PANEL USED BY SALTER\nCLISTDOC  DOCUMENT A CLIST\nCMODEL    COPY A CLIST MODEL INTO CURRENT EDIT SESSION\nCUTCOL#   CUT COLUMNS HELP PANEL\nCUTCOLS   CUT COLUMNS OF DATA\nDELMARK   DEL MEMBERS OF PDS MARKED BY THE MARK MACRO\nDOCMAC    DOCUMENT AN EDIT MACRO\nFINDPROC  FIND A PROC IN JES2 PROC CONCATENATION ** MUST BE MODIFIED\nFPROCBLD  BUILD FINDPROC MACRO ** MUST BE MODIFIED\nFPROCBOT  COPY CODE FOR FPROCBLD\nFPROCTOP  COPY CODE FOR FPROCBLD\nINSERTM   INSERTM LINES MULTIPLE TIMES IN A DATASET AFTER X LINES\nISPYP1    MODIFIED PANEL TO WORK WITH VPANEL\nLINEGRP   PICK LINES OF DATA TO BE USED LATER GROUPS THEM AT TOP OF DATA\nMACDOC    DOCUMENT A EDIT MACRO\nMACPEEK   FIND EDIT MACRO OR CLIST IN SYSPROC CONCATENATION EDIT MAC\nMACVIEW   FIND EDIT MACRO OR CLIST IN SYSPROC CONCATENATION TSO CLIST\nMARK      MARK MEMBER FOR DELETION\nMARKCLR   CLEAR MARKS CREATED BY MARK MACRO\nMEMDEL    CREATE  A LIST OF MEMBERS AND SELECT SOME FOR DELETION\nMEMLSTX   CALLED BY MEMDEL TO DELETE MEMBERS SELECTED FOR DELETION\nMOVECOL#  MOVECOLS HELP PANEL\nMOVECOLS  MOVE COLUMNS OF DATA\nMOVFIELD  MOVE DATA FIELDS\nMOVFIEL#  MOVFIELD HELP PANEL\nMPAST     CALLED BY INSERTM MACRO TO DO THE DIRTY WORK\nMSGMAKE   MAKE A ISR MESSAGE IN CLIST\nPANPEEK   FIND PANEL IN ISPPLIB CONCATENATION EDIT MACRO\nPANVIEW   FIND PANEL IN ISPPLIB CONCATENATION TSO CLIST\nSALTER    CHANGE MEMBER STATS\nSKELPEEK  FIND SKELETON IN ISPSLIB CONCATENATION EDIT MACRO\nSKELVIEW  FIND SKELETON IN ISPSLIB CONCATENATION TSO CLIST\nSYA$DOC   SAVE YOUR ASSETS BACKUP DOC\nSYACATC   SYA MACRO SEE SYS$DOC\nSYACLNUP  SYA MACRO SEE SYS$DOC\nSYACOPYI  SYA MACRO SEE SYS$DOC\nSYACOPYO  SYA MACRO SEE SYS$DOC\nSYAGENER  SYA MACRO SEE SYS$DOC\nSYAGENRI  SYA MACRO SEE SYS$DOC\nSYAGENRO  SYA MACRO SEE SYS$DOC\nSYAJBALL  SYA MACRO SEE SYS$DOC\nSYAPDS    SYA MACRO SEE SYS$DOC\nSYARENAM  SYA MACRO SEE SYS$DOC\nSYAUDCAT  SYA MACRO SEE SYS$DOC\nSYAUNCAT  SYA MACRO SEE SYS$DOC\nVOID      RESET PF10 KEY AFTER INSERTM ABORT\nVPANEL    REFRESH CHANGED PANEL  ** REQUIRES ISPYP1 PANEL MOD\nVTZAPBLD  BUILD A VTOC ZAP FROM IEHLIST LISTING\nWCUT      WINDOW CUT. CUT PORTIONS OF LINES FOR TO PASTE W WPASTE\n          FOR THOSE OF US WITHOUT PC'S GIVE THIS A TRY\nWCUT2     CALLED BY WCUT\nWPASTE    PASTE DATA CUT BY WCUT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ADDAFTR": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x950?\\x00\\x950?\"\\x17\\x004\\x00\\x18\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1995-10-30T00:00:00", "modifydate": "1995-10-30T22:17:00", "lines": 52, "newlines": 24, "modlines": 0, "user": "E90138"}, "text": "ISREDIT MACRO (ARG) NOPROCESS\n /********************* ADDAFTR  ISPF EDIT MACRO *********************/\n /*                                                                  */\n /* ADDAFTR IS A SPECIAL PURPOSE EDIT MACRO THAT WILL INSERT A LINE  */\n /* OF DATA AFTER EACH LINE WITHIN AND IDENTIFIED RANGE OF LINES.    */\n /* A RANGE IS DEFINED BY USING A RANGE COMMAND IDENTIFIED BY A 'Z'. */\n /* 'Z', 'ZZ', AND 'ZNNN' CAN BE USED AS RANGE IDENTIFIERS.          */\n /*                                                                  */\n /* DATA CAN BE PASSED ON THE COMMAND LINE. IF DATA IS NOT PASSED ON */\n /* THE COMMAND LINE, THE CURSOR MUST BE PLACE ON THE DATA LINE TO   */\n /* BE USED AS DATA.                                                 */\n /*                                                                  */\n /* SYNTAX: ADDAFTR {OPTIONAL DATA TO BE USED AS INSERT}             */\n /*                                                                  */\n /********************************************************************/\n\n IF &ARG = THEN DO\n ISREDIT (ROW,COL) = CURSOR\n ISREDIT (ARG1) = LINE &ROW\n SET &ARG = &NRSTR(&ARG1)\n END\n ISPEXEC CONTROL ERRORS RETURN\nISREDIT PROCESS RANGE Z\nSET RC = &LASTCC\nIF &RC = 4 THEN +\n  DO\n     SET ZEDSMSG = &STR(RANGE NOT SPECIFIED)\n     SET ZEDLMSG = &STR(SPECIFY RANGE FOR THE CUT AND RE-EXECUTE +\n                        THE MACRO)\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(4)\n   END\nELSE +\n    IF &RC > 0 THEN +\n      DO\n     SET ZEDSMSG = &STR(SEVERE ERROR)\n     SET ZEDLMSG = &STR(SEVERE ERROR OCCURED, RETURN CODE WAS +\n                        &RC)\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(&RC)\n   END\n ISREDIT (CMD) = RANGE_CMD\n ISREDIT (FIRST) = LINENUM .ZFRANGE\n ISREDIT (LAST) = LINENUM .ZLRANGE\n DOIT: +\n ISREDIT LINE_AFTER &FIRST =  '&NRSTR(&ARG)'\n  SET &FIRST = &FIRST + 2\n  SET &LAST  = &LAST  + 1\n  IF &FIRST > &LAST THEN GOTO MD\n  GOTO DOIT\nMD: +\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BUPMEM": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x95\\x02o\\x00\\x95\\x08\\x9f\\x14%\\x00n\\x00V\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1995-01-26T00:00:00", "modifydate": "1995-03-30T14:25:00", "lines": 110, "newlines": 86, "modlines": 0, "user": "E90138"}, "text": " /********************* BUPMEM   ISPF EDIT MACRO *********************/\n /* BUPMEM IS DESIGNED TO BACKUP  MEMBERS OF 'SYS1.PARMLIB' PRIOR TO */\n /* UPDATING FOR RECOVERY  PURPOSES.   IF  MEMBER  XXXXXXXX IS BEING */\n /* EDITED BUPMEM LOOKS FOR MEMBER  XXXXXXB1.  IF MEMBER XXXXXXB1 IS */\n /* FOUND, IT IS THEN COPIED TO MEMBER XXXXXXB2, AND MEMBER XXXXXXXX */\n /* IS THEN COPIED TO  MEMBER  XXXXXXB1.   IF MEMBER XXXXXXB1 IS NOT */\n /* FOUND MEMBER  XXXXXXXX  IS  COPIED  INTO  MEMBER(S) XXXXXXB1 AND */\n /* XXXXXXB2.   ORIGINAL  ISPF  STATS   ARE  PRESERVED  ON  THE  NEW */\n /* MEMBERS.                                                         */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: BUPMEM                                                   */\n /*                                                                  */\n /********************************************************************/\n\n ISREDIT MACRO (HELP) NOPROCESS\n    IF &HELP = HELP  THEN DO\n     ISREDIT MACPEEK BUPMEM\n    EXIT\n    END\n    IF &HELP = ?  THEN DO\n     ISREDIT MACPEEK BUPMEM\n    EXIT\n    END\n\n ISREDIT (WORKDSN) = DATASET\n ISREDIT (MEMBER) = MEMBER\nSET  PDSDSN = &WORKDSN\nSET &MEMO = &MEMBER\n/* INITIALIZE DATASET */\nMEMCHECK: +\nIF &LENGTH(&MEMBER) \u00ac= 8 THEN DO\nSET &MEMBER = &STR(&MEMBER&STR(0))\nGOTO MEMCHECK\nEND\nSET &MEM6 = &SUBSTR(1:6,&MEMBER)\nSET &MEMB1 = &STR(&MEM6&STR(B1))\nSET &MEMB2 = &STR(&MEM6&STR(B2))\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&PDSDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\nISPEXEC  LMINIT DATAID(PDSID2) DATASET('&PDSDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\n\n/* OPEN DATA SET */\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)\nSET LMRC = &LASTCC\n\n  ISPEXEC LMMFIND DATAID(&PDSID) -\n        MEMBER(&MEMB1) -\n        STATS(YES)\n   SET &FINDCC = &LASTCC\nIF &FINDCC = 8 THEN DO\nISPEXEC LMCLOSE DATAID(&PDSID2)\n  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +\n                  TODATAID(&PDSID2) TOMEM(&MEMB1)  +\n                  REPLACE\n   SET &NEWM1 = &LASTCC\n  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +\n                  TODATAID(&PDSID2) TOMEM(&MEMB2) +\n                  REPLACE\n   SET &NEWM2 = &LASTCC\nGOTO OUT\n  END\nIF &FINDCC = 0 THEN DO\nISPEXEC LMCLOSE DATAID(&PDSID2)\n  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMB1) +\n                  TODATAID(&PDSID2) TOMEM(&MEMB2)  +\n                  REPLACE\n   SET &OLDM2 = &LASTCC\n  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +\n                  TODATAID(&PDSID2) TOMEM(&MEMB1) +\n                  REPLACE\n   SET &OLDM1 = &LASTCC\nGOTO OUT\n  END\nOUT: +\nISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)\n/* CLOSE DATA SET */\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\nIF &NEWM1 = 0 THEN DO\n      SET ZEDSMSG = &STR(&MEMBER BKUP OK)\n      SET ZEDLMSG = &STR(&MEMBER BACKED UP TO &MEMB1 AND &MEMB2)\n      ISPEXEC SETMSG MSG(ISRZ001)\nEXIT CODE(0)\nEND\nIF &OLDM2 = 0 THEN DO\n      SET ZEDSMSG = &STR(&MEMBER BKUP OK)\n      SET ZEDLMSG = &STR(&MEMB1 BACKED UP TO &MEMB2. &MEMBER +\n        NOW BACKED UP &MEMB1)\n      ISPEXEC SETMSG MSG(ISRZ001)\nEXIT CODE(0)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHGID": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x950o\\x00\\x950o\\x127\\x00\\r\\x00\\r\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:37:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "E90138"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "CHGSTS": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x950o\\x00\\x950o\\x126\\x00\\x07\\x00\\x07\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:36:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "E90138"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "CLISTDOC": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x08\\x9f\\x00\\x95\\x08\\x9f\\x08\\x07\\x00O\\x00O\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-03-30T00:00:00", "modifydate": "1995-03-30T08:07:00", "lines": 79, "newlines": 79, "modlines": 0, "user": "E90138"}, "text": " /********************* CLISTDOC ISPF EDIT MACRO *********************/\n /* CLISTDOC IS AN ISPF EDIT MACRO  THAT PLACES A COMMENT BOX IN THE */\n /* CURRENT CLIST OR  EDIT  MACRO  PROVIDING  SPACE TO DOCUMENT  THE */\n /* CLIST.  THE CLIST NAME IS PLACED IN THE TOP LINE TO IDENTIFY THE */\n /* CLIST, AND AGAIN IN THE FIRST LINE OF TEXT IN ORDER TO START THE */\n /* COMMENTARY.  AT THE  NEXT  TO  LAST  LINE  OF  THE BOX A STARTER */\n /* SYNTAX STATEMENT IS ALSO  INCLUDED.   CLISTDOC  HAS A DEFAULT OF */\n /* NINE LINES NOT  INCLUDING  TOP  AND  BOTTOM.   MORE LINES CAN BE */\n /* CREATED BY INCLUDING AN  ARGUMENT  WHEN ISSUING THE MACRO.  THIS */\n /* BOX  WAS  CREATED  USING  CLISTDOC.   AN  EDIT  BEFORE  OR AFTER */\n /* INDICATOR WILL BE HONORED OTHERWISE  THE BOX WILL WILL BE PLACED */\n /* AT THE TOP OF THE DATASET.                                       */\n /*                                                                  */\n /* SYNTAX CLISTDOC {NUMBER-LINES} OPTIONAL                          */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (LINES) NOPROCESS\n       IF &STR(&LINES) = ? THEN +\n           DO\n   ISREDIT MACPEEK CLISTDOC\n           EXIT\n           END\n    /* SET DEFAULT NUMBER OF LINES */\n    IF &LINES =   THEN SET &LINES = 9\n    SET &LINES = &LINES - 1\n  SET &BLNKS = &STR(        )\n\n  SET &STARS = &STR(*******)\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  ISREDIT PROCESS DEST\n    SET &DESTCC = &LASTCC\n      IF &DESTCC = 0 THEN DO\n       ISREDIT (WHERE) = RANGE_CMD\n       ISREDIT LOCATE .ZDEST\n       ISREDIT (PTR,COL) = CURSOR\n      END\n  IF &DESTCC = 8 THEN SET &PTR  = 0\n  IF &WHERE > B  THEN SET &PTR  = &PTR   - 1\n  ISREDIT (MEM) = MEMBER\n  IF &LENGTH(&MEM) NE 8 THEN DO\n  SET &MEM = &STR(&MEM&STR(        ))\n  SET &MEM = &SUBSTR(1:8,&STR(&MEM))\n  END\n  SET &SYN = &LINES - 2\n  SET &SYN1 =  &LINES - &SYN\n  SET &TOP = +\n   &STR(/&STARS&STARS&STARS )&STR(&MEM)+\n  &STR( TSO/E CLIST     &STARS&STARS&STARS/)\n  SET &BOTTOM = +\n   &STR(/&STARS&STARS&STARS&STARS&STARS&STARS&STARS&STARS&STARS*****/)\n  SET &LINE1  = +\n   &STR(/* )&STR(&MEM)&STR(                            )+\n  &STR(                             */)\n  SET &FILL   = +\n   &STR(/*                                   )+\n  &STR(                               */)\n  SET &SYNTAX = +\n   &STR(/* SYNTAX: )&STR(&MEM)&STR(                  )+\n  &STR(                               */)\n  ISREDIT LINE_AFTER &PTR = '&STR( &TOP)'\n  SET &PTR = &PTR + 1\n  ISREDIT LINE_AFTER &PTR = '&STR( &LINE1)'\n  SET &PTR = &PTR + 1\n  DO WHILE &LINES > 0\n  ISREDIT LINE_AFTER &PTR = '&STR( &FILL)'\n  SET &PTR = &PTR + 1\n  SET  &LINES = &LINES - 1\n  IF &SYN1 = &LINES THEN DO\n  ISREDIT LINE_AFTER &PTR = '&STR( &SYNTAX)'\n  SET &PTR = &PTR + 1\n  SET  &LINES = &LINES - 1\n  END\n  END\n  ISREDIT LINE_AFTER &PTR = '&STR( &BOTTOM)'\n  SET &PTR = &PTR + 1\n  ISREDIT LINE_AFTER &PTR = '&STR(    )'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CMODEL": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95\\x08o\\x00\\x95\\x08\\x7f\\x11\\x01\\x00\\r\\x00\\r\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-03-27T00:00:00", "modifydate": "1995-03-28T11:01:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "E90138"}, "text": " /********************* CMODEL   ISPF EDIT MACRO *********************/\n /* CMODEL IS AN ISPF EDIT MACRO  THAT GETS A CLIST MODEL AND PLACES */\n /* IT AFTER THE CURRENT CURSOR LOCATION.                            */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: CMODEL MODEL-NAME                                        */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (MODNAM) NOPROCESS\nISREDIT (ROW,COL) = CURSOR\nISREDIT MODEL CLASS CLIST\nISREDIT MODEL &MODNAM  AFTER &ROW\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CUTCOL#": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x950o\\x00\\x950o\\x12W\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:57:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "E90138"}, "text": ")ATTR DEFAULT(%\u00ac_)\n)BODY\n%EDITMAC  ------------------ CUTCOLS   MACRO  ------------------------  TUTORIAL\n%COMMAND ===>_ZCMD                                                             \u00ac\n\u00ac\n\u00acThe%CUTCOLS\u00acmacro is used to move data from specific columns to new lines.\n\u00ac\n\u00acUSE:\n\u00acFirst on the line numbers of the data set, indicate a range of the lines\n\u00accontaining the columns to be moved with  range indicators \"ss\"  to \"ss\"\n\u00acor \"snn\"  (nn beng numbers).  Then on the command line, type in CUTCOLS\n\u00acand the start and stop column numbers.\n\u00ac\n%COMMAND ===> CUTCOLS 6 9\n\u00ac***************************** TOP OF DATA *************************************\n%=COLS>  ----+----1----+----2----+----3----+----4----+----5----+----6----+----7-\n\u00acSS0001  DATA LINA 1and more data\n\u00acSS0002  DATA LINBX3\n\u00ac\n\u00acRESULT:\n%=COLS>  ----+----1----+----2----+----3----+----4----+----5----+----6----+----7-\n\u00ac000001  DATA  1and more data\n\u00ac000002  DATA X3\n\u00ac000003  LINA\n\u00ac000004  LINB\n)PROC\n&KEY = .PFKEY\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTCOLS": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x15?\\x00\\x950o\\x18G\\x00K\\x00L\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-06-02T00:00:00", "modifydate": "1995-11-02T18:47:00", "lines": 75, "newlines": 76, "modlines": 0, "user": "E90138"}, "text": "  ISREDIT MACRO (START STOP) NOPROCESS\n       IF &STR(&START) = HELP THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(CUTCOL#)\n           EXIT\n           END\n\n       IF &STR(&START) = ? THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(CUTCOL#)\n           EXIT\n           END\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  ISREDIT PROCESS RANGE S C\n  SET LCC = &LASTCC\n  ISREDIT (RC) = RANGE_CMD\n  IF &LASTCC = 4 | &STR(&RC) \u00ac= &STR(S) THEN DO\n     SET &ZEDSMSG = NO RANGE SPECIFIED\n     SET &ZEDLMSG = YOU MUST SPECIFY A RANGE OF LINES TO BE MANIPULAT+\n        ED A \"S<N>\" OR \"SS\"\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(12)\n  END\n  ISREDIT F '~'\n      IF &LASTCC = 0 THEN DO\n     SET &ZEDSMSG = &STR(CHARACTER '~' FOUND)\n     SET &ZEDLMSG = &STR(CHARACTER '~' IS USED IN THE MOVFIELD MACRO +\n        AN WILL BE DESTROYED)\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(0)\n    END\n  ISREDIT C X'50'  'A1'X  ALL\n  ISREDIT (FR) = LINENUM .ZFRANGE\n  ISREDIT (LR) = LINENUM .ZLRANGE\n  ISREDIT (LB,RB) = BOUNDS\n  ISREDIT LABEL &FR = .A\n  ISREDIT LABEL &LR = .B\n  SET BL = &RB - &LB + 1\n  SET I = &FR\n  SET &NS = &LR + 1\n  SET &NL = &LR\n  DO WHILE( &I <= &LR )\n     ISREDIT (LN) = LINE &I\n     IF &START > 1 THEN DO\n     SET &PART1 = &SUBSTR(1:&EVAL(&START - 1),&STR(&LN))\n     SET &PART2 = &SUBSTR(&EVAL(&STOP + 1):&RB,&STR(&LN))\n     ISREDIT LINE &I = '&PART1&PART2'\n     ISREDIT LINE_AFTER &NL = '&LN'\n     END\n     IF &START  = 1 THEN DO\n     SET &PART2 = &SUBSTR(&EVAL(&STOP + 1):&RB,&STR(&LN))\n     ISREDIT LINE &I = '&PART1&PART2'\n     ISREDIT LINE_AFTER &NL = '&LN'\n     END\n     SET &I = &I + 1\n     SET &NL = &NL + 1\n     END\n  ISREDIT C X'A1'  '50'X  ALL\n  ISREDIT LABEL &NS = .C\n  ISREDIT LABEL &NL = .D\n  SET &RB1 = &START - 1\n  SET &RB2 = &STOP + 1\n  IF &START  > 1 THEN DO\n  ISREDIT C P'=' '}'  &LB  &RB1 .C  .D ALL\n  END\n  IF &START = 2 THEN DO\n  ISREDIT C P'=' '}'  1 1  .C  .D ALL\n  END\n  IF &STOP < &RB THEN DO\n  ISREDIT C P'=' '}'  &RB2 &RB  .C  .D ALL\n  END\n  ISREDIT C '}' '' .C .D ALL\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DELMARK": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x00\\x01\\x00\\x00\\x00\\x95\\x08\\x8f\\x00\\x950\\x7f\"\\x11\\x00x\\x00p\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "00.01", "flags": 0, "createdate": "1995-03-29T00:00:00", "modifydate": "1995-11-03T22:11:00", "lines": 120, "newlines": 112, "modlines": 0, "user": "E90138"}, "text": " /********************* DELMARK  ISPF EDIT MACRO *********************/\n /* DELMARK IS A ISPF EDIT MACRO TO DELETE MEMBERS PREVIOUSLY MARKED */\n /* BY THE MARK MACRO                                                */\n /*                                                                  */\n /* SYNTAX: DELMARK                                                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISPEXEC VGET (DELLST,DELLAST,DELDSN) PROFILE\nIF &DELDSN = THEN DO\n           SET ZEDSMSG = &STR(NOTHING TO DO)\n             SET ZEDLMSG = &STR(NO MEMBERS MARKED FOR DELETION)\n           ISPEXEC SETMSG MSG(ISRZ001)\n           EXIT\n         END\n ISREDIT (WORKDSN) = DATASET\n/* INITIALIZE DATASET */\n SET &PDSDSN = &WORKDSN\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&PDSDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(LMINIT FAILED)\n             SET ZEDLMSG = &STR(DATA SET IS NOT ALLOCATED OR NOT A +\n                               PATRIRIONED DATA SET CODE &LMRC)\n           ISPEXEC SETMSG MSG(ISRZ001)\n      EXIT\n   END\n\n/* OPEN DATA SET */\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(OUTPUT)\nSET LMRC = &LASTCC\n\nISREDIT (THISDSN) = DATASET\n IF &DELDSN \u00ac= &THISDSN THEN DO\n   SET ZEDSMSG = &STR(WRONG DATASET)\n   SET ZEDLMSG = &STR(MEMBERS MARKED FOR DELETION ARE FROM &DELDSN +\n   NOT &THISDSN )\n   ISPEXEC SETMSG MSG(ISRZ001)\n   EXIT\n END\nSET &DELLSX = &STR(&DELLST&STR( ))\nIF &SUBSTR(1:1,&STR(&DELLSX)) = &STR( ) THEN DO\nSET &DELLSX = &SUBSTR(2:&LENGTH(&STR(&DELLSX)),&STR(&DELLSX))\nEND\nSET &LX = &LENGTH(&STR(&DELLST))\nSET &L2 = 1\nSET &L1 = 1\nGOTO FINDMEM\nSTART: +\nSET &L2 = 2\nFINDMEM: +\n IF &L2 > &LENGTH(&STR(&DELLSX)) THEN GOTO FINISH\n IF &SUBSTR(&L2:&L2,&STR(&DELLSX)) \u00ac= &STR( ) THEN GOTO SEARCH\n IF &SUBSTR(&L2:&L2,&STR(&DELLSX)) = &STR( ) THEN DO\n SET &MEMR = &SUBSTR(1:&EVAL(&L2-1),&STR(&DELLSX))\n IF &MEMR = &DELLAST THEN GOTO FINISH\n SET &DEST = MEMID\n GOTO DELIT\nMEMID: +\nSET &DELLSX = +\n&SUBSTR(&EVAL(&L1):&LENGTH(&STR(&DELLST)),&STR(&DELLST))\nSET &DELLSX = &SUBSTR(1:&LENGTH(&STR(&DELLSX)),&STR(&DELLSX))\nIF &SUBSTR(1:1,&STR(&DELLSX)) = &STR( ) THEN DO\nSET &DELLSX = &SUBSTR(2:&LENGTH(&STR(&DELLSX)),&STR(&DELLSX))\nSET &L2 = 1\n SET &L1 = &L1 + 1\nGOTO FINDMEM\nEND\nIF &SUBSTR(2:2,&STR(&DELLSX)) = &STR( ) THEN DO\nSET &DELLSX = &SUBSTR(3:&LENGTH(&STR(&DELLSX)),&STR(&DELLSX))\nSET &L2 = 1\n SET &L1 = &L1 + 1\nGOTO FINDMEM\nEND\nIF &SUBSTR(3:3,&STR(&DELLSX)) = &STR( ) THEN DO\nSET &DELLSX = &SUBSTR(4:&LENGTH(&STR(&DELLSX)),&STR(&DELLSX))\nSET &L2 = 1\n SET &L1 = &L1 + 1\nGOTO FINDMEM\nEND\n GOTO START\n END\n SEARCH: +\n SET &L1 = &L1 + 1\n SET &L2 = &L2 + 1\n GOTO FINDMEM\n FINISH: +\n SET &MEMR = &STR(&DELLSX)\n SET &DEST = FINAL\n DELIT: +\n  ISPEXEC  LMMDEL  DATAID(&PDSID) MEMBER(&MEMR)\nIF &LMRC = 0 THEN +\n   DO\n   WRITE &MEMR DELETED\n           SET ZEDSMSG = &STR(&MEM DELETED)\n             SET ZEDLMSG = &STR('&WORKDSN(&MEMR)' DELETED\n           ISPEXEC SETMSG MSG(ISRZ001)\n   END\nIF &LMRC \u00ac= 0 THEN +\n   DO\n          SET ZEDSMSG = &STR(&MEM NOT DELETED)\n           SET ZEDLMSG = &STR('&WORKDSN(&MEMR)' NOT DELETED CODE &LMRC)\n           ISPEXEC SETMSG MSG(ISRZ001)\n   END\n GOTO &DEST\n FINAL: +\nISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)\n/* CLOSE DATA SET */\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\nSET &DELDSN =\nSET &DELLAST =\nSET &DELLST =\nISPEXEC VPUT (DELDSN,DELLAST,DELLST) PROFILE\n EXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DOCMAC": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x93\\x15?\\x00\\x95\\x08\\x9f\\x08(\\x00>\\x00=\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1993-06-02T00:00:00", "modifydate": "1995-03-30T08:28:00", "lines": 62, "newlines": 61, "modlines": 0, "user": "E90138"}, "text": " /********************* DOCMAC   ISPF EDIT MACRO *********************/\n /* DOCMAC ISPF EDIT MACRO IS USED  TO PLACE A BOX IN WHICH COMMENTS */\n /* OR  DOCUMENTATION CAN  BE  PLACED  WITHIN  A EDIT MACRO.  DOCMAC */\n /* ACCEPTS A VARIABLE TO INDICATE  THE  NUMBER OF BLANK LINES TO BE */\n /* PLACED WITHIN THE COMMENT  BOX.   THE  DEFAULT  IS 5 BLANK BLANK */\n /* LINES.  IF PRESENT.  A  BEFORE  OR  AFTER  RANGE COMMAND WILL BE */\n /* USED TO DETERMINE THE  PLACEMENT  OF  THE  BOX.   IF NO RANGE IS */\n /* FOUND THE BOX WILL BE PLACED  AT  THE TOP OF THE CURRENT DATASET */\n /* BEING EDITIED.                                                   */\n /*                                                                  */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: DOCMAC                                                   */\n /*                                                                  */\n /********************************************************************/\n\n\nISREDIT MACRO (LINES) NOPROCESS\n    IF &LINES = HELP  THEN DO\n     ISREDIT MACPEEK DOCMAC\n    EXIT\n    END\n    IF &LINES = ?  THEN DO\n     ISREDIT MACPEEK DOCMAC\n    EXIT\n    END\n    /* SET DEFAULT NUMBER OF LINES */\n    IF &LINES =   THEN SET &LINES = 5\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  ISREDIT PROCESS DEST\n    SET &DESTCC = &LASTCC\n      IF &DESTCC = 0 THEN DO\n       ISREDIT (WHERE) = RANGE_CMD\n       ISREDIT LOCATE .ZDEST\n       ISREDIT (PTR,COL) = CURSOR\n      END\n  IF &DESTCC = 8 THEN SET &PTR  = 0\n  IF &WHERE > B  THEN SET &PTR  = &PTR   - 1\n  ISREDIT (MEM) = MEMBER\n  IF &LENGTH(&MEM) NE 8 THEN DO\n  SET &MEM = &STR(&MEM&STR(        ))\n  SET &MEM = &SUBSTR(1:8,&STR(&MEM))\n  END\n  SET &TOP = +\n   &STR(/*************  )&STR(&MEM)+\n  &STR( ISPF EDIT MACRO  *************/)\n  SET &BOTTOM = +\n   &STR(/******************************************************/)\n  SET &FILL   = +\n   &STR(/*                                                    */)\n  ISREDIT LINE_AFTER &PTR = '&STR(          &TOP)'\n  SET &PTR = &PTR + 1\n  DO WHILE &LINES > 0\n  ISREDIT LINE_AFTER &PTR = '&STR(          &FILL)'\n  SET &PTR = &PTR + 1\n  SET  &LINES = &LINES - 1\n  END\n  ISREDIT LINE_AFTER &PTR = '&STR(          &BOTTOM)'\n  SET &PTR = &PTR + 1\n  ISREDIT LINE_AFTER &PTR = '&STR(    )'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FINDPROC": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x95\\x04O\\x00\\x950\\x7f\"!\\x00H\\x00w\\x00/\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1995-02-13T00:00:00", "modifydate": "1995-11-03T22:21:00", "lines": 72, "newlines": 119, "modlines": 47, "user": "E90138"}, "text": " /********************* FINDPROC TSO/E CLIST     *********************/\n /* FINDPROC IS A CLIST THAT WILL SEARCH THE JES PROCLIB             */\n /* CONCATENATION FINDING A TARGET MEMBER. SEVERAL OPTIONS ARE       */\n /* AVAILABLE:                                                       */\n /*                                                                  */\n /*  WRITE  - SHOW LIBRARY NAME AS IT IS SEARCHED                    */\n /*                                                                  */\n /*  QUIT   - QUIT AFTER FIRST OCCURANCE OF TARGET                   */\n /*                                                                  */\n /*  EDIT   - EDIT THE TARGET MEMBER WHEN FOUND                      */\n /*                                                                  */\n /*  BROWSE - BROWSE THE TARGET MEMBER WHEN FOUND                    */\n /*                                                                  */\n /*  THIS CLIST MUST BE UPDATED WITH THE PROCLIBS IN THE ORDER JES   */\n /*  SEARCHES THEM. THIS IS USUALLY IN THE JES2 PROC OR THE JES3     */\n /*  INISH DECK.                                                     */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: FINDPROC PROCNAME {WRITE QUIT EDIT BROWSE}               */\n /*                                                                  */\n /********************************************************************/\n\nPROC 1 MBR WRITE  QUIT EDIT BROWSE\n     SET &PROC = PROC\n     CLRSCRN\nSET &HINUM = &HINUM + 1\nSET &PROC&HINUM = SYS1.PROCLIB\nSET &HINUM = &HINUM + 1\nSET &PROC&HINUM = SYS2.PROCLIB\nSET &HINUM = &HINUM + 1\nSET &PROC&HINUM = SYS3.PROCLIB\nSET &HINUM = &HINUM + 1\nSET &PROC&HINUM = S99.H6.PROCLIB\nSET &HINUM = &HINUM + 1\nSET &PROC&HINUM = S99.COMMON.PROCLIB\nSET &HINUM = &HINUM + 1\nSET &PROC&HINUM = S99.SYSTEST.PROCLIB\nWRITE SEARCHING SYSTEM PROCLIBS FOR PROC: &MBR\nLOOP: +\nSET &CTR = &CTR + 1\nIF &CTR > &HINUM THEN GOTO OUT\nSET &LIB = &&PROC&CTR\nIF &WRITE =  WRITE THEN DO\nWRITE  SEARCHING '&LIB'\nEND\nIF &SYSDSN('&LIB(&MBR)') = OK THEN DO\nIF &WRITE = EDIT |  +\n   &QUIT  = EDIT |  +\n   &BROWSE = EDIT |  +\n   &EDIT  = EDIT THEN  DO\nISPEXEC EDIT DATASET('&LIB(&MBR)')\nGOTO CHECKXIT\nEND\nIF &WRITE = BROWSE | +\n   &QUIT  = BROWSE | +\n   &BROWSE = BROWSE | +\n   &EDIT  = BROWSE THEN DO\nISPEXEC BROWSE DATASET('&LIB(&MBR)')\nGOTO CHECKXIT\nEND\nWRITE                           &MBR FOUND IN &LIB\nCHECKXIT: +\nIF &BROWSE = QUIT THEN EXIT\nIF &WRITE = QUIT THEN EXIT\nIF &QUIT = QUIT THEN EXIT\nIF &EDIT = QUIT THEN EXIT\nSET &FOUND = YES\nEND\nGOTO LOOP\nOUT: +\nWRITE &HINUM SYSTEM PROCLIBS SEARCHED\nIF &FOUND \u00ac= YES THEN WRITE PROC &MBR NOT FOUND IN ANY JES2 PROCLIB\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FPROCBLD": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x95\\x04/\\x00\\x95\\x08\\x9f\\t8\\x00T\\x00&\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1995-02-11T00:00:00", "modifydate": "1995-03-30T09:38:00", "lines": 84, "newlines": 38, "modlines": 0, "user": "E90138"}, "text": " /********************* FPROCBLD TSO/E CLIST     *********************/\n /* FPROCBLD BUILDS THE FINDPROC  CLIST  CUSTOMIZED TO YOUR PROCLIBS */\n /* AS DEFINED IN 'SYS1.PROCLIB(JES2)'.  TWO CLISTS ARE CREATED IN A */\n /* TARGET AND ALTTARG CLIST  LIBRARIES.   THIS WILL ALLOW USERS WHO */\n /* MAY NOT HAVE ACCESS TO ONE LIBRARY TO EXECUTE FROM ANOTHER.  THE */\n /* PROCESS USES EDIT  MACRO  FPROCMAC,   AND  COPIES FPROCTOP,  AND */\n /* FPROCBOT WHILE EXECUTING.  THESE  MODULES  MUST BE IN THE TARGET */\n /* CLIST LIBRARY WHICH MUST BE IN THE SYSPROC CONTATENATION.        */\n /*                                                                  */\n /* SYNTAX: FPROCBLD                    {TSO COMMAND}                */\n /*                                                                  */\n /********************************************************************/\n\nPROC 0  TARGET(SYS2.TSS.CLISB) ALTTARG(NEODISPF.COMMON.CLISTS)\nSET  PDSDSN = SYS1.PROCLIB\nSET &MEMO = JES2\n/* INITIALIZE DATASET */\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&PDSDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\nISPEXEC  LMINIT DATAID(PDSID2) DATASET('&TARGET') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\n\n/* OPEN DATA SET */\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)\n\n  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(&MEMO) +\n                  TODATAID(&PDSID2) TOMEM(FPROCWRK) +\n                  REPLACE\nOUT: +\nISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)\n/* CLOSE DATA SET */\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\nISPEXEC EDIT DATASET('&TARGET.(FPROCWRK)') MACRO(FPROCMAC)\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&TARGET') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\nISPEXEC  LMINIT DATAID(PDSID2) DATASET('&ALTTARG') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\n\n/* OPEN DATA SET */\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)\n\n  ISPEXEC  LMCOPY FROMID(&PDSID) FROMMEM(FINDPROC) +\n                  TODATAID(&PDSID2) TOMEM(FINDPROC) +\n                  REPLACE\nOUT2: +\nISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)\n/* CLOSE DATA SET */\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FPROCMAC": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x95\\x04/\\x00\\x95\\x08\\x9f\\t\\x14\\x00/\\x00\\n\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1995-02-11T00:00:00", "modifydate": "1995-03-30T09:14:00", "lines": 47, "newlines": 10, "modlines": 0, "user": "E90138"}, "text": " /********************* FPROCMAC ISPF EDIT MACRO *********************/\n /* FPROCMAC IS AN ISPF EDIT MACRO CALLED BY CLIST FPROCBLD TO EDIT  */\n /* INPUT OF 'SYS1.PROCLIB(JES2)' AND BUILD A LIST OF PROCS FOR THE  */\n /* FINDPROC CLIST. THIS EDIT MACRO ASSUMES SEVERAL DATA LOCATIONS,  */\n /* AND FOR BEST RESULTS CHECK 'ISREDIT F' STATEMENTS AND &SUBSTR    */\n /* STATEMENTS FOR BEST RESULTS.                                     */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: NONE        {NOT FUNCTIONAL STANDALONE}                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nSET &PROC = PROC\nSET &HINUM = HINUM\nSET &AMPER = &STR(\u00a6)\nSET &PART1 = &STR(SET &AMPER&PROC&AMPER&HINUM =)\nISREDIT X ALL\nISREDIT F 'PROC' 12 ALL\nISREDIT DEL X ALL\nISREDIT X ALL\nISREDIT F '=' 18 ALL\nISREDIT DEL X ALL\nISREDIT C ''' '' ALL\nISREDIT C '/' ' ' ALL\nISREDIT C P'=======' '       ' 12 ALL\nISREDIT C ',' ' ' ALL\nISREDIT RESET\nISREDIT LOCATE .ZF\nLOOP: +\nISREDIT (ROW,COL) = CURSOR\nISREDIT (WRKLINE) = LINENUM  &ROW\nISREDIT (DATALINE) = LINE &WRKLINE\nSET &PART2 = &SUBSTR(18:45,&STR(&DATALINE))\nISREDIT LINE &WRKLINE = '&PART1&PART2'\nISREDIT LINE_AFTER &WRKLINE = 'SET &AMPER&HINUM = &AMPER&HINUM + 1'\nISREDIT F ' ' NEXT\nISREDIT F '.' NEXT\nIF &LASTCC NE 0 THEN GOTO FINISH\nGOTO LOOP\nFINISH: +\nISREDIT DEL .ZL\nISREDIT C '\u00a6' X'50' ALL\nISREDIT COPY FPROCTOP BEFORE .ZF\nISREDIT COPY FPROCBOT AFTER .ZL\nISREDIT REP .ZF .ZL FINDPROC\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FPROCTOP": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x95\\x04/\\x00\\x95\\x08\\x9f\\t#\\x00\\x0f\\x00\\x04\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-02-11T00:00:00", "modifydate": "1995-03-30T09:23:00", "lines": 15, "newlines": 4, "modlines": 0, "user": "E90138"}, "text": " /********************* FINDPROC TSO/E CLIST     *********************/\n /* FINDPROC CLIST.  THIS CLIST WHEN  PROPERLY BUILT BY THE FPROCBLD */\n /* CLIST, WILL SEARCH THE  LIBRARIES  FOR  THE PROCNAME SUPPLIED AT */\n /* EXECUTION TIME.  AN OPTIONAL  ARGUMENT  OF WRITE MAY BE SUPPLIED */\n /* WHICH WILL CAUSE ALL THE PROC LIBRARIES TO BE LISTED AS THEY ARE */\n /* SEARCHED.                                                        */\n /*                                                                  */\n /* SYNTAX: FINDPROC ARGUMENT {WRITE} <== OPRIONAL                   */\n /*                                                                  */\n /********************************************************************/\n\nPROC 1 MBR WRITE\n     SET &PROC = PROC\n     CLRSCRN\nSET &HINUM = &HINUM + 1\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HELPMAC": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x95\\x08\\x8f\\x00\\x95\\x08\\x9f\\x07R\\x00O\\x00\\x1a\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-03-29T00:00:00", "modifydate": "1995-03-30T07:52:00", "lines": 79, "newlines": 26, "modlines": 0, "user": "E90138"}, "text": " /********************* HELPMAC  ISPF EDIT MACRO *********************/\n /* HELPMAC IS AN EDIT  MACRO  TO  BUILD  A  HELP ENTRY FOR AND EDIT */\n /* MACRO BASED ON  USING  THE  MACPEEK  MACRO.   HELPMAC CHECKS FOR */\n /* INPUT VARIABLES ON THE  ISREDIT  MACRO  STATEMENT.  IF FOUND THE */\n /* FIRST ONE IS USED TO  CHECK  FOR  REQUESTS FOR HELP.  IF NONE IS */\n /* FOUND, HELPMAC CREATES  AN  INPUT  VARIABLE  NAMED HELP.  IF THE */\n /* FIRST VARIABLE OF THE MACRO IS  HELP OR ?  THEN HELPMAC WILL USE */\n /* THE MACPEEK MACRO TO FIND  THE  FIRST  OCCURANCE OF THE MACRO IN */\n /* THE  SYSPROC  CONCATENATION.    IF   THE   AUTHOR  HAS  INCLUDED */\n /* DOCUMENTATION WITHIN THE MACRO  IT  IS  AVAILABLE TO VIEW.  THIS */\n /* ALSO ASSURES  THAT  THE  MACRO  BEING  VIEWED  IS  THE ONE BEING */\n /* EXECUTED.                                                        */\n /*                                                                  */\n /* SYNTAX: HELPMAC                                                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO   (HELP)\n    IF &HELP = HELP  THEN DO\n     ISREDIT MACPEEK HELPMAC\n    EXIT\n    END\n    IF &HELP = ?  THEN DO\n     ISREDIT MACPEEK HELPMAC\n    EXIT\n    END\nISREDIT (MEM) = MEMBER\nISREDIT LOCATE 1\nISREDIT F 'ISREDIT MACRO'\nISREDIT (ROW,COL) =  CURSOR\nISREDIT (DATALINE) = LINE &ROW\nISREDIT LABEL &ROW = .X\nISREDIT FIND .X .X '('\nISREDIT (ROW,COL1) = CURSOR\nISREDIT FIND .X .X ','\nSET &COMMA = &LASTCC\nISREDIT (ROW,COL2) = CURSOR\nIF &COMMA \u00ac= 0 THEN DO\nISREDIT FIND .X .X ')'\nSET &BRACCC = &LASTCC\nIF &BRACCC \u00ac= 0 THEN GOTO NOVAR\nISREDIT (ROW,COL2) = CURSOR\nEND\nGOTO PROCESS\nNOVAR: +\nISREDIT F 'MACRO' .X .X\nISREDIT (ROW,COL) = CURSOR\nSET &PART1 = &SUBSTR(1:&EVAL(&COL + 5),&DATALINE)\nISREDIT LINE &ROW = \"&STR(&PART1 (HELP)\"\nSET &CMD = HELP\nGOTO CMDBLD\nPROCESS: +\nSET &CMD = &SUBSTR(&EVAL(&COL1+1):&EVAL(&COL2-1),&NRSTR(&DATALINE))\nCMDBLD: +\nSET &CMD = &&&CMD\nSET &L1 = &STR(    IF &STR(&&CMD) = HELP  THEN DO )\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L1)\"\nSET &ROW = &ROW + 1\nSET &L2 = &STR(     ISREDIT MACPEEK &MEM)\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L2)\"\nSET &ROW = &ROW + 1\nSET &L3 = &STR(    EXIT)\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L3)\"\nSET &ROW = &ROW + 1\nSET &L4 = &STR(    END)\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L4)\"\nSET &ROW = &ROW + 1\nSET &L5 = &STR(    IF &STR(&&CMD) = ?  THEN DO )\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L5)\"\nSET &ROW = &ROW + 1\nSET &L6 = &STR(     ISREDIT MACPEEK &MEM)\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L6)\"\nSET &ROW = &ROW + 1\nSET &L7 = &STR(    EXIT)\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L7)\"\nSET &ROW = &ROW + 1\nSET &L8 = &STR(    END)\nISREDIT LINE_AFTER &ROW = \"&NRSTR(&L8)\"\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INSERTM": {"ttr": 787, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x950_\\x00\\x950_\"\\x14\\x00w\\x00{\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1995-11-01T00:00:00", "modifydate": "1995-11-01T22:14:00", "lines": 119, "newlines": 123, "modlines": 0, "user": "E90138"}, "text": " /********************* INSERTM  ISPF EDIT MACRO *********************/\n /* INSERTM IS AN EDIT MACRO DESIGNED TO INSERT LINES OF DATA        */\n /* MULTIPLE TIMES WITHIN A DATA SET AFTER EACH N LINES. THE DEFAULT */\n /* IS AFTER 1 LINE. INSERTM ACCEPTS AN ARGUMENT WHICH WILL BE THE   */\n /* SPACING PARAMETER. THE ARGUMENT MUST BE A VALID NUMBER. THE DATA */\n /* TO BE USED FOR LATER INSERTION, MUST BE IDENTIFIED BY USING THE  */\n /* C RANGE COMMAND. ( CC - CC, CNNNN OR C ON THE LINE NUMBERS OF    */\n /* THE DATASET).                                                    */\n /*                                                                  */\n /* TO EXECUTE THE INSERTM MACRO, AFTER IDENTIFYING THE DATA TO BE   */\n /* INSERTED WITH THE C RANGE COMMAND ENTER INSERTM ON THE COMMAND   */\n /* LINE AND PRESS ENTER. THE DATA WILL BE COPIED TO THE ISPF SHARED */\n /* POOL, AND A MESSAGE WILL BE WRITTEN AT THE TOP OF THE DATASET.   */\n /*                                                                  */\n /* NORMALLY THE DATA INSERTED WITHIN THE CURRENT DATASET. IDENTIFY  */\n /* THE RANGE OF LINES TO HAVE THE DATA INSERTED WITH THE Z RANGE    */\n /* COMMAND (ZZ - ZZ, ZNNNN OR Z ON THE LINE NUMBERS OF THE DATASET).*/\n /* PRESSING THE PF10 KEY AFTER IDENTIFYING THE RANGE WILL EXECUTE   */\n /* A SECOND MACRO MPAST WHICH WILL INSERT THE LINES, AND RESET THE  */\n /* PF10 KEY TO IT'S ORIGINAL VALUE. IF THE INSERTM COMMAND IS       */\n /* EXECUTED AND THE SECOND PART (THE PF10 KEY IS NOT USED) THE VOID */\n /* MACRO WILL RESET THE PF10 KEY TO IT'S ORIGINAL VALUE.            */\n /* DATA MAY BE WRITTEN TO ANY DATASET BY FOLLOWING THE DIRECTIONS   */\n /* ABOVE. THE PF10 KEY MAY ONLY BE USED ONE TIME PER EXECUTION OF   */\n /* THE INSERTM MACRO. THE DATA REMAINS IN THE SHARED POOL, AND MAY  */\n /* BE USED MULTIPLE TIMES BU USING THE MPAST MACRO AFTER THE        */\n /* Z RANGE IS IDENTIFIED BEFORE EACH EXECUTION.                     */\n /*                                                                  */\n /* THE DATA WILL BE WRITTEN AS MESSAGE LINES. AFTER VERIFYING THE   */\n /* NEWLY INSERTED LINES ARE CORRECT. CONVERT THEM TO DATA WITH THE  */\n /* MD (MAKEDATA) LINE COMMAND. (MDMD - MDMD, MD9999, OR MD ON THE   */\n /* LINE NUMBERS BEGINNING WITHE THE FIRST MESSAGE LINE)             */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: INSERTM  {NN} OPTIONAL NUMBER OF LINES BETWEEN INSERTION */\n /* DEFAULT IS 1.                                                    */\n /*                                                                  */\n /********************************************************************/\n\n ISREDIT MACRO (PARM) NOPROCESS\n ISPEXEC CONTROL ERRORS RETURN\n IF &PARM \u00ac= THEN DO\n       SET SYSDVAL = &PARM\n       READDVAL AFTER,KEYWORD\n  END\n  IF &PARM = THEN SET &AFTER = 1\n        IF &DATATYPE(&AFTER) \u00ac= NUM THEN +\n          DO\n           SET ZEDSMSG = &STR(INVALID ARGUMENT)\n             SET ZEDLMSG = &STR(VALID ARGUMENT IS A +\n                          NUMBER, TO INSERT AFTER EACH NUMBER OF LINES)\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n        END\nISPEXEC VPUT (AFTER) SHARED\nISREDIT PROCESS RANGE C M\nSET LEVEL = 1\nSET RC = &LASTCC\nIF &RC = 4 THEN +\n  DO\n     SET ZEDSMSG = &STR(RANGE NOT SPECIFIED)\n     SET ZEDLMSG = &STR(SPECIFY RANGE FOR LINES TO INSERT +\n              AND REXECUTE THE INSERTM MACRO)\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(4)\n   END\nELSE +\n    IF &RC > 0 THEN +\n      DO\n     SET ZEDSMSG = &STR(SEVERE ERROR)\n     SET ZEDLMSG = &STR(SEVERE ERROR OCCURED, RETURN CODE WAS +\n                        &RC)\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(&RC)\n   END\n ISREDIT (CMD) = RANGE_CMD\n ISREDIT (FIRST) = LINENUM .ZFRANGE\n ISREDIT (LAST) = LINENUM .ZLRANGE\n SET   LINESTOCUT = &EVAL(&LAST-&FIRST+1)\n SET RCUTLM&LEVEL = &LINESTOCUT\n SET &TCUT = &LINESTOCUT\n ISREDIT (LBND,RBND) = BOUNDS\n SET RCUTLB&LEVEL = &LBND\n SET RCUTRB&LEVEL = &RBND\n ISPEXEC VPUT (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) SHARED\n SET RC = &LASTCC\n SET INDEX = 0\n CONTROL ASIS\n DO WHILE &INDEX < &LINESTOCUT\n   ISREDIT (WKLINE) = LINE &EVAL(&FIRST + &INDEX)\n   SET RCUT&LEVEL&EVAL(&INDEX+1) = &SUBSTR(&LBND:&RBND,&NRSTR(&WKLINE))\n   ISPEXEC VPUT (RCUT&LEVEL&EVAL(&INDEX+1)) SHARED\n   SET &RC = &LASTCC\n   SET INDEX  = &INDEX + 1\nEND\nSET &MSG1 = &STR(+\nYOU HAVE IDENTIFIED &TCUT LINES TO BE INSERTED AFTER EACH +\n&AFTER LINE(S))\nSET &MSG2 = &STR(+\nNOW IDENTIFY THE START DESTINATION AND END DESTINATION BY USING THE)\nSET &MSG3 = &STR(+\nZ RANGE COMMAND IE. ZZ TO ZZ OR ZNNN ON THE LINE NUMBERS OF THIS )\nSET &MSG4 = &STR(+\nMEMBER. AFTER SELECTING THE RANGE,  PRESS THE \"PF10 KEY\". IF YOU DO )\nSET &MSG5 = &STR(+\nNOT WISH TO EXECUTE THIS COMMAND NOW, ENTER \"VOID\" ON THE COMMAND LINE)\nSET &MSG6 = &STR(+\nAND PRESS ENTER.)\n  ISPEXEC VGET (ZPF10) PROFILE\n  SET &ISMPF10 = &ZPF10\n  SET &ZPF10 = MPAST\n  ISPEXEC VPUT (ZPF10 ISMPF10) PROFILE\nISREDIT LINE_BEFORE 1 = MSGLINE '&MSG1'\nISREDIT LINE_BEFORE 1 = MSGLINE '&MSG2'\nISREDIT LINE_BEFORE 1 = MSGLINE '&MSG3'\nISREDIT LINE_BEFORE 1 = MSGLINE '&MSG4'\nISREDIT LINE_BEFORE 1 = MSGLINE '&MSG5'\nISREDIT LINE_BEFORE 1 = MSGLINE '&MSG6'\nISREDIT LOCATE SPECIAL FIRST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISPYP1": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x950o\\x00\\x950o\\x124\\x00.\\x00.\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:34:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "E90138"}, "text": "%-------------------------------  DISPLAY PANEL  -------------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+PANEL NAME          %===>_ISPYPPN +\n+\n+MESSAGE ID          %===>_ISPYPMI +    (Optional)\n+\n+CURSOR FIELD        %===>_ISPYPCU +    (Optional)\n+\n+CURSOR POSITION     %===>_Z    +       (Optional)\n+\n+\n+\n+MESSAGE POP-UP FIELD%===>_ISPYML  +    (Optional)\n+\n+\n+\n+DISPLAY IN WINDOW   %===>_Z  +         (Yes or No)\n)INIT\nVGET (ISPYPPN) PROFILE\n  .ZVARS = '(ISPYPCO ISPYPOP)'\n  .HELP = ISP7P000\n  &ISPTEMP = TRUNC(&ISPYPOP,1)\n  IF (&ISPTEMP = 'Y')\n    &ISPYPOP = 'YES'\n  ELSE\n    &ISPYPOP = 'NO'\n)PROC\n  IF (&ZCMD \u00ac= ' ') .MSG= ISPZ001\n  &ISPTEMP = TRUNC(&ISPYPOP,1)\n  IF (&ISPTEMP = 'Y')\n    &ISPYPOP = 'YES'\n  ELSE\n  IF (&ISPTEMP = 'N')\n    &ISPYPOP = 'NO'\n  VER(&ISPYPCO,NUM)\n  VER(&ISPYPOP,NONBLANK,LIST,YES,NO)\nVPUT (ISPYPPN) PROFILE\n)help\n field(ispyppn) panel(ispyph1)\n field(ispypmi) panel(ispyph2)\n field(ispypcu) panel(ispyph3)\n field(ispyml) panel(ispyph4)\n field(ispypop) panel(ispyph5)\n field(ispypco) panel(ispyph6)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LINEGRP": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x00\\x93 \\x1f\\x00\\x95\\x08\\x9f\\x13@\\x00)\\x00\\x11\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1993-07-20T00:00:00", "modifydate": "1995-03-30T13:40:00", "lines": 41, "newlines": 17, "modlines": 0, "user": "E90138"}, "text": " /********************* LINEGRP  ISPF EDIT MACRO *********************/\n /* LINEGRP IS A HANDY  ISPF  EDIT  MACRO  THAT  ALLOWS YOU TO GROUP */\n /* LINES OF A DATASET TOGETHER.   THIS CAN BE USEFUL WHEN EXAMINING */\n /* A LARGE LIST WITH  THE  INTENT  OF  EXTRACTING  SOME OF THE DATA */\n /* LINES.  A COPY OF THE LINE SELECTED IS GROUPED AT THE TOP OF THE */\n /* FORM OF AN EDIT NOTELINE.   THE  ORIGINAL DATA IS NOT DISTURBED, */\n /* AND THE NOTELINES CAN  BE  CONVERTED  TO  DATA USING THE MD LINE */\n /* COMMAND OF EDIT.  THE MACRO  IS  ENTERED ON THE COMMAND LINE AND */\n /* THE CURSOR SHOULD BE ON THE TARGET  LINE.  A PFKEY CAN BE SET TO */\n /* THE VALUE LINEGRP TO HELP WHEN DOING A LARGE GROUP OF LINES.     */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: LINEGRP   {PLACE CURSON ON TARGET LINE}                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO  (HELP)\n    IF &HELP = HELP  THEN DO\n     ISREDIT MACPEEK LINEGRP\n    EXIT\n    END\n    IF &HELP = ?  THEN DO\n     ISREDIT MACPEEK LINEGRP\n    EXIT\n    END\nCONTROL MSG\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  ISREDIT (PTR,COL) = CURSOR\n  ISREDIT (NEWNOTE) = LINE &PTR\n  ISREDIT LINE_BEFORE 1 = NOTELINE +\n  \"&NRSTR(&NEWNOTE)\"\n  SET &NOTECC = &LASTCC\n IF &NOTECC < 8  THEN DO\n SET &PTR = &EVAL(&PTR)\n   SET ZEDSMSG = &STR(LINE &PTR CAPTURED)\n   SET ZEDLMSG = &STR(LINE &PTR HAS BEEN CAPTURED IN A NOTELINE AT TH+\n   E TOP OF THIS DATASET  )\n   ISPEXEC SETMSG MSG(ISRZ001)\n EXIT CODE(0)\n END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MACDOC": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x95\\x08o\\x00\\x95\\x08\\x7f\\t2\\x00O\\x00>\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1995-03-27T00:00:00", "modifydate": "1995-03-28T09:32:00", "lines": 79, "newlines": 62, "modlines": 0, "user": "E90138"}, "text": " /********************* MACDOC   ISPF EDIT MACRO *********************/\n /* MACDOC IS AN ISPF EDIT MACRO THAT PLACES A  COMMENT BOX IN THE   */\n /* CURRENT CLIST OR EDIT MACRO PROVIDING SPACE TO  DOCUMENT THE     */\n /* CLIST OR MACRO. THE MACRO NAME IS PLACED IN THE TOP LINE TO      */\n /* IDENTIFY THE MACRO, AND AGAIN IN THE FIRST LINE OF TEXT IN ORDER */\n /* TO START THE COMMENTARY. AT THE NEXT TO LAST LINE OF THE BOX A   */\n /* STARTER SYNTAX STATEMENT IS ALSO INCLUDED. MACDOC HAS A DEFAULT  */\n /* OF NINE LINES NOT INCLUDING TOP AND BOTTOM. MORE LINES CAN BE    */\n /* CREATED BY INCLUDING AN ARGUMENT WHEN ISSUING THE MACRO. THIS    */\n /* BOX WAS CREATED USING MACDOC. AN EDIT BEFORE OR AFTER INDICATOR  */\n /* WILL BE HONORED OTHERWISE THE BOX WILL WILL BE PLACED AT THE TOP */\n /* OF THE DATASET.                                                  */\n /*                                                                  */\n /* SYNTAX MACDOC  {NUMBER-LINES} OPTIONAL                           */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (LINES) NOPROCESS\n       IF &STR(&LINES) = ? THEN +\n           DO\n   ISREDIT MACPEEK MACDOC\n           EXIT\n           END\n    /* SET DEFAULT NUMBER OF LINES */\n    IF &LINES =   THEN SET &LINES = 9\n    SET &LINES = &LINES - 1\n  SET &BLNKS = &STR(        )\n\n  SET &STARS = &STR(*******)\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  ISREDIT PROCESS DEST\n    SET &DESTCC = &LASTCC\n      IF &DESTCC = 0 THEN DO\n       ISREDIT (WHERE) = RANGE_CMD\n       ISREDIT LOCATE .ZDEST\n       ISREDIT (PTR,COL) = CURSOR\n      END\n  IF &DESTCC = 8 THEN SET &PTR  = 0\n  IF &WHERE > B  THEN SET &PTR  = &PTR   - 1\n  ISREDIT (MEM) = MEMBER\n  IF &LENGTH(&MEM) NE 8 THEN DO\n  SET &MEM = &STR(&MEM&STR(        ))\n  SET &MEM = &SUBSTR(1:8,&STR(&MEM))\n  END\n  SET &SYN = &LINES - 2\n  SET &SYN1 =  &LINES - &SYN\n  SET &TOP = +\n   &STR(/&STARS&STARS&STARS )&STR(&MEM)+\n  &STR( ISPF EDIT MACRO &STARS&STARS&STARS/)\n  SET &BOTTOM = +\n   &STR(/&STARS&STARS&STARS&STARS&STARS&STARS&STARS&STARS&STARS*****/)\n  SET &LINE1  = +\n   &STR(/* )&STR(&MEM)&STR(                            )+\n  &STR(                             */)\n  SET &FILL   = +\n   &STR(/*                                   )+\n  &STR(                               */)\n  SET &SYNTAX = +\n   &STR(/* SYNTAX: )&STR(&MEM)&STR(                  )+\n  &STR(                               */)\n  ISREDIT LINE_AFTER &PTR = '&STR( &TOP)'\n  SET &PTR = &PTR + 1\n  ISREDIT LINE_AFTER &PTR = '&STR( &LINE1)'\n  SET &PTR = &PTR + 1\n  DO WHILE &LINES > 0\n  ISREDIT LINE_AFTER &PTR = '&STR( &FILL)'\n  SET &PTR = &PTR + 1\n  SET  &LINES = &LINES - 1\n  IF &SYN1 = &LINES THEN DO\n  ISREDIT LINE_AFTER &PTR = '&STR( &SYNTAX)'\n  SET &PTR = &PTR + 1\n  SET  &LINES = &LINES - 1\n  END\n  END\n  ISREDIT LINE_AFTER &PTR = '&STR( &BOTTOM)'\n  SET &PTR = &PTR + 1\n  ISREDIT LINE_AFTER &PTR = '&STR(    )'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MACPEEK": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x95\\x08?\\x00\\x95\\x18\\x7f\\x155\\x00#\\x00\\x05\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1995-03-24T00:00:00", "modifydate": "1995-07-06T15:35:00", "lines": 35, "newlines": 5, "modlines": 0, "user": "E90138"}, "text": " /********************* MACPEEK  ISPF EDIT MACRO *********************/\n /* MACPEEK IS A MACRO  THAT  WILL  FIND  A  MACRO  OR CLIST IN YOUR */\n /* SYSPROC  CONCATENATION  AND  BRING  IT  INTO  EDIT.   THIS  WILL */\n /* IDENTIFY THE FIRST OCCURANCE OF A  MACRO OR CLIST IN THE SYSPROC */\n /* CONCATENATION.  ALSO USEFUL FOR LOOKING A INTERNAL DOCUMENTATION */\n /* IN THE MACRO OR CLIST.                                           */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: MACPEEK MACNAME {OR CLISTNAME}                           */\n /*                                                                  */\n /********************************************************************/\n\n\nISREDIT MACRO (MEMBER) NOPROCESS\n     CONTROL MSG LIST SYMLIST CONLIST\n    IF &MEMBER = HELP  THEN DO\n     ISREDIT MACPEEK MACPEEK\n    EXIT\n    END\n    IF &MEMBER = ?  THEN DO\n     ISREDIT MACPEEK MACPEEK\n    EXIT\n    END\n  ISPEXEC  LMINIT DATAID(TARGET) DDNAME(SYSPROC) +\n                  ENQ(SHR)\nSET &LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(PROBLEM LMINIT)\n             SET ZEDLMSG = &STR(LMINIT COULD NOT INIITIALIZE DDNAME +\n              SYSPROC\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n   END\n  ISPEXEC  EDIT DATAID(&TARGET)  MEMBER(&MEMBER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MACVIEW": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\t_\\x00\\x95\\t_\\x11!\\x00\\x1a\\x00\\x1a\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-04-05T00:00:00", "modifydate": "1995-04-05T11:21:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "E90138"}, "text": " /********************* MACVIEW  TSO/E CLIST     *********************/\n /* MACVIEW IS A CLIST  THAT  WILL  FIND  A  MACRO  OR CLIST IN YOUR */\n /* SYSPROC  CONCATENATION  AND  BRING  IT  INTO  EDIT.   THIS  WILL */\n /* IDENTIFY THE FIRST OCCURANCE OF A  MACRO OR CLIST IN THE SYSPROC */\n /* CONCATENATION.  ALSO USEFUL FOR LOOKING A INTERNAL DOCUMENTATION */\n /* IN THE MACRO OR CLIST.                                           */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: MACVIEW MACNAME {OR CLISTNAME}                           */\n /*                                                                  */\n /********************************************************************/\n\n\nPROC 1  MEMBER\n  ISPEXEC  LMINIT DATAID(TARGET) DDNAME(SYSPROC) +\n                  ENQ(SHR)\nSET &LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(PROBLEM LMINIT)\n             SET ZEDLMSG = &STR(LMINIT COULD NOT INIITIALIZE DDNAME+\n             ISPPLIB\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n   END\n  ISPEXEC  BROWSE DATAID(&TARGET)  MEMBER(&MEMBER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MARK": {"ttr": 1038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x950o\\x00\\x950o\\x11\\x16\\x000\\x000\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T11:16:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "E90138"}, "text": " /********************* MARK     ISPF EDIT MACRO *********************/\n /* MARK IS AN EDIT MACRO THAT  WILL  'MARK' THE CURRENT MEMBER OF A */\n /* PDS FOR LATER  DELETION  BY  THE  DELMARK  MACRO.   WHEN MARK IS */\n /* EXECUTED IT MARKS THE MEMBER AND THEN TERMINATES THE EDIT OF THE */\n /* CURRENT MEMBER.   THE CURRENT  DATASET  NAME  IS  SAVED WITH THE */\n /* MARKED MEMBER NAMES TO  PREVENT  ACCIDENTIAL DELETION FROM A PDS */\n /* OTHER THAN THE PDS WHERE THE MACRO WAS EXECUTED.                 */\n /*                                                                  */\n /* FOR RAPID HOUSE CLEANING SET A PFKEY TO THE VALUE MARK.          */\n /*                                                                  */\n /* SYNTAX: MARK                                                     */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISPEXEC VGET DELDSN PROFILE\nIF &DELDSN = THEN DO\nISREDIT (DELDSN) = DATASET\nEND\nIF &DELDSN \u00ac= THEN DO\nISREDIT (THISPDS) = DATASET\nIF &DELDSN \u00ac= &THISPDS THEN DO\n   SET ZEDSMSG = &STR(WRONG DSN)\n SET ZEDLMSG = &STR(YOU HAVE MEMBERS MARKED FOR DELETION IN &DELDSN +\n RUN MARKCLR OR CHANGE TO &DELDSN AND EXECUTE DELMARK)\n   ISPEXEC SETMSG MSG(ISRZ001)\n   EXIT\n  END\nEND\nISREDIT (THISPDS) = DATASET\nIF &DELDSN \u00ac= &THISPDS THEN DO\n   SET ZEDSMSG = &STR(WRONG DSN)\n SET ZEDLMSG = &STR(YOU HAVE MEMBERS MARKED FOR DELETION IN &DELDSN +\n RUN MARKCLR OR CHANGE TO &DELDSN AND EXECUTE DELMARK)\n   ISPEXEC SETMSG MSG(ISRZ001)\n   EXIT\n  END\nISREDIT (DELDSN) = DATASET\nISREDIT (MEM)  = MEMBER\nISPEXEC VGET DELLST PROFILE\nSET &DELLST = &STR(&DELLST &STR(&MEM))\nSET &DELLAST = &STR(&MEM)\nISPEXEC VPUT (DELLST,DELLAST,DELDSN) PROFILE\n   SET ZEDSMSG = &STR(&MEM MARKED)\n   SET ZEDLMSG = &STR(&MEM MARKED FOR DELETION BY DELMARK MACRO      +\n                        )\n   ISPEXEC SETMSG MSG(ISRZ001)\n ISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MARKCLR": {"ttr": 1040, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x95\\x08\\x8f\\x00\\x95\\x08\\x8f\\x13\\x13\\x00\\x1b\\x00\\t\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-03-29T00:00:00", "modifydate": "1995-03-29T13:13:00", "lines": 27, "newlines": 9, "modlines": 0, "user": "E90138"}, "text": " /********************* MARKCLR  ISPF EDIT MACRO *********************/\n /* MARKCLR IS AN EDIT MACRO TO CLEAR THE PROFILE OF ANY VARIABLES   */\n /* SET BY THE MARK EDIT MACRO.                                      */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: MARKCLR                                                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (HELP)\nIF &HELP = HELP  THEN DO\n ISREDIT MACPEEK MARKCLR\nEXIT\nEND\nIF &HELP = &STR(?) THEN DO\n ISREDIT MACPEEK MARKCLR\nEXIT\nEND\nSET &DELDSN =\nSET &DELLAST =\nSET &DELLST =\nISPEXEC VPUT (DELDSN,DELLST,DELLAST) PROFILE\n   SET ZEDSMSG = &STR(LIST CLEARED)\n   SET ZEDLMSG = &STR(DELETION LIST CREATED BY THE MARK EDIT MACRO +\n   HAS NOW BEEN CLEARED )\n   ISPEXEC SETMSG MSG(ISRZ001)\n EXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MEMDEL": {"ttr": 1042, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x1b\\x00\\x00\\x00\\x950o\\x00\\x950o\\x186\\x00'\\x00$\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@\"", "ispf": {"version": "01.27", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T18:36:00", "lines": 39, "newlines": 36, "modlines": 0, "user": "E90138"}, "text": " /********************* MEMDEL   ISPF EDIT MACRO *********************/\n /* MEMDEL WILL BUILD A  TEMPORARY  MEMBER  WHICH CONTAINS A LIST OF */\n /* MEMBER NAMES FROM THE CURRENT  PDS.  IF ANY MEMBERS ARE SELECTED */\n /* FROM THE LIST BY REPLACING THE '_' WITH AN 'X' THEY WILL THEN BE */\n /* DELETED.  AN OPTIONAL  RANGE  OF  MEMBERS  MAY  BE SELECTED WHEN */\n /* ISSUING THE MEMDEL MACRO, THE DEFAULT IS THE WHOLE DIRECTORY.    */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: MEMDEL {ABC HJK} <= OPTIONAL                             */\n /*                                                                  */\n /********************************************************************/\n\n ISREDIT MACRO (FROM,TO) NOPROCESS\n ISREDIT REP Z9999999 1 1\n ISREDIT (WORKDSN) = DATASET\n ISPEXEC VPUT (FROM,TO) SHARED\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&WORKDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(OUTPUT)\n  ISPEXEC  LMMDEL  DATAID(&PDSID) MEMBER(########)\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\n SET &Z9 = Z9999999\n ISPEXEC EDIT DATASET('&WORKDSN(########)')  MACRO(MEMLSTX)\n ISPEXEC EDIT DATASET('&WORKDSN(########)')  MACRO(MEMLST1)\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&WORKDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(OUTPUT)\n  ISPEXEC  LMMDEL  DATAID(&PDSID) MEMBER(########)\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\nISREDIT MOVE Z9999999 AFTER .ZLAST\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MEMLSTX": {"ttr": 1044, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00\\x00\\x00\\x95\\x08/\\x00\\x950o\\x10S\\x00\\x85\\x00{\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "1995-03-23T00:00:00", "modifydate": "1995-11-02T10:53:00", "lines": 133, "newlines": 123, "modlines": 0, "user": "E90138"}, "text": " /********************* MEMLSTX  ISPF EDIT MACRO *********************/\n /* MEMLSTX IS A SPECIAL PURPOSE MACRO CALL BY THE MEMDEL MACRO.  IT */\n /* PRODUCES A MEMBER LIST FOR  THE  IDENTIFICATION OF MEMBERS TO BE */\n /* DELETED.                                                         */\n /*                                                                  */\n /* THE MEMLSTX ISPF EDIT  MACRO  WILL  BUILD  A  MEMBER LIST OF THE */\n /* CURRENT PDS IN EDIT.   THE  RANGE  OF  MEMBERS  TO LISTED MAY BE */\n /* LIMITED BY INCLUDING  LIMITING  STRINGS  WHEN ISSUING THE MEMDEL */\n /* MACRO.  THE DEFAULT IS ALL MEMBERS.                              */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: NONE                                                     */\n /*                                                                  */\n /********************************************************************/\n\n ISREDIT MACRO (FROM,TO) NOPROCESS\n ISPEXEC VGET (FROM,TO) SHARED\n ISREDIT (WORKDSN) = DATASET\n SET &Z9 = Z9999998\n SET &ZX = Z9999999\n IF &FROM = ? THEN DO\n ISPEXEC DISPLAY PANEL(MEMLIST)\n EXIT\n END\n IF &FROM \u00ac= THEN SET &RT = &STR(RANGE &FROM TO &TO)\n IF &TO = THEN SET &TO = &Z9\n SET &TARGET1 = &FROM\n SET T1 = &LENGTH(&TARGET1)\n IF &FROM =  THEN SET &T1 = 8\n SET &TARGET2 = &TO\n SET T2 = &LENGTH(&TARGET2)\nSET  PDSDSN = &WORKDSN\nSET &LPTR = 1\nISREDIT LINE_AFTER 0 =  +\n\" MEMBER(S) OF &WORKDSN REPLACE '_' WITH 'X' BEFORE MEMBER(S) TO DELETE\"\n/* INITIALIZE DATASET */\nISPEXEC  LMINIT DATAID(PDSID) DATASET('&PDSDSN') +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\n\n/* OPEN DATA SET */\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)\nSET LMRC = &LASTCC\n\nSET &MCTR = 1\nDO WHILE (&LMRC = 0)\nSET &MCTR = &MCTR + 1\n  /* BUILD MEMBER LIST AND RETURN NEXT MEMBER */\n  ISPEXEC LMMLIST DATAID(&PDSID) -\n        OPTION(LIST) MEMBER(MEMBER) -\n        STATS(NO)\n  SET LMRC = &LASTCC\n  SET &LM1 = &LMRC\nIF &LMRC \u00ac= 0 THEN GOTO SETIT\n     IF &SUBSTR(1:&T1,&MEMBER) GT &TARGET2 THEN SET &LM1 = X\n  ISPEXEC LMMLIST DATAID(&PDSID) -\n        OPTION(LIST) MEMBER(MEMBER2) -\n        STATS(NO)\n  SET LMRC = &LASTCC\n  SET &LM2 = &LMRC\nIF &LMRC \u00ac= 0 THEN GOTO SETIT\n     IF &SUBSTR(1:&T1,&MEMBER2) GT &TARGET2 THEN SET &LM2 = X\n  ISPEXEC LMMLIST DATAID(&PDSID) -\n        OPTION(LIST) MEMBER(MEMBER3) -\n        STATS(NO)\n  SET LMRC = &LASTCC\n  SET &LM3 = &LMRC\n     IF &SUBSTR(1:&T1,&MEMBER3) GT &TARGET2 THEN SET &LM3 = X\nIF &LMRC \u00ac= 0 THEN GOTO SETIT\n  ISPEXEC LMMLIST DATAID(&PDSID) -\n        OPTION(LIST) MEMBER(MEMBER4) -\n        STATS(NO)\n  SET LMRC = &LASTCC\n  SET &LM4 = &LMRC\n     IF &SUBSTR(1:&T1,&MEMBER4) GT &TARGET2 THEN SET &LM4 = X\nIF &LMRC \u00ac= 0 THEN GOTO SETIT\n  ISPEXEC LMMLIST DATAID(&PDSID) -\n        OPTION(LIST) MEMBER(MEMBER5) -\n        STATS(NO)\n  SET LMRC = &LASTCC\n  SET &LM5 = &LMRC\n     IF &SUBSTR(1:&T1,&MEMBER5) GT &TARGET2 THEN SET &LM5 = X\nIF &LMRC \u00ac= 0 THEN GOTO SETIT\n  IF &LMRC = 0 THEN /* NOT END OF MEMBER LIST */ +\n     DO\n     IF &SUBSTR(1:&T1,&MEMBER) GE &TARGET1 AND +\n      &SUBSTR(1:&T2,&MEMBER) LE &TARGET2  THEN DO\nSETIT: +\nIF &LM1 = 0 THEN +\nSET &MEMLINE = +\n&STR( _&MEMBER)\nIF &LM2 = 0 THEN +\nSET &MEMLINE = +\n&STR( _&MEMBER    _&MEMBER2)\nIF &LM3 = 0 THEN +\nSET &MEMLINE = +\n&STR( _&MEMBER    _&MEMBER2    _&MEMBER3)\nIF &LM4 = 0 THEN +\nSET &MEMLINE = +\n&STR( _&MEMBER    _&MEMBER2    _&MEMBER3    _&MEMBER4)\nIF &LM5 = 0 THEN +\nSET &MEMLINE = +\n&STR( _&MEMBER    _&MEMBER2    _&MEMBER3    _&MEMBER4    _&MEMBER5)\nISREDIT LINE_AFTER  &LPTR =  \"&MEMLINE\"\n   SET &LPTR = &LPTR + 1\nSET &MEMBER  = &ZX\nSET &MEMBER2 = &ZX\nSET &MEMBER3 = &ZX\nSET &MEMBER4 = &ZX\nSET &MEMBER5 = &ZX\nSET &LM1 =\nSET &LM2 =\nSET &LM3 =\nSET &LM4 =\nSET &LM5 =\n       END\n     END\n END\n/* FREE MEMBER LIST */\nISPEXEC LMMLIST DATAID(&PDSID) OPTION(FREE)\n/* CLOSE DATA SET */\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\n\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MOVECOL#": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x950o\\x00\\x950o\\x12X\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:58:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "E90138"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MOVECOLS": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x950o\\x00\\x950o\\x18I\\x008\\x009\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T18:49:00", "lines": 56, "newlines": 57, "modlines": 0, "user": "E90138"}, "text": "   ISREDIT MACRO (START STOP TO) NOPROCESS\n        IF &STR(&START) = HELP THEN +\n            DO\n            ISPEXEC SELECT PGM(ISPTUTOR) PARM(MOVECOLS)\n            EXIT\n            END\n\n   ISPEXEC CONTROL ERRORS RETURN\n   CONTROL ASIS\n   ISREDIT PROCESS RANGE C\n   SET LCC = &LASTCC\n   ISREDIT (RC) = RANGE_CMD\n   IF &LASTCC = 4 | &STR(&RC) \u00ac= &STR(C) THEN DO\n      SET &ZEDSMSG = NO RANGE SPECIFIED\n      SET &ZEDLMSG = YOU MUST SPECIFY A RANGE OF LINES TO BE MANIPULAT+\n         ED A \"C<N>\" OR \"CC\"\n      ISPEXEC SETMSG MSG(ISRZ001)\n      EXIT CODE(12)\n   END\n   IF &STOP =  | &START =  | &TO =  THEN DO\n      SET &ZEDSMSG = INVALID MOVE DATA\n      SET &ZEDLMSG = YOU MUST SPECIFY A START AND START COLUMNS AND DE+\n         STINATION OF DATA TO BE MOVED\n      ISPEXEC SETMSG MSG(ISRZ001)\n      EXIT CODE(12)\n   END\n   ISREDIT (FR) = LINENUM .ZFRANGE\n   ISREDIT (LR) = LINENUM .ZLRANGE\n   ISREDIT (LB,RB) = BOUNDS\n   SET BL = &RB - &LB + 1\n   SET I = &FR\n   DO WHILE( &I <= &LR )\n      ISREDIT (LN) = LINE &I\n      SET &HOLD = &NRSTR(&LN)\n      SET SEGX = &STR(&SUBSTR(&START:&STOP,&NRSTR(&LN)))\n      IF &START = 1 THEN DO\n      SET &SEG1 =\n      GOTO SEG2\n      END\n      SET SEG1 = &SUBSTR(&LB:&START-1,&NRSTR(&LN))\nSEG2: +\n      SET SEG2 = &SUBSTR(&STOP+1:&RB,&NRSTR(&LN))\n   SET &LINE = &NRSTR(&SEG1&SEG2)\n   IF &TO = 1 THEN DO\n   SET &SEGA =\n   GOTO SEGB\n   END\n      SET SEGA = &SUBSTR(&LB:&TO-1,&NRSTR(&LINE))\nSEGB: +\n  SET SEGB = &STR(&SUBSTR(&TO:&LENGTH(&NRSTR(&LINE)),&NRSTR(&LINE)))\n   SET &LINE = &NRSTR(&SEGA&SEGX&SEGB)\n      ISREDIT LINE &I = (LINE)\n      SET I = &I + 1\n   END\nEXIT CODE(0)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MOVFIEL#": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x950o\\x00\\x950o\\x12Y\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:59:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "E90138"}, "text": ")ATTR DEFAULT(%!_)\n       %   TYPE(TEXT) INTENS(HIGH)\n       !   TYPE(TEXT) INTENS(LOW)\n       _   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)\n)BODY\n%EDITMAC  ------------------ MOVFIELD  MACRO  ------------------------  TUTORIAL\n%COMMAND ===>_ZCMD                                                             !\n!\n!THE%MOVFIELD!MACRO IS USED MOVE A FIELD TO A NEW SET OF LINES FOR THE\n!PURPOSE OF EDITING THE NEW LINES AND OVERLAYING THE ORIGINAL LINES.\n!\n!USE:\n!TYPE%MOVFIELD!ON THE COMMAND LINE FOLLOWED BY THE START AND END COLUMN\n NUMBERS OF THE FIELD TO BE MOVED.\n!\n%COMMAND ===> MOVFIELD 16 21\n!***************************** TOP OF DATA *************************************\n%=COLS>  ----+----1----+----2----+----3----+----4----+----5----+----6----+----7-\n!CC0001  1I1JLK1LLS899--SA22PP;;777SSKLL';'244677822--099896654412233KK2\n!CC0002  1I1JLK1000899--SA2222;;7RRSSKLL';'987677822--099896654412233KK2\n!\n%RESULT:\n!***************************** TOP OF DATA *************************************\n%=COLS>  ----+----1----+----2----+----3----+----4----+----5----+----6----+----7-\n!000001  1I1JLK1LLS899--      ;;777SSKLL';'244677822--099896654412233KK2\n!000002  1I1JLK1000899--      ;;7RRSSKLL';'987677822--099896654412233KK2\n                        SA22PP\n                        SA2222\n)PROC\n&KEY = .PFKEY\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MOVFIELD": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1e\\x00\\x00\\x00\\x950o\\x00\\x950o\\x12Y\\x00A\\x00A\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.30", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T12:59:00", "lines": 65, "newlines": 65, "modlines": 0, "user": "E90138"}, "text": "  ISREDIT MACRO (START STOP) NOPROCESS\n       IF &STR(&START) = HELP THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(MOVFIEL#)\n           EXIT\n           END\n\n       IF &STR(&START) = ? THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(MOVFIELD)\n           EXIT\n           END\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  ISREDIT PROCESS RANGE C\n  SET LCC = &LASTCC\n  ISREDIT (RC) = RANGE_CMD\n  IF &LASTCC = 4 | &STR(&RC) \u00ac= &STR(C) THEN DO\n     SET &ZEDSMSG = NO RANGE SPECIFIED\n     SET &ZEDLMSG = YOU MUST SPECIFY A RANGE OF LINES TO BE MANIPULAT+\n        ED A \"C<N>\" OR \"CC\"\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(12)\n  END\n  ISREDIT F '~'\n      IF &LASTCC = 0 THEN DO\n     SET &ZEDSMSG = &STR(CHARACTER '~' FOUND)\n     SET &ZEDLMSG = &STR(CHARACTER '~' IS USED IN THE MOVFIELD MACRO +\n        AN WILL BE DESTROYED)\n     ISPEXEC SETMSG MSG(ISRZ001)\n     EXIT CODE(0)\n    END\n  ISREDIT C X'50'  'A1'X  ALL\n  ISREDIT (FR) = LINENUM .ZFRANGE\n  ISREDIT (LR) = LINENUM .ZLRANGE\n  ISREDIT (LB,RB) = BOUNDS\n  ISREDIT LABEL &FR = .A\n  ISREDIT LABEL &LR = .B\n  SET BL = &RB - &LB + 1\n  SET I = &FR\n  SET &NS = &LR + 1\n  SET &NL = &LR\n  DO WHILE( &I <= &LR )\n     ISREDIT (LN) = LINE &I\n     ISREDIT LINE_AFTER &NL = '&LN'\n     SET &I = &I + 1\n     SET &NL = &NL + 1\n     END\n  ISREDIT C X'A1'  '50'X  ALL\n  ISREDIT LABEL &NS = .C\n  ISREDIT LABEL &NL = .D\n  ISREDIT C P'=' ' '  &START &STOP .A  .B ALL\n  SET &RB1 = &START - 1\n  SET &RB2 = &STOP + 1\n  IF &START  > 1 THEN DO\n  ISREDIT C P'=' ' '  &LB  &RB1 .C  .D ALL\n  END\n  IF &START = 2 THEN DO\n  ISREDIT C P'=' ' '  1 1  .C  .D ALL\n  END\n  IF &STOP < &RB THEN DO\n  ISREDIT C P'=' ' '  &RB2 &RB  .C  .D ALL\n  END\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MPAST": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x950_\\x00\\x950_\"\\'\\x00C\\x00\\x8b\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1995-11-01T00:00:00", "modifydate": "1995-11-01T22:27:00", "lines": 67, "newlines": 139, "modlines": 0, "user": "E90138"}, "text": " /********************* MPAST    ISPF EDIT MACRO *********************/\n /* MPAST IS AN EDIT MACRO TO INSERT LINES OF DATA WRITTEN TO THE    */\n /* SHARED POOL BY THE INSERTM MACRO. A RANGE MUST BE IDENTIFIED     */\n /* USING THE Z RANGE COMMAND. (ZZ - ZZ, ZNNNN, OR Z ON THE LINE     */\n /* NUMBERS OF THE DATASET)                                          */\n /* IT MAY BE EXECUTED MULTIPLE TIMES UNTIL ANOTHER EXECUTION OF THE */\n /* INSERTM MACRO OR THE ISPF SESSION IS TERMINATED.                 */\n /*                                                                  */\n /* SYNTAX: MPAST                                                    */\n /*                                                                  */\n /********************************************************************/\n\n ISREDIT MACRO (PARM) NOPROCESS\n ISPEXEC CONTROL ERRORS RETURN\n ISPEXEC VGET (AFTER) SHARED\n SET LEVEL = 1\n ISREDIT LINE_AFTER .ZLAST = ' '\n ISREDIT PROCESS RANGE Z\n ISREDIT RESET SPECIAL\n SET &DCC = &LASTCC\n IF &DCC > 8 THEN  +\n    DO\n           SET ZEDSMSG = &STR(START LINE MISSING)\n         SET ZEDLMSG = &STR(A RANGE OR STARTING LINE WAS NOT +\n                            PROVIDED - SPECIFY AND RE-EXECUTE)\n           ISPEXEC SETMSG MSG(ISRZ001)\n           EXIT CODE(12)\n   END\n   ISREDIT (FIRST) = LINENUM .ZFRANGE\n   ISREDIT (LAST) = LINENUM .ZLRANGE\n   ISREDIT (ILINE) = LINENUM &FIRST\nLOOP: +\nISPEXEC VGET (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) SHARED\nIF &LASTCC > 0 THEN +\n  DO\n           SET ZEDSMSG = &STR(NO DATA TO INSERT)\n             SET ZEDLMSG = &STR(NO DATA LINES WERE PROVIDED REDO +\n             INSERTM)\n           ISPEXEC SETMSG MSG(ISRZ001)\n           EXIT CODE(12)\n        END\nSET LINES = &&RCUTLM&LEVEL\nSET LINESTOPASTE = &LINES\nSET LBND = &&RCUTLB&LEVEL\nSET LBND = &LBND\nSET RBND = &&RCUTRB&LEVEL\nSET RBND = &RBND\nISREDIT (LHBND,RHBND) = BOUNDS\n CONTROL ASIS\n   IF &EMPTY = YES THEN +\n    SET ILINE = 0\n  SET INDEX = 0\n DO WHILE &INDEX < &LINESTOPASTE\n ISPEXEC VGET RCUT&LEVEL&EVAL(&INDEX+1) SHARED\n ISREDIT LINE_BEFORE &EVAL(&ILINE + 1) = MSGLINE +\n < (LBND) (RCUT&LEVEL&EVAL(&INDEX+1)) >\n   SET INDEX  = &INDEX + 1\n END\n SET &ILINE = &ILINE + &AFTER\n IF &ILINE > &LAST THEN GOTO RESET\n GOTO LOOP\nRESET: +\n  ISPEXEC VGET (ZPF10 ISMPF10) PROFILE\n  SET &ZPF10 = &ISMPF10\n  ISPEXEC VPUT (ZPF10) PROFILE\nISREDIT DEL .ZLAST\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGMAKE": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93\\x19_\\x00\\x95\\x08\\x9f\\x13P\\x00T\\x00H\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-07-14T00:00:00", "modifydate": "1995-03-30T13:50:00", "lines": 84, "newlines": 72, "modlines": 0, "user": "E90138"}, "text": " /********************* MSGMAKE  ISPF EDIT MACRO *********************/\n /* MSGMAKE IS AN ISPF EDIT MACRO  IS USED TO CREATE AN ISPF MESSAGE */\n /* STUB WITHIN A CLIST OR  ISPF  EDIT  MACRO.  ENTER MSGMAKE ON THE */\n /* COMMAND LINE AND USE  THE  A  OR  B DESTINATION INDICATOR ON THE */\n /* LINE WHERE A MESSAGE COMMAND IS  TO BE PLACED.  THE TEXT THAT IS */\n /* NEEDED WILL BE PLACED INTO  THE  DATA.  THE USER CAN THEN CHANGE */\n /* THE CONDITION NEEDED FOR THE  EXECUTION  OF THE MESSAGE, AND THE */\n /* MESSAGE TEXT THAT SHOULD BE DISPLAYED.                           */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: MSGMAKE                                                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (HELP) NOPROCESS\n\n       IF &STR(&HELP) = HELP THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(MSGMAKE)\n           EXIT\n           END\n\n       IF &STR(&HELP) = ? THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(MSGMAKE)\n           EXIT\n           END\n SET &RBRAC = &STR())\n SET &AMPR  = &NRSTR(&&)\n SET &LBRAC = &STR((\nSTART: +\n SET &LNE1 = +\n &NRSTR( IF {CONDITION}  THEN DO  )\n SET &LNE2 = +\n &NRSTR(   SET ZEDSMSG = &NRSTR(&AMPR)STR(SHORT MSG TEXT &RBRAC\n SET &LNE3 = +\n &NRSTR(   SET ZEDLMSG = &NRSTR(&AMPR)STR(MESSAGE LONG TEXT HERE      +\n       &NRSTR(                   +)\n SET &LNE4 = +\n &NRSTR(                        &RBRAC)\n SET &LNE5 = +\n &NRSTR(   ISPEXEC SETMSG MSG(ISRZ001))\n SET &LNE6 = +\n &NRSTR( END)\nDEST: +\n  ISREDIT PROCESS DEST\n  SET &MYCC = &LASTCC\n  IF &MYCC = 8 THEN GOTO EMPTY\n  IF &MYCC = 0 THEN DO\n  ISREDIT LOCATE .ZDEST\n  ISREDIT (ROW,COL) = CURSOR\n       ISREDIT MASKLINE = \"&LNE1\"\n       ISREDIT LINE_AFTER &ROW = MASKLINE\n       ISREDIT MASKLINE = \"&LNE2\"\n       ISREDIT LINE_AFTER &EVAL(&ROW + 1)  = MASKLINE\n       ISREDIT MASKLINE = \"&LNE3\"\n       ISREDIT LINE_AFTER &EVAL(&ROW + 2)  = MASKLINE\n       ISREDIT MASKLINE = \"&LNE4\"\n       ISREDIT LINE_AFTER &EVAL(&ROW + 3)  = MASKLINE\n       ISREDIT MASKLINE = \"&LNE5\"\n       ISREDIT LINE_AFTER &EVAL(&ROW + 4)  = MASKLINE\n       ISREDIT MASKLINE = \"&LNE6\"\n       ISREDIT LINE_AFTER &EVAL(&ROW  + 5)  = MASKLINE\n       ISREDIT MASKLINE = ' '\n    GOTO ERROROUT\nEMPTY: +\n       ISREDIT MASKLINE = \"&LNE6\"\n       ISREDIT LINE_BEFORE 1 = MASKLINE\n       ISREDIT MASKLINE = \"&LNE5\"\n       ISREDIT LINE_BEFORE 1 = MASKLINE\n       ISREDIT MASKLINE = \"&LNE4\"\n       ISREDIT LINE_BEFORE 1 = MASKLINE\n       ISREDIT MASKLINE = \"&LNE3\"\n       ISREDIT LINE_BEFORE 1 = MASKLINE\n       ISREDIT MASKLINE = \"&LNE2\"\n       ISREDIT LINE_BEFORE 1 = MASKLINE\n       ISREDIT MASKLINE = \"&LNE1\"\n       ISREDIT LINE_BEFORE 1 = MASKLINE\nERROROUT:+\n       ISREDIT MASKLINE = ' '\n      SET RC = 0\n  END\n  END\n  EXIT CODE(&RC)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PANPEEK": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x95\\x08?\\x00\\x950\\x7f\"\\'\\x00\\x1f\\x00\\x04\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1995-03-24T00:00:00", "modifydate": "1995-11-03T22:27:00", "lines": 31, "newlines": 4, "modlines": 0, "user": "E90138"}, "text": " /********************* PANPEEK  ISPF EDIT MACRO *********************/\n /* PANPEEK IS AN EDIT MACRO THAT WILL FIND THE FIRST OCCURANCE OF A */\n /* PANEL IN YOUR ISPPLIB CONCATENATION AND BRING IT INTO EDIT.      */\n /*                                                                  */\n /* NOTE: ONLY 4 DATASETS ALLOWED IN CONCATENATION (ISPF RESTRICTION)*/\n /*                                                                  */\n /* SYNTAX: PANPEEK PANLNAME                                         */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (MEMBER) NOPROCESS\n    IF &MEMBER = HELP  THEN DO\n     ISREDIT MACPEEK PANPEEK\n    EXIT\n    END\n    IF &MEMBER = ?  THEN DO\n     ISREDIT MACPEEK PANPEEK\n    EXIT\n    END\n  ISPEXEC  LMINIT DATAID(TARGET) DDNAME(ISPPLIB) +\n                  ENQ(SHR)\nSET &LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(PROBLEM LMINIT)\n             SET ZEDLMSG = &STR(LMINIT COULD NOT INIITIALIZE DDNAME+\n             ISPPLIB\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n   END\n  ISPEXEC EDIT DATAID(&TARGET)  MEMBER(&MEMBER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PANVIEW": {"ttr": 1296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95\\t_\\x00\\x950\\x7f\"\\'\\x00\\x1c\\x00\\x1a\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-04-05T00:00:00", "modifydate": "1995-11-03T22:27:00", "lines": 28, "newlines": 26, "modlines": 0, "user": "E90138"}, "text": " /********************* PANVIEW  TSO/E CLIST     *********************/\n /* PANVIEW IS A CLIST  THAT  WILL  FIND  A  MACRO  OR CLIST IN YOUR */\n /* SYSPROC  CONCATENATION  AND  BRING  IT  INTO  EDIT.   THIS  WILL */\n /* IDENTIFY THE FIRST OCCURANCE OF A  MACRO OR CLIST IN THE SYSPROC */\n /* CONCATENATION.  ALSO USEFUL FOR LOOKING A INTERNAL DOCUMENTATION */\n /* IN THE MACRO OR CLIST.                                           */\n /*                                                                  */\n /*                                                                  */\n /* NOTE: ONLY 4 DATASETS ALLOWED IN CONCATENATION (ISPF RESTRICTION)*/\n /*                                                                  */\n /* SYNTAX: PANVIEW MACNAME {OR CLISTNAME}                           */\n /*                                                                  */\n /********************************************************************/\n\n\nPROC 1  MEMBER\n  ISPEXEC  LMINIT DATAID(TARGET) DDNAME(ISPPLIB) +\n                  ENQ(SHR)\nSET &LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(PROBLEM LMINIT)\n             SET ZEDLMSG = &STR(LMINIT COULD NOT INIITIALIZE DDNAME+\n             ISPPLIB\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n   END\n  ISPEXEC  BROWSE DATAID(&TARGET)  MEMBER(&MEMBER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SALTER": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\"/\\x00\\x95\"/\\x08\\t\\x00>\\x00>\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-08-10T00:00:00", "modifydate": "1995-08-10T08:09:00", "lines": 62, "newlines": 62, "modlines": 0, "user": "CLIST"}, "text": " PROC 0\n START: +\nISPEXEC VGET (DSDSN)  PROFILE\nSET &DSN = &DSDSN\nISPEXEC DISPLAY PANEL(CHGSTS)\nSET &PDSDSN = &DSN\nSET &MEMBER = &MEM\nSET &DSDSN = &DSN\nIF &MEM = END THEN GOTO  QUIT\nIF &PV  = PF03   THEN GOTO  QUIT\nISPEXEC VPUT (DSDSN)  PROFILE\n/* INITIALIZE DATASET */\nISPEXEC  LMINIT DATAID(PDSID) DATASET(&PDSDSN) +\n                ENQ(SHRW)                        +\n                ORG(PDSORG)\nSET LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n      WRITE LMINIT FAILED - RETURN CODE &LMRC\n      WRITE DATA SET IS NOT ALLOCATED OR NOT PARTITIONED\n      EXIT CODE(8)\n   END\n\n/* OPEN DATA SET */\nISPEXEC LMOPEN DATAID(&PDSID) OPTION(INPUT)\n  ISPEXEC LMMFIND DATAID(&PDSID) -\n        MEMBER(&MEMBER) -\n        STATS(YES)\nSET &MBRNAME =  &MEMBER\nSET &VER1 =     &ZLVERS\nSET &MOD1 =     &ZLMOD\nSET &CDATE =    &ZLCDATE\nSET &MDATE =    &ZLMDATE\nSET &MTIME =    &ZLMTIME\nSET &CSIZE =    &ZLCNORC\nSET &ISIZE =    &ZLINORC\nSET &MRECS =    &ZLMNORC\nSET &USERID =   &ZLUSER\nSET LMRC = &LASTCC\nISPEXEC DISPLAY PANEL(CHGID)\n  ISPEXEC  LMMSTATS DATAID(&PDSID)  MEMBER(&MBRNAME) VERSION(&VER1)   +\n                    MODLEVEL(&MOD1)   CREATED(&CDATE)  MODDATE(&MDATE)+\n                    MODTIME(&MTIME) CURSIZE(&CSIZE) INITSIZE(&ISIZE)  +\n                    MODRECS(&MRECS)   USER(&USERID)\n  IF &LASTCC \u00ac= 0 THEN    /* RETURN CODES -                        */ +\n    DO                    /*  4 - NO MEMBERS MATCH PATTERN.        */\n    END                   /*    - NO MEMBER IN DATA SET.           */\n  ELSE                    /*  8 - MEMBER NOT FOUND.                */ +\n                          /* 10 - NO DATA SET ASSOCIATED WITH THE  */\n                          /*      GIVEN DATA-ID.                   */\n                          /* 12 - INVALID PARAMETER VALUE.         */\n                          /*    - DATA SET IS NOT OPEN OR IS NOT   */\n                          /*      PARTITIONED.                     */\n                          /* 20 - SEVERE ERROR, UNABLE TO CONTINUE.*/\n\n  WRITE LASTCC &LASTCC\nISPEXEC LMCLOSE DATAID(&PDSID)\n/* FREE DATA ID */\nISPEXEC LMFREE  DATAID(&PDSID)\nGOTO START\nQUIT: +\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SKELPEEK": {"ttr": 1300, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x95\\x08?\\x00\\x950\\x7f\")\\x00!\\x00\\x16\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-03-24T00:00:00", "modifydate": "1995-11-03T22:29:00", "lines": 33, "newlines": 22, "modlines": 0, "user": "E90138"}, "text": " /********************* SKELPEEK ISPF EDIT MACRO *********************/\n /* SKELPEEK IS AN EDIT MACRO THAT  WILL FIND THE FIRST OCCURANCE OF */\n /* A SKELETON  IN  YOUR  ISPSLIB  CONCATENATION  AND  BRING IT INTO */\n /* EDIT.                                                            */\n /*                                                                  */\n /* NOTE: ONLY 4 DATASETS ALLOWED IN CONCATENATION (ISPF RESTRICTION)*/\n /*                                                                  */\n /* SYNTAX: SKELPEEK SKELNAME                                        */\n /*                                                                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO (MEMBER) NOPROCESS\n    IF &MEMBER = HELP  THEN DO\n     ISREDIT MACPEEK SKELPEEK\n    EXIT\n    END\n    IF &MEMBER = ?  THEN DO\n     ISREDIT MACPEEK SKELPEEK\n    EXIT\n    END\n  ISPEXEC  LMINIT DATAID(TARGET) DDNAME(ISPSLIB) +\n                  ENQ(SHR)\nSET &LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(PROBLEM LMINIT)\n             SET ZEDLMSG = &STR(LMINIT COULD NOT INIITIALIZE DDNAME+\n             ISPPLIB\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n   END\n  ISPEXEC EDIT DATAID(&TARGET)  MEMBER(&MEMBER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SKELVIEW": {"ttr": 1302, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\t_\\x00\\x950\\x7f\"0\\x00\\x1c\\x00\\x1a\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-04-05T00:00:00", "modifydate": "1995-11-03T22:30:00", "lines": 28, "newlines": 26, "modlines": 0, "user": "E90138"}, "text": " /********************* SKELVIEW TSO/E CLIST     *********************/\n /* SKELVIEW IS A CLIST THAT  WILL  FIND  A  MACRO  OR CLIST IN YOUR */\n /* SYSPROC  CONCATENATION  AND  BRING  IT  INTO  EDIT.   THIS  WILL */\n /* IDENTIFY THE FIRST OCCURANCE OF A  MACRO OR CLIST IN THE SYSPROC */\n /* CONCATENATION.  ALSO USEFUL FOR LOOKING A INTERNAL DOCUMENTATION */\n /* IN THE MACRO OR CLIST.                                           */\n /*                                                                  */\n /*                                                                  */\n /* NOTE: ONLY 4 DATASETS ALLOWED IN CONCATENATION (ISPF RESTRICTION)*/\n /*                                                                  */\n /* SYNTAX: SKELVIEW MACNAME {OR CLISTNAME}                          */\n /*                                                                  */\n /********************************************************************/\n\n\nPROC 1  MEMBER\n  ISPEXEC  LMINIT DATAID(TARGET) DDNAME(ISPSLIB) +\n                  ENQ(SHR)\nSET &LMRC = &LASTCC\nIF &LMRC \u00ac= 0 THEN +\n   DO\n           SET ZEDSMSG = &STR(PROBLEM LMINIT)\n             SET ZEDLMSG = &STR(LMINIT COULD NOT INIITIALIZE DDNAME+\n             ISPPLIB\n           ISPEXEC SETMSG MSG(ISRZ001)\n          EXIT\n   END\n  ISPEXEC  BROWSE DATAID(&TARGET)  MEMBER(&MEMBER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYA$DOC": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x950o\\x00\\x950o\"D\\x00\"\\x00%\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-02T22:44:00", "lines": 34, "newlines": 37, "modlines": 0, "user": "E90138"}, "text": "                            SAVE YOUR ASSETS\n                       BACKUP AND RECOVER SYSTEM\n\nTHIS DOCUMENT DESCRIBES THE SYA (SAVE YOUR ASSETS) BACKUP AND RECOVERY\nSYSTEM. IT IS IMPORTANT TO FOLLOW THE INSTRUCTIONS TO ENSURE A GOOD\nBACKUP AND RECOVERY OF THE SELECTED DATASETS.\n\n1.  CREATE A WORK PDS\n\n2.  CREATE A MEMBER WITHIN THE NEWLY CREATED PDS CALLED DATA\n\n3.  EDIT THE MEMBER CALLED DATA AND ENTER DATASET NAMES TO BE BACKED UP\n    STARTING IN COLUMN 1. ONLY ONE DATASET NAME PER LINE. DO NOT MIX\n    PDS AND SEQUENTIAL DATASETS IN ONE EXECUTION. SAVE THE MEMBER.\n\n4.  IF YOU A WORKING WITH PDS FILES, ENTER SYAPDS ON THE COMMND LINE.\n    PRESS ENTER.\n    IF YOU A WORKING WITH SEQUENTIAL FILES, ENTER SYAGENER ON THE\n    COMMAND LINE. PRESS ENTER.\n\n5.  YOU WILL BE PROMPTED FOR A HEADER FILE NAME. THE HEADER FILE IS\n    NORMALLY A GDG FILE. ENTER THE BASE FILE NAME FOR THE HEADER AND\n    PRESS ENTER. SEE NOTE.\n\n6.  WHEN THE PROCESS FINISHES, THERE WILL BE THREE FILES IN THE WORK\n    PDS: BACKUP, DATA, AND RESTORE. PROVIDE A JOB CARD FOR BACKUP, AND\n    SUBMIT THE JOB. BACKUP WILL COPY THE RESTORE JCL YOU HAVE JUST\n    BUILT INTO THE HEADER FILE (FILE 1 OF THE TAPE). THE REST OF THE\n    BACKUP STREAM WILL BACKUP ALL THE FILES IDENTIFIED IN THE DATA\n    MEMBER.\n\n    NOTE: IF A GDG FILE IS NOT USED FOR THE HEADER FILE THE JCL MUST\n    BE EDITIED TO REMOVE THE '(0)' IN THE RESTORE HEADER, AND THE (+1)\n    IN THE BACKUP HEADER.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYACATC": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x00\\x95)\\x1f\\x00\\x950\\x7f\"D\\x00)\\x00\\x1c\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1995-10-18T00:00:00", "modifydate": "1995-11-03T22:44:00", "lines": 41, "newlines": 28, "modlines": 0, "user": "E90138"}, "text": " /********************* SYACATC  ISPF EDIT MACRO *********************/\n /* SYACATC  IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYACATC                                                  */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\n SET &LINEA = +\n &STR(//UNCATLG  EXEC PGM=IDCAMS,REGION=512K          )\n SET &LINEB = +\n &STR(//SYSPRINT DD SYSOUT=*                          )\n SET &LINEC = +\n &STR(//SYSUDUMP DD SYSOUT=*)\n SET &LINED = +\n &STR(//SYSIN    DD *                                 )\nSET &BLANK = &STR( )\nSET &LASTX = &LAST\nISREDIT LINE_AFTER .ZLAST = '&LINEA'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEB'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEC'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINED'\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nSET &FIRST = &FIRST + 1\nSET &DSN = &STR(&STR(T00.)&DSN)\nISREDIT LINE_AFTER .ZLAST = ' DELETE &DSN..BK   NSCR NPRG'\nIF &FIRST > &LAST THEN GOTO FINISH\nGOTO LOOP\nFINISH: +\nISREDIT LINE_AFTER .ZLAST = '/*'\nISREDIT DEL 1 &LAST ALL\nISREDIT REPLACE UNCATLG .ZFIRST .ZLAST\nISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYACLNUP": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x95\\'\\x7f\\x00\\x950\\x7f\"D\\x00\\x0b\\x00\\x06\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-10-04T00:00:00", "modifydate": "1995-11-03T22:44:00", "lines": 11, "newlines": 6, "modlines": 0, "user": "E90138"}, "text": " /********************* SYACLNUP ISPF EDIT MACRO *********************/\n /* SYACLNUP IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYACLNUP                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT MOVE INPUTAB   AFTER .ZLAST\nISREDIT MOVE INPUTAG   AFTER .ZLAST\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYACOPYI": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x95)\\x0f\\x00\\x950\\x7f\"8\\x00\\xef\\x00\\xea\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1995-10-17T00:00:00", "modifydate": "1995-11-03T22:38:00", "lines": 239, "newlines": 234, "modlines": 0, "user": "E90138"}, "text": " /********************* SYACOPYI ISPF EDIT MACRO *********************/\n /* SYACOPYI IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYACOPYI                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISPEXEC VGET (GDGDSN) PROFILE\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\nSET &BK   = &STR(.BK)\nSET &DDCTR = 1\nISREDIT (MEM) = MEMBER\nSET &DI = &STR(OLD)\nSET &BK   = &STR(.BK)\nSET &DR = &STR(.DR)\nSET &DDCTR = 1\nSET &SP = &STR(      )\nSET &NEWLINE5 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.RESTHDR.SYSUT1),)\nSET &NEWLINE6 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL))\nSET &LASTX = &LAST\nSET &LINEX3 = &NRSTR+\n(//******************************************************************)\nSET &LINEX5 = &NRSTR+\n(//******************************************************************)\nSET &LINEY5 = &NRSTR+\n(//*                                                                *)\nSET &LINEZ5 = &NRSTR+\n(//*   BEFORE SUBMITTING CHANGE VVVVVV TO OUTPUT VOLUME             *)\nSET &LINEX6 = &NRSTR+\n(//*)\nISREDIT LINE_AFTER &LASTX = \"&LINEX3\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEY5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEZ5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEY5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX6\"\nSET &LASTX = &LASTX + 1\nSET &LINEA = &NRSTR(//RESTHDR   EXEC PGM=IEBGENER)\nISREDIT LINE_AFTER &LASTX = '&LINEA'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEB = &NRSTR+\n   (//SYSPRINT DD  SYSOUT=*                                        )\nISREDIT LINE_AFTER &LASTX = '&LINEB'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEC = &NRSTR+\n   (//SYSUT2   DD  SYSOUT=*,DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160)   )\nISREDIT LINE_AFTER &LASTX = '&LINEC'\nSET &LASTX = &LASTX + 1\nSET &LINEE = &NRSTR+\n   (//*)\nISREDIT LINE_AFTER &LASTX = '&LINEE'\nSET &LASTX = &LASTX + 1\nSET &LINEF = &NRSTR+\n(//SYSUT1 DD DISP=&DI,)\nISREDIT LINE_AFTER &LASTX = '&LINEF'\nSET &LASTX = &LASTX + 1\nSET &LINEN = &NRSTR+\n(//         DSN=&STR(&GDGDSN(0),)\nISREDIT LINE_AFTER &LASTX = '&LINEN'\nSET &LASTX = &LASTX + 1\nSET &LINEG = &NRSTR+\n   (//         DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160),          )\nISREDIT LINE_AFTER &LASTX = '&LINEG'\nSET &LASTX = &LASTX + 1\nSET &LINEI = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,,255),LABEL=(1,SL))\nISREDIT LINE_AFTER &LASTX = '&LINEI'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEJ = &NRSTR+\n   (//SYSIN    DD  DUMMY                                           )\nISREDIT LINE_AFTER &LASTX = '&LINEJ'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*   '\nSET &LASTX = &LASTX + 1\nSET &LINE1 = &NRSTR(//IEBCOPYS EXEC PGM=IEBCOPY,REGION=3000K)\nISREDIT LINE_AFTER &LASTX = '&LINE1'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE2 = &NRSTR(//SYSPRINT DD SYSOUT=*)\nISREDIT LINE_AFTER &LASTX = '&LINE2'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE3 = &NRSTR(//SYSUT3   DD DISP=(,DELETE),     )\nISREDIT LINE_AFTER &LASTX = '&LINE3'\nSET &LASTX = &LASTX + 1\nSET &LINE4 = &NRSTR(//         UNIT=SYSDA,            )\nISREDIT LINE_AFTER &LASTX = '&LINE4'\nSET &LASTX = &LASTX + 1\nSET &LINE5 = &NRSTR(//         SPACE=(CYL,(10,10))    )\nISREDIT LINE_AFTER &LASTX = '&LINE5'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE6 = &NRSTR(//SYSUT4   DD DISP=(,DELETE),     )\nISREDIT LINE_AFTER &LASTX = '&LINE6'\nSET &LASTX = &LASTX + 1\nSET &LINE7 = &NRSTR(//         UNIT=SYSDA,            )\nISREDIT LINE_AFTER &LASTX = '&LINE7'\nSET &LASTX = &LASTX + 1\nSET &LINE8 = &NRSTR(//         SPACE=(CYL,(10,10))    )\nISREDIT LINE_AFTER &LASTX = '&LINE8'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &BLANK = &STR( )\nSET &BLANK = &STR( )\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nLX: +\nIF &LENGTH(&STR(&DDCTR)) < 3 THEN DO\nSET &DDCTR = &STR(&STR(&DDCTR) )\nGOTO LX\nEND\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nLISTDSI '&DSN' DIRECTORY\nSET &DSN = &STR(&STR(T00.)&DSN)\nSET &VOL = &SYSVOLUME\nSET &NEWLINE = +\n&NRSTR(//INDD&DDCTR  DD DSN=&DSN&BK,DISP=OLD,)\nSET &NEWLINE2 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.RESTHDR.SYSUT1),)\nSET &NEWLINE3 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,EXPDT=98000)           )\nSET &NEWLINE4 = &NRSTR(//OUTDD&STR(&DDCTR) DD DSN=&DSN&DR,)\nSET &NEWLINE5 = &NRSTR(//         DISP=(NEW,CATLG,DELETE),)\nSET &NEWLINE6 =&NRSTR(//         +\nUNIT=3380,VOL=SER=VVVVVV,)\nSET  &SXS1 =   &STR(&SYSDSNAME)\nSET  &SXS2 =   &STR(&SYSVOLUME)\nSET  &SXS3 =   &STR(&SYSUNIT)\nSET  &SXS4 =   &STR(&SYSDSORG)\nSET  &SXS5 =   &STR(&SYSRECFM)\nSET  &SXS6 =   &STR(&SYSLRECL)\nSET  &SXS7 =   &STR(&SYSBLKSIZE)\nSET  &SXS8 =   &STR(&SYSALLOC)\nSET  &SXS9 =   &STR(&SYSUSED)\nSET  &SXS10 =  &STR(&SYSPRIMARY)\nSET  &SXS11 =  &STR(&SYSSECONDS)\nSET  &SXS12 =  &STR(&SYSUNITS)\nSET  &SXS13 =  &STR(&SYSEXTENTS)\nSET  &SXS14 =  &STR(&SYSCREATE)\nSET  &SXS15 =  &STR(&SYSREFDATE)\nSET  &SXS16 =  &STR(&SYSEXDATE)\nSET  &SXS17 =  &STR(&SYSUPDATED)\nSET  &SXS18 =  &STR(&SYSTRKSCYL)\nSET  &SXS19 =  &STR(&SYSBLKSTRK)\nSET  &SXS20 =  &STR(&SYSADIRBLK)\nSET  &SXS21 =  &STR(&SYSUDIRBLK)\nSET  &SXS22 =  &STR(&SYSMEMBERS)\nSET  &SXS23 =  &STR(&SYSMSGLVL1)\nSET  &SXS24 =  &STR(&SYSMSGLVL2)\nSET &DSNIN =  &STR(DSN=&SXS1)\nIF &SXS12 = TRACK THEN SET &SXS12R = TRK\nIF &SXS12 = CYLINDER THEN SET &SXS12R = CYL\nIF &SXS12 = BLOCK THEN SET &SXS12R = &SYSDVAL(&SXS7)\nSET &DORG  =  &STR(DSORG=&SXS4)\nSET &SPAC  =  &STR(SPACE=(&SXS12R\nSET &RCFM  =  &STR(RECFM=&SXS5\nSET &LREC  =  &STR(LRECL=&SXS6\nSET &BLKSZ =  &STR(BLKSIZE=&SXS7\nSET &SLS10 = &SYSDVAL(&SXS10)\nSET &SLS11 = &SYSDVAL(&SXS11)\nSET &SLS20 = &SYSDVAL(&SXS20)\nISPEXEC VPUT (DORG SPAC RCFM LREC BLKSZ) PROFILE\nISPEXEC VGET (DORG SPAC RCFM LREC BLKSZ) PROFILE\nIF &SXS4 = PO THEN +\nSET &CMA = &STR(,)\nSET &SP1 = &STR(&SPAC&CMA(&SLS10,&SLS11,&SLS20))\nSET &RGT = &STR())\nSET &L5A = &STR(//         &SP1)&RGT&CMA\nSET &L5B = &STR(//         DCB=(&DORG,&RCFM,&LREC,&BLKSZ),)\nSET &NEWLINE7 = &NRSTR(&L5B)\nSET &NEWLINE8 = &NRSTR(&L5A)\nIF &ONE = YES THEN DO\nSET &NEWLINE2 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.RESTHDR.SYSUT1),)\nSET &NEWLINE3 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,EXPDT=98000))\nEND\nISREDIT LINE_AFTER &LASTX = '&NEWLINE'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE2'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE3'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE4'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE5'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE6'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE7'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE8'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*      '\nSET &LASTX = &LASTX + 1\nSET &FIRST = &FIRST +1\nIF &FIRST > &LAST THEN GOTO FINISH\nSET &DDCTR = &DDCTR + 1\nSET &ONE = YES\nGOTO LOOP\nFINISH: +\nISREDIT LINE_AFTER &LASTX = '//SYSIN      DD *'\nSET &LASTX = &LASTX + 1\nSET &CC = 1\nCLOOP: +\nSET &LINEX = &NRSTR(   COPY INDD=INDD&CC,OUTDD=OUTDD&CC)\nISREDIT LINE_AFTER &LASTX = '&LINEX'\nSET &LASTX = &LASTX + 1\nSET &CC = &CC +1\nIF &CC > &EVAL(&DDCTR) THEN GOTO QUIT\nGOTO CLOOP\nQUIT: +\nISREDIT LINE_AFTER &LASTX = '/*         '\nISREDIT DEL 1 &LAST ALL\nISREDIT REPLACE RESTORE .ZFIRST .ZLAST\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYACOPYO": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x95)\\x0f\\x00\\x950\\x7f\"9\\x00\\xc1\\x00\\xa9\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1995-10-17T00:00:00", "modifydate": "1995-11-03T22:39:00", "lines": 193, "newlines": 169, "modlines": 0, "user": "E90138"}, "text": " /********************* SYACOPYO ISPF EDIT MACRO *********************/\n /* SYACOPYO IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYACOPYO                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISPEXEC VGET (GDGDSN) PROFILE\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\nISREDIT (MEM) = MEMBER\nISREDIT (THISDSN) = DATASET\nSET &DI = &STR((NEW,CATLG,DELETE))\nSET &BK   = &STR(.BK)\nSET &DDCTR = 1\nSET &SP = &STR(      )\nSET &NEWLINE5 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.CREHEDR.SYSUT2),)\nSET &NEWLINE6 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,RETPD=10))\nSET &LASTX = &LAST\nSET &LINEX3 = &NRSTR+\n(//******************************************************************)\nSET &LINEX4 = &NRSTR+\n(//*             IEBCOPY OUTPUT JOB                                 *)\nSET &LINEX5 = &NRSTR+\n(//******************************************************************)\nSET &LINEX6 = &NRSTR+\n(//*)\nIF &STEPX = 1 THEN SET &STEPC = A\nIF &STEPX = 2 THEN SET &STEPC = B\nIF &STEPX = 3 THEN SET &STEPC = C\nIF &STEPX = 4 THEN SET &STEPC = D\nIF &STEPX = 5 THEN SET &STEPC = E\nIF &STEPX = 6 THEN SET &STEPC = F\nISREDIT LINE_AFTER &LASTX = \"&LINEX3\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX4\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX6\"\nSET &LASTX = &LASTX + 1\nSET &LINEA = &NRSTR(//CREHEDR   EXEC PGM=IEBGENER)\nISREDIT LINE_AFTER &LASTX = '&LINEA'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEB = &NRSTR+\n   (//SYSPRINT DD  SYSOUT=*                                        )\nISREDIT LINE_AFTER &LASTX = '&LINEB'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEC = &NRSTR+\n   (//SYSUT1   DD  DISP=SHR,DSN=&THISDSN.(RESTORE)                )\nISREDIT LINE_AFTER &LASTX = '&LINEC'\nSET &LASTX = &LASTX + 1\nSET &LINEE = &NRSTR+\n   (//*)\nISREDIT LINE_AFTER &LASTX = '&LINEE'\nSET &LASTX = &LASTX + 1\nSET &LINEF = &NRSTR+\n(//SYSUT2 DD DISP=&DI,)\nISREDIT LINE_AFTER &LASTX = '&LINEF'\nSET &LASTX = &LASTX + 1\nSET &LINEN = &NRSTR+\n(//         DSN=&STR(&GDGDSN(+1),)\nISREDIT LINE_AFTER &LASTX = '&LINEN'\nSET &LASTX = &LASTX + 1\nSET &LINEG = &NRSTR+\n(//         DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160),          )\nISREDIT LINE_AFTER &LASTX = '&LINEG'\nSET &LASTX = &LASTX + 1\nSET &LINEI = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,,255),LABEL=(1,SL,RETPD=10))\nISREDIT LINE_AFTER &LASTX = '&LINEI'\nSET &LASTX = &LASTX + 1\nSET &LINEJ = &NRSTR+\n   (//SYSIN    DD  DUMMY                                           )\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&LINEJ'\nSET &LASTX = &LASTX + 1\nSET &LINE1 = &NRSTR(//IEBCOPYS EXEC PGM=IEBCOPY,REGION=3000K)\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&LINE1'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE2 = &NRSTR(//SYSPRINT DD SYSOUT=*)\nISREDIT LINE_AFTER &LASTX = '&LINE2'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE3 = &NRSTR(//SYSUT3   DD DISP=(,DELETE),     )\nISREDIT LINE_AFTER &LASTX = '&LINE3'\nSET &LASTX = &LASTX + 1\nSET &LINE4 = &NRSTR(//         UNIT=SYSDA,            )\nISREDIT LINE_AFTER &LASTX = '&LINE4'\nSET &LASTX = &LASTX + 1\nSET &LINE5 = &NRSTR(//         SPACE=(CYL,(10,10))    )\nISREDIT LINE_AFTER &LASTX = '&LINE5'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE6 = &NRSTR(//SYSUT4   DD DISP=(,DELETE),     )\nISREDIT LINE_AFTER &LASTX = '&LINE6'\nSET &LASTX = &LASTX + 1\nSET &LINE7 = &NRSTR(//         UNIT=SYSDA,            )\nISREDIT LINE_AFTER &LASTX = '&LINE7'\nSET &LASTX = &LASTX + 1\nSET &LINE8 = &NRSTR(//         SPACE=(CYL,(10,10))    )\nISREDIT LINE_AFTER &LASTX = '&LINE8'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &BLANK = &STR( )\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nLX: +\nIF &LENGTH(&STR(&DDCTR)) < 3 THEN DO\nSET &DDCTR = &STR(&STR(&DDCTR) )\nGOTO LX\nEND\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nLISTDSI '&DSN' DIRECTORY\nSET &DSICC = &LASTCC\nIF &DSICC NE 0 THEN DO\nWRITE &DSICC &DSN\nSET &FIRST = &FIRST + 1\nIF &FIRST > &LAST THEN GOTO FINISH\nGOTO LOOP\nEND\nSET &SUBDSN = &SUBSTR(2:&EVAL(&LENGTH(&DSN),&DSN)\nSET &DSNO = &STR(&STR(T00.)&DSN)\nSET &VOL = &SYSVOLUME\nSET &NEWLINE = &NRSTR(//INDD&DDCTR  DD DISP=SHR,DSN=&DSN,)\nSET &NEWLINE2 = &NRSTR(//         UNIT=3380,VOL=SER=&VOL)\nSET &NEWLINE3 = &NRSTR(//OUTDD&STR(&DDCTR) +\nDD DISP=(NEW,CATLG,DELETE),)\nSET &NEWLINE4 = &NRSTR(//         DSN=&DSNO&BK,)\nIF &ONE = YES THEN DO\nSET &NEWLINE5 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.CREHEDR.SYSUT2),)\nSET &NEWLINE6 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,RETPD=10))\nEND\nISREDIT LINE_AFTER &LASTX = '&NEWLINE'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE2'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE3'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE4'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE5'\nSET &LASTX = &LASTX + 1\nSET &ONE = YES\nIF &NRSTR(&NEWLINE6) \u00ac= THEN DO\nISREDIT LINE_AFTER &LASTX = '&NEWLINE6'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nEND\nSET &FIRST = &FIRST +1\nIF &FIRST > &LAST THEN GOTO FINISH\nSET &DDCTR = &DDCTR + 1\nGOTO LOOP\nFINISH: +\nISREDIT LINE_AFTER &LASTX = '//SYSIN      DD *'\nSET &LASTX = &LASTX + 1\nSET &CC = 1\nCLOOP: +\nSET &LINEX = &NRSTR(   COPY INDD=INDD&CC,OUTDD=OUTDD&CC)\nISREDIT LINE_AFTER &LASTX = '&LINEX'\nSET &LASTX = &LASTX + 1\nSET &CC = &CC +1\nIF &CC > &EVAL(&DDCTR) THEN GOTO QUIT\nGOTO CLOOP\nQUIT: +\nISREDIT DEL 1 &LAST ALL\nISREDIT COPY UNCATLG AFTER .ZLAST\nISREDIT REPLACE BACKUP  .ZFIRST .ZLAST\nISREDIT SAVE\nISREDIT MOVE INPUTAA AFTER .ZLAST\nISREDIT MOVE UNCATLG AFTER .ZLAST\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYAGENER": {"ttr": 1552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x950o\\x00\\x950\\x8f\"0\\x00&\\x00\\x1b\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-04T22:30:00", "lines": 38, "newlines": 27, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAGENER ISPF EDIT MACRO *********************/\n /* SYAGENER SEE SYA$DOC                                             */\n /*                                                                  */\n /* SYNTAX: SYAGENER                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT REP RESTORE 1 1\nISREDIT REP BACKUP  1 1\nCLRSCRN\nWRITE THE HEADER FILE WILL BE THE FILE NAME CALLED BY THE CATALOG\nWRITENR ENTER HEADER FILE NAME ==>\nREAD GDGDSN\nISPEXEC VPUT (GDGDSN) PROFILE\nISREDIT (MEM) = MEMBER\nISREDIT (THISDSN) = DATASET\nSET &MPTR = &SUBSTR(4:4,&MEM)\nISREDIT REPLACE INPUT&MPTR&STR(A)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(B)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(C)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(D)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(E)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(F)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(G)  .ZFIRST .ZLAST\nISREDIT REP RESTORE 1 1\nISREDIT REP BACKUP  1 1\nISREDIT MOVE RESTORE AFTER .ZLAST\nISREDIT MOVE BACKUP  AFTER .ZLAST\nISPEXEC EDIT DATASET('&THISDSN(INPUTAA)') MACRO(SYACATC)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAB)') MACRO(SYAGENRO)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAC)') MACRO(SYAGENRI)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAD)') MACRO(SYARENAM)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAE)') MACRO(SYAUNCAT)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAF)') MACRO(SYAUDCAT)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAG)') MACRO(SYAJBALL)\nISPEXEC EDIT DATASET('&THISDSN(RESTORE)') MACRO(SYACLNUP)\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYAGENRI": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1c\\x00\\x00\\x00\\x95)/\\x00\\x950\\x7f\"9\\x00\\xd5\\x00\\xc5\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.28", "flags": 0, "createdate": "1995-10-19T00:00:00", "modifydate": "1995-11-03T22:39:00", "lines": 213, "newlines": 197, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAGENRI ISPF EDIT MACRO *********************/\n /* SYAGENRI IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYAGENRI                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISPEXEC VGET (GDGDSN) PROFILE\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\nSET &CMA = &STR(,)\nSET &BK   = &STR(.BK)\nSET &DDCTR = 1\nISREDIT (MEM) = MEMBER\nSET &DI = &STR(OLD)\nSET &BK   = &STR(.BK)\nSET &DR = &STR(.DR)\nSET &DDCTR = 1\nSET &SP = &STR(      )\nSET &NEWLINE5 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.RESTHDR.SYSUT1),)\nSET &NEWLINE6 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL))\nSET &LASTX = &LAST\nSET &LINEX3 = &NRSTR+\n(//******************************************************************)\nSET &LINEX5 = &NRSTR+\n(//******************************************************************)\nSET &LINEY5 = &NRSTR+\n(//*                                                                *)\nSET &LINEZ5 = &NRSTR+\n(//*   BEFORE SUBMITTING CHANGE VVVVVV TO OUTPUT VOLUME             *)\nSET &LINEX6 = &NRSTR+\n(//*)\nISREDIT LINE_AFTER &LASTX = \"&LINEX3\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEY5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEZ5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEY5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEA = &NRSTR(//RESTHDR   EXEC PGM=IEBGENER)\nISREDIT LINE_AFTER &LASTX = '&LINEA'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEB = &NRSTR+\n   (//SYSPRINT DD  SYSOUT=*                                        )\nISREDIT LINE_AFTER &LASTX = '&LINEB'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEC = &NRSTR+\n   (//SYSUT2   DD  SYSOUT=*,DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160)   )\nISREDIT LINE_AFTER &LASTX = '&LINEC'\nSET &LASTX = &LASTX + 1\nSET &LINEE = &NRSTR+\n   (//*)\nISREDIT LINE_AFTER &LASTX = '&LINEE'\nSET &LASTX = &LASTX + 1\nSET &LINEF = &NRSTR+\n(//SYSUT1 DD DISP=&DI,)\nISREDIT LINE_AFTER &LASTX = '&LINEF'\nSET &LASTX = &LASTX + 1\nSET &LINEN = &NRSTR+\n(//         DSN=&STR(&GDGDSN(0),)\nISREDIT LINE_AFTER &LASTX = '&LINEN'\nSET &LASTX = &LASTX + 1\nSET &LINEG = &NRSTR+\n   (//         DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160),          )\nISREDIT LINE_AFTER &LASTX = '&LINEG'\nSET &LASTX = &LASTX + 1\nSET &LINEI = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,,255),LABEL=(1,SL))\nISREDIT LINE_AFTER &LASTX = '&LINEI'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEJ = &NRSTR+\n   (//SYSIN    DD  DUMMY                                           )\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&LINEJ'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*   '\nSET &LASTX = &LASTX + 1\nSET &BLANK = &STR( )\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nLX: +\nIF &LENGTH(&STR(&DDCTR)) < 3 THEN DO\nSET &DDCTR = &STR(0&STR(&DDCTR))\nGOTO LX\nEND\nSET &STEP = &STR(STEP&STR(&DDCTR))\nSET &LINE1 = &NRSTR(//&STEP    EXEC PGM=IEBGENER)\nISREDIT LINE_AFTER &LASTX = '&LINE1'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINE2 = &NRSTR(//SYSPRINT DD SYSOUT=*)\nISREDIT LINE_AFTER &LASTX = '&LINE2'\nSET &LASTX = &LASTX + 1\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nLISTDSI '&DSN'\nSET &SUBDSN = &SUBSTR(2:&EVAL(&LENGTH(&DSN),&DSN)\nSET &DSN = &STR(&STR(T00.)&DSN)\nSET &VOL = &SYSVOLUME\nSET &NEWLINE = +\n&NRSTR(//SYSUT1   DD DSN=&DSN&BK,DISP=OLD,)\nSET &NEWLINE2 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.RESTHDR.SYSUT1),)\nSET &NEWLINE3 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,EXPDT=98000)           )\nSET &NEWLINE4 = &NRSTR(//SYSUT2   DD DSN=&DSN&DR,)\nSET &NEWLINE5 = &NRSTR(//         DISP=(NEW,CATLG,DELETE),)\nSET &NEWLINE6 =&NRSTR(//         +\nUNIT=3380,VOL=SER=VVVVVV,)\nSET  &SXS1 =   &STR(&SYSDSNAME)\nSET  &SXS2 =   &STR(&SYSVOLUME)\nSET  &SXS3 =   &STR(&SYSUNIT)\nSET  &SXS4 =   &STR(&SYSDSORG)\nSET  &SXS5 =   &STR(&SYSRECFM)\nSET  &SXS6 =   &STR(&SYSLRECL)\nSET  &SXS7 =   &STR(&SYSBLKSIZE)\nSET  &SXS8 =   &STR(&SYSALLOC)\nSET  &SXS9 =   &STR(&SYSUSED)\nSET  &SXS10 =  &STR(&SYSPRIMARY)\nSET  &SXS11 =  &STR(&SYSSECONDS)\nSET  &SXS12 =  &STR(&SYSUNITS)\nSET  &SXS13 =  &STR(&SYSEXTENTS)\nSET  &SXS14 =  &STR(&SYSCREATE)\nSET  &SXS15 =  &STR(&SYSREFDATE)\nSET  &SXS16 =  &STR(&SYSEXDATE)\nSET  &SXS17 =  &STR(&SYSUPDATED)\nSET  &SXS18 =  &STR(&SYSTRKSCYL)\nSET  &SXS19 =  &STR(&SYSBLKSTRK)\nSET  &SXS20 =  &STR(&SYSADIRBLK)\nSET  &SXS21 =  &STR(&SYSUDIRBLK)\nSET  &SXS22 =  &STR(&SYSMEMBERS)\nSET  &SXS23 =  &STR(&SYSMSGLVL1)\nSET  &SXS24 =  &STR(&SYSMSGLVL2)\nSET &DSNIN =  &STR(DSN=&SXS1)\nIF &SXS12 = TRACK THEN SET &SXS12R = &STR(TRK)\nIF &SXS12 = CYLINDER THEN SET &SXS12R = &STR(CYL)\nIF &SXS12 = BLOCK THEN SET &SXS12R = &SYSDVAL(&SXS7)\nSET &DORG  =  &STR(DSORG=&SXS4)\nSET &SPAC  =  &STR(SPACE=(&SXS12R\nSET &RCFM  =  &STR(RECFM=&SXS5\nSET &LREC  =  &STR(LRECL=&SXS6\nSET &BLKSZ =  &STR(BLKSIZE=&SXS7\nSET &SLS10 = &SYSDVAL(&SXS10)\nSET &SLS11 = &SYSDVAL(&SXS11)\nSET &SLS20 = &SYSDVAL(&SXS20)\nISPEXEC VPUT (DORG SPAC RCFM LREC BLKSZ) PROFILE\nISPEXEC VGET (DORG SPAC RCFM LREC BLKSZ) PROFILE\nIF &SXS4 = PO THEN +\nSET &CMA = &STR(,)\nSET &SP1 = &STR(&SPAC&CMA(&SLS10,&SLS11))\nSET &RGT = &STR())\nSET &L5A = &STR(//         &STR(&SP1))\nSET &L5B = &STR(//         DCB=(&DORG,&RCFM,&LREC,&BLKSZ),)\nSET &NEWLINE7 = &NRSTR(&L5B)\nSET &NEWLINE8 = &NRSTR(&L5A)\nIF &ONE = YES THEN DO\nSET &NEWLINE2 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.RESTHDR.SYSUT1),)\nSET &NEWLINE3 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,EXPDT=98000))\nEND\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE2'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE3'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE4'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE5'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE6'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE7'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE8,)'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*      '\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//SYSIN      DD DUMMY'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*      '\nSET &LASTX = &LASTX + 1\nSET &FIRST = &FIRST +1\nIF &FIRST > &LAST THEN GOTO FINISH\nSET &DDCTR = &DDCTR + 1\nSET &ONE = YES\nGOTO LOOP\nFINISH: +\nISREDIT DEL 1 &LAST ALL\nISREDIT REPLACE RESTORE .ZFIRST .ZLAST\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYAGENRO": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x95)/\\x00\\x950\\x7f\"@\\x00\\xa0\\x00\\x96\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1995-10-19T00:00:00", "modifydate": "1995-11-03T22:40:00", "lines": 160, "newlines": 150, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAGENRO ISPF EDIT MACRO *********************/\n /* SYAGENRO IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYAGENRO                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISPEXEC VGET (GDGDSN) PROFILE\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\nISREDIT (MEM) = MEMBER\nISREDIT (THISDSN) = DATASET\nSET &DI = &STR((NEW,CATLG,DELETE))\nSET &BK   = &STR(.BK)\nSET &DDCTR = 1\nSET &SP = &STR(      )\nSET &NEWLINE5 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.CREHEDR.SYSUT2),)\nSET &NEWLINE6 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,RETPD=10))\nSET &LASTX = &LAST\nSET &LINEX3 = &NRSTR+\n(//******************************************************************)\nSET &LINEX4 = &NRSTR+\n(//*             IEBGENER OUTPUT JOB                                *)\nSET &LINEX5 = &NRSTR+\n(//******************************************************************)\nSET &LINEX6 = &NRSTR+\n(//*)\nIF &STEPX = 1 THEN SET &STEPC = A\nIF &STEPX = 2 THEN SET &STEPC = B\nIF &STEPX = 3 THEN SET &STEPC = C\nIF &STEPX = 4 THEN SET &STEPC = D\nIF &STEPX = 5 THEN SET &STEPC = E\nIF &STEPX = 6 THEN SET &STEPC = F\nISREDIT LINE_AFTER &LASTX = \"&LINEX3\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX4\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX5\"\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = \"&LINEX6\"\nSET &LASTX = &LASTX + 1\nSET &LINEA = &NRSTR(//CREHEDR   EXEC PGM=IEBGENER)\nISREDIT LINE_AFTER &LASTX = '&LINEA'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEB = &NRSTR+\n   (//SYSPRINT DD  SYSOUT=* )\nISREDIT LINE_AFTER &LASTX = '&LINEB'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LINEC = &NRSTR+\n   (//SYSUT1   DD  DISP=SHR,DSN=&THISDSN.(RESTORE)               )\nISREDIT LINE_AFTER &LASTX = '&LINEC'\nSET &LASTX = &LASTX + 1\nSET &LINEE = &NRSTR+\n   (//*)\nISREDIT LINE_AFTER &LASTX = '&LINEE'\nSET &LASTX = &LASTX + 1\nSET &LINEF = &NRSTR+\n(//SYSUT2 DD DISP=&DI,)\nISREDIT LINE_AFTER &LASTX = '&LINEF'\nSET &LASTX = &LASTX + 1\nSET &LINEN = &NRSTR+\n(//         DSN=&STR(&GDGDSN(+1),)\nISREDIT LINE_AFTER &LASTX = '&LINEN'\nSET &LASTX = &LASTX + 1\nSET &LINEG = &NRSTR+\n(//         DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160),          )\nISREDIT LINE_AFTER &LASTX = '&LINEG'\nSET &LASTX = &LASTX + 1\nSET &LINEI = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,,255),LABEL=(1,SL,RETPD=10))\nISREDIT LINE_AFTER &LASTX = '&LINEI'\nSET &LASTX = &LASTX + 1\nSET &LINEJ = &NRSTR+\n   (//SYSIN    DD  DUMMY                                           )\nISREDIT LINE_AFTER &LASTX = '&LINEJ'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &BLANK = &STR( )\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nLX: +\nIF &LENGTH(&STR(&DDCTR)) < 3 THEN DO\nSET &DDCTR = &STR(0&STR(&DDCTR))\nGOTO LX\nEND\nSET &STEP = &STR(STEP&NRSTR(&DDCTR))\nSET &LINE1 = &NRSTR(//&STR(&STEP)   EXEC PGM=IEBGENER)\nISREDIT LINE_AFTER &LASTX = '&LINE1'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&LINEB'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nLISTDSI '&DSN' DIRECTORY\nSET &DSICC = &LASTCC\nIF &DSICC NE 0 THEN DO\nWRITE &DSICC &DSN\nSET &FIRST = &FIRST + 1\nIF &FIRST > &LAST THEN GOTO FINISH\nGOTO LOOP\nEND\nSET &VOL = &SYSVOLUME\nSET &NEWLINE = &NRSTR(//SYSUT1   DD DISP=SHR,DSN=&DSN,)\nSET &NEWLINE2 = &NRSTR(//         UNIT=3380,VOL=SER=&VOL)\nSET &NEWLINE3 = &NRSTR(//SYSUT2   +\nDD DISP=(NEW,CATLG,DELETE),)\nSET &NEWLINE4 = &NRSTR(//         DSN=T00.&DSN&BK,)\nIF &ONE = YES THEN DO\nSET &NEWLINE5 = &NRSTR+\n(//         UNIT=CART,VOL=(,RETAIN,REF=*.CREHEDR.SYSUT2),)\nSET &NEWLINE6 = &NRSTR+\n(//         LABEL=(&EVAL(&DDCTR + 1),SL,RETPD=10))\nEND\nISREDIT LINE_AFTER &LASTX = '&NEWLINE'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE2'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE3'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE4'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&NEWLINE5'\nSET &LASTX = &LASTX + 1\nSET &ONE = YES\nIF &NRSTR(&NEWLINE6) \u00ac= THEN DO\nISREDIT LINE_AFTER &LASTX = '&NEWLINE6'\nSET &LASTX = &LASTX + 1\nEND\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '&LINEJ'\nSET &LASTX = &LASTX + 1\nISREDIT LINE_AFTER &LASTX = '//*'\nSET &LASTX = &LASTX + 1\nSET &FIRST = &FIRST +1\nIF &FIRST > &LAST THEN GOTO FINISH\nSET &DDCTR = &DDCTR + 1\nGOTO LOOP\nFINISH: +\nISREDIT DEL 1 &LAST ALL\nISREDIT COPY UNCATLG AFTER .ZLAST\nISREDIT REPLACE BACKUP .ZFIRST .ZLAST\nISREDIT SAVE\nISREDIT MOVE UNCATLG AFTER .ZLAST\nISREDIT MOVE INPUTAA AFTER .ZLAST\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYAJBALL": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x95\\'\\x0f\\x00\\x950\\x7f\"@\\x00\\x14\\x00\\t\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1995-09-27T00:00:00", "modifydate": "1995-11-03T22:40:00", "lines": 20, "newlines": 9, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAJBALL ISPF EDIT MACRO *********************/\n /* SYAJBALL IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYAJBALL                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT RECOVERY ON\nISREDIT (MEM) = MEMBER\nSET &MPTR = &SUBSTR(6:6,&MEM)\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\nISREDIT MOVE INPUT&MPTR&STR(C) AFTER .ZLAST\nISREDIT MOVE INPUT&MPTR&STR(D) AFTER .ZLAST\nISREDIT MOVE INPUT&MPTR&STR(E) AFTER .ZLAST\nISREDIT MOVE INPUT&MPTR&STR(F) AFTER .ZLAST\nISREDIT DELETE &FIRST &LAST ALL\nISREDIT REPLACE RESTORE  .ZFIRST .ZLAST\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYAPDS": {"ttr": 1804, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x950o\\x00\\x950\\x8f\"0\\x00$\\x00\\x1b\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1995-11-02T00:00:00", "modifydate": "1995-11-04T22:30:00", "lines": 36, "newlines": 27, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAPDS   ISPF EDIT MACRO *********************/\n /* SYAPDS  SEE SYA$DOC                                              */\n /*                                                                  */\n /* SYNTAX: SYAPDS                                                   */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT REP RESTORE 1 1\nISREDIT REP BACKUP  1 1\nCLRSCRN\nWRITE THE HEADER FILE WILL BE THE FILE NAME CALLED BY THE CATALOG\nWRITENR ENTER HEADER FILE NAME ==>\nREAD GDGDSN\nISPEXEC VPUT (GDGDSN) PROFILE\nISREDIT (MEM) = MEMBER\nISREDIT (THISDSN) = DATASET\nSET &MPTR = &SUBSTR(4:4,&MEM)\nISREDIT REPLACE INPUT&MPTR&STR(A)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(B)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(C)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(D)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(E)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(F)  .ZFIRST .ZLAST\nISREDIT REPLACE INPUT&MPTR&STR(G)  .ZFIRST .ZLAST\nISREDIT MOVE RESTORE AFTER .ZLAST\nISREDIT MOVE BACKUP  AFTER .ZLAST\nISPEXEC EDIT DATASET('&THISDSN(INPUTAA)') MACRO(SYACATC)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAB)') MACRO(SYACOPYO)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAC)') MACRO(SYACOPYI)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAD)') MACRO(SYARENAM)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAE)') MACRO(SYAUNCAT)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAF)') MACRO(SYAUDCAT)\nISPEXEC EDIT DATASET('&THISDSN(INPUTAG)') MACRO(SYAJBALL)\nISPEXEC EDIT DATASET('&THISDSN(RESTORE)') MACRO(SYACLNUP)\nISREDIT CANCEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYARENAM": {"ttr": 1806, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01=\\x00\\x00\\x00\\x95&\\x9f\\x00\\x950\\x7f\"B\\x005\\x00]\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.61", "flags": 0, "createdate": "1995-09-26T00:00:00", "modifydate": "1995-11-03T22:42:00", "lines": 53, "newlines": 93, "modlines": 0, "user": "E90138"}, "text": " /********************* SYARENAM ISPF EDIT MACRO *********************/\n /* SYARENAM IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYARENAM                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\n SET &LINEA = +\n &STR(//RENAME   EXEC PGM=IEHPROGM                    )\n SET &LINEB = +\n &STR(//SYSPRINT DD SYSOUT=*                          )\n SET &LINEC = +\n &STR(//VVVVVV   DD UNIT=3380,VOL=SER=VVVVVV,DISP=SHR )\n SET &LINED = +\n &STR(//SYSIN    DD *                                 )\nSET &BLANK = &STR( )\nSET &LINE3 = &STR(               VOL=3380=VVVVVV)\nSET &LASTX = &LAST\nISREDIT LINE_AFTER .ZLAST = '&LINEA'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEB'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEC'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINED'\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nSET &SUBDSN = &SUBSTR(2:&EVAL(&LENGTH(&DSN),&DSN)\nSET &DSN1 = &STR(&STR(T00.)&DSN)\nSET &LINE1 = &STR(         RENAME DSNAME=&DSN1..DR)\nSET &LINE2 = &STR(               NEWNAME=&DSN)\nISREDIT LINE_AFTER .ZLAST = '&LINE1&STR(,)'\nISREDIT LABEL .ZLAST = .A\nISREDIT C ' ' '-' .A .A 72 72\nISREDIT RESET LABEL .A .A\nISREDIT LINE_AFTER .ZLAST = '&LINE2&STR(,)'\nISREDIT LABEL .ZLAST = .A\nISREDIT C ' ' '-' .A .A 72 72\nISREDIT RESET LABEL .A  .A\nISREDIT LINE_AFTER .ZLAST = '&LINE3'\nSET &FIRST = &FIRST + 1\nIF &FIRST > &LAST THEN GOTO FINISH\nGOTO LOOP\nFINISH: +\nISREDIT LINE_AFTER .ZLAST = '/*'\nISREDIT DEL 1 &LAST ALL\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYAUDCAT": {"ttr": 1808, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x00\\x95\\'\\x0f\\x00\\x950\\x7f\"B\\x00(\\x00\\x1b\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1995-09-27T00:00:00", "modifydate": "1995-11-03T22:42:00", "lines": 40, "newlines": 27, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAUDCAT ISPF EDIT MACRO *********************/\n /* SYAUDCAT IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYAUDCAT                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\n SET &LINEA = +\n &STR(//UDCATLG  EXEC PGM=IDCAMS,REGION=512K          )\n SET &LINEB = +\n &STR(//SYSPRINT DD SYSOUT=*                          )\n SET &LINEC = +\n &STR(//SYSIN    DD *                                 )\nSET &BLANK = &STR( )\nSET &LASTX = &LAST\nISREDIT LINE_AFTER .ZLAST = '&LINEA'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEB'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEC'\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nSET &DEFSTR = +\n &NRSTR( DEF NVSAM(NAME(&DSN)\nSET &FIRST = &FIRST + 1\nISREDIT LINE_AFTER .ZLAST = '&STR(&DEFSTR)  -'\n SET &VOLSTR = &NRSTR(        VOL(VVVVVV) DEVT(3380)&STR())\nISREDIT LINE_AFTER .ZLAST = '&VOLSTR&STR())'\nIF &FIRST > &LAST THEN GOTO FINISH\nGOTO LOOP\nFINISH: +\nISREDIT LINE_AFTER .ZLAST = '/*'\nISREDIT DEL 1 &LAST ALL\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYAUNCAT": {"ttr": 1810, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x95)\\x0f\\x00\\x950\\x7f\"C\\x00+\\x00\\x1d\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1995-10-17T00:00:00", "modifydate": "1995-11-03T22:43:00", "lines": 43, "newlines": 29, "modlines": 0, "user": "E90138"}, "text": " /********************* SYAUNCAT ISPF EDIT MACRO *********************/\n /* SYAUNCAT IS CALLED BY SYAPDS OR SYAGENER                         */\n /*                                                                  */\n /* SYNTAX: SYAUNCAT                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT (LAST) = LINENUM .ZLAST\n SET &LINEA = +\n &STR(//UNCATLG  EXEC PGM=IEHPROGM                    )\n SET &LINEB = +\n &STR(//SYSPRINT DD SYSOUT=*                          )\n SET &LINEC = +\n &STR(//VVVVVV   DD UNIT=3380,VOL=SER=VVVVVV,DISP=SHR )\n SET &LINED = +\n &STR(//SYSIN    DD *                                 )\nSET &BLANK = &STR( )\nSET &LINE3 = &STR(               VOL=3380=VVVVVV)\nSET &LASTX = &LAST\nISREDIT LINE_AFTER .ZLAST = '&LINEA'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEB'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINEC'\nISREDIT LINE_AFTER .ZLAST = '//*'\nISREDIT LINE_AFTER .ZLAST = '&LINED'\nLOOP: +\nISREDIT (WRKLINE) = LINE &FIRST\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &DSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nSET &SUBDSN = &SUBSTR(2:&EVAL(&LENGTH(&DSN),&DSN)\nSET &DSN = &STR(&STR(T00.)&DSN)\nSET &FIRST = &FIRST + 1\nISREDIT LINE_AFTER .ZLAST = ' UNCATLG DSNAME=&DSN..DR'\nIF &FIRST > &LAST THEN GOTO FINISH\nGOTO LOOP\nFINISH: +\nISREDIT LINE_AFTER .ZLAST = '/*'\nISREDIT DEL 1 &LAST ALL\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VOID": {"ttr": 2050, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x950_\\x00\\x950_\" \\x00\\x0e\\x00\\x04\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-11-01T00:00:00", "modifydate": "1995-11-01T22:20:00", "lines": 14, "newlines": 4, "modlines": 0, "user": "E90138"}, "text": " /********************* VOID     ISPF EDIT MACRO *********************/\n /* VOID IS AN EDIT MACRO TO RESET THE PF10 KEY TO IT'S ORIGINAL     */\n /* VALUE AFTER THE EXECUTION OF THE INSERTM MACRO IF THE SECOND     */\n /* PART (PRESSING THE PF10 KEY OR USING THE MPAST MACRO).           */\n /*                                                                  */\n /* SYNTAX: VOID                                                     */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\n  ISPEXEC VGET (ZPF10 ISMPF10) PROFILE\n  SET &ZPF10 = &ISMPF10\n  ISPEXEC VPUT (ZPF10) PROFILE\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPANEL": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x94\\x04\\x1f\\x00\\x95\\x08\\x9f\\x14I\\x00)\\x00\\x1f\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1994-02-10T00:00:00", "modifydate": "1995-03-30T14:49:00", "lines": 41, "newlines": 31, "modlines": 0, "user": "E90138"}, "text": " /********************* VPANEL   ISPF EDIT MACRO *********************/\n /* VPANEL IS AN ISPF  EDIT  MACRO  THAT  WILL  EXECUTE THE ISPF 7.2 */\n /* FUNCTION, THEN RETURN TO THE  CURRENT  EDIT SESSION.  IF YOU ARE */\n /* EDITING  A  PANEL   FROM   A   LIBRARY   THAT  IS  ISPF  ISPPLIB */\n /* CONCATENATION OR A CLIST  THAT  CALLS  A  PANEL, YOU CAN VIEW OR */\n /* PREVIEW THE PANEL AND RETURN  TO YOUR SESSION.  THE VIEWED PANEL */\n /* WILL THEN BE PICKED UP  BY  ISPF  AS  THE CURRENT VERSION OF THE */\n /* PANEL FOR ANY DIALOG CALLING  IT.  PANEL ISPYP1 MUST BE MODIFIED */\n /* FOR THIS MACRO TO WORK.                                          */\n /*                                                                  */\n /* SYNTAX: VPANEL                                                   */\n /*                                                                  */\n /********************************************************************/\n\n ISREDIT MACRO (ISPYPPN)\n    IF &ISPYPPN = HELP  THEN DO\n     ISREDIT MACPEEK VPANEL\n    EXIT\n    END\n    IF &ISPYPPN = ?  THEN DO\n     ISREDIT MACPEEK VPANEL\n    EXIT\n    END\n ISPEXEC VPUT ISPYPPN PROFILE\n ISPEXEC VGET (ZPF03 ZPF15) PROFILE\n SET &VPFK03 = &ZPF03\n SET &VPFK15 = &ZPF15\n SET &ZPF03 = &STR(END;END;END;VPRESET)\n SET &ZPF15 = &STR(END;END;END;VPRESET)\n ISPEXEC VPUT (VPFK03 VPFK15) PROFILE\n ISPEXEC VPUT (ZPF03 ZPF15) PROFILE\n   SET ZEDSMSG = &STR(PF3/PF15 TO EXIT)\n   SET ZEDLMSG = &STR(PRESS THE PF3 OR PF15 KEY TO RETURN TO EDIT SES+\n  SION                  )\n   ISPEXEC SETMSG MSG(ISRZ001)\n          SET &ZTRAIL = 2\n          ISPEXEC VPUT ZTRAIL SHARED\n  IF &ISPYPPN = THEN GOTO BYPASS\n          ISPEXEC CONTROL NONDISPL ENTER\n  BYPASS: +\n          ISPEXEC SELECT PGM(ISPYXDR) PARM(ISR)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTZAPBLD": {"ttr": 2054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x011\\x00\\x00\\x00\\x95)\\x0f\\x00\\x950\\x7f\"\\x05\\x00\\xd6\\x00\\x08\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.49", "flags": 0, "createdate": "1995-10-17T00:00:00", "modifydate": "1995-11-03T22:05:00", "lines": 214, "newlines": 8, "modlines": 0, "user": "E90138"}, "text": " /********************* VTZAPBLD ISPF EDIT MACRO *********************/\n /* VTZAPBLD IS A SPECIAL PURPOSE EDIT MACRO TO BUILD JCL AND ZAP    */\n /* STATEMENTS FOR ZAPPING A VTOC.                                   */\n /*                                                                  */\n /* 1. RUN IEHLIST WITH THE LISTVTOC AND DUMP OPTIONS.               */\n /*          LISTVTOC VOL=3380=VVVVVV,DUMP                           */\n /*                                                                  */\n /* 2. ROUTE THE OUTPUT TO A DATASET.                                */\n /*                                                                  */\n /* 3. EDIT THE DATASET.                                             */\n /*                                                                  */\n /* 4. FIND THE DATASET NAME YOU WISH TO ZAP.                        */\n /*                                                                  */\n /* 5. ENTER VTZAPBLD ON THE COMMAND LINE AND PLACE THE CURSOR ON    */\n /*    THE DATASET NAME. PRESS ENTER.                                */\n /*                                                                  */\n /* **************************************************************** */\n /* **** NOTE DO NOT TRY THIS IF YOU DO NOT KNOW WHAT YOU DOING **** */\n /* **** LOSS OF DATA AND OR JOB COULD RESULT...                **** */\n /* **************************************************************** */\n /*                                                                  */\n /* SYNTAX: VTZAPBLD                                                 */\n /*                                                                  */\n /********************************************************************/\n\nISREDIT MACRO\nSET &BUMP = 1\nSET &BLANK = &STR( )\nISREDIT (ROW,COL) = CURSOR\nISREDIT (DATALINE) = LINE &ROW\nISREDIT LOCATE 1\nISREDIT F 'CONTENTS OF' FIRST\nISREDIT (ROW,COL) = CURSOR\nISREDIT (VOLLINE) = LINE &ROW\nSET &VOL = &SUBSTR(42:47,&STR(&VOLLINE))\nISREDIT X ALL\nISREDIT F '--IEHLIST' ALL\nISREDIT DEL NX ALL\nISREDIT (LAST) = LINENUM .ZLAST\nISREDIT (FIRST) = LINENUM .ZFIRST\nISREDIT RESET\nISREDIT F '&DATALINE' FIRST\nISREDIT (ROW,COL) = CURSOR\nISREDIT (WRKLINE) = LINE &ROW\nSET &WRKLINE = &SUBSTR(2:45,&STR(&WRKLINE))\nSET &LC = &SYSINDEX(&BLANK,&WRKLINE)\nSET &TDSN = &SUBSTR(1:&EVAL(&LC -1),&STR(&WRKLINE))\nSET &TDSNL = &EVAL(&LC -1)\nSET &ROW = &ROW + 2\nISREDIT (CLINE) = LINE &ROW\nSET &CCHHRR = &STR(&SUBSTR(105:114,&STR(&CLINE)))\nHEXSTRNG: +\nIF &BUMP > &TDSNL THEN GOTO BLDCARDS\nSET &C = &SUBSTR(&BUMP:&BUMP,&STR(&TDSN))\nGOTO HEXBLD\nHEXBLD: +\nIF &C = &STR(0) THEN SET &CC = &STR(F0)\nIF &C = &STR(1) THEN SET &CC = &STR(F1)\nIF &C = &STR(2) THEN SET &CC = &STR(F2)\nIF &C = &STR(3) THEN SET &CC = &STR(F3)\nIF &C = &STR(4) THEN SET &CC = &STR(F4)\nIF &C = &STR(5) THEN SET &CC = &STR(F5)\nIF &C = &STR(6) THEN SET &CC = &STR(F6)\nIF &C = &STR(7) THEN SET &CC = &STR(F7)\nIF &C = &STR(8) THEN SET &CC = &STR(F8)\nIF &C = &STR(9) THEN SET &CC = &STR(F9)\nIF &C = &STR(A) THEN SET &CC = &STR(C1)\nIF &C = &STR(B) THEN SET &CC = &STR(C2)\nIF &C = &STR(C) THEN SET &CC = &STR(C3)\nIF &C = &STR(D) THEN SET &CC = &STR(C4)\nIF &C = &STR(E) THEN SET &CC = &STR(C5)\nIF &C = &STR(F) THEN SET &CC = &STR(C6)\nIF &C = &STR(G) THEN SET &CC = &STR(C7)\nIF &C = &STR(H) THEN SET &CC = &STR(C8)\nIF &C = &STR(I) THEN SET &CC = &STR(C9)\nIF &C = &STR(J) THEN SET &CC = &STR(D1)\nIF &C = &STR(K) THEN SET &CC = &STR(D2)\nIF &C = &STR(L) THEN SET &CC = &STR(D3)\nIF &C = &STR(M) THEN SET &CC = &STR(D4)\nIF &C = &STR(N) THEN SET &CC = &STR(D5)\nIF &C = &STR(O) THEN SET &CC = &STR(D6)\nIF &C = &STR(P) THEN SET &CC = &STR(D7)\nIF &C = &STR(Q) THEN SET &CC = &STR(D8)\nIF &C = &STR(R) THEN SET &CC = &STR(D9)\nIF &C = &STR(S) THEN SET &CC = &STR(E2)\nIF &C = &STR(T) THEN SET &CC = &STR(E3)\nIF &C = &STR(U) THEN SET &CC = &STR(E4)\nIF &C = &STR(V) THEN SET &CC = &STR(E5)\nIF &C = &STR(W) THEN SET &CC = &STR(E6)\nIF &C = &STR(X) THEN SET &CC = &STR(E7)\nIF &C = &STR(Y) THEN SET &CC = &STR(E8)\nIF &C = &STR(Z) THEN SET &CC = &STR(E9)\nIF &C = &STR(.) THEN SET &CC = &STR(4B)\nIF &C = &STR($) THEN SET &CC = &STR(5B)\nIF &C = &STR(@) THEN SET &CC = &STR(7C)\nIF &C = &STR(#) THEN SET &CC = &STR(7B)\nIF &VX = YES THEN DO\nSET &VOLHEX = &STR(&VOLHEX&STR(&CC))\nGOTO BLDCARDS\nEND\nIF &BUMP < 23 THEN DO\nSET &ABCNAM = &STR(&ABCNAM&STR(&C)&STR( ))\nSET &HEXNAME = &STR(&HEXNAME&STR(&CC))\nEND\nIF &BUMP > 22 THEN DO\nSET &HEXNAME2 = &STR(&HEXNAME2&STR(&CC))\nSET &ABCNAM2 = &STR(&ABCNAM2&STR(&C)&STR( ))\nEND\nSET &BUMP = &BUMP + 1\n\nGOTO HEXSTRNG\nBLDCARDS: +\nSET &BUMP = 0\nSET &V1 = &V1 + 1\nIF &V1 > 6 THEN GOTO WRTCARDS\nSET &VX = YES\nSET &C = &SUBSTR(&V1:&V1,&STR(&VOL))\nGOTO HEXBLD\nWRTCARDS: +\nSET &LINEX =+\n&NRSTR(//ZAPVTOC  EXEC PGM=AMASPZAP                 )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(//SYSPRINT DD SYSOUT=*                       )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(//SYSLIB   DD DSN=FORMAT4.DSCB,DISP=SHR,     )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(//         UNIT=3380,VOL=SER=&VOL       )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(//SYSIN    DD *                              )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( CCHHRR  &CCHHRR                             )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(* AT 0000 VERIFY FULL DSNAME                 )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(*          &ABCNAM)\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( VER 0000  &HEXNAME)                                             C5E6F0\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nIF &ABCNAM2 \u00ac= THEN DO\nSET &LINEX =+\n&NRSTR(*          &ABCNAM2)\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( VER 0016  &HEXNAME2)                                            C5E6F0\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nEND\nSET &LINEX =+\n&NRSTR(*                                                              )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(*REP 0000 E2E8E2F1                                             )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(*REP 002D &VOLHEX                         VOLSER=&VOL )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(*REP 0033 0001                                 0000 (VOL SEQ #))\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 0038 000000                               EXPIRATION DATE )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 0052 40                                   DSORG           )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 0053 00                                   DSORG           )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 0054 90                                   RECFM           )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 0056 1810                                 BLOCK SIZE      )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 0058 0081                                 LRECL           )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR( REP 005D 00                                   PROTECTION BYTE )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nSET &LINEX =+\n&NRSTR(/*                                                             )\nISREDIT LINE_AFTER .ZLAST = '&LINEX'\nISREDIT DEL &FIRST &LAST ALL\nSET &LINE6 = +\n&STR(****************************************+\n     **********************************)\nSET &LINE5 = +\n&STR(*                                       )\nSET &LINE5A = +\n&STR(                                *)\nSET &LINE4 = +\n&STR(* THIS JCL STREAM WILL ZAP THE VTOC ENTRY INDICATED)\nSET &LINE4A = +\n&STR(* TO A DSORG OF PS SO THAT IT MAY BE DELETED.)\nSET &LINE3 = +\n&STR(* DO NOT USE THIS PROGRAM UNLESS YOU KNOW WHAT YOU )\nSET &LINE3A = +\n&STR(* ARE DOING. LOSS OF DATA COULD RESULT.)\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE6'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE5&LINE5A'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE4A'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE4'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE3A'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE3'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE5&LINE5A'\nISREDIT LINE_AFTER 0 = MSGLINE '&LINE6'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WCUT": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x00\\x93 \\x1f\\x00\\x95\\x08\\x9f\\x14\\x18\\x001\\x00#\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1993-07-20T00:00:00", "modifydate": "1995-03-30T14:18:00", "lines": 49, "newlines": 35, "modlines": 0, "user": "E90138"}, "text": " /********************* WCUT     ISPF EDIT MACRO *********************/\n /* WCUT IS A DIFFERENT KIND OF CUT MACRO.  WCUT (WINDOW CUT) ALLOWS */\n /* YOU TO CUT A SMALL  PART  OF  A  DATASET  AND PASTE THE CUT PART */\n /* SOMEWHERE ELSE USING THE WPASTE  MACRO.   A WORD, LINE, GROUP OF */\n /* CHARACTERS, OR ANY WINDOW OF YOUR DISPLAYED SCREEN CAN BE CUT BY */\n /* WCUT.  ENTER WCUT ON THE  COMMAND  LINE  AND PLACE THE CURSOR ON */\n /* THE FIRST CHARACTER TO  BE  INCLUDED.   PRESS ENTER.  THEN PLACE */\n /* THE CURSOR AT THE END OF THE  AREA OR WINDOW TO BE CUT AND PRESS */\n /* PF12.  THE AREA IN THE  WINDOW  DEFINED BY CURSOR PLACEMENT WILL */\n /* BE CUT AND CAN BE  LATER  PASTED  WITH WPASTE.  AS LITTLE AS ONE */\n /* CHARACTER CAN BE CUT AND PASTED.                                 */\n /*                                                                  */\n /* SYNTAX: WCUT                                                     */\n /*                                                                  */\n /********************************************************************/\n\n  ISREDIT MACRO (HELP)\n\n       IF &STR(&HELP) = HELP THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(WCUT)\n           EXIT\n           END\n\n       IF &STR(&HELP) = ? THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(WCUT)\n           EXIT\n           END\n\n  CONTROL  ASIS\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  SET LCC = &LASTCC\n  ISREDIT (ROW,COL) = CURSOR\n  SET &WCROWS = &ROW\n  SET &WCCOLS = &COL\n  ISPEXEC VPUT (WCCOLS WCROWS) PROFILE\n  ISPEXEC VGET (ZPF12) PROFILE\n  SET &WCZPF12 = &ZPF12\n  SET &ZPF12 = WCUT2\n  ISPEXEC VPUT (ZPF12 WCZPF12) PROFILE\n IF &ROW \u00ac=   THEN DO\n   SET ZEDSMSG = &STR(PLACE CURSOR PRESS PF12)\n   SET ZEDLMSG = &STR(PLACE CURSOR AT END OF TEXT PRESS PF12         +\n                        )\n   ISPEXEC SETMSG MSG(ISRZ001)\n END\n ISREDIT CURSOR = &ROW &COL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WCUT2": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01!\\x00\\x00\\x00\\x93 \\x1f\\x00\\x95\\x08\\x9f\\x14\\t\\x00>\\x00\\x02\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.33", "flags": 0, "createdate": "1993-07-20T00:00:00", "modifydate": "1995-03-30T14:09:00", "lines": 62, "newlines": 2, "modlines": 0, "user": "E90138"}, "text": " /********************* WCUT2    ISPF EDIT MACRO *********************/\n /* WCUT2 IS A SPECIAL PURPOSE EDIT  MACRO CALLED BE THE WCUT MACRO. */\n /* WCUT SETS PF12  TO  THE  VALUE  WCUT2,  WHIC  THEN  COMES IN AND */\n /* FINISHES THE WORK.  IT  RESETS  PF12  TO  ITS ORIGINAL VALUE AND */\n /* ISSUES A MESSAGE GIVING THE SIZE OF THE CUT AREA.                */\n /*                                                                  */\n /* SYNTAX: WCUT2     {CAN BE USED RATHER THAN PF12}                 */\n /*                                                                  */\n /********************************************************************/\n\n  ISREDIT MACRO (HELP)\n       IF &STR(&HELP) = HELP THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(WCUT)\n           EXIT\n           END\n\n       IF &STR(&HELP) = ? THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(WCUT)\n           EXIT\n           END\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n  SET &WSVAR = WSVAR\n  SET LCC = &LASTCC\n  ISREDIT (ROW,COL) = CURSOR\n  SET &WCROWE = &ROW\n  SET &WCCOLE = &COL\n  ISPEXEC VGET (WCCOLS WCROWS) PROFILE\n  SET &WSLEN = &COL - &WCCOLS\n  ISPEXEC VPUT (WCCOLE WCROWE) PROFILE\n  ISREDIT LABEL &WCROWS = .A\n  ISREDIT LABEL &WCROWE = .B\n  ISREDIT C X'50'  '@'  .ZFIRST .ZLAST ALL\n  SET &WS = &EVAL(&WCROWS)\n  SET &WE = &EVAL(&WCROWE)\n  SET &WT = &WE - &WS\n  SET &WT = &WT +1\n  SET &WL = &WCCOLE - &WCCOLS\n  SET &WL = &WL +1\n  ISPEXEC VPUT (WSLEN) PROFILE\nCUTLOOP: +\n   ISREDIT (CURLINE) = LINE &WS\n    SET WSVAR&WS = &SUBSTR(&WCCOLS:&WCCOLE,&NRSTR(&CURLINE))\n    ISPEXEC VPUT WSVAR&WS PROFILE\n    SET &WS = &WS + 1\n    IF &WS > &WE THEN GOTO FINISH:\n    GOTO CUTLOOP\nFINISH: +\n  ISREDIT C '@'  '50'X  .ZFIRST .ZLAST ALL\nISPEXEC VGET WCZPF12 PROFILE\nSET &ZPF12 = &WCZPF12\nISPEXEC VPUT ZPF12 PROFILE\n   SET ZEDSMSG = &STR(WINDOW &WL COLS X &WT ROWS)\n   SET ZEDLMSG = &STR(WINDOW &WL COLUMNS WIDE X &WT ROWS DEEP CUT FOR +\n   PASTING WITH WPASTE MACRO)\n   ISPEXEC SETMSG MSG(ISRZ001)\n   ISREDIT CURSOR = &ROW &COL\n   ISREDIT RESET\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WPASTE": {"ttr": 2063, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01E\\x00\\x00\\x00\\x93 \\x1f\\x00\\x95\\x08\\x9f\\x14$\\x00O\\x000\\x00\\x00\\xc5\\xf9\\xf0\\xf1\\xf3\\xf8@@@@'", "ispf": {"version": "01.69", "flags": 0, "createdate": "1993-07-20T00:00:00", "modifydate": "1995-03-30T14:24:00", "lines": 79, "newlines": 48, "modlines": 0, "user": "E90138"}, "text": " /********************* WPASTE   ISPF EDIT MACRO *********************/\n /* WPASTE IS AN ISPF EDIT MACRO  TO  PASTE THE DATA CUT BY THE WCUT */\n /* EDIT MACRO.  THE WPASTE  MACRO  PASTES  OVER THE DATA WITHIN THE */\n /* WINDOW.  IT DOES NOT  INSERT  LINES.   TYPE  WCUT ON THE COMMAND */\n /* LINE AND PLACE THE CURSOR AT  THE BEGINNING OF THE AREA YOU WISH */\n /* THE BEGINNING IF THE CUT WINDOW  TO BE PASTED.  AS LITTLE AS ONE */\n /* CHARACTER CAN BE CUT OR PASTED.                                  */\n /*                                                                  */\n /*                                                                  */\n /* SYNTAX: WPASTE    {PLACE CURSOR WHERE PASTE IS TO BEGIN}         */\n /*                                                                  */\n /********************************************************************/\n\n  ISREDIT MACRO (HELP)\n       IF &STR(&HELP) = HELP THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(WPASTE)\n           EXIT\n           END\n\n       IF &STR(&HELP) = ? THEN +\n           DO\n           ISPEXEC DISPLAY PANEL(WPASTE)\n           EXIT\n           END\n\n  ISPEXEC CONTROL ERRORS RETURN\n  CONTROL ASIS\n    SET &PPART1 = &STR()\n    SET &PPART3 = &STR()\n  SET &SPACES = &STR(``````````````````````````````````````````````````+\n  `````````````````````)\n  CONTROL MSG\n  SET &WSVAR = WSVAR\n  ISREDIT (LB,RB) = BOUNDS\n  ISREDIT (ROW,COL) = CURSOR\n  SET &WCPASR = &ROW\n  SET &WCPASC = &COL\n  SET &WCPASC = &WCPASC -1\n  ISPEXEC VGET (WCCOLS WCROWS) PROFILE\n  ISPEXEC VGET (WCCOLE WCROWE) PROFILE\n  ISPEXEC VGET (WSLEN) PROFILE\n  SET COPYLEN = &WSLEN\n     SET &COPYLEN = &COPYLEN + 1\n  SET &WSLEN = &EVAL(&WSLEN + &COL)\n  SET &WSLEN = &WSLEN + 1\n  SET &WS = &EVAL(&WCROWS)\n  SET &LR = &EVAL(&WCROWE - &WCROWS)\n  SET &WE =   &LR + &WS\n  SET &PS = &EVAL(&WCPASR)\n  ISREDIT LABEL &PS = .A\n  SET &LC = &EVAL(&WCROWE - &WCROWS)\n  SET &LC = &LC + &PS\n  ISREDIT LABEL &LC = .B\n  ISREDIT C X'50'  '@'   .ZFIRST .ZLAST ALL\nPASLOOP: +\n   ISREDIT (CURLINE) = LINE &PS\n    IF &WCPASC = &LB | &WCPASC > &LB THEN +\n    SET &PPART1 =  &SUBSTR(&LB:&WCPASC,&NRSTR(&CURLINE))\n    ISPEXEC VGET (WSVAR&WS) PROFILE\n     SET &PPART2 = &STR(&&WSVAR&WS)\n     SET &PPART2 = &STR(&NRSTR(&PPART2&SPACES))\n     SET &PPART2 = &SUBSTR(1:&COPYLEN,&STR(&PPART2))\n     IF &RB > &WSLEN | &RB = &WSLEN THEN +\n      SET &PPART3 = &SUBSTR(&WSLEN:&RB,&NRSTR(&CURLINE))\n   ISREDIT LINE &PS = \"&PPART1&PPART2&PPART3\"\n    SET &WS = &WS + 1\n    SET &PS = &PS + 1\n    IF &WS > &WE THEN GOTO FINISH\n    GOTO PASLOOP\nFINISH: +\n  ISREDIT C '@'  '50'X  .ZFIRST .ZLAST ALL\n  ISREDIT C X'79' X'40'  .A .B ALL\nISPEXEC VGET WCZPF12 PROFILE\nSET &ZPF12 = &WCZPF12\nISPEXEC VPUT ZPF12 PROFILE\nISREDIT RESET\nISREDIT CURSOR = &ROW &COL\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT251/FILE251.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT251", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}