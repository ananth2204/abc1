{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011203000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE080.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE080.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x0b'", "DS1TRBAL": "b'\\x1e&'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\x84\\x00\\x0e\\x00\\x85\\x00\\x03\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"###PROSE": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "************************************************************************\n* Updated: April 25, 1988 by Scott Wilson (City of Long Beach)         *\n*                                                                      *\n* Updates included: 1. Elimination of extraneous MODESETs              *\n*                   2. Addition of GENERICS program                    *\n************************************************************************\n\nThis dataset contains the source code for six programs, all of which\nextract data from the RACF dataset(s) and format it into output files\nsuitable for use with report writers (such as DYL280, etc.) or input to\nuser written programs.\n\nEach of these programs processes a different kind of RACF profile. The\nprofile type processed is indicated in the program name; i.e., RACFUSER\nprocesses USER profiles, RACFDSET processes DATASET profiles, RACFGRES\nprocesses GENERAL RESOURCE profiles, and RACFGRP1 and RACFGRP2 process\nGROUP profiles. GENERICS is a program which returns the protecting\nGENERIC dataset profile for any input dataset names.\n\nEach of the programs has been coded without much DCB information (except\nfor LRECL) specified to allow flexibility in the end user environment.\n\nEach of the programs has been written, debugged, tested, and implemented\ninto production in a MVS/XA, Assembler-H verion 2, and RACF 1.7 shop,\nbut the author can see no reason why these jobs shouldn't be fully\nusable in other environments with few or no changes whatsoever.\n\nAlso included are several sets of sample JCL to use the programs to\nproduce simple SYSOUT datasets, but this is far from the best use for\nthese programs. They are particularly useful when the output from them\nis combined, as in the example contained in member SAMPLE of this\ndataset. This example (for those not fortunate enough to have SAS and/or\nDYL280 in their shops) takes the output from RACFUSER and RACFGRES (as\nrun against IMS transactions), merges them by user-ID, and prints a\nreport of IMS transaction authorizations sorted by user name. Nifty, eh?\n\nThe GENERICS program is characterized by an unusual input format (where\nthe dataset name is placed in columns 19-63 and the volume of residence\nfor the dataset is in columns 13-18) to accomodate the raw output of the\nDMS/OS SVD report program as input to the program. An example of using\nGENERICS in conjunction with DMS/OS for input and DYL-280 for output is\npresented in member JCLGNRC2, and an example of using GENERICS alone is\npresented in member JCLGNRC1.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENERICS": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "***********************************************************************\n* PROGRAM TO READ IN A DMS/OS SVD RAW DATA FILE, AND TO OUTPUT A LIST *\n* OF DATASETS AND THE RACF PROFILES WHICH PROTECT THEM                *\n***********************************************************************\nGENERICS START 0\n         STM   R14,R12,12(13)          SAVE MVS REGISTERS\n         BALR  R12,R0                  ESTABLISH R12 AS BASE REGISTER\n         USING *,R12                   INDICATE STARTING POINT FOR R12\n         ST    R13,SAVEAREA+4          STORE MVS SAVEAREA ADDRESS\n         LA    R13,SAVEAREA            LOAD SAVEAREA ADDRESS\n         OPEN  (PROFILES,(OUTPUT))     OPEN OUTPUT FILE\n         OPEN  (DMSOSSVD,(INPUT))      OPEN INPUT FILE\n*\n***********************************************************************\n* READ IN A RECORD FROM THE DMS/OS SVD RAW FILE, AND MOVE THE VOLUME  *\n* AND DSN DATA TO AN OUTPUT AREA, WHICH IS ALSO WHERE RACHECK WILL    *\n* LOOK FOR IT.                                                        *\n***********************************************************************\nREADSVD  EQU   *\n         GET   DMSOSSVD,DMSRECRD       READ A DMS SVD RECORD\n         MVC   VOLUME(6),RPTVOLNO      MOVE VOLSER TO OUTPUT FIELD\n         MVC   DATASET(44),RPTDSNAM    MOVE DATASET TO OUTPUT FIELD\n*\n***********************************************************************\n* LOCATE THE RACHECK PARAMETER LIST AND ZAP ON THE \"PRIVATE\" BIT THAT *\n* WILL RESULT IN RACHECK RETURNING A PROFILE NAME. THE RACHECK ITSELF *\n* MUST, HOWEVER, BE DONE IN KEY ZERO WHEN THE PRIVATE BIT IS ON.      *\n***********************************************************************\nRACFMAC  EQU   *\n         LA    R2,LISTFORM             LOAD ADDRESS OF RACHECK PARMS\n         USING ACHKLIST,R2             SET ADDRESSABILITY TO PARMS\n         OI    ACHKFLG3,ACHKPRI        SET \"PRIVATE\" BIT\n         DROP  R2                      DROP REGISTER ADDRESSABILITY\n         MODESET KEY=ZERO              GO KEY ZERO FOR PRIVATE RACHECK\n         RACHECK MF=(E,LISTFORM)       RETURN PROTECTING PROFILE\n         C     R15,=XL4'00000004'      CHECK RACHECK RETURN CODE\n         BP    ERROR                   BRANCH OUT IF RC > 4\n         BM    GOTPROF                 WRITE OUTPUT RECORD IF RC < 4\n         MVC   PROFILE(44),=CL44'*** NONE ***'  NOT PROTECTED IF RC = 4\n         B     CHGKEY                  WRITE OUTPUT RECORD\nGOTPROF  MVC   PROFILE(44),4(R1)       MOVE PROFILE NAME TO OUTPUT AREA\nCHGKEY   MODESET KEY=NZERO             RETURN TO NON-KEY ZERO STATE\n         PUT   PROFILES,OUTAREA        WRITE OUTPUT RECORD\n         B     READSVD                 READ ANOTHER INPUT RECORD\n*\n***********************************************************************\n* ERROR ROUTINE FOR RACHECK RETURN CODES GREATER THAN 4               *\n***********************************************************************\nERROR    EQU   *\n         MODESET KEY=NZERO             RETURN TO NON-KEY ZERO STATE\n         ST    R15,ERRCODE             STASH R15 IN A SAFE PLACE\n*\n***********************************************************************\n* CLOSE FILES AND TERMINATE PROCESSING                                *\n***********************************************************************\nCLOSING  CLOSE PROFILES                CLOSE OUTPUT FILE\n         CLOSE DMSOSSVD                CLOSE INPUT FILE\n         L     R15,ERRCODE             LOAD PROGRAM RETURN CODE\n         L     R13,SAVEAREA+4          RESTORE MVS SAVEAREA ADDRESS\n         L     R14,12(R13)             RESTORE MVS REGISTER 14\n         LM    R0,R12,20(R13)          RESTORE MVS REGISTERS 0-12\n         BR    R14                     RETURN TO MVS\n         EJECT\n***********************************************************************\n* PROGRAM STORAGE                                                     *\n***********************************************************************\nSAVEAREA DS    18F                     SAVE AREA FOR SYSTEM REGISTERS\nERRCODE  DC    F'0'                    PROGRAM RETURN CODE\n         SPACE\nDMSRECRD DS    0CL98                   DMS/OS DEFINED INPUT RECORD\nRPTBUILD DS    0F\n         DC    H'100,0'\nRPTTABLE DC    CL10'RPTNSVDICT'\nRPTDEVCL DS    XL2                     DEVICE CLASS\nRPTVOLNO DS    CL6                     VOLUME SERIAL\nRPTDSNAM DS    CL44                    DATA SET NAME\nRPTDSORG DS    XL2                     DSORG\nRPTRECFM DS    XL1                     RECFM\nRPTBLKSI DS    XL2                     BLOCKSIZE\nRPTLRECL DS    XL2                     LRECL\nRPTSCALO DS    XL1                     SECONDARY ALLOCATION\nRPTSCQTY DS    XL3                     SECONDARY ALLOCATION QUANTITY\nRPTTKSUM DS    XL3                     TOTAL TRACKS ALLOCATED\nRPTCREDT DS    XL3                     CREATION DATE - YYDDD\nRPTEXPDT DS    XL3                     EXPIRATION DATE - YYDDD\nRPTDSIND DS    XL1                     SECURITY\nRPTPRMAL DS    XL2                     PRIMARY ALLOCATION\nRPTIDLET DS    XL2                     IDLE TRACKS\nRPTVOLAD DS    CL4                     VOLUME ADDRESS\nRPTCATLG DS    CL1                     CATALOG STATUS\nRPTLUSDT DS    XL3                     LAST USED DATE - YYDDD\nRPTNOEXT DS    XL1                     EXTENT COUNT\n         SPACE\nOUTAREA  DS    0CL94                   OUTPUT RECORD\nVOLUME   DS    CL6                     DATASET RESIDENCE VOLUME\nDATASET  DS    CL44                    DATASET NAME\nPROFILE  DS    CL44                    PROTECTING PROFILE NAME\n         EJECT\n***********************************************************************\n* DCB'S                                                               *\n***********************************************************************\nDMSOSSVD DCB   DDNAME=DMSOSSVD,DSORG=PS,MACRF=(GM),EODAD=CLOSING\nPROFILES DCB   DDNAME=PROFILES,DSORG=PS,MACRF=(PM)\n         EJECT\n***********************************************************************\n* REGISTER EQUATES                                                    *\n***********************************************************************\nR0       EQU   0                       USED BY SYSTEM MACORS\nR1       EQU   1                       USED BY SYSTEM MACORS\nR2       EQU   2                       ADDRESS OF RACHECK PARM LIST\nR3       EQU   3                       *** UNUSED ***\nR4       EQU   4                       *** UNUSED ***\nR5       EQU   5                       *** UNUSED ***\nR6       EQU   6                       *** UNUSED ***\nR7       EQU   7                       *** UNUSED ***\nR8       EQU   8                       *** UNUSED ***\nR9       EQU   9                       *** UNUSED ***\nR10      EQU   10                      *** UNUSED ***\nR11      EQU   11                      *** UNUSED ***\nR12      EQU   12                      GENERICS PROGRAM BASE REGISTER\nR13      EQU   13                      REGISTER SAVEAREA ADDRESS\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      PROGRAM RETURN CODE\n         EJECT\n***********************************************************************\n* LIST FORMAT MACROS                                                  *\n***********************************************************************\nLISTFORM RACHECK ENTITY=DATASET,CLASS='DATASET',RELEASE=1.7,           +\n               ATTR=READ,DSTYPE=N,LOG=NOSTAT,RACFIND=NO,GENERIC=ASIS,  +\n               STATUS=NONE,VOLSER=VOLUME,MF=L\n         EJECT\n***********************************************************************\n* MAPPING MACROS                                                      *\n***********************************************************************\n         ICHACHKL                      RACHECK PARM LIST MAPPING MACRO\n         END   GENERICS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLDSET": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*********************************************************************\n//* THE FORMAT OF THE OUTPUT RECORDS PRODUCED BY THIS PROGRAM IS:     *\n//*                                                                   *\n//*    COLUMNS  1-44: DATASET PROFILE NAME                            *\n//*    COLUMNS 45-52: RESOURCE CLASS (SHOULD ALWAYS BE \"DATASET\")     *\n//*    COLUMNS 53-60: OWNER                                           *\n//*    COLUMN     61: UACC                                            *\n//*    COLUMN  62-69: AUTHORIZED USER                                 *\n//*    COLUMN     70: AUTHORIZED USER'S ACCESS AUTHORITY              *\n//*    COLUMN  71-78: PROFILE TYPE (\"GENERIC\" OR \"DISCRETE\")          *\n//*                                                                   *\n//*********************************************************************\n//RACFDSET EXEC PGM=RACFDSET\n//STEPLIB    DD DSN=insert your authorized library here,DISP=SHR\n//DSETFILE   DD SYSOUT=*,DCB=(LRECL=78,BLKSIZE=23440,RECFM=FB)\n//SYSUDUMP   DD SYSOUT=*\n//SYSABEND   DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLGNRC1": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*********************************************************************\n//* JOBSTREAM TO PRODUCE A REPORT OF DATASETS AND THEIR PROTECTING    *\n//* PROFILES                                                          *\n//*                                                                   *\n//* INPUT TO THIS PROGRAM IS FORMATTED AS FOLLOWS:                    *\n//*                                                                   *\n//*               COLUMNS 13-18: VOLSER CONTAINING DATASET            *\n//*               COLUMNS 19-63: DATASET NAME                         *\n//*                                                                   *\n//* OUTPUT FROM THIS PROGRAM IS FORMATTED AS FOLLOWS:                 *\n//*                                                                   *\n//*               COLUMNS   1-6: VOLSER CONTAINING DATASET            *\n//*               COLUMNS  7-50: DATASET NAME                         *\n//*               COLUMNS 51-94: PROTECTING RACF PROFILE              *\n//*                                                                   *\n//*********************************************************************\n//GENERICS EXEC PGM=GENERICS\n//STEPLIB    DD DSN=insert your authorized library here,DISP=SHR\n//DMSOSSVD   DD *\n            IPLXA1SYS1.LINKLIB\n            IPLXA2SYS1.PARMLIB\n            IPLXA1SYS1.LPALIB\n            IPLXA3SYS1.MACLIB\n//PROFILES   DD SYSOUT=*,DCB=(LRECL=94,BLKSIZE=18988,RECFM=FB)\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLGNRC2": {"ttr": 525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*********************************************************************\n//* JOBSTREAM TO PRODUCE A REPORT OF DATASETS AND THEIR PROTECTING    *\n//* PROFILES, USING DMS/OS SVD RAW OUTPUT AS INPUT, AND DYL-280 AS    *\n//* A REPORT GENERATION TOOL                                          *\n//*********************************************************************\n//*\n//*********************************************************************\n//* GENERATE DMS/OS SVD RECORDS                                       *\n//*********************************************************************\n//DMSOSSVD EXEC PGM=ADSMI002,PARM=ADSDM151,REGION=1024K\n//STEPLIB    DD DISP=SHR,DSNAME=insert your DMS/OS library here\n//A1         DD DUMMY,DISP=SHR\n//A2         DD DUMMY,DISP=SHR\n//CMDPRINT   DD SYSOUT=*\n//MSGPRINT   DD SYSOUT=*,DCB=BUFNO=0\n//PARMLIB    DD DISP=SHR,DSNAME=insert your DMS/OS library here\n//REPORTS    DD DISP=(NEW,PASS),DSNAME=&&SVDRAW,\n//           DCB=(BLKSIZE=3004,DSORG=PS,LRECL=3000,RECFM=VB),\n//           SPACE=(3004,(380,380)),UNIT=SYSDA\n//SYSPRINT   DD SYSOUT=*\n//SYSUDUMP   DD SYSOUT=*\n//SYSIN      DD *\nREPORT RPT=SVD,VOL=/,DSN=/\n//*\n//*********************************************************************\n//* DETERMINE PROTECTING PROFILES                                     *\n//*********************************************************************\n//GENERICS EXEC PGM=GENERICS,COND=(4,LT)\n//STEPLIB    DD DSN=insert your authorized library here,DISP=SHR\n//DMSOSSVD   DD DSN=&&SVDRAW,DISP=(OLD,DELETE,DELETE)\n//PROFILES   DD DSN=&&PROFILES,DISP=(NEW,PASS),UNIT=SYSDA,\n//           SPACE=(CYL,(1,1)),DCB=(LRECL=94,BLKSIZE=18988,RECFM=FB)\n//*\n//*********************************************************************\n//* MAKE A PRETTY OUTPUT REPORT                                       *\n//*********************************************************************\n//DYL280   EXEC DYL280,COND=(4,LT)\n//SYSIN      DD *\nOPTION PRINTERROR\nFILE PROFILES FB 94 18988\nVOLUME   6  1 CH\nDATASET 44  7 CH\nPROFILE 44 51 CH\n*\nSORT PROFILES USING PROFILE DATASET VOLUME\n*\nLIST SUPPRESS PROFILE (PROTECTING'PROFILE)\n              DATASET (DATASET'NAME)\n              VOLUME  (RESIDENCE'VOLUME)\n*\nT1     ' '\nT1+1   DYLDATE\nT1+10  DYLETIME\nT1+120 DYLPAGE\nT2     'GENERIC PROFILE COVERAGE OF RACF PROTECTED DATASETS'\n       WITH 2 AFTER\n*\nFIN\n//PROFILES DD DSN=&&PROFILES,DISP=(OLD,DELETE,DELETE)\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLGRES": {"ttr": 527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*********************************************************************\n//* THE FORMAT OF THE OUTPUT RECORDS IS AS FOLLOWS:                   *\n//*                                                                   *\n//*           COLUMNS   1-8: RESOURCE NAME                            *\n//*           COLUMNS  9-16: RESOURCE CLASS                           *\n//*           COLUMNS 17-24: OWNER                                    *\n//*           COLUMN     25: UACC                                     *\n//*           COLUMN  26-33: AUTHORIZED USER                          *\n//*           COLUMN     34: AUTHORIZED USER'S ACCESS AUTHORITY       *\n//*                                                                   *\n//*********************************************************************\n//RACFGRES EXEC PGM=RACFGRES,\n// PARM='insert your general resource class name here'\n//STEPLIB    DD DSN=insert your authorized library name here,DISP=SHR\n//GRESFILE   DD SYSOUT=*,DCB=(LRECL=37,BLKSIZE=23458,RECFM=FB)\n//SYSUDUMP   DD SYSOUT=*\n//SYSABEND   DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLGRP1": {"ttr": 529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*\n//RACFGRP1 EXEC PGM=RACFGRP1\n//*********************************************************************\n//* THE OUTPUT FROM RACFGRP1 IS FORMATTED AS FOLLOWS:                 *\n//*                                                                   *\n//*           COLUMNS   1-8: GROUP NAME                               *\n//*           COLUMNS  9-16: SUPERIOR GROUP                           *\n//*           COLUMNS 17-24: OWNER                                    *\n//*           COLUMN     25: UACC                                     *\n//*           COLUMN     26: NOTERMUACC                               *\n//*           COLUMNS 27-28: NUMBER OF SUBGROUPS                      *\n//*           COLUMNS 29-36: SUBGROUP NAME                            *\n//*                                                                   *\n//*********************************************************************\n//STEPLIB      DD DSN=insert your authorized library name here,DISP=SHR\n//GRP1FILE     DD SYSOUT=*,DCB=(LRECL=36,BLKSIZE=23472,RECFM=FB)\n//SYSUDUMP     DD SYSOUT=*\n//SYSABEND     DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLGRP2": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*\n//RACFGRP2 EXEC PGM=RACFGRP2\n//*********************************************************************\n//* THE OUTPUT FROM RACFGRP2 IS FORMATTED AS FOLLOWS:                 *\n//*                                                                   *\n//*           COLUMNS   1-8: GROUP NAME                               *\n//*           COLUMNS  9-16: SUPERIOR GROUP                           *\n//*           COLUMNS 17-24: OWNER                                    *\n//*           COLUMN     25: UACC                                     *\n//*           COLUMN     26: NOTERMUACC                               *\n//*           COLUMNS 27-28: NUMBER OF CONNECTED USERS                *\n//*           COLUMNS 29-36: CONNECTED USER-ID                        *\n//*           COLUMN     37: GROUP AUTHORITY OF CONNECTED USER        *\n//*********************************************************************\n//STEPLIB      DD DSN=insert your authorized library name here,DISP=SHR\n//GRP2FILE     DD SYSOUT=*,DCB=(LRECL=37,BLKSIZE=23458,RECFM=FB)\n//SYSUDUMP     DD SYSOUT=*\n//SYSABEND     DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLUSER": {"ttr": 533, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*********************************************************************\n//* TWO OUTPUT RECORDS ARE PRODUCED FOR EACH USER-ID EXTRACTED.       *\n//* THESE RECORDS ARE FORMATTED AS FOLLOWS:                           *\n//*                                                                   *\n//* RECORD 1: COLUMNS   1-8: USER-ID                                  *\n//*           COLUMNS  9-28: USER NAME                                *\n//*           COLUMNS 29-36: OWNER                                    *\n//*           COLUMNS 37-44: DEFAULT GROUP                            *\n//*           COLUMN     45: REVOKED INDICATOR                        *\n//*           COLUMN     46: SPECIAL INDICATOR                        *\n//*           COLUMN     47: OPERATIONS INDICATOR                     *\n//*           COLUMN     48: AUDITOR INDICATOR                        *\n//*           COLUMN     49: USER AUDIT INDICATOR                     *\n//*           COLUMNS 50-52: LAST SIGNON DATE                         *\n//*           COLUMNS 53-56: LAST SIGNON TIME                         *\n//*           COLUMNS 57-59: LAST PASSWORD CHANGE DATE                *\n//*           COLUMN     60: PASSWORD CHANGE INTERVAL                 *\n//*                                                                   *\n//* RECORD 2: COLUMNS 1-255: USER DATA AREA                           *\n//*********************************************************************\n//RACFUSER EXEC PGM=RACFUSER\n//STEPLIB    DD DSN=insert your authorized library name here,DISP=SHR\n//USERFILE   DD SYSOUT=*,DCB=(LRECL=255,BLKSIZE=18870,RECFM=FB)\n//SYSUDUMP   DD SYSOUT=*\n//SYSABEND   DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACFDSET": {"ttr": 535, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "RACFDSET START 0\n***********************************************************************\n* THE PURPOSE OF THIS PROGRAM IS TO EXTRACT INFORMATION FROM ALL      *\n* DATASET PROFILES IN A RACF 1.7 DATASET. THE EXTRACTED DATA          *\n* IS PUT INTO A FILE WITH RECORDS FORMATTED AS FOLLOWS:               *\n*                                                                     *\n*           COLUMNS  1-44: DATASET NAME                               *\n*           COLUMNS 45-52: RESOURCE CLASS (SHOULD ALWAYS BE \"DATASET\")*\n*           COLUMNS 53-60: OWNER                                      *\n*           COLUMN     61: UACC                                       *\n*           COLUMN  62-69: AUTHORIZED USER                            *\n*           COLUMN     70: AUTHORIZED USER'S ACCESS AUTHORITY         *\n*           COLUMN  71-78: PROFILE TYPE (\"GENERIC\" OR \"DISCRETE\")     *\n*                                                                     *\n* NOTE: THIS PROGRAM MUST BE LINKEDITED INTO AND RUN FROM AN APF      *\n*       AUTHORIZED LIBRARY.                                           *\n*                                                                     *\n* LAST UPDATE: 3/11/88 BY SCOTT WILSON (REMOVED UNNECESSARY MODESETS) *\n***********************************************************************\nR0       EQU   0                       USED BY SYS. MACROS\nR1       EQU   1                       USED BY SYS. MACROS\nR2       EQU   2                       1ST BASE REGISTER FOR WORKSPACE\nR3       EQU   3                       USER COUNT\nR4       EQU   4                       MULTIPLIER REGISTER\nR5       EQU   5                       2ND BASE REGISTER FOR WORKSPACE\nR6       EQU   6                       DUMMY REGISTER FOR MVCL;\n*                                      3RD BASE REGISTER FOR WORKSPACE\nR7       EQU   7                       ZERO INDICATOR FOR MVCL\nR8       EQU   8                       ADDRESS OF WORKAREA\nR9       EQU   9                       LENGTH OF WORKAREA\nR10      EQU   10                      ADDRESS OF END OF WORKAREA\nR11      EQU   11                      LENGTH OF DATASET NAME\nR12      EQU   12                      PROGRAM BASE REGISTER\nR13      EQU   13                      ADDRESS OF MVS SAVEAREA\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      COMPLETION CODE\n*\n***********************************************************************\n* START OF JOB HOUSEKEEPING                                           *\n***********************************************************************\n         STM   R14,R12,12(R13)         STORE MVS REGISTERS\n         BALR  R12,0                   ESTABLISH R12 AS BASE REGISTER\n         USING *,R12                   IDENTIFY BASE REGISTER\n         ST    R13,SAVEAREA+4          STORE ADD. OF MVS REG. SAVEAREA\n         LA    R13,SAVEAREA            LOAD ADDRESS OF PGM. SAVEAREA\n*\n***********************************************************************\n* SET ADDRESSABILITY TO A 32K WORKSPACE (MAXIMUM RACF PROFILE SIZE)   *\n***********************************************************************\nWORKADDR EQU   *\n         LA    R2,WORKSPCE             LOAD ADDRESS OF WORKSPACE\n         USING WORKSPCE,R2             SET ADDRESSABILITY TO WORKSPACE\n*\n***********************************************************************\n* OPEN OUTPUT FILES                                                   *\n***********************************************************************\n         OPEN  (DSETFILE,(OUTPUT))     OPEN OUTPUT FILE\n*\n***********************************************************************\n* SET THE LENGTH OF THE WORKAREA AND PROFILE ENTRY                    *\n***********************************************************************\nINITPROF MVI   PROFILE,X'01'           INITIAL PROFILE LENGTH = 1 BYTE\n         MVC   WRKLNGTH(4),=XL4'00008000' PUT WORKAREA LENGTH WHERE...\n*                                         ...RACF CAN FIND IT\n         MVI   ENTRYNAM,X'00'             CLEAR DATASET PROFILE NAME...\n         MVC   ENTRYNAM+1(43),ENTRYNAM    ...IN TWO STEPS\n***********************************************************************\n* GET A RACF PROFILE                                                  *\n***********************************************************************\nCLERWORK EQU   *\n         L     R7,=XL4'00000000'       INDICATE CLEAR FUNCTION TO MVCL\n         LA    R8,WORKDATA             LOAD ADDRESS OF WORK AREA\n         L     R9,=XL4'00007FE4'       LOAD LENGTH OF DATA IN WORKAREA\n         MVCL  R8,R6                   ZERO OUT THE WORK AREA\n         CLI   GENFLAG,X'80'           WAS PREVIOUS PROFILE GENERIC?\n         BNE   DISCPROF                IF NOT, ASSUME DISCRETE\n         ICHEINTY NEXTC,MF=(E,GENERIC) IF SO, ASSUME ANOTHER GENERIC\n         CLI   GENFLAG,X'80'           WAS RETURNED PROFILE GENERIC?\n         BNE   MARKDISC                IF NOT, MARK IT AS DISCRETE\nGENPROF  MVC   OUTPTYPE,=CL8'GENERIC ' INDICATE GENERIC PROFILE\n         B     CHECKRC                 CHECK ICHEINTY RETURN CODE\nDISCPROF EQU   *\n         ICHEINTY NEXTC,MF=(E,DISCRETE)    DISCRETE ICHEINTY\n         CLI   GENFLAG,X'80'           WAS RETURNED PROFILE GENERIC?\n         BE    GENPROF                 IF SO, MARK IT AS GENERIC\nMARKDISC MVC   OUTPTYPE,=CL8'DISCRETE' INDICATE DISCRETE PROFILE\n         MVI   GENFLAG,X'00'           INDICATE DISCRETE LAST PROCESSED\nCHECKRC  LTR   R15,R15                 CHECK RETURN CODE FROM ICHEINTY\n         BNZ   WRAPUP                  IF NON-ZERO, EXIT THIS PROGRAM\n*\n***********************************************************************\n* WRITE THE RETURNED DATA                                             *\n***********************************************************************\n         MVI   OUTRECRD,C' '           PROPOGATE BLANK SPACE TO...\n         MVC   OUTRECRD+1(69),OUTRECRD ...OUTPUT RECORD IN TWO STEPS\n         LA    R10,WORKDATA            LOAD ADDRESS OF RETURNED DATA\n         A     R10,DATALNTH            ADD LENGTH OF RETURNED DATA\n         L     R11,DSETLNTH            LOAD LENGTH OF DSET-ID\n         S     R11,=XL4'00000001'      SUBTRACT 1 FROM DSET-ID LENGTH\n         EX    R11,MOVEDSET            ALTER LENGTH OF DSET-ID FOR MVC\n         B     MOVECLAS                DON'T EXECUTE MVC TWICE\nMOVEDSET MVC   OUTDSET(0),ENTRYNAM     MOVE DATASET INTO OUTPUT FIELD\nMOVECLAS MVC   OUTCLASS(8),=CL8'DATASET '  MOVE RESOURCE CLASS TO O'PUT\n         MVC   OUTOWNER(8),WORKDATA+2  MOVE OWNER INTO OUTPUT FIELD\n         MVC   OUTUACC(1),WORKDATA+12  MOVE UACC TO OUTPUT FIELD\n         LH    R3,WORKDATA+15          LOAD NUMBER OF USER-IDS\n         SLL   R3,16                   TRUNCATE SIGN FIELD\n         SRL   R3,16                   RIGHT JUSTIFY NUMBER OF USERS\n         LA    R6,WORKDATA+19          LOAD ADDRESS OF FIRST USER-ID\n         USING USER$ID,R6              SET ADDRESSABILITY TO USER-ID\n         SR    R4,R4                   CLEAR OUT REGISTER 4\n         C     R3,=XL4'00000000'       ARE THERE AUTHORIZED USERS?\n         BNZ   FINDACES                IF SO, LOCATE ACCESS LIST\n         L     R3,=XL4'00000001'       IF NOT, WRITE INDICATIVE...\n         MVC   OUTUSER(8),=CL8'* NONE *'  ...RECORD CONTAINING...\n         MVI   OUTACESS,X'00'             ...THIS INFO\n         B     WRITEIT                 WRITE THE OUTPUT RECORD\nFINDACES LR    R5,R3                   LOAD # OF USERIDS\n         M     R4,=XL4'00000008'       MULTIPLY BY USER-ID LENGTH (8)\n         A     R5,=XL4'00000002'       ADD OFFSET FOR ACCESS PREFIX\n         AR    R5,R6                   ADD ADDRESS OF FIRST USER-ID\n         USING ACCESS,R5               SET ADDRESSABILITY TO ACCESS\nNEXTUSER EQU   *\nMOVEUSER EQU   *\n         MVC   OUTUSER(8),0(R6)        MOVE USER-ID TO OUTPUT FIELD\n         MVC   OUTACESS(1),0(R5)       MOVE ACCESS TO OUTPUT FIELD\nWRITEIT  EQU   *\n         PUT   DSETFILE,OUTRECRD       WRITE THE OUTPUT RECORD\n         A     R6,=XL4'00000008'       POINT TO NEXT USER-ID\n         USING USER$ID,R6              SET ADDRESSABILITY TO USER-ID\n         A     R5,=XL4'00000001'       POINT TO NEXT USER ACCESS\n         USING ACCESS,R5               SET ADDRESSABILITY TO ACCESS\n         S     R3,=XL4'00000001'       DECREMENT NUMBER OF USERIDS\n         C     R3,=XL4'00000000'       ANY MORE REMAINING USER-IDS?\n         BZ    CLERWORK                IF NOT, GET NEXT PROFILE\n         B     NEXTUSER                GET THE NEXT USER-ID\n*\n***********************************************************************\n* END OF JOB HOUSEKEEPING                                             *\n***********************************************************************\nWRAPUP   EQU   *\nCLOSING  CLOSE (DSETFILE)              CLOSE THE OUTPUT FILE\n         DROP  R2,R5,R6                RELEASE BASE REGISTERS\n         L     R13,SAVEAREA+4          LOAD RETURN ADDRESS (MVS R13)\n         L     R14,12(R13)             LOAD MVS R14 VALUE\n         LM    R0,R12,20(R13)          RESTORE MVS REGISTERS 0-12\n         SR    R15,R15                 GUARANTEE ZERO RETURN CODE\n         BR    R14                     RETURN TO MVS\n***********************************************************************\n* STORAGE USED BY PROGRAM                                             *\n***********************************************************************\nSAVEAREA DS    18F                     SAVE AREA FOR SYSTEM REGISTERS\n*\nGENERIC  ICHEINTY NEXTC,ENTRY=PROFILE,WKAREA=WORKAREA,MF=L,TYPE='DS',  +\n               ACTIONS=(GETOWNR,GETUACC,GETCNT,GETUSER,GETUACS),       +\n               GENERIC=UNCOND\n*\nDISCRETE ICHEINTY NEXTC,ENTRY=PROFILE,WKAREA=WORKAREA,MF=L,TYPE='DS',  +\n               ACTIONS=(GETOWNR,GETUACC,GETCNT,GETUSER,GETUACS),       +\n               GENERIC=NO\n*\nDSETLNTH DC    XL3'000000'             PADDING FOR REGISTER LOADS\nPROFILE  DS    AL1                     ENTRY LENGTH FIELD\nENTRYNAM DS    XL44                    DATASET NAME\n*\nGETCNT   ICHEACTN FIELD=ACLCNT,MF=L    RETREIVE # OF AUTHORIZED USERS\nGETOWNR  ICHEACTN FIELD=AUTHOR,MF=L    RETREIVE PROFILE OWNER\nGETUACC  ICHEACTN FIELD=UNIVACS,MF=L   RETREIVE UACC\nGETUSER  ICHEACTN FIELD=USERID,MF=L    RETREIVE AUTHORIZED USER\nGETUACS  ICHEACTN FIELD=USERACS,MF=L   RETREIVE ACCESS AUTHORITY\n*\nACLCNT   DC    CL8'ACLCNT  '           # OF AUTHORIZED USERS\nOWNER    DC    CL8'AUTHOR  '           OWNER\nUACC     DC    CL8'UNIVACS '           UACC\nUSERID   DC    CL8'USERID  '           AUTHORIZED USER-ID OR GROUP\nUSERACS  DC    CL8'USERACS '           AUTHORIZED USER ACCESS AUTHORITY\n*                  *\nOUTRECRD DS    0XL78                   OUTPUT RECORDS\nOUTDSET  DS    XL44                    DATASET NAME\nOUTCLASS DS    XL8                     DATASET CLASS\nOUTOWNER DS    XL8                     OWNER\nOUTUACC  DS    XL1                     UACC\nOUTUSER  DS    XL8                     AUTHORIZED USER-ID OR GROUP\nOUTACESS DS    XL1                     AUTHORIZED USER ACCESS AUTHORITY\nOUTPTYPE DS    XL8                     PROFILE TYPE (GENERIC/DISCRETE)\n*\n***********************************************************************\n* OUTPUT FILE DEFINITION                                              *\n***********************************************************************\nDSETFILE DCB   DDNAME=DSETFILE,MACRF=PM,DSORG=PS\n*\n         LTORG\n*\nWORKSPCE EQU   *\nWORKAREA DS    0F                      WORKAREA ALIGNMENT ON FULLWORD\nWRKLNGTH DS    F                       WORK AREA LENGTH\nRBA      DS    CL6                     RBA OF RETURNED ENTRY\nGENFLAG  EQU   *                       NEXT BYTE IS GENERIC FLAG\n         DS    XL2                     RESERVED (BY IBM)\nDUPCOUNT DS    F                       DUPLICATE DATASET NAME COUNT\n         DS    2F                      RESERVED (BY IBM)\nDATALNTH DS    F                       LENGTH OF RETURNED DATA\nWORKDATA DS    CL32740                 32K MAXIMUM RETURNED DATA\nENDWORK  EQU   *                       END OF WORKAREA\n*\nACCESS   DSECT\nUSRACESS DS    XL1\n*\nUSER$ID  DSECT\nUSER     DS    CL8\n*\nFULLWORD DSECT\nPARMADDR DS    F\nPARM     DS    CL8\n*\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RACFGRES": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "RACFGRES START 0\n***********************************************************************\n* THE PURPOSE OF THIS PROGRAM IS TO EXTRACT INFORMATION FROM ALL      *\n* GENERAL RESOURCE PROFILES IN A RACF 1.7 DATASET. THE EXTRACTED DATA *\n* IS PUT INTO A FILE WITH RECORDS FORMATTED AS FOLLOWS:               *\n*                                                                     *\n*           COLUMNS   1-8: RESOURCE NAME                              *\n*           COLUMNS  9-16: RESOURCE CLASS (SEE NOTE BELOW)            *\n*           COLUMNS 17-24: OWNER                                      *\n*           COLUMN     25: UACC                                       *\n*           COLUMN  26-33: AUTHORIZED USER                            *\n*           COLUMN     34: AUTHORIZED USER'S ACCESS AUTHORITY         *\n*                                                                     *\n* THIS PROGRAM MAY PROCESS ONLY ONE RESOURCE CLASS AT A TIME, WHICH   *\n* IS SPECIFIED IN A PARAMETER PASSED TO THE PROGRAM. THE RESOURCE     *\n* CLASS NAME PASSED AS A PARAMETER SHOULD BE AT LEAST 4 BYTES LONG.   *\n*                                                                     *\n* NOTE: THIS PROGRAM MUST BE LINKEDITED INTO AND RUN FROM AN APF      *\n*       AUTHORIZED LIBRARY.                                           *\n*                                                                     *\n* LAST UPDATE: 3/11/88 BY SCOTT WILSON (REMOVED UNNECESSARY MODESETS) *\n***********************************************************************\nR0       EQU   0                       USED BY SYS. MACROS; PARM LENGTH\nR1       EQU   1                       USED BY SYS. MACROS; PARM ADDR.\nR2       EQU   2                       1ST BASE REGISTER FOR WORKSPACE\nR3       EQU   3                       USER COUNT\nR4       EQU   4                       MULTIPLIER REGISTER\nR5       EQU   5                       2ND BASE REGISTER FOR WORKSPACE\nR6       EQU   6                       DUMMY REGISTER FOR MVCL;\n*                                      3RD BASE REGISTER FOR WORKSPACE\nR7       EQU   7                       ZERO INDICATOR FOR MVCL\nR8       EQU   8                       ADDRESS OF WORKAREA\nR9       EQU   9                       LENGTH OF WORKAREA\nR10      EQU   10                      ADDRESS OF END OF WORKAREA\nR11      EQU   11                      LENGTH OF RESOURCE NAME\nR12      EQU   12                      PROGRAM BASE REGISTER\nR13      EQU   13                      ADDRESS OF MVS SAVEAREA\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      COMPLETION CODE\n*\n***********************************************************************\n* START OF JOB HOUSEKEEPING                                           *\n***********************************************************************\n         STM   R14,R12,12(R13)         STORE MVS REGISTERS\n         BALR  R12,0                   ESTABLISH R12 AS BASE REGISTER\n         USING *,R12                   IDENTIFY BASE REGISTER\n         ST    R13,SAVEAREA+4          STORE ADD. OF MVS REG. SAVEAREA\n         LA    R13,SAVEAREA            LOAD ADDRESS OF PGM. SAVEAREA\n*\n***********************************************************************\n* RETRIEVE PASSED PARAMETER AND STORE FOR ICHEINTY MACRO              *\n***********************************************************************\n         USING FULLWORD,R1             SET ADDRESSABILITY TO R1 VALUE\n         L     R1,0(R1)                LOAD ADDRESS OF PARM DATA AREA\nMOVEPARM MVC   GRESCLAS(8),2(R1)       MOVE PARM INTO CLASS FIELD\n*\n***********************************************************************\n* SET ADDRESSABILITY TO A 32K WORKSPACE (MAXIMUM RACF PROFILE SIZE)   *\n***********************************************************************\nWORKADDR EQU   *\n         DROP  R1\n         LA    R2,WORKSPCE             LOAD ADDRESS OF WORKSPACE\n         USING WORKSPCE,R2             SET ADDRESSABILITY TO WORKSPACE\n*\n***********************************************************************\n* OPEN OUTPUT FILES                                                   *\n***********************************************************************\n         OPEN  (GRESFILE,(OUTPUT))     OPEN OUTPUT FILE\n*\n***********************************************************************\n* SET THE LENGTH OF THE WORKAREA AND PROFILE ENTRY                    *\n***********************************************************************\nINITPROF MVI   PROFILE,X'01'           INITIAL PROFILE LENGTH = 1 BYTE\n         MVC   WRKLNGTH(4),=XL4'00008000'  PUT WORKAREA LENGTH WHERE...\n*                                          ...RACF CAN FIND IT\n***********************************************************************\n* GET A RACF PROFILE                                                  *\n***********************************************************************\nCLERWORK EQU   *\n         L     R7,=XL4'00000000'       INDICATE CLEAR FUNCTION TO MVCL\n         LA    R8,WORKDATA             LOAD ADDRESS OF WORK AREA\n         L     R9,=XL4'00007FE4'       LOAD LENGTH OF DATA IN WORKAREA\n         MVCL  R8,R6                   ZERO OUT THE WORK AREA\n***********************************************************************\n* THIS PROGRAM RUNS IN TWO \"PHASES\"; FIRST SCANNING FOR DISCRETE      *\n* PROFILES, AND THEN FOR GENERIC PROFILES. THESE ARE DONE SEPARATELY  *\n* BECAUSE DIFFERENT, NON-SUBSTITUTABLE PARAMETERS OF THE ICHEINTY     *\n* MACRO ARE NECESSARY FOR EACH OF THE TWO TYPES OF PROFILES. A FLAG   *\n* (MACTYPE) DETERMINES THE MACRO TO BE USED, AND THEREFORE THE        *\n* CURRENT PHASE OF THE PROGRAM.                                       *\n***********************************************************************\n         CLC   MACTYPE(8),=CL8'DISCRETE'    ICHEINTY FOR DISCRETE?\n         BNE   GENMAC                       IF NOT, EXECUTE FOR GENERIC\nDISMAC   ICHEINTY NEXT,MF=(E,DISCRETE)      FIND NEXT DISCRETE PROFILE\n         B     CHECKRC                      CHECK ICHEINTY RETURN CODE\nGENMAC   ICHEINTY NEXT,MF=(E,GENERIC)       FIND NEXT GENERIC PROFILE\nCHECKRC  LTR   R15,R15                 CHECK RETURN CODE FROM ICHEINTY\n         BNZ   WRAPUP                  IF NON-ZERO, EXIT THIS PROGRAM\n*\n***********************************************************************\n* WRITE THE RETURNED DATA                                             *\n***********************************************************************\n         MVI   OUTRECRD,C' '              PROPOGATE BLANK SPACE TO...\n         MVC   OUTRECRD+1(36),OUTRECRD    ...OUTPUT RECORD IN TWO STEPS\n         LA    R10,WORKDATA            LOAD ADDRESS OF RETURNED DATA\n         A     R10,DATALNTH            ADD LENGTH OF RETURNED DATA\n         L     R11,GRESLNTH            LOAD LENGTH OF GRES-ID\n         S     R11,=XL4'00000001'      SUBTRACT 1 FROM GRES-ID LENGTH\n         EX    R11,MOVEGRES            ALTER LENGTH OF GRES-ID FOR MVC\n         B     MOVECLAS                DON'T EXECUTE MVC TWICE\nMOVEGRES MVC   OUTGRES(0),ENTRYNAM     MOVE RESOURCE INTO OUTPUT FIELD\nMOVECLAS MVC   OUTCLASS(8),GRESCLAS    MOVE CLASS INTO OUTPUT FIELD\n         MVC   OUTOWNER(8),WORKDATA+2  MOVE OWNER INTO OUTPUT FIELD\n         MVC   OUTUACC(1),WORKDATA+12  MOVE UACC TO OUTPUT FIELD\n         LH    R3,WORKDATA+15          LOAD NUMBER OF USER-IDS\n         SLL   R3,16                   TRUNCATE SIGN FIELD\n         SRL   R3,16                   RIGHT JUSTIFY NUMBER OF USERS\n         LA    R6,WORKDATA+19          LOAD ADDRESS OF FIRST USER-ID\n         USING USER$ID,R6              SET ADDRESSABILITY TO USER-ID\n         SR    R4,R4                   CLEAR OUT REGISTER 4\n         C     R3,=XL4'00000000'       ARE THERE AUTHORIZED USERS?\n         BNZ   FINDACES                IF SO, LOCATE ACCESS LIST\n         L     R3,=XL4'00000001'       IF NOT, WRITE INDICATIVE...\n         MVC   OUTUSER(8),=CL8'* NONE *'  ...RECORD CONTAINING...\n         MVI   OUTACESS,X'00'             ...THIS INFO\n         B     WRITEIT                 WRITE THE OUTPUT RECORD\nFINDACES LR    R5,R3                   LOAD # OF USERIDS\n         M     R4,=XL4'00000008'       MULTIPLY BY USER-ID LENGTH (8)\n         A     R5,=XL4'00000002'       ADD OFFSET FOR ACCESS PREFIX\n         AR    R5,R6                   ADD ADDRESS OF FIRST USER-ID\n         USING ACCESS,R5               SET ADDRESSABILITY TO ACCESS\nNEXTUSER EQU   *\n*        CR    R6,R10                  ARE WE PAST THE END OF THE DATA?\n*        BP    CLERWORK                IF SO, GET ANOTHER PROFILE\nMOVEUSER EQU   *\n         MVC   OUTUSER(8),0(R6)        MOVE USER-ID TO OUTPUT FIELD\n*        CR    R5,R10                  ARE WE PAST THE END OF THE DATA?\n*        BP    CLERWORK                IF SO, GET ANOTHER PROFILE\n         MVC   OUTACESS(1),0(R5)       MOVE ACCESS TO OUTPUT FIELD\nWRITEIT  PUT   GRESFILE,OUTRECRD       WRITE THE OUTPUT RECORD\n         A     R6,=XL4'00000008'       POINT TO NEXT USER-ID\n         USING USER$ID,R6              SET ADDRESSABILITY TO USER-ID\n         A     R5,=XL4'00000001'       POINT TO NEXT USER ACCESS\n         USING ACCESS,R5               SET ADDRESSABILITY TO ACCESS\n         S     R3,=XL4'00000001'       DECREMENT NUMBER OF USERIDS\n         C     R3,=XL4'00000000'       ANY MORE REMAINING USER-IDS?\n         BZ    CLERWORK                IF NOT, GET NEXT PROFILE\n         B     NEXTUSER                GET THE NEXT USER-ID\n*\n***********************************************************************\n* END OF JOB HOUSEKEEPING                                             *\n***********************************************************************\nWRAPUP   EQU   *\n         CLC   MACTYPE(8),=CL8'DISCRETE'     BEEN PROCESSING DISCRETES?\n         BNE   CLOSING                       IF NOT, EXIT PROGRAM\n         MVC   GRESLNTH(12),=XL12'000000000000000000000000'\n         MVC   MACTYPE(8),=CL8'GENERIC '     INDICATE GENERIC ICHEINTY\n         B     INITPROF                      BEGIN SEARCH FOR GENERICS\nCLOSING  CLOSE (GRESFILE)              CLOSE THE OUTPUT FILE\n         DROP  R2,R5,R6                RELEASE BASE REGISTERS\n         L     R13,SAVEAREA+4          LOAD RETURN ADDRESS (MVS R13)\n         L     R14,12(R13)             LOAD MVS R14 VALUE\n         LM    R0,R12,20(R13)          RESTORE MVS REGISTERS 0-12\n         SR    R15,R15                 GUARANTEE ZERO RETURN CODE\n         BR    R14                     RETURN TO MVS\n***********************************************************************\n* STORAGE USED BY PROGRAM                                             *\n***********************************************************************\nSAVEAREA DS    18F                     SAVE AREA FOR SYSTEM REGISTERS\n*\nGENERIC  ICHEINTY NEXT,ENTRY=PROFILE,WKAREA=WORKAREA,MF=L,TYPE='GEN',  +\n               ACTIONS=(GETOWNR,GETUACC,GETCNT,GETUSER,GETUACS),       +\n               CLASS=GRESCLAS,GENERIC=UNCOND\n*\nDISCRETE ICHEINTY NEXT,ENTRY=PROFILE,WKAREA=WORKAREA,MF=L,TYPE='GEN',  +\n               ACTIONS=(GETOWNR,GETUACC,GETCNT,GETUSER,GETUACS),       +\n               CLASS=GRESCLAS,GENERIC=NO\n*\nMACTYPE  DC    CL8'DISCRETE'           ICHEINTY MACRO TYPE FLAG\n*\nGRESCLAS DC    CL8'        '           CLASS NAME USED BY ICHEINTY\n*\nGRESLNTH DC    XL3'000000'             PADDING FOR REGISTER LOADS\nPROFILE  DS    AL1                     ENTRY LENGTH FIELD\nENTRYNAM DC    XL8'0000000000000000'   GENERAL RESOURCE NAME\n*\nGETCNT   ICHEACTN FIELD=ACLCNT,MF=L    RETREIVE # OF AUTHORIZED USERS\nGETOWNR  ICHEACTN FIELD=OWNER,MF=L     RETREIVE PROFILE OWNER\nGETUACC  ICHEACTN FIELD=UACC,MF=L      RETREIVE UACC\nGETUSER  ICHEACTN FIELD=USERID,MF=L    RETREIVE AUTHORIZED USER\nGETUACS  ICHEACTN FIELD=USERACS,MF=L   RETREIVE ACCESS AUTHORITY\n*\nACLCNT   DC    CL8'ACLCNT  '           # OF AUTHORIZED USERS\nOWNER    DC    CL8'OWNER   '           OWNER\nUACC     DC    CL8'UACC    '           UACC\nUSERID   DC    CL8'USERID  '           AUTHORIZED USER-ID OR GROUP\nUSERACS  DC    CL8'USERACS '           AUTHORIZED USER ACCESS AUTHORITY\n*                  *\nOUTRECRD DS    0XL34                   OUTPUT RECORDS\nOUTGRES  DS    XL8                     GENERAL RESOURCE NAME\nOUTCLASS DS    XL8                     RESOURCE CLASS\nOUTOWNER DS    XL8                     OWNER\nOUTUACC  DS    XL1                     UACC\nOUTUSER  DS    XL8                     AUTHORIZED USER-ID OR GROUP\nOUTACESS DS    XL1                     AUTHORIZED USER ACCESS AUTHORITY\n*\n***********************************************************************\n* OUTPUT FILE DEFINITION                                              *\n***********************************************************************\nGRESFILE DCB   DDNAME=GRESFILE,MACRF=PM,DSORG=PS\n*\n         LTORG\n*\nWORKSPCE EQU   *\nWORKAREA DS    0F                      WORKAREA ALIGNMENT ON FULLWORD\nWRKLNGTH DS    F                       WORK AREA LENGTH\nRBA      DS    CL6                     RBA OF RETURNED ENTRY\n         DS    CL2                     RESERVED (BY IBM)\n         DS    F                       DUPLICATE DATASET NAME COUNT\n         DS    2F                      RESERVED (BY IBM)\nDATALNTH DS    F                       LENGTH OF RETURNED DATA\nWORKDATA DS    CL32740                 32K MAXIMUM RETURNED DATA\nENDWORK  EQU   *                       END OF WORKAREA\n*\nACCESS   DSECT\nUSRACESS DS    XL1\n*\nUSER$ID  DSECT\nUSER     DS    CL8\n*\nFULLWORD DSECT\nPARMADDR DS    F\nPARM     DS    CL8\n*\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RACFGRP1": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "RACFGRP1 START 0\n***********************************************************************\n* THE PURPOSE OF THIS PROGRAM IS TO EXTRACT INFORMATION FROM ALL      *\n* GROUP PROFILES IN A RACF 1.7 DATASET. THE EXTRACTED DATA            *\n* IS PUT INTO A FILE WITH RECORDS FORMATTED AS FOLLOWS:               *\n*                                                                     *\n*           COLUMNS   1-8: GROUP NAME                                 *\n*           COLUMNS  9-16: SUPERIOR GROUP                             *\n*           COLUMNS 17-24: OWNER                                      *\n*           COLUMN     25: UACC                                       *\n*           COLUMN     26: NOTERMUACC                                 *\n*           COLUMNS 27-28: NUMBER OF SUBGROUPS                        *\n*           COLUMNS 29-36: SUBGROUP NAME                              *\n*                                                                     *\n* NOTE: THIS PROGRAM MUST BE LINKEDITED INTO AND RUN FROM AN APF      *\n*       AUTHORIZED LIBRARY.                                           *\n*                                                                     *\n* LAST UPDATE: 3/11/88 BY SCOTT WILSON (REMOVED UNNECESSARY MODESETS) *\n***********************************************************************\nR0       EQU   0                       USED BY SYS. MACROS\nR1       EQU   1                       USED BY SYS. MACROS\nR2       EQU   2                       1ST BASE REGISTER FOR WORKSPACE\nR3       EQU   3                       SUBGROUP COUNT\nR4       EQU   4                       1ST MULTIPLIER REGISTER\nR5       EQU   5                       2ND MULTIPLIER REGISTER\nR6       EQU   6                       DUMMY REGISTER FOR MVCL;\n*                                      3RD BASE REGISTER FOR WORKSPACE\nR7       EQU   7                       ZERO INDICATOR FOR MVCL\nR8       EQU   8                       ADDRESS OF WORKAREA\nR9       EQU   9                       LENGTH OF WORKAREA\nR10      EQU   10                      ADDRESS OF END OF WORKAREA\nR11      EQU   11                      LENGTH OF GROUP NAME\nR12      EQU   12                      PROGRAM BASE REGISTER\nR13      EQU   13                      ADDRESS OF MVS SAVEAREA\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      COMPLETION CODE\n*\n***********************************************************************\n* START OF JOB HOUSEKEEPING                                           *\n***********************************************************************\n         STM   R14,R12,12(R13)         STORE MVS REGISTERS\n         BALR  R12,0                   ESTABLISH R12 AS BASE REGISTER\n         USING *,R12                   IDENTIFY BASE REGISTER\n         ST    R13,SAVEAREA+4          STORE ADD. OF MVS REG. SAVEAREA\n         LA    R13,SAVEAREA            LOAD ADDRESS OF PGM. SAVEAREA\n*\n***********************************************************************\n* SET ADDRESSABILITY TO A 32K WORKSPACE (MAXIMUM RACF PROFILE SIZE)   *\n***********************************************************************\nWORKADDR EQU   *\n         LA    R2,WORKSPCE             LOAD ADDRESS OF WORKSPACE\n         USING WORKSPCE,R2             SET ADDRESSABILITY TO WORKSPACE\n*\n***********************************************************************\n* OPEN OUTPUT FILES                                                   *\n***********************************************************************\n         OPEN  (GRP1FILE,(OUTPUT))     OPEN OUTPUT FILE\n*\n***********************************************************************\n* SET THE LENGTH OF THE WORKAREA AND PROFILE ENTRY                    *\n***********************************************************************\nINITPROF MVI   PROFILE,X'01'           INITIAL PROFILE LENGTH = 1 BYTE\n         MVC   WRKLNGTH(4),=XL4'00008000' PUT WORKAREA LENGTH WHERE...\n*                                         ...RACF CAN FIND IT\n         MVI   ENTRYNAM,X'00'             CLEAR GROUP PROFILE NAME...\n         MVC   ENTRYNAM+1(7),ENTRYNAM     ...IN TWO STEPS\n***********************************************************************\n* GET A RACF PROFILE                                                  *\n***********************************************************************\nCLERWORK EQU   *\n         L     R7,=XL4'00000000'       INDICATE CLEAR FUNCTION TO MVCL\n         LA    R8,WORKDATA             LOAD ADDRESS OF WORK AREA\n         L     R9,=XL4'00007FE4'       LOAD LENGTH OF DATA IN WORKAREA\n         MVCL  R8,R6                   ZERO OUT THE WORK AREA\n         ICHEINTY NEXTC,ENTRY=PROFILE,WKAREA=WORKAREA,TYPE='GRP',      +\n               ACTIONS=(GETSGRP,GETOWNR,GETUACC,GETTUACC,GET#SUBG,     +\n               GETSUBG)\nCHECKRC  LTR   R15,R15                 CHECK RETURN CODE FROM ICHEINTY\n         BNZ   WRAPUP                  IF NON-ZERO, EXIT THIS PROGRAM\n*\n***********************************************************************\n* WRITE THE RETURNED DATA                                             *\n***********************************************************************\n         MVI   OUTRECRD,C' '           PROPOGATE BLANK SPACE TO...\n         MVC   OUTRECRD+1(35),OUTRECRD ...OUTPUT RECORD IN TWO STEPS\n         LA    R10,WORKDATA            LOAD ADDRESS OF RETURNED DATA\n         A     R10,DATALNTH            ADD LENGTH OF RETURNED DATA\n         L     R11,GRP1LNTH            LOAD LENGTH OF GROUP-ID\n         S     R11,=XL4'00000001'      SUBTRACT 1 FROM GROUP-ID LENGTH\n         EX    R11,MOVEGRP1            ALTER LENGTH OF GROUP-ID FOR MVC\n         B     MOVEOWNR                DON'T EXECUTE MVC TWICE\nMOVEGRP1 MVC   OUTGROUP(0),ENTRYNAM    MOVE GROUP INTO OUTPUT FIELD\nMOVEOWNR MVC   OUTOWNER(8),WORKSPCE+40 MOVE OWNER INTO OUTPUT FIELD\n         MVC   OUTSGRP(8),WORKSPCE+30  MOVE SUPGROUP TO OUTPUT FIELD\n         MVC   OUTUACC(1),WORKSPCE+50  MOVE UACC TO OUTPUT FIELD\n         MVC   OUTTUACC(1),WORKSPCE+53 MOVE TERMUACC TO OUTPUT FIELD\n         MVC   OUTSGRPS(2),WORKSPCE+56 MOVE # SUBGROUPS TO OUTPUT FLD.\n         LH    R3,WORKSPCE+56          LOAD NUMBER OF SUBGROUPS\n         SLL   R3,16                   TRUNCATE SIGN FIELD\n         SRL   R3,16                   RIGHT JUSTIFY NUMBER OF SUBG'S\n         LA    R6,WORKSPCE+60          LOAD ADDRESS OF FIRST SUBGROUP\n         USING SUBG$ID,R6              SET ADDRESSABILITY TO SUBGROUP\n         SR    R4,R4                   CLEAR OUT REGISTER 4\n         C     R3,=XL4'00000000'       ARE THERE SUBGROUPS?\n         BNZ   MOVESUBG                IF SO, MOVE IT TO OUTPUT AREA\n         L     R3,=XL4'00000001'       IF NOT, WRITE INDICATIVE...\n         MVC   OUTSUBG(8),=CL8'* NONE *' ...RECORD CONTAINING THIS INFO\n         B     WRITEIT                 WRITE THE OUTPUT RECORD\nNEXTSUBG EQU   *\nMOVESUBG EQU   *\n         MVC   OUTSUBG(8),0(R6)        MOVE SUBGROUP TO OUTPUT FIELD\nWRITEIT  EQU   *\n         PUT   GRP1FILE,OUTRECRD       WRITE THE OUTPUT RECORD\n         A     R6,=XL4'00000008'       POINT TO NEXT SUBGROUP\n         USING SUBG$ID,R6              SET ADDRESSABILITY TO SUBGROUP\n         S     R3,=XL4'00000001'       DECREMENT NUMBER OF SUBGROUPS\n         C     R3,=XL4'00000000'       ANY MORE REMAINING SUBGROUPS?\n         BZ    CLERWORK                IF NOT, GET NEXT PROFILE\n         B     NEXTSUBG                GET THE NEXT SUBGROUP\n*\n***********************************************************************\n* END OF JOB HOUSEKEEPING                                             *\n***********************************************************************\nWRAPUP   EQU   *\nCLOSING  CLOSE (GRP1FILE)              CLOSE THE OUTPUT FILE\n         DROP  R2,R6                   RELEASE BASE REGISTERS\n         L     R13,SAVEAREA+4          LOAD RETURN ADDRESS (MVS R13)\n         L     R14,12(R13)             LOAD MVS R14 VALUE\n         LM    R0,R12,20(R13)          RESTORE MVS REGISTERS 0-12\n         SR    R15,R15                 GUARANTEE ZERO RETURN CODE\n         BR    R14                     RETURN TO MVS\n***********************************************************************\n* STORAGE USED BY PROGRAM                                             *\n***********************************************************************\nSAVEAREA DS    18F                     SAVE AREA FOR SYSTEM REGISTERS\n*\nGRP1LNTH DC    XL3'000000'             PADDING FOR REGISTER LOADS\nPROFILE  DS    AL1                     ENTRY LENGTH FIELD\nENTRYNAM DS    XL8                     GROUP NAME\n*\nGETSGRP  ICHEACTN FIELD=SUPGROUP,MF=L  RETREIVE NUMBER OF SUBGROUPS\nGETOWNR  ICHEACTN FIELD=AUTHOR,MF=L    RETREIVE PROFILE OWNER\nGETUACC  ICHEACTN FIELD=UACC,MF=L      RETREIVE UACC\nGETTUACC ICHEACTN FIELD=NOTRMUAC,MF=L  RETREIVE NOTERMUACC\nGET#SUBG ICHEACTN FIELD=SUBGRPCT,MF=L  RETREIVE NUMBER OF SUBGROUPS\nGETSUBG  ICHEACTN FIELD=SUBGRPNM,MF=L  RETREIVE SUBGROUP NAME\n*\nSUPGROUP DC    CL8'SUPGROUP'           NUMBER OF SUBGROUPS\nOWNER    DC    CL8'AUTHOR  '           OWNER\nUACC     DC    CL8'UACC    '           UACC\nNOTRMUAC DC    CL8'NOTRMUAC'           NOTERMUACC\nSUBGRPCT DC    CL8'SUBGRPCT'           NUMBER OF SUBGROUPS\nSUBGRPNM DC    CL8'SUBGRPNM'           NAME OF SUBGROUP\n*                  *\nOUTRECRD DS    0XL36                   OUTPUT RECORDS\nOUTGROUP DS    XL8                     GROUP NAME\nOUTSGRP  DS    XL8                     SUPERIOR GROUP NAME\nOUTOWNER DS    XL8                     OWNER\nOUTUACC  DS    XL1                     UACC\nOUTTUACC DS    XL1                     NOTERMUACC\nOUTSGRPS DS    XL2                     NUMBER OF SUBGROUPS\nOUTSUBG  DS    XL8                     SUBGROUP\n*\n***********************************************************************\n* OUTPUT FILE DEFINITION                                              *\n***********************************************************************\nGRP1FILE DCB   DDNAME=GRP1FILE,MACRF=PM,DSORG=PS\n*\n         LTORG\n*\nWORKSPCE EQU   *\nWORKAREA DS    0F                      WORKAREA ALIGNMENT ON FULLWORD\nWRKLNGTH DS    F                       WORK AREA LENGTH\nRBA      DS    CL6                     RBA OF RETURNED ENTRY\n         DS    XL2                     RESERVED (BY IBM)\nDUPCOUNT DS    F                       DUPLICATE DATASET NAME COUNT\n         DS    2F                      RESERVED (BY IBM)\nDATALNTH DS    F                       LENGTH OF RETURNED DATA\nWORKDATA DS    CL32740                 32K MAXIMUM RETURNED DATA\nENDWORK  EQU   *                       END OF WORKAREA\n*\nSUBG$ID  DSECT\nSUBGROUP DS    CL8\n*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACFGRP2": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "RACFGRP2 START 0\n***********************************************************************\n* THE PURPOSE OF THIS PROGRAM IS TO EXTRACT INFORMATION FROM ALL      *\n* GROUP PROFILES IN A RACF 1.7 DATASET. THE EXTRACTED DATA            *\n* IS PUT INTO A FILE WITH RECORDS FORMATTED AS FOLLOWS:               *\n*                                                                     *\n*           COLUMNS   1-8: GROUP NAME                                 *\n*           COLUMNS  9-16: SUPERIOR GROUP                             *\n*           COLUMNS 17-24: OWNER                                      *\n*           COLUMN     25: UACC                                       *\n*           COLUMN     26: NOTERMUACC                                 *\n*           COLUMNS 27-28: NUMBER OF CONNECTED USERS                  *\n*           COLUMNS 29-36: CONNECTED USER-ID                          *\n*           COLUMN     37: GROUP AUTHORITY OF CONNECTED USER          *\n*                                                                     *\n* NOTE: THIS PROGRAM MUST BE LINKEDITED INTO AND RUN FROM AN APF      *\n*       AUTHORIZED LIBRARY.                                           *\n*                                                                     *\n* LAST UPDATE: 3/11/88 BY SCOTT WILSON (REMOVED UNNECESSARY MODESETS) *\n***********************************************************************\nR0       EQU   0                       USED BY SYS. MACROS\nR1       EQU   1                       USED BY SYS. MACROS\nR2       EQU   2                       1ST BASE REGISTER FOR WORKSPACE\nR3       EQU   3                       USER COUNT\nR4       EQU   4                       1ST MULTIPLIER REGISTER\nR5       EQU   5                       2ND MULTIPLIER REGISTER\nR6       EQU   6                       DUMMY REGISTER FOR MVCL;\n*                                      3RD BASE REGISTER FOR WORKSPACE\nR7       EQU   7                       ZERO INDICATOR FOR MVCL\nR8       EQU   8                       ADDRESS OF WORKAREA\nR9       EQU   9                       LENGTH OF WORKAREA\nR10      EQU   10                      ADDRESS OF END OF WORKAREA\nR11      EQU   11                      LENGTH OF GROUP NAME\nR12      EQU   12                      PROGRAM BASE REGISTER\nR13      EQU   13                      ADDRESS OF MVS SAVEAREA\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      COMPLETION CODE\n*\n***********************************************************************\n* START OF JOB HOUSEKEEPING                                           *\n***********************************************************************\n         STM   R14,R12,12(R13)         STORE MVS REGISTERS\n         BALR  R12,0                   ESTABLISH R12 AS BASE REGISTER\n         USING *,R12                   IDENTIFY BASE REGISTER\n         ST    R13,SAVEAREA+4          STORE ADD. OF MVS REG. SAVEAREA\n         LA    R13,SAVEAREA            LOAD ADDRESS OF PGM. SAVEAREA\n*\n***********************************************************************\n* SET ADDRESSABILITY TO A 32K WORKSPACE (MAXIMUM RACF PROFILE SIZE)   *\n***********************************************************************\nWORKADDR EQU   *\n         LA    R2,WORKSPCE             LOAD ADDRESS OF WORKSPACE\n         USING WORKSPCE,R2             SET ADDRESSABILITY TO WORKSPACE\n*\n***********************************************************************\n* OPEN OUTPUT FILES                                                   *\n***********************************************************************\n         OPEN  (GRP2FILE,(OUTPUT))     OPEN OUTPUT FILE\n*\n***********************************************************************\n* SET THE LENGTH OF THE WORKAREA AND PROFILE ENTRY                    *\n***********************************************************************\nINITPROF MVI   PROFILE,X'01'           INITIAL PROFILE LENGTH = 1 BYTE\n         MVC   WRKLNGTH(4),=XL4'00008000' PUT WORKAREA LENGTH WHERE...\n*                                         ...RACF CAN FIND IT\n         MVI   ENTRYNAM,X'00'             CLEAR GROUP PROFILE NAME...\n         MVC   ENTRYNAM+1(7),ENTRYNAM     ...IN TWO STEPS\n***********************************************************************\n* GET A RACF PROFILE                                                  *\n***********************************************************************\nCLERWORK EQU   *\n         L     R7,=XL4'00000000'       INDICATE CLEAR FUNCTION TO MVCL\n         LA    R8,WORKDATA             LOAD ADDRESS OF WORK AREA\n         L     R9,=XL4'00007FE4'       LOAD LENGTH OF DATA IN WORKAREA\n         MVCL  R8,R6                   ZERO OUT THE WORK AREA\n         ICHEINTY NEXTC,ENTRY=PROFILE,WKAREA=WORKAREA,TYPE='GRP',      +\n               ACTIONS=(GETSGRP,GETOWNR,GETUACC,GETTUACC,GETACL,       +\n               GETUSER,GETACCES)\nCHECKRC  LTR   R15,R15                 CHECK RETURN CODE FROM ICHEINTY\n         BNZ   WRAPUP                  IF NON-ZERO, EXIT THIS PROGRAM\n*\n***********************************************************************\n* WRITE THE RETURNED DATA                                             *\n***********************************************************************\n         MVI   OUTRECRD,C' '           PROPOGATE BLANK SPACE TO...\n         MVC   OUTRECRD+1(36),OUTRECRD ...OUTPUT RECORD IN TWO STEPS\n         LA    R10,WORKDATA            LOAD ADDRESS OF RETURNED DATA\n         A     R10,DATALNTH            ADD LENGTH OF RETURNED DATA\n         L     R11,GRP2LNTH            LOAD LENGTH OF GROUP-ID\n         S     R11,=XL4'00000001'      SUBTRACT 1 FROM GROUP-ID LENGTH\n         EX    R11,MOVEGRP2            ALTER LENGTH OF GROUP-ID FOR MVC\n         B     MOVEOWNR                DON'T EXECUTE MVC TWICE\nMOVEGRP2 MVC   OUTGROUP(0),ENTRYNAM    MOVE GROUP INTO OUTPUT FIELD\nMOVEOWNR MVC   OUTOWNER(8),WORKSPCE+40 MOVE OWNER INTO OUTPUT FIELD\n         MVC   OUTSGRP(8),WORKSPCE+30  MOVE SUPGROUP TO OUTPUT FIELD\n         MVC   OUTUACC(1),WORKSPCE+50  MOVE UACC TO OUTPUT FIELD\n         MVC   OUTTUACC(1),WORKSPCE+53 MOVE TERMUACC TO OUTPUT FIELD\n         MVC   OUTUSERS(2),WORKSPCE+56 MOVE # OF USERS TO OUTPUT FIELD\n         LH    R3,WORKSPCE+56          LOAD NUMBER OF USERS\n         SLL   R3,16                   TRUNCATE SIGN FIELD\n         SRL   R3,16                   RIGHT JUSTIFY NUMBER OF USER'S\n         LA    R6,WORKSPCE+60          LOAD ADDRESS OF FIRST USER\n         USING USER$ID,R6              SET ADDRESSABILITY TO USER\n         SR    R4,R4                   CLEAR OUT REGISTER 4\n         C     R3,=XL4'00000000'       ARE THERE USERS?\n         BNZ   FINDACES                IF SO, FIND ACCESS LEVEL\n         L     R3,=XL4'00000001'       IF NOT, WRITE INDICATIVE...\n         MVC   OUTUSER(8),=CL8'* NONE *' ...RECORD CONTAINING THIS INFO\n         B     WRITEIT                 WRITE THE OUTPUT RECORD\nFINDACES LR    R5,R3                   LOAD # OF USERIDS\n         M     R4,=XL4'00000008'       MULTIPLY BY USER-ID LENGTH (8)\n         A     R5,=XL4'00000002'       ADD OFFSET FOR ACCESS PREFIX\n         AR    R5,R6                   ADD ADDRESS OF FIRST USER-ID\n         USING ACCESS,R5               SET ADDRESSABILITY TO ACCESS\nNEXTUSER EQU   *\nMOVEUSER EQU   *\n         MVC   OUTUSER(8),0(R6)        MOVE USER TO OUTPUT FIELD\n         MVC   OUTACESS(1),0(R5)       MOVE USER'S GROUP AUTHORITY\nWRITEIT  EQU   *\n         PUT   GRP2FILE,OUTRECRD       WRITE THE OUTPUT RECORD\n         A     R6,=XL4'00000008'       POINT TO NEXT USER\n         USING USER$ID,R6              SET ADDRESSABILITY TO USER\n         S     R3,=XL4'00000001'       DECREMENT NUMBER OF USERS\n         C     R3,=XL4'00000000'       ANY MORE REMAINING USERS?\n         BZ    CLERWORK                IF NOT, GET NEXT PROFILE\n         B     NEXTUSER                GET THE NEXT USER\n*\n***********************************************************************\n* END OF JOB HOUSEKEEPING                                             *\n***********************************************************************\nWRAPUP   EQU   *\nCLOSING  CLOSE (GRP2FILE)              CLOSE THE OUTPUT FILE\n         DROP  R2,R5,R6                RELEASE BASE REGISTERS\n         L     R13,SAVEAREA+4          LOAD RETURN ADDRESS (MVS R13)\n         L     R14,12(R13)             LOAD MVS R14 VALUE\n         LM    R0,R12,20(R13)          RESTORE MVS REGISTERS 0-12\n         SR    R15,R15                 GUARANTEE ZERO RETURN CODE\n         BR    R14                     RETURN TO MVS\n***********************************************************************\n* STORAGE USED BY PROGRAM                                             *\n***********************************************************************\nSAVEAREA DS    18F                     SAVE AREA FOR SYSTEM REGISTERS\n*\nGRP2LNTH DC    XL3'000000'             PADDING FOR REGISTER LOADS\nPROFILE  DS    AL1                     ENTRY LENGTH FIELD\nENTRYNAM DS    XL8                     GROUP NAME\n*\nGETSGRP  ICHEACTN FIELD=SUPGROUP,MF=L  RETREIVE NUMBER OF USERS\nGETOWNR  ICHEACTN FIELD=AUTHOR,MF=L    RETREIVE PROFILE OWNER\nGETUACC  ICHEACTN FIELD=UACC,MF=L      RETREIVE UACC\nGETTUACC ICHEACTN FIELD=NOTRMUAC,MF=L  RETREIVE NOTERMUACC\nGETACL   ICHEACTN FIELD=ACLCNT,MF=L    RETREIVE NUMBER OF USER-IDS\nGETUSER  ICHEACTN FIELD=USERID,MF=L    RETREIVE USER NAME\nGETACCES ICHEACTN FIELD=USERACS,MF=L   RETREIVE USER'S GROUP AUTHORITY\n*\nSUPGROUP DC    CL8'SUPGROUP'           NUMBER OF USERS\nOWNER    DC    CL8'AUTHOR  '           OWNER\nUACC     DC    CL8'UACC    '           UACC\nNOTRMUAC DC    CL8'NOTRMUAC'           NOTERMUACC\nACLCNT   DC    CL8'ACLCNT  '           NUMBER OF USER-IDS\nUSERID   DC    CL8'USERID  '           CONNECTED USER-ID\nUSERACS  DC    CL8'USERACS '           GROUP AUTHORITY OF USER\n*                  *\nOUTRECRD DS    0XL37                   OUTPUT RECORDS\nOUTGROUP DS    XL8                     GROUP NAME\nOUTSGRP  DS    XL8                     SUPERIOR GROUP\nOUTOWNER DS    XL8                     OWNER\nOUTUACC  DS    XL1                     UACC\nOUTTUACC DS    XL1                     NOTERMUACC\nOUTUSERS DS    XL2                     NUMBER OF USERS\nOUTUSER  DS    XL8                     USER-ID\nOUTACESS DS    XL1                     GROUP AUTHORITY\n*\n***********************************************************************\n* OUTPUT FILE DEFINITION                                              *\n***********************************************************************\nGRP2FILE DCB   DDNAME=GRP2FILE,MACRF=PM,DSORG=PS\n*\n         LTORG\n*\nWORKSPCE EQU   *\nWORKAREA DS    0F                      WORKAREA ALIGNMENT ON FULLWORD\nWRKLNGTH DS    F                       WORK AREA LENGTH\nRBA      DS    CL6                     RBA OF RETURNED ENTRY\n         DS    XL2                     RESERVED (BY IBM)\nDUPCOUNT DS    F                       DUPLICATE DATASET NAME COUNT\n         DS    2F                      RESERVED (BY IBM)\nDATALNTH DS    F                       LENGTH OF RETURNED DATA\nWORKDATA DS    CL32740                 32K MAXIMUM RETURNED DATA\nENDWORK  EQU   *                       END OF WORKAREA\n*\nACCESS   DSECT\nUSRACESS DS    XL1\n*\nUSER$ID  DSECT\nUSER     DS    CL8\n*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACFUSER": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "RACFUSER START 0\n***********************************************************************\n* THE PURPOSE OF THIS PROGRAM IS TO EXTRACT USER INFORMATION FROM ALL *\n* USER PROFILES IN A RACF 1.7 DATASET. THE EXTRACTED DATA IS PUT INTO *\n* A FILE WITH LRECL=255 SO THAT IT MAY BE BROWSED BY ISPF. FOR THIS   *\n* REASON, IT IS NECESSARY TO PUT THE USER DATA AREA (WHICH MAY        *\n* CONTAIN AS MANY AS 255 CHARACTERS BY ITSELF) ON A RECORD SEPARATE   *\n* FROM (AND IMMEDIATELY FOLLOWING) THE RECORD CONTAINING THE REST OF  *\n* THE EXTRACTED DATA; I.E., TWO OUTPUT RECORDS ARE PRODUCED FOR EACH  *\n* USER-ID EXTRACTED. THESE RECORDS ARE FORMATTED AS FOLLOWS:          *\n*                                                                     *\n* RECORD 1: COLUMNS   1-8: USER-ID                                    *\n*           COLUMNS  9-28: USER NAME                                  *\n*           COLUMNS 29-36: OWNER                                      *\n*           COLUMNS 37-44: DEFAULT GROUP                              *\n*           COLUMN     45: REVOKED INDICATOR                          *\n*           COLUMN     46: SPECIAL INDICATOR                          *\n*           COLUMN     47: OPERATIONS INDICATOR                       *\n*           COLUMN     48: AUDITOR INDICATOR                          *\n*           COLUMN     49: USER AUDIT INDICATOR                       *\n*           COLUMNS 50-52: LAST SIGNON DATE                           *\n*           COLUMNS 53-56: LAST SIGNON TIME                           *\n*           COLUMNS 57-59: LAST PASSWORD CHANGE DATE                  *\n*           COLUMN     60: PASSWORD CHANGE INTERVAL                   *\n*                                                                     *\n* RECORD 2: COLUMNS 1-255: USER DATA AREA                             *\n*                                                                     *\n* NOTE: THIS PROGRAM MUST BE LINKEDITED INTO AND RUN FROM AN APF      *\n*       AUTHORIZED LIBRARY.                                           *\n*                                                                     *\n* LAST UPDATE: 3/11/88 BY SCOTT WILSON (REMOVED UNNECESSARY MODESETS) *\n***********************************************************************\nR0       EQU   0                       USED BY SYSTEM MACROS\nR1       EQU   1                       USED BY SYSTEM MACROS\nR2       EQU   2                       UNUSED\nR3       EQU   3                       UNUSED\nR4       EQU   4                       UNUSED\nR5       EQU   5                       UNUSED\nR6       EQU   6                       UNUSED\nR7       EQU   7                       UNUSED\nR8       EQU   8                       UNUSED\nR9       EQU   9                       UNUSED\nR10      EQU   10                      LENGTH OF USER-ID\nR11      EQU   11                      LENGTH OF WORKAREA\nR12      EQU   12                      PROGRAM BASE REGISTER\nR13      EQU   13                      ADDRESS OF MVS SAVEAREA\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      COMPLETION CODE\n*\n***********************************************************************\n* START OF JOB HOUSEKEEPING                                           *\n***********************************************************************\n         STM   R14,R12,12(R13)         STORE MVS REGISTERS\n         BALR  R12,0                   ESTABLISH R12 AS BASE REGISTER\n         USING *,R12                   IDENTIFY BASE REGISTER\n         ST    R13,SAVEAREA+4          STORE ADD. OF MVS REG. SAVEAREA\n         LA    R13,SAVEAREA            LOAD ADDRESS OF PGM. SAVEAREA\n         OPEN  (USERFILE,(OUTPUT))     OPEN OUTPUT FILE\n*\n***********************************************************************\n* CLEAR OUT THE WORKAREA BY FILLING IT WITH BINARY ZEROES             *\n***********************************************************************\n         XC    WORKAREA,WORKAREA       ZERO OUT WORKAREA\n*\n***********************************************************************\n* SET THE LENGTH OF THE WORKAREA AND PROFILE ENTRY                    *\n***********************************************************************\n         MVI   PROFILE,X'01'           INITIAL PROFILE LENGTH = 1 BYTE\n         LA    R11,ENDWORK-WORKAREA    CALCULATE WORKAREA LENGTH\n         ST    R11,WRKLNGTH            PLACE WORKAREA LENGTH WHERE...\n*                                      ...RACF CAN FIND IT\n***********************************************************************\n* GET A RACF PROFILE                                                  *\n***********************************************************************\nFINDUSER EQU   *\n         MVI   WORKDATA,X'00'          PROPOGATE HEX ZEROES TO...\n         MVC   WORKDATA+1(254),WORKDATA   ...CLEAR WORK SPACE FIELDS...\n         MVC   WORKDATA+256(86),WORKDATA  ...IN TWO STEPS\n         ICHEINTY NEXT,ENTRY=PROFILE,WKAREA=WORKAREA,MF=I,TYPE='USR',  +\n               ACTIONS=(GETNAME,GETOWNR,GETDFLT,GETRVOK,GETSPEC,       +\n               GETOPER,GETAUDT,GETUAUD,GETDATE,GETTIME,GETPCDT,        +\n               GETPINT,GETDATA)\n         LTR   R15,R15                 CHECK RETRUN CODE FROM ICHEINTY\n         BNZ   WRAPUP                  IF NON-ZERO, EXIT THIS PROGRAM\n*\n***********************************************************************\n* WRITE THE RETURNED DATA                                             *\n***********************************************************************\n         MVI   OUTRECRD,C' '               PROPOGATE BLANK SPACE TO...\n         MVC   OUTRECRD+1(254),OUTRECRD   ...OUTPUT RECORD IN TWO STEPS\n         L     R10,USRLNGTH            LOAD LENGTH OF USER-ID\n         S     R10,=XL4'00000001'      SUBTRACT 1 FROM USER-ID LENGTH\n         EX    R10,MOVEID              ALTER LENGTH OF USER-ID FOR MVC\n         B     MOVENAME                DON'T EXECUTE MVC TWICE\nMOVEID   MVC   OUTUSER(0),ENTRYNAM     MOVE USERID INTO OUTPUT FIELD\nMOVENAME MVC   OUTNAME(20),WORKDATA+4  MOVE NAME INTO OUTPUT FIELD\n         MVC   OUTOWNER(8),WORKDATA+26 MOVE OWNER INTO OUTPUT FIELD\n         MVC   OUTDFLT(8),WORKDATA+36  MOVE DEFAULT GRP TO OUTPUT FIELD\n         MVC   OUTREVOK(1),WORKDATA+46 MOVE REVOKE FLAG TO OUTPUT FIELD\n         MVC   OUTSPEC(1),WORKDATA+49  MOVE SPECIAL FLAG TO OUT. FIELD\n         MVC   OUTOPER(1),WORKDATA+52  MOVE OPERATION FLAG TO OUT. FLD.\n         MVC   OUTAUDIT(1),WORKDATA+55 MOVE AUDITOR FLAG TO OUTPUT FLD.\n         MVC   OUTUAUDT(1),WORKDATA+58 MOVE UAUDIT FLAG TO OUTPUT FIELD\n         MVC   OUTLDATE(3),WORKDATA+61 MOVE LAST USE DATE TO OUT. FLD.\n         MVC   OUTLTIME(4),WORKDATA+66 MOVE LAST USE TIME TO OUT. FLD.\n         MVC   OUTPDATE(3),WORKDATA+72 MOVE PASSWORD CHANGE DATE\n         MVC   OUTPINT(1),WORKDATA+77  MOVE PASSWORD CHANGE INTERVAL\nWRITEIT  EQU   *\n         PUT   USERFILE,OUTRECRD       WRITE THE OUTPUT RECORD\n         MVI   OUTRECRD,C' '           PROPOGATE BLANK SPACE TO CLEAR..\n         MVC   OUTRECRD+1(254),OUTRECRD   ...OUTPUT RECORD IN TWO STEPS\n         MVC   OUTRECRD(255),WORKDATA+81  MOVE USER DATA AREA TO OUTPUT\n         PUT   USERFILE,OUTRECRD       WRITE THE OUTPUT RECORD\n         B     FINDUSER                FIND THE NEXT PROFILE\n*\n***********************************************************************\n* END OF JOB HOUSEKEEPING                                             *\n***********************************************************************\nWRAPUP   EQU   *\nCLOSING  CLOSE (USERFILE)              CLOSE THE OUTPUT FILE\n         L     R13,SAVEAREA+4          LOAD RETURN ADDRESS (MVS R13)\n         L     R14,12(R13)             LOAD MVS R14 VALUE\n         LM    R0,R12,20(R13)          RESTORE MVS REGISTERS 0-12\n         SR    R15,R15                 GUARANTEE ZERO RETURN CODE\n         BR    R14                     RETURN TO MVS\n***********************************************************************\n* STORAGE USED BY PROGRAM                                             *\n***********************************************************************\nSAVEAREA DS    18F                     SAVE AREA FOR SYSTEM REGISTERS\n*\nUSRLNGTH DS    XL3'000000'             PADDING FOR REGISTER LOADS\nPROFILE  DS    AL1                     ENTRY LENGTH FIELD\nENTRYNAM DS    XL8'0000000000000000'   USER-ID\n*\nGETNAME  ICHEACTN FIELD=PGMRNAME,MF=L  RETREIVE USER NAME\nGETOWNR  ICHEACTN FIELD=AUTHOR,MF=L    RETREIVE PROFILE OWNER\nGETDFLT  ICHEACTN FIELD=DFLTGRP,MF=L   RETREIVE DEFAULT GROUP\nGETRVOK  ICHEACTN FIELD=FLAG4,MF=L     RETREIVE FLAG 4 (REVOKED)\nGETSPEC  ICHEACTN FIELD=FLAG2,MF=L     RETREIVE FLAG 2 (SPECIAL)\nGETOPER  ICHEACTN FIELD=FLAG3,MF=L     RETREIVE FLAG 3 (OPERATIONS)\nGETAUDT  ICHEACTN FIELD=FLAG6,MF=L     RETREIVE FLAG 6 (AUDITOR)\nGETUAUD  ICHEACTN FIELD=UAUDIT,MF=L    RETREIVE USER AUDIT\nGETDATE  ICHEACTN FIELD=LJDATE,MF=L    RETREIVE LAST SIGNON DATE\nGETTIME  ICHEACTN FIELD=LJTIME,MF=L    RETREIVE LAST SIGNON TIME\nGETPCDT  ICHEACTN FIELD=PASSDATE,MF=L  RETREIVE PASSWORD CHANGE DATE\nGETPINT  ICHEACTN FIELD=PASSINT,MF=L   RETREIVE PASSWORD INTERVAL\nGETDATA  ICHEACTN FIELD=INSTDATA,MF=L  RETREIVE USER DATA\n*\nPGMRNAME DS    CL8'PGMRNAME'           PROGRAMMER NAME FIELD DATA\nAUTHOR   DS    CL8'AUTHOR  '           OWNER\nDFLTGRP  DS    CL8'DFLTGRP '           DEFAULT GROUP\nFLAG4    DS    CL8'FLAG4   '           REVOKED USER-ID\nFLAG2    DS    CL8'FLAG2   '           SPECIAL USER\nFLAG3    DS    CL8'FLAG3   '           OPERATIONS USER\nFLAG6    DS    CL8'FLAG6   '           AUDITOR\nUAUDIT   DS    CL8'UAUDIT  '           USER AUDIT\nLJDATE   DS    CL8'LJDATE  '           LAST SIGNON DATE\nLJTIME   DS    CL8'LJTIME  '           LIST SIGNON TIME\nPASSDATE DS    CL8'PASSDATE'           PASSWORD CHANGE DATE\nPASSINT  DS    CL8'PASSINT '           PASSWORD INTERVAL\nINSTDATA DS    CL8'INSTDATA'           INSTALLATION DATA FIELD DATA\n*                  *\nWORKAREA DS    0F                      WORKAREA ALIGNMENT ON FULLWORD\nWRKLNGTH DS    F                       WORK AREA LENGTH\nRBA      DS    CL6                     RBA OF RETURNED ENTRY\n         DS    CL2                     RESERVED (BY IBM)\n         DS    F                       DUPLICATE DATASET NAME COUNT\n         DS    2F                      RESERVED (BY IBM)\n         DS    CL2                     LENGTH OF RETURNED DATA\nWORKDATA DS    CL341                   RETURNED DATA\nENDWORK  EQU   *                       END OF WORKAREA\n*\nOUTRECRD DS    0XL255                  OUTPUT RECORDS\nOUTUSER  DS    XL8                     USER-ID\nOUTNAME  DS    XL20                    USER NAME\nOUTOWNER DS    XL8                     OWNER\nOUTDFLT  DS    XL8                     DEFAULT GROUP\nOUTREVOK DS    XL1                     REVOKED\nOUTSPEC  DS    XL1                     SPECIAL\nOUTOPER  DS    XL1                     OPERATIONS\nOUTAUDIT DS    XL1                     AUDITOR\nOUTUAUDT DS    XL1                     USER AUDIT\nOUTLDATE DS    XL3                     LAST SIGNON DATE\nOUTLTIME DS    XL4                     LAST SIGNON TIME\nOUTPDATE DS    XL3                     LAST PASSWORD CHANGE DATE\nOUTPINT  DS    XL1                     PASSWORD CHANGE INTERVAL\nOUTFILLR DS    XL195                   FILLER\n*\n***********************************************************************\n* OUTPUT FILE DEFINITION                                              *\n***********************************************************************\nUSERFILE DCB   DDNAME=USERFILE,MACRF=PM,DSORG=PS\n*\n         LTORG\n*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPLE": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//insert your job card here\n//*********************************************************************\n//* JOBSTREAM TO PRODUCE A CROSS REFERENCE REPORT OF PRODUCTION IMS   *\n//* USERS AND THEIR AUTHORIZED TRANSACTIONS, SORTED BY USER NAME      *\n//*********************************************************************\n//*\n//*********************************************************************\n//* TWO OUTPUT RECORDS ARE PRODUCED FOR EACH USER-ID EXTRACTED.       *\n//* THESE RECORDS ARE FORMATTED AS FOLLOWS:                           *\n//*                                                                   *\n//* RECORD 1: COLUMNS   1-8: USER-ID                                  *\n//*           COLUMNS  9-28: USER NAME                                *\n//*           COLUMNS 29-36: OWNER                                    *\n//*           COLUMNS 37-44: DEFAULT GROUP                            *\n//*           COLUMN     45: REVOKED INDICATOR                        *\n//*           COLUMN     46: SPECIAL INDICATOR                        *\n//*           COLUMN     47: OPERATIONS INDICATOR                     *\n//*           COLUMN     48: AUDITOR INDICATOR                        *\n//*           COLUMN     49: USER AUDIT INDICATOR                     *\n//*           COLUMNS 50-52: LAST SIGNON DATE                         *\n//*           COLUMNS 53-56: LAST SIGNON TIME                         *\n//*           COLUMNS 57-59: LAST PASSWORD CHANGE DATE                *\n//*           COLUMN     60: PASSWORD CHANGE INTERVAL                 *\n//*                                                                   *\n//* RECORD 2: COLUMNS 1-255: USER DATA AREA                           *\n//*********************************************************************\n//RACFUSER EXEC PGM=RACFUSER\n//STEPLIB    DD DSN=insert your authorized library name here,DISP=SHR\n//USERFILE   DD DSN=&&USERS,DCB=(LRECL=255,BLKSIZE=18870,RECFM=FB),\n//           SPACE=(CYL,(1,1)),UNIT=SYSDA,DISP=(NEW,PASS)\n//SYSUDUMP   DD SYSOUT=*\n//SYSABEND   DD SYSOUT=*\n//*\n//*********************************************************************\n//* THE OUTPUT RECORDS OF THIS PROGRAM ARE FORMATTED AS FOLLOWS:      *\n//*                                                                   *\n//*           COLUMNS   1-8: RESOURCE NAME                            *\n//*           COLUMNS  9-16: RESOURCE CLASS                           *\n//*           COLUMNS 17-24: OWNER                                    *\n//*           COLUMN     25: UACC                                     *\n//*           COLUMN  26-33: AUTHORIZED USER                          *\n//*           COLUMN     34: AUTHORIZED USER'S ACCESS AUTHORITY       *\n//*********************************************************************\n//RACFGRES EXEC PGM=RACFGRES,COND=(0,LT),\n// PARM='insert your general resource class name here'\n//STEPLIB    DD DSN=insert your authorized library name here,DISP=SHR\n//GRESFILE   DD DSN=&&TRANS,DCB=(LRECL=34,BLKSIZE=19040,RECFM=FB),\n//           SPACE=(CYL,(1,1)),UNIT=SYSDA,DISP=(NEW,PASS)\n//SYSUDUMP   DD SYSOUT=*\n//SYSABEND   DD SYSOUT=*\n//*\n//SASMERGE EXEC SAS,COND=(0,LT)\n//SAS.SYSIN  DD *\nDATA USERS;\n /********************************************************************/\n /* READ IN THE OUTPUT FROM RACFUSER. DUMMY OUT THE USER DATA TO     */\n /* DIRECT SAS TO SKIP THE CARDS THAT CONTAIN IT                     */\n /********************************************************************/\n     ATTRIB USERID   LENGTH=$8;\n     ATTRIB NAME     LENGTH=$20;\n     ATTRIB REVOKED  LENGTH=$1;\n     ATTRIB USERDATA LENGTH=$200; /* MAXIMUM LENGTH FOR $ DATA */\n     INFILE USERS;\n     INPUT #1 USERID   $   1-8\n           #1 NAME     $ & 9-28\n           #1 REVOKED  $ @ 45\n           #2 USERDATA $ & 1-200;\n     DROP USERDATA;\n     PROC SORT DATA=USERS; BY USERID;\nDATA IMSTRANS;\n     ATTRIB TRANID LENGTH=$8;\n     ATTRIB CLASS  LENGTH=$8;\n     INFILE TRANS;\n     INPUT TRANID $   1-8\n           CLASS  $  9-16\n           USERID $ 26-33;\n     PROC SORT DATA=IMSTRANS; BY USERID;\nDATA OUTFILE;\n /********************************************************************/\n /* WRITE AN OUTPUT FILE OF THE MERGED DATASETS, OMITTING RECORDS    */\n /* OF USERS NOT AUTHORIZED TO ANY IMS TRANSACTIONS.                 */\n /********************************************************************/\n     MERGE USERS IMSTRANS; BY USERID;\n     IF CLASS = '        ' THEN DELETE;\n     FILE DYLIN;\n     PUT USERID  $     1-8\n         TRANID  $     10-17\n         NAME    $ &   20-39\n         CLASS   $     40-47\n         REVOKED $   @ 50;\n//USERS     DD DSN=&&USERS,DISP=(OLD,DELETE,DELETE)\n//TRANS     DD DSN=&&TRANS,DISP=(OLD,DELETE,DELETE)\n//DYLIN     DD DSN=&&DYLIN,DISP=(NEW,PASS),UNIT=SYSDA,\n//          SPACE=(CYL,(1,1)),DCB=(LRECL=80,BLKSIZE=19040,RECFM=FB)\n//*\n//DYL280 EXEC DYL280,COND=(4,LT)\n//*********************************************************************\n//* MAKE A PRETTY REPORT FOR THE END USER                             *\n//*********************************************************************\n//SYS280R  DD SYSOUT=*\n//SYSIN    DD *\n********************************************************************\nFILE INFILE FB 80 19040\nUSERID       8  1 CH ('USER ID)\nTRANSACTION  8 10 CH (AUTHORIZED'TRANSACTIONS)\nNAME        20 20 CH ('USER NAME)\nCLASS        8 40 CH\n RACFGRES    1 40 CH\n APPL        7 41 CH ('APPLICATION)\nREVOKEFLAG   1 50 BI\n*\nWORKAREA\nREVOKED      3    CH (USER'REVOKED?)\n*\nIF (REVOKEFLAG GT X'7F') MOVE 'YES' TO REVOKED\n   ELSE MOVE 'NO ' TO REVOKED ENDIF\nMOVE X'00' TO REVOKEFLAG\n*\nSORT INFILE USING NAME USERID TRANSACTION\n*\nCONTROL NAME\n*\nLIST SUPPRESS NAME SUPPRESS USERID SUPPRESS REVOKED APPL TRANSACTION\n*\nON CHANGE IN NAME LIST BLANKS ; SPACE BETWEEN USERS\n*\nT1 ' '\nT1+1   DYLDATE\nT1+10  DYLETIME\nT1+120 DYLPAGE\nT2     'USERS OF RACF PROTECTED IMS TRANSACTIONS' WITH 1 AFTER\nT3     ' ' ; SPACE BETWEEN TITLE AND COLUMN HEADINGS\n*\nFIN\n********************************************************************\n//INFILE   DD DSN=&&DYLIN,DISP=(OLD,DELETE,DELETE)\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT080/FILE080.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT080", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}