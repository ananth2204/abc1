{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012916000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE831.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE831.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x06\\x04'", "DS1TRBAL": "b'\\xd3\\xb4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\xc9\\x00\\x03\\x05\\xc9\\x00\\t\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04_\\x00A\\x01\\x174\\x1f\\x01\\x174\\x1f\\t\\x18\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf5@@@'", "ispf": {"version": "04.95", "flags": 0, "createdate": "2017-12-07T00:00:00", "modifydate": "2017-12-07T09:18:41", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-495"}, "text": "REGULAR CBT TAPE - VERSION 495    FILE:  831\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT495.FILE831\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 14 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,291 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/07/17    09:18:40    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$8CHRID": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00R\\x01\\x174\\x1f\\x01\\x174\\x1f\\t\\x10\\x00c\\x004\\x00\\x00\\xc4\\xd6\\xc3\\xd6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2017-12-07T00:00:00", "modifydate": "2017-12-07T09:10:52", "lines": 99, "newlines": 52, "modlines": 0, "user": "DOCO"}, "text": "      Fix for 8-character Userid support in z/OS 2.3 and higher\n      --- --- ----------- ------ ------- -- ---- --- --- ------\n\nWhen a prefix has to be added to a dsname in TSO, the value of the\nprefix has traditionally (since the beginning of TSO) been placed\nin the UPTPREFX field (for 7 bytes), with its length in the field\nUPTPREFL (for 1 byte).\n\nAn illustration of this, for a 7-character userid, follows:\n  (Display was taken from the LPSCB A command - CBT File 300)\n\n\n00008FC8 UPT FROM PSCB\n00008FC8 UPT FROM CPPL\n    +0  UPTLEN   0038\n    +2  UPTUSER  FFFFC5E2C4C1E8000000\n    +C  UPTSWS   21\n    +D  UPTCDEL  00\n    +E  UPTLDEL  00\n    +F  UPTVERS  01\n   +10  UPTPREFX E2C2C7D6D3D6C2   SBGOLOB\n   +17  UPTPREFL 07\n   +18  UPTPLANG C5D5E4           ENU\n   +1B  UPTSLANG C5D5E4           ENU\n   +1E  UPTLNGFL 0000\n   +20  UPTSWS2  00\n   +21  UPTPREF8 E2C2C7D6D3D6C240 SBGOLOB\n   +29  UPTPRF8L 07\n   +2A  RESERVED 0000000000000000000000000000\n\n\nFor an 8-character TSO userid, there was not enough room in\nthe UPTPREFX field, so the UPTPREF8 (for 8 bytes) and the\nUPTPRF8L length field (for 1 byte) needed to be created,\nas follows:\n\n\n00008FC8 UPT FROM PSCB\n00008FC8 UPT FROM CPPL\n    +0  UPTLEN   0038\n    +2  UPTUSER  FFFFC5E2C4C1E8000000\n    +C  UPTSWS   21\n    +D  UPTCDEL  00\n    +E  UPTLDEL  00\n    +F  UPTVERS  01\n   +10  UPTPREFX 6EF7C2E8E3C5E2   >7BYTES\n   +17  UPTPREFL 07\n   +18  UPTPLANG C5D5E4           ENU\n   +1B  UPTSLANG C5D5E4           ENU\n   +1E  UPTLNGFL 0000\n   +20  UPTSWS2  00\n   +21  UPTPREF8 E2C2C7D6D3D6C2C3 SBGOLOBC\n   +29  UPTPRF8L 08\n   +2A  RESERVED 0000000000000000000000000000\n\n\nNotice that the old field, under this circumstance, when the\nprefix is 8 characters, contains the string '>7BYTES', which\nby the way, is an invalid prefix name, because it is invalid\nin a dataset name.\n\nThe old fields are normally populated if the prefix is 7 characters\nor less.  And the new fields are similarly populated as well, in\na z/OS 2.3 system or higher.\n\nWhat happens when you need the value of UPTPREFX but there are\n8 characters in the prefix?\n\nSo the fix, is to look for C'>' at the beginning of the prefix,\nin its old place.  And if it is there, then you pull the prefix\ncharacters and the length, from the new fields instead of the old\nfields.\n\nCoding Example (for CONCATPG):   (insert between the arrows)\n\n*        LA    R5,UPTPREFX         POINT TO THE PREFIX\n* -- >\n         CLI   0(5),C'>'           8-CHARACTER PREFIX?\n         BNE   PARS0510            NO. REGULAR PROCESSING.\n         LA    R5,UPT+X'21'        POINT TO 8-CHAR PREFIX\n         XR    R3,R3               ZERO REG TO SHOW LENGTH\n         ICM   R3,B'0001',UPT+X'29'  8-CHARACTER PREFIX LENGTH\n         BZ    PARS0550            ZERO, NO PREFIX\n         BCTR  R3,0                LENGTH MINUS 1\nPARS0510 DS    0H\n* -- >\n*        EX    R3,PARMOVE          MOVE THE PREFIX\n*        LA    R4,1(R3,R4)         POINT AFTER THE PREFIX\n*        MVI   0(R4),C'.'          INSERT PERIOD\n*        LA    R4,1(,R4)           READY FOR THE REST\n*        DROP  R2\n*PARMOVE MVC   0(*-*,R4),0(R5)      MOVE DSNAME ** EXECUTE **\n\nPlease note that in order to assemble this code at system levels\nof z/OS 2.2 and below, we coded the displacements of UPTPREF8\nUPT+X'21' and UPTPRE8L UPT+X'29', because these new field names\nare not present in the older versions of the IKJUPT macro.\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#CALL": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01\\x10!\\x8f\\x01\\x10!\\x8f\\x10)\\x00\\x0f\\x00\\x10\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-06T00:00:00", "modifydate": "2010-08-06T10:29:36", "lines": 15, "newlines": 16, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n&NAME    #CALL &MOD,&RPARM1=\n         AIF   ('&MOD' EQ '').MODERR\n         AIF   ('&NAME' EQ '').CALLMOD\n&NAME    DS    0H\n.CALLMOD ANOP\n         AIF   ('&RPARM1' EQ '').MOD\n         LA    R1,&RPARM1\n.MOD     ANOP\n         L     R15,=A(&MOD)                      PICK UP ENTRY ADDRESS\n         BALR  R14,R15                           CALL ROUTINE\n         MEXIT\n.MODERR  ANOP\n         MNOTE 8,'A ENTRY NAME MUST BE SUPPLIED TO #CALL MACRO'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#ENTRY": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00V\\x01\\x10!\\x8f\\x01\\x10!\\x8f\\x10)\\x00*\\x00+\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-06T00:00:00", "modifydate": "2010-08-06T10:29:56", "lines": 42, "newlines": 43, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n&NAME    #ENTRY &MAIN=NO,&LMD=\n         LCLA  &DISP,&NFW\n         AIF   ('&NAME' NE '').MAINVAL\n         MNOTE 8,'AN ENTRY NAME MUST BE SUPPLIED(I.E. CSECTNM #NTRY)'\n         MEXIT\n.MAINVAL ANOP\n         AIF   ('&MAIN' EQ 'NO').MNENTRY\n         AIF   ('&MAIN' EQ 'YES').MNCSECT\n         MNOTE 8,'&MAIN IS AN UNKNOWN VALUE OF MAIN. ONLY YES OR NO IS X\n                 ALLOWED'\n         MEXIT\n.MNCSECT ANOP\n&NAME    CSECT\n         STM   R14,R12,12(R13)                  SAVE CALLER'S REGS\n         LR    R12,R15                          SET BASE ON NTRY POINT\n         USING &NAME,R12                        SET PGM ADDRESSABILITY\n         B     *+34                             SKIP ENTRY STATTISTICS\n         DC    CL8'&NAME'                       CSECT NAME\n         DC    CL8'&SYSDATE'                    ASSEMBLY DATE\n         DC    CL6'&SYSTIME'                    ASSEMBLY TIME\n         DC    CL8'&LMD '                       USER MOD ID\n         ST    R13,#SVEAREA+4                   CHAIN SAVE AREA\n         MVC   8(4,R13),=A(#SVEAREA)            CHAIN SAVE AREA\n         LA    R13,#SVEAREA                     POINT TO OUR SAVE AREA\n         USING #GBLAREA,R13                     SET GLOBAL AREA ADRBLT\n         MEXIT\n.MNENTRY ANOP\n&NAME    DS    0F\n&NFW     SETA  0\n&DISP    SETA  8\n&NFW     SETA  13\n&DISP    SETA  8+(&NFW*4)\n         USING *,R15                            SET ADDRESSABILITY\n         STM   R2,R14,16(R15)                   SAVE CALLER'S REGISTERS\n         B     *+4+&DISP                        SKIP ENTRY STATTISTICS\n         DC    CL8'&NAME'                       SKIP ENTRY STATTISTICS\n         DS    &NFW.F                           #ENTRY SAVE AREA\n         DROP  R15                              KILL R15 ADDRESSABILITY\n         LR    R12,R15                          SET BASE ON NTRY POINT\n         USING &NAME,R12                        SET PGM ADDRESSABILITY\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#GBLWKA": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x01\\x10!\\x8f\\x01\\x10!\\x8f\\x100\\x00\\x05\\x00\\x06\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-06T00:00:00", "modifydate": "2010-08-06T10:30:03", "lines": 5, "newlines": 6, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n         #GBLWKA\n#GBLAREA DS    0F                               GLOBAL WORK AREA\n#SVEAREA DS    18F                              MAIN SAVE AREA\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#MAPS": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\x10!\\x8f\\x01\\x10!\\x8f\\x100\\x00l\\x00m\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-06T00:00:00", "modifydate": "2010-08-06T10:30:13", "lines": 108, "newlines": 109, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n        #MAPS  &P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8,&P9,&P10,&P11,&P12,&P13,X\n               &P14,&P15,&P16,&P17,&P18,&P19,&P20,&P21,&P22,&P23,&P24\n         PUSH  PRINT\n         PRINT GEN\n&N       SETA  1\n.N1      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'PSA').N2\n         IHAPSA\n         AGO   .NEXT\n.N2      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'TIOT').N3\n         IEFTIOT1\n         AGO   .NEXT\n.N3      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'TCB').N4\n         IKJTCB DSECT=YES\n         AGO   .NEXT\n.N4      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'CDE').N5\n         IHACDE\n         AGO   .NEXT\n.N5      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'CPPL').N6\n         IKJCPPL\n         AGO   .NEXT\n.N6      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'CVT').N7\n         CVT   DSECT=YES\n         AGO   .NEXT\n.N7      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'GDA').N8\n         IHAGDA\n         AGO   .NEXT\n.N8      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'SPQE').N9\n         IHASPQE\n         AGO   .NEXT\n.N9      ANOP\n         AIF   ('&SYSLIST(&N)' NE 'PSCB').N10\n         IKJPSCB\n         AGO   .NEXT\n.N10     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'ECT').N11\n         IKJECT\n         AGO   .NEXT\n.N11     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'TSB').N12\n         IKJTSB\n         AGO   .NEXT\n.N12     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'UPT').N13\n         IKJUPT\n         AGO   .NEXT\n.N13     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'TCB').N14\n         IKJTCB\n         AGO   .NEXT\n.N14     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'ASCB').N15\n         IHAASCB\n         AGO   .NEXT\n.N15     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'ASVT').N16\n         IHAASVT DSECT=YES\n         AGO   .NEXT\n.N16     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'ASXB').N17\n         IHAASXB\n         AGO   .NEXT\n.N17     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'SDWA').N18\n         IHASDWA DSECT=YES\n         AGO   .NEXT\n.N18     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'SSCVT').N19\n         IEFJSCVT\n         AGO   .NEXT\n.N19     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'JESCT').N20\n         IEFJESCT\n         AGO   .NEXT\n.N20     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'JCT').N21\n         IEFAJCTB\n         AGO   .NEXT\n.N21     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'JSCB').N22\n         IEZJSCB\n         AGO   .NEXT\n.N22     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'SMCA').N23\n         IEESMCA\n         AGO   .NEXT\n.N23     ANOP\n         AIF   ('&SYSLIST(&N)' NE 'JFCB').ERRL\n         IEFJFCBN\n         AGO   .NEXT\n.ERRL    ANOP\n         MNOTE 8,'&SYSLIST(&N) UNSUPPORTED BY THIS MACRO'\n.NEXT    ANOP\n         AIF   (&N EQ N'&SYSLIST).EXIT\n&N       SETA  &N+1\n         AGO   .N1\n.EXIT    ANOP\n         PRINT GEN\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#REGS": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\x10!\\x8f\\x01\\x10!\\x8f\\x100\\x00\\x19\\x00\\x1a\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-06T00:00:00", "modifydate": "2010-08-06T10:30:19", "lines": 25, "newlines": 26, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n         #REGS &LIST=NO\n*=====================================================================*\n*                                                                     *\n*        REGISTER USAGE                                               *\n*                                                                     *\n*=====================================================================*\n         SPACE 1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#RETURN": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00$\\x01\\x10!\\x8f\\x01\\x10!\\x8f\\x100\\x00$\\x00%\\x00\\x00\\xd4\\xc1\\xc3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-06T00:00:00", "modifydate": "2010-08-06T10:30:24", "lines": 36, "newlines": 37, "modlines": 0, "user": "MACRO"}, "text": "         MACRO\n&NAME    #RETURN &OFFSET=0,&MAIN=NO,&RC=\n         LCLC  &INST\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    DS    0H\n.NONAME  ANOP\n         AIF   ('&MAIN' EQ 'NO').NOTMAIN\n         AIF   ('&RC' EQ '(R15)').MAINRC\n         L     R13,#SVEAREA+4                    RELOAD CALLER'S SA ADR\n         LM    R14,R12,12(R13)                   RESTORE CALLER'S REGS\n         AGO   .RCSET\n.MAINRC  ANOP\n         L     R13,#SVEAREA+4                    RELOAD CALLER'S SA ADR\n         L     R14,12(R13)                       RESTORE CALLER'S REGS\n         LM    R0,R12,20(R13)                    RESTORE CALLER'S REGS\n         BR    R14                               RETURN TO CALLER'S\n         MEXIT\n.NOTMAIN ANOP\n         LA    R2,16(R12)                         POINT TO SAVE AREA\n         LM    R2,R14,0(R2)                       RESTORE CALLER'S REGS\n.RCSET   ANOP\n         AIF   ('&RC' EQ '').RTRN\n&INS     SETC  'A'\n         AIF   ('&RC' EQ 'R15').RTRN\n         AIF   ('&RC' EQ '(R15)').RTRN\n         AIF   ('&RC'(1,1) NE 'R').RCINST\n&INS     SETC  'R'\n.RCINST  ANOP\n         L&INS R15,&RC                            SET RETURN CODE\n.RTRN    ANOP\n         AIF   ('&OFFSET'(1,1) EQ 'R').REGOFF\n         B     &OFFSET.(R14)                      RETURN WITH OFFSET\n         MEXIT\n.REGOFF  ANOP\n         B     0(R14,&OFFSET)                     RETURN WITH OFFSET\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE831": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04_\\x004\\x01\\x174\\x1f\\x01\\x174\\x1f\\t\\x18\\x00\\x13\\x00\\x13\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf5@@@'", "ispf": {"version": "04.95", "flags": 0, "createdate": "2017-12-07T00:00:00", "modifydate": "2017-12-07T09:18:34", "lines": 19, "newlines": 19, "modlines": 0, "user": "CBT-495"}, "text": "//***FILE 831 was sent in by Jacques Devaux and contains a dynamic  *   FILE 831\n//*           concatenation program which works for SWA above the   *   FILE 831\n//*           line.  The program was fixed and commented in French  *   FILE 831\n//*           (possibly by Serge Jolicoeur), and the comments and   *   FILE 831\n//*           messages were translated into English by Sam Golob,   *   FILE 831\n//*           with the help of Jacques.  Anyway, it works.          *   FILE 831\n//*                                                                 *   FILE 831\n//*           A HELP member CONCATP# was added by John Kalinich.    *   FILE 831\n//*                                                                 *   FILE 831\n//*           email:  jdevaux@ca.ibm.com                            *   FILE 831\n//*                                                                 *   FILE 831\n//*           email:  sbgolob@cbttape.org    or                     *   FILE 831\n//*                   sbgolob@att.net                               *   FILE 831\n//*                                                                 *   FILE 831\n//*           Program was fixed if dataset prefixes are             *   FILE 831\n//*           8 characters, which can happen at z/OS 2.3            *   FILE 831\n//*           and above.  A description of the fix is in            *   FILE 831\n//*           member $$8CHRID.                                      *   FILE 831\n//*                                                                 *   FILE 831\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CONCATFR": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x001\\x01\\x10 o\\x01\\x174\\x1f\\t\\x12\\x03\\x96\\x03\\x8c\\x00\\n\\xc6\\xd9\\xc5\\xd5\\xc3\\xc8@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-07-25T00:00:00", "modifydate": "2017-12-07T09:12:31", "lines": 918, "newlines": 908, "modlines": 10, "user": "FRENCH"}, "text": "CONCAT   TITLE 'CONCATENATION DYNAMIQUE'\n         MACRO\n&NAME   #MSG   &MSG\n         LA    R1,&MSG\n         L     R15,=A(MSG)\n         BASR  R14,R15\n         MEND\n*        **************************************************************\n*        *****                                                    *****\n*        ***** Cette commande permet de concatener                *****\n*        ***** dynamiquement a un DDNAME soit un autre            *****\n*        ***** DDNAME ou un DSNAME. Si le ddname n'est pas deja   *****\n*        ***** alloue, il sera automatiquement alloue.  Si lors   *****\n*        ***** d'un delete, c'est le dernier fichier, il sera     *****\n*        ***** completement libere.                               *****\n*        *****                                                    *****\n*        *****     Format de la commande :                        *****\n*        *****                                                    *****\n*        *****                             /                \\     *****\n*        *****                             |                |     *****\n*        *****                             | DDNAME(ddname) |       ***\n*        **      CONCAT TODDNAME(ddname)  <                  >       **\n*        *****                             | DSNAME(dsname) |       ***\n*        *****                             |                |     *****\n*        *****                             \\                /     *****\n*        *****                                                    *****\n*        *****          /       \\     /                         \\ *****\n*        *****          | FIRST |     | PERMANENT / NOPERMANENT | *****\n*        *****          \\       /     \\                         / *****\n*        *****                                                    *****\n*        *****          /        \\                                *****\n*        *****          | DELETE |                                *****\n*        *****          \\        /                                *****\n*        *****                                                    *****\n*        ***** ID:         DATE        : JANVIER 85               *****\n*        *****                                                    *****\n*        ***** MODS: ....  SUPPORT DU FIRST ET DELETE             *****\n*        *****                                                    *****\n*        ***** MODS: ....  fix abend 0c4 lors                     *****\n*        *****             d'un mauvais parametre. verifier       *****\n*        *****             le code de  retour de ikjpars.         *****\n*        *****                                                    *****\n*        ***** MODS: ....  Dans la routine ADSN,                  *****\n*        *****             utilisation de S99NOCNV pour le bloc   *****\n*        *****             de controle du DYNALLOC. On empeche    *****\n*        *****             ainsi l'util. d'une allocation exis-   *****\n*        *****             tante.                                 *****\n*        *****                                                    *****\n*        ***** MODS: ....  Date : 1999-10-28                      *****\n*        *****             Depuis SWA=ABOVE dans TSUCLASS,        *****\n*        *****             le TIOT ne contient plus l'adresse     *****\n*        *****             du JFCB mais un TOKEN pour utiliser    *****\n*        *****             avec IEFQMREQ ou SWAREQ.               *****\n*        *****             CONCAT plantait avec un 0C4.           *****\n*        *****             J'ai choisi d'accider aux JFCBs en     *****\n*        *****             utilisant RDJFCB (Read JFCB)           *****\n*        *****             et un EXIT list de type 13             *****\n*        *****             beaucoup plus standard mais plus       *****\n*        *****             long ` programmer.                     *****\n*        *****                                                    *****\n*        **************************************************************\n         TITLE '-- MAINLINE ROUTINE'\n         SPACE 2\nCONCAT  #ENTRY MAIN=YES,LMD=LM04000\n         SPACE ,\n         LR    R10,R1              PTR TO CPPL\n         USING CPPL,R10            ADRESSABILITY OF CPPL\n         SPACE ,\n        #CALL  PARS                CALL PARS ROUTINE\n         LTR   R15,R15             ERROR WITH PARSER?\n         BNZ   CONRET               YES: RETURN TO CALLER\n         SPACE ,\n        #CALL  ALLOC               CALL DYNALLOC ROUTINE\n         SPACE ,\nCONRET  #RETURN MAIN=YES,RC=(R15)  RETURN TO CALLER\n         TITLE '-- PARS SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: PARS                                        **\n**      PURPOSE: CALL IKJPARS AND INITIALIZE DIFFERENTS VARIABLES    **\n**                                                                   **\n**      INPUT: R10 POINT TO CPPL                                     **\n**                                                                   **\n**      OUTPUT: R15 INDICATE RETURN CODE                             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nPARS    #ENTRY\n         MVC   PPLUPT(4),CPPLUPT   COPY A(UPT)\n         MVC   PPLECT(4),CPPLECT   COPY A(ECT)\n         MVC   PPLCBUF(4),CPPLCBUF COPY A(CBUF)\n         SPACE 3\n*----------------------------------------------------------------------\n*        CALL IKJPARS\n*----------------------------------------------------------------------\n         SPACE ,\n         CALLTSSR EP=IKJPARS,MF=(E,PPL)\n         SPACE ,\n         LTR   R15,R15            return code was zero?            MS02\n         BZ    PARPDL              yes: get answer                 MS02\n         SPACE ,\n         CVD   R15,PA#DB          convert to decimal               MS02\n         UNPK  MSG11A,PA#DB+6(2)  convert to ebcdic                MS02\n         OI    MSG11A+3,X'F0'     Set sign in last char            MS02\n         SPACE ,\n        #MSG   MSG11              send message to user             MS02\n         B     PAREND             return to caller                 MS02\n         SPACE 2\nPARPDL   L     R7,PDLPTR           GET ANSWER                      MS02\n         USING CONCPDL,R7\n         SPACE 3\n*----------------------------------------------------------------------\n*        EXTRACT TODD NAME\n*----------------------------------------------------------------------\n         TM    TODD3+6,PRESENT     TODD ?\n         BNO   PARS0400            NON...\n         OI    SWITCH,TODDSW       OUI\n         LH    R3,TODD3+4          LENGTH OF TODD DDNAME\n         BCTR  R3,0                LENGTH - 1\n         L     R5,TODD3            TODDNAME POINTER\n         LA    R4,TODDNAME\n         EX    R3,PARMOVE\nPARMOVE  MVC   0(*-*,R4),0(R5)      MOVE DDNAME ** EXECUTE **\n         SPACE 3\n*----------------------------------------------------------------------\n*        EXTRACT DDNAME TO CONCATINATE\n*----------------------------------------------------------------------\nPARS0400 DS    0H\n         TM    DDNA3+6,PRESENT     DDNAME ?\n         BNO   PARS0500            NON...\n         OI    SWITCH,DDNSW        OUI\n         LH    R3,DDNA3+4          LENGTH OF DDNAME TO CONCAT\n         BCTR  R3,0                LENGTH - 1\n         L     R5,DDNA3            DDNAME POINTER\n         LA    R4,DDNAME\n         EX    R3,PARMOVE\n         SPACE 3\n*----------------------------------------------------------------------\n*        EXTRACT DSNAME TO CONCATINATE\n*----------------------------------------------------------------------\nPARS0500 DS    0H\n         TM    DATA3+6,PRESENT     DSNAME ?\n         BNO   PARS0600            NON...\n         OI    SWITCH,DSNSW        OUI\n         LA    R4,DSNAME           RECEIVING AREA\n         L     R2,DATA3            DSNAME POINTER\n         BCTR  R2,0                RECULE DE 1\n         CLI   0(R2),X'7D'         DATASET ENTRE QUOTES ??\n         BE    PARS0550            OUI...\n         SPACE 2\n         USING UPT,R2              USER PROFILE TABLE\n         L     R2,PPLUPT           UPT POINTER\n         XR    R3,R3               ZERO REG 3\n         ICM   R3,B'0001',UPTPREFL LONGUEUR DU PREFIXE\n         BZ    PARS0550            ZERO, PAS DE PREFIXE\n         BCTR  R3,0                LONGUEUR MOINS 1\n         LA    R5,UPTPREFX         POINTE AU PREFIXE\n* -- >\n         CLI   0(5),C'>'           8-CHARACTER PREFIX?\n         BNE   PARS0510            NO. REGULAR PROCESSING.\n         LA    R5,UPT+X'21'        POINT TO 8-CHAR PREFIX\n         XR    R3,R3               ZERO REG TO SHOW LENGTH\n         ICM   R3,B'0001',UPT+X'29'  8-CHARACTER PREFIX LENGTH\n         BZ    PARS0550            ZERO, PAS DE PREFIXE\n         BCTR  R3,0                LENGTH MINUS 1\nPARS0510 DS    0H\n* -- >\n         EX    R3,PARMOVE          MOVE LE PREFIXE\n         LA    R4,1(R3,R4)         POINTE APRES LE PREFIXE\n         MVI   0(R4),C'.'          POINT\n         LA    R4,1(,R4)           PRET POUR LE RESTE\n         DROP  R2\n         SPACE 2\nPARS0550 DS    0H\n         LH    R3,DATA3+4          LENGTH OF DSNAME TO CONCAT\n         BCTR  R3,0                LENGTH - 1\n         L     R5,DATA3            DSNAME POINTER\n         EX    R3,PARMOVE\n         LOCATE PARSNAM            LOCATE THIS DATASET?\n         LTR   R15,R15              WE FOUND IT?\n         BZ    PARS0600              YES: CHECK FIRST PARAMETER\n        #MSG   MSG06               SEND DATASET NOT CATALOGUED\n         B     PAREND              FIN\n         SPACE 3\n*----------------------------------------------------------------------\n*        VERIFY IF \"FIRST\" IS SPECIFIED\n*----------------------------------------------------------------------\nPARS0600 DS    0H\n         CLC   FIRST,ZERO          FIRST ?\n         BE    PARS0625            NON...\n         OI    SWITCH,FIRSTSW      OUI\n         SPACE 3\n*----------------------------------------------------------------------\n*        VERIFY IF \"DELETE\" IS SPECIFIED\n*----------------------------------------------------------------------\nPARS0625 DS    0H\n         CLC   DELETE,ZERO         DELETE ?\n         BE    PARS0650            NON...\n         OI    SWITCH,DELETSW      OUI\n         SPACE 3\n*----------------------------------------------------------------------\n*        VERIFY IF \"NOPERM\"  IS SPECIFIED\n*----------------------------------------------------------------------\nPARS0650 DS    0H\n         CLC   PERMA,=H'2'         NOPERMANENT ?\n         BNE   PARS0700            NON...\n         OI    SWITCH,NOPERSW      OUI\n         SPACE 3\n*----------------------------------------------------------------------\n*        RELEASE IKJPARS WORK AREA\n*----------------------------------------------------------------------\nPARS0700 DS    0H\n         SPACE ,\n         IKJRLSA PDLPTR\n         SPACE ,\n*----------------------------------------------------------------------\n*        VERIFIE LES PARAMETRES REQUIS\n*----------------------------------------------------------------------\n         SPACE ,\n         TM    SWITCH,TODDSW       TODD KEYWORD SPECIFIED ?\n         BO    PARS0750            OUI...\n        #MSG   MSG01               SEND MESSAGE TODDNAME REQUIRED\n         B     PAREND              FIN\n         SPACE 3\nPARS0750 DS    0H\n         SPACE ,\n         TM    SWITCH,DELETSW      DELETE KEYWORD SPECIFIED?\n         BO    PARRC0               YES: END OF PARSING\n         SPACE ,\n         TM    SWITCH,DDNSW+DSNSW  AUTRES KEYWORDS ?\n         BM    PARRC0              UN DES DEUX...\n         BZ    PARS0775            AUCUN...\n         SPACE ,\n        #MSG   MSG02               SEND MSG DSN AND DD ARE MUT. EXC.\n         B     PAREND              FIN\n         SPACE 3\nPARS0775 DS    0H\n         SPACE ,\n        #MSG   MSG03               SEND DSN OR DDNAME PARM REQUIRED\n         B     PAREND\nPARRC0   SLR   R15,R15             INDICATE NORMAL RETURN CODE\n         SPACE ,\nPAREND  #RETURN RC=(R15)           RETURN TO CALLER\nPARSNAM  CAMLST NAME,DSNAME,,PARSAREA\nPARSAREA DS    0D\n         DS    265C\n         LTORG\n         TITLE '-- ALLOC SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: ALLOC                                       **\n**      PURPOSE: CREATE DYNALLOC PARMLIST AND CALL SVC 99            **\n**                                                                   **\n**      INPUT: NONE                                                  **\n**                                                                   **\n**      OUTPUT: R15 INDICATE RETURN CODE                             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nALLOC   #ENTRY\n         TM    SWITCH,DELETSW+FIRSTSW DELETE OR FIRST WAS SPECIFIED?\n         BM    ALOC4000             YES: CALL DECONCAT PROCESS\n         SPACE ,\n         TM    SWITCH,DSNSW        DSNAME A ALLOUER ?\n         BNO   ALOC1050            NON...\n         SPACE ,\n         LA    R1,TODDNAME         POINT TO DDNAME\n        #CALL  TIOTS               CALL TIOT SCAN ROUTINE\n         SPACE ,\n         LTR   R15,R15             WE FOUND DDNAME IN TIOT?\n         BZ    ALOC0050             YES: GENERATE DDNAME\n         SPACE ,\n         OI    SWITCH,ALOCFAIL     INDICATE FILE NOT ALLOCATED\n         MVC   TXT11DD1,TODDNAME   MOVE DDNAME\n         SPACE ,\nALOC0050 DS    0H\n        #CALL  ADSN                DYNALLOC A DATASET\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000            DYNALLOC ERROR ROUTINE\n         SPACE ,\n         TM    SWITCH,ALOCFAIL     CONCAT FAIL FIRST TIME?\n         BO    ALLEND               YES: RETURN TO CALLER\n         SPACE ,\n         MVC   DDNAME,TXT11DD1     MOVE THE DDNAME\n         SPACE ,\n*----------------------------------------------------------------------\n*        CONCATENATION DE 2 DDNAMES\n*----------------------------------------------------------------------\nALOC1050 DS    0H\n        #CALL  ADDN                DYNALLOC A DATASET\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: SEND AN ERROR MESSAGE\n         B     ALLEND              TERMINATE PROCESS\n         EJECT\n***********************************************************************\n**                                                                   **\n**       PARAMETRES FIRST ET DELETE                                  **\n**       COPY AN ENTRY FROM TIOT                                     **\n**       FREE THE DDNAME                                             **\n**       AND REALLOCATION OF THIS DDNAME                             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nALOC4000 DS    0H\n         GETMAIN R,LV=L#TIOTA      OBTAIN WORKAREA\n         LR    R2,R1               LOAD WORK AREA ADRESS\n         LA    R3,L#TIOTA          LOAD LENGTH OF GETMAIN\n         SR    R4,R4               LOAD DUMMY SENDING FIELD\n         SR    R5,R5               SET SENDING FIELD LEN=0 + PAD X'00'\n         MVCL  R2,R4               CLEAR THE WORK AREA\n         LR    R2,R1               RELOAD WORK AREA ADRESS\n         ST    R2,ALOCGM           KEEP GETMAIN ADRESS\n         LA    R6,L#TIOT\n         SPACE ,\n**===================================================================**\n**       SEARCH DDNAME IN TIOT AND COPY IT                           **\n**===================================================================**\n         SPACE ,\n         LA    R1,TODDNAME             SEARCH ARGUMENT FOR TIOTS\n        #CALL  TIOTS                   CALL TIOT SCAN ROUTINE\n         LTR   R15,R15                 ENTRY IS FOUND?\n         BNZ   ALOC2100                NO: INDICATE AN ERROR\n         SPACE ,                                                   SJ01\n         LA    R1,TODDNAME             SEARCH ARGUMENT FOR RJFCB   SJ01\n         LA    R3,DSNAME               SEARCH ARGUMENT FOR RJFCB   SJ01\n         TM    SWITCH,FIRSTSW          CONCAT AVEC 'FIRST'?        SJ01\n         BNO   ALOCPJFC                NO: EXTRACT DSN FROM JFCB   SJ01\n         MVC   0(L'DSNAME,R2),DSNAME   MOVE DSN FOR FIRST ENTRY    SJ01\n         LA    R2,52(,R2)              POINT NEXT ENTRY IN TABLE   SJ01\nALOCPJFC DS    0H                                                  SJ01\n        #CALL  RJFCB                   GO TO READ JFCBS            SJ01\n         LTR   R15,R15                 ok ?                        SJ01\n         BNZ   ALOC5005                no, msg and abend           SJ01\n         SPACE 2\n**===================================================================**\n**       FREE  THE DDNAME ALLOCATED TO TODDNAME                      **\n**===================================================================**\n         SPACE ,\nALOCGET  DS    0H\n        #CALL  UNALOC              FREE THE DDNAME IN TODDNAME\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: SEND AN ERROR MESSAGE\n         SPACE 2\n**===================================================================**\n**       REALLOCATION OF EACH DATASET AND KEEP THE DDNAME (SYS...)   **\n**===================================================================**\n         SPACE ,\n         L     R2,ALOCGM           POINT TO DSN TABLE\n         MVC   TXT11DD1,TODDNAME   ASK DYNALLOC WITH TODDNAME\n         SPACE ,\nALOCNTBL CLI   0(R2),X'00'          END OF TABLE?\n         BE    ALOCIETB              YES: CONCAT ALL DD\n         SPACE ,\n         MVC   DSNAME,0(R2)        PREPARE DSN FOR DYNALLOC\n        #CALL  ADSN                CALL DYNALLOC\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: INDICATE AN ERROR\n         SPACE ,\n         MVC   44(8,R2),TXT11DD1   KEEP DDNAME\nALOCIDDN MVC   TXT11DD1,BLANKS     ASK TO SVC99 A DDNAME\n         LA    R2,52(,R2)          POINT TO NEXT ENTRY IN TABLE\n         B     ALOCNTBL            AND CONTINUE PROCESS\n         SPACE 2\n**===================================================================**\n**       CONCAT ALL DDNAMES SYS..... TO TODDNAME                     **\n**===================================================================**\n         SPACE ,\nALOCIETB L     R2,ALOCGM           POINT TO DSN TABLE\n         SPACE ,\nALOCIETL LA    R2,52(,R2)          POINT TO NEXT ENTRY\n         CLI   0(R2),X'00'         END OF TABLE?\n         BE    ALLEDEL              TERMINATE PROCESS\n         SPACE ,\n         MVC   DDNAME,44(R2)       INIT TO DDNAME\n        #CALL  ADDN                CONCAT 2 DDNAME\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: INDICATE AN ERROR\n         B     ALOCIETL            NEXT DDNAME\n         SPACE ,\nALLEDEL  L     R2,ALOCGM           POINT TO DSN TABLE\n         FREEMAIN R,A=(R2),LV=L#TIOTA AND FREE IT\n         B     ALLEND              RETURN TO CALLER\nALOC2100 DS    0H\n        #MSG   MSG09               SEND ERROR IN TIOT\n         B     ALLEND              FIN\nALOC5000 DS    0H\n        #CALL  DYNMSG              SEND THE ERROR MESSAGE\n         SPACE ,\nALLEND  #RETURN RC=(R15)           RETURN TO CALLER\n         LTORG\nL#TIOTA  EQU   ((L#TIOT+1)*52)     LENGTH WORKAREA 32+END OF TABLE\nL#TIOT   EQU   64                  NUMBER OF datasets\nALOCGM   DS    F                   ADRESS OF GETMAIN\n         TITLE '-- ADSN DYNALLOC DATASET SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: ADSN                                        **\n**      PURPOSE: DYNALLOC A DATASET                                  **\n**                                                                   **\n**      INPUT: TXTPTRS1                                              **\n**             IF TXTDD1 (DDNAME = BLANK CHANGE DALDDN->DALRTDDN)    **\n**                                                                   **\n**      OUTPUT: R15 RETURN CODE OF DYNALLOC                          **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nADSN    #ENTRY\n         SPACE ,\nADSILEN  MVI   TXT11+5,8          SET LENGTH OF DDNAME TO 8\n         MVI   TXT11+1,DALDDNAM   SVC99 DEFAULT\n         CLI   TXT11DD1,C' '      WE HAVE A DDNAME?\n         BNE   ADSDSN              NO: INIT DSN VALUE\n         MVI   TXT11+1,DALRTDDN   SVC99 RETURN DDNAME\nADSDSN   MVC   TXT12+6(44),DSNAME DSNAME A ALLOUER\n         MVI   RQBVERB,S99VRBAL   DSN ALLOCATION VERB\n         MVI   RQBFLG1,S99NOCNV   DO NOT USE EXISTING ALLOCATION   JP01\n         LA    R1,TXTPTRS1        POINT TO ALLOC SERVICE AND\n         ST    R1,RQBTXTP          INDICATE IT IN DYNALLOC PARMLIST\n         LA    R1,ALLOCPRM        POINT TO DYNALLOC PARMLIST\n         DYNALLOC                 CALL DYNALLOC SERVICE\n         SPACE ,\n         LTR   R15,R15            RETURN CODE OF DYNALLOC = ZERO?\n         BNZ   ADSNRET             NO: RETURN TO CALLER\n         SPACE ,\n         CLC   =C'SYS',TXT11DD1 TEMPORARY DDNAME?\n         BE    ADSNRET             YES: RETURN TO CALLER\n         CLC   TXT11DD1,TODDNAME  DYNALLOC ON DDNAME?\n         BE    ADSNRET             YES:RETURN TO CALLER\n         SPACE ,\n         CLI   ASDTIMD,X'00'      ALREADY ALLOCATED ON XHHMMSS?\n         BE    ADSNRET             YES:RETURN TO CALLER\n         SPACE ,\n         TIME  DEC                OBTAIN CURRENT TIME\n         ST    R0,ASDTIMD         KEEP HHMMSST\n         OI    ASDTIMD+3,X'0F'    CONVERT IT\n         UNPK  TXT11+7(7),ASDTIMD GENERATE NEW DDNAME\n         B     ADSILEN            AND RETRY\n         SPACE ,\nADSNRET #RETURN RC=(R15)\n         LTORG\nASDTIMD  DC    F'0'\n         TITLE '-- ADDN DYNALLOC CONCAT SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: ADDN                                        **\n**      PURPOSE: DYNALLOC A DDNAME TO AN DDNAME                      **\n**                                                                   **\n**      INPUT: DDNAME                                                **\n**             TODDNAME                                              **\n**                                                                   **\n**      OUTPUT: R15 RETURN CODE OF DYNALLOC                          **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nADDN    #ENTRY\n         MVC   TXT21DD1,TODDNAME   MOVE TODDNAME\n         MVC   TXT21DD2,DDNAME     MOVE FILENAME\n         SPACE ,\n         MVI   RQBVERB,S99VRBCC    CONCAT   VERB\n         TM    SWITCH,NOPERSW      PERMANENT CONCAT ?\n         BNO   ALOC1150            OUI...\n         SPACE 2\nALOC1150 DS    0H\n         LA    R1,TXTPTRS2         POINT TO ALLOC SERVICE AND\n         ST    R1,RQBTXTP           INDICATE IT IN DYNALLOC PARMLIST\n         LA    R1,ALLOCPRM         POINT TO DYNALLOC PARMLIST\n         DYNALLOC                  CALL DYNALLOC SERVICE\n        #RETURN RC=(R15)           RETURN TO CALLER\n         SPACE ,\n         LTORG\n         TITLE '-- UNALOC SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: UNALOC                                      **\n**      PURPOSE: DYNALLOC A DDNAME                                   **\n**                                                                   **\n**      INPUT: TODDNAME                                              **\n**                                                                   **\n**      OUTPUT: R15 RETURN CODE OF FREE COMMAND                      **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nUNALOC  #ENTRY\n         MVC   UNDDN,TODDNAME      MOVE DDNAME\n         MVC   CPPLCBUF,=A(UNFREE) MOVE ADRESS OF COMMAND IN CPPL\n         LR    R1,R10              R1 POINT TO CPPL\n         LINK  EP=FREE             CALL FREE COMMAND\n        #RETURN RC=(R15)           RETURN TO CALLER\n         SPACE ,\n         LTORG\nUNFREE   DC    AL2(L#FREE)         LENGTH OF CPPL\n         DC    AL2(4)              LENGTH OF COMMAND\n         DC    C'FREE'             NAME OF CPPL\n         DC    C' DDNAME('         DDNAME PARAMETER\nUNDDN    DC    CL8' '              DDNAME TO FREE\n         DC    C')'                END OF PARMLIST\nL#FREE   EQU   *-UNFREE            LENGTH OF CPPL\n         TITLE '-- DYNALLOC ERROR SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: DYNMSG                                      **\n**      PURPOSE: ANALYSE THE ERROR CODE AND SEND AN ERROR MESSAGE    **\n**                                                                   **\n**      INPUT: RQBERCD                                               **\n**                                                                   **\n**      OUTPUT: NONE                                                 **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nDYNMSG  #ENTRY\n         SPACE ,\n         CLC   DYNDDN,RQBERCD      DDNAME NOT FOUND ?\n         BNE   ALOC5010            NON...\nALOC5005 DS    0H\n        #MSG   MSG05               SEND DDNAME NOT ALLOCATED\n         B     DYNMRET             FIN\n         SPACE 2\nALOC5010 DS    0H\n         CLC   DYNDSN,RQBERCD      DSNAME NOT FOUND ?\n         BNE   ALOC5020            NON...\n        #MSG   MSG06               SEND DATASET NOT CATALOGUED\n         B     DYNMRET             FIN\n         SPACE 2\nALOC5020 DS    0H\n         CLC   DYNDSNI,RQBERCD     DSNAME INVALIDE  ?\n         BNE   ALOC5030            NON...\n        #MSG   MSG07               SEND INVALID DATASET\n         B     DYNMRET             FIN\n         SPACE 2\nALOC5030 DS    0H\n         CLC   DYNDDNO,RQBERCD     DDNAME OPEN ?\n         BNE   ALOC5040            NON...\n        #MSG   MSG08               SEND DATASET IS OPEN\n         B     DYNMRET             FIN\n         SPACE 2\nALOC5040 DS    0H\n         XR    R2,R2               CARACTERE HEX NON CONVERTI\n         ICM   R3,B'1111',RQBERCD  ERROR CODE\n         LA    R4,HEXTAB           TABLE DE CONVERSION HEX\n         XR    R5,R5               CARACTERE HEX CONVERTI\n         LA    R6,4                LOOP COUNTER\n         SPACE ,\nALOC5050 DS    0H\n         SLDL  R2,4                GET A NUMBER\n         SLL   R5,8                FAIT DE LA PLACE POUR LE PROCHAIN\n         IC    R5,0(R2,R4)         CARACTERE HEX\n         SRL   R2,4                CLEAN R2\n         BCT   R6,ALOC5050         LOOP\n         STCM  R5,B'1111',MSG04A   SAUVE LE REASON CODE\n         SPACE 3\n         XR    R5,R5               CARACTERE HEX CONVERTI\n         LA    R6,4                LOOP COUNTER\n         SPACE ,\nALOC5100 DS    0H\n         SLDL  R2,4                GET A NUMBER\n         SLL   R5,8                FAIT DE LA PLACE POUR LE PROCHAIN\n         IC    R5,0(R2,R4)         CARACTERE HEX\n         SRL   R2,4                CLEAN R2\n         BCT   R6,ALOC5100         LOOP\n         STCM  R5,B'1111',MSG04B   SAUVE LE REASON CODE\n        #MSG   MSG04               SEND DYNALLOC ERROR\n         B     DYNMRET             FIN\n         SPACE ,\nDYNMRET  SLR   R15,R15            INDICATE NORMAL RETURN CODE\n        #RETURN RC=(R15)          AND RETURN TO CALLER\n         TITLE '-- MSG SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: MSG                                         **\n**      PURPOSE: SEND AN ERROR WITH A PUTLINE                        **\n**                                                                   **\n**      INPUT: R1 ADRESS OF MESSAGE                                  **\n**                                                                   **\n**      OUTPUT: R15 INDICATE AN ERROR                                **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nMSG     #ENTRY\n         ST    R1,MSGAD            KEEP MSG ADRESS\n         XC    ECB1,ECB1           CLEAR ECB\n         L     R3,PPLUPT           POINT TO UPT\n         L     R4,PPLECT           POINT TO ECT\n         SPACE ,\n         PUTLINE PARM=MSGPLIN,UPT=(R3),ECT=(R4),ECB=ECB1,              X\n               OUTPUT=MSGOLD,MF=(E,MSGIOPL)\n         SPACE ,\n         LA    R15,12              INDICATE AN ERROR\n        #RETURN RC=(R15)           RETURN TO CALLER\n         SPACE ,\nMSGOLD   DC    F'1'\nMSGAD    DC    A(*)\nMSGIOPL  DC    4F'0'\nMSGPLIN  PUTLINE MF=L\n         TITLE '-- TIOT SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: TIOT                                        **\n**      PURPOSE: SCAN THE TIOT FOR A SPECIFIC DDNAME                 **\n**                                                                   **\n**      INPUT:  R1 => ADRESS OF DDNAME TO SEARCH                     **\n**                                                                   **\n**      OUTPUT: R15 => RETURN CODE                                   **\n**            : R1  => ADRESS OF DDNAME IN TIOT IF RC=0              **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nTIOTS   #ENTRY\n         MVC   TIOTDD,0(R1)       COPY DDNAME\n         EXTRACT TIOTADDR,'S',FIELDS=(TIOT)  ADRESSE DU TIOT\n         SR    R3,R3              CLEAR FOR INSERT\n         SR    R15,R15            DEFAULT NORMAL RETURN CODE\n         L     R2,TIOTADDR        POINT TO TIOT\n         SPACE 2\nTIOT2010 IC    R3,24(,R2)         LONGUEUR DE L'ENTREE\n         LTR   R3,R3              FIN DU TIOT ?\n         BZ    TIOT6100           OUI, ERREUR\n         CLC   TIOTDD,28(R2)      DDNAME = FILENAME ?\n         BE    TIOT2020           OUI\n         AR    R2,R3              DDNAME SUIVANT\n         B     TIOT2010           PROCHAINE ENTREE\n         SPACE ,\nTIOT2020 LR    R1,R2              KEEP ADRESS IN PARM'S\n         B     TIOTRET            RETURN TO CALLER\n         SPACE ,\nTIOT6100 LA    R15,4              INDICATE ENTRY NOT FOUND\nTIOTRET #RETURN RC=(R15)          AND RETURN TO CALLER\nTIOTADDR DS    F                  TIOT ADRESS\nTIOTDD   DC    CL8' '             TIOT DDNAME\n         LTORG *\n         TITLE '-- READ JFCB SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE --> RJFCB                                    **\n**      PURPOSE ----------> READ THE JFCBS FOR ALL DATA SETS         **\n**                          ALLOCATED TO A DDNAME.                   **\n**                                                                   **\n**      INPUT  :  R1 POINT TO A DDNAME                               **\n**                R2 POINT TO A DSNAME TABLE                         **\n**                R3 POINT TO A DSNAME NOT TO INCLUDE IN TABLE       **\n**                                                                   **\n**      OUTPUT :  R15 INDICATE RETURN CODE                           **\n**                 0  = EVERYTHING IS OK (ALL DSNAMES IN A TABLE)    **\n**                255 = INFORMATION NOT AVAILABLE                    **\n**                                                                   **\n**      PGMR   :  SERGE JOLICOEUR  -ALIAS-  SERJOL                   **\n**      DATE   :  1999-10-29                                         **\n**      MODID  :  SJ01   (new service routine)                       **\n**                                                                   **\n***********************************************************************\n         SPACE 2\n         CNOP  0,8\nRJFCB   #ENTRY ,\n         LA    R4,INDCB\n         USING IHADCB,R4\n         MVC   DCBDDNAM,0(R1)            MOVE DDNAME IN DCB\n*\n         XC    ARLSTRT(LENARL),ARLSTRT   CLEAR ALLOC RETRIEV LIST\n         MVC   ARLLEN,=AL2(LENARL)       LENGTH OF THIS AREA\n         MVC   ARLIDENT,=C'AR'           IDENTIFICATION OF AREA\n*\n*---------------------------------------------------------------------*\n*   READ ALL JFCBS ASSOCIATED TO A DDNAME                             *\n*---------------------------------------------------------------------*\n         RDJFCB (INDCB,INPUT)\n*\n         LTR   R15,R15             TEST RDJFCB RETURN CODE\n         BNZ   RJFCB030            BRANCH IF INFORMATION NOT AVAILABLE\n         CLI   ARLRCODE,ARLALLOK   TEST RDJFCB REASON CODE\n         BNE   RJFCB030            BRANCH IF INFORMATION NOT AVAILABLE\n         ICM   R5,B'1111',ARLAREA  GET AND TEST ADDRESS OF ARL\n         BZ    RJFCB030            GO IF SYSTEM DOES NOT SUPPORT ARL\n         USING ARA,R5              ALLOCATION RETRIEVAL AREA\n         LH    R6,ARLRTRVD         # OF CONCATENATED DATA SETS\n*\n*---------------------------------------------------------------------*\n*   EXTRACT DSNAMES FROM JFCBS                                        *\n*---------------------------------------------------------------------*\nRJFCB010 DS    0H\n         LA    R7,ARAJFCB\n         USING JFCB,R7\n         CLC   0(L'JFCBDSNM,R3),JFCBDSNM      DSN NOT INCLUDED\n         BE    RJFCB020\n         MVC   0(L'JFCBDSNM,R2),JFCBDSNM      DSNAME IN TABLE\n         LA    R2,L'JFCBDSNM+L'DCBDDNAM(,R2)  NEXT ENTRY\nRJFCB020 DS    0H\n         LH    R15,ARALEN          LENGTH OF THE ARA FOR THIS JFCB\n         LA    R5,0(R15,R5)        TO THE NEXT ARA\n         BCT   R6,RJFCB010\n*\n*---------------------------------------------------------------------*\n*   FREE THE ALLOCATION RETRIEVAL AREA                                *\n*---------------------------------------------------------------------*\n         SR    R0,R0\n         ICM   R0,B'0111',ARLRLEN  LENGTH OF ALLOCATION RETRIEVAL AREA\n         L     R1,ARLAREA          ADDRESS OF ALLOCATION RETRIEVAL AREA\n         SR    R15,R15             SUBPOOL TO PASS TO FREEMAIN FOR\n         IC    R15,ARLPOOL         ALLOCATION RETRIEVAL AREA.\n         FREEMAIN RU,LV=(0),SP=(15),A=(1)\n*\n         SR    R15,R15        RETURN CODE = 0\n         B     RJFCB040\n*\nRJFCB030 DS    0H             ROUTINE TO HANDLE INABILITY TO GET THE\n         LA    R15,255        RETURN CODE = 255\n*\n*---------------------------------------------------------------------*\n*   RETURN TO CALLER                                                  *\n*---------------------------------------------------------------------*\nRJFCB040 DS    0H\n        #RETURN RC=(R15)\n*\n         LTORG *\n         SPACE 4\n*---------------------------------------------------------------------*\n*   1  - DCB                                                          *\n*   2A - LAST ENTRY INDICATOR                                         *\n*   2B - ENTRY CODE TO RETRIEVE ALLOCATION INFORMATION                *\n*   2C - ADDR OF ALLOCATION RETRIEVAL LIST                            *\n*   3  - ALLOCATION RETRIEVAL LIST                                    *\n*---------------------------------------------------------------------*\nINDCB    DCB   DSORG=PO,DDNAME=$$$$$$$$,MACRF=R,EXLST=INEXLST\nINEXLST  DC    0F'0',A(X'80000000'+X'13000000'+ARLSTRT)\nARLSTRT  IHAARL DSECT=NO\nLENARL   EQU    *-ARLSTRT         LENGTH OF IHAARL\n*---------------------------------------------------------------------*\n*        END OF MODID SJ01                                            *\n*---------------------------------------------------------------------*\n         TITLE '-- GLOBAL WORK AREA'\n         SPACE 2\n        #GBLWKA\nPA#DB    DS    D'0'\nBLANKS   DC    CL80' '\nZERO     DC    D'0'\nDSNAME   DC    CL44' '\nTODDNAME DC    CL8' '\nDDNAME   DC    CL8' '\nASDTIMDM DC    F'0'\nHEXTAB   DC    C'0123456789ABCDEF'\nDYNDDN   DC    XL2'0438'\nDYNDSN   DC    XL2'1708'\nDYNDSNI  DC    XL2'035C'\nDYNDDNO  DC    XL2'0420'\n         SPACE ,\nSWITCH   DC    X'00'\nPRESENT  EQU   X'80'\nDELETSW  EQU   X'40'\nNOPERSW  EQU   X'20'\nFIRSTSW  EQU   X'10'\nDSNSW    EQU   X'08'\nDDNSW    EQU   X'04'\nTODDSW   EQU   X'02'\nALOCFAIL EQU   X'01'\n         SPACE ,\nECB1     DC    F'0'                ECB FOR IKJPARS\nPPL      DS    0F                  PARSE PARM LIST\nPPLUPT   DC    A(0)                PTR TO UPT\nPPLECT   DC    A(0)                PTR TO ECT\nPPLECB   DC    A(ECB1)             PTR TO ECB\nPPLPCL   DC    A(CONCPCL)          PTR TO PCL\nPPLANS   DC    A(PDLPTR)           PTR TO ANSWER PLACE\nPPLCBUF  DC    A(0)                PTR TO COMMAND BUFFER\nPPLUWA   DC    A(0)                PTR TO USER WORK AREA\nPDLPTR   DC    A(0)                PTR TO AREA CREATED BY IKJPARS\n         SPACE ,\nALLOCPRM DS    0D\n         DC    AL1(128)\n         DC    AL3(ALLOCBLK)\n         SPACE ,\nALLOCBLK DS    0F\n         DC    AL1(RQBLENG)        BLOCK LENGTH\nRQBVERB  DC    AL1(0)              VERB\nRQBFLG1  DC    AL2(0)              FLAG 1\nRQBERCD  DC    AL2(0)              ERROR CODE\nRQBINF   DC    AL2(0)              INFORMATION CODE\nRQBTXTP  DC    A(0)                TEXT POINTERS ADDRESS\n         DC    F'0'                RESERVED\nRQBFLG2  DC    F'0'                FLAG 2\nRQBLENG  EQU   *-ALLOCBLK\n         SPACE 2\nTXTPTRS1 DS    0F                  DSNAME ALLOC\n         DC    A(TXT11)            POINTE AU DDNAME\n         DC    A(TXT12)            POINTE AU DSNAME\n         DC    A(TXT13)            POINTE AU DISP\n         DC    AL1(128),AL3(TXT14) FIN+POINTE AU STATUS\n         SPACE ,\nTXT11    DC   AL2(DALDDNAM),AL2(1),AL2(8)\nTXT11DD1 DC    CL8' '              DDNAME\nTXT12    DC   AL2(DALDSNAM),AL2(1),AL2(44),CL44' '\nTXT13    DC   AL2(DALNDISP),AL2(1),AL2(1),AL1(8)\nTXT14    DC   AL2(DALSTATS),AL2(1),AL2(1),AL1(8)\n         SPACE 3\nTXTPTRS2 DS    0F\n         DC    A(TXT21)            POINTE AU DDNAME\n         DC    AL1(128),AL3(TXT22) FIN+POINTE AU TODDNAME\n         SPACE ,\nTXT21    DC    AL2(DCCDDNAM),AL2(2)\n         DC    AL2(8)\nTXT21DD1 DC    CL8' '              DDNAME\n         DC    AL2(8)\nTXT21DD2 DC    CL8' '              TODDNAME\n         SPACE ,\nTXT22    DC    AL2(DCCPERMC),AL2(0)\n         SPACE 3\n         TITLE '-- ERROR MESSAGES'\n         SPACE 3\nMSG01    DC    AL2(MSG02-MSG01)\n         DC    X'0000'\n         DC    C'CONCAT01 TODDNAME parameter required'\n         SPACE 3\nMSG02    DC    AL2(MSG03-MSG02)\n         DC    X'0000'\n         DC    C'CONCAT02 DSN and DD are mutually exclusives'\n         SPACE 3\nMSG03    DC    AL2(MSG04-MSG03)\n         DC    X'0000'\n         DC    C'CONCAT03 DSN or DD parameter required'\n         SPACE 3\nMSG04    DC    AL2(MSG05-MSG04)\n         DC    X'0000'\n         DC    C'CONCAT04 DYNALLOC error, REASON code = '\nMSG04A   DS    CL4\n         DC    C', INFO code = '\nMSG04B   DS    CL4\n         SPACE 3\nMSG05    DC    AL2(MSG06-MSG05)\n         DC    X'0000'\n         DC    C'CONCAT05 DDNAME not allocated'\n         SPACE 3\nMSG06    DC    AL2(MSG07-MSG06)\n         DC    X'0000'\n         DC    C'CONCAT06 DATASET not catalogued'\n         SPACE 3\nMSG07    DC    AL2(MSG08-MSG07)\n         DC    X'0000'\n         DC    C'CONCAT07 Invalid DATASET name'\n         SPACE 3\nMSG08    DC    AL2(MSG09-MSG08)\n         DC    X'0000'\n         DC    C'CONCAT08 TODDNAME is open'\n         SPACE 3\nMSG09    DC    AL2(MSG10-MSG09)\n         DC    X'0000'\n         DC    C'CONCAT09 DDNAME not found in tiot'\n         SPACE 3\nMSG10    DC    AL2(MSG11-MSG10)                                    MS02\n         DC    X'0000'\n         DC    C'CONCAT10 MAXIMUM OF DSNAME IS 32'\n         SPACE 3\nMSG11    DC    AL2(MSG12-MSG11)                                    MS02\n         DC    X'0000'                                             MS02\n         DC    C'CONCAT11 Parse service routine(IKJPARS), RC = '   MS02\nMSG11A   DS    CL4                                                 MS02\nMSG12    DS    0C\n         TITLE '-- IKJPARS PARAMETERS'\nCONCPCL  IKJPARM DSECT=CONCPDL\n         SPACE 3\nTODD1    IKJKEYWD\n         IKJNAME 'TODDNAME',SUBFLD=TODD2\nDDNA1    IKJKEYWD\n         IKJNAME 'DDNAME',SUBFLD=DDNA2\nDATA1    IKJKEYWD\n         IKJNAME 'DSN',SUBFLD=DATA2\nFIRST    IKJKEYWD\n         IKJNAME 'FIRST'\nDELETE   IKJKEYWD\n         IKJNAME 'DELETE'\nPERMA    IKJKEYWD DEFAULT='PERMANENT'\n         IKJNAME 'PERMANENT'\n         IKJNAME 'NOPERMANENT'\n         SPACE 3\nTODD2    IKJSUBF\nTODD3    IKJIDENT 'TO DDNAME',                                         X\n               FIRST=ALPHANUM,                                         X\n               OTHER=ALPHANUM,                                         X\n               MAXLNTH=8,                                              X\n               PROMPT='TO DDNAME',                                     X\n               HELP='DDNAME AUQUEL CONCATENER'\n         SPACE 3\nDDNA2    IKJSUBF\nDDNA3    IKJIDENT 'FILE NAME',                                         X\n               FIRST=ALPHANUM,                                         X\n               OTHER=ALPHANUM,                                         X\n               MAXLNTH=8,                                              X\n               PROMPT='FILE NAME',                                     X\n               HELP='DDNAME A CONCATENER'\n         SPACE 3\nDATA2    IKJSUBF\nDATA3    IKJIDENT 'DATASET NAME',                                      X\n               FIRST=ALPHANUM,                                         X\n               OTHER=ALPHANUM,                                         X\n               CHAR,                                                   X\n               MAXLNTH=44,                                             X\n               PROMPT='DATASET NAME',                                  X\n               HELP='FICHIER A CONCATENER'\n         TITLE '-- SYSTEM DSECTS'\n         PRINT GEN\n         IKJENDP\n         SPACE ,\n        #REGS\n         SPACE ,\n         IEFZB4D0\n         SPACE ,\n         IEFZB4D2\n         SPACE ,\n*                                                                SJ01\nARA      DSECT ,            ALLOCATION RETRIEVAL AREA            SJ01\nARALEN   DS    XL2          LENGTH OF THE INFO FOR DATA SET      SJ01\nARARESV  DS    XL2          RESERVED                             SJ01\nARAJFCB  DS    CL(JFCBLGTH) JFCB                                 SJ01\nARAVAR   DS    0C           VARIABLE                             SJ01\n*                                                                SJ01\nJFCB     DSECT ,                                                 SJ01\n         IEFJFCBN ,                                              SJ01\n*                                                                SJ01\n         DCBD  DSORG=PS,DEVD=DA                                  SJ01\n*                                                                SJ01\n        #MAPS  PSA,ASCB,CVT,TIOT,CPPL,UPT\n         END   CONCAT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONCATP$": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00R\\x01\\x01\\x03O\\x01\\x174\\x1f\\x08\\x05\\x00\\x1c\\x00\\x1b\\x00\\x00\\xc1\\xe2\\xe2\\xc5\\xd4\\xd1\\xc3\\xd3@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2001-02-03T00:00:00", "modifydate": "2017-12-07T08:05:52", "lines": 28, "newlines": 27, "modlines": 0, "user": "ASSEMJCL"}, "text": "//SBGOLOBM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.CBT495.FILE831\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT495.FILE831(CONCATPG)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB495831\n NAME    CONCATPG(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONCATP#": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x02\\x01\\x130\\x1f\\x01\\x130/\\x081\\x003\\x00\\x19\\x00.\\xc8\\xc5\\xd3\\xd7@@@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2013-10-28T00:00:00", "modifydate": "2013-10-29T08:31:02", "lines": 51, "newlines": 25, "modlines": 46, "user": "HELP"}, "text": ")F FUNCTION -\n      This command permits the dynamic concatenation\n      to a DDNAME, given either a DSN or DDNAME\n      input parameter.\n\n      If TODDNAME is not allocated, it will be\n      automatically allocated.  If at the time of a\n      deconcatenation, the dataset is the last one,\n      then the DD name will be completely freed.\n\n)X SYNTAX  -\n      CONCAT TODDNAME(ddname)\n             DSN(dsname)\n             DDNAME(ddname)\n             FIRST\n             DELETE\n\n  REQUIRED - TODDNAME(ddname), DSN(dsname) or DDNAME(ddname)\n  DEFAULTS - none\n  ALIAS    - CONCATPG\n\n)O OPERANDS -\n\n))TODDNAME(ddname) - DDNAME whose concatenation is being changed.\n))DSN(dsname)      - DSN being added to or deleted from the\n                     concatenation.\n))DDNAME(dsname)   - DDNAME being added to the concatenation.\n))FIRST            - add to the beginning of the concatenation.  If\n                     not specified, the file will be added to the end\n                     of the concatenation.\n))DELETE           - deconcatenate this DSN from TODDNAME.\n=DOCUMENT=DOC=CBT831\n)F FUNCTION -\n\nSource:  CBT 831\nAuthor:  Jacques Devaux (jdevaux@ca.ibm.com)\nUpdated: Serge Jolicoeur and Sam Golob\n\n=MESSAGE=MS=MES=MSG=MESS=MSGS=MESSA=MESSAG=MESSAGES\n)F FUNCTION -\n\n))CONCAT01 TODDNAME parameter required\n))CONCAT02 DSN and DD are mutually exclusive\n))CONCAT03 DSN or DD parameter required\n))CONCAT04 DYNALLOC error, reason code = rsn\n))CONCAT05 DDNAME not allocated\n))CONCAT06 DATASET not catalogued\n))CONCAT07 Invalid DATASET name\n))CONCAT08 TODDNAME is open\n))CONCAT09 DDNAME not found in TIOT\n))CONCAT11 Parse service routine (IKJPARS), RC = rc\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CONCATPG": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00!\\x01\\x10 o\\x01\\x174\\x1f\\t\\x12\\x03\\x96\\x03\\x8c\\x00z\\xc5\\xd5\\xc7\\xd3\\xc9\\xe2\\xc8@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2010-07-25T00:00:00", "modifydate": "2017-12-07T09:12:21", "lines": 918, "newlines": 908, "modlines": 122, "user": "ENGLISH"}, "text": "CONCAT   TITLE 'DYNAMIC CONCATENATION'\n         MACRO\n&NAME   #MSG   &MSG\n         LA    R1,&MSG\n         L     R15,=A(MSG)\n         BASR  R14,R15\n         MEND\n*        **************************************************************\n*        *****                                                    *****\n*        ***** This command permits the dynamic concatenation     *****\n*        ***** to a DDNAME, given either the DDNAME or a DSNAME.  *****\n*        ***** If the DDNAME wasn't allocated, it will be         *****\n*        ***** automatically allocated.  If at the time of a      *****\n*        ***** deconcatenation, the dataset is the last one,      *****\n*        ***** then the DD name will be completely freed.         *****\n*        *****                                                    *****\n*        *****     Format of the command :                        *****\n*        *****                                                    *****\n*        *****                             /                \\     *****\n*        *****                             |                |     *****\n*        *****                             | DDNAME(ddname) |       ***\n*        **      CONCAT TODDNAME(ddname)  <                  >       **\n*        *****                             | DSNAME(dsname) |       ***\n*        *****                             |                |     *****\n*        *****                             \\                /     *****\n*        *****                                                    *****\n*        *****          /       \\     /                         \\ *****\n*        *****          | FIRST |     | PERMANENT / NOPERMANENT | *****\n*        *****          \\       /     \\                         / *****\n*        *****                                                    *****\n*        *****          /        \\                                *****\n*        *****          | DELETE |                                *****\n*        *****          \\        /                                *****\n*        *****                                                    *****\n*        ***** ID:         DATE        : January 85               *****\n*        *****                                                    *****\n*        ***** MODS: ....  SUPPORT of FIRST and DELETE            *****\n*        *****                                                    *****\n*        ***** MODS: ....  Fix abend 0c4 if a bad parameter       *****\n*        *****             was entered.  Verify the return code   *****\n*        *****             from ikjpars.                          *****\n*        *****                                                    *****\n*        ***** MODS: ....  In the ADSN routine, we are now using  *****\n*        *****             the S99NOCNV control block for the     *****\n*        *****             DYNALLOC call.  This way, we prevent   *****\n*        *****             using an already existing allocation.  *****\n*        *****                                                    *****\n*        ***** MODS: ....  Date : 1999-10-28                      *****\n*        *****             Since SWA=ABOVE in TSUCLASS, the       *****\n*        *****             TIOT no longer contains the JFCB       *****\n*        *****             address but instead, it is using a     *****\n*        *****             TOKEN to utilize the macros IEFQMREQ   *****\n*        *****             or SWAREQ.                             *****\n*        *****             CONCAT was abending with an 0C4.       *****\n*        *****             I chose to access the JFCBs by         *****\n*        *****             using RDJFCB (Read JFCB) and a         *****\n*        *****             type 13 exit list, which is much       *****\n*        *****             more standard, but is longer to        *****\n*        *****             program.                               *****\n*        *****                                                    *****\n*        **************************************************************\n         TITLE '-- MAINLINE ROUTINE'\n         SPACE 2\nCONCAT  #ENTRY MAIN=YES,LMD=LM04000\n         SPACE ,\n         LR    R10,R1              PTR TO CPPL\n         USING CPPL,R10            ADDRESSABILITY OF CPPL\n         SPACE ,\n        #CALL  PARS                CALL PARS ROUTINE\n         LTR   R15,R15             ERROR WITH PARSER?\n         BNZ   CONRET               YES: RETURN TO CALLER\n         SPACE ,\n        #CALL  ALLOC               CALL DYNALLOC ROUTINE\n         SPACE ,\nCONRET  #RETURN MAIN=YES,RC=(R15)  RETURN TO CALLER\n         TITLE '-- PARS SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: PARS                                        **\n**      PURPOSE: CALL IKJPARS AND INITIALIZE DIFFERENT VARIABLES     **\n**                                                                   **\n**      INPUT: R10 POINT TO CPPL                                     **\n**                                                                   **\n**      OUTPUT: R15 INDICATE RETURN CODE                             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nPARS    #ENTRY\n         MVC   PPLUPT(4),CPPLUPT   COPY A(UPT)\n         MVC   PPLECT(4),CPPLECT   COPY A(ECT)\n         MVC   PPLCBUF(4),CPPLCBUF COPY A(CBUF)\n         SPACE 3\n*----------------------------------------------------------------------\n*        CALL IKJPARS\n*----------------------------------------------------------------------\n         SPACE ,\n         CALLTSSR EP=IKJPARS,MF=(E,PPL)\n         SPACE ,\n         LTR   R15,R15            return code was zero?            MS02\n         BZ    PARPDL              yes: get answer                 MS02\n         SPACE ,\n         CVD   R15,PA#DB          convert to decimal               MS02\n         UNPK  MSG11A,PA#DB+6(2)  convert to ebcdic                MS02\n         OI    MSG11A+3,X'F0'     Set sign in last char            MS02\n         SPACE ,\n        #MSG   MSG11              send message to user             MS02\n         B     PAREND             return to caller                 MS02\n         SPACE 2\nPARPDL   L     R7,PDLPTR           GET ANSWER                      MS02\n         USING CONCPDL,R7\n         SPACE 3\n*----------------------------------------------------------------------\n*        EXTRACT TODD NAME\n*----------------------------------------------------------------------\n         TM    TODD3+6,PRESENT     TODD ?\n         BNO   PARS0400            NO...\n         OI    SWITCH,TODDSW       YES\n         LH    R3,TODD3+4          LENGTH OF TODD DDNAME\n         BCTR  R3,0                LENGTH - 1\n         L     R5,TODD3            TODDNAME POINTER\n         LA    R4,TODDNAME\n         EX    R3,PARMOVE\nPARMOVE  MVC   0(*-*,R4),0(R5)      MOVE DDNAME ** EXECUTE **\n         SPACE 3\n*----------------------------------------------------------------------\n*        EXTRACT DDNAME TO CONCATINATE\n*----------------------------------------------------------------------\nPARS0400 DS    0H\n         TM    DDNA3+6,PRESENT     DDNAME ?\n         BNO   PARS0500            NO...\n         OI    SWITCH,DDNSW        YES\n         LH    R3,DDNA3+4          LENGTH OF DDNAME TO CONCAT\n         BCTR  R3,0                LENGTH - 1\n         L     R5,DDNA3            DDNAME POINTER\n         LA    R4,DDNAME\n         EX    R3,PARMOVE\n         SPACE 3\n*----------------------------------------------------------------------\n*        EXTRACT DSNAME TO CONCATENATE\n*----------------------------------------------------------------------\nPARS0500 DS    0H\n         TM    DATA3+6,PRESENT     DSNAME ?\n         BNO   PARS0600            NO...\n         OI    SWITCH,DSNSW        YES\n         LA    R4,DSNAME           RECEIVING AREA\n         L     R2,DATA3            DSNAME POINTER\n         BCTR  R2,0                BACK SPACE OF 1\n         CLI   0(R2),X'7D'         DATASET BETWEEN QUOTES ??\n         BE    PARS0550            YES...\n         SPACE 2\n         USING UPT,R2              USER PROFILE TABLE\n         L     R2,PPLUPT           UPT POINTER\n         XR    R3,R3               ZERO REG 3\n         ICM   R3,B'0001',UPTPREFL LENGTH OF THE PREFIX\n         BZ    PARS0550            ZERO, NO PREFIX\n         BCTR  R3,0                LENGTH MINUS 1\n         LA    R5,UPTPREFX         POINT TO THE PREFIX\n* -- >\n         CLI   0(5),C'>'           8-CHARACTER PREFIX?\n         BNE   PARS0510            NO. REGULAR PROCESSING.\n         LA    R5,UPT+X'21'        POINT TO 8-CHAR PREFIX\n         XR    R3,R3               ZERO REG TO SHOW LENGTH\n         ICM   R3,B'0001',UPT+X'29'  8-CHARACTER PREFIX LENGTH\n         BZ    PARS0550            ZERO, PAS DE PREFIXE\n         BCTR  R3,0                LENGTH MINUS 1\nPARS0510 DS    0H\n* -- >\n         EX    R3,PARMOVE          MOVE THE PREFIX\n         LA    R4,1(R3,R4)         POINTE AFTER THE PREFIX\n         MVI   0(R4),C'.'          POINT\n         LA    R4,1(,R4)           READY FOR THE REST\n         DROP  R2\n         SPACE 2\nPARS0550 DS    0H\n         LH    R3,DATA3+4          LENGTH OF DSNAME TO CONCAT\n         BCTR  R3,0                LENGTH - 1\n         L     R5,DATA3            DSNAME POINTER\n         EX    R3,PARMOVE\n         LOCATE PARSNAM            LOCATE THIS DATASET?\n         LTR   R15,R15              WE FOUND IT?\n         BZ    PARS0600              YES: CHECK FIRST PARAMETER\n        #MSG   MSG06               SEND DATASET NOT CATALOGUED\n         B     PAREND              END\n         SPACE 3\n*----------------------------------------------------------------------\n*        VERIFY IF \"FIRST\" IS SPECIFIED\n*----------------------------------------------------------------------\nPARS0600 DS    0H\n         CLC   FIRST,ZERO          FIRST ?\n         BE    PARS0625            NO...\n         OI    SWITCH,FIRSTSW      YES\n         SPACE 3\n*----------------------------------------------------------------------\n*        VERIFY IF \"DELETE\" IS SPECIFIED\n*----------------------------------------------------------------------\nPARS0625 DS    0H\n         CLC   DELETE,ZERO         DELETE ?\n         BE    PARS0650            NO...\n         OI    SWITCH,DELETSW      YES\n         SPACE 3\n*----------------------------------------------------------------------\n*        VERIFY IF \"NOPERM\"  IS SPECIFIED\n*----------------------------------------------------------------------\nPARS0650 DS    0H\n         CLC   PERMA,=H'2'         NOPERMANENT ?\n         BNE   PARS0700            NO...\n         OI    SWITCH,NOPERSW      YES\n         SPACE 3\n*----------------------------------------------------------------------\n*        RELEASE IKJPARS WORK AREA\n*----------------------------------------------------------------------\nPARS0700 DS    0H\n         SPACE ,\n         IKJRLSA PDLPTR\n         SPACE ,\n*----------------------------------------------------------------------\n*        VERIFY THE REQUIRED PARAMETERS\n*----------------------------------------------------------------------\n         SPACE ,\n         TM    SWITCH,TODDSW       TODD KEYWORD SPECIFIED ?\n         BO    PARS0750            YES...\n        #MSG   MSG01               SEND MESSAGE TODDNAME REQUIRED\n         B     PAREND              END\n         SPACE 3\nPARS0750 DS    0H\n         SPACE ,\n         TM    SWITCH,DELETSW      DELETE KEYWORD SPECIFIED?\n         BO    PARRC0               YES: END OF PARSING\n         SPACE ,\n         TM    SWITCH,DDNSW+DSNSW  OTHER KEYWORDS ?\n         BM    PARRC0              ONE OF THE TWO ?\n         BZ    PARS0775            NONE...\n         SPACE ,\n        #MSG   MSG02               SEND MSG DSN AND DD ARE MUT. EXC.\n         B     PAREND              END\n         SPACE 3\nPARS0775 DS    0H\n         SPACE ,\n        #MSG   MSG03               SEND DSN OR DDNAME PARM REQUIRED\n         B     PAREND\nPARRC0   SLR   R15,R15             INDICATE NORMAL RETURN CODE\n         SPACE ,\nPAREND  #RETURN RC=(R15)           RETURN TO CALLER\nPARSNAM  CAMLST NAME,DSNAME,,PARSAREA\nPARSAREA DS    0D\n         DS    265C\n         LTORG\n         TITLE '-- ALLOC SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: ALLOC                                       **\n**      PURPOSE: CREATE DYNALLOC PARMLIST AND CALL SVC 99            **\n**                                                                   **\n**      INPUT: NONE                                                  **\n**                                                                   **\n**      OUTPUT: R15 INDICATE RETURN CODE                             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nALLOC   #ENTRY\n         TM    SWITCH,DELETSW+FIRSTSW DELETE OR FIRST WAS SPECIFIED?\n         BM    ALOC4000             YES: CALL DECONCAT PROCESS\n         SPACE ,\n         TM    SWITCH,DSNSW        DSNAME TO ALLOCATE ?\n         BNO   ALOC1050            NO...\n         SPACE ,\n         LA    R1,TODDNAME         POINT TO DDNAME\n        #CALL  TIOTS               CALL TIOT SCAN ROUTINE\n         SPACE ,\n         LTR   R15,R15             WE FOUND DDNAME IN TIOT?\n         BZ    ALOC0050             YES: GENERATE DDNAME\n         SPACE ,\n         OI    SWITCH,ALOCFAIL     INDICATE FILE NOT ALLOCATED\n         MVC   TXT11DD1,TODDNAME   MOVE DDNAME\n         SPACE ,\nALOC0050 DS    0H\n        #CALL  ADSN                DYNALLOC A DATASET\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000            DYNALLOC ERROR ROUTINE\n         SPACE ,\n         TM    SWITCH,ALOCFAIL     CONCAT FAIL FIRST TIME?\n         BO    ALLEND               YES: RETURN TO CALLER\n         SPACE ,\n         MVC   DDNAME,TXT11DD1     MOVE THE DDNAME\n         SPACE ,\n*----------------------------------------------------------------------\n*        CONCATENATION OF 2 DDNAMES\n*----------------------------------------------------------------------\nALOC1050 DS    0H\n        #CALL  ADDN                DYNALLOC A DATASET\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: SEND AN ERROR MESSAGE\n         B     ALLEND              TERMINATE PROCESS\n         EJECT\n***********************************************************************\n**                                                                   **\n**       PARAMETERS FIRST AND DELETE                                 **\n**       COPY AN ENTRY FROM TIOT                                     **\n**       FREE THE DDNAME                                             **\n**       AND REALLOCATION OF THIS DDNAME                             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nALOC4000 DS    0H\n         GETMAIN R,LV=L#TIOTA      OBTAIN WORKAREA\n         LR    R2,R1               LOAD WORK AREA ADDRESS\n         LA    R3,L#TIOTA          LOAD LENGTH OF GETMAIN\n         SR    R4,R4               LOAD DUMMY SENDING FIELD\n         SR    R5,R5               SET SENDING FIELD LEN=0 + PAD X'00'\n         MVCL  R2,R4               CLEAR THE WORK AREA\n         LR    R2,R1               RELOAD WORK AREA ADDRESS\n         ST    R2,ALOCGM           KEEP GETMAIN ADDRESS\n         LA    R6,L#TIOT\n         SPACE ,\n**===================================================================**\n**       SEARCH DDNAME IN TIOT AND COPY IT                           **\n**===================================================================**\n         SPACE ,\n         LA    R1,TODDNAME             SEARCH ARGUMENT FOR TIOTS\n        #CALL  TIOTS                   CALL TIOT SCAN ROUTINE\n         LTR   R15,R15                 ENTRY IS FOUND?\n         BNZ   ALOC2100                NO: INDICATE AN ERROR\n         SPACE ,                                                   SJ01\n         LA    R1,TODDNAME             SEARCH ARGUMENT FOR RJFCB   SJ01\n         LA    R3,DSNAME               SEARCH ARGUMENT FOR RJFCB   SJ01\n         TM    SWITCH,FIRSTSW          CONCAT WITH 'FIRST'?        SJ01\n         BNO   ALOCPJFC                NO: EXTRACT DSN FROM JFCB   SJ01\n         MVC   0(L'DSNAME,R2),DSNAME   MOVE DSN FOR FIRST ENTRY    SJ01\n         LA    R2,52(,R2)              POINT NEXT ENTRY IN TABLE   SJ01\nALOCPJFC DS    0H                                                  SJ01\n        #CALL  RJFCB                   GO TO READ JFCBS            SJ01\n         LTR   R15,R15                 ok ?                        SJ01\n         BNZ   ALOC5005                no, msg and abend           SJ01\n         SPACE 2\n**===================================================================**\n**       FREE  THE DDNAME ALLOCATED TO TODDNAME                      **\n**===================================================================**\n         SPACE ,\nALOCGET  DS    0H\n        #CALL  UNALOC              FREE THE DDNAME IN TODDNAME\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: SEND AN ERROR MESSAGE\n         SPACE 2\n**===================================================================**\n**       REALLOCATION OF EACH DATASET AND KEEP THE DDNAME (SYS...)   **\n**===================================================================**\n         SPACE ,\n         L     R2,ALOCGM           POINT TO DSN TABLE\n         MVC   TXT11DD1,TODDNAME   ASK DYNALLOC WITH TODDNAME\n         SPACE ,\nALOCNTBL CLI   0(R2),X'00'          END OF TABLE?\n         BE    ALOCIETB              YES: CONCAT ALL DD\n         SPACE ,\n         MVC   DSNAME,0(R2)        PREPARE DSN FOR DYNALLOC\n        #CALL  ADSN                CALL DYNALLOC\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: INDICATE AN ERROR\n         SPACE ,\n         MVC   44(8,R2),TXT11DD1   KEEP DDNAME\nALOCIDDN MVC   TXT11DD1,BLANKS     ASK TO SVC99 A DDNAME\n         LA    R2,52(,R2)          POINT TO NEXT ENTRY IN TABLE\n         B     ALOCNTBL            AND CONTINUE PROCESS\n         SPACE 2\n**===================================================================**\n**       CONCAT ALL DDNAMES SYS..... TO TODDNAME                     **\n**===================================================================**\n         SPACE ,\nALOCIETB L     R2,ALOCGM           POINT TO DSN TABLE\n         SPACE ,\nALOCIETL LA    R2,52(,R2)          POINT TO NEXT ENTRY\n         CLI   0(R2),X'00'         END OF TABLE?\n         BE    ALLEDEL              TERMINATE PROCESS\n         SPACE ,\n         MVC   DDNAME,44(R2)       INIT TO DDNAME\n        #CALL  ADDN                CONCAT 2 DDNAME\n         LTR   R15,R15             RETURN CODE WAS ZERO?\n         BNZ   ALOC5000             NO: INDICATE AN ERROR\n         B     ALOCIETL            NEXT DDNAME\n         SPACE ,\nALLEDEL  L     R2,ALOCGM           POINT TO DSN TABLE\n         FREEMAIN R,A=(R2),LV=L#TIOTA AND FREE IT\n         B     ALLEND              RETURN TO CALLER\nALOC2100 DS    0H\n        #MSG   MSG09               SEND ERROR IN TIOT\n         B     ALLEND              END\nALOC5000 DS    0H\n        #CALL  DYNMSG              SEND THE ERROR MESSAGE\n         SPACE ,\nALLEND  #RETURN RC=(R15)           RETURN TO CALLER\n         LTORG\nL#TIOTA  EQU   ((L#TIOT+1)*52)     LENGTH WORKAREA 32+END OF TABLE\nL#TIOT   EQU   64                  NUMBER OF DATASETS\nALOCGM   DS    F                   ADDRESS OF GETMAIN\n         TITLE '-- ADSN DYNALLOC DATASET SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: ADSN                                        **\n**      PURPOSE: DYNALLOC A DATASET                                  **\n**                                                                   **\n**      INPUT: TXTPTRS1                                              **\n**             IF TXTDD1 (DDNAME = BLANK CHANGE DALDDN->DALRTDDN)    **\n**                                                                   **\n**      OUTPUT: R15 RETURN CODE OF DYNALLOC                          **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nADSN    #ENTRY\n         SPACE ,\nADSILEN  MVI   TXT11+5,8          SET LENGTH OF DDNAME TO 8\n         MVI   TXT11+1,DALDDNAM   SVC99 DEFAULT\n         CLI   TXT11DD1,C' '      WE HAVE A DDNAME?\n         BNE   ADSDSN              NO: INIT DSN VALUE\n         MVI   TXT11+1,DALRTDDN   SVC99 RETURN DDNAME\nADSDSN   MVC   TXT12+6(44),DSNAME DSNAME TO ALLOCATE\n         MVI   RQBVERB,S99VRBAL   DSN ALLOCATION VERB\n         MVI   RQBFLG1,S99NOCNV   DO NOT USE EXISTING ALLOCATION   JP01\n         LA    R1,TXTPTRS1        POINT TO ALLOC SERVICE AND\n         ST    R1,RQBTXTP          INDICATE IT IN DYNALLOC PARMLIST\n         LA    R1,ALLOCPRM        POINT TO DYNALLOC PARMLIST\n         DYNALLOC                 CALL DYNALLOC SERVICE\n         SPACE ,\n         LTR   R15,R15            RETURN CODE OF DYNALLOC = ZERO?\n         BNZ   ADSNRET             NO: RETURN TO CALLER\n         SPACE ,\n         CLC   =C'SYS',TXT11DD1 TEMPORARY DDNAME?\n         BE    ADSNRET             YES: RETURN TO CALLER\n         CLC   TXT11DD1,TODDNAME  DYNALLOC ON DDNAME?\n         BE    ADSNRET             YES:RETURN TO CALLER\n         SPACE ,\n         CLI   ASDTIMD,X'00'      ALREADY ALLOCATED ON XHHMMSS?\n         BE    ADSNRET             YES:RETURN TO CALLER\n         SPACE ,\n         TIME  DEC                OBTAIN CURRENT TIME\n         ST    R0,ASDTIMD         KEEP HHMMSST\n         OI    ASDTIMD+3,X'0F'    CONVERT IT\n         UNPK  TXT11+7(7),ASDTIMD GENERATE NEW DDNAME\n         B     ADSILEN            AND RETRY\n         SPACE ,\nADSNRET #RETURN RC=(R15)\n         LTORG\nASDTIMD  DC    F'0'\n         TITLE '-- ADDN DYNALLOC CONCAT SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: ADDN                                        **\n**      PURPOSE: DYNALLOC A DDNAME TO AN DDNAME                      **\n**                                                                   **\n**      INPUT: DDNAME                                                **\n**             TODDNAME                                              **\n**                                                                   **\n**      OUTPUT: R15 RETURN CODE OF DYNALLOC                          **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nADDN    #ENTRY\n         MVC   TXT21DD1,TODDNAME   MOVE TODDNAME\n         MVC   TXT21DD2,DDNAME     MOVE FILENAME\n         SPACE ,\n         MVI   RQBVERB,S99VRBCC    CONCAT   VERB\n         TM    SWITCH,NOPERSW      PERMANENT CONCAT ?\n         BNO   ALOC1150            YES...\n         SPACE 2\nALOC1150 DS    0H\n         LA    R1,TXTPTRS2         POINT TO ALLOC SERVICE AND\n         ST    R1,RQBTXTP           INDICATE IT IN DYNALLOC PARMLIST\n         LA    R1,ALLOCPRM         POINT TO DYNALLOC PARMLIST\n         DYNALLOC                  CALL DYNALLOC SERVICE\n        #RETURN RC=(R15)           RETURN TO CALLER\n         SPACE ,\n         LTORG\n         TITLE '-- UNALOC SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: UNALOC                                      **\n**      PURPOSE: DYNALLOC A DDNAME                                   **\n**                                                                   **\n**      INPUT: TODDNAME                                              **\n**                                                                   **\n**      OUTPUT: R15 RETURN CODE OF FREE COMMAND                      **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nUNALOC  #ENTRY\n         MVC   UNDDN,TODDNAME      MOVE DDNAME\n         MVC   CPPLCBUF,=A(UNFREE) MOVE ADDRESS OF COMMAND IN CPPL\n         LR    R1,R10              R1 POINT TO CPPL\n         LINK  EP=FREE             CALL FREE COMMAND\n        #RETURN RC=(R15)           RETURN TO CALLER\n         SPACE ,\n         LTORG\nUNFREE   DC    AL2(L#FREE)         LENGTH OF CPPL\n         DC    AL2(4)              LENGTH OF COMMAND\n         DC    C'FREE'             NAME OF CPPL\n         DC    C' DDNAME('         DDNAME PARAMETER\nUNDDN    DC    CL8' '              DDNAME TO FREE\n         DC    C')'                END OF PARMLIST\nL#FREE   EQU   *-UNFREE            LENGTH OF CPPL\n         TITLE '-- DYNALLOC ERROR SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: DYNMSG                                      **\n**      PURPOSE: ANALYSE THE ERROR CODE AND SEND AN ERROR MESSAGE    **\n**                                                                   **\n**      INPUT: RQBERCD                                               **\n**                                                                   **\n**      OUTPUT: NONE                                                 **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nDYNMSG  #ENTRY\n         SPACE ,\n         CLC   DYNDDN,RQBERCD      DDNAME NOT FOUND ?\n         BNE   ALOC5010            NO...\nALOC5005 DS    0H\n        #MSG   MSG05               SEND DDNAME NOT ALLOCATED\n         B     DYNMRET             END\n         SPACE 2\nALOC5010 DS    0H\n         CLC   DYNDSN,RQBERCD      DSNAME NOT FOUND ?\n         BNE   ALOC5020            NO...\n        #MSG   MSG06               SEND DATASET NOT CATALOGUED\n         B     DYNMRET             END\n         SPACE 2\nALOC5020 DS    0H\n         CLC   DYNDSNI,RQBERCD     DSNAME INVALID  ?\n         BNE   ALOC5030            NO...\n        #MSG   MSG07               SEND INVALID DATASET\n         B     DYNMRET             END\n         SPACE 2\nALOC5030 DS    0H\n         CLC   DYNDDNO,RQBERCD     DDNAME OPEN ?\n         BNE   ALOC5040            NO...\n        #MSG   MSG08               SEND DATASET IS OPEN\n         B     DYNMRET             END\n         SPACE 2\nALOC5040 DS    0H\n         XR    R2,R2               HEX CHARACTER NOT CONVERTED\n         ICM   R3,B'1111',RQBERCD  ERROR CODE\n         LA    R4,HEXTAB           TABLE OF HEX CONVERSION\n         XR    R5,R5               HEX CHARACTER CONVERTED\n         LA    R6,4                LOOP COUNTER\n         SPACE ,\nALOC5050 DS    0H\n         SLDL  R2,4                GET A NUMBER\n         SLL   R5,8                FAIT DE LA PLACE POUR LE PROCHAIN\n         IC    R5,0(R2,R4)         CARACTERE HEX\n         SRL   R2,4                CLEAN R2\n         BCT   R6,ALOC5050         LOOP\n         STCM  R5,B'1111',MSG04A   SAVE THE REASON CODE\n         SPACE 3\n         XR    R5,R5               CARACTERE HEX CONVERTI\n         LA    R6,4                LOOP COUNTER\n         SPACE ,\nALOC5100 DS    0H\n         SLDL  R2,4                GET A NUMBER\n         SLL   R5,8                FAIT DE LA PLACE POUR LE PROCHAIN\n         IC    R5,0(R2,R4)         CARACTERE HEX\n         SRL   R2,4                CLEAN R2\n         BCT   R6,ALOC5100         LOOP\n         STCM  R5,B'1111',MSG04B   SAVE THE REASON CODE\n        #MSG   MSG04               SEND DYNALLOC ERROR\n         B     DYNMRET             END\n         SPACE ,\nDYNMRET  SLR   R15,R15            INDICATE NORMAL RETURN CODE\n        #RETURN RC=(R15)          AND RETURN TO CALLER\n         TITLE '-- MSG SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: MSG                                         **\n**      PURPOSE: SEND AN ERROR WITH A PUTLINE                        **\n**                                                                   **\n**      INPUT: R1 ADDRESS OF MESSAGE                                 **\n**                                                                   **\n**      OUTPUT: R15 INDICATE AN ERROR                                **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nMSG     #ENTRY\n         ST    R1,MSGAD            KEEP MSG ADDRESS\n         XC    ECB1,ECB1           CLEAR ECB\n         L     R3,PPLUPT           POINT TO UPT\n         L     R4,PPLECT           POINT TO ECT\n         SPACE ,\n         PUTLINE PARM=MSGPLIN,UPT=(R3),ECT=(R4),ECB=ECB1,              X\n               OUTPUT=MSGOLD,MF=(E,MSGIOPL)\n         SPACE ,\n         LA    R15,12              INDICATE AN ERROR\n        #RETURN RC=(R15)           RETURN TO CALLER\n         SPACE ,\nMSGOLD   DC    F'1'\nMSGAD    DC    A(*)\nMSGIOPL  DC    4F'0'\nMSGPLIN  PUTLINE MF=L\n         TITLE '-- TIOT SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE: TIOT                                        **\n**      PURPOSE: SCAN THE TIOT FOR A SPECIFIC DDNAME                 **\n**                                                                   **\n**      INPUT:  R1 => ADDRESS OF DDNAME TO SEARCH                    **\n**                                                                   **\n**      OUTPUT: R15 => RETURN CODE                                   **\n**            : R1  => ADDRESS OF DDNAME IN TIOT IF RC=0             **\n**                                                                   **\n***********************************************************************\n         SPACE 2\nTIOTS   #ENTRY\n         MVC   TIOTDD,0(R1)       COPY DDNAME\n         EXTRACT TIOTADDR,'S',FIELDS=(TIOT)  ADDRESS OF TIOT\n         SR    R3,R3              CLEAR FOR INSERT\n         SR    R15,R15            DEFAULT NORMAL RETURN CODE\n         L     R2,TIOTADDR        POINT TO TIOT\n         SPACE 2\nTIOT2010 IC    R3,24(,R2)         LENGTH OF THE ENTRY\n         LTR   R3,R3              END OF TIOT ?\n         BZ    TIOT6100           YES, ERROR\n         CLC   TIOTDD,28(R2)      DDNAME = FILENAME ?\n         BE    TIOT2020           YES\n         AR    R2,R3              FOLLOWING DDNAME\n         B     TIOT2010           NEXT ENTRY\n         SPACE ,\nTIOT2020 LR    R1,R2              KEEP ADDRESS IN PARM'S\n         B     TIOTRET            RETURN TO CALLER\n         SPACE ,\nTIOT6100 LA    R15,4              INDICATE ENTRY NOT FOUND\nTIOTRET #RETURN RC=(R15)          AND RETURN TO CALLER\nTIOTADDR DS    F                  TIOT ADDRESS\nTIOTDD   DC    CL8' '             TIOT DDNAME\n         LTORG *\n         TITLE '-- READ JFCB SERVICE ROUTINE --'\n***********************************************************************\n**                                                                   **\n**      SERVICE ROUTINE --> RJFCB                                    **\n**      PURPOSE ----------> READ THE JFCBS FOR ALL DATA SETS         **\n**                          ALLOCATED TO A DDNAME.                   **\n**                                                                   **\n**      INPUT  :  R1 POINT TO A DDNAME                               **\n**                R2 POINT TO A DSNAME TABLE                         **\n**                R3 POINT TO A DSNAME NOT TO INCLUDE IN TABLE       **\n**                                                                   **\n**      OUTPUT :  R15 INDICATE RETURN CODE                           **\n**                 0  = EVERYTHING IS OK (ALL DSNAMES IN A TABLE)    **\n**                255 = INFORMATION NOT AVAILABLE                    **\n**                                                                   **\n**      PGMR   :  SERGE JOLICOEUR  -ALIAS-  SERJOL                   **\n**      DATE   :  1999-10-29                                         **\n**      MODID  :  SJ01   (new service routine)                       **\n**                                                                   **\n***********************************************************************\n         SPACE 2\n         CNOP  0,8\nRJFCB   #ENTRY ,\n         LA    R4,INDCB\n         USING IHADCB,R4\n         MVC   DCBDDNAM,0(R1)            MOVE DDNAME IN DCB\n*\n         XC    ARLSTRT(LENARL),ARLSTRT   CLEAR ALLOC RETRIEV LIST\n         MVC   ARLLEN,=AL2(LENARL)       LENGTH OF THIS AREA\n         MVC   ARLIDENT,=C'AR'           IDENTIFICATION OF AREA\n*\n*---------------------------------------------------------------------*\n*   READ ALL JFCBS ASSOCIATED TO A DDNAME                             *\n*---------------------------------------------------------------------*\n         RDJFCB (INDCB,INPUT)\n*\n         LTR   R15,R15             TEST RDJFCB RETURN CODE\n         BNZ   RJFCB030            BRANCH IF INFORMATION NOT AVAILABLE\n         CLI   ARLRCODE,ARLALLOK   TEST RDJFCB REASON CODE\n         BNE   RJFCB030            BRANCH IF INFORMATION NOT AVAILABLE\n         ICM   R5,B'1111',ARLAREA  GET AND TEST ADDRESS OF ARL\n         BZ    RJFCB030            GO IF SYSTEM DOES NOT SUPPORT ARL\n         USING ARA,R5              ALLOCATION RETRIEVAL AREA\n         LH    R6,ARLRTRVD         # OF CONCATENATED DATA SETS\n*\n*---------------------------------------------------------------------*\n*   EXTRACT DSNAMES FROM JFCBS                                        *\n*---------------------------------------------------------------------*\nRJFCB010 DS    0H\n         LA    R7,ARAJFCB\n         USING JFCB,R7\n         CLC   0(L'JFCBDSNM,R3),JFCBDSNM      DSN NOT INCLUDED\n         BE    RJFCB020\n         MVC   0(L'JFCBDSNM,R2),JFCBDSNM      DSNAME IN TABLE\n         LA    R2,L'JFCBDSNM+L'DCBDDNAM(,R2)  NEXT ENTRY\nRJFCB020 DS    0H\n         LH    R15,ARALEN          LENGTH OF THE ARA FOR THIS JFCB\n         LA    R5,0(R15,R5)        TO THE NEXT ARA\n         BCT   R6,RJFCB010\n*\n*---------------------------------------------------------------------*\n*   FREE THE ALLOCATION RETRIEVAL AREA                                *\n*---------------------------------------------------------------------*\n         SR    R0,R0\n         ICM   R0,B'0111',ARLRLEN  LENGTH OF ALLOCATION RETRIEVAL AREA\n         L     R1,ARLAREA          ADDRESS OF ALLOCATION RETRIEVAL AREA\n         SR    R15,R15             SUBPOOL TO PASS TO FREEMAIN FOR\n         IC    R15,ARLPOOL         ALLOCATION RETRIEVAL AREA.\n         FREEMAIN RU,LV=(0),SP=(15),A=(1)\n*\n         SR    R15,R15        RETURN CODE = 0\n         B     RJFCB040\n*\nRJFCB030 DS    0H             ROUTINE TO HANDLE INABILITY TO GET THE\n         LA    R15,255        RETURN CODE = 255\n*\n*---------------------------------------------------------------------*\n*   RETURN TO CALLER                                                  *\n*---------------------------------------------------------------------*\nRJFCB040 DS    0H\n        #RETURN RC=(R15)\n*\n         LTORG *\n         SPACE 4\n*---------------------------------------------------------------------*\n*   1  - DCB                                                          *\n*   2A - LAST ENTRY INDICATOR                                         *\n*   2B - ENTRY CODE TO RETRIEVE ALLOCATION INFORMATION                *\n*   2C - ADDR OF ALLOCATION RETRIEVAL LIST                            *\n*   3  - ALLOCATION RETRIEVAL LIST                                    *\n*---------------------------------------------------------------------*\nINDCB    DCB   DSORG=PO,DDNAME=$$$$$$$$,MACRF=R,EXLST=INEXLST\nINEXLST  DC    0F'0',A(X'80000000'+X'13000000'+ARLSTRT)\nARLSTRT  IHAARL DSECT=NO\nLENARL   EQU    *-ARLSTRT         LENGTH OF IHAARL\n*---------------------------------------------------------------------*\n*        END OF MODID SJ01                                            *\n*---------------------------------------------------------------------*\n         TITLE '-- GLOBAL WORK AREA'\n         SPACE 2\n        #GBLWKA\nPA#DB    DS    D'0'\nBLANKS   DC    CL80' '\nZERO     DC    D'0'\nDSNAME   DC    CL44' '\nTODDNAME DC    CL8' '\nDDNAME   DC    CL8' '\nASDTIMDM DC    F'0'\nHEXTAB   DC    C'0123456789ABCDEF'\nDYNDDN   DC    XL2'0438'\nDYNDSN   DC    XL2'1708'\nDYNDSNI  DC    XL2'035C'\nDYNDDNO  DC    XL2'0420'\n         SPACE ,\nSWITCH   DC    X'00'\nPRESENT  EQU   X'80'\nDELETSW  EQU   X'40'\nNOPERSW  EQU   X'20'\nFIRSTSW  EQU   X'10'\nDSNSW    EQU   X'08'\nDDNSW    EQU   X'04'\nTODDSW   EQU   X'02'\nALOCFAIL EQU   X'01'\n         SPACE ,\nECB1     DC    F'0'                ECB FOR IKJPARS\nPPL      DS    0F                  PARSE PARM LIST\nPPLUPT   DC    A(0)                PTR TO UPT\nPPLECT   DC    A(0)                PTR TO ECT\nPPLECB   DC    A(ECB1)             PTR TO ECB\nPPLPCL   DC    A(CONCPCL)          PTR TO PCL\nPPLANS   DC    A(PDLPTR)           PTR TO ANSWER PLACE\nPPLCBUF  DC    A(0)                PTR TO COMMAND BUFFER\nPPLUWA   DC    A(0)                PTR TO USER WORK AREA\nPDLPTR   DC    A(0)                PTR TO AREA CREATED BY IKJPARS\n         SPACE ,\nALLOCPRM DS    0D\n         DC    AL1(128)\n         DC    AL3(ALLOCBLK)\n         SPACE ,\nALLOCBLK DS    0F\n         DC    AL1(RQBLENG)        BLOCK LENGTH\nRQBVERB  DC    AL1(0)              VERB\nRQBFLG1  DC    AL2(0)              FLAG 1\nRQBERCD  DC    AL2(0)              ERROR CODE\nRQBINF   DC    AL2(0)              INFORMATION CODE\nRQBTXTP  DC    A(0)                TEXT POINTERS ADDRESS\n         DC    F'0'                RESERVED\nRQBFLG2  DC    F'0'                FLAG 2\nRQBLENG  EQU   *-ALLOCBLK\n         SPACE 2\nTXTPTRS1 DS    0F                  DSNAME ALLOC\n         DC    A(TXT11)            POINTER TO DDNAME\n         DC    A(TXT12)            POINTER TO DSNAME\n         DC    A(TXT13)            POINTER TO DISP\n         DC    AL1(128),AL3(TXT14) END+POINTER TO STATUS\n         SPACE ,\nTXT11    DC   AL2(DALDDNAM),AL2(1),AL2(8)\nTXT11DD1 DC    CL8' '              DDNAME\nTXT12    DC   AL2(DALDSNAM),AL2(1),AL2(44),CL44' '\nTXT13    DC   AL2(DALNDISP),AL2(1),AL2(1),AL1(8)\nTXT14    DC   AL2(DALSTATS),AL2(1),AL2(1),AL1(8)\n         SPACE 3\nTXTPTRS2 DS    0F\n         DC    A(TXT21)            POINTER TO DDNAME\n         DC    AL1(128),AL3(TXT22) END+POINTER TO TODDNAME\n         SPACE ,\nTXT21    DC    AL2(DCCDDNAM),AL2(2)\n         DC    AL2(8)\nTXT21DD1 DC    CL8' '              DDNAME\n         DC    AL2(8)\nTXT21DD2 DC    CL8' '              TODDNAME\n         SPACE ,\nTXT22    DC    AL2(DCCPERMC),AL2(0)\n         SPACE 3\n         TITLE '-- ERROR MESSAGES'\n         SPACE 3\nMSG01    DC    AL2(MSG02-MSG01)\n         DC    X'0000'\n         DC    C'CONCAT01 TODDNAME parameter required'\n         SPACE 3\nMSG02    DC    AL2(MSG03-MSG02)\n         DC    X'0000'\n         DC    C'CONCAT02 DSN and DD are mutually exclusive'\n         SPACE 3\nMSG03    DC    AL2(MSG04-MSG03)\n         DC    X'0000'\n         DC    C'CONCAT03 DSN or DD parameter required'\n         SPACE 3\nMSG04    DC    AL2(MSG05-MSG04)\n         DC    X'0000'\n         DC    C'CONCAT04 DYNALLOC error, REASON code = '\nMSG04A   DS    CL4\n         DC    C', INFO code = '\nMSG04B   DS    CL4\n         SPACE 3\nMSG05    DC    AL2(MSG06-MSG05)\n         DC    X'0000'\n         DC    C'CONCAT05 DDNAME not allocated'\n         SPACE 3\nMSG06    DC    AL2(MSG07-MSG06)\n         DC    X'0000'\n         DC    C'CONCAT06 DATASET not catalogued'\n         SPACE 3\nMSG07    DC    AL2(MSG08-MSG07)\n         DC    X'0000'\n         DC    C'CONCAT07 Invalid DATASET name'\n         SPACE 3\nMSG08    DC    AL2(MSG09-MSG08)\n         DC    X'0000'\n         DC    C'CONCAT08 TODDNAME is open'\n         SPACE 3\nMSG09    DC    AL2(MSG10-MSG09)\n         DC    X'0000'\n         DC    C'CONCAT09 DDNAME not found in TIOT'\n         SPACE 3\nMSG10    DC    AL2(MSG11-MSG10)                                    MS02\n         DC    X'0000'\n         DC    C'CONCAT10 MAXIMUM OF DSNAME IS 32'\n         SPACE 3\nMSG11    DC    AL2(MSG12-MSG11)                                    MS02\n         DC    X'0000'                                             MS02\n         DC    C'CONCAT11 Parse service routine(IKJPARS), RC = '   MS02\nMSG11A   DS    CL4                                                 MS02\nMSG12    DS    0C\n         TITLE '-- IKJPARS PARAMETERS'\nCONCPCL  IKJPARM DSECT=CONCPDL\n         SPACE 3\nTODD1    IKJKEYWD\n         IKJNAME 'TODDNAME',SUBFLD=TODD2\nDDNA1    IKJKEYWD\n         IKJNAME 'DDNAME',SUBFLD=DDNA2\nDATA1    IKJKEYWD\n         IKJNAME 'DSN',SUBFLD=DATA2\nFIRST    IKJKEYWD\n         IKJNAME 'FIRST'\nDELETE   IKJKEYWD\n         IKJNAME 'DELETE'\nPERMA    IKJKEYWD DEFAULT='PERMANENT'\n         IKJNAME 'PERMANENT'\n         IKJNAME 'NOPERMANENT'\n         SPACE 3\nTODD2    IKJSUBF\nTODD3    IKJIDENT 'TO DDNAME',                                         X\n               FIRST=ALPHANUM,                                         X\n               OTHER=ALPHANUM,                                         X\n               MAXLNTH=8,                                              X\n               PROMPT='TO DDNAME',                                     X\n               HELP='WHICH DDNAME TO CONCATENATE TO'\n         SPACE 3\nDDNA2    IKJSUBF\nDDNA3    IKJIDENT 'FILE NAME',                                         X\n               FIRST=ALPHANUM,                                         X\n               OTHER=ALPHANUM,                                         X\n               MAXLNTH=8,                                              X\n               PROMPT='FILE NAME',                                     X\n               HELP='DDNAME TO CONCATENATE'\n         SPACE 3\nDATA2    IKJSUBF\nDATA3    IKJIDENT 'DATASET NAME',                                      X\n               FIRST=ALPHANUM,                                         X\n               OTHER=ALPHANUM,                                         X\n               CHAR,                                                   X\n               MAXLNTH=44,                                             X\n               PROMPT='DATASET NAME',                                  X\n               HELP='FILE TO BE CONCATENATED'\n         TITLE '-- SYSTEM DSECTS'\n         PRINT GEN\n         IKJENDP\n         SPACE ,\n        #REGS\n         SPACE ,\n         IEFZB4D0\n         SPACE ,\n         IEFZB4D2\n         SPACE ,\n*                                                                SJ01\nARA      DSECT ,            ALLOCATION RETRIEVAL AREA            SJ01\nARALEN   DS    XL2          LENGTH OF THE INFO FOR DATA SET      SJ01\nARARESV  DS    XL2          RESERVED                             SJ01\nARAJFCB  DS    CL(JFCBLGTH) JFCB                                 SJ01\nARAVAR   DS    0C           VARIABLE                             SJ01\n*                                                                SJ01\nJFCB     DSECT ,                                                 SJ01\n         IEFJFCBN ,                                              SJ01\n*                                                                SJ01\n         DCBD  DSORG=PS,DEVD=DA                                  SJ01\n*                                                                SJ01\n        #MAPS  PSA,ASCB,CVT,TIOT,CPPL,UPT\n         END   CONCAT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONCATPU": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x004\\x01\\x174\\x1f\\x01\\x174\\x1f\\t\\x14\\x00\\x0f\\x00\\x0b\\x00\\x00\\xe4\\xd7\\xc4\\xc1\\xe3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2017-12-07T00:00:00", "modifydate": "2017-12-07T09:14:34", "lines": 15, "newlines": 11, "modlines": 0, "user": "UPDATE"}, "text": "*\n*        FIX CODE FOR 8-CHARACTER PREFIX FOR CONCATPG\n*\n*\n*        LA    R5,UPTPREFX         POINTE AU PREFIXE\n* -- >\n         CLI   0(5),C'>'           8-CHARACTER PREFIX?\n         BNE   PARS0510            NO. REGULAR PROCESSING.\n         LA    R5,UPT+X'21'        POINT TO 8-CHAR PREFIX\n         XR    R3,R3               ZERO REG TO SHOW LENGTH\n         ICM   R3,B'0001',UPT+X'29'  8-CHARACTER PREFIX LENGTH\n         BZ    PARS0550            ZERO, PAS DE PREFIXE\n         BCTR  R3,0                LENGTH MINUS 1\nPARS0510 DS    0H\n* -- >\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT831/FILE831.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT831", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}