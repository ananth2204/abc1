CONCAT   TITLE 'DYNAMIC CONCATENATION'
         MACRO
&NAME   #MSG   &MSG
         LA    R1,&MSG
         L     R15,=A(MSG)
         BASR  R14,R15
         MEND
*        **************************************************************
*        *****                                                    *****
*        ***** This command permits the dynamic concatenation     *****
*        ***** to a DDNAME, given either the DDNAME or a DSNAME.  *****
*        ***** If the DDNAME wasn't allocated, it will be         *****
*        ***** automatically allocated.  If at the time of a      *****
*        ***** deconcatenation, the dataset is the last one,      *****
*        ***** then the DD name will be completely freed.         *****
*        *****                                                    *****
*        *****     Format of the command :                        *****
*        *****                                                    *****
*        *****                             /                \     *****
*        *****                             |                |     *****
*        *****                             | DDNAME(ddname) |       ***
*        **      CONCAT TODDNAME(ddname)  <                  >       **
*        *****                             | DSNAME(dsname) |       ***
*        *****                             |                |     *****
*        *****                             \                /     *****
*        *****                                                    *****
*        *****          /       \     /                         \ *****
*        *****          | FIRST |     | PERMANENT / NOPERMANENT | *****
*        *****          \       /     \                         / *****
*        *****                                                    *****
*        *****          /        \                                *****
*        *****          | DELETE |                                *****
*        *****          \        /                                *****
*        *****                                                    *****
*        ***** ID:         DATE        : January 85               *****
*        *****                                                    *****
*        ***** MODS: ....  SUPPORT of FIRST and DELETE            *****
*        *****                                                    *****
*        ***** MODS: ....  Fix abend 0c4 if a bad parameter       *****
*        *****             was entered.  Verify the return code   *****
*        *****             from ikjpars.                          *****
*        *****                                                    *****
*        ***** MODS: ....  In the ADSN routine, we are now using  *****
*        *****             the S99NOCNV control block for the     *****
*        *****             DYNALLOC call.  This way, we prevent   *****
*        *****             using an already existing allocation.  *****
*        *****                                                    *****
*        ***** MODS: ....  Date : 1999-10-28                      *****
*        *****             Since SWA=ABOVE in TSUCLASS, the       *****
*        *****             TIOT no longer contains the JFCB       *****
*        *****             address but instead, it is using a     *****
*        *****             TOKEN to utilize the macros IEFQMREQ   *****
*        *****             or SWAREQ.                             *****
*        *****             CONCAT was abending with an 0C4.       *****
*        *****             I chose to access the JFCBs by         *****
*        *****             using RDJFCB (Read JFCB) and a         *****
*        *****             type 13 exit list, which is much       *****
*        *****             more standard, but is longer to        *****
*        *****             program.                               *****
*        *****                                                    *****
*        **************************************************************
         TITLE '-- MAINLINE ROUTINE'
         SPACE 2
CONCAT  #ENTRY MAIN=YES,LMD=LM04000
         SPACE ,
         LR    R10,R1              PTR TO CPPL
         USING CPPL,R10            ADDRESSABILITY OF CPPL
         SPACE ,
        #CALL  PARS                CALL PARS ROUTINE
         LTR   R15,R15             ERROR WITH PARSER?
         BNZ   CONRET               YES: RETURN TO CALLER
         SPACE ,
        #CALL  ALLOC               CALL DYNALLOC ROUTINE
         SPACE ,
CONRET  #RETURN MAIN=YES,RC=(R15)  RETURN TO CALLER
         TITLE '-- PARS SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: PARS                                        **
**      PURPOSE: CALL IKJPARS AND INITIALIZE DIFFERENT VARIABLES     **
**                                                                   **
**      INPUT: R10 POINT TO CPPL                                     **
**                                                                   **
**      OUTPUT: R15 INDICATE RETURN CODE                             **
**                                                                   **
***********************************************************************
         SPACE 2
PARS    #ENTRY
         MVC   PPLUPT(4),CPPLUPT   COPY A(UPT)
         MVC   PPLECT(4),CPPLECT   COPY A(ECT)
         MVC   PPLCBUF(4),CPPLCBUF COPY A(CBUF)
         SPACE 3
*----------------------------------------------------------------------
*        CALL IKJPARS
*----------------------------------------------------------------------
         SPACE ,
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         SPACE ,
         LTR   R15,R15            return code was zero?            MS02
         BZ    PARPDL              yes: get answer                 MS02
         SPACE ,
         CVD   R15,PA#DB          convert to decimal               MS02
         UNPK  MSG11A,PA#DB+6(2)  convert to ebcdic                MS02
         OI    MSG11A+3,X'F0'     Set sign in last char            MS02
         SPACE ,
        #MSG   MSG11              send message to user             MS02
         B     PAREND             return to caller                 MS02
         SPACE 2
PARPDL   L     R7,PDLPTR           GET ANSWER                      MS02
         USING CONCPDL,R7
         SPACE 3
*----------------------------------------------------------------------
*        EXTRACT TODD NAME
*----------------------------------------------------------------------
         TM    TODD3+6,PRESENT     TODD ?
         BNO   PARS0400            NO...
         OI    SWITCH,TODDSW       YES
         LH    R3,TODD3+4          LENGTH OF TODD DDNAME
         BCTR  R3,0                LENGTH - 1
         L     R5,TODD3            TODDNAME POINTER
         LA    R4,TODDNAME
         EX    R3,PARMOVE
PARMOVE  MVC   0(*-*,R4),0(R5)      MOVE DDNAME ** EXECUTE **
         SPACE 3
*----------------------------------------------------------------------
*        EXTRACT DDNAME TO CONCATINATE
*----------------------------------------------------------------------
PARS0400 DS    0H
         TM    DDNA3+6,PRESENT     DDNAME ?
         BNO   PARS0500            NO...
         OI    SWITCH,DDNSW        YES
         LH    R3,DDNA3+4          LENGTH OF DDNAME TO CONCAT
         BCTR  R3,0                LENGTH - 1
         L     R5,DDNA3            DDNAME POINTER
         LA    R4,DDNAME
         EX    R3,PARMOVE
         SPACE 3
*----------------------------------------------------------------------
*        EXTRACT DSNAME TO CONCATENATE
*----------------------------------------------------------------------
PARS0500 DS    0H
         TM    DATA3+6,PRESENT     DSNAME ?
         BNO   PARS0600            NO...
         OI    SWITCH,DSNSW        YES
         LA    R4,DSNAME           RECEIVING AREA
         L     R2,DATA3            DSNAME POINTER
         BCTR  R2,0                BACK SPACE OF 1
         CLI   0(R2),X'7D'         DATASET BETWEEN QUOTES ??
         BE    PARS0550            YES...
         SPACE 2
         USING UPT,R2              USER PROFILE TABLE
         L     R2,PPLUPT           UPT POINTER
         XR    R3,R3               ZERO REG 3
         ICM   R3,B'0001',UPTPREFL LENGTH OF THE PREFIX
         BZ    PARS0550            ZERO, NO PREFIX
         BCTR  R3,0                LENGTH MINUS 1
         LA    R5,UPTPREFX         POINT TO THE PREFIX
* -- >
         CLI   0(5),C'>'           8-CHARACTER PREFIX?
         BNE   PARS0510            NO. REGULAR PROCESSING.
         LA    R5,UPT+X'21'        POINT TO 8-CHAR PREFIX
         XR    R3,R3               ZERO REG TO SHOW LENGTH
         ICM   R3,B'0001',UPT+X'29'  8-CHARACTER PREFIX LENGTH
         BZ    PARS0550            ZERO, PAS DE PREFIXE
         BCTR  R3,0                LENGTH MINUS 1
PARS0510 DS    0H
* -- >
         EX    R3,PARMOVE          MOVE THE PREFIX
         LA    R4,1(R3,R4)         POINTE AFTER THE PREFIX
         MVI   0(R4),C'.'          POINT
         LA    R4,1(,R4)           READY FOR THE REST
         DROP  R2
         SPACE 2
PARS0550 DS    0H
         LH    R3,DATA3+4          LENGTH OF DSNAME TO CONCAT
         BCTR  R3,0                LENGTH - 1
         L     R5,DATA3            DSNAME POINTER
         EX    R3,PARMOVE
         LOCATE PARSNAM            LOCATE THIS DATASET?
         LTR   R15,R15              WE FOUND IT?
         BZ    PARS0600              YES: CHECK FIRST PARAMETER
        #MSG   MSG06               SEND DATASET NOT CATALOGUED
         B     PAREND              END
         SPACE 3
*----------------------------------------------------------------------
*        VERIFY IF "FIRST" IS SPECIFIED
*----------------------------------------------------------------------
PARS0600 DS    0H
         CLC   FIRST,ZERO          FIRST ?
         BE    PARS0625            NO...
         OI    SWITCH,FIRSTSW      YES
         SPACE 3
*----------------------------------------------------------------------
*        VERIFY IF "DELETE" IS SPECIFIED
*----------------------------------------------------------------------
PARS0625 DS    0H
         CLC   DELETE,ZERO         DELETE ?
         BE    PARS0650            NO...
         OI    SWITCH,DELETSW      YES
         SPACE 3
*----------------------------------------------------------------------
*        VERIFY IF "NOPERM"  IS SPECIFIED
*----------------------------------------------------------------------
PARS0650 DS    0H
         CLC   PERMA,=H'2'         NOPERMANENT ?
         BNE   PARS0700            NO...
         OI    SWITCH,NOPERSW      YES
         SPACE 3
*----------------------------------------------------------------------
*        RELEASE IKJPARS WORK AREA
*----------------------------------------------------------------------
PARS0700 DS    0H
         SPACE ,
         IKJRLSA PDLPTR
         SPACE ,
*----------------------------------------------------------------------
*        VERIFY THE REQUIRED PARAMETERS
*----------------------------------------------------------------------
         SPACE ,
         TM    SWITCH,TODDSW       TODD KEYWORD SPECIFIED ?
         BO    PARS0750            YES...
        #MSG   MSG01               SEND MESSAGE TODDNAME REQUIRED
         B     PAREND              END
         SPACE 3
PARS0750 DS    0H
         SPACE ,
         TM    SWITCH,DELETSW      DELETE KEYWORD SPECIFIED?
         BO    PARRC0               YES: END OF PARSING
         SPACE ,
         TM    SWITCH,DDNSW+DSNSW  OTHER KEYWORDS ?
         BM    PARRC0              ONE OF THE TWO ?
         BZ    PARS0775            NONE...
         SPACE ,
        #MSG   MSG02               SEND MSG DSN AND DD ARE MUT. EXC.
         B     PAREND              END
         SPACE 3
PARS0775 DS    0H
         SPACE ,
        #MSG   MSG03               SEND DSN OR DDNAME PARM REQUIRED
         B     PAREND
PARRC0   SLR   R15,R15             INDICATE NORMAL RETURN CODE
         SPACE ,
PAREND  #RETURN RC=(R15)           RETURN TO CALLER
PARSNAM  CAMLST NAME,DSNAME,,PARSAREA
PARSAREA DS    0D
         DS    265C
         LTORG
         TITLE '-- ALLOC SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: ALLOC                                       **
**      PURPOSE: CREATE DYNALLOC PARMLIST AND CALL SVC 99            **
**                                                                   **
**      INPUT: NONE                                                  **
**                                                                   **
**      OUTPUT: R15 INDICATE RETURN CODE                             **
**                                                                   **
***********************************************************************
         SPACE 2
ALLOC   #ENTRY
         TM    SWITCH,DELETSW+FIRSTSW DELETE OR FIRST WAS SPECIFIED?
         BM    ALOC4000             YES: CALL DECONCAT PROCESS
         SPACE ,
         TM    SWITCH,DSNSW        DSNAME TO ALLOCATE ?
         BNO   ALOC1050            NO...
         SPACE ,
         LA    R1,TODDNAME         POINT TO DDNAME
        #CALL  TIOTS               CALL TIOT SCAN ROUTINE
         SPACE ,
         LTR   R15,R15             WE FOUND DDNAME IN TIOT?
         BZ    ALOC0050             YES: GENERATE DDNAME
         SPACE ,
         OI    SWITCH,ALOCFAIL     INDICATE FILE NOT ALLOCATED
         MVC   TXT11DD1,TODDNAME   MOVE DDNAME
         SPACE ,
ALOC0050 DS    0H
        #CALL  ADSN                DYNALLOC A DATASET
         LTR   R15,R15             RETURN CODE WAS ZERO?
         BNZ   ALOC5000            DYNALLOC ERROR ROUTINE
         SPACE ,
         TM    SWITCH,ALOCFAIL     CONCAT FAIL FIRST TIME?
         BO    ALLEND               YES: RETURN TO CALLER
         SPACE ,
         MVC   DDNAME,TXT11DD1     MOVE THE DDNAME
         SPACE ,
*----------------------------------------------------------------------
*        CONCATENATION OF 2 DDNAMES
*----------------------------------------------------------------------
ALOC1050 DS    0H
        #CALL  ADDN                DYNALLOC A DATASET
         LTR   R15,R15             RETURN CODE WAS ZERO?
         BNZ   ALOC5000             NO: SEND AN ERROR MESSAGE
         B     ALLEND              TERMINATE PROCESS
         EJECT
***********************************************************************
**                                                                   **
**       PARAMETERS FIRST AND DELETE                                 **
**       COPY AN ENTRY FROM TIOT                                     **
**       FREE THE DDNAME                                             **
**       AND REALLOCATION OF THIS DDNAME                             **
**                                                                   **
***********************************************************************
         SPACE 2
ALOC4000 DS    0H
         GETMAIN R,LV=L#TIOTA      OBTAIN WORKAREA
         LR    R2,R1               LOAD WORK AREA ADDRESS
         LA    R3,L#TIOTA          LOAD LENGTH OF GETMAIN
         SR    R4,R4               LOAD DUMMY SENDING FIELD
         SR    R5,R5               SET SENDING FIELD LEN=0 + PAD X'00'
         MVCL  R2,R4               CLEAR THE WORK AREA
         LR    R2,R1               RELOAD WORK AREA ADDRESS
         ST    R2,ALOCGM           KEEP GETMAIN ADDRESS
         LA    R6,L#TIOT
         SPACE ,
**===================================================================**
**       SEARCH DDNAME IN TIOT AND COPY IT                           **
**===================================================================**
         SPACE ,
         LA    R1,TODDNAME             SEARCH ARGUMENT FOR TIOTS
        #CALL  TIOTS                   CALL TIOT SCAN ROUTINE
         LTR   R15,R15                 ENTRY IS FOUND?
         BNZ   ALOC2100                NO: INDICATE AN ERROR
         SPACE ,                                                   SJ01
         LA    R1,TODDNAME             SEARCH ARGUMENT FOR RJFCB   SJ01
         LA    R3,DSNAME               SEARCH ARGUMENT FOR RJFCB   SJ01
         TM    SWITCH,FIRSTSW          CONCAT WITH 'FIRST'?        SJ01
         BNO   ALOCPJFC                NO: EXTRACT DSN FROM JFCB   SJ01
         MVC   0(L'DSNAME,R2),DSNAME   MOVE DSN FOR FIRST ENTRY    SJ01
         LA    R2,52(,R2)              POINT NEXT ENTRY IN TABLE   SJ01
ALOCPJFC DS    0H                                                  SJ01
        #CALL  RJFCB                   GO TO READ JFCBS            SJ01
         LTR   R15,R15                 ok ?                        SJ01
         BNZ   ALOC5005                no, msg and abend           SJ01
         SPACE 2
**===================================================================**
**       FREE  THE DDNAME ALLOCATED TO TODDNAME                      **
**===================================================================**
         SPACE ,
ALOCGET  DS    0H
        #CALL  UNALOC              FREE THE DDNAME IN TODDNAME
         LTR   R15,R15             RETURN CODE WAS ZERO?
         BNZ   ALOC5000             NO: SEND AN ERROR MESSAGE
         SPACE 2
**===================================================================**
**       REALLOCATION OF EACH DATASET AND KEEP THE DDNAME (SYS...)   **
**===================================================================**
         SPACE ,
         L     R2,ALOCGM           POINT TO DSN TABLE
         MVC   TXT11DD1,TODDNAME   ASK DYNALLOC WITH TODDNAME
         SPACE ,
ALOCNTBL CLI   0(R2),X'00'          END OF TABLE?
         BE    ALOCIETB              YES: CONCAT ALL DD
         SPACE ,
         MVC   DSNAME,0(R2)        PREPARE DSN FOR DYNALLOC
        #CALL  ADSN                CALL DYNALLOC
         LTR   R15,R15             RETURN CODE WAS ZERO?
         BNZ   ALOC5000             NO: INDICATE AN ERROR
         SPACE ,
         MVC   44(8,R2),TXT11DD1   KEEP DDNAME
ALOCIDDN MVC   TXT11DD1,BLANKS     ASK TO SVC99 A DDNAME
         LA    R2,52(,R2)          POINT TO NEXT ENTRY IN TABLE
         B     ALOCNTBL            AND CONTINUE PROCESS
         SPACE 2
**===================================================================**
**       CONCAT ALL DDNAMES SYS..... TO TODDNAME                     **
**===================================================================**
         SPACE ,
ALOCIETB L     R2,ALOCGM           POINT TO DSN TABLE
         SPACE ,
ALOCIETL LA    R2,52(,R2)          POINT TO NEXT ENTRY
         CLI   0(R2),X'00'         END OF TABLE?
         BE    ALLEDEL              TERMINATE PROCESS
         SPACE ,
         MVC   DDNAME,44(R2)       INIT TO DDNAME
        #CALL  ADDN                CONCAT 2 DDNAME
         LTR   R15,R15             RETURN CODE WAS ZERO?
         BNZ   ALOC5000             NO: INDICATE AN ERROR
         B     ALOCIETL            NEXT DDNAME
         SPACE ,
ALLEDEL  L     R2,ALOCGM           POINT TO DSN TABLE
         FREEMAIN R,A=(R2),LV=L#TIOTA AND FREE IT
         B     ALLEND              RETURN TO CALLER
ALOC2100 DS    0H
        #MSG   MSG09               SEND ERROR IN TIOT
         B     ALLEND              END
ALOC5000 DS    0H
        #CALL  DYNMSG              SEND THE ERROR MESSAGE
         SPACE ,
ALLEND  #RETURN RC=(R15)           RETURN TO CALLER
         LTORG
L#TIOTA  EQU   ((L#TIOT+1)*52)     LENGTH WORKAREA 32+END OF TABLE
L#TIOT   EQU   64                  NUMBER OF DATASETS
ALOCGM   DS    F                   ADDRESS OF GETMAIN
         TITLE '-- ADSN DYNALLOC DATASET SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: ADSN                                        **
**      PURPOSE: DYNALLOC A DATASET                                  **
**                                                                   **
**      INPUT: TXTPTRS1                                              **
**             IF TXTDD1 (DDNAME = BLANK CHANGE DALDDN->DALRTDDN)    **
**                                                                   **
**      OUTPUT: R15 RETURN CODE OF DYNALLOC                          **
**                                                                   **
***********************************************************************
         SPACE 2
ADSN    #ENTRY
         SPACE ,
ADSILEN  MVI   TXT11+5,8          SET LENGTH OF DDNAME TO 8
         MVI   TXT11+1,DALDDNAM   SVC99 DEFAULT
         CLI   TXT11DD1,C' '      WE HAVE A DDNAME?
         BNE   ADSDSN              NO: INIT DSN VALUE
         MVI   TXT11+1,DALRTDDN   SVC99 RETURN DDNAME
ADSDSN   MVC   TXT12+6(44),DSNAME DSNAME TO ALLOCATE
         MVI   RQBVERB,S99VRBAL   DSN ALLOCATION VERB
         MVI   RQBFLG1,S99NOCNV   DO NOT USE EXISTING ALLOCATION   JP01
         LA    R1,TXTPTRS1        POINT TO ALLOC SERVICE AND
         ST    R1,RQBTXTP          INDICATE IT IN DYNALLOC PARMLIST
         LA    R1,ALLOCPRM        POINT TO DYNALLOC PARMLIST
         DYNALLOC                 CALL DYNALLOC SERVICE
         SPACE ,
         LTR   R15,R15            RETURN CODE OF DYNALLOC = ZERO?
         BNZ   ADSNRET             NO: RETURN TO CALLER
         SPACE ,
         CLC   =C'SYS',TXT11DD1 TEMPORARY DDNAME?
         BE    ADSNRET             YES: RETURN TO CALLER
         CLC   TXT11DD1,TODDNAME  DYNALLOC ON DDNAME?
         BE    ADSNRET             YES:RETURN TO CALLER
         SPACE ,
         CLI   ASDTIMD,X'00'      ALREADY ALLOCATED ON XHHMMSS?
         BE    ADSNRET             YES:RETURN TO CALLER
         SPACE ,
         TIME  DEC                OBTAIN CURRENT TIME
         ST    R0,ASDTIMD         KEEP HHMMSST
         OI    ASDTIMD+3,X'0F'    CONVERT IT
         UNPK  TXT11+7(7),ASDTIMD GENERATE NEW DDNAME
         B     ADSILEN            AND RETRY
         SPACE ,
ADSNRET #RETURN RC=(R15)
         LTORG
ASDTIMD  DC    F'0'
         TITLE '-- ADDN DYNALLOC CONCAT SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: ADDN                                        **
**      PURPOSE: DYNALLOC A DDNAME TO AN DDNAME                      **
**                                                                   **
**      INPUT: DDNAME                                                **
**             TODDNAME                                              **
**                                                                   **
**      OUTPUT: R15 RETURN CODE OF DYNALLOC                          **
**                                                                   **
***********************************************************************
         SPACE 2
ADDN    #ENTRY
         MVC   TXT21DD1,TODDNAME   MOVE TODDNAME
         MVC   TXT21DD2,DDNAME     MOVE FILENAME
         SPACE ,
         MVI   RQBVERB,S99VRBCC    CONCAT   VERB
         TM    SWITCH,NOPERSW      PERMANENT CONCAT ?
         BNO   ALOC1150            YES...
         SPACE 2
ALOC1150 DS    0H
         LA    R1,TXTPTRS2         POINT TO ALLOC SERVICE AND
         ST    R1,RQBTXTP           INDICATE IT IN DYNALLOC PARMLIST
         LA    R1,ALLOCPRM         POINT TO DYNALLOC PARMLIST
         DYNALLOC                  CALL DYNALLOC SERVICE
        #RETURN RC=(R15)           RETURN TO CALLER
         SPACE ,
         LTORG
         TITLE '-- UNALOC SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: UNALOC                                      **
**      PURPOSE: DYNALLOC A DDNAME                                   **
**                                                                   **
**      INPUT: TODDNAME                                              **
**                                                                   **
**      OUTPUT: R15 RETURN CODE OF FREE COMMAND                      **
**                                                                   **
***********************************************************************
         SPACE 2
UNALOC  #ENTRY
         MVC   UNDDN,TODDNAME      MOVE DDNAME
         MVC   CPPLCBUF,=A(UNFREE) MOVE ADDRESS OF COMMAND IN CPPL
         LR    R1,R10              R1 POINT TO CPPL
         LINK  EP=FREE             CALL FREE COMMAND
        #RETURN RC=(R15)           RETURN TO CALLER
         SPACE ,
         LTORG
UNFREE   DC    AL2(L#FREE)         LENGTH OF CPPL
         DC    AL2(4)              LENGTH OF COMMAND
         DC    C'FREE'             NAME OF CPPL
         DC    C' DDNAME('         DDNAME PARAMETER
UNDDN    DC    CL8' '              DDNAME TO FREE
         DC    C')'                END OF PARMLIST
L#FREE   EQU   *-UNFREE            LENGTH OF CPPL
         TITLE '-- DYNALLOC ERROR SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: DYNMSG                                      **
**      PURPOSE: ANALYSE THE ERROR CODE AND SEND AN ERROR MESSAGE    **
**                                                                   **
**      INPUT: RQBERCD                                               **
**                                                                   **
**      OUTPUT: NONE                                                 **
**                                                                   **
***********************************************************************
         SPACE 2
DYNMSG  #ENTRY
         SPACE ,
         CLC   DYNDDN,RQBERCD      DDNAME NOT FOUND ?
         BNE   ALOC5010            NO...
ALOC5005 DS    0H
        #MSG   MSG05               SEND DDNAME NOT ALLOCATED
         B     DYNMRET             END
         SPACE 2
ALOC5010 DS    0H
         CLC   DYNDSN,RQBERCD      DSNAME NOT FOUND ?
         BNE   ALOC5020            NO...
        #MSG   MSG06               SEND DATASET NOT CATALOGUED
         B     DYNMRET             END
         SPACE 2
ALOC5020 DS    0H
         CLC   DYNDSNI,RQBERCD     DSNAME INVALID  ?
         BNE   ALOC5030            NO...
        #MSG   MSG07               SEND INVALID DATASET
         B     DYNMRET             END
         SPACE 2
ALOC5030 DS    0H
         CLC   DYNDDNO,RQBERCD     DDNAME OPEN ?
         BNE   ALOC5040            NO...
        #MSG   MSG08               SEND DATASET IS OPEN
         B     DYNMRET             END
         SPACE 2
ALOC5040 DS    0H
         XR    R2,R2               HEX CHARACTER NOT CONVERTED
         ICM   R3,B'1111',RQBERCD  ERROR CODE
         LA    R4,HEXTAB           TABLE OF HEX CONVERSION
         XR    R5,R5               HEX CHARACTER CONVERTED
         LA    R6,4                LOOP COUNTER
         SPACE ,
ALOC5050 DS    0H
         SLDL  R2,4                GET A NUMBER
         SLL   R5,8                FAIT DE LA PLACE POUR LE PROCHAIN
         IC    R5,0(R2,R4)         CARACTERE HEX
         SRL   R2,4                CLEAN R2
         BCT   R6,ALOC5050         LOOP
         STCM  R5,B'1111',MSG04A   SAVE THE REASON CODE
         SPACE 3
         XR    R5,R5               CARACTERE HEX CONVERTI
         LA    R6,4                LOOP COUNTER
         SPACE ,
ALOC5100 DS    0H
         SLDL  R2,4                GET A NUMBER
         SLL   R5,8                FAIT DE LA PLACE POUR LE PROCHAIN
         IC    R5,0(R2,R4)         CARACTERE HEX
         SRL   R2,4                CLEAN R2
         BCT   R6,ALOC5100         LOOP
         STCM  R5,B'1111',MSG04B   SAVE THE REASON CODE
        #MSG   MSG04               SEND DYNALLOC ERROR
         B     DYNMRET             END
         SPACE ,
DYNMRET  SLR   R15,R15            INDICATE NORMAL RETURN CODE
        #RETURN RC=(R15)          AND RETURN TO CALLER
         TITLE '-- MSG SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: MSG                                         **
**      PURPOSE: SEND AN ERROR WITH A PUTLINE                        **
**                                                                   **
**      INPUT: R1 ADDRESS OF MESSAGE                                 **
**                                                                   **
**      OUTPUT: R15 INDICATE AN ERROR                                **
**                                                                   **
***********************************************************************
         SPACE 2
MSG     #ENTRY
         ST    R1,MSGAD            KEEP MSG ADDRESS
         XC    ECB1,ECB1           CLEAR ECB
         L     R3,PPLUPT           POINT TO UPT
         L     R4,PPLECT           POINT TO ECT
         SPACE ,
         PUTLINE PARM=MSGPLIN,UPT=(R3),ECT=(R4),ECB=ECB1,              X
               OUTPUT=MSGOLD,MF=(E,MSGIOPL)
         SPACE ,
         LA    R15,12              INDICATE AN ERROR
        #RETURN RC=(R15)           RETURN TO CALLER
         SPACE ,
MSGOLD   DC    F'1'
MSGAD    DC    A(*)
MSGIOPL  DC    4F'0'
MSGPLIN  PUTLINE MF=L
         TITLE '-- TIOT SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE: TIOT                                        **
**      PURPOSE: SCAN THE TIOT FOR A SPECIFIC DDNAME                 **
**                                                                   **
**      INPUT:  R1 => ADDRESS OF DDNAME TO SEARCH                    **
**                                                                   **
**      OUTPUT: R15 => RETURN CODE                                   **
**            : R1  => ADDRESS OF DDNAME IN TIOT IF RC=0             **
**                                                                   **
***********************************************************************
         SPACE 2
TIOTS   #ENTRY
         MVC   TIOTDD,0(R1)       COPY DDNAME
         EXTRACT TIOTADDR,'S',FIELDS=(TIOT)  ADDRESS OF TIOT
         SR    R3,R3              CLEAR FOR INSERT
         SR    R15,R15            DEFAULT NORMAL RETURN CODE
         L     R2,TIOTADDR        POINT TO TIOT
         SPACE 2
TIOT2010 IC    R3,24(,R2)         LENGTH OF THE ENTRY
         LTR   R3,R3              END OF TIOT ?
         BZ    TIOT6100           YES, ERROR
         CLC   TIOTDD,28(R2)      DDNAME = FILENAME ?
         BE    TIOT2020           YES
         AR    R2,R3              FOLLOWING DDNAME
         B     TIOT2010           NEXT ENTRY
         SPACE ,
TIOT2020 LR    R1,R2              KEEP ADDRESS IN PARM'S
         B     TIOTRET            RETURN TO CALLER
         SPACE ,
TIOT6100 LA    R15,4              INDICATE ENTRY NOT FOUND
TIOTRET #RETURN RC=(R15)          AND RETURN TO CALLER
TIOTADDR DS    F                  TIOT ADDRESS
TIOTDD   DC    CL8' '             TIOT DDNAME
         LTORG *
         TITLE '-- READ JFCB SERVICE ROUTINE --'
***********************************************************************
**                                                                   **
**      SERVICE ROUTINE --> RJFCB                                    **
**      PURPOSE ----------> READ THE JFCBS FOR ALL DATA SETS         **
**                          ALLOCATED TO A DDNAME.                   **
**                                                                   **
**      INPUT  :  R1 POINT TO A DDNAME                               **
**                R2 POINT TO A DSNAME TABLE                         **
**                R3 POINT TO A DSNAME NOT TO INCLUDE IN TABLE       **
**                                                                   **
**      OUTPUT :  R15 INDICATE RETURN CODE                           **
**                 0  = EVERYTHING IS OK (ALL DSNAMES IN A TABLE)    **
**                255 = INFORMATION NOT AVAILABLE                    **
**                                                                   **
**      PGMR   :  SERGE JOLICOEUR  -ALIAS-  SERJOL                   **
**      DATE   :  1999-10-29                                         **
**      MODID  :  SJ01   (new service routine)                       **
**                                                                   **
***********************************************************************
         SPACE 2
         CNOP  0,8
RJFCB   #ENTRY ,
         LA    R4,INDCB
         USING IHADCB,R4
         MVC   DCBDDNAM,0(R1)            MOVE DDNAME IN DCB
*
         XC    ARLSTRT(LENARL),ARLSTRT   CLEAR ALLOC RETRIEV LIST
         MVC   ARLLEN,=AL2(LENARL)       LENGTH OF THIS AREA
         MVC   ARLIDENT,=C'AR'           IDENTIFICATION OF AREA
*
*---------------------------------------------------------------------*
*   READ ALL JFCBS ASSOCIATED TO A DDNAME                             *
*---------------------------------------------------------------------*
         RDJFCB (INDCB,INPUT)
*
         LTR   R15,R15             TEST RDJFCB RETURN CODE
         BNZ   RJFCB030            BRANCH IF INFORMATION NOT AVAILABLE
         CLI   ARLRCODE,ARLALLOK   TEST RDJFCB REASON CODE
         BNE   RJFCB030            BRANCH IF INFORMATION NOT AVAILABLE
         ICM   R5,B'1111',ARLAREA  GET AND TEST ADDRESS OF ARL
         BZ    RJFCB030            GO IF SYSTEM DOES NOT SUPPORT ARL
         USING ARA,R5              ALLOCATION RETRIEVAL AREA
         LH    R6,ARLRTRVD         # OF CONCATENATED DATA SETS
*
*---------------------------------------------------------------------*
*   EXTRACT DSNAMES FROM JFCBS                                        *
*---------------------------------------------------------------------*
RJFCB010 DS    0H
         LA    R7,ARAJFCB
         USING JFCB,R7
         CLC   0(L'JFCBDSNM,R3),JFCBDSNM      DSN NOT INCLUDED
         BE    RJFCB020
         MVC   0(L'JFCBDSNM,R2),JFCBDSNM      DSNAME IN TABLE
         LA    R2,L'JFCBDSNM+L'DCBDDNAM(,R2)  NEXT ENTRY
RJFCB020 DS    0H
         LH    R15,ARALEN          LENGTH OF THE ARA FOR THIS JFCB
         LA    R5,0(R15,R5)        TO THE NEXT ARA
         BCT   R6,RJFCB010
*
*---------------------------------------------------------------------*
*   FREE THE ALLOCATION RETRIEVAL AREA                                *
*---------------------------------------------------------------------*
         SR    R0,R0
         ICM   R0,B'0111',ARLRLEN  LENGTH OF ALLOCATION RETRIEVAL AREA
         L     R1,ARLAREA          ADDRESS OF ALLOCATION RETRIEVAL AREA
         SR    R15,R15             SUBPOOL TO PASS TO FREEMAIN FOR
         IC    R15,ARLPOOL         ALLOCATION RETRIEVAL AREA.
         FREEMAIN RU,LV=(0),SP=(15),A=(1)
*
         SR    R15,R15        RETURN CODE = 0
         B     RJFCB040
*
RJFCB030 DS    0H             ROUTINE TO HANDLE INABILITY TO GET THE
         LA    R15,255        RETURN CODE = 255
*
*---------------------------------------------------------------------*
*   RETURN TO CALLER                                                  *
*---------------------------------------------------------------------*
RJFCB040 DS    0H
        #RETURN RC=(R15)
*
         LTORG *
         SPACE 4
*---------------------------------------------------------------------*
*   1  - DCB                                                          *
*   2A - LAST ENTRY INDICATOR                                         *
*   2B - ENTRY CODE TO RETRIEVE ALLOCATION INFORMATION                *
*   2C - ADDR OF ALLOCATION RETRIEVAL LIST                            *
*   3  - ALLOCATION RETRIEVAL LIST                                    *
*---------------------------------------------------------------------*
INDCB    DCB   DSORG=PO,DDNAME=$$$$$$$$,MACRF=R,EXLST=INEXLST
INEXLST  DC    0F'0',A(X'80000000'+X'13000000'+ARLSTRT)
ARLSTRT  IHAARL DSECT=NO
LENARL   EQU    *-ARLSTRT         LENGTH OF IHAARL
*---------------------------------------------------------------------*
*        END OF MODID SJ01                                            *
*---------------------------------------------------------------------*
         TITLE '-- GLOBAL WORK AREA'
         SPACE 2
        #GBLWKA
PA#DB    DS    D'0'
BLANKS   DC    CL80' '
ZERO     DC    D'0'
DSNAME   DC    CL44' '
TODDNAME DC    CL8' '
DDNAME   DC    CL8' '
ASDTIMDM DC    F'0'
HEXTAB   DC    C'0123456789ABCDEF'
DYNDDN   DC    XL2'0438'
DYNDSN   DC    XL2'1708'
DYNDSNI  DC    XL2'035C'
DYNDDNO  DC    XL2'0420'
         SPACE ,
SWITCH   DC    X'00'
PRESENT  EQU   X'80'
DELETSW  EQU   X'40'
NOPERSW  EQU   X'20'
FIRSTSW  EQU   X'10'
DSNSW    EQU   X'08'
DDNSW    EQU   X'04'
TODDSW   EQU   X'02'
ALOCFAIL EQU   X'01'
         SPACE ,
ECB1     DC    F'0'                ECB FOR IKJPARS
PPL      DS    0F                  PARSE PARM LIST
PPLUPT   DC    A(0)                PTR TO UPT
PPLECT   DC    A(0)                PTR TO ECT
PPLECB   DC    A(ECB1)             PTR TO ECB
PPLPCL   DC    A(CONCPCL)          PTR TO PCL
PPLANS   DC    A(PDLPTR)           PTR TO ANSWER PLACE
PPLCBUF  DC    A(0)                PTR TO COMMAND BUFFER
PPLUWA   DC    A(0)                PTR TO USER WORK AREA
PDLPTR   DC    A(0)                PTR TO AREA CREATED BY IKJPARS
         SPACE ,
ALLOCPRM DS    0D
         DC    AL1(128)
         DC    AL3(ALLOCBLK)
         SPACE ,
ALLOCBLK DS    0F
         DC    AL1(RQBLENG)        BLOCK LENGTH
RQBVERB  DC    AL1(0)              VERB
RQBFLG1  DC    AL2(0)              FLAG 1
RQBERCD  DC    AL2(0)              ERROR CODE
RQBINF   DC    AL2(0)              INFORMATION CODE
RQBTXTP  DC    A(0)                TEXT POINTERS ADDRESS
         DC    F'0'                RESERVED
RQBFLG2  DC    F'0'                FLAG 2
RQBLENG  EQU   *-ALLOCBLK
         SPACE 2
TXTPTRS1 DS    0F                  DSNAME ALLOC
         DC    A(TXT11)            POINTER TO DDNAME
         DC    A(TXT12)            POINTER TO DSNAME
         DC    A(TXT13)            POINTER TO DISP
         DC    AL1(128),AL3(TXT14) END+POINTER TO STATUS
         SPACE ,
TXT11    DC   AL2(DALDDNAM),AL2(1),AL2(8)
TXT11DD1 DC    CL8' '              DDNAME
TXT12    DC   AL2(DALDSNAM),AL2(1),AL2(44),CL44' '
TXT13    DC   AL2(DALNDISP),AL2(1),AL2(1),AL1(8)
TXT14    DC   AL2(DALSTATS),AL2(1),AL2(1),AL1(8)
         SPACE 3
TXTPTRS2 DS    0F
         DC    A(TXT21)            POINTER TO DDNAME
         DC    AL1(128),AL3(TXT22) END+POINTER TO TODDNAME
         SPACE ,
TXT21    DC    AL2(DCCDDNAM),AL2(2)
         DC    AL2(8)
TXT21DD1 DC    CL8' '              DDNAME
         DC    AL2(8)
TXT21DD2 DC    CL8' '              TODDNAME
         SPACE ,
TXT22    DC    AL2(DCCPERMC),AL2(0)
         SPACE 3
         TITLE '-- ERROR MESSAGES'
         SPACE 3
MSG01    DC    AL2(MSG02-MSG01)
         DC    X'0000'
         DC    C'CONCAT01 TODDNAME parameter required'
         SPACE 3
MSG02    DC    AL2(MSG03-MSG02)
         DC    X'0000'
         DC    C'CONCAT02 DSN and DD are mutually exclusive'
         SPACE 3
MSG03    DC    AL2(MSG04-MSG03)
         DC    X'0000'
         DC    C'CONCAT03 DSN or DD parameter required'
         SPACE 3
MSG04    DC    AL2(MSG05-MSG04)
         DC    X'0000'
         DC    C'CONCAT04 DYNALLOC error, REASON code = '
MSG04A   DS    CL4
         DC    C', INFO code = '
MSG04B   DS    CL4
         SPACE 3
MSG05    DC    AL2(MSG06-MSG05)
         DC    X'0000'
         DC    C'CONCAT05 DDNAME not allocated'
         SPACE 3
MSG06    DC    AL2(MSG07-MSG06)
         DC    X'0000'
         DC    C'CONCAT06 DATASET not catalogued'
         SPACE 3
MSG07    DC    AL2(MSG08-MSG07)
         DC    X'0000'
         DC    C'CONCAT07 Invalid DATASET name'
         SPACE 3
MSG08    DC    AL2(MSG09-MSG08)
         DC    X'0000'
         DC    C'CONCAT08 TODDNAME is open'
         SPACE 3
MSG09    DC    AL2(MSG10-MSG09)
         DC    X'0000'
         DC    C'CONCAT09 DDNAME not found in TIOT'
         SPACE 3
MSG10    DC    AL2(MSG11-MSG10)                                    MS02
         DC    X'0000'
         DC    C'CONCAT10 MAXIMUM OF DSNAME IS 32'
         SPACE 3
MSG11    DC    AL2(MSG12-MSG11)                                    MS02
         DC    X'0000'                                             MS02
         DC    C'CONCAT11 Parse service routine(IKJPARS), RC = '   MS02
MSG11A   DS    CL4                                                 MS02
MSG12    DS    0C
         TITLE '-- IKJPARS PARAMETERS'
CONCPCL  IKJPARM DSECT=CONCPDL
         SPACE 3
TODD1    IKJKEYWD
         IKJNAME 'TODDNAME',SUBFLD=TODD2
DDNA1    IKJKEYWD
         IKJNAME 'DDNAME',SUBFLD=DDNA2
DATA1    IKJKEYWD
         IKJNAME 'DSN',SUBFLD=DATA2
FIRST    IKJKEYWD
         IKJNAME 'FIRST'
DELETE   IKJKEYWD
         IKJNAME 'DELETE'
PERMA    IKJKEYWD DEFAULT='PERMANENT'
         IKJNAME 'PERMANENT'
         IKJNAME 'NOPERMANENT'
         SPACE 3
TODD2    IKJSUBF
TODD3    IKJIDENT 'TO DDNAME',                                         X
               FIRST=ALPHANUM,                                         X
               OTHER=ALPHANUM,                                         X
               MAXLNTH=8,                                              X
               PROMPT='TO DDNAME',                                     X
               HELP='WHICH DDNAME TO CONCATENATE TO'
         SPACE 3
DDNA2    IKJSUBF
DDNA3    IKJIDENT 'FILE NAME',                                         X
               FIRST=ALPHANUM,                                         X
               OTHER=ALPHANUM,                                         X
               MAXLNTH=8,                                              X
               PROMPT='FILE NAME',                                     X
               HELP='DDNAME TO CONCATENATE'
         SPACE 3
DATA2    IKJSUBF
DATA3    IKJIDENT 'DATASET NAME',                                      X
               FIRST=ALPHANUM,                                         X
               OTHER=ALPHANUM,                                         X
               CHAR,                                                   X
               MAXLNTH=44,                                             X
               PROMPT='DATASET NAME',                                  X
               HELP='FILE TO BE CONCATENATED'
         TITLE '-- SYSTEM DSECTS'
         PRINT GEN
         IKJENDP
         SPACE ,
        #REGS
         SPACE ,
         IEFZB4D0
         SPACE ,
         IEFZB4D2
         SPACE ,
*                                                                SJ01
ARA      DSECT ,            ALLOCATION RETRIEVAL AREA            SJ01
ARALEN   DS    XL2          LENGTH OF THE INFO FOR DATA SET      SJ01
ARARESV  DS    XL2          RESERVED                             SJ01
ARAJFCB  DS    CL(JFCBLGTH) JFCB                                 SJ01
ARAVAR   DS    0C           VARIABLE                             SJ01
*                                                                SJ01
JFCB     DSECT ,                                                 SJ01
         IEFJFCBN ,                                              SJ01
*                                                                SJ01
         DCBD  DSORG=PS,DEVD=DA                                  SJ01
*                                                                SJ01
        #MAPS  PSA,ASCB,CVT,TIOT,CPPL,UPT
         END   CONCAT
